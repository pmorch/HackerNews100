<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 21 Jun 2024 01:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Gilead Shot Prevents All HIV Cases in Trial of African Women (388 pts)]]></title>
            <link>https://www.bloomberg.com/news/articles/2024-06-20/gilead-shot-prevents-100-of-hiv-cases-in-trial-of-african-women</link>
            <guid>40742163</guid>
            <pubDate>Thu, 20 Jun 2024 19:12:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bloomberg.com/news/articles/2024-06-20/gilead-shot-prevents-100-of-hiv-cases-in-trial-of-african-women">https://www.bloomberg.com/news/articles/2024-06-20/gilead-shot-prevents-100-of-hiv-cases-in-trial-of-african-women</a>, See on <a href="https://news.ycombinator.com/item?id=40742163">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
    <section>
        <h3>Why did this happen?</h3>
        <p>Please make sure your browser supports JavaScript and cookies and that you are not
            blocking them from loading.
            For more information you can review our <a href="https://www.bloomberg.com/notices/tos">Terms of
                Service</a> and <a href="https://www.bloomberg.com/notices/tos">Cookie Policy</a>.</p>
    </section>
    <section>
        <h3>Need Help?</h3>
        <p>For inquiries related to this message please <a href="https://www.bloomberg.com/feedback">contact
            our support team</a> and provide the reference ID below.</p>
        <p>Block reference ID:</p>
    </section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[More Disabled Americans Are Employed, Thanks to Remote Work (334 pts)]]></title>
            <link>https://www.bloomberg.com/news/articles/2024-06-20/remote-work-helps-more-people-with-disabilities-get-employed</link>
            <guid>40742026</guid>
            <pubDate>Thu, 20 Jun 2024 19:00:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bloomberg.com/news/articles/2024-06-20/remote-work-helps-more-people-with-disabilities-get-employed">https://www.bloomberg.com/news/articles/2024-06-20/remote-work-helps-more-people-with-disabilities-get-employed</a>, See on <a href="https://news.ycombinator.com/item?id=40742026">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
    <section>
        <h3>Why did this happen?</h3>
        <p>Please make sure your browser supports JavaScript and cookies and that you are not
            blocking them from loading.
            For more information you can review our <a href="https://www.bloomberg.com/notices/tos">Terms of
                Service</a> and <a href="https://www.bloomberg.com/notices/tos">Cookie Policy</a>.</p>
    </section>
    <section>
        <h3>Need Help?</h3>
        <p>For inquiries related to this message please <a href="https://www.bloomberg.com/feedback">contact
            our support team</a> and provide the reference ID below.</p>
        <p>Block reference ID:</p>
    </section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Fuzz Map (140 pts)]]></title>
            <link>https://www.fuzzmap.io/</link>
            <guid>40742014</guid>
            <pubDate>Thu, 20 Jun 2024 18:59:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.fuzzmap.io/">https://www.fuzzmap.io/</a>, See on <a href="https://news.ycombinator.com/item?id=40742014">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="welcome-modal-text">
          
          <p>
            <em>Fuzz Map</em> is a fuzzer for GUIs that automatically identifies states using code
            coverage and builds a visual map. Ideally, the map is useful even to people who'd prefer
            not to read code.
          </p>
          <p>
            Behind this window is a interactive local demo.
            Hide this introduction then click
            <span>
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <title>fuzz</title>
                <path d="M9 9a2 2 0 114 0 2 2 0 01-4 0z"></path>
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a4 4 0 00-3.446 6.032l-2.261 2.26a1 1 0 101.414 1.415l2.261-2.261A4 4 0 1011 5z" clip-rule="evenodd"></path>
              </svg>
              Fuzz</span>
            to start fuzzing. To show this introduction again, click the
            <span>
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <title>information</title>
                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
              </svg>
              Information</span>
            button.
          </p>
          <p>
            Here's a 5-second video of real-time fuzzing on my laptop. Every state or arrow in the
            map corresponds to one or more codepaths discovered by the fuzzer:
          </p>
          
          <p>
            The <em>sandbox</em> renders the React code in the <em>editor</em> (specifically, it
            renders <code>&lt;App /&gt;</code>). Click
            <span>
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <title>compile</title>
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"></path>
              </svg>
              Compile</span>
            to update the sandbox, and click the
            <span>
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <title>refresh</title>
                <path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z" clip-rule="evenodd"></path>
              </svg>
              Reset</span>
            button to reset it. The map supports pan and zoom.
          </p>

          <!--
          <p>Keep reading for more information. But first:</p>

          <div id="call-to-action">
            <p>
              If you could use an industrial-strength version of Fuzz Map for your project, please
              send me an email at
              <a href="mailto:human@fuzzmap.io">human@fuzzmap.io</a>! I'm looking for pilot
              customers.
            </p>
            <p>
              In the short term, I'd like to make a plug-and-play version of Fuzz Map that supports
              end-to-end React fuzzing. You <em>won't</em> have to change your build process or use
              a special browser&mdash;just run <code>./fuzzmap localhost:8080 -p 9090</code> and
              start fuzzing or live programming! A reverse proxy will add instrumentation on the
              fly.
            </p>
            <p>
              Depending on feedback, a future version of Fuzz Map might also run in CI when a pull
              request is opened, or support sharing links to annotated maps.
            </p>
            <p>
              I'm also considering porting Fuzz Map to a platform other than React, e.g. iOS or Ruby
              on Rails. As I'll discuss later in the technical writeup, the instrumentation is
              mostly platform-independent.
            </p>
            <div>
              If you'd like to be notified when a beta release of Fuzz Map becomes generally
              available, you can use this form:
              <form name="waitlist" method="POST" data-netlify="true" netlify-honeypot="other">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" required />
                <label for="role">Role</label>
                <input type="text" id="role" name="role" placeholder="(optional)" />
                <p class="invisible">
                  <label>Don't fill this out if you're human: <input name="other" /></label>
                </p>
                <button type="submit">Notify me!</button>
              </form>
            </div>
          </div>
          -->

          <p>
            The beginning of this writeup will focus on features. If, instead, you're primarily
            interested in how Fuzz Map works, you can skip ahead to the part about
            <a href="#how-it-works">how it works</a>. There's some fun trivia, e.g. why
            <code>a &amp;&amp; b</code> <em>can't</em> be transformed into
            <code>(a &amp;&amp; (h1, true)) || (h2, b)</code>.
          </p>

          <p>
            By the way, everything in this research prototype runs in your browser. No data is
            uploaded to a server.
          </p>

          <h2>Live programming</h2>
          <p>
            Fuzzing an application might reveal an unexpected state or crash in the map. After
            updating the application's code, you can fuzz the application a second time. Checking
            the new map helps to verify that the effects of the change are what you expected.
          </p>
          <p>
            In Fuzz Map, fuzzing the second time normally goes much faster than it did the first
            time around. This is because inputs are saved for reuse after recompiling. Inputs are
            typically reusable without manual annotation because Fuzz Map uses the event handler's
            inline declaration to identify it. For example, if you make a button with an
            <code>onClick</code> event handler:
          </p>
          <pre>function App(...) {
  const handleClick = ...;
  return &lt;button onClick={handleClick} /&gt;;
}</pre>
          <p>
            then the event handler will be identified using the text <code>"handleClick"</code>.
            This means that even if the <em>definition</em> of <code>handleClick</code> is changed,
            click events will still be reusable. If necessary, you can disambiguate further by
            defining the <code>data-fuzzmap-key</code> HTML attribute.
          </p>
          <h2>Errors</h2>
          <p>
            Errors can occur while rendering a state or while handling an event. Fuzz Map detects
            errors and displays them in the map.
          </p>
          <p>
            Here's a potential bug in the Checkout example. Suppose an order contains zero items.
            The code for computing the order subtotal has a
            <code>reduce</code> call:
          </p>
          <pre>const subtotal = sortedItems
  .map(([_code, item]) =&gt; item.quantity * item.price)
  .reduce((a, b) =&gt; a + b, 0);</pre>
          <p>
            If the second argument to <code>reduce</code> is forgotten, then removing all of the
            items from the order by decreasing their quantities to zero results in the following
            map:
          </p>
          <p><img width="1648" height="728" src="https://jyc-static.com/a8ae38d4673b62a50982cb85907ed112fc3f43ae35362eff1499ece5bb591826"></p><p>
            Errors can also occur in event handlers. Inserting an error into
            <code>onClickContinue</code> results in this map:
          </p>
          <p><img width="1581" height="1735" src="https://jyc-static.com/da5984075f7237f332b0f71504bd0d473137e10237cb9f3c6d7e136f9b8c07a7">
          </p>
          <p>Hover over the error icon to reveal the error:</p>
          <p><img width="1122" height="1348" src="https://jyc-static.com/0e0ac2fcc00e4c7220878b974893f3875dd87018bca28416e3bb00a821ac0acf">
          </p>

          <h2>Before/After</h2>
          <p>
            A single event handler can have many different cases, each corresponding to a distinct
            codepath. Fuzz Map lists out the cases for an input in the Before/After view.
          </p>
          <p>
            Suppose we use the following modified code to handle changes to item quantities in
            <code>onChangeQuantity</code>:
          </p>
          <pre>const quantity = e.target.valueAsNumber;
const items = new Map(oldItems);
if (quantity === 0) {
  items.delete(code);
} else {
  const item = items.get(code);
  items.set(code, { ...item, quantity });
}
return items;</pre>
          <p>
            After fuzzing, there will be an arrow from the initial state to the initial state with a
            name like “change 'House Wine'” or “change 'Double-Shot
            Espresso'”. The name could be different because changing the quantity of any item
            is handled by the same code.
          </p>
          <p><img width="1209" height="1322" src="https://jyc-static.com/93722005dafcd9e57c2acc0a488370dc564d431cbafdb81ea8bfcc3c7a05424e">
          </p>
          <p>
            Click on the label to switch to the Before/After view, which lists the different cases
            for changing an item quantity.
          </p>
          <p><img width="1712" height="2115" src="https://jyc-static.com/e3484a93b59571159498cf4c3d2d7df24f1e54e4ec0f1bfe9fe8bb27da73401f"></p><p>
            The modified code doesn't properly handle “Case 2. change 'House Wine' to
            ''”. When the item's quantity is changed to the empty string,
            <code>e.target.valueAsNumber</code> evaluates to <code>NaN</code>, and the subtotal
            calculation goes wrong.
          </p>
          <p>
            Click
            <span>
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <title>Show code</title>
                <path fill-rule="evenodd" d="M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path>
              </svg>
              Show code</span>
            to highlight the event handler's declaration:
          </p>
          <p><img width="1570" height="1502" src="https://jyc-static.com/572fd9bed037944c5788bba8b130196f74ec3e1463f82049e60761ad1f60d312">
          </p>
          <p>
            A future version of Fuzz Map could use the information it already has to highlight the
            lines of code that executed for each case. You could select two cases to reveal which
            branches executed differently. This could be used to debug unexpected states.
          </p>

          <h2><a id="how-it-works">How it works</a></h2>
          <p>
            The main idea behind Fuzz Map is to distinguish between GUI states using code coverage
            and to render these states as a simplified map. Coverage-guided fuzzing has been applied
            with great success for more than a decade. A complete survey is beyond the scope of this
            writeup; see
            <a href="https://arxiv.org/abs/1812.00140">Manes et al. (2018)</a> for an overview,
            including a fuzzer genealogy.
          </p>
          <p>
            A visual map is especially useful for GUI development, where bugs are often obvious to
            humans but difficult for computers to check. It's almost certainly a bug if a program
            crashes or reads memory it shouldn't. But what if a button sends the user to the wrong
            screen, or the interface just looks strange under unexpected circumstances? People
            already use whiteboards or prototyping software to explain an application's behavior to
            themselves, or to review it with colleagues. Fuzz Map tries to create the same kind of
            map automatically.
          </p>

          <h2>The state graph</h2>
          <p>
            While Fuzz Map fuzzes, it builds a <em>state graph</em>. Each node in the graph
            represents an application state. Each edge represents an input processed by an event
            handler. Every state and event is identified by a <em>hit vector</em> which describes
            the branches that executed while the application rendered or handled the event. The
            following program contains two branches:
          </p>
          <pre>const name = ...;
if (name !== null) {
  return `Hello, ${name}!`;
} else {
  throw new Error("TODO");
}</pre>
          <p>
            If the program runs one time and <code>name</code> is not null, then the hit vector will
            be \( (1, 0) \). If the program runs two times, and both times <code>name</code> is
            null, then the hit vector will be \( (0, 2) \).
          </p>
          <p>
            A hit vector is a coarse representation of an application state: many different states
            can correspond to the same hit vector. This simplification is typically useful for Fuzz
            Map. The actual program being fuzzed (approximately a Turing machine) is always much
            more complicated than the map that Fuzz Map displays (approximately a finite automaton).
            Note that this simplification means that it's possible, albeit unlikely, to have two
            different states with the same hit vector where only one exhibits a bug.
          </p>
          <p>
            Bugs in an application generally correspond to untested codepaths or interactions
            between codepaths. Two states that execute very different code might render the same
            HTML. But if a program executes the same code when rendering two screens, then any bug
            in the code will generally occur in both cases. Because Fuzz Map uses hit vectors to
            identify states, it will only show two states in the map for the previous example: one
            where
            <code>name</code> is non-null, and another where <code>name</code> is null.
          </p>

          <h2>Random fuzzing</h2>
          <p>
            The state graph helps Fuzz Map to explore states efficiently. The graph keeps track of
            the states the fuzzer has seen and the shortest paths between them. Instead of building
            a graph, Fuzz Map could randomly generate long sequences of inputs. This is surprisingly
            inefficient. Efficiency is especially important for fuzzing GUIs, which process inputs
            much more slowly than typical fuzzer targets like parsers or protocols.
          </p>
          <p>
            To illustrate how random fuzzing can be inefficient, consider an application with a
            sequence of screens, e.g. for checking out items from an online store. In screen \( 1
            \), colored blue, you can only go to the next state, and in screens \( 2 \) through \( n
            - 1 \) you can go to either the previous or next screen.
          </p>
          <p><img width="844" height="120" src="https://jyc-static.com/f32cdc0b6d8f4045de8e2a9ef36292f9d79a20975f8288c3e2b7b547e660d922">
          </p>
          <p>
            How long will it take a random fuzzer to find the final screen \( n \), colored orange?
            If this is the
            <a href="https://en.wikipedia.org/wiki/Coupon_collector%27s_problem">coupon collector's problem</a>, we'd expect it to take around \( n \log n \) inputs. But because each screen can only
            be accessed through its adjacent screens, this is actually an instance of the
            <a href="https://en.wikipedia.org/wiki/Gambler%27s_ruin">gambler's ruin</a> problem. It
            will take random fuzzing around \( n^2 \) inputs to find the final orange screen! And
            the structure of a real GUI is normally even worse for fuzzers. Most GUIs also have many
            cycles and dead ends; these only make it more likely for the fuzzer to get stuck.
          </p>
          <p>
            Because Fuzz Map uses code coverage to recognize states it has already seen, it only
            takes around \( n \) inputs in this case.
          </p>
          <p>
            For the math behind the \( n^2 \) estimate, see
            <a href="https://math.stackexchange.com/a/3970622">angryavian's answer</a> to an
            equivalent problem on Math StackExchange. For the general case, see the chapter
            “Random Walk and Ruin Problems” in
            <em>An Introduction to Probability Theory and Its Applications, Vol. 1</em> by Feller.
            The amazing Internet Archive has an
            <a href="https://archive.org/details/introductiontopr00fell/page/317">online copy you can borrow</a>, where the analysis starts on page 317.
          </p>
          <p>
            By the way, if you think it's inconvenient that only one person can borrow the book per
            hour, book publishers disagree—they think it should be even harder! At the time of
            writing, Hachette, HarperCollins, Wiley, and Penguin Random House are suing the Internet
            Archive. The Internet Archive is being
            <a href="https://www.eff.org/cases/hachette-v-internet-archive">defended by the EFF</a>.
          </p>

          <h2>Exploring the state graph</h2>
          <p>
            Whenever Fuzz Map <em>first</em> sees a state, identified by its hit vector \( \vec s
            \), it generates all the possible inputs for that state. For example, one input \( i \)
            might be “change the value of 'Pickup time' to '1:24 AM'”. Then it places
            all of these inputs into a <em>fuzzing queue</em>. The items in the queue are pairs \(
            (\vec s, i) \).
          </p>
          <p>
            Fuzzing takes place in a loop. In each iteration, Fuzz Map dequeues a pair \( (\vec s,
            i) \) then applies it. If \( \vec s \) does not match the current state, then Fuzz Map
            <em>travels</em> before applying \( i \). It does this by applying the shortest sequence
            of inputs it previously recorded as having led to \( \vec s \). A minified set of these
            shortest paths is also saved for reuse after recompiling to make subsequent fuzzing runs
            faster. This set is comparable to the <em>seed pool</em> of a conventional fuzzer.
          </p>
          <p>
            Fuzz Map uses a few simple scheduling heuristics for dequeuing items. When possible,
            Fuzz Map dequeues an item whose state equals the current state. This is because it is
            typically more expensive to reset a GUI than to apply an additional input. Otherwise,
            Fuzz Map will alternate between selecting a random item from the queue and selecting an
            item with the smallest hit vector.
          </p>
          <p>
            Fuzz Map dequeues a random item rather than always dequeuing the next item to to try
            avoid getting stuck in a clique of states that all lead to each other. Dequeuing the
            item with the smallest hit vector helps to expose behavior that occurs only when a loop
            does not execute.
          </p>
          <p>
            These are just heuristics, and future versions of Fuzz Map could be much more
            sophisticated. Consider an application which only shows some state if
            <code>password == "please"</code>. Fuzz Map knows through branch coverage that isn't
            guessing correctly, but it doesn't currently analyze the program to determine what the
            correct password is. A more realistic example for a GUI might be an event handler that
            checks whether <code>event.touches.length == 2</code>. One technique for generating
            inputs using program analysis is
            <a href="https://en.wikipedia.org/wiki/Concolic_testing">concolic testing</a>.
          </p>
          <p>
            <iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/RfiQYRn7fBg" title="Samuel L. Jackson's character in Jurassic Park tries to access a hacked computer system, but doesn't know the password. The system taunts Samuel L. Jackson by saying 'Ah ah ah! You didn't say the magic word!'" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
          </p>

          <h2>Branch coverage</h2>
          <p>
            To record branch coverage and obtain hit vectors for nodes (render states) and edges
            (event handlers), Fuzz Map uses compile-time instrumentation.
          </p>
          <p>
            Tangentially, Fuzz Map does some things with compile-time instrumentation which could
            just as well be done at by patching the application runtime, e.g. associating event
            handlers with their elements. It would have been feasible to patch React or the browser,
            but it will be much harder to patch other platforms' runtimes. iOS is an obvious
            example, but another scenario is a corporate environment where you are only allowed to
            deploy JARs.
          </p>
          <p>Instrumentation is applied in a compiler pass. When Fuzz Map encounters this code:</p>
          <pre>return isLoading ? "Loading..." : "Done!";</pre>
          <p>it adds instrumentation and outputs the following:</p>
          <pre>return isLoading ? (hit(65), "Loading...") : (hit(66), "Done!");</pre>
          <p>
            The comma denotes a <em>sequence expression</em>. When the expression
            <code>a, b</code> is evaluated, first <code>a</code> is evaluated, then <code>b</code>.
            Finally, the entire expression evaluates to the result of <code>b</code>. Here it's used
            to insert the hit counter into the ternary expression without changing its value. There
            are weirder tricks for this which will appear later in this section.
          </p>
          <p>
            <code>hit(n)</code> increments the <em>hit counter</em> with ID <code>n</code> in a
            global map. The hit counter IDs in this example are \( 65 \) and \( 66 \) because Fuzz
            Map packs both a branch ID and a target ID into the hit counter ID. The branch ID in
            this case is \( 1 \), and the second branch target has ID \( 2 \), so \( 66 = (1 \ll 6)
            + 2 \). Fuzz Map also uses the most significant bit to record whether a hit counter ID
            corresponds to a “high detail” branch; currently these are just function
            entry points. The extra information packed into the hit counter ID is used during map
            graph generation, discussed later.
          </p>
          <p><img width="1924" height="192" src="https://jyc-static.com/cd9227aba935fd66f6fd308fc78b4e856ca35da68df16b0c2128f91303032949"></p><h2>Short-circuiting expressions</h2>
          <p>
            You probably know that the Boolean operators in JavaScript <em>short-circuit</em>
            and evaluate to the first sub-expression that determines their value, as they do in most
            (or all?) languages in the C family. Short-circuiting means that
            <code>false &amp;&amp; alert("boo!")</code> and <code>true || alert("boo!")</code> never alert.
            But unless you are familiar with React and JSX, you might not know that short-circuiting
            is often used
            <a href="https://reactjs.org/docs/conditional-rendering.html#inline-if-with-logical--operator">idiomatically</a>. Here's some code from the Checkout example:
          </p>
          <pre>{screen === "OrderConfirmed" &amp;&amp; (
  &lt;&gt;
    &lt;h2&gt;Order confirmed&lt;/h2&gt;
    &lt;div className="screenContents"&gt;
      &lt;p&gt;Your order is confirmed!&lt;/p&gt;
      &lt;p&gt;{STORE_NAME} is preparing your order.&lt;/p&gt;
      ...
    &lt;/div&gt;
  &lt;/&gt;
)}</pre>
          <p>
            When the “Order Confirmed” screen is not being shown,
            <code>screen === "OrderConfirmed"</code> evaluates to <code>false</code>, so the entire
            expression evaluates to <code>false</code>. React doesn't render <code>false</code>, so
            the screen doesn't show.
          </p>
          <p>
            The frequent use of short-circuiting in React made it more important for this demo to
            instrument it. If the demo worked on C programs compiled to WASM instead, this might
            have been less important.
          </p>
          <p>
            As an aside, WASM would have made some things easier. Instead of having to write the
            instrumentation for each branching operation separately, I could have just instrumented
            the less numerous
            <a href="https://webassembly.github.io/spec/core/syntax/instructions.html">control instructions</a>
            in WASM. Rewriting a WASM binary is a lot easier than rewriting e.g. an x86 binary
            because WASM does not allow jumps to arbitrary addresses; for the difficulties that
            creates, see e.g.
            <a href="https://www.youtube.com/watch?v=iRvC5hgN1VY">Bauman et al (2018)</a>. More
            generally, it would be nifty to have the ability to write a compiler pass that operates
            on a lower-level representation, and to then have the compiler automatically transform
            this pass into one that operates on a higher-level representation, preserving the
            original structure of the program whenever possible. I don't know of other applications
            for this, though; maybe it could be used to implement diff/patch not based on lines.
          </p>
          <p>
            Because we don't have this ability, here are the separate transformations for
            <code>a || b</code> and <code>a ?? b</code> (the
            <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator">nullish coalescing operator</a>):
          </p>
          <ul>
            <li>
              <code>a || b</code>
              becomes
              <pre>((x) =&gt; x ? (hit(1), x) : (hit(2), b))(a)</pre>
            </li>
            <li>
              <code>a ?? b</code>
              becomes
              <pre>((x) =&gt; (x === null || x === undefined) ? (hit(2), b) : (hit(1), x))(a)</pre>
            </li>
          </ul>
          <p>
            Any expression can be replaced by an
            <a href="https://en.wikipedia.org/wiki/Immediately_invoked_function_expression">immediately-invoked function expression</a>
            containing a conditional expression. It's necessary because we need to bind the value of
            the expression <code>a</code> so we can use it multiple times while evaluating it only
            once. For example, to evaluate <code>a ?? b</code>, first we compare the value of
            <code>a</code> with <code>null</code> and <code>undefined</code>, then we return it.
          </p>
          <p>
            I previously tried to be clever and transform <code>a || b</code> to
            <code>(a &amp;&amp; (h1, true)) || (h2, b)</code>. This works unless <code>a</code> is only
            <em>truthy</em>, not true, and the result of the expression is not used as a Boolean.
            Then the transformed expression evaluates to <code>true</code> when the original
            expression would have evaluated to e.g. <code>1</code>.
          </p>
          <p>
            If this section didn't bore you out of your mind, you might enjoy the game
            <a href="https://alf.nu/ReturnTrue?world=true&amp;level=id">return true to win</a> by
            <a href="https://twitter.com/steike">@steike</a>.
          </p>

          <h2>The map graph</h2>
          <p>
            The state graph is already a simplified version of the program being tested. But
            typically it'll still be humongous, even for a simple application. When rendered it is
            almost unreadable. So before layout and rendering, Fuzz Map <em>simplifies</em> the
            state graph into a <em>map graph</em>. Each node or edge in the map graph corresponds to
            one or more nodes and edges in the state graph. As a final step, Fuzz Map uses
            <a href="https://github.com/kieler/elkjs">elkjs</a> to create a <em>layout</em> where
            each node and edge in the map graph has been assigned a position on the screen.
          </p>
          <p>
            Why is the state graph so large? First, there are many ways that different parts of the
            program can interact with each other. If one branch is added to the program that is
            independent from the other branches in the program, it more than doubles the number of
            possible states. In other words, even when each entry of the hit vector is clamped to \(
            [0, 1] \), a program with \( n \) branches still has \( 2^n \) possible hit vectors.
          </p>
          <p>
            Second, each iteration of a loop increments each hit counter it contains. So each loop
            iteration creates an entirely new state.
          </p>
          <p>
            During fuzzing, it's useful for the state graph to be large. Recall that each item \(
            (\vec s, i) \) in the fuzzing queue contains a hit vector \( \vec s \) that identifies
            the state to which the input \( i \) should be applied. So the more precisely the hit
            vector \( \vec s \) describes the application state, the more likely we are to
            successfully apply input \( i \) when we travel to that state again during fuzzing.
            Suppose we used clamped hit vectors to identify application states. Then we might try to
            apply an input \( i \) that only works in states where a list has 3 elements to a state
            where that list has only 2 elements.
          </p>
          <p>
            It's still possible for us to fail to apply an input \( i \). A hit vector \( \vec s \)
            might correspond to two states, and \( i \) might apply in only one of them. What if we
            instead identified each state using the application's actual memory, instead of using
            hit vectors? This would guarantee that \( i \) would apply, but might make the fuzzer
            slower. Obviously, we would use much more memory to represent each state.
          </p>
          <p>
            More subtly, we would apply many redundant operations during fuzzing. Suppose the
            application behaves exactly the same no matter what a user's name is, so long as they
            have a name. Then unless we have a way to determine that the difference between two
            states with different names is insignificant, every different name
            <em>multiplies</em> the number of items in the fuzzing queue.
          </p>

          <h2>Simplification</h2>
          <p>
            The map graph is created by combining nodes and edges in the state graph. This process
            repeats until no more combinations are possible. Fuzz Map uses a few simple heuristics
            for simplification. The simplest—but most impactful—is
            <em>clamping</em>: each entry of a hit vector is clamped to at most \( 1 \). Another
            heuristic, <em>branch collapsing</em>, is to treat two branch targets as identical when
            we've seen a state where both were hit. Branch collapsing helps with GUIs which perform
            processing for each item in a list, like the Checkout example.
          </p>
          <p>
            This diagram shows an example of clamping during simplification. The two blue nodes in
            the state graph are combined into one node in the map graph:
          </p>
          <p><img width="993" height="258" src="https://jyc-static.com/b37bd9d1850bdf516755d5a40a6d6b266ac9d139f787d01976316aef905dc7fe"></p><p>
            Initially the two blue nodes have different hit vectors, \( (1, 0, 2) \) and \( (3, 0,
            1) \). But both hit vectors are equivalent after clamping to \( (1, 0, 1) \), so the two
            nodes are combined. This causes the edge from one blue node to the other to become a
            loop. Simplification operates on edges as well.
          </p>
          <p>
            There's a lot more that could be said about map graph simplification. In fact,
            simplification was the largest source of novelty and complexity in this project. Without
            simplification, interesting parts of the map are drowned out by exponentially more
            uninteresting parts. Simplification is the key to making the map visualization possible.
          </p>
          <p>
            Clamping is essentially <em>local</em> in that it acts on each hit vector independently.
            Branch collapsing is slightly less local. The next step is to explore
            <em>global</em> analyses, e.g. identifying when a state differs significantly from
            others.
          </p>

          <h2>Applying inputs</h2>
          <p>
            Changing tack: it's often possible for Fuzz Map to apply inputs even after the program
            has been modified. The <em>input path</em>s that Fuzz Map uses to identify input targets
            contain the event handler's inline declaration. For example, if you render a list of
            buttons:
          </p>
          <pre>function App(...) {
  ...
  return list.map((name) =&gt; &lt;button onClick={handleClick(name)} /&gt;);
}
</pre>
          <p>each button's <code>onClick</code> handler gets an input path:</p>
          <pre>{ subtree: ?, eventName: 'click', handler: 'App_handleClick_name', index: 1 }</pre>
          <p>
            where <code>index: 1</code> means this handler was the second among its siblings in the
            DOM with this handler. Fuzz Map uses the event handler's inline declaration because it's
            already common practice not to define event handlers entirely inline. This means most
            input paths will be stable without any extra work.
          </p>
          <p>
            Fuzz Map was designed to work without manual annotation whenever feasible. But if you
            need to more precisely identify an element, you can set the
            <code>data-fuzzmap-key</code> HTML attribute on the element or its ancestors. The
            <code>subtree</code> field in the input path is a list of
            <code>(key, index)</code> pairs. If you want, you can give each element a totally unique
            <code>data-fuzzmap-key</code>. Many testing systems either require this for <em>all</em>
            interactive elements or fall back to guessing based on style or content.
          </p>
          <p>
            A heuristic is used to minimize the size of the seed input set: if one seed input
            sequence is exactly contained in another, then the smaller one is removed. For many
            applications, it is more expensive to reset the sandbox than to extend an existing input
            sequence with additional inputs, e.g. when resetting the sandbox requires resetting a
            database. A more optimal approach would be to compute a minimal path cover.
          </p>

          <h2>Limitations and future work</h2>
          <p>
            There are many limitations in the current version of Fuzz Map—hence the
            <em>alpha</em> label. I'll mention a few of them below. All of these will be addressed
            in future versions.
          </p>
          <p>
            Fuzz Map does not generate complex values for inputs. This is the exact opposite of most
            commonly-used fuzzers! That is also exactly why this wasn't a focus of the demo. Instead
            of reinventing the wheel, a future version of Fuzz Map will integrate established
            fuzzers for generating e.g. the text in inputs.
          </p>
          <p>
            Fuzz Map's state and event model is extensible. The demo does not currently handle
            asynchronous events like <code>setTimeout</code> and <code>fetch</code> calls. But in a
            future version of Fuzz Map, edges will correspond not just to DOM event handlers, but
            also to event handlers attached to browser APIs. It will be straightforward to extend
            Fuzz Map to instrument and replay these in the same way that it already instruments DOM
            events. Here's a quick mockup:
          </p>
          <p><img width="1567" height="1982" src="https://jyc-static.com/315ef928645072563116f42c9654d6ac5299d05a732c370d2f45c34b860a07a6"></p><p>
            Fuzz Map does not handle event handlers that are defined at runtime. Only
            <a href="https://reactjs.org/docs/forms.html#controlled-components">controlled components</a>
            are fuzzed.
          </p>
          <p>
            I was lazy and didn't handle more exotic branching operations like <code>??=</code> and
            <code>?.</code>.
          </p>

          <h2>Special acknowledgments</h2>
          <p>
            I'd like to especially acknowledge <a href="https://twitter.com/joeyliaw">Joey Liaw</a>,
            who gave me the idea to try and fuzz GUIs over lunch!
          </p>
          <p>
            I'd also like to especially acknowledge the authors of
            <a href="https://github.com/kieler/elkjs">elkjs</a> and the
            <a href="https://www.eclipse.org/elk/">ELK layout library</a>. Of all the libraries I
            used for this demo, ELK punched the most above its weight. ELK generates the layout used
            to render the map graph. A similar program is the classic
            <a href="https://graphviz.org/">Graphviz</a>.
          </p>

          
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Donald Sutherland has died (220 pts)]]></title>
            <link>https://www.bbc.com/news/articles/c9rrvdq3g9zo</link>
            <guid>40741672</guid>
            <pubDate>Thu, 20 Jun 2024 18:28:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bbc.com/news/articles/c9rrvdq3g9zo">https://www.bbc.com/news/articles/c9rrvdq3g9zo</a>, See on <a href="https://news.ycombinator.com/item?id=40741672">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main-content"><article><div data-testid="byline" data-component="byline-block"><p><time>3 hours ago</time></p><div><p><span data-testid="byline-name">By&nbsp;<!-- -->Rachel Looker<!-- -->,&nbsp;<!-- --></span><span>BBC News, Washington</span></p></div></div><figure><div data-component="image-block"><p><img src="https://www.bbc.com/bbcx/grey-placeholder.png"><img sizes="(min-width: 1280px) 50vw, (min-width: 1008px) 66vw, 96vw" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/9189/live/4d58b3a0-2f2c-11ef-af74-49a581acd12a.jpg.webp 240w,https://ichef.bbci.co.uk/news/320/cpsprodpb/9189/live/4d58b3a0-2f2c-11ef-af74-49a581acd12a.jpg.webp 320w,https://ichef.bbci.co.uk/news/480/cpsprodpb/9189/live/4d58b3a0-2f2c-11ef-af74-49a581acd12a.jpg.webp 480w,https://ichef.bbci.co.uk/news/640/cpsprodpb/9189/live/4d58b3a0-2f2c-11ef-af74-49a581acd12a.jpg.webp 640w,https://ichef.bbci.co.uk/news/800/cpsprodpb/9189/live/4d58b3a0-2f2c-11ef-af74-49a581acd12a.jpg.webp 800w,https://ichef.bbci.co.uk/news/1024/cpsprodpb/9189/live/4d58b3a0-2f2c-11ef-af74-49a581acd12a.jpg.webp 1024w,https://ichef.bbci.co.uk/news/1536/cpsprodpb/9189/live/4d58b3a0-2f2c-11ef-af74-49a581acd12a.jpg.webp 1536w" src="https://ichef.bbci.co.uk/news/480/cpsprodpb/9189/live/4d58b3a0-2f2c-11ef-af74-49a581acd12a.jpg.webp" loading="eager" alt="Getty Images Actor Donald Sutherland "><span>Getty Images</span></p></div></figure><div data-component="text-block"><p>The Canadian actor Donald Sutherland, star of films including The Hunger Games and Don't Look Now, has died at 88 after a long illness. <!-- --></p><p>His son, the actor Kiefer Sutherland, said: "With a heavy heart, I tell you that my father, Donald Sutherland, has passed away. I personally think one of the most important actors in the history of film.<!-- --></p><p>"Never daunted by a role, good, bad or ugly. He loved what he did and did what he loved, and one can never ask for more than that. A life well lived."<!-- --></p><p>Sutherland had <!-- --><a target="_self" href="https://www.bbc.com/news/entertainment-arts-52070783">almost 200 credits to his name<!-- --></a> in a career spanning more than half a century. <!-- --></p><p>The news was met with an outpouring of support and tributes.<!-- --></p><p>Cary Elwes, a co-star in the 2001 television film Uprising, said he was "devastated" by Sutherland's death.<!-- --></p><p>"Our hearts are breaking for you," he told Kiefer in an Instagram message. "So grateful to have known [and] worked with him. Sending our love.<!-- --></p></div><figure><div data-component="image-block"><p><img src="https://www.bbc.com/bbcx/grey-placeholder.png"><img sizes="(min-width: 1280px) 50vw, (min-width: 1008px) 66vw, 96vw" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/2b80/live/50b7c280-2f3f-11ef-bdc5-41d7421c2adf.jpg.webp 240w,https://ichef.bbci.co.uk/news/320/cpsprodpb/2b80/live/50b7c280-2f3f-11ef-bdc5-41d7421c2adf.jpg.webp 320w,https://ichef.bbci.co.uk/news/480/cpsprodpb/2b80/live/50b7c280-2f3f-11ef-bdc5-41d7421c2adf.jpg.webp 480w,https://ichef.bbci.co.uk/news/640/cpsprodpb/2b80/live/50b7c280-2f3f-11ef-bdc5-41d7421c2adf.jpg.webp 640w,https://ichef.bbci.co.uk/news/800/cpsprodpb/2b80/live/50b7c280-2f3f-11ef-bdc5-41d7421c2adf.jpg.webp 800w,https://ichef.bbci.co.uk/news/1024/cpsprodpb/2b80/live/50b7c280-2f3f-11ef-bdc5-41d7421c2adf.jpg.webp 1024w,https://ichef.bbci.co.uk/news/1536/cpsprodpb/2b80/live/50b7c280-2f3f-11ef-bdc5-41d7421c2adf.jpg.webp 1536w" src="https://ichef.bbci.co.uk/news/480/cpsprodpb/2b80/live/50b7c280-2f3f-11ef-bdc5-41d7421c2adf.jpg.webp" loading="lazy" alt="Getty Kiefer Sutherland (left) and his father Donald in the 1980s"><span>Getty</span></p></div><p data-component="caption-block"><figcaption>Kiefer Sutherland (left) and his father Donald in the 1980s<!-- --></figcaption></p></figure><div data-component="text-block"><p>Canadian Prime Minister Justin Trudeau recalled feeling "deeply, deeply star-struck" when he first met Sutherland. <!-- --></p><p>"My thoughts go out to Kiefer and the entire Sutherland family, as well as all Canadians who are no doubt saddened to learn, as I am right now," he said. <!-- --></p><p>"He was a man with a strong presence, a brilliance in his craft and truly, truly a great Canadian artist," he added. <!-- --></p><p>Ron Howard, who directed Sutherland in the 1991 film Backdraft, said that he was "one of the most intelligent, interesting [and] engrossing film actors of all time". <!-- --></p><p>Born in New Brunswick, Canada, Sutherland started as a radio news reporter before travelling to London in 1957 to study at the London Academy of Music and Dramatic Art. <!-- --></p><p>He then took on small roles in British film and television. <!-- --></p><p>His earliest high-profile roles were in war films including 1967's The Dirty Dozen, and Kelly's Heroes and M*A*S*H from 1970.<!-- --></p><p>Jane Fonda was Sutherland's co-star in Alan J Pakula's 1971 thriller, Klute, about a detective whose hunt for a missing person is assisted by a high-priced call girl.<!-- --></p><p>They dated for two years. <!-- --></p></div><p data-component="caption-block"><figcaption>Donald Sutherland on not being a 'conventional' Hollywood star<!-- --></figcaption></p><div data-component="text-block"><p>The 1970s also saw him play an IRA member in The Eagle Has Landed, a pot-smoking college professor in National Lampoon's Animal House and the lead in the 1978 remake of Invasion of the Body Snatchers.<!-- --></p><p>In the 1980s, Sutherland played the father of a suicidal teenager in the Oscar-winning Ordinary People. <!-- --></p><p>He turned to television in the 2000s, appearing in such series as Dirty Sexy Money and Commander-in-Chief.<!-- --></p><p>Despite his numerous roles, he was never nominated for an Oscar. He did receive an honorary Academy Award in 2017. <!-- --></p><p>Sutherland was known for his political activism throughout his career, and protested against the Vietnam war alongside Fonda. <!-- --></p><p>He also channelled his beliefs into some of his roles, including The Hunger Games: Mockingjay - Part 2, where he played the tyrannical President Snow.<!-- --></p><p>Sutherland told the BBC in 2015 that he hoped the film's socio-political message would help young fans become more aware of the world around them. <!-- --></p><p>He also told the BBC that the biggest changes he'd noticed in the industry was that actors were making "a lot of money". <!-- --></p><p>"I don't think anybody of my generation became an actor to make money. It never occurred to me. I made £8 a week here [on stage in London]. When I starred in a play at the Royal Court, I made £17 a week, that was in 1964," he said. <!-- --></p><p>At the time, he said he had no plans to retire from acting.<!-- --></p><p>"It's a passionate endeavour. Retirement for actors is spelt 'DEATH'." he said. <!-- --></p><p>His memoir, Made Up, But Still True, is due to be published in November.<!-- --></p></div><figure><div data-component="image-block"><p><img src="https://www.bbc.com/bbcx/grey-placeholder.png"><img sizes="(min-width: 1280px) 50vw, (min-width: 1008px) 66vw, 96vw" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/02f0/live/a51a2f20-2f3a-11ef-90be-b75b34b0bbb2.jpg.webp 240w,https://ichef.bbci.co.uk/news/320/cpsprodpb/02f0/live/a51a2f20-2f3a-11ef-90be-b75b34b0bbb2.jpg.webp 320w,https://ichef.bbci.co.uk/news/480/cpsprodpb/02f0/live/a51a2f20-2f3a-11ef-90be-b75b34b0bbb2.jpg.webp 480w,https://ichef.bbci.co.uk/news/640/cpsprodpb/02f0/live/a51a2f20-2f3a-11ef-90be-b75b34b0bbb2.jpg.webp 640w,https://ichef.bbci.co.uk/news/800/cpsprodpb/02f0/live/a51a2f20-2f3a-11ef-90be-b75b34b0bbb2.jpg.webp 800w,https://ichef.bbci.co.uk/news/1024/cpsprodpb/02f0/live/a51a2f20-2f3a-11ef-90be-b75b34b0bbb2.jpg.webp 1024w,https://ichef.bbci.co.uk/news/1536/cpsprodpb/02f0/live/a51a2f20-2f3a-11ef-90be-b75b34b0bbb2.jpg.webp 1536w" src="https://ichef.bbci.co.uk/news/480/cpsprodpb/02f0/live/a51a2f20-2f3a-11ef-90be-b75b34b0bbb2.jpg.webp" loading="lazy" alt="Getty Sutherland as Sergeant Oddball in Kelly's Heroes"><span>Getty</span></p></div><p data-component="caption-block"><figcaption>Sutherland as Sergeant Oddball in Kelly's Heroes<!-- --></figcaption></p></figure></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Small claims court became Meta's customer service hotline (305 pts)]]></title>
            <link>https://www.engadget.com/how-small-claims-court-became-metas-customer-service-hotline-160224479.html</link>
            <guid>40741197</guid>
            <pubDate>Thu, 20 Jun 2024 17:37:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.engadget.com/how-small-claims-court-became-metas-customer-service-hotline-160224479.html">https://www.engadget.com/how-small-claims-court-became-metas-customer-service-hotline-160224479.html</a>, See on <a href="https://news.ycombinator.com/item?id=40741197">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Last month, Ray Palena boarded a plane from New Jersey to California to appear in court. He found himself engaged in a legal dispute against one of the largest corporations in the world, and improbably, the venue for their David-versus-Goliath showdown would be San Mateo's small claims court.</p><p>Over the course of eight months and an estimated $700 (mostly in travel expenses), he was able to claw back what all other methods had failed to render: his personal Facebook account.</p><p>Those may be extraordinary lengths to regain a digital profile with no relation to its owner's livelihood, Palena is one of a growing number of frustrated users of Meta's services who, unable to get help from an actual human through normal channels of recourse, are using the court system instead. And in many cases, it's working.</p><p>Engadget spoke with five individuals who have sued Meta in small claims court over the last two years in four different states. In three cases, the plaintiffs were able to restore access to at least one lost account. One person was also able to win financial damages and another reached a cash settlement. Two cases were dismissed. In every case, the plaintiffs were at least able to get the attention of Meta’s legal team, which appears to have something of a playbook for handling these claims.</p><h2 id="why-small-claims"><strong>Why small claims?</strong></h2><p>At the heart of these cases is the fact that Meta lacks the necessary volume of human customer service workers to assist those who lose their accounts. The company’s official help pages steer users who have been hacked toward confusing automated tools that often lead users to dead-end links or emails that don’t work if your account information has been changed. (The company recently launched a $14.99-per-month program, Meta Verified, which grants access to human customer support. Its track record as a means of recovering hacked accounts after the fact has been spotty at best, according to anecdotal descriptions.)</p><p>Hundreds of thousands of people also turn to their state Attorney General’s office as some state AGs have made requests on users’ behalf — on Reddit, this is known as the “AG method.” But attorneys general across the country have been so inundated with these requests they formally asked Meta to fix their customer service, too. “We refuse to operate as the customer service representatives of your company,” a coalition of 41 state AGs wrote in <a data-i13n="elm:context_link;elmt:doNotAffiliate;cpos:1;pos:1" href="https://www.engadget.com/41-state-attorneys-general-tell-meta-to-fix-their-customer-support-for-hacking-victims-184709904.html" data-ylk="slk:a letter;elm:context_link;elmt:doNotAffiliate;cpos:1;pos:1;itc:0;sec:content-canvas">a letter</a> to the company earlier this year.</p><p>Facebook and Instagram users have long sought creative and sometimes extreme measures to get hacked accounts back due to Meta’s lack of customer support features. Some users have resorted to <a data-i13n="elm:context_link;elmt:doNotAffiliate;cpos:2;pos:1" href="https://www.vice.com/en/article/59vnvk/hacked-instagram-influencers-get-accounts-back-white-hat-hackers" rel="nofollow noopener" target="_blank" data-ylk="slk:hiring;elm:context_link;elmt:doNotAffiliate;cpos:2;pos:1;itc:0;sec:content-canvas">hiring</a> their own hackers or <a data-i13n="elm:context_link;elmt:doNotAffiliate;cpos:3;pos:1" href="https://www.npr.org/2021/08/02/1023801277/your-facebook-account-was-hacked-getting-help-may-take-weeks-or-299" rel="nofollow noopener" target="_blank" data-ylk="slk:buying;elm:context_link;elmt:doNotAffiliate;cpos:3;pos:1;itc:0;sec:content-canvas">buying</a> an Oculus headset since Meta has dedicated support staff for the device (users on Reddit report this “method” no longer works). The small claims approach has become a popular topic on Reddit forums where frustrated Meta users trade advice on various “methods” for getting an account back. People Clerk, a site that helps people write demand letters and other paperwork required for small claims court, published a <a data-i13n="elm:context_link;elmt:doNotAffiliate;cpos:4;pos:1" href="https://www.peopleclerk.com/post/how-to-sue-facebook" rel="nofollow noopener" target="_blank" data-ylk="slk:help article;elm:context_link;elmt:doNotAffiliate;cpos:4;pos:1;itc:0;sec:content-canvas">help article</a> called “How to Sue facebook,” in March.</p><p>It’s difficult to estimate just how many small claims cases are being brought by Facebook and Instagram users, but they may be on the rise. Patrick Forrest, the chief legal officer for Justice Direct, the legal services startup that owns People Clerk, says the company has seen a “significant increase” in cases against Meta over the last couple years.</p><p>One of the advantages of small claims court is that it’s much more accessible to people without deep pockets and legal training. Filing fees are typically under $100 and many courthouses have resources to help people complete the necessary paperwork for a case. “There's no discovery, there are no depositions, there's no pre-trial,” says Bruce Zucker, a law professor at California State University, Northridge. “You get a court date and it's going to be about a five or 10 minute hearing, and you have a judge who's probably also tried to call customer service and gotten nowhere.”</p><h2 id="the-stakes"><strong>The stakes</strong></h2><p>“Facebook and Instagram and WhatsApp [have] become crucial marketplaces where people conduct their business, where people are earning a living," Forrest said. “And if you are locked out of that account, business or personal, it can lead to severe financial damages, and it can disrupt your ability to sustain your livelihood.”</p><p>One such person whose finances were enmeshed with Meta's products is Valerie Garza, the owner of a massage business. She successfully sued the company in a San Diego small claims court in 2022 after a hack which cost her access to personal Facebook and Instagram accounts, as well as those associated with her business. She was able to document thousands of dollars in resulting losses.</p><p>A Meta legal representative contacted Garza a few weeks before her small claims court hearing, requesting she drop the case. She declined, and when Meta didn’t show up to her hearing, she won by default. "When we went through all of the loss of revenues," Garza told Engadget, "[the judge] kind of had to give it to me.”</p><p>But that wasn’t the end of Garza’s legal dispute with Meta. After the first hearing, the company filed a motion asking the judge to set aside the verdict, citing its own failure to appear at the hearing. Meta also tried to argue that its terms of service set a maximum of $100 liability. Another hearing was scheduled and a lawyer again contacted Garza offering to help get her account back.</p><p>“He seemed to actually kind of just want to get things turned back on, and that was still my goal, at this point,” Garza said. It was then she discovered that her business’ Instagram was being used to advertise sex work.</p><p>She began collecting screenshots of the activity on the account, which violated Instagram’s terms of service, as well as fraudulent charges for Facebook ads bought by whoever hacked her account. Once again, Meta didn’t show up to the hearing and a judge ordered the company to pay her the $7,268.65 in damages she had requested.</p><p>“I thought they were going to show up this time because they sent their exhibits, they didn't ask for a postponement or anything,” she says. “My guess is they didn't want to go on record and have a transcript showing how completely grossly negligent they are in their business and how very little they care about the safety or financial security of their paying advertisers.”</p><p>In July of 2023, Garza indicated in court documents that Meta had paid in full. In all, the process took more than a year, three court appearances and countless hours of work. But Garza says it was worth it. “I just can't stand letting somebody take advantage and walking away,” she says.</p><p>Even for individuals whose work doesn't depend on Meta's platforms, a hacked account can result in real harm.</p><p>Palena, who flew cross-country to challenge Meta in court, had no financial stake in his Facebook account, which he claimed nearly 20 years ago when the social network was still limited to college students. But whoever hacked him had changed the associated email address and phone number, and began using his page to run scam listings on Facebook Marketplace.</p><p>“I was more concerned about the damage it could do to me and my name if something did happen, if someone actually was scammed,” he tells Engadget. In his court filing, he asked for $10,000 in damages, the maximum allowed in California small claims court. He wrote that Meta had violated its own terms of service by allowing a hacked account to stay up, damaging his reputation. “I didn't really care that much about financial compensation,” Palena says “I really just wanted the account back because the person who hacked the account was still using it. They were using my profile with my name and my profile image."</p><p>A couple weeks later, a legal rep from Meta reached out to him and asked him for information about his account. They exchanged a few emails over several weeks, but his account was still inaccessible. The same day he boarded a plane to San Mateo, the Meta representative emailed him again and asked if he would be willing to drop the case since “the access team is close to getting your account secure and activated again.” He replied that he intended to be in court the next day as he was still unable to get into his account.</p><p>Less than half an hour before his hearing was scheduled to start, he received the email he had spent months waiting for: a password reset link to get back into his account. Palena still attended the hearing, though Meta did not. According to court records reviewed by Engadget, Palena told the judge the case had been “tentatively resolved,” though he hasn’t officially dropped the case yet.</p><h2 id="the-hurdles-of-small-claims"><strong>The hurdles of small claims</strong></h2><p>While filing a small claims court case is comparatively simple, it can still be a minefield, even to figure out something as seemingly straightforward as which court to file to. Forrest notes that Facebook’s <a data-i13n="elm:context_link;elmt:doNotAffiliate;cpos:5;pos:1" href="https://web.archive.org/web/20240617191705/https://www.facebook.com/legal/terms?paipv=0&amp;eav=AfZS6qv1h_Yae53lI1YzSLPqunlR5E-qm81YGS-4ha4JAWI3_ZwvsJwVSr94z6FVhhI&amp;_rdr" rel="nofollow noopener" target="_blank" data-ylk="slk:terms of service;elm:context_link;elmt:doNotAffiliate;cpos:5;pos:1;itc:0;sec:content-canvas">terms of service</a> stipulates that legal cases must be brought in San Mateo County, home of Meta’s headquarters. But, confusingly, the terms of service for Meta accounts <a data-i13n="elm:context_link;elmt:doNotAffiliate;cpos:6;pos:1" href="https://webcache.googleusercontent.com/search?q=cache%3Ahttps%3A%2F%2Fwww.meta.com%2Flegal%2Fsupplemental-terms-of-service%2F&amp;rlz=1C5GCEA_enUS1076US1076&amp;oq=cache%3Ahttps%3A%2F%2Fwww.meta.com%2Flegal%2Fsupplemental-terms-of-service%2F&amp;gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIGCAEQRRg60gEIMjk2MGowajeoAgCwAgA&amp;sourceid=chrome&amp;ie=UTF-8" rel="nofollow noopener" target="_blank" data-ylk="slk:states;elm:context_link;elmt:doNotAffiliate;cpos:6;pos:1;itc:0;sec:content-canvas">states</a> that cases <em>other than small claims court</em> must be filed in San Mateo. In spite of the apparent contradiction, some people (like Garza) have had success suing Meta outside of San Mateo.</p><p>Each jurisdiction also has different rules for maximum allowable compensation in small claims, what sorts of relief those courts are able to grant and even whether or not parties are allowed to have a lawyer present. The low barrier to entry means many first-time plaintiffs are navigating the legal system for the first time without help, and making rookie mistakes along the way.</p><p>Shaun Freeman had spent years building up two Instagram accounts, which he describes as similar to TMZ but with “a little more character.” The pages, which had hundreds of thousands of followers, had also been a significant source of income to Freeman, who has also worked in the entertainment industry and uses the stage name Young Platinum.</p><p>He says his pages had been suspended or disabled in the past, but he was able to get them back through Meta’s appeals process, and once through a complaint to the California Attorney General’s office. But in 2023 he again lost access to both accounts. He says one was disabled and one is inaccessible due to what seems like a technical glitch.</p><p>He tried to file appeals and even asked a friend of a friend who worked at Meta to look into what had happened, but was unsuccessful. Apparently out of other options, he filed a small claims case in Nevada in February. A hearing was scheduled for May, but Freeman had trouble figuring out the legal mechanics. “It took me months and months to figure out how to get them served,” Freeman says. He was eventually able to hire a process server and got the necessary signature 10 days before his hearing. But it may have been too late. Court records show the case was dismissed for failure to serve.</p><p>Even without operator error, Meta seems content to create hardship for would-be litigants over matters much smaller than the company's more headline-grabbing antitrust and child safety disputes. Based on correspondence reviewed by Engadget, the company maintains a separate "small claims docket" email address to contact would-be litigants.</p><p>Ron Gaul, who lives in North Dakota, filed a small claims suit after Meta disabled his account following a wave of what he describes as targeted harassment. The case was eventually dismissed after Meta’s lawyers had the case moved to district court, which is permissible for a small claims case under North Dakota law.</p><p>Gaul says he couldn’t keep up with the motions filed by Meta’s lawyers, whom he had hoped to avoid by filing in small claims court. “I went to small claims because I couldn't have a lawyer,” he tells Engadget.</p><p>Ryan, an Arizona real estate agent who asked to be identified by his first name only, decided to sue Meta in small claims with his partner after their Facebook accounts were disabled in the fall of 2022. They were both admins of several large Facebook Groups and he says their accounts were disabled over a supposed copyright violation.</p><p>Before a scheduled hearing, the company reached out. “They started basically trying to bully us,” says Ryan, who asked to be identified by his first name only. “They started saying that they have a terms of service [and] they can do whatever they want, they could delete people for any reason.” Much like Gaul, Ryan expected small claims would level the playing field. But according to emails and court records reviewed by Engadget, Meta often deploys its own legal resources as well as outside law firms to respond to these sorts of claims and engage with small claims litigants outside of court. "They put people that still have legal training against these people that are, you know, representing themselves,” he said.</p><p>In the end, Meta’s legal team was able to help Ryan get his account back and he agreed to drop himself from the small claims case. But two months later his partner had still not gotten back into hers. Meta eventually told her that her account had been permanently deleted and was no longer able to be restored. Meta eventually offered $3,500 — the maximum amount for a small claims case in Arizona. He says they wanted more, but Meta refused, and they felt like they were out of options. Ryan claims they had already lost tens of thousands of dollars in potential sales that they normally sourced from Facebook. “We were prepared to go further, but no lawyer would really take it on without a $15,000 retainer and it wasn't worth it.”</p><p>While it may seem surprising that Meta would give these small claims cases so much attention, Zucker, the Cal State Northridge professor, says that big companies have their own reasons for wanting to avoid court. “I don’t think places like Google or Meta want to have a bunch of judgments against them … because then that becomes a public record and starts floating around,” he says. “So they do take these things seriously.”</p><p>Without responding to specific questions about the substance of this story, Meta instead sent Engadget the following statement:</p><div data-src=""><blockquote><p>"We know that losing and recovering access to your online accounts can be a frustrating experience. We invest heavily in designing account security systems to help prevent account compromise in the first place, and in educating our users, including by regularly sharing new security features and tips for how people can stay safe and vigilant against potential targeting by hackers. But we also know that bad actors, including scammers, target people across the internet and constantly adapt to evade detection by social media platforms like ours, email and telecom providers, banks and others. To detect malicious activity and help protect people who may have gotten compromised via email phishing, malware or other means, we also constantly improve our detection, enforcement and support systems, in addition to providing channels where people can report account access issues to us, working with law enforcement and taking legal action against malicious groups."</p></blockquote></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A buffer overflow in the XNU kernel (112 pts)]]></title>
            <link>https://jprx.io/cve-2024-27815/</link>
            <guid>40741072</guid>
            <pubDate>Thu, 20 Jun 2024 17:24:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jprx.io/cve-2024-27815/">https://jprx.io/cve-2024-27815/</a>, See on <a href="https://news.ycombinator.com/item?id=40741072">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
      <p><a href="https://jprx.io/">&lt; Home</a>
      <a id="modeswitch" href="#" onclick="SwitchMode();">Light Mode</a></p><center>



<h3>A Buffer Overflow in the XNU Kernel</h3>

<pre>What if I'm not like the others?
A broken mbuf, an overwrite--
What if my Mac won't recover?
I'll clean my code with TURPENTINE!
</pre>

</center>

<p>CVE-2024-27815 is a buffer overflow in the XNU kernel I reported in <a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/kern/uipc_socket2.c#L1208"><code>sbconcat_mbufs</code></a>.
It was publicly fixed in <code>xnu-10063.121.3</code>, released with macOS 14.5, iOS 17.5, and visionOS 1.2.</p>

<p>This bug was introduced in <code>xnu-10002.1.13</code> (macOS 14.0/ iOS 17.0) and was fixed in <code>xnu-10063.121.3</code> (macOS 14.5/ iOS 17.5). The bug affects kernels compiled with <code>CONFIG_MBUF_MCACHE</code>.
I have verified the existence of this bug on <code>X86_64</code> builds of macOS 14.2, 14.3, and 14.4.</p>

<p><code>TURPENTINE.c</code> contains a PoC, and an example crash log is shown below.
You can find the proof-of-concept code <a href="https://github.com/jprx/CVE-2024-27815">here</a>.</p>

<p>I would like to thank the Apple Product Security Team for both their swift response to this bug and their overall support for security research.</p>

<h2>Timeline</h2>

<ul>
<li><strong>September 26, 2023</strong>: macOS 14.0 Sonoma was released with <code>xnu-10002.1.13</code>, the first public kernel release with this bug.</li>
<li><strong>Early 2024</strong>: I disclosed the details of this bug along with <code>TURPENTINE.c</code> (the proof-of-concept attached to this report) to Apple in early 2024.</li>
<li><strong>February 17, 2024</strong>: I posted the hash of <code>TURPENTINE.c</code> <a href="https://x.com/0xjprx/status/1758753797441266010">to X on Feb 17, 2024</a>.</li>
<li><strong>April 2, 2024</strong>: macOS Sonoma 14.5 beta 1 (<code>23F5049f</code>) shipped with <code>xnu-10063.120.88.501.3</code>, the first kernel version with a fix for this bug.</li>
<li><strong>May 13, 2024</strong>: macOS Sonoma 14.5 (<code>23F79</code>) shipped with <code>xnu-10063.121.3</code>, the first public release containing a fix.</li>
<li><strong>June 10, 2024</strong>: visionOS 1.2 is released (the last OS on a kernel prior to <code>xnu-10063.121.3</code>), and Apple's <a href="https://support.apple.com/en-us/HT201222">website</a> is updated to include CVE-2024-27815 for <a href="https://support.apple.com/en-us/HT214108">visionOS 1.2</a>, <a href="https://support.apple.com/en-us/HT214106">macOS 14.5</a>, <a href="https://support.apple.com/en-us/HT214101">iOS 17.5/ iPadOS 17.5</a>, <a href="https://support.apple.com/en-us/HT214104">watchOS 10.5</a>, and <a href="https://support.apple.com/en-us/HT214102">tvOS 17.5</a>.</li>
</ul>

<h2>Security Advisories</h2>

<ul>
<li>https://support.apple.com/HT214108</li>
<li>https://support.apple.com/HT214106</li>
<li>https://support.apple.com/HT214104</li>
<li>https://support.apple.com/HT214102</li>
<li>https://support.apple.com/HT214101</li>
</ul>

<pre>$ sha256sum TURPENTINE.c
f7160a6ad7d52f32d64b86cf3006c98a217954d80c3fc71a8f27595e227d0fa0  TURPENTINE.c
</pre>

<h2>Root Cause</h2>

<p>Message buffers (<a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/sys/mbuf.h#L625"><code>struct mbuf</code>'s</a>) are objects used in various networking / BSD portions of the kernel.
<code>mbuf</code>'s consist of a header and data portion, <a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/sys/mbuf.h#L97">both of fixed size</a>.
<code>_MSIZE</code> is the <a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/sys/mbuf.h#L97">total size of a message buffer</a>, and <code>MLEN</code> is the length of the <a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/sys/mbuf.h#L637">data part of the message buffer</a> (eg. not counting <a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/sys/mbuf.h#L628">the header</a>).
<a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/sys/socket.h#L638"><code>asa-&gt;sa_len</code></a> can be up to <a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/sys/socket.h#L655"><code>SOCK_MAXADDRLEN</code> (255)</a> as it's just a single unsigned byte.</p>

<p>When <a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/config/MASTER#L93"><code>CONFIG_MBUF_MCACHE</code></a> is on:</p>

<ul>
<li><a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/sys/mbuf.h#L105"><code>_MSIZE</code> is 256 bytes</a></li>
<li><a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/sys/mbuf.h#L133"><code>sizeof(struct m_hdr)</code> is 32 bytes</a></li>
<li>Which means <a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/sys/mbuf.h#L616"><code>MLEN</code> is 224 bytes</a></li>
</ul>

<p><a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/kern/uipc_socket2.c#L1258">This <code>bcopy</code> in <code>sbconcat_mbufs</code></a> copies a socket address into a message buffer.
It allows the attacker to write up to <code>sa_len</code> (up to 255) bytes of data into a message buffer's data field, which is only <code>MLEN</code> (224) bytes long.</p>

<p><a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/kern/uipc_socket2.c#L1249">uipc_socket2.c:1249</a>:</p>

<pre>MGET(m, M_DONTWAIT, MT_SONAME);
...
m-&gt;m_len = asa-&gt;sa_len;
bcopy((caddr_t)asa, mtod(m, caddr_t), asa-&gt;sa_len);
</pre>

<blockquote>
  <p>Note: Recall that <code>bcopy</code>'s arguments are <a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/osfmk/libsa/string.h#L453">(source, dest, len)</a>- the opposite of <code>memcpy</code>.
<a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/sys/mbuf.h#L129"><code>mtod</code></a> just grabs the data field from an <code>mbuf</code>.
So, this <code>bcopy</code> copies the socket address into <code>mbuf.M_databuf</code>, potentially overflowing it.</p>
</blockquote>

<p><code>xnu-10002.1.13</code> introduced the bug when <a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/kern/uipc_socket2.c#L1229">this macro</a> was added that only emits the bounds check when <code>_MSIZE</code> is smaller than a byte (after checking <code>sa_len</code> is only a byte).
The mistake was using <code>_MSIZE</code> instead of <code>MLEN</code>, the actual length of available space in which to copy data.</p>

<h2>Change that Introduced the Bug</h2>

<pre>@@ -1233,9 +1233,13 @@ sbconcat_mbufs(struct sockbuf *sb, struct sockaddr *asa, struct mbuf *m0, struct
        }

        if (asa != NULL) {
<span>+               _CASSERT(sizeof(asa-&gt;sa_len) == sizeof(__uint8_t));</span>
<span>+#if _MSIZE &lt;= UINT8_MAX</span>
                if (asa-&gt;sa_len &gt; MLEN) {
                        return NULL;
                }
<span>+#endif</span>
<span>+               _CASSERT(sizeof(asa-&gt;sa_len) == sizeof(__uint8_t));</span>
                space += asa-&gt;sa_len;
        }
</pre>

<p>This macro was presumably added to increase performance by removing a redundant check, but this was done incorrectly.
<code>_MSIZE</code> is the total size of a message buffer, including its header.
There are only <code>MLEN</code> bytes available to copy into, not <code>_MSIZE</code>.
The original check (that <code>sa_len &gt; MLEN</code>) is correct, but the added macro is not.</p>

<h2>Apple's Fix</h2>

<pre>@@ -1226,12 +1226,9 @@ sbconcat_mbufs(struct sockbuf *sb, struct sockaddr *asa, struct mbuf *m0, struct

        if (asa != NULL) {
                _CASSERT(sizeof(asa-&gt;sa_len) == sizeof(__uint8_t));
<span>-#if _MSIZE &lt;= UINT8_MAX</span>
<span>-               if (asa-&gt;sa_len &gt; MLEN) {</span>
<span>+               if (MLEN &lt;= UINT8_MAX &amp;&amp; asa-&gt;sa_len &gt; MLEN) {</span>
                        return NULL;
                }
<span>-#endif</span>
<span>-               _CASSERT(sizeof(asa-&gt;sa_len) == sizeof(__uint8_t));</span>
                space += asa-&gt;sa_len;
        }
</pre>

<p>Apple released a fix in <a href="https://github.com/apple-oss-distributions/xnu/blob/2c2f96dc2b9a4408a43d3150ae9c105355ca3daa/bsd/kern/uipc_socket2.c#L1229"><code>xnu-10063.121.3</code></a>, which is the kernel that ships with macOS 14.5.
Now, <a href="https://github.com/apple-oss-distributions/xnu/blob/2c2f96dc2b9a4408a43d3150ae9c105355ca3daa/bsd/kern/uipc_socket2.c#L1208"><code>sbconcat_mbufs</code></a> correctly <a href="https://github.com/apple-oss-distributions/xnu/blob/2c2f96dc2b9a4408a43d3150ae9c105355ca3daa/bsd/kern/uipc_socket2.c#L1229">compares <code>MLEN</code>, not <code>_MSIZE</code>, to <code>UINT8_MAX</code></a>.
When the constant <code>MLEN</code> is always larger than <code>UINT8_MAX</code>, the compiler can optimize this check out, and this is safe because the <a href="https://github.com/apple-oss-distributions/xnu/blob/2c2f96dc2b9a4408a43d3150ae9c105355ca3daa/bsd/kern/uipc_socket2.c#L1228"><code>CASSERT</code></a> guarantees <code>sa_len</code> is at most 255. </p>

<h2>Proof of Concept</h2>

<p>All you need are 3 syscalls- <code>socketpair</code>, <code>bind</code>, and <code>write</code>.
No extra privileges are needed.
The kernel needs to have been compiled with <code>CONFIG_MBUF_MCACHE</code> as well.
I have tested and verified the presence of this bug on <code>X86_64</code> builds of macOS 14.2, 14.3, and 14.4.</p>

<p>To run:
<code>gcc turpentine.c -o turpentine</code> and <code>./turpentine</code>.</p>

<p>The PoC code can be found <a href="https://github.com/jprx/CVE-2024-27815">here</a>.</p>

<h2>Overflow</h2>

<p>Given the overflow is <code>SOCK_MAXADDRLEN - MLEN</code> bytes long, and <code>MLEN = _MSIZE - sizeof(m_hdr)</code>:</p>

<pre>Overflow = SOCK_MAXADDRLEN - MLEN
Overflow = SOCK_MAXADDRLEN - (_MSIZE - sizeof(m_hdr))
Overflow = sizeof(m_hdr) - (_MSIZE - SOCK_MAXADDRLEN)
</pre>

<p>The overflow is always <code>sizeof(m_hdr) - (_MSIZE - SOCK_MAXADDRLEN)</code> bytes long.</p>

<p>When <code>CONFIG_MBUF_MCACHE</code> is on, <code>_MSIZE (256) - SOCK_MAXADDRLEN (255)</code> is 1.</p>

<p>This means we have <code>sizeof(m_hdr) - 1</code> bytes of overflow.
This gives us control over all but the last byte of the <code>m_hdr</code> of the next <code>mbuf</code> in memory, as usually the thing in memory past our <code>mbuf</code> is another <code>mbuf</code>.</p>

<p><strong>We can deterministically set every field of the <code>m_hdr</code> of the next <code>mbuf</code> in memory to any attacker-controlled arbitrary value</strong>.</p>

<p><a href="https://github.com/apple-oss-distributions/xnu/blob/94d3b452840153a99b38a3a9659680b2a006908e/bsd/sys/mbuf.h#L133"><code>mbuf.h:133</code></a> shows the definition for a <code>mbuf</code>'s header when <code>CONFIG_MBUF_MCACHE</code> is on:</p>

<pre>struct m_hdr {
        struct mbuf                *mh_next;       /* next buffer in chain */
        struct mbuf                *mh_nextpkt;    /* next chain in queue/record */
        uintptr_t                  mh_data;        /* location of data */
        int32_t                    mh_len;         /* amount of data in this mbuf */
        u_int16_t                  mh_type;        /* type of data in this mbuf */
        u_int16_t                  mh_flags;       /* flags; see below */
};
</pre>

<p>We can write arbitrary attacker-controlled values into the entirety of <code>mh_next</code>, <code>mh_nextpkt</code>, <code>mh_data</code>, <code>mh_len</code>, <code>mh_type</code>, and the least significant byte of <code>mh_flags</code>.</p>

<p><code>TURPENTINE.c</code> triggers the exploit by creating a socket address that is 255 bytes long.
The last 31 bytes of the socket name are copied beyond the bounds of the <code>mbuf.M_databuf</code> field, overlapping the <code>m_hdr</code> of the next message buffer in memory.
<code>TURPENTINE.c</code> sets these fields to sentinel values for demonstration purposes.</p>

<p><a href="https://github.com/jprx/CVE-2024-27815/blob/main/TURPENTINE.c#L50"><code>TURPENTINE.c:50</code></a> sets up a fake <code>m_hdr</code> inside the socket name:</p>

<pre>// Fill in with whatever you want the m_hdr of the next mbuf to be :)
m_hdr *header = (m_hdr *)&amp;sockaddr_un_buf[OFFSET_MHDR];
header-&gt;mh_next    = 0x4040404040404040ULL;
header-&gt;mh_nextpkt = 0x4141414141414141ULL;
header-&gt;mh_data    = 0x4242424242424242ULL;
header-&gt;mh_len     = 0x43434343;
header-&gt;mh_type    = 0x4444;
header-&gt;mh_flags   = 0x4545;
</pre>

<h2>Example Crash</h2>

<p>Here's an example crash- a general protection fault in <code>kernel_task</code>.</p>

<p>Don't let the kexts in the backtrace fool you- this bug is localized to just the main kernel.
The PoC allocates an mbuf and corrupts the mbuf in memory <em>after</em> it, which in my environment usually is owned by a kext.
It's not an mbuf created by the PoC that is corrupted, but some random mbuf owned by something else (usually a kext).
That's why this backtrace shows kext methods.</p>

<p>When <code>TURPENTINE.c</code> runs, it overwrites the <code>m_hdr</code> of the next <code>mbuf</code> in memory, setting the entire header to attacker-controlled arbitrary values.
For this demo, I just set the <code>m_hdr</code> to <code>0x4141414141414141</code>'s.</p>

<pre>Debugger: Unexpected kernel trap number: 0xd, RIP: 0xffffff8003901082, CR2: 0x0
CPU 0 panic trap number 0xd, rip 0xffffff8003901082
cr0 0x000000008001003b cr2 0x00007ff7bac54ad0 cr3 0x000000000843e000 cr4 0x00000000001406e0
Debugger called: <panic>
panic(cpu 0 caller 0xffffff8003d851b3): Kernel trap at 0xffffff8003901082, type 13=general protection, registers:
CR0: 0x000000008001003b, CR2: 0x00007ff7bac54ad0, CR3: 0x000000000843e000, CR4: 0x00000000001406e0
RAX: 0xbdbdbd48aab09a6e, RBX: 0xffffff8aecf2dcb0, RCX: 0x000000000000003c, RDX: 0x000000000000003c
RSP: 0xffffffb55ab0bcf8, RBP: 0xffffffb55ab0bd10, RSI: 0x4242424242424242, RDI: 0xffffff8aecf2dcb0
R8:  0xffffff8aecf2dd00, R9:  0xffffff8aecf2dd00, R10: 0xffffff8aecf2dc08, R11: 0x0000000066316350
R12: 0x000000000000003c, R13: 0x000000000000003c, R14: 0xffffff8aecf2dcb0, R15: 0x000000000000003c
RFL: 0x0000000000010282, RIP: 0xffffff8003901082, CS:  0x0000000000000008, SS:  0x0000000000000010
Fault CR2: 0x0000000000000000, Error code: 0x0000000000000000, Fault CPU: 0x0 VMM, PL: 0, VF: 0

Panicked task 0xffffff9fc2224be8: 165 threads: pid 0: kernel_task
Backtrace (CPU 0), panicked thread: 0xffffff915cabbb30, Frame : Return Address
0xffffff800390c140 : 0xffffff8003c36c41 mach_kernel : _handle_debugger_trap + 0x4b1
0xffffff800390c190 : 0xffffff8003d955c0 mach_kernel : _kdp_i386_trap + 0x110
0xffffff800390c1d0 : 0xffffff8003d84d0c mach_kernel : _kernel_trap + 0x55c
0xffffff800390c250 : 0xffffff8003bd3971 mach_kernel : _return_from_trap + 0xc1
0xffffff800390c270 : 0xffffff8003c36f2d mach_kernel : _DebuggerTrapWithState + 0x5d
0xffffff800390c360 : 0xffffff8003c365d3 mach_kernel : _panic_trap_to_debugger + 0x1e3
0xffffff800390c3c0 : 0xffffff80043d8d0b mach_kernel : _panic + 0x84
0xffffff800390c4b0 : 0xffffff8003d851b3 mach_kernel : _sync_iss_to_iks + 0x2c3
0xffffff800390c630 : 0xffffff8003d84e97 mach_kernel : _kernel_trap + 0x6e7
0xffffff800390c6b0 : 0xffffff8003bd3971 mach_kernel : _return_from_trap + 0xc1
0xffffff800390c6d0 : 0xffffff8003901082
0xffffffb55ab0bd10 : 0xffffff8005cfeb8f com.apple.iokit.IONetworkingFamily : __ZL12IO_COPY_MBUFP6__mbufS0_i + 0xb3
0xffffffb55ab0bd60 : 0xffffff8005cfec9c com.apple.iokit.IONetworkingFamily : __ZN19IONetworkController19replaceOrCopyPacketEPP6__mbufjPb + 0x9e
0xffffffb55ab0bda0 : 0xffffff8005f46b93 com.apple.driver.AppleVmxnet3Ethernet : __ZN21AppleVMXNETController18replace_dma_bufferEP10mbuf_dma_sii + 0x2f
0xffffffb55ab0bdf0 : 0xffffff8005f45ffe com.apple.driver.AppleVmxnet3Ethernet : __ZN21AppleVMXNETController12rx_pkt_queueEiP11IOMbufQueuej + 0x128
0xffffffb55ab0bea0 : 0xffffff8005f45d1d com.apple.driver.AppleVmxnet3Ethernet : __ZN21AppleVMXNETController21interrupt_msi_handlerEP22IOInterruptEventSourcei + 0x5f
0xffffffb55ab0bed0 : 0xffffff800430e90a mach_kernel : __ZN22IOInterruptEventSource12checkForWorkEv + 0x12a
0xffffffb55ab0bf20 : 0xffffff800430d12e mach_kernel : __ZN10IOWorkLoop15runEventSourcesEv + 0x13e
0xffffffb55ab0bf60 : 0xffffff800430c756 mach_kernel : __ZN10IOWorkLoop10threadMainEv + 0x36
0xffffffb55ab0bfa0 : 0xffffff8003bd319e mach_kernel : _call_continuation + 0x2e
      Kernel Extensions in backtrace:
         com.apple.iokit.IONetworkingFamily(3.4)[5D912FD8-C4CD-3CF6-B214-DF5BF7AB4FA0]@0xffffff8005cf4000-&gt;0xffffff8005d0bfff
         com.apple.driver.AppleVmxnet3Ethernet(1.0.10)[5FAEBB98-3551-319C-8075-EA4855C07B97]@0xffffff8005f42000-&gt;0xffffff8005f46fff
            dependency: com.apple.iokit.IONetworkingFamily(3.4)[5D912FD8-C4CD-3CF6-B214-DF5BF7AB4FA0]@0xffffff8005cf4000-&gt;0xffffff8005d0bfff
            dependency: com.apple.iokit.IOPCIFamily(2.9)[1B194276-D13F-32DD-8B6D-4751C1C73603]@0xffffff8005f55000-&gt;0xffffff8005f86fff

Process name corresponding to current thread (0xffffff915cabbb30): kernel_task
Boot args: kcsuffix=release wdt=-1 serial=5 debug=0x10012a kasan.checks=4294967295 -v keepsyms=1 amfi_get_out_of_my_way=1 tlbto_us=0 vti=9

Mac OS version:
23D56

Kernel version:
Darwin Kernel Version 23.3.0: Wed Dec 20 21:28:58 PST 2023; root:xnu-10002.81.5~7/RELEASE_X86_64
Kernel UUID: 8C96896D-43A3-3BF0-8F4C-4118DA6AC9AA
roots installed: 0
KernelCache slide: 0x0000000003800000
KernelCache base:  0xffffff8003a00000
Kernel slide:      0x00000000038e0000
Kernel text base:  0xffffff8003ae0000
__HIB  text base: 0xffffff8003900000
</panic></pre>

<p>-ravi</p>

<p>June 19, 2024</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Notes on Tajikistan (154 pts)]]></title>
            <link>https://mattlakeman.org/2024/06/20/notes-on-tajikistan/</link>
            <guid>40741068</guid>
            <pubDate>Thu, 20 Jun 2024 17:24:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/">https://mattlakeman.org/2024/06/20/notes-on-tajikistan/</a>, See on <a href="https://news.ycombinator.com/item?id=40741068">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-3394">

	
	<!-- .entry-header -->


			<div>

			<p><img data-attachment-id="3395" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/tajikistan-map-boundaries-cities-locator/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/tajikistan-map-boundaries-cities-locator.webp" data-orig-size="1600,1325" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Tajikistan-map-boundaries-cities-locator" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/tajikistan-map-boundaries-cities-locator.webp?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/tajikistan-map-boundaries-cities-locator.webp?w=760" src="https://mattlakeman.org/wp-content/uploads/2024/05/tajikistan-map-boundaries-cities-locator.webp?w=760" alt="" width="760" height="629"></p>
<p>Over the summer, I spent about two weeks in Tajikistan, mostly in Dushanbe (the capital) and various points along the Pamir Highway, which borders Afghanistan and later leads into Kyrgyzstan.</p>
<p>This was my first time in central Asia and easily one of my most interesting trips in a while. Tajikistan is a fascinating mixture of Soviet, Islamic, Persian, steppe, and Himalayan culture, all rolled into one beautiful, weird, dysfunctional country, and I couldn’t get enough of it. So this essay will be similar to <a href="https://mattlakeman.org/2023/08/16/notes-on-mauritania/">Notes on Mauritania</a> and <a href="https://mattlakeman.org/2023/11/07/notes-on-guinea/">Notes on Guinea</a> with more of a focus on my day-to-day travel than the history.</p>

<p><a href="https://mattlakeman.org/wp-content/uploads/2024/06/img_8722.jpg"><img data-attachment-id="3585" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8722/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8722.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8722" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8722.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8722.jpg?w=760" src="https://mattlakeman.org/wp-content/uploads/2024/06/img_8722.jpg?w=760" alt="" width="760" height="570"></a></p>
<h2><strong><u>Overview</u></strong></h2>
<p>Population (2022) – 9.6 million</p>
<p>Population growth rate (2022) – 2.1%</p>
<p>Size – 55,251 square miles (a little bigger than Greece or New York)</p>
<p>GDP (nominal, 2022) – $10.5 billion</p>
<p>GDP growth rate (2022) – 8%</p>
<p>GDP per capita (nominal, 2022) – $1,050</p>
<p>GDP per capita (PPP, 2024) – $5,800</p>
<p>Inflation rate (2018-2023) – 3.8%-9%</p>
<p>Biggest export – Gold</p>
<p>Median age – 22</p>
<p>Life expectancy (2021) – 72</p>
<p>Founded (independence) – 1991</p>
<p>Religion (2020) – 96% Muslim (virtually all Sunni), 2% Christian (mostly Russian Orthodox)</p>
<p>Corruption Perceptions Index – Rank #162 (out of 180)</p>
<p>Heritage Index of Economic Freedom – Rank #137</p>
<p><img data-attachment-id="3400" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/stans/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/stans.jpg" data-orig-size="1000,750" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Stans" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/stans.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/stans.jpg?w=760" src="https://mattlakeman.org/wp-content/uploads/2024/05/stans.jpg?w=760" alt="" width="760" height="570"></p>
<h2><strong><u>The Stans</u></strong></h2>
<p>Ignorant people (like myself two months ago) tend to lump all the Stan countries together because they seemingly exist in a blank impossible-to-remember nebula on maps. So here’s a quick overview of the Stans – minus Pakistan and Afghanistan because everyone knows about them and thinks of them separately – to give a reference point for Tajikistan:</p>
<p><img data-attachment-id="3402" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/kaz/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/kaz.webp" data-orig-size="1600,1107" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Kaz" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/kaz.webp?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/kaz.webp?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/kaz.webp?w=760" alt="" width="760" height="526"></p>
<p><span>Kazakhstan</span>:</p>
<ul>
<li>Shaped like a large amorphous oval blob</li>
<li>The wealthiest of the bunch, lots of oil and gas (low-tier petrol state)</li>
<li>The most ethnically and culturally Russian but the natives are ethnically Turkic</li>
<li>Got independence from the USSR in 1991 and was run by the pre-independence Soviet leader until 2019 as a quasi-dictatorship (even now he retains power from the shadows)</li>
<li>Geography is mostly steppe (grassland plains), was once described to me by a person who had biked through 90% of the world as the most geographically boring country on earth</li>
<li>The government and locals don’t like when you bring up <a href="https://www.imdb.com/title/tt0443453/">Borat</a></li>
</ul>
<p><img data-attachment-id="3404" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/uzb/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/uzb.webp" data-orig-size="1600,1150" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="UZB" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/uzb.webp?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/uzb.webp?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/uzb.webp?w=760" alt="" width="760" height="546"></p>
<p><span>Uzbekistan</span>:</p>
<ul>
<li>Shaped like a fucked up parallelogram with sideways Italy sticking out of it</li>
<li>Second wealthiest of the bunch but far poorer than Kazakhstan, lots of natural gas to the point where most of their cars run on it</li>
<li>Culturally/linguistically Turkic</li>
<li>Got independence from the USSR in 1991 and was run by the (particularly brutal) pre-independence Soviet leader until 2016 as a quasi-dictatorship, has since economically opened up to the world and is doing pretty well</li>
<li>Lots of desert in the west, lots of mountains in the east, has most of the now-dead Aral Sea</li>
<li>Claims to be the successor state of the empire of <a href="https://en.wikipedia.org/wiki/Timur">Timur the Lame</a></li>
</ul>
<p><img data-attachment-id="3405" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/kyr/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/kyr.gif" data-orig-size="1600,1327" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="KYR" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/kyr.gif?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/kyr.gif?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/kyr.gif?w=760" alt="" width="760" height="630"></p>
<p><span>Kyrgyzstan</span>:</p>
<ul>
<li>Shaped like a squid</li>
<li>Third wealthiest of the bunch (ie. quite poor)</li>
<li>Culturally/linguistically Turkic</li>
<li>Got independence from the USSR in 1991 and was run by the pre-independence Soviet leader until 2010 as a quasi-dictatorship, has been a very unstable oligarchic democracy ever since</li>
<li>Geographically looks shockingly similar to Switzerland, basically all mountains with and valleys, competes with Tajikistan to be the prettiest of the Stans in terms of natural scenery</li>
</ul>
<p><img data-attachment-id="3406" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/tur/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/tur.gif" data-orig-size="1600,1327" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="TUR" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/tur.gif?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/tur.gif?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/tur.gif?w=760" alt="" width="760" height="630"></p>
<p><span>Turkmenistan</span>:</p>
<ul>
<li>Shaped like a bent and somewhat rounded rectangle</li>
<li>Technically the second wealthiest of the bunch due to huge natural gas exports but no one counts Turkmenistan because it’s almost completely cut off from the rest of the world politically, economically, and socially</li>
<li>Culturally/linguistically Turkic</li>
<li>Got independence from the USSR in 1991 and was run by the pre-independence Soviet leader with a difficult-to-pronounce name (<a href="https://en.wikipedia.org/wiki/Saparmurat_Niyazov">Saparmurat Niyazov</a>) until 2006, then another leader with an unpronounceable name (<a href="https://en.wikipedia.org/wiki/Gurbanguly_Berdimuhamedow">Gurbanguly Berdimuhamedow</a>) took over until 2022, and his son with an unpronounceable name (<a href="https://en.wikipedia.org/wiki/Serdar_Berdimuhamedow">Serdar Berdimuhamedow</a>) has ruled ever since</li>
<li>All three post-independence rulers were Kim Jong Un-style crazy cult of personality purveyors which lent Turkmenistan the nickname “<a href="https://www.nknews.org/2022/11/how-north-korea-and-turkmenistans-extreme-personality-cults-align-and-differ/">the North Korea of Central Asia</a>“</li>
<li>Full of weird laws like a <a href="https://dancingpandas.com/2023/05/turkmenistan-bizarre-country/">ban on lip-synching</a> and traditional clothing mandates and outlawing the circus</li>
<li>Would love to go to it but getting a visa is supposed to be difficult and I didn’t have time</li>
</ul>
<p><img data-attachment-id="3395" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/tajikistan-map-boundaries-cities-locator/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/tajikistan-map-boundaries-cities-locator.webp" data-orig-size="1600,1325" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Tajikistan-map-boundaries-cities-locator" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/tajikistan-map-boundaries-cities-locator.webp?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/tajikistan-map-boundaries-cities-locator.webp?w=760" src="https://mattlakeman.org/wp-content/uploads/2024/05/tajikistan-map-boundaries-cities-locator.webp?w=760" alt="" width="760" height="629"></p>
<p><span>Tajikistan</span>:</p>
<ul>
<li>Shaped like nonsense</li>
<li>Poorest and least economically developed, much of the countryside doesn’t even have electricity</li>
<li>Meager economic production from gold and coal and aluminum, most of which is mined by the Chinese for a cut of the profits</li>
<li>Culturally/linguistically <strong>Persian</strong>, the Tajik language is a derivation of Farsi</li>
<li>Got independence from the USSR in 1991 and had some power struggles until a Soviet guy took over in 1994 and then won a brutal civil war against a coalition of Islamic extremists and has been running the country ever since</li>
<li>Geography is almost all mountains (50% of the land is above 9,800 feet)</li>
</ul>
<p><img data-attachment-id="3552" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6416/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6416.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714923076&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;640&quot;,&quot;shutter_speed&quot;:&quot;0.01&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6416" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6416.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6416.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6416.jpg?w=760" alt="" width="760" height="507"></p>
<h2><strong><u>Wealth</u></strong></h2>
<p>The per capita GDP of Tajikistan lists between $1,050 and $1,200, putting it around the bottom 30 or 40 poorest countries on earth. Going off <a href="https://data.worldbank.org/indicator/NY.GDP.PCAP.CD">World Bank numbers</a>, Tajikistan is in the same per capita wealth league as Ethiopia, Sudan, Myanmar, Rwanda, and Uganda, and its wealth level is about half as much as that of <a href="https://mattlakeman.org/2023/08/16/notes-on-mauritania/">Mauritania</a>, <a href="https://mattlakeman.org/2023/10/09/notes-on-ghana/">Ghana</a>, Kenya, Cambodia, and Nicaragua.</p>
<p>I was aware of these figures when I stepped off the plane and was quite surprised by what I saw in Dushanbe, Tajikistan’s capital. After leaving a very Soviet airport, I was driven through downtown Dushanbe, which looks like this:</p>
<p><img data-attachment-id="3436" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6292/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6292.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714651717&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;80&quot;,&quot;iso&quot;:&quot;1000&quot;,&quot;shutter_speed&quot;:&quot;0.0041666666666667&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6292" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6292.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6292.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6292.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3479" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6279/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6279.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714651214&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;69.8&quot;,&quot;iso&quot;:&quot;800&quot;,&quot;shutter_speed&quot;:&quot;0.0047619047619048&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6279" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6279.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6279.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6279.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3455" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6044/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6044.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714557753&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;69.8&quot;,&quot;iso&quot;:&quot;500&quot;,&quot;shutter_speed&quot;:&quot;0.0047619047619048&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6044" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6044.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6044.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6044.jpg?w=760" alt="" width="760" height="507"></p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8548.jpg"><img data-attachment-id="3469" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8548/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8548.jpg" data-orig-size="3024,4032" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8548" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8548.jpg?w=225" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8548.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8548.jpg?w=760" alt="" width="760" height="1013"></a></p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8578.jpg"><img data-attachment-id="3465" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8578/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8578.jpg" data-orig-size="3024,4032" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8578" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8578.jpg?w=225" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8578.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8578.jpg?w=760" alt="" width="760" height="1013"></a></p>
<p>Sure, this is the dead center of the capital so you’d expect it to be significantly wealthier than the rest of the country, but still, the scale of development in Dushanbe is <em>striking</em> for a $1,000-$1,2000 GDP per capita nation. With the arguable exception of Nairobi in Kenya, the capitals of even the nations with 2X GDP per capitas don’t compare to Dushanbe. Here’s Nairobi:</p>
<figure data-shortcode="caption" id="attachment_3471" aria-describedby="caption-attachment-3471"><img data-attachment-id="3471" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/nairobi-3/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/nairobi-3.webp" data-orig-size="1920,960" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Nairobi 3" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/nairobi-3.webp?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/nairobi-3.webp?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/nairobi-3.webp?w=760" alt="" width="760" height="380"><figcaption id="caption-attachment-3471"><a href="https://yellowzebrasafaris.com/us/kenya/areas-experiences/other-areas/nairobi/" rel="nofollow">https://yellowzebrasafaris.com/us/kenya/areas-experiences/other-areas/nairobi/</a></figcaption></figure>
<p>Here’s Accra in Ghana:</p>
<figure data-shortcode="caption" id="attachment_3472" aria-describedby="caption-attachment-3472"><img data-attachment-id="3472" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/accra/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/accra.jpg" data-orig-size="800,598" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Accra" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/accra.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/accra.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/accra.jpg?w=760" alt="" width="760" height="568"><figcaption id="caption-attachment-3472"><a href="https://en.wikipedia.org/wiki/Accra" rel="nofollow">https://en.wikipedia.org/wiki/Accra</a></figcaption></figure>
<p>Here’s Phnom Penh in Cambodia:</p>
<figure data-shortcode="caption" id="attachment_3474" aria-describedby="caption-attachment-3474"><img data-attachment-id="3474" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/pp/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/pp.jpg" data-orig-size="1000,667" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="PP" data-image-description="" data-image-caption="<p>https://stock.adobe.com/images/aerial-view-of-the-skyline-of-downtown-phnom-penh-in-phnom-penh-cambodia/549186086</p>
" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/pp.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/pp.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/pp.jpg?w=760" alt="" width="760" height="507"><figcaption id="caption-attachment-3474"><a href="https://stock.adobe.com/images/aerial-view-of-the-skyline-of-downtown-phnom-penh-in-phnom-penh-cambodia/549186086" rel="nofollow">https://stock.adobe.com/images/aerial-view-of-the-skyline-of-downtown-phnom-penh-in-phnom-penh-cambodia/549186086</a></figcaption></figure>
<p>Here’s Nouakchott in Mauritania:</p>
<p><img data-attachment-id="3476" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/nouakchott/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/nouakchott.jpg" data-orig-size="1280,960" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Nouakchott" data-image-description="<p>https://en.wikipedia.org/wiki/Nouakchott</p>
" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/nouakchott.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/nouakchott.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/nouakchott.jpg?w=760" alt="" width="760" height="570"></p>
<p>Here’s Managua in Nicaragua:</p>
<figure data-shortcode="caption" id="attachment_3477" aria-describedby="caption-attachment-3477"><img data-attachment-id="3477" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/nicaragua/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/nicaragua.jpg" data-orig-size="1200,630" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Nicaragua" data-image-description="<p>https://www.kayak.com/Dollar-Car-Rentals-Managua.ADOLLAR.4479.cl.ksp</p>
" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/nicaragua.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/nicaragua.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/nicaragua.jpg?w=760" alt="" width="760" height="399"><figcaption id="caption-attachment-3477"><a href="https://www.kayak.com/Dollar-Car-Rentals-Managua.ADOLLAR.4479.cl.ksp" rel="nofollow">https://www.kayak.com/Dollar-Car-Rentals-Managua.ADOLLAR.4479.cl.ksp</a></figcaption></figure>
<p>Once you get outside Dushanbe, especially into the more rural areas, it really does look like mid-to-lower-tier African poverty and the numbers start to make more sense. Here are a few random villages:</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8902.jpg"><img data-attachment-id="3499" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8902/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8902.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8902" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8902.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8902.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8902.jpg?w=760" alt="" width="760" height="570"></a></p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8889.jpg"><img data-attachment-id="3501" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8889/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8889.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8889" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8889.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8889.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8889.jpg?w=760" alt="" width="760" height="570"></a></p>
<p><img data-attachment-id="3564" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf7057/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7057.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;5.6&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1715539766&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;42.9&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.0014705882352941&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF7057" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7057.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7057.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7057.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3581" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf7052/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7052.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;5.6&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1715539668&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;17.1&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.00090909090909091&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF7052" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7052.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7052.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7052.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3566" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf7043/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7043.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;5.6&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1715457377&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.00055555555555556&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF7043" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7043.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7043.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7043.jpg?w=760" alt="" width="760" height="507"></p>
<p>These villages only had electricity for about four-to-six hours per day, had limited running water, no sewage, and used coal stoves for heat. Virtually all local economic activity is based on livestock, but often more money comes in through remittances from migrant workers in Russia or Europe. In 2014, Tajikistan was <a href="https://en.wikipedia.org/wiki/Tajikistan#Economy">the most-remittance based economy on earth</a>, amounting to almost half of its GDP. The countryside is dotted with half-finished concrete homes which I was told were the long-term retirement plans of Tajiks working abroad; they build their structures for a few months each year over many years or decades using trickles of funds earned from abroad. When the structures are finished, they prepare them to be their permanent homes once they retire from migrant work.</p>
<p>Aside from the usual developing country trend of concentrating wealth in the capital due to corruption and asset hoarding, what explains the discrepancy between the apparent affluence of Dushanbe and the blatant poverty of the rest of the country?</p>
<p>As someone who has traveled through a lot of developing nations over the last few years, the by-now boring and repetitious answer is… China. A local expert described Tajikistan to me as a “Chinese colony.”</p>
<p>Unlike the oil and gas-rich Kazakhstan, Uzbekistan, and Turkmenistan, China and Tajikistan’s partnership started over geopolitics rather than economics. In 2011, Tajikistan <a href="https://www.bbc.com/news/world-asia-pacific-12180567">ceded 386 square miles</a> to China, pretty much all of which was desolate, unpopulated Himalayan mountains. In return, China agreed to give up its demands for 11,000 square miles of Tajikistani land that dates back to an 1884 claim made by the Qing Dynasty.</p>
<figure data-shortcode="caption" id="attachment_3408" aria-describedby="caption-attachment-3408"><img data-attachment-id="3408" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/ceded-land/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/ceded-land-e1717169861986.png" data-orig-size="424,635" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Ceded Land" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/ceded-land-e1717169861986.png?w=200" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/ceded-land-e1717169861986.png?w=424" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/ceded-land-e1717169861986.png" alt="" width="424" height="635"><figcaption id="caption-attachment-3408"><a href="https://www.researchgate.net/figure/Map-Depicting-the-Ceded-Lands-to-China-in-the-Tajik-Media-Authors-design-based-on_fig1_331020439" rel="nofollow">https://www.researchgate.net/figure/Map-Depicting-the-Ceded-Lands-to-China-in-the-Tajik-Media-Authors-design-based-on_fig1_331020439</a></figcaption></figure>
<p>But China has more pressing geopolitical concerns regarding Tajikistan. To Tajikistan’s east lies the Chinese region of Xinjiang, which is dominated by Muslim Uyghurs who have historically revolted against the communist government and are still in the midst of an awful reeducation campaign; to the nation’s south lies Taliban-controlled Afghanistan; and within Tajikistan there was a brutal civil war in the 1990s which nearly resulted in radical Islamic factions taking over the government. So for all its weirdness and faults, China sees the current secular authoritarian quasi-dynastic regime of Tajikistan as a bulwark against Islamic chaos on one of its most vulnerable borders.</p>
<p>Thus China has been seemingly quite generous with Tajikistan despite the lack of significant economic output throughout most of its modern history. The aid/grant/loan money began to trickle into Tajikistan after the settlement of the border question in the early 2010s. In 2013, the Belt and Road Initiative was formally adopted, and Tajikistan was swept up along with the rest of Central Asia, with China becoming <a href="https://eurasianet.org/china-makes-fresh-forays-into-gold-mining-sector-in-tajikistan">by far the country’s largest source of foreign direct investment</a> (FDI). In 2016, China <a href="https://eurasianet.org/china-stepping-up-military-cooperation-with-tajikistan">installed a military base in eastern Tajikistan</a>. In 2021, China established special military units (allegedly only consisting of Tajiks) that seem to be tasked with rapidly putting down potential Islamic rebellions in the remote Pamir region. Also in 2021, Chinese investment reached $211 million, or 62% of FDI.&nbsp; In 2023, China built a “<a href="https://www.rferl.org/a/china-observation-station-tajikistan-climate-surveillance/32482428.html">super observation station</a>” in Tajikistan, allegedly to monitor extreme weather patterns and climate change trends.</p>
<p>By 2022, China held $2 billion in Tajikistani debt, <a href="https://www.statista.com/statistics/531965/national-debt-of-tajikistan/#:~:text=The%20national%20debt%20in%20Tajikistan,a%20new%20peak%20in%202029.">more than half its total debt at the time</a>. What has Tajikistan been doing with all this borrowed money?</p>
<p>In the early 2010s, the Tajik government spent <a href="https://english.ahram.org.eg/NewsContent/3/12/20726/Business/Economy/Tajiks-splash-out--million-on-independence-pomp.aspx">more than $210 million</a> (more than 1/10<sup>th</sup> of its annual budget) on developing Dushanbe, but the vast majority of this funding went toward big government palaces and monuments (more on that later). I can’t find good data on recent agreements between Tajikistan and China, but my speculation is that there has been a <strong>dramatic</strong> ramp-up in funding for the former over the last few years. According to all the locals I spoke with, Dushanbe has undergone a seismic transformation recently; all of those high rises sprang up in the last two or three years. Virtually all of old downtown Dushanbe, which consisted of two-to-three story buildings, was demolished.</p>
<p>I’ve traveled through inland China, and new Dushanbe looks <em>exactly</em> like any one of those dozens of random Chinese cities that no one has heard of but which have 5+ million people and have undergone rapid development over the last decade. I’d bet serious money that Dushanbe’s new structures are based on Chinese plans and were mostly or entirely built by Chinese workers and money.</p>
<p>The catalyst for this new funding is likely recent mining developments. The Tajik economy as a whole has <a href="https://tradingeconomics.com/tajikistan/gdp">had impressive growth over the last decade</a>, rising from a GDP of $7 billion in 2016 to about $11 billion in 2023, mostly due to mining but also an increase in remittances prior to the Ukraine War. With some Chinese investment, Tajikistan fortuitously discovered significant gold deposits in 2011. Since then, production <a href="https://www.ceicdata.com/en/indicator/tajikistan/gold-production">has steadily ramped up</a> from 2,400 kg annually to almost 12,000 kg in 2022, which, while significant for humble Tajikistan, still leaves production at less than one third of Argentina, the <a href="https://en.wikipedia.org/wiki/List_of_countries_by_gold_production">20<sup>th</sup> largest gold producer in the world</a>. From its Soviet days, Tajikistan also has one of the largest aluminum production facilities on earth (<a href="https://en.wikipedia.org/wiki/Mining_in_Tajikistan#Aluminium">which consumes 40% of Tajikistan’s electricity</a>).</p>
<p>So my guess is that sometime in the last five years, China was granted some big mining concessions in exchange for development and infrastructure funds. My understanding is that the rest of the Stans also deal with China, but far more cautiously, and retain closer economic ties with Russia, though these relations have frayed to various degrees since the start of the Ukraine War.</p>
<p>(Note – like Uzbekistan and Kyrgyzstan, Tajikistan was largely relegated to cotton production by the USSR despite cotton being extremely water-intensive and the region having very little water [thus <a href="https://en.wikipedia.org/wiki/Aral_Sea?variant=zh-cn">leading to the death of the Aral Sea</a>]. Cotton is still a fairly significant portion of the Tajik economy, but its proportional value has been waning, and in 2023, the cotton industry <a href="https://cabar.asia/en/cotton-production-in-tajikistan-is-no-longer-profitable">was a net-loss for</a> the country.)</p>
<p><img data-attachment-id="3487" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6295/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6295.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714652424&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;400&quot;,&quot;shutter_speed&quot;:&quot;0.01&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6295" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6295.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6295.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6295.jpg?w=760" alt="" width="760" height="507"></p>
<h2><strong><u>Dushanbe</u></strong></h2>
<p>Dushanbe doesn’t get a lot of love from travellers but I appreciate Tajikistan’s capital. It’s a weird little city with its own quirks and is very much worth walking around for a few days.</p>
<p>Most capitals of developing countries tend to have way too much sprawl and traffic as old cities try to keep up with rapid development and population growth fueled by urbanization and capital inflows, leading to filthy urban nightmares like <a href="https://mattlakeman.org/2023/05/09/notes-on-nigeria/">Lagos</a> or <a href="https://mattlakeman.org/2023/11/07/notes-on-guinea/">Conakry</a>. Dushanbe has closer to the opposite problem where a fairly quaint city with a modest population is undergoing rapid top-down development but the economy and population are not keeping up.</p>
<p>The city only has a population of only about 1 million in a country of less than 10 million (the second largest city is only around 180,000). Kazakhstan’s Astana and Uzbekistan’s Tashkent also underwent rapid development recently, but both countries have far higher populations and have received some immigration from their neighbors. Meanwhile, Tajikistan has a sizeable net-emigration, and its few considerable wealth sources (basically just government-run mining companies) aren’t labor intensive enough to attract many Tajiks to the capital.</p>
<p>As a result, Dushanbe feels <em>depopulated</em>. The four-to-six-lane avenues running throughout the city in grids have almost no traffic. The brand new high-rises emanating from the city center have lots of luxury brands in their floor-level storefronts (mostly Russian and Chinese companies I think), but the middle and especially upper floors are almost all empty. There are a few moderately bustling street corners downtown and a few more when you get into the outskirts of the city where buildings rarely pass two-stories, but as a whole, Dushanbe is calm and quiet.</p>
<p>Which goes well with its tidiness. The sidewalks are invariably clean with almost no litter in sight until you get to the outskirts. The downtown high rises are impeccably maintained, and some peeling paint aside, even the old Soviet buildings still look good. The ample public parks are well-trimmed and a small army of landscapers patrol them for imperfections. Even the cars driving throughout Dushanbe seem oddly clean.</p>
<p>This is all by design. I’m not sure if it’s done for the sake of tourism or international prestige or vanity, but Dushanbe has a set of draconian tidiness laws. Anti-litter laws are strictly enforced with harsh fines. Cigarettes can only be smoked in special zones outdoors. Loud music is prohibited after 10 PM. Cars are legally required to be dirtless and mudless, which isn’t too difficult to maintain within Dushanbe, but right outside the city, the roads get dusty and filled with potholes, so a cottage industry of car washers have emerged on every road leading into the city to protect inhabitants from dirty car fines (and often bribes) eagerly handed down by the police.</p>
<p>The landmarks of Dushanbe lean a bit tin-pot dictatorish. Autocrats infamously <a href="https://finance-commerce.com/2017/05/autocrats-really-do-build-more-skyscrapers/">love to try to outdo each other</a> by building tall skyscrapers, but Tajikistan can’t afford to shell out <a href="https://www.chron.com/news/nation-world/slideshow/20-most-expensive-buildings-to-construct-142359.php">billions of dollars</a> on vanity projects, so it set its sights on humbler targets. Hence Dushanbe hosts what <a href="https://en.wikipedia.org/wiki/Dushanbe_Flagpole">was once the largest flagpole in the world</a>, constructed with a mere $3.5 million. It is 165 meters high, which I know not through Wikipedia, but because four separate Tajiks proudly quoted the figure to me without prompting.</p>
<p><img data-attachment-id="3433" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6302/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6302.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714653539&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.01&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6302" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6302.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6302.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6302.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3442" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6276/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6276.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714651185&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;80&quot;,&quot;iso&quot;:&quot;640&quot;,&quot;shutter_speed&quot;:&quot;0.0041666666666667&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6276" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6276.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6276.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6276.jpg?w=760" alt="" width="760" height="507"></p>
<p>Sadly, the Dushanbe flagpole lost its status as the world’s tallest in 2014, only three years after its construction, to the Jeddah Flagpole in Saudi Arabia, which I have already seen without knowing its illustrious status in the world flagpole standings:</p>
<figure data-shortcode="caption" id="attachment_3509" aria-describedby="caption-attachment-3509"><img data-attachment-id="3509" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/jeddah_fahne/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/jeddah_fahne.jpg" data-orig-size="1280,831" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Jeddah_Fahne" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/jeddah_fahne.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/jeddah_fahne.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/jeddah_fahne.jpg?w=760" alt="" width="760" height="493"><figcaption id="caption-attachment-3509"><a href="https://en.wikipedia.org/wiki/Jeddah_Flagpole" rel="nofollow">https://en.wikipedia.org/wiki/Jeddah_Flagpole</a></figcaption></figure>
<p>I have to admit that I find it kind of funny that Tajikistan spent $3.5 million to win an extremely petty international prestige project contest, and then it lost a few years later to a country with 30X the GDP per capita and 100X the GDP. Saudi Arabia’s lead lasted for seven years until Egypt took the top spot and Russia slid into second place. But the ultimate winner in this ongoing affair is <a href="https://trident-support.com/">Trident Support</a>, a San Diego-based company that has been making a killing <a href="https://trident-support.com/wp-content/uploads/2021/02/Flagpole-Location-Table-210210.pdf">building a lot of the largest flagpoles in the world</a>.</p>
<p>A more interesting Dushanbe landmark is the Independence Monument, which looks like… I don’t know. My best description to a blind man would be “a Central Asian scepter sticking 150 meters out of the ground.”</p>
<figure data-shortcode="caption" id="attachment_3449" aria-describedby="caption-attachment-3449"><img data-attachment-id="3449" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6237/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6237.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714649309&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.0083333333333333&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6237" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6237.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6237.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6237.jpg?w=760" alt="" width="760" height="507"><figcaption id="caption-attachment-3449">The “Premium Auto” setting on my camera had trouble with Dushanbe’s sunlight, so a lot of my photos came out too dark.</figcaption></figure>
<p><img data-attachment-id="3434" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6294/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6294.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714652383&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;21.2&quot;,&quot;iso&quot;:&quot;200&quot;,&quot;shutter_speed&quot;:&quot;0.01&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6294" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6294.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6294.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6294.jpg?w=760" alt="" width="760" height="507"></p>
<p>The cool thing about the Independence Monument is that no one goes there. I went in the middle of the day on a Tuesday and I was the only visitor. Inside is a multi-floor museum with Tajik art (both old and modern), a bunch of gift shops, some maps, and fifty portraits of the president (more on that later).</p>
<p>Throughout my entire 30 minute visit, I was basically stalked&nbsp;by a security guard. At first I thought he was just doing generic patrols while I wandered around, but he always stayed about 20-30 feet away from me while I meandered. Then, whenever I got to an elevator (I had to take three separate ones), he would walk up beside me, press the buttons, and make sure I got to the next floor, at which point he would resume his 20-30 foot distance shadowing. He never spoke to me until I got to the very top where there’s an excellent view of all Dushanbe. Then he said a few broken words to me in English for five minutes which concluded with asking me how much a visa to the US costs.</p>
<p><img data-attachment-id="3437" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6280/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6280.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714651350&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;500&quot;,&quot;shutter_speed&quot;:&quot;0.01&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6280" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6280.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6280.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6280.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3438" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6288/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6288.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714651410&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;500&quot;,&quot;shutter_speed&quot;:&quot;0.01&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6288" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6288.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6288.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6288.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3439" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6289/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6289.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714651470&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;29.2&quot;,&quot;iso&quot;:&quot;320&quot;,&quot;shutter_speed&quot;:&quot;0.01&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6289" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6289.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6289.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6289.jpg?w=760" alt="" width="760" height="507"></p>
<p>From the Independence Monument vantage point, there’s a good view of the heavily White House-inspired president’s home, known as the Palace of the Nation:</p>
<figure data-shortcode="caption" id="attachment_3570" aria-describedby="caption-attachment-3570"><img data-attachment-id="3570" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/palace-dushanbe/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/palace-dushanbe.jpg" data-orig-size="700,440" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Palace Dushanbe" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/palace-dushanbe.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/palace-dushanbe.jpg?w=700" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/palace-dushanbe.jpg" alt="" width="791" height="497"><figcaption id="caption-attachment-3570"><a href="https://www.alluringworld.com/palace-of-nations/" rel="nofollow">https://www.alluringworld.com/palace-of-nations/</a></figcaption></figure>
<p>Some <a href="https://en.wikipedia.org/wiki/Palace_of_the_Nation_(Dushanbe)#History">fun trivia</a> from Wikipedia:</p>
<blockquote><p>“In early 2006, the Dushanbe Synagogue and the local mikveh (ritual bath), kosher butcher, as well as Jewish schools were demolished by the government without compensation to make room for the new palace. After an international outcry, the government announced a reversal and said that would allow the synagogue to be rebuilt at its current site. However, in the final stages of the palace’s construction, the government destroyed the entire synagogue, leaving Tajikistan without a synagogue as it was the only one in the country (this resulted in the majority of Tajik Bukharan Jews having negative views of the Tajik government).”</p></blockquote>
<p>Another major Dushanbe landmark is the Tajikistan National Museum, which is impressive in scale (15,000 square meters of display halls) and design. Though, like the Independence Monument, it was nearly deserted when I visited. I saw maybe a dozen Russian tourists milling about, but otherwise it was just me and the 50 babushkas stationed throughout the museum making sure I didn’t steal any pottery shards.</p>
<p><img data-attachment-id="3430" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6307/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6307.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714654161&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;3200&quot;,&quot;shutter_speed&quot;:&quot;0.52631578947368&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6307" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6307.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6307.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6307.jpg?w=760" alt="" width="760" height="507"></p>
<p>One highlight was the modern history section which omits the Tajikistan Civil War that lasted five years in the 1990s and left up to 200,000 dead. The sole mention of the entire affair is on this plaque:</p>
<p><img data-attachment-id="3428" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6320/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6320.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714655612&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;39.3&quot;,&quot;iso&quot;:&quot;3200&quot;,&quot;shutter_speed&quot;:&quot;0.32258064516129&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6320" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6320.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6320.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6320.jpg?w=760" alt="" width="760" height="507"></p>
<p>The other highlight is a room that displays all the diplomatic gifts given to Tajikistan over the years. This includes a cool Soviet machine gun from Putin, a copy of a letter by Muhammad from Iran, and a mace from Saudi Arabia.</p>
<p><img data-attachment-id="3426" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6322/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6322.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714655809&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;3200&quot;,&quot;shutter_speed&quot;:&quot;0.25&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6322" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6322.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6322.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6322.jpg?w=760" alt="" width="760" height="507"></p>
<p>Here is Dushanbe’s (Tajikistan’s?) only Western fast food restaurant, a KFC that opened in 2021. I was told by a local that it was pretty big deal when it arrived and is still a favorite spot for young Tajiks.</p>
<figure data-shortcode="caption" id="attachment_3606" aria-describedby="caption-attachment-3606"><img data-attachment-id="3606" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/kfc/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/kfc.webp" data-orig-size="1280,960" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="KFC" data-image-description="" data-image-caption="<p>https://yandex.eu/maps/org/kfc/232568678596/gallery/?ll=68.791601%2C38.568556&amp;amp;photos%5Bbusiness%5D=232568678596&amp;amp;photos%5Bid%5D=urn%3Ayandex%3Asprav%3Aphoto%3AGJFwczrWcwQ2hthaiJVx6aqPf_suBf&amp;amp;z=16</p>
" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/kfc.webp?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/kfc.webp?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/kfc.webp?w=760" alt="" width="760" height="570"><figcaption id="caption-attachment-3606"><a href="https://yandex.eu/maps/org/kfc/232568678596/gallery/?ll=68.791601%2C38.568556&amp;photos%5Bbusiness%5D=232568678596&amp;photos%5Bid%5D=urn%3Ayandex%3Asprav%3Aphoto%3AGJFwczrWcwQ2hthaiJVx6aqPf_suBf&amp;z=16" rel="nofollow">https://yandex.eu/maps/org/kfc/232568678596/gallery/?ll=68.791601%2C38.568556&amp;photos%5Bbusiness%5D=232568678596&amp;photos%5Bid%5D=urn%3Ayandex%3Asprav%3Aphoto%3AGJFwczrWcwQ2hthaiJVx6aqPf_suBf&amp;z=16</a></figcaption></figure>
<p>In the process of remodeling the city, the government has been shutting down a lot of the tradition bazaars. One big market remains and it looks really cool:</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8556.jpg"><img data-attachment-id="3467" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8556/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8556.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8556" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8556.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8556.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8556.jpg?w=760" alt="" width="760" height="570"></a></p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8571.jpg"><img data-attachment-id="3415" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8571/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8571.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8571" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8571.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8571.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8571.jpg?w=760" alt="" width="760" height="570"></a></p>
<p>A final interesting landmark is the Dushanbe-2 power station, a coal plant that supplies much of the city’s energy. I like the colors, it’s a nice touch:</p>
<p><img data-attachment-id="3443" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6264/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6264.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714651036&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;80&quot;,&quot;iso&quot;:&quot;640&quot;,&quot;shutter_speed&quot;:&quot;0.0041666666666667&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6264" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6264.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6264.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6264.jpg?w=760" alt="" width="760" height="507"></p>

<p><img data-attachment-id="3557" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6385/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6385.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714666625&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;3200&quot;,&quot;shutter_speed&quot;:&quot;0.016666666666667&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6385" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6385.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6385.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6385.jpg?w=760" alt="" width="760" height="507"></p>
<h2><strong><u>The People</u></strong></h2>
<p>If I had a nickel for every time a man from a third world country told me about his marital infidelity with no prompting, I’d have… maybe 30-40 cents.</p>
<p>My latest nickel came from a talkative Tajikistani entrepreneur who spends half of every year in Moscow for business, but also to sleep around with his many mistresses. He claimed to have been faithful to his wife until he was seduced by a beautiful Russian woman who may or may not be related to a prominent Russian oligarch, and then that unleashed a flood of infidelity which he couldn’t stop now even if he wanted to. He was quite eager to take me and an Australian in my hostel out clubbing, and I got the sense that even the current proximity of his wife would not be a hindrance.</p>
<p>Of course, I am not going to write off the marital loyalties of an entire country based on a single testimony, especially since I have counter-testimony. I spent an enjoyable evening at a bar with an early 30-something Tajik guy who had lived in the US for the last 10 years (mostly as an Uber driver) and spent three months per year back in Dushanbe. Somehow marital infidelity came up with him, and though he wasn’t married, he was quite emphatic that it was very rare in Tajikistan, in part because men like him were openly paranoid about their wives and imposed a sort of <a href="https://www.kaplanhecker.com/newsroom/think-pence-rule-good-idea-think-again">Pence Rule</a> on all the other men, both within and outside their social circles.</p>
<p>We talked at length about the US and Tajikistan and he explained that though he loved his homeland, he was quite happy living in the US where he could make a far better living. I inferred that his family was middle class or even upper-middle class by Tajik standards given that they had managed to get him to the US and owned multiple properties in Dushanbe (which were presently rapidly appreciating in value), but they weren’t politically connected and therefore couldn’t get rich at home. He confirmed that his Uber driving was pulling a lot of the family weight to take care of his now-retired parents.</p>
<p>The other big weight-puller was his older brother, the eldest of five siblings. This brother didn’t make much money (as some sort of police informant if I understand correctly) but he lived at home with his parents and would never move out until the parents died. My bar companion explained that this was not only a normal arrangement for an eldest Tajik son but an explicit duty for all elder sons in Tajikistan. I pointed out that such a requirement sounds extraordinarily restrictive and even repressive for first-borns, but my companion dismissed this notion (probably as American selfishness and atomism) and opined on the moral value of taking care of one’s parents. He was a stark believer in this aspect of Tajik culture and tradition.</p>
<p>I asked what would happen if a first-born son refused this duty. He said it would probably result in him being disgraced and disowned. I asked how his parents were ok with him moving to the other side of the world while his brother stayed home forever, and he said that having a child move to the US was too good of an opportunity for any Tajik family to pass up.</p>
<p>I asked my companion about Tajik government corruption. He said the military was uncorrupt and shouldn’t be fucked with, but the cops were generally assholes and will ask for bribes during many encounters. And of course, the President and his entire family are extremely corrupt and control the entire economy illicitly, but he still maintained a positive opinion of the political leadership because they didn’t take too much and recently the economy was booming so they seemed to be doing a good job. Plus, he said there was a major lower-level corruption crackdown over the last few years, and police harassment of businesses, both big and small, had been virtually eradicated, which was great for the economy and the common man, so the President and his cronies seemed to have their priorities straight.</p>
<p>I asked if I should be worried about the cops, and I was assured that I should be less worried than anyone else. Allegedly, for years the orders from the top have been to <em>never</em> fuck with foreigners in Tajikistan. The President is evidently very concerned with Tajikistan’s appearance to the outside world, hence the draconian cleanliness laws in Dushanbe and rampant construction, and hence foreigners are never to be extorted by greedy cops. I, appearing Russian to locals, would be considered a foreigner on sight.</p>
<p>I asked about the criminal justice system and I was told there wasn’t much of a formal one. My companion explained that most matters were handled internally by families. For instance, if a 20-something got in a fight with another 20-something and the cops got involved, the police would most likely contact the families and let the parents and brothers sort that shit out with a warning not to cause trouble again. The families would enforce order through shaming, threats of social ostracization, and possibly physical violence.</p>
<p>(On this particular point and some others, I wondered whether my companion had an overly rosy and maybe sanitized view of Tajik culture, which isn’t uncommon for immigrants to have toward their homeland.)</p>
<p>Both the guy cheating on his wife and my drinking companion were <em>extremely</em> friendly. Both went above and beyond in reaching out to me, offering me a place to stay, advice on where to go and what to see, connections to other people, and both wanted to hang out with me as much as possible. I got the sense that they both loved the idea of an American seeing their rarely visited and internationally neglected homeland.</p>
<p>I also got that sense extremely strongly from a bunch of other locals even when they spoke little-to-no-English. Most of the time, I got little attention on the streets of Dushanbe because everyone assumed I was a random Russian (tourist or Tajikistan inhabitant), but as soon as I opened my mouth to say “niet Ruski,” I became an instant micro-celebrity. They would deduce that I only spoke English, then ask where I was from, and my answer of “America” was invariably met with smiles and wide eyes and usually a handshake.</p>
<p>In one instance, I was in a fort museum in the countryside accompanied by three Europeans. Two tour guides asked in very broken English where we were from. The first European answered and the guides politely smiled and nodded. The second European answered and the guides politely smiled and nodded. The third European answered and the guides politely smiled and nodded. I answered and the guides said “American!” and got giant smiles on their faces and their eyes blew up and they shook my hand and they asked me a bunch of questions, and then one of them yelled across the museum to get the attention of this high school kid who was studying English and he spent the rest of the museum visit following me around and asking me questions excitedly. At the end, after they had all shaken my hand again and said goodbyes in broken English eight times, I had to apologize to the Europeans for their misfortune of coming from inferior countries that didn’t warrant such adoration.</p>
<p>(I am kidding of course. I spent nine days with the three Europeans and not only were they all delightful, but they got ample revenge on me by chronically spouting anti-American sentiment in a 3-on-1 gang-up. In my experience as a traveller, I have heard more unironic anti-American talk in Western Europe than anywhere else on earth.)</p>
<p>I wish I had talked to more Tajiks, but aside from the guy who was cheating on his wife, my drinking companion and two of his friends, and my driver on the Pamir Highway, it was difficult to find any locals that spoke English, even at a cursory level. I’m told that younger Tajiks can speak it pretty well, but I didn’t have many interactions with them.</p>
<p><img data-attachment-id="3409" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/beetles/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/beetles.jpg" data-orig-size="2048,1411" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Beetles" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/beetles.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/beetles.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/beetles.jpg?w=760" alt="" width="760" height="524"></p>
<p>One final note on the locals – due to an apparent combination of local fashion sensibilities and I guess fabulous Persian hair, a lot of Tajik men have a hair style that I can only describe as “Beetles.” And it’s not just the younger men either; older guys and even men who definitely work in the government have this groovy hairstyle.</p>
<p><img data-attachment-id="3572" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6972/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6972.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1715434590&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;17.1&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.0125&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6972" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6972.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6972.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6972.jpg?w=760" alt="" width="760" height="507"></p>
<h2><strong><u>Religion</u></strong></h2>
<p>Tajikistan’s population is almost entirely Muslim, as is its long-time president and entire government. And yet, it is not considered a very tolerant state for Muslims. From a <a href="https://www.uscirf.gov/sites/default/files/2023-12/2023%20Tajikistan%20Country%20Update.pdf">2023 US government report</a>:</p>
<blockquote><p>“As part of an effort to maintain complete, authoritarian control over all segments of society, the government of Tajikistan commits systematic, ongoing, and egregious violations of religious freedom. The Tajik government has placed undue restrictions on all facets of religious practice, including prayer, celebrations, education, and rituals. Those who fail to comply with Tajikistan’s regulations can face severe penalties. While Tajikistan’s religious freedom violations negatively impact all religious groups, they especially target the Hanafi Sunni Muslim majority.”</p></blockquote>
<p>Christianity is primarily based around the teachings of a pacifist hippy who famously preached a spiritual separation of church and state with, “Render to Caesar the things that are Caesar’s, and to God the things that are God’s.” In contrast, Islam is based on the teachings of a head-of-state (ie. warlord) whose words and actions were said to be the infallible projections of god. Hence, Islam as a doctrinal belief system has a lot more to say about the workings of government than Christianity or the vast majority of religions. This has resulted in an unusually intense intertwining of state and religion throughout most of the Islamic world.</p>
<p>There have been exceptions: most notably the modern Turks and the Baathists in the Middle East who led the secular regimes of Iraq, Egypt, and (still) Syria. Central Asia is another exception grouping. The Islamic elements of the Stans were kept under low key suppression by the Soviet Union for 80 years, partially due to the general atheism of the USSR, and partially because local Islamic elements attempted an unsuccessful widespread revolt in Central Asia against Czarist Russia and then the USSR in the 1910s and 1920s known as the <a href="https://en.wikipedia.org/wiki/Basmachi_movement">Basmachi movement</a>.</p>
<p>(Random factoid – the Ottoman Empire entered World War I under the direction of the Young Turks, a group of nationalist liberal-ish modernizers led by a triumvirate of co-dictators, one of whom was <a href="https://en.wikipedia.org/wiki/Enver_Pasha#Last_years">Enver Pasha</a>. At the end of WWI, Enver fled the country and ended up in Soviet Moscow where he somehow finagled his way into a military command to suppress the Basmachi movement in Central Asia. But he quickly betrayed the USSR, joined the Basmachis, and led guerrilla fighting against the Soviets until he was machine gunned to death in 1922 near Dushanbe.)</p>
<p>When the USSR fell, each Stan got independence under their local Soviet leadership. Without the protective umbrella of Moscow, each government had to figure out how to maintain its secular authoritarian states over more religious Islamic populations. All embraced anti-Islamic suppression to varying degrees (most harshly in Uzbekistan) while proclaiming marginal adherence to the faith to placate the masses. Despite some terrorist movements and a few terrorist attacks, the former Soviet Stan governments have largely evaded serious domestic Islamic resistance to their rules.</p>
<p>That is, with the exception of Tajikistan. After independence, the local Soviet leadership couldn’t get its shit together (more on that later) and the country fell into a civil war from 1992 to 1997. The details of the war are rather sparse online, but the rough high-level conflict consisted of the authoritarian secular government holding onto the Soviet state apparatus in a few cities while various Islamic groups seized the vast, mountainous, sparsely populated countryside. Numerous attempts were made to take the cities and some almost succeeded, but they could never quite pull it off. The rebels were supported by Iran, Al Qaeda, and other Islamic terrorist groups in central Asia, while the government held on for dear life with support from Russia, Belarus, and the other Stan governments. The listed death toll wildly varies from 20,000 to 200,000, but there’s more agreement on about 10% of the population being displaced and the already meager Tajik economy being wrecked.</p>
<p>In 1997, the United Nations brokered a peace deal that left the government in power but promised the opposition 30% of the legislature. The government signed the deal and then slowly reneged until the last prominent opposition leaders were rounded up and arrested in 2015. Since then, the government has maintained its Soviet-style secular authoritarianism with relative stability and overt-but-not-extreme suppression of Islam within its borders.</p>
<p><a href="https://www.uscirf.gov/sites/default/files/2023-12/2023%20Tajikistan%20Country%20Update.pdf">For instance</a>, the <a href="https://web.archive.org/web/20110605193337/http:/www.eurasiareview.com/tajik-officials-have-closed-1500-mosques-since-start-of-2011-02062011/">government shut down</a> 1,500 mosques in 2011. Since around that time, the government has required special permits to build new mosques and for individuals to join Islamic organizations, and existing groups are closely monitored by the “Committee on Religion, Regulation of Traditions, Celebrations, and Ceremonies.” At least back in 2011, mosque sermons were limited to 15 minutes.</p>
<p>There are legal restrictions on Islamic education, with particular limits on getting foreign religious education, and the publishing of Islamic writing. Salafism, an extremely conservative form of Sunni Islam, is outright banned. <a href="https://www.aljazeera.com/news/2016/1/21/tajikistan-shaves-13000-beards-in-radicalism-battle">Arabic names are banned</a> and cousin marriage (which is traditionally sanctioned in Islam) is banned. And if I’m reading the US report correctly, it seems to be illegal in Tajikistan for parents to allow their children to be involved in Islam at all unless they get a special permit from the government.</p>
<figure data-shortcode="caption" id="attachment_3611" aria-describedby="caption-attachment-3611"><img data-attachment-id="3611" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/beard/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/beard.webp" data-orig-size="976,700" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Beard" data-image-description="" data-image-caption="<p>https://www.bbc.com/news/world-asia-35372754</p>
" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/beard.webp?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/beard.webp?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/beard.webp?w=760" alt="" width="760" height="545"><figcaption id="caption-attachment-3611"><a href="https://www.bbc.com/news/world-asia-35372754" rel="nofollow">https://www.bbc.com/news/world-asia-35372754</a></figcaption></figure>
<p>One of the few things Tajikistan is slightly known for internationally is its ban on long beards, which started in the mid-2010s, and depending on the source, is either an official law or an informal decree from the president that is nonetheless enforced by the police. I won’t claim to understand the specifics, but long beards are associated with conservative Islam while being clean shaven is associated with good old fashioned Soviet secularism. Supposedly, the Tajik government has arrested hundreds of thousands of men for beard violations and forcefully shaved <a href="https://www.bbc.com/news/blogs-news-from-elsewhere-41580962">at least 13,000 men</a> in 2016 in a single region. Beard permits are available for actors and other men who have good secular reasons for needing hair on their faces.</p>
<p>When I talked to a few (very secular) locals at a bar about the beard ban, they told me that (even if I wasn’t currently clean shaven) I had nothing to worry about. The police would assume I was a Russian and wouldn’t mess with me anyway, but even if I grew out a beard, I don’t look Islamic enough. It so happened that one of these Tajiks at the bar actually did have a bit of a beard, so I asked if it was illegal, and he said it probably was, but that he wasn’t concerned because he also gave off un-Islamic vibes with his motorcycle, leather jacket, and because he was on his fourth beer of the night.</p>
<p>So maybe the beard ban isn’t heavily enforced anymore. Regardless, I did get the strong sense that religion is not a big deal in Tajikistan, or at least it isn’t openly and enthusiastically practiced compared to the dozens of Islamic countries I have visited in the Middle East, West Africa, and Southeast Asia. I literally never saw a Tajik in prayer. I never once heard the Islamic call to prayer from mosques (I’m not even sure if it’s legal). I barely saw any mosques besides the Central Mosque in Dushanbe, which <span>is</span> <a href="https://en.wikipedia.org/wiki/Astana_Grand_Mosque#:~:text=The%20Central%20Mosque%20(Kazakh%3A%20%D0%90%D1%81%D1%82%D0%B0%D0%BD%D0%B0,the%20largest%20in%20the%20world.">was</a> the largest in Central Asia and was <a href="https://eurasianet.org/tajikistan-qatar-helping-dushanbe-build-massive-mosque">largely funded by Qatar</a> (I guess the president’s desire for prestige projects outweighs his secularism).</p>
<p>Bars and liquor stores are common in Dushanbe, though alcohol seems almost non-existent in the countryside. Likewise, in Dushanbe I’d estimate that 50% of the women wore hijabs (head scarves that don’t cover the face nor the rest of the body) while in the countryside, it was more like 90%. However, I didn’t see any niqabs or burkas except for a few women walking around with their clearly Arab husbands. Many young women in Dushanbe dressed in a typically Western manner with jeans, albeit with no cleavage nor shorts.</p>
<p>The US report also notes that though the government mostly targets its fellow Sunni Muslims, it also applies broad religious suppression across the board. For instance, Jehovah’s Witnesses are outlawed and “face intense harassment from authorities, including home raids, fines, surveillance, and brief detainments.” Other Christian groups, like missionary-oriented Baptists, face an uphill battle getting permits to build their churches and proselytize. However, the Russian Orthodox Church “does not experience much official repression, in large part because Orthodox Christians do not proselytize and because of the church’s connections to Russia.”</p>
<p><img data-attachment-id="3536" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/taj-president/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/taj-president.jpg" data-orig-size="640,480" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Taj president" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/taj-president.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/taj-president.jpg?w=640" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/taj-president.jpg" alt="" width="875" height="656"></p>
<h2><strong><u>Fearless Leader</u></strong></h2>
<p>I asked a taxi driver with surprisingly good English, “is the President good”?</p>
<p>His verbatim response: “of course, how else could he rule for 32 years?”</p>
<p>One of the perks of ruling for 32 years is amassing the political capital to put pictures of yourself everywhere:</p>
<p><img data-attachment-id="3421" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6401/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6401.jpg" data-orig-size="4160,6240" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714676581&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;1000&quot;,&quot;shutter_speed&quot;:&quot;0.01&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6401" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6401.jpg?w=200" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6401.jpg?w=683" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6401.jpg?w=683" alt="" width="683" height="1024"></p>
<p><img data-attachment-id="3450" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6224/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6224.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714602760&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;80&quot;,&quot;iso&quot;:&quot;3200&quot;,&quot;shutter_speed&quot;:&quot;0.066666666666667&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6224" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6224.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6224.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6224.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3451" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6223/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6223.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714602758&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;80&quot;,&quot;iso&quot;:&quot;3200&quot;,&quot;shutter_speed&quot;:&quot;0.076923076923077&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6223" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6223.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6223.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6223.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3453" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6219/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6219.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714602739&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;39.3&quot;,&quot;iso&quot;:&quot;3200&quot;,&quot;shutter_speed&quot;:&quot;0.076923076923077&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6219" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6219.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6219.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6219.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3423" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6375/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6375.jpg" data-orig-size="4160,6240" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714666110&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;80&quot;,&quot;iso&quot;:&quot;2000&quot;,&quot;shutter_speed&quot;:&quot;0.0041666666666667&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6375" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6375.jpg?w=200" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6375.jpg?w=683" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6375.jpg?w=683" alt="" width="683" height="1024"></p>
<p><img data-attachment-id="3422" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6379/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6379.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714666218&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;320&quot;,&quot;shutter_speed&quot;:&quot;0.01&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6379" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6379.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6379.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6379.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3578" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6481/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6481.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;5.6&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714934543&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;17.7&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.0008&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6481" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6481.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6481.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6481.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3446" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6262/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6262.jpg" data-orig-size="4160,6240" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714650829&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;19.2&quot;,&quot;iso&quot;:&quot;3200&quot;,&quot;shutter_speed&quot;:&quot;0.1&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6262" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6262.jpg?w=200" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6262.jpg?w=683" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6262.jpg?w=683" alt="" width="683" height="1024"></p>
<p><img data-attachment-id="3425" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6331/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6331.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714656353&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;17.1&quot;,&quot;iso&quot;:&quot;3200&quot;,&quot;shutter_speed&quot;:&quot;0.11111111111111&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6331" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6331.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6331.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6331.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3447" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6257/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6257.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714650395&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;24.7&quot;,&quot;iso&quot;:&quot;3200&quot;,&quot;shutter_speed&quot;:&quot;0.083333333333333&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6257" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6257.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6257.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6257.jpg?w=760" alt="" width="760" height="507"></p>
<p>Personally, I think the President looks like a lost <a href="https://en.wikipedia.org/wiki/Leonid_Brezhnev">Leonid Brezhnev</a> clone:</p>
<p><img data-attachment-id="3526" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/brez-screenshot/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/brez-screenshot.png" data-orig-size="677,852" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Brez Screenshot" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/brez-screenshot.png?w=238" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/brez-screenshot.png?w=677" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/brez-screenshot.png" alt="" width="677" height="852"></p>
<p>Emomali Rahmon has indeed been the president of Tajikistan since 1994, and although he wasn’t the leader of the pre-independence Soviet state, like the first presidents of Kazakhstan, Kyrgyzstan, Uzbekistan, and Turkmenistan, he is undoubtedly one of those guys in spirit.</p>
<p>Rahmon (originally Rakhmonov until he changed his last name in 2007 to sound less Russian) was born in 1952 in a rural region of the Tajik Autonomous Soviet Socialist Republic, which consisted of almost nothing but rural regions. <a href="https://centrasia.org/person2.php?&amp;st=1013881157">His father was a decorated WW2 veteran</a> and his uncle died in the military in the late 1950s while doing god knows what in Ukraine.</p>
<p>Say what you want about the USSR, but it apparently allowed individuals to rise from obscurity to great power. From his humble origins, Rahmon got a decent education in economics at the Tajik State University, then “worked as an electrician at a butter factory in Kurgan-Tube,” then overcame living in one of the most land-locked places on earth to join the Soviet Navy to be stationed in sunny <a href="https://en.wikipedia.org/wiki/Primorsky_Krai">Primorsky Krai</a> (which is north of North Korea), then went back to being an electrician, and then a salesman, and then he started his surprisingly successful political climb by getting involved in local Tajik union leadership. Eventually he became the head of the collective farms in his home region.</p>
<p>Based on his long list of political titles, Rahmon seemed to have popped into the national leadership of the Tajik Autonomous Soviet Socialist Republic <em>right</em> when it was getting independence. In 1990, he was one of many “people’s deputies,” which was a legislative role, and being in his 30s, Rahmon had to have been on the younger side of the local Soviet apparatchiks.</p>
<p>When the USSR fell in 1991, the pre-independence leaders of all the other Stans rapidly consolidated their power under a new government with the right carrots and sticks to keep the other top party leaders in line. Not only was Rahmon not the pre-independence leader of Tajikistan, but he wasn’t even a high ranking official. So how did he outfox all the Tajik Soviet oligarchs and emerge as the undisputed head of independent Tajikistan for 32 years and counting?</p>
<p>Apparently, the Soviet Tajik leadership was either a lot more chaotic or incompetent than the leadership of the other Stans, because from August 1991 to November 1992, <a href="https://www.rferl.org/a/emomali-rahmon-the-accidental-leader-who-has-stayed-in-power-for-decades/30890337.html">Tajikistan went through four administrations</a> and Rahmon popped out on top by being boring and ostensibly controllable.</p>
<p>The first independent Tajik leader, who ran the pre-independence Tajik Soviet, backed an unsuccessful coup attempted against Gorbachev in the dying Soviet Union, and was subsequently thrown out of power ten days into independence. The second leader tried to destroy the communist party and launch a new Tajik nationalist regime, but one month into his term, he was overthrown in a coup <a href="https://www.nytimes.com/1992/10/25/world/coup-by-ex-communists-is-reported-in-tajikistan.html">by a hardline communist party rival</a> who became the third leader of independent Tajikistan. He had previously run the Soviet from 1982 to 1985 (until he was removed for corruption) and seemed to have a stronger political base. He held an election to legitimatize his power, but it was so blatantly rigged that it more-or-less triggered the civil war. He still managed to last a year before he was couped by his regime cohorts for making a big mess and as a means of hopefully placating the Islamic rebels who were advancing on the capital. In his place was put another communist party stooge, but he too stepped down after a few weeks as a further act of placation.</p>
<p>These last two hasty resignations were announced and enacted while the Tajik government was literally falling apart. The resignations couldn’t be fully legally ratified because provinces in rebellion weren’t sending representatives to Dushanbe. AK-wielding rebel bands were so close to the capital that the Tajik leadership fled to Khujand, a loyalist stronghold with a current population of under 200,000, where it was hoped that sheer mountainous terrain would keep the rebels at bay.</p>
<p>It was in this auspicious moment, in late 1992, that Emomali Rahmon (again, then Emomali Rakhmonov) came to power. He was not elected, but merely appointed as acting president in a metaphorical smoke-filled backroom meeting of party apparatchiks. There is little public information about how choosing a guy with no leadership experience, no army experience, and virtually no public recognition would salvage the increasingly dire political situation.</p>
<p>My idle speculation – maybe he was the most ‘salt of the earth’ of whoever was left in the administration since he wasn’t obviously corrupt and had been managing farmland in his hometown a few years ago, while in contrast, the previous leader was an obvious Russian-backed USSR-era holdover. Speculation from <a href="https://www.rferl.org/a/emomali-rahmon-the-accidental-leader-who-has-stayed-in-power-for-decades/30890337.html">my main source</a> – Rahmon was put in place by a bunch of generals (ie. warlords) as a boring party stooge who would easily take orders. One of the generals referred to Rahmon as “nondescript” and assumed that he would be pushed aside when he was done being useful to the military.</p>
<p>In 1994, Rahmon was formally elected president in an obviously rigged vote which he nevertheless only won with 58%. To be fair, Rahmon had a tough time campaigning since he was literally unable to travel to most of his country since it was under rebel control that would shoot him on sight. Even Khujand, his one-time stronghold haven, became increasingly hostile, and Rahmon stopped visiting the region after two near-miss assassination attempts. So throughout the 1990s, he basically sat in Dushanbe and hoped the rebels wouldn’t reach him.</p>
<p>In 1997, Rahmon signed a UN-mediated peace treaty with the rebels and something seemed to awaken in the mid-40s party functionary. I can’t find a ton of details on his strategic maneuvering, but for the next 15+ years, Rahmon embarked on a surprisingly successful political consolidation campaign which forced the downfall of both his enemies and former allies one-after-the-other.</p>
<p>The break from the military shackles occurred during two unsuccessful military coups in 1997 and 1998. Rahmon then had to deal with his political opposition which he was treaty-bound to permit into the national legislature as part of the peace agreement to end the civil war. But in the 1999 election, Rahmon won 97% of the vote and his party massacred the opposition in the polls, either because Rahmon was a dazzlingly charismatic leader or because he blatantly rigged the whole thing. The opposition complained and the international press condemned Rahmon; he responded by ignoring everyone and apparently doing enough dirty work behind-the-scenes to prevent a second civil war. In 2003, Rahman launched a national referendum to let him run for more terms, which of course was passed with an overwhelming majority. Then Rahmon won more blatantly rigged elections in 2006 and 2013.</p>
<p>In 2015, Rahmon finished off the last of his serious opposition. Allegedly, the deputy defense minister tried to launch a coup with the backing of the Islamic opposition party, though it’s unclear whether this actually occurred. Rahmon’s loyalists defeated the putschists and <a href="https://www.rferl.org/a/tajikistan-170-jailed-failed-coup/27900101.html">arrested 170</a> top military and political officials while virtually the entire rest of the Islamic leadership fled into exile. At that point, the path was clear for Rahmon to establish complete control over Tajikistan for his political dynasty. In 2016, he amended the constitution again to give himself official near-dictatorial powers, and then he won another blatantly rigged election in 2020, and before anyone knew it, this random party functionary had been running Tajikistan for over two decades.</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/06/img_8670.jpg"><img data-attachment-id="3615" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8670/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8670.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8670" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8670.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8670.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/img_8670.jpg?w=760" alt="" width="760" height="570"></a></p>
<p>Not much is known about Rahmon’s big political maneuvers, like the 2015 military/political purge, but there is even less information available on the mechanics of Rahmon’s corrupt dealings. Regardless, the end result is obvious to everyone both inside and outside of Tajikistan. In a masterwork of old-school clannish grifting, Rahmon has virtually complete control over the Tajik state and economy, including all government agencies and major companies, through a network of loyalists, nearly all of whom are either his direct family members or in-laws.</p>
<p>To his credit, Rahmon seems to mostly retain the Soviet dedication to gender equality. Rahmon’s oldest daughter <a href="https://www.asiaplustj.info/en/news/tajikistan/power/20180103/ozoda-rahmon-who-heads-presidents-executive-office-turns-40-today">is the head of his executive office</a> and her husband is the deputy head of the National Bank of Tajikistan. His third daughter is the deputy head of the Foreign Ministry’s International Organizations Department, and her husband is the head of the National Winter Sports Association. His sixth daughter is the deputy head of Orienbank, the largest commercial bank in Tajikistan, a position she undoubtedly meritoriously earned at age 23. A son-in-law runs the country’s <a href="https://eurasianet.org/tajikistan-monopoly-practices-send-fuel-prices-soaring">fuel monopoly</a> and another son in law runs the country’s railways.</p>
<p>But the second highest spot on the Rahmon clan corruption hierarchy belongs to the president’s eldest son, Rustam. He is fortunate enough to currently be the mayor of Dushanbe and the head of the rubber-stamping national legislature. Rustam is also, ironically, the previous head of the Agency for State Financial Control and Combating Corruption, and has a major general rank in the military despite having no military experience nor training.</p>
<figure data-shortcode="caption" id="attachment_3529" aria-describedby="caption-attachment-3529"><img data-attachment-id="3529" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/rustam/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/rustam.jpg" data-orig-size="910,683" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Rustam" data-image-description="" data-image-caption="<p>Father and son – https://eurasianet.org/is-tajikistans-succession-saga-any-closer-to-the-end</p>
" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/rustam.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/rustam.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/rustam.jpg?w=760" alt="" width="760" height="570"><figcaption id="caption-attachment-3529">Father and son – <a href="https://eurasianet.org/is-tajikistans-succession-saga-any-closer-to-the-end" rel="nofollow">https://eurasianet.org/is-tajikistans-succession-saga-any-closer-to-the-end</a></figcaption></figure>
<p>Rustam is fully expected to take the reins from his father whenever he retires or drops dead. His legislative post makes him the official successor and numerous online articles mark him as the unofficial successor. One local I spoke with also said that Rustam would undoubtedly be their next president, and though this individual had his doubts about Rustam’s competence compared to his father, he still supported Rustam’s ascension since the alternative would likely be a chaotic power struggle.</p>
<p>The elder Rahmon may lead a cult of personality, but he’s actually pretty low-key in his dictatorial antics. Rustam can’t say the same; the man is a big fan of soccer, so much so that he co-founded Dushanbe’s team and was its captain for many years. The team was generally successful and really hit its stride in the 2010s when it won five championships, most of which occurred after Rustam retired from active play in 2012.</p>
<p>The problem is that Rustam’s team <a href="https://eurasianet.org/tajikistan-football-furor-opens-window-on-political-discontent">has benefited from quite a few suspicious calls</a> from referees, so much so that Dushanbe has had numerous riots after the team’s bullshit wins. After one particularly egregious match, brave fans of the opposing team started chucking rocks at Rustam and his teammates until the police fired their guns in the air and beat the shit out of the hooligans, injuring 16 and arresting 20. Shortly afterward, the elder Rahmon dutifully backed his son and signed a new law increasing legal penalties for sports-related mayhem.</p>
<p>In <a href="https://www.rferl.org/a/tajik_football_club_fined_rustam_emamoli/24561390.html">another instance</a>, five of the players on one of the best Tajik teams were hit with temporary bans and fines after playing too well against Rustam’s team. Officially, they were accused of playing in a “very rude and mean” manner.</p>
<p>Like a greedy Crusader Kings player, Rahmon hoards as much wealth as possible in the hands of himself, his family, and his in-laws, but plenty of it also slips out to key non-familial loyalists. For instance, Qosim Rohbar is a former provincial governor and Agricultural Minister who operated as a “<a href="https://www.occrp.org/en/suisse-secrets/powerful-regional-head-in-tajikistan-held-85-million-in-swiss-account">mafia kingpin</a>” with Rahmon’s approval, and somehow managed to amass $8.5 million in a Swiss bank account on an official annual salary of $7,680. On a smaller scale, the President’s doctor’s son got into some trouble after bragging about his connections too loudly, so Rahmon dragged him in front of the national legislature and chewed him out for having four houses and three cars on a $2,400 annual salary as a customs official. Ultimately, Rahmon was pretty nice about it, merely <a href="https://www.occrp.org/en/daily/10377-no-probe-into-tajik-ex-official-suspected-of-amassing-wealth">scolding</a> the guy with: “You will resign now! You are still young, otherwise you would be sent to prison for at least 15 years,”</p>
<p>Here’s Wikipedia on the current <a href="https://en.wikipedia.org/wiki/Kokhir_Rasulzoda">Prime Minister of Tajikistan</a>:</p>
<blockquote><p>“His wife, Ikhbolkhon Nazirova, owns two properties worth $1.4 million in Dubai.&nbsp;She also owns several properties in Tajikistan.&nbsp;Their daughter, Farangez Azimova, owns a villa in Dubai worth $5.4 million… The source of the couple’s wealth is unknown, as she has no known income and Rasulzoda, as a public official for 24 years, has been barred from engaging in commercial activities.”</p></blockquote>
<p>It’s worth putting these numbers in perspective. No one knows how much the Rahmon clan is worth, but it’s nothing compared to Kazakhstan’s former president Nursultan Nazarbayev, who has personally amassed north of $10 billion (here’s <a href="https://www.opendemocracy.net/en/odr/nursultan-nazarbayev-kazakhstan-former-president-linked-to-78bn-in-assets-in-uk-company/">$7.8 billion</a> in a single company). But Kazakhstan with its oil and gas is a far wealthier country and therefore there is far more to plunder. Tajikistan is probably among the top 40 poorest countries on earth, a status that Rahmon cleverly parlays in his grifting, like when he got $13 million in food aid from USAID right around the same time he spent <a href="https://eurasianet.org/tajikistan-pleads-poverty-spends-money-on-unneeded-luxuries">$92 million</a> on a private jet.</p>
<p>In other words, the scale of Rahmon’s corruption is nothing to write home about by global standards, but the… I guess <em>density</em> is. Rahmon and his family and supporters basically have complete control over the Tajik economy, <a href="https://hromadske.ua/en/posts/how-tajiks-president-took-over-the-country">at least of everything above street-level businesses</a> and the few foreign brands in the country. As a post-Soviet state, all of Tajikistan’s productive assets – its gold, coal, aluminum manufacturing, cotton, and energy production – were already in state hands at the start. It was easy enough to appoint loyalists to run these assets, and the meager privatization efforts in the past just made the corruption more formal.</p>
<p>My sense from talking to locals is that the Rahmon regime is suppressive though not to a crazy extent or anywhere near totalitarian levels. But maybe I’m underselling it. From the &nbsp;Organized Crime and Corruption Reporting Project:</p>
<blockquote><p>“There’s a great little anecdote that we include in one of the stories, a Western researcher was in Tajikistan, and his cleaning lady was in the apartment. Suddenly on the TV, a program by Umarali Kuvvatov was talking about the authoritarianism of the president and how the president was leading the country in the wrong direction. He remembers that the cleaning lady froze and for her, it was like seeing God criticized on TV for the first time. This is the environment that has been built in Tajikistan. The leader of the Islamic Renaissance party (the now banned opposition party) told me that it was like North Korea, people only see that Tajikistan is safe, the president keeps you safe, everywhere else in the world is chaos, everywhere else with religious opposition parties, Islamic parties, is just terrorism and extremism. Here in Tajikistan, everything is different.”</p></blockquote>
<p>The report also claimed that former opposition leader <a href="https://en.wikipedia.org/wiki/Umarali_Kuvvatov">Umarali Kuvvatov</a> may or may not have been assassinated by the Tajik government while living in exile in Istanbul. There’s no conclusive proof, but he was shot in the head under mysterious circumstances two days after a bunch of his comrades were given long prison sentences in Tajikistan.</p>
<p>Based on my few conversations with locals, the Rahmons have done a good job recently of placating the masses by convincing them that they are sharing enough of the wealth. It’s far more likely that the government is benefitting from a temporary windfall that translates into more wealth for the Tajik people even if the corruption stays at a steady rate. And due to such corruption, it is extremely unlikely to me that Tajikistan will emerge as anything other than an impoverished raw resource producing state and Chinese colony for the foreseeable future.</p>
<figure data-shortcode="caption" id="attachment_3411" aria-describedby="caption-attachment-3411"><img data-attachment-id="3411" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/pamir-highway-tour-map/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/pamir-highway-tour-map.png" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="pamir-highway-tour-map" data-image-description="" data-image-caption="<p>https://kalpak-travel.com/blog/pamir-highway/</p>
" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/pamir-highway-tour-map.png?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/pamir-highway-tour-map.png?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/pamir-highway-tour-map.png?w=760" alt="" width="760" height="428"><figcaption id="caption-attachment-3411"><a href="https://kalpak-travel.com/blog/pamir-highway/" rel="nofollow">https://kalpak-travel.com/blog/pamir-highway/</a></figcaption></figure>
<h2><u>Pamir Highway</u></h2>
<p>I spent nine days travelling along the <a href="https://en.wikipedia.org/wiki/M41_highway">Pamir Highway</a> with a driver and the aforementioned three Europeans. The journey was easily among the most beautiful in my life, with landscapes and views rivaled only by a handful of equally stunning places in the world such as Peru and Iceland.</p>
<p>There’s not much point in trying to describe such beauty through writing, but I’d summarize the visuals as <em>desolate</em>. The highway runs along and through mountain ranges and valleys with few people and little life in general. It looks primordial, at times other worldly. Despite being completely different geographic terrains, Iceland is probably the closest comparison for any other national topography, with a bit of Tibet thrown in. And like Iceland often does, the Pamir region would do very well as a stand-in for an alien landscape in film or television.</p>
<p>Another analogy to describe the Pamir landscape: sometimes it looks like god started making a chunk of earth, and then got bored and stopped halfway through and just left it like that for eternity.</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8885.jpg"><img data-attachment-id="3503" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8885/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8885.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8885" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8885.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8885.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8885.jpg?w=760" alt="" width="760" height="570"></a></p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8870.jpg"><img data-attachment-id="3504" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8870/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8870.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8870" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8870.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8870.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8870.jpg?w=760" alt="" width="760" height="570"></a></p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8927.jpg"><img data-attachment-id="3497" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8927/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8927.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8927" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8927.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8927.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8927.jpg?w=760" alt="" width="760" height="570"></a></p>
<p><img data-attachment-id="3555" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6987/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6987.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1715446684&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.0125&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6987" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6987.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6987.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6987.jpg?w=760" alt="" width="760" height="507"></p>
<p>There are green parts too:</p>
<p><img data-attachment-id="3513" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6498/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6498.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;5.6&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714938695&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16.5&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.0020833333333333&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6498" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6498.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6498.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6498.jpg?w=760" alt="" width="760" height="507"></p>
<p><img data-attachment-id="3579" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6427/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6427.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714923451&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;27.5&quot;,&quot;iso&quot;:&quot;320&quot;,&quot;shutter_speed&quot;:&quot;0.01&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6427" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6427.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6427.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6427.jpg?w=760" alt="" width="760" height="507"></p>
<p>As you might expect, the highway is not particularly well-maintained along its 750 miles. I wasn’t actually sure if we were on the highway itself the whole time or if we ventured onto side roads, but we soon discovered that the paved roads were actually worse than the dirt roads. Sure, the dirt roads shook us around, but the paved roads had the deep and sudden potholes that really knocked our socks off. During some stretches of dead straight, perfectly flat paved roads, we traveled at an average of 20 miles per hour for hours at a time.</p>
<p>The roads would have been worse if it weren’t for – who else? – the Chinese. Their road crews swarmed the length of the Pamir Highway filling in cracks and paving new stretches. I presume that virtually all of the tunnels, some of which are miles long, were built by the Chinese, or maybe the old Soviets. At one point, we had to wake up at 4 AM to get through a tunnel before 6 AM when the Chinese would start working on it and blocking it entirely until noon.</p>
<p>However, Tajikistan’s best tunnel isn’t on the Pamir Highway at all; it’s to the north of Dushanbe. The 3.1 mile Anzob Tunnel is also known as the <a href="https://www.dangerousroads.org/asia/tajikistan/8798-anzob-tunnel.html#:~:text=The%20tunnel%20is%20located%20in,the%20country's%20second%2Dlargest%20city.">Tunnel of Fear or the Tunnel of Death</a> for its faulty ventilation which has killed numerous people during traffic jams. Some choice quotes from dangerousroads.org:</p>
<blockquote><p>“The poisonous air in the tunnel is barely shifted by one solitary fan somewhere in the middle of the tunnel, which gives some, but not sufficient, movement to the air.”</p></blockquote>
<blockquote><p>“There are no traffic lights to regulate traffic through this section, nor is there an ordered tidal flow of traffic being allowed to enter the tunnel; instead, anarchy prevails in the darkness.”</p></blockquote>
<blockquote><p>“Even in good weather conditions, the tunnel is flooded, turning the giant potholes in the unfinished road into invisible death traps. Unmarked drainage channels waiting to swamp your bike. The tunnel lacks proper lighting and ventilation, and breathing is hard and painful due to the thick mixture of exhaust gases. Most drivers go as fast as they can, as in any other Central Asian country. Avoid the potholes, particularly in the winter time here. Your whole SUV can submerge if you drive in the wrong place. There are no road markings, so driving on the left or the right are optional, with the middle being the common choice.”</p></blockquote>
<p>Sadly, I think I was mostly spared from these conditions since improvements were made to the tunnel in 2018. I got to experience it during a day trip from Dushanbe to Iskanderkul (a resort lake), and while it was an eerily dark and long tunnel, I didn’t notice any noxious fumes or watery death traps.</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8948.jpg"><img data-attachment-id="3495" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8948/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8948.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8948" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8948.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8948.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8948.jpg?w=760" alt="" width="760" height="570"></a></p>
<p>One of the highlights of the Pamir Highway is seeing other countries. I caught a glimpse of a mountain peak in Pakistan, I saw long stretches of desolate wasteland ceded to China, but of course, most interestingly, I saw Afghanistan, and even some Afghans (though no Taliban).</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/06/img_8586.jpg"><img data-attachment-id="3616" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8586/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8586.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8586" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8586.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8586.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/img_8586.jpg?w=760" alt="" width="760" height="570"></a></p>
<figure data-shortcode="caption" id="attachment_3560" aria-describedby="caption-attachment-3560"><img data-attachment-id="3560" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6807/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6807.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;14&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1715186340&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.0047619047619048&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6807" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6807.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6807.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6807.jpg?w=760" alt="" width="760" height="507"><figcaption id="caption-attachment-3560">Everything across the river is Afghanistan</figcaption></figure>
<p><img data-attachment-id="3561" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6800/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6800.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;14&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1715186254&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.0047619047619048&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6800" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6800.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6800.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6800.jpg?w=760" alt="" width="760" height="507"></p>
<p>The Afghan-Tajik border is understandably tightly guarded, at least on the Tajik side. There are periodic military outposts that stopped our vehicle and checked our passports, plus Tajikistan requires a special permit for foreigners who travel through the area (the Gorno-Badakhshan Autonomous Region Permit or GBAO Permit). Presumably this is to clamp down on any radical Islamic activity that might be encouraged by neighboring Afghanistan. Nevertheless, in at least one spot on the border, there is a weekly market day in which Afghans and Tajiks mingle freely under the guard of both the Tajik military and the Taliban. I would have loved to attend, but unfortunately the timing didn’t work out for us.</p>
<p><img data-attachment-id="3574" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6410/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6410.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714919817&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;35.8&quot;,&quot;iso&quot;:&quot;2500&quot;,&quot;shutter_speed&quot;:&quot;0.0095238095238095&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6410" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6410.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6410.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6410.jpg?w=760" alt="" width="760" height="507"></p>
<p>I saw an eagle, two wolves, four snow leopards (in a preserve), lots of sheep, lots of goats, lots of cows, lots of yaks, lots of dogs, a few cats, but the coolest of all were the Marco Polo Sheep. I saw two herds of these big fuckers. This is the best picture I could get:</p>
<p><img data-attachment-id="3567" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf7045/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7045.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;5.6&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1715516860&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;80&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.0008&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF7045" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7045.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7045.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7045.jpg?w=760" alt="" width="760" height="507"></p>
<p>Here’s what they really look like:</p>
<figure data-shortcode="caption" id="attachment_3413" aria-describedby="caption-attachment-3413"><img data-attachment-id="3413" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/marco-polo-sheep/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/marco-polo-sheep.webp" data-orig-size="640,469" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Marco Polo Sheep" data-image-description="" data-image-caption="<p>https://www.reddit.com/r/theHunter/comments/rqcznz/regarding_flinters_recent_video_where_he_mentions/</p>
" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/marco-polo-sheep.webp?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/marco-polo-sheep.webp?w=640" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/marco-polo-sheep.webp" alt="" width="748" height="548"><figcaption id="caption-attachment-3413"><a href="https://www.reddit.com/r/theHunter/comments/rqcznz/regarding_flinters_recent_video_where_he_mentions/" rel="nofollow">https://www.reddit.com/r/theHunter/comments/rqcznz/regarding_flinters_recent_video_where_he_mentions/</a></figcaption></figure>
<p>Another highlight was climbing to the base of <a href="https://en.wikipedia.org/wiki/Lenin_Peak">Lenin Peak</a>, which reaches to almost 23,000 feet at the top. It used to be one of the tallest mountains in the Soviet Union, but the tallest was <a href="https://en.wikipedia.org/wiki/Ismoil_Somoni_Peak">Stalin Peak</a> (also known as “Communism Peak”), which is now called Ismoil Somani Peak after the warlord who brought Islam to the region.</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/06/img_8813.jpg"><img data-attachment-id="3563" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8813/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8813.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8813" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8813.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8813.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/img_8813.jpg?w=760" alt="" width="760" height="570"></a></p>
<p>Like in <a href="https://mattlakeman.org/2021/06/27/notes-on-peru/">Peru</a>, I took <a href="https://my.clevelandclinic.org/health/drugs/18976-acetazolamide-oral-tablets">seizure medication</a> that doubles as a preventative and active treatment for altitude sickness. Actually, I idiotically took the same exact medication, as in from the very same bottle, which is now over three years old. Which is why it didn’t work this time and I was huffing and puffing up three mountains on three separate hikes while the Europeans ran laps around me.</p>
<p><img data-attachment-id="3587" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf7040/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7040.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;5.6&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1715457286&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;72.1&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.00076923076923077&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF7040" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7040.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7040.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf7040.jpg?w=760" alt="" width="760" height="507"></p>
<h2><strong><u>Border Crossing</u></strong></h2>
<p>I left Tajikistan through the Kyzyl-Art Pass at the Tajikistan-Kyrgyzstan border. It was not an easy process and I had a bit of a border adventure, but god knows I haven’t been the only one.</p>
<p>The militaries of Tajikistan and Kyrgyzstan periodically get into surprisingly large literal battles on their border, mostly over disputed claims to resource deposits, primarily fresh water. In April 2021, a largely unknown catalyst resulted in 55 deaths and 4,000 civilian displacements. In July, another small skirmish resulted in the death of a single Kyrgyz soldier. A brief peace was made but then broken in January 2022 when another fight left two dead and dozens wounded. In March, another outbreak left a Tajik border guard dead. In June, there were two more small skirmishes, resulting in another dead Tajik border guard. On a day in September, both sides of a border crossing accused the other of violating the demarcation zones, resulting in two more deaths and more than a dozen wounded.</p>
<p>Two days later, the shit really hit the fan as actual armies began assembling and President Rahmon ordered the Tajik military to seize numerous airports on the Kyrgyz side of the border. The Tajik military started its assault by launching artillery shells over the border at one of the Kyrgyz airports but seemingly was never able to actually invade. 137,000 Kyrgyz people were evacuated from the region and sporadic looting broke out in border towns. Tajikistan claimed that Kyrgyzstan deployed military drones for counterattacks. The casualty reports are conflicted, but Kyrgyzstan claimed 24 dead and almost 90 wounded.</p>
<p>Since then, the border has been relatively quiet but completely shut down for travel for native Tajiks or Kyrgyz. Only tourists can get through.</p>
<p>I find the whole thing incredibly weird, and all the more so since there are so few details about the conflict online. The border itself is <em>extremely</em> high and mountainous, often over 9,000 feet, and the border crossings are small and isolated. How did Tajik and Kyrgyz border units keep getting into situations that resulted in shootouts? How can two countries have so many military fights that result in direct casualties, including straight-up artillery barrages over the border, and not actually declare war on one another?</p>
<p>I have no idea. But the general international consensus is that Tajikistan is in the wrong and the conflict fundamentally stems from Rahmon maintaining territorial claims to border resources that Tajikistan has never controlled.</p>
<p>For what it’s worth from my extremely amateurish perspective, it seems like the Kyrgyz military could punch back a lot harder if it wanted to. I’ve traveled through a lot of poor countries and have seen a lot of poor militaries, but Tajikistan is the first country I’ve been to where most of the soldiers I’ve seen <em>didn’t have guns</em>. Seriously, of the 20+ soldiers I saw along the Pamir Highway and at the border, maybe 1/3rd actually had firearms while the rest just had knives. And of the better armed one-third, I swear, most didn’t have clips in their AKs. Meaning, they either carried no ammo or only a single round in the chamber. Also, the Tajik border facility was in shambles, and seemed to consist of a few concrete husk buildings and shipping containers. Some of this could be attributed to the fighting (there were shattered windows and what appeared to be bullet holes), but unless the Kyrgyz managed to blow up their toilets, the Tajiks really did piss and shit in a shallow hole in their barracks. I’m not talking about an ordinary hole-in-the-floor bathroom in a poor country, I mean an absolutely disgusting shit-filled and covered hole that bordered on noxious.</p>
<p>In contrast, the Kyrgyz border guards seemed to have their shit together. Everyone was armed and appeared to have ammo, everyone was much more professional, the buildings were intact, the border-crossing processing room was clean and neat, there were real fences around the whole facility, and though I didn’t go to the bathroom on the Kyrgyz side, I couldn’t imagine theirs being worse than the Tajik’s side.</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/06/img_8760.jpg"><img data-attachment-id="3623" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8760/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8760.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8760" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8760.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8760.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/img_8760.jpg?w=760" alt="" width="760" height="570"></a></p>
<p>The impact of all this border warfare on me was that it made an already difficult-to-cross border substantially more annoying. My Pamir tour driver was a Tajik and therefore legally barred from crossing the border, and we had to meet a new driver on the Kyrgyz side of the border, who was a Kyrgyz and therefore also legally barred from crossing the border. But that’s ok, we should have just been able to drive up to the Tajik side of the border, get out of the car, and walk across the border to the Kyrgyz side, right?</p>
<p>Wrong. Because between the two borders is a 14 mile no man’s land gap.</p>
<p>That’s too long to walk of course, but fortunately, presumably through some finagling and possible bribery, the tour company worked out a compromise where we could cross the Tajik side by car and go to a meeting place about half a mile into the no man’s land where we would meet the Kyrgyz car. To ensure no espionage or military adventurism was at play, an armed border guard would hop into both our car and the Kyrgyz car, not because of me or my European tourist companions, but to monitor our respective drivers. Our guard on the Tajik side not only had a gun, but one with ammo (or at least a clip). So we drove to the border, picked up the armed border guard, and then met our Tajik driver in no man’s land, right?</p>
<p>Wrong. The problem is that the Kyzy-Art Pass is at around 13,000 feet. Even in the early summer, it’s still covered in snow and sometimes gets hit by snowstorms, such as exactly when my group tried to cross the pass. When we arrived, the visibility was maybe 15 feet in any direction. Beyond that, everything was pure white. In the checkpoint, we could see the various huts and cargo containers and were alright, but once in no man’s land, we were in a white oblivion, one which happened to have various cliff’s edges within 20+ feet.</p>
<p>Yet our (amazing) driver still believed we could make it to the rendezvous point. So we got our passports stamped, and then with our armed border guard bringing the car up to six passengers, we attempted to drive through about a foot of snow (and rising) in sheer whiteout conditions. This lasted thirty seconds until our driver stopped and then spent a supremely impressive thirty minutes laboring outside in the snowfall to put chains on the tires and dig holes in the snow every ten yards for about 100 yards ahead to lay a path for our progress.</p>
<figure data-shortcode="caption" id="attachment_3588" aria-describedby="caption-attachment-3588"><a href="https://mattlakeman.org/wp-content/uploads/2024/06/img_8966.jpg"><img data-attachment-id="3588" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8966/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8966.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8966" data-image-description="" data-image-caption="<p>Unfortunately I don’t have any photos of the whiteout conditions because I was with the armed guards and didn’t want to risk taking photos. But here’s from the next day.</p>
" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8966.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8966.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/img_8966.jpg?w=760" alt="" width="760" height="570"></a><figcaption id="caption-attachment-3588">Unfortunately I don’t have any photos of the whiteout conditions because I was with the armed guards and didn’t want to risk taking photos. But here’s from the next day.</figcaption></figure>
<p>Aside – I’ve been asked a few times if I’ve ever had a gun pointed at me. The answer is now technically “yes.” Through bad luck, I ended up in the middle back seat while the armed boarder guard sat in the front passenger seat. In yet another instance that made me doubt the fighting fitness of the Tajik military, the guard placed the butt of his AK on the floor near his feet so the barrel was facing up and toward the rear of the car. Which is to say, the AK was pointed at me while we were driving through a foot of snow with lots of bumps and shakes and fits and starts and jerking and revving the engine to get traction. I prayed that the ammo clip really was just for show.</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/06/img_8938.jpg"><img data-attachment-id="3590" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8938/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8938.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8938" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8938.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8938.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/img_8938.jpg?w=760" alt="" width="760" height="570"></a></p>
<p>Eventually, the driver got back in the car and we pushed onward for 100 yards. Then he stopped and did the same thing with the hole digging again. Then we went another hundred yards. Then we stopped and did the hole digging again. Then we went another hundred yards, and then the driver declared that the slope was too steep, but we were within theoretical walking distance of the rendezvous point. So we could just take all of our bags out of the car and power through the last few hundred yards on foot in white oblivion until we got to the other car, right?</p>
<p>Wrong. The problem was that we didn’t know if the other car was there. The other side of no man’s land was more than 13 miles long, and given the weather conditions, we had no idea if the other car had made it to the rendezvous point. It seemed impossible to me, but the driver assured us that “maybe he made it.” So we could just call the other car and ask if he had arrived, right?</p>
<p>Wrong. We had no way to contact the other car. There was no phone service here. But surely the Tajik border guards had some means of contacting the Kyrgyz border guards on the other side to ask if a vehicle had passed into no man’s land, right?</p>
<p>Wrong, they didn’t, or at least not at that time. The checkpoint’s communication system was based on solar power, and while I applaud their environmental consciousness, that seemed like a poor choice for a Himalayan Mountain pass.</p>
<p>So our driver hiked through the snow on his own to the rendezvous point to see if the other car had arrived. We watched him disappear into the white nothing while we sat in the car with the armed guard, his AK still carefully pointed at my chest. Then the driver came back and told us… nope. He wasn’t there.</p>
<p>So what could we do? Our driver opted to wait, which we did for an hour, then the driver hiked back up the rendezvous point and back to us, and confirmed that, again, the other car wasn’t there.</p>
<p>So what could we do then? We drove back to the checkpoint, let the border guard out, and waited for three hours for the theoretical backup meeting time. Our driver asked the border guard if we could wait inside one of the buildings and we were refused, so we sat in the car. As further punishment, the guards let us use their hideous hole-in-the-ground bathroom, but to their legitimate credit, they did eventually give us a bunch of biscuits and tea and candies, which was super nice.</p>
<p>Then the border guard got back in the car, was nice enough to point his AK away from me, and rode with us in another harrowing attempt to reach the rendezvous point, which had the same result. Across the roughly six hours we sat at the border and near the meeting point, we never had any means of communicating with the other vehicle, so at that point, we gave up and returned to the small internet-less Tajik village where he had spent the previous night, which required about an hour drive back down the pass. We were briefly concerned that we had already gotten our passports stamped out and therefore we couldn’t legally re-enter Tajikistan, but our driver somehow took care of that.</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/06/img_8949.jpg"><img data-attachment-id="3629" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8949/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8949.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8949" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8949.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8949.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/img_8949.jpg?w=760" alt="" width="760" height="570"></a></p>
<p>The next day, we drove an hour back to the border crossing and were thrilled to see that the snowstorm was over and we had perfect visibility with a beautiful baby blue sky and bright sun overhead. We were less thrilled to see that the snow had amassed to over two feet of fluffy powder in some places and it was therefore an open question whether either car could reach the rendezvous point. We were once again thrust into a communications blackout, but our driver assured us that yesterday had been a tragic two-time near miss, and now the meeting times were even better coordinated.</p>
<p>We once again picked up a border guard (this time a different guy) but now our drive through the white void was a pleasant drive through a winter wonderland. That is until we reached roughly the same point our vehicle did the day before and the slight incline made progress challenging. I don’t know how to drive through snow and frankly I’m not sure if our driver did either, but his technique of charging forward until the tires uselessly spun and then backing up 30 yards and then charging forward again to grab a few more yards of progress proved relatively effective as we traveled about 150 yards forward over the course of 30 minutes.</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/06/img_8954.jpg"><img data-attachment-id="3583" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8954/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8954.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8954" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8954.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/img_8954.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/img_8954.jpg?w=760" alt="" width="760" height="570"></a></p>
<p>Eventually, we made it to the rendezvous point. The other car wasn’t there, but the driver said this was to be expected. This time, he had it on good authority that the other car was waiting for us about 1.5 miles away at the bottom of the hill (ie. closer to mountain) that we were currently at the top of. We would have to take a mild leap of faith and walk down the hill through the snow to where the driver was supposed to be. If, for some reason, the driver wasn’t there, I guess we would have to walk the remaining 12ish flat miles through the snow to the Kyrgyz checkpoint. Also, the driver couldn’t come with us because Tajiks and Kyrgyz weren’t allowed to go beyond this point in the no man’s land, so we were on our own.</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8961.jpg"><img data-attachment-id="3493" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8961/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8961.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8961" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8961.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8961.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8961.jpg?w=760" alt="" width="760" height="570"></a></p>
<p>It all worked out in the end. The 1.5 mile trek with my full travel pack through two feet of snow was not one of the easier hikes in my life, but it was all downhill so it wasn’t too bad. One of the Europeans had a much harder time than me, not because of the physical exertion, but because he had lost his sunglasses, and so within 15 minutes his eyes were in pain from the light bouncing off the snow.</p>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8973.jpg"><img data-attachment-id="3489" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8973/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8973.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8973" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8973.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8973.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8973.jpg?w=760" alt="" width="760" height="570"></a></p>
<p>The driver was where he was supposed to be and was accompanied by a very friendly Kyrgyz border guard who took a bunch of pictures with us and did not accidentally point a gun at me. After another 0.5 miles of walking, we made it to his vehicle and then slowly drove the remaining way on a flat but snow-covered road until we reached the Kyrgyz border.</p>
<p><img data-attachment-id="3459" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6118/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6118.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714571075&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;27.5&quot;,&quot;iso&quot;:&quot;500&quot;,&quot;shutter_speed&quot;:&quot;0.01&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6118" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6118.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6118.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6118.jpg?w=760" alt="" width="760" height="507"></p>
<h2><strong><u>Questionable Claims</u></strong></h2>
<p>A series of questionable claims were made to me by Tajikis. Here are my fact checks.</p>
<p><img data-attachment-id="3549" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6456/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6456.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;5.6&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714925723&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;80&quot;,&quot;iso&quot;:&quot;3200&quot;,&quot;shutter_speed&quot;:&quot;0.04&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6456" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6456.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6456.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6456.jpg?w=760" alt="" width="760" height="507"></p>
<p><em>Claim 1 – The swastika was invented in Tajikistan</em>.</p>
<p>A tour guide in a fort museum pointed to a row of swastikas in an old stone facade and then claimed that the swastika itself originated in Tajikistan.</p>
<p>The swastika is (or at least was) officially backed by the Tajik state in its effort to promote a unique Tajik culture and nationalism. Of all the possible angles to take, the government has seen fit to embrace its allegedly Aryan ethnic heritage and declared 2006 as “<a href="https://www.rferl.org/a/1064129.html">the year of Aryan civilization</a>” to “study and popularize Aryan contributions to the history of the world civilization, raise a new generation (of Tajiks) with the spirit of national self-determination, and develop deeper ties with other ethnicities and cultures.”</p>
<p>Sounds like a true triumph of the will. One particularly brave Tajik official proclaimed:</p>
<blockquote><p>“We all know that fascism used this symbol for its purposes. This symbol therefore carries negative connotations for many…[but] we should not limit ourselves to only one interpretation.”</p></blockquote>
<p>Still, I can’t find any evidence that the swastika actually comes from Tajikistan. At best, the swastika was invented by Aryans, which the Tajiks arguably are via their ethnic connection to Persians. However, my quick skim through the Wikipedia entry on “Aryan” indicates that the precise boundaries, nature, and scientific reality of Aryanism is somewhere between fuzzy and fake.</p>
<p>Note – Despite the government’s official support for the swastika 15 years ago, I didn’t actually see any swastikas in Tajikistan outside that one museum.</p>
<p><strong>Verdict: Probably False</strong></p>
<p><img data-attachment-id="3550" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/taj-mahal/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/taj-mahal.png" data-orig-size="1280,720" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Taj Mahal" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/taj-mahal.png?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/taj-mahal.png?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/taj-mahal.png?w=760" alt="" width="760" height="428"></p>
<p><em>Claim 2: The “Taj” in “Taj Mahal” refers to the Tajik people.</em></p>
<p>This claim was made by a tour guide in the Pamir region. He was unclear on the specifics.</p>
<p>The Taj Mahal was completed in 1653 by a Mughal Emperor for his wife. <a href="https://en.wikipedia.org/wiki/Taj_Mahal#Etymology">According to Wikipedia</a>, the precise etymology of the name is unknown, but the best guess is that “taj” is derived from a mixture of Arabic and Persian to mean either “crown,” “illustrious,” or “illuminated.”</p>
<p>However, Tajik is a Persian language, so maybe there’s a connection? The <a href="https://en.wikipedia.org/wiki/Tajikistan#Etymology">Wikipedia article on Tajikistan</a> says that “Tajik” probably referred to a Persian tribe but “the&nbsp;Library of Congress’s 1997 Country Study of Tajikistan found it difficult to definitively state the origins of the word “Tajik” because the term is ’embroiled in twentieth-century political disputes about whether Turkic or Iranian peoples were the original inhabitants of Central Asia.'”</p>
<p>I tried some other Googling and found <a href="https://www.facebook.com/100064187794714/posts/3066747023381798/">a random Facebook post</a> claiming that “The builder of the Taj Mahal was from Khojand,” a city in Tajikistan. But the Facebook page’s own source only says that <a href="https://en.wikipedia.org/wiki/Ustad_Ahmad_Lahori">Ustad Ahmad Lahori</a>‘s father was from Khojand. Lahori himself was unsurprisingly born in Lahore (modern-day Pakistan) and his Wikipedia page says nothing about Khojand.</p>
<p><strong>Verdict: Probably Completely False</strong></p>
<p><img data-attachment-id="3457" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8530/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8530.jpg" data-orig-size="4032,3024" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8530" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8530.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8530.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8530.jpg?w=760" alt="" width="760" height="570"></p>
<p><em>Claim 3: Tajikistan is an emerging tourist hot spot and it’s a good thing I visited when I did because soon the country will be swarmed by tourists</em></p>
<p>I heard this claim from my Pamir tour driver, at least two other random Tajiks, and two European travellers.</p>
<p>Tajikistan’s <a href="https://en.wikipedia.org/wiki/Tajikistan">Wikipedia page</a> doesn’t mention tourism, and the Tajikistan economy <a href="https://en.wikipedia.org/wiki/Economy_of_Tajikistan">Wikipedia page</a> only has a small tourism section that provides no statistics. The World Bank <a href="https://data.worldbank.org/indicator/ST.INT.XPND.CD?locations=TJ">has figures</a> that usually end around 2020 showing a paltry tourism industry; the “number of arrivals” chart ends in 2018 at a peak of just over 1 million. <a href="https://www.statista.com/outlook/mmo/travel-tourism/tajikistan#revenue">Statista</a> provides this chart for Tajikistan’s national tourism revenue:</p>
<p><img data-attachment-id="3539" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/tajik-tourism/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/tajik-tourism.png" data-orig-size="1027,487" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Tajik tourism" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/tajik-tourism.png?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/tajik-tourism.png?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/tajik-tourism.png?w=760" alt="" width="760" height="360"></p>
<p>The World Bank’s <a href="https://data.worldbank.org/indicator/ST.INT.RCPT.CD?most_recent_value_desc=false">rankings of every country by tourism revenue</a> lists Tajikistan at $102.4 million in 2020, around the same level as Belize, Paraguay, the Dominican Republic, and… Bermuda? How can Bermuda possibly make less tourism money than Tajikistan? And how is Tajikistan listed at over $100 million when, according to Statista, it has yet to surpass $74 million in any year? Are all these figures messed up because of Covid? Are tourism revenue estimates just really unreliable in certain countries? I don’t know.</p>
<p>(Side note – dead last on the World Bank’s list of countries by tourism revenue is none other than… <a href="https://mattlakeman.org/2023/11/07/notes-on-guinea/">Guinea</a>. Which, as I’ll never get tired of pointing out, might be one of the only countries on earth <a href="https://www.cia.gov/the-world-factbook/field/telephones-fixed-lines/country-comparison/">without telephone lines</a>. Also, <a href="https://mattlakeman.org/2023/08/16/notes-on-mauritania/">Mauritania</a> is ranked seventh to last and <a href="https://mattlakeman.org/2024/01/27/other-notes-on-west-africa/">Guinea-Bissau</a> is 14th to last.)</p>
<p>Putting the numbers aside, I can definitely see the argument for Tajikistan’s impending tourist popularity. Right now, it’s firmly in the “hidden gem” category for travellers due to its beauty and remoteness. The next step is to gain popularity due to travel bloggers and YouTubers and move more into the mainstream, as is the trend for any naturally pretty place that isn’t too politically unstable.</p>
<p>While travelling throughout the Stans, I met few non-Russian tourists, but every single one of them was an experienced traveller: a digital nomad living in Georgia, a Swiss guy making his way to Thailand, a Spaniard who had been all over the world, an American missionary installing wells, etc. I doubt any one of them had been to fewer than 30 countries. If I go back to Tajikistan ten years from now, I doubt the traveller cohort will be the same.</p>
<p><strong>Verdict: Probably True</strong></p>
<p><img data-attachment-id="3462" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6393/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6393.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714667023&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;27.5&quot;,&quot;iso&quot;:&quot;2500&quot;,&quot;shutter_speed&quot;:&quot;0.01&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6393" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6393.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6393.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6393.jpg?w=760" alt="" width="760" height="507"></p>
<p><em>Claim 4: Knowing me turns men into womanizers.</em></p>
<p>This claim was made by a Tajik high schooler with highly questionable English skills, who, after meeting and talking with me, an American, proclaimed that he would tell everyone in his class about his encounter, which would make him very popular, and thus he would soon become, in his own words, “a womanizer.”</p>
<p>I know many people, and to my knowledge, very few of them are womanizers. I cannot speculate on the causality at play.</p>
<p><strong>Verdict: Mostly False</strong></p>
<p><img data-attachment-id="3454" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6064/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6064.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714559058&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;67.5&quot;,&quot;iso&quot;:&quot;3200&quot;,&quot;shutter_speed&quot;:&quot;0.0071428571428571&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6064" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6064.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6064.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/dscf6064.jpg?w=760" alt="" width="760" height="507"></p>
<h2><strong><u>Miscellaneous</u></strong></h2>
<ul>
<li>In Dushanbe, people mostly speak Russian, while outside the capital, people mostly speak Tajik, though anyone educated speaks both. I’m told this trend between Russian and the main local language carries throughout the Stans (except maybe Turkmenistan).</li>
<li>Dushanbe was previously known as “Stalinabad” from <a href="https://www.theguardian.com/cities/2017/oct/19/demolishing-dushanbe-former-stalinabad-erasing-soviet-past">1929 to 1960</a>.</li>
<li>“Dushanbe,” derives from the Persian word for “Monday,” which was the traditional market day for this settlement on the Silk Road.</li>
<li>Tajikistan’s currency is the Somoni, while Kyrgyzstan and Uzbekistan each have their own currency called the Som. The Somoni and Som are both named after Ismoil Samani, the aforementioned ninth century <a href="https://en.wikipedia.org/wiki/Ismail_Samani">Samanid amir of Transoxiana and Khorasan</a>. I’m pretty sure Samani’s veneration in the Stans is similar to that of many historical figures in the <a href="https://mattlakeman.org/2022/07/17/notes-on-the-balkans/">Balkans</a>: when all these countries got independence, they looked into their histories for some local guy who did some important thing and they made him a national hero even though little is known about his life. From reading his Wikipedia page, Samani seemed like an above average regional warlord, but his only real claim to fame was bringing Islam to Central Asia. IMO, Uzbekistan was wise to latch on to the far more impressive Timur the Lame as their main historical figure.</li>
<li>Another faded Tajik prestige record: the <a href="https://en.wikipedia.org/wiki/Nurek_Dam">Nurek Dam</a> was the highest man-made dam in the world after the Soviets finished building it in 1980. The damned Chinese <a href="https://en.wikipedia.org/wiki/Jinping-I_Dam">took the top spot</a> in 2013, but hope springs anew as the Tajik government is trying to finish construction on the <a href="https://en.wikipedia.org/wiki/Rogun_Dam">Rogun Dam</a>, a Soviet project started in 1976, abandoned in 1993, and resumed in 2016, which may end up being even higher than China’s dam.</li>
<li><a href="https://en.wikipedia.org/wiki/Buzkashi">Buzkashi</a> is a traditional and still moderately active sport throughout the Stans (including Afghanistan) which basically consists of two teams of 4-10 individuals on horseback attempting to move (either by hitting, kicking, or picking up) a decapitated goat or calf carcass across an enclosed field into the other team’s goal, which is usually accomplished by the rider flinging himself off the horse and into the goal with the carcass in hand. <a href="https://www.youtube.com/watch?v=1JUn8MsEyPs">See for yourself</a>. Sadly, I could not find a match to watch for myself, but according to Wikipedia, Tajikistan’s unique form of the game largely does away with teams in favor of a free-for-all individual play (though informal alliances can be formed).</li>
<li>Tajikistan has <a href="https://en.wikipedia.org/wiki/Safed_Dara">a single ski resort</a> complete with a Soviet-era hotel.</li>
<li>There are still a bunch of Lenin statues dotted throughout the Stans. Here is one from a small town in Tajikistan:</li>
</ul>
<p><img data-attachment-id="3624" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6957/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6957.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1715434110&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;16&quot;,&quot;iso&quot;:&quot;160&quot;,&quot;shutter_speed&quot;:&quot;0.016666666666667&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6957" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6957.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6957.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6957.jpg?w=760" alt="" width="760" height="507"></p>
<ul>
<li>Tajikistan has a lot of Hollywood-style signs hanging over cities and towns. For instance:</li>
</ul>
<p><img data-attachment-id="3547" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/dscf6452/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6452.jpg" data-orig-size="6240,4160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;22&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;X-S10&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1714924878&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;80&quot;,&quot;iso&quot;:&quot;1000&quot;,&quot;shutter_speed&quot;:&quot;0.0041666666666667&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="DSCF6452" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6452.jpg?w=300" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6452.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/06/dscf6452.jpg?w=760" alt="" width="760" height="507"></p>
<ul>
<li>Spotted in the Tajikistan National Museum, the ultimate Soviet Chad:</li>
</ul>
<p><a href="https://mattlakeman.org/wp-content/uploads/2024/05/img_8541.jpg"><img data-attachment-id="3417" data-permalink="https://mattlakeman.org/2024/06/20/notes-on-tajikistan/img_8541/" data-orig-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8541.jpg" data-orig-size="3024,4032" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="IMG_8541" data-image-description="" data-image-caption="" data-medium-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8541.jpg?w=225" data-large-file="https://mattlakeman.org/wp-content/uploads/2024/05/img_8541.jpg?w=760" loading="lazy" src="https://mattlakeman.org/wp-content/uploads/2024/05/img_8541.jpg?w=760" alt="" width="760" height="1013"></a></p>

			
		</div><!-- .entry-content -->
	
	<!-- .entry-footer -->
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Reining in America's $3.3T tax-exempt economy (185 pts)]]></title>
            <link>https://taxfoundation.org/research/all/federal/501c3-nonprofit-organization-tax-exempt/</link>
            <guid>40740237</guid>
            <pubDate>Thu, 20 Jun 2024 16:03:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://taxfoundation.org/research/all/federal/501c3-nonprofit-organization-tax-exempt/">https://taxfoundation.org/research/all/federal/501c3-nonprofit-organization-tax-exempt/</a>, See on <a href="https://news.ycombinator.com/item?id=40740237">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
<article id="post-173133">
  
  <div>
          
    
<h2>Key Findings</h2>
<ul>
<li>For over a century, lawmakers have exempted politically favored organizations and industries from the <span><a href="https://taxfoundation.org/taxedu/glossary/tax/">tax</a><cite>A tax is a mandatory payment or charge collected by local, state, and national governments from individuals or businesses to cover the costs of general government services, goods, and activities.
</cite></span> code. As a result, the tax-exempt nonprofit economy now comprises 15 percent of GDP, spans more than 1.8 million organizations, and manages over $8 trillion in assets. In 2019, it pocketed more than $238 billion in net income.</li>
<li>The tax-exempt sector is overdue for review and reform. The U.S. needs a principled, rules-based approach to 1) distinguish between benevolent organizations and tax-exempt businesses, and 2) level the playing field between the business activities of nonprofit and for-profit entities.</li>
<li>Many industries exempted from the income tax were designated as such in the Wilson-Gorman <span><a href="https://taxfoundation.org/taxedu/glossary/tariffs/">Tariff</a><cite>Tariffs are taxes imposed by one country on goods or services imported from another country. Tariffs are <a href="https://taxfoundation.org/topics/tariffs-and-trade/">trade barriers</a> that raise prices and reduce available quantities of goods and services for U.S. businesses and consumers.
</cite></span> Act of 1894 and the Tax Act of 1909, but they reflect the social norms of the 19<sup>th</sup> century, not our 21<sup>st</sup> century economy.</li>
<li>The majority of tax-exempt organizations today are business-like in form and function, including credit unions, hospitals, utilities, insurance companies, universities, professional athletic associations, golf clubs, and consulting firms, to name a few.</li>
<li>Business-like income has been the fastest growing source of income for 501(c)(3) tax-exempt organizations over the past 30 years, now accounting for 71 percent of their income. Charitable donations make up just 12 percent of nonprofit income.</li>
<li>More than half (55 percent) of all the income generated by 501(c)(3) organizations comes from tax-exempt hospitals and health-care plans. The largest nonprofit in America is Kaiser Permanente. Kaiser’s health plan, hospitals, and state health plans generated over $110 billion in revenues in 2019.</li>
<li>In 2019, there were 325 501(c)(3) nonprofits with more than $1 billion in revenues—nearly all of which are hospitals and universities.</li>
<li>The unrelated business income tax (UBIT) rules that were intended to rein in tax-exempt businesses have become toothless and have allowed the growth of large nonprofit businesses.</li>
<li>A reasonable rewriting of the tax-exempt rules should include narrowing the definition of “public charity” and subjecting all non-charitable income to the corporate tax rate of 21 percent. Doing so could raise nearly $40 billion annually in new tax revenues.</li>
</ul>
<h2>Introduction</h2>
<p>America has a $3.3 trillion <span><a href="https://taxfoundation.org/taxedu/glossary/tax-gap/">tax gap</a><cite>The tax gap is the difference between taxes legally owed and taxes collected. The gross tax gap in the U.S. accounts for at least 1 billion in lost revenue each year, according to the <a href="https://www.irs.gov/pub/irs-pdf/p5364.pdf">latest</a> estimate by the <a href="https://taxfoundation.org/taxedu/glossary/internal-revenue-service-irs/">IRS</a> (2011 to 2013), suggesting a voluntary taxpayer compliance rate of 83.6 percent. The net tax gap is calculated by subtracting late tax collections from the gross tax gap: from 2011 to 2013, the average net gap was around 1 billion.
</cite></span>. But it’s not the tax gap we hear most about: the revenues the IRS fails to collect because of underreporting, mistakes, or outright tax avoidance. This tax gap rests squarely with <a href="https://taxfoundation.org/location/washington/">Washington</a> lawmakers who, starting more than a century ago, began exempting politically favored institutions, organizations, and activities from the tax code.</p>
<p>The result today is a massive untaxed economy that comprises 15 percent of GDP<a href="#_ftn1" name="_ftnref1">[1]</a>, spans more than 1.8 million organizations<a href="#_ftn2" name="_ftnref2">[2]</a>, manages over $8 trillion in assets, and collectively pocketed more than $238 billion in net income in 2019<a href="#_ftn3" name="_ftnref3">[3]</a>.</p>
<p>After more than a century of unbridled expansion, the scope of this untaxed economy is overdue for review and reform. Many of the nearly 30 nonprofit designations under 501(c) of the Internal Revenue Code have their origins in the Wilson-Gorman Tariff Act of 1894 and are artifacts of a more communitarian 19<sup>th</sup> century American society, not a reflection of our modern 21<sup>st</sup> century economy.</p>
<p>Contrary to the common image of nonprofits as purely benevolent organizations surviving on charitable donations, such organizations are in the minority. The vast majority of tax-exempt organizations are business-like in form and function, such as credit unions, utilities, insurance companies, hospitals, universities, professional athletic associations, golf clubs, casinos, cemeteries, and consulting firms, to name a few. And many of these organizations use their tax-exempt status to compete with taxpaying for-profit firms.</p>
<p>Unfortunately, the guardrails lawmakers have created to prevent unfair competition from nonprofits have been either too weak or too flexible to draw firm lines between benevolent activities, such as a local women’s shelter, and large business enterprises, such as the $1.1 billion NCAA. Both are considered “charitable” nonprofit organizations.</p>
<p>Business-like income has been the fastest growing source of income for 501(c)(3) charitable organizations, entities that can accept tax-deductible donations. Indeed, of the nearly $2.5 trillion in revenues that charitable organizations received in 2019, just 12 percent came from donors’ tax-deductible contributions and gifts. The majority of their income came from business-like revenues such as insurance payments, ticket sales, TV broadcast rights, royalties, and federal programs such as Medicare and Medicaid.   </p>
<p>This raises the question: should an organization be considered a nonprofit, or even a charity, if only a fraction of its revenues come from charitable donations?</p>
<p>The <span><a href="https://taxfoundation.org/taxedu/glossary/tax-base/">tax base</a><cite>The tax base is the total amount of income, property, assets, consumption, transactions, or other economic activity subject to taxation by a tax authority. A narrow tax base is non-neutral and inefficient. A <a href="https://taxfoundation.org/taxedu/glossary/base-broadening/">broad</a> tax base reduces tax administration costs and allows more revenue to be raised at lower rates.
</cite></span> is narrower than it need be because of how much nonprofit income is fully exempt from taxation. Charitable donations are tax deductible for the donor and tax-exempt for the receiving organization, what economists call double-non-tax-income. Similarly, corporations may deduct payments to nonprofits for such things as memberships, broadcast rights, and licensing fees. Thus, all of this income is outside of the federal tax base.</p>
<p>As Congress’s Joint Committee on Taxation (JCT) has observed, “There is no unifying theme or singular principle that explains <span><a href="https://taxfoundation.org/taxedu/glossary/tax-exemption/">tax exemption</a><cite>A tax exemption excludes certain income, revenue, or even taxpayers from tax altogether. For example, nonprofits that fulfill certain requirements are granted tax-exempt status by the Internal Revenue Service (<a href="https://taxfoundation.org/taxedu/glossary/internal-revenue-service-irs/">IRS</a>), preventing them from having to pay income tax.
</cite></span> for the many diverse organizations in the exempt sector.”<a href="#_ftn4" name="_ftnref4">[4]</a> Nor, JCT says, is there an “agreed upon explanation of the rationale behind the charitable tax exemption and <span><a href="https://taxfoundation.org/taxedu/glossary/tax-deduction/">tax deduction</a><cite>A tax deduction is a provision that reduces <a href="https://taxfoundation.org/taxedu/glossary/taxable-income/">taxable income</a>. A <a href="https://taxfoundation.org/taxedu/glossary/standard-deduction/">standard deduction</a> is a single deduction at a fixed amount. <a href="https://taxfoundation.org/taxedu/glossary/itemized-deduction/">Itemized deductions</a> are popular among higher-income taxpayers who often have significant deductible expenses, such as <a href="https://taxfoundation.org/taxedu/glossary/salt-deduction/">state and local taxes</a> paid, <a href="https://taxfoundation.org/taxedu/glossary/mortgage-interest-deduction-mid/">mortgage interest</a>, and charitable contributions.
</cite></span>.”</p>
<p>A principled, rules-based approach to narrow the scope of qualified tax-exempt entities is needed. For example, taxing the income of nonprofits from sources other than charitable donations would broaden the tax base in a fair and economically efficient way. Such a rule would protect the charitable donations received by benevolent organizations while putting nonprofit businesses on the same level playing field as for-profit firms.</p>
<p>As we’ll see, based on 2019 data, taxing the business-like income of nonprofits could raise nearly $40 billion annually.</p>
<p>While there still may be a role in today’s economy for insurance-providing fraternal organizations, credit unions, and collegiate sports leagues, there is no longer a justification to exempt them from taxation.</p>
<h3>The Scope of This Study Is Limited to 501(c) Organizations</h3>
<p>It should be noted that the Tax Foundation is a 501(c)(3) tax-exempt organization whose mission is to advocate for economically principled tax policy, even if it means questioning our own industry.</p>
<p>The scope of this paper is limited to organizations that fall under 501(c) of the Internal Revenue Code, but the true scope of the tax-exempt economy is much larger. Churches, for example, are not required to file tax returns, so the government does not track how much income they collect annually, although Giving USA estimates that churches raised $143.6 billion in revenues in 2022.<a href="#_ftn5" name="_ftnref5">[5]</a> Churches are not included in the study, but some 501(c) religious organizations are included.</p>
<p>Another tax-exempt sector that is not included is quasi-government entities such as state public universities, the <a href="https://taxfoundation.org/location/tennessee/">Tennessee</a> Valley Authority, and Federal Home Loan Banks. These tax-exempt enterprises generate roughly $500 billion in untaxed annual income.</p>
<p>The paper also ignores the charitable deduction and other tax breaks that shield income from taxation. Tax expenditures in the code topped $1.7 trillion in 2023 and deserve their own separate analysis.</p>
<h2>The Nonprofit Tax Code Reflects America’s Pre-20<sup>th</sup> Century Self-Help Roots</h2>
<p>Volunteer and benevolent organizations existed in America long before our founding and even longer before the first federal income tax. Fraternal beneficiary societies provided insurance benefits for widows, aid for those too sick to work, and education for orphans.<a href="#_ftn6" name="_ftnref6">[6]</a> Farmers banded together into cooperatives to provide lending for crops and marketing assistance. Credit unions and building and loan associations were formed to provide banking and lending to their members who worked in specific trades or lived in local communities.<a href="#_ftn7" name="_ftnref7">[7]</a> Charity hospitals were common in most cities.</p>
<p>Such was the state of American society when lawmakers drafted a new income tax in the Wilson-Gorman Tariff Act of 1894 and decided to exempt certain organizations. But their decisions seemingly were based on social conventions rather than a coherent theory or principle.</p>
<p>The act specifically exempted “corporations, companies, or associations organized and conducted solely for charitable, religious, or educational purposes, including fraternal beneficiary societies, orders, or associations operating upon the lodge system and providing for the payment of life, sick, accident, and other benefits to the members of such societies, orders, or associations and dependents of such members.”<a href="#_ftn8" name="_ftnref8">[8]</a> It also exempted savings banks, institutions that lent only to members, mutual insurance companies, and the income generated by the stocks and securities owned by charitable organizations.</p>
<p>Although the Supreme Court struck down the 1894 income tax, the bill’s tax-exempt language became the foundation for all subsequent tax legislation addressing nonprofits, including the Revenue Act of 1909, which established an <span><a href="https://taxfoundation.org/taxedu/glossary/excise-tax/">excise tax</a><cite>An excise tax is a tax imposed on a specific good or activity. Excise taxes are commonly levied on cigarettes, alcoholic beverages, <a href="https://taxfoundation.org/taxedu/glossary/soda-tax/">soda</a>, <a href="https://taxfoundation.org/taxedu/glossary/gas-tax/">gasoline</a>, insurance premiums, amusement activities, and betting, and typically make up a relatively small and volatile portion of state and local and, to a lesser extent, federal tax collections.
</cite></span> on corporate profits.</p>
<h2>The 1909 Tax Bill Formalized Many of the Exempt Sectors We Know Today</h2>
<p>The Revenue Act of 1909 expanded the sectors first recommended for exemption in 1894 by adding labor, agricultural, and horticultural organizations. It further defined the nature of nonprofit organizations as those “operated exclusively for the mutual benefit of their members.” And “no part of the net income of which inures to the benefit of any private stockholder or individual.”<a href="#_ftn9" name="_ftnref9">[9]</a></p>
<p>The prohibition against private inurement became a key factor in defining a “nonprofit” organization. “Nonprofit” is a bit of a misnomer because charitable organizations do have net income after expenses, what would otherwise be called “profits.” But nonprofit tax rules prohibit such surpluses from being distributed to any individual or “shareholder” and must be reinvested in the mission of the organization.</p>
<p>Despite these provisions, lawmakers never really clarified a defining theory of why some organizations should be tax-exempt and not others. Indeed, the Senate debate over the 1909 tax bill illustrated the ad hoc nature of the decision-making, not to mention the propensity of senators to stretch the definitions to include their favored industries and organizations.</p>
<p>Sen. Augustus Bacon (D-GA) was the lead sponsor of an amendment to define which activities should be exempt from the new corporate tax. One senator asked Sen. Bacon if the for-profit Methodist Book Concern in Nashville, Tennessee, should be exempt because it devoted all of its profits to “religious, benevolent, charitable, and educational purposes.”<a href="#_ftn10" name="_ftnref10">[10]</a> Bacon argued that it should be tax-exempt because “It is organized for profit, but it is not organized for individual profit.”<a href="#_ftn11" name="_ftnref11">[11]</a></p>
<p>To address such questions, senators inserted the word “exclusively” into Bacon’s amendment to distinguish between the use of business profits worthy of tax exemption and profits that were not worthy.</p>
<p>An even more intense debate erupted over exempting building and loan associations from taxation. While some senators argued that the mission of helping the poor purchase homes was worthy of tax exemption, others argued that there were many large building and loan associations that were wholly commercial in nature and should not qualify for tax exemption. Senators ultimately agreed to add the words “mutual” and “domestic” to distinguish between small, local, and member-oriented building and loan associations and the large commercial firms.</p>
<h2>Lawmakers Worried That Too Much of the Economy Was Exempted from Tax</h2>
<p>Even with the adoption of qualifying language, some senators worried that too many sectors were being exempted, thus putting an unfair burden on the businesses still subject to the corporate tax.</p>
<p>Sen. Coe I. Crawford (R-SD) said, “The only question here is, Is it a corporation for profit and has it a net income to which this proposed [tax] law should apply? If so, why should it be exempted?”</p>
<p>Further, he predicted that groups would take advantage of the ambiguous language. “I think there is too much false sentiment about this matter,” he said. “Some one will come here and say ‘We are a lodge; we are an organization for the mutual help and benefit of our members, and therefore this law ought not to apply to us.’”<a href="#_ftn12" name="_ftnref12">[12]</a></p>
<p>Sen. Weldon B. Heyburn (R-ID) went a step further and asked, “Will some Senator tell me what remains and who there is remaining to pay this tax? I have just made a casual summary of the amount of capital exempted, and, according to the statistics, it is something over $1,800,000,000. There cannot be very much remaining.”<a href="#_ftn13" name="_ftnref13">[13]</a></p>
<p>Heyburn warned about the cumulative impact of the efforts by his fellow senators to exempt their special interests from the income tax. He said, “Having made a hasty mental summary as the various exemptions were proposed, and knowing as I do that you can call one of these concerns a ‘mutual benefit association,’ a ‘building association,’ or anything else, when it really may be a bank. I am merely calling attention to the fact that there will be very little left upon which to collect this revenue.”</p>
<p>Perhaps the most prophetic comment came from Sen. Joseph Bailey (D-TX), a strong proponent of the corporate tax, who said, “I would rather exempt some that ought to be taxed than to tax some that ought to be exempt.”</p>
<p>As we will see below, that philosophy likely explains the $3.3 trillion size of the untaxed economy today.</p>
<h2>Lawmakers Continued to Exempt More Sectors and Added the Charitable Deduction</h2>
<p>Sen. Crawford’s concern that lax definitions would lead to a proliferation of tax-exempt organizations proved to be far-sighted. The Revenue Act of 1913 expanded the list of exempt organizations even further, adding mutual savings banks, cemeteries, business leagues, chambers of commerce, civic leagues, and boards of trade. The Act also introduced the notion that civic leagues and similar organizations be “operated exclusively for the promotion of social welfare,” a term lawmakers did not define.<a href="#_ftn14" name="_ftnref14">[14]</a></p>
<p>The Revenue Act of 1916, which increased income tax rates and brackets, added to the list of tax-exempt organizations “clubs organized and operated exclusively for pleasure, recreation and other non-profitable purposes . . . cooperative banks, mutual hail, cyclone, or fire insurance companies, mutual ditch or irrigation companies, mutual telephone companies . . . farmers’ marketing associations . . . federal land banks and national farm loan associations,” to name just a few.<a href="#_ftn15" name="_ftnref15">[15]</a></p>
<p>The deduction for charitable gifts was established in the Revenue Act of 1917 out of concern that the high income tax rates levied during World War I would discourage charitable giving. Deductible contributions were limited to 15 percent of taxable net income.<a href="#_ftn16" name="_ftnref16">[16]</a> </p>
<h2>A “Nonprofit” Pasta Company Led to Stricter Limits on Business Activity</h2>
<p>Lawmakers’ failure to establish principled guardrails regarding how much business activity a nonprofit could engage in finally reached a head in the late 1940s when <a href="https://taxfoundation.org/location/new-york/">New York</a> University acquired C.F. Meuller pasta company with the intent of benefiting from the profits generated by selling macaroni.<a href="#_ftn17" name="_ftnref17">[17]</a> Such arrangements were not uncommon at the time because nonprofit law operated under a “destination of income” principle, which allowed income from any source to be tax-free as long as it was dedicated to a charitable purpose.<a href="#_ftn18" name="_ftnref18">[18]</a></p>
<p>In 1949, the Bureau of Internal Revenue, the precursor to the Internal Revenue Service, released the first-ever analysis of 990 tax returns, representing all tax-exempt organizations in 1946.<a href="#_ftn19" name="_ftnref19">[19]</a> The report separated the returns into two groups: business types, such as farm marketing cooperatives and mutual savings banks, and nonbusiness types such as civic clubs, charities, labor unions, and recreational groups that were not principally formed for business activities.</p>
<p>There were nearly 100,000 tax-exempt returns filed for 1946, and they reported total revenues of $9.8 billion. Of these, nearly 28,000 were business returns, accounting for $7.0 billion of the total revenues.</p>
<p>Interestingly, the report found that more than one-third of nonbusiness organizations reported business income totaling $1.1 billion. Business income accounted for 62 percent of the total revenues for “nonbusiness” organizations.</p>
<p>But even for organizations that did not report business-related income, charitable contributions and gifts were not a major share of their revenues. Indeed, charitable contributions and gifts composed 37.6 percent of their receipts. The majority of their income was generated by dues assessments from members as well as investment income.    </p>
<p>Cases such as the New York University pasta company renewed concern among lawmakers that nonprofits were unfairly competing against for-profit firms and potentially shrinking the corporate tax base.</p>
<p>Lawmakers’ solution was to establish the unrelated business income tax (UBIT) rules as part of the Revenue Act of 1950. UBIT requires that any business income be “substantially related” to the organization’s core mission. Business income that is not substantially related is taxed at the statutory corporate tax rate.</p>
<p>Shortly after the passage of UBIT, Congress voted in 1951 to remove the tax exemption for mutual savings banks and savings and loan associations “to establish parity between competing financial institutions.”<a href="#_ftn20" name="_ftnref20">[20]</a>   </p>
<p>However, as we’ll see later, UBIT has become so generous in defining what is allowable business income for nonprofits that it generates very little revenue each year.</p>
<h2>There Are Two Types of Nonprofits: Public-Serving and Member-Serving</h2>
<p>The Internal Revenue Code of 1954 was a watershed moment in tax policy.<a href="#_ftn21" name="_ftnref21">[21]</a> In addition to establishing the modern progressive income tax code that we recognize today, the Act formalized the designation of tax-exempt organizations under section 501(c) of the Internal Revenue Code.</p>
<p>The 1954 Act listed 16 types of tax-exempt organizations, but as Table 1 illustrates, the list has since grown to nearly 30 designations, although some are legacy designations and no longer in use.</p>
<p>The nonprofit world is generally split into two broad categories: public-serving and member-serving organizations.</p>
<ul>
<li><strong>Public-Serving</strong>: The most well-known nonprofits are 501(c)(3) public charity organizations intended to serve broad, public interests such as tending to the poor, education, public health, scientific research, and cultural interests. These organizations can accept tax-deductible contributions.</li>
<li><strong>Member-Serving</strong>: All other 501(c) designations are largely member-serving organizations, including credit unions, business leagues, professional associations, rural utilities, real estate holding companies, insurance companies, and cemeteries. These organizations cannot accept charitable donations.</li>
</ul>
<h2>The Tax-Exempt Sector Is Equal to the Fifth-Largest Economy in the World</h2>
<p>The senators who worried about the expanding list of tax-exempt entities in the Tax Act of 1909 would be shocked at the size of the tax-exempt economy today. Sen. Heyburn made a casual estimate of the amount of capital exempted at “something over $1,800,000,000,” or roughly 5 percent of U.S. GDP in 1909.<a href="#_ftn22" name="_ftnref22">[22]</a> Today, the tax-exempt economy commands 15 percent of GDP, roughly equal to the GDP of <a href="https://taxfoundation.org/location/california/">California</a>, which has the fifth-largest economy in the world.</p>
<p>Table 1 illustrates the breadth of the untaxed economy under 501(c) of the Internal Revenue Code. The data in this table is based on the most recent 2019 nonprofit datasets compiled and formatted by the Urban Institute’s National Center for Charitable Statistics. The Urban Institute datasets are drawn from various IRS data sources and include “financial information, governance details, and other organizational characteristics.”<a href="#_ftn23" name="_ftnref23">[23]</a></p>
<p>IRS data for tax-exempt organizations is available for COVID-19 years, 2020, 2021, and 2022. However, we chose not to use this data because it does not represent a typical year.</p>
<p>While the total number of nonprofits is over 1.8 million, the table represents organizations that file a full 990 federal income tax return providing complete financial information, which amounts to about 400,000 entities. The exception is 501(c)(1) federal credit unions that are not required to file a 990 tax return. Their financial information is sourced from the National Credit Union Administration. Many small nonprofits are allowed to file a postcard return and, thus, are generally not included in the data sets made available by the IRS.</p>
<!-- #tablepress-460 from cache -->
<p>In 2019, tax-exempt nonprofit organizations reported nearly $3.3 trillion in income and roughly $3.1 trillion in expenses, which resulted in $238 billion in net income. They commanded over $8 trillion in assets.</p>
<p>The largest category of nonprofit by far is the 501(c)(3) category of organizations. In 2019, these organizations booked nearly $2.5 trillion in revenues, equal to 75 percent of all nonprofit revenues. Their net income totaled nearly $152 billion, equal to 63 percent of all nonprofit net income. They also manage the majority of nonprofit assets.</p>
<p>The largest member-serving organizations by income include various insurance and retirement entities under sections 501(c)(4) Civic Leagues and Social Welfare Organizations (the largest of which are health insurers), 501(c)(9) Voluntary Employee’s Beneficiary Associations, and 501(c)(11) Teachers Retirement Fund Associations.</p>
<p>Federal and state credit unions, operating under sections 501(c)(1) and 501(c)(14), respectively, together generated $82.4 billion in revenues in 2019 and commanded over $1.5 trillion in assets in 2019, equal to 18 percent of all nonprofit assets.</p>
<p>Let’s first take a deeper look at public-serving nonprofits since they are by far the largest sector.</p>
<h2>The Majority of Public-Serving 501(c)(3) Nonprofits Are Business-Like Entities</h2>
<p>The universe of public-serving nonprofits is vast and diverse. Indeed, to manage this diversity, 501(c)(3) organizations have been further segmented into 28 codes under the National Taxonomy of Exempt Entities (NTEE), as illustrated in Table 2 below.</p>
<p>However, if we were to generalize the public-serving nonprofit industry by its dominant industries, it could be called the hospital, health insurance, university, and education sector. Of the $2.5 trillion in revenues collected by 501(c)(3) organizations in 2019, 55 percent was generated by nonprofit hospitals and health insurance firms, and another 12 percent was generated by higher education entities such as colleges and universities.</p>
<h2>There Are Many Very Rich Nonprofits</h2>
<p>In 2019, there were 325 501(c)(3) nonprofits with more than $1 billion in revenues—nearly all were either hospitals or universities. Among the $1 billion organizations that were not hospitals or universities:</p>
<ul>
<li>Just three are relief-oriented: World Vision, Feeding America, and the American Red Cross.</li>
<li>One is a museum: the Smithsonian Institution.</li>
<li>Four are essentially government contractors: the MITRE Corporation, Battelle Memorial Institute, Advanced Technology International, and Aerospace Corporation.</li>
<li>One is the largest collegiate athletic association: the NCAA.</li>
<li>Three are university-related organizations: the College Board, the Research Foundation for the State of New York, and the Educational Testing Service.</li>
<li>And the rest are donor-advised funds or public foundations: the Nemours Foundation, National Philanthropic, Goldman Sachs Philanthropy Fund, Schwab Charitable Fund, and Fidelity Investments Charitable Gift Fund.</li>
</ul>
<p>The largest nonprofit in America is Kaiser Permanente. In 2019, Kaiser’s health plan, hospitals, and state health plans generated more than $110 billion in combined tax-exempt revenues and over $5.6 billion in net income. No other nonprofit came close to Kaiser’s revenues. If Kaiser were for-profit, it would be among the Fortune 40 in revenues.</p>
<!-- #tablepress-461 from cache -->
<p>The other hospitals with more than $10 billion in revenues included the University of <a href="https://taxfoundation.org/location/pennsylvania/">Pennsylvania</a> Medical Center (UPMC) with $14.8 billion in revenues, Partners Health Care System with $13.6 billion, the Cleveland Clinic Foundation with $11.5 billion, and the Mayo Clinic Group with $10.4 billion. </p>
<p>Overall, nonprofit hospitals and health plans generated $1.4 trillion in revenues in 2019 and $61 billion in net income. They held assets of $1.9 trillion. Very little of this income comes from charitable contributions or grants. Urban Institute data shows that charitable contributions comprised 10 percent of hospital revenues and just 3 percent of health plan revenues.</p>
<p>Most hospital revenues are considered “program service income,” which includes insurance payments, patient reimbursements, and payments from Medicare and Medicaid. For health plans, most income is earned from insurance premiums.</p>
<p>Had these profitable health insurance and hospital firms been taxed at the standard corporate tax rate of 21 percent, they could have collectively been liable for nearly $13 billion in taxes in 2019.</p>
<h2>Private Universities and Their Endowments Dominate the Education Sector</h2>
<p>In 2019, there were 51 private universities with more than $1 billion in revenues. Ten universities reported more than $5 billion in income, including the University of Pennsylvania, Harvard, New York University, Johns Hopkins, Stanford, University of Southern California, Columbia, <a href="https://taxfoundation.org/location/massachusetts/">Massachusetts</a> Institute of Technology, Yale, and Cornell. As a group, they held $264 billion in assets.</p>
<p>Collectively, private colleges and universities enjoyed net income of $22.2 billion in 2019. Had they been taxed as for-profit businesses they could have been liable for $4.6 billion in taxes.</p>
<p>Despite their tax-exempt status, the majority of university income comes from sources other than charitable donations from alumni. Overall, nearly 70 percent of university income comes from “program service revenue,” which includes tuition, fees, ticket sales from sporting events, patent royalties, rents from dorms, and cafeteria sales—all considered substantively related to their mission and, thus, exempt from taxes.</p>
<p>By contrast, charitable contributions accounted for 19 percent of total revenues for private universities and colleges.</p>
<p>Many universities have separate investment arms categorized as general “education” organizations, putting them in the same category as private primary and secondary schools.</p>
<p>For example, the $2 billion Gothic Corporation invests on behalf of Duke University. It held $7.6 billion in assets in 2019. Similarly, the Harvard Management Private Equity Corporation managed $31 billion in assets, while the Harvard Private Capital Realty Inc. managed $3.5 billion in assets. The University of <a href="https://taxfoundation.org/location/virginia/">Virginia</a> Investment Management Corporation held $9.8 billion in assets, while the University of <a href="https://taxfoundation.org/location/wisconsin/">Wisconsin</a> Foundation reported $4.1 billion in assets.</p>
<p>The Urban Institute dataset contains more than 800 university-related endowments, foundations, and fund-raising entities in 2019. These entities raised a total of $26.8 billion that year and had more than $209 billion in assets. They ended the year with $7.5 billion in net income which, had it been taxed at 21 percent, could have generated more than $1.5 billion in tax revenues.</p>
<h2>Business-Like Organizations Abound in Unlikely 501(c)(3) Categories</h2>
<p>Many nonprofit categories contain an eclectic mix of large business-like organizations alongside small local organizations. For example, the Arts &amp; Culture sector contains hundreds of local arts projects, dance companies, theater groups, and orchestras. It also includes some very large institutions that could very well be considered for-profit organizations. The Harvard Business School Publishing Corporation is a good example.</p>
<p>In 2019, Harvard Business School Publishing (HBS) generated more than $265 million in revenues. According to its 990 tax return, it ended the year with net income of $3.9 million and paid about $1.1 million in taxes on $14 million in advertising income unrelated to its core mission.<a href="#_ftn24" name="_ftnref24">[24]</a> On paper, it would appear that HBS generated very little in the way of “profits” on its book publishing activities, but that is because it made a $52.9 million transfer to the “President and Fellows of Harvard College” that it booked as an expense, which reduced its true net income. However, if HBS were a for-profit firm, it would be able to deduct any gifts to Harvard or any other nonprofit.</p>
<p>In some respects, this is similar to NYU’s attempt to use the profits from pasta sales to fund university activities. The only difference in Harvard’s case is that both entities are 501(c)(3) organizations.</p>
<p>Other business-like entities under the Arts &amp; Culture umbrella include the Corporation for Public Broadcasting, the Public Broadcasting Service, National Public Radio, and the WGBH network, all nonprofit competitors of for-profit television and radio networks.</p>
<p>Another unique “cultural” entity is Creative Testing Solutions, which generated over $400 million in revenues in 2019, “Providing innovative, customized and exceptional laboratory testing services, in support of our healthcare partners and their life saving missions.”<a href="#_ftn25" name="_ftnref25">[25]</a> These services seem very commercial in nature.  </p>
<h2>Conducting “Science” Can Be Big Business</h2>
<p>Science research was one of the earliest activities to be made tax-exempt. But it is unlikely that those early lawmakers could have imagined how big of an industry “science research” and consulting services has become today and how much it lives off of government largess.</p>
<p>The biggest of these organizations is the Battelle Memorial Institute. By all appearances, Battelle is a government contractor. It manages nine national laboratories for the U.S. Department of Energy and Department of Homeland Security. Battelle bills itself as providing “comprehensive scientific solutions to companies and government agencies across multiple markets.” <a href="#_ftn26" name="_ftnref26">[26]</a> According to Battelle’s 2021 990 tax return, the organization generated $10 billion in revenues, 97 percent of which was from government grants and contracts.</p>
<p>Similar stories can be told about large tax-exempt science and engineering consulting organizations such as the MITRE Corporation, Aerospace Corporation, Fermi Research Alliance LLC, SRI International, Cold Spring Harbor Laboratory, Noblis Inc., SRC Inc., and In-Q-Tel Inc. Each of these organizations provides services for the government and corporations comparable to those provided by for-profit consulting and management firms. They just provide such services as a 501(c)(3) tax-exempt nonprofit.</p>
<p>Many universities have established affiliated research and consulting organizations to provide support and resources for the research activities of the university. The largest of these is the Research Triangle Institute (RTI), which was organized in 1958 by the state universities of <a href="https://taxfoundation.org/location/north-carolina/">North Carolina</a> along with Duke University, which is private. RTI generated more than $967 million in revenues in 2019.</p>
<p>RTI’s online promotional material reads like a commercial research and consulting firm.<a href="#_ftn27" name="_ftnref27">[27]</a> RTI bills itself as “a leading independent, nonprofit research institute, with the contractual, legal, and business structures to serve any client with projects of all sizes.” It combines “the scientific rigor of a university with the focus of a project management firm . . . to deliver what our clients need—on target and on time.”</p>
<p>RTI’s 990 tax return reports that the organization does have “several for-profit entities subject to corporate income taxation,” and its presence in “certain foreign countries results in income taxation in these countries.”<a href="#_ftn28" name="_ftnref28">[28]</a> Yet, RTI qualifies as a 501(c)(3) tax-exempt organization under the U.S. tax code.</p>
<h2>Business Income Is Now the Largest Share of Nonprofit Revenues</h2>
<p>Because of the growth of business-like income over the past three decades, it is hard to call the 501(c)(3) sector the “charitable” sector anymore. Figure 1 shows how the growth in program service revenues has driven the overall growth in nonprofit revenues over the past 30 years. Generally speaking, program service revenues can include Medicare and Medicaid payments, payments for medical services from insurers and patients, tuition, ticket sales, royalties, insurance premiums, conference registration fees, fees and contracts from government agencies, and unrelated business income.</p>
<p>Since 1988, program service revenues have risen from $548 billion, in today’s dollars, to more than $1.8 trillion in 2019—an increase of 310 percent.<a href="#_ftn29" name="_ftnref29">[29]</a></p>
<p>Program revenues comprised 71 percent of nonprofit revenues in 2019, up from 67 percent in 1988. By contrast, charitable contributions comprised just 12 percent of nonprofit revenues in 2019.</p>

<p>As surprising as this may seem, the real story is that charitable contributions have never been the dominant source of income for 501(c)(3) organizations or for tax-exempts generally. As we saw in the Treasury Department’s 1949 study, even for organizations without business-related income, charitable donations were exceeded by dues, membership fees, and other income sources.</p>
<p>IRS data shows that as a share of 501(c)(3) income, contributions fell from 27 percent in 1975 to 18 percent in 1982 and 12 percent in 2019.<a href="#_ftn30" name="_ftnref30">[30]</a></p>
<h2>Nonprofits Are Increasingly Dependent on Funds from Government</h2>
<p>While the 1949 Treasury study separated tax-exempt organizations into business and nonbusiness types, a third type of nonprofit has emerged since the Great Society of the 1960s—government-dependent organizations. Such organizations derive most of their income from government grants, contracts, or programs such as Medicaid, Medicare, public housing, and anti-poverty aid.</p>
<p>As we saw with the research and consulting organizations discussed above, many government agencies rely on nonprofit organizations as contractors or subcontractors, managing programs such as public housing, transit systems, social services, and job training.</p>
<p>Figure 1 shows that government grants alone nearly equal charitable contributions in most years, and government grants do not include revenues from government contracts or programs such as Medicare and Medicaid, which are considered program service income.</p>
<h2>Identifying Purely Benevolent 501(c)(3) Organizations Is Challenging</h2>
<p>Many of the organization types we have reviewed so far are business-like in form and function. But looking at the list of 501(c)(3) NTEE categories, a few stand out as containing more benevolent organizations than business-like organizations.</p>
<p>Employment and job-related organizations (category J) range from job training services to local trade unions. Perhaps the most prominent name in this category is Goodwill Industries, with some 180 local chapters. Dress for Success is another national organization with more than 50 chapters providing business attire and training to women seeking jobs.<a href="#_ftn31" name="_ftnref31">[31]</a></p>
<p>A sizeable number of organizations in this category are lesser-known community-based vocational training and apprenticeship organizations supported by government grants and private donations. Trade unions operate similar apprentice and training programs for carpenters, masons, electricians, and pipe fitters, for example.</p>
<p>Standing out from such training programs are numerous local union chapters, supported by member dues.  </p>
<p>The most benevolent-centered category is K, representing food, agriculture, and nutrition organizations. The Urban Institute dataset includes more than 5,700 food, agriculture, and nutrition organizations with total revenues of nearly $17.8 billion in 2019. Here we find that nearly every organization is a food bank, food pantry, child hunger-related organization, or adult nutrition service such as Meals on Wheels. The largest such organization is the $2.8 billion Feeding America, but most are local in nature such as the $10 million Food Bank of East <a href="https://taxfoundation.org/location/alabama/">Alabama</a> and the $30,000 Westlake Meals on Wheels. </p>
<p>Overall, contributions and grants comprised 90 percent of the revenues for food and nutrition organizations in 2019, which clearly sets these benevolent organizations apart from most other nonprofits.</p>
<p>The housing and shelter organizations comprising category L include a mix of benevolent organizations, government contractors, and business-like entities. Many of the larger organizations in this category are public housing providers or management contractors. The largest such organization is Navigate Affordable Housing Partners in Birmingham, Alabama, which received 99.7 percent of its $605 million in 2019 income from U.S. Department of Housing and Urban Development grants and contracts.<a href="#_ftn32" name="_ftnref32">[32]</a></p>
<p>Vetter Senior Living in Elkhorn, <a href="https://taxfoundation.org/location/nebraska/">Nebraska</a>, is also representative of the more business-like organizations in this category. Started in 1975 by Jack and Eldora Vetter, this chain of senior living facilities received more than half ($134 million) of its $222.5 million in revenues from Medicaid and Medicare in 2019.<a href="#_ftn33" name="_ftnref33">[33]</a> Most of the remaining income came from “patient service revenue” and “management revenues.”<a href="#_ftn34" name="_ftnref34">[34]</a> On the surface, it is difficult to distinguish between the services that Vetter provides as a “nonprofit” and those provided by for-profit senior living companies.</p>
<p>Habitat for Humanity is the largest of the more traditional volunteer-based service organizations found in this category. The vast majority of its $288 million in revenues in 2019 came from grants, contributions, and in-kind gifts.<a href="#_ftn35" name="_ftnref35">[35]</a></p>
<p>Multipurpose is the operative term for human service organizations in category P. The largest organization in this category is the American Red Cross with more than $2.8 billion in income in 2019. The AARP Foundation is also listed as a human service organization and illustrates how some large nonprofits use related tax-exempt entities to expand their operations. Its 990 for 2019 shows that it is affiliated with other AARP entities, including the main AARP entity, which is a 501(c)(4) nonprofit. <a href="#_ftn36" name="_ftnref36">[36]</a> The main AARP entity booked some $1.7 billion in revenues in 2019, including more than $977 million in tax-free royalty income.<a href="#_ftn37" name="_ftnref37">[37]</a></p>
<p>The Urban Institute datasets include more than 600 separate filings for local YMCA or WYCA chapters, which have combined income of $6.1 billion and assets of $12 billion. By contrast, the largest for-profit fitness company by income is LA Fitness, which also has 600 locations but only $2 billion in revenues.</p>
<p>But the category also includes an interesting variety of smaller organizations, such as dog rescues, adult day care centers, children’s day care centers, hospice care, community centers, thrift stores, pregnancy centers, diaper banks, and yoga studios.</p>
<h2>A Look into Member-Serving Tax-Exempt Organizations: 501(c)(1) – 501(c)(29)</h2>
<p>Almost by definition, organizations other than 501(c)(3) entities have a business orientation in some manner, even if they were intended to be member-serving. These include credit unions, rural utilities and coops, insurance companies, pension funds, business and sports leagues, cemeteries, real estate holding companies, farmer coops, fraternal organizations, social and recreation clubs, and veterans organizations.</p>
<p>Let’s explore a few of these categories.</p>
<p>501(c)(4) organizations are a good example of how tax-exempt definitions can be expanded to include big businesses. While tax laws require that such organizations be “operated exclusively to promote social welfare,” that concept seems to have been interpreted broadly.<a href="#_ftn38" name="_ftnref38">[38]</a></p>
<p>Washington insiders may associate 501(c)(4) organizations with activist and public policy organizations like the Sierra Club and the American Civil Liberties Union, but such organizations are in the minority. Social welfare organizations seem to be split between a few hundred large health-related firms and thousands of smaller 501(c)(4) organizations such as Rotary clubs, Kiwanis, Lions clubs, Optimist clubs, American Legion, Links chapters, homeowners associations, and volunteer fire departments. </p>
<p>The largest 501(c)(4) entities, those with more than $100 million in revenues, are predominantly health-related firms such as dental plans, HMOs, and health-care networks. Delta Dental Plans, with roughly 30 state entities, is the largest of these organizations. In 2019, it had combined revenues of more than $15 billion and net income of $339 million.  </p>
<p>Perhaps the most unusual of these large “social welfare” organizations is the Prairie Meadows Racetrack &amp; Casino Inc. in Altoona, <a href="https://taxfoundation.org/location/iowa/">Iowa</a>. Originally launched as a commercial venture, which went bankrupt, it was converted into a nonprofit in 1994 and is reportedly one of only two nonprofit casinos in the U.S. With more than $2.3 billion in 2019 revenues, Prairie Meadows says it is “dedicated to lessening the burden of government by raising funds for charitable organizations and community improvement projects.”<a href="#_ftn39" name="_ftnref39">[39]</a></p>
<p>Prairie Meadows’ mission statement is an interesting justification for the tax-exempt status of what was a failed commercial venture. It harkens back to the 1909 Senate quandary whether the for-profit Methodist Book Concern should pay the <span><a href="https://taxfoundation.org/taxedu/glossary/corporate-income-tax-cit/">corporate income tax</a><cite>A corporate income tax (CIT) is levied by federal and state governments on business profits. Many companies are not subject to the CIT because they are taxed as <a href="https://taxfoundation.org/taxedu/glossary/pass-through-business/">pass-through businesses</a>, with income reportable under the <a href="https://taxfoundation.org/taxedu/glossary/individual-income-tax/">individual income tax</a>.
</cite></span> because it gave away its profits to charitable causes. And tying a casino’s charitable status to “lessening the burden of government” is a questionable principle that could open the door to no end of dubious “commercial” but tax-exempt enterprises, such as a “nonprofit” marijuana dispensary.  </p>
<p>The 501(c)(6) “business league” category could be called the tax-exempt home of K Street lobbyists, golf and tennis companies, professional guilds, and tourism boards. The U.S. Chamber of Commerce is said to have led the effort in 1913 to exempt business membership organizations and civic leagues from tax during the debate over the Revenue Act of 1913. Indeed, some of the biggest business groups in Washington, D.C., are organized as 501(c)(6) entities, including the U.S. Chamber of Commerce, American Petroleum Institute, American Hospital Association, American Bureau of Shipping, American Chemistry Council, National Milk Producers Federation, and National Association of Broadcasters.</p>
<p>Many professional sports organizations are also organized as “business leagues.” While the NFL, MLB, and NBA renounced their tax-exempt status years ago, a number of prominent professional sports leagues still maintain their tax-exempt status. These include the PGA, <a href="https://taxfoundation.org/location/united-states/">United States</a> Tennis Association, ATP Tour, Ladies Professional Golf Association, WTA Tour Inc., United States Polo Association, the Breeders Cup Limited, National Hot Rod Association, and Professional Golfers Association of America.</p>
<p>This is also a common organizational form for professional organizations, such as the American Bar Association, American Medical Association, National Association of Realtors, Academy of Motion Picture Arts and Sciences, and Motion Picture Association.</p>
<p>Advertising and promotional organizations are frequently organized as 501(c)(6) organizations. Notable promotional organizations include the Houston Super Bowl Host Committee, Avocados from <a href="https://taxfoundation.org/location/mexico/">Mexico</a>, United States Meat Export Federation, Greater Miami Convention and Visitors Bureau, Atlanta Convention &amp; Visitors Bureau, and Dairy Promotion Inc.</p>
<p>The social and recreation clubs represented in the 501(c)(7) classification may consist of some of the most exclusive golf, athletic, and social clubs in the United States. Social and recreational clubs were exempted from tax in the 1916 Tax Act. Many of the largest cities have exclusive social and athletic clubs, including the New York Athletic Club, the Detroit Athletic Club, the Atlanta Athletic Club, the Yale Club of New York City, the Harvard Club of New York City, and the Bohemian Club near San Francisco. Indeed, the Tax Foundation was organized at a meeting of business leaders in 1937 at the University Club in New York City.</p>
<p>Golf courses dominate the 501(c)(7) category of nonprofit organizations, including some of the most iconic and exclusive golf clubs in America, such as the Congressional Country Club, Baltusrol Golf Club, Winged Foot Golf Club, Oakmont Country Club, and Sawgrass Country Club. By contrast, Augusta National Golf Club, which hosts the Masters tournament, is a for-profit corporate entity.</p>
<p>The richest of all the clubs in 2019 was the Desert Mountain Club in Scottsdale, <a href="https://taxfoundation.org/location/arizona/">Arizona</a>, which reported $68 million in revenues. Membership to this exclusive golf and lifestyle community is by “invitation only.”<a href="#_ftn40" name="_ftnref40">[40]</a> The Club’s real estate listings include homes ranging from $1.5 million to nearly $13 million.</p>
<p>There are certainly smaller, less famous clubs in this category, including a Giant Schnauzer club, local boating clubs, swim and tennis clubs, kennel clubs, singing clubs, model train clubs, a Slovak Citizens club, and various cotillion clubs.</p>
<p>Fraternal beneficiary societies organized under 501(c)(8) of the tax code are now largely insurance companies. Fraternal beneficiary societies were a prevalent part of America’s self-help culture when the first income taxes were being drafted, first in 1894 and then in 1909. Yet, as B.H. Meyer explained in an academic study in 1900, there was always a tension between their social function and their beneficiary function.</p>
<blockquote>
<p>Fraternal beneficiary societies, as the name suggests, are dual in their nature. Because they are both fraternal and beneficiary, these societies are really composed of two organizations each: a fraternity and an insurance company . . . In other words, a typical fraternal society rests upon three things: first, voluntary organization on a basis of equality; second, some ritualistic system; and third, a system of benefits. These three are united in different proportions in different societies, and in not a few of them a struggle for predominance is taking place between the first and third. This is the battle between “fraternalism and commercialism.”<a href="#_ftn41" name="_ftnref41">[41]</a></p>
</blockquote>
<p>More than 100 years later, the commercial side of these organizations has won out. For example, WoodmenLife—which was founded in 1890—offers various types of life insurance and retirement products.<a href="#_ftn42" name="_ftnref42">[42]</a> Modern Woodmen (unrelated to WoodmenLife) offers an even broader portfolio of products beyond life insurance, such as retirement planning, estate planning, and employee benefits.<a href="#_ftn43" name="_ftnref43">[43]</a> The Knights of Columbus does have a well-known service side, but also offers its members retirement annuities, mutual funds, donor advised funds, and various life insurance policies.<a href="#_ftn44" name="_ftnref44">[44]</a> </p>
<p>The products and services offered by these nonprofit organizations are in direct competition with similar products offered by for-profit financial service firms.</p>
<p>Tax-exempt public electric, water, and utility companies are a legacy of Depression-era efforts to promote rural self-help. Today’s 501(c)(12) tax-exempt utilities were formed as “cooperatives” during the early 1900s to bring electricity and water services to rural areas at a time when the larger urban utilities didn’t find it profitable to reach those markets. In 1934, Congress created the Rural Electrification Administration—now the Rural Utilities Service (RUS)—within the U.S. Department of Agriculture to promote the growth of rural coops and provide them low-cost financing.</p>
<p>Some 90 years later, rural coops are still dependent upon their tax-exempt status and subsidized loans. Notably, many of the “rural” communities these coops were created to serve are now prosperous suburbs of cities such as Washington, D.C., and Atlanta, <a href="https://taxfoundation.org/location/georgia/">Georgia</a>, not to mention tony resort communities such as Sanibel and Marco Island in <a href="https://taxfoundation.org/location/florida/">Florida</a>.</p>
<p>This ecosystem of tax-exempt utilities is supported by two larger tax-exempt organizations. The industry’s lobbying arm is the National Rural Electric Cooperative Association, a 501(c)(6) membership organization.<a href="#_ftn45" name="_ftnref45">[45]</a> The industry’s lending arm—independent of the federal RUS—is the $1.38 billion National Rural Utilities Cooperative Finance Corporation (CFC). CFC is a 501(c)(4) entity and bills itself as “Bridging the financial needs of the rural electric cooperative network with global capital markets.”<a href="#_ftn46" name="_ftnref46">[46]</a> It has more than $35 billion in assets.</p>
<h2>The Paper Tiger of Nonprofit Law: The Unrelated Business Income Tax</h2>
<p>Congress enacted UBIT in 1950 with the aim of leveling the playing field between tax-exempt organizations and for-profit firms. But as Jeffrey Scott Tenenbaum wrote in his primer on UBIT for the American Bar Association, “instead of prohibiting tax-exempt entities from engaging in any business activities at all . . . Congress chose to specifically permit a certain degree of business activity by tax-exempt organizations, but tax that activity like any other for-profit business.”<a href="#_ftn47" name="_ftnref47">[47]</a></p>
<p>Thus, writes Tenenbaum, “such business activities are permissible, so long as the activities are not a ‘substantial part of [the nonprofit’s] activities.’ The tax applies to virtually all tax-exempt entities.”</p>
<p>A frequent example of the difference between taxable and non-taxable sales activities is a museum gift shop that sells greeting cards bearing reproductions of paintings in the museum’s collection as well as local maps and souvenirs. UBIT rules would require the museum to pay tax on the income generated by the souvenirs because those items are not related to the museum’s mission. But it would not pay UBIT on income generated by the greeting cards with an image of a Monet because those sales are related to the museum’s mission of advancing art appreciation.<a href="#_ftn48" name="_ftnref48">[48]</a></p>
<p>The Harvard Business School magazine is another example. HBS does not pay tax on the income generated by its business publications or magazine subscriptions because they are determined to be a key element of the organization’s mission. However, HBS does pay tax on the income generated by the advertising in the magazine because those promote private and commercial interests separate from HBS’s mission.</p>
<p>There are, however, numerous exemptions to UBIT that give organizations wide latitude to earn business-like income. This includes income from corporate sponsorships, royalties, TV broadcast rights, certain rents, interest, dividends, and convention fees to name a few.</p>
<p>As a result of UBIT’s narrow scope and numerous exemptions, the tax raises very few revenue. IRS data on UBIT revenues from 1990 to 2017 shows that, on average, 17 percent of nonprofit charitable organizations reported unrelated business income and roughly half of those organizations were liable for UBIT. After adjusting for <span><a href="https://taxfoundation.org/taxedu/glossary/inflation/">inflation</a><cite><a href="https://taxfoundation.org/tags/inflation/">Inflation</a> is when the general price of goods and services increases across the economy, reducing the purchasing power of a currency and the value of certain assets. The same paycheck covers less goods, services, and bills. It is sometimes referred to as a “<a href="https://taxfoundation.org/blog/inflation-tax/">hidden tax</a>,” as it leaves taxpayers less well-off due to higher costs and “bracket creep,” while increasing the government’s spending power.
</cite></span>, UBIT raised an average of $586 million per year from 1990 to 2017, less than 0.5 percent of the billions in net income charitable nonprofits generated each year.<a href="#_ftn49" name="_ftnref49">[49]</a>      </p>
<p>So rather than level the playing field, UBIT has had little to no effect on preventing nonprofits from engaging in business-like activities nor competing directly with for-profit firms.</p>
<h2>Three Reforms Can Level the Playing Field and Broaden the Tax Base</h2>
<p>After more than 100 years of nonprofit expansion into the business economy, it is time that lawmakers developed some simple and uniform rules that accomplish two things: 1) distinguish between benevolent organizations and business-like entities, and 2) expressly level the playing field between the business activities of nonprofit and for-profit entities.</p>
<p>Three changes would remove the tax advantage that business-like nonprofits have over for-profit firms while protecting the charitable income of benevolent organizations.</p>
<p><strong>Step 1:</strong> The first step is to raise the threshold for the percentage of charitable contributions a 501(c)(3) organization must receive to be considered a “publicly supported” charity. Currently, an organization needs to show that it receives at least 30 percent of its revenues from “public” sources to be considered a public charity eligible to accept tax-deductible donations. Public sources is a broad concept that includes contributions from the public, government grants, grants from charitable foundations, net income from unrelated business activities, membership fees, and gross investment income.<a href="#_ftn50" name="_ftnref50">[50]</a></p>
<p>Since our goal is to narrow the definition of a “publicly supported” charity to focus on benevolent organizations, the income threshold should be increased to 80 percent and limited to donations from private individuals and grants from charitable foundations. Income from government contracts, government grants for services, membership fees, investment income, and business income should not be included as these sources are more business-like than charitable in nature.</p>
<p>Such a rule would protect the “public charity” status of a women’s shelter that hosts an annual charity ball but would likely deny that status for a nonprofit group such as the Battelle Memorial Institute that receives most of its income from contracts or grants for service from the departments of Energy or Defense, for example.  </p>
<p><strong>Step 2:</strong> The second step would be to eliminate UBIT and apply the 21 percent corporate income tax to the net program service income of all nonprofit organizations. The calculation of net program service income would differ between 501(c)(3) organizations and other nonprofits because of the need to separate charitable income from program service revenues.</p>
<p>As was discussed earlier, most 501(c)(3) organizations generate income from charitable donations and program service revenue. Program service revenues are the kind of income that a for-profit firm would normally pay tax on, including tuition, fees, Medicare and Medicaid payments, insurance reimbursements, rents, contract income, royalties, and broadcast rights. Under this proposed rule, nonprofits would subtract their program-related expenses from their program service revenues and pay income tax on the remainder.</p>
<p>In the table below, we estimate that 501(c)(3) organizations had $92 billion in net program service income in 2019. Had this net income, or profits, been taxed at the 21 percent corporate tax rate, it could have raised $19 billion in new tax revenues. This estimate does not account for any behavioral effects, nor have we accounted for an adjustment to corporate accounting standards such as bonus expensing.</p>
<p>Calculating <span><a href="https://taxfoundation.org/taxedu/glossary/taxable-income/">taxable income</a><cite>Taxable income is the amount of income subject to <a href="https://taxfoundation.org/taxedu/glossary/tax/">tax</a>, after <a href="https://taxfoundation.org/taxedu/glossary/tax-deduction/">deductions</a> and <a href="https://taxfoundation.org/taxedu/glossary/tax-exemption/">exemptions</a>. For both individuals and corporations, taxable income differs from—and is less than—gross income.
</cite></span> is much simpler for all other exempt organizations since they don’t have to account for charitable contributions. All of their income is assumed to be program service income. These organizations would simply pay the corporate income tax rate on their income net of expenses like any private business.</p>
<p>In 2019, these organizations had $87 billion in net income, or profits. Had these profits been taxed at the 21 percent corporate tax rate, it could have raised $18 billion in revenues.</p>
<p>Lastly, federal credit unions generated $7 billion in net income in 2019 and would have been liable for $2 billion in taxes had they been taxed at 21 percent.</p>
<p>Combined, taxing the net program income of all nonprofits could have raised $39 billion in new revenues in 2019.</p>
<!-- #tablepress-462 from cache -->
<p><strong>Step 3:</strong> The final step would be to decide how to tax the investment income—dividends, interest, and capital gains—of tax-exempt organizations. Table 3 includes investment income in the total net “profits” of tax-exempt organizations and, thus, assumes they are taxed at 21 percent. Currently, most nonprofits pay no tax on their investment income under the theory that such income supports the mission of the organization. However, private foundations are required to pay a 1.39 percent excise tax on their investment income. Large university endowments are also required to pay a 1.4 percent excise tax if the endowment assets exceed $500,000 per student.</p>
<p>The rate at which nonprofit investment income is taxed is not a trivial matter. In 2019, the Urban Institute dataset shows that 501(c)(3) organizations reported $51.8 billion in investment income. All other 501(c) organizations reported $19.4 billion in investment income, which brings the total of nonprofit investment income to $71.2 billion. Taxing this income at roughly 1.4 percent rather than 21 percent would yield much less revenue.</p>
<p>The tax exemption for investment income has allowed some large nonprofits to become tax-exempt hedge funds. Tax neutrality demands that all taxpayers pay the same rate on their investment income. Thus, it would make sense to tax the investment income of nonprofits at the 21 percent corporate rate and remove any incentive for arbitrage or income shifting.</p>
<h2>Conclusion</h2>
<p>Washington faces a brewing fiscal crisis that will force lawmakers to look for additional tax revenues, either to address mounting deficits or to offset the extension of key portions of the 2017 Tax Cuts and Jobs Act—perhaps even both. The fairest and least economically harmful way to raise new revenues is to expand the federal tax base to include business-like income earned by tax-exempt nonprofit organizations.</p>
<p>The rules governing the tax-exempt sector are long overdue for reform. The $3.3 trillion nonprofit economy is dominated by large, business-like organizations that overshadow the truly benevolent organizations the tax exemption should be reserved for.</p>
<p>A reasonable rewriting of the tax-exempt rules should include narrowing the definition of “public charity,” repealing the toothless UBIT, and subjecting all non-charitable income to taxation. Doing so would protect the charitable income of benevolent organizations while leveling the playing field between nonprofits and for-profit entities. Most importantly, tighter rules would also give a principled foundation to the nonprofit sector that has been missing for the past 120 years.</p>
<div data-id="1"><h2>Stay informed on the tax policies impacting you.</h2><p>Subscribe to get insights from our trusted experts delivered straight to your inbox.</p>
<p><a href="https://taxfoundation.org/tax-newsletter">Subscribe</a></p></div>
<hr>
<p><a href="#_ftnref1" name="_ftn1">[1]</a> Author calculations.</p>
<p><a href="#_ftnref2" name="_ftn2">[2]</a> Internal Revenue Service, “Exempt Organizations Business Master File Extract (EO BMF),” https://www.irs.gov/charities-non-profits/exempt-organizations-business-master-file-extract-eo-bmf</p>
<p><a href="#_ftnref3" name="_ftn3">[3]</a> Author calculations, See Table 1.</p>
<p><a href="#_ftnref4" name="_ftn4">[4]</a> Congress of the United States, Joint Committee on Taxation, <em>Historical Development and Present Law of the Federal Tax Exemption for Charities and Other Tax-Exempt Organizations</em>, Apr. 19, 2005, <a href="https://www.jct.gov/publications/2005/jcx-29-05/">https://www.jct.gov/publications/2005/jcx-29-05/</a>.</p>
<p><a href="#_ftnref5" name="_ftn5">[5]</a> Giving USA, “Giving USA Limited Data Tableau Visualization, 2022 Giving Overview,” <a href="https://givingusa.org/giving-usa-limited-data-tableau-visualization/">https://givingusa.org/giving-usa-limited-data-tableau-visualization/</a>.</p>
<p><a href="#_ftnref6" name="_ftn6">[6]</a> B.H. Meyer, “Fraternal Beneficiary Societies in the United States,” <em>American Journal of Sociology</em> 6:5 (March 1901): 647, <a href="https://www.jstor.org/stable/2762005" rel="nofollow">https://www.jstor.org/stable/2762005</a>.</p>
<p><a href="#_ftnref7" name="_ftn7">[7]</a> Scott Hodge, “After 90 Years, It Is Time to Wean Credit Unions off Taxpayer Subsidies,” Tax Foundation, Jan. 30, 2024, <a href="https://taxfoundation.org/research/all/federal/credit-union-tax-treatment/">https://taxfoundation.org/research/all/federal/credit-union-tax-treatment/</a></p>
<p><a href="#_ftnref8" name="_ftn8">[8]</a> Tariff of 1894 (Wilson-Gorman Tariff), Aug. 27, 1894, <a href="https://fraser.stlouisfed.org/title/5901">https://fraser.stlouisfed.org/title/5901</a>. (The income tax is defined on p. 553 and the tax-exempt language begins on p. 556.)</p>
<p><a href="#_ftnref9" name="_ftn9">[9]</a> American Association of Public Accountants, <em>The Corporation Tax Law of 1909,</em> <a href="https://egrove.olemiss.edu/cgi/viewcontent.cgi?article=1955&amp;context=aicpa_guides">https://egrove.olemiss.edu/cgi/viewcontent.cgi?article=1955&amp;context=aicpa_guides</a>.</p>
<p><a href="#_ftnref10" name="_ftn10">[10]</a> 44 Cong. Rec. 4151 (1909). </p>
<p><a href="#_ftnref11" name="_ftn11">[11]</a> Ibid.</p>
<p><a href="#_ftnref12" name="_ftn12">[12]</a> Ibid., p. 4155.</p>
<p><a href="#_ftnref13" name="_ftn13">[13]</a> Ibid., p. 4156.</p>
<p><a href="#_ftnref14" name="_ftn14">[14]</a> H.R. 3321, 63<sup>rd</sup> Cong. (1913), p. 172, <a href="https://fraser.stlouisfed.org/files/docs/historical/congressional/underwood-tariff-1913.pdf">https://fraser.stlouisfed.org/files/docs/historical/congressional/underwood-tariff-1913.pdf</a>.</p>
<p><a href="#_ftnref15" name="_ftn15">[15]</a> E. Gordon Keith, “New Data on Tax-Exempt Organizations,” <em>Proceedings of the Annual Conference on Taxation under the Auspices of the National Tax Association</em> 38 (1945): 257-269, <a href="http://www.jstor.org/stable/23404793" rel="nofollow">www.jstor.org/stable/23404793</a>.</p>
<p><a href="#_ftnref16" name="_ftn16">[16]</a> <span><a href="https://taxfoundation.org/taxedu/glossary/individual-income-tax/">Individual Income Tax</a><cite>An individual income tax (or personal income tax) is levied on the wages, salaries, investments, or other forms of income an individual or household earns. The U.S. imposes a <a href="https://taxfoundation.org/taxedu/glossary/progressive-tax/">progressive</a> income tax where rates <a href="https://taxfoundation.org/taxedu/glossary/graduated-rate-income-tax/">increase</a> with income. The Federal Income Tax was established in 1913 with the ratification of the <a href="https://taxfoundation.org/taxedu/educational-resources/primer-10-common-tax-myths-debunked/">16th Amendment</a>. Though barely 100 years old, individual income taxes are the <a href="https://taxfoundation.org/data/all/federal/us-tax-revenue-by-tax-type-2023/">largest</a> source of tax revenue in the U.S.
</cite></span> Return for Calendar Year 1917, Form 1040 Instructions, <a href="https://www.irs.gov/pub/irs-prior/f1040--1917.pdf">https://www.irs.gov/pub/irs-prior/f1040--1917.pdf</a>.</p>
<p><a href="#_ftnref17" name="_ftn17">[17]</a> Mark B. Edwards, “It All Started With Macaroni: A Trip Through the Shadowy World of UBIT,” prepared for the 2005 Legal Forum, September 2005, <a href="https://www.inumc.org/wp-content/uploads/2024/01/unrelatedbusinessincome-1.pdf">https://www.inumc.org/wp-content/uploads/2024/01/unrelatedbusinessincome-1.pdf</a>.</p>
<p><a href="#_ftnref18" name="_ftn18">[18]</a> Joint Committee on Taxation (2005), 100.</p>
<p><a href="#_ftnref19" name="_ftn19">[19]</a> United States Treasury Department, Bureau of Internal Revenue, “Supplement to Statistics of Income for 1946, Part 2,” October 1949, <a href="https://www.irs.gov/pub/irs-soi/46eosupsec2.pdf">https://www.irs.gov/pub/irs-soi/46eosupsec2.pdf</a>.</p>
<p><a href="#_ftnref20" name="_ftn20">[20]</a> Hodge, “After 90 Years, It Is Time to Wean Credit Unions off Taxpayer Subsidies.”</p>
<p><a href="#_ftnref21" name="_ftn21">[21]</a> Internal Revenue Code of 1954, <a href="https://www.govinfo.gov/content/pkg/STATUTE-68/pdf/STATUTE-68A-Pg1.pdf">https://www.govinfo.gov/content/pkg/STATUTE-68/pdf/STATUTE-68A-Pg1.pdf</a>.</p>
<p><a href="#_ftnref22" name="_ftn22">[22]</a> U.S. Department of Commerce Bureau of the Census, <em>Historical Statistics of the United States, Colonial Times to 1970, Part 1</em>, (Washington, DC, 1975), 224. Note: In 1909, U.S. GDP was $33.4 billion in current dollars.</p>
<p><a href="#_ftnref23" name="_ftn23">[23]</a> “NCCS Core Series Overview,” National Center for Charitable Statistics, <a href="https://nccs.urban.org/nccs/datasets/core/">https://nccs.urban.org/nccs/datasets/core/</a>.  </p>
<p><a href="#_ftnref24" name="_ftn24">[24]</a> IRS, <em>Form 990, Return of Organization Exempt from Income Tax, 2018</em>, Harvard Business School Publishing Corporation, <a href="https://apps.irs.gov/pub/epostcard/cor/043177990_201906_990_2021012817670018.pdf">https://apps.irs.gov/pub/epostcard/cor/043177990_201906_990_2021012817670018.pdf</a>.</p>
<p><a href="#_ftnref25" name="_ftn25">[25]</a> Creative Testing Solutions, <a href="https://www.mycts.org/">https://www.mycts.org/</a>.</p>
<p><a href="#_ftnref26" name="_ftn26">[26]</a> Battelle Memorial Institute, <a href="https://www.battelle.org/about-us">https://www.battelle.org/about-us</a>.</p>
<p><a href="#_ftnref27" name="_ftn27">[27]</a> RTI International, <a href="https://www.rti.org/about-us">https://www.rti.org/about-us</a>.</p>
<p><a href="#_ftnref28" name="_ftn28">[28]</a> IRS, <em>Form 990, Return of Organization Exempt from Income Tax, 2018</em>, Research Triangle Institute,  <a href="https://apps.irs.gov/pub/epostcard/cor/560686338_201909_990_2020101517377917.pdf">https://apps.irs.gov/pub/epostcard/cor/560686338_201909_990_2020101517377917.pdf</a>.</p>
<p><a href="#_ftnref29" name="_ftn29">[29]</a> Scott Hodge, “Nonprofits are Financially Healthy and Doing Big Business,” Tax Foundation, Oct. 6, 2023. <a href="https://taxfoundation.org/blog/501c3-nonprofit-revenue/">https://taxfoundation.org/blog/501c3-nonprofit-revenue/</a>.</p>
<p><a href="#_ftnref30" name="_ftn30">[30]</a> Ibid.</p>
<p><a href="#_ftnref31" name="_ftn31">[31]</a> Dress for Success, <a href="https://www.dressforsuccessqc.org/">https://www.dressforsuccessqc.org/</a>.</p>
<p><a href="#_ftnref32" name="_ftn32">[32]</a> IRS, <em>Form 990, Return of Organization Exempt from Income Tax, 2019,</em> Navigate Affordable Housing Partners Inc., <a href="https://apps.irs.gov/pub/epostcard/cor/630985617_201912_990_2020110517414338.pdf">https://apps.irs.gov/pub/epostcard/cor/630985617_201912_990_2020110517414338.pdf</a>.</p>
<p><a href="#_ftnref33" name="_ftn33">[33]</a> Vetter Senior Living, <a href="https://www.vetterseniorliving.com/we-believe/history/" rel="nofollow">https://www.vetterseniorliving.com/we-believe/history/</a>.  </p>
<p><a href="#_ftnref34" name="_ftn34">[34]</a> IRS, <em>Form 990, Return of Organization Exempt from Income Tax, 2018,</em> Vetter Senior Living, <a href="https://apps.irs.gov/pub/epostcard/cor/471108168_201906_990_2021012817669748.pdf">https://apps.irs.gov/pub/epostcard/cor/471108168_201906_990_2021012817669748.pdf</a>.</p>
<p><a href="#_ftnref35" name="_ftn35">[35]</a> IRS, <em>Form 990, Return of Organization Exempt from Income Tax, 2018</em>, Habitat for Humanity International Inc., <a href="https://apps.irs.gov/pub/epostcard/cor/911914868_201906_990_2020020617119545.pdf">https://apps.irs.gov/pub/epostcard/cor/911914868_201906_990_2020020617119545.pdf</a>.</p>
<p><a href="#_ftnref36" name="_ftn36">[36]</a> IRS, <em>Form 990, Return of Organization Exempt from Income Tax 2019,</em> AARP Foundation,<em> 2018</em><a href="https://apps.irs.gov/pub/epostcard/cor/520794300_201912_990_2021022617763807.pdf">https://apps.irs.gov/pub/epostcard/cor/520794300_201912_990_2021022617763807.pdf</a>.</p>
<p><a href="#_ftnref37" name="_ftn37">[37]</a> IRS, <em>Form 990, Return of Organization Exempt from Income Tax, 2019, </em>AARP, <a href="https://apps.irs.gov/pub/epostcard/cor/951985500_201912_990O_2022042920018144.pdf">https://apps.irs.gov/pub/epostcard/cor/951985500_201912_990O_2022042920018144.pdf</a>.</p>
<p><a href="#_ftnref38" name="_ftn38">[38]</a> Internal Revenue Service, “Social welfare organizations,” <a href="https://www.irs.gov/charities-non-profits/other-non-profits/social-welfare-organizations">https://www.irs.gov/charities-non-profits/other-non-profits/social-welfare-organizations</a>.</p>
<p><a href="#_ftnref39" name="_ftn39">[39]</a> Prairie Meadows, <a href="https://www.prairiemeadows.com/about-us/our-company">https://www.prairiemeadows.com/about-us/our-company</a>.</p>
<p><a href="#_ftnref40" name="_ftn40">[40]</a> Desert Mountain Club Inc., <a href="https://www.desertmountain.com/membership-information/">https://www.desertmountain.com/membership-information/</a>.</p>
<p><a href="#_ftnref41" name="_ftn41">[41]</a> B.H. Meyer, “Fraternal Beneficiary Societies in the United States,” <em>American Journal of Sociology</em> 6:5 (March 1901): 646-661, <a href="https://www.jstor.org/stable/2762005" rel="nofollow">https://www.jstor.org/stable/2762005</a>.</p>
<p><a href="#_ftnref42" name="_ftn42">[42]</a> Woodmen Life, <a href="https://www.woodmenlife.org/extras/">https://www.woodmenlife.org/extras/</a>.</p>
<p><a href="#_ftnref43" name="_ftn43">[43]</a> Modern Woodmen, <a href="https://www.modernwoodmen.org/financial-planning/protection/">https://www.modernwoodmen.org/financial-planning/protection/</a>.</p>
<p><a href="#_ftnref44" name="_ftn44">[44]</a> Knights of Columbus, <a href="https://www.kofc.org/en/what-we-do/insurance/index.html">https://www.kofc.org/en/what-we-do/insurance/index.html</a>.</p>
<p><a href="#_ftnref45" name="_ftn45">[45]</a> Cooperative Services Corporation, <a href="https://www.cooperative.com/cfc/pages/ncsc.aspx">https://www.cooperative.com/cfc/pages/ncsc.aspx</a>.</p>
<p><a href="#_ftnref46" name="_ftn46">[46]</a> National Rural Utilities Cooperative Finance Corporation, <a href="https://www.nrucfc.coop/content/nrucfc/en/about-cfc.html">https://www.nrucfc.coop/content/nrucfc/en/about-cfc.html</a>.</p>
<p><a href="#_ftnref47" name="_ftn47">[47]</a> Jeffrey Scott Tenenbaum, “Unrelated Business Income Tax (UBIT): A Comprehensive Overview for Nonprofits,” Business Law Today, November 2021, <a href="https://americanbar.org/groups/business_law/resources/business-law-today/2021-november/unrelated-business-income-tax/" rel="nofollow">https://americanbar.org/groups/business_law/resources/business-law-today/2021-november/unrelated-business-income-tax/</a>. </p>
<p><a href="#_ftnref48" name="_ftn48">[48]</a> Department of the Treasury, Internal Revenue Service, <em>Publication 598: Tax on Unrelated Business Income of Exempt Organizations</em>, Mar. 22, 2021, <a href="https://www.irs.gov/pub/irs-pdf/p598.pdf">https://www.irs.gov/pub/irs-pdf/p598.pdf</a>.</p>
<p><a href="#_ftnref49" name="_ftn49">[49]</a> Internal Revenue Service, Statistics of Income, <em>Table 16: Nonprofit Charitable Organization and Domestic Private Foundation Information Returns, and Exempt Organization Business Income Tax Returns: Selected Financial Data, Expanded</em>, <a href="https://www.irs.gov/statistics/soi-tax-stats-historical-table-16">https://www.irs.gov/statistics/soi-tax-stats-historical-table-16</a>.</p>
<p><a href="#_ftnref50" name="_ftn50">[50]</a> U.S. Department of Treasury, Internal Revenue Service, <em>Publication 557, Tax-Exempt Status for Your Organization</em>, revised January 2014, <a href="https://www.irs.gov/pub/irs-pdf/p557.pdf">https://www.irs.gov/pub/irs-pdf/p557.pdf</a>.</p>


  </div>

  

</article>  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I made a puzzle game that gently introduces my favorite math mysteries (573 pts)]]></title>
            <link>https://www.rahulilango.com/coloring/</link>
            <guid>40740021</guid>
            <pubDate>Thu, 20 Jun 2024 15:45:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.rahulilango.com/coloring/">https://www.rahulilango.com/coloring/</a>, See on <a href="https://news.ycombinator.com/item?id=40740021">Hacker News</a></p>
<div id="readability-page-1" class="page">
    <p>
        Color the map of the British Isles so that no two physically bordering regions have the same color
        
    </p>
    

    <!-- sa uk pi af us wus nsa  -->
    <p>(Click to color)</p>
    <interactive-canvas mode="color" coloring-mode="four" preset-map="uk"></interactive-canvas>
    
    


    
    
    <!-- 100% privacy-first analytics -->
    
    


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Atkinson Dithering (184 pts)]]></title>
            <link>https://beyondloom.com/blog/dither.html</link>
            <guid>40739710</guid>
            <pubDate>Thu, 20 Jun 2024 15:18:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://beyondloom.com/blog/dither.html">https://beyondloom.com/blog/dither.html</a>, See on <a href="https://news.ycombinator.com/item?id=40739710">Hacker News</a></p>
<div id="readability-page-1" class="page"><h2 id="atkinsondithering">Atkinson Dithering</h2>

<p>When the <a href="https://beyondloom.com/blog/thinkc.html">Macintosh</a> was released in 1984, it featured a square-pixeled black-and-white display at a crisp 72 dots per inch. The 512x342 resolution might seem less than impressive today, but for the time it was a pleasantly high-resolution consumer-grade computer. Among other things, the monospaced <a href="https://en.wikipedia.org/wiki/Monaco_(typeface)">Monaco 9pt</a> bitmap font featured characters that were 6 pixels wide, allowing the Macintosh to render a standard 80-column terminal with ample room for a vertical scrollbar and other niceties.</p>

<p>Beyond <a href="https://en.wikipedia.org/wiki/Susan_Kare">Susan Kare’s</a> brilliant type design and pixel-art icons, a cornerstone of the visual vocabulary of the Macintosh is the use of dithered images. Dithering algorithms use a small palette (in our case, black and white) to represent a larger one (simulated grayscale). Here we will examine two popular techniques: Floyd-Steinberg dithering, and a variation common on the Macintosh, Atkinson dithering.</p>

<h2 id="floyd-steinberg">Floyd-Steinberg</h2>

<p>The central idea of Floyd-Steinberg dithering is <em>error diffusion</em>. When determining the 1-bit color to assign to a given pixel in a grayscale image, quantizing will result in some error- a pixel either <em>darker</em> or <em>lighter</em> than the true grayscale value. By “pushing” this rounding error to neighboring pixels, we can ensure that <em>on average</em> the distribution of black and white in the output image resembles the input. Your eye closes the gap, and reconstructs some of the lost information.</p>

<p>Floyd-Steinberg dithering scans input pixels in a single pass, top-to-bottom and left-to-right. Error left over from each pixel is distributed between neighboring pixels which have not been converted yet, in the following proportions:</p>

<figure>
	<img src="https://beyondloom.com/blog/dither-figures/floyd.png">
	<figcaption>Floyd-Steinberg error diffusion</figcaption>
</figure>

<p>Suppose we have the <em>[0.0,1.0]</em> grayscale values of an image in an array <code>pixels</code> and the width of the image <code>w</code>, and we wish to generate an array of <em>{0,1}</em> output pixels. If we are permitted to mutate <code>pixels</code> in-place, a JavaScript implementation of the algorithm might look something like the following:</p>

<pre><code>function floyd(pixels,w) {
	const m=[[1,7],[w-1,3],[w,5],[w+1,1]]
	for (let i=0; i&lt;pixels.length; i++) {
		const x=pixels[i], col=x&gt;.5, err=(x-col)/16
		m.forEach(([x,y]) =&gt; i+x&lt;pixels.length &amp;&amp; (pixels[i+x]+=err*y))
		pixels[i]=col
	}
	return pixels
}
</code></pre>

<p>Given a <em>mask</em> (<code>m</code>) of relative offsets to neighbor pixels and the proportion of error they should get, we map over our pixels in order. The <em>color</em> at each pixel (<code>col</code>) is a simple quantization of the grayscale value (<code>x&gt;.5</code>), the <em>error</em> (<code>err</code>) is the difference between this quantized value and the original, and we simply add a fraction of that error to neighbor pixels before returning <code>col</code>.</p>

<figure>
	<div>
		<div>
			<p><img src="https://beyondloom.com/blog/dither-figures/david.png"></p><figcaption>Original</figcaption>
		</div>
		<div>
			<p><img src="https://beyondloom.com/blog/dither-figures/david-floyd.png"></p><figcaption>Floyd-Steinberg dithering</figcaption>
		</div>
	</div>
</figure>

<p>Note that in this implementation error diffused from the right edge of the image will bleed into the left edge of the following row. The inherent noisyness of dithering makes this aesthetically irrelevant, and doing so simplifies the implementation. Everyone wins!</p>

<p>If we wanted to avoid modifying <code>pixels</code> in-place, we could observe that the accumulated error we care about would fit in a fixed-size circular buffer (<code>e</code>) proportional to the width of our image. The result is slightly more complex, but in some ways conceptually cleaner, since our main loop is now a <code>map()</code>:</p>

<pre><code>function floyd2(pixels,w) {
	const e=Array(w+1).fill(0), m=[[0,7],[w-2,3],[w-1,5],[w,1]]
	return pixels.map(x =&gt; {
		const pix=x+(e.push(0),e.shift()), col=pix&gt;.5, err=(pix-col)/16
		m.forEach(([x,y]) =&gt; e[x]+=err*y)
		return col
	})
}
</code></pre>

<p>(<code>Array.shift()</code> and <code>Array.push()</code> are used here for conciseness; use your imagination for a more efficient low-level implementation.)</p>

<h2 id="atkinsonsalgorithm">Atkinson’s Algorithm</h2>

<p>Apple’s <a href="https://en.wikipedia.org/wiki/Bill_Atkinson">Bill Atkinson</a> developed a variation of the above technique which produces results that are subjectively nicer-looking. The basics work the same, but error is spread in a broader pattern, and only 3/4ths of the error is preserved:</p>

<figure>
	<img src="https://beyondloom.com/blog/dither-figures/atkinson.png">
	<figcaption>Atkinson error diffusion</figcaption>
</figure>

<p>Modifying <code>floyd2()</code> above, we can simplify <code>m</code>, as all the error is propagated in an even proportion. The sliding error window <code>e</code> now needs to be roughly twice as large to account for the broader spread pattern:</p>

<pre><code>function atkinson(pixels,w) {
	const e=Array(2*w).fill(0), m=[0,1,w-2,w-1,w,2*w-1]
	return pixels.map(x =&gt; {
		const pix=x+(e.push(0),e.shift()), col=pix&gt;.5, err=(pix-col)/8
		m.forEach(x =&gt; e[x]+=err)
		return col
	})
}
</code></pre>

<figure>
	<div>
		<div>
			<p><img src="https://beyondloom.com/blog/dither-figures/mandrill.png"></p><figcaption>Original</figcaption>
		</div>
		<div>
			<p><img src="https://beyondloom.com/blog/dither-figures/mandrill-floyd.png"></p><figcaption>Floyd-Steinberg dithering</figcaption>
		</div>
		<div>
			<p><img src="https://beyondloom.com/blog/dither-figures/mandrill-atkinson.png"></p><figcaption>Atkinson dithering</figcaption>
		</div>
	</div>
</figure>

<p>Compared side-by-side with Floyd-Steinberg dithering, Atkinson’s algorithm seems to produce richer contrast, at the cost of some detail in very light or dark areas of the image.</p>

<h2 id="ditheringinike">Dithering in iKe</h2>

<p>Readers of this blog might be curious to know what Atkinson dithering would look like in <a href="https://github.com/JohnEarnest/ok/tree/gh-pages/ike">iKe</a>.</p>

<p>We can leverage iKe’s capabilities for loading remote images via the special <code>/i</code> operative. By specifying the built-in palette <code>gray</code>, the input image will be converted into a matrix of <em>[0,255]</em> grayscale values. To resize the iKe graphics window to match the image, we initialize the magic variables <code>w</code> and <code>h</code> based on the dimensions of this matrix. Our running error window is stored in a global (<code>e</code>) initialized with two rows worth of zeroes (<code>&amp;2*w</code>). The definition of our mask <code>m</code> is virtually identical to the JavaScript version above.</p>

<p>Most of the work happens in <code>d</code>, which is meant to dither one pixel. We find the value of the current pixel, incorporating accumulated error (<code>p:x+*e</code>), quantize the output color (<code>c:p&gt;.5</code>), shift out the consumed error value and shift in a zero (<code>e::1_e,0</code>), and then <em>amend</em> <code>e</code> by adding the error at the current pixel at every index in our mask <code>m</code> (<code>@[`e;m;+;(p-c)%8]</code>).</p>

<p>To dither the entire image, we explicitly apply <code>d</code> to each pixel of the matrix, remembering to first rescale the input <em>[0,255]</em> palette indices into floating point <em>[0.0,1.0]</em> values. For an animated application of this code, it would be necessary to reset <code>e</code> after each frame.</p>

<pre><code>/i pixels;gray;https://i.imgur.com/Lcq4Xi4.png
w: #*pixels
h: #pixels
e: &amp;2*w
m: (0;1;w-2;w-1;w;2*w-1)
d: {p:x+*e; c:p&gt;.5; e::1_e,0; @[`e;m;+;(p-c)%8]; c}
,(;;d''pixels%255)
</code></pre>

<figure>
<img src="https://beyondloom.com/blog/dither-figures/bill.png" alt="Thanks, Bill.">
<figcaption>Thanks, Bill.</figcaption>
</figure>

<p><a href="https://beyondloom.com/blog/index.html">back</a></p>
</div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Could AI be a dot com sized bubble? (120 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=40739431</link>
            <guid>40739431</guid>
            <pubDate>Thu, 20 Jun 2024 14:54:23 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=40739431">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="40739431">
      <td><span></span></td>      <td><center><a id="up_40739431" href="https://news.ycombinator.com/vote?id=40739431&amp;how=up&amp;goto=item%3Fid%3D40739431"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=40739431">Ask HN: Could AI be a dot com sized bubble?</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_40739431">103 points</span> by <a href="https://news.ycombinator.com/user?id=jameslk">jameslk</a> <span title="2024-06-20T14:54:23"><a href="https://news.ycombinator.com/item?id=40739431">4 hours ago</a></span> <span id="unv_40739431"></span> | <a href="https://news.ycombinator.com/hide?id=40739431&amp;goto=item%3Fid%3D40739431">hide</a> | <a href="https://hn.algolia.com/?query=Ask%20HN%3A%20Could%20AI%20be%20a%20dot%20com%20sized%20bubble%3F&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=40739431&amp;auth=11d20f8e338d8c8c26f2ae6471155cb537c45ff0">favorite</a> | <a href="https://news.ycombinator.com/item?id=40739431">91&nbsp;comments</a>        </span>
              </td></tr>
    <tr><td></td></tr><tr><td colspan="2"></td><td><div><p>AI hype has landed in the laps of retail investors and in general anyone passively investing as NVIDIA and Microsoft shares have risen and become part of major ETFs in the expectation that the AI-driven demand for their products will continue unabated. Other tech stocks seem to be seeing similar treatment around AI hype.</p><p>I do expect the current trajectory of generative models will eventually be incredibly important just like the internet was and is, but it seems there’s a lot of high expectations of how useful it can be in the near future with fuzzy ideas around business models like in the dot com era.</p><p>If these near future expectations don’t pan out, could companies slow down their R&amp;D expenditures which are floating NVIDIA, Microsoft, et al and lead to a sizable stock market correction?</p></div></td></tr>        <tr><td></td></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Claude 3.5 Sonnet (538 pts)]]></title>
            <link>https://www.anthropic.com/news/claude-3-5-sonnet</link>
            <guid>40738916</guid>
            <pubDate>Thu, 20 Jun 2024 14:03:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.anthropic.com/news/claude-3-5-sonnet">https://www.anthropic.com/news/claude-3-5-sonnet</a>, See on <a href="https://news.ycombinator.com/item?id=40738916">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><figure><img alt="Claude head illustration" loading="eager" width="2880" height="1620" decoding="async" data-nimg="1" srcset="https://www.anthropic.com/_next/image?url=https%3A%2F%2Fwww-cdn.anthropic.com%2Fimages%2F4zrzovbb%2Fwebsite%2F4e78f69ef8d4186fb5691714abe36224483d91b0-2880x1620.png&amp;w=3840&amp;q=75 1x" src="https://www.anthropic.com/_next/image?url=https%3A%2F%2Fwww-cdn.anthropic.com%2Fimages%2F4zrzovbb%2Fwebsite%2F4e78f69ef8d4186fb5691714abe36224483d91b0-2880x1620.png&amp;w=3840&amp;q=75"></figure><p>Today, we’re launching Claude 3.5 Sonnet—our first release in the forthcoming Claude 3.5 model family. Claude 3.5 Sonnet raises the industry bar for intelligence, outperforming competitor models and Claude 3 Opus on a wide range of evaluations, with the speed and cost of our mid-tier model, Claude 3 Sonnet.</p><p>Claude 3.5 Sonnet is now available for free on Claude.ai and the Claude iOS app, while Claude Pro and Team plan subscribers can access it with significantly higher rate limits. It is also available via the Anthropic API, Amazon Bedrock, and Google Cloud’s Vertex AI. The model costs $3 per million input tokens and $15 per million output tokens, with a 200K token context window.</p><figure><img alt="Claude model family" loading="eager" width="2200" height="1174" decoding="async" data-nimg="1" srcset="https://www.anthropic.com/_next/image?url=https%3A%2F%2Fwww-cdn.anthropic.com%2Fimages%2F4zrzovbb%2Fwebsite%2F1f044104447e9db6b22db3a06e45d114f50f274e-2200x1174.png&amp;w=3840&amp;q=75 1x" src="https://www.anthropic.com/_next/image?url=https%3A%2F%2Fwww-cdn.anthropic.com%2Fimages%2F4zrzovbb%2Fwebsite%2F1f044104447e9db6b22db3a06e45d114f50f274e-2200x1174.png&amp;w=3840&amp;q=75"></figure><h3>Frontier intelligence at 2x the speed</h3><p>Claude 3.5 Sonnet sets new industry benchmarks for graduate-level reasoning (GPQA), undergraduate-level knowledge (MMLU), and coding proficiency (HumanEval). It shows marked improvement in grasping nuance, humor, and complex instructions, and is exceptional at writing high-quality content with a natural, relatable tone.</p><p>Claude 3.5 Sonnet operates at twice the speed of Claude 3 Opus. This performance boost, combined with cost-effective pricing, makes Claude 3.5 Sonnet ideal for complex tasks such as context-sensitive customer support and orchestrating multi-step workflows.</p><p>In an <a href="https://cdn.sanity.io/files/4zrzovbb/website/fed9cc193a14b84131812372d8d5857f8f304c52.pdf">internal agentic coding evaluation</a>, Claude 3.5 Sonnet solved 64% of problems, outperforming Claude 3 Opus which solved 38%. Our evaluation tests the model’s ability to fix a bug or add functionality to an open source codebase, given a natural language description of the desired improvement. When instructed and <a href="https://www.anthropic.com/news/tool-use-ga">provided with the relevant tools</a>, Claude 3.5 Sonnet can independently write, edit, and execute code with sophisticated reasoning and troubleshooting capabilities. It handles code translations with ease, making it particularly effective for updating legacy applications and migrating codebases.</p><figure><img alt="Claude 3.5 Sonnet benchmarks" loading="lazy" width="2200" height="1894" decoding="async" data-nimg="1" srcset="https://www.anthropic.com/_next/image?url=https%3A%2F%2Fwww-cdn.anthropic.com%2Fimages%2F4zrzovbb%2Fwebsite%2Fcf2c754458e9102b7334731fb18a965bfeb7ad08-2200x1894.png&amp;w=3840&amp;q=75 1x" src="https://www.anthropic.com/_next/image?url=https%3A%2F%2Fwww-cdn.anthropic.com%2Fimages%2F4zrzovbb%2Fwebsite%2Fcf2c754458e9102b7334731fb18a965bfeb7ad08-2200x1894.png&amp;w=3840&amp;q=75"></figure><h3>State-of-the-art vision</h3><p>Claude 3.5 Sonnet is our strongest vision model yet, surpassing Claude 3 Opus on standard vision benchmarks. These step-change improvements are most noticeable for tasks that require visual reasoning, like interpreting charts and graphs. Claude 3.5 Sonnet can also accurately transcribe text from imperfect images—a core capability for retail, logistics, and financial services, where AI may glean more insights from an image, graphic or illustration than from text alone.</p><!--$!--><template data-dgst="NEXT_DYNAMIC_NO_SSR_CODE"></template><!--/$--><figure><img alt="Claude 3.5 Sonnet vision evals" loading="lazy" width="2200" height="1110" decoding="async" data-nimg="1" srcset="https://www.anthropic.com/_next/image?url=https%3A%2F%2Fwww-cdn.anthropic.com%2Fimages%2F4zrzovbb%2Fwebsite%2Fcaff3d60763b27b59fe33e4ae984530f0dba4ddb-2200x1110.png&amp;w=3840&amp;q=75 1x" src="https://www.anthropic.com/_next/image?url=https%3A%2F%2Fwww-cdn.anthropic.com%2Fimages%2F4zrzovbb%2Fwebsite%2Fcaff3d60763b27b59fe33e4ae984530f0dba4ddb-2200x1110.png&amp;w=3840&amp;q=75"></figure><h3>Artifacts—a new way to use Claude</h3><p>Today, we’re also introducing Artifacts on Claude.ai, a new feature that expands how users can interact with Claude. When a user asks Claude to generate content like code snippets, text documents, or website designs, these Artifacts appear in a dedicated window alongside their conversation. This creates a dynamic workspace where they can see, edit, and build upon Claude’s creations in real-time, seamlessly integrating AI-generated content into their projects and workflows.</p><p>This preview feature marks Claude’s evolution from a conversational AI to a collaborative work environment. It’s just the beginning of a broader vision for Claude.ai, which will soon expand to support team collaboration. In the near future, teams—and eventually entire organizations—will be able to securely centralize their knowledge, documents, and ongoing work in one shared space, with Claude serving as an on-demand teammate.</p><!--$!--><template data-dgst="NEXT_DYNAMIC_NO_SSR_CODE"></template><!--/$--><h3>Commitment to safety and privacy</h3><p>Our models are subjected to rigorous testing and have been trained to reduce misuse. Despite Claude 3.5 Sonnet’s leap in intelligence, our red teaming assessments have concluded that Claude 3.5 Sonnet remains at <a href="https://www.anthropic.com/news/anthropics-responsible-scaling-policy">ASL-2</a>. More details can be found in the <a href="https://cdn.sanity.io/files/4zrzovbb/website/fed9cc193a14b84131812372d8d5857f8f304c52.pdf">model card addendum</a>.</p><p>As part of our commitment to safety and transparency, we’ve engaged with external experts to test and refine the safety mechanisms within this latest model. We recently provided Claude 3.5 Sonnet to the UK’s Artificial Intelligence Safety Institute (UK AISI) for pre-deployment safety evaluation. The UK AISI completed tests of 3.5 Sonnet and shared their results with the US AI Safety Institute (US AISI) as part of a Memorandum of Understanding, made possible by the partnership between the US and UK AISIs <a href="https://www.commerce.gov/news/press-releases/2024/04/us-and-uk-announce-partnership-science-ai-safety">announced earlier this year</a>.</p><p>We have integrated policy feedback from outside subject matter experts to ensure that our evaluations are robust and take into account new trends in abuse. This engagement has helped our teams scale up our ability to evaluate 3.5 Sonnet against various types of misuse. For example, we used feedback from child safety experts at <a href="https://www.thorn.org/">Thorn</a> to update our classifiers and fine-tune our models.</p><p>One of the core constitutional principles that guides our AI model development is privacy. We do not train our generative models on user-submitted data unless a user gives us explicit permission to do so. To date we have not used any customer or user-submitted data to train our generative models.</p><h3>Coming soon</h3><p>Our aim is to substantially improve the tradeoff curve between intelligence, speed, and cost every few months. To complete the Claude 3.5 model family, we’ll be releasing Claude 3.5 Haiku and Claude 3.5 Opus later this year.</p><p>In addition to working on our next-generation model family, we are developing new modalities and features to support more use cases for businesses, including integrations with enterprise applications. Our team is also exploring features like Memory, which will enable Claude to remember a user’s preferences and interaction history as specified, making their experience even more personalized and efficient.</p><p>We’re constantly working to improve Claude and love hearing from our users. You can submit feedback on Claude 3.5 Sonnet directly in-product to inform our development roadmap and help our teams to improve your experience. As always, we look forward to seeing what you build, create, and discover with Claude.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Wc2: Investigates optimizing 'wc', the Unix word count program (165 pts)]]></title>
            <link>https://github.com/robertdavidgraham/wc2</link>
            <guid>40738833</guid>
            <pubDate>Thu, 20 Jun 2024 13:54:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/robertdavidgraham/wc2">https://github.com/robertdavidgraham/wc2</a>, See on <a href="https://news.ycombinator.com/item?id=40738833">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">wc2 - asynchronous state machine parsing</h2><a id="user-content-wc2---asynchronous-state-machine-parsing" aria-label="Permalink: wc2 - asynchronous state machine parsing" href="#wc2---asynchronous-state-machine-parsing"></a></p>
<p dir="auto">There have been multiple articles lately implementing the
classic <code>wc</code> program in various programming <em>languages</em>, to
"prove" their favorite language can be "just as fast" as C.</p>
<p dir="auto">This project does something different.
Instead of a different <em>language</em> it uses a different <em>algorithm</em>.
The new algorithm is significantly faster -- implementing in a
slow language like JavaScript is still faster than the original
<code>wc</code> program written in C.</p>
<p dir="auto">The algorithm is known as an "asynchronous state-machine parser".
It's a technique for <em>parsing</em> that you don't learn in college.
It's more <em>efficient</em>, but more importantly, it's more <em>scalable</em>.
That's why your browser uses a state-machine to parse GIFs,
and most web servers use state-machiens to parse incoming HTTP requests.</p>
<p dir="auto">This projects contains three versions:</p>
<ul dir="auto">
<li><code>wc2o.c</code> is a simplified 25 line version highlighting the idea</li>
<li><code>wc2.c</code> is the full version in C, supporting Unicode</li>
<li><code>wc2.js</code> is the version in JavaScript</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">The basic algorithm</h2><a id="user-content-the-basic-algorithm" aria-label="Permalink: The basic algorithm" href="#the-basic-algorithm"></a></p>
<p dir="auto">The algorithm reads input and passes each byte one at a time
to a state-machine. It looks something like:</p>
<div dir="auto" data-snippet-clipboard-copy-content="    length = fread(buf, 1, sizeof(buf), fp);
    for (i=0; i<length; i++) {
        c = buf[i];
        state = table[state][c];
        counts[state]++;
    }"><pre>    <span>length</span> <span>=</span> <span>fread</span>(<span>buf</span>, <span>1</span>, <span>sizeof</span>(<span>buf</span>), <span>fp</span>);
    <span>for</span> (<span>i</span><span>=</span><span>0</span>; <span>i</span><span>&lt;</span><span>length</span>; <span>i</span><span>++</span>) {
        <span>c</span> <span>=</span> <span>buf</span>[<span>i</span>];
        <span>state</span> <span>=</span> <span>table</span>[<span>state</span>][<span>c</span>];
        <span>counts</span>[<span>state</span>]<span>++</span>;
    }</pre></div>
<p dir="auto">No, you aren't suppose to be able to see how the word-count works
by looking at this code. The complexity happens elsewhere, setting
up the state-machine.</p>
<p dir="auto">The state-machine table is the difference between the simple version
(<code>wc2o.c</code>) and complex version (<code>wc2.c</code>) of the program. The algorithm
is the same, the one shown above, the difference is in how they setup
the table. The simple program creates a table for ASCII, the complex
program creates a much larger table supporting UTF-8.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How <code>wc</code> works</h2><a id="user-content-how-wc-works" aria-label="Permalink: How wc works" href="#how-wc-works"></a></p>
<p dir="auto">The <code>wc</code> word-count program counts the number of words in a file. A "word"
is some non-space characters separate by space.</p>
<p dir="auto">Those who re-implement <code>wc</code> simplify the problem by only doing ASCII instead
of the full UTF-8 Unicode. This is cheating, because much of the speed of
<code>wc</code> comes from its need to handle character-sets like UTF-8.
The real programs spend most of their time
in functions like <code>mbrtowc()</code> to parse multi-byte characters and
<code>iswspace()</code> to test if they are spaces -- which re-implementations
of <code>wc</code> skip.</p>
<p dir="auto">For this reason, we've implemented a full UTF-8 version in this project, to
prove that it works without cheating. Now the real <code>wc</code> works with a lot
more character-sets, and we don't do that. But by implementing UTF-8, we've
shown that it's possible, and that the speed for any character-set is the same.</p>
<p dir="auto">Another simplification is how invalid input is handled. The original <code>wc</code> program
largley ignores errors, but it's still an important factor in making sure you
are doing things correctly.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Benchmark input files</h2><a id="user-content-benchmark-input-files" aria-label="Permalink: Benchmark input files" href="#benchmark-input-files"></a></p>
<p dir="auto">This project uses a number of large input files for benchmarking.
The traditional <code>wc</code> program has wildly different performance depending
upon input, such as whether the file is full of illegal characters, or
whether UTF-8 is being handled. The first test file is downloaded
from the Internet as "real-world data", while the others are generated
using a program built with this project (<code>wctool</code>).</p>
<ul dir="auto">
<li><code>pocorgtfo18.pdf</code> a large 92-million byte PDF file that contains binary/illegal characters</li>
<li><code>ascii.txt</code> a file the same size containing random words, ASCII-only</li>
<li><code>utf8.txt</code> a file containing random UTF-8 sequences of 1, 2, 3, and 4 bytes</li>
<li><code>word.txt</code> a file containing 92-million 'x' characters</li>
<li><code>space.txt</code> a file containing 92-million ' ' (space) characters</li>
</ul>
<p dir="auto">Before benchmarking the old <code>wc</code>, set the character-set to UTF-8. It's
probably already set to this on new systems, but do this to make sure:</p>
<div data-snippet-clipboard-copy-content="$ export LC_CTYPE=en_US.UTF-8"><pre><code>$ export LC_CTYPE=en_US.UTF-8
</code></pre></div>
<p dir="auto">When running <code>wc</code>, the <code>-lwc</code> is the default for counting words in ASCII text.
To convert it into UTF-8 "multi-byte" mode, change <code>c</code> o <code>m</code>, as in <code>-lwm</code>.</p>
<p dir="auto">The numbers are reported come from the Unix <code>time</code> command, the number of seconds for
<code>user</code> time. In other words, <code>elapsed</code> time or <code>system</code> time aren't reported.</p>
<p dir="auto">The following table shows benchmarking a 2019 x86 MacBook Air of the old
<code>wc</code> program. As you can see, it has a wide variety of speeds depending
on input.</p>
<p dir="auto">The <code>wc</code> program included with macOS and Linux are completely different.
Therefore, the following table shows them benchmarked against each other
on the same hardware.</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Input File</th>
<th>macOS</th>
<th>Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td>wc -lwc</td>
<td>pocorgtfo18.pdf</td>
<td>0.709</td>
<td>5.591</td>
</tr>
<tr>
<td>wc -lwm</td>
<td>pocorgtfo18.pdf</td>
<td>0.693</td>
<td>5.419</td>
</tr>
<tr>
<td>wc -lwc</td>
<td>ascii.txt</td>
<td>0.296</td>
<td>2.509</td>
</tr>
<tr>
<td>wc -lwm</td>
<td>utf8.txt</td>
<td>0.532</td>
<td>1.840</td>
</tr>
<tr>
<td>wc -lwc</td>
<td>space.txt</td>
<td>0.296</td>
<td>0.284</td>
</tr>
<tr>
<td>wc -lwm</td>
<td>space.txt</td>
<td>0.295</td>
<td>0.298</td>
</tr>
<tr>
<td>wc -lwc</td>
<td>word.txt</td>
<td>0.302</td>
<td>1.268</td>
</tr>
<tr>
<td>wc -lwm</td>
<td>word.txt</td>
<td>0.294</td>
<td>1.337</td>
</tr>
</tbody>
</table>
<p dir="auto">These results tell us:</p>
<ul dir="auto">
<li>Illegal characters (in <code>pocorgtfo18.pdf</code>) slow things down a lot,
twice as slow on macOS, 10x slower on Linux.</li>
<li>Text that randomly switches between spaces and words is much slower
than text containing all the same character.</li>
<li>On Linux, the code path that reads all spaces is significantly faster.</li>
<li>The macOS program is in general much faster than the Linux version.</li>
<li>Processing Unicode (the file <code>utf8.txt</code> with the <code>-m</code> option) is slower
than processing ASCII (the file <code>ascii.txt</code> with the <code>-c</code> option).</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Our benchmarks</h2><a id="user-content-our-benchmarks" aria-label="Permalink: Our benchmarks" href="#our-benchmarks"></a></p>
<p dir="auto">The time for our algorithm, in C and JavaScript, are the following.
The state-machine parser is immune to input type, all the input files
show the same results.</p>
<table>
<thead>
<tr>
<th>Program</th>
<th>Input File</th>
<th>macOS</th>
<th>Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td>wc2.c</td>
<td>(all)</td>
<td>0.206</td>
<td>0.278</td>
</tr>
<tr>
<td>wc2.js</td>
<td>(all)</td>
<td>0.281</td>
<td>0.488</td>
</tr>
</tbody>
</table>
<p dir="auto">These results tell us:</p>
<ul dir="auto">
<li>This state machine approach always results in the same speed, regardless
of input.</li>
<li>This state machine approach is faster than the built-in programs.</li>
<li>Even written in JavaScript, the state machine approach is competitive in speed.</li>
<li>The difference in macOS and Linux speed is actually the difference in <code>clang</code> and <code>gcc</code>
speed. The LLVM <code>clang</code> compiler is doing better optimizations for x86 processors here.</li>
<li>I don't know why Node.js behaves differently on macOS and Linux, it's probably just
due to different versions.</li>
<li>A JIT (like NodeJS) works well with simple compute algorithms. This tells
us little about it's relative performance in larger programs. All languages
that have a JIT should compile this sort of algorithm to roughly the same
speed.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Asynchronous scalability</h2><a id="user-content-asynchronous-scalability" aria-label="Permalink: Asynchronous scalability" href="#asynchronous-scalability"></a></p>
<p dir="auto">The algorithm is <em>faster</em>, but more importantly, it's more <em>scalable</em>.</p>
<p dir="auto">Such scalability isn't usefull for <code>wc</code>, but is incredibly important for network
programs. Consider an HTTP web-server. The traditional way that the Apache web-server
worked was by reading the entire header in and buffering it, before then parsing
the header. This need to buffer the entire header caused an enormous scalability
problem. In contrast, asynchronous web-servers like Nginx use a state-machine
parser. They parse the bytes as they arrive, and discard them.</p>
<p dir="auto">This is analogous to NFA and DFA regular-expressions. If you use the NFA
approach, you need to buffer the entire chunk of data, so that the regex
can backtrack. Using the DFA approach, input can be provided as a stream,
one byte at a time, without needing buffering. DFAs are more scalable than NFAs.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">State machine parsers</h2><a id="user-content-state-machine-parsers" aria-label="Permalink: State machine parsers" href="#state-machine-parsers"></a></p>
<p dir="auto">This project contains a minimalistic <code>wc2o.c</code> program to highlight
the algorithm, without all the fuss of building UTF-8 tables, supporting
only ASCII.</p>
<div dir="auto" data-snippet-clipboard-copy-content="#include <stdio.h>
int main(void)
{
    static const unsigned char table[4][4] = {
        {2,0,1,0,}, {2,0,1,0,}, {3,0,1,0,},  {3,0,1,0,}
    };
    static const unsigned char column[256] = {
        0,0,0,0,0,0,0,0,0,1,2,1,1,1,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
    };
    unsigned long counts[4] = {0,0,0,0};
    int state = 0;
    int c;

    while ((c = getchar()) != EOF) {
        state = table[state][column[c]];
        counts[state]++;
    }

    printf(&quot;%lu %lu %lu\n&quot;, counts[1], counts[2], 
                counts[0] + counts[1] + counts[2] + counts[3]);
    return 0;
}"><pre><span>#include</span> <span>&lt;stdio.h&gt;</span>
<span>int</span> <span>main</span>(<span>void</span>)
{
    <span>static</span> <span>const</span> <span>unsigned <span>char</span></span> <span>table</span>[<span>4</span>][<span>4</span>] <span>=</span> {
        {<span>2</span>,<span>0</span>,<span>1</span>,<span>0</span>,}, {<span>2</span>,<span>0</span>,<span>1</span>,<span>0</span>,}, {<span>3</span>,<span>0</span>,<span>1</span>,<span>0</span>,},  {<span>3</span>,<span>0</span>,<span>1</span>,<span>0</span>,}
    };
    <span>static</span> <span>const</span> <span>unsigned <span>char</span></span> <span>column</span>[<span>256</span>] <span>=</span> {
        <span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>1</span>,<span>2</span>,<span>1</span>,<span>1</span>,<span>1</span>,<span>0</span>,<span>0</span>,<span>0</span>,
        <span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>,<span>1</span>,<span>0</span>,
    };
    <span>unsigned long</span> <span>counts</span>[<span>4</span>] <span>=</span> {<span>0</span>,<span>0</span>,<span>0</span>,<span>0</span>};
    <span>int</span> <span>state</span> <span>=</span> <span>0</span>;
    <span>int</span> <span>c</span>;

    <span>while</span> ((<span>c</span> <span>=</span> <span>getchar</span>()) <span>!=</span> <span>EOF</span>) {
        <span>state</span> <span>=</span> <span>table</span>[<span>state</span>][<span>column</span>[<span>c</span>]];
        <span>counts</span>[<span>state</span>]<span>++</span>;
    }

    <span>printf</span>(<span>"%lu %lu %lu\n"</span>, <span>counts</span>[<span>1</span>], <span>counts</span>[<span>2</span>], 
                <span>counts</span>[<span>0</span>] <span>+</span> <span>counts</span>[<span>1</span>] <span>+</span> <span>counts</span>[<span>2</span>] <span>+</span> <span>counts</span>[<span>3</span>]);
    <span>return</span> <span>0</span>;
}</pre></div>
<p dir="auto">The key part that does all the word counting is in the two lines inside:</p>
<div dir="auto" data-snippet-clipboard-copy-content="    while ((c = getchar()) != EOF) {
        state = table[state][column[c]];
        counts[state]++;
    }"><pre>    <span>while</span> ((<span>c</span> <span>=</span> <span>getchar</span>()) <span>!=</span> <span>EOF</span>) {
        <span>state</span> <span>=</span> <span>table</span>[<span>state</span>][<span>column</span>[<span>c</span>]];
        <span>counts</span>[<span>state</span>]<span>++</span>;
    }</pre></div>
<p dir="auto">This is only defined for ASCII, so you can see the state-machine on a
single-line in the code (<code>table</code>).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Additional tools</h2><a id="user-content-additional-tools" aria-label="Permalink: Additional tools" href="#additional-tools"></a></p>
<p dir="auto">This project includes additional tools:</p>
<ul dir="auto">
<li><code>wctool</code> to generate large test files</li>
<li><code>wcdiff</code> to find difference between two implementatins of <code>wc</code></li>
<li><code>wcstream</code> to fragment input files (demonstrates a bug in macOS's <code>wc</code>)</li>
</ul>
<p dir="auto">The program <code>wc2.c</code> has the same logic, the difference being that it
generates a larger state-machine for parsing UTF-8.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Pointer arithmetic</h2><a id="user-content-pointer-arithmetic" aria-label="Permalink: Pointer arithmetic" href="#pointer-arithmetic"></a></p>
<p dir="auto">C has a peculiar idiom called "pointer arithmetic", where pointers can
be incremented. Looping through a buffer is done with an expression like
<code>*buf++</code> instead of <code>buf[i++]</code>. Many programmers think pointer-arithmetic
is faster.</p>
<p dir="auto">To test this, the <code>wc2.c</code> program has an option <code>-P</code> that makes this
small change, to test the difference in speed.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[NPM and NodeJS should do more to make ES Modules easy to use (201 pts)]]></title>
            <link>https://borischerny.com/javascript,/typescript/2024/06/19/ES-Modules-Are-A-Mess.html</link>
            <guid>40737508</guid>
            <pubDate>Thu, 20 Jun 2024 11:40:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://borischerny.com/javascript,/typescript/2024/06/19/ES-Modules-Are-A-Mess.html">https://borischerny.com/javascript,/typescript/2024/06/19/ES-Modules-Are-A-Mess.html</a>, See on <a href="https://news.ycombinator.com/item?id=40737508">Hacker News</a></p>
<div id="readability-page-1" class="page">
    <section role="heading">
      <header role="heading">
        <h2>
          <a href="https://borischerny.com/">Boris Cherny's Blog</a>
        </h2>
      </header>
      
    </section>
    <section role="article">
<h3>June 19, 2024</h3>

<p>Coming back to JavaScript and TypeScript after a few years neck deep in Python and Hack, I kept hitting a number of new, cryptic errors when running NodeJS code in my dev environment:</p>

<div><pre><code><span># when I ran ESM TypeScript code the wrong way:</span>
Error <span>[</span>ERR_REQUIRE_ESM]: Must use import to load ES Module

<span># when I imported an ESModule from a CommonJS .js file:</span>
Error <span>[</span>ERR_REQUIRE_ESM]: require<span>()</span> of ES Module .../lodash.js from .../index.cjs not supported

<span># when I imported an ESModule from a .ts file:</span>
error TS1479: The current file is a CommonJS module whose imports will produce <span>'require'</span> calls

<span># when I used ES6 import syntax in a .js file:</span>
SyntaxError: Cannot use import statement outside a module
</code></pre></div>

<p>These errors are all related to importing, typechecking, and loading modules. The JavaScript ecosystem moves fast, and things changing over the last few years was not a surprise. However, it was surprising to see so many errors related to such a core piece of the language!</p>

<h2 id="how-we-got-here">How we got here</h2>

<p>Modules in JavaScript and TypeScript have changed significantly over time:</p>

<ul>
  <li>Years ago, there was no module system for JavaScript and TypeScript. A number of solutions sprang up around ways to declare and load modules: IIFEs, <a href="https://github.com/getify/LABjs">LabJS</a>, <a href="https://github.com/amdjs/amdjs-api/blob/master/AMD.md">AMD</a>, <a href="https://requirejs.org/">require.js</a>, <a href="https://www.typescriptlang.org/docs/handbook/namespaces.html">TypeScript namespaces</a>, and more. Tooling support and interop were hit or miss.</li>
  <li>CommonJS emerged as a standard-by-convention for modules, across browser, server, JavaScript, and TypeScript.</li>
  <li>When ES6 came out, folks started switching over to <code>import</code> and <code>export</code> syntax (from CommonJS’s <code>require</code> and <code>module.exports</code>), using tools like Babel and TypeScript to compile code down to CommonJS.</li>
  <li>CommonJS can be challenging to statically analyze, and uses an <a href="https://www.youtube.com/watch?v=W5CXzo4TZVU">inefficient</a>, synchronous module loading algorithm at runtime. ES Modules were <a href="https://tc39.es/ecma262/#sec-modules">introduced</a> as the way to use <code>import</code> and <code>export</code>, while at the same time improving code load times at runtime.</li>
  <li>ES Modules introduced significant complexity for NodeJS in particular: instead of reusing the <em>.js</em> and <em>.ts</em> file extensions, ES Modules in NodeJS require either using <em>.mjs</em>, or setting <code>type=module</code> in your <em>package.json</em>. Interoperating these modules with an ecosystem-ful of CommonJS remains painful.</li>
</ul>

<h2 id="current-state-by-the-numbers">Current state, by the numbers</h2>

<p>I was curious – since ES Modules (<code>import</code>/<code>export</code>) were introduced in <a href="https://262.ecma-international.org/6.0/#sec-modules">2015</a>, and NodeJS has supported <code>type=module/commonjs</code>, <em>.mjs</em>, and <em>.cjs</em>, with the goal of replacing <em>.js</em>, since <a href="https://nodejs.org/api/packages.html#type">2019</a>, to what degree have these new conventions been adopted?</p>

<p>I answered this with data, using two approaches:</p>

<ol>
  <li>Looking at the most starred JavaScript and TypeScript repos on Github</li>
  <li>Looking at the most downloaded packages on NPM</li>
</ol>

<p>The <a href="https://github.com/bcherny/es-module-stats">results</a> are not rosy. After 5+ years, adoption of ES Modules remains weak:</p>

<ol>
  <li>Between 9-27% of JavaScript/TypeScript projects declare themselves to be ES Modules via the <code>type</code> (and lesser-used <code>exports</code>) fields in their <em>package.json</em>s.</li>
  <li>Less than 6% of JavaScript/TypeScript files declare that they are ES Modules via the <em>.mjs</em>, <em>.cjs</em>, <em>.mts</em>, etc. file extensions.</li>
</ol>

<p>Note that these ranges come from the two approaches I used to estimate the numbers. Head <a href="https://github.com/bcherny/es-module-stats">here</a> for more detailed data and code.</p>

<h2 id="how-do-we-fix-it">How do we fix it?</h2>

<p>This helps explain why it’s so painful to interoperate ES Modules and CommonJS across both NodeJS and TypeScript: enough libraries use ES Modules that for many projects you need to either use ES Modules, or figure out how to interoperate ES Modules with your CommonJS code. At the same time, enough code still uses CommonJS that you often need to figure out how to include that legacy code in your otherwise-ES Module project.</p>

<p>The benefits of ES Modules are significant. Rolling everything back to CommonJS is not the way forward. Is there more we can do to simplify the ecosystem, and push harder on adoption? Some ideas:</p>

<ol>
  <li>We should kill <em>.mjs</em>, <em>.cjs</em>, <em>.mts</em>, etc. The vast majority of projects use <code>type=module</code> in their <em>package.json</em>, rather than file extensions. It would simplify things considerably if we drop support for these new file extensions and stick to <em>.js</em>, <em>.jsx</em>, <em>.ts</em>, and <em>.tsx</em>.</li>
  <li>We should make <code>type=module</code> the <a href="https://github.com/npm/cli/issues/7594">default</a> for new <em>package.json</em> files for the <code>npm init</code>, <code>yarn init</code>, and <code>pnpm init</code> commands. Package managers’ <code>publish</code> commands should warn when <code>type</code> is not set to <code>module</code>.</li>
  <li>We should upgrade the most common libraries used by the community to ES Modules, either manually or through automated pull requests (this feels like something that can be semi-automated).</li>
  <li>The NPM registry can require an explicit <code>module</code> field on new packages, making it clear when a package intentionally uses CommonJS (eg. because it targets legacy NodeJS versions).</li>
  <li>NodeJS can officially drop support for <code>require</code> and <code>module.exports</code> in a future version, creating a bit more pressure to migrate.</li>
</ol>

<p>I’d love to hear others’ thoughts. Have you also felt the pain of interoperating ES Modules and CommonJS?</p>

<hr>

<p>Discuss this post on <a href="https://news.ycombinator.com/item?id=40737508">HackerNews</a> or on <a href="https://www.threads.net/@boris_cherny/post/C8aDJuGI5HM">Threads</a>.</p>

</section>
  

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Let's write a video game from scratch like it's 1987 (137 pts)]]></title>
            <link>https://gaultier.github.io/blog/write_a_video_game_from_scratch_like_1987.html</link>
            <guid>40737370</guid>
            <pubDate>Thu, 20 Jun 2024 11:21:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gaultier.github.io/blog/write_a_video_game_from_scratch_like_1987.html">https://gaultier.github.io/blog/write_a_video_game_from_scratch_like_1987.html</a>, See on <a href="https://news.ycombinator.com/item?id=40737370">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<p id="publication_date">Published on 2024-06-20.</p>
<p>In a <a href="https://gaultier.github.io/blog/x11_x64.html">previous article</a> I’ve done the
‘Hello, world!’ of GUIs in assembly: A black window with a white text,
using X11 without any libraries, just talking directly over a
socket.</p>
<p>In a <a href="https://gaultier.github.io/blog/wayland_from_scratch.html">later article</a> I’ve
done the same with Wayland in C, displaying a static image.</p>
<p>I showed that this is not complex and results in a very lean and
small application.</p>
<p>Recently, I stumbled upon this <a href="https://news.ycombinator.com/item?id=40647278">Hacker News
post</a>:</p>
<blockquote>
<p>Microsoft’s official Minesweeper app has ads, pay-to-win, and is
hundreds of MBs</p>
</blockquote>
<p>And I thought it would be fun to make with the same principles a
full-fledged GUI application: the cult video game Minesweeper.</p>
<p>Will it be hundred of megabytes when we finish? How much work is it
really? Can a hobbyist make this in a few hours?</p>
<figure>
<img src="https://github.com/gaultier/minesweeper-from-scratch/raw/master/screenshot.png" alt="The game running on Linux (XWayland)">

</figure>
<figure>
<img src="https://gaultier.github.io/blog/game-x11-freebsd.png" alt="The game executable running unmodified on FreeBSD (X11) through Linux binary compatibility">

</figure>
<figure>
<video controls="">
<source src="https://gaultier.github.io/blog/screencast.mp4" type="video/mp4">
<source src="https://gaultier.github.io/blog/screencast.webm" type="video/webm">
<p>
Your browser doesn’t support this video. Here is a
<a href="https://gaultier.github.io/blog/screencast.mp4">link to the video</a> instead.
</p>
</video>

</figure>
<p><em>Press enter to reset and press any mouse button to uncover the
cell under the mouse cursor.</em></p>
<p>Here is a <a href="https://youtube.com/shorts/HLS0xS8KKQY?feature=share">Youtube
link</a> in case the video does not play (I tried lots of things so that
it plays on iOS to no avail).</p>
<p>The result is a ~300 KiB statically linked executable, that requires
no libraries, and uses a constant ~1 MiB of resident heap memory
(allocated at the start, to hold the assets). That’s roughly a thousand
times smaller in size than Microsoft’s. And it only is a few hundred
lines of code.</p>
<p>The advantage of this approach is that the application is tiny and
stand-alone: statically linked with the few bits of libC it uses (and
that’s it), it can be trivially compiled on every Unix, and copied
around, and it will work on every machine (with the same OS/architecture
that is). Even on ancient Linuxes from 20 years ago.</p>
<p>I remember playing this game as a kid (must have been on Windows 98).
It was a lot of fun! I don’t exactly remember the rules though so it’s a
best approximation.</p>
<blockquote>
<p>If you spot an error, please open a <a href="https://github.com/gaultier/blog">Github issue</a>! And the source
code repository for the game is <a href="https://github.com/gaultier/minesweeper-from-scratch">here</a>.</p>
</blockquote>
<p><strong>Table of Contents</strong></p>
<ul>
<li><a href="#what-were-making" id="toc-what-were-making">What we’re
making</a></li>
<li><a href="#authentication" id="toc-authentication">Authentication</a></li>
<li><a href="#opening-a-window" id="toc-opening-a-window">Opening a
window</a></li>
<li><a href="#loading-assets" id="toc-loading-assets">Loading
assets</a></li>
<li><a href="#the-game-entities" id="toc-the-game-entities">The game
entities</a></li>
<li><a href="#reacting-to-keyboard-and-mouse-events" id="toc-reacting-to-keyboard-and-mouse-events">Reacting to keyboard and
mouse events</a></li>
<li><a href="#game-logic-uncover-a-cell" id="toc-game-logic-uncover-a-cell">Game logic: uncover a cell</a></li>
<li><a href="#conclusion" id="toc-conclusion">Conclusion</a></li>
<li><a href="#addendum-the-full-code" id="toc-addendum-the-full-code">Addendum: the full code</a></li>
</ul>
<h2 id="what-were-making">What we’re making</h2>
<p>The 11th version of the X protocol was born in 1987 and has not
changed since. Since it predates GPUs by a decade or so, its model does
not really fit the hardware of today. Still, it’s everywhere. Any Unix
has a X server, even macOS with XQuartz, and now Windows supports
running GUI Linux applications inside WSL! X11 has never been so
ubiquitous. The protocol is relatively simple and the entry bar is low:
we only need to create a socket and we’re off the races. And for 2D
applications, there’s no need to be a Vulkan wizard or even interact
with the GPU. Hell, it will work even without any GPU!</p>
<p>Everyone writing GUIs these days use a giant pile of libraries,
starting with the <del>overly complicated</del> venerable
<code>libX11</code> and <code>libxcb</code> libraries, to Qt and
SDL.</p>
<p>Here are the steps we need to take:</p>
<ul>
<li>Open a window</li>
<li>Upload image data (the one sprite with all the assets)</li>
<li>Draw parts of the sprite to the window</li>
<li>React to keyboard/mouse events</li>
</ul>
<p>And that’s it. Spoiler alert: every step is 1-3 X11 messages that we
need to craft and send. The only messages that we receive are the
keyboard and mouse events. It’s really not much at all!</p>
<p>We will implement this in the <a href="https://odin-lang.org/">Odin
programming language</a> which I really enjoy. But if you want to follow
along with C or anything really, go for it. All we need is to be able to
open a Unix socket, send and receive data on it, and load an image into
memory. We will use PNG for that, since Odin has in its standard library
support for PNGs, but we could also very easily use a simple format like
PPM (like I did in the linked Wayland article) that is trivial to parse.
Since Odin has support for both in its standard library, it does not
really matter, and I stuck with PNG since it’s more space-efficient.</p>
<p>Finally, if you’re into writing X11 applications even with libraries,
lots of things in X11 are undocumented or underdocumented, and this
article can be a good learning resource. As a bonus, you can also follow
along with pure Wayland, using my previous Wayland article.</p>
<p>Or perhaps you simply enjoy, like me, peeking behind the curtain to
understand the magician’s tricks. It almost always ends up with: “That’s
it? That’s all there is to it?”.</p>
<h2 id="authentication">Authentication</h2>
<p>In previous articles, we connected to the X server without any
authentication.</p>
<p>Let’s be a bit more refined: we now also support the X authentication
protocol.</p>
<p>That’s because when running under Wayland with XWayland in some
desktop environments like Gnome, we have to use authentication.</p>
<p>This requires our application to read a 16 bytes long token that’s
present in a file in the user’s home directory, and include it in the
handshake we send to the X server.</p>
<p>This mechanism is called <code>MIT-MAGIC-COOKIE-1</code>.</p>
<p>The catch is that this file contains multiple tokens for various
authentication mechanisms, and network hosts. Remember, X11 is designed
to work over the network. However we only care here about the entry for
localhost.</p>
<p>So we need to parse a little bit. It’s basically what
<code>libXau</code> does. From its docs:</p>
<pre><code>The .Xauthority file is a binary file consisting of a sequence of entries
in the following format:
    2 bytes     Family value (second byte is as in protocol HOST)
    2 bytes     address length (always MSB first)
    A bytes     host address (as in protocol HOST)
    2 bytes     display "number" length (always MSB first)
    S bytes     display "number" string
    2 bytes     name length (always MSB first)
    N bytes     authorization name string
    2 bytes     data length (always MSB first)
    D bytes     authorization data string</code></pre>
<p>First let’s define some types and constants:</p>
<pre><code>AUTH_ENTRY_FAMILY_LOCAL: u16 : 1
AUTH_ENTRY_MAGIC_COOKIE: string : "MIT-MAGIC-COOKIE-1"

AuthToken :: [16]u8

AuthEntry :: struct {
    family:    u16,
    auth_name: []u8,
    auth_data: []u8,
}</code></pre>
<p>We only define fields we are interested in.</p>
<p>Let’s now parse each entry accordingly:</p>
<pre><code>read_x11_auth_entry :: proc(buffer: ^bytes.Buffer) -&gt; (AuthEntry, bool) {
    entry := AuthEntry{}

    {
        n_read, err := bytes.buffer_read(buffer, mem.ptr_to_bytes(&amp;entry.family))
        if err == .EOF {return {}, false}

        assert(err == .None)
        assert(n_read == size_of(entry.family))
    }

    address_len: u16 = 0
    {
        n_read, err := bytes.buffer_read(buffer, mem.ptr_to_bytes(&amp;address_len))
        assert(err == .None)

        address_len = bits.byte_swap(address_len)
        assert(n_read == size_of(address_len))
    }

    address := make([]u8, address_len)
    {
        n_read, err := bytes.buffer_read(buffer, address)
        assert(err == .None)
        assert(n_read == cast(int)address_len)
    }

    display_number_len: u16 = 0
    {
        n_read, err := bytes.buffer_read(buffer, mem.ptr_to_bytes(&amp;display_number_len))
        assert(err == .None)

        display_number_len = bits.byte_swap(display_number_len)
        assert(n_read == size_of(display_number_len))
    }

    display_number := make([]u8, display_number_len)
    {
        n_read, err := bytes.buffer_read(buffer, display_number)
        assert(err == .None)
        assert(n_read == cast(int)display_number_len)
    }

    auth_name_len: u16 = 0
    {
        n_read, err := bytes.buffer_read(buffer, mem.ptr_to_bytes(&amp;auth_name_len))
        assert(err == .None)

        auth_name_len = bits.byte_swap(auth_name_len)
        assert(n_read == size_of(auth_name_len))
    }

    entry.auth_name = make([]u8, auth_name_len)
    {
        n_read, err := bytes.buffer_read(buffer, entry.auth_name)
        assert(err == .None)
        assert(n_read == cast(int)auth_name_len)
    }

    auth_data_len: u16 = 0
    {
        n_read, err := bytes.buffer_read(buffer, mem.ptr_to_bytes(&amp;auth_data_len))
        assert(err == .None)

        auth_data_len = bits.byte_swap(auth_data_len)
        assert(n_read == size_of(auth_data_len))
    }

    entry.auth_data = make([]u8, auth_data_len)
    {
        n_read, err := bytes.buffer_read(buffer, entry.auth_data)
        assert(err == .None)
        assert(n_read == cast(int)auth_data_len)
    }

    return entry, true
}</code></pre>
<p>Now we can sift through the different entries in the file to find the
one we are after:</p>
<pre><code>load_x11_auth_token :: proc(allocator := context.allocator) -&gt; (token: AuthToken, ok: bool) {
    context.allocator = allocator
    defer free_all(allocator)

    filename_env := os.get_env("XAUTHORITY")

    filename :=
        len(filename_env) != 0 \
        ? filename_env \
        : filepath.join([]string{os.get_env("HOME"), ".Xauthority"})

    data := os.read_entire_file_from_filename(filename) or_return

    buffer := bytes.Buffer{}
    bytes.buffer_init(&amp;buffer, data[:])


    for {
        auth_entry := read_x11_auth_entry(&amp;buffer) or_break

        if auth_entry.family == AUTH_ENTRY_FAMILY_LOCAL &amp;&amp;
           slice.equal(auth_entry.auth_name, transmute([]u8)AUTH_ENTRY_MAGIC_COOKIE) &amp;&amp;
           len(auth_entry.auth_data) == size_of(AuthToken) {

            mem.copy_non_overlapping(
                raw_data(&amp;token),
                raw_data(auth_entry.auth_data),
                size_of(AuthToken),
            )
            return token, true
        }
    }

    // Did not find a fitting token.
    return {}, false
}</code></pre>
<p>Odin has a nice shorthand to return early on errors:
<code>or_return</code>, which is the equivalent of <code>?</code> in
Rust or <code>try</code> in Zig. Same thing with
<code>or_break</code>.</p>
<p>And we use it in this manner in <code>main</code>:</p>
<pre><code>main :: proc() {
    auth_token, _ := load_x11_auth_token(context.temp_allocator)
}</code></pre>
<p>If we did not find a fitting token, no matter, we will simply carry
on with an empty one.</p>
<p>One interesting thing: in Odin, similarly to Zig, allocators are
passed to functions wishing to allocate memory. Contrary to Zig though,
Odin has a mechanism to make that less tedious (and more implicit as a
result) by essentially passing the allocator as the last function
argument which is optional.</p>
<p>Odin is nice enough to also provide us two allocators that we can use
right away: A general purpose allocator, and a temporary allocator that
uses an arena.</p>
<p>Since authentication entries can be large, we have to allocate - the
stack is only so big. It would be unfortunate to stack overflow because
a hostname is a tiny bit too long in this file.</p>
<p>However, we do not want to retain the parsed entries from the file in
memory after finding the 16 bytes token, so we
<code>defer free_all(allocator)</code>. This is much better than going
through each entry and freeing individually each field. We simply free
the whole arena in one swoop (but the backing memory remains around to
be reused later).</p>
<p>Furthermore, using this arena places an upper bound (a few MiBs) on
the allocations we can do. So if one entry in the file is huge, or
malformed, we verifyingly cannot allocate many GiBs of memory. This is
good news, because otherwise, the OS will start swapping like crazy and
start killing random programs. In my experience it usually kills the
window/desktop manager which kills all open windows. Very efficient from
the OS perspective, and awful from the user perspective. So it’s always
good to place an upper bound on all resources including heap memory
usage of your program.</p>
<p>All in all I find Odin’s approach very elegant. I usually want the
ability to use a different allocator in a given function, but also if I
don’t care, it will do the right thing and use the standard
allocator.</p>
<h2 id="opening-a-window">Opening a window</h2>
<p>This part is almost exactly the same as the first linked article so
I’ll speed run this.</p>
<p>First we open a UNIX domain socket:</p>
<pre><code>connect_x11_socket :: proc() -&gt; os.Socket {
    SockaddrUn :: struct #packed {
        sa_family: os.ADDRESS_FAMILY,
        sa_data:   [108]u8,
    }

    socket, err := os.socket(os.AF_UNIX, os.SOCK_STREAM, 0)
    assert(err == os.ERROR_NONE)

    possible_socket_paths := [2]string{"/tmp/.X11-unix/X0", "/tmp/.X11-unix/X1"}
    for &amp;socket_path in possible_socket_paths {
        addr := SockaddrUn {
            sa_family = cast(u16)os.AF_UNIX,
        }
        mem.copy_non_overlapping(&amp;addr.sa_data, raw_data(socket_path), len(socket_path))

        err = os.connect(socket, cast(^os.SOCKADDR)&amp;addr, size_of(addr))
        if (err == os.ERROR_NONE) {return socket}
    }

    os.exit(1)
}</code></pre>
<p>We try a few possible paths for the socket, that can vary a bit from
distribution to distribution.</p>
<p>We now can send the handshake, and receive general information from
the server. Let’s define some structs for that per the X11 protocol:</p>
<pre><code>Screen :: struct #packed {
    id:             u32,
    colormap:       u32,
    white:          u32,
    black:          u32,
    input_mask:     u32,
    width:          u16,
    height:         u16,
    width_mm:       u16,
    height_mm:      u16,
    maps_min:       u16,
    maps_max:       u16,
    root_visual_id: u32,
    backing_store:  u8,
    save_unders:    u8,
    root_depth:     u8,
    depths_count:   u8,
}

ConnectionInformation :: struct {
    root_screen:      Screen,
    resource_id_base: u32,
    resource_id_mask: u32,
}</code></pre>
<p>The structs are <code>#packed</code> to match the network protocol
format, otherwise the compiler may insert padding between fields.</p>
<p>One thing to know about X11: Everything we send has to be padded to a
multiple of 4 bytes. We define a helper to do that by using the formula
<code>((i32)x + 3) &amp; -4</code> along with a unit test for good
measure:</p>
<pre><code>round_up_4 :: #force_inline proc(x: u32) -&gt; u32 {
    mask: i32 = -4
    return transmute(u32)((transmute(i32)x + 3) &amp; mask)
}

@(test)
test_round_up_4 :: proc(_: ^testing.T) {
    assert(round_up_4(0) == 0)
    assert(round_up_4(1) == 4)
    assert(round_up_4(2) == 4)
    assert(round_up_4(3) == 4)
    assert(round_up_4(4) == 4)
    assert(round_up_4(5) == 8)
    assert(round_up_4(6) == 8)
    assert(round_up_4(7) == 8)
    assert(round_up_4(8) == 8)
}</code></pre>
<p>We can now send the handshake with the authentication token inside.
We leverage the <code>writev</code> system call to send multiple
separate buffers of different lengths in one call.</p>
<p>We skip over most of the information the server sends us, since we
only are after a few fields:</p>
<pre><code>x11_handshake :: proc(socket: os.Socket, auth_token: ^AuthToken) -&gt; ConnectionInformation {
    Request :: struct #packed {
        endianness:             u8,
        pad1:                   u8,
        major_version:          u16,
        minor_version:          u16,
        authorization_len:      u16,
        authorization_data_len: u16,
        pad2:                   u16,
    }

    request := Request {
        endianness             = 'l',
        major_version          = 11,
        authorization_len      = len(AUTH_ENTRY_MAGIC_COOKIE),
        authorization_data_len = size_of(AuthToken),
    }


    {
        padding := [2]u8{0, 0}
        n_sent, err := linux.writev(
            cast(linux.Fd)socket,
            []linux.IO_Vec {
                {base = &amp;request, len = size_of(Request)},
                {base = raw_data(AUTH_ENTRY_MAGIC_COOKIE), len = len(AUTH_ENTRY_MAGIC_COOKIE)},
                {base = raw_data(padding[:]), len = len(padding)},
                {base = raw_data(auth_token[:]), len = len(auth_token)},
            },
        )
        assert(err == .NONE)
        assert(
            n_sent ==
            size_of(Request) + len(AUTH_ENTRY_MAGIC_COOKIE) + len(padding) + len(auth_token),
        )
    }

    StaticResponse :: struct #packed {
        success:       u8,
        pad1:          u8,
        major_version: u16,
        minor_version: u16,
        length:        u16,
    }

    static_response := StaticResponse{}
    {
        n_recv, err := os.recv(socket, mem.ptr_to_bytes(&amp;static_response), 0)
        assert(err == os.ERROR_NONE)
        assert(n_recv == size_of(StaticResponse))
        assert(static_response.success == 1)
    }


    recv_buf: [1 &lt;&lt; 15]u8 = {}
    {
        assert(len(recv_buf) &gt;= cast(u32)static_response.length * 4)

        n_recv, err := os.recv(socket, recv_buf[:], 0)
        assert(err == os.ERROR_NONE)
        assert(n_recv == cast(u32)static_response.length * 4)
    }


    DynamicResponse :: struct #packed {
        release_number:              u32,
        resource_id_base:            u32,
        resource_id_mask:            u32,
        motion_buffer_size:          u32,
        vendor_length:               u16,
        maximum_request_length:      u16,
        screens_in_root_count:       u8,
        formats_count:               u8,
        image_byte_order:            u8,
        bitmap_format_bit_order:     u8,
        bitmap_format_scanline_unit: u8,
        bitmap_format_scanline_pad:  u8,
        min_keycode:                 u8,
        max_keycode:                 u8,
        pad2:                        u32,
    }

    read_buffer := bytes.Buffer{}
    bytes.buffer_init(&amp;read_buffer, recv_buf[:])

    dynamic_response := DynamicResponse{}
    {
        n_read, err := bytes.buffer_read(&amp;read_buffer, mem.ptr_to_bytes(&amp;dynamic_response))
        assert(err == .None)
        assert(n_read == size_of(DynamicResponse))
    }


    // Skip over the vendor information.
    bytes.buffer_next(&amp;read_buffer, cast(int)round_up_4(cast(u32)dynamic_response.vendor_length))
    // Skip over the format information (each 8 bytes long).
    bytes.buffer_next(&amp;read_buffer, 8 * cast(int)dynamic_response.formats_count)

    screen := Screen{}
    {
        n_read, err := bytes.buffer_read(&amp;read_buffer, mem.ptr_to_bytes(&amp;screen))
        assert(err == .None)
        assert(n_read == size_of(screen))
    }

    return(
        ConnectionInformation {
            resource_id_base = dynamic_response.resource_id_base,
            resource_id_mask = dynamic_response.resource_id_mask,
            root_screen = screen,
        } \
    )
}</code></pre>
<p>Our <code>main</code> now becomes:</p>
<pre><code>main :: proc() {
    auth_token, _ := load_x11_auth_token(context.temp_allocator)
    socket := connect_x11_socket()
    connection_information := x11_handshake(socket, &amp;auth_token)
}</code></pre>
<p>The next step is to create a graphical context. When creating a new
entity, we generate an id for it, and send that in the create request.
Afterwards, we can refer to the entity by this id:</p>
<pre><code>next_x11_id :: proc(current_id: u32, info: ConnectionInformation) -&gt; u32 {
    return 1 + ((info.resource_id_mask &amp; (current_id)) | info.resource_id_base)
}</code></pre>
<p>Time to create a graphical context:</p>
<pre><code>x11_create_graphical_context :: proc(socket: os.Socket, gc_id: u32, root_id: u32) {
    opcode: u8 : 55
    FLAG_GC_BG: u32 : 8
    BITMASK: u32 : FLAG_GC_BG
    VALUE1: u32 : 0x00_00_ff_00

    Request :: struct #packed {
        opcode:   u8,
        pad1:     u8,
        length:   u16,
        id:       u32,
        drawable: u32,
        bitmask:  u32,
        value1:   u32,
    }
    request := Request {
        opcode   = opcode,
        length   = 5,
        id       = gc_id,
        drawable = root_id,
        bitmask  = BITMASK,
        value1   = VALUE1,
    }

    {
        n_sent, err := os.send(socket, mem.ptr_to_bytes(&amp;request), 0)
        assert(err == os.ERROR_NONE)
        assert(n_sent == size_of(Request))
    }
}</code></pre>
<p>Finally we create a window. We subscribe to a few events as well:</p>
<ul>
<li><code>Exposure</code>: when our window becomes visible</li>
<li><code>KEY_PRESS</code>: when a keyboard key is pressed</li>
<li><code>KEY_RELEASE</code>: when a keyboard key is released</li>
<li><code>BUTTON_PRESS</code>: when a mouse button is pressed</li>
<li><code>BUTTON_RELEASE</code>: when a mouse button is released</li>
</ul>
<p>We also pick an arbitrary background color, yellow. It does not
matter because we will always cover every part of the window with our
assets.</p>
<pre><code>x11_create_window :: proc(
    socket: os.Socket,
    window_id: u32,
    parent_id: u32,
    x: u16,
    y: u16,
    width: u16,
    height: u16,
    root_visual_id: u32,
) {
    FLAG_WIN_BG_PIXEL: u32 : 2
    FLAG_WIN_EVENT: u32 : 0x800
    FLAG_COUNT: u16 : 2
    EVENT_FLAG_EXPOSURE: u32 = 0x80_00
    EVENT_FLAG_KEY_PRESS: u32 = 0x1
    EVENT_FLAG_KEY_RELEASE: u32 = 0x2
    EVENT_FLAG_BUTTON_PRESS: u32 = 0x4
    EVENT_FLAG_BUTTON_RELEASE: u32 = 0x8
    flags: u32 : FLAG_WIN_BG_PIXEL | FLAG_WIN_EVENT
    depth: u8 : 24
    border_width: u16 : 0
    CLASS_INPUT_OUTPUT: u16 : 1
    opcode: u8 : 1
    BACKGROUND_PIXEL_COLOR: u32 : 0x00_ff_ff_00

    Request :: struct #packed {
        opcode:         u8,
        depth:          u8,
        request_length: u16,
        window_id:      u32,
        parent_id:      u32,
        x:              u16,
        y:              u16,
        width:          u16,
        height:         u16,
        border_width:   u16,
        class:          u16,
        root_visual_id: u32,
        bitmask:        u32,
        value1:         u32,
        value2:         u32,
    }
    request := Request {
        opcode         = opcode,
        depth          = depth,
        request_length = 8 + FLAG_COUNT,
        window_id      = window_id,
        parent_id      = parent_id,
        x              = x,
        y              = y,
        width          = width,
        height         = height,
        border_width   = border_width,
        class          = CLASS_INPUT_OUTPUT,
        root_visual_id = root_visual_id,
        bitmask        = flags,
        value1         = BACKGROUND_PIXEL_COLOR,
        value2         = EVENT_FLAG_EXPOSURE | EVENT_FLAG_BUTTON_RELEASE | EVENT_FLAG_BUTTON_PRESS | EVENT_FLAG_KEY_PRESS | EVENT_FLAG_KEY_RELEASE,
    }

    {
        n_sent, err := os.send(socket, mem.ptr_to_bytes(&amp;request), 0)
        assert(err == os.ERROR_NONE)
        assert(n_sent == size_of(Request))
    }
}
</code></pre>
<p>We decide that our game will have 16 rows and 16 columns, and each
asset is 16x16 pixels.</p>
<p><code>main</code> is now:</p>
<pre><code>ENTITIES_ROW_COUNT :: 16
ENTITIES_COLUMN_COUNT :: 16
ENTITIES_WIDTH :: 16
ENTITIES_HEIGHT :: 16

main :: proc() {
    auth_token, _ := load_x11_auth_token(context.temp_allocator)
    socket := connect_x11_socket()
    connection_information := x11_handshake(socket, &amp;auth_token)

    gc_id := next_x11_id(0, connection_information)
    x11_create_graphical_context(socket, gc_id, connection_information.root_screen.id)

    window_id := next_x11_id(gc_id, connection_information)
    x11_create_window(
        socket,
        window_id,
        connection_information.root_screen.id,
        200,
        200,
        ENTITIES_COLUMN_COUNT * ENTITIES_WIDTH,
        ENTITIES_ROW_COUNT * ENTITIES_HEIGHT,
        connection_information.root_screen.root_visual_id,
    )
}</code></pre>
<p>Note that the window dimensions are a hint, they might now be
respected, for example in a tiling window manager. We do not handle this
case here since the assets are fixed size.</p>
<p>If you have followed along, you will now see… nothing. That’s because
we need to tell X11 to show our window with the <code>map_window</code>
call:</p>
<pre><code>x11_map_window :: proc(socket: os.Socket, window_id: u32) {
    opcode: u8 : 8

    Request :: struct #packed {
        opcode:         u8,
        pad1:           u8,
        request_length: u16,
        window_id:      u32,
    }
    request := Request {
        opcode         = opcode,
        request_length = 2,
        window_id      = window_id,
    }
    {
        n_sent, err := os.send(socket, mem.ptr_to_bytes(&amp;request), 0)
        assert(err == os.ERROR_NONE)
        assert(n_sent == size_of(Request))
    }

}</code></pre>
<p>We now see:</p>
<figure>
<img src="https://gaultier.github.io/blog/game-x11-empty-background.png" alt="Empty yellow window">

</figure>
<p>Time to start programming the game itself!</p>
<h2 id="loading-assets">Loading assets</h2>
<p>What’s a game without nice looking pictures <del>stolen from
somewhere on the internet</del> ?</p>
<p>Here is our sprite, the one image containing all our assets:</p>
<figure>
<img src="https://gaultier.github.io/blog/game-x11-sprite.png" alt="Our sprite">

</figure>
<p>Odin has a nice feature to embed the image file in our executable
which makes redistribution a breeze and startup a bit faster, so we’ll
do that:</p>
<pre><code>    png_data := #load("sprite.png")
    sprite, err := png.load_from_bytes(png_data, {})
    assert(err == nil)</code></pre>
<p>Now here is the catch: The X11 image format is different from the one
in the sprite so we have to swap the bytes around:</p>
<pre><code>    sprite_data := make([]u8, sprite.height * sprite.width * 4)

    // Convert the image format from the sprite (RGB) into the X11 image format (BGRX).
    for i := 0; i &lt; sprite.height * sprite.width - 3; i += 1 {
        sprite_data[i * 4 + 0] = sprite.pixels.buf[i * 3 + 2] // R -&gt; B
        sprite_data[i * 4 + 1] = sprite.pixels.buf[i * 3 + 1] // G -&gt; G
        sprite_data[i * 4 + 2] = sprite.pixels.buf[i * 3 + 0] // B -&gt; R
        sprite_data[i * 4 + 3] = 0 // pad
    }</code></pre>
<p>The <code>A</code> component is actually unused since we do not have
transparency.</p>
<p>Now that our image is in (client) memory, how to make it available to
the server? Which, again, in the X11 model, might be running on a
totally different machine across the world!</p>
<p>X11 has 3 useful calls for images: <code>CreatePixmap</code> and
<code>PutImage</code>. A <code>Pixmap</code> is an off-screen image
buffer. <code>PutImage</code> uploads image data either to a pixmap or
to the window directly (a ‘drawable’ in X11 parlance).
<code>CopyArea</code> copies one rectangle in one drawable to another
drawable.</p>
<p>In my humble opinion, these are complete misnomers.
<code>CreatePixmap</code> should have been called
<code>CreateOffscreenImageBuffer</code> and <code>PutImage</code> should
have been <code>UploadImageData</code>. <code>CopyArea</code>: you’re
fine buddy, carry on.</p>
<p>We cannot simply use <code>PutImage</code> here since that would show
the whole sprite on the screen (there are no fields to specify that only
part of the image should be displayed). We could show only parts of it,
with separate <code>PutImage</code> calls for each entity, but that
would mean uploading the image data to the server each time.</p>
<p>What we want is to upload the image data once, off-screen, with one
<code>PutImage</code> call, and then copy parts of it onto the window.
Here is the dance we need to do:</p>
<ul>
<li><code>CreatePixmap</code></li>
<li><code>PutImage</code> to upload the image data to the pixmap - at
that point nothing is shown on the window, everything is still
off-screen</li>
<li>For each entity in our game, issue a cheap <code>CopyArea</code>
call which copies parts of the pixmap onto the window - now it’s
visible!</li>
</ul>
<p>The X server can actually upload the image data to the GPU on a
<code>PutImage</code> call (this is implementation dependent). After
that, <code>CopyArea</code> calls can be translated by the X server to
GPU commands to copy the image data from one GPU buffer to another:
that’s really performant! The image data is only uploaded once to the
GPU and then resides there for the remainder of the program.</p>
<p>Unfortunately, the X standard does not enforce that (it says: “may or
may not […]”), but that’s a useful model to have in mind.</p>
<p>Another useful model is to think of what happens when the X server is
running across the network: We only want to send the image data once
because that’s time-consuming, and afterwards issue cheap
<code>CopyArea</code> commands that are only a few bytes each.</p>
<p>Ok, let’s implement that then:</p>
<pre><code>x11_create_pixmap :: proc(
    socket: os.Socket,
    window_id: u32,
    pixmap_id: u32,
    width: u16,
    height: u16,
    depth: u8,
) {
    opcode: u8 : 53

    Request :: struct #packed {
        opcode:         u8,
        depth:          u8,
        request_length: u16,
        pixmap_id:      u32,
        drawable_id:    u32,
        width:          u16,
        height:         u16,
    }

    request := Request {
        opcode         = opcode,
        depth          = depth,
        request_length = 4,
        pixmap_id      = pixmap_id,
        drawable_id    = window_id,
        width          = width,
        height         = height,
    }

    {
        n_sent, err := os.send(socket, mem.ptr_to_bytes(&amp;request), 0)
        assert(err == os.ERROR_NONE)
        assert(n_sent == size_of(Request))
    }
}

x11_put_image :: proc(
    socket: os.Socket,
    drawable_id: u32,
    gc_id: u32,
    width: u16,
    height: u16,
    dst_x: u16,
    dst_y: u16,
    depth: u8,
    data: []u8,
) {
    opcode: u8 : 72

    Request :: struct #packed {
        opcode:         u8,
        format:         u8,
        request_length: u16,
        drawable_id:    u32,
        gc_id:          u32,
        width:          u16,
        height:         u16,
        dst_x:          u16,
        dst_y:          u16,
        left_pad:       u8,
        depth:          u8,
        pad1:           u16,
    }

    data_length_padded := round_up_4(cast(u32)len(data))

    request := Request {
        opcode         = opcode,
        format         = 2, // ZPixmap
        request_length = cast(u16)(6 + data_length_padded / 4),
        drawable_id    = drawable_id,
        gc_id          = gc_id,
        width          = width,
        height         = height,
        dst_x          = dst_x,
        dst_y          = dst_y,
        depth          = depth,
    }
    {
        padding_len := data_length_padded - cast(u32)len(data)

        n_sent, err := linux.writev(
            cast(linux.Fd)socket,
            []linux.IO_Vec {
                {base = &amp;request, len = size_of(Request)},
                {base = raw_data(data), len = len(data)},
                {base = raw_data(data), len = cast(uint)padding_len},
            },
        )
        assert(err == .NONE)
        assert(n_sent == size_of(Request) + len(data) + cast(int)padding_len)
    }
}

x11_copy_area :: proc(
    socket: os.Socket,
    src_id: u32,
    dst_id: u32,
    gc_id: u32,
    src_x: u16,
    src_y: u16,
    dst_x: u16,
    dst_y: u16,
    width: u16,
    height: u16,
) {
    opcode: u8 : 62
    Request :: struct #packed {
        opcode:         u8,
        pad1:           u8,
        request_length: u16,
        src_id:         u32,
        dst_id:         u32,
        gc_id:          u32,
        src_x:          u16,
        src_y:          u16,
        dst_x:          u16,
        dst_y:          u16,
        width:          u16,
        height:         u16,
    }

    request := Request {
        opcode         = opcode,
        request_length = 7,
        src_id         = src_id,
        dst_id         = dst_id,
        gc_id          = gc_id,
        src_x          = src_x,
        src_y          = src_y,
        dst_x          = dst_x,
        dst_y          = dst_y,
        width          = width,
        height         = height,
    }
    {
        n_sent, err := os.send(socket, mem.ptr_to_bytes(&amp;request), 0)
        assert(err == os.ERROR_NONE)
        assert(n_sent == size_of(Request))
    }
}</code></pre>
<p>Let’s try in <code>main</code>:</p>
<pre><code>    img_depth: u8 = 24
    pixmap_id := next_x11_id(window_id, connection_information)
    x11_create_pixmap(
        socket,
        window_id,
        pixmap_id,
        cast(u16)sprite.width,
        cast(u16)sprite.height,
        img_depth,
    )

    x11_put_image(
        socket,
        pixmap_id,
        gc_id,
        sprite_width,
        sprite_height,
        0,
        0,
        img_depth,
        sprite_data,
    )

    // Let's render two different assets: an exploded mine and an idle mine.
    x11_copy_area(
        socket,
        pixmap_id,
        window_id,
        gc_id,
        32, // X coordinate on the sprite sheet.
        40, // Y coordinate on the sprite sheet.
        0, // X coordinate on the window.
        0, // Y coordinate on the window.
        16, // Width.
        16, // Height.
    )
    x11_copy_area(
        socket,
        pixmap_id,
        window_id,
        gc_id,
        64,
        40,
        16,
        0,
        16,
        16,
    )</code></pre>
<p>Result:</p>
<figure>
<img src="https://gaultier.github.io/blog/game-x11-first-image.png" alt="First images on the screen">

</figure>
<p>We are now ready to focus on the game entities.</p>
<h2 id="the-game-entities">The game entities</h2>
<p>We have a few different entities we want to show, each is a 16x16
section of the sprite sheet. Let’s define their coordinates to be
readable:</p>
<pre><code>Position :: struct {
    x: u16,
    y: u16,
}

Entity_kind :: enum {
    Covered,
    Uncovered_0,
    Uncovered_1,
    Uncovered_2,
    Uncovered_3,
    Uncovered_4,
    Uncovered_5,
    Uncovered_6,
    Uncovered_7,
    Uncovered_8,
    Mine_exploded,
    Mine_idle,
}

ASSET_COORDINATES: [Entity_kind]Position = {
    .Uncovered_0 = {x = 0 * 16, y = 22},
    .Uncovered_1 = {x = 1 * 16, y = 22},
    .Uncovered_2 = {x = 2 * 16, y = 22},
    .Uncovered_3 = {x = 3 * 16, y = 22},
    .Uncovered_4 = {x = 4 * 16, y = 22},
    .Uncovered_5 = {x = 5 * 16, y = 22},
    .Uncovered_6 = {x = 6 * 16, y = 22},
    .Uncovered_7 = {x = 7 * 16, y = 22},
    .Uncovered_8 = {x = 8 * 16, y = 22},
    .Covered = {x = 0, y = 38},
    .Mine_exploded = {x = 32, y = 40},
    .Mine_idle = {x = 64, y = 40},
}</code></pre>
<p>And we’ll group everything we need in one struct called
<code>Scene</code>:</p>
<pre><code>Scene :: struct {
    window_id:              u32,
    gc_id:                  u32,
    sprite_pixmap_id:       u32,
    displayed_entities:     [ENTITIES_ROW_COUNT * ENTITIES_COLUMN_COUNT]Entity_kind,
    mines:                  [ENTITIES_ROW_COUNT * ENTITIES_COLUMN_COUNT]bool,
}</code></pre>
<p>The first interesting field is <code>displayed_entities</code> which
keeps track of which assets are shown. For example, a mine is either
covered, uncovered and exploded if the player clicked on it, or
uncovered and idle if the player won).</p>
<p>The second one is <code>mines</code> which simply keeps track of
where mines are. It could be a bitfield to optimize space but I did not
bother.</p>
<p>In <code>main</code> we create a new scene and plant mines
randomly.</p>
<pre><code>    scene := Scene {
        window_id              = window_id,
        gc_id                  = gc_id,
        sprite_pixmap_id       = pixmap_id,
    }
    reset(&amp;scene)</code></pre>
<p>We put this logic in the <code>reset</code> helper so that the player
can easily restart the game with one keystroke:</p>
<pre><code>reset :: proc(scene: ^Scene) {
    for &amp;entity in scene.displayed_entities {
        entity = .Covered
    }

    for &amp;mine in scene.mines {
        mine = rand.choice([]bool{true, false, false, false})
    }
}</code></pre>
<p>Here I used a 1/4 chance that a cell has a mine.</p>
<p>We are now ready to render our (static for now) scene:</p>
<pre><code>render :: proc(socket: os.Socket, scene: ^Scene) {
    for entity, i in scene.displayed_entities {
        rect := ASSET_COORDINATES[entity]
        row, column := idx_to_row_column(i)

        x11_copy_area(
            socket,
            scene.sprite_pixmap_id,
            scene.window_id,
            scene.gc_id,
            rect.x,
            rect.y,
            cast(u16)column * ENTITIES_WIDTH,
            cast(u16)row * ENTITIES_HEIGHT,
            ENTITIES_WIDTH,
            ENTITIES_HEIGHT,
        )
    }
}</code></pre>
<p>And here is what we get:</p>
<figure>
<img src="https://gaultier.github.io/blog/game-x11-first-scene.png" alt="First scene">

</figure>
<p>The next step is to respond to events.</p>
<h2 id="reacting-to-keyboard-and-mouse-events">Reacting to keyboard and
mouse events</h2>
<p>This is very straightforward. Since the only messages we expect are
for keyboard and mouse events, with a fixed size of 32 bytes, we simply
read 32 bytes exactly in a blocking fashion. The first byte indicates
which kind of event it is:</p>
<pre><code>wait_for_x11_events :: proc(socket: os.Socket, scene: ^Scene) {
    GenericEvent :: struct #packed {
        code: u8,
        pad:  [31]u8,
    }
    assert(size_of(GenericEvent) == 32)

    KeyReleaseEvent :: struct #packed {
        code:            u8,
        detail:          u8,
        sequence_number: u16,
        time:            u32,
        root_id:         u32,
        event:           u32,
        child_id:        u32,
        root_x:          u16,
        root_y:          u16,
        event_x:         u16,
        event_y:         u16,
        state:           u16,
        same_screen:     bool,
        pad1:            u8,
    }
    assert(size_of(KeyReleaseEvent) == 32)

    ButtonReleaseEvent :: struct #packed {
        code:        u8,
        detail:      u8,
        seq_number:  u16,
        timestamp:   u32,
        root:        u32,
        event:       u32,
        child:       u32,
        root_x:      u16,
        root_y:      u16,
        event_x:     u16,
        event_y:     u16,
        state:       u16,
        same_screen: bool,
        pad1:        u8,
    }
    assert(size_of(ButtonReleaseEvent) == 32)

    EVENT_EXPOSURE: u8 : 0xc
    EVENT_KEY_RELEASE: u8 : 0x3
    EVENT_BUTTON_RELEASE: u8 : 0x5

    KEYCODE_ENTER: u8 : 36

    for {
        generic_event := GenericEvent{}
        n_recv, err := os.recv(socket, mem.ptr_to_bytes(&amp;generic_event), 0)
        if err == os.EPIPE || n_recv == 0 {
            os.exit(0) // The end.
        }

        assert(err == os.ERROR_NONE)
        assert(n_recv == size_of(GenericEvent))

        switch generic_event.code {
        case EVENT_EXPOSURE:
            render(socket, scene)

        case EVENT_KEY_RELEASE:
            event := transmute(KeyReleaseEvent)generic_event
            if event.detail == KEYCODE_ENTER {
                reset(scene)
                render(socket, scene)
            }

        case EVENT_BUTTON_RELEASE:
            event := transmute(ButtonReleaseEvent)generic_event
            on_cell_clicked(event.event_x, event.event_y, scene)
            render(socket, scene)
        }
    }
}</code></pre>
<p>If the event is <code>Exposed</code>, we simply render (that’s our
first render when the window becomes visible - or if the window was
minimized and then made visible again).</p>
<p>If the event is the <code>Enter</code> key, we reset the state of the
game and render. X11 differentiates between physical and logical keys on
the keyboard but that does not matter here (or I would argue in most
games: we are interested in the physical location of the key, not what
the user mapped it to).</p>
<p>If the event is (pressing and) releasing a mouse button, we run the
game logic to uncover a cell and render.</p>
<p>That’s it!</p>
<h2 id="game-logic-uncover-a-cell">Game logic: uncover a cell</h2>
<p>The last thing to do is implementing the game rules.</p>
<p>From my faint memory, when uncovering a cell, we have two cases:</p>
<ul>
<li>If it’s a mine, we lost</li>
<li>If it’s not a mine, we uncover this cell and neighboring cells, in a
flood fill fashion. We only uncover non-mines of course. An uncovered
cell shows how many neighboring mines are around with a number (0 is
simply empty, no number is shown).</li>
</ul>
<p>The one thing that tripped me is that we inspect all 8 neighboring
cells to count mines, but when doing the flood fill, we only visit the 4
neighboring cells: up, right, down, left - not the diagonal neighbors.
Otherwise the flood fill ends up uncovering all cells in the game at
once.</p>
<p>First, we need to translate the mouse position in the window to a
cell index/row/column in our grid:</p>
<pre><code>row_column_to_idx :: #force_inline proc(row: int, column: int) -&gt; int {
    return cast(int)row * ENTITIES_COLUMN_COUNT + cast(int)column
}

locate_entity_by_coordinate :: proc(win_x: u16, win_y: u16) -&gt; (idx: int, row: int, column: int) {
    column = cast(int)win_x / ENTITIES_WIDTH
    row = cast(int)win_y / ENTITIES_HEIGHT

    idx = row_column_to_idx(row, column)

    return idx, row, column
}</code></pre>
<p>Then the game logic:</p>
<pre><code>on_cell_clicked :: proc(x: u16, y: u16, scene: ^Scene) {
    idx, row, column := locate_entity_by_coordinate(x, y)

    mined := scene.mines[idx]

    if mined {
        scene.displayed_entities[idx] = .Mine_exploded
        // Lose.
        uncover_all_cells(&amp;scene.displayed_entities, &amp;scene.mines, .Mine_exploded)
    } else {
        visited := [ENTITIES_COLUMN_COUNT * ENTITIES_ROW_COUNT]bool{}
        uncover_cells_flood_fill(row, column, &amp;scene.displayed_entities, &amp;scene.mines, &amp;visited)

        // Win.
        if count_remaining_goals(scene.displayed_entities, scene.mines) == 0 {
            uncover_all_cells(&amp;scene.displayed_entities, &amp;scene.mines, .Mine_idle)
        }
    }
}</code></pre>
<p>The objective is to uncover all cells without mines. We could keep a
counter around and decrement it each time, but I wanted to make it
idiot-proof, so I simply scan the grid to count how many uncovered cells
without a mine underneath remain (in
<code>count_remaining_goals</code>). No risk that way to have a desync
between the game state and what is shown on the screen, because we did
not decrement the counter in one edge case.</p>
<p><code>uncover_all_cells</code> unconditionally reveals the whole grid
when the player won or lost. We just need to show the mines exploded
when they lost, and idle when they won.</p>
<p><code>uncover_cells_flood_fill</code> is the interesting one. We use
recursion, and to avoid visiting the same cells multiple times and
potentially getting into infinite recursion, we track which cells were
visited:</p>
<pre><code>uncover_cells_flood_fill :: proc(
    row: int,
    column: int,
    displayed_entities: ^[ENTITIES_COLUMN_COUNT * ENTITIES_ROW_COUNT]Entity_kind,
    mines: ^[ENTITIES_ROW_COUNT * ENTITIES_COLUMN_COUNT]bool,
    visited: ^[ENTITIES_COLUMN_COUNT * ENTITIES_ROW_COUNT]bool,
) {
    i := row_column_to_idx(row, column)
    if visited[i] {return}

    visited[i] = true

    // Do not uncover covered mines.
    if mines[i] {return}

    if displayed_entities[i] != .Covered {return}

    // Uncover cell.

    mines_around_count := count_mines_around_cell(row, column, mines[:])
    assert(mines_around_count &lt;= 8)

    displayed_entities[i] =
    cast(Entity_kind)(cast(int)Entity_kind.Uncovered_0 + mines_around_count)

    // Uncover neighbors.

    // Up.
    if !(row == 0) {
        uncover_cells_flood_fill(row - 1, column, displayed_entities, mines, visited)
    }

    // Right
    if !(column == (ENTITIES_COLUMN_COUNT - 1)) {
        uncover_cells_flood_fill(row, column + 1, displayed_entities, mines, visited)
    }

    // Bottom.
    if !(row == (ENTITIES_ROW_COUNT - 1)) {
        uncover_cells_flood_fill(row + 1, column, displayed_entities, mines, visited)
    }

    // Left.
    if !(column == 0) {
        uncover_cells_flood_fill(row, column - 1, displayed_entities, mines, visited)
    }
}</code></pre>
<p>There are a few helpers here and there that are simple, but
otherwise… that’s it, that’s the end. We’re done! All under 1000 lines
of code without any tricks or clever things.</p>
<figure>
<img src="https://github.com/gaultier/minesweeper-from-scratch/raw/master/screenshot.png" alt="Screenshot">

</figure>
<h2 id="conclusion">Conclusion</h2>
<p>X11 is old and crufty, but also gets out of the way. Once a few
utility functions to open the window, receive events, etc have been
implemented, it can be forgotten and we can focus all our attention on
the game. That’s very valuable. How many libraries, frameworks and
development environments can say the same?</p>
<p>I also enjoy that it works with any programming language, any tech
stack. Don’t need no bindings, no FFI, just send some bytes over the
socket. You can even do that in Bash (don’t tempt me!).</p>
<p>I did not implement a few accessory things from the original game,
like planting a flag on a cell you suspect has a mine. Feel free to do
this at home, it’s not much work.</p>
<p>Finally, give Odin a try, it’s great! It’s this weird mix of a sane C
with a Go-ish syntax and a good standard library.</p>
<p>I hope that you had as much fun as I did!</p>
<blockquote>
<p>If you liked this article and you want to support me, and can afford
it: <a href="https://paypal.me/philigaultier?country.x=DE&amp;locale.x=en_US">Donate</a></p>
</blockquote>
<h2 id="addendum-the-full-code">Addendum: the full code</h2>
<pre><code>package main

import "core:bytes"
import "core:image/png"
import "core:math/bits"
import "core:math/rand"
import "core:mem"
import "core:os"
import "core:path/filepath"
import "core:slice"
import "core:sys/linux"
import "core:testing"

TILE_WIDTH :: 16
TILE_HEIGHT :: 16

Position :: struct {
    x: u16,
    y: u16,
}

Entity_kind :: enum {
    Covered,
    Uncovered_0,
    Uncovered_1,
    Uncovered_2,
    Uncovered_3,
    Uncovered_4,
    Uncovered_5,
    Uncovered_6,
    Uncovered_7,
    Uncovered_8,
    Mine_exploded,
    Mine_idle,
}

ASSET_COORDINATES: [Entity_kind]Position = {
    .Uncovered_0 = {x = 0 * 16, y = 22},
    .Uncovered_1 = {x = 1 * 16, y = 22},
    .Uncovered_2 = {x = 2 * 16, y = 22},
    .Uncovered_3 = {x = 3 * 16, y = 22},
    .Uncovered_4 = {x = 4 * 16, y = 22},
    .Uncovered_5 = {x = 5 * 16, y = 22},
    .Uncovered_6 = {x = 6 * 16, y = 22},
    .Uncovered_7 = {x = 7 * 16, y = 22},
    .Uncovered_8 = {x = 8 * 16, y = 22},
    .Covered = {x = 0, y = 38},
    .Mine_exploded = {x = 32, y = 40},
    .Mine_idle = {x = 64, y = 40},
}

AuthToken :: [16]u8

AuthEntry :: struct {
    family:    u16,
    auth_name: []u8,
    auth_data: []u8,
}

Screen :: struct #packed {
    id:             u32,
    colormap:       u32,
    white:          u32,
    black:          u32,
    input_mask:     u32,
    width:          u16,
    height:         u16,
    width_mm:       u16,
    height_mm:      u16,
    maps_min:       u16,
    maps_max:       u16,
    root_visual_id: u32,
    backing_store:  u8,
    save_unders:    u8,
    root_depth:     u8,
    depths_count:   u8,
}

ConnectionInformation :: struct {
    root_screen:      Screen,
    resource_id_base: u32,
    resource_id_mask: u32,
}


AUTH_ENTRY_FAMILY_LOCAL: u16 : 1
AUTH_ENTRY_MAGIC_COOKIE: string : "MIT-MAGIC-COOKIE-1"

round_up_4 :: #force_inline proc(x: u32) -&gt; u32 {
    mask: i32 = -4
    return transmute(u32)((transmute(i32)x + 3) &amp; mask)
}

read_x11_auth_entry :: proc(buffer: ^bytes.Buffer) -&gt; (AuthEntry, bool) {
    entry := AuthEntry{}

    {
        n_read, err := bytes.buffer_read(buffer, mem.ptr_to_bytes(&amp;entry.family))
        if err == .EOF {return {}, false}

        assert(err == .None)
        assert(n_read == size_of(entry.family))
    }

    address_len: u16 = 0
    {
        n_read, err := bytes.buffer_read(buffer, mem.ptr_to_bytes(&amp;address_len))
        assert(err == .None)

        address_len = bits.byte_swap(address_len)
        assert(n_read == size_of(address_len))
    }

    address := make([]u8, address_len)
    {
        n_read, err := bytes.buffer_read(buffer, address)
        assert(err == .None)
        assert(n_read == cast(int)address_len)
    }

    display_number_len: u16 = 0
    {
        n_read, err := bytes.buffer_read(buffer, mem.ptr_to_bytes(&amp;display_number_len))
        assert(err == .None)

        display_number_len = bits.byte_swap(display_number_len)
        assert(n_read == size_of(display_number_len))
    }

    display_number := make([]u8, display_number_len)
    {
        n_read, err := bytes.buffer_read(buffer, display_number)
        assert(err == .None)
        assert(n_read == cast(int)display_number_len)
    }

    auth_name_len: u16 = 0
    {
        n_read, err := bytes.buffer_read(buffer, mem.ptr_to_bytes(&amp;auth_name_len))
        assert(err == .None)

        auth_name_len = bits.byte_swap(auth_name_len)
        assert(n_read == size_of(auth_name_len))
    }

    entry.auth_name = make([]u8, auth_name_len)
    {
        n_read, err := bytes.buffer_read(buffer, entry.auth_name)
        assert(err == .None)
        assert(n_read == cast(int)auth_name_len)
    }

    auth_data_len: u16 = 0
    {
        n_read, err := bytes.buffer_read(buffer, mem.ptr_to_bytes(&amp;auth_data_len))
        assert(err == .None)

        auth_data_len = bits.byte_swap(auth_data_len)
        assert(n_read == size_of(auth_data_len))
    }

    entry.auth_data = make([]u8, auth_data_len)
    {
        n_read, err := bytes.buffer_read(buffer, entry.auth_data)
        assert(err == .None)
        assert(n_read == cast(int)auth_data_len)
    }


    return entry, true
}

load_x11_auth_token :: proc(allocator := context.allocator) -&gt; (token: AuthToken, ok: bool) {
    context.allocator = allocator
    defer free_all(allocator)

    filename_env := os.get_env("XAUTHORITY")

    filename :=
        len(filename_env) != 0 \
        ? filename_env \
        : filepath.join([]string{os.get_env("HOME"), ".Xauthority"})

    data := os.read_entire_file_from_filename(filename) or_return

    buffer := bytes.Buffer{}
    bytes.buffer_init(&amp;buffer, data[:])


    for {
        auth_entry := read_x11_auth_entry(&amp;buffer) or_break

        if auth_entry.family == AUTH_ENTRY_FAMILY_LOCAL &amp;&amp;
           slice.equal(auth_entry.auth_name, transmute([]u8)AUTH_ENTRY_MAGIC_COOKIE) &amp;&amp;
           len(auth_entry.auth_data) == size_of(AuthToken) {

            mem.copy_non_overlapping(
                raw_data(&amp;token),
                raw_data(auth_entry.auth_data),
                size_of(AuthToken),
            )
            return token, true
        }
    }

    // Did not find a fitting token.
    return {}, false
}

connect_x11_socket :: proc() -&gt; os.Socket {
    SockaddrUn :: struct #packed {
        sa_family: os.ADDRESS_FAMILY,
        sa_data:   [108]u8,
    }

    socket, err := os.socket(os.AF_UNIX, os.SOCK_STREAM, 0)
    assert(err == os.ERROR_NONE)

    possible_socket_paths := [2]string{"/tmp/.X11-unix/X0", "/tmp/.X11-unix/X1"}
    for &amp;socket_path in possible_socket_paths {
        addr := SockaddrUn {
            sa_family = cast(u16)os.AF_UNIX,
        }
        mem.copy_non_overlapping(&amp;addr.sa_data, raw_data(socket_path), len(socket_path))

        err = os.connect(socket, cast(^os.SOCKADDR)&amp;addr, size_of(addr))
        if (err == os.ERROR_NONE) {return socket}
    }

    os.exit(1)
}


x11_handshake :: proc(socket: os.Socket, auth_token: ^AuthToken) -&gt; ConnectionInformation {

    Request :: struct #packed {
        endianness:             u8,
        pad1:                   u8,
        major_version:          u16,
        minor_version:          u16,
        authorization_len:      u16,
        authorization_data_len: u16,
        pad2:                   u16,
    }

    request := Request {
        endianness             = 'l',
        major_version          = 11,
        authorization_len      = len(AUTH_ENTRY_MAGIC_COOKIE),
        authorization_data_len = size_of(AuthToken),
    }


    {
        padding := [2]u8{0, 0}
        n_sent, err := linux.writev(
            cast(linux.Fd)socket,
            []linux.IO_Vec {
                {base = &amp;request, len = size_of(Request)},
                {base = raw_data(AUTH_ENTRY_MAGIC_COOKIE), len = len(AUTH_ENTRY_MAGIC_COOKIE)},
                {base = raw_data(padding[:]), len = len(padding)},
                {base = raw_data(auth_token[:]), len = len(auth_token)},
            },
        )
        assert(err == .NONE)
        assert(
            n_sent ==
            size_of(Request) + len(AUTH_ENTRY_MAGIC_COOKIE) + len(padding) + len(auth_token),
        )
    }

    StaticResponse :: struct #packed {
        success:       u8,
        pad1:          u8,
        major_version: u16,
        minor_version: u16,
        length:        u16,
    }

    static_response := StaticResponse{}
    {
        n_recv, err := os.recv(socket, mem.ptr_to_bytes(&amp;static_response), 0)
        assert(err == os.ERROR_NONE)
        assert(n_recv == size_of(StaticResponse))
        assert(static_response.success == 1)
    }


    recv_buf: [1 &lt;&lt; 15]u8 = {}
    {
        assert(len(recv_buf) &gt;= cast(u32)static_response.length * 4)

        n_recv, err := os.recv(socket, recv_buf[:], 0)
        assert(err == os.ERROR_NONE)
        assert(n_recv == cast(u32)static_response.length * 4)
    }


    DynamicResponse :: struct #packed {
        release_number:              u32,
        resource_id_base:            u32,
        resource_id_mask:            u32,
        motion_buffer_size:          u32,
        vendor_length:               u16,
        maximum_request_length:      u16,
        screens_in_root_count:       u8,
        formats_count:               u8,
        image_byte_order:            u8,
        bitmap_format_bit_order:     u8,
        bitmap_format_scanline_unit: u8,
        bitmap_format_scanline_pad:  u8,
        min_keycode:                 u8,
        max_keycode:                 u8,
        pad2:                        u32,
    }

    read_buffer := bytes.Buffer{}
    bytes.buffer_init(&amp;read_buffer, recv_buf[:])

    dynamic_response := DynamicResponse{}
    {
        n_read, err := bytes.buffer_read(&amp;read_buffer, mem.ptr_to_bytes(&amp;dynamic_response))
        assert(err == .None)
        assert(n_read == size_of(DynamicResponse))
    }


    // Skip over the vendor information.
    bytes.buffer_next(&amp;read_buffer, cast(int)round_up_4(cast(u32)dynamic_response.vendor_length))
    // Skip over the format information (each 8 bytes long).
    bytes.buffer_next(&amp;read_buffer, 8 * cast(int)dynamic_response.formats_count)

    screen := Screen{}
    {
        n_read, err := bytes.buffer_read(&amp;read_buffer, mem.ptr_to_bytes(&amp;screen))
        assert(err == .None)
        assert(n_read == size_of(screen))
    }

    return (ConnectionInformation {
                resource_id_base = dynamic_response.resource_id_base,
                resource_id_mask = dynamic_response.resource_id_mask,
                root_screen = screen,
            })
}

next_x11_id :: proc(current_id: u32, info: ConnectionInformation) -&gt; u32 {
    return 1 + ((info.resource_id_mask &amp; (current_id)) | info.resource_id_base)
}

x11_create_graphical_context :: proc(socket: os.Socket, gc_id: u32, root_id: u32) {
    opcode: u8 : 55
    FLAG_GC_BG: u32 : 8
    BITMASK: u32 : FLAG_GC_BG
    VALUE1: u32 : 0x00_00_ff_00

    Request :: struct #packed {
        opcode:   u8,
        pad1:     u8,
        length:   u16,
        id:       u32,
        drawable: u32,
        bitmask:  u32,
        value1:   u32,
    }
    request := Request {
        opcode   = opcode,
        length   = 5,
        id       = gc_id,
        drawable = root_id,
        bitmask  = BITMASK,
        value1   = VALUE1,
    }

    {
        n_sent, err := os.send(socket, mem.ptr_to_bytes(&amp;request), 0)
        assert(err == os.ERROR_NONE)
        assert(n_sent == size_of(Request))
    }
}

x11_create_window :: proc(
    socket: os.Socket,
    window_id: u32,
    parent_id: u32,
    x: u16,
    y: u16,
    width: u16,
    height: u16,
    root_visual_id: u32,
) {
    FLAG_WIN_BG_PIXEL: u32 : 2
    FLAG_WIN_EVENT: u32 : 0x800
    FLAG_COUNT: u16 : 2
    EVENT_FLAG_EXPOSURE: u32 = 0x80_00
    EVENT_FLAG_KEY_PRESS: u32 = 0x1
    EVENT_FLAG_KEY_RELEASE: u32 = 0x2
    EVENT_FLAG_BUTTON_PRESS: u32 = 0x4
    EVENT_FLAG_BUTTON_RELEASE: u32 = 0x8
    flags: u32 : FLAG_WIN_BG_PIXEL | FLAG_WIN_EVENT
    depth: u8 : 24
    border_width: u16 : 0
    CLASS_INPUT_OUTPUT: u16 : 1
    opcode: u8 : 1
    BACKGROUND_PIXEL_COLOR: u32 : 0x00_ff_ff_00

    Request :: struct #packed {
        opcode:         u8,
        depth:          u8,
        request_length: u16,
        window_id:      u32,
        parent_id:      u32,
        x:              u16,
        y:              u16,
        width:          u16,
        height:         u16,
        border_width:   u16,
        class:          u16,
        root_visual_id: u32,
        bitmask:        u32,
        value1:         u32,
        value2:         u32,
    }
    request := Request {
        opcode         = opcode,
        depth          = depth,
        request_length = 8 + FLAG_COUNT,
        window_id      = window_id,
        parent_id      = parent_id,
        x              = x,
        y              = y,
        width          = width,
        height         = height,
        border_width   = border_width,
        class          = CLASS_INPUT_OUTPUT,
        root_visual_id = root_visual_id,
        bitmask        = flags,
        value1         = BACKGROUND_PIXEL_COLOR,
        value2         = EVENT_FLAG_EXPOSURE | EVENT_FLAG_BUTTON_RELEASE | EVENT_FLAG_BUTTON_PRESS | EVENT_FLAG_KEY_PRESS | EVENT_FLAG_KEY_RELEASE,
    }

    {
        n_sent, err := os.send(socket, mem.ptr_to_bytes(&amp;request), 0)
        assert(err == os.ERROR_NONE)
        assert(n_sent == size_of(Request))
    }
}

x11_map_window :: proc(socket: os.Socket, window_id: u32) {
    opcode: u8 : 8

    Request :: struct #packed {
        opcode:         u8,
        pad1:           u8,
        request_length: u16,
        window_id:      u32,
    }
    request := Request {
        opcode         = opcode,
        request_length = 2,
        window_id      = window_id,
    }
    {
        n_sent, err := os.send(socket, mem.ptr_to_bytes(&amp;request), 0)
        assert(err == os.ERROR_NONE)
        assert(n_sent == size_of(Request))
    }

}

x11_put_image :: proc(
    socket: os.Socket,
    drawable_id: u32,
    gc_id: u32,
    width: u16,
    height: u16,
    dst_x: u16,
    dst_y: u16,
    depth: u8,
    data: []u8,
) {
    opcode: u8 : 72

    Request :: struct #packed {
        opcode:         u8,
        format:         u8,
        request_length: u16,
        drawable_id:    u32,
        gc_id:          u32,
        width:          u16,
        height:         u16,
        dst_x:          u16,
        dst_y:          u16,
        left_pad:       u8,
        depth:          u8,
        pad1:           u16,
    }

    data_length_padded := round_up_4(cast(u32)len(data))

    request := Request {
        opcode         = opcode,
        format         = 2, // ZPixmap
        request_length = cast(u16)(6 + data_length_padded / 4),
        drawable_id    = drawable_id,
        gc_id          = gc_id,
        width          = width,
        height         = height,
        dst_x          = dst_x,
        dst_y          = dst_y,
        depth          = depth,
    }
    {
        padding_len := data_length_padded - cast(u32)len(data)

        n_sent, err := linux.writev(
            cast(linux.Fd)socket,
            []linux.IO_Vec {
                {base = &amp;request, len = size_of(Request)},
                {base = raw_data(data), len = len(data)},
                {base = raw_data(data), len = cast(uint)padding_len},
            },
        )
        assert(err == .NONE)
        assert(n_sent == size_of(Request) + len(data) + cast(int)padding_len)
    }
}

render :: proc(socket: os.Socket, scene: ^Scene) {
    for entity, i in scene.displayed_entities {
        rect := ASSET_COORDINATES[entity]
        row, column := idx_to_row_column(i)

        x11_copy_area(
            socket,
            scene.sprite_pixmap_id,
            scene.window_id,
            scene.gc_id,
            rect.x,
            rect.y,
            cast(u16)column * ENTITIES_WIDTH,
            cast(u16)row * ENTITIES_HEIGHT,
            ENTITIES_WIDTH,
            ENTITIES_HEIGHT,
        )
    }
}

ENTITIES_ROW_COUNT :: 16
ENTITIES_COLUMN_COUNT :: 16
ENTITIES_WIDTH :: 16
ENTITIES_HEIGHT :: 16

Scene :: struct {
    window_id:          u32,
    gc_id:              u32,
    sprite_pixmap_id:   u32,
    displayed_entities: [ENTITIES_ROW_COUNT * ENTITIES_COLUMN_COUNT]Entity_kind,
    // TODO: Bitfield?
    mines:              [ENTITIES_ROW_COUNT * ENTITIES_COLUMN_COUNT]bool,
}

wait_for_x11_events :: proc(socket: os.Socket, scene: ^Scene) {
    GenericEvent :: struct #packed {
        code: u8,
        pad:  [31]u8,
    }
    assert(size_of(GenericEvent) == 32)

    KeyReleaseEvent :: struct #packed {
        code:            u8,
        detail:          u8,
        sequence_number: u16,
        time:            u32,
        root_id:         u32,
        event:           u32,
        child_id:        u32,
        root_x:          u16,
        root_y:          u16,
        event_x:         u16,
        event_y:         u16,
        state:           u16,
        same_screen:     bool,
        pad1:            u8,
    }
    assert(size_of(KeyReleaseEvent) == 32)

    ButtonReleaseEvent :: struct #packed {
        code:        u8,
        detail:      u8,
        seq_number:  u16,
        timestamp:   u32,
        root:        u32,
        event:       u32,
        child:       u32,
        root_x:      u16,
        root_y:      u16,
        event_x:     u16,
        event_y:     u16,
        state:       u16,
        same_screen: bool,
        pad1:        u8,
    }
    assert(size_of(ButtonReleaseEvent) == 32)

    EVENT_EXPOSURE: u8 : 0xc
    EVENT_KEY_RELEASE: u8 : 0x3
    EVENT_BUTTON_RELEASE: u8 : 0x5

    KEYCODE_ENTER: u8 : 36

    for {
        generic_event := GenericEvent{}
        n_recv, err := os.recv(socket, mem.ptr_to_bytes(&amp;generic_event), 0)
        if err == os.EPIPE || n_recv == 0 {
            os.exit(0) // The end.
        }

        assert(err == os.ERROR_NONE)
        assert(n_recv == size_of(GenericEvent))

        switch generic_event.code {
        case EVENT_EXPOSURE:
            render(socket, scene)

        case EVENT_KEY_RELEASE:
            event := transmute(KeyReleaseEvent)generic_event
            if event.detail == KEYCODE_ENTER {
                reset(scene)
                render(socket, scene)
            }

        case EVENT_BUTTON_RELEASE:
            event := transmute(ButtonReleaseEvent)generic_event
            on_cell_clicked(event.event_x, event.event_y, scene)
            render(socket, scene)
        }
    }
}

reset :: proc(scene: ^Scene) {
    for &amp;entity in scene.displayed_entities {
        entity = .Covered
    }

    for &amp;mine in scene.mines {
        mine = rand.choice([]bool{true, false, false, false})
    }
}

x11_copy_area :: proc(
    socket: os.Socket,
    src_id: u32,
    dst_id: u32,
    gc_id: u32,
    src_x: u16,
    src_y: u16,
    dst_x: u16,
    dst_y: u16,
    width: u16,
    height: u16,
) {
    opcode: u8 : 62
    Request :: struct #packed {
        opcode:         u8,
        pad1:           u8,
        request_length: u16,
        src_id:         u32,
        dst_id:         u32,
        gc_id:          u32,
        src_x:          u16,
        src_y:          u16,
        dst_x:          u16,
        dst_y:          u16,
        width:          u16,
        height:         u16,
    }

    request := Request {
        opcode         = opcode,
        request_length = 7,
        src_id         = src_id,
        dst_id         = dst_id,
        gc_id          = gc_id,
        src_x          = src_x,
        src_y          = src_y,
        dst_x          = dst_x,
        dst_y          = dst_y,
        width          = width,
        height         = height,
    }
    {
        n_sent, err := os.send(socket, mem.ptr_to_bytes(&amp;request), 0)
        assert(err == os.ERROR_NONE)
        assert(n_sent == size_of(Request))
    }
}

on_cell_clicked :: proc(x: u16, y: u16, scene: ^Scene) {
    idx, row, column := locate_entity_by_coordinate(x, y)

    mined := scene.mines[idx]

    if mined {
        scene.displayed_entities[idx] = .Mine_exploded
        // Lose.
        uncover_all_cells(&amp;scene.displayed_entities, &amp;scene.mines, .Mine_exploded)
    } else {
        visited := [ENTITIES_COLUMN_COUNT * ENTITIES_ROW_COUNT]bool{}
        uncover_cells_flood_fill(row, column, &amp;scene.displayed_entities, &amp;scene.mines, &amp;visited)

        // Win.
        if count_remaining_goals(scene.displayed_entities, scene.mines) == 0 {
            uncover_all_cells(&amp;scene.displayed_entities, &amp;scene.mines, .Mine_idle)
        }
    }
}

count_remaining_goals :: proc(
    displayed_entities: [ENTITIES_COLUMN_COUNT * ENTITIES_ROW_COUNT]Entity_kind,
    mines: [ENTITIES_COLUMN_COUNT * ENTITIES_ROW_COUNT]bool,
) -&gt; int {

    covered := 0

    for entity in displayed_entities {
        covered += cast(int)(entity == .Covered)
    }

    mines_count := 0

    for mine in mines {
        mines_count += cast(int)mine
    }

    return covered - mines_count
}

uncover_all_cells :: proc(
    displayed_entities: ^[ENTITIES_COLUMN_COUNT * ENTITIES_ROW_COUNT]Entity_kind,
    mines: ^[ENTITIES_ROW_COUNT * ENTITIES_COLUMN_COUNT]bool,
    shown_mine: Entity_kind,
) {
    for &amp;entity, i in displayed_entities {
        if mines[i] {
            entity = shown_mine
        } else {
            row, column := idx_to_row_column(i)
            mines_around_count := count_mines_around_cell(row, column, mines[:])
            assert(mines_around_count &lt;= 8)

            entity = cast(Entity_kind)(cast(int)Entity_kind.Uncovered_0 + mines_around_count)
        }
    }
}

uncover_cells_flood_fill :: proc(
    row: int,
    column: int,
    displayed_entities: ^[ENTITIES_COLUMN_COUNT * ENTITIES_ROW_COUNT]Entity_kind,
    mines: ^[ENTITIES_ROW_COUNT * ENTITIES_COLUMN_COUNT]bool,
    visited: ^[ENTITIES_COLUMN_COUNT * ENTITIES_ROW_COUNT]bool,
) {
    i := row_column_to_idx(row, column)
    if visited[i] {return}

    visited[i] = true

    // Do not uncover covered mines.
    if mines[i] {return}

    if displayed_entities[i] != .Covered {return}

    // Uncover cell.

    mines_around_count := count_mines_around_cell(row, column, mines[:])
    assert(mines_around_count &lt;= 8)

    displayed_entities[i] =
    cast(Entity_kind)(cast(int)Entity_kind.Uncovered_0 + mines_around_count)

    // Uncover neighbors.

    // Up.
    if !(row == 0) {
        uncover_cells_flood_fill(row - 1, column, displayed_entities, mines, visited)
    }

    // Right
    if !(column == (ENTITIES_COLUMN_COUNT - 1)) {
        uncover_cells_flood_fill(row, column + 1, displayed_entities, mines, visited)
    }

    // Bottom.
    if !(row == (ENTITIES_ROW_COUNT - 1)) {
        uncover_cells_flood_fill(row + 1, column, displayed_entities, mines, visited)
    }

    // Left.
    if !(column == 0) {
        uncover_cells_flood_fill(row, column - 1, displayed_entities, mines, visited)
    }
}

idx_to_row_column :: #force_inline proc(i: int) -&gt; (int, int) {
    column := i % ENTITIES_COLUMN_COUNT
    row := i / ENTITIES_ROW_COUNT

    return row, column
}

row_column_to_idx :: #force_inline proc(row: int, column: int) -&gt; int {
    return cast(int)row * ENTITIES_COLUMN_COUNT + cast(int)column
}

count_mines_around_cell :: proc(row: int, column: int, displayed_entities: []bool) -&gt; int {
    // TODO: Pad the border to elide all bound checks?

    up_left :=
        row == 0 || column == 0 \
        ? false \
        : displayed_entities[row_column_to_idx(row - 1, column - 1)]
    up := row == 0 ? false : displayed_entities[row_column_to_idx(row - 1, column)]
    up_right :=
        row == 0 || column == (ENTITIES_COLUMN_COUNT - 1) \
        ? false \
        : displayed_entities[row_column_to_idx(row - 1, column + 1)]
    right :=
        column == (ENTITIES_COLUMN_COUNT - 1) \
        ? false \
        : displayed_entities[row_column_to_idx(row, column + 1)]
    bottom_right :=
        row == (ENTITIES_ROW_COUNT - 1) || column == (ENTITIES_COLUMN_COUNT - 1) \
        ? false \
        : displayed_entities[row_column_to_idx(row + 1, column + 1)]
    bottom :=
        row == (ENTITIES_ROW_COUNT - 1) \
        ? false \
        : displayed_entities[row_column_to_idx(row + 1, column)]
    bottom_left :=
        column == 0 || row == (ENTITIES_COLUMN_COUNT - 1) \
        ? false \
        : displayed_entities[row_column_to_idx(row + 1, column - 1)]
    left := column == 0 ? false : displayed_entities[row_column_to_idx(row, column - 1)]


    return(
        cast(int)up_left +
        cast(int)up +
        cast(int)up_right +
        cast(int)right +
        cast(int)bottom_right +
        cast(int)bottom +
        cast(int)bottom_left +
        cast(int)left \
    )
}

locate_entity_by_coordinate :: proc(win_x: u16, win_y: u16) -&gt; (idx: int, row: int, column: int) {
    column = cast(int)win_x / ENTITIES_WIDTH
    row = cast(int)win_y / ENTITIES_HEIGHT

    idx = row_column_to_idx(row, column)

    return idx, row, column
}

x11_create_pixmap :: proc(
    socket: os.Socket,
    window_id: u32,
    pixmap_id: u32,
    width: u16,
    height: u16,
    depth: u8,
) {
    opcode: u8 : 53

    Request :: struct #packed {
        opcode:         u8,
        depth:          u8,
        request_length: u16,
        pixmap_id:      u32,
        drawable_id:    u32,
        width:          u16,
        height:         u16,
    }

    request := Request {
        opcode         = opcode,
        depth          = depth,
        request_length = 4,
        pixmap_id      = pixmap_id,
        drawable_id    = window_id,
        width          = width,
        height         = height,
    }

    {
        n_sent, err := os.send(socket, mem.ptr_to_bytes(&amp;request), 0)
        assert(err == os.ERROR_NONE)
        assert(n_sent == size_of(Request))
    }
}

main :: proc() {
    png_data := #load("sprite.png")
    sprite, err := png.load_from_bytes(png_data, {})
    assert(err == nil)
    sprite_data := make([]u8, sprite.height * sprite.width * 4)

    // Convert the image format from the sprite (RGB) into the X11 image format (BGRX).
    for i := 0; i &lt; sprite.height * sprite.width - 3; i += 1 {
        sprite_data[i * 4 + 0] = sprite.pixels.buf[i * 3 + 2] // R -&gt; B
        sprite_data[i * 4 + 1] = sprite.pixels.buf[i * 3 + 1] // G -&gt; G
        sprite_data[i * 4 + 2] = sprite.pixels.buf[i * 3 + 0] // B -&gt; R
        sprite_data[i * 4 + 3] = 0 // pad
    }

    auth_token, _ := load_x11_auth_token(context.temp_allocator)

    socket := connect_x11_socket()
    connection_information := x11_handshake(socket, &amp;auth_token)

    gc_id := next_x11_id(0, connection_information)
    x11_create_graphical_context(socket, gc_id, connection_information.root_screen.id)

    window_id := next_x11_id(gc_id, connection_information)
    x11_create_window(
        socket,
        window_id,
        connection_information.root_screen.id,
        200,
        200,
        ENTITIES_COLUMN_COUNT * ENTITIES_WIDTH,
        ENTITIES_ROW_COUNT * ENTITIES_HEIGHT,
        connection_information.root_screen.root_visual_id,
    )

    img_depth: u8 = 24
    pixmap_id := next_x11_id(window_id, connection_information)
    x11_create_pixmap(
        socket,
        window_id,
        pixmap_id,
        cast(u16)sprite.width,
        cast(u16)sprite.height,
        img_depth,
    )
    scene := Scene {
        window_id        = window_id,
        gc_id            = gc_id,
        sprite_pixmap_id = pixmap_id,
    }
    reset(&amp;scene)

    x11_put_image(
        socket,
        scene.sprite_pixmap_id,
        scene.gc_id,
        cast(u16)sprite.width,
        cast(u16)sprite.height,
        0,
        0,
        img_depth,
        sprite_data,
    )

    x11_map_window(socket, window_id)

    wait_for_x11_events(socket, &amp;scene)
}


@(test)
test_round_up_4 :: proc(_: ^testing.T) {
    assert(round_up_4(0) == 0)
    assert(round_up_4(1) == 4)
    assert(round_up_4(2) == 4)
    assert(round_up_4(3) == 4)
    assert(round_up_4(4) == 4)
    assert(round_up_4(5) == 8)
    assert(round_up_4(6) == 8)
    assert(round_up_4(7) == 8)
    assert(round_up_4(8) == 8)
}

@(test)
test_count_mines_around_cell :: proc(_: ^testing.T) {
    {
        mines := [ENTITIES_ROW_COUNT * ENTITIES_COLUMN_COUNT]bool{}
        mines[row_column_to_idx(0, 0)] = true
        mines[row_column_to_idx(0, 1)] = true
        mines[row_column_to_idx(0, 2)] = true
        mines[row_column_to_idx(1, 2)] = true
        mines[row_column_to_idx(2, 2)] = true
        mines[row_column_to_idx(2, 1)] = true
        mines[row_column_to_idx(2, 0)] = true
        mines[row_column_to_idx(1, 0)] = true

        assert(count_mines_around_cell(1, 1, mines[:]) == 8)
    }
}</code></pre>

<blockquote id="donate">
  <p>If you liked this article and you want to support me, and can afford it: <a href="https://paypal.me/philigaultier?country.x=DE&amp;locale.x=en_US">Donate</a></p>
</blockquote>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Curl is inside 22,734 Steam games (138 pts)]]></title>
            <link>https://daniel.haxx.se/blog/2024/06/20/inside-22734-steam-games/</link>
            <guid>40737349</guid>
            <pubDate>Thu, 20 Jun 2024 11:18:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://daniel.haxx.se/blog/2024/06/20/inside-22734-steam-games/">https://daniel.haxx.se/blog/2024/06/20/inside-22734-steam-games/</a>, See on <a href="https://news.ycombinator.com/item?id=40737349">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page">

	<div id="primary" role="main">
			
<article id="post-25020">
	
		<p><img width="672" height="372" src="https://daniel.haxx.se/blog/wp-content/uploads/2016/09/GTA-end-credits-libcurl-672x372.jpg" alt="" decoding="async" srcset="https://daniel.haxx.se/blog/wp-content/uploads/2016/09/GTA-end-credits-libcurl-672x372.jpg 672w, https://daniel.haxx.se/blog/wp-content/uploads/2016/09/GTA-end-credits-libcurl-200x110.jpg 200w, https://daniel.haxx.se/blog/wp-content/uploads/2016/09/GTA-end-credits-libcurl-1038x576.jpg 1038w" sizes="(max-width: 672px) 100vw, 672px">		</p>

		
	<!-- .entry-header -->

		<div>
		
<p>About a year ago I blogged about <a href="https://daniel.haxx.se/blog/2023/06/09/games-curl-too/" data-type="post" data-id="22459">games that use curl</a>. In that post I listed a bunch of well-known titles I knew use curl and there was a list of 136 additional games giving credit to curl.</p>



<p>Kind of amazing that over <em>one hundred games</em> decided to use curl!</p>



<p>At the time, lots of people told me that number was probably way low and while I kind of had that feeling as well it was just a feeling and nothing else. We cannot be <em>absolutely certain</em> unless there is data or evidence to actually back it up.</p>



<p>The speculation could stop this week when someone provided me with a link to a database of Steam titles (<a href="https://en.wikipedia.org/wiki/Steam_(service)">Steam</a>, as in the video game service). <a href="https://steamdb.info/">SteamDB</a> is a third-party site that among other things extracts data and figures out which “SDKs” are used by Steam games: <a href="https://steamdb.info/tech/SDK/cURL/">Their list of game titles on Steam using curl</a>.</p>



<p>Since that list is capped at 10,000 titles, I had to filter it and add up the number of titles based on release year. Out of the 91,559 titles they currently list in their database, <strong>22,734</strong> are identified to be using curl: <strong>24.8%</strong>.</p>



<p>Not too shabby for a hobby.</p>


<div>
<figure data-wp-context="{&quot;uploadedSrc&quot;:&quot;https:\/\/daniel.haxx.se\/blog\/wp-content\/uploads\/2024\/04\/curl-is-just-2000.jpg&quot;,&quot;figureClassNames&quot;:&quot;aligncenter size-full&quot;,&quot;figureStyles&quot;:null,&quot;imgClassNames&quot;:&quot;wp-image-24622&quot;,&quot;imgStyles&quot;:null,&quot;targetWidth&quot;:2000,&quot;targetHeight&quot;:1500,&quot;scaleAttr&quot;:false,&quot;ariaLabel&quot;:&quot;Enlarge image&quot;,&quot;alt&quot;:&quot;&quot;}" data-wp-interactive="core/image"><img decoding="async" width="2000" height="1500" data-wp-init="callbacks.setButtonStyles" data-wp-on--click="actions.showLightbox" data-wp-on--load="callbacks.setButtonStyles" data-wp-on-window--resize="callbacks.setButtonStyles" src="https://daniel.haxx.se/blog/wp-content/uploads/2024/04/curl-is-just-2000.jpg" alt=""></figure></div>	</div><!-- .entry-content -->
	
	</article><!-- #post-25020 -->
		<nav>
		<h2>
			Post navigation		</h2>
		<!-- .nav-links -->
		</nav><!-- .navigation -->
		
<!-- #comments -->
		</div><!-- #primary -->

<!-- #content-sidebar -->
<div id="secondary">
		<h2>tech, open source and networking</h2>
	
	
		<!-- #primary-sidebar -->
	</div><!-- #secondary -->

		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Delusion of Advanced Plastic Recycling (189 pts)]]></title>
            <link>https://www.propublica.org/article/delusion-advanced-chemical-plastic-recycling-pyrolysis</link>
            <guid>40737308</guid>
            <pubDate>Thu, 20 Jun 2024 11:12:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.propublica.org/article/delusion-advanced-chemical-plastic-recycling-pyrolysis">https://www.propublica.org/article/delusion-advanced-chemical-plastic-recycling-pyrolysis</a>, See on <a href="https://news.ycombinator.com/item?id=40737308">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-pp-location="article body">

        
        
        




                    
<p data-pp-blocktype="copy" data-pp-id="2.0"><span>Last year,</span> I became obsessed with a plastic cup. </p>

<p data-pp-blocktype="copy" data-pp-id="2.1">It was a small container that held diced fruit, the type thrown into lunch boxes. And it was the first product I’d seen born of what’s being touted as a cure for a crisis.</p>
        
    
                        


   
            
            
            
            

   
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="4.0">Plastic doesn’t break down in nature. If you turned all of what’s been made into cling wrap, it would <a href="https://www.sciencedaily.com/releases/2016/01/160127083854.htm">cover every inch of the globe</a>. It’s piling up, <a href="https://www.epa.gov/plastics/impacts-plastic-pollution">leaching into our water</a> and <a href="https://www.sciencenews.org/article/microplastics-nanoplastics-heart-attacks-strokes-health">poisoning our bodies</a>.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="5.0">Scientists say the key to fixing this is to make less of it; the world churns out 430 million metric tons each year.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="6.0">But businesses that rely on plastic production, like fossil fuel and chemical companies, have worked since the <a href="https://grist.org/accountability/petrochemical-companies-have-known-for-40-years-that-plastics-recycling-wouldnt-work/">1980s to spin the pollution as a failure of waste management</a> — one that can be solved with recycling.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="7.0"><a href="https://www.npr.org/2020/03/31/822597631/plastic-wars-three-takeaways-from-the-fight-over-the-future-of-plastics">Industry leaders knew then</a> what we know now: Traditional recycling <a href="https://theintercept.com/2019/07/20/plastics-industry-plastic-recycling/">would </a><a href="https://theintercept.com/2019/07/20/plastics-industry-plastic-recycling/">barely put a dent in the trash heap</a>. It’s hard to transform flimsy candy wrappers into sandwich bags, or to make containers that once held motor oil clean enough for milk.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="8.0">Now, the industry is heralding nothing short of a miracle: an “advanced”type of recycling known as pyrolysis — “pyro” means fire and “lysis” means separation. It uses heat to break plastic all the way down to its molecular building blocks.</p>
        
    
                    
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="10.0">While old-school, “mechanical” recycling yields plastic that’s degraded or contaminated, this type of “chemical” recycling promises plastic that behaves like it’s new, and could usher in what the industry casts as a green revolution: Not only would it save hard-to-recycle plastics like frozen food wrappers from the dumpster, but it would turn them into new products that can replace the old ones and be chemically recycled again and again.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="11.0">So when three companies used ExxonMobil’s pyrolysis-based technology to successfully conjure up that fruit cup, <a href="https://www.packworld.com/supplier-news/news/22871469/printpack-printpack-exxonmobil-pacific-coast-producers-bring-circularity-to-fruit-cups">they announced it to the world</a>.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="12.0">“This is a significant milestone,” said Printpack, which turned the plastic into cups. The fruit supplier Pacific Coast Producers called it “the most important initiative a consumer-packaged goods company can pursue.”</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="13.0">“ExxonMobil is supporting the circularity of plastics,” the August 2023 news release said, citing <a href="https://grist.org/accountability/circular-economy-plastics-recycling-reuse-waste-conference-seattle/">a </a><a href="https://grist.org/accountability/circular-economy-plastics-recycling-reuse-waste-conference-seattle/">buzzword</a> that implies an infinite loop of using, recycling and reusing.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="14.0">They were so proud, I hoped they would tell me all about how they made the cup, how many of them existed and where I could buy one.</p>

<p data-pp-blocktype="copy" data-pp-id="14.1">So began my long — and, well, circular — pursuit of the truth at a time when it really matters.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="15.0">This year, nearly all of the world’s countries are hammering out a <a href="https://www.propublica.org/article/plastics-waste-united-nations-international-conference-treaty-ottawa">United Nations treaty to deal with the plastic crisis</a>. As they consider limiting production, <a href="https://www.ehn.org/chemical-recycling-of-plastics-2667297273.html">the industry is making a hard push to shift the conversation</a> to the wonders of chemical recycling. It’s also buying ads during cable news shows as U.S. states consider laws to limit plastic packaging and lobbying federal agencies to loosen the very definition of what it means to recycle.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="16.0">It’s been selling governments on chemical recycling, with quite a bit of success. American and <a href="https://www.euwid-recycling.com/news/business/lyondellbasell-to-receive-eur40m-in-eu-funding-for-chemical-recycling-plant-080124/">European regulators</a> <a href="https://theintercept.com/2023/10/31/plastics-pollution-advanced-recycling/">have spent tens of </a><a href="https://theintercept.com/2023/10/31/plastics-pollution-advanced-recycling/">millions</a><a href="https://theintercept.com/2023/10/31/plastics-pollution-advanced-recycling/"> subsidizing pyrolysis facilities</a>. <a href="https://www.americanchemistry.com/chemistry-in-america/news-trends/press-release/2024/with-wyoming-half-the-country-open-to-advanced-recycling">Half of all U.S. states</a> have <a href="https://e360.yale.edu/features/advanced-plastics-recycling-pyrolysis">eased air pollution rules</a> for the process, which has been found to <a href="https://www.nrdc.org/sites/default/files/chemical-recycling-greenwashing-incineration-ib.pdf">release carcinogens like benzene and dioxins</a> and <a href="https://pubs.acs.org/doi/10.1021/acssuschemeng.2c05497#">give off more greenhouse gases than making plastic from crude oil</a>.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="17.0">Given the high stakes of this moment, I set out to understand exactly what the world is getting out of this recycling technology. For months, I tracked press releases, interviewed experts, tried to buy plastic made via pyrolysis and learned more than I ever wanted to know about the science of recycled molecules.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="18.0">Under all the math and engineering, I found an inconvenient truth: Not much is being recycled at all, nor is pyrolysis capable of curbing the plastic crisis.  </p>

<p data-pp-blocktype="copy" data-pp-id="18.1">Not now. Maybe not ever.</p>
        
    
                    

<figure data-pp-id="20" data-pp-blocktype="image">

    


                    
    


    <img alt="" width="300" height="200" loading="lazy" js-autosizes="" src="https://img.assets-d.propublica.org/v5/images/item-10.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=533&amp;q=80&amp;w=800&amp;s=7c0cf6520a1b45b5c6b466ab9f20c825" srcset="https://img.assets-d.propublica.org/v5/images/item-10.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=267&amp;q=80&amp;w=400&amp;s=c2a95b75734aaec3d82ebab09ca6e07a 400w, https://img.assets-d.propublica.org/v5/images/item-10.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=533&amp;q=80&amp;w=800&amp;s=7c0cf6520a1b45b5c6b466ab9f20c825 800w, https://img.assets-d.propublica.org/v5/images/item-10.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=800&amp;q=80&amp;w=1200&amp;s=35a4dfd7efe9417e228127c272472461 1200w, https://img.assets-d.propublica.org/v5/images/item-10.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=867&amp;q=80&amp;w=1300&amp;s=292b2d8c2964a3aea440141efbaf99da 1300w, https://img.assets-d.propublica.org/v5/images/item-10.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=967&amp;q=80&amp;w=1450&amp;s=fbb209578b9489431171ea59aa2b5947 1450w, https://img.assets-d.propublica.org/v5/images/item-10.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=1067&amp;q=80&amp;w=1600&amp;s=0651de84e0db97e13899d7e6ac61577d 1600w, https://img.assets-d.propublica.org/v5/images/item-10.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=1333&amp;q=80&amp;w=2000&amp;s=4d3b38b00a27b9a622eeebf3dd17ed4e 2000w">

            
    
<figcaption>
    
    
    
    </figcaption>

</figure>

        
    
                    
<p data-pp-blocktype="copy" data-pp-id="21.0"><span>Let’s take</span> a closer look at that Printpack press release, which uses convoluted terms to describe the recycled plastic in that fruit cup: </p>

<p data-pp-blocktype="copy" data-pp-id="21.1">“30% ISCC PLUS certified-circular”</p>

<p data-pp-blocktype="copy" data-pp-id="21.2">“mass balance free attribution”</p>

<p data-pp-blocktype="copy" data-pp-id="21.3">It’s easy to conclude the cup was made with 30% recycled plastic — until you break down the numerical sleight of hand that props up that number. </p>

<p data-pp-blocktype="copy" data-pp-id="21.4">It took interviews with a dozen academics, consultants, environmentalists and engineers to help me do just that. </p>

<p data-pp-blocktype="copy" data-pp-id="21.5">Stick with me as I unravel it all.</p>
        
            
    
    
    
                            

<figure data-pp-id="1" data-pp-blocktype="embed">

    


                        <div id="lesson-one">
    <div>
         <p>
         <h3><span>Lesson 1</span></h3>
         </p>
          <h2>Most of the old plastic that goes <span>into</span> pyrolysis doesn’t actually become new&nbsp;plastic.
</h2>
      </div>
         <p><img src="https://static.propublica.org/projects/graphics/2024-plastics/images/item-1.png">
       <img src="https://static.propublica.org/projects/graphics/2024-plastics/images/item-2.png">
        <img src="https://static.propublica.org/projects/graphics/2024-plastics/images/item-3.png">
         <img src="https://static.propublica.org/projects/graphics/2024-plastics/images/item-5.png">
     
      
    </p>
</div>
            
    
<figcaption>
    
    
    
    </figcaption>


</figure>

            
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="24.0"><span>In traditional recycling,</span> plastic is turned into tiny pellets or flakes,  which you can melt again and mold back into recycled plastic products.</p>

<p data-pp-blocktype="copy" data-pp-id="24.1">Even in a real-life scenario, where bottles have labels and a little bit of juice left in them, most of the plastic products that go into the process find new life.</p>
        
            
    
    
    
                            

<figure data-pp-id="1" data-pp-blocktype="embed">

    


                        <!-- Generated by ai2html v0.115.1 - 2024-06-13 12:31 -->
<!-- ai file: plastic-recyclingrate-mechanical-ai2html.ai -->




<!-- End ai2html - 2024-06-13 12:31 -->
            
    
<figcaption>
    
    
    
    </figcaption>


</figure>

            
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="26.0">The numbers are much lower for pyrolysis.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="27.0">It’s “very, very, very, very difficult” to break down plastic that way, said Steve Jenkins, vice president of chemicals consulting at Wood Mackenzie, an energy and resources analytics firm. “The laws of nature and the laws of physics are trying to stop you.”</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="28.0">Waste is heated until it turns into oil. Part of that oil is composed of a liquid called naphtha, which is essential for making plastic. </p>

<p data-pp-blocktype="copy" data-pp-id="28.1">There are two ingredients in the naphtha that recyclers want to isolate: propylene and ethylene — gases that can be turned into solid plastics.</p>

<p data-pp-blocktype="copy" data-pp-id="28.2">To split the naphtha into different chemicals, it’s fed into a machine called a steam cracker. Less than half of what it spits out becomes propylene and ethylene.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="29.0">This means that if a pyrolysis operator started with 100 pounds of plastic waste, it can expect to end up with 15-20 pounds of reusable plastic. Experts told me the process can yield less if the plastic used is dirty or more if the technology is particularly advanced.</p>
        
            
    
    
    
                            

<figure data-pp-id="1" data-pp-blocktype="embed">

    


                        <!-- Generated by ai2html v0.115.1 - 2024-06-13 12:31 -->
<!-- ai file: plastic-recyclingrate-chemical-ai2html.ai -->




<!-- End ai2html - 2024-06-13 12:31 -->
            
    
<figcaption>
    
    
    
    </figcaption>


</figure>

            
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="31.0">I reached out to several companies to ask how much new plastic their processes actually yield, and none provided numbers. The American Chemistry Council, the nation’s largest plastic lobby, told me that because so many factors impact a company’s yield, it’s impossible to estimate that number for the entire industry.</p>
        
            
    
    
    
                            

<figure data-pp-id="1" data-pp-blocktype="embed">

    


                        <div id="lesson-two">

    <div>
         <p>
         <h3><span>Lesson 2</span></h3>
         </p>
          <h2> The plastic that comes <span>out of</span> pyrolysis contains very little recycled material. 

</h2>
      </div>
       <p><img src="https://static.propublica.org/projects/graphics/2024-plastics/images/item-7.png">

         <img src="https://static.propublica.org/projects/graphics/2024-plastics/images/item-5.png">
         <img src="https://static.propublica.org/projects/graphics/2024-plastics/images/item-2.png">
         <img src="https://static.propublica.org/projects/graphics/2024-plastics/images/item-6.png">




   </p>


</div>


            
    
<figcaption>
    
    
    
    </figcaption>


</figure>

            
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="34.0"><span>With mechanical recycling,</span> it’s hard to make plastic that’s 100% recycled; it’s expensive to do, and the process degrades plastic. Recycled pellets are often combined with new pellets to make stuff that’s 25% or 50% recycled, for example.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="35.0">But far less recycled plastic winds up in products made through pyrolysis. </p>

<p data-pp-blocktype="copy" data-pp-id="35.1">That’s because the naphtha created using recycled plastic is contaminated. Manufacturers add all kinds of chemicals to make products bend or keep them from degrading in the sun.</p>
        
            
    
    
    
                            

<figure data-pp-id="1" data-pp-blocktype="embed">

    


                        

    <img alt="" width="1460" height="2285" loading="lazy" js-autosizes="" src="https://static.propublica.org/projects/graphics/2024-plastics/graphics/plastic-steamcracker-mobile-FINAL.png">
            
    
<figcaption>
    
    
    
    </figcaption>


</figure>

            
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="37.0">Recyclers can overpower them by heavily diluting the recycled naphtha. With what, you ask? Nonrecycled naphtha made from ordinary crude oil!</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="38.0">This is the quiet — and convenient — part of the industry’s revolutionary pyrolysis method: It relies heavily on extracting fossil fuels. At least 90% of the naphtha used in pyrolysis is fossil fuel naphtha. Only then can it be poured into the steam cracker to separate the chemicals that make plastic.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="39.0">So at the end of the day, nothing that comes out of pyrolysis physically contains more than 10% recycled material (though experts and studies have shown that, in practice, it’s more like 5% or 2%).</p>
        
            
    
    
    
                            

<figure data-pp-id="1" data-pp-blocktype="embed">

    


                        

    <img alt="" width="1460" height="2285" loading="lazy" js-autosizes="" src="https://static.propublica.org/projects/graphics/2024-plastics/graphics/plastic-steamcracker-mobile-FINAL.png">
            
    
<figcaption>
    
    
    
    </figcaption>


</figure>

            
        
            
    
    
    
                            

<figure data-pp-id="1" data-pp-blocktype="embed">

    


                        <div id="lesson-three">

    <div>
         <p>
         <h3><span>Lesson 3</span></h3>
         </p>
          <h2>The industry uses mathematical acrobatics to make pyrolysis look like a&nbsp;success. 
</h2>
      </div>

        <p><img src="https://static.propublica.org/projects/graphics/2024-plastics/images/item-3.png">


              <img src="https://static.propublica.org/projects/graphics/2024-plastics/images/item-7.png">

     </p>


</div>


            
    
<figcaption>
    
    
    
    </figcaption>


</figure>

            
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="43.0"><span>Ten percent</span> doesn’t look very impressive. Some consumers are willing to pay <a href="https://theconversation.com/climate-explained-are-consumers-willing-to-pay-more-for-climate-friendly-products-146757">a premium for sustainability</a>, so companies use a form of accounting called mass balance to inflate the recycled-ness of their products. It’s not unlike offset schemes I’ve uncovered that <a href="https://features.propublica.org/brazil-carbon-offsets/inconvenient-truth-carbon-credits-dont-work-deforestation-redd-acre-cambodia/">absolve refineries of their carbon emissions</a> and <a href="https://www.propublica.org/article/biodiversity-offsets-guinea-world-bank-group-chimpanzees-outbreak">enable mining companies to kill chimpanzees</a>. Industry-affiliated groups like the International Sustainability and Carbon Certification write the rules. (ISCC didn’t respond to requests for comment.)</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="44.0">To see how this works, let’s take a look at what might happen to a batch of recycled naphtha. Let’s say the steam cracker splits the batch into 100 pounds of assorted ingredients.</p>
        
            
    
    
    
                            

<figure data-pp-id="1" data-pp-blocktype="embed">

    


                        

  

      <section id="scrolly-1">
        <div>

                <!-- persistent labels -->
                  <p>
                    = 1 pound
                  </p>
                  <p id="recycled-dot-label">
                    = 1 "recycled" pound
                  </p>
                  <p>
                    Propylene
                  </p>
                  <p>
                    Ethylene
                  </p>
                  <p>
                    Other chemicals, including fuel
                  </p>


                  
                  
                <!-- close all-content below -->
                </div>
          

        <div>
          <p>You'll get some colorless gasses that are used to make plastic: 13 pounds of propylene and 30 pounds of ethylene. You'll also wind up with 57 pounds of other chemicals.</p>
          <p>Propylene makes sturdy material such as butter tubs <img src="https://static.propublica.org/projects/graphics/2024-plastics/explainer/inline-butter.png">; ethylene makes flexible plastics like yogurt pouches <span><img src="https://static.propublica.org/projects/graphics/2024-plastics/explainer/inline-yogurt.png">.</span> Many of the other chemicals <img src="https://static.propublica.org/projects/graphics/2024-plastics/explainer/inline-chemicals.png"> aren't used to make plastic — some get used to make rubber and paint or are used as fuel. </p>
          <p>All of these outputs are technically 10% recycled, since they were made from 10% recycled naphtha. (I’m using this optimistic hypothetical to make the math easy.) </p>
          <p>But companies can do a number shuffle to assign all of the recycled value from the butter tubs <img src="https://static.propublica.org/projects/graphics/2024-plastics/explainer/inline-butter.png"> to the yogurt pouches <span><img src="https://static.propublica.org/projects/graphics/2024-plastics/explainer/inline-yogurt.png">.</span>  </p>
          <p>That way they can market the yogurt pouches <img src="https://static.propublica.org/projects/graphics/2024-plastics/explainer/inline-yogurt.png"> as 14% recycled (or “circular”), even though nothing has physically changed about the makeup of the pouches.  </p>
          <p>What's more, through a method called free attribution, companies can assign the recycled value from other chemicals <img src="https://static.propublica.org/projects/graphics/2024-plastics/explainer/inline-chemicals.png"> (even if they would never be turned into plastic) to the yogurt pouches <span><img src="https://static.propublica.org/projects/graphics/2024-plastics/explainer/inline-yogurt.png">.</span></p>
          <p>Now, the yogurt pouches <img src="https://static.propublica.org/projects/graphics/2024-plastics/explainer/inline-yogurt.png"> can be sold as 33% recycled. </p>
 
        </div>
      </section>

  
    
            
    
<figcaption>
    
    
    
    </figcaption>


</figure>

            
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="46.0">There are many flavors of this kind of accounting. Another version of free attribution would allow the company to take that entire 30-pound batch of “33% recycled” pouches and split them even further:</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="47.0">A third of them, 10 pounds, could be labeled 100% recycled — shifting the value of the full batch onto them — so long as the remaining 20 pounds aren’t labeled as recycled at all.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="48.0">As long as you avoid double counting, Jenkins told me, you can attribute the full value of recycled naphtha to the products that will make the most money. Companies need that financial incentive to recoup the costs of pyrolysis, he said.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="49.0">But it’s hard to argue that this type of marketing is transparent. Consumers aren’t going to parse through the caveats of a 33% recycled claim or understand how the green technology they’re being sold perpetuates the fossil fuel industry. I posed the critiques to the industry, including environmentalists’ accusations that mass balance is just a fancy way of greenwashing.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="50.0">The American Chemistry Council told me it’s impossible to know whether a particular ethylene molecule comes from pyrolysis naphtha or fossil fuel naphtha; the compounds produced are “fungible” and can be used for multiple products, like making rubber, solvents and paints that would reduce the amount of new fossil fuels needed. Its statement called mass balance a “well-known methodology” that’s been used by other industries including fair trade coffee, chocolate and renewable energy.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="51.0">Legislation in the European Union already forbids free attribution, and leaders are debating whether to allow other forms of mass balance. U.S. regulation is far behind that, but as the Federal Trade Commission revises its general guidelines for green marketing, the industry is arguing that mass balance is crucial to the future of advanced recycling. “The science of advanced recycling simply does not support any other approach because the ability to track individual molecules does not readily exist,” said a <a href="https://www.documentcloud.org/documents/24688789-2023-04-24-exxonmobil-ftc-comments#document/p5/a2562175">comment from ExxonMobil</a>.</p>
        
    
                    

<figure data-pp-id="53" data-pp-blocktype="image">

    


                    
    


    <img alt="" width="300" height="200" loading="lazy" js-autosizes="" src="https://img.assets-d.propublica.org/v5/images/item-4.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=533&amp;q=80&amp;w=800&amp;s=4295b6950dd8b4d6cbca0138e6620862" srcset="https://img.assets-d.propublica.org/v5/images/item-4.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=267&amp;q=80&amp;w=400&amp;s=0967e518b1a2cf3cc2f1ad07c56bf7ff 400w, https://img.assets-d.propublica.org/v5/images/item-4.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=533&amp;q=80&amp;w=800&amp;s=4295b6950dd8b4d6cbca0138e6620862 800w, https://img.assets-d.propublica.org/v5/images/item-4.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=800&amp;q=80&amp;w=1200&amp;s=d06685d5ac9a42c7b8f8e122aaf2dc61 1200w, https://img.assets-d.propublica.org/v5/images/item-4.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=867&amp;q=80&amp;w=1300&amp;s=d6a7708b4b0eabe988f74f0041f3f0f2 1300w, https://img.assets-d.propublica.org/v5/images/item-4.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=967&amp;q=80&amp;w=1450&amp;s=40944522eff6cdd5c523b4d3ccb5d794 1450w, https://img.assets-d.propublica.org/v5/images/item-4.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=1067&amp;q=80&amp;w=1600&amp;s=ca693587302aff1f58ee145d106798c1 1600w, https://img.assets-d.propublica.org/v5/images/item-4.png?crop=focalpoint&amp;fit=crop&amp;fm=webp&amp;fp-x=0.5&amp;fp-y=0.5&amp;h=1333&amp;q=80&amp;w=2000&amp;s=f381d567cd668920d90865bf81773611 2000w">

            
    
<figcaption>
    
    
    
    </figcaption>

</figure>

        
    
                    
<p data-pp-blocktype="copy" data-pp-id="54.0"><span>If you think</span> navigating the ins and outs of pyrolysis is hard, try getting your hands on actual plastic made through it.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="55.0">It’s not as easy as going to the grocery store. Those water bottles you might see with 100% recycled claims are almost certainly made through traditional recycling. The biggest giveaway is that the labels don’t contain the asterisks or fine print typical of products made through pyrolysis, like “mass balance,” “circular” or “certified.”</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="56.0">When I asked about the fruit cup, ExxonMobil directed me to its partners. Printpack didn’t respond to my inquiries. Pacific Coast Producers told me it was “engaged in a small pilot pack of plastic bowls that contain post-consumer content with materials certified” by third parties, and that it “has made no label claims regarding these cups and is evaluating their use.”</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="57.0">I pressed the American Chemistry Council for other examples.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="58.0">“Chemical recycling is a proven technology that is already manufacturing products, conserving natural resources, and offering the potential to dramatically improve recycling rates,” said Matthew Kastner, a media relations director. His colleague added that much of the plastic made via pyrolysis is “being used for food- and medical-grade packaging, oftentimes not branded.”</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="59.0">They provided links to products including a Chevron Phillips Chemical announcement about bringing recycled plastic food wrapping <a href="https://www.waste360.com/waste-producers/chevron-phillips-chemical-and-charter-next-generation-to-bring-circular-polyethylene-to-retail-stores">to retail stores</a>.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="60.0">“For competitive reasons,” a Chevron spokesperson declined to discuss brand names, the product’s availability or the amount produced.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="61.0">In another case, a grocery store chain sold <a href="https://www.exxonmobilchemical.com/en/resources/library/library-detail/107131/circularity_demo_press_release_en">chicken wrapped in plastic</a> made by ExxonMobil’s pyrolysis process. The producers told me they were part of a small project that’s now discontinued.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="62.0">In the end, I ran down half a dozen claims about products that came out of pyrolysis; each either existed in limited quantities or had its recycled-ness obscured with mass balance caveats. </p>

<p data-pp-blocktype="copy" data-pp-id="62.1">Then this April, nearly eight months after I’d begun my pursuit, I could barely contain myself when I got my hands on an actual product.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="63.0">I was at a United Nations treaty negotiation in Ottawa, Ontario, and an industry group had set up a nearby showcase. On display was a case of Heinz baked beans, packaged in “39% recycled plastic*.” (The asterisk took me down an online rabbit hole about certification and circularity. Heinz didn’t respond to my questions.)</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="64.0">This, too, was part of an old trial. The beans were expired.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="65.0">Pyrolysis is a “fairy tale,” I heard from Neil Tangri, the science and policy director at the environmental justice network Global Alliance for Incinerator Alternatives. He said he’s been hearing pyrolysis claims since the ’90s but has yet to see proof it works as promised.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="66.0">“If anyone has cracked the code for a large-scale, efficient and profitable way to turn plastic into plastic,” he said, “every reporter in the world” would get a tour.</p>

<p data-pp-blocktype="copy" data-pp-id="66.1">If I did get a tour, I wondered, would I even see all of that stubborn, dirty plastic they were supposedly recycling?</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="67.0">The industry’s marketing implied we could soon toss sandwich bags and string cheese wrappers into curbside recycling bins, where they would be diverted to pyrolysis plants. But I grew skeptical as I watched a webinar for ExxonMobil’s pyrolysis-based technology, the kind used to make the fruit cup. The company showed photos of plastic packaging and oil field equipment as examples of its starting material but then mentioned something that made me sit up straight: It was using pre-consumer plastic to “give consistency” to the waste stream.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="68.0">Chemical plants need consistency, so it’s easier to use plastic that hasn’t been gunked up by consumer use, Jenkins explained.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="69.0">But plastic waste that had never been touched by consumers, such as industrial scrap found at the edges of factory molds, could easily be recycled the old-fashioned way. Didn’t that negate the need for this more polluting, less efficient process?</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="70.0">I asked ExxonMobil how much post-consumer plastic it was actually using. Catie Tuley, a media relations adviser, said it depends on what’s available. “At the end of the day, advanced recycling allows us to divert plastic waste from landfills and give new life to plastic waste.”</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="71.0">I posed the same question to several other operators. A company in Europe told me it uses “mixed post-consumer, flexible plastic waste” and does not recycle pre-consumer waste.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="72.0">But this spring at an environmental journalism conference, an American Chemistry Council executive confirmed the industry’s preference for clean plastic as he talked about an Atlanta-based company and its pyrolysis process. My colleague Sharon Lerner asked whether it was sourcing curbside-recycled plastic for pyrolysis.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="73.0">If Nexus Circular had a “magic wand,” it would, he acknowledged, but right now that kind of waste “isn’t good enough.” He added, “It’s got tomatoes in it.”</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="74.0">(Nexus later confirmed that most of the plastic it used was pre-consumer and about a third was post-consumer, including motor oil containers sourced from car repair shops and bags dropped off at special recycling centers.)</p>
        
    
                                  
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="76.0">Clean, well-sorted plastic is a valuable commodity. If the chemical recycling industry grows, experts told me, those companies could end up competing with the far more efficient traditional recycling.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="77.0">To spur that growth, the American Chemistry Council is lobbying for mandates that would require more recycled plastic in packaging; it wants to make sure that chemically recycled plastic counts. “This would create market-driven demand signals,” Kastner told me, and ease the way for large-scale investment in new chemical recycling plants.</p>
        
    
                    
<p data-pp-blocktype="copy" data-pp-id="78.0">I asked Jenkins, the energy industry analyst, to play out this scenario on a larger scale. </p>

<p data-pp-blocktype="copy" data-pp-id="78.1">Were all of these projects adding up? Could the industry conceivably make enough propylene and ethylene through pyrolysis to replace much of our demand for new plastic? </p>

<p data-pp-blocktype="copy" data-pp-id="78.2">He looked three years into the future, using his company’s latest figures on global pyrolysis investment, and gave an optimistic assessment. </p>

<p data-pp-blocktype="copy" data-pp-id="78.3">At best, the world could replace 0.2% of new plastic churned out in a year with products made through pyrolysis.</p>
        
    
                    <div data-pp-location="bottom-note">
                                    

                                    
        <div data-pp-location="bottom-note">
                        <h2><strong>About the Math</strong></h2>
<p>Our article is focused on pyrolysis because it’s the most popular form of chemical recycling. Other types of chemical recycling technologies have their own strengths and weaknesses.</p>
<p>There are different variations of pyrolysis, and steam crackers produce a range of ethylene and propylene yields. Companies are secretive about their operations. To estimate the efficiencies of pyrolysis and mass balance, I read dozens of peer-reviewed studies, reports, industry presentations, advertisements and news stories. I also fact checked with a dozen experts who have different opinions on pyrolysis, mass balance and recycling. Some of them, including Jenkins and Anthony Schiavo, senior director at Lux Research, provided estimates of overall yields for companies trying to make plastic. All of that information coalesced around a 15% to 20% yield for conventional pyrolysis processes and 25% to 30% for more advanced technologies. We are showcasing the conventional process because it’s the most common scenario.</p>
<p>We took steps to simplify the math and jargon. For instance, we skipped over the fact that a small amount of the naphtha fed into the steam cracker is consumed as fuel. And we called the fraction of pyrolysis oil that’s suitable for a steam cracker “pyrolysis naphtha”; it is technically a naphtha-like product.</p>
<p>These processes may improve over time as new technologies are developed. But there are hard limits and tradeoffs associated with the nature of steam cracking, the contamination in the feedstock, the type of feedstock used and financial and energy costs.</p>

        </div>

    


                                    
        <div data-pp-location="bottom-note">
                        <p>Graphics and development by <a href="https://www.propublica.org/people/lucas-waldron">Lucas Waldron</a>. Design and development by <a href="https://www.propublica.org/people/Anna-Donlan">Anna Donlan</a>. <a href="https://www.propublica.org/people/Mollie-Simon">Mollie Simon</a> and <a href="https://www.propublica.org/people/Gabriel-Sandoval">Gabriel Sandoval</a> contributed research.</p>

        </div>

    
            </div><!-- end .article-body__bottom-notes -->
        
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tetris as Font (564 pts)]]></title>
            <link>https://erikdemaine.org/fonts/tetris/</link>
            <guid>40737294</guid>
            <pubDate>Thu, 20 Jun 2024 11:11:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://erikdemaine.org/fonts/tetris/">https://erikdemaine.org/fonts/tetris/</a>, See on <a href="https://news.ycombinator.com/item?id=40737294">Hacker News</a></p>
<div id="readability-page-1" class="page"><table id="data"><tbody><tr><td><label for="text">Enter text to render: &nbsp;</label><p><label for="rot">Obscure in URL</label></p></td><td><label for="anim">Animate</label><p><label for="rotate">Include rotations</label><br><label for="speed">Speed:</label>&nbsp;</p><label for="puzzle">Puzzle font</label><br><label for="black">Black pieces (dissection puzzle)</label></td><td><label for="grid">Grid</label><br><label for="center">Rotation center</label><br><label for="floor">Bottom floor</label><br></td></tr></tbody></table><p>GIF width:<a id="download"></a></p><hr><p><b><a href="https://en.wikipedia.org/wiki/Tetris">Tetris</a></b> is
<a href="https://en.wikipedia.org/wiki/List_of_best-selling_video_games">among the best-selling</a> (and perhaps best-known) video games ever.
We grew up playing the
<a href="https://en.wikipedia.org/wiki/Game_Boy">Game Boy</a> and
<a href="https://en.wikipedia.org/wiki/Spectrum_HoloByte">Spectrum HoloByte</a> PC editions.
Erik is even a <a href="http://erikdemaine.org/images/tetris_award_large.jpg">Tetris Master</a>.
Nowadays you can play
<a href="https://tetris.com/play-tetris/">in your browser</a>
or <a href="https://en.wikipedia.org/wiki/Tetris_99">on a Switch</a>
or <a href="https://en.wikipedia.org/wiki/Tetris_Effect">on PS4/PC/VR</a>.
</p><p><b>Font design.</b>  Each letter and digit in this typeface is made up of
exactly one of each of the Tetris pieces:
<span id="pieceI"></span> (I),
<span id="pieceJ"></span> (J),
<span id="pieceL"></span> (L),
<span id="pieceO"></span> (O),
<span id="pieceS"></span> (S),
<span id="pieceT"></span> (T), and
<span id="pieceZ"></span> (Z).
Furthermore, the letter is designed so that it can actually be constructed
by stacking these pieces one at a time and be supported by previous pieces,
as in Tetris.
These designs were found by hand, aided by the
<a href="http://burrtools.sourceforge.net/">BurrTools</a> software
which enabled searching for whether the Tetris pieces could fit inside
a candidate outline for a letter.
The piece colors roughly follow
<a href="https://en.wikipedia.org/wiki/Tetris#Game_pieces">The Tetris Company's standard colors</a>,
or you can switch to black pieces.
The initial rotations follow the standard
<a href="https://tetris.fandom.com/wiki/SRS">Super Rotation System</a>.
</p><p><b>Puzzles.</b>
In the <b>puzzle font</b>, the letters are at the correct rotations and
horizontal positions, and their vertical position represents their drop
sequence.  Drop the pieces in your head (or via <b>animate</b>) to figure
out what letter is encoded.
•
Even without puzzle font turned on, in the <b>animated</b> font, you can
try to guess what the letter is before all the pieces have arrived.
•
One final set of puzzles: In the unanimated unpuzzle <b>black-pieces</b> font,
try to figure out how one of each Tetris piece perfectly packs that shape.
(This is the task that BurrTools is very good at.)
</p><p><b>Related mathematics.</b>
(Perfect-information)
<a href="http://erikdemaine.org/papers/Tetris_IJCGA/">Tetris is NP-complete</a>,
meaning that it's computationally intractable to figure out whether you can
survive, or clear the board, given an initial board configuration and a
sequence of <i>n</i> pieces to come.
<a href="http://erikdemaine.org/papers/TotalTetris_JIP/">Similar results
hold</a> for <i>k</i>-tris played with
<a href="https://en.wikipedia.org/wiki/Polyomino"><i>k</i>-ominoes</a>
instead of tetrominoes.  Most recently, we
<a href="http://erikdemaine.org/papers/ThinTetris_JIP/">analyzed the
complexity of Tetris with few rows or columns</a>; this font appears
in that paper.
</p><p><b>Acknowledgments.</b>  This font was inspired by a collaboration with
Alex Streif and Kate Jones of
<a href="http://www.gamepuzzles.com/">Kadon Enterprises</a>
during <a href="https://bridgesmathart.org/bridges-2017/">BRIDGES 2017</a>,
where we started designing a font using just 5 pieces:
the “<a href="https://en.wikipedia.org/wiki/Tetromino">free
tetrominoes</a>” where S is the same piece as Z and J is the same
piece as L.
Relatedly, Kate Jones designed <a href="https://erikdemaine.org/fonts/tetris/kadon_fonts.jpg">other polyomino
fonts included in some Kadon manuals</a>.
By contrast, this typeface aims closer to the rules of Tetris,
where reflection matters and the pieces must stack and be supported.
</p><p>Check out <a href="http://erikdemaine.org/fonts/">other mathematical and
puzzle fonts</a>. • Feedback or not working?
<a href="mailto:edemaine+fonts@mit.edu">Email Erik</a>. •
<a href="https://github.com/edemaine/font-tetris">Source code on GitHub</a>.</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[EU Council has withdrawn the vote on Chat Control (923 pts)]]></title>
            <link>https://stackdiary.com/eu-council-has-withdrawn-the-vote-on-chat-control/</link>
            <guid>40736771</guid>
            <pubDate>Thu, 20 Jun 2024 09:45:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://stackdiary.com/eu-council-has-withdrawn-the-vote-on-chat-control/">https://stackdiary.com/eu-council-has-withdrawn-the-vote-on-chat-control/</a>, See on <a href="https://news.ycombinator.com/item?id=40736771">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				
<p>The EU Council and its participants have decided to withdraw the vote on the contentious Chat Control plan proposed by Belgium, the current EU President.</p>



<p>According to <a href="https://netzpolitik.org/2024/etappensieg-belgien-scheitert-mit-abstimmung-zur-chatkontrolle/" target="_blank" rel="noreferrer noopener">Netzpolitik</a> (<em>German</em>), “The EU Council did not make a decision on chat control today, as the agenda item was removed due to the lack of a majority, confirmed by Council and member state spokespersons”.</p>



<p>Belgium’s draft law, which was supposed to be adopted as the Council’s negotiating position, was instead postponed indefinitely. Although the Committee of Permanent Representatives meets weekly, Belgium cannot currently present a proposal that would gain a majority. In July, the Council Presidency will transfer from Belgium to Hungary, which has stated its intention to advance negotiations on chat control as part of its work program.</p>



<p>At the start of 2022, the European Commission proposed <a href="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=COM%3A2022%3A209%3AFIN&amp;qid=1652451192472" target="_blank" rel="noreferrer noopener">monitoring all chat messages</a> and other forms of digital communication among citizens. This initiative includes client-side scanning for end-to-end encrypted services, meaning all messages would be checked irrespective of suspicion.</p>



<p>The plan targets the detection of both known and unknown abusive material and grooming activities. Experts have cautioned that such measures are prone to generating numerous false positives, particularly when identifying unknown content, leading to innocent citizens being misidentified as senders of abusive material.</p>



<p>European legislation is formed through a trialogue process involving negotiations between the European Commission, the European Parliament, and the Council of Ministers. Initially, the European Parliament rejected the European Commission’s proposal and <a href="https://oeil.secure.europarl.europa.eu/oeil/popups/ficheprocedure.do?reference=2022/0155(COD)&amp;l=en" target="_blank" rel="noreferrer noopener">introduced its own</a>, which, while still critical, excluded end-to-end encrypted services. However, Belgium’s new proposal <a href="https://www.euronews.com/next/2024/05/21/diplomats-mull-online-child-abuse-with-no-deal-in-sight" target="_blank" rel="noreferrer noopener">reintroduced client-side scanning</a> for these services, stipulating that users must consent to chat controls; otherwise, they would lose the ability to send photos, videos, and URLs. </p>



<p>This method, termed “upload moderation” by Belgium, has been criticized by opponents as merely a rebranding of the original concept.</p>



<h2>Signal and other apps threaten to leave the EU if the proposal is enacted as law</h2>



<p>Meredith Whittaker, president of the chat app Signal, <a href="https://x.com/mer__edith/status/1796508893822238881" target="_blank" rel="noreferrer noopener">has been vocal</a> against these plans. She argues that implementing such measures within end-to-end encrypted communications fundamentally undermines encryption and introduces significant vulnerabilities in the digital infrastructure. </p>



<p>Whittaker emphasizes that these vulnerabilities have far-reaching global implications, not just within Europe. She has repeatedly highlighted the issue, stating, “There is no way to implement such proposals without fundamentally undermining encryption and introducing dangerous vulnerabilities.”</p>



<p>On June 17, Whittaker published <a href="https://signal.org/blog/pdfs/upload-moderation.pdf" target="_blank" rel="noreferrer noopener">an official position</a> condemning the EU’s proposed “upload moderation” as a rebranding of client-side scanning that fundamentally undermines end-to-end encryption. </p>



<p>She emphasized that despite attempts to mask the dangers through marketing, these measures expose encrypted communications to mass surveillance, creating vulnerabilities exploitable by hackers and hostile nations. Whittaker urged a cessation of such rhetorical games, reiterating that any form of mandated mass scanning compromises encryption, thereby threatening global security and privacy at a critically unstable geopolitical moment.</p>



<p>The privacy messenger Threema published <a href="https://threema.ch/en/blog/posts/stop-chat-control" target="_blank" rel="noreferrer noopener">a blog post</a> saying the EU’s proposed Chat Control bill represents a dangerous mass surveillance initiative that would undermine data security, violate privacy rights, and negatively impact professionals and minors.</p>



<p>Patrick Breyer, <a href="https://stackdiary.com/patrick-breyer-and-pirate-party-lose-eu-parliament-seats/">the outgoing MEP</a> from the Pirate Party, raised concerns, noting that proponents of chat control have leveraged the period following the European elections, when attention is lower and the European Parliament is in transition, to advance their agenda. Breyer has called on European citizens <a href="https://www.patrick-breyer.de/en/council-to-greenlight-chat-control-take-action-now/" target="_blank" rel="noreferrer noopener">to take action</a> and urge their politicians to oppose the measures.</p>



<p>Edward Snowden, the NSA whistleblower, <a href="https://x.com/Snowden/status/1803127597158760735" target="_blank" rel="noreferrer noopener">criticized the proposal</a>, stating, “EU apparatchiks are trying to legislate a terrible mass surveillance measure, despite universal public opposition (no sane person wants this), by inventing a new word for it – upload moderation – and hoping no one finds out what it is until it’s too late.”</p>



<h2>What happens next?</h2>



<p>With the EU Council withdrawing the vote on the Chat Control proposal today, the legislative process faces new uncertainty. The proposal will return to the drawing board, as the European Commission[<a href="#footnote">1</a>] and the European Parliament continue to deliberate on the best way forward.</p>



<p>The discussions will resume after the summer, once the new Parliament is seated and Hungary assumes the Council presidency from Belgium in July. Hungary has already committed to developing a comprehensive legislative framework to prevent and combat online child sexual abuse and revising the directive against the sexual exploitation of children.</p>



<p>The forthcoming negotiations are anticipated to be highly contentious, especially since the European Parliament has firmly opposed any measures that would circumvent end-to-end encryption. The Member States and the Parliament have until April 2026 to agree. This deadline is crucial, as <a href="https://www.europarl.europa.eu/news/en/press-room/20240408IPR20311/child-sexual-abuse-online-current-rules-extended-until-april-2026" target="_blank" rel="noreferrer noopener">an existing exemption</a> allowing social networks to self-moderate content will expire, potentially eliminating current safeguards against sharing sensitive images.</p>



<p>In the meantime, privacy advocates and digital rights organizations will likely continue to voice their concerns, urging EU citizens to remain vigilant and engaged in the debate over digital privacy and surveillance. The next steps will involve intense negotiations and potential revisions to address the complex issues at stake.</p>



<p id="footnote"><em>[footnote #1]: On June 20, at the European Data Protection Supervisor (EDPS) 20th anniversary summit, EU Commissioner for Justice Vera Jourová&nbsp;<a href="https://x.com/ellajakubowska1/status/1803709746429538685" target="_blank" rel="noreferrer noopener">stated</a>&nbsp;that the European Commission’s proposal for the Child Sexual Abuse Regulation (CSAR) would break encryption. This marks the first time the European Commission has publicly acknowledged that the CSAR proposal would compromise encryption, a significant departure from the stance maintained over the past three years by Home Affairs Commissioner Ylva Johansson, who consistently claimed that the proposal would not affect encryption.</em></p>

			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bun is much faster than Node.js 22 at decoding Base64 but both rely on same lib (113 pts)]]></title>
            <link>https://twitter.com/lemire/status/1803598132334436415</link>
            <guid>40736685</guid>
            <pubDate>Thu, 20 Jun 2024 09:31:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/lemire/status/1803598132334436415">https://twitter.com/lemire/status/1803598132334436415</a>, See on <a href="https://news.ycombinator.com/item?id=40736685">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Free software hijacked Philip Hazel's life (263 pts)]]></title>
            <link>https://lwn.net/SubscriberLink/978463/608c876c1153fd31/</link>
            <guid>40736577</guid>
            <pubDate>Thu, 20 Jun 2024 09:14:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lwn.net/SubscriberLink/978463/608c876c1153fd31/">https://lwn.net/SubscriberLink/978463/608c876c1153fd31/</a>, See on <a href="https://news.ycombinator.com/item?id=40736577">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<p>Philip Hazel was 51 when he began the <a href="https://www.exim.org/">Exim</a> message transfer agent (MTA)
project in 1995, which
led to the <a href="https://github.com/PCRE2Project/pcre2">Perl-Compatible Regular
Expressions</a> (PCRE) project in 1998. At 80,
he's maintained PCRE, and its successor PCRE2, for more than 27
years. For those doing the math, that's a year longer than LWN has
been in publication. Exim maintenance was handed off around the time
of his retirement in 2007. Now, he is ready to hand off PCRE2 as well,
if a successor can be found.</p>

<h4>Punch cards to flat screens</h4>

<p>Hazel's tenure as a free-software developer is exceptional, if not
record-breaking in its length. Linus Torvalds began
working on Linux in 1991 as a college student and is still leading its development 33 years
later with no signs of slowing. However, as Hazel <a href="https://drive.google.com/file/d/10TAOEgIL--CmzqOl0fkdP-cagjSLBM4J/view?usp=sharing">wrote</a>
in his technical memoir <em>From Punched Cards To Flat Screens</em>,
he began contributing to free software "<q>nearer the end than the
start</q>" of his career.</p>

<blockquote>
	<b>Like what you are reading?</b>
    		<a href="https://lwn.net/Promo/slink-trial-terse/claim">Try LWN for free</a> for 1 month,
    		no credit card required.
</blockquote>


<p>At the start of his career, Hazel was introduced to computers as an
undergraduate when the University of Cape Town (UCT) received its
first computer: an <a href="https://en.wikipedia.org/wiki/ICT_1301">International Computers
and Tabulators (ICT) 1301</a>, with a dazzling capacity to read as
many as 600 punched cards per minute. He attended introductory
programming lectures, read the Manchester <a href="https://en.wikipedia.org/wiki/Autocode">Autocode</a> programming
manual from cover to cover, and began writing test programs encoded onto paper punch cards:</p>

<blockquote>
If you were lucky and your program worked, the output appeared on the
printer; more often that not (at least at the start) all you got was
an error message, which meant that you had to fix your program, return
to the back of the queue, and hope to get another run before the end
of the session. The more attempts it took to get a program to work,
the more useful scrap paper one accumulated.
</blockquote>

<p>He later moved on to the University of Cambridge as a PhD
student. Cambridge was blessed with four computers when Hazel arrived
in 1967: a <a href="https://en.wikipedia.org/wiki/Titan_(1963_computer)">Titan</a>,
<a href="https://en.wikipedia.org/wiki/IBM_1130">IBM 1130</a>, <a href="https://en.wikipedia.org/wiki/IBM_System/360">IBM 360</a>, and
<a href="https://en.wikipedia.org/wiki/PDP-7">PDP-7</a>. Because Hazel
knew the Manchester Autocode language, which is similar to Titan Autocode, he
was given an account on the Titan "<q>and that was the start of the
slippery slope down which I have been sliding ever since</q>".</p>

<p>That slope, as well-detailed in Hazel's memoir (and mercilessly
abbreviated here), ultimately led to his joining the Cambridge
Computing Service as a software developer in 1971. During his tenure
at Cambridge, and at home, Hazel had the opportunity to work with a
number of interesting systems including the PDP-11, Ultrix,
Sinclair&nbsp;ZX-81, and BBC&nbsp;Micro. In 1990 the Computing Service
decided to set up a cluster of Unix systems for the use of staff and
graduate students, and he began working with Sun boxes
running SunOS. This coincided with the transition from the <a href="https://en.wikipedia.org/wiki/X.25">X.25</a> wide-area network
standard to the Internet Protocol (IP).</p>

<p>Hazel was responsible for the email service, and found it difficult
to configure <a href="https://www.proofpoint.com/us/products/email-protection/open-source-email-solution">Sendmail</a>
to choose between IP and X.25 to
deliver email. A colleague suggested that he try the free-software <a href="https://en.wikipedia.org/wiki/Smail">Smail</a> MTA instead. Hazel
took him up on the suggestion and added two features to Smail to
manage the DNS lookups and decide whether to send mail via SMTP or
X.25. While managing Smail for Cambridge, he submitted additional
features to cope with messages that had bad senders:</p>

<blockquote>
If such a message could not be delivered, the bad sender meant that an error report could
also not be delivered, and the postmaster (me) had to intervene to sort things
out. By rejecting messages whose sender address could not be verified, I pushed
the onus of dealing with this problem out to the sending MTA. This kind of
checking is now standard MTA practice (along with many other checks for
spam and viruses).
</blockquote>

<p>This was a small start that led Hazel to thinking about more
checking and verification that would be needed for MTAs. He
considered, but decided against, trying to modify Smail. It was
written in pre-standard C and carried "<q>a lot of <a href="https://en.wikipedia.org/wiki/UUCP">UUCP</a> baggage</q>". Hazel
wanted to write an MTA for modern (at the time) operating systems with
standard C compilers and runtimes, and permanent connections to a
TCP/IP network. He began working on the Experimental Internet Mailer
(Exim) in March 1995. By November it was "<q>just about able to send
and receive emails</q>".</p>

<h4>Exim</h4>

<p>Hazel had informed a colleague, Piete Brooks, that he was working
on Exim. Brooks wanted to try it out, but Hazel demurred because he
had not written any documentation. (This may be the first known case
of a programmer refusing to distribute undocumented code...) Brooks
response was "<q>I don't want the documentation, I want the
code.</q>" Even so, Hazel insisted on writing a first cut of the Exim
manual before packaging up the code and sending it off to meet its fate.</p>

<p>Brooks put the code into service right away, and started
telling others about it. Hazel put Exim releases on a public FTP site,
and gave a talk on Exim at a "Campus Mail Day" in Aberdeen, which led
to more usage. A request from Richard Stallman persuaded him to switch
from a homegrown license for Exim to the GPL. It began being ported to
other operating systems, and eventually found its way to Linux in 1997
or 1998, "<q>which by then had become an operating system that could be
used in production environments</q>". Over time, Exim would become
(and still is) a popular MTA used all over the planet. Its adoption
far exceeded Hazel's expectations:</p>

<blockquote>
<p>I never expected commercial sites to get involved, nor for it to
become the default MTA in any operating systems. In short, I did not
foresee that it would grow into the fully-fledged open source
development project that it has.</p>
</blockquote>

<h4>PCRE</h4>

<p>Regular expressions play a rather large part in managing mail, and
Hazel wanted to have more flexible regular expressions for Exim than were
present in Smail. He chose a regular-expression library
written by Henry Spencer for early versions of Exim, but found it
limiting compared to Perl's extended pattern-matching features. He
thought about lifting Perl's implementation, but it was too integrated
to be easily adapted to Exim. "<q>In the end, I solved the problem the
way programmers generally solve their problems: by writing something
myself.</q>" That, of course, became PCRE.</p>

<p>Hazel bundled PCRE with Exim and also released it as a standalone
library. Like Exim, it filled a need that he did not even realize
existed. PCRE was adopted by Apache HTTPD, and Hazel was
"<q>particularly gratified</q>" to find that it had been included with
the <a href="https://www.postfix.org/">Postfix</a> MTA. After a while, PCRE looked beyond Perl
to include features such as recursion inside a regular expression, and
named subpatterns (borrowed from Python), as well as other ideas taken
from other regular-expression implementations.</p>

<p>In 2014, Hazel decided that PCRE's API was "<q>not capable of much
further extension</q>" and began working on a new, incompatible,
version of the code. The first PCRE2 release (starting at version
10.00 to avoid confusion with then-current PCRE 8.x releases) was <a href="https://lists.exim.org/lurker/message/20150105.162835.0666407a.en.html">announced</a>
in January 2015. Hazel continued supporting PCRE until its <a href="https://lists.exim.org/lurker/message/20210615.162400.c16ff8a3.en.html">final release</a> in 2021. PCRE2 <a href="https://groups.google.com/g/pcre2-dev/c/OUI1FYTcm_E">moved to GitHub</a> in 2022. The most recent release of PCRE2, <a href="https://github.com/PCRE2Project/pcre2/releases/tag/pcre2-10.44">10.44</a>,
came out on June 7, 2024.</p>

<p>Hazel wrote that PCRE may now be even
more important than Exim was "<q>because of its widespread use in many
different applications and operating systems</q>". Indeed, just
looking to see the installed software that depends on the PCRE2
library on Fedora&nbsp;40 turns up use by Git, Grep, MariaDB, nmap,
SELinux's command-line tools, Sway, Wget&nbsp;2, and quite a few others.</p>

<p>In his memoir, Hazel had written that it felt right to pass
maintenance of Exim on to others after so long. "<q>More than a decade on one
project is long enough.</q>" In his 2017 update to the memoir, he
noted that the sentence had come back to bite him: He was still
working on PCRE 19 years after he started to write it. Little did he
suspect he would still be maintaining it in 2024. He would like to <a href="https://github.com/PCRE2Project/pcre2/issues/426">hand it
off</a> while he can help with the transition.</p>

<h4>Passing the torch</h4>

<p>I emailed Hazel with a few questions about his thoughts on
long-term free-software maintenance, changes to the industry, and what
he might do once PCRE was handed off. Hazel wrote that he does not
have any post-PCRE plans. All of <a href="http://quercite.dx.am/">his projects</a>, with the exception of the <a href="https://github.com/PhilipHazel/b2pf">base to presentation
form</a> (B2PF) library for converting Unicode characters for
printing, were started while he was still working. "Since I retired I
haven't felt a lack of anything enough to spur me into writing something
new". He added that he would continue to maintain his non-PCRE2
projects "if necessary" and would help with PCRE2 if needed.</p>

<p>When asked how new generations of tools, and developers, had
changed his work habits, Hazel replied that he has changed
little. "I am sufficiently old that I am well stuck in my ways, and
haven't changed how I do things since the 90s" with the exception
of moving development to GitHub. He admitted that he was not good at
anticipating or keeping up with trends in development. For example, he
said he was not aware of Unicode when he began PCRE development, so it
was written to support ASCII and with a limit of 64K for compiled
patterns. Others had to persuade him to extend PCRE with Unicode
support, and the option for larger patterns. Contributors,
he said, have not changed. The world has, though:</p>

<blockquote>
When I was born, there were no digital computers, though their
predecessors, for example the Colossus at Bletchley Park, were around. The
world has gone from nothing to where we are now in just one lifetime.
Incredible! What particularly amazes me more than the CPU power is the
amount of storage that I carry in my pocket.
</blockquote>

<p>Hazel did offer some advice for those starting new software
projects, though he noted he was not the first to make this point:</p>

<blockquote>
It's worth remembering that the effort needed to maintain a piece of
successful software over its lifetime far outweighs the effort of
writing it in the first place. In the case of PCRE there have been
several major re-designs and re-writes of the internals as
well as continual extensions to the user-visible features.
</blockquote>

<p>He also suggested that developers think about how software would be
tested as it is designed: "Effort put into building test harnesses is
never wasted."</p>

<p>I asked Hazel, given the recent <a href="https://lwn.net/Articles/967866/">XZ backdoor</a> attempt, how
he intended to vet any prospective PCRE2 maintainers. He replied that it
was a good question "to which I have no answer. I will have to see
who (if anyone) makes an offer". To date, he said he had received
"no communications whatsoever" about taking over the
project. Perhaps, once the word gets out more widely, a qualified
maintainer will step forward to take PCRE2 into the future.</p><br clear="all">
               <br clear="all">
               <hr><p>
           (<a href="https://lwn.net/Login/?target=/Articles/978463/">Log in</a> to post comments)
           </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Is Google deliberately breaking Firefox? (102 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=40736397</link>
            <guid>40736397</guid>
            <pubDate>Thu, 20 Jun 2024 08:40:35 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=40736397">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="40736601"><td></td></tr>
                <tr id="40736880"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40736880" href="https://news.ycombinator.com/vote?id=40736880&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>On Linux (Kubuntu with KDE and Wayland), I cannot use Youtube at all as it freezes for a long time when I start playing a video. It plays the sound but the browser stays frozen for around half a minute or so. It does eventually start showing the video as well... Do you know if there's any known issue for this?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="40736929"><td></td></tr>
                <tr id="40736973"><td></td></tr>
                        <tr id="40741309"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40741309" href="https://news.ycombinator.com/vote?id=40741309&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>Not sure if it's related, but I have been having multiple issues on multiple sites related to Firefox, and where the issues go away when using Chrome.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736891"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40736891" href="https://news.ycombinator.com/vote?id=40736891&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>Doesn't that confirm that google is breaking firefox? We can't prove deliberately without evidence, but it seems to fit</p><p>Firefox is fixing youtube's bug because google won't fix a bug</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40736896"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40736896" href="https://news.ycombinator.com/vote?id=40736896&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>Google pays money to Mozilla for being a default search engine. I think "Google breaking firefox" is kind of conspiracy.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="40737034"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_40737034" href="https://news.ycombinator.com/vote?id=40737034&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>Google only pays because Firefox has enough users to justify it. If enough users switch to Chrome because of broken Google-owned websites, why would they keep paying?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="40737072"><td></td></tr>
                  <tr id="40737085"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_40737085" href="https://news.ycombinator.com/vote?id=40737085&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>From the zdnet interview with Johnathan Nightingale someone else linked:</p><p>"All of this is stuff you're allowed to do to compete, of course. But we were still a search partner, so we'd say 'hey what gives?' And every time, they'd say, 'oops. That was accidental. We'll fix it in the next push in 2 weeks."</p><p>"Over and over. Oops. Another accident. We'll fix it soon. We want the same things. We're on the same team. There were dozens of oopses. Hundreds maybe?"</p><p>"I'm all for 'don't attribute to malice what can be explained by incompetence' but I don't believe Google is that incompetent. I think they were running out the clock. We lost users during every oops. And we spent effort and frustration every clock tick on that instead of improving our product. We got outfoxed for a while and by the time we started calling it what it was, a lot of damage had been done,"</p><p>When exactly should we shift our framing of an issue from "conspiracy theory" to "actual concern"?</p></div></td></tr>
        </tbody></table></td></tr>
                              <tr id="40736702"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736702" href="https://news.ycombinator.com/vote?id=40736702&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>I don't have much problems (Firefox on Mac) but seeing how many others complain I guess it is just a matter of time before I get moved to another A/B testing "experiment" testing how much I can endure before I give up and switch to Chrome (it won't happen).</p><p>Seeing how many of the users report the problem goes away if they let Firefox report as Chrome I personally am rather sure this is intentionally from Googles side:</p><p>Yes, I believe there are some real bugs, but I also think Google do take advantage of "useful" bugs to force us over to Chrome.</p><p>So I have decided to put my money where my mouth is and since last month I am a nebula subscriber. I am also considering Patreon.</p><p>Please consider doing the same, and please do write competition authorities in your country and do ask about when they will look into Googles rampant abuse of market position.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40736786"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40736786" href="https://news.ycombinator.com/vote?id=40736786&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>Hanlon's Razor: <i>Never attribute to malice that which can adequately be explained by stupidity.</i></p><p>I feel its far more likely Google devs are just lazy and don't bother to test in Firefox, much like devs at pretty much every company these days. Unfortunate, but (probably) not part of some deliberate evil plan.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40736837"><td></td></tr>
            <tr id="40736919"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40736919" href="https://news.ycombinator.com/vote?id=40736919&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>Devs are lazy, but management systematically underfunds the web test team to keep it difficult to test on other browsers.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736960"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40736960" href="https://news.ycombinator.com/vote?id=40736960&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>Never apply Hanlon's razor to that which can be adequately be explained by disregard for the consequences.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40739207"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40739207" href="https://news.ycombinator.com/vote?id=40739207&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>At a certain size, making sure ones company doesn't destroy whole ecosystems should be a management responsibility.</p><p>Also, as pointed out by others, when again and again these stupidities benefits the bottom line there is good reason to ask if someone somewhere doesn't have a bonus that goes up with every mistake.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40737030"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40737030" href="https://news.ycombinator.com/vote?id=40737030&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>No I think the lack of testing is due to laziness but a concerted effort to minimally test FF. Which comes down to malice.</p><p>Now, if YT and Chrome were distaste companies, then we might not have this problem...</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736886"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40736886" href="https://news.ycombinator.com/vote?id=40736886&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>this is right for individuals, not corporations like those where every single decision is reviewed in meetings. you should actually apply the opposite for them : guilty unless proven innocent</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40737012"><td></td></tr>
            <tr id="40738421"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40738421" href="https://news.ycombinator.com/vote?id=40738421&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>Hanlon's Razor is for applying to single instances.</p><p>When you have a long-standing pattern of behavior, you need to start using critical thinking, instead.</p><p>Is there a benefit to Google from breaking Firefox?</p><p>Yes, clearly.</p><p>Does Google have the technical competency to avoid breaking Firefox if they want to?</p><p>I would say this is very likely.</p><p>If you misapply Hanlon's Razor where it's no longer appropriate, you're liable to cut yourself off from the truth.</p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="40736939"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736939" href="https://news.ycombinator.com/vote?id=40736939&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>Let's face it. Chrome is the new Internet Explorer. Especially when it comes to google and microsoft websites 'extending' the standard.</p><p>They may not be using explicit "Works best with Internet Explorer" stickers, but I come across a "requires edge or chrome to work properly" or "for best results"-style popup at least twice a week. Or sometimes things just straight-up don't work until you switch to chrome.</p><p>Don't get me started on text-fragments.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736803"><td></td></tr>
            <tr id="40736542"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736542" href="https://news.ycombinator.com/vote?id=40736542&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>I use Firefox for most things at home, including a lot of browsing YouTube. I don't have the issues you're describing. Though I am on YT Premium and use uBlock.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="40736916"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40736916" href="https://news.ycombinator.com/vote?id=40736916&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>&gt; Though I am on YT Premium and use uBlock.</p><p>YT Premium is supposed to be ad-less? What the advantages of uBlock here?</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40736947"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40736947" href="https://news.ycombinator.com/vote?id=40736947&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>They might not show you the ads but I guarantee the code is still in the background keeping track of your habits so they can show you more targeted ads elsewhere.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40737090"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40737090" href="https://news.ycombinator.com/vote?id=40737090&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>uBlock, not much but SponsorBlock is very useful.
I am using all of those with YT Premium and I do have issues. I was recently offered their redesign and it made it a lot worse. It's hard to watch a video uninterrupted now.
Note that I also chose not to allow DRM videos, so no Netflix on Firefox for me. This might actually influence the codecs used by Youtube and these issues might only appear on "fallback" codecs when you refuse DRM ones.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="40736522"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736522" href="https://news.ycombinator.com/vote?id=40736522&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>I have found, rather amusingly, that Firefox for Android runs YouTube <i>better than the official Android app</i>. The official app randomly closes itself for no reason during long videos, while the web version in Firefox stays up forever (even in the background!)</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="40736869"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40736869" href="https://news.ycombinator.com/vote?id=40736869&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>Usually when you have a choice of using a web site or using an app you are better off using the web site.  There is the problem of React pages showing you stale or invalid content in the process of re-re-re-rendering but on iOS I find some apps basically render right, others (like Skype these days) are like a bad React app squared.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="40736489"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736489" href="https://news.ycombinator.com/vote?id=40736489&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>The Google Cloud web interface is horribly slow for me in Firefox. For instance, while filtering logs, it can take a few seconds for my keystrokes to show up. This is the only website I've noticed performing poorly like this.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="40736935"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40736935" href="https://news.ycombinator.com/vote?id=40736935&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>that issue is visible in any browser, the GCP console is really  bad in some places. for example checking metrics can freeze chrome on a desktop with 7800x3d+64gb ram</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736943"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40736943" href="https://news.ycombinator.com/vote?id=40736943&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>If you want to make a case against SPA/Angular just show someone the monstrosity GCP dashboard is.</p><p>Visually ugly, poor performance, functionally buggy with no sign of support for an independent developer.</p><p>I know all of that is not Angular's fault but some of it sure is.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736574"><td></td></tr>
            <tr id="40736642"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40736642" href="https://news.ycombinator.com/vote?id=40736642&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>Same. Disabling DarkReader extension made it a bit more tolerable.</p><p>For anything other than logs, I just use the Lens desktop app.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="40736585"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736585" href="https://news.ycombinator.com/vote?id=40736585&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>I have not noticed issues with YouTube, but it's been clear to me how gimped Firefox is compared with Chrome on Google Meet. Some missing minor features, sluggish performance and lower streaming quality to name a few.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="40736623"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40736623" href="https://news.ycombinator.com/vote?id=40736623&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>They did recently (last 6-12 months) add virtual backgrounds to Meet in FF, and it feels fine now. That said I only use Meet on FF and Safari so maybe I don't know what I'm missing out on.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736844"><td></td></tr>
                  <tr id="40736770"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736770" href="https://news.ycombinator.com/vote?id=40736770&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>Photo edits sometimes won't respond on Google Photos in Firefox. It is not just Google. Microsoft Teams, Excel online etc don't work very well in Firefox and it is deliberate.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40740191"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40740191" href="https://news.ycombinator.com/vote?id=40740191&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>There is a simple solution: do not use youtube. After I stopped watching youtube my side projects finally started moving forward, and I get quite a few extra hours in a day, especially on weekends. Although I still watch a video or two on archive.org or one of Peertube instances: tilvids, makertube, to name a few. But no more algorithm induced binge watching of random videos till late in the night.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736428"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736428" href="https://news.ycombinator.com/vote?id=40736428&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>I exclusively use Firefox and I don't have major issues with YouTube. I don't know about the other stuff. However, from what I gather, Google often does A/B testing, so different sessions may get served different versions of the same website, and I do see this often. Because of that, sometimes it's hard to pin down where it's breaking.</p><p>Edit to add: To clarify and be more specific, I watched a live stream on YouTube recently and it seemed to work fine.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40737166"><td></td></tr>
            <tr id="40736903"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736903" href="https://news.ycombinator.com/vote?id=40736903&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>&gt; Is Google deliberately breaking Firefox?</p><p>Yes, and they have been doing so for years.</p><p>&gt; a former Mozilla exec who bemoaned intentional sabotage from the Google camp over several years. Johnathan Nightingale, who worked as a GM &amp; VP on Firefox, saw relations between Google and Firefox sour as the former grew more ambitious for browser market share. Not only did YouTube suffer, he saw "oopses" hitting functionality and performance in other popular Google properties like Gmail and Google Docs.</p><p><a href="https://www.tomshardware.com/news/youtube-responds-to-delayed-loading-in-rival-browser-complaints" rel="nofollow">https://www.tomshardware.com/news/youtube-responds-to-delaye...</a></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736694"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736694" href="https://news.ycombinator.com/vote?id=40736694&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>I only use Firefox, I haven't open Chrome in months... But I try to stay away from Google most of the time, so probably not the best.</p><p>And as some other people it's better Firefox on Android than the app. I don't have to deal with adds on Firefox, the official app always have 2 or 4 adds waiting for the next video</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736533"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736533" href="https://news.ycombinator.com/vote?id=40736533&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>I use all the time with Fedora Linux. No such problems, including a new experimental ui available for premium users.</p><p>Now the experience with other Google services, plus Firefox mobile is terrible. I log into Gmail from time to time, it's awful. No, I don't want to use the app, I have other reasons and procedures.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736521"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736521" href="https://news.ycombinator.com/vote?id=40736521&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>I've had similar experiences. Switching to Safari seems to help when this happen. I don't expect they'll be doing this on purpose.</p><p>It could be that the encoded video block required by Firefox and not used that much, as such the cache hit rates are bad requiring trips back to an overloaded origin server.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40738560"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40738560" href="https://news.ycombinator.com/vote?id=40738560&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>I faced this too but I attributed it to some obscure bug or setup issue. Seems like I am not alone.</p><p>Google sheets takes forever to load (Just 150 records on the biggest sheet. 9 other sheets with paltry records). Any keypress or scroll takes 10 seconds or more to take effect. I am torn between getting work done and being annoyed by how I am forced to use Chrome. Didn't yield, yet.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40739377"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40739377" href="https://news.ycombinator.com/vote?id=40739377&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>Does no one use Brave?  I like how there's a Scripts on/off toggle, and various shields</p><p>Lots of stuff breaks, but I blame stuff, not the browser</p><p>Turning off my ability to turn off autoplay videos is what made me flee, angrily, Chrome.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40739244"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40739244" href="https://news.ycombinator.com/vote?id=40739244&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>I always use YouTube in Firefox because it allows one to disable autoplay. For the past week I've had frequent issues with buffering/stuttering, but reloading the page tends to fix it.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40737255"><td></td></tr>
            <tr id="40736890"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736890" href="https://news.ycombinator.com/vote?id=40736890&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>I am a fanatic Firefox user who develops in it most of the time so in the last few places I’ve worked (except for one) I was keeping our products compatible with it.</p><p>We have one screen in our admin Ui which loads way too much data and it is notably slow on FF,  but otherwise it is great.</p><p>I have definitely noted sites hat are incompatible with Firefox are turning up but YouTube is by far the worst and most common.  So I browse YouTube with Edge.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736519"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736519" href="https://news.ycombinator.com/vote?id=40736519&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>I haven't noticed any problems with Youtube on Firefox, but I also have some privacy toggles enabled that lie about my user agent.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40737116"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40737116" href="https://news.ycombinator.com/vote?id=40737116&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>I don't think Google cares at this point to break Firefox on purpose vs simply not testing changes on it at all.</p><p>Whenever I need to use Chrome for whatever reason, I simply open Microsoft Edge - not that Microsoft is any better than Google in general, but at least it doesn't own the Internet.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40737183"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40737183" href="https://news.ycombinator.com/vote?id=40737183&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>Edge is Chrome-based these days unfortunately.
And they first leveraged their ad platform to feed people Chrome, then they broke the internet where they could for competitors to gain a greater marketshare to ship this spyware in browserdisguise and now they wanna eat the whole cake.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="40737565"><td></td></tr>
                <tr id="40737681"><td></td></tr>
                  <tr id="40736523"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736523" href="https://news.ycombinator.com/vote?id=40736523&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>Malice, incompetence...</p><p>Every team has a mountain of bugs screaming for their attention and a director losing their mind over AI.</p><p>And no one gets promoted for fixing bugs anymore.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40736543"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40736543" href="https://news.ycombinator.com/vote?id=40736543&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>&gt; Every team has a mountain of bugs screaming for their attention and a director losing their mind over AI.</p><p>I don't know whether to laugh or cry.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40736718"><td></td></tr>
                        <tr id="40737466"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40737466" href="https://news.ycombinator.com/vote?id=40737466&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>Main thing I've noticed is missing/fewer features, rather than outright breakage. Particularly Google meet on Firefox missing the fancy background effects and things like that.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736650"><td></td></tr>
            <tr id="40736581"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736581" href="https://news.ycombinator.com/vote?id=40736581&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>Something to note is there is a thousand of experiments running on YouTube at the same time. They test a lot of stuff directly on users. Try VPN, change user agent and/or open in private browsing mode to get a different set of feature flags.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40737710"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40737710" href="https://news.ycombinator.com/vote?id=40737710&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>I think the youtube streaming issue can be fixed with the h264ify extension. I've had it installed for years and I think that was why I did so.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736608"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736608" href="https://news.ycombinator.com/vote?id=40736608&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>Usually I have zero issues with Google Docs (which I only use because of my company) or Youtube (which is use quite rarely). I'm using uBlock though, not sure if it makes any difference. Never used Google Photos.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736647"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736647" href="https://news.ycombinator.com/vote?id=40736647&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>I switched to Firefox, start of this year, I have some issues with YouTube, but I think it must be related to Ad blocker I use.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40736518"><td></td></tr>
                <tr id="40736534"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40736534" href="https://news.ycombinator.com/vote?id=40736534&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>"Never attribute to malice that which is adequately explained by stupidity."
(stupidity is the wrong term here, lazyness is more apt).</p><p>Firefox is a the one different browser with an entirely different pedigree. Assumptions made about _all– other browser will not necessarily hold true for Firefox.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40737043"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40737043" href="https://news.ycombinator.com/vote?id=40737043&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>&gt;"Never attribute to malice that which is adequately explained by stupidity." (stupidity is the wrong term here, lazyness is more apt).</p><p>Ah, but sufficiently advanced stupidity is indistinguishable from malice</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40737707"><td></td></tr>
                        <tr id="40736758"><td></td></tr>
                  <tr id="40736539"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40736539" href="https://news.ycombinator.com/vote?id=40736539&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div>
                  <p>I’ve definitely noticed issues with YouTube on Firefox where a video will start buffering for ages, but I’ve chalked that up to YouTube and uBlock Origin breaking each other. Quite often it’s been a better experience to just use mpv (yt-dlp) instead of the website. Haven’t tried it on Chrome though.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40737003"><td></td></tr>
            <tr id="40736801"><td></td></tr>
            <tr id="40737970"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40737970" href="https://news.ycombinator.com/vote?id=40737970&amp;how=up&amp;goto=item%3Fid%3D40736397"></a></center>    </td><td><br><div><p>Are there people who still watch videos from that cesspit domain called youtube.com?</p><p>Do yourself a favour and use Libretube/NewPipe/Tartube/mpv, or any other youtube-dl/yt-dlp based wrapper.</p><p>No trackers, no ads whose aggregate duration is longer than the video itself, no idiotic Google employees who regularly break the UI, no aggressive policies against adblockers or any other extensions that you want to use.</p><p>Avoiding youtube.com and making sure that not a single dime goes in Google's pockets for providing such a shitty service is a moral duty. Directly fund video creators through Patreon/PayPal if you want to feel less guilty.</p></div></td></tr>
        </tbody></table></td></tr>
            </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Lessons Learned from Scaling to Multi-Terabyte Datasets (118 pts)]]></title>
            <link>https://v2thegreat.com/2024/06/19/lessons-learned-from-scaling-to-multi-terabyte-datasets/</link>
            <guid>40735859</guid>
            <pubDate>Thu, 20 Jun 2024 07:20:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://v2thegreat.com/2024/06/19/lessons-learned-from-scaling-to-multi-terabyte-datasets/">https://v2thegreat.com/2024/06/19/lessons-learned-from-scaling-to-multi-terabyte-datasets/</a>, See on <a href="https://news.ycombinator.com/item?id=40735859">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			
<p>This post is meant to guide you through some of the lessons I’ve learned while working with multi-terabyte datasets. The lessons shared are focused on what someone may face as the size of their dataset scales up and some of the things I’ve done to overcome them. I hope you’re waiting for something to finish running while reading this!</p>



<p>Remember, this is not a rigid guide. It’s about introducing concepts and explaining why you should start applying them. Numerous other tools can surpass the ones I’ve used, and I strongly encourage you to take the initiative and explore them independently. Your active exploration is key to your professional growth.</p>



<p>I’ve divided this post into two sections: scaling on single machines and multi-machine scaling. The goal is to maximize your available resources and reach your goals as quickly as possible.</p>



<p>Lastly, I want to emphasize that no optimization or scaling can compensate for a flawed algorithm. Before scaling up, it’s crucial to evaluate your algorithm. This should always be your first step, providing a confident guide for your work.</p>



<h2>Scaling on a Single Machine</h2>



<h3>Joblib</h3>



<p>Compute is the first bottleneck that comes to mind when scaling. Scaling up computations can be done in several different practical ways. If you’re a data scientist or a machine learning engineer, you might already be familiar with Joblib, a library used to run code in parallel (among other things). It is often used in other libraries, such as scikit-learn or XGBoost.</p>



<p>The process of parallelizing something using Joblib is simple, as follows (modified for clarity from the Joblib docs):</p>


<div><pre title="">&gt;&gt;&gt; from joblib import Parallel, delayed
&gt;&gt;&gt; from math import sqrt

&gt;&gt;&gt; parallel_mapper = Parallel(n_jobs=-1)
&gt;&gt;&gt; delayed_func = delayed(sqrt)
&gt;&gt;&gt; jobs = [
    delayed_func(x**2)
    for x in range(10)
]
&gt;&gt;&gt; parallel_mapper(jobs)
[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0]
</pre></div>


<p>Joblib is a great way to scale up your parallel workloads. It’s used in scikit-learn and other tools, proving reliable for many workloads. This isn’t even considering its other excellent features regarding memoization or Fast Compressed Persistence. Joblib is helpful for just making a function parallelizable across all your CPU cores.</p>



<h3>GNU Parallel</h3>



<p>GNU Parallel is a powerful tool for preprocessing or extracting data in the CLI. It differs from Joblib as it can be used outside a script and is versatile. You can even run other Python scripts in parallel. One of the most common use cases is decompressing many files simultaneously. Here’s how I would do it:</p>


<div><pre title="">&gt; ls
random_0.zip&amp;nbsp; random_2.zip&amp;nbsp; random_4.zip&amp;nbsp; random_6.zip&amp;nbsp; random_8.zip
random_1.zip&amp;nbsp; random_3.zip&amp;nbsp; random_5.zip&amp;nbsp; random_7.zip&amp;nbsp; random_9.zip
...

&gt; mkdir output
&gt; ls | parallel --eta --bar "unzip -q {} -d output/"
100% 10:0=0s random_9.zip

&gt; ls output/
random_0.txt&amp;nbsp; random_2.txt&amp;nbsp; random_4.txt&amp;nbsp; random_6.txt&amp;nbsp; random_8.txt
random_1.txt&amp;nbsp; random_3.txt&amp;nbsp; random_5.txt&amp;nbsp; random_7.txt&amp;nbsp; random_9.txt
...
</pre></div>


<p>These commands are pretty straightforward if you have used a Linux terminal before. The main part to focus on is piping the file names to <code>parallel</code> so that <code>unzip</code> can decompress them.</p>



<p>For any task, once you have a bash command set to run on a single file, you can parallelize it by modifying your command slightly. By default, parallel uses all available CPU cores and can execute commands on multiple machines using ssh, meaning that it could be used as an ad-hock computing cluster.</p>



<p>Another use case is downloading a large number of files. With <code>wget</code> and <code>parallel</code> and a list of files to download, writing a quick one-liner to download all the files in parallel is easy. Other tools, such as <code>axel</code> and <code>aria2c</code>, can do this just as well, but I’ve found this to work better when I need to download many smaller files.</p>



<p><strong>A quick note:</strong> While you can use this to download many files, be aware that this can cause strain on servers by creating multiple connections, leading to network congestion and reduced performance for other users or even being seen as a DOS attack. This increased server load can be particularly problematic for smaller websites or servers with limited bandwidth. Famously, aria2c <a href="https://github.com/aria2/aria2/issues/1039">has rejected proposals</a> to increase the maximum number of connections from 16, even though computers have gotten faster, and network bandwidth has increased dramatically. Given their position, I agree with their decisions and ask you to act responsibly when downloading.</p>



<p>Another point I’d like to mention is that while you can get things working quicker with Parallel, it may be challenging to manage <code>bash</code> commands, especially for a beginner where the rest of the team might be more Python/traditional programming language focused. Due to this, I generally recommend keeping Parallel for one-off tasks rather than writing complex ETL pipelines in <code>bash</code>. Maintainable code is second to only no code at all.</p>



<h2>Scaling to Multiple Machines</h2>



<h3>When to Start Using Multiple Machines</h3>



<p>One key identifier for when it makes sense to switch to using multiple machines (think Spark or, my favourite, Dask) is when computing is taking too long for your use cases. This could be experiments, data processing, or whatever. The worst timeframe I’ve estimated is some jobs taking months or a year to finish computing if I were to stick to a single instance, even on AWS’s <a href="https://instances.vantage.sh/aws/ec2/u-24tb1.112xlarge">u-24tb1.112xlarge</a> (a beast of a machine). I’m against the waste of any kind, and the better you can utilize the resources available, the better, in my opinion.</p>



<p>By switching to multiple smaller machines, you leverage several performance benefits over a more prominent instance. Depending on your scaling solution, horizontal scaling allows for almost linear scaling across your CPU, memory, and networking with the number of instances you use.</p>



<p>Most reasonably large EC2 instances offer up to 10 GBit internet speeds, which can help alleviate IO bottlenecks, especially if you’re rapidly streaming data to or from S3. If your workload requires data coming in at 50 Gbit/s, you’ve got the option to either use a m7i.48xlarge instance, which costs <code><em>$9.6768</em></code> hourly and runs at 50 GBit, or four m7i.8xlarge instances, which costs <code>$1.6128</code> hourly per instance or <code>$6.4512 hourly</code> for the same network bandwidth.</p>



<p>I selected networking speeds and cost as the two metrics to focus on here, but if you’re looking to maximize your memory and CPU usage, we can compare the previously mentioned u-24tb1.112xlarge. For the exact cost, you can rent out 135 m7i.8xlarge instances. That gives you 4320 CPUs (10x the instance), 17.28TB of RAM, and 1687.5 Gigabit internet speed (~17x the instance)! While RAM is less, I’ve used a general-purpose instance here to scale, not a memory-optimized one. Using the memory-optimized equivalent, we can get 34.56 TB of RAM, with all the other benefits of using multiple machines (redundancy, finer control for the instance size, etc).</p>



<p>Moreover, with the correct backend, I can scale to as many instances as my use case, orchestration tool, or accounting department will allow. This level of scalability is a crucial advantage, enabling you to meet the demands of your workload without being limited by the capabilities of a single instance.</p>



<p>As with everything, there are benefits to your different approaches. It’s your job to evaluate the pros and cons of each solution and determine what works best for your use case. Minimizing cost while maximizing performance is a good exercise in building intuition for these tasks.</p>



<p>However, given these incredible benefits, I only recommend using multiple instances once you’ve understood the bottlenecks you face. I have seen teams start to scale and over-engineer their approach to computing before understanding their use case. I may have even been a part of those teams before learning my lesson. In some instances, <a href="https://adamdrake.com/command-line-tools-can-be-235x-faster-than-your-hadoop-cluster.html">well-written cli tools could process data faster than an entire spark cluster</a>.</p>



<h2>Different Computing Models</h2>



<h3>For Embarrassingly Parallel Workloads</h3>



<p>Embarrassingly Parallel Workloads are generally the easiest to scale compared to other types of workloads. We’ve already touched on how to scale up computing using Joblib or Parallel, but what about scaling to multiple machines? There are quite a few tools to scale up computation. I would recommend using AWS Batch or AWS Lambda for embarrassingly parallel workloads that are one-off. Batch is scalable, and with spot pricing, you can get most of your tasks done at a fraction of the cost of using on-demand instances in a fraction of the time it would take to run them in parallel on a single machine. There are other tools you can use (GCP’s Cloud Run, for example), but I can only recommend AWS Batch for longer-running tasks since that’s what I’ve used in the past.</p>



<p>Since setting up the cluster can be time-consuming and is out of the scope of this post, I’ve included a link <a href="https://medium.com/@jackthecloudguy/scale-out-your-genomics-analysis-with-aws-batch-923c41a3c99">here</a> incase you’re interested in exploring this yourself.</p>



<p>One caveat worth mentioning is that the general throughput of your job will be limited by your read and write speeds more so than the compute speed. If you’re reading from/writing to a database, then the database is likely to be a bottleneck (or even crash). S3 is a viable option for reading and writing, given it’s designed to scale better, but it still has its limits. 3,500 writes and 5,500 reads per second per partitioned prefix. S3 is designed to be invisible when scaling to the user, so you may have little control over how it adapts to the increased throughput.</p>



<p>Once the data is in S3 (or whatever service you use), you can transfer it wherever needed.</p>



<p>This setup is quite tedious but scales well for one-off tasks. With a few iterations, you can reduce the setup time to a few minutes, depending on how well you’ve automated the process and your team’s needs. Generally, I’ve found that the setup time is worth it for the computing and engineering time saved, but you can understand my hesitation in using this for every task.</p>



<h3>Analytical Workloads</h3>



<p>Analytical workloads are a bit more challenging to scale. This is because you’re generally working with a single dataset and trying to do a lot of operations on that dataset. You may also have an element of interactivity, such as things running in a Jupyter Notebook. My go-to tool for scaling up analytical workloads is Dask, with an alternative being Spark. Dask and Spark are open-source tools that allow you to scale up your workloads to multiple machines, with their pros and cons. Both these tools can also be used locally, and their implementations of DataFrames (Dask DataFrame and Spark Dataframe) can be used to scale up existing workloads.</p>



<p>Dask is much easier to set up and install. I can get Dask running locally in a few minutes with a single command (<code>pip install "dask[complete]"</code> by the way). On the other hand, Spark requires a bit more setup, and I’ve found that running on my local machine is a bit more challenging. Dask also comes with the benefit that any data scientist using Pandas or Numpy can get used to it quickly while knowing Spark is an entirely different skill set. Dask is also better integrated with several PyData tools, meaning you can take advantage of them immediately. However, given all this, Spark and the Spark ecosystem are much more mature by comparison, and it’s likely that your team already has invested time into getting a Spark cluster up and running. I run into the occasional bug or performance issue with Dask, while Spark is known to be much more stable due to its maturity. Dask is also not suited for longer-running computations.</p>



<p>Given this, my general recommendation is:</p>



<ul>
<li>If you’re a small team or startup with no infrastructure for big data or distributed computing. In that case, I recommend at least experimenting with Dask, regardless of the team’s experience with Spark. In the time you take to get Spark running locally, you could’ve validated your use case with Dask, and your team will be able to leverage other tools in the PyData space.</li>



<li>If you’re already part of a larger organization that uses Spark or some other significant data infrastructure. In that case, it makes sense to stick with it unless you have a compelling reason not to. I recommend watching <a href="https://www.youtube.com/watch?v=obKZzFRNTxo">Eric Dill’s talk on Is Spark Still Relevant?</a> for why larger organizations prefer to use Spark over more modern tools. It is five years old, so some talking points may be outdated. That said, you should still try Dask since <a href="https://docs.dask.org/en/latest/spark.html#reasons-to-choose-both">you can use both</a>.</li>
</ul>



<h2>Conclusion</h2>



<p>In conclusion, managing and scaling multi-terabyte datasets requires a deep understanding of both your data and the tools at your disposal. By leveraging Joblib and GNU Parallel for single-machine scaling, you can maximize the efficiency of your computational resources. When scaling beyond a single machine is necessary, AWS Batch, Dask, and Spark provide robust solutions for various workloads, from embarrassingly parallel tasks to complex analytical operations.</p>



<p>The key takeaway is to start by optimizing your algorithms before scaling, ensuring you’re not merely amplifying inefficiencies. Actively exploring and adapting new tools can significantly enhance your performance and cost-effectiveness. Successful scaling is as much about strategic planning and resource management as raw computational power. Embrace the learning curve; you’ll be well-equipped to handle even the largest datasets confidently and skillfully.</p>
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Oldest white wine in the world found in a first-century tomb in Spain (189 pts)]]></title>
            <link>https://doi.org/10.1016/j.jasrep.2024.104636</link>
            <guid>40735743</guid>
            <pubDate>Thu, 20 Jun 2024 06:58:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://doi.org/10.1016/j.jasrep.2024.104636">https://doi.org/10.1016/j.jasrep.2024.104636</a>, See on <a href="https://news.ycombinator.com/item?id=40735743">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Protecting Children's Safety Requires End-to-End Encryption (110 pts)]]></title>
            <link>https://simplex.chat/blog/20240601-protecting-children-safety-requires-e2e-encryption.html</link>
            <guid>40735627</guid>
            <pubDate>Thu, 20 Jun 2024 06:37:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://simplex.chat/blog/20240601-protecting-children-safety-requires-e2e-encryption.html">https://simplex.chat/blog/20240601-protecting-children-safety-requires-e2e-encryption.html</a>, See on <a href="https://news.ycombinator.com/item?id=40735627">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="article">
<p>As lawmakers grapple with the serious issue of child exploitation online, some proposed solutions would fuel the very problem they aim to solve. Despite expert warnings, the Belgian Presidency persists in pushing for the implementation of client-side scanning on encrypted messaging services, rebranding the effort as "upload moderation". Their <a href="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=COM%3A2022%3A209%3AFIN&amp;qid=1652451192472">latest proposal</a> mandates that providers of private communication services obtain user consent for AI-based scanning of their private chats. If users do not consent, they will be prohibited from sharing images, videos, and URLs.</p>
<p>Privacy critics have long pushed for measures like centralized scanning of private photos and messaging data, arguing it could detect illicit content. However, invasive monitoring of private communications would create detrimental risks that far outweigh any perceived benefits.</p>
<h2 id="why-were-taking-action" tabindex="-1">Why we’re taking action</h2>
<p>SimpleX Chat signed a <a href="https://www.globalencryption.org/2024/05/joint-statement-on-the-dangers-of-the-may-2024-council-of-the-eu-compromise-proposal-on-eu-csam/">joint statement</a> about the dangers of the EU compromise proposal on EU CSAM because maintaining end-to-end encryption is crucial for protecting privacy and security for everyone, including and especially children.</p>
<p>We urge the Ministers in the Council of the EU to stand firm against any scanning proposals that undermine end-to-end encryption, which would enable mass surveillance and misuse by bad actors, whether framed as client-side scanning, upload moderation, or any other terminology. Compromising this basic principle opens the door to devastating privacy violations. We also urge any organizations or individuals reading this to write to their representatives and voice their concerns. European Digital Rights has <a href="https://edri.org/our-work/be-scanned-or-get-banned/">outlined these issues</a> in greater detail for anyone seeking more information.</p>
<h2 id="why-compromising-privacy-endangers-children" tabindex="-1">Why compromising privacy endangers children</h2>
<p>The core issue is that compromising encryption and privacy makes innocent people vulnerable to malicious hackers and criminals seeking to exploit users data. Centralized scanning systems become a tempting target, potentially exposing millions of private family photos when breached. This would easily open up avenues for blackmail, abuse, and victimization of children. A case in point is the recent <a href="https://techcrunch.com/2024/01/17/unredacted-meta-documents-reveal-historical-reluctance-to-protect-children-new-mexico-lawsuit/">criminal charges</a> against Meta in New Mexico, which highlights how the tech giant's algorithms enabled child exploitation by encouraging connections between minors and sexual predators. Privacy-eroding initiatives like client-side scanning would play into the hands of malicious actors by making more sensitive information accessible and weaponized in the same way that it has been on Meta platforms.</p>
<h2 id="what-should-be-done" tabindex="-1">What should be done</h2>
<p>Rather than undermining privacy, to achieve child safety online users should be empowered with high standards for encryption and data control. For example, adopting a model where children (and users in general) cannot be discovered or approached on networks unless they or their parents permit it, similar to the SimpleX network privacy model. Intelligent multi-device synchronization could enable this oversight without compromising end-to-end encryption overall. It’s always possible to protect children without opening everyone, especially children themselves, to greater vulnerabilities due to such proposals.</p>
<p>However, some recent legislative efforts have bizarrely moved in the opposite direction by seeking to limit parental access. The chilling truth is that the least private platforms have been major enablers of child exploitation. Eroding privacy protections on other services will only aid criminals further, not protect children. Preserving strong encryption and user privacy must be the foundation for any credible effort to combat online child exploitation. Initiatives trading privacy for supposed safety are not just technically flawed, but would achieve the exact opposite of their stated intent. We must avoid being gaslighted by narratives that defy logic, and instead provide users with the highest possible standards for privacy protections as a core principle.</p>
<p>Protecting end-to-end encryption without carving out backdoors or vulnerabilities should be non-negotiable for children's and everyone’s safety. It is critical to redirect the discourse to focus on taking genuine privacy further by protecting against <a href="https://simplex.chat/blog/20240416-dangers-of-metadata-in-messengers.html">metadata hoarding</a> and other means by which people’s data can be abused or subjected to surveillance.</p>
</div></div>]]></description>
        </item>
    </channel>
</rss>