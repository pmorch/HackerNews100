<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 23 Jul 2024 06:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[The Elegance of the ASCII Table (134 pts)]]></title>
            <link>https://danq.me/2024/07/21/ascii/</link>
            <guid>41040543</guid>
            <pubDate>Mon, 22 Jul 2024 22:31:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://danq.me/2024/07/21/ascii/">https://danq.me/2024/07/21/ascii/</a>, See on <a href="https://news.ycombinator.com/item?id=41040543">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
	<p>
	If you’ve been a programmer or programming-adjacent nerd<sup><a id="footnote-ref-23995-1" name="footnote-ref-23995-1" href="#footnote-23995-1" title="Programming-adjacent? Yeah. For example, geocachers who’ve ever had to decode a puzzle-geocache where the coordinates were presented in binary (by which I mean: a binary representation of ASCII) are “programming-adjacent nerds” for the purposes of this discussion.">1</a></sup>
	for a while, you’ll have doubtless come across an <abbr title="American Standard Code for Information Interchange">ASCII</abbr> table.
	</p>
	<p>
	An <abbr title="American Standard Code for Information Interchange">ASCII</abbr> table is useful. But did you know it’s also <em>beautiful and elegant</em>.
	</p>
	<figure id="attachment_23996" aria-describedby="caption-attachment-23996">
	<a href="#lightbox-p-attachment_23996" title="Zoom in on image" aria-haspopup="dialog" role="button"><img fetchpriority="high" decoding="async" src="https://danq.me/_q23u/2024/07/the-martian-ascii-table-640x540.jpg" alt="Frames from the scene in The Martian where Mark Watney discovers Beth Johanssen's ASCII table." width="640" height="540" srcset="https://danq.me/_q23u/2024/07/the-martian-ascii-table-640x540.jpg 640w, https://danq.me/_q23u/2024/07/the-martian-ascii-table-980x827.jpg 980w, https://danq.me/_q23u/2024/07/the-martian-ascii-table.jpg 1280w" sizes="100vw"></a>
	<figcaption id="caption-attachment-23996">
		Even non-programmer-adjacent nerds may have a cultural awareness of <abbr title="American Standard Code for Information Interchange">ASCII</abbr> thanks to books and
		films like <em>The Martian</em><sup><a id="footnote-ref-23995-2" name="footnote-ref-23995-2" href="#footnote-23995-2" title="In both the book and the film, Mark Watney divides a circle around the recovered Pathfinder lander into segments corresponding to hexadecimal digits 0 through F to allow the rotation of its camera (by operators on Earth) to transmit pairs of 4-bit words. Two 4-bit words makes an 8-bit byte that he can decode as ASCII, thereby effecting a means to re-establish communication with Earth.">2</a></sup>.
	</figcaption>
	</figure><p><abbr title="American Standard Code for Information Interchange">ASCII</abbr>‘s still very-much around; even if you’re transmitting modern Unicode<sup><a id="footnote-ref-23995-3" name="footnote-ref-23995-3" href="#footnote-23995-3" title="Y’know, so that you can type all those emoji you love so much.">3</a></sup> the
	most-popular encoding format UTF-8 is specifically-designed to be backwards-compatible with <abbr title="American Standard Code for Information Interchange">ASCII</abbr>! If
	you decoded <em>this page</em> as <abbr title="American Standard Code for Information Interchange">ASCII</abbr> you’d get the gist of it… so long as you ignored the garbage
	characters at the end of this sentence! 😁
	</p><h2>
	History
	</h2>
	<p>
	<abbr title="American Standard Code for Information Interchange">ASCII</abbr> was initially standardised in <a href="https://www.sensitiveresearch.com/Archive/CharCodeHist/X3.4-1963/index.html">X3.4-1963</a> (which just rolls off the tongue, doesn’t it?) which assigned meanings to 100 of the
	potential 128 codepoints presented by a 7-bit<sup><a id="footnote-ref-23995-4" name="footnote-ref-23995-4" href="#footnote-23995-4" title="ASCII is often thought of as an 8-bit code, but it’s not: it’s 7-bit. That’s why virtually every ASCII message you see starts every octet with a zero. 8-bits is a convenient number for transmission purposes (thanks mostly to being a power of two), but early 8-bit systems would be far more-likely to use the 8th bit as a parity check, to help detect transmission errors. Of course, there’s also nothing to say you can’t just transmit a stream of 7-bit characters back to back!">4</a></sup>
	binary representation: that is, binary values 0000000 through 1111111:
	</p>
	<figure id="attachment_23997" aria-describedby="caption-attachment-23997">
	<a href="#lightbox-p-attachment_23997" title="Zoom in on image" aria-haspopup="dialog" role="button"><img decoding="async" src="https://danq.me/_q23u/2024/07/x3.4-1963-ascii-table-640x385.jpg" alt="Scan of a X3.4-1963 ASCII table." width="640" height="385" srcset="https://danq.me/_q23u/2024/07/x3.4-1963-ascii-table-640x385.jpg 640w, https://danq.me/_q23u/2024/07/x3.4-1963-ascii-table-980x589.jpg 980w" sizes="100vw"></a>
	<figcaption id="caption-attachment-23997">
		Notably absent characters in this first implementation include… the entire lowercase alphabet! There’s also a few quirks that modern <abbr title="American Standard Code for Information Interchange">ASCII</abbr> fans might spot, like the curious “up” and “left” arrows at the bottom of column 101____ and the ACK and ESC control
		codes in column 111____.
	</figcaption>
	</figure>
	<p>
	If you’ve already guessed where I’m going with this, you might be interested to look at the X3.4-1963 table and see that yes, many of the same elegant design choices I’ll be talking
	about later <em>already existed</em> back in 1963. That’s really cool!
	</p>
	
	<p>
	In case you’re not yet intimately familiar with it, let’s take a look at an <abbr title="American Standard Code for Information Interchange">ASCII</abbr> table. I’ve
	colour-coded some of the bits I think are most-beautiful:
	</p>
	<p id="image-23995-0">
	<a href="#lightbox-p-image-23995-0" title="Zoom in on image" aria-haspopup="dialog" role="button"><img decoding="async" src="https://danq.me/_q23u/2024/07/ascii-table-with-highlighting.svg" alt="ASCII table with Decimal, Hex, and Character columns."></a>That table only shows decimal and hexadecimal values for each
	character, but we’re going to need some binary too, to really appreciate some of the things that make <abbr title="American Standard Code for Information Interchange">ASCII</abbr> sublime and clever.
	</p>
	<h3>
	Control codes
	</h3>
	<p>
	The first 32 “characters” (and, arguably, the final one) aren’t things that you can <em>see</em>, but commands sent between machines to provide additional instructions. You might be
	familiar with carriage return (<code>0D</code>) and line feed (<code>10</code>) which mean “go back to the beginning of this line” and “advance to the next line”,
	respectively<sup><a id="footnote-ref-23995-5" name="footnote-ref-23995-5" href="#footnote-23995-5" title="Back when data was sent to teletype printers these two characters had a distinct different meaning, and sometimes they were so slow at returning their heads to the left-hand-side of the paper that you’d also need to send a few null bytes e.g. 0D 10 00 00 00 00 to make sure that the print head had gotten settled into the right place before you sent more data: printers didn’t have memory buffers at this point! For compatibility with teletypes, early minicomputers followed the same carriage return plus line feed convention, even when outputting text to screens. Then to maintain backwards compatibility with those systems, the next generation of computers would&nbsp;also use both a carriage return and a line feed character to mean “next line”. And so, in the modern day, many computer systems (including Windows most of the time, and many Internet protocols) still continue to use the combination of a carriage return and a line feed character every time they want to say “next line”; a redundancy build for a chain of backwards-compatibility that ceased to be relevant decades ago but which remains with us forever as part of our digital heritage.">5</a></sup>.
	Many of the others don’t see widespread use any more – they were designed for very different kinds of computer systems than we routinely use today – but they’re all still there.
	</p>
	<p>
	32 is a power of two, which means that you’d rightly expect these control codes to mathematically share a particular “pattern” in their binary representation with one another, distinct
	from the rest of the table. And they do! <strong>All of the control codes follow the pattern <code>00_____</code>:</strong> that is, they begin with two zeroes. So when you’re reading
	7-bit <abbr title="American Standard Code for Information Interchange">ASCII</abbr><sup><a id="footnote-ref-23995-6" name="footnote-ref-23995-6" href="#footnote-23995-6" title="Got 8 binary digits in front of you? The first digit is probably zero. Drop it. Now you’ve got 7-bit ASCII. Sorted.">6</a></sup>, if it starts with
	<code><strong>00</strong></code>, it’s a non-printing character. Otherwise it’s a printing character.
	</p>
	<p>
	Not only does this pattern make it easy for humans to read (and, with it, makes the code less-arbitrary and more-beautiful); it also helps if you’re an ancient slow computer system
	comparing one bit of information at a time. In this case, you can use a decision tree to make shortcuts.
	</p>
	<figure id="attachment_24000" aria-describedby="caption-attachment-24000">
	<a href="#lightbox-p-attachment_24000" title="Zoom in on image" aria-haspopup="dialog" role="button"><img decoding="async" src="https://danq.me/_q23u/2024/07/punched-paper-tape-rolls-640x316.jpg" alt="Two rolls of punched paper tape." width="640" height="316" srcset="https://danq.me/_q23u/2024/07/punched-paper-tape-rolls-640x316.jpg 640w, https://danq.me/_q23u/2024/07/punched-paper-tape-rolls-1280x631.jpg 1280w, https://danq.me/_q23u/2024/07/punched-paper-tape-rolls-980x483.jpg 980w, https://danq.me/_q23u/2024/07/punched-paper-tape-rolls-1960x966.jpg 1960w" sizes="100vw"></a>
	<figcaption id="caption-attachment-24000">
		That there’s one exception in the control codes: <em>DEL</em> is the <em>last</em> character in the table, represented by the binary number <code><strong>1111111</strong></code>. This
		is a historical throwback to paper tape, where the keyboard would punch some permutation of seven holes to represent the ones and zeros of each character. You can’t <em>delete</em>
		holes once they’ve been punched, so the only way to mark a character as invalid was to rewind the tape and punch out <em>all</em> the holes in that position: i.e. all
		<code><strong>1</strong></code>s.
	</figcaption>
	</figure>
	<h3>
	Space
	</h3>
	<p>
	The first printing character is space; it’s an <em>invisible</em> character, but it’s still one that has meaning to humans, so it’s not a control character (this sounds obvious today,
	but it was actually the source of some semantic argument when the <abbr title="American Standard Code for Information Interchange">ASCII</abbr> standard was first being
	discussed).
	</p>
	<p>
	Putting it numerically <em>before any other printing character</em> was a very carefully-considered and deliberate choice. The reason: <em>sorting</em>. For a computer to sort a list
	(of files, strings, or whatever) it’s easiest if it can do so <em>numerically</em>, using the same character conversion table as it uses for all other purposes<sup><a id="footnote-ref-23995-7" name="footnote-ref-23995-7" href="#footnote-23995-7" title="I’m hugely grateful to section 13.8 of Coded Character Sets, History and Development by Charles E. Mackenzie (1980), the entire text of which is available freely online, for helping me to understand the importance of the position of the space character within the ASCII character set. While most of what I’ve written in this blog post were things I already knew, I’d never fully grasped its significance of the space character’s location until today!">7</a></sup>.
	The space character must naturally come before other characters, or else John Smith won’t appear before Johnny Five in a computer-sorted list as you’d expect him to.
	</p>
	<p>
	Being the first printing character, space also enjoys a beautiful and memorable binary representation that a human can easily recognise: <code><strong>0100000</strong></code>.
	</p>
	<h3>
	Numbers
	</h3>
	<p>
	The position of the Arabic numbers 0-9 is no coincidence, either. Their position means that they start with zero at the nice round binary value <code><strong>0110000</strong></code>
	(and similarly round hex value <code><strong>30</strong></code>) and continue sequentially, giving:
	</p>
	<figure>
	<table>
		<thead>
		<tr>
		<th>
		Binary
		</th>
		<th>
		Hex
		</th>
		<th>
		Decimal digit (character)
		</th>
		</tr>
		</thead>
		<tbody>
		<tr>
		<td>
		<code>011 <span><strong>0000</strong></span></code>
		</td>
		<td>
		<code>3<span><strong>0</strong></span></code>
		</td>
		<td>
		0
		</td>
		</tr>
		<tr>
		<td>
		<code>011 <span><strong>0001</strong></span></code>
		</td>
		<td>
		<code>3<span><strong>1</strong></span></code>
		</td>
		<td>
		1
		</td>
		</tr>
		<tr>
		<td>
		<code>011 <span><strong>0010</strong></span></code>
		</td>
		<td>
		<code>3<span><strong>2</strong></span></code>
		</td>
		<td>
		2
		</td>
		</tr>
		<tr>
		<td>
		<code>011 <span><strong>0011</strong></span></code>
		</td>
		<td>
		<code>3<span><strong>3</strong></span></code>
		</td>
		<td>
		3
		</td>
		</tr>
		<tr>
		<td>
		<code>011 <span><strong>0100</strong></span></code>
		</td>
		<td>
		<code>3<span><strong>4</strong></span></code>
		</td>
		<td>
		4
		</td>
		</tr>
		<tr>
		<td>
		<code>011 <span><strong>0101</strong></span></code>
		</td>
		<td>
		<code>3<span><strong>5</strong></span></code>
		</td>
		<td>
		5
		</td>
		</tr>
		<tr>
		<td>
		<code>011 <span><strong>0110</strong></span></code>
		</td>
		<td>
		<code>3<span><strong>6</strong></span></code>
		</td>
		<td>
		6
		</td>
		</tr>
		<tr>
		<td>
		<code>011 <span><strong>0111</strong></span></code>
		</td>
		<td>
		<code>3<span><strong>7</strong></span></code>
		</td>
		<td>
		7
		</td>
		</tr>
		<tr>
		<td>
		<code>011 <span><strong>1000</strong></span></code>
		</td>
		<td>
		<code>3<span><strong>8</strong></span></code>
		</td>
		<td>
		8
		</td>
		</tr>
		<tr>
		<td>
		<code>011 <span><strong>1001</strong></span></code>
		</td>
		<td>
		<code>3<span><strong>9</strong></span></code>
		</td>
		<td>
		9
		</td>
		</tr>
		</tbody>
	</table>
	</figure>
	<p>
	The last four digits of the binary are a representation of the <em>value</em> of the decimal digit depicted. <strong>And</strong> the last digit of the hexadecimal representation
	<em>is</em> the decimal digit. That’s just brilliant!
	</p>
	<p>
	If you’re using this post as a way to teach yourself to “read” binary-formatted <abbr title="American Standard Code for Information Interchange">ASCII</abbr> in your head,
	the rule to take away here is: if it begins&nbsp;<code><strong>011</strong></code>, treat the remainder as a binary representation of an <em>actual number</em>. You’ll probably be
	right: if the number you get is above 9, it’s probably some kind of punctuation instead.
	</p>
	<h3>
	Shifted Numbers
	</h3>
	<p>
	Subtract <code><strong>0010000</strong></code> from each of the numbers and you get the <em>shifted numbers</em>. The first one’s occupied by the space character already, which is a
	shame, but for the rest of them, the characters are <em>what you get if you press the shift key and that number key at the same time</em>.
	</p>
	<p>
	“No it’s not!” I hear you cry. Okay, you’re probably right. I’m using a 105-key ISO/UK QWERTY keyboard and… only <em>four</em> of the nine digits 1-9 have their shifted variants
	properly represented in <abbr title="American Standard Code for Information Interchange">ASCII</abbr>.
	</p>
	<p>
	That, I’m afraid, is because <abbr title="American Standard Code for Information Interchange">ASCII</abbr> was based not on modern computer keyboards but on the shifted
	positions of a Remington No. 2 mechanical typewriter – whose shifted layout was the closest compromise we could find as a standard at the time, I imagine. But hey, you got to learn
	something about typewriters today, if that’s any consolation.
	</p>
	<figure id="attachment_24004" aria-describedby="caption-attachment-24004">
	<a href="#lightbox-p-attachment_24004" title="Zoom in on image" aria-haspopup="dialog" role="button"><img loading="lazy" decoding="async" src="https://danq.me/_q23u/2024/07/remington-portable-no-3-typewriter-640x230.jpg" alt="A Remington Portable No. 3 typewriter." width="640" height="230" srcset="https://danq.me/_q23u/2024/07/remington-portable-no-3-typewriter-640x230.jpg 640w, https://danq.me/_q23u/2024/07/remington-portable-no-3-typewriter-1280x460.jpg 1280w, https://danq.me/_q23u/2024/07/remington-portable-no-3-typewriter-980x353.jpg 980w, https://danq.me/_q23u/2024/07/remington-portable-no-3-typewriter-1960x705.jpg 1960w" sizes="100vw"></a>
	<figcaption id="caption-attachment-24004">
		Bonus fun fact: early mechanical typewriters omitted a number 1: it was expected that you’d use the letter I. That’s fine for printed work, but not much help for computer-readable
		data.
	</figcaption>
	</figure>
	<h3>
	Letters
	</h3>
	<p>
	Like the numbers, the letters get a <em>pattern</em>. After the <code>@</code>-symbol at <code><strong>1000000</strong></code>, the uppercase letters all begin
	<code><strong>10</strong></code>, followed by the <em>binary representation of their position in the alphabet</em>. 1 = A = <code><strong>10<span>00001</span></strong></code>, 2 = B = <code><strong>10<span>00010</span></strong></code>, and so on up to 26 = Z =
	<code><strong>10<span>11010</span></strong></code>. If you can learn the numbers of the positions of the letters in the alphabet, and you can count
	in binary, you now know enough to be able to read any <abbr title="American Standard Code for Information Interchange">ASCII</abbr> uppercase letter that’s been encoded as
	binary<sup><a id="footnote-ref-23995-8" name="footnote-ref-23995-8" href="#footnote-23995-8" title="I’m sure you know this already, but in case you’re one of today’s lucky 10,000 to discover that the reason we call the majuscule and minuscule letters “uppercase” and “lowercase”, respectively, dates to 19th century printing, when moveable type would be stored in a box (a “type case”) corresponding to its character type. The “upper” case was where the capital letters would typically be stored.">8</a></sup>.
	</p>
	<p>
	And once you know the uppercase letters, the lowercase ones are easy too. Their position in the table means that they’re all exactly <code><strong>0100000</strong></code>
	<em>higher</em> than the uppercase variants; i.e. all the lowercase letters begin <code><strong>11</strong></code>! 1 = a = <code><strong>11<span>00001</span></strong></code>, 2 = b = <code><strong>11<span>00010</span></strong></code>, and 26 = z =
	<code><strong>11<span>11010</span></strong></code>.
	</p>
	<p>
	If you’re wondering why the uppercase letters come <em>first</em>, the answer again is sorting: also the fact that the <em>first</em> implementation of <abbr title="American Standard Code for Information Interchange">ASCII</abbr>, which we saw above, was put together before it was certain that computer systems would <em>need</em> separate
	character codes for upper and lowercase letters (you could conceive of an alternative implementation that instead sent control codes to instruct the recipient to switch case, for
	example). Given the ways in which the technology is now used, I’m glad they eventually made the decision they did.
	</p>
	<h2>
	Beauty
	</h2>
	<p>
	There’s a strange and subtle charm to <abbr title="American Standard Code for Information Interchange">ASCII</abbr>. Given that we all use it (or things derived from it)
	literally <em>all the time</em> in our modern lives and our everyday devices, it’s easy to think of it as just some arbitrary encoding.
	</p>
	<p>
	But the choices made in <em>deciding what</em> streams of ones and zeroes would represent which characters expose a refined logic. It’s aesthetically pleasing, and littered with
	historical artefacts that teach us a hidden history of computing. And it’s built atop patterns that are sufficiently sophisticated to facilitate powerful processing while being coherent
	enough for a human to memorise, learn, and understand.
	</p>
	
	<dialog id="lightbox-attachment_23996">
	<p id="lightbox-p-attachment_23996">
		<a href="https://danq.me/_q23u/2024/07/the-martian-ascii-table.jpg"><img fetchpriority="high" decoding="async" src="https://danq.me/_q23u/2024/07/the-martian-ascii-table.jpg" alt="Frames from the scene in The Martian where Mark Watney discovers Beth Johanssen's ASCII table." width="640" height="540" sizes="100vw" loading="lazy"></a>
	</p><a href="#attachment_23996" title="Close image" role="button">×</a>
	</dialog>
	<dialog id="lightbox-image-23995-0">
	<p id="lightbox-p-image-23995-0">
		<a href="https://danq.me/_q23u/2024/07/ascii-table-with-highlighting.svg"><img decoding="async" src="https://danq.me/_q23u/2024/07/ascii-table-with-highlighting.svg" alt="ASCII table with Decimal, Hex, and Character columns." loading="lazy"></a>
	</p><a href="#image-23995-0" title="Close image" role="button">×</a>
	</dialog>
	<dialog id="lightbox-attachment_23997">
	<p id="lightbox-p-attachment_23997">
		<a href="https://danq.me/_q23u/2024/07/x3.4-1963-ascii-table.jpg"><img decoding="async" src="https://danq.me/_q23u/2024/07/x3.4-1963-ascii-table.jpg" alt="Scan of a X3.4-1963 ASCII table." width="640" height="385" sizes="100vw" loading="lazy"></a>
	</p><a href="#attachment_23997" title="Close image" role="button">×</a>
	</dialog>
	<dialog id="lightbox-attachment_24000">
	<p id="lightbox-p-attachment_24000">
		<a href="https://danq.me/_q23u/2024/07/punched-paper-tape-rolls-scaled.jpg"><img decoding="async" src="https://danq.me/_q23u/2024/07/punched-paper-tape-rolls-scaled.jpg" alt="Two rolls of punched paper tape." width="640" height="316" sizes="100vw" loading="lazy"></a>
	</p><a href="#attachment_24000" title="Close image" role="button">×</a>
	</dialog>
	<dialog id="lightbox-attachment_24004">
	<p id="lightbox-p-attachment_24004">
		<a href="https://danq.me/_q23u/2024/07/remington-portable-no-3-typewriter-scaled.jpg"><img loading="lazy" decoding="async" src="https://danq.me/_q23u/2024/07/remington-portable-no-3-typewriter-scaled.jpg" alt="A Remington Portable No. 3 typewriter." width="640" height="230" sizes="100vw"></a>
	</p><a href="#attachment_24004" title="Close image" role="button">×</a>
	</dialog>
	
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[United States Discloses Nuclear Warhead Numbers; Restores Nuclear Transparency (121 pts)]]></title>
            <link>https://fas.org/publication/united-states-discloses-nuclear-warhead-numbers-restores-nuclear-transparency/</link>
            <guid>41040417</guid>
            <pubDate>Mon, 22 Jul 2024 22:16:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fas.org/publication/united-states-discloses-nuclear-warhead-numbers-restores-nuclear-transparency/">https://fas.org/publication/united-states-discloses-nuclear-warhead-numbers-restores-nuclear-transparency/</a>, See on <a href="https://news.ycombinator.com/item?id=41040417">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

                <header>
                    

                                            
<div>
    <p><img src="https://fas.org/wp-content/uploads/2024/04/FAS-generic.png" srcset="" sizes="100vw, (min-width: 720px) 670px" alt=""></p>
</div>
                    
                    
<div>
        <p><span>07.20.24</span>
        <span>|</span>
        <span>6 min read</span>
                    <span>|</span>
            <span>
                Text by                <a href="https://fas.org/expert/hans-kristensen/">Hans Kristensen</a>            </span>
            </p></div>                </header>

                
        <div>
                <p><img decoding="async" width="834" src="https://fas.org/wp-content/uploads/2024/07/Stockpile_NNSA-corrected.png" srcset="https://fas.org/wp-content/uploads/2024/07/Stockpile_NNSA-corrected-402x258.png 402w, https://fas.org/wp-content/uploads/2024/07/Stockpile_NNSA-corrected-462x296.png 462w, https://fas.org/wp-content/uploads/2024/07/Stockpile_NNSA-corrected-662x425.png 662w, https://fas.org/wp-content/uploads/2024/07/Stockpile_NNSA-corrected-722x463.png 722w, https://fas.org/wp-content/uploads/2024/07/Stockpile_NNSA-corrected.png 834w" sizes="100vw, (min-width: 980px) 670px, (min-width: 1200px) 900px" alt=""></p><div>
                                                            <p><em>Note: The initial NNSA release showed an incorrect graph that did not accurately depict the size of the stockpile for the period 2012-2023. The corrected graph is shown above.</em></p>
                                    </div>
                            </div>

    


<p>[<strong>UPDATED VERSION</strong>] The Federation of American Scientists applauds the United States for <a href="https://www.energy.gov/nnsa/transparency-us-nuclear-weapons-stockpile" target="_blank" rel="noreferrer noopener">declassifying</a> the number of nuclear warheads in its military stockpile and the number of retired and dismantled warheads. The decision is consistent with America’s stated commitment to nuclear transparency, and FAS calls on all other nuclear states to follow this important precedent.</p>



<p>The <a href="https://www.energy.gov/nnsa/transparency-us-nuclear-weapons-stockpile" target="_blank" rel="noreferrer noopener">information</a> published on the National Nuclear Security Administration (NNSA) web site today shows that the U.S. nuclear weapons stockpile as of September 2023 included 3,748 nuclear warheads, only 40 warheads off FAS’ <a href="https://www.tandfonline.com/doi/full/10.1080/00963402.2024.2339170" target="_blank" rel="noreferrer noopener">estimate</a> of 3,708 warheads.</p>



<p>The information also shows that the United States last year dismantled only 69 retired nuclear warheads, the lowest number since 1994.</p>



<p>FAS has previously requested that the United States release the size of the US nuclear arsenal for FY2021, FY2022, and FY2023, but those requests were denied. FAS believes the information was wrongly withheld and that today’s declassification decision vindicates our belief that stockpile disclosures do not negatively affect U.S. security but should be provided to the public.</p>



<p>With today’s announcement, the Biden Administration has restored the nuclear stockpile transparency that was created by the Obama administration, halted by the Trump administration, revived by Biden administration in its first year, but then halted again for the past three years.</p>



<p>While applauding the U.S. disclosure, FAS also urged other nuclear-armed states to disclose their stockpile numbers and warheads dismantled. Excessive nuclear secrecy creates mistrust, fuels worst-case planning, and enables hardliners and misinformers to exaggerate nuclear threats.</p>



<h2><strong>What The Nuclear Numbers Show</strong></h2>



<p>The <a href="https://www.energy.gov/nnsa/transparency-us-nuclear-weapons-stockpile" target="_blank" rel="noreferrer noopener">declassified stockpile numbers</a> show that the United States maintained a total of 3,748 warheads in its military stockpile as of September 2023. The military stockpile includes both active and inactive warheads in the custody of the Department of Defense. The information also discloses weapons numbers for the previous two years, numbers that the U.S. government had previously declined to release.</p>



<p>Although there have minor fluctuations, the numbers show that the U.S. nuclear weapons stockpile has remained relative stable for the past seven years. The fluctuations during that period do not reflect decision to increase or decrease the stockpile but are the result of warheads movements in and out of the stockpile as part of the warhead life-extension and maintenance work.</p>



<p>Although the warhead numbers today are much lower than during the Cold War and there have been reductions since 2000, the reduction since 2007 has been relatively modest. Although the New Start treaty has had some indirect effect on the stockpile size due to reduced requirement, the biggest reductions since 2007 have be caused by changes in presidential guidance, strategy, and modernization programs. The initial chart released by NNSA did not accurately show the 1,133-warhead drop during the period 2012-2023. NNSA later corrected the chart (see top of article). The chart below shows the number of warheads in the stockpile compared with the number of warheads deployed on strategic launchers over the years.</p>



        <div>
                <p><img decoding="async" width="1500" src="https://fas.org/wp-content/uploads/2024/07/Stockpile.png" srcset="https://fas.org/wp-content/uploads/2024/07/Stockpile-402x164.png 402w, https://fas.org/wp-content/uploads/2024/07/Stockpile-462x188.png 462w, https://fas.org/wp-content/uploads/2024/07/Stockpile-662x270.png 662w, https://fas.org/wp-content/uploads/2024/07/Stockpile-722x295.png 722w, https://fas.org/wp-content/uploads/2024/07/Stockpile-982x401.png 982w, https://fas.org/wp-content/uploads/2024/07/Stockpile-1032x421.png 1032w, https://fas.org/wp-content/uploads/2024/07/Stockpile-1402x572.png 1402w, https://fas.org/wp-content/uploads/2024/07/Stockpile.png 1500w" sizes="100vw, (min-width: 980px) 670px, (min-width: 1200px) 900px" alt=""></p><div>
                                                            <p><em>This graph shows the size of the U.S. nuclear stockpile over the years plus the portion of those warheads deployed on strategic launchers. The stockpile number for 2024 and the strategic launcher warheads are FAS estimates.</em></p>
                                    </div>
                            </div>

    


<p>The <a href="https://www.energy.gov/nnsa/transparency-us-nuclear-weapons-stockpile" target="_blank" rel="noreferrer noopener">information</a> also shows that the United States last year dismantled only 69 retired nuclear warheads. That is the lowest number of warheads dismantled in a year since 1994. The total number of retired nuclear warheads dismantled 1994-2023 is 12,088. Retired warheads awaiting dismantlement are not in the DOD stockpile but in the DOE stockpile.</p>



<p>The <a href="https://www.energy.gov/nnsa/transparency-us-nuclear-weapons-stockpile" target="_blank" rel="noreferrer noopener">information</a> disclosed also reveals that there are currently another approximately 2,000 retired warheads in storage awaiting dismantlement. This number is higher than our most recent <a href="https://www.tandfonline.com/doi/full/10.1080/00963402.2024.2339170" target="_blank" rel="noreferrer noopener">estimate</a> (1,336) because of the surprisingly low number of warheads dismantled in recent years. Because dismantlement appears to be a lower priority, the number of retired weapons awaiting dismantlement today (~2,000) is only 500 weapons lower than the inventory was in 2015 (~2,500).</p>



<h2><strong>FAS’ Work For Nuclear Transparency</strong></h2>



<p>The Federation of American Scientists has worked since its creation to increase responsible transparency on nuclear weapons issues; in fact, the nuclear scientists that built the bomb created the “Federation of Atomic Scientists” to enable some degree of transparency to discuss the implications of nuclear weapons (see FAS newsletter from 1949). There are of course legitimate nuclear secrets that must remain so, but nuclear stockpile numbers are not among them.</p>



        <div>
                <p><img decoding="async" width="629" src="https://fas.org/wp-content/uploads/2024/07/Stockpile_FAS-1949.png" srcset="https://fas.org/wp-content/uploads/2024/07/Stockpile_FAS-1949-402x492.png 402w, https://fas.org/wp-content/uploads/2024/07/Stockpile_FAS-1949-462x566.png 462w, https://fas.org/wp-content/uploads/2024/07/Stockpile_FAS-1949.png 629w" sizes="100vw, (min-width: 980px) 670px, (min-width: 1200px) 900px" alt=""></p><div>
                                                            <p><em>This FAS newsletter from 1949 describes the debate and FAS effort in support of transparency of the US weapons stockpile.</em></p>
                                    </div>
                            </div>

    


<p>One part of FAS’ efforts, spearheaded by Steve Aftergood who for many years directed the <a href="https://sgp.fas.org/" target="_blank" rel="noreferrer noopener">FAS Project on Government Secrecy</a>, has been to report on the government’s <a href="https://sgp.fas.org/news/secrecy/2001/01/010401.html" target="_blank" rel="noreferrer noopener">discussions</a> about what needs to be classified and repeatedly request declassification of unnecessary secrets such as the stockpile numbers. This work yielded stockpile declassifications in <a href="https://fas.org/publication/nuclearstockpile/" target="_blank" rel="noreferrer noopener">some years</a> (2012-<a href="https://fas.org/publication/stockpile-reduction/" target="_blank" rel="noreferrer noopener">2018</a>, 2021) while in other years (<a href="https://fas.org/publication/stockpilenumbersecret/" target="_blank" rel="noreferrer noopener">2019</a>-2020 and <a href="https://fas.org/publication/while-advocating-nuclear-transparency-abroad-biden-administration-limits-it-at-home/" target="_blank" rel="noreferrer noopener">2022-2024</a>) FAS’ declassified requests were initially denied. Most recently, in February 2024, an FAS declassification request for the stockpile numbers as of 2023 was denied, although the letter added: “If a different decision is made in the future, we will notify you of this decision” (see rejection letters). Given these denials, FAS in March 2024 sent a letter to President Biden outlining the important reasons for declassifying the numbers.</p>



        <div>
                <p><img decoding="async" width="828" src="https://fas.org/wp-content/uploads/2024/07/Stockpile_Denials2023-2024.png" srcset="https://fas.org/wp-content/uploads/2024/07/Stockpile_Denials2023-2024-402x294.png 402w, https://fas.org/wp-content/uploads/2024/07/Stockpile_Denials2023-2024-462x338.png 462w, https://fas.org/wp-content/uploads/2024/07/Stockpile_Denials2023-2024-662x484.png 662w, https://fas.org/wp-content/uploads/2024/07/Stockpile_Denials2023-2024-722x528.png 722w, https://fas.org/wp-content/uploads/2024/07/Stockpile_Denials2023-2024.png 828w" sizes="100vw, (min-width: 980px) 670px, (min-width: 1200px) 900px" alt=""></p><div>
                                                            <p><em>The new disclosure of the stockpile numbers suggests that denial of earlier FAS declassification requests in 2023 and 2024 may not have been justified and that future years’ numbers should not be classified.</em></p>
                                    </div>
                            </div>

    


<p>The other part of FAS’ efforts has been the <a href="https://fas.org/initiative/nuclear-information-project/" target="_blank" rel="noreferrer noopener">Nuclear Information Project</a>, which works to analyze, estimate, and publish information about the U.S. nuclear arsenal. In 2011, when the Obama administration first <a href="https://dod.defense.gov/Portals/1/features/defenseReviews/NPR/10-05-03_Fact_Sheet_US_Nuclear_Transparency__FINAL_w_Date.pdf" target="_blank" rel="noreferrer noopener">declassified</a> the history of the stockpile, the FAS <a href="https://fas.org/publication/stockpilenumber/" target="_blank" rel="noreferrer noopener">estimate</a> was only 13 warheads off from the official number of 5,112 warheads. The Project also works to increase transparency of the other nuclear-armed states by providing the public with <a href="https://fas.org/initiative/status-world-nuclear-forces/" target="_blank" rel="noreferrer noopener">estimates</a> of their nuclear arsenals. The project <a href="https://fas.org/publication/plarf-jilantai-expansion/" target="_blank" rel="noreferrer noopener">described</a> the structures that enabled Matt Korda on our team and others to <a href="https://fas.org/publication/china-is-building-a-second-nuclear-missile-silo-field/" target="_blank" rel="noreferrer noopener">discover</a> the large missile silo fields China was building, and NATO officials say our data is “the best for open source information that doesn’t come from any one nation.”</p>



<h2><strong>Why Nuclear Transparency Is Important</strong></h2>



<p>FAS has since its founding years worked for maximum responsible disclosure of nuclear weapons information in the interest of international security and democratic values. In a letter to President Biden in March 2024 we outlined those interests.</p>



        <div>
                <p><img decoding="async" width="805" src="https://fas.org/wp-content/uploads/2024/07/Stockpile_FAS-2024.png" srcset="https://fas.org/wp-content/uploads/2024/07/Stockpile_FAS-2024-402x239.png 402w, https://fas.org/wp-content/uploads/2024/07/Stockpile_FAS-2024-462x275.png 462w, https://fas.org/wp-content/uploads/2024/07/Stockpile_FAS-2024-662x394.png 662w, https://fas.org/wp-content/uploads/2024/07/Stockpile_FAS-2024-722x430.png 722w, https://fas.org/wp-content/uploads/2024/07/Stockpile_FAS-2024.png 805w" sizes="100vw, (min-width: 980px) 670px, (min-width: 1200px) 900px" alt=""></p>
                            </div>

    


<p>First, responsible transparency of the nuclear arsenal serves U.S. security interests by supporting deterrence and reassurance missions with factual information about U.S. capabilities. Equally important, transparency of stockpile and dismantlement numbers demonstrate that the United States is not secretly building up its arsenal but is dismantling retired warheads instead of keeping them in reserve. This can help limit mistrust and worst-case scenario planning that can fuel arms races.</p>



<p>Second, the United States has for years advocated and promoted nuclear transparency internationally. Part of its criticism of Russia and China is their lack of disclosure of basic information about their nuclear arsenals, such as stockpile numbers. U.S. diplomats have correctly advocated for years about the importance of nuclear transparency, but their efforts are undermined if stockpile and dismantlement numbers are kept secret because it enables other nuclear-armed states to dismiss the United States as hypocritical.</p>



<p>Third, nuclear transparency is important for the debate in the United States (and other Allied democracies) about the status and future of the nuclear arsenal and strategy and how the government is performing. Opponents of declassifying nuclear stockpile numbers tend to misunderstand the issue by claiming that disclosure gives adversaries a military advantage or that the United States should not disclose stockpile numbers unless the adversaries do so as well. But nuclear transparency is not a zero-sum issue but central to the democratic process by enabling informed citizens to monitor, debate, and influence government policies. Although the U.S. disclosure is not dependent on other nuclear-armed states releasing their stockpile numbers, Allied countries such as France and the United Kingdom should follow the U.S. example, as should Russia and China and the other nuclear-armed states.</p>



<p><em>Acknowledgement: <a href="http://fas.org/expert/mackenzie-knight" target="_blank" rel="noreferrer noopener">Mackenzie Knight</a>, <a href="https://fas.org/expert/jon-wolfsthal/" target="_blank" rel="noreferrer noopener">Jon Wolfsthal</a>, and <a href="https://fas.org/expert/matt-korda/" target="_blank" rel="noreferrer noopener">Matt Korda</a> provided invaluable edits.</em></p>



<p>More information on the <a href="https://fas.org/initiative/nuclear-information-project/" target="_blank" rel="noreferrer noopener">FAS Nuclear Information Project page</a>.</p>



<hr>



<p><em>This research was carried out with generous contributions from the Carnegie Corporation of New York, the New-Land Foundation, the Ploughshares Fund, the Prospect Hill Foundation, Longview Philanthropy, and individual donors.</em></p>

                
                    
                    
                
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Timeshift: System Restore Tool for Linux (186 pts)]]></title>
            <link>https://github.com/linuxmint/timeshift</link>
            <guid>41039967</guid>
            <pubDate>Mon, 22 Jul 2024 21:23:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/linuxmint/timeshift">https://github.com/linuxmint/timeshift</a>, See on <a href="https://news.ycombinator.com/item?id=41039967">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Timeshift</h2><a id="user-content-timeshift" aria-label="Permalink: Timeshift" href="#timeshift"></a></p>
<p dir="auto">Timeshift for Linux is an application that provides functionality similar to the <em>System Restore</em> feature in Windows and the <em>Time Machine</em> tool in Mac OS. Timeshift protects your system by taking incremental snapshots of the file system at regular intervals. These snapshots can be restored at a later date to undo all changes to the system.</p>
<p dir="auto">In RSYNC mode, snapshots are taken using <a href="https://rsync.samba.org/" rel="nofollow">rsync</a> and <a href="https://en.wikipedia.org/wiki/Hard_link" rel="nofollow">hard-links</a>. Common files are shared between snapshots which saves disk space. Each snapshot is a full system backup that can be browsed with a file manager.</p>
<p dir="auto">In BTRFS mode, snapshots are taken using the in-built features of the BTRFS filesystem. BTRFS snapshots are supported only on BTRFS systems having an Ubuntu-type subvolume layout (with @ and @home subvolumes).</p>
<p dir="auto">Timeshift is similar to applications like <a href="https://www.rsnapshot.org/" rel="nofollow">rsnapshot</a>, <a href="https://github.com/bit-team/backintime">BackInTime</a> and <a href="https://wiki.ubuntu.com/TimeVault" rel="nofollow">TimeVault</a> but with different goals. It is designed to protect only system files and settings. User files such as documents, pictures and music are excluded. This ensures that your files remain unchanged when you restore your system to an earlier date. If you need a tool to back up your documents and files please take a look at the excellent <a href="https://github.com/bit-team/backintime">BackInTime</a> application which is more configurable and provides options for saving user files.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/linuxmint/timeshift/blob/master/images/main_window.png"><img src="https://github.com/linuxmint/timeshift/raw/master/images/main_window.png" alt=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">History</h2><a id="user-content-history" aria-label="Permalink: History" href="#history"></a></p>
<p dir="auto">Timeshift was originally developed and maintained by <a href="https://teejeetech.com/" rel="nofollow">Tony George</a>.</p>
<p dir="auto">His original repository is still available on <a href="https://github.com/teejee2008/timeshift">Github</a>.</p>
<p dir="auto">Nowadays Timeshift is part of the Xapp project which is a collection of cross-DE and cross-distributions applications which are maintained by <a href="https://www.linuxmint.com/" rel="nofollow">Linux Mint</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Minimal Setup</h3><a id="user-content-minimal-setup" aria-label="Permalink: Minimal Setup" href="#minimal-setup"></a></p>
<ul dir="auto">
<li>
<p dir="auto">Timeshift requires very little setup. Just install it, run it for the first time and take the first snapshot. Cron job can be enabled for taking automatic snapshots of the system at regular intervals. The backup levels can be selected from the <em>Settings</em> window.</p>
</li>
<li>
<p dir="auto">Snapshots are saved by default on the system (root) partition in path <strong>/timeshift</strong>. Other linux partitions can also be selected. For best results the snapshots should be saved to an external (non-system) partition.</p>
</li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/linuxmint/timeshift/blob/master/images/settings_location.png"><img src="https://github.com/linuxmint/timeshift/raw/master/images/settings_location.png" alt=""></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Multiple Snapshot Levels</h3><a id="user-content-multiple-snapshot-levels" aria-label="Permalink: Multiple Snapshot Levels" href="#multiple-snapshot-levels"></a></p>
<ul dir="auto">
<li>
<p dir="auto">Multiple levels of snapshots can be enabled - Hourly, Daily, Weekly, Monthly and Boot</p>
</li>
<li>
<p dir="auto">Number of snapshots to retain can be specified for each level</p>
</li>
<li>
<p dir="auto">Boot snapshots provide an additional level of backup and are created every time the system starts. Boot snapshots are created with a delay of 10 mins so that system startup is not affected.</p>
</li>
<li>
<p dir="auto">Snapshots are tagged to indicate their time interval:</p>
<ul dir="auto">
<li>H: Hourly</li>
<li>D: Daily</li>
<li>W: Weekly</li>
<li>M: Monthly</li>
<li>B: Boot</li>
<li>O: On-demand (Manually created)</li>
</ul>
</li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/linuxmint/timeshift/blob/master/images/settings_schedule.png"><img src="https://github.com/linuxmint/timeshift/raw/master/images/settings_schedule.png" alt=""></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Rsync &amp; BTRFS Snapshots</h3><a id="user-content-rsync--btrfs-snapshots" aria-label="Permalink: Rsync &amp; BTRFS Snapshots" href="#rsync--btrfs-snapshots"></a></p>
<ul dir="auto">
<li>
<p dir="auto">Supports rsync snapshots on all systems</p>
</li>
<li>
<p dir="auto">Supports BTRFS snapshots on BTRFS systems</p>
</li>
</ul>
<p dir="auto">It is strongly recommended to use BTRFS snapshots on systems that are installed on BTRFS partition. BTRFS snapshots are perfect byte-for-byte copies of the system. Nothing is excluded. BTRFS snapshots can be created and restored in seconds, and have very low overhead in terms of disk space.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/linuxmint/timeshift/blob/master/images/settings_rsync.png"><img src="https://github.com/linuxmint/timeshift/raw/master/images/settings_rsync.png" alt=""></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/linuxmint/timeshift/blob/master/images/settings_btrfs.png"><img src="https://github.com/linuxmint/timeshift/raw/master/images/settings_btrfs.png" alt=""></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">User Data is Excluded by Default</h3><a id="user-content-user-data-is-excluded-by-default" aria-label="Permalink: User Data is Excluded by Default" href="#user-data-is-excluded-by-default"></a></p>
<p dir="auto">Timeshift is designed to protect system files and settings. It is NOT a backup tool and is not meant to protect user data. Entire contents of users' home directories are excluded by default. This has two advantages:</p>
<ul dir="auto">
<li>You don't need to worry about your documents getting overwritten when you restore a previous snapshot to recover the system.</li>
<li>Your music and video collection in your home directory will not waste space on the backup device.</li>
</ul>
<p dir="auto">You can selectively include items for backup from the <em><strong>Settings</strong></em> window. Selecting the option "<em>Include hidden items</em>" from the <em><strong>Users</strong></em> tab will back up and restore the .hidden files and directories in your home folder. These folders contain user-specific config files and can be included in snapshots if required.</p>
<p dir="auto"><em>Note</em>: It is not recommended to include user data in backups as it will be overwritten when you restore the snapshot.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/linuxmint/timeshift/blob/master/images/settings_users_rsync.png"><img src="https://github.com/linuxmint/timeshift/raw/master/images/settings_users_rsync.png" alt=""></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/linuxmint/timeshift/blob/master/images/settings_filters.png"><img src="https://github.com/linuxmint/timeshift/raw/master/images/settings_filters.png" alt=""></a></p>
<ul dir="auto">
<li>Unlike similar tools that are scheduled to take backups at a fixed time of the day, Timeshift is designed to run once every hour and take snapshots only when a snapshot is due. This is more suitable for desktop users who keep their laptops and desktops switched on for few hours daily. Scheduling snapshots at a fixed time on such users will result in missed backups since the system may not be running when the snapshot is scheduled to run. By running once every hour and creating snapshots when due, Timeshift ensures that backups are not missed.</li>
<li>Applications like rsnapshot rotate a snapshot to the next level by creating a hard-linked copy. Creating a hard-linked copy may seem like a good idea but it is still a waste of disk space, since only files can be hard-linked and not directories. The duplicated directory structure can take up as much as 100 MB of space. Timeshift avoids this wastage by using tags for maintaining backup levels. Each snapshot will have only one copy on disk and is tagged as "daily", "monthly", etc. The snapshot location will have a set of folders for each backup level ("Monthly", "Daily", etc) with symbolic links pointing to the actual snapshots tagged with the level.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">System Restore</h3><a id="user-content-system-restore" aria-label="Permalink: System Restore" href="#system-restore"></a></p>
<ul dir="auto">
<li>
<p dir="auto">Snapshots can be restored by selecting a snapshot from the main window and clicking <em>Restore</em> button on the toolbar.</p>
</li>
<li>
<p dir="auto">Snapshots can be restored either from the running system (online restore) or from another system that has Timeshift installed on it (offline restore).</p>
</li>
<li>
<p dir="auto">If the main system is not bootable, then it is possible to boot from an Ubuntu Live CD, install Timeshift on the live system, and restore a snapshot on the main system.</p>
</li>
<li>
<p dir="auto">Restoring backups from the running system requires a reboot to complete the restore process.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/linuxmint/timeshift/blob/master/images/restore_summary.png"><img src="https://github.com/linuxmint/timeshift/raw/master/images/restore_summary.png" alt=""></a></p>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Cross-Distribution Restore</h3><a id="user-content-cross-distribution-restore" aria-label="Permalink: Cross-Distribution Restore" href="#cross-distribution-restore"></a></p>
<ul dir="auto">
<li>You can also Timeshift across distributions. Let's say you are currently using Xubuntu and decide to try out Linux Mint. You install Linux Mint on your system and try it out for a week before deciding to go back to Xubuntu. Using Timeshift you can simply restore the last week's snapshot to get your Xubuntu system back. Timeshift will take care of things like reinstalling the bootloader and other details.</li>
<li>Since installing a new linux distribution also formats your root partition you need to save your snapshots on a separate linux partition for this to work.</li>
<li>It is recommended to include hidden items in home directory by selecting the option "<em>Include  Hidden Items</em>" from <em>Settings</em> &gt; <em>Users</em>.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Post Restore Hooks</h3><a id="user-content-post-restore-hooks" aria-label="Permalink: Post Restore Hooks" href="#post-restore-hooks"></a></p>
<ul dir="auto">
<li>Scripts can be run at the end of a restore job for anything that may need to be done prior to rebooting. The location for these scripts is <code>/etc/timeshift/restore-hooks.d</code>.  Note: the script(s) will be run from the restored filesystem.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Supported System Configurations</h2><a id="user-content-supported-system-configurations" aria-label="Permalink: Supported System Configurations" href="#supported-system-configurations"></a></p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Normal</strong>&nbsp;- OS installed on non-encrypted partitions</p>
</li>
<li>
<p dir="auto"><strong>LUKS Encrypted</strong>&nbsp;- OS installed on LUKS-encrypted partitions</p>
</li>
<li>
<p dir="auto"><strong>LVM2</strong>&nbsp;- OS installed on LVM2 volumes (with or without LUKS)</p>
</li>
<li>
<p dir="auto"><strong>BTRFS</strong>&nbsp;- OS installed on BTRFS volumes (with or without LUKS)</p>
<ul dir="auto">
<li>
<p dir="auto">Only Ubuntu-type layouts with <strong>@</strong> and <strong>@home</strong> subvolumes are supported</p>
</li>
<li>
<p dir="auto"><strong>@</strong> and <strong>@home</strong> subvolumes may be on same or different BTRFS volumes</p>
</li>
<li>
<p dir="auto"><strong>@</strong> may be on BTRFS volume and <strong>/home</strong> may be mounted on non-BTRFS partition</p>
</li>
<li>
<p dir="auto">If swap files are used they should not be located in <strong>@</strong> or <strong>@home</strong> and could instead be stored in their own subvolume, eg <strong>@swap</strong></p>
</li>
<li>
<p dir="auto">Other layouts are not supported</p>
</li>
<li>
<p dir="auto">Make sure, that you have selected subvolume <em>@</em> or <em>/@</em> for root. You can check that executing script below, and if output is <em>OK</em>, then everything is alright.</p>
<div dir="auto" data-snippet-clipboard-copy-content="grep -E '^[^#].+/\s+btrfs' /etc/fstab | \
grep -oE 'subvol=[^,]+' | \
cut -d= -f2 | \
grep -qE '^/?@$' &amp;&amp; \
echo 'OK' || \
echo 'Not OK'"><pre>grep -E <span><span>'</span>^[^#].+/\s+btrfs<span>'</span></span> /etc/fstab <span>|</span> \
grep -oE <span><span>'</span>subvol=[^,]+<span>'</span></span> <span>|</span> \
cut -d= -f2 <span>|</span> \
grep -qE <span><span>'</span>^/?@$<span>'</span></span> <span>&amp;&amp;</span> \
<span>echo</span> <span><span>'</span>OK<span>'</span></span> <span>||</span> \
<span>echo</span> <span><span>'</span>Not OK<span>'</span></span></pre></div>
</li>
<li>
<p dir="auto">Default BTRFS subvolume must be /. You can make it using script below.</p>
<div dir="auto" data-snippet-clipboard-copy-content="MP=&quot;$(mktemp -d)&quot;
mount | awk '/on \/ type btrfs/{print $1}' | sudo xargs -I{} mount {} &quot;$MP&quot; &amp;&amp; \
sudo btrfs subvolume set-default 5 &quot;$MP&quot;; \
sudo umount &quot;$MP&quot;"><pre>MP=<span><span>"</span><span><span>$(</span>mktemp -d<span>)</span></span><span>"</span></span>
mount <span>|</span> awk <span><span>'</span>/on \/ type btrfs/{print $1}<span>'</span></span> <span>|</span> sudo xargs -I{} mount {} <span><span>"</span><span>$MP</span><span>"</span></span> <span>&amp;&amp;</span> \
sudo btrfs subvolume set-default 5 <span><span>"</span><span>$MP</span><span>"</span></span><span>;</span> \
sudo umount <span><span>"</span><span>$MP</span><span>"</span></span></pre></div>
</li>
</ul>
</li>
<li>
<p dir="auto"><strong>GRUB2</strong>&nbsp;- Bootloader must be GRUB2. GRUB legacy and other bootloaders are not supported.</p>
</li>
<li>
<p dir="auto"><strong>EFI</strong>&nbsp;- EFI systems are supported. Make sure that <code>/boot/efi</code> partition is selected for mounting before restoring snapshots (application will do it automatically).</p>
</li>
<li>
<p dir="auto"><strong>Encrypted Home</strong> - For users with encrypted home, files in <code>/home/.ecryptfs/$USER</code> will be backed-up and restored. The decrypted contents in <code>$HOME</code> will be excluded. This avoids the security risk of decrypted contents becoming available outside the user's home directory.</p>
</li>
<li>
<p dir="auto"><strong>Encrypted Private Directory</strong> - For users with encrypted <em>Private</em> directory, the encrypted files in <code>$HOME/.Private</code>, as well as the decrypted files in <code>$HOME/Private</code>, will be excluded (as it contains user data). Filters added by user to include files from <code>$HOME/.Private</code> or <code>$HOME/Private</code> will be ignored.</p>
</li>
<li>
<p dir="auto"><strong>Docker &amp; Containers</strong>&nbsp;- Docker and containerized systems are not supported. Running Timeshift on such systems will have unpredictable results.</p>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Building and Installing from Source Code</h3><a id="user-content-building-and-installing-from-source-code" aria-label="Permalink: Building and Installing from Source Code" href="#building-and-installing-from-source-code"></a></p>
<p dir="auto">You can find the exact instructions in the <a href="https://github.com/linuxmint/timeshift/blob/master/docs/development.md">development</a> docs.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Debian-based Distributions</h3><a id="user-content-debian-based-distributions" aria-label="Permalink: Debian-based Distributions" href="#debian-based-distributions"></a></p>
<p dir="auto">Debian, Ubuntu, Linux Mint, Elementary OS, etc.</p>
<p dir="auto">Install Timeshift from the repositories:</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo apt-get update
sudo apt-get install timeshift"><pre>sudo apt-get update
sudo apt-get install timeshift</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Fedora</h3><a id="user-content-fedora" aria-label="Permalink: Fedora" href="#fedora"></a></p>
<p dir="auto">Fedora is not fully supported. BTRFS snapshots only support Ubuntu-specific layouts.</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo dnf update
sudo dnf install timeshift"><pre>sudo dnf update
sudo dnf install timeshift</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Arch</h3><a id="user-content-arch" aria-label="Permalink: Arch" href="#arch"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Removal</h2><a id="user-content-removal" aria-label="Permalink: Removal" href="#removal"></a></p>
<p dir="auto">Run the following command in a terminal window:</p>
<div data-snippet-clipboard-copy-content="sudo apt-get remove timeshift"><pre><code>sudo apt-get remove timeshift
</code></pre></div>
<p dir="auto">or</p>
<div data-snippet-clipboard-copy-content="sudo dnf remove timeshift"><pre><code>sudo dnf remove timeshift
</code></pre></div>
<p dir="auto">or</p>

<p dir="auto">depending on your package management system.</p>
<p dir="auto">Remember to delete all snapshots before un-installing. Otherwise the snapshots continue to occupy space on your system.  To delete all snapshots, run the application, select all snapshots from the list (CTRL+A) and click the <em>Delete</em> button on the toolbar. This will delete all snapshots and remove the <em>/timeshift</em> folder in the root directory.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Known Issues &amp; Limitations</h2><a id="user-content-known-issues--limitations" aria-label="Permalink: Known Issues &amp; Limitations" href="#known-issues--limitations"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">BTRFS volumes</h4><a id="user-content-btrfs-volumes" aria-label="Permalink: BTRFS volumes" href="#btrfs-volumes"></a></p>
<p dir="auto">BTRFS volumes must have an Ubuntu-type layout with <strong>@</strong> and <strong>@home</strong> subvolumes. Other layouts are not supported. Systems having the <strong>@</strong> subvolume and having <strong>/home</strong> on a non-BTRFS partition are also supported.</p>
<p dir="auto"><code>Text file busy / btrfs returned an error: 256 / Failed to create snapshot</code> can occur if you have a Linux swapfile mounted within the <strong>@</strong> or <strong>@home</strong> subvolumes which prevents snapshot from succeeding. Relocate the swapfile out of <strong>@</strong> or *<em>@home</em>, for example into it's own subvolume like <strong>@swap</strong>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Disk Space</h4><a id="user-content-disk-space" aria-label="Permalink: Disk Space" href="#disk-space"></a></p>
<p dir="auto">Timeshift requires a lot of disk space to keep snapshot data. The device selected as snapshot device must have sufficient free space to store the snapshots that will be created.</p>
<p dir="auto">If the backup device is running out of space, try the following steps:</p>
<ul dir="auto">
<li>Reduce the number of backup levels - Uncheck the backup levels and keep only one selected</li>
<li>Reduce the number of snapshots that are kept - In the <em>Schedule</em> tab set the number of snapshots to 5 or less.</li>
<li>You can also disable scheduled snapshots completely and create snapshots manually when required</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Bootloader &amp; EFI</h4><a id="user-content-bootloader--efi" aria-label="Permalink: Bootloader &amp; EFI" href="#bootloader--efi"></a></p>
<ul dir="auto">
<li>Only those systems are supported which use GRUB2 bootloader. Trying to create and restore snapshots on a system using older versions of GRUB will result in a non-bootable system.</li>
<li>EFI systems are fully supported. Ensure that the <em><strong>/boot/efi</strong></em> partition is mapped while restoring a snapshot. It will be mapped automatically if detected.</li>
<li>If you are restoring from Live CD/USB, and your installed system uses EFI mode, then you must boot from Live CD/USB in EFI mode.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contribute</h2><a id="user-content-contribute" aria-label="Permalink: Contribute" href="#contribute"></a></p>
<p dir="auto">You can contribute to this project in various ways:</p>
<ul dir="auto">
<li>Submitting ideas, and reporting issues in the <a href="https://github.com/linuxmint/timeshift/issues">tracker</a></li>
<li>Translating this application to other languages in <a href="https://translations.launchpad.net/linuxmint/latest/+translations" rel="nofollow">Launchpad</a></li>
<li>Contributing code changes by fixing issues and submitting a pull request (do not modify translations, this is done in Launchpad)</li>
<li>To get started with coding, see the <a href="https://github.com/linuxmint/timeshift/blob/master/docs/development.md">development</a> docs</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[July 2024 Update on Instability Reports on Intel Core 13th/14th Gen Desktop CPUs (197 pts)]]></title>
            <link>https://community.intel.com/t5/Processors/July-2024-Update-on-Instability-Reports-on-Intel-Core-13th-and/m-p/1617113#M74792</link>
            <guid>41039708</guid>
            <pubDate>Mon, 22 Jul 2024 20:55:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://community.intel.com/t5/Processors/July-2024-Update-on-Instability-Reports-on-Intel-Core-13th-and/m-p/1617113#M74792">https://community.intel.com/t5/Processors/July-2024-Update-on-Instability-Reports-on-Intel-Core-13th-and/m-p/1617113#M74792</a>, See on <a href="https://news.ycombinator.com/item?id=41039708">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="text" id="bodyDisplay_9">
			
				
					
					
						<p>No, they have not been completely open at all. That's why people are still speculating. They didn't explain exactly what is going on. They just said incorrect elevated voltages requested by the CPU microcode are the root cause. They didn't describe exactly which voltages they are talking about, and how exactly the elevated voltages caused the instability issue.</p><p>In particular, they didn't say if the elevated voltages caused irreversible degradation of the CPU, which in turn caused the stability issues. They didn't say if fixing the microcode will make the affected CPUs stable again, or if the fix just prevents further degradation of the CPU. They didn't say if the microcode update will reduce performance to restore stability.</p><p>It's very likely that there is permanent damage to the CPUs exposed to the excessive voltage. Even CPUs that are still stable now may have had their life significantly reduced already. My CPU is unstable, it became unstable after just a couple of months of use, and I had to reduce its maximum frequency repeatedly, every 3-4 months, to keep it stable. It's very likely that it has been permanently damaged by this issue, and it might have been affected by the oxidation issue too, and it will probably have to be replaced.</p><p>Even the oxidation question has only been answered on reddit after somebody asked, instead of adding this information here from the beginning. I mean, I appreciate we got some information, but considering the scale of the issues its less than I expected.</p><p>For the oxidation issue for example, we don't have the exact time range for the products affected, or other ways to identify if we are affected or not. I bought my CPU in December 2022, so since the oxidation issue was fixed in 2023, I'm almost certainly affected.</p>
					
				
			
			
				
			
			
			
			
			
			
			
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Kawaii – A Keychain-Sized Nintendo Wii (517 pts)]]></title>
            <link>https://bitbuilt.net/forums/index.php?threads/kawaii.6474/</link>
            <guid>41038552</guid>
            <pubDate>Mon, 22 Jul 2024 19:12:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bitbuilt.net/forums/index.php?threads/kawaii.6474/">https://bitbuilt.net/forums/index.php?threads/kawaii.6474/</a>, See on <a href="https://news.ycombinator.com/item?id=41038552">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><a href="https://bitbuilt.net/forums/index.php?attachments/34375/" target="_blank">View attachment 34375</a></p><p>

A <a href="https://bitbuilt.net/forums/index.php?members/1486/" data-xf-init="member-tooltip" data-user-id="1486" data-username="@Wesk">@Wesk</a> and Yveltal collaboration!</p><p>

Last summer, while Wesk was developing the Final Destination OMEGA, he and I discussed creating a Wii micro build even smaller than the GC Nano.</p><p>

The first build to ever <b><span>FULLY</span> </b>utilize the OMEGA trim. The smallest functional Wii ever made, barely larger than the outline of the OMEGA trim itself. A literal <span><b>keychain </b></span><b><span><b>Wii!</b></span></b></p><p>

Back then, I was imagining a more traditional form factor, with a fan, 5mm heatsink, controller ports, and micro-HDMI out. Here are some of my early CAD mockups.</p><p>

<a href="https://bitbuilt.net/forums/index.php?attachments/34376/" target="_blank">View attachment 34376</a><a href="https://bitbuilt.net/forums/index.php?attachments/34377/" target="_blank">View attachment 34377</a></p><p>

A few weeks later, I had the idea to replace the plastic shell and heatsink with a machined metal unibody. Also, I replaced the controller, A/V and power ports with magnetic pogo pin connectors, shrinking it even further. Wesk did some sweet renders of this design.</p><p>

<a href="https://bitbuilt.net/forums/index.php?attachments/34378/" target="_blank">View attachment 34378</a><a href="https://bitbuilt.net/forums/index.php?attachments/34382/" target="_blank">View attachment 34382</a><a href="https://bitbuilt.net/forums/index.php?attachments/34383/" target="_blank">View attachment 34383</a><a href="https://bitbuilt.net/forums/index.php?attachments/34384/" target="_blank">View attachment 34384</a><a href="https://bitbuilt.net/forums/index.php?attachments/34385/" target="_blank">View attachment 34385</a></p><p>

As you can see, the regulators were still off-board at this point in time (on that triangular sub-PCB). This was all pre-undervolting and pre-Thundervolt! But just a few short weeks later, Wesk and Drew had cracked the code on Wii undervolting, and we started talking about <b><span>passively cooling</span></b> the Kawaii.</p><p>

Somehow nearly a year passed as I worked on Wii U trim development, and then Thundervolt development. Wesk and I realized that putting Thundervolt in Kawaii was a no-brainer, even if it meant we couldn't use an FD Omega and the unit had to grow a tiny bit, from <b><span>57x57mm</span></b> to <b><span>60x60mm</span></b>.</p><p>

Wesk took over MCAD duties and reworked the shell with new organic fins, and soon after a single magnetic pogo-pin connector.</p><p>

<a href="https://bitbuilt.net/forums/index.php?attachments/34386/" target="_blank">View attachment 34386</a><a href="https://bitbuilt.net/forums/index.php?attachments/34387/" target="_blank">View attachment 34387</a></p><p>

He also designed a dock! Originally, I anticipated using a bunch of octopus adapter cables to connect everything to the unit. But this dock will keep the Kawaii vertically oriented for optimal heat convection through the fins, and means we don't need to lug around adapters for GC controllers.</p><p>

<a href="https://bitbuilt.net/forums/index.php?attachments/34388/" target="_blank">View attachment 34388</a><a href="https://bitbuilt.net/forums/index.php?attachments/34389/" target="_blank">View attachment 34389</a><a href="https://bitbuilt.net/forums/index.php?attachments/34390/" target="_blank">View attachment 34390</a></p><p>

That brings us to today! The final Kawaii shell will be machined from aluminum and anodized in a variety of gorgeous colors. The back will be laser-etched with the project logo and dope-looking fake compliance markings.</p><p>

Planned specs:</p><ul>
<li data-xf-list-type="ul"><b><span>60x60x16mm</span></b> CNC'd aluminum chassis (passively-cooled) with laser etched artwork</li>
<li data-xf-list-type="ul">Undervolted OMEGA trim with Thundervolt</li>
<li data-xf-list-type="ul">12-pin magnetic pogo pin connector (MagSafe-like)</li>
<li data-xf-list-type="ul">Internal breakout PCB for SD-USB, input protection, and video muxing</li>
<li data-xf-list-type="ul">Dock with USB-C power input, x4 GCC controller ports, composite/component video output, &amp; stereo audio output</li>
<li data-xf-list-type="ul">Six acrylic windows with RGB LEDs for peak aesthetics</li>
<li data-xf-list-type="ul">Keychain loop</li>
</ul>
<p><a href="https://bitbuilt.net/forums/index.php?attachments/34392/" target="_blank">View attachment 34392</a><a href="https://bitbuilt.net/forums/index.php?attachments/34391/" target="_blank">View attachment 34391</a><br>
<a href="https://bitbuilt.net/forums/index.php?attachments/34395/" target="_blank">View attachment 34395</a><a href="https://bitbuilt.net/forums/index.php?attachments/34396/" target="_blank">View attachment 34396</a></p><p>

Sexy renders courtesy of Wesk:</p><p>

<a href="https://bitbuilt.net/forums/index.php?attachments/34393/" target="_blank">View attachment 34393</a><br>
<a href="https://bitbuilt.net/forums/index.php?attachments/34394/" target="_blank">View attachment 34394</a></p><div title="" data-xf-init="lightbox" data-lb-single-image="1" data-lb-container-zoom="1" data-lb-trigger=".js-lbImage-_xfUid-2-1721680201" data-lb-id="_xfUid-2-1721680201">

<p><img src="https://bitbuilt.net/forums/index.php?attachments/out-webp.34399/" data-url="https://bitbuilt.net/forums/index.php?attachments/out-webp.34399/" data-zoom-target="1">
</p></div>
<p>

Just in case the <b>60x60x16mm </b>size wasn't registering, here's how Kawaii compares to the GC Nano and Short Stack:<br>
<a href="https://bitbuilt.net/forums/index.php?attachments/34398/" target="_blank">View attachment 34398</a><a href="https://bitbuilt.net/forums/index.php?attachments/34397/" target="_blank">View attachment 34397</a></p><p>

One more thing: like the GC Nano and Short Stack, Kawaii will be fully open source once it's complete!
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Copying is the way design works (384 pts)]]></title>
            <link>https://matthewstrom.com/writing/copying/</link>
            <guid>41038372</guid>
            <pubDate>Mon, 22 Jul 2024 18:59:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://matthewstrom.com/writing/copying/">https://matthewstrom.com/writing/copying/</a>, See on <a href="https://news.ycombinator.com/item?id=41038372">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <div>
        <p>
            This is a very short book about copying. Its contents, unless
            otherwise noted, are licensed under
            <a href="https://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener">CC-BY SA 4.0</a>
            (more on that in a bit). You can download, copy, remix, excerpt,
            change, and repost it however you see fit.
        </p>
        <p>I</p>
        <p>
            <strong>Charles Eames</strong> said
            it best: “We don’t do ‘art’ — we solve problems.”<sup><a href="#fn1" id="fnref1">1</a></sup>
        </p>

        <p>
            To buy furniture in 1950, you had to choose between affordable and
            enduring, between rugged and fashionable. Charles and Ray designed a
            chair that was all the above and sold it for $20.95.<sup><a href="#fn2" id="fnref2">2</a></sup>
            They called it the LCW.<sup><a href="#fn3" id="fnref3">3</a></sup>
        </p>

        <p>
            The LCW embodies the Eames’ obsession with simplicity in material
            and method. “We want to make the best for the most for the least,”
            they said.<sup><a href="#fn4" id="fnref4">4</a></sup>
            The design was revolutionary: in 1999, <em>Time</em> magazine called
            the LCW “the best design of the century.”<sup><a href="#fn5" id="fnref5">5</a></sup>
            Today, you can buy a brand new LCW from Herman Miller (the
            officially licensed manufacturer of Eames products) for $1,195.
        </p>
        <p>
            Or, you can buy a chair called the “Fathom” from a company called
            Modway for $145.
        </p>
        <p>Functionally and aesthetically, the chairs are identical.</p>
    </div>
    <div>
        <figure>
            <div>
                <p><img loading="lazy" src="https://matthewstrom.com/images/copying-1.jpg" alt="Eames Molded Plywood Lounge Chair"></p><figcaption>
                    Eames Molded Plywood Lounge Chair<br>© Herman Miller
                </figcaption>
            </div>
            <div>
                <p><img loading="lazy" src="https://matthewstrom.com/images/copying-2.jpg" alt="Modway Fathom"></p><figcaption>Modway Fathom<br>© Modway</figcaption>
            </div>
        </figure>
    </div>
    <div>
        <p>
            There’s an LCW from 1946 in MOMA’s collection. It’s one of the very
            first ever made. Most people would call it the original LCW.
        </p>
        <p>
            Charles and Ray Eames sold the manufacturing rights for their
            furniture to Herman Miller in 1947. Collectors call the LCWs made in
            the ’40s and ’50s “originals.” But in some sense, these — and the
            more recently manufactured Herman Miller versions — are copies of
            that LCW in the MOMA collection.
        </p>
        <p>
            And then there’s the Modway Fathom. It’s clearly a copy, an
            unlicensed one at that. But at $145 (the equivalent of $12.78 in
            1947) it’s more affordable than the LCW was when it was first
            manufactured and sold. In spirit, it’s more of an original than any
            LCW: the best, for the most, for the least.
        </p>
        <hr>
        <p>
            I’m sharing this story because it demonstrates a surprising fact:
            what makes something “original” (the first, the best, the most
            famous, the most true) or a “copy” (an identical copy, an
            unauthorized replica, an interpretation or a remix) isn’t always
            obvious — or important.
        </p>
        <p>
            I’m a designer. As a designer, I feel the need to be original. If
            you’re a designer, or even if you’re just interested in design, you
            probably feel the need to be original, too. We tend to worship
            inventors and originators, designers who were trailblazing and
            innovative. And we copy them.
        </p>
        <p>
            This oxymoron of a craft can drive a person crazy. There’s lots of
            space between originality and industry, authorship and
            acknowledgement, riffing and ripping. I wrote this very short book
            to explore that space.
        </p>
        <p>
            Some people have been frustrated by copying, refused to accept it,
            and struggled with every ounce of their strength against it. Other
            people have used copying to their advantage, whether to improve
            themselves, build a community, or subvert authority.
        </p>
        <p>I’ve only been able to have a career in design because I copied.</p>
        <p>
            I hope that by the time you’ve finished reading, you’ll see how
            important copying is. Right or wrong, virtue or vice, copying is the
            way design works.
        </p>
        <p>II</p>
        <p>
            <strong>Steve Jobs copied.</strong>
            “Great artists steal,” he said, quoting Pablo Picasso (or was it
            Stravinsky? T. S. Eliot?<sup><a href="#fn6" id="fnref6">6</a></sup>). Jobs and Apple copied many designs in their early days, most
            notably from a Xerox research laboratory in Palo Alto. The story
            goes like this:
        </p>
        <p>
            In the early 20th century, Xerox was a pioneer of office technology.
            By the middle of the century, computers were getting smaller and
            more affordable, and Xerox knew they’d have to work hard to keep
            their market dominance. In 1970, The Xerox Palo Alto Research Center
            — Xerox PARC — was founded to explore the future of the “paperless
            office.”
        </p>
        <p>
            Within two years, Xerox PARC had designed a groundbreaking computer
            called the Alto. One of its innovations was a graphical user
            interface: programs and files were displayed in virtual windows
            which users navigated using a mouse. It was an eerily accurate
            picture of what personal computers would look like 30 years later.
        </p>
        <p>
            Jef Raskin, leader of the Macintosh project at Apple, had seen
            Xerox’s work. He wanted Steve Jobs to see it for himself, and set up
            a meeting.
        </p>
        <p>
            “I thought it was the best thing I’d ever seen in my life,” Jobs
            said of the Alto’s user interface. “Within ten minutes it was
            obvious to me that all computers would work like this some day.”
        </p>
        <p>
            When the Macintosh was released in 1984, it featured a graphical
            user interface. Programs and files were displayed in virtual windows
            which users navigated using a mouse.
        </p>
        <p>It was just like the Alto.</p>
    </div>
    <div>
        <figure>
            <div>
                <p><img loading="lazy" src="https://matthewstrom.com/images/copying-3.jpg" alt="Xerox Alto Operating System"></p><figcaption>
                    Xerox Star Operating System<br>© Xerox
                </figcaption>
            </div>
            <div>
                <p><img loading="lazy" src="https://matthewstrom.com/images/copying-4.jpg" alt="Apple Macintosh Operating System"></p><figcaption>
                    Apple Macintosh Operating System<br>© Apple
                </figcaption>
            </div>
        </figure>
    </div>
    <div>
        <p>Steve Jobs didn’t like to be copied.</p>
        <p>
            In 1985, a year after the Macintosh was launched, Apple sued a
            company called Digital Research Interactive for copying the
            Macintosh’s user interface. Digital Research settled out of court,
            and changed the appearance of its icons, windows, and mouse
            pointers.<sup><a href="#fn7" id="fnref7">7</a></sup>
        </p>
        <p>
            In 1990, Apple sued both Microsoft and Hewlett-Packard. The case was
            a repeat: Microsoft’s Windows and HP’s NewWave featured designs that
            Apple claimed were copies of the Macintosh’s operating system. But
            early licensing agreements between Apple and Microsoft made it
            unclear if any infringement took place; the case was thrown out.
        </p>
        <p>
            In the middle of Apple’s case against Microsoft, Xerox sued Apple,
            hoping to establish its rights as the inventor of the desktop
            interface. The court threw out this case, too, and questioned why
            Xerox took so long to raise the issue.<sup><a href="#fn8" id="fnref8">8</a></sup>
            Bill Gates later reflected on these cases: “we both had this rich
            neighbor named Xerox ... I broke into his house to steal the TV set
            and found out that [Jobs] had already stolen it.”<sup><a href="#fn9" id="fnref9">9</a></sup>
        </p>
        <p>
            The rampant copying fueling the explosive growth of consumer
            computers meant that by 1990, the desktop user interface was
            ubiquitous; it was impossible to determine who originated any part
            of it, or who copied who. The quest to stake their claim nearly
            consumed Apple. But when they emerged, they had learned a thing or
            two. Today, Apple holds more than 2,300 design patents.<sup><a href="#fn10" id="fnref10">10</a></sup>
        </p>
    </div>
    <div>
        <figure>
            <img loading="lazy" src="https://matthewstrom.com/images/copying-5.jpg" alt="Apple's design patent for a device with rounded corners">
            <figcaption>
                Apple's design patent for a device with rounded corners
            </figcaption>
        </figure>
    </div>
    <div>
        <p>
            This story ends in 2011, with Apple suing Samsung for copying the
            design of its software and hardware products. One of the most
            remarkable claims: Samsung broke the law when it sold “a rectangular
            product with four evenly rounded corners.”<sup><a href="#fn11" id="fnref11">11</a></sup>
        </p>
        <p>
            The court rejected Apple’s claim to own rounded rectangles. But it
            upheld the other claims, fining Samsung a blistering $539 million
            for patent violations.
        </p>
        <p>
            Designers copy. We steal like great artists. But when we see a copy
            of our work, we’re livid. Jobs, on Google’s Android: “I will spend
            my last dying breath if I need to, and I will spend every penny of
            Apple’s $40 billion in the bank, to right this wrong. I’m going to
            destroy Android, because it’s a stolen product.”<sup><a href="#fn12" id="fnref12">12</a></sup>
        </p>
        <p>
            Steve Jobs was unmatched in his visionary dedication to innovation.
            But he never came to terms with the inevitability of copying.
        </p>
        <p>III</p>
        <p>
            <strong>John Carmack had </strong>a
            different relationship with copying. For him, copying was a way to
            learn, a challenge to overcome, and a source of new ideas.
        </p>
        <p>
            Carmack was — still is — a brilliant coder. He’s best known for
            programming the ultraviolent and action-packed first-person shooters
            <em>Doom</em> and <em>Quake</em>. Those games pushed the limits of
            consumer computers and defined a genre. But his first real
            breakthrough game was simpler, cuter, more whimsical. It was called
            <em>Commander Keen</em>.
        </p>
        <p>
            Growing up in the early ’90s, I loved <em>Commander Keen</em>. It’s
            a goofy adventure game; you guide an eight-year-old boy wearing a
            football helmet and red Converses through alien planets, collecting
            candy bars and zapping monsters with a ray gun.
        </p>
        <p>
            <em>Keen</em> began life as a copy of another of my favorite games:
            <em>Super Mario&nbsp;Bros.&nbsp;3</em>.
        </p>
        <p>
            Before <em>Keen</em>, Carmack was working for a subscription
            software company called Softdisk. Carmack and the other programmers
            at Softdisk churned out these games at a prodigious rate: today,
            blockbuster games can take more than five years to create;<sup><a href="#fn13" id="fnref13">13</a></sup>
            Softdisk produced a brand-new full-length game every single month.
        </p>
        <p>
            In September 1990, Carmack decided that for his next game, he’d try
            to tackle a new and daunting challenge: scrolling. At the time, only
            consoles like the Nintendo had enough computing power to smoothly
            scroll scenery, characters, and enemies. The PCs were stuck to
            simple one-screen-at-a-time games. But if Carmack was going to sell
            millions of games like Nintendo had with <em>Super Mario Bros.</em>,
            he needed to figure out how to recreate the effect.
        </p>
        <p>
            So, on September 19, 1990, Carmack and another developer named Tom
            Hall decided to reverse-engineer the first level of
            <em> Super Mario Bros. 3</em>. Working through the night, Carmack
            coaxed his PC into scrolling and animating the world of
            <em>Super Mario</em>; Hall jumped back and forth between a TV screen
            and his computer, playing the Nintendo version, pausing to copy the
            images pixel-for-pixel.<sup><a href="#fn14" id="fnref14">14</a></sup>
        </p>
    </div>
    <div>
        <figure>
            <div>
                <p><img loading="lazy" src="https://matthewstrom.com/images/copying-6.jpg" alt="Super Mario Bros. 3"></p><figcaption>Super Mario Bros. 3<br>© Nintendo</figcaption>
            </div>
            <div>
                <p><img loading="lazy" src="https://matthewstrom.com/images/copying-7.jpg" alt="John Carmack's unlicensed PC port of Super Mario Bros. 3"></p><figcaption>
                    John Carmack's unlicensed PC port of Super Mario Bros. 3<br>
                </figcaption>
            </div>
        </figure>
    </div>
    <div>
        <p>
            The next day, their coworkers were floored. Nobody had ever seen a
            PC game work like this. John Romero, Carmack’s closest colleague and
            future collaborator on <em>Doom</em> and <em>Quake</em>, called it
            “the fucking coolest thing on the planet.”<sup><a href="#fn15" id="fnref15">15</a></sup>
            He insisted that they keep copying until they had finished an exact
            replica of the full game. They were going to send it to Nintendo.
        </p>
        <hr>
        <p>
            Unfortunately for Carmack and his team, Nintendo wasn’t interested
            in a PC version of <em>Super Mario</em> (their console version was
            doing just fine, thank you very much).
        </p>
        <p>
            Disappointed, but not defeated, they resolved to build a better
            version of Mario. Starting with Carmack’s code for scrolling and
            animating the screen, the coders — calling themselves Ideas from the
            Deep, keeping the game a secret from their day jobs at Softdisk —
            put their <em>Super Mario</em> copy through a complete
            metamorphosis. In place of Mario, it starred eight-year-old Billy
            Blaze. Instead of turtles and mushrooms, the enemies were aliens
            called Yorps. Instead of eating a mushroom to jump higher, Billy
            Blaze hopped on a pogo stick.
        </p>
        <figure>
            <img loading="lazy" src="https://matthewstrom.com/images/copying-8.jpg" alt="Commander Keen in Invasion of the Vorticons">
            <figcaption>
                <em>Commander Keen in Invasion of the Vorticons</em><br>©3D
                Realms
            </figcaption>
        </figure>
        <p>
            The debut <em>Commander Keen</em> game,
            <em>Commander Keen in Invasion of the Vorticons</em>, was a huge
            success. More than 50,000 copies were sold, making <em>Keen</em> one
            of the best-selling PC games of its time.<sup><a href="#fn16" id="fnref16">16</a></sup>
        </p>
        <p>
            Unlike Steve Jobs, John Carmack never changed his mind about
            copying. When his boss at Softdisk suggested that they patent
            Carmack’s PC scrolling technique, Carmack reeled. “If you ever ask
            me to patent anything,” he said, “I’ll quit.”
        </p>
        <hr>
        <p>
            In a 2005 forum post, John Carmack explained his thoughts on
            patents. While patents are framed as protecting inventors, he wrote,
            that’s seldom how they’re used. Smart programmers working on hard
            problems tend to come up with the same solutions. If any one of
            those programmers patents their solution, the rest are screwed.
        </p>
        <p>
            He concluded: “I’ll have no part of it. Its [sic] basically mugging
            someone.”<sup><a href="#fn17" id="fnref17">17</a></sup>
        </p>
        <p>
            In his games after <em>Keen</em>, Carmack would go beyond simply
            refusing to patent his inventions. He would release the source code
            to the biggest games of the ’90s, <em>Wolfenstein 3D</em>,
            <em>Doom</em>, and <em>Quake</em>. Everyone is free to download,
            modify, or copy them.
        </p>
        <p>IV</p>
        <p>
            <strong>It’s one thing to copy.</strong>
            It’s another to encourage others to copy from you. Richard Stallman
            went even further — he made copying a right.
        </p>
        <p>
            In 1983, Richard Stallman wanted to build a new operating system. At
            the time, Unix was the most popular and influential operating
            system, but it was expensive to license. Commercial licenses cost
            $20,000 — that’s $52,028 in 2020 money.<sup><a href="#fn18" id="fnref18">18</a></sup>
            And Unix was closed-source.
        </p>
        <p>
            So on September 27, 1983, he wrote this message on the Unix Wizards
            message board:
        </p>
        <blockquote>
            Free Unix!<p>
            Starting this Thanksgiving I am going to write a complete
            Unix-compatible software system called GNU (for Gnu's Not Unix), and
            give it away free to everyone who can use it. Contributions of time,
            money, programs and equipment are greatly needed.<sup><a href="#fn19" id="fnref19">19</a></sup></p></blockquote>
        <p>
            That Stallman would write software and give it to others to use, for
            free, was a radical notion. To drive the point home, Stallman wrote
            a manifesto, defining the idea of
            <strong>free software</strong> (“Free software is software that
            users have the freedom to distribute and change.”<sup><a href="#fn20" id="fnref20">20</a></sup>) The manifesto kicked off the free software movement.
        </p>
        <p>
            The enduring innovation of Stallman’s movement was how he and his
            co-conspirators used software licenses. They flipped traditional
            licensing on its head: instead of prohibiting the copying or
            distribution of the software, a free software license guarantees the
            right of people to use, modify, distribute, and learn from its code.
        </p>
    </div>
    <p>
        <figure>
            Instead of prohibiting the copying or distribution of the software,
            a free software license guarantees the right of people to use,
            modify, distribute, and learn from its code.
        </figure>
    </p>
    <div>
        <p>
            New kinds of software licenses weren’t the only product of the free
            software movement. Ideological offshoots quickly spun out into new
            groups, like the <strong>open-source software</strong> movement.
            While Stallman’s free software faction was centered around a small
            group of hard-line progressive coders, the open-source movement was
            broad and inclusive, abandoning some of Stallman’s more political
            language to spread farther and find new audiences.
        </p>
        <p>
            Permissive licensing and distributed source control form the engine
            of modern software development. They create a feedback loop, or a
            symbiotic pair, or a living organism, or maybe even a virus: the
            tools that software developers use are themselves products of the
            open-source philosophy. Free and open-source code replicates itself,
            mutates, and spreads instantly across the world.
        </p>
        <hr>
        <p>
            The free and open-source software movements (sometimes combined into
            a single acronym, FOSS) were echoed by another revolution in how
            creative works are licensed. In 2001, Lawrence Lessig, Hal Abelson,
            and Eric Eldred started Creative Commons, a non-profit and
            international network dedicated to enabling the sharing and reuse of
            “creativity and knowledge through the provision of free legal
            tools.”
        </p>
        <p>
            Nearly 20 years later, nearly half of a million images on Flickr
            have Creative Commons (or CC) licenses. Wikipedia uses CC licenses
            on all its photos and art. MIT provides more than 2,400 courses
            online for free under Creative Commons licenses. Countless millions
            of creative works have benefited from the open-source approach to
            licenses and permissions.
        </p>
    </div>
    <div>
        <figure>
            <img loading="lazy" src="https://matthewstrom.com/images/copying-9.jpg" alt="An image of a feedback loop from Flickr's Creative Commons archive">
            <figcaption>
                An image of a feedback loop from Flickr's Creative Commons
                archive
            </figcaption>
        </figure>
    </div>
    <div>
        <p>
            A decade ago, the open-source movement came to design. Michael Cho
            created
            <a href="https://unsplash.com/" target="_blank" rel="noopener">Unsplash</a>
            in 2013 to share a few photographs he thought might be useful to
            designers at startups; as of September 2020, Unsplash hosts
            2,147,579 photos, and all-time photo downloads are well over 2
            billion.<sup><a href="#fn21" id="fnref21">21</a></sup>
            Pablo Stanley recently released
            <a href="https://www.humaaans.com/" target="_blank" rel="noopener">Humaaans</a>, a collection of Creative Commons-licensed designs that can be
            re-assembled into editorial graphics.
            <a href="https://feathericons.com/" target="_blank" rel="noopener">Feather icons</a>,
            <a href="https://heroicons.dev/" target="_blank" rel="noopener">Heroicons</a>, and
            <a href="https://icons.getbootstrap.com/" target="_blank" rel="noopener">Bootstrap Icons</a>
            are all open-source and free-to-use collections of UI icons, used by
            designers to build websites and applications.
        </p>
        <p>
            Meanwhile, the explosion of open-source design resources has been
            bolstered by a new class of tools for sharing and collaborating on
            design.
            <a href="https://www.abstract.com/" target="_blank" rel="noopener">Abstract</a>
            is a version-control system for design that promises “collaboration
            without the chaos.” With Abstract, many designers can contribute to
            a single file, without worrying about overwriting each other's
            changes or always needing to download the latest versions. Figma,
            too, has just launched
            <a href="https://www.figma.com/community" target="_blank" rel="noopener">its community feature</a>
            , allowing designers to publish files and download each other’s
            projects. It’s not hard to imagine how this will evolve into a
            designer’s version of
            <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>
            in the near future. Other design tools have followed suit: both
            Sketch and Framer have launched community content hubs, laying the
            groundwork for distributed source control.<sup><a href="#fn22" id="fnref22">22</a></sup>
        </p>
        <p>
            Copying is fundamental to design, just as it is to software. The
            rise of permissive licenses and version control tools makes it seem
            like copying is a new idea, an innovative approach in an industry
            that thrives on novelty. But the truth is, copying has informed art
            and industry for thousands of years.
        </p>
        <p>V</p>
        <p>
            In China, there are many concepts of a copy, each with distinct
            subtext. Fangzhipin (仿製品) are copies that are obviously different
            from the original — like small souvenir models of a statue. Fuzhipin
            (複製品) are exact, life-size reproductions of the original.
            Fuzhipin are just as valuable as originals, and have no negative
            stigma.
        </p>
        <p>
            In 1974, local farmers in the Xi’an region of China unearthed
            life-sized sculptures of soldiers made of terra cotta clay. When
            Chinese archeologists came to investigate the site, they uncovered
            figure after figure, including horses and chariots, all exquisitely
            detailed. All told, there were more than 8,000 terra cotta soldiers.
            They were dated to 210 BCE.
        </p>
        <figure>
            <img loading="lazy" src="https://matthewstrom.com/images/copying-10.jpg" alt="Terracotta warriors, Xi'an city">
            <figcaption>Terracotta warriors, Xi'an city</figcaption>
        </figure>
        <p>
            The terracotta warriors instantly became cultural treasures. A
            museum was built on the site of the excavation, but many of the
            statues were also exhibited in traveling shows. Hundreds of
            thousands of museumgoers all over the world lined up in galleries to
            see the soldiers.
        </p>
        <p>
            Then, in 2007, a revelation rocked the Museum für Völkerkunde in
            Hamburg, Germany: some of the terracotta warriors it had on display
            were not the originals that had been discovered in the field in
            Xi’an. They were copies.
        </p>
        <p>
            The Museum für Völkerkunde’s director became a pariah: “We have come
            to the conclusion that there is no other option than to close the
            exhibition completely, in order to maintain the museum’s good
            reputation.” The museum issued refunds to visitors. The event kicked
            off a rash of geopolitical finger-pointing: German officials cried
            foul, saying they were duped; Chinese officials washed their hands,
            since they never claimed the statues were originals to begin with.
        </p>
        <p>
            The statues in the Hamburg museum were fuzhipin, exact copies. They
            were equivalent to the originals. After all, the originals were
            themselves products of mass manufacturing, made with modules and
            components cast from molds. Almost as soon as the terracotta
            warriors were discovered, Chinese artisans began producing replicas,
            continuing the work that had started more than 2,000 years
            before.<sup><a href="#fn23" id="fnref23">23</a></sup>
        </p>
        <hr>
        <p>
            It’s easy to attribute this approach to copying as a cultural
            curiosity, an aberration particular to China. But copying was just
            as vital to Western artists.
        </p>
        <p>
            Japanese art was one of the main sources of inspiration for Vincent
            van Gogh, himself one of the most influential European painters of
            the 19th century, if not of all time. Van Gogh was fascinated by the
            woodblock prints of artists like Hiroshige: stylized and vivid, they
            captured dramatic moments within compelling stories.
        </p>
        <p>
            Van Gogh’s interest went beyond inspiration. To study the techniques
            mastered by Japanese artists, he copied prints by Keisei Eisen and
            Utagawa Hiroshige. He tried to replicate their bold lines, their
            energetic compositions, and their strong colors. For his copy of
            Eisen’s A courtesan, van Gogh started by tracing the outline of the
            courtesan’s figure directly from the May 1886 edition of Paris
            Illustré. For Flowering Plum Tree and The Bridge in the Rain, both
            copies of Hiroshige prints, he added borders of Japanese calligraphy
            he had seen on other prints.<sup><a href="#fn24" id="fnref24">24</a></sup>
        </p>
    </div>
    <div>
        <figure>
            <div>
                <p><img loading="lazy" src="https://matthewstrom.com/images/copying-11.jpg" alt="Sudden Shower over Shin-Ōhashi bridge and Atake (1857) by Hiroshige"></p><figcaption>
                    <em>Sudden Shower over Shin-Ōhashi bridge and Atake</em>
                    (1857) by Hiroshige
                </figcaption>
            </div>
            <div>
                <p><img loading="lazy" src="https://matthewstrom.com/images/copying-12.jpg" alt="The Bridge in the Rain (after Hiroshige) (1887) by Vincent Van Gogh"></p><figcaption>
                    <em>The Bridge in the Rain (after Hiroshige)</em> (1887) by
                    Vincent Van Gogh
                </figcaption>
            </div>
        </figure>
    </div>
    <div>
        <p>
            His practice with Japanese styles provided a crucial breakthrough.
            Van Gogh began to flatten landscapes. He outlined his subjects in
            bold black strokes. He painted with eye-watering colors. His
            interpretations of reality lit the art world on fire, influencing
            artists and designers to this day.
        </p>
        <p>
            By copying directly from Japanese artists, van Gogh’s works became
            what we know today.
        </p>
        <p>
            He was clear about this influence. In a letter to his brother Theo,
            he wrote: “All my work is based to some extent on Japanese art.”<sup><a href="#fn25" id="fnref25">25</a></sup>
        </p>
        <hr>
        <p>
            There’s another word in Chinese for a copy: shanzhai (山寨). It’s
            translated to English as “fake,” but as with most Chinese words, the
            translation is lacking. Shanzhai literally means “mountain
            stronghold;” the word is a neologism, a recent invention, inspired
            by a famous novel in which the protagonists hide in a mountain
            stronghold to fight against a corrupt regime. Shanzhai products are
            playful, drawing attention to the fact that they aren’t original,
            putting their makers’ creativity on display.
        </p>
        <p>
            Take the popular shanzhai novel
            <em>Harry Potter and the Porcelain Doll</em>; in it, Harry goes to
            China to stop Voldemort and Voldemort’s Chinese counterpart. It
            doesn’t pretend to be an original. It plays on its fake-ness: Harry
            speaks Chinese fluently, but he has trouble eating with chopsticks.
        </p>
        <p>
            It’s easy to think of shanzhai as a Chinese quirk, but there are
            parallels in Western culture. One in particular, is a staple of the
            design community: the unsolicited redesign.
        </p>
        <p>
            An unsolicited redesign demonstrates a designer’s ideas for how a
            well-known website or app could be improved. They range from
            single-screen aesthetic tweaks (like
            <a href="https://dribbble.com/shots/13154163-Instafresh" target="_blank" rel="noopener">this take on Instagram</a>) to in-depth case studies in UX, IA, and content design (like
            <a href="https://blog.prototypr.io/gmail-an-unsolicited-redesign-1-2b244886eef8" target="_blank" rel="noopener">this redesign of Gmail’s mobile app</a>).
        </p>
        <p>
            Unsolicited redesigns copy the visual elements of the original as a
            starting point, then transform those elements to produce something
            new. Like van Gogh tracing Eisen, designers can pick up new
            techniques and approaches just by copying. But when a designer riffs
            on the original, they can create something new and inspiring.
        </p>
        <p>
            The design community has a complicated relationship with unsolicited
            redesigns. On the one hand, they’re the mainstay of talented young
            designers looking to demonstrate their ability to think critically
            about design and apply their skills. Companies have used the
            unsolicited redesign to position themselves as leaders: in 2003,
            37signals (creator of the popular project management tool Basecamp)
            created redesigns of PayPal, Google, and FedEx to critical acclaim:
            their redesign of an online car dashboard “could do for cars what
            TiVo did for television,” Jason Kottke proclaimed.<sup><a href="#fn26" id="fnref26">26</a></sup>
        </p>
        <p>
            In rare cases, unsolicited redesigns turn into solicited ones. In
            2018, Adam Fisher-Cox published a redesign of the digital signage of
            the AirTrain system at John F. Kennedy International Airport. The
            agency overseeing AirTrain saw the redesign and hired Fisher-Cox to
            implement it.<sup><a href="#fn27" id="fnref27">27</a></sup>
        </p>
    </div>
    <div>
        <figure>
            <div>
                <div>
                    <p><img loading="lazy" src="https://matthewstrom.com/images/copying-13.jpg" alt="The old signage for JFK's AirTrain"></p><figcaption>The old signage for JFK's AirTrain</figcaption>
                </div>
                <div>
                    <p><img loading="lazy" src="https://matthewstrom.com/images/copying-14.jpg" alt="The beginning of Adam's redesign, copying directly from the existing signage"></p><figcaption>
                        The beginning of the redesign, copying directly from the
                        existing signage
                    </figcaption>
                </div>
            </div>
            <div>
                    <p><img loading="lazy" src="https://matthewstrom.com/images/copying-15.jpg" alt="The final redesign comissioned by the agency in charge of AirTrain"></p><figcaption>
                        The final redesign comissioned by the agency in charge
                        of AirTrain. All images courtesy
                        <a href="https://adamfishercox.com/portfolio/airtrain-arrival-signs/">Adam Fisher-Cox.</a>
                    </figcaption>
                </div>
        </figure>
    </div>
    <div>
        <p>
            On the other hand, unsolicited redesigns are often looked down on.
            In a 2013 essay titled “Keep Your Unsolicited Redesign to
            Yourself,”<sup><a href="#fn28" id="fnref28">28</a></sup>
            Eric Karjaluoto argued that without acknowledging the constraints
            and incentives that guided an original design, the redesign is
            “utter fluff.” Those working on unsolicited redesigns “should know
            better than to waste their time.” There are countless other
            invectives against unsolicited redesign across the internet of
            design blogs.
        </p>
        <p>
            In 2011,
            <a href="https://web.archive.org/web/20111208041110/https://andyrutledge.com/news-redux.php" target="_blank" rel="noopener">Andy Rutledge’s unsolicited redesign of <em>The New York Times</em></a>
            drew the attention of design pundits in countless blog posts and
            tweets.<sup><a href="#fn29" id="fnref29">29</a></sup>
            But if they disagreed with Rutledge’s conclusions, many defended his
            approach. “Sometimes we need to go crazy and mock up stuff that
            can’t absolutely work in its pure form,” wrote Stijn Debrouwere,
            because “a full-on rethink might be what we need to move
            forward.”<sup><a href="#fn30" id="fnref30">30</a></sup>
            Even Khoi Vinh, previous design director for the Times, supported
            the practice: “Unsolicited redesigns are terrific and fun and
            useful, and I hope designers never stop doing them.”<sup><a href="#fn31" id="fnref31">31</a></sup>
        </p>
        <p>
            The shanzhai approach of copying — to learn, to invent, to comment,
            to make a statement — is just at home in the West as it is in China.
        </p>
        <p>VI</p>
        <p>
            Copying can be instructive, challenging, devious, or revolutionary.
            To me, copying is fun.
        </p>
        <p>
            When I was young, I liked to trace. My mom would buy me tracing
            paper, and I’d copy comic book characters line for line. Pulling the
            paper back from the original was a rush. I drew this! With my hand!
            Sure, it was a copy, but once I signed my name in the corner, it was
            my copy.
        </p>
        <p>
            These days, there’s automatic copy protection on just about
            everything. You can’t easily pirate Netflix streams, copy Kindle
            books, or torrent Adobe Creative Cloud. But designs are different.
            To copy a design, all you need is tracing paper.
        </p>
        <p>
            In fact, you don’t even have to draw. Pull out your phone, take a
            picture, and save it to your Pinterest board. You can use a color
            picker to extract the exact shade from the design, use a physical or
            digital measuring tool to get the pixel-perfect dimensions, and use
            <a href="https://www.myfonts.com/WhatTheFont/" target="_blank" rel="noopener">WhatTheFont</a>
            to learn the typefaces in the design.
        </p>
        <p>
            If you’re looking at a website, you can just click “view source” and
            see all the design decisions laid out in granular detail. That’s
            exactly how I went from tracing comic books to being a designer: I
            copied designs from websites I liked and pasted them onto my Xanga
            blog.
        </p>
        <p>I copied because I could.</p>
        <p>
            In my first design job, I copied relentlessly. I had created a music
            magazine with friends and tried to recreate the layouts I saw in my
            favorite mags. Wired was a constant source of inspiration: I
            obsessed over their typography. When I figured out that they were
            using Joshua Darden’s Freight Micro, I switched our magazine to use
            it, too.
        </p>
        <p>
            Copying helped me develop as a designer without needing to go to
            design school. For lots of people too young for college-level design
            programs, or without the means to attend these schools or bootcamps,
            copying serves the same function.
        </p>
        <p>
            And then, when folks like me wind up in a career in design, we find
            that copying is still useful. I eyedropper colors from Apple’s
            marketing websites. I start my color palettes from Google’s Material
            Design examples. I screenshot and recreate components from
            Facebook’s new redesign.
        </p>
        <p>
            I don’t fancy myself to be the van Gogh of design, to be anywhere on
            the level of Stallman or Carmack in my approach to copying,
            possessing even one-one-hundredth of Steve Jobs’ ability to steal
            artfully, or to be in any way comparable to Charles or Ray Eames.
            But I can certainly copy all of their work. I can copy their
            mindset, their process, and their designs.
        </p>
        <p>
            I can make cheap, small-scale facsimiles, fangzhipin, to demonstrate
            some quality of the original. I can make exact replicas,
            pixel-perfect fuzhipin, to learn how the originals and their
            creators work. Or I can create shanzhai, unsolicited redesigns,
            commenting and riffing on the work of others. All these copies have
            an important role to play in the process of design.
        </p>
        <p>
            Whether you believe that it’s worthwhile or worthless to copy,
            whether you think that copies are a valuable part of the design
            community or a scourge, you are using software, hardware, websites
            and apps that all owe their existence to copying.
        </p>
        <p>As long as there is design, there will be copying.</p>
        <hr>
    </div>
    <section>
        <p>
            Footnotes &amp; References
        </p>
        <ol>
            <li id="fn1">
                <p>
                    Cook, William. “Charles and Ray Eames: The Couple Who Shaped
                    the Way We Live.” Accessed October 27, 2020.
                    https://www.bbc.com/culture/article/​20171218-charles-and-ray-eames-the-couple-who-shaped-the-way-we-live.<a href="#fnref1">↩︎</a>
                </p>
            </li>
            <li id="fn2">
                <p>
                    That’s the equivalent of $205.48 today.<a href="#fnref2">↩︎</a>
                </p>
            </li>
            <li id="fn3">
                <p>
                    An acronym of “low chair wood” or “lounge chair wood.”<a href="#fnref3">↩︎</a>
                </p>
            </li>
            <li id="fn4">
                <p>
                    Jim Carroll’s Blog. “‘The Best for the Most for the Least’:
                    The Eames Office and the Democratic Impulse.” Accessed
                    October 27, 2020.
                    https://www.jimcarrollsblog.com/blog/​2018/11/22/the-best-for-the-most-for-the-least-the-eames-office-and-the-democratic-impulse.<a href="#fnref4">↩︎</a>
                </p>
            </li>
            <li id="fn5">
                <p>
                    “The Best Of The Century.” Time, December 26, 1999.
                    http://content.time.com/time/​magazine/article/0,9171,36533-1,00.html.<a href="#fnref5">↩︎</a>
                </p>
            </li>
            <li id="fn6">
                <p>
                    If you’re curious, it was W. H. Davenport Adams (<a href="https://quoteinvestigator.com/2013/03/06/artists-steal/" target="_blank" rel="noopener">https://quoteinvestigator.com/2013/03/06/artists-steal/</a>).<a href="#fnref6">↩︎</a>
                </p>
            </li>
            <li id="fn7">
                <p>
                    “Digital Research To Modify GEM.”
                    <em>The New York Times,</em> October 1, 1985.
                    https://www.nytimes.com/1985/10/01/​business/digital-research-to-modify-gem.html.<a href="#fnref7">↩︎</a>
                </p>
            </li>
            <li id="fn8">
                <p>
                    Fisher, Lawrence M., and Special To the New York Times.
                    “COMPANY NEWS; Xerox Sues Apple Computer Over Macintosh
                    Copyright (Published 1989).” <em>The New York Times</em>,
                    December 15, 1989.
                    https://www.nytimes.com/1989/12/15/​business/company-news-xerox-sues-apple-computer-over-macintosh-copyright.html.<a href="#fnref8">↩︎</a>
                </p>
            </li>
            <li id="fn9">
                <p>
                    Dernbach, Christoph. “Did Steve Jobs Steal Everything from
                    Xerox PARC?” Mac History (blog), March 22, 2012.
                    https://www.mac-history.net/computer-history/2012-03-22/apple-and-xerox-parc.<a href="#fnref9">↩︎</a>
                </p>
            </li>
            <li id="fn10">
                <p>
                    “Google Patents.” Accessed October 27, 2020.
                    https://patents.google.com/?assignee=Apple+Inc&amp;type=DESIGN.<a href="#fnref10">↩︎</a>
                </p>
            </li>
            <li id="fn11">
                <p>
                    Apple, Inc. v. Samsung Elecs. Co., Inc., No. 14-1335 (Fed.
                    Cir. 2015).<a href="#fnref11">↩︎</a>
                </p>
            </li>
            <li id="fn12">
                <p>
                    Isaacson, Walter. <em>Steve Jobs</em>. New York: Simon &amp;
                    Schuster, 2011.<a href="#fnref12">↩︎</a>
                </p>
            </li>
            <li id="fn13">
                <p>
                    “Why Do AAA Games Often Take 1 to 2 Years to Make If They
                    Have Big Teams Working on Them? - Quora.” Accessed October
                    27, 2020.
                    https://www.quora.com/Why-do-AAA-games-often-take-1-to-2-years-to-make-if-they-have-big-teams-working-on-them.<a href="#fnref13">↩︎</a>
                </p>
            </li>
            <li id="fn14">
                <p>
                    You can watch a video of Carmack’s copy here:
                    <a href="https://www.youtube.com/watch?v=1YWD6Y9FUuw" target="_blank" rel="noopener">https://www.youtube.com/watch?v=1YWD6Y9FUuw</a>
                    <a href="#fnref14">↩︎</a>
                </p>
            </li>
            <li id="fn15">
                <p>
                    Kushner, David.
                    <em>Masters of Doom: How Two Guys Created an Empire and
                        Transformed Pop Culture</em>. New York: Random House Trade Paperbacks, 2004.<a href="#fnref15">↩︎</a>
                </p>
            </li>
            <li id="fn16">
                <p>
                    <em>Commander Keen</em> was distributed as shareware,
                    meaning anyone could freely download and copy the first of
                    three installments. The entire game could then be purchased
                    from the publisher.<a href="#fnref16">↩︎</a>
                </p>
            </li>
            <li id="fn17">
                <p>
                    “Are Video Game Patents Next? - Slashdot.” Accessed October
                    27, 2020.
                    https://slashdot.org/comments.pl?sid=151312&amp;cid=12701745.<a href="#fnref17">↩︎</a>
                </p>
            </li>
            <li id="fn18">
                <p>
                    <em>Byte Magazine Volume 08 Number 10 - UNIX</em>, 1983.
                    http://archive.org/details/byte-magazine-1983-10.<a href="#fnref18">↩︎</a>
                </p>
            </li>
            <li id="fn19">
                <p>
                    “New UNIX Implementation.” Accessed October 27, 2020.
                    https://groups.google.com/g/​net.unix-wizards/c/8twfRPM79u0/m/1xlglzrWrU0J?pli=1.<a href="#fnref19">↩︎</a>
                </p>
            </li>
            <li id="fn20">
                <p>
                    “The GNU Manifesto.” Accessed October 27, 2020.
                    https://www.gnu.org/gnu/manifesto.html.<a href="#fnref20">↩︎</a>
                </p>
            </li>
            <li id="fn21">
                <p>
                    “Statistics | Unsplash.” Accessed October 27, 2020.
                    https://unsplash.com/stats.<a href="#fnref21">↩︎</a>
                </p>
            </li>
            <li id="fn22">
                <p>
                    Sketch Cloud:
                    <a href="https://sketch.com/c" target="_blank" rel="noopener">https://sketch.com/c</a>, Framer Packages:
                    <a href="https://packages.framer.com/" target="_blank" rel="noopener">https://packages.framer.com/</a><a href="#fnref22">↩︎</a>
                </p>
            </li>
            <li id="fn23">
                <p>
                    Han, Byung-Chul, and Philippa Hurd.
                    <em>Shanzhai: Deconstruction in Chinese</em>. Untimely
                    Meditations. Boston, MA: The MIT Press, 2017.<a href="#fnref23">↩︎</a>
                </p>
            </li>
            <li id="fn24">
                <p>
                    “Japonaiserie (Van Gogh).” In <em>Wikipedia</em>, July 21,
                    2020.
                    https://en.wikipedia.org/w/index.php?​title=Japonaiserie_(Van_Gogh)​&amp;oldid=968846328.<a href="#fnref24">↩︎</a>
                </p>
            </li>
            <li id="fn25">
                <p>
                    “Inspiration from Japan.” Accessed October 27, 2020.
                    https://vangoghmuseum-prod.azurewebsites.net/​en/stories/inspiration-from-japan.<a href="#fnref25">↩︎</a>
                </p>
            </li>
            <li id="fn26">
                <p>
                    “37Better Project: Better Thinking, Design and Usability
                    Leads to Better Online Experiences,” December 14, 2003.
                    https://web.archive.org/web/​20031214174325/​http://37signals.com/better.php.<a href="#fnref26">↩︎</a>
                </p>
            </li>
            <li id="fn27">
                <p>
                    Adam Fisher-Cox. “Minimizing Lost Time for AirTrain Riders
                    at JFK Airport.” Accessed October 27, 2020.
                    https://adamfishercox.com/portfolio/airtrain-arrival-signs/.<a href="#fnref27">↩︎</a>
                </p>
            </li>
            <li id="fn28">
                <p>
                    Eric Karjaluoto. “Keep Your Unsolicited Redesign to
                    Yourself,” August 25, 2013.
                    http://www.erickarjaluoto.com/blog/keep-your-unsolicited-redesign-to-yourself/.<a href="#fnref28">↩︎</a>
                </p>
            </li>
            <li id="fn29">
                <p>
                    For example, Joshua Benton’s counter-critique on
                    <a href="https://www.niemanlab.org/2011/07/designing-a-big-news-site-is-about-more-than-beauty/" target="_blank" rel="noopener">Nieman Labs’ website.</a><a href="#fnref29">↩︎</a>
                </p>
            </li>
            <li id="fn30">
                <p>
                    “The Andy Rutledge Debacle,” December 28, 2011.
                    https://web.archive.org/web/​20111228200142/​http://stdout.be/​2011/07/26/the-andy-rutledge-debacle/.<a href="#fnref30">↩︎</a>
                </p>
            </li>
            <li id="fn31">
                <p>
                    Subtraction.com. “A Word About Unsolicited Redesigns,” July
                    28, 2011.
                    https://www.subtraction.com/​2011/07/28/unsolicited-redesigns/.<a href="#fnref31">↩︎</a>
                </p>
            </li>
        </ol>
    </section>
    <section>
        <p>Colophon</p>
        <p>
                This very short book is set in
                <a href="https://practicaltypography.com/charter.html" target="_blank" rel="noopener">Charter</a>
                and
                <a href="https://rsms.me/inter/" target="_blank" rel="noopener">Inter</a>. The headline is set in
                <a href="https://gitlab.com/bonjour-monde/fonderie/syne-typeface" target="_blank" rel="noopener">Syne</a>. All typography used is open-source. Very special thanks to
                Josh Petersel and Sasha Awn for feedback on early drafts of this
                book.
            </p>
    </section>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[What Is Entropy? (188 pts)]]></title>
            <link>https://johncarlosbaez.wordpress.com/2024/07/20/what-is-entropy/</link>
            <guid>41037981</guid>
            <pubDate>Mon, 22 Jul 2024 18:33:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://johncarlosbaez.wordpress.com/2024/07/20/what-is-entropy/">https://johncarlosbaez.wordpress.com/2024/07/20/what-is-entropy/</a>, See on <a href="https://news.ycombinator.com/item?id=41037981">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page">
				<p>I wrote a little book about entropy; here’s the current draft:</p>
<p>• <em><a href="http://math.ucr.edu/home/baez/what_is_entropy.pdf">What is Entropy?</a></em></p>
<p>If you see typos and other mistakes, or have trouble understanding things, please let me know!</p>
<p>An alternative title would be <em>92 Tweets on Entropy</em>, but people convinced me that title wouldn’t age well: in decade or two few people may remember what ‘tweets’ were.</p>
<p>Here is the foreword, which explains the basic idea.</p>
<h4> Foreword</h4>
<p>Once there was a thing called Twitter, where people exchanged short messages called ‘tweets’.    While it had its flaws, I came to like it and eventually decided to teach a short course on entropy  in the form of tweets.    This little book is a slightly expanded version of that course.</p>
<p>It’s easy to wax poetic about entropy, but what is it?   I claim it’s the amount of information we don’t know about a situation, which in principle we could learn.     But how can we make this idea precise and quantitative?  To focus the discussion I  decided to tackle a specific puzzle: why does hydrogen gas at room temperature and pressure have an entropy corresponding to about 23 unknown bits of information per molecule?   This gave me an excuse to explain these subjects:</p>
<p>• information<br>
• Shannon entropy and Gibbs entropy<br>
• the principle of maximum entropy<br>
• the Boltzmann distribution<br>
• temperature and coolness<br>
• the relation between entropy, expected energy and temperature<br>
• the equipartition theorem<br>
• the partition function<br>
• the relation between expected energy, free energy and entropy<br>
• the entropy of a classical harmonic oscillator<br>
• the entropy of a classical particle in a box<br>
• the entropy of a classical ideal gas.</p>
<p>I have largely avoided the second law of thermodynamics, which says that entropy always increases.  While fascinating, this is so problematic that a good explanation would require another book!   I have also avoided the role of entropy in biology, black hole physics, etc.   Thus, the aspects of entropy most beloved by physics popularizers will not be found here.  I also never say that entropy is ‘disorder’.</p>
<p>I have tried to say as little as possible about quantum mechanics, to keep the physics prerequisites low.   However, Planck’s constant shows up in the formulas for the entropy of the three classical systems mentioned above.  The reason for this is fascinating:  Planck’s constant provides a unit of volume in position-momentum space, which is necessary to define the entropy of these systems.  Thus, we need a tiny bit of quantum mechanics to get a good approximate formula for the entropy of hydrogen, even if we are trying our best to treat this gas classically.</p>
<p>Since I am a mathematical physicist, this book is full of math.  I spend more time trying to make concepts precise and looking into strange counterexamples than an actual ‘working’ physicist would.   If at any point you feel I am sinking into too many technicalities, don’t be shy about jumping to the next tweet. The really important stuff is in the boxes.  It may help to reach the end before going back and learning all the details.  It’s up to you.</p>

				
				<p>
					<small>
					This entry was posted  on Saturday, July 20th, 2024 at 5:35 pm and is filed under <a href="https://johncarlosbaez.wordpress.com/category/physics/" rel="category tag">physics</a>, <a href="https://johncarlosbaez.wordpress.com/category/probability/" rel="category tag">probability</a>.					You can follow any responses to this entry through the <a href="https://johncarlosbaez.wordpress.com/2024/07/20/what-is-entropy/feed/">RSS 2.0</a> feed.
											You can <a href="#respond">leave a response</a>, or <a href="https://johncarlosbaez.wordpress.com/2024/07/20/what-is-entropy/trackback/" rel="trackback">trackback</a> from your own site.
					
					</small>
				</p>

				<nav id="nav-below">
					<h3>Post navigation</h3>
					<span><a href="https://johncarlosbaez.wordpress.com/2024/06/17/van-der-waals-forces/" rel="prev">« Previous Post</a></span>
					<span></span>
				</nav><!-- #nav-below -->

			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Netflix has open-sourced its Maestro Workflow Orchestrator (134 pts)]]></title>
            <link>https://github.com/Netflix/maestro</link>
            <guid>41037774</guid>
            <pubDate>Mon, 22 Jul 2024 18:21:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Netflix/maestro">https://github.com/Netflix/maestro</a>, See on <a href="https://news.ycombinator.com/item?id=41037774">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Maestro</h2><a id="user-content-maestro" aria-label="Permalink: Maestro" href="#maestro"></a></p>
<p dir="auto"><a href="https://netflixtechblog.com/orchestrating-data-ml-workflows-at-scale-with-netflix-maestro-aaa2b41b800c" rel="nofollow">Maestro</a>
is a general-purpose workflow orchestrator that
provides a fully managed workflow-as-a-service (WAAS) to the data platform users at Netflix.</p>
<p dir="auto">It serves thousands of users, including data scientists, data engineers, machine learning engineers,
software engineers, content producers, and business analysts, for various use cases.
It schedules hundreds of thousands of workflows, millions of jobs every day
and operate with a strict SLO even when there are spikes in the traffic.
Maestro is highly scalable and extensible to support existing and new use cases and offers enhanced usability to end users.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Get started</h2><a id="user-content-get-started" aria-label="Permalink: Get started" href="#get-started"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Prerequisite</h2><a id="user-content-prerequisite" aria-label="Permalink: Prerequisite" href="#prerequisite"></a></p>
<ul dir="auto">
<li>Git</li>
<li>Java 21</li>
<li>Gradle</li>
<li>Docker</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Build it</h2><a id="user-content-build-it" aria-label="Permalink: Build it" href="#build-it"></a></p>
<ul dir="auto">
<li><code>./gradlew build</code></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Run it</h2><a id="user-content-run-it" aria-label="Permalink: Run it" href="#run-it"></a></p>
<ul dir="auto">
<li><code>./gradlew bootRun</code></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Create a sample workflow</h2><a id="user-content-create-a-sample-workflow" aria-label="Permalink: Create a sample workflow" href="#create-a-sample-workflow"></a></p>
<ul dir="auto">
<li><code>curl --header "user: tester" -X POST 'http://127.0.0.1:8080/api/v3/workflows' -H "Content-Type: application/json" -d @maestro-server/src/test/resources/samples/sample-dag-test-1.json</code></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Get the sample workflow definition</h2><a id="user-content-get-the-sample-workflow-definition" aria-label="Permalink: Get the sample workflow definition" href="#get-the-sample-workflow-definition"></a></p>
<ul dir="auto">
<li><code>curl -X GET 'http://127.0.0.1:8080/api/v3/workflows/sample-dag-test-1/versions/latest'</code></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Trigger to run the sample workflow</h2><a id="user-content-trigger-to-run-the-sample-workflow" aria-label="Permalink: Trigger to run the sample workflow" href="#trigger-to-run-the-sample-workflow"></a></p>
<ul dir="auto">
<li><code>curl --header "user: tester" -X POST 'http://127.0.0.1:8080/api/v3/workflows/sample-dag-test-1/versions/latest/actions/start' -H "Content-Type: application/json" -d '{"initiator": {"type": "manual"}}'</code></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Get the sample workflow instance</h2><a id="user-content-get-the-sample-workflow-instance" aria-label="Permalink: Get the sample workflow instance" href="#get-the-sample-workflow-instance"></a></p>
<ul dir="auto">
<li><code>curl -X GET 'http://127.0.0.1:8080/api/v3/workflows/sample-dag-test-1/instances/1/runs/1'</code></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Delete the sample workflow and its data</h2><a id="user-content-delete-the-sample-workflow-and-its-data" aria-label="Permalink: Delete the sample workflow and its data" href="#delete-the-sample-workflow-and-its-data"></a></p>
<ul dir="auto">
<li><code>curl --header "user: tester" -X DELETE 'http://127.0.0.1:8080/api/v3/workflows/sample-dag-test-1'</code></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Copyright 2024 Netflix, Inc.</p>
<p dir="auto">Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at</p>
<div data-snippet-clipboard-copy-content="http://www.apache.org/licenses/LICENSE-2.0"><pre><code>http://www.apache.org/licenses/LICENSE-2.0
</code></pre></div>
<p dir="auto">Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Maestro: Netflix's Workflow Orchestrator (214 pts)]]></title>
            <link>https://netflixtechblog.com/maestro-netflixs-workflow-orchestrator-ee13a06f9c78</link>
            <guid>41037745</guid>
            <pubDate>Mon, 22 Jul 2024 18:20:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://netflixtechblog.com/maestro-netflixs-workflow-orchestrator-ee13a06f9c78">https://netflixtechblog.com/maestro-netflixs-workflow-orchestrator-ee13a06f9c78</a>, See on <a href="https://news.ycombinator.com/item?id=41037745">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><a href="https://netflixtechblog.medium.com/?source=post_page-----ee13a06f9c78--------------------------------" rel="noopener follow"><div aria-hidden="false"><p><img alt="Netflix Technology Blog" src="https://miro.medium.com/v2/resize:fill:88:88/1*BJWRqfSMf9Da9vsXG9EBRQ.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"></p></div></a><a href="https://netflixtechblog.com/?source=post_page-----ee13a06f9c78--------------------------------" rel="noopener  ugc nofollow"><div aria-hidden="false"><p><img alt="Netflix TechBlog" src="https://miro.medium.com/v2/resize:fill:48:48/1*ty4NvNrGg4ReETxqU2N3Og.png" width="24" height="24" loading="lazy" data-testid="publicationPhoto"></p></div></a></div><p id="0ec7">By <a href="https://www.linkedin.com/in/jheua/" rel="noopener ugc nofollow" target="_blank">Jun He</a>, <a href="https://www.linkedin.com/in/natalliadzenisenka/" rel="noopener ugc nofollow" target="_blank">Natallia Dzenisenka</a>, <a href="https://www.linkedin.com/in/praneethy91/" rel="noopener ugc nofollow" target="_blank">Praneeth Yenugutala</a>, <a href="https://www.linkedin.com/in/yingyi-zhang-a0a164111/" rel="noopener ugc nofollow" target="_blank">Yingyi Zhang</a>, and <a href="https://www.linkedin.com/in/anjali-norwood-9521a16" rel="noopener ugc nofollow" target="_blank">Anjali Norwood</a></p><h2 id="4de7">TL;DR</h2><p id="3080">We are thrilled to announce that the Maestro source code is now open to the public! Please visit the <a href="https://github.com/Netflix/maestro" rel="noopener ugc nofollow" target="_blank">Maestro GitHub repository</a> to get started. If you find it useful, please <a href="https://github.com/Netflix/maestro" rel="noopener ugc nofollow" target="_blank">give us a star</a>.</p><h2 id="2bef">What is Maestro</h2><p id="3756">Maestro is a general-purpose, horizontally scalable workflow orchestrator designed to manage large-scale workflows such as data pipelines and machine learning model training pipelines. It oversees the entire lifecycle of a workflow, from start to finish, including retries, queuing, task distribution to compute engines, etc.. Users can package their business logic in various formats such as Docker images, notebooks, bash script, SQL, Python, and more. Unlike traditional workflow orchestrators that only support Directed Acyclic Graphs (DAGs), Maestro supports both acyclic and cyclic workflows and also includes multiple reusable patterns, including foreach loops, subworkflow, and conditional branch, etc.</p><h2 id="6c09">Our Journey with Maestro</h2><p id="f334">Since we first introduced Maestro in <a rel="noopener ugc nofollow" target="_blank" href="https://netflixtechblog.com/orchestrating-data-ml-workflows-at-scale-with-netflix-maestro-aaa2b41b800c">this blog post</a>, we have successfully migrated hundreds of thousands of workflows to it on behalf of users with minimal interruption. The transition was seamless, and Maestro has met our design goals by handling our ever-growing workloads. Over the past year, we’ve seen a remarkable 87.5% increase in executed jobs. Maestro now launches thousands of workflow instances and runs half a million jobs daily on average, and has completed around 2 million jobs on particularly busy days.</p><h2 id="fd3e">Scalability and Versatility</h2><p id="5f06">Maestro is a fully managed workflow orchestrator that provides Workflow-as-a-Service to thousands of end users, applications, and services at Netflix. It supports a wide range of workflow use cases, including ETL pipelines, ML workflows, AB test pipelines, pipelines to move data between different storages, etc. Maestro’s horizontal scalability ensures it can manage both a large number of workflows and a large number of jobs within a single workflow.</p><p id="c621">At Netflix, workflows are intricately connected. Splitting them into smaller groups and managing them across different clusters adds unnecessary complexity and degrades the user experience. This approach also requires additional mechanisms to coordinate these fragmented workflows. Since Netflix’s data tables are housed in a single data warehouse, we believe a single orchestrator should handle all workflows accessing it.</p><p id="986e">Join us on this exciting journey by exploring the <a href="https://github.com/Netflix/maestro" rel="noopener ugc nofollow" target="_blank">Maestro GitHub repository</a> and contributing to its ongoing development. Your support and feedback are invaluable as we continue to improve the Maestro project.</p><h2 id="7110">Introducing Maestro</h2><p id="4941">Netflix Maestro offers a comprehensive set of features designed to meet the diverse needs of both engineers and non-engineers. It includes the common functions and reusable patterns applicable to various use cases in a loosely coupled way.</p><p id="1921">A workflow definition is defined in a JSON format. Maestro combines user-supplied fields with those managed by Maestro to form a flexible and powerful orchestration definition. An example can be found in the <a href="https://github.com/Netflix/maestro/wiki/Workflow-definition-example" rel="noopener ugc nofollow" target="_blank">Maestro repository wiki</a>.</p><p id="2ac0">A Maestro workflow definition comprises two main sections: properties and versioned workflow including its metadata. Properties include author and owner information, and execution settings. Maestro preserves key properties across workflow versions, such as author and owner information, run strategy, and concurrency settings. This consistency simplifies management and aids in trouble-shootings. If the ownership of the current workflow changes, the new owner can claim the ownership of the workflows without creating a new workflow version. Users can also enable the triggering or alerting features for a given workflow over the properties.</p><p id="656f">Versioned workflow includes attributes like a unique identifier, name, description, tags, timeout settings, and criticality levels (low, medium, high) for prioritization. Each workflow change creates a new version, enabling tracking and easy reversion, with the active or the latest version used by default. A workflow consists of steps, which are the nodes in the workflow graph defined by users. Steps can represent jobs, another workflow using subworkflow step, or a loop using foreach step. Steps consist of unique identifiers, step types, tags, input and output step parameters, step dependencies, retry policies, and failure mode, step outputs, etc. Maestro supports configurable retry policies based on error types to enhance step resilience.</p><p id="cf60">This high-level overview of Netflix Maestro’s workflow definition and properties highlights its flexibility to define complex workflows. Next, we dive into some of the useful features in the following sections.</p><h2 id="5be6">Workflow Run Strategy</h2><p id="ae40">Users want to automate data pipelines while retaining control over the execution order. This is crucial when workflows cannot run in parallel or must halt current executions when new ones occur. Maestro uses predefined run strategies to decide whether a workflow instance should run or not. Here is the list of predefined run strategies Maestro offers.</p><p id="a617"><strong>Sequential Run Strategy</strong><br>This is the default strategy used by maestro, which runs workflows one at a time based on a First-In-First-Out (FIFO) order. With this run strategy, Maestro runs workflows in the order they are triggered. Note that an execution does not depend on the previous states. Once a workflow instance reaches one of the terminal states, whether succeeded or not, Maestro will start the next one in the queue.</p><p id="9d17"><strong>Strict Sequential Run Strategy<br></strong>With this run strategy, Maestro will run workflows in the order they are triggered but block execution if there’s a blocking error in the workflow instance history. Newly triggered workflow instances are queued until the error is resolved by manually restarting the failed instances or marking the failed ones unblocked.</p><figure></figure><p id="8320">In the above example, run5 fails at 5AM, then later runs are queued but do not run. When someone manually marks run5 unblocked or restarts it, then the workflow execution will resume. This run strategy is useful for time insensitive but business critical workflows. This gives the workflow owners the option to review the failures at a later time and unblock the executions after verifying the correctness.</p><p id="b23e"><strong>First-only Run Strategy</strong><br>With this run strategy, Maestro ensures that the running workflow is complete before queueing a new workflow instance. If a new workflow instance is queued while the current one is still running, Maestro will remove the queued instance. Maestro will execute a new workflow instance only if there is no workflow instance currently running, effectively turning off queuing with this run strategy. This approach helps to avoid idempotency issues by not queuing new workflow instances.</p><p id="eaa2"><strong>Last-only Run Strategy</strong><br>With this run strategy, Maestro ensures the running workflow is the latest triggered one and keeps only the last instance. If a new workflow instance is queued while there is an existing workflow instance already running, Maestro will stop the running instance and execute the newly triggered one. This is useful if a workflow is designed to always process the latest data, such as processing the latest snapshot of an entire table each time.</p><p id="7523"><strong>Parallel with Concurrency Limit Run Strategy</strong><br>With this run strategy, Maestro will run multiple triggered workflow instances in parallel, constrained by a predefined concurrency limit. This helps to fan out and distribute the execution, enabling the processing of large amounts of data within the time limit. A common use case for this strategy is for backfilling the old data.</p><h2 id="3d04">Parameters and Expression Language Support</h2><p id="7591">In Maestro, parameters play an important role. Maestro supports dynamic parameters with code injection, which is super useful and powerful. This feature significantly enhances the flexibility and dynamism of workflows, allowing using parameters to control execution logic and enable state sharing between workflows and their steps, as well as between upstream and downstream steps. Together with other Maestro features, it makes the defining of workflows dynamic and enables users to define parameterized workflows for complex use cases.</p><p id="efd3">However, code injection introduces significant security and safety concerns. For example, users might unintentionally write an infinite loop that creates an array and appends items to it, eventually crashing the server with out-of-memory (OOM) issues. While one approach could be to ask users to embed the injected code within their business logic instead of the workflow definition, this would impose additional work on users and tightly couple their business logic with the workflow. In certain cases, this approach blocks users to design some complex parameterized workflows.</p><p id="ef02">To mitigate these risks and assist users to build parameterized workflows, we developed our own customized expression language parser, a simple, secure, and safe expression language (SEL). SEL supports code injection while incorporating validations during syntax tree parsing to protect the system. It leverages the Java Security Manager to restrict access, ensuring a secure and controlled environment for code execution.</p><p id="3a2f"><strong>Simple, Secure, and Safe Expression Language (SEL)<br></strong>SEL is a homemade simple, secure, and safe expression language (SEL) to address the risks associated with code injection within Maestro parameterized workflows. It is a simple expression language and the grammar and syntax follow JLS (<a href="https://docs.oracle.com/javase/specs/" rel="noopener ugc nofollow" target="_blank">Java Language Specifications</a>). SEL supports a subset of JLS, focusing on Maestro use cases. For example, it supports data types for all Maestro parameter types, raising errors, datetime handling, and many predefined utility methods. SEL also includes additional runtime checks, such as loop iteration limits, array size checks, object memory size limits and so on, to enhance security and reliability. For more details about SEL, please refer to the <a href="https://github.com/Netflix/maestro/blob/main/netflix-sel/docs/index.md#welcome-to-sel" rel="noopener ugc nofollow" target="_blank">Maestro GitHub documentation</a>.</p><p id="0162"><strong>Output Parameters</strong><br>To further enhance parameter support, Maestro allows for callable step execution, which returns output parameters from user execution back to the system. The output data is transmitted to Maestro via its REST API, ensuring that the step runtime does not have direct access to the Maestro database. This approach significantly reduces security concerns.</p><p id="e293"><strong>Parameterized Workflows</strong><br>Thanks to the powerful parameter support, users can easily create parameterized workflows in addition to static ones. Users enjoy defining parameterized workflows because they are easy to manage and troubleshoot while being powerful enough to solve complex use cases.</p><ul><li id="ecc7">Static workflows are simple and easy to use but come with limitations. Often, users have to duplicate the same workflow multiple times to accommodate minor changes. Additionally, workflow and jobs cannot share the states without using parameters.</li><li id="26fe">On the other hand, completely dynamic workflows can be challenging to manage and support. They are difficult to debug or troubleshoot and hard to be reused by others.</li><li id="2cc0">Parameterized workflows strike a balance by being initialized step by step at runtime based on user defined parameters. This approach provides great flexibility for users to control the execution at runtime while remaining easy to manage and understand.</li></ul><p id="76e0">As we described in <a rel="noopener ugc nofollow" target="_blank" href="https://netflixtechblog.com/orchestrating-data-ml-workflows-at-scale-with-netflix-maestro-aaa2b41b800c#360e">the previous Maestro blog post</a>, parameter support enables the creation of complex parameterized workflows, such as backfill data pipelines.</p><h2 id="03a6">Workflow Execution Patterns</h2><p id="7289">Maestro provides multiple useful building blocks that allow users to easily define dataflow patterns or other workflow patterns. It provides support for common patterns directly within the Maestro engine. Direct engine support not only enables us to optimize these patterns but also ensures a consistent approach to implementing them. Next, we will talk about the three major building blocks that Maestro provides.</p><p id="f47a"><strong>Foreach Support</strong><br>In Maestro, the foreach pattern is modeled as a dedicated step within the original workflow definition. Each iteration of the foreach loop is internally treated as a separate workflow instance, which scales similarly as any other Maestro workflow based on the step executions (i.e. a sub-graph) defined within the foreach definition block. The execution of sub-graph within a foreach step is delegated to a separate workflow instance. Foreach step then monitors and collects the status of these foreach workflow instances, each managing the execution of a single iteration. For more details, please refer to <a rel="noopener ugc nofollow" target="_blank" href="https://netflixtechblog.com/orchestrating-data-ml-workflows-at-scale-with-netflix-maestro-aaa2b41b800c#360e">our previous Maestro blog post</a>.</p><p id="d95e">The foreach pattern is frequently used to repeatedly run the same jobs with different parameters, such as data backfilling or machine learning model tuning. It would be tedious and time consuming to request users to explicitly define each iteration in the workflow definition (potentially hundreds of thousands of iterations). Additionally, users would need to create new workflows if the foreach range changes, further complicating the process.</p><p id="5686"><strong>Conditional Branch Support</strong><br>The conditional branch feature allows subsequent steps to run only if specific conditions in the upstream step are met. These conditions are defined using the SEL expression language, which is evaluated at runtime. Combined with other building blocks, users can build powerful workflows, e.g. doing some remediation if the audit check step fails and then run the job again.</p><p id="9e17"><strong>Subworkflow Support<br></strong>The subworkflow feature allows a workflow step to run another workflow, enabling the sharing of common functions across multiple workflows. This effectively enables “workflow as a function” and allows users to build a graph of workflows. For example, we have observed complex workflows consisting of hundreds of subworkflows to process data across hundreds tables, where subworkflows are provided by multiple teams.</p><p id="7d57">These patterns can be combined together to build composite patterns for complex workflow use cases. For instance, we can loop over a set of subworkflows or run nested foreach loops. One example that Maestro users developed is an auto-recovery workflow that utilizes both conditional branch and subworkflow features to handle errors and retry jobs automatically.</p><figure></figure><p id="add9">In this example, subworkflow `job1` runs another workflow consisting of extract-transform-load (ETL) and audit jobs. Next, a status check job leverages the Maestro parameter and SEL support to retrieve the status of the previous job. Based on this status, it can decide whether to complete the workflow or to run a recovery job to address any data issues. After resolving the issue, it then executes subworkflow `job2`, which runs the same workflow as subworkflow `job1`.</p><h2 id="dd55">Step Runtime and Step Parameter</h2><p id="8600"><strong>Step Runtime Interface<br></strong>In Maestro, we use step runtime to describe a job at execution time. The step runtime interface defines two pieces of information:</p><ol><li id="2de4">A set of basic APIs to control the behavior of a step instance at execution runtime.</li><li id="7fbd">Some simple data structures to track step runtime state and execution result.</li></ol><p id="e253">Maestro offers a few step runtime implementations such as foreach step runtime, subworkflow step runtime (mentioned in previous section). Each implementation defines its own logic for start, execute and terminate operations. At runtime, these operations control the way to initialize a step instance, perform the business logic and terminate the execution under certain conditions (i.e. manual intervention by users).</p><p id="17d4">Also, Maestro step runtime internally keeps track of runtime state as well as the execution result of the step. The runtime state is used to determine the next state transition of the step and tell if it has failed or terminated. The execution result hosts both step artifacts and the timeline of step execution history, which are accessible by subsequent steps.</p><p id="ddb1"><strong>Step Parameter Merging<br></strong>To control step behavior in a dynamic way, Maestro supports both runtime parameters and tags injection in step runtime. This makes a Maestro step more flexible to absorb runtime changes (i.e. overridden parameters) before actually being started. Maestro internally maintains a step parameter map that is initially empty and is updated by merging step parameters in the order below:</p><ul><li id="8853"><strong>Default General Parameters</strong>: Parameters merging starts from default parameters that in general every step should have. For example, workflow_instance_id, step_instance_uuid, step_attempt_id and step_id are required parameters for each maestro step. They are internally reserved by maestro and cannot be passed by users.</li><li id="4d0d"><strong>Injected Parameters</strong>: Maestro then merges injected parameters (if present) into the parameter map. The injected parameters come from step runtime, which are dynamically generated based on step schema. Each type of step can have its own schema with specific parameters associated with this step. The step schema can evolve independently with no need to update Maestro code.</li><li id="54c3"><strong>Default Typed Parameters</strong>: After injecting runtime parameters, Maestro tries to merge default parameters that are related to a specific type of step. For example, foreach step has loop_params and loop_index default parameters which are internally set by maestro and used for foreach step only.</li><li id="0a3b"><strong>Workflow and Step Info Parameters</strong>: These parameters contain information about step and the workflow it belongs to. This can be identity information, i.e. workflow_id and will be merged to step parameter map if present.</li><li id="0292"><strong>Undefined New Parameters</strong>: When starting or restarting a maestro workflow instance, users can specify new step parameters that are not present in initial step definition. ParamsManager merges these parameters to ensure they are available at execution time.</li><li id="d548"><strong>Step Definition Parameters</strong>: These step parameters are defined by users at definition time and get merged if they are not empty.</li><li id="3f46"><strong>Run and Restart Parameters</strong>: When starting or restarting a maestro workflow instance, users can override defined parameters by providing run or restart parameters. These two types of parameters are merged at the end so that step runtime can see the most recent and accurate parameter space.</li></ul><p id="7dbf">The parameters merging logic can be visualized in the diagram below.</p><figure></figure><h2 id="d5a8">Step Dependencies and Signals</h2><p id="9493">Steps in the Maestro execution workflow graph can express execution dependencies using step dependencies. A step dependency specifies the data-related conditions required by a step to start execution. These conditions are usually defined based on signals, which are pieces of messages carrying information such as parameter values and can be published through step outputs or external systems like SNS or Kafka messages.</p><p id="5a67">Signals in Maestro serve both signal trigger pattern and signal dependencies (a publisher-subscriber) pattern. One step can publish an output signal (<a href="https://github.com/Netflix/maestro/blob/main/maestro-common/src/testFixtures/resources/fixtures/instances/sample-step-instance-failed.json#L151-L215" rel="noopener ugc nofollow" target="_blank">a sample example</a>) that can unblock the execution of multiple other steps that depend on it. A <a href="https://github.com/Netflix/maestro/blob/main/maestro-common/src/main/java/com/netflix/maestro/models/definition/SignalOutputsDefinition.java" rel="noopener ugc nofollow" target="_blank">signal definition</a> includes a list of mapped parameters, allowing Maestro to perform “signal matching” on a subset of fields. Additionally, Maestro supports <a href="https://github.com/Netflix/maestro/blob/main/maestro-common/src/main/java/com/netflix/maestro/models/parameter/SignalOperator.java" rel="noopener ugc nofollow" target="_blank">signal operators</a> like &lt;, &gt;, etc., on signal parameter values.</p><p id="652d">Netflix has built various abstractions on top of the concept of signals. For instance, a ETL workflow can update a table with data and send signals that unblock steps in downstream workflows dependent on that data. Maestro supports “signal lineage,” which allows users to navigate all historical instances of signals and the workflow steps that match (i.e. publishing or consuming) those signals. Signal triggering guarantees exactly-once execution for the workflow subscribing a signal or a set of joined signals. This approach is efficient, as it conserves resources by only executing the workflow or step when the specified conditions in the signals are met. A signal service is implemented for those advanced abstractions. Please refer to the <a rel="noopener ugc nofollow" target="_blank" href="https://netflixtechblog.com/orchestrating-data-ml-workflows-at-scale-with-netflix-maestro-aaa2b41b800c#1fdf">Maestro blog</a> for further details on it.</p><h2 id="28e5">Breakpoint</h2><p id="8764">Maestro allows users to set breakpoints on workflow steps, functioning similarly to code-level breakpoints in an IDE. When a workflow instance executes and reaches a step with a breakpoint, that step enters a “paused” state. This halts the workflow graph’s progression until a user manually resumes from the breakpoint. If multiple instances of a workflow step are paused at a breakpoint, resuming one instance will only affect that specific instance, leaving the others in a paused state. Deleting the breakpoint will cause all paused step instances to resume.</p><p id="cace">This feature is particularly useful during the initial development of a workflow, allowing users to inspect step executions and output data. It is also beneficial when running a step multiple times in a “foreach” pattern with various input parameters. Setting a single breakpoint on a step will cause all iterations of the foreach loop to pause at that step for debugging purposes. Additionally, the breakpoint feature allows human intervention during the workflow execution and can also be used for other purposes, e.g. supporting mutating step states while the workflow is running.</p><h2 id="7ab1">Timeline</h2><p id="ed4f">Maestro includes a step execution timeline, capturing all significant events such as execution state machine changes and the reasoning behind them. This feature is useful for debugging, providing insights into the status of a step. For example, it logs transitions such as “Created” and “Evaluating params”, etc. An example of a timeline is included <a href="https://github.com/Netflix/maestro/blob/main/maestro-common/src/testFixtures/resources/fixtures/instances/sample-step-instance-failed.json#L137-L150" rel="noopener ugc nofollow" target="_blank">here</a> for reference. The implemented step runtimes can add the timeline events into the timeline to surface the execution information to the end users.</p><h2 id="461d">Retry Policies</h2><p id="33ba">Maestro supports retry policies for steps that reach a terminal state due to failure. Users can specify the number of retries and configure retry policies, including delays between retries and exponential backoff strategies, in addition to fixed interval retries. Maestro distinguishes between two types of retries: “platform” and “user.” Platform retries address platform-level errors unrelated to user logic, while user retries are for user-defined conditions. Each type can have its own set of retry policies.</p><p id="46fa">Automatic retries are beneficial for handling transient errors that can be resolved without user intervention. Maestro provides the flexibility to set retries to zero for non-idempotent steps to avoid retry. This feature ensures that users have control over how retries are managed based on their specific requirements.</p><h2 id="ef2f">Aggregated View</h2><p id="4c03">Because a workflow instance can have multiple runs, it is important for users to see an aggregated state of all steps in the workflow instance. Aggregated view is computed by merging base aggregated view with current runs instance step statuses. For example, as you can see on the figure below simulating a simple case, there is a first run, where step1 and step2 succeeded, step3 failed, and step4 and step5 have not started. When the user restarts the run, the run starts from step3 in run 2 with step1 and step2 skipped which succeeded in the previous run. After all steps succeed, the aggregated view shows the run states for all steps.</p><figure></figure><h2 id="0eeb">Rollup</h2><p id="6431">Rollup provides a high-level summary of a workflow instance, detailing the status of each step and the count of steps in each status. It flattens steps across the current instance and any nested non-inline workflows like subworkflows or foreach steps. For instance, if a successful workflow has three steps, one of which is a subworkflow corresponding to a five-step workflow, the rollup will indicate that seven steps succeeded. Only leaf steps are counted in the rollup, as other steps serve merely as pointers to concrete workflows.</p><p id="4d8c">Rollup also retains references to any non-successful steps, offering a clear overview of step statuses and facilitating easy navigation to problematic steps, even within nested workflows. The aggregated rollup for a workflow instance is calculated by combining the current run’s runtime data with a base rollup. The current state is derived from the statuses of active steps, including aggregated rollups for foreach and subworkflow steps. The base rollup is established when the workflow instance begins and includes statuses of inline steps (excluding foreach and subworkflows) from the previous run that are not part of the current run.</p><p id="957b">For subworkflow steps, the rollup simply reflects the rollup of the subworkflow instance. For foreach steps, the rollup combines the base rollup of the foreach step with the current state rollup. The base is derived from the previous run’s aggregated rollup, excluding the iterations to be restarted in the new run. The current state is periodically updated by aggregating rollups of running iterations until all iterations reach a terminal state.</p><p id="2610">Due to these processes, the rollup model is eventually consistent. While the figure below illustrates a straightforward example of rollup, the calculations can become complex and recursive, especially with multiple levels of nested foreaches and subworkflows.</p><figure></figure><h2 id="fb0a">Maestro Event Publishing</h2><p id="8676">When workflow definition, workflow instance or step instance is changed, Maestro generates an event, processes it internally and publishes the processed event to external system(s). Maestro has both internal and external events. The internal event tracks changes within the life cycle of workflow, workflow instance or step instance. It is published to an internal queue and processed within Maestro. After internal events are processed, some of them will be transformed into external event and sent out to the external queue (i.e. SNS, Kafka). The external event carries maestro status change information for downstream services. The event publishing flow is illustrated in the diagram below:</p><figure></figure><p id="8ae3">As shown in the diagram, the Maestro event processor bridges the two aforementioned Maestro events. It listens on the internal queue to get the published <a href="https://github.com/Netflix/maestro/tree/main/maestro-engine/src/main/java/com/netflix/maestro/engine/jobevents" rel="noopener ugc nofollow" target="_blank">internal events</a>. Within the processor, the internal job event is processed based on its type and gets converted to an <a href="https://github.com/Netflix/maestro/tree/main/maestro-common/src/main/java/com/netflix/maestro/models/events" rel="noopener ugc nofollow" target="_blank">external event</a> if needed. The notification publisher at the end emits the external event so that downstream services can consume.</p><p id="da33">The downstream services are mostly event-driven. The Maestro event carries the most useful message for downstream services to capture different changes in Maestro. In general, these changes can be classified into two categories: workflow change and instance status change. The workflow change event is associated with actions at workflow level, i.e definition or properties of a workflow has changed. Meanwhile, instance status change tracks status transition on workflow instance or step instance.</p><h2 id="9ed3">Get Started with Maestro</h2><p id="5db4">Maestro has been extensively used within Netflix, and today, we are excited to make the Maestro source code publicly available. We hope that the scalability and usability that Maestro offers can expedite workflow development outside Netflix. We invite you to try Maestro, use it within your organization, and contribute to its development.</p><p id="7494">You can find the Maestro code repository at <a href="https://github.com/Netflix/maestro" rel="noopener ugc nofollow" target="_blank">github.com/Netflix/maestro</a>. If you have any questions, thoughts, or comments about Maestro, please feel free to create a <a href="https://github.com/Netflix/maestro/issues" rel="noopener ugc nofollow" target="_blank">GitHub issue</a> in the Maestro repository. We are eager to hear from you.</p><p id="f320">We are taking workflow orchestration to the next level and constantly solving new problems and challenges, please stay tuned for updates. If you are passionate about solving large scale orchestration problems, please <a href="https://jobs.netflix.com/search?team=Data+Platform" rel="noopener ugc nofollow" target="_blank">join us</a>.</p><h2 id="5fe2">Acknowledgements</h2><p id="d8df">Thanks to other Maestro team members, <a href="https://www.linkedin.com/in/binbing-hou/" rel="noopener ugc nofollow" target="_blank">Binbing Hou</a>, <a href="http://linkedin.com/in/zhuoran-d-96848b154" rel="noopener ugc nofollow" target="_blank">Zhuoran Dong</a>, <a href="https://www.linkedin.com/in/brittany-truong-a35b54bb" rel="noopener ugc nofollow" target="_blank">Brittany Truong</a>, <a href="https://www.linkedin.com/in/rdeepak2002/" rel="noopener ugc nofollow" target="_blank">Deepak Ramalingam</a>, <a href="http://linkedin.com/in/moctarba" rel="noopener ugc nofollow" target="_blank">Moctar Ba</a>, for their contributions to the Maestro project. Thanks to our Product Manager <a href="https://www.linkedin.com/in/ashpokh/" rel="noopener ugc nofollow" target="_blank">Ashim Pokharel</a> for driving the strategy and requirements. We’d also like to thank <a href="https://www.linkedin.com/in/andrew-seier/" rel="noopener ugc nofollow" target="_blank">Andrew Seier</a>, <a href="https://www.linkedin.com/in/romain-cledat-4a211a5" rel="noopener ugc nofollow" target="_blank">Romain Cledat</a>, <a href="https://www.linkedin.com/in/agorajek/" rel="noopener ugc nofollow" target="_blank">Olek Gorajek</a>, and other stunning colleagues at Netflix for their contributions to the Maestro project. We also thank Prashanth Ramdas, Eva Tse, David Noor, Charles Smith and other leaders of Netflix engineering organizations for their constructive feedback and suggestions on the Maestro project.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Microsoft: Linux Is the Top Operating System on Azure Today (118 pts)]]></title>
            <link>https://thenewstack.io/microsoft-linux-is-the-top-operating-system-on-azure-today/</link>
            <guid>41037380</guid>
            <pubDate>Mon, 22 Jul 2024 17:58:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thenewstack.io/microsoft-linux-is-the-top-operating-system-on-azure-today/">https://thenewstack.io/microsoft-linux-is-the-top-operating-system-on-azure-today/</a>, See on <a href="https://news.ycombinator.com/item?id=41037380">Hacker News</a></p>
Couldn't get https://thenewstack.io/microsoft-linux-is-the-top-operating-system-on-azure-today/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[The workers have spoken: They're staying home (187 pts)]]></title>
            <link>https://www.computerworld.com/article/2520794/the-workers-have-spoken-theyre-staying-home.html</link>
            <guid>41037097</guid>
            <pubDate>Mon, 22 Jul 2024 17:36:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.computerworld.com/article/2520794/the-workers-have-spoken-theyre-staying-home.html">https://www.computerworld.com/article/2520794/the-workers-have-spoken-theyre-staying-home.html</a>, See on <a href="https://news.ycombinator.com/item?id=41037097">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
					<p><span>opinion</span></p><p><span>Jul 22, 2024</span><span>5 mins</span></p>
		<p><span><span>Remote Work</span></span><span><span>Technology Industry</span></span></p></div><article id="post-2520794">
	<div>
						<div>
	<h2>
		And companies can't make them come into the office. Really.	</h2>
	
</div>					
						<div id="remove_no_follow">
		 <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column0 -->
								
					<div>


<p>I’m sorry, Dell. This is 2024, not 2014. Now that people have gotten a taste of working from home, they’re not going back to the office. You’d think that would be clear by now — now just at Dell, but almost everywhere.</p>

		
		
			


<p>Why? Let me count the reasons:</p>



<ol>
<li>&nbsp;No commute on crowded highways;</li>



<li>&nbsp;A better life/work balance;</li>



<li>&nbsp;Cost savings;</li>



<li>&nbsp;Flexibility to choose where to live (and work).</li>



<li>&nbsp;More control over your workplace.</li>
</ol>



<p>I’ve been working from home for decades, which makes me something of an exception compared to a lot of workers. But my experience holds for people who got their work-from-home start during the Covid-19 pandemic.&nbsp;</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column1 -->
								
					<div>


<p>I used to work out of a Manhattan office, but I lived in New Carrollton, Maryland. How did I do it? I took Amtrak to work on Monday and returned home on Friday. I’d joke that I walked to work — first to my local train station and then from Penn Station to the office. There were just a few hours in the middle when I’d work from the dining car.&nbsp;</p>



<p>More often than not, though, I’d just work from home.&nbsp;</p>



<p>When I decided to move to Asheville, NC, in 2001, my bosses agreed to let me move because, as I told them then, I could always catch a same-day flight if they really needed me in the office. But, as I told them, I doubted there would be any reason I’d need to be there.</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column2 -->
								
					<div>


<p>I was right. While I still fly to New York City occasionally for work, I never had to be there for the job.&nbsp;</p>



<p>Better still. I had more time to be home — and I saved money to boot. It’s cheaper to make a sandwich in my kitchen than to get lunch at a deli near the office in midtown Manhattan. Finally, I love living in mountainous and green Asheville rather than the flat and asphalt-covered area inside the Washington, DC beltway.</p>



<p>In short, I’m happy working at home and have been for more than two decades. Most <a href="https://www.computerworld.com/article/2075520/why-even-hybrid-return-to-office-mandates-are-hurting-overall-job-satisfaction.html" data-type="link" data-id="https://www.computerworld.com/article/2075520/why-even-hybrid-return-to-office-mandates-are-hurting-overall-job-satisfaction.html">people who work from home feel the same</a>.&nbsp;</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column3 -->
								
					<div>


<p>Companies might want people’s rumps back in office chairs, but according to a recent&nbsp;Gartner&nbsp;report,&nbsp;<a href="https://www.gartner.com/en/newsroom/press-releases/2024-01-30-gartner-hr-research-finds-high-performers-women-millennials-are-greatest-flight-risks" target="_blank" rel="noreferrer noopener">48% of employees say their company’s mandates prioritize what leaders want</a>&nbsp;rather than what employees need to do good work.</p>



<p>Yes, that’s right. At far too many companies, the desire for control trumps what people really need to do their best work.&nbsp;</p>



<p>In particular, Caitlin Duffy, the Gartner HR practice director, said: “High-performing employees are more easily able to pursue opportunities at organizations that offer hybrid or fully remote policies.”&nbsp;</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column4 -->
								
					<div>


<p>If they don’t get those work-from-home opportunities, they’ll leave. That, in turn, “means <a href="https://www.computerworld.com/article/2138277/senior-employees-ordered-back-to-the-office-are-jumping-ship.html" data-type="link" data-id="https://www.computerworld.com/article/2138277/senior-employees-ordered-back-to-the-office-are-jumping-ship.html">losing high-performers to attrition</a>, costs organizations in terms of productivity, [can cause] difficulty in backfilling the role, and the overall loss of high-quality talent available to fill critical positions,” Duffy said.</p>



<p>Ding! Ding! Ding!&nbsp;</p>



<p>Here’s another piece of evidence that people are not, in capital letters, returning to the office.&nbsp;&nbsp;According to the latest Moody’s commercial real estate analysis,&nbsp;<a href="https://www.axios.com/2024/07/09/office-vacancy-rate-record-high" target="_blank" rel="noreferrer noopener">office vacancy rates have never been higher</a>. Just over one in five offices is now vacant. (The only reason that percentage isn’t higher is that companies have yet to be able to get out of long-term leases.)</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column5 -->
								
					<div>


<p>Might I note that once that lease has ended, companies&nbsp;&nbsp;won’t have to pay for that office space. It’s a win-win  —unless your business is commercial real estate.</p>



<p>Put it all together, and what do you get? You get the new work culture of the early-mid-21st century and beyond. It’s all work from home from here on out, folks.&nbsp;</p>



<p>Deal with it. And enjoy it.&nbsp;</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column6 -->
								
					</div>					</div>
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Gentle Introduction to SAML (125 pts)]]></title>
            <link>https://ssoready.com/blog/engineering/a-gentle-intro-to-saml/</link>
            <guid>41036982</guid>
            <pubDate>Mon, 22 Jul 2024 17:27:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ssoready.com/blog/engineering/a-gentle-intro-to-saml/">https://ssoready.com/blog/engineering/a-gentle-intro-to-saml/</a>, See on <a href="https://news.ycombinator.com/item?id=41036982">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>
            The SAML spec is an absolute beast. We've each read it multiple times. Here's a simpler explanation.
        </p><div>
            <p>I recently attended an open-source event in San Francisco. Introducing myself to random strangers – as one does at such events – I soon met a true hacker, a dyed-in-the-wool computer fanatic, the kind of person who’d have worked as a software engineer before it was cool. We chatted for a bit about random projects.</p>
<p>Upon discovering that my company works on SAML single sign-on, this person’s eyes lit up. <em>Oh, oh no, you’re in SAML hell</em>, they exclaimed, obviously recalling some technical side quest gone awry. <em>I’m so sorry,</em> they continued, laughing. <em>I don’t ever want to touch SAML again.</em></p>
<p>This is a common experience for me. Most developers know basically nothing about SAML at all. On rare occasions, I’ll meet someone like my acquaintance from the meetup, someone who knows a little bit about SAML … and actively avoids it.</p>
<p>And honestly, I think that’s reasonable. SAML occupies an arcane little corner of the B2B internet, and there’s not a lot of coherent information out there. Guides seem either to bury the reader in obscure technical details or vomit AI-generated SEO spam with virtually no useful detail.</p>
<p>I’ve written this post for curious developers who want a foundational understanding of SAML without wading too deeply into the details.</p>
<p>I don’t intend this post as a comprehensive explanation. I’ll elide some important facts and even get things technically incorrect in the hopes of illustrating ideas. I’d analogize the approach to introductory mechanics courses: <em>imagine the object as a sphere and ignore air resistance</em>.</p>
<p>Moreover, I welcome critique and correction here. Reach out at <a href="mailto:ned.oleary@ssoready.com">ned.oleary@ssoready.com</a> with any comments. (Thank you to those of you who helpfully flagged some typos for me! Markdown doesn’t have spellcheck.)</p>
<h2 id="saml-as-a-standard">SAML as a standard</h2>
<p>SAML (or Security Assertion Markup Language), defines a flexible set of rules for exchanging security-related messages in XML.</p>
<p>We typically use SAML to exchange messages in settings that involve three or more independent-ish entities. A very common scenario involves two software systems – made by two different companies – and a user. The two software systems need to exchange information about the user. One system might query the other: <em>what’s this user’s email address?</em> The other might respond: <em>this user’s email address is <a href="mailto:edwardkoleary@gmail.com">edwardkoleary@gmail.com</a></em>.</p>
<p>The two software companies could collaborate on a bespoke integration. But doing so can get really unwieldy. Imagine what happens if you need to build and maintain a lot of bespoke integrations that follow their own rules; it’s kind of a nightmare.</p>
<p>SAML erects scaffolding around the kinds of messages that systems can pass to one another.  It exists to help us all follow the same rules, speak the same language. By following standardized SAML rules, we don’t have to invent new, convoluted rules.</p>
<p>So even though SAML can feel really complicated, remember that things could be worse!</p>
<h2 id="what-does-a-saml-message-look-like">What does a SAML message look like?</h2>
<p>Here’s an example of a SAML message. Let’s not worry about the details.</p>
<p>All SAML basically looks like this. We’re just moving XML messages around.</p>
<p>SAML defines a syntax for our message and tells us how we can safely process other SAML messages’ contents.</p>
<p>If we receive a <code>&lt;Response&gt;</code>, we know a few things about how it’ll look. We know to look for an <code>&lt;Assertion&gt;</code> within the <code>&lt;Response&gt;</code>. We know how to interpret the <code>&lt;AuthnContext&gt;</code> data within an <code>&lt;Assertion&gt;</code>. We can anticipate what the digital signature will look like. We have guidelines on how to process the message in order to avoid security lapses.</p>
<div><pre tabindex="0"><code data-lang="xml"><span><span><span>&lt;Response</span> <span>IssueInstant=</span><span>"2003-04-17T00:46:02Z"</span> <span>Version=</span><span>"2.0"</span> <span>ID=</span><span>"_c7055387-af61-4fce-8b98-e2927324b306"</span> <span>xmlns=</span><span>"urn:oasis:names:tc:SAML:2.0:protocol"</span> <span>xmlns:saml=</span><span>"urn:oasis:names:tc:SAML:2.0:assertion"</span><span>&gt;</span>
</span></span><span><span>    <span>&lt;saml:Issuer&gt;</span>https://www.opensaml.org/IDP"<span>&lt;/saml:Issuer&gt;</span>
</span></span><span><span>    <span>&lt;ds:Signature</span> <span>xmlns:ds=</span><span>"http://www.w3.org/2000/09/xmldsig#"</span><span>&gt;</span>
</span></span><span><span>        <span>&lt;ds:SignedInfo&gt;</span>
</span></span><span><span>            <span>&lt;ds:CanonicalizationMethod</span> <span>Algorithm=</span><span>"http://www.w3.org/2001/10/xml-exc-c14n#"</span><span>/&gt;</span>
</span></span><span><span>            <span>&lt;ds:SignatureMethod</span> <span>Algorithm=</span><span>"http://www.w3.org/2000/09/xmldsig#rsa-sha1"</span><span>/&gt;</span>
</span></span><span><span>            <span>&lt;ds:Reference</span> <span>URI=</span><span>"#_c7055387-af61-4fce-8b98-e2927324b306"</span><span>&gt;</span>
</span></span><span><span>                <span>&lt;ds:Transforms&gt;</span>
</span></span><span><span>                    <span>&lt;ds:Transform</span> <span>Algorithm=</span><span>"http://www.w3.org/2000/09/xmldsig#enveloped-signature"</span><span>/&gt;</span>
</span></span><span><span>                    <span>&lt;ds:Transform</span> <span>Algorithm=</span><span>"http://www.w3.org/2001/10/xml-exc-c14n#"</span><span>&gt;</span>
</span></span><span><span>                        <span>&lt;InclusiveNamespaces</span> <span>PrefixList=</span><span>"#default saml ds xs xsi"</span> <span>xmlns=</span><span>"http://www.w3.org/2001/10/xml-exc-c14n#"</span><span>/&gt;</span>
</span></span><span><span>                    <span>&lt;/ds:Transform&gt;</span>
</span></span><span><span>                <span>&lt;/ds:Transforms&gt;</span>
</span></span><span><span>                <span>&lt;ds:DigestMethod</span> <span>Algorithm=</span><span>"http://www.w3.org/2000/09/xmldsig#sha1"</span><span>/&gt;</span>
</span></span><span><span>                <span>&lt;ds:DigestValue&gt;</span>TCDVSuG6grhyHbzhQFWFzGrxIPE=<span>&lt;/ds:DigestValue&gt;</span>
</span></span><span><span>            <span>&lt;/ds:Reference&gt;</span>
</span></span><span><span>        <span>&lt;/ds:SignedInfo&gt;</span>
</span></span><span><span>        <span>&lt;ds:SignatureValue&gt;</span>
</span></span><span><span>            x/GyPbzmFEe85pGD3c1aXG4Vspb9V9jGCjwcRCKrtwPS6vdVNCcY5rHaFPYWkf+5
</span></span><span><span>            EIYcPzx+pX1h43SmwviCqXRjRtMANWbHLhWAptaK1ywS7gFgsD01qjyen3CP+m3D
</span></span><span><span>            w6vKhaqledl0BYyrIzb4KkHO4ahNyBVXbJwqv5pUaE4=
</span></span><span><span>        <span>&lt;/ds:SignatureValue&gt;</span>
</span></span><span><span>        <span>&lt;ds:KeyInfo&gt;</span>
</span></span><span><span>            <span>&lt;ds:X509Data&gt;</span>
</span></span><span><span>                <span>&lt;ds:X509Certificate&gt;</span>
</span></span><span><span>                    MIICyjCCAjOgAwIBAgICAnUwDQYJKoZIhvcNAQEEBQAwgakxCzAJBgNVBAYTAlVT
</span></span><span><span>                    MRIwEAYDVQQIEwlXaXNjb25zaW4xEDAOBgNVBAcTB01hZGlzb24xIDAeBgNVBAoT
</span></span><span><span>                    F1VuaXZlcnNpdHkgb2YgV2lzY29uc2luMSswKQYDVQQLEyJEaXZpc2lvbiBvZiBJ
</span></span><span><span>                    bmZvcm1hdGlvbiBUZWNobm9sb2d5MSUwIwYDVQQDExxIRVBLSSBTZXJ2ZXIgQ0Eg
</span></span><span><span>                    LS0gMjAwMjA3MDFBMB4XDTAyMDcyNjA3Mjc1MVoXDTA2MDkwNDA3Mjc1MVowgYsx
</span></span><span><span>                    CzAJBgNVBAYTAlVTMREwDwYDVQQIEwhNaWNoaWdhbjESMBAGA1UEBxMJQW5uIEFy
</span></span><span><span>                    Ym9yMQ4wDAYDVQQKEwVVQ0FJRDEcMBoGA1UEAxMTc2hpYjEuaW50ZXJuZXQyLmVk
</span></span><span><span>                    dTEnMCUGCSqGSIb3DQEJARYYcm9vdEBzaGliMS5pbnRlcm5ldDIuZWR1MIGfMA0G
</span></span><span><span>                    CSqGSIb3DQEBAQUAA4GNADCBiQKBgQDZSAb2sxvhAXnXVIVTx8vuRay+x50z7GJj
</span></span><span><span>                    IHRYQgIv6IqaGG04eTcyVMhoekE0b45QgvBIaOAPSZBl13R6+KYiE7x4XAWIrCP+
</span></span><span><span>                    c2MZVeXeTgV3Yz+USLg2Y1on+Jh4HxwkPFmZBctyXiUr6DxF8rvoP9W7O27rhRjE
</span></span><span><span>                    pmqOIfGTWQIDAQABox0wGzAMBgNVHRMBAf8EAjAAMAsGA1UdDwQEAwIFoDANBgkq
</span></span><span><span>                    hkiG9w0BAQQFAAOBgQBfDqEW+OI3jqBQHIBzhujN/PizdN7s/z4D5d3pptWDJf2n
</span></span><span><span>                    qgi7lFV6MDkhmTvTqBtjmNk3No7v/dnP6Hr7wHxvCCRwubnmIfZ6QZAv2FU78pLX
</span></span><span><span>                    8I3bsbmRAUg4UP9hH6ABVq4KQKMknxu1xQxLhpR1ylGPdiowMNTrEG8cCx3w/w==
</span></span><span><span>                <span>&lt;/ds:X509Certificate&gt;</span>
</span></span><span><span>            <span>&lt;/ds:X509Data&gt;</span>
</span></span><span><span>        <span>&lt;/ds:KeyInfo&gt;</span>
</span></span><span><span>    <span>&lt;/ds:Signature&gt;</span>
</span></span><span><span>    <span>&lt;Status&gt;</span>
</span></span><span><span>        <span>&lt;StatusCode</span> <span>Value=</span><span>"urn:oasis:names:tc:SAML:2.0:status:Success"</span><span>/&gt;</span>
</span></span><span><span>    <span>&lt;/Status&gt;</span>
</span></span><span><span>    <span>&lt;Assertion</span> <span>ID=</span><span>"_a75adf55-01d7-40cc-929f-dbd8372ebdfc"</span> <span>IssueInstant=</span><span>"2003-04-17T00:46:02Z"</span> <span>Version=</span><span>"2.0"</span> <span>xmlns=</span><span>"urn:oasis:names:tc:SAML:2.0:assertion"</span><span>&gt;</span>
</span></span><span><span>        <span>&lt;Issuer&gt;</span>https://www.opensaml.org/IDP<span>&lt;/Issuer&gt;</span>
</span></span><span><span>        <span>&lt;ds:Signature</span> <span>xmlns:ds=</span><span>"http://www.w3.org/2000/09/xmldsig#"</span><span>&gt;</span>
</span></span><span><span>            <span>&lt;ds:SignedInfo&gt;</span>
</span></span><span><span>                <span>&lt;ds:CanonicalizationMethod</span> <span>Algorithm=</span><span>"http://www.w3.org/2001/10/xml-exc-c14n#"</span><span>/&gt;</span>
</span></span><span><span>                <span>&lt;ds:SignatureMethod</span> <span>Algorithm=</span><span>"http://www.w3.org/2000/09/xmldsig#rsa-sha1"</span><span>/&gt;</span>
</span></span><span><span>                <span>&lt;ds:Reference</span> <span>URI=</span><span>"#_a75adf55-01d7-40cc-929f-dbd8372ebdfc"</span><span>&gt;</span>
</span></span><span><span>                    <span>&lt;ds:Transforms&gt;</span>
</span></span><span><span>                        <span>&lt;ds:Transform</span> <span>Algorithm=</span><span>"http://www.w3.org/2000/09/xmldsig#enveloped-signature"</span><span>/&gt;</span>
</span></span><span><span>                        <span>&lt;ds:Transform</span> <span>Algorithm=</span><span>"http://www.w3.org/2001/10/xml-exc-c14n#"</span><span>&gt;</span>
</span></span><span><span>                            <span>&lt;InclusiveNamespaces</span> <span>PrefixList=</span><span>"#default saml ds xs xsi"</span> <span>xmlns=</span><span>"http://www.w3.org/2001/10/xml-exc-c14n#"</span><span>/&gt;</span>
</span></span><span><span>                        <span>&lt;/ds:Transform&gt;</span>
</span></span><span><span>                    <span>&lt;/ds:Transforms&gt;</span>
</span></span><span><span>                    <span>&lt;ds:DigestMethod</span> <span>Algorithm=</span><span>"http://www.w3.org/2000/09/xmldsig#sha1"</span><span>/&gt;</span>
</span></span><span><span>                    <span>&lt;ds:DigestValue&gt;</span>Kclet6XcaOgOWXM4gty6/UNdviI=<span>&lt;/ds:DigestValue&gt;</span>
</span></span><span><span>                <span>&lt;/ds:Reference&gt;</span>
</span></span><span><span>            <span>&lt;/ds:SignedInfo&gt;</span>
</span></span><span><span>            <span>&lt;ds:SignatureValue&gt;</span>
</span></span><span><span>                hq4zk+ZknjggCQgZm7ea8fI79gJEsRy3E8LHDpYXWQIgZpkJN9CMLG8ENR4Nrw+n
</span></span><span><span>                7iyzixBvKXX8P53BTCT4VghPBWhFYSt9tHWu/AtJfOTh6qaAsNdeCyG86jmtp3TD
</span></span><span><span>                MwuL/cBUj2OtBZOQMFn7jQ9YB7klIz3RqVL+wNmeWI4=
</span></span><span><span>            <span>&lt;/ds:SignatureValue&gt;</span>
</span></span><span><span>            <span>&lt;ds:KeyInfo&gt;</span>
</span></span><span><span>                <span>&lt;ds:X509Data&gt;</span>
</span></span><span><span>                    <span>&lt;ds:X509Certificate&gt;</span>
</span></span><span><span>                        MIICyjCCAjOgAwIBAgICAnUwDQYJKoZIhvcNAQEEBQAwgakxCzAJBgNVBAYTAlVT
</span></span><span><span>                        MRIwEAYDVQQIEwlXaXNjb25zaW4xEDAOBgNVBAcTB01hZGlzb24xIDAeBgNVBAoT
</span></span><span><span>                        F1VuaXZlcnNpdHkgb2YgV2lzY29uc2luMSswKQYDVQQLEyJEaXZpc2lvbiBvZiBJ
</span></span><span><span>                        bmZvcm1hdGlvbiBUZWNobm9sb2d5MSUwIwYDVQQDExxIRVBLSSBTZXJ2ZXIgQ0Eg
</span></span><span><span>                        LS0gMjAwMjA3MDFBMB4XDTAyMDcyNjA3Mjc1MVoXDTA2MDkwNDA3Mjc1MVowgYsx
</span></span><span><span>                        CzAJBgNVBAYTAlVTMREwDwYDVQQIEwhNaWNoaWdhbjESMBAGA1UEBxMJQW5uIEFy
</span></span><span><span>                        Ym9yMQ4wDAYDVQQKEwVVQ0FJRDEcMBoGA1UEAxMTc2hpYjEuaW50ZXJuZXQyLmVk
</span></span><span><span>                        dTEnMCUGCSqGSIb3DQEJARYYcm9vdEBzaGliMS5pbnRlcm5ldDIuZWR1MIGfMA0G
</span></span><span><span>                        CSqGSIb3DQEBAQUAA4GNADCBiQKBgQDZSAb2sxvhAXnXVIVTx8vuRay+x50z7GJj
</span></span><span><span>                        IHRYQgIv6IqaGG04eTcyVMhoekE0b45QgvBIaOAPSZBl13R6+KYiE7x4XAWIrCP+
</span></span><span><span>                        c2MZVeXeTgV3Yz+USLg2Y1on+Jh4HxwkPFmZBctyXiUr6DxF8rvoP9W7O27rhRjE
</span></span><span><span>                        pmqOIfGTWQIDAQABox0wGzAMBgNVHRMBAf8EAjAAMAsGA1UdDwQEAwIFoDANBgkq
</span></span><span><span>                        hkiG9w0BAQQFAAOBgQBfDqEW+OI3jqBQHIBzhujN/PizdN7s/z4D5d3pptWDJf2n
</span></span><span><span>                        qgi7lFV6MDkhmTvTqBtjmNk3No7v/dnP6Hr7wHxvCCRwubnmIfZ6QZAv2FU78pLX
</span></span><span><span>                        8I3bsbmRAUg4UP9hH6ABVq4KQKMknxu1xQxLhpR1ylGPdiowMNTrEG8cCx3w/w==
</span></span><span><span>                    <span>&lt;/ds:X509Certificate&gt;</span>
</span></span><span><span>                <span>&lt;/ds:X509Data&gt;</span>
</span></span><span><span>            <span>&lt;/ds:KeyInfo&gt;</span>
</span></span><span><span>        <span>&lt;/ds:Signature&gt;</span>
</span></span><span><span>        <span>&lt;Subject&gt;</span>
</span></span><span><span>            <span>&lt;NameID</span> <span>Format=</span><span>"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"</span><span>&gt;</span>
</span></span><span><span>                scott@example.org
</span></span><span><span>            <span>&lt;/NameID&gt;</span>
</span></span><span><span>            <span>&lt;SubjectConfirmation</span> <span>Method=</span><span>"urn:oasis:names:tc:SAML:2.0:cm:bearer"</span><span>/&gt;</span>
</span></span><span><span>        <span>&lt;/Subject&gt;</span>
</span></span><span><span>        <span>&lt;Conditions</span> <span>NotBefore=</span><span>"2003-04-17T00:46:02Z"</span> <span>NotOnOrAfter=</span><span>"2003-04-17T00:51:02Z"</span><span>&gt;</span>
</span></span><span><span>            <span>&lt;AudienceRestriction&gt;</span>
</span></span><span><span>                <span>&lt;Audience&gt;</span>http://www.opensaml.org/SP<span>&lt;/Audience&gt;</span>
</span></span><span><span>            <span>&lt;/AudienceRestriction&gt;</span>
</span></span><span><span>        <span>&lt;/Conditions&gt;</span>
</span></span><span><span>        <span>&lt;AuthnStatement</span> <span>AuthnInstant=</span><span>"2003-04-17T00:46:00Z"</span><span>&gt;</span>
</span></span><span><span>            <span>&lt;AuthnContext&gt;</span>
</span></span><span><span>                <span>&lt;AuthnContextClassRef&gt;</span>
</span></span><span><span>                    urn:oasis:names:tc:SAML:2.0:ac:classes:Password
</span></span><span><span>                <span>&lt;/AuthnContextClassRef&gt;</span>
</span></span><span><span>            <span>&lt;/AuthnContext&gt;</span>
</span></span><span><span>        <span>&lt;/AuthnStatement&gt;</span>
</span></span><span><span>    <span>&lt;/Assertion&gt;</span>
</span></span><span><span><span>&lt;/Response&gt;</span>
</span></span></code></pre></div><p>Kind of gnarly.</p>
<h2 id="flexibility-in-saml">Flexibility in SAML</h2>
<p>SAML’s design emphasizes flexibility; at least in principle, you can do an awful lot of different stuff with SAML. Unfortunately, that flexibility results in complexity.</p>
<p>If you read the SAML specification front to back, you will stumble across countless asides. Here’s one that’s not even that bad (don’t worry about what it actually means):</p>
<blockquote>
<p>If it chooses to proxy to a SAML identity provider, when creating the new <code>&lt;AuthnRequest&gt;</code>, the proxying identity provider MUST include equivalent or stricter forms of all the information included in the original request (such as authentication context policy). Note, however, that the proxying provider is free to specify whatever <code>&lt;NameIDPolicy&gt;</code> it wishes to maximize the chances of a successful response.</p>
</blockquote>
<blockquote>
<p>If the authenticating identity provider is not a SAML identity provider, then the proxying provider MUST have some other way to ensure that the elements governing user agent interaction (<code>&lt;IsPassive&gt;</code>, for example) will be honored by the authenticating provider.</p>
</blockquote>
<p>There’s a lot of <em>if</em>s and <em>for example</em>s here – every one of which adds at least one edge case. We’re talking about hundreds of pages of this stuff.</p>
<p>Now, SAML’s been around for a while, so some people capitalize on its flexibility. In the wild, especially in legacy systems, you will occasionally encounter SAML doing unusual things.</p>
<p>Nearly all of us can make our lives easier. We’ll ignore most of SAML and focus only on the tiny subset that people typically use.</p>
<h2 id="what-we-really-use-saml-for">What we really use SAML for</h2>
<p>We most commonly use SAML for single sign-on (hereafter abbreviated as SSO). For what it’s worth, SAML actually defines a few weird flavors of SSO, but we generally use the simplest of these, the Web Browser SSO Profile (see 4.1 <a href="https://groups.oasis-open.org/higherlogic/ws/public/document?document_id=35389">here</a> for details). We won’t concern ourselves with the more complicated stuff.</p>
<p>Under the Web Browser SSO Profile, end users will access any number of software applications by authenticating first into one centralized system, which then communicates users’ authentication status to the desired software applications. Users don’t authenticate directly with the applications themselves.</p>
<p><img src="https://ssoready.com/blog/engineering/a-gentle-intro-to-saml/saml-sso-concept.png" alt=""></p>
<p>If you have ever used a service like Okta to access your email, you’ve likely used the Web Browser SSO Profile.</p>
<h2 id="entities-involved-in-sso">Entities involved in SSO</h2>
<p>For simplicity, let’s imagine you make application software, and your users want to sign in via SAML SSO. You have to figure out how to support SAML SSO in your software.</p>
<p>We care about three entities in SSO:</p>
<ol>
<li>A user: someone that wants to use your application</li>
<li>A service provider (SP): your application</li>
<li>An identity provider (IDP): the centralized service your user will use to authenticate</li>
</ol>
<p>We can imagine each customer’s IDP as a database. It keeps track of data about people and their credentials, e.g. hashed passwords, email addresses, names, departments, etc. Companies often use identity providers to assign employees to different departments and assign them different privileges; for instance, the Accounting department will have access to the general ledger, but they won’t have access to AWS.</p>
<p>Every time we want a user to sign in via SAML, we’ll have to get information from their IDP; in SSO, we’re mostly just asking the IDP to confirm the user’s identity.</p>
<p>In order to do so, we will always need a pre-configured trust relationship with the IDP. Every customer that uses SAML SSO will require its own set-up in your application. It doesn’t matter which IDP your customers use – if you have 10 Okta customers, you will need to set up 10 different trust relationships.</p>
<p>Although you will need to establish trust relationships with the IDP, you won’t actually pass messages to/from the IDP directly. In SAML SSO, the service provider and the identity provider communicate via the user’s browser.</p>
<h2 id="how-saml-entities-interact">How SAML entities interact</h2>
<p>Here’s a typical SAML SSO process:</p>
<ol>
<li>A user attempts to access part of your application in their web browser.</li>
<li>You check whether the user has a valid security context.</li>
<li>The user doesn’t have a valid security context, so you present a login page.</li>
<li>The user fills in some information (e.g. an email address), which you use to determine the appropriate login method. You have pre-set records that tell you (1) that the user requires SAML SSO for authentication and (2) which IDP the user needs to use.</li>
<li>You redirect the user to the IDP’s web address, passing a SAML message to the IDP via the user’s browser.</li>
<li>The IDP prompts your user for credentials. The user successfully authenticates.</li>
<li>The IDP redirects the user back to your application along with a SAML message communicating information about the user’s authentication.</li>
<li>You process the SAML message and determine that you should, in fact, establish a security context for the user.</li>
<li>You grant the user access to the desired part of your application.</li>
</ol>
<p>A successful login process basically looks like this:</p>
<p><img src="https://ssoready.com/blog/engineering/a-gentle-intro-to-saml/saml-sso-flow.png" alt=""></p>
<p>Note that it’s also possible for the user to initiate a SAML SSO process from the identity provider. When this happens, mostly everything works the same way, except the service provider receives an authentication response without having sent an authentication request. If you are implementing SAML SSO support, <strong>make sure</strong> you’re prepared for IDP-initiated SSO.</p>
<h2 id="messages-exchanged-in-saml">Messages exchanged in SAML</h2>
<p>You may have noticed that we basically have two messages of interest in SAML SSO: a message from the service provider to the IDP; and then the corresponding message back from the IDP to the service provider.</p>
<p>We call this first message – from the service provider to the IDP – a SAML <em>request</em>. We call the other message – from the IDP to the service provider – a SAML <em>response</em>.</p>
<p>SAML requests aren’t too complicated in practice. We can do a bunch of stuff with them, but it’s often fine simply to send the following XML via HTTP redirect:</p>
<div><pre tabindex="0"><code data-lang="xml"><span><span><span>&lt;AuthnRequest</span> <span>xmlns=</span><span>"urn:oasis:names:tc:SAML:2.0:protocol"</span> <span>ID=</span><span>"saml_flow_1bkwa10x7lhmh1zvrnhnj76r3"</span> <span>Version=</span><span>"2.0"</span> <span>IssueInstant=</span><span>"2024-05-28T19:18:54.805967185Z"</span><span>&gt;</span>
</span></span><span><span>    <span>&lt;Issuer</span> <span>xmlns=</span><span>"urn:oasis:names:tc:SAML:2.0:assertion"</span><span>&gt;</span>
</span></span><span><span>        https://auth.ssoready.com/v1/saml/saml_conn_8ufe2hyst7s2jdovzdvd53ldm
</span></span><span><span>    <span>&lt;/Issuer&gt;</span>
</span></span><span><span><span>&lt;/AuthnRequest&gt;</span>
</span></span></code></pre></div><p>We’re just sending a message to an IDP URL that we already know. We include an ID in the <code>&lt;AuthnRequest&gt;</code> tag; this allows the IDP to share a <code>&lt;Response&gt;</code> that we can link back to our original request. We also send the IDP some data wrapped up in an <code>&lt;Issuer&gt;</code> tag. The <code>&lt;Issuer&gt;</code> data tells the IDP who we are. When our user authenticates, the IDP will return the user back to us with a <code>&lt;Response&gt;</code>. Remember, we’re passing this data via the user’s browser, so the IDP won’t know what application the user wants access to unless we specify.</p>
<p>SAML responses are trickier. They usually look something like this, sent via a POST:</p>
<div><pre tabindex="0"><code data-lang="xml"><span><span><span>&lt;samlp:Response</span> <span>ID=</span><span>"id-9c961a70-708d-497d-8d51-1f8110600838"</span> <span>Version=</span><span>"2.0"</span> <span>IssueInstant=</span><span>"2024-05-28T19:23:17.443Z"</span> <span>InResponseTo=</span><span>"saml_flow_1bkwa10x7lhmh1zvrnhnj76r3"</span> <span>Destination=</span><span>"https://auth.ssoready.com/v1/saml/saml_conn_8ufe2hyst7s2jdovzdvd53ldm/acs"</span> <span>xmlns:samlp=</span><span>"urn:oasis:names:tc:SAML:2.0:protocol"</span><span>&gt;</span>
</span></span><span><span>    <span>&lt;saml:Issuer</span> <span>xmlns:saml=</span><span>"urn:oasis:names:tc:SAML:2.0:assertion"</span><span>&gt;</span>
</span></span><span><span>        https://auth.pingone.com/c761aef4-f636-402f-b29d-6cc84c13a436
</span></span><span><span>    <span>&lt;/saml:Issuer&gt;</span>
</span></span><span><span>    <span>&lt;ds:Signature</span> <span>xmlns:ds=</span><span>"http://www.w3.org/2000/09/xmldsig#"</span><span>&gt;</span>
</span></span><span><span>        <span>&lt;ds:SignedInfo&gt;</span>
</span></span><span><span>            <span>&lt;ds:CanonicalizationMethod</span> <span>Algorithm=</span><span>"http://www.w3.org/2001/10/xml-exc-c14n#"</span><span>/&gt;</span>
</span></span><span><span>            <span>&lt;ds:SignatureMethod</span> <span>Algorithm=</span><span>"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"</span><span>/&gt;</span>
</span></span><span><span>            <span>&lt;ds:Reference</span> <span>URI=</span><span>"#id-9c961a70-708d-497d-8d51-1f8110600838"</span><span>&gt;</span>
</span></span><span><span>                <span>&lt;ds:Transforms&gt;</span>
</span></span><span><span>                    <span>&lt;ds:Transform</span> <span>Algorithm=</span><span>"http://www.w3.org/2000/09/xmldsig#enveloped-signature"</span><span>/&gt;</span>
</span></span><span><span>                    <span>&lt;ds:Transform</span> <span>Algorithm=</span><span>"http://www.w3.org/2001/10/xml-exc-c14n#"</span><span>/&gt;</span>
</span></span><span><span>                <span>&lt;/ds:Transforms&gt;</span>
</span></span><span><span>                <span>&lt;ds:DigestMethod</span> <span>Algorithm=</span><span>"http://www.w3.org/2001/04/xmlenc#sha256"</span><span>/&gt;</span>
</span></span><span><span>                <span>&lt;ds:DigestValue&gt;</span>
</span></span><span><span>                    XwEljHxQiNdJYGDSvtNHQsFfQfN7+jAZ8ZJ1pwKqVuE=
</span></span><span><span>                <span>&lt;/ds:DigestValue&gt;</span>
</span></span><span><span>            <span>&lt;/ds:Reference&gt;</span>
</span></span><span><span>        <span>&lt;/ds:SignedInfo&gt;</span>
</span></span><span><span>        <span>&lt;ds:SignatureValue&gt;</span>
</span></span><span><span>            cJbmGIdlBnr1B1//P7mb5ECFK6QZjuH3eqyCinFrSsFMMORNjiT8TJRX8bsAT8lv76zPuBvMOBJSer9Ca7MDLLOQX+u43KufHVLvLarQUWo6fBJIjWsA3UHKFxCaw5h3wUnXZJ94NTqHl0d5An5RgwRcvVLOe3Bdv/hAykNrvQnMRNfbCcD6TWN7IKbl6MDk9o56vR0ubYQ1wqIN3UDcoOUruul9wQ5jtjBo//klKHDr7X+SYqY4oOExVrKNIUhj0DPh89pXKwY3IKR/3yXYas/J8aOWl/f+1bByUcL0jDx4bBc9T7OLw+w/DLMHFwlbxzO4R74WvxryfcVH6GZp7A==
</span></span><span><span>        <span>&lt;/ds:SignatureValue&gt;</span>
</span></span><span><span>        <span>&lt;ds:KeyInfo&gt;</span>
</span></span><span><span>            <span>&lt;ds:X509Data&gt;</span>
</span></span><span><span>                <span>&lt;ds:X509Certificate&gt;</span>
</span></span><span><span>                    MIIDrjCCApagAwIBAgIGAY+TeKX7MA0GCSqGSIb3DQEBCwUAMIGXMQswCQYDVQQGEwJVUzEWMBQGA1UECgwNUGluZyBJZGVudGl0eTEWMBQGA1UECwwNUGluZyBJZGVudGl0eTFYMFYGA1UEAwxPUGluZ09uZSBTU08gQ2VydGlmaWNhdGUgZm9yIFdvcmtmb3JjZSBTb2x1dGlvbiBFbnZpcm9ubWVudCA4MjBiOGQ2OSBlbnZpcm9ubWVudDAeFw0yNDA1MjAwMDQ4MjhaFw0yNTA1MjAwMDQ4MjhaMIGXMQswCQYDVQQGEwJVUzEWMBQGA1UECgwNUGluZyBJZGVudGl0eTEWMBQGA1UECwwNUGluZyBJZGVudGl0eTFYMFYGA1UEAwxPUGluZ09uZSBTU08gQ2VydGlmaWNhdGUgZm9yIFdvcmtmb3JjZSBTb2x1dGlvbiBFbnZpcm9ubWVudCA4MjBiOGQ2OSBlbnZpcm9ubWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAI5Xnz5FeA+5zOMYpjLxkksCT5216B9Iq8Y4ly7dQQHMAlTkAz6ONi6itrTTe+4lVKOOexGFikFnsD2zDXEXcBzP/SVxPp4H9bObL0IBAvMZ6WhluK3d6oZDWzw/7SEmcA+T93d/ovqkxrd5+R4+yk0lmKGJOSi+mP0LYqWtjTQqmiMhdZ2mV6Y/8iNg419+5QFNAtrwIcAQA8rI4AUfyiLVZnP1qdxuvY+rkhS54OALAVv14sU2dRiDR5uEmRbjfvVZ92jOEYwmpdLUHz+tTwPWtnhB4+GkQ8bX0Nz+Hzh0GVnk+NMH5+m/A/hl+qG6ea60KaRsIzB4eMxH6GeTTWkCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAgYYlef5BTuMYkH3MKRV5huyM36WIvak1WF05mxXLq66eXjRjwFklNb2D6Cw6Hn3U/0kHtur3tfdK4o+K6+PHkYkFPS5kYuFDSIcR+WhLxq9ZkdIRg1EM5e8Z+FOAm1ogaSsalu++WLdgw0GJRW0jNaBLn40cABTnNXSjJfCFBgoLZjdHNhwW3A3BrXqg3LCaU1vJSamQceK6okP8dMLU4TFUhcwKlYdd8Wubp/wdnP065LZvmLgpLFPKVpQKsNJXigP71oRtteM9/E5DiPvgScZCQSJ+xVKqAAG2MffmYE+UOFfNlLPW4lG/cxCYVkh8M1iYetad04tHBcL2PSQj7g==
</span></span><span><span>                <span>&lt;/ds:X509Certificate&gt;</span>
</span></span><span><span>            <span>&lt;/ds:X509Data&gt;</span>
</span></span><span><span>            <span>&lt;ds:KeyValue&gt;</span>
</span></span><span><span>                <span>&lt;ds:RSAKeyValue&gt;</span>
</span></span><span><span>                    <span>&lt;ds:Modulus&gt;</span>
</span></span><span><span>                        jlefPkV4D7nM4ximMvGSSwJPnbXoH0irxjiXLt1BAcwCVOQDPo42LqK2tNN77iVUo457EYWKQWewPbMNcRdwHM/9JXE+ngf1s5svQgEC8xnpaGW4rd3qhkNbPD/tISZwD5P3d3+i+qTGt3n5Hj7KTSWYoYk5KL6Y/Qtipa2NNCqaIyF1naZXpj/yI2DjX37lAU0C2vAhwBADysjgBR/KItVmc/Wp3G69j6uSFLng4AsBW/XixTZ1GINHm4SZFuN+9Vn3aM4RjCal0tQfP61PA9a2eEHj4aRDxtfQ3P4fOHQZWeT40wfn6b8D+GX6obp5rrQppGwjMHh4zEfoZ5NNaQ==
</span></span><span><span>                    <span>&lt;/ds:Modulus&gt;</span>
</span></span><span><span>                    <span>&lt;ds:Exponent&gt;</span>
</span></span><span><span>                        AQAB
</span></span><span><span>                    <span>&lt;/ds:Exponent&gt;</span>
</span></span><span><span>                <span>&lt;/ds:RSAKeyValue&gt;</span>
</span></span><span><span>            <span>&lt;/ds:KeyValue&gt;</span>
</span></span><span><span>        <span>&lt;/ds:KeyInfo&gt;</span>
</span></span><span><span>    <span>&lt;/ds:Signature&gt;</span>
</span></span><span><span>    <span>&lt;samlp:Status&gt;</span>
</span></span><span><span>        <span>&lt;samlp:StatusCode</span> <span>Value=</span><span>"urn:oasis:names:tc:SAML:2.0:status:Success"</span><span>/&gt;</span>
</span></span><span><span>    <span>&lt;/samlp:Status&gt;</span>
</span></span><span><span>    <span>&lt;saml:Assertion</span> <span>ID=</span><span>"id-bb6ad0b6-7cec-4a2a-b151-f8d6bb29ff0c"</span> <span>Version=</span><span>"2.0"</span> <span>IssueInstant=</span><span>"2024-05-28T19:23:17.443Z"</span> <span>xmlns:saml=</span><span>"urn:oasis:names:tc:SAML:2.0:assertion"</span><span>&gt;</span>
</span></span><span><span>        <span>&lt;saml:Issuer&gt;</span>
</span></span><span><span>            https://auth.pingone.com/c761aef4-f636-402f-b29d-6cc84c13a436
</span></span><span><span>        <span>&lt;/saml:Issuer&gt;</span>
</span></span><span><span>        <span>&lt;ds:Signature</span> <span>xmlns:ds=</span><span>"http://www.w3.org/2000/09/xmldsig#"</span><span>&gt;</span>
</span></span><span><span>            <span>&lt;ds:SignedInfo&gt;</span>
</span></span><span><span>                <span>&lt;ds:CanonicalizationMethod</span> <span>Algorithm=</span><span>"http://www.w3.org/2001/10/xml-exc-c14n#"</span><span>/&gt;</span>
</span></span><span><span>                <span>&lt;ds:SignatureMethod</span> <span>Algorithm=</span><span>"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"</span><span>/&gt;</span>
</span></span><span><span>                <span>&lt;ds:Reference</span> <span>URI=</span><span>"#id-bb6ad0b6-7cec-4a2a-b151-f8d6bb29ff0c"</span><span>&gt;</span>
</span></span><span><span>                    <span>&lt;ds:Transforms&gt;</span>
</span></span><span><span>                        <span>&lt;ds:Transform</span> <span>Algorithm=</span><span>"http://www.w3.org/2000/09/xmldsig#enveloped-signature"</span><span>/&gt;</span>
</span></span><span><span>                        <span>&lt;ds:Transform</span> <span>Algorithm=</span><span>"http://www.w3.org/2001/10/xml-exc-c14n#"</span><span>/&gt;</span>
</span></span><span><span>                    <span>&lt;/ds:Transforms&gt;</span>
</span></span><span><span>                    <span>&lt;ds:DigestMethod</span> <span>Algorithm=</span><span>"http://www.w3.org/2001/04/xmlenc#sha256"</span><span>/&gt;</span>
</span></span><span><span>                    <span>&lt;ds:DigestValue&gt;</span>
</span></span><span><span>                        ayAvzJwqV8Nf5XH8StCZKpctPkNIfwX4rvfmbBYYVkU=
</span></span><span><span>                    <span>&lt;/ds:DigestValue&gt;</span>
</span></span><span><span>                <span>&lt;/ds:Reference&gt;</span>
</span></span><span><span>            <span>&lt;/ds:SignedInfo&gt;</span>
</span></span><span><span>            <span>&lt;ds:SignatureValue&gt;</span>
</span></span><span><span>                HYZKndwzyjHIxB/TEiycySfdydu080a4BbYWiq7MNwrGHGe79vOg30VmOHd60WCQO8yuQgeYXiNHCoGEFV861EVGz/iLHawBnNXRyAwv0mm3p98tBe4l2gnonVgUviUGuXz4HU6b8wPTZ4QFspL/K4t0OZoKtoAj/OlIxQ4aWaWQkHTtnER/Rv5AYAfVmgf90tHq4WBxRKOMH+7nFvXRoCiUyuevtjWBVYjVF+mD8kVVLazwGNQ/71DihYUyNTXkPZXcPsXxXDgB6PNTTx3pK9GEY5C8f0uPx847QEVuWP87K4Xg+iLVio8L5a8ENIAPGpoG5/hzWghJJ+u3Dn7oMw==
</span></span><span><span>            <span>&lt;/ds:SignatureValue&gt;</span>
</span></span><span><span>            <span>&lt;ds:KeyInfo&gt;</span>
</span></span><span><span>                <span>&lt;ds:X509Data&gt;</span>
</span></span><span><span>                    <span>&lt;ds:X509Certificate&gt;</span>
</span></span><span><span>                        MIIDrjCCApagAwIBAgIGAY+TeKX7MA0GCSqGSIb3DQEBCwUAMIGXMQswCQYDVQQGEwJVUzEWMBQGA1UECgwNUGluZyBJZGVudGl0eTEWMBQGA1UECwwNUGluZyBJZGVudGl0eTFYMFYGA1UEAwxPUGluZ09uZSBTU08gQ2VydGlmaWNhdGUgZm9yIFdvcmtmb3JjZSBTb2x1dGlvbiBFbnZpcm9ubWVudCA4MjBiOGQ2OSBlbnZpcm9ubWVudDAeFw0yNDA1MjAwMDQ4MjhaFw0yNTA1MjAwMDQ4MjhaMIGXMQswCQYDVQQGEwJVUzEWMBQGA1UECgwNUGluZyBJZGVudGl0eTEWMBQGA1UECwwNUGluZyBJZGVudGl0eTFYMFYGA1UEAwxPUGluZ09uZSBTU08gQ2VydGlmaWNhdGUgZm9yIFdvcmtmb3JjZSBTb2x1dGlvbiBFbnZpcm9ubWVudCA4MjBiOGQ2OSBlbnZpcm9ubWVudDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAI5Xnz5FeA+5zOMYpjLxkksCT5216B9Iq8Y4ly7dQQHMAlTkAz6ONi6itrTTe+4lVKOOexGFikFnsD2zDXEXcBzP/SVxPp4H9bObL0IBAvMZ6WhluK3d6oZDWzw/7SEmcA+T93d/ovqkxrd5+R4+yk0lmKGJOSi+mP0LYqWtjTQqmiMhdZ2mV6Y/8iNg419+5QFNAtrwIcAQA8rI4AUfyiLVZnP1qdxuvY+rkhS54OALAVv14sU2dRiDR5uEmRbjfvVZ92jOEYwmpdLUHz+tTwPWtnhB4+GkQ8bX0Nz+Hzh0GVnk+NMH5+m/A/hl+qG6ea60KaRsIzB4eMxH6GeTTWkCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAgYYlef5BTuMYkH3MKRV5huyM36WIvak1WF05mxXLq66eXjRjwFklNb2D6Cw6Hn3U/0kHtur3tfdK4o+K6+PHkYkFPS5kYuFDSIcR+WhLxq9ZkdIRg1EM5e8Z+FOAm1ogaSsalu++WLdgw0GJRW0jNaBLn40cABTnNXSjJfCFBgoLZjdHNhwW3A3BrXqg3LCaU1vJSamQceK6okP8dMLU4TFUhcwKlYdd8Wubp/wdnP065LZvmLgpLFPKVpQKsNJXigP71oRtteM9/E5DiPvgScZCQSJ+xVKqAAG2MffmYE+UOFfNlLPW4lG/cxCYVkh8M1iYetad04tHBcL2PSQj7g==
</span></span><span><span>                    <span>&lt;/ds:X509Certificate&gt;</span>
</span></span><span><span>                <span>&lt;/ds:X509Data&gt;</span>
</span></span><span><span>                <span>&lt;ds:KeyValue&gt;</span>
</span></span><span><span>                    <span>&lt;ds:RSAKeyValue&gt;</span>
</span></span><span><span>                        <span>&lt;ds:Modulus&gt;</span>
</span></span><span><span>                            jlefPkV4D7nM4ximMvGSSwJPnbXoH0irxjiXLt1BAcwCVOQDPo42LqK2tNN77iVUo457EYWKQWewPbMNcRdwHM/9JXE+ngf1s5svQgEC8xnpaGW4rd3qhkNbPD/tISZwD5P3d3+i+qTGt3n5Hj7KTSWYoYk5KL6Y/Qtipa2NNCqaIyF1naZXpj/yI2DjX37lAU0C2vAhwBADysjgBR/KItVmc/Wp3G69j6uSFLng4AsBW/XixTZ1GINHm4SZFuN+9Vn3aM4RjCal0tQfP61PA9a2eEHj4aRDxtfQ3P4fOHQZWeT40wfn6b8D+GX6obp5rrQppGwjMHh4zEfoZ5NNaQ==
</span></span><span><span>                        <span>&lt;/ds:Modulus&gt;</span>
</span></span><span><span>                        <span>&lt;ds:Exponent&gt;</span>
</span></span><span><span>                            AQAB
</span></span><span><span>                        <span>&lt;/ds:Exponent&gt;</span>
</span></span><span><span>                    <span>&lt;/ds:RSAKeyValue&gt;</span>
</span></span><span><span>                <span>&lt;/ds:KeyValue&gt;</span>
</span></span><span><span>            <span>&lt;/ds:KeyInfo&gt;</span>
</span></span><span><span>        <span>&lt;/ds:Signature&gt;</span>
</span></span><span><span>        <span>&lt;saml:Subject&gt;</span>
</span></span><span><span>            <span>&lt;saml:NameID&gt;</span>
</span></span><span><span>                ned.oleary@ssoready.com
</span></span><span><span>            <span>&lt;/saml:NameID&gt;</span>
</span></span><span><span>            <span>&lt;saml:SubjectConfirmation</span> <span>Method=</span><span>"urn:oasis:names:tc:SAML:2.0:cm:bearer"</span><span>&gt;</span>
</span></span><span><span>                <span>&lt;saml:SubjectConfirmationData</span> <span>NotOnOrAfter=</span><span>"2024-05-28T19:28:17.443Z"</span> <span>Recipient=</span><span>"https://auth.ssoready.com/v1/saml/saml_conn_8ufe2hyst7s2jdovzdvd53ldm/acs"</span> <span>InResponseTo=</span><span>"saml_flow_1bkwa10x7lhmh1zvrnhnj76r3"</span><span>/&gt;</span>
</span></span><span><span>            <span>&lt;/saml:SubjectConfirmation&gt;</span>
</span></span><span><span>        <span>&lt;/saml:Subject&gt;</span>
</span></span><span><span>        <span>&lt;saml:Conditions</span> <span>NotBefore=</span><span>"2024-05-28T19:22:17.443Z"</span> <span>NotOnOrAfter=</span><span>"2024-05-28T19:28:17.443Z"</span><span>&gt;</span>
</span></span><span><span>            <span>&lt;saml:AudienceRestriction&gt;</span>
</span></span><span><span>                <span>&lt;saml:Audience&gt;</span>
</span></span><span><span>                    https://auth.ssoready.com/v1/saml/saml_conn_8ufe2hyst7s2jdovzdvd53ldm
</span></span><span><span>                <span>&lt;/saml:Audience&gt;</span>
</span></span><span><span>            <span>&lt;/saml:AudienceRestriction&gt;</span>
</span></span><span><span>        <span>&lt;/saml:Conditions&gt;</span>
</span></span><span><span>        <span>&lt;saml:AuthnStatement</span> <span>AuthnInstant=</span><span>"2024-05-28T19:23:17.443Z"</span> <span>SessionNotOnOrAfter=</span><span>"2024-05-28T19:28:17.443Z"</span> <span>SessionIndex=</span><span>"bc8b16dc-4397-4169-85d4-dc3cfb23a0c9"</span><span>&gt;</span>
</span></span><span><span>            <span>&lt;saml:AuthnContext&gt;</span>
</span></span><span><span>                <span>&lt;saml:AuthnContextClassRef&gt;</span>
</span></span><span><span>                    urn:oasis:names:tc:SAML:2.0:ac:classes:unspecified
</span></span><span><span>                <span>&lt;/saml:AuthnContextClassRef&gt;</span>
</span></span><span><span>                <span>&lt;saml:AuthenticatingAuthority&gt;</span>
</span></span><span><span>                    https://auth.pingone.com/c761aef4-f636-402f-b29d-6cc84c13a436
</span></span><span><span>                <span>&lt;/saml:AuthenticatingAuthority&gt;</span>
</span></span><span><span>            <span>&lt;/saml:AuthnContext&gt;</span>
</span></span><span><span>        <span>&lt;/saml:AuthnStatement&gt;</span>
</span></span><span><span>        <span>&lt;saml:AttributeStatement&gt;</span>
</span></span><span><span>            <span>&lt;saml:Attribute</span> <span>Name=</span><span>"saml_subject"</span> <span>NameFormat=</span><span>"urn:oasis:names:tc:SAML:2.0:attrname-format:basic"</span><span>&gt;</span>
</span></span><span><span>                <span>&lt;saml:AttributeValue</span> <span>xsi:type=</span><span>"xs:string"</span> <span>xmlns:xs=</span><span>"http://www.w3.org/2001/XMLSchema"</span> <span>xmlns:xsi=</span><span>"http://www.w3.org/2001/XMLSchema-instance"</span><span>&gt;</span>
</span></span><span><span>                    ned.oleary@ssoready.com
</span></span><span><span>                <span>&lt;/saml:AttributeValue&gt;</span>
</span></span><span><span>            <span>&lt;/saml:Attribute&gt;</span>
</span></span><span><span>        <span>&lt;/saml:AttributeStatement&gt;</span>
</span></span><span><span>    <span>&lt;/saml:Assertion&gt;</span>
</span></span><span><span><span>&lt;/samlp:Response&gt;</span>
</span></span></code></pre></div><p>Conceptually, the <code>&lt;Response&gt;</code> just wraps up a few <code>&lt;Assertion&gt;</code> tags. An <code>&lt;Assertion&gt;</code> just wraps up claims about our user, e.g. who this is and how they authenticated with the IDP. We process the assertions to determine whether we should log in our user.</p>
<p>SAML <code>&lt;Response&gt;</code> messages seem simple at first glance. Conceptually, they aren’t too complicated. In practice, though, they’re pretty frustrating. You see, the IDP will sign its <code>&lt;Response&gt;</code> and will often sign each <code>&lt;Assertion&gt;</code> too. The signature just assures us that the message actually originated from the IDP and that no one has tampered with it. And <strong>SAML digital signatures are weird.</strong></p>
<p>The IDP builds messages (or nested components within a message) first by piling in the data it wants you to interpret. For instance, it will create the <code>&lt;AttributeValue&gt;</code>, my email address in this case. Then it’ll wrap up the <code>&lt;AttributeValue&gt;</code> in an <code>&lt;Attribute&gt;</code> tag, and so on until it completes its <code>&lt;Assertion&gt;</code> data. Then the IDP signs the <code>&lt;Assertion&gt;</code>. It converts the <code>&lt;Assertion&gt;</code> into bytes, then signs the bytes with its private key.</p>
<p>Critically, it then <strong>inserts the signature back into the <code>&lt;Assertion&gt;</code></strong>. So the <code>&lt;Assertion&gt;</code> you receive as a service provider isn’t the same <code>&lt;Assertion&gt;</code> that the IDP signed. The IDP signed a message that didn’t yet have a signature embedded inside. In order to trust the SAML message you’ve received, you need very carefully to remove the digital signature from the <code>&lt;Assertion&gt;</code>, then convert the modified <code>&lt;Assertion&gt;</code> to bytes and verify the digital signature.</p>
<p>Because you need to convert the <code>&lt;Assertion&gt;</code> into bytes, even the smallest error – e.g. forgetting to clear some whitespace – will cause you not to process the message properly. And given all the flexibility in SAML, this can be pretty hard. Moreover, you can accidentally expose yourself to severe security vulnerabilities.</p>
<p>Assuming you’ve correctly processed the <code>&lt;Response&gt;</code> signature and any <code>&lt;Assertion&gt;</code> signatures, you can proceed to log your user in. In the example I’ve given, the IDP confirms that I, <em><a href="mailto:ned.oleary@ssoready.com">ned.oleary@ssoready.com</a></em>, have authenticated using PingOne. Because you have confirmed that PingOne sent the message (and because you have a pre-configured trust relationship with PingOne that entitles it to make claims about my authentication status), you can proceed to log me in.</p>
<h2 id="a-word-of-caution">A word of caution</h2>
<p>I’ve omitted a lot of details here, some of which matter <strong>greatly</strong> for security reasons. Unless you find SAML personally interesting or have some professional reason to investigate deeply, I do not recommend trying to implement SAML-based login yourself. It’s just not a good use of time.</p>
<p>If you’re curious, we post about auth stuff on our <a href="https://ssoready.com/blog">engineering blog</a> from time to time.</p>
<p>If you’re not especially curious and just want to set up SAML as soon as possible, our company makes a free, <a href="https://github.com/ssoready/ssoready">open-source</a> service that abstracts all the SAML away. It’ll save you a lot of time and grief.</p>

        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How much money we can raise for transparently idiotic startups? (196 pts)]]></title>
            <link>https://www.smbc-comics.com/comic/investment-2</link>
            <guid>41036844</guid>
            <pubDate>Mon, 22 Jul 2024 17:15:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.smbc-comics.com/comic/investment-2">https://www.smbc-comics.com/comic/investment-2</a>, See on <a href="https://news.ycombinator.com/item?id=41036844">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="comicleft">		<div id="navtop"><nav role="navigation"><a title="First" rel="first" href="https://www.smbc-comics.com/comic/2002-09-05"></a><a rel="prev" title="Previous" href="https://www.smbc-comics.com/comic/bad-2"></a><a href="https://www.smbc-comics.com/comic/rss"></a></nav>		</div>
					
		<p><img title="Kicking myself for not having AI balloons in the SMBC store right this second." src="https://www.smbc-comics.com/comics/1721652268-20240722.png" id="cc-comic">					
					</p><div id="navbottom"><nav role="navigation"><a title="First" rel="first" href="https://www.smbc-comics.com/comic/2002-09-05"></a><a rel="prev" title="Previous" href="https://www.smbc-comics.com/comic/bad-2"></a><a href="https://www.smbc-comics.com/comic/rss"></a></nav>			
		</div>
		
		<p><a href="https://hivemill.com/products/smbc-print-pages?&amp;podurl=%2F%2Fwww.smbc-comics.com%2Fcomic%2Finvestment-2"><img id="buythisimg" src="https://www.smbc-comics.com/images/printme.png"></a>
		</p>

				

				<p><label>Permalink for sharing!</label></p>


	    <p>Rotate phone to read blog</p>

		<div id="sharemob">
			<p><img src="https://www.smbc-comics.com/images/mobshare.png"></p>
			<p><a id="facebookshare" onclick="window.open('https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fwww.smbc-comics.com%2Fcomic%2Finvestment-2&amp;t=Saturday+Morning+Breakfast+Cereal','name','width=600,height=400')"><img src="https://www.smbc-comics.com/images/mobfacebookshare.png"></a>
			<a id="twittershare" onclick="window.open('https://twitter.com/share?url=http://smbc-comics.com/comic/investment-2&amp;text=Saturday Morning Breakfast Cereal%20%23smbc%20%23hiveworks','name','width=600,height=400')"><img src="https://www.smbc-comics.com/images/mobtwittershare.png"></a>
			<a id="redditshare" onclick="window.location = 'http://www.reddit.com/submit?url=www.smbc-comics.com%2Fcomic%2Finvestment-2'; return false"><img src="https://www.smbc-comics.com/images/mobredditshare.png"></a>
			<a id="pinterestshare" onclick="window.open('http://www.pinterest.com/pin/create/button/?url=http%3A%2F%2Fwww.smbc-comics.com%2Fcomic%2Finvestment-2&amp;media=http%3A%2F%2Fwww.smbc-comics.com%2Fcomics%2F1721652268-20240722.png&amp;description=Saturday%20Morning%20Breakfast%20Cereal','name','width=600,height=400')"><img src="https://www.smbc-comics.com/images/mobpinterestshare.png"></a>
			<a id="stumbleuponshare" onclick="window.open('http://www.stumbleupon.com/badge/?url=http%3A%2F%2Fwww.smbc-comics.com%2Fcomic%2Finvestment-2%23comic','name','width=600,height=400')"><img src="https://www.smbc-comics.com/images/mobstumbleuponshare.png"></a><a id="extracomic" onclick="toggleBlock(&quot;mobaftercomic&quot;)"><img src="https://www.smbc-comics.com/images/mobbutton.png"></a>
		</p></div>
		

		
			
				
            	

            <div id="blogarea">
			<div><p>Investment</p><p>Posted July 22, 2024 at 08:43 am</p></div><div><p>Tags: <a href="https://www.smbc-comics.com/comic/search/ai">ai</a>, <a href="https://www.smbc-comics.com/comic/search/economics">economics</a></p></div>							</div>
			
			<div id="commentarea">
							
						
				<p>Comments</p>			</div>
				
			<div id="mobilemenu">
            
            			
			<p><a href="http://www.hiveworkscomics.com/" id="mobhiveworks"><img src="https://www.smbc-comics.com/images/mobhiveworks.png"></a>
        	<a href="https://www.patreon.com/ZachWeinersmith?ty=h" id="mobpatreon"><img src="https://www.smbc-comics.com/images/mobpatreon.png"></a>
            <a href="https://www.smbc-comics.com/comic/archive" id="mobarchive"><img src="https://www.smbc-comics.com/images/mobarchive.png"></a>
			<a href="http://hivemill.com/collections/smbc" id="mobstore"><img src="https://www.smbc-comics.com/images/mobstore.png"></a></p><!-- mobile email form button -->
<p><a href="https://smbc-comics.us15.list-manage.com/subscribe/post?u=c196cb2377d2d5462fdfa5dbf&amp;id=77be344bfa" target="_blank">
    <img src="https://www.smbc-comics.com/emailform/header-trans4-2.png" alt="">
  </a>
</p>
<!-- end of mobile email form button -->
            
			        </div>
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Oxygen discovery defies knowledge of the deep ocean (158 pts)]]></title>
            <link>https://www.bbc.co.uk/news/articles/c728ven2v9eo</link>
            <guid>41036526</guid>
            <pubDate>Mon, 22 Jul 2024 16:48:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bbc.co.uk/news/articles/c728ven2v9eo">https://www.bbc.co.uk/news/articles/c728ven2v9eo</a>, See on <a href="https://news.ycombinator.com/item?id=41036526">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main id="main-content" data-testid="main-content"><article><header data-component="headline-block"><h2 id="main-heading" type="headline" tabindex="-1"><span role="text">Oxygen discovery defies knowledge of the deep ocean</span></h2></header><div data-component="image-block"><figure><p><span><picture><source srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg.webp 240w, https://ichef.bbci.co.uk/news/320/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg.webp 320w, https://ichef.bbci.co.uk/news/480/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg.webp 480w, https://ichef.bbci.co.uk/news/624/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg.webp 624w, https://ichef.bbci.co.uk/news/800/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg.webp 800w, https://ichef.bbci.co.uk/news/976/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg.webp 976w" type="image/webp"><img alt="Sunlight shining into an ocean cave" loading="eager" src="https://ichef.bbci.co.uk/news/2048/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg 240w, https://ichef.bbci.co.uk/news/320/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg 320w, https://ichef.bbci.co.uk/news/480/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg 480w, https://ichef.bbci.co.uk/news/624/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg 624w, https://ichef.bbci.co.uk/news/800/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg 800w, https://ichef.bbci.co.uk/news/976/cpsprodpb/9eef/live/e4ae0c60-482b-11ef-93c3-ffc52948adf5.jpg 976w" width="2048" height="1151.3292043830395"></picture></span><span role="text"><span>Image source, </span>Getty Images</span></p><figcaption><span>Image caption, </span><p>Until this discovery, it was believed that oxygen could not be produced without sunlight</p></figcaption></figure></div><div data-component="text-block"><p><b>Scientists have discovered “dark oxygen” being produced in the deep ocean, apparently by lumps of metal on the seafloor.</b></p><p>About half the oxygen we breathe comes from the ocean. But, before this discovery, it was understood that it was made by marine plants photosynthesising - something that requires sunlight. </p><p>Here, at depths of 5km, where no sunlight can penetrate, the oxygen appears to be produced by naturally occurring metallic “nodules” which split seawater - H2O - into hydrogen and oxygen. </p><p>Several mining companies have plans to collect these nodules, which marine scientists fear could disrupt the newly discovered process - and damage any marine life that depends on the oxygen they make.</p></div><div data-component="image-block"><figure><p><span><span></span></span><span role="text"><span>Image source, </span>NOC/NHM/NERC SMARTEX </span></p><figcaption><span>Image caption, </span><p>The potato-sized metal nodules look like rocks, littering parts of the deep seabed</p></figcaption></figure></div><div data-component="text-block"><p>“I first saw this in 2013 -  an enormous amount of oxygen being produced at the seafloor in complete darkness,” explains lead researcher Prof Andrew Sweetman from the Scottish Association for Marine Science. “I just ignored it, because I’d been taught -  you only get oxygen through photosynthesis.</p><p>“Eventually, I realised that for years I’d been ignoring this potentially huge discovery,” he told BBC News.</p><p>He and his colleagues carried out their research in an area of the deep sea between Hawaii and Mexico - part of a vast swathe of seafloor that is covered with these metal nodules. The nodules form when dissolved metals in seawater collect on fragments of shell - or other debris. It's a process that takes millions of years.     </p><p>And because these nodules contain metals like lithium, cobalt and copper - all of which are needed to make batteries - many mining companies are developing technology to collect them and bring them to the surface. </p><p>But Prof Sweetman says the dark oxygen they make could also support life on the seafloor. And his discovery, published in the journal Nature Geoscience, raises new concerns about the risks of proposed deep-sea mining ventures.</p></div><div data-component="image-block"><figure><p><span><span></span></span><span role="text"><span>Image source, </span>Science Photo Library/NOAA</span></p></figure></div><div data-component="text-block"><p>The scientists worked out that the metal nodules are able to make oxygen precisely because they act like batteries.</p><p>“If you put a battery into seawater, it starts fizzing,” explained Prof Sweetman. “That’s because the electric current is actually splitting seawater into oxygen and hydrogen [which are the bubbles]. We think that’s happening with these nodules in their natural state.”</p><p>“It's like a battery in a torch,” he added. “You put one battery in, it doesn't light up. You put two in and you've got enough voltage to light up the torch. So when the nodules are sitting at the seafloor in contact with one another, they’re working in unison - like multiple batteries.”</p><p>The researchers put this theory to the test in the lab, collecting and studying the potato-sized metal nodules. Their experiments measured the voltages on the surface of each metallic lump - essentially the strength of the electric current. They found it to be almost equal to the voltage in a typical AA-sized battery. </p><p>This means, they say, that the nodules sitting on the seabed could generate electric currents large enough to split, or electrolyse, molecules of seawater.</p><p>The researchers think the same process - battery-powered oxygen production that requires no light and no biological process - could be happening on other moons and planets, creating oxygen-rich environments where life could thrive.</p></div><div data-component="image-block"><figure><p><span><span></span></span><span role="text"><span>Image source, </span>Camille Bridgewater</span></p><figcaption><span>Image caption, </span><p>The researchers measured the voltages on the surfaces of the metallic nodules</p></figcaption></figure></div><div data-component="text-block"><p>The Clarion-Clipperton Zone, where the discovery was made, is a site already being explored by a number of seabed mining companies, which are developing technology to collect the nodules and bring them to a ship at the surface.</p><p>The US National Oceanographic and Atmospheric Administration has warned that this seabed mining could “result in the destruction of life and the seabed habitat in the mined areas”. </p><p>More than 800 marine scientists from 44 countries have <a href="https://seabedminingsciencestatement.org/">signed a petition<span>, <!-- -->external</span></a> highlighting the environmental risks and calling for a pause on mining activity.</p><p>New species are being discovered in the deep ocean all the time - it is often said that we know more about the surface of the Moon than we do about the deep sea. And this discovery suggests that the nodules themselves could be providing the oxygen to support life there.</p><p>Prof Murray Roberts, a marine biologist from the Univerisity of Edinburgh is one of the scientists who signed the seabed mining petition. “There’s already overwhelming evidence that strip mining deep-sea nodule fields will destroy ecosystems we barely understand,” he told BBC News.</p><p>“Because these fields cover such huge areas of our planet it would be crazy to press ahead with deep-sea mining knowing they may be a significant source of oxygen production.”</p><p>Prof Sweetman added: “I don't see this study as something that will put an end to mining.</p><p>“[But] we need to explore it in greater detail and we need to use this information and the data we gather in future if we are going to go into the deep ocean and mine it in the most environmentally friendly way possible.”</p></div><div data-component="text-block"><p>Hear on this story on the <a href="https://www.bbc.co.uk/sounds/play/p0jcytrx">5 Questions On podcast</a> on BBC Sounds</p></div></article></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Scientists discover a new hormone that can build strong bones (345 pts)]]></title>
            <link>https://www.ucsf.edu/news/2024/07/428011/scientists-discover-new-hormone-can-build-strong-bones</link>
            <guid>41036462</guid>
            <pubDate>Mon, 22 Jul 2024 16:42:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ucsf.edu/news/2024/07/428011/scientists-discover-new-hormone-can-build-strong-bones">https://www.ucsf.edu/news/2024/07/428011/scientists-discover-new-hormone-can-build-strong-bones</a>, See on <a href="https://news.ycombinator.com/item?id=41036462">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>A newly discovered hormone that keeps the bones of breastfeeding women strong could also help bone fractures heal and treat osteoporosis in the broader population. Researchers at UC San Francisco and UC Davis showed that in mice, the hormone known as Maternal Brain Hormone (CCN3) increases bone density and strength.</p>

<p>Their results, published July 10 in <em><a href="https://www.nature.com/articles/s41586-024-07634-3">Nature</a></em>, solve a long-standing puzzle about how women’s bones remain relatively robust during breastfeeding, even as calcium is stripped from bones to support milk production.</p>

<p>“One of the remarkable things about these findings is that if we hadn’t been studying female mice, which unfortunately is the norm in biomedical research, then we could have completely missed out on this finding,” said <a href="https://profiles.ucsf.edu/holly.ingraham">Holly Ingraham</a>, PhD, the senior author of the new paper and a professor cellular molecular pharmacology at UCSF. “It underscores just how important it is to look at both male and female animals across the lifespan to get a full understanding of biology.”</p>

<p>More than 200 million people worldwide suffer from osteoporosis, a severe weakening of the bones that can cause frequent fractures. Women are at particularly high risk of osteoporosis after menopause because of declining levels of the sex hormone estrogen, which normally promotes bone formation. Estrogen levels are also low during breastfeeding, yet osteoporosis and bone fractures are much rarer during this time, suggesting that something other than estrogen promotes bone growth.</p>

<h2>A hormone that is only produced during lactation</h2>

<figure>

  <figure data-embed-button="media_assets" data-entity-embed-display="entity_reference:media_thumbnail" data-entity-embed-display-settings="{&quot;image_style&quot;:&quot;half__image&quot;,&quot;image_link&quot;:&quot;&quot;,&quot;image_loading&quot;:{&quot;attribute&quot;:&quot;lazy&quot;},&quot;link_title&quot;:&quot;&quot;,&quot;link_url&quot;:&quot;&quot;,&quot;target&quot;:0}" data-entity-type="media" data-entity-uuid="1e969ee3-7602-47d0-91b2-a347bfa3323e" data-langcode="en"><picture>  <img loading="lazy" src="https://www.ucsf.edu/sites/default/files/styles/half__image/public/2024-07/maternal-brain-hormone-ccn3.jpg" width="720" height="720" alt="A microscopic image showing the presence of the Maternal Brain Hormone, also known as C C N 3, in the brain.">


</picture></figure>

<figcaption>During lactation, CCN3 (red) appears in the female brain in neurons adjacent to other cells, called tanycytes (cyan). <em>Image by Ingraham Lab</em></figcaption>
</figure>


<p>Ingraham’s lab <a data-entity-substitution="canonical" data-entity-type="node" data-entity-uuid="1a15f8a6-ac1d-44ac-bde0-ba4d117aecda" href="https://www.ucsf.edu/news/2019/01/413001/ultra-sturdy-bones-surprising-origin-suggest-new-osteoporosis-approach" title="Ultra-Sturdy Bones, with a Surprising Origin, Suggest New Osteoporosis Approach ">previously discovered</a> that in female mice, but not male mice, blocking a particular estrogen receptor found in select neurons in a small area of the brain led to huge increases in bone mass. They suspected that a hormone in the blood was responsible for the super-strong bones but, at the time, could not find it – a quest that was further protracted during the worldwide pandemic.</p>

<p>In the new work, Ingraham and collaborators carried out an exhaustive search for this bone-building hormone and finally pinpointed CCN3 as the factor responsible in mutant females. Initially, the team was surprised by this result, as CCN3 did not fit the typical profile of a secreted hormone from neurons.</p>

<p>Their doubts vanished after they found CCN3 in the same brain region in lactating female mice. Without the production of CCN3 in these select neurons, lactating female mice rapidly lost bone, and their babies began to lose weight, confirming the importance of the hormone in maintaining bone health during lactation. Based on this discovery, they now refer to CCN3 as Maternal Brain Hormone (MBH).</p>

<h2>Hormone strengthens bones in young, old, male and female mice</h2>



<p>When strategies to increase circulating CCN3 were implemented in young adult and older female or male mice, their bone mass and strength increased dramatically over the course of weeks. In some female mice who lacked all estrogen or were very old, CCN3 was able to more than double bone mass.</p>

<p>When Ingraham’s scientific collaborator, <a href="https://profiles.ucdavis.edu/thomas.ambrosi">Thomas Ambrosi</a>, PhD, an assistant professor of orthopaedic surgery at UC Davis, tested these bones, he was surprised by their strength.</p>

<p>“There are some situations where highly mineralized bones are not better; they can be weaker and actually break more easily,” he explained. “But when we tested these bones, they turned out to be much stronger than usual.”</p>

<p>Ambrosi looked closely at the stem cells within the bones that are responsible for generating new bone and found that when these cells were exposed to CCN3, they were much more prone to generate new bone cells.</p>

<h2>A hydrogel patch heals fractures in mice</h2>

<p>To test the ability of the hormone to assist in bone healing, the researchers created a hydrogel patch that could be applied directly to the site of a bone fracture, where it would slowly release CCN3 for two weeks. In elderly mice, bone fractures don’t usually heal well. However, the CCN3 patch spurred the formation of new bone at the site of the fracture, contributing to youthful healing of the fracture.</p>

<p>“We’ve never been able to achieve this kind of mineralization and healing outcome with any other strategy,” Ambrosi said. “We’re really excited to follow it up and potentially apply CCN3 in the context of other problems, such as regrowing cartilage.”</p>

<p>The researchers plan to carry out future studies on the molecular mechanisms of CCN3, its levels in breastfeeding women, as well as the potential of the hormone to treat a variety of bone conditions.</p>

<p><a href="https://profiles.ucsf.edu/muriel.babey">Muriel Babey</a>, MD, a co-first author and mentored physician-scientist in the Division of Endocrinology at UCSF, is keen to begin asking how CCN3 impacts bone metabolism in clinically relevant disease settings. Partnering with the UCSF Catalyst program, <a href="https://profiles.ucsf.edu/william.krause">William Krause</a>, PhD, a senior scientist and co-lead on this project will begin translating these new results.</p>

<p>“Bone loss happens not only in post-menopausal women but often occurs in breast cancer survivors that take certain hormone blockers; in younger, highly trained elite female athletes; and in older men whose relative survival rate is poorer than women after a hip fracture,” Ingraham said. “It would be incredibly exciting if CCN3 could increase bone mass in all these scenarios.”</p>

<figure>

  <figure data-embed-button="media_assets" data-entity-embed-display="entity_reference:media_thumbnail" data-entity-embed-display-settings="{&quot;image_style&quot;:&quot;&quot;,&quot;image_link&quot;:&quot;&quot;,&quot;image_loading&quot;:{&quot;attribute&quot;:&quot;lazy&quot;},&quot;link_title&quot;:&quot;&quot;,&quot;link_url&quot;:&quot;&quot;,&quot;target&quot;:0}" data-entity-type="media" data-entity-uuid="19df4201-c6e0-46fb-b4b1-204cac8c7574" data-langcode="en"><picture>  <img loading="lazy" src="https://www.ucsf.edu/sites/default/files/2024-07/holly-ingraham-william-krause-muriel-babey.jpg" width="1200" height="783" alt="Researchers William Krause, Muriel Babey, and Holly Ingraham work at the Ingraham Lab.">

</picture></figure>

<figcaption>William Krause, PhD, left; Muriel Babey, MD, center; and Holly Ingraham, PhD, right, at the Ingraham Lab in Arthur and Toni Rembe&nbsp;Rock Hall at the UCSF Mission Bay campus. <em>Photo by Susan Merrell</em><br>
&nbsp;</figcaption>
</figure>


<p><strong>Authors:</strong> Other UCSF authors include Candice B. Herber, Zsofia Torok, Joni Nikkanen, Ruben Rodriquez, Saul Villeda and Fernanda Castro-Navarro. Other UC Davis authors include Kun Chen, Erika E. Wheeler, J. Kent Leach, and Nancy E. Lane. Please see the paper for a complete author list.</p>

<p><strong>Funding:</strong> This work was supported by the National Institutes of Health (R01DK121657-S1, NIA-1K01AG065916, 5K12GM081266, K99DK129763, AG066963, R01DK132073, R01AG067740, R01AG070647, R01AG062331, R01DK121657), a Stanford Pilot Award and a Senior Scholar Award (GCRLE0320).</p>

<p><strong>Disclosures:</strong> None.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Audapolis: Edit audio files by transcript, not waveform (223 pts)]]></title>
            <link>https://github.com/bugbakery/audapolis</link>
            <guid>41036231</guid>
            <pubDate>Mon, 22 Jul 2024 16:25:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/bugbakery/audapolis">https://github.com/bugbakery/audapolis</a>, See on <a href="https://news.ycombinator.com/item?id=41036231">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto"><h2 tabindex="-1" dir="auto"><p>🎤 audapolis</p></h2><a id="user-content--audapolis" aria-label="Permalink: 🎤 audapolis" href="#-audapolis"></a></div>
<blockquote>
<p><strong>An editor for spoken-word media with transcription.</strong></p>
</blockquote>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/bugbakery/audapolis/blob/main/doc/screenshot.png"><img src="https://github.com/bugbakery/audapolis/raw/main/doc/screenshot.png" alt="screenshot of audapolis"></a></p>
<p dir="auto"><code>audapolis</code> aims to make the workflow for spoken-word-heavy media editing easier, faster and more accessible.</p>
<ul dir="auto">
<li>It gives you a <strong>wordprocessor-like experience</strong> for media editing.</li>
<li>It can <strong>automatically transcribe</strong> your audio to text.</li>
<li>It can be used for <strong>Video, Audio</strong> and mixed editing - Do radio shows, podcasts, audiobooks, interview clips or anything you like.</li>
<li>It is <strong>free</strong></li>
<li>It keeps the data in your hands - <strong>no cloud</strong> whatsoever.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">✨ Try it now! ✨</h2><a id="user-content--try-it-now-" aria-label="Permalink: ✨ Try it now! ✨" href="#-try-it-now-"></a></p>
<p dir="auto">You can download the newest version for Windows, Linux and macOS <a href="https://github.com/bugbakery/audapolis/releases/latest">here</a>.
If you find any bugs or UX inconveniences, we would be happy for you to <a href="https://github.com/bugbakery/audapolis/issues/new">report them to us</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Survey</h2><a id="user-content-survey" aria-label="Permalink: Survey" href="#survey"></a></p>
<p dir="auto">It would be really nice if you could help us out by answering <a href="https://docs.google.com/forms/d/e/1FAIpQLSerdLMYw3C3sfCyliGTal_CfeH5_jw4l2Zv-NmYc8GEabpHnA/viewform" rel="nofollow">our short survey</a> about your needs &amp; expectations so that we can build actually usefull software and know what you need.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Acknowledgements</h2><a id="user-content-acknowledgements" aria-label="Permalink: Acknowledgements" href="#acknowledgements"></a></p>
<ul dir="auto">
<li>Funded from September 2021 until February 2022 by <a target="_blank" rel="noopener noreferrer" href="https://github.com/bugbakery/audapolis/blob/main/doc/pf_funding_logos.svg"><img src="https://github.com/bugbakery/audapolis/raw/main/doc/pf_funding_logos.svg" alt="logos of the &quot;Bundesministerium für Bildung und Forschung&quot;, Prototype Fund and Open Knowledge Foundation Deutschland"></a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Brr Wants a Job (114 pts)]]></title>
            <link>https://brr.fyi/posts/brr-wants-a-job</link>
            <guid>41035281</guid>
            <pubDate>Mon, 22 Jul 2024 15:03:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://brr.fyi/posts/brr-wants-a-job">https://brr.fyi/posts/brr-wants-a-job</a>, See on <a href="https://news.ycombinator.com/item?id=41035281">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <div>
                <picture>
                  <source srcset="https://brr.fyi/media/brr-wants-a-job/brr-wants-a-job-icon.webp" type="image/webp">
                  <source srcset="https://brr.fyi/media/brr-wants-a-job/brr-wants-a-job-icon.jpg" type="image/jpg">
                  <img src="https://brr.fyi/media/brr-wants-a-job/brr-wants-a-job-icon.jpg" alt="Brr Wants A Job">
                </picture>
              </div>
            <div>
                
                
                <p>8 months post-ice, it's time for something new!</p>
                <div>
                  <p><a href="https://brr.fyi/">
                    <img src="https://brr.fyi/media/snowman.png" alt="brr">
                  </a></p><p>
                    <time datetime="2024-07-22T07:45:00-07:00">July 22, 2024
                    </time>
                  </p>
                </div>
              </div>
          </div><div>
        <article aria-label="Post">
          <div>
            <p>Hello brr readers!</p>
            <p>It’s been an absolute delight keeping in touch with y’all during my ~8 months post-Antarctica.</p>
            <p>I’ve connected with folks all over the world – at remote outposts, on ships, at other Antarctic (and Arctic!)
              stations, and in all sorts of fascinating life circumstances. People have shared their stories, asked insightful
              questions, and compared notes about remote infrastructure, itinerant “gig” work, and the vastness of human
              experience.</p>
            <p>Now, it’s time for me to commit to something new, build connections in a new place, and find new things to
              work on that bring me joy and fulfillment.</p>
            <p>Maybe some of you can help!</p>
            <p><strong><em>tl;dr:</em></strong> <em>Please reach out to me if you know of work opportunities, primarily (but not exclusively) in Denver, that
                I might enjoy, as a mid-career IT and infrastructure generalist with an interest in clean energy and electrical grids.
                Also, separate from work and jobs, I’d love to meet people who are local to the Denver area!</em></p>
            <p><em>You can reach me via email at <a href="mailto:hello@brr.fyi">hello@brr.fyi</a>.</em></p>
            <p><em>Thanks!!</em></p>
            <h2 id="table-of-contents">Table of contents</h2>
            <ul>
              <li><a href="#adventures">What I’ve been up to</a></li>
              <li><a href="#anonymity">Who I am</a></li>
              <li><a href="#job">Help me find a job</a>
                <ul>
                  <li><a href="#skills">What I’m good at</a></li>
                  <li><a href="#goals">What I’m looking for</a></li>
                </ul>
              </li>
            </ul>
            <h2 id="adventures">What I’ve been up to</h2>
            <p>In the 8 months since leaving the South Pole in November 2023, I’ve done a fair bit of exploring, and a bit of
              short-term contract IT work.</p>
            <p>After returning from my post-ice vacation in New Zealand, I visited friends and family in the US Midwest,
              then took the meandering route back to San Francisco using an
              <a href="https://www.amtrak.com/tickets/departure-rail-pass.html">Amtrak USA Rail Pass</a>:
              10 rail segments, 30 days, and a great way to see the United States.</p>
            <p>I spent a few months doing a fixed-term IT contract with some friends, at a radio astronomy observatory in rural
              Northern California. We got to witness the auroras caused by
              the <a href="https://en.wikipedia.org/wiki/May_2024_solar_storms">May 2024 solar storms</a>.</p>
            
            <p>And finally – I recently relocated to the Denver Metro Area, where I’m writing this post.</p>
            <p>And that brings us to now. It’s time for me to get a job. Based on my past communications with brr readers,
              I think some of you might have ideas or recommendations.</p>
            <h2 id="anonymity">Who I am</h2>
            <p>When I started this blog, for my friends and family, I was “anonymous” only on paper. Sure, the blog
              didn’t give away my identity, but people who I knew in real life were well aware that I was running it.
              I was writing for an audience of just a handful of people.
              Anonymity was just a technical feature, one that I chose to implement for fun. It
              wasn’t something that I felt strongly about.</p>
            <p>But in late October / early November 2022, shortly after I wrote about
              <a href="https://brr.fyi/posts/wastewater-plant">The McMurdo Wastewater Treatment Plant</a>, I noticed that brr had been picked up by a
              handful of online message boards. There’s no stopping Internet momentum once it starts.</p>
            <p>
              <a href="https://brr.fyi/media/brr-wants-a-job/blog-traffic-01.png">
                <picture>
                  <source srcset="https://brr.fyi/media/brr-wants-a-job/blog-traffic-01.png" type="image/png">
                  <img src="https://brr.fyi/media/brr-wants-a-job/blog-traffic-01.png" alt="Blog Traffic 01" width="90%">
                </picture>
                <em>oh no</em>
              </a>
            </p>
            <p>It was fun to discover that there was an audience hungry
              for this type of writing, but it was also terrifying to realize that every word I wrote, from then on,
              would be combed over and scrutinized by Internet strangers. I knew this to be true, because I
              watched it happen, in real time, across message boards.</p>
            <p>I have a distinct memory of sitting in the
              Crary IT office in McMurdo, on a Sunday afternoon, feeling a mix of shock and horror as thousands of
              Internet strangers read my post. I remember reading along as dozens of commenters picked apart the technical
              minutiae of wastewater treatment processing across online message boards.</p>
            <p>I combed through my posts over and over, trying to reassure myself that I hadn’t gotten anything
              factually wrong, disclosed any restricted information, or otherwise made any mistakes that would stick out
              with this newfound attention.</p>
            <p>At this point, I decided to 1.) lean into the momentum and continue writing, 2.) be precise and careful,
              3.) tailor my writing to my newly-expanded audience, and 4.) commit to staying anonymous.</p>
            <p>And the blog continued to grow in popularity. When I published <a href="https://brr.fyi/posts/last-flight-out">Last Flight Out</a> in
              February 2023, I surpassed 1TB of monthly CloudFront egress for the first time, as tens of thousands
              of people around the world read about how we prepared South Pole Station for the long winter.</p>
            <p>When I published <a href="https://brr.fyi/posts/engineering-for-slow-internet">Engineering for Slow Internet</a> in late May 2024, I found myself
              at the top of <a href="https://news.ycombinator.com/front?day=2024-05-31">Hacker News</a> for the day, and the post
              received about 200,000 non-bot pageviews in the first 48 hours.</p>
            <p>Throughout this adventure, anonymity was a helpful tool, and I was glad I had built it in from the start.
              Anonymity kept the focus on my experience <em>in Antarctica</em>. It allowed Antarctic Infrastructure to
              stay front and center, just as I had originally intended. It helped me, my colleagues, and my back-home friends
              stay out of a personal spotlight that none of us had signed up for.</p>
            <p>Antarctica is vast, and the people who work there have a variety of opinions about a variety of topics.
              I was extremely wary of thrusting any person, team, or project into the spotlight.
              Some people explicitly cultivate real-name publicity associated with their time in Antarctica;
              others recoil in horror at the slightest risk of being Perceived™.</p>
            <p>Some “ice people” love that the brr blog took off the way it did, and they believe it’s a wholesome and good-natured
              way to share a love of infrastructure with fellow enthusiasts around the world. Others are
              baffled that thousands of Internet strangers care about wastewater treatment at all.</p>
            <p>Still others find the tone of this blog to be
              off-putting, either because they believe that nothing should be said in public at all, or because
              they believe I have drastically mis-represented the day-to-day experience of working within the program. This is
              an entirely valid critique, and it’s one that I fully accept.</p>
            <p>Brr is primarily an infrastructure blog. If you are interested in the United States Antarctic Program in more
              detail, I recommend reading
              Nicholas Johnson’s <a href="https://feralhouse.com/big-dead-place/">Big Dead Place</a>. I have done so, and it resonates
              strongly with me. Johnson cared deeply about Antarctica, and
              I appreciate that he was willing to write candidly about its shortcomings.
              I can’t recommend this book highly enough if
              you’re interested in getting a more holistic picture about the day-to-day sociological context of Antarctic
              contract work. Johnson wrote about this topic more eloquently
              than I could ever hope to accomplish. His insights are as valid today as they were in 2005.</p>
            <p>Anonymity was also helpful due to my status as a worker on
              the United States Antarctic Program’s Antarctic Support Contract.
              For the firms that administer these large contracts, one aspect of the job
              is to keep an eye on staff members’ social media activity. This is especially true for
              contracts associated with subjects of high public interest such as Antarctica.</p>
            <p>Nothing in my employment contract prohibited
              me from maintaining this blog, as long as I complied with the relevant
              <a href="https://www.usap.gov/technology/1563/">policies</a>. But – I’m sure that
              some folks at <a href="https://www.leidos.com/capabilities/mission-operations/antarctic-support-contract">Leidos</a> and
              the <a href="https://www.nsf.gov/div/index.jsp?div=OPP">NSF Office of Polar Programs</a> were
              monitoring this blog, because I know with certainty that they were
              monitoring (and, in some cases, actively intervening with) colleagues’ social media.</p>
            <p>For people inside the
              Antarctic program, it would have been trivial to work out who I was.
              For example, just the two datapoints
              <em>“flew to McMurdo on August 28, 2022”</em> and <em>“flew to Pole on December 15, 2022”</em> are
              enough for anyone with access to the flight manifests to narrow it down to just me.</p>
            <p>Staying officially anonymous sent a signal that I wasn’t live-blogging my experience for real-world
              professional gain while I was still employed in Antarctica. This is a big no-no according to the policies.
              This was also one of the reasons I turned down higher-profile inquiries, such as newspapers or documentaries.</p>
            <p>But now that I’m 1.) no longer in Antarctica, 2.) a healthy 8 months removed from the experience, and
              3.) starting to look for non-Antarctica things to do next, I don’t feel that anonymity is necessary or helpful
              anymore.</p>
            <p>Brr is the only thing I’ve ever written on the Internet, and it grew beyond my expectations.
              You’ve all been so kind, and I’ve truly enjoyed every connection, however small,
              that I’ve been able to make with fascinating people around the world.</p>
            <p>Hi – my name is <a href="https://paulcoldren.org/">Paul Coldren</a>, and it has been quite an adventure keeping this blog
              anonymously
              for the past 2 years.</p>
            <p>
              <a href="https://brr.fyi/media/brr-wants-a-job/paul-coldren-01.jpg">
                <picture>
                  <source srcset="https://brr.fyi/media/brr-wants-a-job/paul-coldren-01-small.webp" type="image/webp">
                  <source srcset="https://brr.fyi/media/brr-wants-a-job/paul-coldren-01-small.jpg" type="image/jpg">
                  <img src="https://brr.fyi/media/brr-wants-a-job/paul-coldren-01-small.jpg" alt="Paul Coldren 01" width="50%">
                </picture>
                <em>Photo taken at the South Pole and stylized by Michelle Endo, one of my fellow Pole winterovers.</em>
              </a>
            </p>
            <p>So, now that I’m a Real Person™️ instead of an anonymous blogger, I’d like some help finding a new project to
              work on. Thanks in advance!</p>
            <h2 id="job">Help me find a job</h2>
            <p>I’ve always been interested in infrastructure and systems. Working at the South Pole was a
              fantastic way to see a bunch of this up close.</p>
            <p>I’m not just referring to technological infrastructure
              (<em>how exactly</em> <strong><em>do</em></strong> <em>you run server infrastructure at the South Pole?</em>). I’m also referring
              to organizational infrastructure. I got to see the ins and outs of government employment, contracting,
              procurement, supply chains, budgeting, and military logistics.</p>
            <p>I also got to meet a bunch of new people, and I got to explore the world of
              itinerant, gig-chasing contract work. This was all new to me, and I found it all
              to be fascinating and fulfilling.</p>
            <p>For this next phase, I’d like to try establishing a home base, finding a community, and working on something new.</p>
            <p>For the rest of this post, I’ll be describing my skills and interests. My hope is that brr readers who
              are hiring or are aware of openings will reach out.</p>
            <h3 id="skills">What I’m good at</h3>
            <p>I come from a high tech background.
              I have a computer science degree, and just over a decade of experience doing a variety of high tech work.</p>
            <p>I’ve worked at FAANG and FAANG-adjacent megacorps, tiny 10-person startups, and everything in between. I’ve worked
              on software applications, consumer electronics, and business hardware products. My 14 months in Antarctica
              gave me exposure to the world of regulated government engineering. I spent approximately two years
              as a self-employed IT and infrastructure consultant. I’ve worked in individual contributor and tech lead roles.</p>
            <p>My expertise these days is primarily as an IT engineering and infrastructure engineering generalist.
              That being said, go back about ~8 years, and my job title was “Senior Software Test Engineer”. So – there
              is some pure software experience in there.</p>
            <p>In Antarctica, they called me “Senior Systems Administrator, South Pole Station”. Prior to that, I’ve worn a
              variety of hats, including “IT Director”, “Senior Infrastructure Engineer”, “IT Engineering Consultant”, and
              “Senior Software Test Engineer”.</p>
            <p>I work best in a high-trust environment, where I’m accountable for an outcome instead of a series of
              predetermined steps. I’m a systems thinker, and I feel most at home when I’m bringing order, robustness,
              determinism, and risk characterization to an ad-hoc system. I’m precise and detail-oriented, when such traits
              are warranted for the task at hand.
              I enjoy working on resilience engineering, contingency planning, workflow automation, and monitoring projects.</p>
            <p>For example, from day one, I’ll think about
              building and securing out-of-band administrative access for important services. I’ll be the one
              documenting service owners, runbooks, and recovery playbooks. Or, depending on risk tolerance, it means
              I’ll at least explicitly document our decision to defer building these items.</p>
            <p>It also means I’m the person who grabs the RJ45 crimper “just in case”. I’m
              the person who remembers to photograph the inside of the junction box, before we seal it up and stuff it back in
              the attic. I’m the person who maintains the wiki page listing all our vendor contacts.</p>
            <h3 id="goals">What I’m looking for</h3>
            <p>I’m passionate about physical, civil infrastructure, so I’m hoping my next role will be <strong>tangible</strong>. I’m interested
              in working on a team and in a role where I routinely interact with tangible facets of our built environment.</p>
            <p>I am especially interested in clean energy, electrification, and power grid engineering. Some of my past jobs
              have been on grid analytics, electric vehicle charging infrastructure, and battery engineering. I’d love to continue
              working in this field.</p>
            <p>As a hobby, I hold an <a href="https://abycinc.org/marine-electrical-certification/">ABYC</a> marine electrical certification,
              and I’ve built small-scale solar + storage energy projects for off-grid installations.</p>
            <p>I’m particularly interested in solar, wind, and hydro developers. Grid resiliency engineering companies.
              Home and commercial electrification companies. Anything where I can help push the industry forward, get more
              renewable energy online, build a robust electrical grid, and electrify everything.</p>
            <p>I’m also interested in Internet accessibility and reliability. I spend time with the
              <a href="https://broadbandmap.fcc.gov/">FCC Broadband map</a> and the <a href="https://atlas.ripe.net/">RIPE Atlas</a>
              portal for fun, and in past jobs I’ve worked on connectivity tools and services.</p>
            <p>I’m mostly interested in IT and infrastructure roles. I am qualified, but not particularly interested, in pure
              software roles. I did those for the first ~5 years of my career, before beginning to transition over more to
              the IT and infrastructure side.</p>
            <p>Is your growing company hiring its first IT Administrator? Are you looking for someone to handle
              your 50+ SaaS applications, identity challenges, office IT, compliance, and corporate hardware management tasks?
              Let’s talk.</p>
            <p>Do you have a fleet of systems, services, and workloads, running in an onprem, cloud, or hybrid environment, and
              you need a competent Systems Administrator generalist to help tame the chaos? Let’s talk.</p>
            <p>Is your growing engineering team facing engineering workflow, testing, staging, productionization, or
              monitoring challenges? Are you looking for a competent Infrastructure Engineer? Let’s talk.</p>
            <p><em>And of course, as a wildcard –</em> <strong><em>do you work on something that someone who geeks out about Antarctic Infrastructure
                  might enjoy, even if it doesn’t neatly fall into one of the above categories?</em></strong> <em>Let’s talk!</em></p>
            <p>Again, I’m <a href="https://paulcoldren.org/">Paul Coldren</a>, and you can find relevant professional information about me
              on <a href="https://www.linkedin.com/in/coldren-paul/">LinkedIn</a>.
              You can reach me via email at <a href="mailto:hello@brr.fyi">hello@brr.fyi</a>.</p>
            <p><em>Also, I’m just starting to socialize and meet new people here. I’d love to meet up
                with brr readers in the Denver area! I need to find groups for lap swimming and day hikes. And, of course,
                I’ll need to get connected with local Denver infrastructure enthusiasts…
                <a href="https://www.metrowaterrecovery.com/community/tours/">wastewater treatment plant tour</a>, anyone?</em></p>
            <p>Thank you for your help!</p>
            <p>–Paul</p>
          </div>
        </article>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How fast can a human possibly run 100 meters? (131 pts)]]></title>
            <link>https://bigthink.com/starts-with-a-bang/fast-human-run-100-meters/</link>
            <guid>41034738</guid>
            <pubDate>Mon, 22 Jul 2024 14:21:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bigthink.com/starts-with-a-bang/fast-human-run-100-meters/">https://bigthink.com/starts-with-a-bang/fast-human-run-100-meters/</a>, See on <a href="https://news.ycombinator.com/item?id=41034738">Hacker News</a></p>
<div id="readability-page-1" class="page"><div x-data="prose">

                    <!--?xml encoding="utf-8" ?--><p>In 2008, Usain Bolt <a href="https://commons.wikimedia.org/wiki/File:Usain_Bolt_winning-cropped2.jpg">won Olympic gold</a>, setting the 100 meter world record.</p><!--?xml encoding="utf-8" ?--><figure><img fetchpriority="high" decoding="async" width="1401" height="1000" src="https://bigthink.com/wp-content/uploads/2024/07/Usain_Bolt_winning-cropped2.jpg" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/Usain_Bolt_winning-cropped2.jpg 1401w, https://bigthink.com/wp-content/uploads/2024/07/Usain_Bolt_winning-cropped2.jpg?resize=375,268 375w, https://bigthink.com/wp-content/uploads/2024/07/Usain_Bolt_winning-cropped2.jpg?resize=640,457 640w, https://bigthink.com/wp-content/uploads/2024/07/Usain_Bolt_winning-cropped2.jpg?resize=768,548 768w, https://bigthink.com/wp-content/uploads/2024/07/Usain_Bolt_winning-cropped2.jpg?resize=1024,731 1024w, https://bigthink.com/wp-content/uploads/2024/07/Usain_Bolt_winning-cropped2.jpg?resize=1280,914 1280w"><div><div><p>In the 2008 Olympics. Usain Bolt not only won Olympic gold, he outclassed all of his rivals and became the first human to break through the 9.70 second barrier.
</p></div><figcaption><a href="https://commons.wikimedia.org/wiki/File:Usain_Bolt_winning-cropped2.jpg">Credit</a>: PhotoBobil &amp; SillyFolkBoy/Wikimedia Commons
</figcaption></div></figure><p>His 9.69 second finish <a href="https://www.givemesport.com/88077101-usain-bolts-100m-world-record-insane-fan-footage-of-9-58s-race/">was bettered in 2009</a>: running 9.58 seconds.</p><!--?xml encoding="utf-8" ?--><figure><img decoding="async" width="1697" height="1224" src="https://bigthink.com/wp-content/uploads/2024/07/Gn8LfRE.jpg" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/Gn8LfRE.jpg 1697w, https://bigthink.com/wp-content/uploads/2024/07/Gn8LfRE.jpg?resize=1536,1108 1536w, https://bigthink.com/wp-content/uploads/2024/07/Gn8LfRE.jpg?resize=375,270 375w, https://bigthink.com/wp-content/uploads/2024/07/Gn8LfRE.jpg?resize=640,462 640w, https://bigthink.com/wp-content/uploads/2024/07/Gn8LfRE.jpg?resize=768,554 768w, https://bigthink.com/wp-content/uploads/2024/07/Gn8LfRE.jpg?resize=1024,739 1024w, https://bigthink.com/wp-content/uploads/2024/07/Gn8LfRE.jpg?resize=1280,923 1280w"><div><div><p>With an automatic time of 9.572 seconds (adjusted for a wind assistance of 0.9 m/s to 9.58 seconds), Usain Bolt’s performance in the 2009 World Championships remains the fastest a human has ever run a 100 meter race.
</p></div><figcaption><a href="https://imgur.com/Gn8LfRE">Credit</a>: IAAF World Championships, 2009
</figcaption></div></figure><p>No other runner, before or since, has broken the 9.60 second barrier.</p><!--?xml encoding="utf-8" ?--><figure><img decoding="async" width="952" height="731" src="https://bigthink.com/wp-content/uploads/2024/07/100mprog.jpg" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/100mprog.jpg 952w, https://bigthink.com/wp-content/uploads/2024/07/100mprog.jpg?resize=375,288 375w, https://bigthink.com/wp-content/uploads/2024/07/100mprog.jpg?resize=640,491 640w, https://bigthink.com/wp-content/uploads/2024/07/100mprog.jpg?resize=768,590 768w"><div><div><p>Although runners Tyson Gay, Yohan Blake, Asafa Powell, and Justin Gatlin have all run 100 meter times between 9.69 and 9.75 seconds, only Usain Bolt has broken the 9.6 second barrier.
</p></div><figcaption><a href="https://en.wikipedia.org/wiki/100_metres">Credit</a>: English Language Wikipedia
</figcaption></div></figure><p>But with the ideal human:</p><ul>
<li>anatomy,</li>



<li>start,</li>



<li>acceleration,</li>



<li>endurance,</li>



<li>and top speed,</li>
</ul><p>how fast could we run a perfect 100 meter race?</p><!--?xml encoding="utf-8" ?--><figure><img loading="lazy" decoding="async" width="852" height="1280" src="https://bigthink.com/wp-content/uploads/2024/07/images_large_zdg0041089700001.jpg" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/images_large_zdg0041089700001.jpg 852w, https://bigthink.com/wp-content/uploads/2024/07/images_large_zdg0041089700001.jpg?resize=375,563 375w, https://bigthink.com/wp-content/uploads/2024/07/images_large_zdg0041089700001.jpg?resize=640,962 640w, https://bigthink.com/wp-content/uploads/2024/07/images_large_zdg0041089700001.jpg?resize=768,1154 768w"><div><div><p>A physiological analysis of various components of the forces on a runner when their feet are and are not in contact with the ground, based on real world analysis of elite runners.
</p></div><figcaption><a href="https://journals.physiology.org/doi/full/10.1152/japplphysiol.00947.2009">Credit</a>: P.G. Weyand et al., Journal of Applied Physiology, 2010
</figcaption></div></figure><p>Initially, you <a href="https://speedendurance.com/2008/08/22/usain-bolt-100m-10-meter-splits-and-speed-endurance/">must wait 0.10 seconds</a> after the gun before moving; any faster is a false start.</p><!--?xml encoding="utf-8" ?--><figure><img loading="lazy" decoding="async" width="959" height="716" src="https://bigthink.com/wp-content/uploads/2024/07/APboltfs.jpg" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/APboltfs.jpg 959w, https://bigthink.com/wp-content/uploads/2024/07/APboltfs.jpg?resize=375,280 375w, https://bigthink.com/wp-content/uploads/2024/07/APboltfs.jpg?resize=640,478 640w, https://bigthink.com/wp-content/uploads/2024/07/APboltfs.jpg?resize=768,573 768w"><div><div><p>In 2011 at the World Athletics Championships in South Korea, a single false start disqualified world record holder Usain Bolt from the 100 meter race. Reacting to the gun faster than 0.1 seconds results in a false start, as humans cannot react quicker than that.
</p></div><figcaption><a href="https://www.the-sun.com/sport/3252005/how-many-false-starts-sprinters-allowed-olympics-200m/">Credit</a>: Associated Press
</figcaption></div></figure><p>Human reaction time is limiting; any faster is evidence for anticipating the gun.</p><!--?xml encoding="utf-8" ?--><figure><img loading="lazy" decoding="async" width="850" height="726" src="https://bigthink.com/wp-content/uploads/2024/07/Average-age-and-reaction-times-of-finalists-at-100-m-sprint-in-1-st-and-2-nd-observed.png" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/Average-age-and-reaction-times-of-finalists-at-100-m-sprint-in-1-st-and-2-nd-observed.png 850w, https://bigthink.com/wp-content/uploads/2024/07/Average-age-and-reaction-times-of-finalists-at-100-m-sprint-in-1-st-and-2-nd-observed.png?resize=375,320 375w, https://bigthink.com/wp-content/uploads/2024/07/Average-age-and-reaction-times-of-finalists-at-100-m-sprint-in-1-st-and-2-nd-observed.png?resize=640,547 640w, https://bigthink.com/wp-content/uploads/2024/07/Average-age-and-reaction-times-of-finalists-at-100-m-sprint-in-1-st-and-2-nd-observed.png?resize=768,656 768w"><div><div><p>This table shows the average age and reaction times of finalists at 100 meter events in the Women’s World Athletics Championships from 1999 through 2019. Although there is substantial variation in reaction times, reacting faster than 0.1 seconds always results in a false start.
</p></div><figcaption><a href="https://www.researchgate.net/figure/Average-age-and-reaction-times-of-finalists-at-100-m-sprint-in-1-st-and-2-nd-observed_tbl1_355786099">Credit</a>: P. Mitasik et al., Acta Facultatis Educationis Physicae Universitatis Comenianae, 2021
</figcaption></div></figure><p>Elite sprinters <a href="https://www.livescience.com/8039-humans-run-40-mph-theory.html">can apply peak forces</a> of 800-1000 pounds (3560-4450 Newtons) to each limb.</p><!--?xml encoding="utf-8" ?--><figure><img loading="lazy" decoding="async" width="756" height="1280" src="https://bigthink.com/wp-content/uploads/2024/07/images_large_zdg0041089700007.jpg" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/images_large_zdg0041089700007.jpg 756w, https://bigthink.com/wp-content/uploads/2024/07/images_large_zdg0041089700007.jpg?resize=375,635 375w, https://bigthink.com/wp-content/uploads/2024/07/images_large_zdg0041089700007.jpg?resize=640,1084 640w"><div><div><p>The anatomy of a human leg under tension for running (blue) and hopping (red) gaits. Human legs achieve maximum forces of 800-1000 pounds while running, and up to 30% greater while hopping. Beyond ~1300 pounds of force, human bones will break.
</p></div><figcaption><a href="https://journals.physiology.org/doi/full/10.1152/japplphysiol.00947.2009">Credit</a>: P.G. Weyand et al., Journal of Applied Physiology, 2010
</figcaption></div></figure><p>Beyond ~1300 pounds, <a href="https://www.discovery.com/science/force-to-break-bone">ideal human leg bones would surely break</a>.</p><!--?xml encoding="utf-8" ?--><figure><img loading="lazy" decoding="async" width="3072" height="2048" src="https://bigthink.com/wp-content/uploads/2024/07/hi-res-9a71fb9591eef4071ac98dea58889768_crop_north.jpg" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/hi-res-9a71fb9591eef4071ac98dea58889768_crop_north.jpg 3072w, https://bigthink.com/wp-content/uploads/2024/07/hi-res-9a71fb9591eef4071ac98dea58889768_crop_north.jpg?resize=1536,1024 1536w, https://bigthink.com/wp-content/uploads/2024/07/hi-res-9a71fb9591eef4071ac98dea58889768_crop_north.jpg?resize=2048,1365 2048w, https://bigthink.com/wp-content/uploads/2024/07/hi-res-9a71fb9591eef4071ac98dea58889768_crop_north.jpg?resize=20,12 20w, https://bigthink.com/wp-content/uploads/2024/07/hi-res-9a71fb9591eef4071ac98dea58889768_crop_north.jpg?resize=375,250 375w, https://bigthink.com/wp-content/uploads/2024/07/hi-res-9a71fb9591eef4071ac98dea58889768_crop_north.jpg?resize=640,427 640w, https://bigthink.com/wp-content/uploads/2024/07/hi-res-9a71fb9591eef4071ac98dea58889768_crop_north.jpg?resize=768,512 768w, https://bigthink.com/wp-content/uploads/2024/07/hi-res-9a71fb9591eef4071ac98dea58889768_crop_north.jpg?resize=1024,683 1024w, https://bigthink.com/wp-content/uploads/2024/07/hi-res-9a71fb9591eef4071ac98dea58889768_crop_north.jpg?resize=1280,853 1280w"><div><div><p>US Sprinter Christian Coleman is one of the fastest starters and accelerators in sprint history, and is arguably the world’s most superior runner at distances of 60 meters and under. His lower top speed than other sprinters kept him from making the US Olympic teams in the 100 and 200 meters in 2024, as he placed 4th in both events at the Olympic trials.
</p></div><figcaption><a href="https://bleacherreport.com/articles/2915387-team-usa-sprinter-christian-coleman-suspended-2-years-for-missing-drug-tests">Credit</a>: Martin Meissner/Associated Press
</figcaption></div></figure><p>During <a href="https://www.tiktok.com/@rgiii/video/7341539422933978398">the fastest starts</a>, humans accelerate at rates up to 7.0 meters/second².</p><!--?xml encoding="utf-8" ?--><figure><img loading="lazy" decoding="async" width="1600" height="1066" src="https://bigthink.com/wp-content/uploads/2024/07/Start_Jeremy_Wariner_2007.jpg" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/Start_Jeremy_Wariner_2007.jpg 1600w, https://bigthink.com/wp-content/uploads/2024/07/Start_Jeremy_Wariner_2007.jpg?resize=1536,1023 1536w, https://bigthink.com/wp-content/uploads/2024/07/Start_Jeremy_Wariner_2007.jpg?resize=20,12 20w, https://bigthink.com/wp-content/uploads/2024/07/Start_Jeremy_Wariner_2007.jpg?resize=375,250 375w, https://bigthink.com/wp-content/uploads/2024/07/Start_Jeremy_Wariner_2007.jpg?resize=640,426 640w, https://bigthink.com/wp-content/uploads/2024/07/Start_Jeremy_Wariner_2007.jpg?resize=768,512 768w, https://bigthink.com/wp-content/uploads/2024/07/Start_Jeremy_Wariner_2007.jpg?resize=1024,682 1024w, https://bigthink.com/wp-content/uploads/2024/07/Start_Jeremy_Wariner_2007.jpg?resize=1280,853 1280w"><div><div><p>This 2007 photo shows a sprinter accelerating out of the starting blocks at the London Grand Prix. The fastest accelerating sprinters with the best reaction times often take the lead in sprints, but must achieve and maintain a high enough peak top speed to hang on for the victory.
</p></div><figcaption><a href="https://commons.wikimedia.org/wiki/File:Start_Jeremy_Wariner_2007.jpg">Credit</a>: Phil McElhinney/flickr
</figcaption></div></figure><p>The fastest top speed ever achieved by a human was <a href="https://www.biography.com/athletes/a45897247/usain-bolt">Bolt’s 12.42 meters/second</a> (27.8 mph).</p><!--?xml encoding="utf-8" ?--><figure><img loading="lazy" decoding="async" width="520" height="292" src="https://bigthink.com/wp-content/uploads/2024/07/ezgif-2-a592d33bc9.gif?w=520" alt="Athletes in starting positions on a blue track, ready for the fastest 100 meters race, with lanes numbered 1 to 8. A referee stands on the right near the starting line. Audience and equipment are visible in the background." sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/ezgif-2-a592d33bc9.gif 520w, https://bigthink.com/wp-content/uploads/2024/07/ezgif-2-a592d33bc9.gif?resize=20,12 20w, https://bigthink.com/wp-content/uploads/2024/07/ezgif-2-a592d33bc9.gif?resize=40,23 40w, https://bigthink.com/wp-content/uploads/2024/07/ezgif-2-a592d33bc9.gif?resize=80,45 80w, https://bigthink.com/wp-content/uploads/2024/07/ezgif-2-a592d33bc9.gif?resize=160,90 160w, https://bigthink.com/wp-content/uploads/2024/07/ezgif-2-a592d33bc9.gif?resize=256,144 256w, https://bigthink.com/wp-content/uploads/2024/07/ezgif-2-a592d33bc9.gif?resize=320,180 320w, https://bigthink.com/wp-content/uploads/2024/07/ezgif-2-a592d33bc9.gif?resize=480,270 480w, https://bigthink.com/wp-content/uploads/2024/07/ezgif-2-a592d33bc9.gif?resize=420,236 420w, https://bigthink.com/wp-content/uploads/2024/07/ezgif-2-a592d33bc9.gif?resize=495,278 495w, https://bigthink.com/wp-content/uploads/2024/07/ezgif-2-a592d33bc9.gif?resize=375,211 375w"><div><div><p>In the fastest race in history, Usain Bolt ran 100 meters in 9.58 seconds, defeating Tyson Gay who finished second in 9.71 and Asafa Powell who finished third, to become the fastest human in world history. His record still stands as of 2024.
</p></div><figcaption><a href="https://www.youtube.com/watch?v=3nbjhpcZ9_g">Credit</a>: IAAF World Athletics Championships 2009
</figcaption></div></figure><p>However, <a href="https://journals.physiology.org/doi/full/10.1152/japplphysiol.00947.2009">anatomical studies suggest</a> peak speeds up to 15.6-17.9 m/s (35-40 mph) are achievable.</p><!--?xml encoding="utf-8" ?--><figure><img loading="lazy" decoding="async" width="800" height="533" src="https://bigthink.com/wp-content/uploads/2024/07/animals-vs-olympians-who-runs-faster_502bf8adbf65d-e1535280758856.jpg" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/animals-vs-olympians-who-runs-faster_502bf8adbf65d-e1535280758856.jpg 800w, https://bigthink.com/wp-content/uploads/2024/07/animals-vs-olympians-who-runs-faster_502bf8adbf65d-e1535280758856.jpg?resize=20,12 20w, https://bigthink.com/wp-content/uploads/2024/07/animals-vs-olympians-who-runs-faster_502bf8adbf65d-e1535280758856.jpg?resize=375,250 375w, https://bigthink.com/wp-content/uploads/2024/07/animals-vs-olympians-who-runs-faster_502bf8adbf65d-e1535280758856.jpg?resize=640,426 640w, https://bigthink.com/wp-content/uploads/2024/07/animals-vs-olympians-who-runs-faster_502bf8adbf65d-e1535280758856.jpg?resize=768,512 768w"><div><div><p>Although Cheetahs have achieved top speeds that far exceed what a human is capable of, it is anatomically possible for a human to run a 100 meter race in approximately the time it takes a cheetah to cover 200 meters.
</p></div><figcaption><a href="https://www.safari-center.com/cheetah-outruns-humans-and-challenges-machines/">Credit</a>: ZoologyDegreeOnline/cc-by-nc-nd
</figcaption></div></figure><p>In practice, top speeds are sustainable <a href="https://speedendurance.com/2008/08/22/usain-bolt-100m-10-meter-splits-and-speed-endurance/">for only 3-4 seconds</a>.</p><!--?xml encoding="utf-8" ?--><figure><img loading="lazy" decoding="async" width="514" height="282" src="https://bigthink.com/wp-content/uploads/2024/07/100-meter-splits.webp" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/100-meter-splits.webp 514w, https://bigthink.com/wp-content/uploads/2024/07/100-meter-splits.webp?resize=20,12 20w, https://bigthink.com/wp-content/uploads/2024/07/100-meter-splits.webp?resize=512,282 512w, https://bigthink.com/wp-content/uploads/2024/07/100-meter-splits.webp?resize=40,23 40w, https://bigthink.com/wp-content/uploads/2024/07/100-meter-splits.webp?resize=80,45 80w, https://bigthink.com/wp-content/uploads/2024/07/100-meter-splits.webp?resize=375,206 375w"><div><div><p>This table shows split times in 10 meter intervals extracted from the races of numerous elite sprinters throughout history. Although these sprinters have comparable top speeds, sustaining that top speed for the entirety of a race is challenging, and is practically limited to 3-4 seconds.
</p></div><figcaption><a href="https://speedendurance.com/2008/08/22/usain-bolt-100m-10-meter-splits-and-speed-endurance/">Credit</a>: SpeedEndurance.com/Jimson Lee
</figcaption></div></figure><p>An:</p><ul>
<li>ideal start (0.10 seconds),</li>



<li>constant acceleration to top speed (2.56 s),</li>



<li>and sustaining a 17.9 m/s speed for the race’s remainder (4.31 s),</li>
</ul><p>would yield a time of 6.97 seconds.</p><!--?xml encoding="utf-8" ?--><figure><img loading="lazy" decoding="async" width="1024" height="846" src="https://bigthink.com/wp-content/uploads/2024/07/us-navy-040521-n-2653p-302-cryptologic-technician-interpreter-2nd-class-casey-063d6d-1024.jpg" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/us-navy-040521-n-2653p-302-cryptologic-technician-interpreter-2nd-class-casey-063d6d-1024.jpg 1024w, https://bigthink.com/wp-content/uploads/2024/07/us-navy-040521-n-2653p-302-cryptologic-technician-interpreter-2nd-class-casey-063d6d-1024.jpg?resize=375,310 375w, https://bigthink.com/wp-content/uploads/2024/07/us-navy-040521-n-2653p-302-cryptologic-technician-interpreter-2nd-class-casey-063d6d-1024.jpg?resize=640,529 640w, https://bigthink.com/wp-content/uploads/2024/07/us-navy-040521-n-2653p-302-cryptologic-technician-interpreter-2nd-class-casey-063d6d-1024.jpg?resize=768,635 768w"><div><div><p>Although paralympians are not yet competitive with fully limbed humans over the shortest race sprint distances, there are anatomical advantages that prosthetics offer that may someday lead to them surpassing the current world record.
</p></div><figcaption><a href="https://jenikirbyhistory.getarchive.net/amp/media/us-navy-040521-n-2653p-302-cryptologic-technician-interpreter-2nd-class-casey-063d6d">Credit</a>: U.S. Navy/public domain
</figcaption></div></figure><p>Any faster, and you’re no longer human.</p><!--?xml encoding="utf-8" ?--><figure><img loading="lazy" decoding="async" width="1024" height="1024" src="https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg" alt="" sizes="(max-width: 767px) 96vw, (max-width: 1280px) 60vw, (max-width: 1536px) 46vw, 710px" srcset="https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg 1024w, https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg?resize=20,20 20w, https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg?resize=40,40 40w, https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg?resize=80,80 80w, https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg?resize=160,160 160w, https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg?resize=256,256 256w, https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg?resize=335,335 335w, https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg?resize=512,512 512w, https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg?resize=640,640 640w, https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg?resize=854,854 854w, https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg?resize=375,375 375w, https://bigthink.com/wp-content/uploads/2024/07/dfyx6yl-2a273e2f-9bfc-43a3-9e34-411463eff9e9.jpg?resize=768,768 768w"><div><div><p>If we wish to remain bound by the limits of human anatomy, there is clearly a fastest maximum time for a sprinter in the 100 meter dash. However, gene altering, prosthetics, limb lengthening, and even robotic augmentations may someday surpass even the most stringent theoretical limits.
</p></div><figcaption><a href="https://www.deviantart.com/daedalus369/art/Desert-Robot-4-965648253">Credit</a>: daedalus369/DeviantArt
</figcaption></div></figure><p><em>Mostly Mute Monday tells a science story in images, visuals, and no more than 200 words.</em></p>

                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Startups which received funding today (statistics) (269 pts)]]></title>
            <link>https://old.reddit.com/user/Kooky_Nectarine_6287/</link>
            <guid>41034590</guid>
            <pubDate>Mon, 22 Jul 2024 14:10:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://old.reddit.com/user/Kooky_Nectarine_6287/">https://old.reddit.com/user/Kooky_Nectarine_6287/</a>, See on <a href="https://news.ycombinator.com/item?id=41034590">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>the front page of the internet.</p><div><p><span>Become a Redditor</span></p><p>and join one of thousands of communities.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[No More Blue Fridays (416 pts)]]></title>
            <link>https://www.brendangregg.com/blog/2024-07-22/no-more-blue-fridays.html</link>
            <guid>41033579</guid>
            <pubDate>Mon, 22 Jul 2024 12:21:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.brendangregg.com/blog/2024-07-22/no-more-blue-fridays.html">https://www.brendangregg.com/blog/2024-07-22/no-more-blue-fridays.html</a>, See on <a href="https://news.ycombinator.com/item?id=41033579">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>In the future, computers will not crash due to bad software updates, even those updates that involve kernel code. In the future, these updates will push <a href="https://ebpf.io/">eBPF</a> code.</p>

<p>Friday July 19th provided an unprecedented example of the inherent dangers of kernel programming, and has been called the largest outage in the <a href="https://en.m.wikipedia.org/wiki/2024_CrowdStrike_incident#Cost">history</a> of information technology. Windows computers around the world encountered blue-screens-of-death and boot loops, causing <a href="https://www.washingtonpost.com/technology/2024/07/19/microsoft-windows-outage-blue-screen-bsod/">outages</a> for hospitals, airlines, banks, grocery stores, media broadcasters, and more. This was caused by a <a href="https://www.crowdstrike.com/blog/falcon-update-for-windows-hosts-technical-details/">config update</a> by a security company for their widely used product that included a kernel driver on Windows systems. The update caused the kernel driver to <a href="https://medium.com/@shyamsundarb/technical-details-of-the-windows-bsod-disaster-due-to-crowdstrike-58de2371c19c">try to read invalid memory</a>, an error type that will crash the kernel.</p>

<p>For Linux systems, the company behind this outage was already in the process of adopting eBPF, which is immune to such crashes. Once Microsoft's <a href="https://github.com/microsoft/ebpf-for-windows">eBPF support for Windows</a> becomes production-ready, Windows security software can be ported to eBPF as well. These security agents will then be safe and unable to cause a Windows kernel crash.</p>

<p>eBPF (no longer an acronym) is a secure kernel execution environment, similar to the secure JavaScript runtime built into web browsers. If you're using Linux, you likely already have eBPF available on your systems whether you know it or not, as it was included in the kernel several years ago. eBPF programs cannot crash the entire system because they are safety-checked by a software verifier and are effectively run in a sandbox. If the verifier finds any unsafe code, the program is rejected and not executed. The verifier is rigorous -- the Linux implementation has <a href="https://github.com/torvalds/linux/blob/master/kernel/bpf/verifier.c">over 20,000 lines of code</a> -- with contributions from industry (e.g., Meta, Isovalent, Google) and academia (e.g., <a href="https://people.cs.rutgers.edu/~sn624/verified-sandboxing.html">Rutgers University</a>, <a href="https://unsat.cs.washington.edu/projects/jitterbug/">University of Washington</a>). The safety this provides is a key benefit of eBPF, along with heightened security and lower resource usage.</p>

<p>Some eBPF-based security startups (e.g., <a href="https://www.oligo.security/blog/recent-crowdstrike-outage-emphasizes-the-need-for-ebpf-based-sensors">Oligo</a>, <a href="https://www.uptycs.com/blog/crowdstrike-outage-less-intrusive-malware-detection">Uptycs</a>) have made their own statements about the recent outage, and the advantages of migrating to eBPF. Larger tech companies are also adopting eBPF for security. As an example, Cisco acquired the eBPF-startup Isovalent and has announced a new eBPF security product: <a href="https://blogs.cisco.com/security/cisco-hypershield-reimagining-security">Cisco Hypershield</a>, a fabric for security enforcement and monitoring. <a href="https://www.youtube.com/watch?v=N4YKcMV8iaY">Google</a> and <a href="https://lpc.events/event/17/contributions/1602/">Meta</a> already rely on eBPF to detect and stop bad actors in their fleet, thanks to eBPF's speed, deep visibility, and safety guarantees. Beyond security, eBPF is also used for networking and observability.</p>

<p>The worst thing an eBPF program can do is to merely consume more resources than is desirable, such as CPU cycles and memory. eBPF cannot prevent developers writing poor code -- wasteful code -- but it will prevent serious issues that cause a system to crash. That said, as a new technology eBPF has had some bugs in its management code, including a <a href="https://access.redhat.com/solutions/7068083">Linux kernel panic</a> discovered by the same security company in the news today. This doesn't mean that eBPF has solved nothing, substituting a vendor's bug for its own. Fixing these bugs in eBPF means fixing these bugs for <em>all</em> eBPF vendors, and more quickly improving the security of everyone.</p>

<p>There are other ways to reduce risks during software deployment that can be employed as well: canary testing, staged rollouts, and "resilience engineering" in general. What's important about the eBPF method is that it is a software solution that will be available in both Linux and Windows kernels by default, and has already been adopted for this use case.</p>

<p>If your company is paying for commercial software that includes kernel drivers or kernel modules, you can make eBPF a requirement. It's possible for Linux today, and Windows soon. While some vendors have already proactively adopted eBPF (thank you), others might need a little encouragement from their paying customers. Please help raise awareness, and together we can make such global outages a lesson of the past.</p>

<p><em>Authors: Brendan Gregg, Intel; Daniel Borkmann, Isovalent; Joe Stringer, Isovalent; KP Singh, Google.</em></p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Physicist, 98, honoured with doctorate 75 years after groundbreaking discovery (169 pts)]]></title>
            <link>https://www.theguardian.com/science/article/2024/jul/22/physicist-rosemary-fowler-honoured-doctorate-75-years-after-discovery</link>
            <guid>41033209</guid>
            <pubDate>Mon, 22 Jul 2024 11:29:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/science/article/2024/jul/22/physicist-rosemary-fowler-honoured-doctorate-75-years-after-discovery">https://www.theguardian.com/science/article/2024/jul/22/physicist-rosemary-fowler-honoured-doctorate-75-years-after-discovery</a>, See on <a href="https://news.ycombinator.com/item?id=41033209">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p>A trailblazing physicist who gave up her PhD 75 years ago to have a family has received an honorary doctorate from her former university.</p><p>Rosemary Fowler, 98, discovered the kaon particle during her doctoral research under Cecil Powell at the <a href="https://www.theguardian.com/education/universityofbristol" data-link-name="in body link" data-component="auto-linked-tag">University of Bristol</a> in 1948, which contributed to his Nobel prize for physics in 1950.</p><p>Fowler’s discovery helped lead to a revolution in the theory of particle physics, and it continues to be proven correct – predicting particles such as the <a href="https://www.theguardian.com/science/higgs-boson" data-link-name="in body link" data-component="auto-linked-tag">Higgs boson</a>, discovered at Cern in Geneva, Switzerland.</p><p>But she left university without completing her PhD to marry fellow physicist Peter Fowler in 1949, a decision she later described as pragmatic after she went on to have three children in a time of postwar food rationing.</p><p>She has now been awarded an honorary doctor of science by the University of <a href="https://www.theguardian.com/uk/bristol" data-link-name="in body link" data-component="auto-linked-tag">Bristol</a> chancellor, Sir Paul Nurse, in a private graduation ceremony close to her Cambridge home.</p><p>Fowler said she felt “very honoured” but added: “I haven’t done anything since to deserve special respect.”</p><p>Nurse praised Fowler’s “intellectual rigour and curiosity”, which “paved the way for critical discoveries that continue to shape the work of today’s physicists, and our understanding of the universe”.</p><p>At 22, Fowler spotted something when viewing unusual particle tracks – a particle that decayed into three pions, a type of subatomic particle.</p><p>She said: “I knew at once that it was new and would be very important. We were seeing things that hadn’t been seen before – that’s what research in particle physics was. It was very exciting.”</p><p>The track, later labelled K, was evidence of an unknown particle, now known as the kaon or K meson.</p><p>The K track was the mirror image of a particle seen before by colleagues in Manchester, but their track decayed into two pions, not three. Trying to understand how these images were the same, yet behaved differently, helped lead to a revolution in the theory of particle physics.</p><p>The year after the discovery, Fowler left university having published her discovery in three academic papers.</p><p>Fowler was born in Suffolk in 1926, and excelled in maths and science as a child but found writing a challenge. She was the only girl in her year to go to university.</p><p>She became one of the first women to be awarded a first in physics, and her three children went on to study science.</p><p>Her daughter, Mary Fowler, studied maths and then geophysics at Cambridge and had an academic career in Switzerland, Canada, London and finally Cambridge, where she was the master of Darwin College from 2012-20.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Unconditional Cash Study: first findings available (124 pts)]]></title>
            <link>https://www.openresearchlab.org/studies/unconditional-cash-study/study</link>
            <guid>41033005</guid>
            <pubDate>Mon, 22 Jul 2024 11:00:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.openresearchlab.org/studies/unconditional-cash-study/study">https://www.openresearchlab.org/studies/unconditional-cash-study/study</a>, See on <a href="https://news.ycombinator.com/item?id=41033005">Hacker News</a></p>
<div id="readability-page-1" class="page"><div tabindex="-1" id="main-content" data-module-reveal="">
        

                                                                                                                    
      

  




<div>
  <div>
    
          <p>
              <h2 data-module-split-heading="" data-module-reveal="">Cash increases&nbsp;possibility.</h2>
      
    </p>
  
    
    </div>

    <div>
    <div data-module-reveal="">
      <p><img alt="" width="200" height="101.66666666667" srcset="https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Desktop.jpg?w=400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007453&amp;s=b87071f265094b97b4ebf3f47dc98548 400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Desktop.jpg?w=800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007453&amp;s=b6b193b3b628f7ed663bf3b8ca61e48c 800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Desktop.jpg?w=1200&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007453&amp;s=6ef8c960cbf32ac40d46fecbc91af52a 1200w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Desktop.jpg?w=1600&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007453&amp;s=c7ab5679948283b26ab569ef00b19cfb 1600w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Desktop.jpg?w=2000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007453&amp;s=75dc7bc28841b2001fc7c093bec4a0c9 2000w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Desktop.jpg?w=2400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007453&amp;s=162f2bbaa368cd3a437f64a0dc4394e2 2400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Desktop.jpg?w=2800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007453&amp;s=4e59174ecf529b5ecadfa9f444a5d069 2800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Desktop.jpg?w=3000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007453&amp;s=e193110d6645c031bd2a6f0ba0ed4d5d 3000w" decoding="async" loading="lazy">
    
      </p>
    </div>

    <div data-module-reveal="">
      <p><img alt="" width="200" height="345.29914529915" srcset="https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Mobile.jpg?w=400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007890&amp;s=0650d1162d7f4297f6a9cea0e8e15db9 400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Mobile.jpg?w=800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007890&amp;s=5ecc0732d7675cc4880bdede1ba83dfc 800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Mobile.jpg?w=1200&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007890&amp;s=a87f17f6997a1139699f15d33bcdcd84 1200w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Mobile.jpg?w=1600&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007890&amp;s=c29643f1733e97a3194ddac487351403 1600w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Mobile.jpg?w=2000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007890&amp;s=1a8059d8626352fbdc5d42f464232f64 2000w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Mobile.jpg?w=2400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007890&amp;s=012f4606fa7605a93f05725d9e31ff71 2400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Mobile.jpg?w=2800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007890&amp;s=81f06df3488cfb0e8e7585b233489fdf 2800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/hero/OpenResearch_Homepage_Hero_Mobile.jpg?w=3000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1712007890&amp;s=917887944fd14a53e2fe02742bbb7b08 3000w" decoding="async" loading="lazy">
    
      </p>
    </div>
  </div>
</div>
        

    




<div>
    <div data-module-reveal="stagger-children">
    
          <p>
            <h3>        Research provides the foundation&nbsp;</h3>    
    </p>
  
    
    </div>

    

    <div data-module-reveal="stagger-children" data-reveal-delay="">
        
  
          <p>
            <h3>        Our goal is to learn from participants’ experiences and better understand both the potential and the limitations of unconditional cash transfers.&nbsp;</h3>    
    </p>
  
        <div>
      

  <p>The comprehensiveness of this study allowed us to gather data on unconditional cash to more rigorously measure and understand its impact.&nbsp;</p>
    </div>
  
    </div>
</div>
        

    




<div data-module-spend-slider="">
      <div>
    
          <p>
      How would you spend an extra $1,000 a&nbsp;month?
    </p>
  
    
    </div>

    <div>
      

  <p>Slide the interactive bars to put $1,000 in context. This list is not exhaustive and many people have financial responsibilities specific to their needs outside of the highlighted categories.</p>
    </div>
  </div>
        

    




<div data-module-scroll-nav="">

              
        <div id="health" data-module-featured-finding-expand="" data-scroll-nav="group" data-scroll-nav-group-slug="health">
                            <div>
                                <p>Health</p>

                                <h2>Health</h2>

                                <div>
                                    <p>Cash increases some utilization; no measurable effects on physical health.</p>

                                    

  <p>The cash transfers increased recipients’ use of hospital and emergency department care and some types of office-based medical care—particularly dental and specialist care. Although we find no significant effects on measures of physical health, the increased utilization of medical care may lead to long-term health benefits.&nbsp;</p>

                                                        
                                  </div>
              </div>

                            <div>
                                <h3>Participant Perspectives</h3>

                                <div data-module-reveal="">
      <p><img alt="" width="200" height="200" srcset="https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_StethoscopeRoad.png?w=400&amp;h=400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919438&amp;s=e47f68a767704d79d5ae8d14cec91d3d 400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_StethoscopeRoad.png?w=800&amp;h=800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919438&amp;s=22dd2cb926f8eb38cc39046f96499cd1 800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_StethoscopeRoad.png?w=1200&amp;h=1200&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919438&amp;s=f6a584bdc389b8716acf963cbd2d70ee 1200w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_StethoscopeRoad.png?w=1600&amp;h=1600&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919438&amp;s=f7cc4995e25f8aadb2ca973fefa23854 1600w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_StethoscopeRoad.png?w=2000&amp;h=2000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919438&amp;s=92b949261842eeecb5cedc863741e85b 2000w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_StethoscopeRoad.png?w=2400&amp;h=2400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919438&amp;s=20dfbbb61f3ec1be82e26f626d8b4b06 2400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_StethoscopeRoad.png?w=2800&amp;h=2800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919438&amp;s=0220a9eff89c3c6da5f675d3bebcb78e 2800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_StethoscopeRoad.png?w=3000&amp;h=3000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919438&amp;s=c59d247e6becb9de8a570c1d7d062fb3 3000w" decoding="async" loading="lazy" sizes="(min-width: 1440px) 33vw,
      (min-width: 768px) 50vw,
      100vw">
    
      </p>
    </div>

                                <blockquote>
                  <p><span>“</span>I got myself braces...I feel like people underestimate the importance of having nice teeth because it affects more than just your own sense of self, it affects how people look at you.”</p>
                  
                </blockquote>
              </div>

                            <div>
  
    




<div>
              <p>For recipients, the cash increased the probability of receiving any dental care in the past year by over 10% compared to the average control participant.</p>
    
              
      </div>

  
    




<div>
    <div>
                                <p>Increase health spending</p>
          
                    <p>$20</p>
        </div>

    <p>Recipients significantly increased their spending on medical care by roughly $20 per month, not including health insurance premiums.</p>
</div>

  
    




<div>
    <div>
                                <p>Decrease in problematic drinking</p>
          
                    <p>20%</p>
        </div>

    <div>
              <p>Recipients reported a 20% decrease in drinking that interfered with responsibilities relative to the average control participant.</p>
    
              
      </div>
</div>

  </div>

                            
                                            
              
            </div>

              
        <div id="head-space-to-plan" data-module-featured-finding-expand="" data-scroll-nav="group" data-scroll-nav-group-slug="head-space-to-plan">
                            <div>
                                <p>Spending</p>

                                <h2>Spending</h2>

                                <div>
                                    <p>Recipients increase spending on basic needs and support to others.</p>

                                    

  <p>Cash is flexible and allows people to spend on their unique needs. On average, recipients spent the money on basic needs—food, transportation and rent—and on financial support to others.</p>

                                                    </div>
              </div>

                            <div>
                                <h3>Participant Perspectives</h3>

                                <div data-module-reveal="">
      <p><img alt="" width="200" height="200" srcset="https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_Transportation.png?w=400&amp;h=400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819874&amp;s=a6f6464112fc2316175fd8d89bc90541 400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_Transportation.png?w=800&amp;h=800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819874&amp;s=242b3fdf400c2c4559878374a2632ef7 800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_Transportation.png?w=1200&amp;h=1200&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819874&amp;s=82927b26e775e100f983ded54495ba39 1200w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_Transportation.png?w=1600&amp;h=1600&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819874&amp;s=6f90150f6f4f6ba3ade1981153a6e2f8 1600w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_Transportation.png?w=2000&amp;h=2000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819874&amp;s=849b3e6e61c95680d192058a74365dcc 2000w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_Transportation.png?w=2400&amp;h=2400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819874&amp;s=e97471d1e06b2847fbee120e98a5cfdc 2400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_Transportation.png?w=2800&amp;h=2800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819874&amp;s=87bb433f00208c1ab207ad12c12b3797 2800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_Transportation.png?w=3000&amp;h=3000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819874&amp;s=311d1a9eba81c094eea67ffd40f78d2f 3000w" decoding="async" loading="lazy" sizes="(min-width: 1440px) 33vw,
      (min-width: 768px) 50vw,
      100vw">
    
      </p>
    </div>

                                <blockquote>
                  <p><span>“</span>It helped me pay a portion of my car note. It helped me pay a portion of my rent. Helped me pay a portion of my life.”</p>
                  
                </blockquote>
              </div>

                            <div>
  
    




<div>
    <div>
                                <p>Increased monthly spending</p>
          
                    <p>$310</p>
        </div>

    <p>Recipients increased their overall spending by $310 per month, with increases across almost every detailed spending category.</p>
</div>

  
    




<div>
    

    <p>Recipients increased spending on basic needs. The largest effect of the cash transfers, in dollar amount, was on increased spending on food, rent, and transportation.</p>
</div>

  
    




<div>
    

    <p>Relative to control participants, we find the greatest increase on support to others. Spending on support increased by $22 per month—26% of the average for control participants.</p>
</div>

  </div>

                                            <div>
      <h2>The Effect of Cash Transfers on Monthly Spending</h2>
      
      
      
      
      <p>* Denotes significance at 0.10, ** denotes significance at 0.05, *** denotes significance at 0.01.</p>
    </div>
              
                                            
              
            </div>

              
        <div id="employment" data-module-featured-finding-expand="" data-scroll-nav="group" data-scroll-nav-group-slug="employment">
                            <div>
                                <p>Employment</p>

                                <h2>Employment</h2>

                                <div>
                                    <p>Cash provides flexibility to make employment decisions that align with individuals' circumstances, goals, and values.</p>

                                    

  <p>Employment rates and work hours rose substantially over the course of the study for both recipients and control participants, but the average increases for control participants were larger. Though the cash transfers led to modest decreases in employment, work hours, and income overall, the employment effects varied across participants.</p>

                                                        
                                  </div>
              </div>

                            <div>
                                <h3>Participant Perspectives</h3>

                                <div data-module-reveal="">
      <p><img alt="" width="200" height="200" srcset="https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_BuildingCoins.png?w=400&amp;h=400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919565&amp;s=875d07e6a86498888d6c87762206689b 400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_BuildingCoins.png?w=800&amp;h=800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919565&amp;s=6ec80e67c771d4b11ed7342398ff337e 800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_BuildingCoins.png?w=1200&amp;h=1200&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919565&amp;s=c9a507f822d30124983543619faa6102 1200w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_BuildingCoins.png?w=1600&amp;h=1600&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919565&amp;s=13d3ddd2370c022446cc3a22a1c3688b 1600w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_BuildingCoins.png?w=2000&amp;h=2000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919565&amp;s=0649d31f64d592aaadc073d6cee6c236 2000w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_BuildingCoins.png?w=2400&amp;h=2400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919565&amp;s=c628f79521f4140c6809f0551eccafa8 2400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_BuildingCoins.png?w=2800&amp;h=2800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919565&amp;s=8e9b58c27793a2163c0b256d87eafcf9 2800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_BuildingCoins.png?w=3000&amp;h=3000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919565&amp;s=5708eb033cba20fd800b01e09b6208a7 3000w" decoding="async" loading="lazy" sizes="(min-width: 1440px) 33vw,
      (min-width: 768px) 50vw,
      100vw">
    
      </p>
    </div>

                                <blockquote>
                  <p><span>“</span>Because of that money and being able to build up my savings, I’m in a position for once to be picky…I don't have to take a crappy job just because I need income right now. I have the opportunity to hold out and try and find the right fit.”</p>
                  
                </blockquote>
              </div>

                            <div>
  
    




<div>
    <div>
                                <p>Fewer work hours per week</p>
          
                    <p>1.3 hours</p>
        </div>

    <div>
              <p>On average, recipients worked 1.3 fewer hours per week and were 2 percentage points less likely to be employed. The difference in the number of months employed is equivalent to working roughly 8 fewer days per year.</p>
    
              
      </div>
</div>

  
    




<div>
    

    <p>Recipients were more 10% more likely to be actively searching for a job and 9% more likely to have applied for a job relative to control participants, though they applied to fewer jobs. Recipients were more likely to select interesting or meaningful work as an essential condition for any job.</p>
</div>

  
    




<div>
    <div>
                                <p>Decrease in household income</p>
          
                    <p>5%</p>
        </div>

    <div>
              <p>Not including the transfer, the cash led to a $2,500- $4,100 decrease in total household income—an amount equivalent to roughly 5% of control participants' average household income. Including the transfer amounts, average household income was roughly $6,100 higher for recipients.</p>
    
              
      </div>
</div>

  </div>

                            
                                            
              
            </div>

              
        <div id="lorem-ipsum-dolor-sit" data-module-featured-finding-expand="" data-scroll-nav="group" data-scroll-nav-group-slug="lorem-ipsum-dolor-sit">
                            <div>
                                <p>Agency</p>

                                <h2>Agency</h2>

                                <div>
                                    <p>Cash increases agency to think about, plan, and pursue goals.</p>

                                    

  <p>The cash had a positive and significant effect on budgeting and planning for the future, desire to pursue further education, and entrepreneurial interest. Recipients set goals that aligned with their values and desires and many took steps toward achieving them.&nbsp;</p>

                                                    </div>
              </div>

                            <div>
                                <h3>Participant Perspectives</h3>

                                <div data-module-reveal="">
      <p><img alt="" width="200" height="200" srcset="https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_ArrowKeyNotebook.png?w=400&amp;h=400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919678&amp;s=9cbb19746a3db91dd4d4dc475ed7857d 400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_ArrowKeyNotebook.png?w=800&amp;h=800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919678&amp;s=8e8037704cbdd0f8aeff30cf6b1df35d 800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_ArrowKeyNotebook.png?w=1200&amp;h=1200&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919678&amp;s=249a9053b9071a3cdf22fab24bceca80 1200w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_ArrowKeyNotebook.png?w=1600&amp;h=1600&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919678&amp;s=e934e0143bd928c3c945bf2557834478 1600w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_ArrowKeyNotebook.png?w=2000&amp;h=2000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919678&amp;s=840ee63f3a6a0ad66d4fcd818226d18e 2000w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_ArrowKeyNotebook.png?w=2400&amp;h=2400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919678&amp;s=b8485cd188121809f05a1b4129f053e1 2400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_ArrowKeyNotebook.png?w=2800&amp;h=2800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919678&amp;s=6ce336faa5634845a84fe9b73a6ba167 2800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_ArrowKeyNotebook.png?w=3000&amp;h=3000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1720919678&amp;s=b41e11a26cc395762a6fd311efda4d6b 3000w" decoding="async" loading="lazy" sizes="(min-width: 1440px) 33vw,
      (min-width: 768px) 50vw,
      100vw">
    
      </p>
    </div>

                                <blockquote>
                  <p><span>“</span>[The program] was more about independence than anything. The empowerment of being able to not say ‘Uh mom, I need you to help me with my phone bill’…it was just not having to ask for help.”</p>
                  
                </blockquote>
              </div>

                            <div>
  
    




<div>
              <p>Compared to control participants, recipients were 14% more likely to report having pursued education or job training during the final year of the program.</p>
    
              
      </div>

  
    




<div>
              <p>On average, recipients were 5% more likely to have a budget than control participants.</p>
    
              
      </div>

  
    




<div>
              <p>In year three, Black recipients were 26% more likely to report ever starting or helping to start a business compared to Black control participants.</p>
    
              
      </div>

  </div>

                            
                                            
              
            </div>

              
        <div id="sed-do-eiusmod" data-module-featured-finding-expand="" data-scroll-nav="group" data-scroll-nav-group-slug="sed-do-eiusmod">
                            <div>
                                <p>Moving</p>

                                <h2>Moving</h2>

                                <div>
                                    <p>Cash increases the possibility to move.</p>

                                    

  <p>Recipients were more likely than control participants to move housing units, move neighborhoods, and pay for housing. Recipients reported greater interest in moving and took actions to search for new housing, especially in the final year of the transfers.&nbsp;</p>

                                                    </div>
              </div>

                            <div>
                                <h3>Participant Perspectives</h3>

                                <div data-module-reveal="">
      <p><img alt="" width="200" height="200" srcset="https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_MovingTruck.png?w=400&amp;h=400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819860&amp;s=516712a079b9265c6b853b762fe31efc 400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_MovingTruck.png?w=800&amp;h=800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819860&amp;s=94e406fc560851a98eccc24a2c3fec25 800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_MovingTruck.png?w=1200&amp;h=1200&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819860&amp;s=8c3487100b8cdcdb0f6d2297a5104316 1200w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_MovingTruck.png?w=1600&amp;h=1600&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819860&amp;s=fc61738fa4748b212af62cc2fb762658 1600w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_MovingTruck.png?w=2000&amp;h=2000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819860&amp;s=369411bde8c3ed6a79ab9d9ca9284c11 2000w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_MovingTruck.png?w=2400&amp;h=2400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819860&amp;s=787b8d638337e503a399f35f7cc68490 2400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_MovingTruck.png?w=2800&amp;h=2800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819860&amp;s=bee2bae90327ea94cc1ef636e054777f 2800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_MovingTruck.png?w=3000&amp;h=3000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819860&amp;s=dddeb745c119de934f2e88449769ddc3 3000w" decoding="async" loading="lazy" sizes="(min-width: 1440px) 33vw,
      (min-width: 768px) 50vw,
      100vw">
    
      </p>
    </div>

                                <blockquote>
                  <p><span>“</span>It allowed us to move. If we hadn't had the money between my income and my husband's, we would not have been accepted where we are now. And we wouldn't have been as comfortable moving, like being able to take time off to move or worry about expenses.”</p>
                  
                </blockquote>
              </div>

                            <div>
  
    




<div>
              <p>The cash increased recipients’ ability to move neighborhoods by 11% compared to the average control participant.</p>
    
              
      </div>

  
    




<div>
              <p>The number of active housing search actions rose by 23% relative to the average control participant.</p>
    
              
      </div>

  
    




<div>
    

    <p>Compared to the average control participant, recipients were 5% more likely to pay for housing, as opposed to staying with family or friends or another living arrangement that does not involve regular payments.</p>
</div>

  </div>

                                            
              
                                            
              
            </div>

      
    </div>
        

    




<div data-slider-featured-findings="track" aria-label="More findings from the OpenResearch team" data-module-reveal="fade" data-module-slider-featured-findings="11188" data-slider-featured-findings-options="{}" data-reveal-delay="3">
          <a href="https://www.openresearchlab.org/findings/dream-bigger-do-more-consider-more" tabindex="-1">
        

<div data-module-reveal="">
      <p><img alt="" width="200" height="200" srcset="https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_GraduationNotebook.png?w=400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819851&amp;s=831a58c0f8626f84f4ba6b4637da92a2 400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_GraduationNotebook.png?w=800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819851&amp;s=7ae81351afe10a7177d42cc409a0402a 800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_GraduationNotebook.png?w=1200&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819851&amp;s=90d9f2d36910b1d01b45fabada342deb 1200w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_GraduationNotebook.png?w=1600&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819851&amp;s=a617026231ccba7c31557cd04942384d 1600w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_GraduationNotebook.png?w=2000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819851&amp;s=c05402e767fe9727d75bc8b580db2be2 2000w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_GraduationNotebook.png?w=2400&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819851&amp;s=ce46732b315f5e0161d3d043294fb0e9 2400w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_GraduationNotebook.png?w=2800&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819851&amp;s=854cacc6c2421ffa55f79aa1fb7dcbea 2800w, https://openresearch-web.transforms.svdcdn.com/production/assets/images/collages/OR_GraduationNotebook.png?w=3000&amp;q=80&amp;auto=format&amp;fit=crop&amp;crop=focalpoint&amp;fp-x=0.5&amp;fp-y=0.5&amp;dm=1718819851&amp;s=41cdeb4c05296aa6796f3b29950bd602 3000w" decoding="async" loading="lazy">
    
      </p>
    </div>
      </a>
      </div>
        

    




<div>
    <div>
  <h2>Timeline</h2>

      
    



<div data-module-accordion="timeline-mobile-accordion-group-open-research">
    <h4>
    
  </h4>

    <div data-accordion="content" id="timeline-mobile-accordion-group-open-research-content" role="region" aria-labelledby="timeline-mobile-accordion-group-open-research">
                
                    <div>
                        <p>
              Jan 2016            </p>

                        
                        <p>Study initially proposed</p>

                        
          </div>

        
                    <div>
                        <p>
              May 2016            </p>

                        
                        <p>Elizabeth Rhodes joins OpenResearch</p>

                        
          </div>

        
                    <div>
                        <p>
              Sep 2016 – Sep 2018            </p>

                        
                        <p>Feasibility Studies</p>

                        
          </div>

        
                    <div>
                        <p>
              Aug 2019 – Mar 2020            </p>

                        
                        <p>In-person enrollment and survey</p>

                        
          </div>

        
                    <div>
                        <p>
              Nov 2019            </p>

                        
                        <p>Monthly surveys and app activities begin.</p>

                        
          </div>

        
                    <div>
                        <p>
              Mar 2020            </p>

                                      <p>
                COVID-19 Pandemic
              </p>
            
                        <p>Enrollment efforts pause.</p>

                        
          </div>

        
                    <div>
                        <p>
              Apr 2020 – Oct 2020            </p>

                        
                        <p>Telephone enrollment and survey</p>

                        
          </div>

        
                    <div>
                        <p>
              Jul 2020 – Dec 2020            </p>

                        
                        <p>First round of qualitative interviews</p>

                        
          </div>

        
                    

        
                    <div>
                        <p>
              Nov 2020            </p>

                        
                        <p>Three year unconditional cash transfer program begins.</p>

                        
          </div>

        
                    <div>
                        <p>
              May 2021 – Jul 2021            </p>

                        
                        <p>Second round of qualitative interviews</p>

                        
          </div>

        
                    <div>
                        <p>
              Nov 2021 – Feb 2022            </p>

                        
                        <p>Third round of qualitative interviews</p>

                        
          </div>

        
                    <div>
                        <p>
              Apr 2022 – Jul 2022            </p>

                        
                        <p>Enumerated midline survey</p>

                        
          </div>

        
                    <div>
                        <p>
              Sep 2022 – Feb 2023            </p>

                        
                        <p>Fourth round of qualitative interviews</p>

                        
          </div>

        
                    <div>
                        <p>
              Apr 2023 – Jul 2023            </p>

                        
                        <p>Enumerated endline survey</p>

                        
          </div>

        
                    <div>
                        <p>
              Aug 2023 – Jan 2024            </p>

                        
                        <p>Fifth round of qualitative interviews</p>

                        
          </div>

        
                    <div>
                        <p>
              Oct 2023            </p>

                        
                        <p>Monthly unconditional cash transfers end.</p>

                        
          </div>

        
                    <div>
                        <p>
              Oct 2023 – Feb 2024            </p>

                        
                        <p>Collection of health measures</p>

                        
          </div>

        
                    <div>
                        <p>
              Dec 2023            </p>

                        
                        <p>Monthly surveys end.</p>

                        
          </div>

        
                    <div>
                        <p>
              Jan 2024            </p>

                        
                        <p>Quarterly surveys begin</p>

                        
          </div>

        
                    <div>
                        <p>
              Aug 2024 – Dec 2024            </p>

                        
                        <p>Sixth round of qualitative interviews</p>

                        
          </div>

                    </div>
</div>

      
    



<div data-module-accordion="timeline-mobile-accordion-group-policy-trends">
    <h4>
    
  </h4>

    <div data-accordion="content" id="timeline-mobile-accordion-group-policy-trends-content" role="region" aria-labelledby="timeline-mobile-accordion-group-policy-trends">
                
                    <div>
                        <p>
              Mar 2020            </p>

                        
                        <p>US Government passes CARES Act and provides first round of stimulus checks.</p>

                                      
            
          </div>

        
                    <div>
                        <p>
              Sep 2020            </p>

                        
                        <p>CDC places a moratorium on mortgage foreclosure and tenant evictions.</p>

                        
          </div>

        
                    <div>
                        <p>
              Dec 2020            </p>

                        
                        <p>US Government passes second round of stimulus checks and COVID-19 relief bills.</p>

                                      
            
          </div>

        
                    <div>
                        <p>
              Mar 2021            </p>

                        
                        <p>COVID-19 vaccines available to general public in Texas</p>

                        
          </div>

        
                    <div>
                        <p>
              Mar 2021            </p>

                        
                        <p>US Government passes the American Rescue Plan Act.</p>

                        
          </div>

        
                    <div>
                        <p>
              Apr 2021            </p>

                        
                        <p>COVID-19 vaccines available to general public in Illinois</p>

                        
          </div>

        
                    <div>
                        <p>
              Apr 2021            </p>

                        
                        <p>Additional SNAP benefits go into effect.</p>

                        
          </div>

        
                    <div>
                        <p>
              May 2021            </p>

                        
                        <p>Paycheck Protection Program (PPP) ends.</p>

                        
          </div>

        
                    <div>
                        <p>
              May 2021            </p>

                        
                        <p>Texas moratorium on evictions ends.</p>

                        
          </div>

        
                    <div>
                        <p>
              Sep 2021            </p>

                        
                        <p>Enhanced unemployment benefits end.</p>

                        
          </div>

        
                    <div>
                        <p>
              Dec 2021            </p>

                        
                        <p>Illinois moratorium on evictions ends.</p>

                        
          </div>

        
                    <div>
                        <p>
              Dec 2021            </p>

                        
                        <p>Expanded child tax credit ends.</p>

                        
          </div>

        
                    <div>
                        <p>
              Apr 2023            </p>

                        
                        <p>States are now allowed to terminate Medicaid coverage, a process that was previously halted by the CARES Act.</p>

                        
          </div>

        
                    <div>
                        <p>
              Jul 2023            </p>

                        
                        <p>Rent relief program ends in Texas.</p>

                        
          </div>

        
                    <div>
                        <p>
              Sep 2023            </p>

                        
                        <p>Several remaining American Rescue Plan Act Provisions expire.</p>

                        
          </div>

                    </div>
</div>

      
    



<div data-module-accordion="timeline-mobile-accordion-group-economic-trends">
    <h4>
    
  </h4>

    <div data-accordion="content" id="timeline-mobile-accordion-group-economic-trends-content" role="region" aria-labelledby="timeline-mobile-accordion-group-economic-trends">
                
                    <div>
                        <p>
              Apr 2020            </p>

                        
                        <p>Unemployment rate reaches 14.8%, more than four times higher than it was in February 2020.</p>

                        
          </div>

        
                    <div>
                        <p>
              Jan 2021            </p>

                        
                        <p>Unemployment rate is 6.4% at the start of 2021.</p>

                        
          </div>

        
                    <div>
                        <p>
              Apr 2021            </p>

                        
                        <p>First significant spike in inflation is observed, from 2.6% in March to 4.2% in April.</p>

                        
          </div>

        
                    <div>
                        <p>
              Dec 2021            </p>

                        
                        <p>By the end of 2021, inflation has tripled since the start of the year, reaching 7.5%</p>

                        
          </div>

        
                    <div>
                        <p>
              Jan 2022            </p>

                        
                        <p>Due to soaring inflation, mortgage and interest rates begin their first of many increases.</p>

                        
          </div>

        
                    <div>
                        <p>
              Jan 2022            </p>

                        
                        <p>Unemployment rate falls below 5% by January 2022.</p>

                        
          </div>

        
                    <div>
                        <p>
              Jul 2022            </p>

                        
                        <p>Inflation reached 9.1% in June 2022, marking the highest rate in over forty years.</p>

                        
          </div>

        
                    <div>
                        <p>
              Jan 2023            </p>

                        
                        <p>By the end of the year, interest rates have increased four-fold, and mortgage rates have doubled.</p>

                        
          </div>

                    </div>
</div>

  </div>

    <div data-timeline="wrapper" data-module-timeline="timeline-unconditional-cash-study">

                    

                                                                                  
                        
            
                                                                                  
                        
            <div id="elizabeth-rhodes-joins-open-research" data-timeline="item">
                            <div data-connection-id="elizabeth-rhodes-joins-open-research" data-timeline="main">
                <p>Elizabeth Rhodes joins OpenResearch</p>
              </div>

                                          <p>
                                  May 2016
                              </p>

                            
                                        </div>
                                                                                  
                        
            
                                                                                  
                        
            
                                                                                  
                        
            <div id="in-person-enrollment-and-survey" data-timeline="item">
                            <div data-connection-id="in-person-enrollment-and-survey" data-timeline="main">
                <p>In-person enrollment and survey</p>
              </div>

                                          <p>
                                  Aug 2019
                              </p>

                            
                                            
                          </div>
                                                                                  
                        
            <div id="monthly-surveys-and-app-activities-begin" data-timeline="item">
                            <div data-connection-id="monthly-surveys-and-app-activities-begin" data-timeline="main">
                <p>Monthly surveys and app activities begin.</p>
              </div>

                                          <p>
                                  Nov 2019
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="enrollment-efforts-pause" data-timeline="item">
                            <div data-connection-id="enrollment-efforts-pause" data-timeline="main">
                <p>Enrollment efforts pause.</p>
              </div>

                                          <p>
                                  Mar 2020
                              </p>

                                            <p>
                  COVID-19 Pandemic
                </p>
              
                                        </div>
                                                                                  
                        
            <div id="us-government-passes-cares-act-and-provides-first-round-of-stimulus-checks" data-timeline="item">
                            <div data-connection-id="us-government-passes-cares-act-and-provides-first-round-of-stimulus-checks" data-timeline="main">
                                    <p>US Government passes CARES Act and provides first round of stimulus checks.</p>

                                                                            
  
  
                        
            
      



  


                                  </div>

                                          <p>
                                  Mar 2020
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="in-person-enrollment-and-survey" data-timeline="item">
                            <div data-connection-id="in-person-enrollment-and-survey" data-timeline="main">
                <p>In-person enrollment and survey</p>
              </div>

                                          <p>
                                    Mar 2020
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="telephone-enrollment-and-survey" data-timeline="item">
                            <div data-connection-id="telephone-enrollment-and-survey" data-timeline="main">
                <p>Telephone enrollment and survey</p>
              </div>

                                          <p>
                                  Apr 2020
                              </p>

                            
                                            
                          </div>
                                                                                  
                        
            <div id="unemployment-rate-reaches-14-8-more-than-four-times-higher-than-it-was-in-february-2020" data-timeline="item">
                            <div data-connection-id="unemployment-rate-reaches-14-8-more-than-four-times-higher-than-it-was-in-february-2020" data-timeline="main">
                <p>Unemployment rate reaches 14.8%, more than four times higher than it was in February 2020.</p>
              </div>

                                          <p>
                                  Apr 2020
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="first-round-of-qualitative-interviews" data-timeline="item">
                            <div data-connection-id="first-round-of-qualitative-interviews" data-timeline="main">
                <p>First round of qualitative interviews</p>
              </div>

                                          <p>
                                  Jul 2020
                              </p>

                            
                                            
                          </div>
                                                                                  
                        
            <div id="cdc-places-a-moratorium-on-mortgage-foreclosure-and-tenant-evictions" data-timeline="item">
                            <div data-connection-id="cdc-places-a-moratorium-on-mortgage-foreclosure-and-tenant-evictions" data-timeline="main">
                <p>CDC places a moratorium on mortgage foreclosure and tenant evictions.</p>
              </div>

                                          <p>
                                  Sep 2020
                              </p>

                            
                                        </div>
                                                                                  
                        
            
                                                                                  
                        
            <div id="telephone-enrollment-and-survey" data-timeline="item">
                            <div data-connection-id="telephone-enrollment-and-survey" data-timeline="main">
                <p>Telephone enrollment and survey</p>
              </div>

                                          <p>
                                    Oct 2020
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="three-year-unconditional-cash-transfer-program-begins" data-timeline="item">
                            <div data-connection-id="three-year-unconditional-cash-transfer-program-begins" data-timeline="main">
                <p>Three year unconditional cash transfer program begins.</p>
              </div>

                                          <p>
                                  Nov 2020
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="us-government-passes-second-round-of-stimulus-checks-and-covid-19-relief-bills" data-timeline="item">
                            <div data-connection-id="us-government-passes-second-round-of-stimulus-checks-and-covid-19-relief-bills" data-timeline="main">
                                    <p>US Government passes second round of stimulus checks and COVID-19 relief bills.</p>

                                                                            
  
  
                        
            
      



  


                                  </div>

                                          <p>
                                  Dec 2020
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="first-round-of-qualitative-interviews" data-timeline="item">
                            <div data-connection-id="first-round-of-qualitative-interviews" data-timeline="main">
                <p>First round of qualitative interviews</p>
              </div>

                                          <p>
                                    Dec 2020
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="unemployment-rate-is-6-4-at-the-start-of-2021" data-timeline="item">
                            <div data-connection-id="unemployment-rate-is-6-4-at-the-start-of-2021" data-timeline="main">
                <p>Unemployment rate is 6.4% at the start of 2021.</p>
              </div>

                                          <p>
                                  Jan 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="covid-19-vaccines-available-to-general-public-in-texas" data-timeline="item">
                            <div data-connection-id="covid-19-vaccines-available-to-general-public-in-texas" data-timeline="main">
                <p>COVID-19 vaccines available to general public in Texas</p>
              </div>

                                          <p>
                                  Mar 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="us-government-passes-the-american-rescue-plan-act" data-timeline="item">
                            <div data-connection-id="us-government-passes-the-american-rescue-plan-act" data-timeline="main">
                <p>US Government passes the American Rescue Plan Act.</p>
              </div>

                                          <p>
                                  Mar 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="covid-19-vaccines-available-to-general-public-in-illinois" data-timeline="item">
                            <div data-connection-id="covid-19-vaccines-available-to-general-public-in-illinois" data-timeline="main">
                <p>COVID-19 vaccines available to general public in Illinois</p>
              </div>

                                          <p>
                                  Apr 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="additional-snap-benefits-go-into-effect" data-timeline="item">
                            <div data-connection-id="additional-snap-benefits-go-into-effect" data-timeline="main">
                <p>Additional SNAP benefits go into effect.</p>
              </div>

                                          <p>
                                  Apr 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="first-significant-spike-in-inflation-is-observed-from-2-6-in-march-to-4-2-in-april" data-timeline="item">
                            <div data-connection-id="first-significant-spike-in-inflation-is-observed-from-2-6-in-march-to-4-2-in-april" data-timeline="main">
                <p>First significant spike in inflation is observed, from 2.6% in March to 4.2% in April.</p>
              </div>

                                          <p>
                                  Apr 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="second-round-of-qualitative-interviews" data-timeline="item">
                            <div data-connection-id="second-round-of-qualitative-interviews" data-timeline="main">
                <p>Second round of qualitative interviews</p>
              </div>

                                          <p>
                                  May 2021
                              </p>

                            
                                            
                          </div>
                                                                                  
                        
            <div id="paycheck-protection-program-ppp-ends" data-timeline="item">
                            <div data-connection-id="paycheck-protection-program-ppp-ends" data-timeline="main">
                <p>Paycheck Protection Program (PPP) ends.</p>
              </div>

                                          <p>
                                  May 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="texas-moratorium-on-evictions-ends" data-timeline="item">
                            <div data-connection-id="texas-moratorium-on-evictions-ends" data-timeline="main">
                <p>Texas moratorium on evictions ends.</p>
              </div>

                                          <p>
                                  May 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="second-round-of-qualitative-interviews" data-timeline="item">
                            <div data-connection-id="second-round-of-qualitative-interviews" data-timeline="main">
                <p>Second round of qualitative interviews</p>
              </div>

                                          <p>
                                    Jul 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="enhanced-unemployment-benefits-end" data-timeline="item">
                            <div data-connection-id="enhanced-unemployment-benefits-end" data-timeline="main">
                <p>Enhanced unemployment benefits end.</p>
              </div>

                                          <p>
                                  Sep 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="third-round-of-qualitative-interviews" data-timeline="item">
                            <div data-connection-id="third-round-of-qualitative-interviews" data-timeline="main">
                <p>Third round of qualitative interviews</p>
              </div>

                                          <p>
                                  Nov 2021
                              </p>

                            
                                            
                          </div>
                                                                                  
                        
            <div id="illinois-moratorium-on-evictions-ends" data-timeline="item">
                            <div data-connection-id="illinois-moratorium-on-evictions-ends" data-timeline="main">
                <p>Illinois moratorium on evictions ends.</p>
              </div>

                                          <p>
                                  Dec 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="expanded-child-tax-credit-ends" data-timeline="item">
                            <div data-connection-id="expanded-child-tax-credit-ends" data-timeline="main">
                <p>Expanded child tax credit ends.</p>
              </div>

                                          <p>
                                  Dec 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="by-the-end-of-2021-inflation-has-tripled-since-the-start-of-the-year-reaching-7-5" data-timeline="item">
                            <div data-connection-id="by-the-end-of-2021-inflation-has-tripled-since-the-start-of-the-year-reaching-7-5" data-timeline="main">
                <p>By the end of 2021, inflation has tripled since the start of the year, reaching 7.5%</p>
              </div>

                                          <p>
                                  Dec 2021
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="unemployment-rate-falls-below-5-by-january-2022" data-timeline="item">
                            <div data-connection-id="unemployment-rate-falls-below-5-by-january-2022" data-timeline="main">
                <p>Unemployment rate falls below 5% by January 2022.</p>
              </div>

                                          <p>
                                  Jan 2022
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="due-to-soaring-inflation-mortgage-and-interest-rates-begin-their-first-of-many-increases" data-timeline="item">
                            <div data-connection-id="due-to-soaring-inflation-mortgage-and-interest-rates-begin-their-first-of-many-increases" data-timeline="main">
                <p>Due to soaring inflation, mortgage and interest rates begin their first of many increases.</p>
              </div>

                                          <p>
                                  Jan 2022
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="third-round-of-qualitative-interviews" data-timeline="item">
                            <div data-connection-id="third-round-of-qualitative-interviews" data-timeline="main">
                <p>Third round of qualitative interviews</p>
              </div>

                                          <p>
                                    Feb 2022
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="enumerated-midline-survey" data-timeline="item">
                            <div data-connection-id="enumerated-midline-survey" data-timeline="main">
                <p>Enumerated midline survey</p>
              </div>

                                          <p>
                                  Apr 2022
                              </p>

                            
                                            
                          </div>
                                                                                  
                        
            <div id="inflation-reached-9-1-in-june-2022-marking-the-highest-rate-in-over-forty-years" data-timeline="item">
                            <div data-connection-id="inflation-reached-9-1-in-june-2022-marking-the-highest-rate-in-over-forty-years" data-timeline="main">
                <p>Inflation reached 9.1% in June 2022, marking the highest rate in over forty years.</p>
              </div>

                                          <p>
                                  Jul 2022
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="enumerated-midline-survey" data-timeline="item">
                            <div data-connection-id="enumerated-midline-survey" data-timeline="main">
                <p>Enumerated midline survey</p>
              </div>

                                          <p>
                                    Jul 2022
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="fourth-round-of-qualitative-interviews" data-timeline="item">
                            <div data-connection-id="fourth-round-of-qualitative-interviews" data-timeline="main">
                <p>Fourth round of qualitative interviews</p>
              </div>

                                          <p>
                                  Sep 2022
                              </p>

                            
                                            
                          </div>
                                                                                  
                        
            <div id="by-the-end-of-the-year-interest-rates-have-increased-four-fold-and-mortgage-rates-have-doubled" data-timeline="item">
                            <div data-connection-id="by-the-end-of-the-year-interest-rates-have-increased-four-fold-and-mortgage-rates-have-doubled" data-timeline="main">
                <p>By the end of the year, interest rates have increased four-fold, and mortgage rates have doubled.</p>
              </div>

                                          <p>
                                  Jan 2023
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="fourth-round-of-qualitative-interviews" data-timeline="item">
                            <div data-connection-id="fourth-round-of-qualitative-interviews" data-timeline="main">
                <p>Fourth round of qualitative interviews</p>
              </div>

                                          <p>
                                    Feb 2023
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="enumerated-endline-survey" data-timeline="item">
                            <div data-connection-id="enumerated-endline-survey" data-timeline="main">
                <p>Enumerated endline survey</p>
              </div>

                                          <p>
                                  Apr 2023
                              </p>

                            
                                            
                          </div>
                                                                                  
                        
            <div id="states-are-now-allowed-to-terminate-medicaid-coverage-a-process-that-was-previously-halted-by-the-cares-act" data-timeline="item">
                            <div data-connection-id="states-are-now-allowed-to-terminate-medicaid-coverage-a-process-that-was-previously-halted-by-the-cares-act" data-timeline="main">
                <p>States are now allowed to terminate Medicaid coverage, a process that was previously halted by the CARES Act.</p>
              </div>

                                          <p>
                                  Apr 2023
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="rent-relief-program-ends-in-texas" data-timeline="item">
                            <div data-connection-id="rent-relief-program-ends-in-texas" data-timeline="main">
                <p>Rent relief program ends in Texas.</p>
              </div>

                                          <p>
                                  Jul 2023
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="enumerated-endline-survey" data-timeline="item">
                            <div data-connection-id="enumerated-endline-survey" data-timeline="main">
                <p>Enumerated endline survey</p>
              </div>

                                          <p>
                                    Jul 2023
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="fifth-round-of-qualitative-interviews" data-timeline="item">
                            <div data-connection-id="fifth-round-of-qualitative-interviews" data-timeline="main">
                <p>Fifth round of qualitative interviews</p>
              </div>

                                          <p>
                                  Aug 2023
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="several-remaining-american-rescue-plan-act-provisions-expire" data-timeline="item">
                            <div data-connection-id="several-remaining-american-rescue-plan-act-provisions-expire" data-timeline="main">
                <p>Several remaining American Rescue Plan Act Provisions expire.</p>
              </div>

                                          <p>
                                  Sep 2023
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="monthly-unconditional-cash-transfers-end" data-timeline="item">
                            <div data-connection-id="monthly-unconditional-cash-transfers-end" data-timeline="main">
                <p>Monthly unconditional cash transfers end.</p>
              </div>

                                          <p>
                                  Oct 2023
                              </p>

                            
                                        </div>
                                                                                  
                        
            <div id="collection-of-health-measures" data-timeline="item">
                            <div data-connection-id="collection-of-health-measures" data-timeline="main">
                <p>Collection of health measures</p>
              </div>

                                          <p>
                                  Oct 2023
                              </p>

                            
                                        </div>
          
        </div>
</div>
        

    





        

    




<div>
    
          <p>
            <h2>        <em>Cash is one important piece of the puzzle.</em> The impact may be limited without other resources like health care and child care.&nbsp;</h2>    
    </p>
  
    
    </div>
        

    




<div>
  
              



<div>
        
  
          <p>
            <h3>        The greatest impact on spending per month was on basic needs, specifically food, rent, and transportation.&nbsp;</h3>    
    </p>
  
    
    </div>              



<div>
        
  
          <p>
            <h3>        Cash had an impact on planning to pursue further education, desire to plan for the future, and self-reported willingness to delay instant gratification for future benefit. We also find an effect on having a budget, planning for large expenses, and time spent on finances.&nbsp;</h3>    
    </p>
  
    
    </div>              



<div>
        
  
          <p>
            <h3>        Recipients were more likely to move housing units, move neighborhoods, and pay for housing. Recipients reported greater interest in moving and took actions to search for new housing, especially in the final year of the transfers.&nbsp;</h3>    
    </p>
  
    
    </div>      
    </div>
        

  





  
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[No One Expects Young Men to Do Anything and They Respond by Doing Nothing (2022) (217 pts)]]></title>
            <link>https://www.robkhenderson.com/p/no-one-expects-young-men-to-do-anything</link>
            <guid>41032918</guid>
            <pubDate>Mon, 22 Jul 2024 10:43:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.robkhenderson.com/p/no-one-expects-young-men-to-do-anything">https://www.robkhenderson.com/p/no-one-expects-young-men-to-do-anything</a>, See on <a href="https://news.ycombinator.com/item?id=41032918">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35680331-1e89-4676-8d9f-43f5ad7fab64_2121x1414.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35680331-1e89-4676-8d9f-43f5ad7fab64_2121x1414.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35680331-1e89-4676-8d9f-43f5ad7fab64_2121x1414.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35680331-1e89-4676-8d9f-43f5ad7fab64_2121x1414.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35680331-1e89-4676-8d9f-43f5ad7fab64_2121x1414.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35680331-1e89-4676-8d9f-43f5ad7fab64_2121x1414.jpeg" width="442" height="294.76785714285717" data-attrs="{&quot;src&quot;:&quot;https://bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com/public/images/35680331-1e89-4676-8d9f-43f5ad7fab64_2121x1414.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:971,&quot;width&quot;:1456,&quot;resizeWidth&quot;:442,&quot;bytes&quot;:1047158,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35680331-1e89-4676-8d9f-43f5ad7fab64_2121x1414.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35680331-1e89-4676-8d9f-43f5ad7fab64_2121x1414.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35680331-1e89-4676-8d9f-43f5ad7fab64_2121x1414.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35680331-1e89-4676-8d9f-43f5ad7fab64_2121x1414.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>I write and read about the culture and habits of elites because it is a way for me to understand this unfamiliar world I find myself in.</p><p><span>I read less about the culture of the poor and working-class because </span><a href="https://bariweiss.substack.com/p/americas-lost-boys-and-me?s=r" rel="">I experienced it firsthand</a><span>. I’m familiar.</span></p><p>But occasionally I do read about it.</p><p><span>One insightful book is </span><em>Promises I Can Keep: Why Poor Women Put Motherhood Before Marriage </em><span>by Kathryn Edin and Maria Kefalas.</span></p><p>In their book, Edin, a sociology professor at Princeton, and Kefalas, a sociology professor at St. Joseph’s University, explore why low-income women are disproportionately likely to be unmarried and uninvolved with the father of their children.</p><p>A common answer from the chattering class is money. The conventional view is that a lack of money leads to out-of-wedlock births.</p><p>But broken homes are a fairly recent phenomenon.</p><p>In 1960, across social classes, the vast majority of children were raised by both of their birth parents. By 2005, there was a massive divergence.</p><div data-component-name="Twitter2ToDOM" data-attrs="{&quot;url&quot;:&quot;https://twitter.com/robkhenderson/status/1178310819332984832?s=20&amp;t=D-jLF3TRgYFJsKtKBu5uxw&quot;,&quot;full_text&quot;:&quot;Children living with both biological parents\n\nAffluent families in 1960: 95%\nWorking class families in 1960: 95%\n\nAffluent families in 2005: 85%\nWorking class families in 2005: 30%\n\n<a class=\&quot;tweet-url\&quot; href=\&quot;https://www.goodreads.com/book/show/12031563-coming-apart\&quot;>goodreads.com/book/show/1203…</a> &quot;,&quot;username&quot;:&quot;robkhenderson&quot;,&quot;name&quot;:&quot;Rob Henderson&quot;,&quot;date&quot;:&quot;Sun Sep 29 14:09:25 +0000 2019&quot;,&quot;photos&quot;:[{&quot;img_url&quot;:&quot;https://pbs.substack.com/media/EFozcWpX0AArxwK.jpg&quot;,&quot;link_url&quot;:&quot;https://t.co/CN3BVv5oar&quot;,&quot;alt_text&quot;:null}],&quot;quoted_tweet&quot;:{},&quot;retweet_count&quot;:839,&quot;like_count&quot;:1877,&quot;expanded_url&quot;:{},&quot;video_url&quot;:null,&quot;belowTheFold&quot;:true}"><a href="https://twitter.com/robkhenderson/status/1178310819332984832?s=20&amp;t=D-jLF3TRgYFJsKtKBu5uxw" target="_blank" rel=""></a><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_600,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fpbs.substack.com%2Fmedia%2FEFozcWpX0AArxwK.jpg"><img src="https://substackcdn.com/image/fetch/w_600,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fpbs.substack.com%2Fmedia%2FEFozcWpX0AArxwK.jpg" alt="Image" loading="lazy"></picture></div><a href="https://twitter.com/robkhenderson/status/1178310819332984832?s=20&amp;t=D-jLF3TRgYFJsKtKBu5uxw" target="_blank" rel=""></a></div><p>What happened?</p><p><span>Today, one in six American men between the ages of 25 and 54 are unemployed or out of the workforce altogether: about 10 million men. This number has </span><a href="https://www.theatlantic.com/business/archive/2016/06/the-missing-men/488858/" rel="">more than doubled</a><span> since the 1970s. </span></p><p><span>Over the past half-century, the number of men per capita behind bars has</span><a href="https://bjs.ojp.gov/library/publications/correctional-populations-united-states-2013" rel=""> more than quadrupled</a><span>.</span></p><p>Among white American males in the bottom 30 percent of socioeconomic status, the number of prison inmates per capita has quintupled since 1975. For those in the top 20 percent of socioeconomic status, the rate has remained virtually unchanged.</p><p>From Edin and Kefalas:</p><blockquote><p><em>“Most social scientists who study poor families assume financial troubles are the cause of these breakups. After all, these young people grow up in a context of extreme disadvantage, at least by American standards, and they come of age with little education, few skills, and not many future prospects. Lack of money is certainly a contributing cause, as we will see, but rarely the only factor. It is usually the young father’s criminal behavior, the spells of incarceration that so often follow, a pattern of intimate violence, his chronic infidelity, and an inability to leave drugs and alcohol alone that cause relationships to falter and die.”</em></p></blockquote><p>Poor behavior from young males is an important and often overlooked reason why rates of fatherless homes have increased. &nbsp;</p><p>More from the book:</p><blockquote><p><em>“Money is seldom the primary reason mothers give to explain why they and their children’s fathers are no longer together. Although a lazy or spendthrift boyfriend is certainly an aggravation…the mother usually points to far more serious offenses as the prime forces that pull young families apart. It is the drug and alcohol abuse, the criminal behavior and subsequent incarceration, the repeated infidelity…”</em><span> </span></p></blockquote><p>The authors continue:</p><blockquote><p><em>“Conflicts over money do not usually erupt simply because the man cannot find a job or because he doesn’t earn as much as someone with better skills or more education. Money usually becomes an issue because he seems unwilling to keep at a job for any length of time, usually because of issues related to respect. Some of the jobs he can get don’t pay enough to give him the self-respect he feels he needs, and others require him to get along with unpleasant customers and coworkers, and to maintain a submissive attitude toward the boss.”</em></p></blockquote><p>It used to be high-status to hold a job and take care of your family. Not so much anymore.</p><p>Those who sit at or near the apex of the social ladder (who decide what behaviors are prestigious) have decided that family stability is unimportant.</p><p><span>In a fascinating </span><a href="https://publica.org.au/marriage-beliefs-un/" rel="">article</a><span>, Patrick Parkinson, a law professor at the University of Queensland, recounted his experiences at an international expert group gathered to discuss family policy at the UN headquarters in New York.</span></p><p>At the event, Parkinson stressed the importance of stability and two-parent families for children.</p><p>Many members of the group, comprised of academic elites, took exception.</p><p>But privately, some of them whispered agreement.</p><p>Parkinson writes:</p><blockquote><p><em>“I was surprised then, when one of the members of the Expert Group who was most insistent that two-parent families were just an ideal, said to me quietly, as we were packing up, that she agreed that family stability mattered. She described the strict and ordered regime in her own home (one with two biological, albeit unmarried parents). Her young children had routine, and clear boundaries. She restricted their television usage. It was a reward, not a staple of their entertainment diet. Yes, she agreed, stability does matter to children; but having made that enormous concession to my point of view, she suggested jokingly that I had better leave now. It was not a concession she would make openly, and nor could she have articulated it in the course of the meeting. In her public professional world, marriage is most unfashionable, and stability is not important if that is somehow to be contrasted with adults’ pursuit of their own happiness.”</em></p></blockquote><p>This highly educated and affluent person prioritized stability for her own children. But refused to publicly endorse this value so that less fortunate children could also benefit from family stability.</p><p>If you come from poverty and chaos, you are up against 3 enemies:</p><p>1. Dysfunction and deprivation</p><p>2. Yourself, as a result of what that environment does to you</p><p>3. The upper class, who wants to keep you mired in it</p><p><span>The people with the most money and education—the </span><a href="https://www.sciencedirect.com/science/article/pii/S2667319321000215" rel="">class</a><span> </span><a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0257335" rel="">most</a><span> </span><a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0153448" rel="">responsible</a><span> </span><a href="https://www.jstor.org/stable/2111757?casa_token=dNqygKhYWMMAAAAA%3A10drvu4qe71BYgE2sHgWC4Fj58YicQ1ReJZb5cfPicLvpI-GsyETe0CWEWV5zujxKQxwsbiEvXndu832PANGHCO7P3HdvfVcK4WLCfPJ-eFCmvJwFcA&amp;seq=1" rel="">for</a><span> </span><a href="https://isps.yale.edu/sites/default/files/publication/2018/04/qjps_2018_coppock_op-eds_100.00016112.pdf" rel="">shaping</a><span> politics and culture and customs—ensure that their children are raised in stable homes. </span></p><p><span>But </span><a href="https://robkhenderson.substack.com/p/thorstein-veblens-theory-of-the-leisure" rel="">actively undermine the norm</a><span> for everyone else. &nbsp;</span></p><p><span>Returning to </span><em>Promises to Keep</em><span>, Edin and Kefalas observe that the “middle-class” (referring to those who hold college degrees) determines norms around relationships:</span></p><blockquote><p><em>“Poor unmarried couples try hard to keep it together for the baby. Yet they borrow their notions of commitment from the broader culture, and most middle-class couples who are still in the dating phase, even those who cohabit, believe that as long as they are not married, it is acceptable for either partner to walk away at any time, and for virtually any reason. Of course, middle-class couples who date or cohabit only rarely have children together.”</em></p></blockquote><p>And they go on:</p><blockquote><p><em>“Unmarried parents borrow from the norms most close-at-hand. On the one hand, they adopt expectations of financial responsibility and, as we shall see, sexual fidelity, as couples in marriage do. But on the other, walking away from a nonmarital union is not viewed as a betrayal of a vow, and it is more or less okay to hold oneself open to a better option, should one come along.”</em></p></blockquote><p>The educated class decides cohabiting partnerships are just as valid and important as marriage. And they also believe it’s okay to walk away at a moment’s notice from a cohabiting relationship.</p><p>Poor and working-class people follow suit. To the detriment of themselves and their children.</p><p>They are more likely to have children out of wedlock. And then enter into a string of relationships with various partners. They spend time investing in new relationships, diverting attention away from their children.</p><p><span>Among new parents who are unmarried—usually poor or working-class—</span><a href="https://www.theatlantic.com/business/archive/2014/02/how-to-save-marriage-in-america/283732/" rel="">half</a><span> enter a new relationship by the time their children are five years old.</span></p><p>At a time when their children need attentive care, these parents are then engaged in the intense emotional work of building a new romantic relationship. This is an overlooked reason why kids in low-income families are more likely to experience neglect.</p><p><a href="https://robkhenderson.substack.com/p/status-symbols-and-the-struggle-for" rel="">Luxury beliefs</a><span> are ideas and opinions that confer status on the upper class while often inflicting costs on the lower classes.</span></p><p>Edin and Kefalas describe the behavior of young males in low-income neighborhoods:</p><blockquote><p><em>“Chanel, a white thirty-three-year-old with three children, ages fifteen, nine, and three, broke up with her youngest child’s father just after we met her for the first time. When we ask about him later, she says dismissively, ‘He’s not around no more. I got rid of him…He was only here to sleep—didn’t want to pay no bills, didn’t want to do nothing. When he was here all he did was fight and argue and drink. I had to get rid of [him].’ She purses her lips in disgust as she tells us such men are unworthy of the children they father.”</em></p></blockquote><p>More:</p><blockquote><p><em>“Young mothers regularly rail against young fathers who squander too much of their earnings on alcohol, marijuana, new stereo components, computer accessories, expensive footwear, or new clothing, while the needs of the family are, in their view, not adequately met. Amy, a white thirty-year-old mother of three, ages six, five, and three, had a boyfriend who worked steadily but insisted on spending on selfish pursuits. This is what eventually broke the young couple up. ‘He wouldn’t spend money for the kids’ food. I had to send my kids across the street to my mom’s to feed them and stuff. That’s what I got fed up with. I shouldn’t have to live like that…I said it’s time for him to support these kids instead of [me] being on [assistance], and he didn’t like it.’”</em></p></blockquote><p>Absent fathers and broken family units are major factors for many social ills. It’s obvious but no one wants to talk about it.</p><p>I am well aware of the behavior genetics research, twin studies, and so on indicating little effect of home environment on personality, propensity for crime, addiction, and so on. These studies are inapplicable for kids living in extreme dysfunction.</p><p><span>Behavior geneticists investigate the </span><em>relative</em><span> role of genetic and environmental variation </span><em>within the sampled population</em><span>.</span></p><p><span>Behavioral genetics studies report findings from </span><em>within the environmental variation in their samples</em><span>,</span><em> </em><span>not in all conceivable environments.</span></p><p>For example, there are many studies on identical twins separated at birth who are adopted by different families.</p><p>Researchers find little difference between these twins when they are adults. Their personalities, IQ, preferences, and so on are very similar.</p><p>But twins are usually adopted by intact middle-class families.</p><p>They are typically taken in by married parents with the means to jump through the hoops to qualify for adoption. Additionally, adoptive parents are the kind of people who would adopt, which introduces another layer of similarity.</p><p>I’ve yet to see any twin studies with one set of identical twins raised in extremely bad environments and another in good ones.</p><p><span>The intelligence researcher Russell T. Warne has </span><a href="https://www.cambridge.org/core/books/in-the-know/C52D8F22C0B337C520F8F6BC4182D492" rel="">written</a><span>:</span></p><blockquote><p><em>“A problem with heritability study samples is that they tend to consist of more middle and upper-class individuals than a representative sample would have…results of behavioral genetics studies will indicate genes are important—if a person already lives in an industrialized nation in a home where basic needs are met...it is not clear how well these results apply to individuals in highly unfavorable environments.”</em></p></blockquote><p><span>In a chapter titled </span><em>Genes and the Mind</em><span>, the psychologist David Lykken </span><a href="https://www.taylorfrancis.com/chapters/mono/10.4324/9780203763551-11/genes-mind-david-lykken" rel="">states</a><span>:</span></p><blockquote><p><em>“If twins were separated as infants and placed, one with a middle-class Minnesota family and the other with an 18-year-old unmarried mother living on AFDC in the South Bronx, the twins will surely differ 30 years later.”</em></p></blockquote><p>Yes, genes are responsible for human traits and behavior. But these traits are responsive to social norms and other environmental factors too.</p><p>Height is 90 percent heritable. But it is still malleable by the environment. Before Korea was divided, Northerners were taller than Southerners. Today, North Koreans are 6 inches shorter, on average, than South Koreans. Did their genes change? No. Their environments did.</p><p>Obesity is highly heritable (40-70%) but the percentage of Americans who are obese has tripled since 1982.</p><p>Access to food made people change their behavior by eating more.</p><p>Tobacco use is highly heritable (60-80%) but the percentage of Americans who smoke has dropped by half since 1982.</p><p>Strong norms against smoking made people change their behavior by smoking less.</p><p>Norms were loosened around being an absentee father. So more men took the option.</p><p>But nobody wants to admit it because it upsets people.</p><p>Instead, we retreat to discussions of poverty and economics because talking about family and parenting makes people feel weird and judgmental.</p><p>But young men will only do what’s expected of them.</p><p>And a lot did use to be expected. There were social norms to work hard, provide, take care of loved ones, and so on.</p><p>Today, these norms have largely dissolved.</p><p>Young men have responded accordingly.</p><p><span>In a fascinating 2012 paper titled </span><em>Sexual Economics, Culture, Men, and Modern Sexual Trends</em><span>, &nbsp;the psychologists Roy Baumeister and Kathleen Vohs wrote:</span></p><blockquote><p><em>“Although this may be considered an unflattering characterization…we have found no evidence to contradict the basic general principle that men will do whatever is required in order to obtain sex, and perhaps not a great deal more. (One of us characterized this in a previous work as, ‘If women would stop sleeping with jerks, men would stop being jerks.’) If in order to obtain sex men must become pillars of the community, or lie, or amass riches by fair means or foul, or be romantic or funny, then many men will do precisely that.”</em></p></blockquote><p>They are speaking specifically about sexual rewards. But this can be applied more broadly to social rewards in general.</p><p>People think that if a young guy comes from a disorderly or deprived environment, he should be held to low standards. This is misguided. He should be held to high standards. Otherwise, he will sink to the level of his environment.</p><p>In contrast, a young male from a stable and affluent background is less in need of external pressure. His options are abundant. And he has fewer harmful distractions.</p><p>You put a guy in chaotic and impoverished circumstances. And then you decide not to expect anything out of him. How can anyone possibly believe this will lead to anything other than disaster?</p><p>Of my five closest friends in high school, none went to college. Two went to prison.</p><p>Young men will only do what’s expected of them.</p><p>Which today is not much.</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Jellyfin: We're Good, Seriously (521 pts)]]></title>
            <link>https://forum.jellyfin.org/t-we-re-good-seriously</link>
            <guid>41031998</guid>
            <pubDate>Mon, 22 Jul 2024 08:26:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://forum.jellyfin.org/t-we-re-good-seriously">https://forum.jellyfin.org/t-we-re-good-seriously</a>, See on <a href="https://news.ycombinator.com/item?id=41031998">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post_25897">
<div>
<div>
	<center><strong><span><a href="https://forum.jellyfin.org/u-joshuaboniface"><span><strong>joshuaboniface</strong></span></a></span></strong> <!-- start: postbit_offline -->
<br><span title="Online">Offline</span>
<!-- end: postbit_offline --></center>
	<!-- start: postbit_avatar -->
<p><a href="https://forum.jellyfin.org/u-joshuaboniface"><img src="https://avatars.githubusercontent.com/u/4031396?v=4" alt="" width="85" height="85"></a></p>
<!-- end: postbit_avatar --><br>
	
	<div>
		<!-- start: postbit_author_user -->
<p><span>Posts:</span> <span>105</span><br>
<span>	Threads:</span> <span>23</span><br>
	<span>Joined:</span><span> 2023 Jun</span></p><!-- start: postbit_reputation -->
<p><span>Reputation:</span><span> <!-- start: postbit_reputation_formatted_link -->
<a href="https://forum.jellyfin.org/reputation.php?uid=13"><strong>12</strong></a>
<!-- end: postbit_reputation_formatted_link --></span></p><!-- end: postbit_reputation -->
<!-- end: postbit_author_user --><!-- start: postbit_country -->
<p><span>Country:</span><span><img src="https://forum.jellyfin.org/images/flags/canada.png" alt="Canada" title="Canada"></span></p><!-- end: postbit_country -->
	</div>
</div>
<div>
	<div>
		<!-- start: postbit_posturl -->

<!-- end: postbit_posturl -->
		
		<p><span>2024-06-06, 07:34 PM <span id="edited_by_25897"><!-- start: postbit_editedby -->
<span>(This post was last modified: 2024-06-06, 07:34 PM by <a href="https://forum.jellyfin.org/u-joshuaboniface">joshuaboniface</a>.<!-- editcount -->)</span>
<!-- end: postbit_editedby --></span></span>
		
	</p></div>
	<div id="pid_25897">
		<p><a href="https://opencollective.com/jellyfin/updates/were-good-seriously" target="_blank" rel="noopener">This message was posted to our OpenCollective here.</a> However, their page layout leaves a lot to be desired, with the post being very far down the page. So it is reproduced here for posterity.</p><hr>
<p>
We have quite a budget collected over the last 5 years, and while we're really happy to see so many in the Jellyfin community contribute to us, we want to ask you to stop!</p><p>

No, really. We don't actually need your money. At least, not here and now.</p><p>

We have over $24,000 in the bank, and with average monthly expenses of only ~$600, that's over 40 months (3.3 years) of runway! So, we have plenty of money for the near future.</p><p>

Thus, at this time, we want you to seriously consider donating to the authors of Clients you use, instead of (or in addition to) the main project. Client support is the hardest part of the Jellyfin ecosystem to keep going, and most of them are maintained by only a single person or very small team. With the API changes in 10.9.0 and the upcoming 10.10.0 releases, they're going to be very busy trying to keep up, and thus could really use your support in a way that the core project here doesn't right now.</p><p>

So, if there's a client you use every day and that you love, consider <a href="https://github.com/jellyfin/jellyfin-meta/blob/master/jellyfin-team.md" target="_blank" rel="noopener">finding it's author in our list of official clients</a>, and sending them a little something instead (or too).</p><p>

No, this doesn't violate our policy of "no paid development", because donations are just that - donations. We will still not honour bug bounties or similar, and still not use our collective finance here for paid development. So don't feel like you're doing something wrong, you're not!</p><p>

I'll leave this notice up until we drop to ~1 year (12 months) of remaining runway, at which time we can re-evaluate where we're at.</p><p>

Happy watching!
	</p></div>
	  
	
	
</div>
</div>
<!-- start: myreactions_container -->

<div>
  <!-- start: myreactions_reaction -->
<div title="Thumbs Up - BarbLives, dreamon, Linkestis, fredhags">
  <!-- start: myreactions_reaction_image -->
<p><img src="https://forum.jellyfin.org//images/smilies/apple_emoji/thumbs-up.png" title="Thumbs Up - BarbLives, dreamon, Linkestis, fredhags"></p><!-- end: myreactions_reaction_image --> <p><span>4</span>
</p></div>
<!-- end: myreactions_reaction --><!-- start: myreactions_reaction -->
<div title="Pizza - thornbill">
  <!-- start: myreactions_reaction_image -->
<p><img src="https://forum.jellyfin.org/images/smilies/apple_emoji/pizza.png" title="Pizza - thornbill"></p><!-- end: myreactions_reaction_image --> <p><span>1</span>
</p></div>
<!-- end: myreactions_reaction -->
  
  
</div>
<!-- end: myreactions_container -->

</div><div id="post_25902">
<div>
	<center><strong><span><a href="https://forum.jellyfin.org/u-sethbacon">SethBacon</a></span></strong> <!-- start: postbit_offline -->
<br><span title="Online">Offline</span>
<!-- end: postbit_offline --></center>
	<!-- start: postbit_avatar -->
<p><a href="https://forum.jellyfin.org/u-sethbacon"><img src="https://static.jellyfin.org/forum/uploads/avatars/avatar_3473.jpg?dateline=1719555458" alt="" width="85" height="85"></a></p>
<!-- end: postbit_avatar -->
	<p><span>
				Junior Member<br>
				<i></i><br>
				
			</span>
	</p>
	<div>
		<!-- start: postbit_author_user -->
<p><span>Posts:</span> <span>34</span><br>
<span>	Threads:</span> <span>2</span><br>
	<span>Joined:</span><span> 2023 Nov</span></p><!-- start: postbit_reputation -->
<p><span>Reputation:</span><span> <!-- start: postbit_reputation_formatted_link -->
<a href="https://forum.jellyfin.org/reputation.php?uid=3473"><strong>2</strong></a>
<!-- end: postbit_reputation_formatted_link --></span></p><!-- end: postbit_reputation -->
<!-- end: postbit_author_user --><!-- start: postbit_country -->
<p><span>Country:</span><span><img src="https://forum.jellyfin.org/images/flags/canada.png" alt="Canada" title="Canada"></span></p><!-- end: postbit_country -->
	</div>
</div>
<div id="pid_25902"><p>
		Seriously someone send neils some cash for asprin at least. Alternatives include OSPCA <a href="https://ontariospca.ca/how-to-help/how-your-donations-help-animals/" target="_blank" rel="noopener">https://ontariospca.ca/how-to-help/how-y...p-animals/</a> so our leader doesnt get mauled by rabid dogs on the street
	</p></div>
</div><div id="post_25972">
<div>
<div>
	<center><strong><span><a href="https://forum.jellyfin.org/u-kagetsu">kagetsu</a></span></strong> <!-- start: postbit_offline -->
<br><span title="Online">Offline</span>
<!-- end: postbit_offline --></center>
	<!-- start: postbit_avatar -->
<p><a href="https://forum.jellyfin.org/u-kagetsu"><img src="https://static.jellyfin.org/forum/images/default_avatar.png" alt="" width="85" height="85"></a></p>
<!-- end: postbit_avatar -->
	<p><span>
				Junior Member<br>
				<i></i><br>
				
			</span>
	</p>
	<div>
		<!-- start: postbit_author_user -->
<p><span>Posts:</span> <span>5</span><br>
<span>	Threads:</span> <span>1</span><br>
	<span>Joined:</span><span> 2023 Aug</span></p><!-- start: postbit_reputation -->
<p><span>Reputation:</span><span> <!-- start: postbit_reputation_formatted_link -->
<a href="https://forum.jellyfin.org/reputation.php?uid=1467"><strong>0</strong></a>
<!-- end: postbit_reputation_formatted_link --></span></p><!-- end: postbit_reputation -->
<!-- end: postbit_author_user --><!-- start: postbit_country -->
<p><span>Country:</span><span><img src="https://forum.jellyfin.org/images/flags/united_states.png" alt="United States" title="United States"></span></p><!-- end: postbit_country -->
	</div>
</div>
<div>
	
	<p>
		This posts shows the character in this community. I will be donating to two authors personally soon. Thank you all for being awesome.
	</p>
	  
	
	
</div>
</div>
<!-- start: myreactions_container -->

<div title="Red Heart - TheDreadPirate">
  <!-- start: myreactions_reaction_image -->
<p><img src="https://forum.jellyfin.org//images/smilies/apple_emoji/red-heart.png" title="Red Heart - TheDreadPirate"></p><!-- end: myreactions_reaction_image --> <p><span>1</span>
</p></div>
<!-- end: myreactions_container -->

</div><div id="post_26852">
<div>
	<center><strong><span><a href="https://forum.jellyfin.org/u-akirby83">akirby83</a></span></strong> <!-- start: postbit_offline -->
<br><span title="Online">Offline</span>
<!-- end: postbit_offline --></center>
	<!-- start: postbit_avatar -->
<p><a href="https://forum.jellyfin.org/u-akirby83"><img src="https://static.jellyfin.org/forum/images/default_avatar.png" alt="" width="85" height="85"></a></p>
<!-- end: postbit_avatar -->
	<p><span>
				Junior Member<br>
				<i></i><br>
				
			</span>
	</p>
	<div>
		<!-- start: postbit_author_user -->
<p><span>Posts:</span> <span>7</span><br>
<span>	Threads:</span> <span>1</span><br>
	<span>Joined:</span><span> 2023 Aug</span></p><!-- start: postbit_reputation -->
<p><span>Reputation:</span><span> <!-- start: postbit_reputation_formatted_link -->
<a href="https://forum.jellyfin.org/reputation.php?uid=1688"><strong>0</strong></a>
<!-- end: postbit_reputation_formatted_link --></span></p><!-- end: postbit_reputation -->
<!-- end: postbit_author_user --><!-- start: postbit_country -->
<p><span>Country:</span><span><img src="https://forum.jellyfin.org/images/flags/united_states.png" alt="United States" title="United States"></span></p><!-- end: postbit_country -->
	</div>
</div>
<div>
	
	<p>
		Thank you for the list.&nbsp; I very much want to donate to Jellyfin since it's awesome, but I've read in the past you don't really need the money.&nbsp; I'll see if I can find some individuals.
	</p>
	  
	
	
</div>
</div><div id="post_26869">
<div>
	<center><strong><span><a href="https://forum.jellyfin.org/u-host-in-the-shell">Host-in-the-Shell</a></span></strong> <!-- start: postbit_offline -->
<br><span title="Online">Offline</span>
<!-- end: postbit_offline --></center>
	<!-- start: postbit_avatar -->
<p><a href="https://forum.jellyfin.org/u-host-in-the-shell"><img src="https://static.jellyfin.org/forum/uploads/avatars/avatar_93.jpg?dateline=1701218614" alt="" width="85" height="85"></a></p>
<!-- end: postbit_avatar -->
	<p><span>
				Member<br>
				<i></i><i></i><br>
				
			</span>
	</p>
	<div>
		<!-- start: postbit_author_user -->
<p><span>Posts:</span> <span>67</span><br>
<span>	Threads:</span> <span>4</span><br>
	<span>Joined:</span><span> 2023 Jun</span></p><!-- start: postbit_reputation -->
<p><span>Reputation:</span><span> <!-- start: postbit_reputation_formatted_link -->
<a href="https://forum.jellyfin.org/reputation.php?uid=93"><strong>5</strong></a>
<!-- end: postbit_reputation_formatted_link --></span></p><!-- end: postbit_reputation -->
<!-- end: postbit_author_user -->
	</div>
</div>
<div>
	
	<p>
		I see the list of clients provided in this post does not have the people working on the WebOS version. Is it because it is too closely linked to Jellyfin Web? I just want to know so I could directly support those who work on it since I use the WebOS client as my main.
	</p>
	  
	<!-- start: postbit_signature -->
<p>
Server specs =&gt; OS: Debian 12 | GPU: Arc A380 | CPU: Ryzen 5 5600X | 64GB RAM | 38TB
</p>
<!-- end: postbit_signature -->
	
</div>
</div><div id="post_26881">
<div>
	<center><strong><span><a href="https://forum.jellyfin.org/u-thornbill"><span><strong>thornbill</strong></span></a></span></strong> <!-- start: postbit_offline -->
<br><span title="Online">Offline</span>
<!-- end: postbit_offline --></center>
	<!-- start: postbit_avatar -->
<p><a href="https://forum.jellyfin.org/u-thornbill"><img src="https://static.jellyfin.org/forum/uploads/avatars/avatar_25.jpg?dateline=1686688539" alt="" width="85" height="85"></a></p>
<!-- end: postbit_avatar -->
	<p><span>
				Core Team<br>
				<i></i><i></i><i></i><i></i><i></i><i></i><i></i><br>
				
			</span>
	</p>
	<div>
		<!-- start: postbit_author_user -->
<p><span>Posts:</span> <span>140</span><br>
<span>	Threads:</span> <span>5</span><br>
	<span>Joined:</span><span> 2023 Jun</span></p><!-- start: postbit_reputation -->
<p><span>Reputation:</span><span> <!-- start: postbit_reputation_formatted_link -->
<a href="https://forum.jellyfin.org/reputation.php?uid=25"><strong>7</strong></a>
<!-- end: postbit_reputation_formatted_link --></span></p><!-- end: postbit_reputation -->
<!-- end: postbit_author_user --><!-- start: postbit_country -->
<p><span>Country:</span><span><img src="https://forum.jellyfin.org/images/flags/united_states.png" alt="United States" title="United States"></span></p><!-- end: postbit_country -->
	</div>
</div>
<div>
	
	<div id="pid_26881">
		<blockquote><cite><span> (2024-06-13, 09:44 PM)</span>Host-in-the-Shell Wrote:  <a href="https://forum.jellyfin.org/t-we-re-good-seriously?pid=26869#pid26869"></a></cite>I see the list of clients provided in this post does not have the people working on the WebOS version. Is it because it is too closely linked to Jellyfin Web? I just want to know so I could directly support those who work on it since I use the WebOS client as my main.</blockquote><p>
It is mostly just web.&nbsp;<a href="https://github.com/dmitrylyzo" target="_blank" rel="noopener">Dmitry</a>&nbsp;does most of the work specifically to support webOS and Tizen but it doesn’t look like they have Sponsors set up currently.
	</p></div>
	  
	<!-- start: postbit_signature -->
<p><a href="https://github.com/sponsors/thornbill" target="_blank" rel="noopener"><img src="https://img.shields.io/github/sponsors/thornbill?style=flat&amp;logo=github" loading="lazy" alt="[Image: thornbill?style=flat&amp;logo=github]"></a>
</p>
<!-- end: postbit_signature -->
	
</div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: A Source Available billing system I've spent 18 months building (211 pts)]]></title>
            <link>https://billabear.com/</link>
            <guid>41031975</guid>
            <pubDate>Mon, 22 Jul 2024 08:22:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://billabear.com/">https://billabear.com/</a>, See on <a href="https://news.ycombinator.com/item?id=41031975">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__nuxt"><!--[--><!--]--><main><div><h2>Built to go to Scale from years of experience</h2><p>Be in complete control while being able to avoid vendor lock-in.</p><div><div><h3>Unlimited Brands</h3><p>One billing system that allows you to sell from multiple brands</p></div><div><h3>Manage Your Team</h3><p>With a powerful permission system you can be in control over your teams.</p></div><div><h3>Manage Your Tax</h3><p>Have your tax calculations based on the economic thresholds.</p></div><div><h3>Control Your Branding</h3><p>Be in complete control over PDFs and email templates.</p></div><div><h3>LTV Reports</h3><p>With advance reports you can see LTV for cohort groups</p></div><div><h3>Invoices Or Card</h3><p>Bill customers via invoices or by charging their cards</p></div><div><h3>Quotes</h3><p>Create quotes for potential customers that allows them to buy instantly.</p></div><div><h3>Workflows</h3><p>Ability to create workflows that trigger actions for billing events</p></div></div></div><div><div><p><img src="https://images.unsplash.com/photo-1521737852567-6949f3f9f2b5?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=2830&amp;q=80&amp;sat=-100" alt="People working on laptops"></p></div><div><h2><span>Self-Hostable</span></h2><p>Be in complete control and host BillaBear yourself!</p><p>With the ability to self-host, you'll be able to be in complete control. From being able to allow your data teams to have complete access to be able to create custom functionality by extending BillaBear. You'll be free and in control of your BillaBear setup.</p></div></div><div><h2><span>Ready to take control?</span><span>You can get started via a Free Trial or by booking a demo!</span></h2></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ryanair wins screen scraping case against Booking.com in US court ruling (245 pts)]]></title>
            <link>https://www.rte.ie/news/business/2024/0719/1460807-ryanair-wins-us-court-case-against-bookingcom/</link>
            <guid>41031960</guid>
            <pubDate>Mon, 22 Jul 2024 08:20:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.rte.ie/news/business/2024/0719/1460807-ryanair-wins-us-court-case-against-bookingcom/">https://www.rte.ie/news/business/2024/0719/1460807-ryanair-wins-us-court-case-against-bookingcom/</a>, See on <a href="https://news.ycombinator.com/item?id=41031960">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
<div data-equalizer-watch="" id="main" itemscope="" itemtype="http://schema.org/Article" data-equalizer="" data-equalize-on="large" data-equalize-by-row="">

<header>

</header>
<div>
<p><span>
Updated / Friday, 19 Jul 2024 <strong>14:09</strong>
</span>
</p>


</div>

<figure id="main-article-image">
<p><img itemprop="image" src="https://img.rasset.ie/0020172a-500.jpg" data-src="https://img.rasset.ie/0020172a-800.jpg" alt="Ryanair Group CEO Michael O'Leary">
</p>
<figcaption data-epic-field="thumbnail_caption">Ryanair Group CEO Michael O'Leary</figcaption>
</figure>

<section itemprop="articleBody" data-epic-field="content">
<p>A US court ruled that Booking.com violated the Computer Fraud and Abuse Act by accessing part of Ryanair's website without permission, court documents showed, a ruling the airline said would help end unauthorised screen scraping by booking sites.</p> <p>The airline, Europe's largest by passenger numbers, has in recent years launched a series of legal actions against third-party booking platforms that resell its tickets without permission.</p> <p>It says the companies, which use screen-scraping software to find and resell tickets, add additional charges and make it difficult for the airline to contact passengers.</p> <p>A jury in the District Court of Delaware unanimously found that Booking.com violated the Computer Fraud and Abuse act and that it had induced a third party to access parts of Ryanair's website without authorisation "with an intent to defraud," the verdict said.</p> <p>The court also rejected counterclaims by Booking.com that Ryanair had defamed the booking platform and that the airline was engaged in unfair competition.</p> <p>In a statement, Booking.com said it was disappointed with the decision, with which its disagrees.</p> <p>"We maintain that allowing customers to access and compare fares across the travel industry promotes consumer choice, and plan to appeal," it added.</p> <p>"We expect that this ruling will end the internet piracy and overcharging perpetrated on both airlines and other travel companies and consumers by the unlawful activity of OTA (online travel agent) Pirates," Ryanair chief executive Michael O'Leary said.</p> <p>He said he hoped the ruling would force consumer agencies across Britain and Europe to take action to outlaw illegal screen scraping and overcharging of consumers for flights and ancillary services.</p> <p>Ryanair has in recent months signed deals with a number of online travel agents for the authorised resale of the airline's tickets.</p> 
</section>

<div>
<h4>More stories on</h4>

</div>

</div>
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bash-Oneliners: A collection of terminal tricks for Linux (138 pts)]]></title>
            <link>https://github.com/onceupon/Bash-Oneliner</link>
            <guid>41031837</guid>
            <pubDate>Mon, 22 Jul 2024 07:52:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/onceupon/Bash-Oneliner">https://github.com/onceupon/Bash-Oneliner</a>, See on <a href="https://news.ycombinator.com/item?id=41031837">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Bash-Oneliner</h2><a id="user-content-bash-oneliner" aria-label="Permalink: Bash-Oneliner" href="#bash-oneliner"></a></p>
<p dir="auto">I am glad that you are here! I was working on bioinformatics a few years ago and was amazed by those single-word bash commands which are much faster than my dull scripts, time saved through learning command-line shortcuts and scripting. Recent years I am working on cloud computing and I keep recording those useful commands here. Not all of them is oneliner, but i put effort on making them brief and swift. I am mainly using Ubuntu, Amazon Linux, RedHat, Linux Mint, Mac and CentOS, sorry if the commands don't work on your system.</p>
<p dir="auto">This blog will focus on simple bash commands for parsing data and Linux system maintenance that i acquired from work and LPIC exam. I apologize that there are no detailed citation for all the commands, but they are probably from dear Google and Stack Overflow.</p>
<p dir="auto">English and bash are not my first language, please correct me anytime, thank you.
If you know other cool commands, please teach me!</p>
<p dir="auto">Here's a more stylish version of <a href="https://onceupon.github.io/Bash-Oneliner/" rel="nofollow">Bash-Oneliner</a>~</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Handy Bash one-liners</h2><a id="user-content-handy-bash-one-liners" aria-label="Permalink: Handy Bash one-liners" href="#handy-bash-one-liners"></a></p>
<ul dir="auto">
<li><a href="#terminal-tricks">Terminal Tricks</a></li>
<li><a href="#variable">Variable</a></li>
<li><a href="#math">Math</a></li>
<li><a href="#grep">Grep</a></li>
<li><a href="#sed">Sed</a></li>
<li><a href="#awk">Awk</a></li>
<li><a href="#xargs">Xargs</a></li>
<li><a href="#find">Find</a></li>
<li><a href="#condition-and-loop">Condition and Loop</a></li>
<li><a href="#time">Time</a></li>
<li><a href="#download">Download</a></li>
<li><a href="#random">Random</a></li>
<li><a href="#xwindow">Xwindow</a></li>
<li><a href="#system">System</a></li>
<li><a href="#hardware">Hardware</a></li>
<li><a href="#networking">Networking</a></li>
<li><a href="#data-wrangling">Data Wrangling</a></li>
<li><a href="#others">Others</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Terminal Tricks</h2><a id="user-content-terminal-tricks" aria-label="Permalink: Terminal Tricks" href="#terminal-tricks"></a></p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Using Ctrl keys</h5><a id="user-content-using-ctrl-keys" aria-label="Permalink: Using Ctrl keys" href="#using-ctrl-keys"></a></p>
<div data-snippet-clipboard-copy-content="Ctrl + a : move to the beginning of line.
Ctrl + d : if you've type something, Ctrl + d deletes the character under the cursor, else, it escapes the current shell.
Ctrl + e : move to the end of line.
Ctrl + k : delete all text from the cursor to the end of line.
Ctrl + l : equivalent to clear.
Ctrl + n : same as Down arrow.
Ctrl + p : same as Up arrow.
Ctrl + q : to resume output to terminal after Ctrl + s.
Ctrl + r : begins a backward search through command history.(keep pressing Ctrl + r to move backward)
Ctrl + s : to stop output to terminal.
Ctrl + t : transpose the character before the cursor with the one under the cursor, press Esc + t to transposes the two words before the cursor.
Ctrl + u : cut the line before the cursor; then Ctrl + y paste it
Ctrl + w : cut the word before the cursor; then Ctrl + y paste it
Ctrl + x + backspace : delete all text from the beginning of line to the cursor.
Ctrl + x + Ctrl + e : launch editor defined by $EDITOR to input your command. Useful for multi-line commands.
Ctrl + z : stop current running process and keep it in background. You can use `fg` to continue the process in the foreground, or `bg` to continue the process in the background.
Ctrl + _ : undo typing."><pre><code>Ctrl + a : move to the beginning of line.
Ctrl + d : if you've type something, Ctrl + d deletes the character under the cursor, else, it escapes the current shell.
Ctrl + e : move to the end of line.
Ctrl + k : delete all text from the cursor to the end of line.
Ctrl + l : equivalent to clear.
Ctrl + n : same as Down arrow.
Ctrl + p : same as Up arrow.
Ctrl + q : to resume output to terminal after Ctrl + s.
Ctrl + r : begins a backward search through command history.(keep pressing Ctrl + r to move backward)
Ctrl + s : to stop output to terminal.
Ctrl + t : transpose the character before the cursor with the one under the cursor, press Esc + t to transposes the two words before the cursor.
Ctrl + u : cut the line before the cursor; then Ctrl + y paste it
Ctrl + w : cut the word before the cursor; then Ctrl + y paste it
Ctrl + x + backspace : delete all text from the beginning of line to the cursor.
Ctrl + x + Ctrl + e : launch editor defined by $EDITOR to input your command. Useful for multi-line commands.
Ctrl + z : stop current running process and keep it in background. You can use `fg` to continue the process in the foreground, or `bg` to continue the process in the background.
Ctrl + _ : undo typing.
</code></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Change case</h5><a id="user-content-change-case" aria-label="Permalink: Change case" href="#change-case"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="Esc + u
# converts text from cursor to the end of the word to uppercase.
Esc + l
# converts text from cursor to the end of the word to lowercase.
Esc + c
# converts letter under the cursor to uppercase, rest of the word to lowercase."><pre>Esc + u
<span><span>#</span> converts text from cursor to the end of the word to uppercase.</span>
Esc + l
<span><span>#</span> converts text from cursor to the end of the word to lowercase.</span>
Esc + c
<span><span>#</span> converts letter under the cursor to uppercase, rest of the word to lowercase.</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Run history number (e.g. 53)</h5><a id="user-content-run-history-number-eg-53" aria-label="Permalink: Run history number (e.g. 53)" href="#run-history-number-eg-53"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Run last command</h5><a id="user-content-run-last-command" aria-label="Permalink: Run last command" href="#run-last-command"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="!!
# run the previous command using sudo
sudo !!"><pre><span>!!</span>
<span><span>#</span> run the previous command using sudo</span>
sudo <span>!!</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Run last command and change some parameter using caret substitution (e.g. last command: echo 'aaa' -&gt; rerun as: echo 'bbb')</h5><a id="user-content-run-last-command-and-change-some-parameter-using-caret-substitution-eg-last-command-echo-aaa---rerun-as-echo-bbb" aria-label="Permalink: Run last command and change some parameter using caret substitution (e.g. last command: echo 'aaa' -> rerun as: echo 'bbb')" href="#run-last-command-and-change-some-parameter-using-caret-substitution-eg-last-command-echo-aaa---rerun-as-echo-bbb"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="#last command: echo 'aaa'
^aaa^bbb

#echo 'bbb'
#bbb

#Notice that only the first aaa will be replaced, if you want to replace all 'aaa', use ':&amp;' to repeat it:
^aaa^bbb^:&amp;
#or
!!:gs/aaa/bbb/
"><pre><span><span>#</span>last command: echo 'aaa'</span>
^aaa^bbb

<span><span>#</span>echo 'bbb'</span>
<span><span>#</span>bbb</span>

<span><span>#</span>Notice that only the first aaa will be replaced, if you want to replace all 'aaa', use ':&amp;' to repeat it:</span>
^aaa^bbb^:<span>&amp;</span>
<span><span>#</span>or</span>
<span>!!</span>:gs/aaa/bbb/
</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Run past command that began with (e.g. cat filename)</h5><a id="user-content-run-past-command-that-began-with-eg-cat-filename" aria-label="Permalink: Run past command that began with (e.g. cat filename)" href="#run-past-command-that-began-with-eg-cat-filename"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="!cat
# or
!c
# run cat filename again"><pre><span>!</span>cat
<span><span>#</span> or</span>
<span>!</span>c
<span><span>#</span> run cat filename again</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Bash globbing</h5><a id="user-content-bash-globbing" aria-label="Permalink: Bash globbing" href="#bash-globbing"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# '*' serves as a &quot;wild card&quot; for filename expansion.
/etc/pa*wd    #/etc/passwd

# '?' serves as a single-character &quot;wild card&quot; for filename expansion.
/b?n/?at      #/bin/cat

# '[]' serves to match the character from a range.
ls -l [a-z]*   #list all files with alphabet in its filename.

# '{}' can be used to match filenames with more than one patterns
ls *.{sh,py}   #list all .sh and .py files"><pre><span><span>#</span> '*' serves as a "wild card" for filename expansion.</span>
/etc/pa<span>*</span>wd    <span><span>#</span>/etc/passwd</span>

<span><span>#</span> '?' serves as a single-character "wild card" for filename expansion.</span>
/b<span>?</span>n/<span>?</span>at      <span><span>#</span>/bin/cat</span>

<span><span>#</span> '[]' serves to match the character from a range.</span>
ls -l [a-z]<span>*</span>   <span><span>#</span>list all files with alphabet in its filename.</span>

<span><span>#</span> '{}' can be used to match filenames with more than one patterns</span>
ls <span>*</span>.{sh,py}   <span><span>#</span>list all .sh and .py files</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Some handy environment variables</h5><a id="user-content-some-handy-environment-variables" aria-label="Permalink: Some handy environment variables" href="#some-handy-environment-variables"></a></p>
<div data-snippet-clipboard-copy-content="$0   :name of shell or shell script.
$1, $2, $3, ... :positional parameters.
$#   :number of positional parameters.
$?   :most recent foreground pipeline exit status.
$-   :current options set for the shell.
$$   :pid of the current shell (not subshell).
$!   :is the PID of the most recent background command.
$_   :last argument of the previously executed command, or the path of the bash script.

$DESKTOP_SESSION     current display manager
$EDITOR   preferred text editor.
$LANG   current language.
$PATH   list of directories to search for executable files (i.e. ready-to-run programs)
$PWD    current directory
$SHELL  current shell
$USER   current username
$HOSTNAME   current hostname"><pre><code>$0   :name of shell or shell script.
$1, $2, $3, ... :positional parameters.
$#   :number of positional parameters.
$?   :most recent foreground pipeline exit status.
$-   :current options set for the shell.
$$   :pid of the current shell (not subshell).
$!   :is the PID of the most recent background command.
$_   :last argument of the previously executed command, or the path of the bash script.

$DESKTOP_SESSION     current display manager
$EDITOR   preferred text editor.
$LANG   current language.
$PATH   list of directories to search for executable files (i.e. ready-to-run programs)
$PWD    current directory
$SHELL  current shell
$USER   current username
$HOSTNAME   current hostname
</code></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Using vi-mode in your shell</h5><a id="user-content-using-vi-mode-in-your-shell" aria-label="Permalink: Using vi-mode in your shell" href="#using-vi-mode-in-your-shell"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="set -o vi
# change bash shell to vi mode
# then hit the Esc key to change to vi edit mode (when `set -o vi` is set)
k
# in vi edit mode - previous command
j
# in vi edit mode - next command
0
# in vi edit mode - beginning of the command
R
# in vi edit mode - replace current characters of command
2w
# in vi edit mode - next to 2nd word
b
# in vi edit mode - previous word
i
# in vi edit mode - go to insert mode
v
# in vi edit mode - edit current command in vi
man 3 readline
# man page for complete readline mapping"><pre><span>set</span> -o vi
<span><span>#</span> change bash shell to vi mode</span>
<span><span>#</span> then hit the Esc key to change to vi edit mode (when `set -o vi` is set)</span>
k
<span><span>#</span> in vi edit mode - previous command</span>
j
<span><span>#</span> in vi edit mode - next command</span>
0
<span><span>#</span> in vi edit mode - beginning of the command</span>
R
<span><span>#</span> in vi edit mode - replace current characters of command</span>
2w
<span><span>#</span> in vi edit mode - next to 2nd word</span>
b
<span><span>#</span> in vi edit mode - previous word</span>
i
<span><span>#</span> in vi edit mode - go to insert mode</span>
v
<span><span>#</span> in vi edit mode - edit current command in vi</span>
man 3 readline
<span><span>#</span> man page for complete readline mapping</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Variable</h2><a id="user-content-variable" aria-label="Permalink: Variable" href="#variable"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Variable substitution within quotes</h5><a id="user-content-variable-substitution-within-quotes" aria-label="Permalink: Variable substitution within quotes" href="#variable-substitution-within-quotes"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# foo=bar
echo $foo
# bar
echo &quot;$foo&quot;
# bar
# single quotes cause variables to not be expanded
echo '$foo'
# $foo
# single quotes within double quotes will not cancel expansion and will be part of the output
echo &quot;'$foo'&quot;
# 'bar'
# doubled single quotes act as if there are no quotes at all
echo ''$foo''
# bar"><pre><span><span>#</span> foo=bar</span>
<span>echo</span> <span>$foo</span>
<span><span>#</span> bar</span>
<span>echo</span> <span><span>"</span><span>$foo</span><span>"</span></span>
<span><span>#</span> bar</span>
<span><span>#</span> single quotes cause variables to not be expanded</span>
<span>echo</span> <span><span>'</span>$foo<span>'</span></span>
<span><span>#</span> $foo</span>
<span><span>#</span> single quotes within double quotes will not cancel expansion and will be part of the output</span>
<span>echo</span> <span><span>"</span>'<span>$foo</span>'<span>"</span></span>
<span><span>#</span> 'bar'</span>
<span><span>#</span> doubled single quotes act as if there are no quotes at all</span>
<span>echo</span> <span><span>'</span><span>'</span></span><span>$foo</span><span><span>'</span><span>'</span></span>
<span><span>#</span> bar</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Get the length of variable</h5><a id="user-content-get-the-length-of-variable" aria-label="Permalink: Get the length of variable" href="#get-the-length-of-variable"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="var=&quot;some string&quot;
echo ${#var}
# 11"><pre>var=<span><span>"</span>some string<span>"</span></span>
<span>echo</span> <span>${<span>#</span>var}</span>
<span><span>#</span> 11</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Get the first character of the variable</h5><a id="user-content-get-the-first-character-of-the-variable" aria-label="Permalink: Get the first character of the variable" href="#get-the-first-character-of-the-variable"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="var=string
echo &quot;${var:0:1}&quot;
#s

# or
echo ${var%%&quot;${var#?}&quot;}"><pre>var=string
<span>echo</span> <span><span>"</span><span>${var<span>:</span>0<span>:</span>1}</span><span>"</span></span>
<span><span>#</span>s</span>

<span><span>#</span> or</span>
<span>echo</span> <span>${var<span>%%</span><span><span>"</span><span>${var<span>#</span>?}</span><span>"</span></span>}</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Remove the first or last string from variable</h5><a id="user-content-remove-the-first-or-last-string-from-variable" aria-label="Permalink: Remove the first or last string from variable" href="#remove-the-first-or-last-string-from-variable"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="var=&quot;some string&quot;
echo ${var:2}
#me string"><pre>var=<span><span>"</span>some string<span>"</span></span>
<span>echo</span> <span>${var<span>:</span>2}</span>
<span><span>#</span>me string</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Replacement (e.g. remove the first leading 0 )</h5><a id="user-content-replacement-eg-remove-the-first-leading-0-" aria-label="Permalink: Replacement (e.g. remove the first leading 0 )" href="#replacement-eg-remove-the-first-leading-0-"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="var=&quot;0050&quot;
echo ${var[@]#0}
#050"><pre>var=<span><span>"</span>0050<span>"</span></span>
<span>echo</span> <span>${var[@]<span>#</span>0}</span>
<span><span>#</span>050</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Replacement (e.g. replace 'a' with ',')</h5><a id="user-content-replacement-eg-replace-a-with-" aria-label="Permalink: Replacement (e.g. replace 'a' with ',')" href="#replacement-eg-replace-a-with-"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Replace all (e.g. replace all 'a' with ',')</h5><a id="user-content-replace-all-eg-replace-all-a-with-" aria-label="Permalink: Replace all (e.g. replace all 'a' with ',')" href="#replace-all-eg-replace-all-a-with-"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Grep lines with strings from a file (e.g. lines with 'stringA or 'stringB' or 'stringC')</h5><a id="user-content-grep-lines-with-strings-from-a-file-eg-lines-with-stringa-or-stringb-or-stringc" aria-label="Permalink: Grep lines with strings from a file (e.g. lines with 'stringA or 'stringB' or 'stringC')" href="#grep-lines-with-strings-from-a-file-eg-lines-with-stringa-or-stringb-or-stringc"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="#with grep
test=&quot;stringA stringB stringC&quot;
grep ${test// /\\\|} file.txt
# turning the space into 'or' (\|) in grep"><pre><span><span>#</span>with grep</span>
test=<span><span>"</span>stringA stringB stringC<span>"</span></span>
grep <span>${test<span>//</span> <span>/</span><span>\\\|</span>}</span> file.txt
<span><span>#</span> turning the space into 'or' (\|) in grep</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">To change the case of the string stored in the variable to lowercase (Parameter Expansion)</h5><a id="user-content-to-change-the-case-of-the-string-stored-in-the-variable-to-lowercase-parameter-expansion" aria-label="Permalink: To change the case of the string stored in the variable to lowercase (Parameter Expansion)" href="#to-change-the-case-of-the-string-stored-in-the-variable-to-lowercase-parameter-expansion"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="var=HelloWorld
echo ${var,,}
helloworld"><pre>var=HelloWorld
<span>echo</span> <span>${var,,}</span>
helloworld</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Expand and then execute variable/argument</h5><a id="user-content-expand-and-then-execute-variableargument" aria-label="Permalink: Expand and then execute variable/argument" href="#expand-and-then-execute-variableargument"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cmd=&quot;bar=foo&quot;
eval &quot;$cmd&quot;
echo &quot;$bar&quot; # foo"><pre>cmd=<span><span>"</span>bar=foo<span>"</span></span>
<span>eval</span> <span><span>"</span><span>$cmd</span><span>"</span></span>
<span>echo</span> <span><span>"</span><span>$bar</span><span>"</span></span> <span><span>#</span> foo</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Math</h2><a id="user-content-math" aria-label="Permalink: Math" href="#math"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Arithmetic Expansion in Bash (Operators: +, -, *, /, %, etc)</h5><a id="user-content-arithmetic-expansion-in-bash-operators-------etc" aria-label="Permalink: Arithmetic Expansion in Bash (Operators: +, -, *, /, %, etc)" href="#arithmetic-expansion-in-bash-operators-------etc"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="echo $(( 10 + 5 ))  #15
x=1
echo $(( x++ )) #1 , notice that it is still 1, since it's post-increment
echo $(( x++ )) #2
echo $(( ++x )) #4 , notice that it is not 3 since it's pre-increment
echo $(( x-- )) #4
echo $(( x-- )) #3
echo $(( --x )) #1
x=2
y=3
echo $(( x ** y )) #8"><pre><span>echo</span> <span><span>$((</span> <span>10</span> <span>+</span> <span>5</span> <span>))</span></span>  <span><span>#</span>15</span>
x=1
<span>echo</span> <span><span>$((</span> x<span>++</span> <span>))</span></span> <span><span>#</span>1 , notice that it is still 1, since it's post-increment</span>
<span>echo</span> <span><span>$((</span> x<span>++</span> <span>))</span></span> <span><span>#</span>2</span>
<span>echo</span> <span><span>$((</span> <span>++</span>x <span>))</span></span> <span><span>#</span>4 , notice that it is not 3 since it's pre-increment</span>
<span>echo</span> <span><span>$((</span> x<span>--</span> <span>))</span></span> <span><span>#</span>4</span>
<span>echo</span> <span><span>$((</span> x<span>--</span> <span>))</span></span> <span><span>#</span>3</span>
<span>echo</span> <span><span>$((</span> <span>--</span>x <span>))</span></span> <span><span>#</span>1</span>
x=2
y=3
<span>echo</span> <span><span>$((</span> x <span>**</span> y <span>))</span></span> <span><span>#</span>8</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print out the prime factors of a number (e.g. 50)</h5><a id="user-content-print-out-the-prime-factors-of-a-number-eg-50" aria-label="Permalink: Print out the prime factors of a number (e.g. 50)" href="#print-out-the-prime-factors-of-a-number-eg-50"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Sum up input list (e.g. seq 10)</h5><a id="user-content-sum-up-input-list-eg-seq-10" aria-label="Permalink: Sum up input list (e.g. seq 10)" href="#sum-up-input-list-eg-seq-10"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Sum up a file (each line in file contains only one number)</h5><a id="user-content-sum-up-a-file-each-line-in-file-contains-only-one-number" aria-label="Permalink: Sum up a file (each line in file contains only one number)" href="#sum-up-a-file-each-line-in-file-contains-only-one-number"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="awk '{s+=$1} END {print s}' filename"><pre>awk <span><span>'</span>{s+=$1} END {print s}<span>'</span></span> filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Column subtraction</h5><a id="user-content-column-subtraction" aria-label="Permalink: Column subtraction" href="#column-subtraction"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cat file| awk -F '\t' 'BEGIN {SUM=0}{SUM+=$3-$2}END{print SUM}'"><pre>cat file<span>|</span> awk -F <span><span>'</span>\t<span>'</span></span> <span><span>'</span>BEGIN {SUM=0}{SUM+=$3-$2}END{print SUM}<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Simple math with expr</h5><a id="user-content-simple-math-with-expr" aria-label="Permalink: Simple math with expr" href="#simple-math-with-expr"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="expr 10+20 #30
expr 10\*20 #600
expr 30 \> 20 #1 (true)"><pre>expr 10+20 <span><span>#</span>30</span>
expr 10<span>\*</span>20 <span><span>#</span>600</span>
expr 30 <span>\&gt;</span> 20 <span><span>#</span>1 (true)</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">More math with bc</h5><a id="user-content-more-math-with-bc" aria-label="Permalink: More math with bc" href="#more-math-with-bc"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Number of decimal digit/ significant figure
echo &quot;scale=2;2/3&quot; | bc
#.66

# Exponent operator
echo &quot;10^2&quot; | bc
#100

# Using variables
echo &quot;var=5;--var&quot;| bc
#4"><pre><span><span>#</span> Number of decimal digit/ significant figure</span>
<span>echo</span> <span><span>"</span>scale=2;2/3<span>"</span></span> <span>|</span> bc
<span><span>#</span>.66</span>

<span><span>#</span> Exponent operator</span>
<span>echo</span> <span><span>"</span>10^2<span>"</span></span> <span>|</span> bc
<span><span>#</span>100</span>

<span><span>#</span> Using variables</span>
<span>echo</span> <span><span>"</span>var=5;--var<span>"</span></span><span>|</span> bc
<span><span>#</span>4</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Grep</h2><a id="user-content-grep" aria-label="Permalink: Grep" href="#grep"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Type of grep</h5><a id="user-content-type-of-grep" aria-label="Permalink: Type of grep" href="#type-of-grep"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep = grep -G # Basic Regular Expression (BRE)
fgrep = grep -F # fixed text, ignoring meta-characters
egrep = grep -E # Extended Regular Expression (ERE)
rgrep = grep -r # recursive
grep -P # Perl Compatible Regular Expressions (PCRE)"><pre>grep = grep -G <span><span>#</span> Basic Regular Expression (BRE)</span>
fgrep = grep -F <span><span>#</span> fixed text, ignoring meta-characters</span>
egrep = grep -E <span><span>#</span> Extended Regular Expression (ERE)</span>
rgrep = grep -r <span><span>#</span> recursive</span>
grep -P <span><span>#</span> Perl Compatible Regular Expressions (PCRE)</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Grep and count number of empty lines</h5><a id="user-content-grep-and-count-number-of-empty-lines" aria-label="Permalink: Grep and count number of empty lines" href="#grep-and-count-number-of-empty-lines"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Grep and return only integer</h5><a id="user-content-grep-and-return-only-integer" aria-label="Permalink: Grep and return only integer" href="#grep-and-return-only-integer"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep -o '[0-9]*'
#or
grep -oP '\d*'"><pre>grep -o <span><span>'</span>[0-9]*<span>'</span></span>
<span><span>#</span>or</span>
grep -oP <span><span>'</span>\d*<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Grep integer with certain number of digits (e.g. 3)</h5><a id="user-content-grep-integer-with-certain-number-of-digits-eg-3" aria-label="Permalink: Grep integer with certain number of digits (e.g. 3)" href="#grep-integer-with-certain-number-of-digits-eg-3"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep '[0-9]\{3\}'
# or
grep -E '[0-9]{3}'
# or
grep -P '\d{3}'"><pre>grep <span><span>'</span>[0-9]\{3\}<span>'</span></span>
<span><span>#</span> or</span>
grep -E <span><span>'</span>[0-9]{3}<span>'</span></span>
<span><span>#</span> or</span>
grep -P <span><span>'</span>\d{3}<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Grep only IP address</h5><a id="user-content-grep-only-ip-address" aria-label="Permalink: Grep only IP address" href="#grep-only-ip-address"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
# or
grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}'"><pre>grep -Eo <span><span>'</span>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}<span>'</span></span>
<span><span>#</span> or</span>
grep -Po <span><span>'</span>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Grep whole word (e.g. 'target')</h5><a id="user-content-grep-whole-word-eg-target" aria-label="Permalink: Grep whole word (e.g. 'target')" href="#grep-whole-word-eg-target"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep -w 'target'

#or using RE
grep '\btarget\b'"><pre>grep -w <span><span>'</span>target<span>'</span></span>

<span><span>#</span>or using RE</span>
grep <span><span>'</span>\btarget\b<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Grep returning lines before and after match (e.g. 'bbo')</h5><a id="user-content-grep-returning-lines-before-and-after-match-eg-bbo" aria-label="Permalink: Grep returning lines before and after match (e.g. 'bbo')" href="#grep-returning-lines-before-and-after-match-eg-bbo"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# return also 3 lines after match
grep -A 3 'bbo'

# return also 3 lines before match
grep -B 3 'bbo'

# return also 3 lines before and after match
grep -C 3 'bbo'"><pre><span><span>#</span> return also 3 lines after match</span>
grep -A 3 <span><span>'</span>bbo<span>'</span></span>

<span><span>#</span> return also 3 lines before match</span>
grep -B 3 <span><span>'</span>bbo<span>'</span></span>

<span><span>#</span> return also 3 lines before and after match</span>
grep -C 3 <span><span>'</span>bbo<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Grep string starting with (e.g. 'S')</h5><a id="user-content-grep-string-starting-with-eg-s" aria-label="Permalink: Grep string starting with (e.g. 'S')" href="#grep-string-starting-with-eg-s"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Extract text between words (e.g. w1,w2)</h5><a id="user-content-extract-text-between-words-eg-w1w2" aria-label="Permalink: Extract text between words (e.g. w1,w2)" href="#extract-text-between-words-eg-w1w2"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep -o -P '(?<=w1).*(?=w2)'"><pre>grep -o -P <span><span>'</span>(?&lt;=w1).*(?=w2)<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Grep lines without word (e.g. 'bbo')</h5><a id="user-content-grep-lines-without-word-eg-bbo" aria-label="Permalink: Grep lines without word (e.g. 'bbo')" href="#grep-lines-without-word-eg-bbo"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Grep lines not begin with string (e.g. #)</h5><a id="user-content-grep-lines-not-begin-with-string-eg-" aria-label="Permalink: Grep lines not begin with string (e.g. #)" href="#grep-lines-not-begin-with-string-eg-"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Grep variables with space within it (e.g. myvar="some strings")</h5><a id="user-content-grep-variables-with-space-within-it-eg-myvarsome-strings" aria-label="Permalink: Grep variables with space within it (e.g. myvar=&quot;some strings&quot;)" href="#grep-variables-with-space-within-it-eg-myvarsome-strings"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep &quot;$myvar&quot; filename
#remember to quote the variable!"><pre>grep <span><span>"</span><span>$myvar</span><span>"</span></span> filename
<span><span>#</span>remember to quote the variable!</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Grep only one/first match (e.g. 'bbo')</h5><a id="user-content-grep-only-onefirst-match-eg-bbo" aria-label="Permalink: Grep only one/first match (e.g. 'bbo')" href="#grep-only-onefirst-match-eg-bbo"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Grep and return number of matching line(e.g. 'bbo')</h5><a id="user-content-grep-and-return-number-of-matching-lineeg-bbo" aria-label="Permalink: Grep and return number of matching line(e.g. 'bbo')" href="#grep-and-return-number-of-matching-lineeg-bbo"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Count occurrence (e.g. three times a line count three times)</h5><a id="user-content-count-occurrence-eg-three-times-a-line-count-three-times" aria-label="Permalink: Count occurrence (e.g. three times a line count three times)" href="#count-occurrence-eg-three-times-a-line-count-three-times"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep -o bbo filename |wc -l"><pre>grep -o bbo filename <span>|</span>wc -l</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Case insensitive grep (e.g. 'bbo'/'BBO'/'Bbo')</h5><a id="user-content-case-insensitive-grep-eg-bbobbobbo" aria-label="Permalink: Case insensitive grep (e.g. 'bbo'/'BBO'/'Bbo')" href="#case-insensitive-grep-eg-bbobbobbo"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">COLOR the match (e.g. 'bbo')!</h5><a id="user-content-color-the-match-eg-bbo" aria-label="Permalink: COLOR the match (e.g. 'bbo')!" href="#color-the-match-eg-bbo"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep --color bbo filename"><pre>grep --color bbo filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Grep search all files in a directory(e.g. 'bbo')</h5><a id="user-content-grep-search-all-files-in-a-directoryeg-bbo" aria-label="Permalink: Grep search all files in a directory(e.g. 'bbo')" href="#grep-search-all-files-in-a-directoryeg-bbo"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep -R bbo /path/to/directory
# or
grep -r bbo /path/to/directory"><pre>grep -R bbo /path/to/directory
<span><span>#</span> or</span>
grep -r bbo /path/to/directory</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Search all files in directory, do not ouput the filenames (e.g. 'bbo')</h5><a id="user-content-search-all-files-in-directory-do-not-ouput-the-filenames-eg-bbo" aria-label="Permalink: Search all files in directory, do not ouput the filenames (e.g. 'bbo')" href="#search-all-files-in-directory-do-not-ouput-the-filenames-eg-bbo"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep -rh bbo /path/to/directory"><pre>grep -rh bbo /path/to/directory</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Search all files in directory, output ONLY the filenames with matches(e.g. 'bbo')</h5><a id="user-content-search-all-files-in-directory-output-only-the-filenames-with-matcheseg-bbo" aria-label="Permalink: Search all files in directory, output ONLY the filenames with matches(e.g. 'bbo')" href="#search-all-files-in-directory-output-only-the-filenames-with-matcheseg-bbo"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep -rl bbo /path/to/directory"><pre>grep -rl bbo /path/to/directory</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Grep OR (e.g. A or B or C or D)</h5><a id="user-content-grep-or-eg-a-or-b-or-c-or-d" aria-label="Permalink: Grep OR (e.g. A or B or C or D)" href="#grep-or-eg-a-or-b-or-c-or-d"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Grep AND (e.g. A and B)</h5><a id="user-content-grep-and-eg-a-and-b" aria-label="Permalink: Grep AND (e.g. A and B)" href="#grep-and-eg-a-and-b"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Regex any single character (e.g. ACB or AEB)</h5><a id="user-content-regex-any-single-character-eg-acb-or-aeb" aria-label="Permalink: Regex any single character (e.g. ACB or AEB)" href="#regex-any-single-character-eg-acb-or-aeb"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Regex with or without a certain character (e.g. color or colour)</h5><a id="user-content-regex-with-or-without-a-certain-character-eg-color-or-colour" aria-label="Permalink: Regex with or without a certain character (e.g. color or colour)" href="#regex-with-or-without-a-certain-character-eg-color-or-colour"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Grep all content of a fileA from fileB</h5><a id="user-content-grep-all-content-of-a-filea-from-fileb" aria-label="Permalink: Grep all content of a fileA from fileB" href="#grep-all-content-of-a-filea-from-fileb"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Grep a tab</h5><a id="user-content-grep-a-tab" aria-label="Permalink: Grep a tab" href="#grep-a-tab"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Grep variable from variable</h5><a id="user-content-grep-variable-from-variable" aria-label="Permalink: Grep variable from variable" href="#grep-variable-from-variable"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="$echo &quot;$long_str&quot;|grep -q &quot;$short_str&quot;
if [ $? -eq 0 ]; then echo 'found'; fi
#grep -q will output 0 if match found
#remember to add space between []!"><pre><span>$echo</span> <span><span>"</span><span>$long_str</span><span>"</span></span><span>|</span>grep -q <span><span>"</span><span>$short_str</span><span>"</span></span>
<span>if</span> [ <span>$?</span> <span>-eq</span> 0 ]<span>;</span> <span>then</span> <span>echo</span> <span><span>'</span>found<span>'</span></span><span>;</span> <span>fi</span>
<span><span>#</span>grep -q will output 0 if match found</span>
<span><span>#</span>remember to add space between []!</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Grep strings between a bracket()</h5><a id="user-content-grep-strings-between-a-bracket" aria-label="Permalink: Grep strings between a bracket()" href="#grep-strings-between-a-bracket"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Grep number of characters with known strings in between(e.g. AAEL000001-RA)</h5><a id="user-content-grep-number-of-characters-with-known-strings-in-betweeneg-aael000001-ra" aria-label="Permalink: Grep number of characters with known strings in between(e.g. AAEL000001-RA)" href="#grep-number-of-characters-with-known-strings-in-betweeneg-aael000001-ra"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep -o -w &quot;\w\{10\}\-R\w\{1\}&quot;
# \w word character [0-9a-zA-Z_] \W not word character"><pre>grep -o -w <span><span>"</span>\w\{10\}\-R\w\{1\}<span>"</span></span>
<span><span>#</span> \w word character [0-9a-zA-Z_] \W not word character</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Skip directory (e.g. 'bbo')</h5><a id="user-content-skip-directory-eg-bbo" aria-label="Permalink: Skip directory (e.g. 'bbo')" href="#skip-directory-eg-bbo"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep -d skip 'bbo' /path/to/files/*"><pre>grep -d skip <span><span>'</span>bbo<span>'</span></span> /path/to/files/<span>*</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Sed</h2><a id="user-content-sed" aria-label="Permalink: Sed" href="#sed"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Remove the 1st line</h5><a id="user-content-remove-the-1st-line" aria-label="Permalink: Remove the 1st line" href="#remove-the-1st-line"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Remove the first 100 lines (remove line 1-100)</h5><a id="user-content-remove-the-first-100-lines-remove-line-1-100" aria-label="Permalink: Remove the first 100 lines (remove line 1-100)" href="#remove-the-first-100-lines-remove-line-1-100"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Remove lines with string (e.g. 'bbo')</h5><a id="user-content-remove-lines-with-string-eg-bbo" aria-label="Permalink: Remove lines with string (e.g. 'bbo')" href="#remove-lines-with-string-eg-bbo"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed &quot;/bbo/d&quot; filename
# case insensitive:
sed &quot;/bbo/Id&quot; filename"><pre>sed <span><span>"</span>/bbo/d<span>"</span></span> filename
<span><span>#</span> case insensitive:</span>
sed <span><span>"</span>/bbo/Id<span>"</span></span> filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Remove lines whose nth character not equal to a value (e.g. 5th character not equal to 2)</h5><a id="user-content-remove-lines-whose-nth-character-not-equal-to-a-value-eg-5th-character-not-equal-to-2" aria-label="Permalink: Remove lines whose nth character not equal to a value (e.g. 5th character not equal to 2)" href="#remove-lines-whose-nth-character-not-equal-to-a-value-eg-5th-character-not-equal-to-2"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed -E '/^.{5}[^2]/d'
#aaaa2aaa (you can stay)
#aaaa1aaa (delete!)"><pre>sed -E <span><span>'</span>/^.{5}[^2]/d<span>'</span></span>
<span><span>#</span>aaaa2aaa (you can stay)</span>
<span><span>#</span>aaaa1aaa (delete!)</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Edit infile (edit and save to file), (e.g. deleting the lines with 'bbo' and save to file)</h5><a id="user-content-edit-infile-edit-and-save-to-file-eg-deleting-the-lines-with-bbo-and-save-to-file" aria-label="Permalink: Edit infile (edit and save to file), (e.g. deleting the lines with 'bbo' and save to file)" href="#edit-infile-edit-and-save-to-file-eg-deleting-the-lines-with-bbo-and-save-to-file"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">When using variable (e.g. $i), use double quotes " "</h5><a id="user-content-when-using-variable-eg-i-use-double-quotes--" aria-label="Permalink: When using variable (e.g. $i), use double quotes &quot; &quot;" href="#when-using-variable-eg-i-use-double-quotes--"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# e.g. add >$i to the first line (to make a bioinformatics FASTA file)
sed &quot;1i >$i&quot;
# notice the double quotes! in other examples, you can use a single quote, but here, no way!
# '1i' means insert to first line"><pre><span><span>#</span> e.g. add &gt;$i to the first line (to make a bioinformatics FASTA file)</span>
sed <span><span>"</span>1i &gt;<span>$i</span><span>"</span></span>
<span><span>#</span> notice the double quotes! in other examples, you can use a single quote, but here, no way!</span>
<span><span>#</span> '1i' means insert to first line</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Using environment variable and end-of-line pattern at the same time.</h5><a id="user-content-using-environment-variable-and-end-of-line-pattern-at-the-same-time" aria-label="Permalink: Using environment variable and end-of-line pattern at the same time." href="#using-environment-variable-and-end-of-line-pattern-at-the-same-time"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Use backslash for end-of-line $ pattern, and double quotes for expressing the variable
sed -e &quot;\$s/\$/\n+--$3-----+/&quot;"><pre><span><span>#</span> Use backslash for end-of-line $ pattern, and double quotes for expressing the variable</span>
sed -e <span><span>"</span><span>\$</span>s/<span>\$</span>/\n+--<span>$3</span>-----+/<span>"</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Delete/remove empty lines</h5><a id="user-content-deleteremove-empty-lines" aria-label="Permalink: Delete/remove empty lines" href="#deleteremove-empty-lines"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed '/^\s*$/d'

# or

sed '/^$/d'"><pre>sed <span><span>'</span>/^\s*$/d<span>'</span></span>

<span><span>#</span> or</span>

sed <span><span>'</span>/^$/d<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Delete/remove last line</h5><a id="user-content-deleteremove-last-line" aria-label="Permalink: Delete/remove last line" href="#deleteremove-last-line"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Delete/remove last character from end of file</h5><a id="user-content-deleteremove-last-character-from-end-of-file" aria-label="Permalink: Delete/remove last character from end of file" href="#deleteremove-last-character-from-end-of-file"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed -i '$ s/.$//' filename"><pre>sed -i <span><span>'</span>$ s/.$//<span>'</span></span> filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Add string to beginning of file (e.g. "[")</h5><a id="user-content-add-string-to-beginning-of-file-eg-" aria-label="Permalink: Add string to beginning of file (e.g. &quot;[&quot;)" href="#add-string-to-beginning-of-file-eg-"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Add string at certain line number (e.g. add 'something' to line 1 and line 3)</h5><a id="user-content-add-string-at-certain-line-number-eg-add-something-to-line-1-and-line-3" aria-label="Permalink: Add string at certain line number (e.g. add 'something' to line 1 and line 3)" href="#add-string-at-certain-line-number-eg-add-something-to-line-1-and-line-3"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed -e '1isomething' -e '3isomething'"><pre>sed -e <span><span>'</span>1isomething<span>'</span></span> -e <span><span>'</span>3isomething<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Add string to end of file (e.g. "]")</h5><a id="user-content-add-string-to-end-of-file-eg-" aria-label="Permalink: Add string to end of file (e.g. &quot;]&quot;)" href="#add-string-to-end-of-file-eg-"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Add newline to the end</h5><a id="user-content-add-newline-to-the-end" aria-label="Permalink: Add newline to the end" href="#add-newline-to-the-end"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Add string to beginning of every line (e.g. 'bbo')</h5><a id="user-content-add-string-to-beginning-of-every-line-eg-bbo" aria-label="Permalink: Add string to beginning of every line (e.g. 'bbo')" href="#add-string-to-beginning-of-every-line-eg-bbo"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed -e 's/^/bbo/' filename"><pre>sed -e <span><span>'</span>s/^/bbo/<span>'</span></span> filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Add string to end of each line (e.g. "}")</h5><a id="user-content-add-string-to-end-of-each-line-eg-" aria-label="Permalink: Add string to end of each line (e.g. &quot;}&quot;)" href="#add-string-to-end-of-each-line-eg-"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed -e 's/$/\}\]/' filename"><pre>sed -e <span><span>'</span>s/$/\}\]/<span>'</span></span> filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Add \n every nth character (e.g. every 4th character)</h5><a id="user-content-add-n-every-nth-character-eg-every-4th-character" aria-label="Permalink: Add \n every nth character (e.g. every 4th character)" href="#add-n-every-nth-character-eg-every-4th-character"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Add a line after the line that matches the pattern (e.g. add a new line with "world" after the line with "hello")</h5><a id="user-content-add-a-line-after-the-line-that-matches-the-pattern-eg-add-a-new-line-with-world-after-the-line-with-hello" aria-label="Permalink: Add a line after the line that matches the pattern (e.g. add a new line with &quot;world&quot; after the line with &quot;hello&quot;)" href="#add-a-line-after-the-line-that-matches-the-pattern-eg-add-a-new-line-with-world-after-the-line-with-hello"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed '/hello*/a world' filename
# hello
# world"><pre>sed <span><span>'</span>/hello*/a world<span>'</span></span> filename
<span><span>#</span> hello</span>
<span><span>#</span> world</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Concatenate/combine/join files with a separator and next line (e.g separate by ",")</h5><a id="user-content-concatenatecombinejoin-files-with-a-separator-and-next-line-eg-separate-by-" aria-label="Permalink: Concatenate/combine/join files with a separator and next line (e.g separate by &quot;,&quot;)" href="#concatenatecombinejoin-files-with-a-separator-and-next-line-eg-separate-by-"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed -s '$a,' *.json > all.json"><pre>sed -s <span><span>'</span>$a,<span>'</span></span> <span>*</span>.json <span>&gt;</span> all.json</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Substitution (e.g. replace A by B)</h5><a id="user-content-substitution-eg-replace-a-by-b" aria-label="Permalink: Substitution (e.g. replace A by B)" href="#substitution-eg-replace-a-by-b"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Substitution with wildcard (e.g. replace a line start with aaa= by aaa=/my/new/path)</h5><a id="user-content-substitution-with-wildcard-eg-replace-a-line-start-with-aaa-by-aaamynewpath" aria-label="Permalink: Substitution with wildcard (e.g. replace a line start with aaa= by aaa=/my/new/path)" href="#substitution-with-wildcard-eg-replace-a-line-start-with-aaa-by-aaamynewpath"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed &quot;s/aaa=.*/aaa=\/my\/new\/path/g&quot;"><pre>sed <span><span>"</span>s/aaa=.*/aaa=\/my\/new\/path/g<span>"</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Select lines start with string (e.g. 'bbo')</h5><a id="user-content-select-lines-start-with-string-eg-bbo" aria-label="Permalink: Select lines start with string (e.g. 'bbo')" href="#select-lines-start-with-string-eg-bbo"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Delete lines with string (e.g. 'bbo')</h5><a id="user-content-delete-lines-with-string-eg-bbo" aria-label="Permalink: Delete lines with string (e.g. 'bbo')" href="#delete-lines-with-string-eg-bbo"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Print/get/trim a range of line (e.g. line 500-5000)</h5><a id="user-content-printgettrim-a-range-of-line-eg-line-500-5000" aria-label="Permalink: Print/get/trim a range of line (e.g. line 500-5000)" href="#printgettrim-a-range-of-line-eg-line-500-5000"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed -n 500,5000p filename"><pre>sed -n 500,5000p filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print every nth lines</h5><a id="user-content-print-every-nth-lines" aria-label="Permalink: Print every nth lines" href="#print-every-nth-lines"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed -n '0~3p' filename

# catch 0: start; 3: step"><pre>sed -n <span><span>'</span>0~3p<span>'</span></span> filename

<span><span>#</span> catch 0: start; 3: step</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print every odd # lines</h5><a id="user-content-print-every-odd--lines" aria-label="Permalink: Print every odd # lines" href="#print-every-odd--lines"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Print every third line including the first line</h5><a id="user-content-print-every-third-line-including-the-first-line" aria-label="Permalink: Print every third line including the first line" href="#print-every-third-line-including-the-first-line"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Remove leading whitespace and tabs</h5><a id="user-content-remove-leading-whitespace-and-tabs" aria-label="Permalink: Remove leading whitespace and tabs" href="#remove-leading-whitespace-and-tabs"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed -e 's/^[ \t]*//'
# Notice a whitespace before '\t'!!"><pre>sed -e <span><span>'</span>s/^[ \t]*//<span>'</span></span>
<span><span>#</span> Notice a whitespace before '\t'!!</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Remove only leading whitespace</h5><a id="user-content-remove-only-leading-whitespace" aria-label="Permalink: Remove only leading whitespace" href="#remove-only-leading-whitespace"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed 's/ *//'

# notice a whitespace before '*'!!"><pre>sed <span><span>'</span>s/ *//<span>'</span></span>

<span><span>#</span> notice a whitespace before '*'!!</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Remove ending commas</h5><a id="user-content-remove-ending-commas" aria-label="Permalink: Remove ending commas" href="#remove-ending-commas"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Add a column to the end</h5><a id="user-content-add-a-column-to-the-end" aria-label="Permalink: Add a column to the end" href="#add-a-column-to-the-end"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed &quot;s/$/\t$i/&quot;
# $i is the valuable you want to add

# To add the filename to every last column of the file
for i in $(ls); do sed -i &quot;s/$/\t$i/&quot; $i; done"><pre>sed <span><span>"</span>s/$/\t<span>$i</span>/<span>"</span></span>
<span><span>#</span> $i is the valuable you want to add</span>

<span><span>#</span> To add the filename to every last column of the file</span>
<span>for</span> <span>i</span> <span>in</span> <span><span>$(</span>ls<span>)</span></span><span>;</span> <span>do</span> sed -i <span><span>"</span>s/$/\t<span>$i</span>/<span>"</span></span> <span>$i</span><span>;</span> <span>done</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Add extension of filename to last column</h5><a id="user-content-add-extension-of-filename-to-last-column" aria-label="Permalink: Add extension of filename to last column" href="#add-extension-of-filename-to-last-column"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="for i in T000086_1.02.n T000086_1.02.p; do sed &quot;s/$/\t${i/*./}/&quot; $i; done >T000086_1.02.np"><pre><span>for</span> <span>i</span> <span>in</span> T000086_1.02.n T000086_1.02.p<span>;</span> <span>do</span> sed <span><span>"</span>s/$/\t<span>${i<span>/*</span>.<span>/</span>}</span>/<span>"</span></span> <span>$i</span><span>;</span> <span>done</span> <span>&gt;</span>T000086_1.02.np</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Remove newline\ nextline</h5><a id="user-content-remove-newline-nextline" aria-label="Permalink: Remove newline\ nextline" href="#remove-newline-nextline"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Print a particular line (e.g. 123th line)</h5><a id="user-content-print-a-particular-line-eg-123th-line" aria-label="Permalink: Print a particular line (e.g. 123th line)" href="#print-a-particular-line-eg-123th-line"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Print a number of lines (e.g. line 10th to line 33 rd)</h5><a id="user-content-print-a-number-of-lines-eg-line-10th-to-line-33-rd" aria-label="Permalink: Print a number of lines (e.g. line 10th to line 33 rd)" href="#print-a-number-of-lines-eg-line-10th-to-line-33-rd"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed -n '10,33p' <filename"><pre>sed -n <span><span>'</span>10,33p<span>'</span></span> <span>&lt;</span>filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Change delimiter</h5><a id="user-content-change-delimiter" aria-label="Permalink: Change delimiter" href="#change-delimiter"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Replace with wildcard (e.g A-1-e or A-2-e or A-3-e....)</h5><a id="user-content-replace-with-wildcard-eg-a-1-e-or-a-2-e-or-a-3-e" aria-label="Permalink: Replace with wildcard (e.g A-1-e or A-2-e or A-3-e....)" href="#replace-with-wildcard-eg-a-1-e-or-a-2-e-or-a-3-e"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed 's/A-.*-e//g' filename"><pre>sed <span><span>'</span>s/A-.*-e//g<span>'</span></span> filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Remove last character of file</h5><a id="user-content-remove-last-character-of-file" aria-label="Permalink: Remove last character of file" href="#remove-last-character-of-file"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Insert character at specified position of file (e.g. AAAAAA --&gt; AAA#AAA)</h5><a id="user-content-insert-character-at-specified-position-of-file-eg-aaaaaa----aaaaaa" aria-label="Permalink: Insert character at specified position of file (e.g. AAAAAA --> AAA#AAA)" href="#insert-character-at-specified-position-of-file-eg-aaaaaa----aaaaaa"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sed -r -e 's/^.{3}/&amp;#/' file"><pre>sed -r -e <span><span>'</span>s/^.{3}/&amp;#/<span>'</span></span> file</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Awk</h2><a id="user-content-awk" aria-label="Permalink: Awk" href="#awk"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Set tab as field separator</h5><a id="user-content-set-tab-as-field-separator" aria-label="Permalink: Set tab as field separator" href="#set-tab-as-field-separator"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Output as tab separated (also as field separator)</h5><a id="user-content-output-as-tab-separated-also-as-field-separator" aria-label="Permalink: Output as tab separated (also as field separator)" href="#output-as-tab-separated-also-as-field-separator"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Pass variable</h5><a id="user-content-pass-variable" aria-label="Permalink: Pass variable" href="#pass-variable"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="a=bbo;b=obb;
awk -v a=&quot;$a&quot; -v b=&quot;$b&quot; &quot;$1==a &amp;&amp; $10=b&quot; filename"><pre>a=bbo<span>;</span>b=obb<span>;</span>
awk -v a=<span><span>"</span><span>$a</span><span>"</span></span> -v b=<span><span>"</span><span>$b</span><span>"</span></span> <span><span>"</span><span>$1</span>==a &amp;&amp; <span>$1</span>0=b<span>"</span></span> filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print line number and number of characters on each line</h5><a id="user-content-print-line-number-and-number-of-characters-on-each-line" aria-label="Permalink: Print line number and number of characters on each line" href="#print-line-number-and-number-of-characters-on-each-line"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="awk '{print NR,length($0);}' filename"><pre>awk <span><span>'</span>{print NR,length($0);}<span>'</span></span> filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Find number of columns</h5><a id="user-content-find-number-of-columns" aria-label="Permalink: Find number of columns" href="#find-number-of-columns"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Reverse column order</h5><a id="user-content-reverse-column-order" aria-label="Permalink: Reverse column order" href="#reverse-column-order"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Check if there is a comma in a column (e.g. column $1)</h5><a id="user-content-check-if-there-is-a-comma-in-a-column-eg-column-1" aria-label="Permalink: Check if there is a comma in a column (e.g. column $1)" href="#check-if-there-is-a-comma-in-a-column-eg-column-1"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Split and do for loop</h5><a id="user-content-split-and-do-for-loop" aria-label="Permalink: Split and do for loop" href="#split-and-do-for-loop"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="awk '{split($2, a,&quot;,&quot;);for (i in a) print $1&quot;\t&quot;a[i]}' filename"><pre>awk <span><span>'</span>{split($2, a,",");for (i in a) print $1"\t"a[i]}<span>'</span></span> filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print all lines before nth occurrence of a string (e.g stop print lines when 'bbo' appears 7 times)</h5><a id="user-content-print-all-lines-before-nth-occurrence-of-a-string-eg-stop-print-lines-when-bbo-appears-7-times" aria-label="Permalink: Print all lines before nth occurrence of a string (e.g stop print lines when 'bbo' appears 7 times)" href="#print-all-lines-before-nth-occurrence-of-a-string-eg-stop-print-lines-when-bbo-appears-7-times"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="awk -v N=7 '{print}/bbo/&amp;&amp; --N<=0 {exit}'"><pre>awk -v N=7 <span><span>'</span>{print}/bbo/&amp;&amp; --N&lt;=0 {exit}<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print filename and last line of all files in directory</h5><a id="user-content-print-filename-and-last-line-of-all-files-in-directory" aria-label="Permalink: Print filename and last line of all files in directory" href="#print-filename-and-last-line-of-all-files-in-directory"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ls|xargs -n1 -I file awk '{s=$0};END{print FILENAME,s}' file"><pre>ls<span>|</span>xargs -n1 -I file awk <span><span>'</span>{s=$0};END{print FILENAME,s}<span>'</span></span> file</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Add string to the beginning of a column (e.g add "chr" to column $3)</h5><a id="user-content-add-string-to-the-beginning-of-a-column-eg-add-chr-to-column-3" aria-label="Permalink: Add string to the beginning of a column (e.g add &quot;chr&quot; to column $3)" href="#add-string-to-the-beginning-of-a-column-eg-add-chr-to-column-3"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="awk 'BEGIN{OFS=&quot;\t&quot;}$3=&quot;chr&quot;$3'"><pre>awk <span><span>'</span>BEGIN{OFS="\t"}$3="chr"$3<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Remove lines with string (e.g. 'bbo')</h5><a id="user-content-remove-lines-with-string-eg-bbo-1" aria-label="Permalink: Remove lines with string (e.g. 'bbo')" href="#remove-lines-with-string-eg-bbo-1"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Remove last column</h5><a id="user-content-remove-last-column" aria-label="Permalink: Remove last column" href="#remove-last-column"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Usage and meaning of NR and FNR</h5><a id="user-content-usage-and-meaning-of-nr-and-fnr" aria-label="Permalink: Usage and meaning of NR and FNR" href="#usage-and-meaning-of-nr-and-fnr"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# For example there are two files:
# fileA:
# a
# b
# c
# fileB:
# d
# e
awk 'print FILENAME, NR,FNR,$0}' fileA fileB
# fileA    1    1    a
# fileA    2    2    b
# fileA    3    3    c
# fileB    4    1    d
# fileB    5    2    e"><pre><span><span>#</span> For example there are two files:</span>
<span><span>#</span> fileA:</span>
<span><span>#</span> a</span>
<span><span>#</span> b</span>
<span><span>#</span> c</span>
<span><span>#</span> fileB:</span>
<span><span>#</span> d</span>
<span><span>#</span> e</span>
awk <span><span>'</span>print FILENAME, NR,FNR,$0}<span>'</span></span> fileA fileB
<span><span>#</span> fileA    1    1    a</span>
<span><span>#</span> fileA    2    2    b</span>
<span><span>#</span> fileA    3    3    c</span>
<span><span>#</span> fileB    4    1    d</span>
<span><span>#</span> fileB    5    2    e</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">AND gate</h5><a id="user-content-and-gate" aria-label="Permalink: AND gate" href="#and-gate"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# For example there are two files:
# fileA:
# 1    0
# 2    1
# 3    1
# 4    0
# fileB:
# 1    0
# 2    1
# 3    0
# 4    1

awk -v OFS='\t' 'NR=FNR{a[$1]=$2;next} NF {print $1,((a[$1]=$2)? $2:&quot;0&quot;)}' fileA fileB
# 1    0
# 2    1
# 3    0
# 4    0"><pre><span><span>#</span> For example there are two files:</span>
<span><span>#</span> fileA:</span>
<span><span>#</span> 1    0</span>
<span><span>#</span> 2    1</span>
<span><span>#</span> 3    1</span>
<span><span>#</span> 4    0</span>
<span><span>#</span> fileB:</span>
<span><span>#</span> 1    0</span>
<span><span>#</span> 2    1</span>
<span><span>#</span> 3    0</span>
<span><span>#</span> 4    1</span>

awk -v OFS=<span><span>'</span>\t<span>'</span></span> <span><span>'</span>NR=FNR{a[$1]=$2;next} NF {print $1,((a[$1]=$2)? $2:"0")}<span>'</span></span> fileA fileB
<span><span>#</span> 1    0</span>
<span><span>#</span> 2    1</span>
<span><span>#</span> 3    0</span>
<span><span>#</span> 4    0</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Round all numbers of file (e.g. 2 significant figure)</h5><a id="user-content-round-all-numbers-of-file-eg-2-significant-figure" aria-label="Permalink: Round all numbers of file (e.g. 2 significant figure)" href="#round-all-numbers-of-file-eg-2-significant-figure"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="awk '{while (match($0, /[0-9]+\[0-9]+/)){
    \printf &quot;%s%.2f&quot;, substr($0,0,RSTART-1),substr($0,RSTART,RLENGTH)
    \$0=substr($0, RSTART+RLENGTH)
    \}
    \print
    \}'"><pre>awk <span><span>'</span>{while (match($0, /[0-9]+\[0-9]+/)){</span>
<span>    \printf "%s%.2f", substr($0,0,RSTART-1),substr($0,RSTART,RLENGTH)</span>
<span>    \$0=substr($0, RSTART+RLENGTH)</span>
<span>    \}</span>
<span>    \print</span>
<span>    \}<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Give number/index to every row</h5><a id="user-content-give-numberindex-to-every-row" aria-label="Permalink: Give number/index to every row" href="#give-numberindex-to-every-row"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="awk '{printf(&quot;%s\t%s\n&quot;,NR,$0)}'"><pre>awk <span><span>'</span>{printf("%s\t%s\n",NR,$0)}<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Break combine column data into rows</h5><a id="user-content-break-combine-column-data-into-rows" aria-label="Permalink: Break combine column data into rows" href="#break-combine-column-data-into-rows"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# For example, separate the following content:
# David    cat,dog
# into
# David    cat
# David    dog

awk '{split($2,a,&quot;,&quot;);for(i in a)print $1&quot;\t&quot;a[i]}' file

# Detail here:　http://stackoverflow.com/questions/33408762/bash-turning-single-comma-separated-column-into-multi-line-string"><pre><span><span>#</span> For example, separate the following content:</span>
<span><span>#</span> David    cat,dog</span>
<span><span>#</span> into</span>
<span><span>#</span> David    cat</span>
<span><span>#</span> David    dog</span>

awk <span><span>'</span>{split($2,a,",");for(i in a)print $1"\t"a[i]}<span>'</span></span> file

<span><span>#</span> Detail here:　http://stackoverflow.com/questions/33408762/bash-turning-single-comma-separated-column-into-multi-line-string</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Average a file (each line in file contains only one number)</h5><a id="user-content-average-a-file-each-line-in-file-contains-only-one-number" aria-label="Permalink: Average a file (each line in file contains only one number)" href="#average-a-file-each-line-in-file-contains-only-one-number"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="awk '{s+=$1}END{print s/NR}'"><pre>awk <span><span>'</span>{s+=$1}END{print s/NR}<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print field start with string (e.g Linux)</h5><a id="user-content-print-field-start-with-string-eg-linux" aria-label="Permalink: Print field start with string (e.g Linux)" href="#print-field-start-with-string-eg-linux"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Sort a row (e.g. 1 40  35  12  23  --&gt; 1 12    23  35  40)</h5><a id="user-content-sort-a-row-eg-1-40--35--12--23-----1-12----23--35--40" aria-label="Permalink: Sort a row (e.g. 1 40  35  12  23  --> 1 12    23  35  40)" href="#sort-a-row-eg-1-40--35--12--23-----1-12----23--35--40"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="awk ' {split( $0, a, &quot;\t&quot; ); asort( a ); for( i = 1; i <= length(a); i++ ) printf( &quot;%s\t&quot;, a[i] ); printf( &quot;\n&quot; ); }'"><pre>awk <span><span>'</span> {split( $0, a, "\t" ); asort( a ); for( i = 1; i &lt;= length(a); i++ ) printf( "%s\t", a[i] ); printf( "\n" ); }<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Subtract previous row values (add column6 which equal to column4 minus last column5)</h5><a id="user-content-subtract-previous-row-values-add-column6-which-equal-to-column4-minus-last-column5" aria-label="Permalink: Subtract previous row values (add column6 which equal to column4 minus last column5)" href="#subtract-previous-row-values-add-column6-which-equal-to-column4-minus-last-column5"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="awk '{$6 = $4 - prev5; prev5 = $5; print;}'"><pre>awk <span><span>'</span>{$6 = $4 - prev5; prev5 = $5; print;}<span>'</span></span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Xargs</h2><a id="user-content-xargs" aria-label="Permalink: Xargs" href="#xargs"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Set tab as delimiter (default:space)</h5><a id="user-content-set-tab-as-delimiter-defaultspace" aria-label="Permalink: Set tab as delimiter (default:space)" href="#set-tab-as-delimiter-defaultspace"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Prompt commands before running commands</h5><a id="user-content-prompt-commands-before-running-commands" aria-label="Permalink: Prompt commands before running commands" href="#prompt-commands-before-running-commands"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Display 3 items per line</h5><a id="user-content-display-3-items-per-line" aria-label="Permalink: Display 3 items per line" href="#display-3-items-per-line"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="echo 1 2 3 4 5 6| xargs -n 3
# 1 2 3
# 4 5 6
"><pre><span>echo</span> 1 2 3 4 5 6<span>|</span> xargs -n 3
<span><span>#</span> 1 2 3</span>
<span><span>#</span> 4 5 6</span>
</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Prompt before execution</h5><a id="user-content-prompt-before-execution" aria-label="Permalink: Prompt before execution" href="#prompt-before-execution"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="echo a b c |xargs -p -n 3"><pre><span>echo</span> a b c <span>|</span>xargs -p -n 3</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print command along with output</h5><a id="user-content-print-command-along-with-output" aria-label="Permalink: Print command along with output" href="#print-command-along-with-output"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="xargs -t abcd
# bin/echo abcd
# abcd
"><pre>xargs -t abcd
<span><span>#</span> bin/echo abcd</span>
<span><span>#</span> abcd</span>
</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">With find and rm</h5><a id="user-content-with-find-and-rm" aria-label="Permalink: With find and rm" href="#with-find-and-rm"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="find . -name &quot;*.html&quot;|xargs rm

# when using a backtick
rm `find . -name &quot;*.html&quot;`"><pre>find <span>.</span> -name <span><span>"</span>*.html<span>"</span></span><span>|</span>xargs rm

<span><span>#</span> when using a backtick</span>
rm <span><span>`</span>find <span>.</span> -name <span><span>"</span>*.html<span>"</span></span><span>`</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Delete files with whitespace in filename (e.g. "hello 2001")</h5><a id="user-content-delete-files-with-whitespace-in-filename-eg-hello-2001" aria-label="Permalink: Delete files with whitespace in filename (e.g. &quot;hello 2001&quot;)" href="#delete-files-with-whitespace-in-filename-eg-hello-2001"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="find . -name &quot;*.c&quot; -print0|xargs -0 rm -rf"><pre>find <span>.</span> -name <span><span>"</span>*.c<span>"</span></span> -print0<span>|</span>xargs -0 rm -rf</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Show limits on command-line length</h5><a id="user-content-show-limits-on-command-line-length" aria-label="Permalink: Show limits on command-line length" href="#show-limits-on-command-line-length"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="xargs --show-limits
# Output from my Ubuntu:
# Your environment variables take up 3653 bytes
# POSIX upper limit on argument length (this system): 2091451
# POSIX smallest allowable upper limit on argument length (all systems): 4096
# Maximum length of command we could actually use: 2087798
# Size of command buffer we are actually using: 131072
# Maximum parallelism (--max-procs must be no greater): 2147483647"><pre>xargs --show-limits
<span><span>#</span> Output from my Ubuntu:</span>
<span><span>#</span> Your environment variables take up 3653 bytes</span>
<span><span>#</span> POSIX upper limit on argument length (this system): 2091451</span>
<span><span>#</span> POSIX smallest allowable upper limit on argument length (all systems): 4096</span>
<span><span>#</span> Maximum length of command we could actually use: 2087798</span>
<span><span>#</span> Size of command buffer we are actually using: 131072</span>
<span><span>#</span> Maximum parallelism (--max-procs must be no greater): 2147483647</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Move files to folder</h5><a id="user-content-move-files-to-folder" aria-label="Permalink: Move files to folder" href="#move-files-to-folder"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="find . -name &quot;*.bak&quot; -print 0|xargs -0 -I {} mv {} ~/old

# or
find . -name &quot;*.bak&quot; -print 0|xargs -0 -I file mv file ~/old"><pre>find <span>.</span> -name <span><span>"</span>*.bak<span>"</span></span> -print 0<span>|</span>xargs -0 -I {} mv {} <span>~</span>/old

<span><span>#</span> or</span>
find <span>.</span> -name <span><span>"</span>*.bak<span>"</span></span> -print 0<span>|</span>xargs -0 -I file mv file <span>~</span>/old</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Move first 100th files to a directory (e.g. d1)</h5><a id="user-content-move-first-100th-files-to-a-directory-eg-d1" aria-label="Permalink: Move first 100th files to a directory (e.g. d1)" href="#move-first-100th-files-to-a-directory-eg-d1"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ls |head -100|xargs -I {} mv {} d1"><pre>ls <span>|</span>head -100<span>|</span>xargs -I {} mv {} d1</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Parallel</h5><a id="user-content-parallel" aria-label="Permalink: Parallel" href="#parallel"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="time echo {1..5} |xargs -n 1 -P 5 sleep

# a lot faster than:
time echo {1..5} |xargs -n1 sleep"><pre><span>time</span> <span>echo</span> {1..5} <span>|</span>xargs -n 1 -P 5 sleep

<span><span>#</span> a lot faster than:</span>
<span>time</span> <span>echo</span> {1..5} <span>|</span>xargs -n1 sleep</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Copy all files from A to B</h5><a id="user-content-copy-all-files-from-a-to-b" aria-label="Permalink: Copy all files from A to B" href="#copy-all-files-from-a-to-b"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="find /dir/to/A -type f -name &quot;*.py&quot; -print 0| xargs -0 -r -I file cp -v -p file --target-directory=/path/to/B

# v: verbose|
# p: keep detail (e.g. owner)
"><pre>find /dir/to/A -type f -name <span><span>"</span>*.py<span>"</span></span> -print 0<span>|</span> xargs -0 -r -I file cp -v -p file --target-directory=/path/to/B

<span><span>#</span> v: verbose|</span>
<span><span>#</span> p: keep detail (e.g. owner)</span>
</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">With sed</h5><a id="user-content-with-sed" aria-label="Permalink: With sed" href="#with-sed"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ls |xargs -n1 -I file sed -i '/^Pos/d' file"><pre>ls <span>|</span>xargs -n1 -I file sed -i <span><span>'</span>/^Pos/d<span>'</span></span> file</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Add the file name to the first line of file</h5><a id="user-content-add-the-file-name-to-the-first-line-of-file" aria-label="Permalink: Add the file name to the first line of file" href="#add-the-file-name-to-the-first-line-of-file"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ls |sed 's/.txt//g'|xargs -n1 -I file sed -i -e '1 i\>file\' file.txt"><pre>ls <span>|</span>sed <span><span>'</span>s/.txt//g<span>'</span></span><span>|</span>xargs -n1 -I file sed -i -e <span><span>'</span>1 i\&gt;file\<span>'</span></span> file.txt</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Count all files</h5><a id="user-content-count-all-files" aria-label="Permalink: Count all files" href="#count-all-files"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Turn output into a single line</h5><a id="user-content-turn-output-into-a-single-line" aria-label="Permalink: Turn output into a single line" href="#turn-output-into-a-single-line"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Count files within directories</h5><a id="user-content-count-files-within-directories" aria-label="Permalink: Count files within directories" href="#count-files-within-directories"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="echo mso{1..8}|xargs -n1 bash -c 'echo -n &quot;$1:&quot;; ls -la &quot;$1&quot;| grep -w 74 |wc -l' --
# &quot;--&quot; signals the end of options and display further option processing"><pre><span>echo</span> mso{1..8}<span>|</span>xargs -n1 bash -c <span><span>'</span>echo -n "$1:"; ls -la "$1"| grep -w 74 |wc -l<span>'</span></span> --
<span><span>#</span> "--" signals the end of options and display further option processing</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Count lines in all file, also count total lines</h5><a id="user-content-count-lines-in-all-file-also-count-total-lines" aria-label="Permalink: Count lines in all file, also count total lines" href="#count-lines-in-all-file-also-count-total-lines"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Xargs and grep</h5><a id="user-content-xargs-and-grep" aria-label="Permalink: Xargs and grep" href="#xargs-and-grep"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cat grep_list |xargs -I{} grep {} filename"><pre>cat grep_list <span>|</span>xargs -I{} grep {} filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Xargs and sed (replace all old ip address with new ip address under /etc directory)</h5><a id="user-content-xargs-and-sed-replace-all-old-ip-address-with-new-ip-address-under-etc-directory" aria-label="Permalink: Xargs and sed (replace all old ip address with new ip address under /etc directory)" href="#xargs-and-sed-replace-all-old-ip-address-with-new-ip-address-under-etc-directory"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="grep -rl '192.168.1.111' /etc | xargs sed -i 's/192.168.1.111/192.168.2.111/g'"><pre>grep -rl <span><span>'</span>192.168.1.111<span>'</span></span> /etc <span>|</span> xargs sed -i <span><span>'</span>s/192.168.1.111/192.168.2.111/g<span>'</span></span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Find</h2><a id="user-content-find" aria-label="Permalink: Find" href="#find"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">List all sub directory/file in the current directory</h5><a id="user-content-list-all-sub-directoryfile-in-the-current-directory" aria-label="Permalink: List all sub directory/file in the current directory" href="#list-all-sub-directoryfile-in-the-current-directory"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">List all files under the current directory</h5><a id="user-content-list-all-files-under-the-current-directory" aria-label="Permalink: List all files under the current directory" href="#list-all-files-under-the-current-directory"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">List all directories under the current directory</h5><a id="user-content-list-all-directories-under-the-current-directory" aria-label="Permalink: List all directories under the current directory" href="#list-all-directories-under-the-current-directory"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Edit all files under current directory (e.g. replace 'www' with 'ww')</h5><a id="user-content-edit-all-files-under-current-directory-eg-replace-www-with-ww" aria-label="Permalink: Edit all files under current directory (e.g. replace 'www' with 'ww')" href="#edit-all-files-under-current-directory-eg-replace-www-with-ww"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="find . -name '*.php' -exec sed -i 's/www/w/g' {} \;

# if there are no subdirectory
replace &quot;www&quot; &quot;w&quot; -- *
# a space before *"><pre>find <span>.</span> -name <span><span>'</span>*.php<span>'</span></span> -exec sed -i <span><span>'</span>s/www/w/g<span>'</span></span> {} <span>\;</span>

<span><span>#</span> if there are no subdirectory</span>
replace <span><span>"</span>www<span>"</span></span> <span><span>"</span>w<span>"</span></span> -- <span>*</span>
<span><span>#</span> a space before *</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Find and output only filename (e.g. "mso")</h5><a id="user-content-find-and-output-only-filename-eg-mso" aria-label="Permalink: Find and output only filename (e.g. &quot;mso&quot;)" href="#find-and-output-only-filename-eg-mso"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="find mso*/ -name M* -printf &quot;%f\n&quot;"><pre>find mso<span>*</span>/ -name M<span>*</span> -printf <span><span>"</span>%f\n<span>"</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Find large files in the system (e.g. &gt;4G)</h5><a id="user-content-find-large-files-in-the-system-eg-4g" aria-label="Permalink: Find large files in the system (e.g. >4G)" href="#find-large-files-in-the-system-eg-4g"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Find and delete file with size less than (e.g. 74 byte)</h5><a id="user-content-find-and-delete-file-with-size-less-than-eg-74-byte" aria-label="Permalink: Find and delete file with size less than (e.g. 74 byte)" href="#find-and-delete-file-with-size-less-than-eg-74-byte"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="find . -name &quot;*.mso&quot; -size -74c -delete

# M for MB, etc"><pre>find <span>.</span> -name <span><span>"</span>*.mso<span>"</span></span> -size -74c -delete

<span><span>#</span> M for MB, etc</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Find empty (0 byte) files</h5><a id="user-content-find-empty-0-byte-files" aria-label="Permalink: Find empty (0 byte) files" href="#find-empty-0-byte-files"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="find . -type f -empty
# to further delete all the empty files
find . -type f -empty -delete"><pre>find <span>.</span> -type f -empty
<span><span>#</span> to further delete all the empty files</span>
find <span>.</span> -type f -empty -delete</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Recursively count all the files in a directory</h5><a id="user-content-recursively-count-all-the-files-in-a-directory" aria-label="Permalink: Recursively count all the files in a directory" href="#recursively-count-all-the-files-in-a-directory"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Condition and loop</h2><a id="user-content-condition-and-loop" aria-label="Permalink: Condition and loop" href="#condition-and-loop"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">If statement</h5><a id="user-content-if-statement" aria-label="Permalink: If statement" href="#if-statement"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# if and else loop for string matching
if [[ &quot;$c&quot; == &quot;read&quot; ]]; then outputdir=&quot;seq&quot;; else outputdir=&quot;write&quot; ; fi

# Test if myfile contains the string 'test':
if grep -q hello myfile; then echo -e &quot;file contains the string!&quot; ; fi

# Test if mydir is a directory, change to it and do other stuff:
if cd mydir; then
  echo 'some content' >myfile
else
  echo >&amp;2 &quot;Fatal error. This script requires mydir.&quot;
fi

# if variable is null
if [ ! -s &quot;myvariable&quot; ]; then echo -e &quot;variable is null!&quot; ; fi
#True of the length if &quot;STRING&quot; is zero.

# Using test command (same as []), to test if the length of variable is nonzero
test -n &quot;$myvariable&quot; &amp;&amp; echo myvariable is &quot;$myvariable&quot; || echo myvariable is not set

# Test if file exist
if [ -e 'filename' ]
then
  echo -e &quot;file exists!&quot;
fi

# Test if file exist but also including symbolic links:
if [ -e myfile ] || [ -L myfile ]
then
  echo -e &quot;file exists!&quot;
fi

# Test if the value of x is greater or equal than 5
if [ &quot;$x&quot; -ge 5 ]; then echo -e &quot;greater or equal than 5!&quot; ; fi

# Test if the value of x is greater or equal than 5, in bash/ksh/zsh:
if ((x >= 5)); then echo -e &quot;greater or equal than 5!&quot; ; fi

# Use (( )) for arithmetic operation
if ((j==u+2)); then echo -e &quot;j==u+2!!&quot; ; fi

# Use [[ ]] for comparison
if [[ $age -gt 21 ]]; then echo -e &quot;forever 21!!&quot; ; fi
"><pre><span><span>#</span> if and else loop for string matching</span>
<span>if</span> [[ <span><span>"</span><span>$c</span><span>"</span></span> <span>==</span> <span><span>"</span>read<span>"</span></span> ]]<span>;</span> <span>then</span> outputdir=<span><span>"</span>seq<span>"</span></span><span>;</span> <span>else</span> outputdir=<span><span>"</span>write<span>"</span></span> <span>;</span> <span>fi</span>

<span><span>#</span> Test if myfile contains the string 'test':</span>
<span>if</span> grep -q hello myfile<span>;</span> <span>then</span> <span>echo</span> -e <span><span>"</span>file contains the string!<span>"</span></span> <span>;</span> <span>fi</span>

<span><span>#</span> Test if mydir is a directory, change to it and do other stuff:</span>
<span>if</span> <span>cd</span> mydir<span>;</span> <span>then</span>
  <span>echo</span> <span><span>'</span>some content<span>'</span></span> <span>&gt;</span>myfile
<span>else</span>
  <span>echo</span> <span>&gt;&amp;2</span> <span><span>"</span>Fatal error. This script requires mydir.<span>"</span></span>
<span>fi</span>

<span><span>#</span> if variable is null</span>
<span>if</span> [ <span>!</span> <span>-s</span> <span><span>"</span>myvariable<span>"</span></span> ]<span>;</span> <span>then</span> <span>echo</span> -e <span><span>"</span>variable is null!<span>"</span></span> <span>;</span> <span>fi</span>
<span><span>#</span>True of the length if "STRING" is zero.</span>

<span><span>#</span> Using test command (same as []), to test if the length of variable is nonzero</span>
<span>test</span> -n <span><span>"</span><span>$myvariable</span><span>"</span></span> <span>&amp;&amp;</span> <span>echo</span> myvariable is <span><span>"</span><span>$myvariable</span><span>"</span></span> <span>||</span> <span>echo</span> myvariable is not <span>set</span>

<span><span>#</span> Test if file exist</span>
<span>if</span> [ <span>-e</span> <span><span>'</span>filename<span>'</span></span> ]
<span>then</span>
  <span>echo</span> -e <span><span>"</span>file exists!<span>"</span></span>
<span>fi</span>

<span><span>#</span> Test if file exist but also including symbolic links:</span>
<span>if</span> [ <span>-e</span> myfile ] <span>||</span> [ <span>-L</span> myfile ]
<span>then</span>
  <span>echo</span> -e <span><span>"</span>file exists!<span>"</span></span>
<span>fi</span>

<span><span>#</span> Test if the value of x is greater or equal than 5</span>
<span>if</span> [ <span><span>"</span><span>$x</span><span>"</span></span> <span>-ge</span> 5 ]<span>;</span> <span>then</span> <span>echo</span> -e <span><span>"</span>greater or equal than 5!<span>"</span></span> <span>;</span> <span>fi</span>

<span><span>#</span> Test if the value of x is greater or equal than 5, in bash/ksh/zsh:</span>
<span>if</span> <span><span>((</span>x <span>&gt;=</span> <span>5</span><span>))</span></span><span>;</span> <span>then</span> <span>echo</span> -e <span><span>"</span>greater or equal than 5!<span>"</span></span> <span>;</span> <span>fi</span>

<span><span>#</span> Use (( )) for arithmetic operation</span>
<span>if</span> <span><span>((</span>j<span>==</span>u<span>+</span><span>2</span><span>))</span></span><span>;</span> <span>then</span> <span>echo</span> -e <span><span>"</span>j==u+2!!<span>"</span></span> <span>;</span> <span>fi</span>

<span><span>#</span> Use [[ ]] for comparison</span>
<span>if</span> [[ <span>$age</span> <span>-gt</span> 21 ]]<span>;</span> <span>then</span> <span>echo</span> -e <span><span>"</span>forever 21!!<span>"</span></span> <span>;</span> <span>fi</span>
</pre></div>
<p dir="auto"><a href="http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_01.html" rel="nofollow">More if commands</a></p>
<p dir="auto"><h5 tabindex="-1" dir="auto">For loop</h5><a id="user-content-for-loop" aria-label="Permalink: For loop" href="#for-loop"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Echo the file name under the current directory
for i in $(ls); do echo file $i; done
#or
for i in *; do echo file $i; done

# Make directories listed in a file (e.g. myfile)
for dir in $(<myfile); do mkdir $dir; done

# Press any key to continue each loop
for i in $(cat tpc_stats_0925.log |grep failed|grep -o '\query\w\{1,2\}'); do cat ${i}.log; read -rsp $'Press any key to continue...\n' -n1 key; done

# Print a file line by line when a key is pressed,
oifs=&quot;$IFS&quot;; IFS=$'\n'; for line in $(cat myfile); do ...; done
while read -r line; do ...; done <myfile

#If only one word a line, simply
for line in $(cat myfile); do echo $line; read -n1; done

#Loop through an array
for i in &quot;${arrayName[@]}&quot;; do echo $i; done
"><pre><span><span>#</span> Echo the file name under the current directory</span>
<span>for</span> <span>i</span> <span>in</span> <span><span>$(</span>ls<span>)</span></span><span>;</span> <span>do</span> <span>echo</span> file <span>$i</span><span>;</span> <span>done</span>
<span><span>#</span>or</span>
<span>for</span> <span>i</span> <span>in</span> <span>*</span><span>;</span> <span>do</span> <span>echo</span> file <span>$i</span><span>;</span> <span>done</span>

<span><span>#</span> Make directories listed in a file (e.g. myfile)</span>
<span>for</span> <span>dir</span> <span>in</span> <span><span>$(</span><span>&lt;</span>myfile<span>)</span></span><span>;</span> <span>do</span> mkdir <span>$dir</span><span>;</span> <span>done</span>

<span><span>#</span> Press any key to continue each loop</span>
<span>for</span> <span>i</span> <span>in</span> <span><span>$(</span>cat tpc_stats_0925.log <span>|</span>grep failed<span>|</span>grep -o <span><span>'</span>\query\w\{1,2\}<span>'</span></span><span>)</span></span><span>;</span> <span>do</span> cat <span>${i}</span>.log<span>;</span> <span>read</span> -rsp <span><span>$'</span>Press any key to continue...<span>\n</span><span>'</span></span> -n1 key<span>;</span> <span>done</span>

<span><span>#</span> Print a file line by line when a key is pressed,</span>
oifs=<span><span>"</span><span>$IFS</span><span>"</span></span><span>;</span> IFS=<span><span>$'</span><span>\n</span><span>'</span></span><span>;</span> <span>for</span> <span>line</span> <span>in</span> <span><span>$(</span>cat myfile<span>)</span></span><span>;</span> <span>do</span> ...<span>;</span> <span>done</span>
<span>while</span> <span>read</span> -r line<span>;</span> <span>do</span> ...<span>;</span> <span>done</span> <span>&lt;</span>myfile

<span><span>#</span>If only one word a line, simply</span>
<span>for</span> <span>line</span> <span>in</span> <span><span>$(</span>cat myfile<span>)</span></span><span>;</span> <span>do</span> <span>echo</span> <span>$line</span><span>;</span> <span>read</span> -n1<span>;</span> <span>done</span>

<span><span>#</span>Loop through an array</span>
<span>for</span> <span>i</span> <span>in</span> <span><span>"</span><span>${arrayName[@]}</span><span>"</span></span><span>;</span> <span>do</span> <span>echo</span> <span>$i</span><span>;</span> <span>done</span>
</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">While loop,</h5><a id="user-content-while-loop" aria-label="Permalink: While loop," href="#while-loop"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Column subtraction of a file (e.g. a 3 columns file)
while read a b c; do echo $(($c-$b)); done < <(head filename)
#there is a space between the two '<'s

# Sum up column subtraction
i=0; while read a b c; do ((i+=$c-$b)); echo $i; done < <(head filename)

# Keep checking a running process (e.g. perl) and start another new process (e.g. python) immediately after it. (BETTER use the wait command! Ctrl+F 'wait')
while [[ $(pidof perl) ]]; do echo f; sleep 10; done &amp;&amp; python timetorunpython.py"><pre><span><span>#</span> Column subtraction of a file (e.g. a 3 columns file)</span>
<span>while</span> <span>read</span> a b c<span>;</span> <span>do</span> <span>echo</span> <span><span>$((</span><span>$c</span><span>-</span><span>$b</span><span>))</span></span><span>;</span> <span>done</span> <span>&lt;</span> <span><span>&lt;(</span>head filename<span>)</span></span>
<span><span>#</span>there is a space between the two '&lt;'s</span>

<span><span>#</span> Sum up column subtraction</span>
i=0<span>;</span> <span>while</span> <span>read</span> a b c<span>;</span> <span>do</span> <span><span>((</span>i<span>+=</span><span>$c</span><span>-</span><span>$b</span><span>))</span></span><span>;</span> <span>echo</span> <span>$i</span><span>;</span> <span>done</span> <span>&lt;</span> <span><span>&lt;(</span>head filename<span>)</span></span>

<span><span>#</span> Keep checking a running process (e.g. perl) and start another new process (e.g. python) immediately after it. (BETTER use the wait command! Ctrl+F 'wait')</span>
<span>while</span> [[ <span><span>$(</span>pidof perl<span>)</span></span> ]]<span>;</span> <span>do</span> <span>echo</span> f<span>;</span> sleep 10<span>;</span> <span>done</span> <span>&amp;&amp;</span> python timetorunpython.py</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">switch (case in bash)</h5><a id="user-content-switch-case-in-bash" aria-label="Permalink: switch (case in bash)" href="#switch-case-in-bash"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="read type;
case $type in
  '0')
    echo 'how'
    ;;
  '1')
    echo 'are'
    ;;
  '2')
    echo 'you'
    ;;
esac"><pre><span>read</span> <span>type</span><span>;</span>
<span>case</span> <span>$type</span> <span>in</span>
  <span><span>'</span>0<span>'</span></span>)
    <span>echo</span> <span><span>'</span>how<span>'</span></span>
    ;;
  <span><span>'</span>1<span>'</span></span>)
    <span>echo</span> <span><span>'</span>are<span>'</span></span>
    ;;
  <span><span>'</span>2<span>'</span></span>)
    <span>echo</span> <span><span>'</span>you<span>'</span></span>
    ;;
<span>esac</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Time</h2><a id="user-content-time" aria-label="Permalink: Time" href="#time"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Find out the time require for executing a command</h5><a id="user-content-find-out-the-time-require-for-executing-a-command" aria-label="Permalink: Find out the time require for executing a command" href="#find-out-the-time-require-for-executing-a-command"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Wait for some time (e.g 10s)</h5><a id="user-content-wait-for-some-time-eg-10s" aria-label="Permalink: Wait for some time (e.g 10s)" href="#wait-for-some-time-eg-10s"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Print date with formatting</h5><a id="user-content-print-date-with-formatting" aria-label="Permalink: Print date with formatting" href="#print-date-with-formatting"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="date +%F
# 2020-07-19

# or
date +'%d-%b-%Y-%H:%M:%S'
# 10-Apr-2020-21:54:40

# Returns the current time with nanoseconds.
date +&quot;%T.%N&quot;
# 11:42:18.664217000  

# Get the seconds since epoch (Jan 1 1970) for a given date (e.g Mar 16 2021)
date -d &quot;Mar 16 2021&quot; +%s
# 1615852800
# or
date -d &quot;Tue Mar 16 00:00:00 UTC 2021&quot;  +%s
# 1615852800  

# Convert the number of seconds since epoch back to date
date --date @1615852800
# Tue Mar 16 00:00:00 UTC 2021
"><pre>date +%F
<span><span>#</span> 2020-07-19</span>

<span><span>#</span> or</span>
date +<span><span>'</span>%d-%b-%Y-%H:%M:%S<span>'</span></span>
<span><span>#</span> 10-Apr-2020-21:54:40</span>

<span><span>#</span> Returns the current time with nanoseconds.</span>
date +<span><span>"</span>%T.%N<span>"</span></span>
<span><span>#</span> 11:42:18.664217000  </span>

<span><span>#</span> Get the seconds since epoch (Jan 1 1970) for a given date (e.g Mar 16 2021)</span>
date -d <span><span>"</span>Mar 16 2021<span>"</span></span> +%s
<span><span>#</span> 1615852800</span>
<span><span>#</span> or</span>
date -d <span><span>"</span>Tue Mar 16 00:00:00 UTC 2021<span>"</span></span>  +%s
<span><span>#</span> 1615852800  </span>

<span><span>#</span> Convert the number of seconds since epoch back to date</span>
date --date @1615852800
<span><span>#</span> Tue Mar 16 00:00:00 UTC 2021</span>
</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print current time point for N days ago or N days after</h5><a id="user-content-print-current-time-point-for-n-days-ago-or-n-days-after" aria-label="Permalink: Print current time point for N days ago or N days after" href="#print-current-time-point-for-n-days-ago-or-n-days-after"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# print current date first (for the following example)
date +&quot;%F %H:%M:%S&quot;
# 2023-03-11 16:17:09

# print the time that is 1 day ago
date -d&quot;1 day ago&quot; +&quot;%F %H:%M:%S&quot;
# 2023-03-10 16:17:09

# print the time that is 7 days ago
date -d&quot;7 days ago&quot; +&quot;%F %H:%M:%S&quot;
# 2023-03-04 16:17:09

# print the time that is a week ago
date -d&quot;1 week ago&quot; +&quot;%F %H:%M:%S&quot;
# 2023-03-04 16:17:09

# add 1 day to date
date -d&quot;-1 day ago&quot; +&quot;%F %H:%M:%S&quot;
# 2023-03-12 16:17:09"><pre><span><span>#</span> print current date first (for the following example)</span>
date +<span><span>"</span>%F %H:%M:%S<span>"</span></span>
<span><span>#</span> 2023-03-11 16:17:09</span>

<span><span>#</span> print the time that is 1 day ago</span>
date -d<span><span>"</span>1 day ago<span>"</span></span> +<span><span>"</span>%F %H:%M:%S<span>"</span></span>
<span><span>#</span> 2023-03-10 16:17:09</span>

<span><span>#</span> print the time that is 7 days ago</span>
date -d<span><span>"</span>7 days ago<span>"</span></span> +<span><span>"</span>%F %H:%M:%S<span>"</span></span>
<span><span>#</span> 2023-03-04 16:17:09</span>

<span><span>#</span> print the time that is a week ago</span>
date -d<span><span>"</span>1 week ago<span>"</span></span> +<span><span>"</span>%F %H:%M:%S<span>"</span></span>
<span><span>#</span> 2023-03-04 16:17:09</span>

<span><span>#</span> add 1 day to date</span>
date -d<span><span>"</span>-1 day ago<span>"</span></span> +<span><span>"</span>%F %H:%M:%S<span>"</span></span>
<span><span>#</span> 2023-03-12 16:17:09</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">wait for random duration (e.g. sleep 1-5 second, like adding a jitter)</h5><a id="user-content-wait-for-random-duration-eg-sleep-1-5-second-like-adding-a-jitter" aria-label="Permalink: wait for random duration (e.g. sleep 1-5 second, like adding a jitter)" href="#wait-for-random-duration-eg-sleep-1-5-second-like-adding-a-jitter"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sleep $[ ( $RANDOM % 5 ) + 1 ]"><pre>sleep $[ ( <span>$RANDOM</span> % 5 ) + 1 ]</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Log out your account after a certain period of time (e.g 10 seconds)</h5><a id="user-content-log-out-your-account-after-a-certain-period-of-time-eg-10-seconds" aria-label="Permalink: Log out your account after a certain period of time (e.g 10 seconds)" href="#log-out-your-account-after-a-certain-period-of-time-eg-10-seconds"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="TMOUT=10
#once you set this variable, logout timer start running!"><pre>TMOUT=10
<span><span>#</span>once you set this variable, logout timer start running!</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Set how long you want to run a command</h5><a id="user-content-set-how-long-you-want-to-run-a-command" aria-label="Permalink: Set how long you want to run a command" href="#set-how-long-you-want-to-run-a-command"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="#This will run the command 'sleep 10' for only 1 second.
timeout 1 sleep 10"><pre><span><span>#</span>This will run the command 'sleep 10' for only 1 second.</span>
timeout 1 sleep 10</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Set when you want to run a command (e.g 1 min from now)</h5><a id="user-content-set-when-you-want-to-run-a-command-eg-1-min-from-now" aria-label="Permalink: Set when you want to run a command (e.g 1 min from now)" href="#set-when-you-want-to-run-a-command-eg-1-min-from-now"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="at now + 1min  #time-units can be minutes, hours, days, or weeks
warning: commands will be executed using /bin/sh
at> echo hihigithub >~/itworks
at> <EOT>   # press Ctrl + D to exit
job 1 at Wed Apr 18 11:16:00 2018"><pre>at now + 1min  <span><span>#</span>time-units can be minutes, hours, days, or weeks</span>
warning: commands will be executed using /bin/sh
at<span>&gt;</span> <span>echo</span> hihigithub <span>&gt;</span>~/itworks
at<span>&gt;</span> <span>&lt;</span>EOT<span>&gt;</span>   <span><span>#</span> press Ctrl + D to exit</span>
job 1 at Wed Apr 18 11:16:00 2018</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Download</h2><a id="user-content-download" aria-label="Permalink: Download" href="#download"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Download the content of this README.md (the one your are viewing now)</h5><a id="user-content-download-the-content-of-this-readmemd-the-one-your-are-viewing-now" aria-label="Permalink: Download the content of this README.md (the one your are viewing now)" href="#download-the-content-of-this-readmemd-the-one-your-are-viewing-now"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="curl https://raw.githubusercontent.com/onceupon/Bash-Oneliner/master/README.md | pandoc -f markdown -t man | man -l -

# or w3m (a text based web browser and pager)
curl https://raw.githubusercontent.com/onceupon/Bash-Oneliner/master/README.md | pandoc | w3m -T text/html

# or using emacs (in emac text editor)
emacs --eval '(org-mode)' --insert <(curl https://raw.githubusercontent.com/onceupon/Bash-Oneliner/master/README.md | pandoc -t org)

# or using emacs (on terminal, exit using Ctrl + x then Ctrl + c)
emacs -nw --eval '(org-mode)' --insert <(curl https://raw.githubusercontent.com/onceupon/Bash-Oneliner/master/README.md | pandoc -t org)"><pre>curl https://raw.githubusercontent.com/onceupon/Bash-Oneliner/master/README.md <span>|</span> pandoc -f markdown -t man <span>|</span> man -l -

<span><span>#</span> or w3m (a text based web browser and pager)</span>
curl https://raw.githubusercontent.com/onceupon/Bash-Oneliner/master/README.md <span>|</span> pandoc <span>|</span> w3m -T text/html

<span><span>#</span> or using emacs (in emac text editor)</span>
emacs --eval <span><span>'</span>(org-mode)<span>'</span></span> --insert <span><span>&lt;(</span>curl https://raw.githubusercontent.com/onceupon/Bash-Oneliner/master/README.md <span>|</span> pandoc -t org<span>)</span></span>

<span><span>#</span> or using emacs (on terminal, exit using Ctrl + x then Ctrl + c)</span>
emacs -nw --eval <span><span>'</span>(org-mode)<span>'</span></span> --insert <span><span>&lt;(</span>curl https://raw.githubusercontent.com/onceupon/Bash-Oneliner/master/README.md <span>|</span> pandoc -t org<span>)</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Download all from a page</h5><a id="user-content-download-all-from-a-page" aria-label="Permalink: Download all from a page" href="#download-all-from-a-page"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="wget -r -l1 -H -t1 -nd -N -np -A mp3 -e robots=off http://example.com

# -r: recursive and download all links on page
# -l1: only one level link
# -H: span host, visit other hosts
# -t1: numbers of retries
# -nd: don't make new directories, download to here
# -N: turn on timestamp
# -nd: no parent
# -A: type (separate by ,)
# -e robots=off: ignore the robots.txt file which stop wget from crashing the site, sorry example.com"><pre>wget -r -l1 -H -t1 -nd -N -np -A mp3 -e robots=off http://example.com

<span><span>#</span> -r: recursive and download all links on page</span>
<span><span>#</span> -l1: only one level link</span>
<span><span>#</span> -H: span host, visit other hosts</span>
<span><span>#</span> -t1: numbers of retries</span>
<span><span>#</span> -nd: don't make new directories, download to here</span>
<span><span>#</span> -N: turn on timestamp</span>
<span><span>#</span> -nd: no parent</span>
<span><span>#</span> -A: type (separate by ,)</span>
<span><span>#</span> -e robots=off: ignore the robots.txt file which stop wget from crashing the site, sorry example.com</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Upload a file to web and download (<a href="https://transfer.sh/" rel="nofollow">https://transfer.sh/</a>)</h5><a id="user-content-upload-a-file-to-web-and-download-httpstransfersh" aria-label="Permalink: Upload a file to web and download (https://transfer.sh/)" href="#upload-a-file-to-web-and-download-httpstransfersh"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="#  Upload a file (e.g. filename.txt):
curl --upload-file ./filename.txt https://transfer.sh/filename.txt
# the above command will return a URL, e.g: https://transfer.sh/tG8rM/filename.txt

# Next you can download it by:
curl https://transfer.sh/tG8rM/filename.txt -o filename.txt"><pre><span><span>#</span>  Upload a file (e.g. filename.txt):</span>
curl --upload-file ./filename.txt https://transfer.sh/filename.txt
<span><span>#</span> the above command will return a URL, e.g: https://transfer.sh/tG8rM/filename.txt</span>

<span><span>#</span> Next you can download it by:</span>
curl https://transfer.sh/tG8rM/filename.txt -o filename.txt</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Download file if necessary</h5><a id="user-content-download-file-if-necessary" aria-label="Permalink: Download file if necessary" href="#download-file-if-necessary"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="data=file.txt
url=http://www.example.com/$data
if [ ! -s $data ];then
    echo &quot;downloading test data...&quot;
    wget $url
fi"><pre>data=file.txt
url=http://www.example.com/<span>$data</span>
<span>if</span> [ <span>!</span> <span>-s</span> <span>$data</span> ]<span>;</span><span>then</span>
    <span>echo</span> <span><span>"</span>downloading test data...<span>"</span></span>
    wget <span>$url</span>
<span>fi</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Wget to a filename (when a long name)</h5><a id="user-content-wget-to-a-filename-when-a-long-name" aria-label="Permalink: Wget to a filename (when a long name)" href="#wget-to-a-filename-when-a-long-name"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="wget -O filename &quot;http://example.com&quot;"><pre>wget -O filename <span><span>"</span>http://example.com<span>"</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Wget files to a folder</h5><a id="user-content-wget-files-to-a-folder" aria-label="Permalink: Wget files to a folder" href="#wget-files-to-a-folder"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="wget -P /path/to/directory &quot;http://example.com&quot;"><pre>wget -P /path/to/directory <span><span>"</span>http://example.com<span>"</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Instruct curl to follow any redirect until it reaches the final destination:</h5><a id="user-content-instruct-curl-to-follow-any-redirect-until-it-reaches-the-final-destination" aria-label="Permalink: Instruct curl to follow any redirect until it reaches the final destination:" href="#instruct-curl-to-follow-any-redirect-until-it-reaches-the-final-destination"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Random</h2><a id="user-content-random" aria-label="Permalink: Random" href="#random"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Random generate password (e.g. generate 5 password each of length 13)</h5><a id="user-content-random-generate-password-eg-generate-5-password-each-of-length-13" aria-label="Permalink: Random generate password (e.g. generate 5 password each of length 13)" href="#random-generate-password-eg-generate-5-password-each-of-length-13"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo apt install pwgen
pwgen 13 5
#sahcahS9dah4a xieXaiJaey7xa UuMeo0ma7eic9 Ahpah9see3zai acerae7Huigh7"><pre>sudo apt install pwgen
pwgen 13 5
<span><span>#</span>sahcahS9dah4a xieXaiJaey7xa UuMeo0ma7eic9 Ahpah9see3zai acerae7Huigh7</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Random pick 100 lines from a file</h5><a id="user-content-random-pick-100-lines-from-a-file" aria-label="Permalink: Random pick 100 lines from a file" href="#random-pick-100-lines-from-a-file"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Random order (lucky draw)</h5><a id="user-content-random-order-lucky-draw" aria-label="Permalink: Random order (lucky draw)" href="#random-order-lucky-draw"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="for i in a b c d e; do echo $i; done | shuf"><pre><span>for</span> <span>i</span> <span>in</span> a b c d e<span>;</span> <span>do</span> <span>echo</span> <span>$i</span><span>;</span> <span>done</span> <span>|</span> shuf</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Echo series of random numbers between a range (e.g. shuffle numbers from 0-100, then pick 15 of them randomly)</h5><a id="user-content-echo-series-of-random-numbers-between-a-range-eg-shuffle-numbers-from-0-100-then-pick-15-of-them-randomly" aria-label="Permalink: Echo series of random numbers between a range (e.g. shuffle numbers from 0-100, then pick 15 of them randomly)" href="#echo-series-of-random-numbers-between-a-range-eg-shuffle-numbers-from-0-100-then-pick-15-of-them-randomly"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Echo a random number</h5><a id="user-content-echo-a-random-number" aria-label="Permalink: Echo a random number" href="#echo-a-random-number"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Random from 0-9</h5><a id="user-content-random-from-0-9" aria-label="Permalink: Random from 0-9" href="#random-from-0-9"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Random from 1-10</h5><a id="user-content-random-from-1-10" aria-label="Permalink: Random from 1-10" href="#random-from-1-10"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Xwindow</h2><a id="user-content-xwindow" aria-label="Permalink: Xwindow" href="#xwindow"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto">X11 GUI applications! Here are some GUI tools for you if you get bored by the text-only environment.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Enable X11 forwarding,in order to use graphical application on servers</h5><a id="user-content-enable-x11-forwardingin-order-to-use-graphical-application-on-servers" aria-label="Permalink: Enable X11 forwarding,in order to use graphical application on servers" href="#enable-x11-forwardingin-order-to-use-graphical-application-on-servers"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ssh -X user_name@ip_address

# or setting through xhost
# --> Install the following for Centos:
# xorg-x11-xauth
# xorg-x11-fonts-*
# xorg-x11-utils"><pre>ssh -X user_name@ip_address

<span><span>#</span> or setting through xhost</span>
<span><span>#</span> --&gt; Install the following for Centos:</span>
<span><span>#</span> xorg-x11-xauth</span>
<span><span>#</span> xorg-x11-fonts-*</span>
<span><span>#</span> xorg-x11-utils</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Little xwindow tools</h5><a id="user-content-little-xwindow-tools" aria-label="Permalink: Little xwindow tools" href="#little-xwindow-tools"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Open pictures/images from ssh server</h5><a id="user-content-open-picturesimages-from-ssh-server" aria-label="Permalink: Open pictures/images from ssh server" href="#open-picturesimages-from-ssh-server"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="1. ssh -X user_name@ip_address
2. apt-get install eog
3. eog picture.png"><pre>1. ssh -X user_name@ip_address
2. apt-get install eog
3. eog picture.png</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Watch videos on server</h5><a id="user-content-watch-videos-on-server" aria-label="Permalink: Watch videos on server" href="#watch-videos-on-server"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="1. ssh -X user_name@ip_address
2. sudo apt install mpv
3. mpv myvideo.mp4"><pre>1. ssh -X user_name@ip_address
2. sudo apt install mpv
3. mpv myvideo.mp4</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Use gedit on server (GUI editor)</h5><a id="user-content-use-gedit-on-server-gui-editor" aria-label="Permalink: Use gedit on server (GUI editor)" href="#use-gedit-on-server-gui-editor"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="1. ssh -X user_name@ip_address
2. apt-get install gedit
3. gedit filename.txt"><pre>1. ssh -X user_name@ip_address
2. apt-get install gedit
3. gedit filename.txt</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Open PDF file from ssh server</h5><a id="user-content-open-pdf-file-from-ssh-server" aria-label="Permalink: Open PDF file from ssh server" href="#open-pdf-file-from-ssh-server"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="1. ssh -X user_name@ip_address
2. apt-get install evince
3. evince filename.pdf"><pre>1. ssh -X user_name@ip_address
2. apt-get install evince
3. evince filename.pdf</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Use google-chrome browser from ssh server</h5><a id="user-content-use-google-chrome-browser-from-ssh-server" aria-label="Permalink: Use google-chrome browser from ssh server" href="#use-google-chrome-browser-from-ssh-server"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="1. ssh -X user_name@ip_address
2. apt-get install libxss1 libappindicator1 libindicator7
3. wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
4. sudo apt-get install -f
5. dpkg -i google-chrome*.deb
6. google-chrome"><pre>1. ssh -X user_name@ip_address
2. apt-get install libxss1 libappindicator1 libindicator7
3. wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
4. sudo apt-get install -f
5. dpkg -i google-chrome<span>*</span>.deb
6. google-chrome</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">System</h2><a id="user-content-system" aria-label="Permalink: System" href="#system"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Work with yum history</h5><a id="user-content-work-with-yum-history" aria-label="Permalink: Work with yum history" href="#work-with-yum-history"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# List yum history (e.g install, update)
sudo yum history
# Example output:
# Loaded plugins: extras_suggestions, langpacks, priorities, update-motd
# ID     | Login user               | Date and time    | Action(s)      | Altered
# -------------------------------------------------------------------------------
#     11 |  ... <myuser>       | 2020-04-10 10:57 | Install        |    1 P<
#     10 |  ... <myuser>       | 2020-03-27 05:21 | Install        |    1 >P
#      9 |  ... <myuser>       | 2020-03-05 11:57 | I, U           |   56 *<
# ...

# Show more details of a yum history (e.g. history #11)
sudo yum history info 11

# Undo a yum history (e.g. history #11, this will uninstall some packages)
sudo yum history undo 11"><pre><span><span>#</span> List yum history (e.g install, update)</span>
sudo yum <span>history</span>
<span><span>#</span> Example output:</span>
<span><span>#</span> Loaded plugins: extras_suggestions, langpacks, priorities, update-motd</span>
<span><span>#</span> ID     | Login user               | Date and time    | Action(s)      | Altered</span>
<span><span>#</span> -------------------------------------------------------------------------------</span>
<span><span>#</span>     11 |  ... &lt;myuser&gt;       | 2020-04-10 10:57 | Install        |    1 P&lt;</span>
<span><span>#</span>     10 |  ... &lt;myuser&gt;       | 2020-03-27 05:21 | Install        |    1 &gt;P</span>
<span><span>#</span>      9 |  ... &lt;myuser&gt;       | 2020-03-05 11:57 | I, U           |   56 *&lt;</span>
<span><span>#</span> ...</span>

<span><span>#</span> Show more details of a yum history (e.g. history #11)</span>
sudo yum <span>history</span> info 11

<span><span>#</span> Undo a yum history (e.g. history #11, this will uninstall some packages)</span>
sudo yum <span>history</span> undo 11</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Audit files to see who made changes to a file [RedHat based system only]</h5><a id="user-content-audit-files-to-see-who-made-changes-to-a-file-redhat-based-system-only" aria-label="Permalink: Audit files to see who made changes to a file [RedHat based system only]" href="#audit-files-to-see-who-made-changes-to-a-file-redhat-based-system-only"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# To audit a directory recursively for changes (e.g. myproject)
auditctl -w /path/to/myproject/ -p wa

# If you delete a file name &quot;VIPfile&quot;, the deletion is recorded in /var/log/audit/audit.log
sudo grep VIPfile /var/log/audit/audit.log
#type=PATH msg=audit(1581417313.678:113): item=1 name=&quot;VIPfile&quot; inode=300115 dev=ca:01 mode=0100664 ouid=1000 ogid=1000 rdev=00:00 nametype=DELETE cap_fp=0000000000000000 cap_fi=0000000000000000 cap_fe=0 cap_fver=0"><pre><span><span>#</span> To audit a directory recursively for changes (e.g. myproject)</span>
auditctl -w /path/to/myproject/ -p wa

<span><span>#</span> If you delete a file name "VIPfile", the deletion is recorded in /var/log/audit/audit.log</span>
sudo grep VIPfile /var/log/audit/audit.log
<span><span>#</span>type=PATH msg=audit(1581417313.678:113): item=1 name="VIPfile" inode=300115 dev=ca:01 mode=0100664 ouid=1000 ogid=1000 rdev=00:00 nametype=DELETE cap_fp=0000000000000000 cap_fi=0000000000000000 cap_fe=0 cap_fver=0</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Check out whether SELinux is enabled</h5><a id="user-content-check-out-whether-selinux-is-enabled" aria-label="Permalink: Check out whether SELinux is enabled" href="#check-out-whether-selinux-is-enabled"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sestatus
# SELinux status:                 enabled
# SELinuxfs mount:                /sys/fs/selinux
# SELinux root directory:         /etc/selinux
# Loaded policy name:             targeted
# Current mode:                   enforcing
# Mode from config file:          enforcing
# Policy MLS status:              enabled
# Policy deny_unknown status:     allowed
# Max kernel policy version:      31"><pre>sestatus
<span><span>#</span> SELinux status:                 enabled</span>
<span><span>#</span> SELinuxfs mount:                /sys/fs/selinux</span>
<span><span>#</span> SELinux root directory:         /etc/selinux</span>
<span><span>#</span> Loaded policy name:             targeted</span>
<span><span>#</span> Current mode:                   enforcing</span>
<span><span>#</span> Mode from config file:          enforcing</span>
<span><span>#</span> Policy MLS status:              enabled</span>
<span><span>#</span> Policy deny_unknown status:     allowed</span>
<span><span>#</span> Max kernel policy version:      31</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Generate public key from private key</h5><a id="user-content-generate-public-key-from-private-key" aria-label="Permalink: Generate public key from private key" href="#generate-public-key-from-private-key"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub"><pre>ssh-keygen -y -f <span>~</span>/.ssh/id_rsa <span>&gt;</span> <span>~</span>/.ssh/id_rsa.pub</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Copy your default public key to remote user</h5><a id="user-content-copy-your-default-public-key-to-remote-user" aria-label="Permalink: Copy your default public key to remote user" href="#copy-your-default-public-key-to-remote-user"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ssh-copy-id <user_name>@<server_IP>
# then you need to enter the password
# and next time you won't need to enter password when ssh to that user"><pre>ssh-copy-id <span>&lt;</span>user_name<span>&gt;</span>@<span>&lt;</span>server_IP<span>&gt;</span>
<span><span>#</span> then you need to enter the password</span>
<span><span>#</span> and next time you won't need to enter password when ssh to that user</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Copy default public key to remote user using the required private key (e.g. use your mykey.pem key to copy your id_rsa.pub to the remote user)</h5><a id="user-content-copy-default-public-key-to-remote-user-using-the-required-private-key-eg-use-your-mykeypem-key-to-copy-your-id_rsapub-to-the-remote-user" aria-label="Permalink: Copy default public key to remote user using the required private key (e.g. use your mykey.pem key to copy your id_rsa.pub to the remote user)" href="#copy-default-public-key-to-remote-user-using-the-required-private-key-eg-use-your-mykeypem-key-to-copy-your-id_rsapub-to-the-remote-user"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# before you need to use mykey.pem to ssh to remote user.
ssh-copy-id -i ~/.ssh/id_rsa.pub -o &quot;IdentityFile ~/Downloads/mykey.pem&quot; <user_name>@<server_IP>
# now you don't need to use key to ssh to that user."><pre><span><span>#</span> before you need to use mykey.pem to ssh to remote user.</span>
ssh-copy-id -i <span>~</span>/.ssh/id_rsa.pub -o <span><span>"</span>IdentityFile ~/Downloads/mykey.pem<span>"</span></span> <span>&lt;</span>user_name<span>&gt;</span>@<span>&lt;</span>server_IP<span>&gt;</span>
<span><span>#</span> now you don't need to use key to ssh to that user.</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">SSH Agent Forwarding</h5><a id="user-content-ssh-agent-forwarding" aria-label="Permalink: SSH Agent Forwarding" href="#ssh-agent-forwarding"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# To bring your key with you when ssh to serverA, then ssh to serverB from serverA using the key.
ssh-agent
ssh-add /path/to/mykey.pem
ssh -A <username>@<IP_of_serverA>
# Next you can ssh to serverB
ssh <username>@<IP_of_serverB>"><pre><span><span>#</span> To bring your key with you when ssh to serverA, then ssh to serverB from serverA using the key.</span>
ssh-agent
ssh-add /path/to/mykey.pem
ssh -A <span>&lt;</span>username<span>&gt;</span>@<span>&lt;</span>IP_of_serverA<span>&gt;</span>
<span><span>#</span> Next you can ssh to serverB</span>
ssh <span>&lt;</span>username<span>&gt;</span>@<span>&lt;</span>IP_of_serverB<span>&gt;</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Set the default user and key for a host when using SSH</h5><a id="user-content-set-the-default-user-and-key-for-a-host-when-using-ssh" aria-label="Permalink: Set the default user and key for a host when using SSH" href="#set-the-default-user-and-key-for-a-host-when-using-ssh"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# add the following to ~/.ssh/config
Host myserver
  User myuser
  IdentityFile ~/path/to/mykey.pem

# Next, you could run &quot;ssh myserver&quot; instead of &quot;ssh -i ~/path/to/mykey.pem myuser@myserver&quot;"><pre><span><span>#</span> add the following to ~/.ssh/config</span>
Host myserver
  User myuser
  IdentityFile <span>~</span>/path/to/mykey.pem

<span><span>#</span> Next, you could run "ssh myserver" instead of "ssh -i ~/path/to/mykey.pem myuser@myserver"</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Follow the most recent logs from service</h5><a id="user-content-follow-the-most-recent-logs-from-service" aria-label="Permalink: Follow the most recent logs from service" href="#follow-the-most-recent-logs-from-service"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="journalctl -u <service_name> -f"><pre>journalctl -u <span>&lt;</span>service_name<span>&gt;</span> -f</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Eliminate the zombie</h5><a id="user-content-eliminate-the-zombie" aria-label="Permalink: Eliminate the zombie" href="#eliminate-the-zombie"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# A zombie is already dead, so you cannot kill it. You can eliminate the zombie by killing its parent.
# First, find PID of the zombie
ps aux| grep 'Z'
# Next find the PID of zombie's parent
pstree -p -s <zombie_PID>
# Then you can kill its parent and you will notice the zombie is gone.
sudo kill 9 <parent_PID>"><pre><span><span>#</span> A zombie is already dead, so you cannot kill it. You can eliminate the zombie by killing its parent.</span>
<span><span>#</span> First, find PID of the zombie</span>
ps aux<span>|</span> grep <span><span>'</span>Z<span>'</span></span>
<span><span>#</span> Next find the PID of zombie's parent</span>
pstree -p -s <span>&lt;</span>zombie_PID<span>&gt;</span>
<span><span>#</span> Then you can kill its parent and you will notice the zombie is gone.</span>
sudo <span>kill</span> 9 <span>&lt;</span>parent_PID<span>&gt;</span></pre></div>
<p dir="auto"><h6 tabindex="-1" dir="auto">Show memory usage</h6><a id="user-content-show-memory-usage" aria-label="Permalink: Show memory usage" href="#show-memory-usage"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="free -c 10 -mhs 1
# print 10 times, at 1 second interval"><pre>free -c 10 -mhs 1
<span><span>#</span> print 10 times, at 1 second interval</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Display CPU and IO statistics for devices and partitions.</h5><a id="user-content-display-cpu-and-io-statistics-for-devices-and-partitions" aria-label="Permalink: Display CPU and IO statistics for devices and partitions." href="#display-cpu-and-io-statistics-for-devices-and-partitions"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# refresh every second
iostat -x -t 1"><pre><span><span>#</span> refresh every second</span>
iostat -x -t 1</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Display bandwidth usage on an network interface (e.g. enp175s0f0)</h5><a id="user-content-display-bandwidth-usage-on-an-network-interface-eg-enp175s0f0" aria-label="Permalink: Display bandwidth usage on an network interface (e.g. enp175s0f0)" href="#display-bandwidth-usage-on-an-network-interface-eg-enp175s0f0"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Tell how long the system has been running and number of users</h5><a id="user-content-tell-how-long-the-system-has-been-running-and-number-of-users" aria-label="Permalink: Tell how long the system has been running and number of users" href="#tell-how-long-the-system-has-been-running-and-number-of-users"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Check if it's root running</h5><a id="user-content-check-if-its-root-running" aria-label="Permalink: Check if it's root running" href="#check-if-its-root-running"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="if [ &quot;$EUID&quot; -ne 0 ]; then
        echo &quot;Please run this as root&quot;
        exit 1
fi"><pre><span>if</span> [ <span><span>"</span><span>$EUID</span><span>"</span></span> <span>-ne</span> 0 ]<span>;</span> <span>then</span>
        <span>echo</span> <span><span>"</span>Please run this as root<span>"</span></span>
        <span>exit</span> 1
<span>fi</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Change shell of a user (e.g. bonnie)</h5><a id="user-content-change-shell-of-a-user-eg-bonnie" aria-label="Permalink: Change shell of a user (e.g. bonnie)" href="#change-shell-of-a-user-eg-bonnie"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="chsh -s /bin/sh bonnie
# /etc/shells: valid login shells"><pre>chsh -s /bin/sh bonnie
<span><span>#</span> /etc/shells: valid login shells</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Change root / fake root / jail (e.g. change root to newroot)</h5><a id="user-content-change-root--fake-root--jail-eg-change-root-to-newroot" aria-label="Permalink: Change root / fake root / jail (e.g. change root to newroot)" href="#change-root--fake-root--jail-eg-change-root-to-newroot"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="chroot /home/newroot /bin/bash

# To exit chroot
exit"><pre>chroot /home/newroot /bin/bash

<span><span>#</span> To exit chroot</span>
<span>exit</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Display file status (size; access, modify and change time, etc) of a file (e.g. filename.txt)</h5><a id="user-content-display-file-status-size-access-modify-and-change-time-etc-of-a-file-eg-filenametxt" aria-label="Permalink: Display file status (size; access, modify and change time, etc) of a file (e.g. filename.txt)" href="#display-file-status-size-access-modify-and-change-time-etc-of-a-file-eg-filenametxt"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Snapshot of the current processes</h5><a id="user-content-snapshot-of-the-current-processes" aria-label="Permalink: Snapshot of the current processes" href="#snapshot-of-the-current-processes"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Display a tree of processes</h5><a id="user-content-display-a-tree-of-processes" aria-label="Permalink: Display a tree of processes" href="#display-a-tree-of-processes"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Find maximum number of processes</h5><a id="user-content-find-maximum-number-of-processes" aria-label="Permalink: Find maximum number of processes" href="#find-maximum-number-of-processes"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cat /proc/sys/kernel/pid_max"><pre>cat /proc/sys/kernel/pid_max</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print or control the kernel ring buffer</h5><a id="user-content-print-or-control-the-kernel-ring-buffer" aria-label="Permalink: Print or control the kernel ring buffer" href="#print-or-control-the-kernel-ring-buffer"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Show IP address</h5><a id="user-content-show-ip-address" aria-label="Permalink: Show IP address" href="#show-ip-address"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="$ip add show

# or
ifconfig"><pre><span>$ip</span> add show

<span><span>#</span> or</span>
ifconfig</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print previous and current SysV runlevel</h5><a id="user-content-print-previous-and-current-sysv-runlevel" aria-label="Permalink: Print previous and current SysV runlevel" href="#print-previous-and-current-sysv-runlevel"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Change SysV runlevel (e.g. 5)</h5><a id="user-content-change-sysv-runlevel-eg-5" aria-label="Permalink: Change SysV runlevel (e.g. 5)" href="#change-sysv-runlevel-eg-5"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Display all available services in all runlevels,</h5><a id="user-content-display-all-available-services-in-all-runlevels" aria-label="Permalink: Display all available services in all runlevels," href="#display-all-available-services-in-all-runlevels"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="chkconfig --list
# update-rc.d equivalent to chkconfig in ubuntu"><pre>chkconfig --list
<span><span>#</span> update-rc.d equivalent to chkconfig in ubuntu</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Check system version</h5><a id="user-content-check-system-version" aria-label="Permalink: Check system version" href="#check-system-version"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Linux Programmer's Manuel: hier- description of the filesystem hierarchy</h5><a id="user-content-linux-programmers-manuel-hier--description-of-the-filesystem-hierarchy" aria-label="Permalink: Linux Programmer's Manuel: hier- description of the filesystem hierarchy" href="#linux-programmers-manuel-hier--description-of-the-filesystem-hierarchy"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Control the systemd system and service manager</h5><a id="user-content-control-the-systemd-system-and-service-manager" aria-label="Permalink: Control the systemd system and service manager" href="#control-the-systemd-system-and-service-manager"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# e.g. check the status of cron service
systemctl status cron.service

# e.g. stop cron service
systemctl stop cron.service"><pre><span><span>#</span> e.g. check the status of cron service</span>
systemctl status cron.service

<span><span>#</span> e.g. stop cron service</span>
systemctl stop cron.service</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List job</h5><a id="user-content-list-job" aria-label="Permalink: List job" href="#list-job"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Run a program with modified priority (e.g. ./test.sh)</h5><a id="user-content-run-a-program-with-modified-priority-eg-testsh" aria-label="Permalink: Run a program with modified priority (e.g. ./test.sh)" href="#run-a-program-with-modified-priority-eg-testsh"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# nice value is adjustable from -20 (most favorable) to +19
# the nicer the application, the lower the priority
# Default niceness: 10; default priority: 80

nice -10 ./test.sh"><pre><span><span>#</span> nice value is adjustable from -20 (most favorable) to +19</span>
<span><span>#</span> the nicer the application, the lower the priority</span>
<span><span>#</span> Default niceness: 10; default priority: 80</span>

nice -10 ./test.sh</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Export PATH</h5><a id="user-content-export-path" aria-label="Permalink: Export PATH" href="#export-path"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="export PATH=$PATH:~/path/you/want"><pre><span>export</span> PATH=<span>$PATH</span>:<span>~</span>/path/you/want</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Make file executable</h5><a id="user-content-make-file-executable" aria-label="Permalink: Make file executable" href="#make-file-executable"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="chmod +x filename
# you can now ./filename to execute it"><pre>chmod +x filename
<span><span>#</span> you can now ./filename to execute it</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print system information</h5><a id="user-content-print-system-information" aria-label="Permalink: Print system information" href="#print-system-information"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="uname -a

# Check system hardware-platform (x86-64)
uname -i"><pre>uname -a

<span><span>#</span> Check system hardware-platform (x86-64)</span>
uname -i</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Surf the net</h5><a id="user-content-surf-the-net" aria-label="Permalink: Surf the net" href="#surf-the-net"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Add user, set passwd</h5><a id="user-content-add-user-set-passwd" aria-label="Permalink: Add user, set passwd" href="#add-user-set-passwd"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="useradd username
passwd username"><pre>useradd username
passwd username</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Edit PS1 variable for bash (e.g. displaying the whole path)</h5><a id="user-content-edit-ps1-variable-for-bash-eg-displaying-the-whole-path" aria-label="Permalink: Edit PS1 variable for bash (e.g. displaying the whole path)" href="#edit-ps1-variable-for-bash-eg-displaying-the-whole-path"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="1. vi ~/.bash_profile
2. export PS1='\u@\h:\w\$'
# $PS1 is a variable that defines the makeup and style of the command prompt
# You could use emojis and add timestamp to every prompt using the following value:
# export PS1=&quot;\t@🦁:\w\$ &quot;
3. source ~/.bash_profile"><pre>1. vi <span>~</span>/.bash_profile
2. <span>export</span> PS1=<span><span>'</span>\u@\h:\w\$<span>'</span></span>
<span><span>#</span> $PS1 is a variable that defines the makeup and style of the command prompt</span>
<span><span>#</span> You could use emojis and add timestamp to every prompt using the following value:</span>
<span><span>#</span> export PS1="\t@🦁:\w\$ "</span>
3. <span>source</span> <span>~</span>/.bash_profile</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Edit environment setting (e.g. alias)</h5><a id="user-content-edit-environment-setting-eg-alias" aria-label="Permalink: Edit environment setting (e.g. alias)" href="#edit-environment-setting-eg-alias"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="1. vi ~/.bash_profile
2. alias pd=&quot;pwd&quot; //no more need to type that 'w'!
3. source ~/.bash_profile"><pre>1. vi <span>~</span>/.bash_profile
2. <span>alias</span> pd=<span><span>"</span>pwd<span>"</span></span> //no more need to <span>type</span> that <span><span>'</span>w<span>'</span></span><span>!</span>
3. <span>source</span> <span>~</span>/.bash_profile</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print all alias</h5><a id="user-content-print-all-alias" aria-label="Permalink: Print all alias" href="#print-all-alias"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Unalias (e.g. after alias ls='ls --color=auto')</h5><a id="user-content-unalias-eg-after-alias-lsls---colorauto" aria-label="Permalink: Unalias (e.g. after alias ls='ls --color=auto')" href="#unalias-eg-after-alias-lsls---colorauto"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Set and unset shell options</h5><a id="user-content-set-and-unset-shell-options" aria-label="Permalink: Set and unset shell options" href="#set-and-unset-shell-options"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# print all shell options
shopt

# to unset (or stop) alias
shopt -u expand_aliases

# to set (or start) alias
shopt -s expand_aliases"><pre><span><span>#</span> print all shell options</span>
<span>shopt</span>

<span><span>#</span> to unset (or stop) alias</span>
<span>shopt</span> -u expand_aliases

<span><span>#</span> to set (or start) alias</span>
<span>shopt</span> -s expand_aliases</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List environment variables (e.g. PATH)</h5><a id="user-content-list-environment-variables-eg-path" aria-label="Permalink: List environment variables (e.g. PATH)" href="#list-environment-variables-eg-path"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="echo $PATH
# list of directories separated by a colon"><pre><span>echo</span> <span>$PATH</span>
<span><span>#</span> list of directories separated by a colon</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List all environment variables for current user</h5><a id="user-content-list-all-environment-variables-for-current-user" aria-label="Permalink: List all environment variables for current user" href="#list-all-environment-variables-for-current-user"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Unset environment variable (e.g. unset variable 'MYVAR')</h5><a id="user-content-unset-environment-variable-eg-unset-variable-myvar" aria-label="Permalink: Unset environment variable (e.g. unset variable 'MYVAR')" href="#unset-environment-variable-eg-unset-variable-myvar"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Show partition format</h5><a id="user-content-show-partition-format" aria-label="Permalink: Show partition format" href="#show-partition-format"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Inform the OS of partition table changes</h5><a id="user-content-inform-the-os-of-partition-table-changes" aria-label="Permalink: Inform the OS of partition table changes" href="#inform-the-os-of-partition-table-changes"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Soft link program to bin</h5><a id="user-content-soft-link-program-to-bin" aria-label="Permalink: Soft link program to bin" href="#soft-link-program-to-bin"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ln -s /path/to/program /home/usr/bin
# must be the whole path to the program"><pre>ln -s /path/to/program /home/usr/bin
<span><span>#</span> must be the whole path to the program</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Show hexadecimal view of data</h5><a id="user-content-show-hexadecimal-view-of-data" aria-label="Permalink: Show hexadecimal view of data" href="#show-hexadecimal-view-of-data"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="hexdump -C filename.class"><pre>hexdump -C filename.class</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Jump to different node</h5><a id="user-content-jump-to-different-node" aria-label="Permalink: Jump to different node" href="#jump-to-different-node"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Check port (active internet connection)</h5><a id="user-content-check-port-active-internet-connection" aria-label="Permalink: Check port (active internet connection)" href="#check-port-active-internet-connection"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Print resolved symbolic links or canonical file names</h5><a id="user-content-print-resolved-symbolic-links-or-canonical-file-names" aria-label="Permalink: Print resolved symbolic links or canonical file names" href="#print-resolved-symbolic-links-or-canonical-file-names"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Find out the type of command and where it link to (e.g. python)</h5><a id="user-content-find-out-the-type-of-command-and-where-it-link-to-eg-python" aria-label="Permalink: Find out the type of command and where it link to (e.g. python)" href="#find-out-the-type-of-command-and-where-it-link-to-eg-python"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="type python
# python is /usr/bin/python
# There are 5 different types, check using the 'type -f' flag
# 1. alias    (shell alias)
# 2. function (shell function, type will also print the function body)
# 3. builtin  (shell builtin)
# 4. file     (disk file)
# 5. keyword  (shell reserved word)

# You can also use `which`
which python
# /usr/bin/python"><pre><span>type</span> python
<span><span>#</span> python is /usr/bin/python</span>
<span><span>#</span> There are 5 different types, check using the 'type -f' flag</span>
<span><span>#</span> 1. alias    (shell alias)</span>
<span><span>#</span> 2. function (shell function, type will also print the function body)</span>
<span><span>#</span> 3. builtin  (shell builtin)</span>
<span><span>#</span> 4. file     (disk file)</span>
<span><span>#</span> 5. keyword  (shell reserved word)</span>

<span><span>#</span> You can also use `which`</span>
which python
<span><span>#</span> /usr/bin/python</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List all functions names</h5><a id="user-content-list-all-functions-names" aria-label="Permalink: List all functions names" href="#list-all-functions-names"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">List total size of a directory</h5><a id="user-content-list-total-size-of-a-directory" aria-label="Permalink: List total size of a directory" href="#list-total-size-of-a-directory"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Copy directory with permission setting</h5><a id="user-content-copy-directory-with-permission-setting" aria-label="Permalink: Copy directory with permission setting" href="#copy-directory-with-permission-setting"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cp -rp /path/to/directory"><pre>cp -rp /path/to/directory</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Store current directory</h5><a id="user-content-store-current-directory" aria-label="Permalink: Store current directory" href="#store-current-directory"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="pushd .

# then pop
popd

#or use dirs to display the list of currently remembered directories.
dirs -l"><pre><span>pushd</span> <span>.</span>

<span><span>#</span> then pop</span>
<span>popd</span>

<span><span>#</span>or use dirs to display the list of currently remembered directories.</span>
<span>dirs</span> -l</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Show disk usage</h5><a id="user-content-show-disk-usage" aria-label="Permalink: Show disk usage" href="#show-disk-usage"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="df -h

# or
du -h

#or
du -sk /var/log/* |sort -rn |head -10"><pre>df -h

<span><span>#</span> or</span>
du -h

<span><span>#</span>or</span>
du -sk /var/log/<span>*</span> <span>|</span>sort -rn <span>|</span>head -10</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">check the Inode utilization</h5><a id="user-content-check-the-inode-utilization" aria-label="Permalink: check the Inode utilization" href="#check-the-inode-utilization"></a></p>
<div data-snippet-clipboard-copy-content="df -i
# Filesystem      Inodes  IUsed   IFree IUse% Mounted on
# devtmpfs        492652    304  492348    1% /dev
# tmpfs           497233      2  497231    1% /dev/shm
# tmpfs           497233    439  496794    1% /run
# tmpfs           497233     16  497217    1% /sys/fs/cgroup
# /dev/nvme0n1p1 5037976 370882 4667094    8% /
# tmpfs           497233      1  497232    1% /run/user/1000"><pre><code>df -i
# Filesystem      Inodes  IUsed   IFree IUse% Mounted on
# devtmpfs        492652    304  492348    1% /dev
# tmpfs           497233      2  497231    1% /dev/shm
# tmpfs           497233    439  496794    1% /run
# tmpfs           497233     16  497217    1% /sys/fs/cgroup
# /dev/nvme0n1p1 5037976 370882 4667094    8% /
# tmpfs           497233      1  497232    1% /run/user/1000
</code></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Show all file system type</h5><a id="user-content-show-all-file-system-type" aria-label="Permalink: Show all file system type" href="#show-all-file-system-type"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Show current runlevel</h5><a id="user-content-show-current-runlevel" aria-label="Permalink: Show current runlevel" href="#show-current-runlevel"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Switch runlevel</h5><a id="user-content-switch-runlevel" aria-label="Permalink: Switch runlevel" href="#switch-runlevel"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Permanently modify runlevel</h5><a id="user-content-permanently-modify-runlevel" aria-label="Permalink: Permanently modify runlevel" href="#permanently-modify-runlevel"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="1. edit /etc/init/rc-sysinit.conf
2. env DEFAULT_RUNLEVEL=2"><pre>1. edit /etc/init/rc-sysinit.conf
2. env DEFAULT_RUNLEVEL=2</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Become root</h5><a id="user-content-become-root" aria-label="Permalink: Become root" href="#become-root"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Become somebody</h5><a id="user-content-become-somebody" aria-label="Permalink: Become somebody" href="#become-somebody"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Report user quotes on device</h5><a id="user-content-report-user-quotes-on-device" aria-label="Permalink: Report user quotes on device" href="#report-user-quotes-on-device"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Get entries in a number of important databases</h5><a id="user-content-get-entries-in-a-number-of-important-databases" aria-label="Permalink: Get entries in a number of important databases" href="#get-entries-in-a-number-of-important-databases"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="getent database_name

# (e.g. the 'passwd' database)
getent passwd
# list all user account (all local and LDAP)

# (e.g. fetch list of grop accounts)
getent group
# store in database 'group'"><pre>getent database_name

<span><span>#</span> (e.g. the 'passwd' database)</span>
getent passwd
<span><span>#</span> list all user account (all local and LDAP)</span>

<span><span>#</span> (e.g. fetch list of grop accounts)</span>
getent group
<span><span>#</span> store in database 'group'</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Change owner of file</h5><a id="user-content-change-owner-of-file" aria-label="Permalink: Change owner of file" href="#change-owner-of-file"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="chown user_name filename
chown -R user_name /path/to/directory/
# chown user:group filename"><pre>chown user_name filename
chown -R user_name /path/to/directory/
<span><span>#</span> chown user:group filename</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Mount and unmount</h5><a id="user-content-mount-and-unmount" aria-label="Permalink: Mount and unmount" href="#mount-and-unmount"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# e.g. Mount /dev/sdb to /home/test
mount /dev/sdb /home/test

# e.g. Unmount /home/test
umount /home/test"><pre><span><span>#</span> e.g. Mount /dev/sdb to /home/test</span>
mount /dev/sdb /home/test

<span><span>#</span> e.g. Unmount /home/test</span>
umount /home/test</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List current mount detail</h5><a id="user-content-list-current-mount-detail" aria-label="Permalink: List current mount detail" href="#list-current-mount-detail"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">List current usernames and user-numbers</h5><a id="user-content-list-current-usernames-and-user-numbers" aria-label="Permalink: List current usernames and user-numbers" href="#list-current-usernames-and-user-numbers"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Get all username</h5><a id="user-content-get-all-username" aria-label="Permalink: Get all username" href="#get-all-username"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="getent passwd| awk '{FS=&quot;[:]&quot;; print $1}'"><pre>getent passwd<span>|</span> awk <span><span>'</span>{FS="[:]"; print $1}<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Show all users</h5><a id="user-content-show-all-users" aria-label="Permalink: Show all users" href="#show-all-users"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Show all groups</h5><a id="user-content-show-all-groups" aria-label="Permalink: Show all groups" href="#show-all-groups"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Show group of user</h5><a id="user-content-show-group-of-user" aria-label="Permalink: Show group of user" href="#show-group-of-user"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Show uid, gid, group of user</h5><a id="user-content-show-uid-gid-group-of-user" aria-label="Permalink: Show uid, gid, group of user" href="#show-uid-gid-group-of-user"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="id username

# variable for UID
echo $UID"><pre>id username

<span><span>#</span> variable for UID</span>
<span>echo</span> <span>$UID</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Check if it's root</h5><a id="user-content-check-if-its-root" aria-label="Permalink: Check if it's root" href="#check-if-its-root"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="if [ $(id -u) -ne 0 ];then
    echo &quot;You are not root!&quot;
    exit;
fi
# 'id -u' output 0 if it's not root"><pre><span>if</span> [ <span><span>$(</span>id -u<span>)</span></span> <span>-ne</span> 0 ]<span>;</span><span>then</span>
    <span>echo</span> <span><span>"</span>You are not root!<span>"</span></span>
    <span>exit</span><span>;</span>
<span>fi</span>
<span><span>#</span> 'id -u' output 0 if it's not root</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Find out CPU information</h5><a id="user-content-find-out-cpu-information" aria-label="Permalink: Find out CPU information" href="#find-out-cpu-information"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="more /proc/cpuinfo

# or
lscpu"><pre>more /proc/cpuinfo

<span><span>#</span> or</span>
lscpu</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Set quota for user (e.g. disk soft limit: 120586240; hard limit: 125829120)</h5><a id="user-content-set-quota-for-user-eg-disk-soft-limit-120586240-hard-limit-125829120" aria-label="Permalink: Set quota for user (e.g. disk soft limit: 120586240; hard limit: 125829120)" href="#set-quota-for-user-eg-disk-soft-limit-120586240-hard-limit-125829120"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="setquota username 120586240 125829120 0 0 /home"><pre>setquota username 120586240 125829120 0 0 /home</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Show quota for user</h5><a id="user-content-show-quota-for-user" aria-label="Permalink: Show quota for user" href="#show-quota-for-user"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Display current libraries from the cache</h5><a id="user-content-display-current-libraries-from-the-cache" aria-label="Permalink: Display current libraries from the cache" href="#display-current-libraries-from-the-cache"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Print shared library dependencies (e.g. for 'ls')</h5><a id="user-content-print-shared-library-dependencies-eg-for-ls" aria-label="Permalink: Print shared library dependencies (e.g. for 'ls')" href="#print-shared-library-dependencies-eg-for-ls"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Check user login</h5><a id="user-content-check-user-login" aria-label="Permalink: Check user login" href="#check-user-login"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Check last reboot history</h5><a id="user-content-check-last-reboot-history" aria-label="Permalink: Check last reboot history" href="#check-last-reboot-history"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Edit path for all users</h5><a id="user-content-edit-path-for-all-users" aria-label="Permalink: Edit path for all users" href="#edit-path-for-all-users"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="joe /etc/environment
# edit this file"><pre>joe /etc/environment
<span><span>#</span> edit this file</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Show and set user limit</h5><a id="user-content-show-and-set-user-limit" aria-label="Permalink: Show and set user limit" href="#show-and-set-user-limit"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Print out number of cores/ processors</h5><a id="user-content-print-out-number-of-cores-processors" aria-label="Permalink: Print out number of cores/ processors" href="#print-out-number-of-cores-processors"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Check status of each core</h5><a id="user-content-check-status-of-each-core" aria-label="Permalink: Check status of each core" href="#check-status-of-each-core"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Show jobs and PID</h5><a id="user-content-show-jobs-and-pid" aria-label="Permalink: Show jobs and PID" href="#show-jobs-and-pid"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">List all running services</h5><a id="user-content-list-all-running-services" aria-label="Permalink: List all running services" href="#list-all-running-services"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Schedule shutdown server</h5><a id="user-content-schedule-shutdown-server" aria-label="Permalink: Schedule shutdown server" href="#schedule-shutdown-server"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="shutdown -r +5 &quot;Server will restart in 5 minutes. Please save your work.&quot;"><pre>shutdown -r +5 <span><span>"</span>Server will restart in 5 minutes. Please save your work.<span>"</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Cancel scheduled shutdown</h5><a id="user-content-cancel-scheduled-shutdown" aria-label="Permalink: Cancel scheduled shutdown" href="#cancel-scheduled-shutdown"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Broadcast to all users</h5><a id="user-content-broadcast-to-all-users" aria-label="Permalink: Broadcast to all users" href="#broadcast-to-all-users"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Kill all process of a user</h5><a id="user-content-kill-all-process-of-a-user" aria-label="Permalink: Kill all process of a user" href="#kill-all-process-of-a-user"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Kill all process of a program</h5><a id="user-content-kill-all-process-of-a-program" aria-label="Permalink: Kill all process of a program" href="#kill-all-process-of-a-program"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="kill -9 $(ps aux | grep 'program_name' | awk '{print $2}')"><pre><span>kill</span> -9 <span><span>$(</span>ps aux <span>|</span> grep <span><span>'</span>program_name<span>'</span></span> <span>|</span> awk <span><span>'</span>{print $2}<span>'</span></span><span>)</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Set gedit preference on server</h5><a id="user-content-set-gedit-preference-on-server" aria-label="Permalink: Set gedit preference on server" href="#set-gedit-preference-on-server"></a></p>
<div data-snippet-clipboard-copy-content="# You might have to install the following:

apt-get install libglib2.0-bin;
# or
yum install dconf dconf-editor;
yum install dbus dbus-x11;

# Check list
gsettings list-recursively

# Change some settings
gsettings set org.gnome.gedit.preferences.editor highlight-current-line true
gsettings set org.gnome.gedit.preferences.editor scheme 'cobalt'
gsettings set org.gnome.gedit.preferences.editor use-default-font false
gsettings set org.gnome.gedit.preferences.editor editor-font 'Cantarell Regular 12'"><pre><code># You might have to install the following:

apt-get install libglib2.0-bin;
# or
yum install dconf dconf-editor;
yum install dbus dbus-x11;

# Check list
gsettings list-recursively

# Change some settings
gsettings set org.gnome.gedit.preferences.editor highlight-current-line true
gsettings set org.gnome.gedit.preferences.editor scheme 'cobalt'
gsettings set org.gnome.gedit.preferences.editor use-default-font false
gsettings set org.gnome.gedit.preferences.editor editor-font 'Cantarell Regular 12'
</code></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Add user to a group (e.g add user 'nice' to the group 'docker', so that he can run docker without sudo)</h5><a id="user-content-add-user-to-a-group-eg-add-user-nice-to-the-group-docker-so-that-he-can-run-docker-without-sudo" aria-label="Permalink: Add user to a group (e.g add user 'nice' to the group 'docker', so that he can run docker without sudo)" href="#add-user-to-a-group-eg-add-user-nice-to-the-group-docker-so-that-he-can-run-docker-without-sudo"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo gpasswd -a nice docker"><pre>sudo gpasswd -a nice docker</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Pip install python package without root</h5><a id="user-content-pip-install-python-package-without-root" aria-label="Permalink: Pip install python package without root" href="#pip-install-python-package-without-root"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="1. pip install --user package_name
2. You might need to export ~/.local/bin/ to PATH: export PATH=$PATH:~/.local/bin/"><pre>1. pip install --user package_name
2. You might need to <span>export</span> <span>~</span>/.local/bin/ to PATH: <span>export</span> PATH=<span>$PATH</span>:<span>~</span>/.local/bin/</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Removing old linux kernels (when /boot almost full...)</h5><a id="user-content-removing-old-linux-kernels-when-boot-almost-full" aria-label="Permalink: Removing old linux kernels (when /boot almost full...)" href="#removing-old-linux-kernels-when-boot-almost-full"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="1. uname -a  #check current kernel, which should NOT be removed
2. sudo apt-get purge linux-image-X.X.X-X-generic  #replace old version"><pre>1. uname -a  <span><span>#</span>check current kernel, which should NOT be removed</span>
2. sudo apt-get purge linux-image-X.X.X-X-generic  <span><span>#</span>replace old version</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Change hostname</h5><a id="user-content-change-hostname" aria-label="Permalink: Change hostname" href="#change-hostname"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo hostname your-new-name

# if not working, do also:
hostnamectl set-hostname your-new-hostname
# then check with:
hostnamectl
# Or check /etc/hostname

# If still not working..., edit:
/etc/sysconfig/network
/etc/sysconfig/network-scripts/ifcfg-ensxxx
#add HOSTNAME=&quot;your-new-hostname&quot;"><pre>sudo hostname your-new-name

<span><span>#</span> if not working, do also:</span>
hostnamectl set-hostname your-new-hostname
<span><span>#</span> then check with:</span>
hostnamectl
<span><span>#</span> Or check /etc/hostname</span>

<span><span>#</span> If still not working..., edit:</span>
/etc/sysconfig/network
/etc/sysconfig/network-scripts/ifcfg-ensxxx
<span><span>#</span>add HOSTNAME="your-new-hostname"</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List installed packages</h5><a id="user-content-list-installed-packages" aria-label="Permalink: List installed packages" href="#list-installed-packages"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="apt list --installed

# or on Red Hat:
yum list installed"><pre>apt list --installed

<span><span>#</span> or on Red Hat:</span>
yum list installed</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Check for package update</h5><a id="user-content-check-for-package-update" aria-label="Permalink: Check for package update" href="#check-for-package-update"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="apt list --upgradeable

# or
sudo yum check-update"><pre>apt list --upgradeable

<span><span>#</span> or</span>
sudo yum check-update</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Run yum update excluding a package (e.g. do not update php packages)</h5><a id="user-content-run-yum-update-excluding-a-package-eg-do-not-update-php-packages" aria-label="Permalink: Run yum update excluding a package (e.g. do not update php packages)" href="#run-yum-update-excluding-a-package-eg-do-not-update-php-packages"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo yum update --exclude=php*"><pre>sudo yum update --exclude=php<span>*</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Check which file make the device busy on umount</h5><a id="user-content-check-which-file-make-the-device-busy-on-umount" aria-label="Permalink: Check which file make the device busy on umount" href="#check-which-file-make-the-device-busy-on-umount"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">When sound not working</h5><a id="user-content-when-sound-not-working" aria-label="Permalink: When sound not working" href="#when-sound-not-working"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="killall pulseaudio
# then press Alt-F2 and type in pulseaudio"><pre>killall pulseaudio
<span><span>#</span> then press Alt-F2 and type in pulseaudio</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List information about SCSI devices</h5><a id="user-content-list-information-about-scsi-devices" aria-label="Permalink: List information about SCSI devices" href="#list-information-about-scsi-devices"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Tutorial for setting up your own DNS server</h5><a id="user-content-tutorial-for-setting-up-your-own-dns-server" aria-label="Permalink: Tutorial for setting up your own DNS server" href="#tutorial-for-setting-up-your-own-dns-server"></a></p>
<p dir="auto"><a href="http://onceuponmine.blogspot.tw/2017/08/set-up-your-own-dns-server.html" rel="nofollow">http://onceuponmine.blogspot.tw/2017/08/set-up-your-own-dns-server.html</a></p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Tutorial for creating a simple daemon</h5><a id="user-content-tutorial-for-creating-a-simple-daemon" aria-label="Permalink: Tutorial for creating a simple daemon" href="#tutorial-for-creating-a-simple-daemon"></a></p>
<p dir="auto"><a href="http://onceuponmine.blogspot.tw/2017/07/create-your-first-simple-daemon.html" rel="nofollow">http://onceuponmine.blogspot.tw/2017/07/create-your-first-simple-daemon.html</a></p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Tutorial for using your gmail to send email</h5><a id="user-content-tutorial-for-using-your-gmail-to-send-email" aria-label="Permalink: Tutorial for using your gmail to send email" href="#tutorial-for-using-your-gmail-to-send-email"></a></p>
<p dir="auto"><a href="http://onceuponmine.blogspot.tw/2017/10/setting-up-msmtprc-and-use-your-gmail.html" rel="nofollow">http://onceuponmine.blogspot.tw/2017/10/setting-up-msmtprc-and-use-your-gmail.html</a></p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Using telnet to test open ports, test if you can connect to a port (e.g 53) of a server (e.g 192.168.2.106)</h5><a id="user-content-using-telnet-to-test-open-ports-test-if-you-can-connect-to-a-port-eg-53-of-a-server-eg-1921682106" aria-label="Permalink: Using telnet to test open ports, test if you can connect to a port (e.g 53) of a server (e.g 192.168.2.106)" href="#using-telnet-to-test-open-ports-test-if-you-can-connect-to-a-port-eg-53-of-a-server-eg-1921682106"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Change network maximum transmission unit (mtu) (e.g. change to 9000)</h5><a id="user-content-change-network-maximum-transmission-unit-mtu-eg-change-to-9000" aria-label="Permalink: Change network maximum transmission unit (mtu) (e.g. change to 9000)" href="#change-network-maximum-transmission-unit-mtu-eg-change-to-9000"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Get pid of a running process (e.g python)</h5><a id="user-content-get-pid-of-a-running-process-eg-python" aria-label="Permalink: Get pid of a running process (e.g python)" href="#get-pid-of-a-running-process-eg-python"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="pidof python

# or
ps aux|grep python"><pre>pidof python

<span><span>#</span> or</span>
ps aux<span>|</span>grep python</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Check status of a process using PID</h5><a id="user-content-check-status-of-a-process-using-pid" aria-label="Permalink: Check status of a process using PID" href="#check-status-of-a-process-using-pid"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ps -p <PID>

#or
cat /proc/<PID>/status
cat /proc/<PID>/stack
cat /proc/<PID>/stat"><pre>ps -p <span>&lt;</span>PID<span>&gt;</span>

<span><span>#</span>or</span>
cat /proc/<span>&lt;</span>PID<span>&gt;</span>/status
cat /proc/<span>&lt;</span>PID<span>&gt;</span>/stack
cat /proc/<span>&lt;</span>PID<span>&gt;</span>/stat</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">NTP</h5><a id="user-content-ntp" aria-label="Permalink: NTP" href="#ntp"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Start ntp:
ntpd

# Check ntp:
ntpq -p"><pre><span><span>#</span> Start ntp:</span>
ntpd

<span><span>#</span> Check ntp:</span>
ntpq -p</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Remove unnecessary files to clean your server</h5><a id="user-content-remove-unnecessary-files-to-clean-your-server" aria-label="Permalink: Remove unnecessary files to clean your server" href="#remove-unnecessary-files-to-clean-your-server"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo apt-get autoremove
sudo apt-get clean
sudo rm -rf ~/.cache/thumbnails/*

# Remove old kernal:
sudo dpkg --list 'linux-image*'
sudo apt-get remove linux-image-OLDER_VERSION"><pre>sudo apt-get autoremove
sudo apt-get clean
sudo rm -rf <span>~</span>/.cache/thumbnails/<span>*</span>

<span><span>#</span> Remove old kernal:</span>
sudo dpkg --list <span><span>'</span>linux-image*<span>'</span></span>
sudo apt-get remove linux-image-OLDER_VERSION</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Increase/ resize root partition (root partition is an LVM logical volume)</h5><a id="user-content-increase-resize-root-partition-root-partition-is-an-lvm-logical-volume" aria-label="Permalink: Increase/ resize root partition (root partition is an LVM logical volume)" href="#increase-resize-root-partition-root-partition-is-an-lvm-logical-volume"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="pvscan
lvextend -L +130G /dev/rhel/root -r
# Adding -r will grow filesystem after resizing the volume."><pre>pvscan
lvextend -L +130G /dev/rhel/root -r
<span><span>#</span> Adding -r will grow filesystem after resizing the volume.</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Create a UEFI Bootable USB drive (e.g. /dev/sdc1)</h5><a id="user-content-create-a-uefi-bootable-usb-drive-eg-devsdc1" aria-label="Permalink: Create a UEFI Bootable USB drive (e.g. /dev/sdc1)" href="#create-a-uefi-bootable-usb-drive-eg-devsdc1"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo dd if=~/path/to/isofile.iso of=/dev/sdc1 oflag=direct bs=1048576"><pre>sudo dd if=<span>~</span>/path/to/isofile.iso of=/dev/sdc1 oflag=direct bs=1048576</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Locate and remove a package</h5><a id="user-content-locate-and-remove-a-package" aria-label="Permalink: Locate and remove a package" href="#locate-and-remove-a-package"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo dpkg -l | grep <package_name>
sudo dpkg --purge <package_name>"><pre>sudo dpkg -l <span>|</span> grep <span>&lt;</span>package_name<span>&gt;</span>
sudo dpkg --purge <span>&lt;</span>package_name<span>&gt;</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Create a ssh tunnel</h5><a id="user-content-create-a-ssh-tunnel" aria-label="Permalink: Create a ssh tunnel" href="#create-a-ssh-tunnel"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ssh -f -L 9000:targetservername:8088 root@192.168.14.72 -N
#-f: run in background; -L: Listen; -N: do nothing
#the 9000 of your computer is now connected to the 8088 port of the targetservername through 192.168.14.72
#so that you can see the content of targetservername:8088 by entering localhost:9000 from your browser."><pre>ssh -f -L 9000:targetservername:8088 root@192.168.14.72 -N
<span><span>#</span>-f: run in background; -L: Listen; -N: do nothing</span>
<span><span>#</span>the 9000 of your computer is now connected to the 8088 port of the targetservername through 192.168.14.72</span>
<span><span>#</span>so that you can see the content of targetservername:8088 by entering localhost:9000 from your browser.</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Get process ID of a process (e.g. sublime_text)</h5><a id="user-content-get-process-id-of-a-process-eg-sublime_text" aria-label="Permalink: Get process ID of a process (e.g. sublime_text)" href="#get-process-id-of-a-process-eg-sublime_text"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="#pidof
pidof sublime_text

#pgrep, you don't have to type the whole program name
pgrep sublim

#pgrep, echo 1 if process found, echo 0 if no such process
pgrep -q sublime_text &amp;&amp; echo 1 || echo 0

#top, takes longer time
top|grep sublime_text"><pre><span><span>#</span>pidof</span>
pidof sublime_text

<span><span>#</span>pgrep, you don't have to type the whole program name</span>
pgrep sublim

<span><span>#</span>pgrep, echo 1 if process found, echo 0 if no such process</span>
pgrep -q sublime_text <span>&amp;&amp;</span> <span>echo</span> 1 <span>||</span> <span>echo</span> 0

<span><span>#</span>top, takes longer time</span>
top<span>|</span>grep sublime_text</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Some benchmarking tools for your server</h5><a id="user-content-some-benchmarking-tools-for-your-server" aria-label="Permalink: Some benchmarking tools for your server" href="#some-benchmarking-tools-for-your-server"></a></p>
<p dir="auto"><a href="https://openbenchmarking.org/test/pts/aio-stress" rel="nofollow">aio-stress</a> - AIO benchmark.<br>
<a href="https://zsmith.co/bandwidth.html" rel="nofollow">bandwidth</a> - memory bandwidth benchmark.<br>
<a href="https://www.coker.com.au/bonnie++/" rel="nofollow">bonnie++</a> - hard drive and file system performance benchmark.<br>
<a href="https://dbench.samba.org/" rel="nofollow">dbench</a> -  generate I/O workloads to either a filesystem or to a networked CIFS or NFS server.<br>
<a href="https://www.dnsperf.com/" rel="nofollow">dnsperf</a> - authorative and recursing DNS servers.<br>
<a href="https://github.com/filebench/filebench">filebench</a> - model based file system workload generator.<br>
<a href="https://linux.die.net/man/1/fio" rel="nofollow">fio</a> - I/O  benchmark.<br>
<a href="https://github.com/josefbacik/fs_mark">fs_mark</a> - synchronous/async file creation benchmark.<br>
<a href="https://github.com/httperf/httperf">httperf</a> - measure web server performance.<br>
<a href="https://github.com/ckolivas/interbench">interbench</a> - linux interactivity  benchmark.<br>
<a href="https://labs.vmware.com/flings/ioblazer" rel="nofollow">ioblazer</a> - multi-platform storage stack micro-benchmark.<br>
<a href="http://www.iozone.org/" rel="nofollow">iozone</a> - filesystem benchmark.<br>
<a href="https://iperf.fr/iperf-download.php" rel="nofollow">iperf3</a> - measure TCP/UDP/SCTP performance.<br>
<a href="https://github.com/knurd/kcbench">kcbench</a> - kernel compile benchmark, compiles a kernel and measures the time it takes.<br>
<a href="http://www.bitmover.com/lmbench/" rel="nofollow">lmbench</a> - Suite of simple, portable benchmarks.<br>
<a href="https://github.com/HewlettPackard/netperf">netperf</a> - measure network performance, test unidirectional throughput, and end-to-end latency.<br>
<a href="https://linux.die.net/man/1/netpipe" rel="nofollow">netpipe</a> - network protocol independent performance evaluator.<br>
<a href="http://wiki.linux-nfs.org/wiki/index.php/NFSometer" rel="nofollow">nfsometer</a> - NFS performance framework.<br>
<a href="https://www.nuttcp.net/Welcome%20Page.html" rel="nofollow">nuttcp</a> - measure network performance.<br>
<a href="https://www.phoronix-test-suite.com/" rel="nofollow">phoronix-test-suite</a> - comprehensive automated testing and benchmarking platform.<br>
<a href="https://github.com/fidlej/seeker">seeker</a> - portable disk seek benchmark.<br>
<a href="https://github.com/JoeDog/siege">siege</a> - http load tester and benchmark.<br>
<a href="https://github.com/Mellanox/sockperf">sockperf</a> - network benchmarking utility over socket API.<br>
<a href="https://linux.die.net/man/1/spew" rel="nofollow">spew</a> - measures I/O performance and/or generates I/O load.<br>
<a href="https://people.seas.harvard.edu/~apw/stress/" rel="nofollow">stress</a> - workload generator for POSIX systems.<br>
<a href="https://github.com/akopytov/sysbench">sysbench</a> - scriptable database and system performance benchmark.<br>
<a href="https://github.com/mkuoppal/tiobench">tiobench</a> - threaded IO benchmark.<br>
<a href="https://github.com/kdlucas/byte-unixbench">unixbench</a> - the original BYTE UNIX benchmark suite, provide a basic indicator of the performance of a Unix-like system.<br>
<a href="https://github.com/wg/wrk">wrk</a> - HTTP benchmark.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Performance monitoring tool - sar</h5><a id="user-content-performance-monitoring-tool---sar" aria-label="Permalink: Performance monitoring tool - sar" href="#performance-monitoring-tool---sar"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# installation
# It collects the data every 10 minutes and generate its report daily. crontab file (/etc/cron.d/sysstat) is responsible for collecting and generating reports.
yum install sysstat
systemctl start sysstat
systemctl enable sysstat

# show CPU utilization 5 times every 2 seconds.
sar 2 5

# show memory  utilization 5 times every 2 seconds.
sar -r 2 5

# show paging statistics 5 times every 2 seconds.
sar -B 2 5

# To generate all network statistic:
sar -n ALL

# reading SAR log file using -f
sar -f /var/log/sa/sa31|tail"><pre><span><span>#</span> installation</span>
<span><span>#</span> It collects the data every 10 minutes and generate its report daily. crontab file (/etc/cron.d/sysstat) is responsible for collecting and generating reports.</span>
yum install sysstat
systemctl start sysstat
systemctl <span>enable</span> sysstat

<span><span>#</span> show CPU utilization 5 times every 2 seconds.</span>
sar 2 5

<span><span>#</span> show memory  utilization 5 times every 2 seconds.</span>
sar -r 2 5

<span><span>#</span> show paging statistics 5 times every 2 seconds.</span>
sar -B 2 5

<span><span>#</span> To generate all network statistic:</span>
sar -n ALL

<span><span>#</span> reading SAR log file using -f</span>
sar -f /var/log/sa/sa31<span>|</span>tail</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Reading from journal file</h5><a id="user-content-reading-from-journal-file" aria-label="Permalink: Reading from journal file" href="#reading-from-journal-file"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="journalctl --file ./log/journal/a90c18f62af546ccba02fa3734f00a04/system.journal  --since &quot;2020-02-11 00:00:00&quot;"><pre>journalctl --file ./log/journal/a90c18f62af546ccba02fa3734f00a04/system.journal  --since <span><span>"</span>2020-02-11 00:00:00<span>"</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Show a listing of last logged in users.</h5><a id="user-content-show-a-listing-of-last-logged-in-users" aria-label="Permalink: Show a listing of last logged in users." href="#show-a-listing-of-last-logged-in-users"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Show a listing of current logged in users, print information of them</h5><a id="user-content-show-a-listing-of-current-logged-in-users-print-information-of-them" aria-label="Permalink: Show a listing of current logged in users, print information of them" href="#show-a-listing-of-current-logged-in-users-print-information-of-them"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Show who is logged on and what they are doing</h5><a id="user-content-show-who-is-logged-on-and-what-they-are-doing" aria-label="Permalink: Show who is logged on and what they are doing" href="#show-who-is-logged-on-and-what-they-are-doing"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Print the user names of users currently logged in to the current host.</h5><a id="user-content-print-the-user-names-of-users-currently-logged-in-to-the-current-host" aria-label="Permalink: Print the user names of users currently logged in to the current host." href="#print-the-user-names-of-users-currently-logged-in-to-the-current-host"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Stop tailing a file on program terminate</h5><a id="user-content-stop-tailing-a-file-on-program-terminate" aria-label="Permalink: Stop tailing a file on program terminate" href="#stop-tailing-a-file-on-program-terminate"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="tail -f --pid=<PID> filename.txt
# replace <PID> with the process ID of the program."><pre>tail -f --pid=<span>&lt;</span>PID<span>&gt;</span> filename.txt
<span><span>#</span> replace &lt;PID&gt; with the process ID of the program.</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List all enabled services</h5><a id="user-content-list-all-enabled-services" aria-label="Permalink: List all enabled services" href="#list-all-enabled-services"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="systemctl list-unit-files|grep enabled"><pre>systemctl list-unit-files<span>|</span>grep enabled</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Hardware</h2><a id="user-content-hardware" aria-label="Permalink: Hardware" href="#hardware"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Collect and summarize all hardware info of your machine</h5><a id="user-content-collect-and-summarize-all-hardware-info-of-your-machine" aria-label="Permalink: Collect and summarize all hardware info of your machine" href="#collect-and-summarize-all-hardware-info-of-your-machine"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="lshw -json >report.json
# Other options are: [ -html ]  [ -short ]  [ -xml ]  [ -json ]  [ -businfo ]  [ -sanitize ] ,etc"><pre>lshw -json <span>&gt;</span>report.json
<span><span>#</span> Other options are: [ -html ]  [ -short ]  [ -xml ]  [ -json ]  [ -businfo ]  [ -sanitize ] ,etc</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Finding Out memory device detail</h5><a id="user-content-finding-out-memory-device-detail" aria-label="Permalink: Finding Out memory device detail" href="#finding-out-memory-device-detail"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Print detail of CPU hardware</h5><a id="user-content-print-detail-of-cpu-hardware" aria-label="Permalink: Print detail of CPU hardware" href="#print-detail-of-cpu-hardware"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="dmidecode -t 4
#          Type   Information
#          0   BIOS
#          1   System
#          2   Base Board
#          3   Chassis
#          4   Processor
#          5   Memory Controller
#          6   Memory Module
#          7   Cache
#          8   Port Connector
#          9   System Slots
#         11   OEM Strings
#         13   BIOS Language
#         15   System Event Log
#         16   Physical Memory Array
#         17   Memory Device
#         18   32-bit Memory Error
#         19   Memory Array Mapped Address
#         20   Memory Device Mapped Address
#         21   Built-in Pointing Device
#         22   Portable Battery
#         23   System Reset
#         24   Hardware Security
#         25   System Power Controls
#         26   Voltage Probe
#         27   Cooling Device
#         28   Temperature Probe
#         29   Electrical Current Probe
#         30   Out-of-band Remote Access
#         31   Boot Integrity Services
#         32   System Boot
#         34   Management Device
#         35   Management Device Component
#         36   Management Device Threshold Data
#         37   Memory Channel
#         38   IPMI Device
#         39   Power Supply"><pre>dmidecode -t 4
<span><span>#</span>          Type   Information</span>
<span><span>#</span>          0   BIOS</span>
<span><span>#</span>          1   System</span>
<span><span>#</span>          2   Base Board</span>
<span><span>#</span>          3   Chassis</span>
<span><span>#</span>          4   Processor</span>
<span><span>#</span>          5   Memory Controller</span>
<span><span>#</span>          6   Memory Module</span>
<span><span>#</span>          7   Cache</span>
<span><span>#</span>          8   Port Connector</span>
<span><span>#</span>          9   System Slots</span>
<span><span>#</span>         11   OEM Strings</span>
<span><span>#</span>         13   BIOS Language</span>
<span><span>#</span>         15   System Event Log</span>
<span><span>#</span>         16   Physical Memory Array</span>
<span><span>#</span>         17   Memory Device</span>
<span><span>#</span>         18   32-bit Memory Error</span>
<span><span>#</span>         19   Memory Array Mapped Address</span>
<span><span>#</span>         20   Memory Device Mapped Address</span>
<span><span>#</span>         21   Built-in Pointing Device</span>
<span><span>#</span>         22   Portable Battery</span>
<span><span>#</span>         23   System Reset</span>
<span><span>#</span>         24   Hardware Security</span>
<span><span>#</span>         25   System Power Controls</span>
<span><span>#</span>         26   Voltage Probe</span>
<span><span>#</span>         27   Cooling Device</span>
<span><span>#</span>         28   Temperature Probe</span>
<span><span>#</span>         29   Electrical Current Probe</span>
<span><span>#</span>         30   Out-of-band Remote Access</span>
<span><span>#</span>         31   Boot Integrity Services</span>
<span><span>#</span>         32   System Boot</span>
<span><span>#</span>         34   Management Device</span>
<span><span>#</span>         35   Management Device Component</span>
<span><span>#</span>         36   Management Device Threshold Data</span>
<span><span>#</span>         37   Memory Channel</span>
<span><span>#</span>         38   IPMI Device</span>
<span><span>#</span>         39   Power Supply</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Count the number of Segate hard disks</h5><a id="user-content-count-the-number-of-segate-hard-disks" aria-label="Permalink: Count the number of Segate hard disks" href="#count-the-number-of-segate-hard-disks"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="lsscsi|grep SEAGATE|wc -l
# or
sg_map -i -x|grep SEAGATE|wc -l"><pre>lsscsi<span>|</span>grep SEAGATE<span>|</span>wc -l
<span><span>#</span> or</span>
sg_map -i -x<span>|</span>grep SEAGATE<span>|</span>wc -l</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Get UUID of a disk (e.g. sdb)</h5><a id="user-content-get-uuid-of-a-disk-eg-sdb" aria-label="Permalink: Get UUID of a disk (e.g. sdb)" href="#get-uuid-of-a-disk-eg-sdb"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="lsblk -f /dev/sdb

# or
sudo blkid /dev/sdb"><pre>lsblk -f /dev/sdb

<span><span>#</span> or</span>
sudo blkid /dev/sdb</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Generate an UUID</h5><a id="user-content-generate-an-uuid" aria-label="Permalink: Generate an UUID" href="#generate-an-uuid"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Print detail of all hard disks</h5><a id="user-content-print-detail-of-all-hard-disks" aria-label="Permalink: Print detail of all hard disks" href="#print-detail-of-all-hard-disks"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="lsblk -io KNAME,TYPE,MODEL,VENDOR,SIZE,ROTA
#where ROTA means rotational device / spinning hard disks (1 if true, 0 if false)"><pre>lsblk -io KNAME,TYPE,MODEL,VENDOR,SIZE,ROTA
<span><span>#</span>where ROTA means rotational device / spinning hard disks (1 if true, 0 if false)</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List all PCI (Peripheral Component Interconnect) devices</h5><a id="user-content-list-all-pci-peripheral-component-interconnect-devices" aria-label="Permalink: List all PCI (Peripheral Component Interconnect) devices" href="#list-all-pci-peripheral-component-interconnect-devices"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="lspci
# List information about NIC
lspci | egrep -i --color 'network|ethernet'"><pre>lspci
<span><span>#</span> List information about NIC</span>
lspci <span>|</span> egrep -i --color <span><span>'</span>network|ethernet<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List all USB devices</h5><a id="user-content-list-all-usb-devices" aria-label="Permalink: List all USB devices" href="#list-all-usb-devices"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Linux modules</h5><a id="user-content-linux-modules" aria-label="Permalink: Linux modules" href="#linux-modules"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Show the status of modules in the Linux Kernel
lsmod

# Add and remove modules from the Linux Kernel
modprobe

# or
# Remove a module
rmmod

# Insert a module
insmod"><pre><span><span>#</span> Show the status of modules in the Linux Kernel</span>
lsmod

<span><span>#</span> Add and remove modules from the Linux Kernel</span>
modprobe

<span><span>#</span> or</span>
<span><span>#</span> Remove a module</span>
rmmod

<span><span>#</span> Insert a module</span>
insmod</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Controlling IPMI-enabled devices (e.g. BMC)</h5><a id="user-content-controlling-ipmi-enabled-devices-eg-bmc" aria-label="Permalink: Controlling IPMI-enabled devices (e.g. BMC)" href="#controlling-ipmi-enabled-devices-eg-bmc"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Remotely finding out power status of the server
ipmitool -U <bmc_username> -P <bmc_password> -I lanplus -H <bmc_ip_address> power status

# Remotely switching on server
ipmitool -U <bmc_username> -P <bmc_password> -I lanplus -H <bmc_ip_address> power on

# Turn on panel identify light (default 15s)
ipmitool chassis identify 255

# Found out server sensor temperature
ipmitool sensors |grep -i Temp

# Reset BMC
ipmitool bmc reset cold

# Prnt BMC network
ipmitool lan print 1

# Setting BMC network
ipmitool -I bmc lan set 1 ipaddr 192.168.0.55
ipmitool -I bmc lan set 1 netmask 255.255.255.0
ipmitool -I bmc lan set 1 defgw ipaddr 192.168.0.1"><pre><span><span>#</span> Remotely finding out power status of the server</span>
ipmitool -U <span>&lt;</span>bmc_username<span>&gt;</span> -P <span>&lt;</span>bmc_password<span>&gt;</span> -I lanplus -H <span>&lt;</span>bmc_ip_address<span>&gt;</span> power status

<span><span>#</span> Remotely switching on server</span>
ipmitool -U <span>&lt;</span>bmc_username<span>&gt;</span> -P <span>&lt;</span>bmc_password<span>&gt;</span> -I lanplus -H <span>&lt;</span>bmc_ip_address<span>&gt;</span> power on

<span><span>#</span> Turn on panel identify light (default 15s)</span>
ipmitool chassis identify 255

<span><span>#</span> Found out server sensor temperature</span>
ipmitool sensors <span>|</span>grep -i Temp

<span><span>#</span> Reset BMC</span>
ipmitool bmc reset cold

<span><span>#</span> Prnt BMC network</span>
ipmitool lan print 1

<span><span>#</span> Setting BMC network</span>
ipmitool -I bmc lan <span>set</span> 1 ipaddr 192.168.0.55
ipmitool -I bmc lan <span>set</span> 1 netmask 255.255.255.0
ipmitool -I bmc lan <span>set</span> 1 defgw ipaddr 192.168.0.1</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Networking</h2><a id="user-content-networking" aria-label="Permalink: Networking" href="#networking"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Resolve a domain to IP address(es)</h5><a id="user-content-resolve-a-domain-to-ip-addresses" aria-label="Permalink: Resolve a domain to IP address(es)" href="#resolve-a-domain-to-ip-addresses"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="dig +short www.example.com

# or
host www.example.com"><pre>dig +short www.example.com

<span><span>#</span> or</span>
host www.example.com</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Get DNS TXT record a of domain</h5><a id="user-content-get-dns-txt-record-a-of-domain" aria-label="Permalink: Get DNS TXT record a of domain" href="#get-dns-txt-record-a-of-domain"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="dig -t txt www.example.com

# or
host -t txt www.example.com"><pre>dig -t txt www.example.com

<span><span>#</span> or</span>
host -t txt www.example.com</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Send a ping with a limited TTL to 10 (TTL: Time-To-Live, which is the maximum number of hops that a packet can travel across the Internet before it gets discarded.)</h5><a id="user-content-send-a-ping-with-a-limited-ttl-to-10-ttl-time-to-live-which-is-the-maximum-number-of-hops-that-a-packet-can-travel-across-the-internet-before-it-gets-discarded" aria-label="Permalink: Send a ping with a limited TTL to 10 (TTL: Time-To-Live, which is the maximum number of hops that a packet can travel across the Internet before it gets discarded.)" href="#send-a-ping-with-a-limited-ttl-to-10-ttl-time-to-live-which-is-the-maximum-number-of-hops-that-a-packet-can-travel-across-the-internet-before-it-gets-discarded"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Print the route packets trace to network host</h5><a id="user-content-print-the-route-packets-trace-to-network-host" aria-label="Permalink: Print the route packets trace to network host" href="#print-the-route-packets-trace-to-network-host"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Check connection to host (e.g. check connection to port 80 and 22 of google.com)</h5><a id="user-content-check-connection-to-host-eg-check-connection-to-port-80-and-22-of-googlecom" aria-label="Permalink: Check connection to host (e.g. check connection to port 80 and 22 of google.com)" href="#check-connection-to-host-eg-check-connection-to-port-80-and-22-of-googlecom"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="nc -vw5 google.com 80
# Connection to google.com 80 port [tcp/http] succeeded!

nc -vw5 google.com 22
# nc: connect to google.com port 22 (tcp) timed out: Operation now in progress
# nc: connect to google.com port 22 (tcp) failed: Network is unreachable"><pre>nc -vw5 google.com 80
<span><span>#</span> Connection to google.com 80 port [tcp/http] succeeded!</span>

nc -vw5 google.com 22
<span><span>#</span> nc: connect to google.com port 22 (tcp) timed out: Operation now in progress</span>
<span><span>#</span> nc: connect to google.com port 22 (tcp) failed: Network is unreachable</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Nc as a chat tool!</h5><a id="user-content-nc-as-a-chat-tool" aria-label="Permalink: Nc as a chat tool!" href="#nc-as-a-chat-tool"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# From server A:
$ sudo nc -l 80
# then you can connect to the 80 port from another server (e.g. server B):
# e.g. telnet <server A IP address> 80
# then type something in server B
# and you will see the result in server A!"><pre><span><span>#</span> From server A:</span>
$ sudo nc -l 80
<span><span>#</span> then you can connect to the 80 port from another server (e.g. server B):</span>
<span><span>#</span> e.g. telnet &lt;server A IP address&gt; 80</span>
<span><span>#</span> then type something in server B</span>
<span><span>#</span> and you will see the result in server A!</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Check which ports are listening for TCP connections from the network</h5><a id="user-content-check-which-ports-are-listening-for-tcp-connections-from-the-network" aria-label="Permalink: Check which ports are listening for TCP connections from the network" href="#check-which-ports-are-listening-for-tcp-connections-from-the-network"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="#notice that some companies might not like you using nmap
nmap -sT -O localhost

# check port 0-65535
nmap  -p0-65535 localhost"><pre><span><span>#</span>notice that some companies might not like you using nmap</span>
nmap -sT -O localhost

<span><span>#</span> check port 0-65535</span>
nmap  -p0-65535 localhost</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Check if a host is up and scan for open ports, also skip host discovery.</h5><a id="user-content-check-if-a-host-is-up-and-scan-for-open-ports-also-skip-host-discovery" aria-label="Permalink: Check if a host is up and scan for open ports, also skip host discovery." href="#check-if-a-host-is-up-and-scan-for-open-ports-also-skip-host-discovery"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="#skips checking if the host is alive which may sometimes cause a false positive and stop the scan.
$ nmap google.com -Pn

# Example output:
# Starting Nmap 7.01 ( https://nmap.org ) at 2020-07-18 22:59 CST
# Nmap scan report for google.com (172.217.24.14)
# Host is up (0.013s latency).
# Other addresses for google.com (not scanned): 2404:6800:4008:802::200e
# rDNS record for 172.217.24.14: tsa01s07-in-f14.1e100.net
# Not shown: 998 filtered ports
# PORT    STATE SERVICE
# 80/tcp  open  http
# 443/tcp open  https
#
# Nmap done: 1 IP address (1 host up) scanned in 3.99 seconds"><pre><span><span>#</span>skips checking if the host is alive which may sometimes cause a false positive and stop the scan.</span>
$ nmap google.com -Pn

<span><span>#</span> Example output:</span>
<span><span>#</span> Starting Nmap 7.01 ( https://nmap.org ) at 2020-07-18 22:59 CST</span>
<span><span>#</span> Nmap scan report for google.com (172.217.24.14)</span>
<span><span>#</span> Host is up (0.013s latency).</span>
<span><span>#</span> Other addresses for google.com (not scanned): 2404:6800:4008:802::200e</span>
<span><span>#</span> rDNS record for 172.217.24.14: tsa01s07-in-f14.1e100.net</span>
<span><span>#</span> Not shown: 998 filtered ports</span>
<span><span>#</span> PORT    STATE SERVICE</span>
<span><span>#</span> 80/tcp  open  http</span>
<span><span>#</span> 443/tcp open  https</span>
<span><span>#</span></span>
<span><span>#</span> Nmap done: 1 IP address (1 host up) scanned in 3.99 seconds</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Scan for open ports and OS and version detection (e.g. scan the domain "scanme.nmap.org")</h5><a id="user-content-scan-for-open-ports-and-os-and-version-detection-eg-scan-the-domain-scanmenmaporg" aria-label="Permalink: Scan for open ports and OS and version detection (e.g. scan the domain &quot;scanme.nmap.org&quot;)" href="#scan-for-open-ports-and-os-and-version-detection-eg-scan-the-domain-scanmenmaporg"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="$ nmap -A -T4 scanme.nmap.org
# -A to enable OS and version detection, script scanning, and traceroute; -T4 for faster execution"><pre>$ nmap -A -T4 scanme.nmap.org
<span><span>#</span> -A to enable OS and version detection, script scanning, and traceroute; -T4 for faster execution</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Look up website information (e.g. name server), searches for an object in a RFC 3912 database.</h5><a id="user-content-look-up-website-information-eg-name-server-searches-for-an-object-in-a-rfc-3912-database" aria-label="Permalink: Look up website information (e.g. name server), searches for an object in a RFC 3912 database." href="#look-up-website-information-eg-name-server-searches-for-an-object-in-a-rfc-3912-database"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Show the SSL certificate of a domain</h5><a id="user-content-show-the-ssl-certificate-of-a-domain" aria-label="Permalink: Show the SSL certificate of a domain" href="#show-the-ssl-certificate-of-a-domain"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="openssl s_client -showcerts -connect www.example.com:443"><pre>openssl s_client -showcerts -connect www.example.com:443</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Display IP address</h5><a id="user-content-display-ip-address" aria-label="Permalink: Display IP address" href="#display-ip-address"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Display route table</h5><a id="user-content-display-route-table" aria-label="Permalink: Display route table" href="#display-route-table"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Display ARP cache (ARP cache displays the MAC addresses of device in the same network that you have connected to)</h5><a id="user-content-display-arp-cache-arp-cache-displays-the-mac-addresses-of-device-in-the-same-network-that-you-have-connected-to" aria-label="Permalink: Display ARP cache (ARP cache displays the MAC addresses of device in the same network that you have connected to)" href="#display-arp-cache-arp-cache-displays-the-mac-addresses-of-device-in-the-same-network-that-you-have-connected-to"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Add transient IP addres (reset after reboot) (e.g. add 192.168.140.3/24 to device eno16777736)</h5><a id="user-content-add-transient-ip-addres-reset-after-reboot-eg-add-192168140324-to-device-eno16777736" aria-label="Permalink: Add transient IP addres (reset after reboot) (e.g. add 192.168.140.3/24 to device eno16777736)" href="#add-transient-ip-addres-reset-after-reboot-eg-add-192168140324-to-device-eno16777736"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ip address add 192.168.140.3/24 dev eno16777736"><pre>ip address add 192.168.140.3/24 dev eno16777736</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Persisting network configuration changes</h5><a id="user-content-persisting-network-configuration-changes" aria-label="Permalink: Persisting network configuration changes" href="#persisting-network-configuration-changes"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo vi /etc/sysconfig/network-scripts/ifcfg-enoxxx
# then edit the fields: BOOTPROT, DEVICE, IPADDR, NETMASK, GATEWAY, DNS1 etc"><pre>sudo vi /etc/sysconfig/network-scripts/ifcfg-enoxxx
<span><span>#</span> then edit the fields: BOOTPROT, DEVICE, IPADDR, NETMASK, GATEWAY, DNS1 etc</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Refresh NetworkManager</h5><a id="user-content-refresh-networkmanager" aria-label="Permalink: Refresh NetworkManager" href="#refresh-networkmanager"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Restart all interfaces</h5><a id="user-content-restart-all-interfaces" aria-label="Permalink: Restart all interfaces" href="#restart-all-interfaces"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo systemctl restart network.service"><pre>sudo systemctl restart network.service</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">To view hostname, OS, kernal, architecture at the same time!</h5><a id="user-content-to-view-hostname-os-kernal-architecture-at-the-same-time" aria-label="Permalink: To view hostname, OS, kernal, architecture at the same time!" href="#to-view-hostname-os-kernal-architecture-at-the-same-time"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Set hostname (set all transient, static, pretty hostname at once)</h5><a id="user-content-set-hostname-set-all-transient-static-pretty-hostname-at-once" aria-label="Permalink: Set hostname (set all transient, static, pretty hostname at once)" href="#set-hostname-set-all-transient-static-pretty-hostname-at-once"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="hostnamectl set-hostname &quot;mynode&quot;"><pre>hostnamectl set-hostname <span><span>"</span>mynode<span>"</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Find out the web server (e.g Nginx or Apache) of a website</h5><a id="user-content-find-out-the-web-server-eg-nginx-or-apache-of-a-website" aria-label="Permalink: Find out the web server (e.g Nginx or Apache) of a website" href="#find-out-the-web-server-eg-nginx-or-apache-of-a-website"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="curl -I http://example.com/
# HTTP/1.1 200 OK
# Server: nginx
# Date: Thu, 02 Jan 2020 07:01:07 GMT
# Content-Type: text/html
# Content-Length: 1119
# Connection: keep-alive
# Vary: Accept-Encoding
# Last-Modified: Mon, 09 Sep 2019 10:37:49 GMT
# ETag: &quot;xxxxxx&quot;
# Accept-Ranges: bytes
# Vary: Accept-Encoding"><pre>curl -I http://example.com/
<span><span>#</span> HTTP/1.1 200 OK</span>
<span><span>#</span> Server: nginx</span>
<span><span>#</span> Date: Thu, 02 Jan 2020 07:01:07 GMT</span>
<span><span>#</span> Content-Type: text/html</span>
<span><span>#</span> Content-Length: 1119</span>
<span><span>#</span> Connection: keep-alive</span>
<span><span>#</span> Vary: Accept-Encoding</span>
<span><span>#</span> Last-Modified: Mon, 09 Sep 2019 10:37:49 GMT</span>
<span><span>#</span> ETag: "xxxxxx"</span>
<span><span>#</span> Accept-Ranges: bytes</span>
<span><span>#</span> Vary: Accept-Encoding</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Find out the http status code of a URL</h5><a id="user-content-find-out-the-http-status-code-of-a-url" aria-label="Permalink: Find out the http status code of a URL" href="#find-out-the-http-status-code-of-a-url"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="curl -s -o /dev/null -w &quot;%{http_code}&quot; https://www.google.com"><pre>curl -s -o /dev/null -w <span><span>"</span>%{http_code}<span>"</span></span> https://www.google.com</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Unshorten a shortended URL</h5><a id="user-content-unshorten-a-shortended-url" aria-label="Permalink: Unshorten a shortended URL" href="#unshorten-a-shortended-url"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="curl -s -o /dev/null -w &quot;%{redirect_url}&quot; https://bit.ly/34EFwWC"><pre>curl -s -o /dev/null -w <span><span>"</span>%{redirect_url}<span>"</span></span> https://bit.ly/34EFwWC</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Perform network throughput tests</h5><a id="user-content-perform-network-throughput-tests" aria-label="Permalink: Perform network throughput tests" href="#perform-network-throughput-tests"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# server side:
$ sudo iperf -s -p 80

# client side:
iperf -c <server IP address> --parallel 2 -i 1 -t 2 -p 80"><pre><span><span>#</span> server side:</span>
$ sudo iperf -s -p 80

<span><span>#</span> client side:</span>
iperf -c <span>&lt;</span>server IP address<span>&gt;</span> --parallel 2 -i 1 -t 2 -p 80</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">To block port 80 (HTTP server) using iptables.</h5><a id="user-content-to-block-port-80-http-server-using-iptables" aria-label="Permalink: To block port 80 (HTTP server) using iptables." href="#to-block-port-80-http-server-using-iptables"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo iptables -A INPUT -p tcp --dport 80 -j DROP

# only block connection from an IP address
sudo iptables –A INPUT –s <IP> -p tcp –dport 80 –j DROP"><pre>sudo iptables -A INPUT -p tcp --dport 80 -j DROP

<span><span>#</span> only block connection from an IP address</span>
sudo iptables –A INPUT –s <span>&lt;</span>IP<span>&gt;</span> -p tcp –dport 80 –j DROP</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Data wrangling</h2><a id="user-content-data-wrangling" aria-label="Permalink: Data wrangling" href="#data-wrangling"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print some words that start with a particular string (e.g. words start with 'phy')</h5><a id="user-content-print-some-words-that-start-with-a-particular-string-eg-words-start-with-phy" aria-label="Permalink: Print some words that start with a particular string (e.g. words start with 'phy')" href="#print-some-words-that-start-with-a-particular-string-eg-words-start-with-phy"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# If file is not specified, the file /usr/share/dict/words is used.
look phy|head -n 10
# phycic
# Phyciodes
# phycite
# Phycitidae
# phycitol
# phyco-
# phycochrom
# phycochromaceae
# phycochromaceous
# phycochrome"><pre><span><span>#</span> If file is not specified, the file /usr/share/dict/words is used.</span>
look phy<span>|</span>head -n 10
<span><span>#</span> phycic</span>
<span><span>#</span> Phyciodes</span>
<span><span>#</span> phycite</span>
<span><span>#</span> Phycitidae</span>
<span><span>#</span> phycitol</span>
<span><span>#</span> phyco-</span>
<span><span>#</span> phycochrom</span>
<span><span>#</span> phycochromaceae</span>
<span><span>#</span> phycochromaceous</span>
<span><span>#</span> phycochrome</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Repeat printing string n times (e.g. print 'hello world' five times)</h5><a id="user-content-repeat-printing-string-n-times-eg-print-hello-world-five-times" aria-label="Permalink: Repeat printing string n times (e.g. print 'hello world' five times)" href="#repeat-printing-string-n-times-eg-print-hello-world-five-times"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="printf 'hello world\n%.0s' {1..5}"><pre><span>printf</span> <span><span>'</span>hello world\n%.0s<span>'</span></span> {1..5}</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Do not echo the trailing newline</h5><a id="user-content-do-not-echo-the-trailing-newline" aria-label="Permalink: Do not echo the trailing newline" href="#do-not-echo-the-trailing-newline"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="username=`echo -n &quot;bashoneliner&quot;`"><pre>username=<span><span>`</span>echo -n <span><span>"</span>bashoneliner<span>"</span></span><span>`</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Copy a file to multiple files (e.g copy fileA to file(B-D))</h5><a id="user-content-copy-a-file-to-multiple-files-eg-copy-filea-to-fileb-d" aria-label="Permalink: Copy a file to multiple files (e.g copy fileA to file(B-D))" href="#copy-a-file-to-multiple-files-eg-copy-filea-to-fileb-d"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="tee <fileA fileB fileC fileD >/dev/null"><pre>tee <span>&lt;</span>fileA fileB fileC fileD <span>&gt;</span>/dev/null</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Delete all non-printing characters</h5><a id="user-content-delete-all-non-printing-characters" aria-label="Permalink: Delete all non-printing characters" href="#delete-all-non-printing-characters"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="tr -dc '[:print:]' < filename"><pre>tr -dc <span><span>'</span>[:print:]<span>'</span></span> <span>&lt;</span> filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Remove newline / nextline</h5><a id="user-content-remove-newline--nextline" aria-label="Permalink: Remove newline / nextline" href="#remove-newline--nextline"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="tr --delete '\n' <input.txt >output.txt"><pre>tr --delete <span><span>'</span>\n<span>'</span></span> <span>&lt;</span>input.txt <span>&gt;</span>output.txt</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Replace newline</h5><a id="user-content-replace-newline" aria-label="Permalink: Replace newline" href="#replace-newline"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">To uppercase/lowercase</h5><a id="user-content-to-uppercaselowercase" aria-label="Permalink: To uppercase/lowercase" href="#to-uppercaselowercase"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Translate a range of characters (e.g. substitute a-z into a)</h5><a id="user-content-translate-a-range-of-characters-eg-substitute-a-z-into-a" aria-label="Permalink: Translate a range of characters (e.g. substitute a-z into a)" href="#translate-a-range-of-characters-eg-substitute-a-z-into-a"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="echo 'something' |tr a-z a
# aaaaaaaaa"><pre><span>echo</span> <span><span>'</span>something<span>'</span></span> <span>|</span>tr a-z a
<span><span>#</span> aaaaaaaaa</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Compare two files (e.g. fileA, fileB)</h5><a id="user-content-compare-two-files-eg-filea-fileb" aria-label="Permalink: Compare two files (e.g. fileA, fileB)" href="#compare-two-files-eg-filea-fileb"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="diff fileA fileB
# a: added; d:delete; c:changed

# or
sdiff fileA fileB
# side-to-side merge of file differences"><pre>diff fileA fileB
<span><span>#</span> a: added; d:delete; c:changed</span>

<span><span>#</span> or</span>
sdiff fileA fileB
<span><span>#</span> side-to-side merge of file differences</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Compare two files, strip trailing carriage return/ nextline (e.g. fileA, fileB)</h5><a id="user-content-compare-two-files-strip-trailing-carriage-return-nextline-eg-filea-fileb" aria-label="Permalink: Compare two files, strip trailing carriage return/ nextline (e.g. fileA, fileB)" href="#compare-two-files-strip-trailing-carriage-return-nextline-eg-filea-fileb"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="diff fileA fileB --strip-trailing-cr"><pre>diff fileA fileB --strip-trailing-cr</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Find common/differing lines</h5><a id="user-content-find-commondiffering-lines" aria-label="Permalink: Find common/differing lines" href="#find-commondiffering-lines"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# having two sorted and uniqed files (for example after running `$ sort -uo fileA fileA` and same for fileB):
# ------
# fileA:
# ------
# joey
# kitten
# piglet
# puppy
# ------
# fileB:
# ------
# calf
# chick
# joey
# puppy
#
# Find lines in both files
comm -12 fileA fileB
# joey
# puppy
#
# Find lines in fileB that are NOT in fileA
comm -13 fileA fileB
# calf
# chick
#
# Find lines in fileA that are NOT in fileB
comm -23 fileA fileB
# kitten
# piglet"><pre><span><span>#</span> having two sorted and uniqed files (for example after running `$ sort -uo fileA fileA` and same for fileB):</span>
<span><span>#</span> ------</span>
<span><span>#</span> fileA:</span>
<span><span>#</span> ------</span>
<span><span>#</span> joey</span>
<span><span>#</span> kitten</span>
<span><span>#</span> piglet</span>
<span><span>#</span> puppy</span>
<span><span>#</span> ------</span>
<span><span>#</span> fileB:</span>
<span><span>#</span> ------</span>
<span><span>#</span> calf</span>
<span><span>#</span> chick</span>
<span><span>#</span> joey</span>
<span><span>#</span> puppy</span>
<span><span>#</span></span>
<span><span>#</span> Find lines in both files</span>
comm -12 fileA fileB
<span><span>#</span> joey</span>
<span><span>#</span> puppy</span>
<span><span>#</span></span>
<span><span>#</span> Find lines in fileB that are NOT in fileA</span>
comm -13 fileA fileB
<span><span>#</span> calf</span>
<span><span>#</span> chick</span>
<span><span>#</span></span>
<span><span>#</span> Find lines in fileA that are NOT in fileB</span>
comm -23 fileA fileB
<span><span>#</span> kitten</span>
<span><span>#</span> piglet</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Number a file (e.g. fileA)</h5><a id="user-content-number-a-file-eg-filea" aria-label="Permalink: Number a file (e.g. fileA)" href="#number-a-file-eg-filea"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="nl fileA

#or
nl -nrz fileA
# add leading zeros

#or
nl -w1 -s ' '
# making it simple, blank separate"><pre>nl fileA

<span><span>#</span>or</span>
nl -nrz fileA
<span><span>#</span> add leading zeros</span>

<span><span>#</span>or</span>
nl -w1 -s <span><span>'</span> <span>'</span></span>
<span><span>#</span> making it simple, blank separate</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Join two files field by field with tab (default join by the first column of both file, and default separator is space)</h5><a id="user-content-join-two-files-field-by-field-with-tab-default-join-by-the-first-column-of-both-file-and-default-separator-is-space" aria-label="Permalink: Join two files field by field with tab (default join by the first column of both file, and default separator is space)" href="#join-two-files-field-by-field-with-tab-default-join-by-the-first-column-of-both-file-and-default-separator-is-space"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# fileA and fileB should have the same ordering of lines.
join -t '\t' fileA fileB

# Join using specified field (e.g. column 3 of fileA and column 5 of fileB)
join -1 3 -2 5 fileA fileB"><pre><span><span>#</span> fileA and fileB should have the same ordering of lines.</span>
join -t <span><span>'</span>\t<span>'</span></span> fileA fileB

<span><span>#</span> Join using specified field (e.g. column 3 of fileA and column 5 of fileB)</span>
join -1 3 -2 5 fileA fileB</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Combine/ paste two or more files into columns (e.g. fileA, fileB, fileC)</h5><a id="user-content-combine-paste-two-or-more-files-into-columns-eg-filea-fileb-filec" aria-label="Permalink: Combine/ paste two or more files into columns (e.g. fileA, fileB, fileC)" href="#combine-paste-two-or-more-files-into-columns-eg-filea-fileb-filec"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="paste fileA fileB fileC
# default tab separate"><pre>paste fileA fileB fileC
<span><span>#</span> default tab separate</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Group/combine rows into one row</h5><a id="user-content-groupcombine-rows-into-one-row" aria-label="Permalink: Group/combine rows into one row" href="#groupcombine-rows-into-one-row"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# e.g.
# AAAA
# BBBB
# CCCC
# DDDD
cat filename|paste - -
# AAAABBBB
# CCCCDDDD
cat filename|paste - - - -
# AAAABBBBCCCCDDDD"><pre><span><span>#</span> e.g.</span>
<span><span>#</span> AAAA</span>
<span><span>#</span> BBBB</span>
<span><span>#</span> CCCC</span>
<span><span>#</span> DDDD</span>
cat filename<span>|</span>paste - -
<span><span>#</span> AAAABBBB</span>
<span><span>#</span> CCCCDDDD</span>
cat filename<span>|</span>paste - - - -
<span><span>#</span> AAAABBBBCCCCDDDD</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Fastq to fasta (fastq and fasta are common file formats for bioinformatics sequence data)</h5><a id="user-content-fastq-to-fasta-fastq-and-fasta-are-common-file-formats-for-bioinformatics-sequence-data" aria-label="Permalink: Fastq to fasta (fastq and fasta are common file formats for bioinformatics sequence data)" href="#fastq-to-fasta-fastq-and-fasta-are-common-file-formats-for-bioinformatics-sequence-data"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cat file.fastq | paste - - - - | sed 's/^@/>/g'| cut -f1-2 | tr '\t' '\n' >file.fa"><pre>cat file.fastq <span>|</span> paste - - - - <span>|</span> sed <span><span>'</span>s/^@/&gt;/g<span>'</span></span><span>|</span> cut -f1-2 <span>|</span> tr <span><span>'</span>\t<span>'</span></span> <span><span>'</span>\n<span>'</span></span> <span>&gt;</span>file.fa</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Reverse string</h5><a id="user-content-reverse-string" aria-label="Permalink: Reverse string" href="#reverse-string"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Generate sequence 1-10</h5><a id="user-content-generate-sequence-1-10" aria-label="Permalink: Generate sequence 1-10" href="#generate-sequence-1-10"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Find average of input list/file of integers</h5><a id="user-content-find-average-of-input-listfile-of-integers" aria-label="Permalink: Find average of input list/file of integers" href="#find-average-of-input-listfile-of-integers"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="i=`wc -l filename|cut -d ' ' -f1`; cat filename| echo &quot;scale=2;(`paste -sd+`)/&quot;$i|bc"><pre>i=<span><span>`</span>wc -l filename<span>|</span>cut -d <span><span>'</span> <span>'</span></span> -f1<span>`</span></span><span>;</span> cat filename<span>|</span> <span>echo</span> <span><span>"</span>scale=2;(<span><span>`</span>paste -sd+<span>`</span></span>)/<span>"</span></span><span>$i</span><span>|</span>bc</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Generate all combination (e.g. 1,2)</h5><a id="user-content-generate-all-combination-eg-12" aria-label="Permalink: Generate all combination (e.g. 1,2)" href="#generate-all-combination-eg-12"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="echo {1,2}{1,2}
# 1 1, 1 2, 2 1, 2 2"><pre><span>echo</span> {1,2}{1,2}
<span><span>#</span> 1 1, 1 2, 2 1, 2 2</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Generate all combination (e.g. A,T,C,G)</h5><a id="user-content-generate-all-combination-eg-atcg" aria-label="Permalink: Generate all combination (e.g. A,T,C,G)" href="#generate-all-combination-eg-atcg"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="set = {A,T,C,G}
group= 5
for ((i=0; i<$group; i++)); do
    repetition=$set$repetition; done
    bash -c &quot;echo &quot;$repetition&quot;&quot;"><pre><span>set</span> = {A,T,C,G}
group= 5
<span>for</span> <span><span>((</span>i<span>=</span><span>0</span>; i<span>&lt;</span><span>$group</span>; i<span>++</span><span>))</span></span><span>;</span> <span>do</span>
    repetition=<span>$set$repetition</span><span>;</span> <span>done</span>
    bash -c <span><span>"</span>echo <span>"</span></span><span>$repetition</span><span><span>"</span><span>"</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Read file content to variable</h5><a id="user-content-read-file-content-to-variable" aria-label="Permalink: Read file content to variable" href="#read-file-content-to-variable"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Echo size of variable</h5><a id="user-content-echo-size-of-variable" aria-label="Permalink: Echo size of variable" href="#echo-size-of-variable"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Echo a tab</h5><a id="user-content-echo-a-tab" aria-label="Permalink: Echo a tab" href="#echo-a-tab"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Split file into smaller file</h5><a id="user-content-split-file-into-smaller-file" aria-label="Permalink: Split file into smaller file" href="#split-file-into-smaller-file"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Split by line (e.g. 1000 lines/smallfile)
split -d -l 1000 largefile.txt

# Split by byte without breaking lines across files
split -C 10 largefile.txt"><pre><span><span>#</span> Split by line (e.g. 1000 lines/smallfile)</span>
split -d -l 1000 largefile.txt

<span><span>#</span> Split by byte without breaking lines across files</span>
split -C 10 largefile.txt</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Create a large amount of dummy files (e.g 100000 files, 10 bytes each):</h5><a id="user-content-create-a-large-amount-of-dummy-files-eg-100000-files-10-bytes-each" aria-label="Permalink: Create a large amount of dummy files (e.g 100000 files, 10 bytes each):" href="#create-a-large-amount-of-dummy-files-eg-100000-files-10-bytes-each"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="#1. Create a big file
dd if=/dev/zero of=bigfile bs=1 count=1000000

#2. Split the big file to 100000 10-bytes files
 split -b 10 -a 10 bigfile"><pre><span><span>#</span>1. Create a big file</span>
dd if=/dev/zero of=bigfile bs=1 count=1000000

<span><span>#</span>2. Split the big file to 100000 10-bytes files</span>
 split -b 10 -a 10 bigfile</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Rename all files (e.g. remove ABC from all .gz files)</h5><a id="user-content-rename-all-files-eg-remove-abc-from-all-gz-files" aria-label="Permalink: Rename all files (e.g. remove ABC from all .gz files)" href="#rename-all-files-eg-remove-abc-from-all-gz-files"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Remove file extension (e.g remove .gz from filename.gz)</h5><a id="user-content-remove-file-extension-eg-remove-gz-from-filenamegz" aria-label="Permalink: Remove file extension (e.g remove .gz from filename.gz)" href="#remove-file-extension-eg-remove-gz-from-filenamegz"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="basename filename.gz .gz

zcat filename.gz> $(basename filename.gz .gz).unpacked"><pre>basename filename.gz .gz

zcat filename.gz<span>&gt;</span> <span><span>$(</span>basename filename.gz .gz<span>)</span></span>.unpacked</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Add file extension to all file(e.g add .txt)</h5><a id="user-content-add-file-extension-to-all-fileeg-add-txt" aria-label="Permalink: Add file extension to all file(e.g add .txt)" href="#add-file-extension-to-all-fileeg-add-txt"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="rename s/$/.txt/ *
# You can use rename -n s/$/.txt/ * to check the result first, it will only print sth like this:
# rename(a, a.txt)
# rename(b, b.txt)
# rename(c, c.txt)"><pre>rename s/$/.txt/ <span>*</span>
<span><span>#</span> You can use rename -n s/$/.txt/ * to check the result first, it will only print sth like this:</span>
<span><span>#</span> rename(a, a.txt)</span>
<span><span>#</span> rename(b, b.txt)</span>
<span><span>#</span> rename(c, c.txt)</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Squeeze repeat patterns (e.g. /t/t --&gt; /t)</h5><a id="user-content-squeeze-repeat-patterns-eg-tt----t" aria-label="Permalink: Squeeze repeat patterns (e.g. /t/t --> /t)" href="#squeeze-repeat-patterns-eg-tt----t"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Do not print nextline with echo</h5><a id="user-content-do-not-print-nextline-with-echo" aria-label="Permalink: Do not print nextline with echo" href="#do-not-print-nextline-with-echo"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">View first 50 characters of file</h5><a id="user-content-view-first-50-characters-of-file" aria-label="Permalink: View first 50 characters of file" href="#view-first-50-characters-of-file"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Cut and get last column of a file</h5><a id="user-content-cut-and-get-last-column-of-a-file" aria-label="Permalink: Cut and get last column of a file" href="#cut-and-get-last-column-of-a-file"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cat file|rev | cut -d/ -f1 | rev"><pre>cat file<span>|</span>rev <span>|</span> cut -d/ -f1 <span>|</span> rev</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Add one to variable/increment/ i++ a numeric variable (e.g. $var)</h5><a id="user-content-add-one-to-variableincrement-i-a-numeric-variable-eg-var" aria-label="Permalink: Add one to variable/increment/ i++ a numeric variable (e.g. $var)" href="#add-one-to-variableincrement-i-a-numeric-variable-eg-var"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="((var++))
# or
var=$((var+1))
"><pre><span><span>((</span>var<span>++</span><span>))</span></span>
<span><span>#</span> or</span>
var=<span><span>$((</span>var<span>+</span><span>1</span><span>))</span></span>
</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Cut the last column</h5><a id="user-content-cut-the-last-column" aria-label="Permalink: Cut the last column" href="#cut-the-last-column"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cat filename|rev|cut -f1|rev"><pre>cat filename<span>|</span>rev<span>|</span>cut -f1<span>|</span>rev</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Create or replace a file with contents</h5><a id="user-content-create-or-replace-a-file-with-contents" aria-label="Permalink: Create or replace a file with contents" href="#create-or-replace-a-file-with-contents"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cat >myfile
let me add sth here
# exit with ctrl+d

# or using tee
tee myfile
let me add sth else here
# exit with ctrl+d"><pre>cat <span>&gt;</span>myfile
<span>let</span> me add sth here
<span><span>#</span> exit with ctrl+d</span>

<span><span>#</span> or using tee</span>
tee myfile
<span>let</span> me add sth <span>else</span> here
<span><span>#</span> exit with ctrl+d</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Append to a file with contents</h5><a id="user-content-append-to-a-file-with-contents" aria-label="Permalink: Append to a file with contents" href="#append-to-a-file-with-contents"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cat >>myfile
let me add sth here
# exit with ctrl+d

# or using tee
tee -a myfile
let me add sth else here
# exit with ctrl+d"><pre>cat <span>&gt;&gt;</span>myfile
<span>let</span> me add sth here
<span><span>#</span> exit with ctrl+d</span>

<span><span>#</span> or using tee</span>
tee -a myfile
<span>let</span> me add sth <span>else</span> here
<span><span>#</span> exit with ctrl+d</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Clear the contents of a file (e.g. filename)</h5><a id="user-content-clear-the-contents-of-a-file-eg-filename" aria-label="Permalink: Clear the contents of a file (e.g. filename)" href="#clear-the-contents-of-a-file-eg-filename"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Append to file (e.g. hihi)</h5><a id="user-content-append-to-file-eg-hihi" aria-label="Permalink: Append to file (e.g. hihi)" href="#append-to-file-eg-hihi"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Working with json data</h5><a id="user-content-working-with-json-data" aria-label="Permalink: Working with json data" href="#working-with-json-data"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="#install the useful jq package
#sudo apt-get install jq
#e.g. to get all the values of the 'url' key, simply pipe the json to the following jq command(you can use .[]. to select inner json, i.e jq '.[].url')
cat file.json | jq '.url'"><pre><span><span>#</span>install the useful jq package</span>
<span><span>#</span>sudo apt-get install jq</span>
<span><span>#</span>e.g. to get all the values of the 'url' key, simply pipe the json to the following jq command(you can use .[]. to select inner json, i.e jq '.[].url')</span>
cat file.json <span>|</span> jq <span><span>'</span>.url<span>'</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Decimal to Binary (e.g get binary of 5)</h5><a id="user-content-decimal-to-binary-eg-get-binary-of-5" aria-label="Permalink: Decimal to Binary (e.g get binary of 5)" href="#decimal-to-binary-eg-get-binary-of-5"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="D2B=({0..1}{0..1}{0..1}{0..1}{0..1}{0..1}{0..1}{0..1})
echo -e ${D2B[5]}
#00000101
echo -e ${D2B[255]}
#11111111"><pre>D2B=({0..1}{0..1}{0..1}{0..1}{0..1}{0..1}{0..1}{0..1})
<span>echo</span> -e <span>${D2B[5]}</span>
<span><span>#</span>00000101</span>
<span>echo</span> -e <span>${D2B[255]}</span>
<span><span>#</span>11111111</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Wrap each input line to fit in specified width (e.g 4 integers per line)</h5><a id="user-content-wrap-each-input-line-to-fit-in-specified-width-eg-4-integers-per-line" aria-label="Permalink: Wrap each input line to fit in specified width (e.g 4 integers per line)" href="#wrap-each-input-line-to-fit-in-specified-width-eg-4-integers-per-line"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="echo &quot;00110010101110001101&quot; | fold -w4
# 0011
# 0010
# 1011
# 1000
# 1101"><pre><span>echo</span> <span><span>"</span>00110010101110001101<span>"</span></span> <span>|</span> fold -w4
<span><span>#</span> 0011</span>
<span><span>#</span> 0010</span>
<span><span>#</span> 1011</span>
<span><span>#</span> 1000</span>
<span><span>#</span> 1101</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Sort a file by column and keep the original order</h5><a id="user-content-sort-a-file-by-column-and-keep-the-original-order" aria-label="Permalink: Sort a file by column and keep the original order" href="#sort-a-file-by-column-and-keep-the-original-order"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Right align a column (right align the 2nd column)</h5><a id="user-content-right-align-a-column-right-align-the-2nd-column" aria-label="Permalink: Right align a column (right align the 2nd column)" href="#right-align-a-column-right-align-the-2nd-column"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cat file.txt|rev|column -t|rev"><pre>cat file.txt<span>|</span>rev<span>|</span>column -t<span>|</span>rev</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">To both view and store the output</h5><a id="user-content-to-both-view-and-store-the-output" aria-label="Permalink: To both view and store the output" href="#to-both-view-and-store-the-output"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="echo 'hihihihi' | tee outputfile.txt
# use '-a' with tee to append to file."><pre><span>echo</span> <span><span>'</span>hihihihi<span>'</span></span> <span>|</span> tee outputfile.txt
<span><span>#</span> use '-a' with tee to append to file.</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Show non-printing (Ctrl) characters with cat</h5><a id="user-content-show-non-printing-ctrl-characters-with-cat" aria-label="Permalink: Show non-printing (Ctrl) characters with cat" href="#show-non-printing-ctrl-characters-with-cat"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Convert tab to space</h5><a id="user-content-convert-tab-to-space" aria-label="Permalink: Convert tab to space" href="#convert-tab-to-space"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Convert space to tab</h5><a id="user-content-convert-space-to-tab" aria-label="Permalink: Convert space to tab" href="#convert-space-to-tab"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Display file in octal ( you can also use od to display hexadecimal, decimal, etc)</h5><a id="user-content-display-file-in-octal--you-can-also-use-od-to-display-hexadecimal-decimal-etc" aria-label="Permalink: Display file in octal ( you can also use od to display hexadecimal, decimal, etc)" href="#display-file-in-octal--you-can-also-use-od-to-display-hexadecimal-decimal-etc"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Reverse cat a file</h5><a id="user-content-reverse-cat-a-file" aria-label="Permalink: Reverse cat a file" href="#reverse-cat-a-file"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Reverse the result from <code>uniq -c</code></h5><a id="user-content-reverse-the-result-from-uniq--c" aria-label="Permalink: Reverse the result from uniq -c" href="#reverse-the-result-from-uniq--c"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="while read a b; do yes $b |head -n $a ; done <test.txt"><pre><span>while</span> <span>read</span> a b<span>;</span> <span>do</span> yes <span>$b</span> <span>|</span>head -n <span>$a</span> <span>;</span> <span>done</span> <span>&lt;</span>test.txt</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Others</h2><a id="user-content-others" aria-label="Permalink: Others" href="#others"></a></p>
<p dir="auto">[<a href="#handy-bash-one-liners">back to top</a>]</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Describe the format and characteristics of image files.</h5><a id="user-content-describe-the-format-and-characteristics-of-image-files" aria-label="Permalink: Describe the format and characteristics of image files." href="#describe-the-format-and-characteristics-of-image-files"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="identify myimage.png
#myimage.png PNG 1049x747 1049x747+0+0 8-bit sRGB 1.006MB 0.000u 0:00.000"><pre>identify myimage.png
<span><span>#</span>myimage.png PNG 1049x747 1049x747+0+0 8-bit sRGB 1.006MB 0.000u 0:00.000</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Bash auto-complete (e.g. show options "now tomorrow never" when you press'tab' after typing "dothis")</h5><a id="user-content-bash-auto-complete-eg-show-options-now-tomorrow-never-when-you-presstab-after-typing-dothis" aria-label="Permalink: Bash auto-complete (e.g. show options &quot;now tomorrow never&quot; when you press'tab' after typing &quot;dothis&quot;)" href="#bash-auto-complete-eg-show-options-now-tomorrow-never-when-you-presstab-after-typing-dothis"></a></p>
<p dir="auto"><a href="https://iridakos.com/tutorials/2018/03/01/bash-programmable-completion-tutorial.html" rel="nofollow">More examples</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="complete -W &quot;now tomorrow never&quot; dothis
# ~$ dothis  
# never     now       tomorrow
# press 'tab' again to auto-complete after typing 'n' or 't'"><pre><span>complete</span> -W <span><span>"</span>now tomorrow never<span>"</span></span> dothis
<span><span>#</span> ~$ dothis  </span>
<span><span>#</span> never     now       tomorrow</span>
<span><span>#</span> press 'tab' again to auto-complete after typing 'n' or 't'</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Displays a calendar</h5><a id="user-content-displays-a-calendar" aria-label="Permalink: Displays a calendar" href="#displays-a-calendar"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# print the current month, today will be highlighted.
cal
# October 2019      
# Su Mo Tu We Th Fr Sa  
#    1  2  3  4  5  
# 6  7  8  9 10 11 12  
# 13 14 15 16 17 18 19  
# 20 21 22 23 24 25 26  
# 27 28 29 30 31  

# only display November
cal -m 11"><pre><span><span>#</span> print the current month, today will be highlighted.</span>
cal
<span><span>#</span> October 2019      </span>
<span><span>#</span> Su Mo Tu We Th Fr Sa  </span>
<span><span>#</span>    1  2  3  4  5  </span>
<span><span>#</span> 6  7  8  9 10 11 12  </span>
<span><span>#</span> 13 14 15 16 17 18 19  </span>
<span><span>#</span> 20 21 22 23 24 25 26  </span>
<span><span>#</span> 27 28 29 30 31  </span>

<span><span>#</span> only display November</span>
cal -m 11</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Convert the hexadecimal MD5 checksum value into its base64-encoded format.</h5><a id="user-content-convert-the-hexadecimal-md5-checksum-value-into-its-base64-encoded-format" aria-label="Permalink: Convert the hexadecimal MD5 checksum value into its base64-encoded format." href="#convert-the-hexadecimal-md5-checksum-value-into-its-base64-encoded-format"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="openssl md5 -binary /path/to/file| base64
# NWbeOpeQbtuY0ATWuUeumw=="><pre>openssl md5 -binary /path/to/file<span>|</span> base64
<span><span>#</span> NWbeOpeQbtuY0ATWuUeumw==</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Forces applications to use the default language for output</h5><a id="user-content-forces-applications-to-use-the-default-language-for-output" aria-label="Permalink: Forces applications to use the default language for output" href="#forces-applications-to-use-the-default-language-for-output"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="export LC_ALL=C

# to revert:
unset LC_ALL"><pre><span>export</span> LC_ALL=C

<span><span>#</span> to revert:</span>
<span>unset</span> LC_ALL</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Encode strings as Base64 strings</h5><a id="user-content-encode-strings-as-base64-strings" aria-label="Permalink: Encode strings as Base64 strings" href="#encode-strings-as-base64-strings"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="echo test|base64
#dGVzdAo="><pre><span>echo</span> test<span>|</span>base64
<span><span>#</span>dGVzdAo=</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Get parent directory of current directory</h5><a id="user-content-get-parent-directory-of-current-directory" aria-label="Permalink: Get parent directory of current directory" href="#get-parent-directory-of-current-directory"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Read .gz file without extracting</h5><a id="user-content-read-gz-file-without-extracting" aria-label="Permalink: Read .gz file without extracting" href="#read-gz-file-without-extracting"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="zmore filename

# or
zless filename"><pre>zmore filename

<span><span>#</span> or</span>
zless filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Run command in background, output error file</h5><a id="user-content-run-command-in-background-output-error-file" aria-label="Permalink: Run command in background, output error file" href="#run-command-in-background-output-error-file"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="some_commands  &amp;>log &amp;

# or
some_commands 2>log &amp;

# or
some_commands 2>&amp;1| tee logfile

# or
some_commands |&amp; tee logfile

# or
some_commands 2>&amp;1 >>outfile
#0: standard input; 1: standard output; 2: standard error"><pre>some_commands  <span>&amp;</span><span>&gt;</span>log <span>&amp;</span>

<span><span>#</span> or</span>
some_commands <span>2&gt;</span>log <span>&amp;</span>

<span><span>#</span> or</span>
some_commands <span>2&gt;&amp;1</span><span>|</span> tee logfile

<span><span>#</span> or</span>
some_commands <span>|</span><span>&amp;</span> tee logfile

<span><span>#</span> or</span>
some_commands <span>2&gt;&amp;1</span> <span>&gt;&gt;</span>outfile
<span><span>#</span>0: standard input; 1: standard output; 2: standard error</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Run multiple commands in background</h5><a id="user-content-run-multiple-commands-in-background" aria-label="Permalink: Run multiple commands in background" href="#run-multiple-commands-in-background"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# run sequentially
(sleep 2; sleep 3) &amp;

# run parallelly
sleep 2 &amp; sleep 3 &amp;"><pre><span><span>#</span> run sequentially</span>
(sleep 2<span>;</span> sleep 3) <span>&amp;</span>

<span><span>#</span> run parallelly</span>
sleep 2 <span>&amp;</span> sleep 3 <span>&amp;</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Run process even when logout (immune to hangups, with output to a non-tty)</h5><a id="user-content-run-process-even-when-logout-immune-to-hangups-with-output-to-a-non-tty" aria-label="Permalink: Run process even when logout (immune to hangups, with output to a non-tty)" href="#run-process-even-when-logout-immune-to-hangups-with-output-to-a-non-tty"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# e.g. Run myscript.sh even when log out.
nohup bash myscript.sh"><pre><span><span>#</span> e.g. Run myscript.sh even when log out.</span>
nohup bash myscript.sh</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Send mail</h5><a id="user-content-send-mail" aria-label="Permalink: Send mail" href="#send-mail"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="echo 'heres the content'| mail -a /path/to/attach_file.txt -s 'mail.subject' me@gmail.com
# use -a flag to set send from (-a &quot;From: some@mail.tld&quot;)"><pre><span>echo</span> <span><span>'</span>heres the content<span>'</span></span><span>|</span> mail -a /path/to/attach_file.txt -s <span><span>'</span>mail.subject<span>'</span></span> me@gmail.com
<span><span>#</span> use -a flag to set send from (-a "From: some@mail.tld")</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Convert .xls to csv</h5><a id="user-content-convert-xls-to-csv" aria-label="Permalink: Convert .xls to csv" href="#convert-xls-to-csv"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Make BEEP sound</h5><a id="user-content-make-beep-sound" aria-label="Permalink: Make BEEP sound" href="#make-beep-sound"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="speaker-test -t sine -f 1000 -l1"><pre>speaker-test -t sine -f 1000 -l1</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Set beep duration</h5><a id="user-content-set-beep-duration" aria-label="Permalink: Set beep duration" href="#set-beep-duration"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="(speaker-test -t sine -f 1000) &amp; pid=$!;sleep 0.1s;kill -9 $pid"><pre>(speaker-test -t sine -f 1000) <span>&amp;</span> pid=<span>$!</span><span>;</span>sleep 0.1s<span>;</span><span>kill</span> -9 <span>$pid</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Editing your history</h5><a id="user-content-editing-your-history" aria-label="Permalink: Editing your history" href="#editing-your-history"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="history -w
vi ~/.bash_history
history -r

#or
history -d [line_number]"><pre><span>history</span> -w
vi <span>~</span>/.bash_history
<span>history</span> -r

<span><span>#</span>or</span>
<span>history</span> -d [line_number]</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Interacting with history</h5><a id="user-content-interacting-with-history" aria-label="Permalink: Interacting with history" href="#interacting-with-history"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# list 5 previous command (similar to `history |tail -n 5` but wont print the history command itself)
fc -l -5"><pre><span><span>#</span> list 5 previous command (similar to `history |tail -n 5` but wont print the history command itself)</span>
<span>fc</span> -l -5</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Delete current bash command</h5><a id="user-content-delete-current-bash-command" aria-label="Permalink: Delete current bash command" href="#delete-current-bash-command"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="Ctrl+U

# or
Ctrl+C

# or
Alt+Shift+#
# to make it to history"><pre>Ctrl+U

<span><span>#</span> or</span>
Ctrl+C

<span><span>#</span> or</span>
Alt+Shift+<span><span>#</span></span>
<span><span>#</span> to make it to history</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Add something to history (e.g. "addmetohistory")</h5><a id="user-content-add-something-to-history-eg-addmetohistory" aria-label="Permalink: Add something to history (e.g. &quot;addmetohistory&quot;)" href="#add-something-to-history-eg-addmetohistory"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# addmetodistory
# just add a &quot;#&quot; before~~"><pre><span><span>#</span> addmetodistory</span>
<span><span>#</span> just add a "#" before~~</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Get last history/record filename</h5><a id="user-content-get-last-historyrecord-filename" aria-label="Permalink: Get last history/record filename" href="#get-last-historyrecord-filename"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Clean screen</h5><a id="user-content-clean-screen" aria-label="Permalink: Clean screen" href="#clean-screen"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Backup with rsync</h5><a id="user-content-backup-with-rsync" aria-label="Permalink: Backup with rsync" href="#backup-with-rsync"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="rsync -av filename filename.bak
rsync -av directory directory.bak
rsync -av --ignore_existing directory/ directory.bak
rsync -av --update directory directory.bak

rsync -av directory user@ip_address:/path/to/directory.bak
# skip files that are newer on receiver (i prefer this one!)"><pre>rsync -av filename filename.bak
rsync -av directory directory.bak
rsync -av --ignore_existing directory/ directory.bak
rsync -av --update directory directory.bak

rsync -av directory user@ip_address:/path/to/directory.bak
<span><span>#</span> skip files that are newer on receiver (i prefer this one!)</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Create a temporary directory and <code>cd</code> into it</h5><a id="user-content-create-a-temporary-directory-and-cd-into-it" aria-label="Permalink: Create a temporary directory and cd into it" href="#create-a-temporary-directory-and-cd-into-it"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cd $(mktemp -d)
# for example, this will create a temporary directory &quot;/tmp/tmp.TivmPLUXFT&quot;"><pre><span>cd</span> <span><span>$(</span>mktemp -d<span>)</span></span>
<span><span>#</span> for example, this will create a temporary directory "/tmp/tmp.TivmPLUXFT"</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Make all directories at one time!</h5><a id="user-content-make-all-directories-at-one-time" aria-label="Permalink: Make all directories at one time!" href="#make-all-directories-at-one-time"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="mkdir -p project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat}
# -p: make parent directory
# this will create:
# project/
# project/bin/
# project/demo/
# project/demo/stat/
# project/doc/
# project/doc/html/
# project/doc/info/
# project/doc/pdf/
# project/lib/
# project/lib/ext/
# project/src/
#
# project/
# ├── bin
# ├── demo
# │   └── stat
# ├── doc
# │   ├── html
# │   ├── info
# │   └── pdf
# ├── lib
# │   └── ext
# └── src"><pre>mkdir -p project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat}
<span><span>#</span> -p: make parent directory</span>
<span><span>#</span> this will create:</span>
<span><span>#</span> project/</span>
<span><span>#</span> project/bin/</span>
<span><span>#</span> project/demo/</span>
<span><span>#</span> project/demo/stat/</span>
<span><span>#</span> project/doc/</span>
<span><span>#</span> project/doc/html/</span>
<span><span>#</span> project/doc/info/</span>
<span><span>#</span> project/doc/pdf/</span>
<span><span>#</span> project/lib/</span>
<span><span>#</span> project/lib/ext/</span>
<span><span>#</span> project/src/</span>
<span><span>#</span></span>
<span><span>#</span> project/</span>
<span><span>#</span> ├── bin</span>
<span><span>#</span> ├── demo</span>
<span><span>#</span> │   └── stat</span>
<span><span>#</span> ├── doc</span>
<span><span>#</span> │   ├── html</span>
<span><span>#</span> │   ├── info</span>
<span><span>#</span> │   └── pdf</span>
<span><span>#</span> ├── lib</span>
<span><span>#</span> │   └── ext</span>
<span><span>#</span> └── src</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Run command only if another command returns zero exit status (well done)</h5><a id="user-content-run-command-only-if-another-command-returns-zero-exit-status-well-done" aria-label="Permalink: Run command only if another command returns zero exit status (well done)" href="#run-command-only-if-another-command-returns-zero-exit-status-well-done"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cd tmp/ &amp;&amp; tar xvf ~/a.tar"><pre><span>cd</span> tmp/ <span>&amp;&amp;</span> tar xvf <span>~</span>/a.tar</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Run command only if another command returns non-zero exit status (not finish)</h5><a id="user-content-run-command-only-if-another-command-returns-non-zero-exit-status-not-finish" aria-label="Permalink: Run command only if another command returns non-zero exit status (not finish)" href="#run-command-only-if-another-command-returns-non-zero-exit-status-not-finish"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cd tmp/a/b/c ||mkdir -p tmp/a/b/c"><pre><span>cd</span> tmp/a/b/c <span>||</span>mkdir -p tmp/a/b/c</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Use backslash "" to break long command</h5><a id="user-content-use-backslash--to-break-long-command" aria-label="Permalink: Use backslash &quot;&quot; to break long command" href="#use-backslash--to-break-long-command"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cd tmp/a/b/c \
> || \
>mkdir -p tmp/a/b/c"><pre><span>cd</span> tmp/a/b/c \
<span>&gt;</span> <span>||</span> \
<span>&gt;</span>mkdir -p tmp/a/b/c</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List file type of file (e.g. /tmp/)</h5><a id="user-content-list-file-type-of-file-eg-tmp" aria-label="Permalink: List file type of file (e.g. /tmp/)" href="#list-file-type-of-file-eg-tmp"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="file /tmp/
# tmp/: directory"><pre>file /tmp/
<span><span>#</span> tmp/: directory</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Writing Bash script ('#!'' is called shebang )</h5><a id="user-content-writing-bash-script--is-called-shebang-" aria-label="Permalink: Writing Bash script ('#!'' is called shebang )" href="#writing-bash-script--is-called-shebang-"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="#!/bin/bash
file=${1#*.}
# remove string before a &quot;.&quot;"><pre><span><span>#!</span>/bin/bash</span>
file=<span>${1<span>#*</span>.}</span>
<span><span>#</span> remove string before a "."</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Python simple HTTP Server</h5><a id="user-content-python-simple-http-server" aria-label="Permalink: Python simple HTTP Server" href="#python-simple-http-server"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="python -m SimpleHTTPServer
# or when using python3:
python3 -m http.server"><pre>python -m SimpleHTTPServer
<span><span>#</span> or when using python3:</span>
python3 -m http.server</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Read user input</h5><a id="user-content-read-user-input" aria-label="Permalink: Read user input" href="#read-user-input"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Array</h5><a id="user-content-array" aria-label="Permalink: Array" href="#array"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="declare -a array=()

# or
declare array=()

# or associative array
declare -A array=()"><pre><span>declare</span> -a array=()

<span><span>#</span> or</span>
<span>declare</span> array=()

<span><span>#</span> or associative array</span>
<span>declare</span> -A array=()</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Send a directory</h5><a id="user-content-send-a-directory" aria-label="Permalink: Send a directory" href="#send-a-directory"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="scp -r directoryname user@ip:/path/to/send"><pre>scp -r directoryname user@ip:/path/to/send</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Fork bomb</h5><a id="user-content-fork-bomb" aria-label="Permalink: Fork bomb" href="#fork-bomb"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Don't try this at home!
# It is a function that calls itself twice every call until you run out of system resources.
# A '# ' is added in front for safety reason, remove it when seriously you are testing it.
# :(){:|:&amp;};:"><pre><span><span>#</span> Don't try this at home!</span>
<span><span>#</span> It is a function that calls itself twice every call until you run out of system resources.</span>
<span><span>#</span> A '# ' is added in front for safety reason, remove it when seriously you are testing it.</span>
<span><span>#</span> :(){:|:&amp;};:</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Use the last argument</h5><a id="user-content-use-the-last-argument" aria-label="Permalink: Use the last argument" href="#use-the-last-argument"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Check last exit code</h5><a id="user-content-check-last-exit-code" aria-label="Permalink: Check last exit code" href="#check-last-exit-code"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Extract .xz</h5><a id="user-content-extract-xz" aria-label="Permalink: Extract .xz" href="#extract-xz"></a></p>
<div data-snippet-clipboard-copy-content="unxz filename.tar.xz
# then
tar -xf filename.tar"><pre><code>unxz filename.tar.xz
# then
tar -xf filename.tar
</code></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Unzip tar.bz2 file (e.g. file.tar.bz2)</h5><a id="user-content-unzip-tarbz2-file-eg-filetarbz2" aria-label="Permalink: Unzip tar.bz2 file (e.g. file.tar.bz2)" href="#unzip-tarbz2-file-eg-filetarbz2"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Unzip tar.xz file (e.g. file.tar.xz)</h5><a id="user-content-unzip-tarxz-file-eg-filetarxz" aria-label="Permalink: Unzip tar.xz file (e.g. file.tar.xz)" href="#unzip-tarxz-file-eg-filetarxz"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="unxz file.tar.xz
tar xopf file.tar"><pre>unxz file.tar.xz
tar xopf file.tar</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Extract to a path</h5><a id="user-content-extract-to-a-path" aria-label="Permalink: Extract to a path" href="#extract-to-a-path"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="tar xvf -C /path/to/directory filename.gz"><pre>tar xvf -C /path/to/directory filename.gz</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Zip the content of a directory without including the directory itself</h5><a id="user-content-zip-the-content-of-a-directory-without-including-the-directory-itself" aria-label="Permalink: Zip the content of a directory without including the directory itself" href="#zip-the-content-of-a-directory-without-including-the-directory-itself"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# First cd to the directory, they run:
zip -r -D ../myzipfile .
# you will see the myzipfile.zip in the parent directory (cd ..)"><pre><span><span>#</span> First cd to the directory, they run:</span>
zip -r -D ../myzipfile <span>.</span>
<span><span>#</span> you will see the myzipfile.zip in the parent directory (cd ..)</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Output a y/n repeatedly until killed</h5><a id="user-content-output-a-yn-repeatedly-until-killed" aria-label="Permalink: Output a y/n repeatedly until killed" href="#output-a-yn-repeatedly-until-killed"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# 'y':
yes

# or 'n':
yes n

# or 'anything':
yes anything

# pipe yes to other command
yes | rm -r large_directory"><pre><span><span>#</span> 'y':</span>
yes

<span><span>#</span> or 'n':</span>
yes n

<span><span>#</span> or 'anything':</span>
yes anything

<span><span>#</span> pipe yes to other command</span>
yes <span>|</span> rm -r large_directory</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Create large dummy file of certain size instantly (e.g. 10GiB)</h5><a id="user-content-create-large-dummy-file-of-certain-size-instantly-eg-10gib" aria-label="Permalink: Create large dummy file of certain size instantly (e.g. 10GiB)" href="#create-large-dummy-file-of-certain-size-instantly-eg-10gib"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="fallocate -l 10G 10Gigfile"><pre>fallocate -l 10G 10Gigfile</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Create dummy file of certain size (e.g. 200mb)</h5><a id="user-content-create-dummy-file-of-certain-size-eg-200mb" aria-label="Permalink: Create dummy file of certain size (e.g. 200mb)" href="#create-dummy-file-of-certain-size-eg-200mb"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="dd if=/dev/zero of=/dev/shm/200m bs=1024k count=200
# or
dd if=/dev/zero of=/dev/shm/200m bs=1M count=200

# Standard output:
# 200+0 records in
# 200+0 records out
# 209715200 bytes (210 MB) copied, 0.0955679 s, 2.2 GB/s"><pre>dd if=/dev/zero of=/dev/shm/200m bs=1024k count=200
<span><span>#</span> or</span>
dd if=/dev/zero of=/dev/shm/200m bs=1M count=200

<span><span>#</span> Standard output:</span>
<span><span>#</span> 200+0 records in</span>
<span><span>#</span> 200+0 records out</span>
<span><span>#</span> 209715200 bytes (210 MB) copied, 0.0955679 s, 2.2 GB/s</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Keep /repeatedly executing the same command (e.g Repeat 'wc -l filename' every 1 second)</h5><a id="user-content-keep-repeatedly-executing-the-same-command-eg-repeat-wc--l-filename-every-1-second" aria-label="Permalink: Keep /repeatedly executing the same command (e.g Repeat 'wc -l filename' every 1 second)" href="#keep-repeatedly-executing-the-same-command-eg-repeat-wc--l-filename-every-1-second"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="watch -n 1 wc -l filename"><pre>watch -n 1 wc -l filename</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Use Bash Strict Mode</h5><a id="user-content-use-bash-strict-mode" aria-label="Permalink: Use Bash Strict Mode" href="#use-bash-strict-mode"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# These options can make your code safer but, depending on how your pipeline is written, it might be too aggressive 
# or it might not catch the errors that you are interested in

# for reference see https://gist.github.com/mohanpedala/1e2ff5661761d3abd0385e8223e16425
#               and https://mywiki.wooledge.org/BashPitfalls#set_-euo_pipefail

set -o errexit      # exit immediately if a pipeline returns a non-zero status
set -o errtrace     # trap ERR from shell functions, command substitutions, and commands from subshell
set -o nounset      # treat unset variables as an error
set -o pipefail     # pipe will exit with last non-zero status, if applicable
set -Eue -o pipefail  # shorthand for above (pipefail has no short option)"><pre><span><span>#</span> These options can make your code safer but, depending on how your pipeline is written, it might be too aggressive </span>
<span><span>#</span> or it might not catch the errors that you are interested in</span>

<span><span>#</span> for reference see https://gist.github.com/mohanpedala/1e2ff5661761d3abd0385e8223e16425</span>
<span><span>#</span>               and https://mywiki.wooledge.org/BashPitfalls#set_-euo_pipefail</span>

<span>set</span> -o errexit      <span><span>#</span> exit immediately if a pipeline returns a non-zero status</span>
<span>set</span> -o errtrace     <span><span>#</span> trap ERR from shell functions, command substitutions, and commands from subshell</span>
<span>set</span> -o nounset      <span><span>#</span> treat unset variables as an error</span>
<span>set</span> -o pipefail     <span><span>#</span> pipe will exit with last non-zero status, if applicable</span>
<span>set</span> -Eue -o pipefail  <span><span>#</span> shorthand for above (pipefail has no short option)</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print commands and their arguments when execute (e.g. echo <code>expr 10 + 20 </code>)</h5><a id="user-content-print-commands-and-their-arguments-when-execute-eg-echo-expr-10--20-" aria-label="Permalink: Print commands and their arguments when execute (e.g. echo expr 10 + 20 )" href="#print-commands-and-their-arguments-when-execute-eg-echo-expr-10--20-"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="set -x; echo `expr 10 + 20 `
# or
set -o xtrace; echo `expr 10 + 20 `

# to turn it off..
set +x"><pre><span>set</span> -x<span>;</span> <span>echo</span> <span><span>`</span>expr 10 + 20 <span>`</span></span>
<span><span>#</span> or</span>
<span>set</span> -o xtrace<span>;</span> <span>echo</span> <span><span>`</span>expr 10 + 20 <span>`</span></span>

<span><span>#</span> to turn it off..</span>
<span>set</span> +x</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Print some meaningful sentences to you (install fortune first)</h5><a id="user-content-print-some-meaningful-sentences-to-you-install-fortune-first" aria-label="Permalink: Print some meaningful sentences to you (install fortune first)" href="#print-some-meaningful-sentences-to-you-install-fortune-first"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Colorful (and useful) version of top (install htop first)</h5><a id="user-content-colorful-and-useful-version-of-top-install-htop-first" aria-label="Permalink: Colorful (and useful) version of top (install htop first)" href="#colorful-and-useful-version-of-top-install-htop-first"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">Press any key to continue</h5><a id="user-content-press-any-key-to-continue" aria-label="Permalink: Press any key to continue" href="#press-any-key-to-continue"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="read -rsp $'Press any key to continue...\n' -n1 key"><pre><span>read</span> -rsp <span><span>$'</span>Press any key to continue...<span>\n</span><span>'</span></span> -n1 key</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Run sql-like command on files from terminal</h5><a id="user-content-run-sql-like-command-on-files-from-terminal" aria-label="Permalink: Run sql-like command on files from terminal" href="#run-sql-like-command-on-files-from-terminal"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# download:
# https://github.com/harelba/q
# example:
q -d &quot;,&quot; &quot;select c3,c4,c5 from /path/to/file.txt where c3='foo' and c5='boo'&quot;"><pre><span><span>#</span> download:</span>
<span><span>#</span> https://github.com/harelba/q</span>
<span><span>#</span> example:</span>
q -d <span><span>"</span>,<span>"</span></span> <span><span>"</span>select c3,c4,c5 from /path/to/file.txt where c3='foo' and c5='boo'<span>"</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Using Screen for multiple terminal sessions</h5><a id="user-content-using-screen-for-multiple-terminal-sessions" aria-label="Permalink: Using Screen for multiple terminal sessions" href="#using-screen-for-multiple-terminal-sessions"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Create session and attach:
screen

# Create a screen and name it 'test'
screen -S test

# Create detached session foo:
screen -S foo -d -m

# Detached session foo:
screen: ^a^d

# List sessions:
screen -ls

# Attach last session:
screen -r

# Attach to session foo:
screen -r foo

# Kill session foo:
screen -r foo -X quit


# Scroll:
# Hit your screen prefix combination (C-a / control+A), then hit Escape.
# Move up/down with the arrow keys (↑ and ↓).  

# Redirect output of an already running process in Screen:
# (C-a / control+A), then hit 'H'  

# Store screen output for Screen:
# Ctrl+A, Shift+H  
# You will then find a screen.log file under current directory.  "><pre><span><span>#</span> Create session and attach:</span>
screen

<span><span>#</span> Create a screen and name it 'test'</span>
screen -S <span>test</span>

<span><span>#</span> Create detached session foo:</span>
screen -S foo -d -m

<span><span>#</span> Detached session foo:</span>
screen: ^a^d

<span><span>#</span> List sessions:</span>
screen -ls

<span><span>#</span> Attach last session:</span>
screen -r

<span><span>#</span> Attach to session foo:</span>
screen -r foo

<span><span>#</span> Kill session foo:</span>
screen -r foo -X quit


<span><span>#</span> Scroll:</span>
<span><span>#</span> Hit your screen prefix combination (C-a / control+A), then hit Escape.</span>
<span><span>#</span> Move up/down with the arrow keys (↑ and ↓).  </span>

<span><span>#</span> Redirect output of an already running process in Screen:</span>
<span><span>#</span> (C-a / control+A), then hit 'H'  </span>

<span><span>#</span> Store screen output for Screen:</span>
<span><span>#</span> Ctrl+A, Shift+H  </span>
<span><span>#</span> You will then find a screen.log file under current directory.  </span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Using Tmux for multiple terminal sessions</h5><a id="user-content-using-tmux-for-multiple-terminal-sessions" aria-label="Permalink: Using Tmux for multiple terminal sessions" href="#using-tmux-for-multiple-terminal-sessions"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Create session and attach:
tmux

# Attach to session foo:
tmux attach -t foo

# Detached session foo:
^bd

# List sessions:
tmux ls

# Attach last session:
tmux attach

# Kill session foo:
tmux kill-session -t foo

# Create detached session foo:
tmux new -s foo -d

# Send command to all panes in tmux:
Ctrl-B
:setw synchronize-panes

# Some tmux pane control commands:
Ctrl-B
#   Panes (splits), Press Ctrl+B, then input the following symbol:
#   %  horizontal split
#   &quot;  vertical split
#   o  swap panes
#   q  show pane numbers
#   x  kill pane
#   space - toggle between layouts

#   Distribute Vertically (rows):
select-layout even-vertical
#   or
Ctrl+b, Alt+2

# Distribute horizontally (columns):
select-layout even-horizontal
#   or
Ctrl+b, Alt+1

# Scroll
Ctrl-b then \[ then you can use your normal navigation keys to scroll around.
Press q to quit scroll mode."><pre><span><span>#</span> Create session and attach:</span>
tmux

<span><span>#</span> Attach to session foo:</span>
tmux attach -t foo

<span><span>#</span> Detached session foo:</span>
^bd

<span><span>#</span> List sessions:</span>
tmux ls

<span><span>#</span> Attach last session:</span>
tmux attach

<span><span>#</span> Kill session foo:</span>
tmux kill-session -t foo

<span><span>#</span> Create detached session foo:</span>
tmux new -s foo -d

<span><span>#</span> Send command to all panes in tmux:</span>
Ctrl-B
:setw synchronize-panes

<span><span>#</span> Some tmux pane control commands:</span>
Ctrl-B
<span><span>#</span>   Panes (splits), Press Ctrl+B, then input the following symbol:</span>
<span><span>#</span>   %  horizontal split</span>
<span><span>#</span>   "  vertical split</span>
<span><span>#</span>   o  swap panes</span>
<span><span>#</span>   q  show pane numbers</span>
<span><span>#</span>   x  kill pane</span>
<span><span>#</span>   space - toggle between layouts</span>

<span><span>#</span>   Distribute Vertically (rows):</span>
select-layout even-vertical
<span><span>#</span>   or</span>
Ctrl+b, Alt+2

<span><span>#</span> Distribute horizontally (columns):</span>
select-layout even-horizontal
<span><span>#</span>   or</span>
Ctrl+b, Alt+1

<span><span>#</span> Scroll</span>
Ctrl-b <span>then</span> <span>\[</span> <span>then</span> you can use your normal navigation keys to scroll around.
Press q to quit scroll mode.</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Pass password to ssh</h5><a id="user-content-pass-password-to-ssh" aria-label="Permalink: Pass password to ssh" href="#pass-password-to-ssh"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sshpass -p mypassword ssh root@10.102.14.88 &quot;df -h&quot;"><pre>sshpass -p mypassword ssh root@10.102.14.88 <span><span>"</span>df -h<span>"</span></span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Wait for a pid (job) to complete</h5><a id="user-content-wait-for-a-pid-job-to-complete" aria-label="Permalink: Wait for a pid (job) to complete" href="#wait-for-a-pid-job-to-complete"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="wait %1
# or
wait $PID
wait ${!}
#wait ${!} to wait till the last background process ($! is the PID of the last background process)"><pre><span>wait</span> %1
<span><span>#</span> or</span>
<span>wait</span> <span>$PID</span>
<span>wait</span> <span>${<span>!</span>}</span>
<span><span>#</span>wait ${!} to wait till the last background process ($! is the PID of the last background process)</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Convert pdf to txt</h5><a id="user-content-convert-pdf-to-txt" aria-label="Permalink: Convert pdf to txt" href="#convert-pdf-to-txt"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo apt-get install poppler-utils
pdftotext example.pdf example.txt"><pre>sudo apt-get install poppler-utils
pdftotext example.pdf example.txt</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List only directory</h5><a id="user-content-list-only-directory" aria-label="Permalink: List only directory" href="#list-only-directory"></a></p>

<p dir="auto"><h5 tabindex="-1" dir="auto">List one file per line.</h5><a id="user-content-list-one-file-per-line" aria-label="Permalink: List one file per line." href="#list-one-file-per-line"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="ls -1
# or list all, do not ignore entries starting with .
ls -1a"><pre>ls -1
<span><span>#</span> or list all, do not ignore entries starting with .</span>
ls -1a</pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Capture/record/save terminal output (capture everything you type and output)</h5><a id="user-content-capturerecordsave-terminal-output-capture-everything-you-type-and-output" aria-label="Permalink: Capture/record/save terminal output (capture everything you type and output)" href="#capturerecordsave-terminal-output-capture-everything-you-type-and-output"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="script output.txt
# start using terminal
# to logout the screen session (stop saving the contents), type exit."><pre>script output.txt
<span><span>#</span> start using terminal</span>
<span><span>#</span> to logout the screen session (stop saving the contents), type exit.</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">List contents of directories in a tree-like format.</h5><a id="user-content-list-contents-of-directories-in-a-tree-like-format" aria-label="Permalink: List contents of directories in a tree-like format." href="#list-contents-of-directories-in-a-tree-like-format"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="tree
# go to the directory you want to list, and type tree (sudo apt-get install tree)
# output:
# home/
# └── project
#     ├── 1
#     ├── 2
#     ├── 3
#     ├── 4
#     └── 5
#

# set level directories deep (e.g. level 1)
tree -L 1
# home/
# └── project"><pre>tree
<span><span>#</span> go to the directory you want to list, and type tree (sudo apt-get install tree)</span>
<span><span>#</span> output:</span>
<span><span>#</span> home/</span>
<span><span>#</span> └── project</span>
<span><span>#</span>     ├── 1</span>
<span><span>#</span>     ├── 2</span>
<span><span>#</span>     ├── 3</span>
<span><span>#</span>     ├── 4</span>
<span><span>#</span>     └── 5</span>
<span><span>#</span></span>

<span><span>#</span> set level directories deep (e.g. level 1)</span>
tree -L 1
<span><span>#</span> home/</span>
<span><span>#</span> └── project</span></pre></div>
<p dir="auto"><h5 tabindex="-1" dir="auto">Set up virtualenv(sandbox) for python</h5><a id="user-content-set-up-virtualenvsandbox-for-python" aria-label="Permalink: Set up virtualenv(sandbox) for python" href="#set-up-virtualenvsandbox-for-python"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# 1. install virtualenv.
sudo apt-get install virtualenv
# 2. Create a directory (name it .venv or whatever name your want) for your new shiny isolated environment.
virtualenv .venv
# 3. source virtual bin
source .venv/bin/activate
# 4. you can check check if you are now inside a sandbox.
type pip
# 5. Now you can install your pip package, here requirements.txt is simply a txt file containing all the packages you want. (e.g tornado==4.5.3).
pip install -r requirements.txt
# 6. Exit virtual environment
deactivate"><pre><span><span>#</span> 1. install virtualenv.</span>
sudo apt-get install virtualenv
<span><span>#</span> 2. Create a directory (name it .venv or whatever name your want) for your new shiny isolated environment.</span>
virtualenv .venv
<span><span>#</span> 3. source virtual bin</span>
<span>source</span> .venv/bin/activate
<span><span>#</span> 4. you can check check if you are now inside a sandbox.</span>
<span>type</span> pip
<span><span>#</span> 5. Now you can install your pip package, here requirements.txt is simply a txt file containing all the packages you want. (e.g tornado==4.5.3).</span>
pip install -r requirements.txt
<span><span>#</span> 6. Exit virtual environment</span>
deactivate</pre></div>
<blockquote>
<p dir="auto">More coming!!</p>
</blockquote>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Parse, Don't Validate (299 pts)]]></title>
            <link>https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/</link>
            <guid>41031585</guid>
            <pubDate>Mon, 22 Jul 2024 06:57:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/">https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/</a>, See on <a href="https://news.ycombinator.com/item?id=41031585">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main"><article><header></header><p>Historically, I’ve struggled to find a concise, simple way to explain what it means to practice type-driven design. Too often, when someone asks me “How did you come up with this approach?” I find I can’t give them a satisfying answer. I know it didn’t just come to me in a vision—I have an iterative design process that doesn’t require plucking the “right” approach out of thin air—yet I haven’t been very successful in communicating that process to others.</p><p>However, about a month ago, <a href="https://twitter.com/lexi_lambda/status/1182242561655746560">I was reflecting on Twitter</a> about the differences I experienced parsing JSON in statically- and dynamically-typed languages, and finally, I realized what I was looking for. Now I have a single, snappy slogan that encapsulates what type-driven design means to me, and better yet, it’s only three words long:</p><p><strong>Parse, don’t validate.</strong></p><h2><a name="the-essence-of-type-driven-design"></a>The essence of type-driven design</h2><p>Alright, I’ll confess: unless you already know what type-driven design is, my catchy slogan probably doesn’t mean all that much to you. Fortunately, that’s what the remainder of this blog post is for. I’m going to explain precisely what I mean in gory detail—but first, we need to practice a little wishful thinking.</p><h3><a name="the-realm-of-possibility"></a>The realm of possibility</h3><p>One of the wonderful things about static type systems is that they can make it possible, and sometimes even easy, to answer questions like “is it possible to write this function?” For an extreme example, consider the following Haskell type signature:</p><pre><code><span>foo</span> <span>::</span> <span>Integer</span> <span>-&gt;</span> <span>Void</span></code></pre><p>Is it possible to implement <code>foo</code>? Trivially, the answer is <em>no</em>, as <code>Void</code> is a type that contains no values, so it’s impossible for <em>any</em> function to produce a value of type <code>Void</code>.<sup><a href="#footnote-1" id="footnote-ref-1-1">1</a></sup> That example is pretty boring, but the question gets much more interesting if we choose a more realistic example:</p><pre><code><span>head</span> <span>::</span> <span>[</span><span>a</span><span>]</span> <span>-&gt;</span> <span>a</span></code></pre><p>This function returns the first element from a list. Is it possible to implement? It certainly doesn’t sound like it does anything very complicated, but if we attempt to implement it, the compiler won’t be satisfied:</p><pre><code><span>head</span> <span>::</span> <span>[</span><span>a</span><span>]</span> <span>-&gt;</span> <span>a</span>
<span>head</span> <span>(</span><span>x</span><span>:</span><span>_</span><span>)</span> <span>=</span> <span>x</span></code></pre><pre><code>warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘head’: Patterns not matched: []
</code></pre><p>This message is helpfully pointing out that our function is <em>partial</em>, which is to say it is not defined for all possible inputs. Specifically, it is not defined when the input is <code>[]</code>, the empty list. This makes sense, as it isn’t possible to return the first element of a list if the list is empty—there’s no element to return! So, remarkably, we learn this function isn’t possible to implement, either.</p><h3><a name="turning-partial-functions-total"></a>Turning partial functions total</h3><p>To someone coming from a dynamically-typed background, this might seem perplexing. If we have a list, we might very well want to get the first element in it. And indeed, the operation of “getting the first element of a list” isn’t impossible in Haskell, it just requires a little extra ceremony. There are two different ways to fix the <code>head</code> function, and we’ll start with the simplest one.</p><h4><a name="managing-expectations"></a>Managing expectations</h4><p>As established, <code>head</code> is partial because there is no element to return if the list is empty: we’ve made a promise we cannot possibly fulfill. Fortunately, there’s an easy solution to that dilemma: we can weaken our promise. Since we cannot guarantee the caller an element of the list, we’ll have to practice a little expectation management: we’ll do our best return an element if we can, but we reserve the right to return nothing at all. In Haskell, we express this possibility using the <code>Maybe</code> type:</p><pre><code><span>head</span> <span>::</span> <span>[</span><span>a</span><span>]</span> <span>-&gt;</span> <span>Maybe</span> <span>a</span></code></pre><p>This buys us the freedom we need to implement <code>head</code>—it allows us to return <code>Nothing</code> when we discover we can’t produce a value of type <code>a</code> after all:</p><pre><code><span>head</span> <span>::</span> <span>[</span><span>a</span><span>]</span> <span>-&gt;</span> <span>Maybe</span> <span>a</span>
<span>head</span> <span>(</span><span>x</span><span>:</span><span>_</span><span>)</span> <span>=</span> <span>Just</span> <span>x</span>
<span>head</span> <span>[]</span>    <span>=</span> <span>Nothing</span></code></pre><p>Problem solved, right? For the moment, yes… but this solution has a hidden cost.</p><p>Returning <code>Maybe</code> is undoubtably convenient when we’re <em>implementing</em>  <code>head</code>. However, it becomes significantly less convenient when we want to actually use it! Since <code>head</code> always has the potential to return <code>Nothing</code>, the burden falls upon its callers to handle that possibility, and sometimes that passing of the buck can be incredibly frustrating. To see why, consider the following code:</p><pre><code><span>getConfigurationDirectories</span> <span>::</span> <span>IO</span> <span>[</span><span>FilePath</span><span>]</span>
<span>getConfigurationDirectories</span> <span>=</span> <span>do</span>
  <span>configDirsString</span> <span>&lt;-</span> <span>getEnv</span> <span>"CONFIG_DIRS"</span>
  <span>let</span> <span>configDirsList</span> <span>=</span> <span>split</span> <span>','</span> <span>configDirsString</span>
  <span>when</span> <span>(</span><span>null</span> <span>configDirsList</span><span>)</span> <span>$</span>
    <span>throwIO</span> <span>$</span> <span>userError</span> <span>"CONFIG_DIRS cannot be empty"</span>
  <span>pure</span> <span>configDirsList</span>

<span>main</span> <span>::</span> <span>IO</span> <span>()</span>
<span>main</span> <span>=</span> <span>do</span>
  <span>configDirs</span> <span>&lt;-</span> <span>getConfigurationDirectories</span>
  <span>case</span> <span>head</span> <span>configDirs</span> <span>of</span>
    <span>Just</span> <span>cacheDir</span> <span>-&gt;</span> <span>initializeCache</span> <span>cacheDir</span>
    <span>Nothing</span> <span>-&gt;</span> <span>error</span> <span>"should never happen; already checked configDirs is non-empty"</span></code></pre><p>When <code>getConfigurationDirectories</code> retrieves a list of file paths from the environment, it proactively checks that the list is non-empty. However, when we use <code>head</code> in <code>main</code> to get the first element of the list, the <code>Maybe FilePath</code> result still requires us to handle a <code>Nothing</code> case that we know will never happen! This is terribly bad for several reasons:</p><ol><li><p>First, it’s just annoying. We already checked that the list is non-empty, why do we have to clutter our code with another redundant check?</p></li><li><p>Second, it has a potential performance cost. Although the cost of the redundant check is trivial in this particular example, one could imagine a more complex scenario where the redundant checks could add up, such as if they were happening in a tight loop.</p></li><li><p>Finally, and worst of all, this code is a bug waiting to happen! What if <code>getConfigurationDirectories</code> were modified to stop checking that the list is empty, intentionally or unintentionally? The programmer might not remember to update <code>main</code>, and suddenly the “impossible” error becomes not only possible, but probable.</p></li></ol><p>The need for this redundant check has essentially forced us to punch a hole in our type system. If we could statically <em>prove</em> the <code>Nothing</code> case impossible, then a modification to <code>getConfigurationDirectories</code> that stopped checking if the list was empty would invalidate the proof and trigger a compile-time failure. However, as-written, we’re forced to rely on a test suite or manual inspection to catch the bug.</p><h4><a name="paying-it-forward"></a>Paying it forward</h4><p>Clearly, our modified version of <code>head</code> leaves some things to be desired. Somehow, we’d like it to be smarter: if we already checked that the list was non-empty, <code>head</code> should unconditionally return the first element without forcing us to handle the case we know is impossible. How can we do that?</p><p>Let’s look at the original (partial) type signature for <code>head</code> again:</p><pre><code><span>head</span> <span>::</span> <span>[</span><span>a</span><span>]</span> <span>-&gt;</span> <span>a</span></code></pre><p>The previous section illustrated that we can turn that partial type signature into a total one by weakening the promise made in the return type. However, since we don’t want to do that, there’s only one thing left that can be changed: the argument type (in this case, <code>[a]</code>). Instead of weakening the return type, we can <em>strengthen</em> the argument type, eliminating the possibility of <code>head</code> ever being called on an empty list in the first place.</p><p>To do this, we need a type that represents non-empty lists. Fortunately, the existing <code>NonEmpty</code> type from <code>Data.List.NonEmpty</code> is exactly that. It has the following definition:</p><pre><code><span>data</span> <span>NonEmpty</span> <span>a</span> <span>=</span> <span>a</span> <span>:|</span> <span>[</span><span>a</span><span>]</span></code></pre><p>Note that <code>NonEmpty a</code> is really just a tuple of an <code>a</code> and an ordinary, possibly-empty <code>[a]</code>. This conveniently models a non-empty list by storing the first element of the list separately from the list’s tail: even if the <code>[a]</code> component is <code>[]</code>, the <code>a</code> component must always be present. This makes <code>head</code> completely trivial to implement:<sup><a href="#footnote-2" id="footnote-ref-2-1">2</a></sup></p><pre><code><span>head</span> <span>::</span> <span>NonEmpty</span> <span>a</span> <span>-&gt;</span> <span>a</span>
<span>head</span> <span>(</span><span>x</span><span>:|</span><span>_</span><span>)</span> <span>=</span> <span>x</span></code></pre><p>Unlike before, GHC accepts this definition without complaint—this definition is <em>total</em>, not partial. We can update our program to use the new implementation:</p><pre><code><span>getConfigurationDirectories</span> <span>::</span> <span>IO</span> <span>(</span><span>NonEmpty</span> <span>FilePath</span><span>)</span>
<span>getConfigurationDirectories</span> <span>=</span> <span>do</span>
  <span>configDirsString</span> <span>&lt;-</span> <span>getEnv</span> <span>"CONFIG_DIRS"</span>
  <span>let</span> <span>configDirsList</span> <span>=</span> <span>split</span> <span>','</span> <span>configDirsString</span>
  <span>case</span> <span>nonEmpty</span> <span>configDirsList</span> <span>of</span>
    <span>Just</span> <span>nonEmptyConfigDirsList</span> <span>-&gt;</span> <span>pure</span> <span>nonEmptyConfigDirsList</span>
    <span>Nothing</span> <span>-&gt;</span> <span>throwIO</span> <span>$</span> <span>userError</span> <span>"CONFIG_DIRS cannot be empty"</span>

<span>main</span> <span>::</span> <span>IO</span> <span>()</span>
<span>main</span> <span>=</span> <span>do</span>
  <span>configDirs</span> <span>&lt;-</span> <span>getConfigurationDirectories</span>
  <span>initializeCache</span> <span>(</span><span>head</span> <span>configDirs</span><span>)</span></code></pre><p>Note that the redundant check in <code>main</code> is now completely gone! Instead, we perform the check exactly once, in <code>getConfigurationDirectories</code>. It constructs a <code>NonEmpty a</code> from a <code>[a]</code> using the <code>nonEmpty</code> function from <code>Data.List.NonEmpty</code>, which has the following type:</p><pre><code><span>nonEmpty</span> <span>::</span> <span>[</span><span>a</span><span>]</span> <span>-&gt;</span> <span>Maybe</span> <span>(</span><span>NonEmpty</span> <span>a</span><span>)</span></code></pre><p>The <code>Maybe</code> is still there, but this time, we handle the <code>Nothing</code> case very early in our program: right in the same place we were already doing the input validation. Once that check has passed, we now have a <code>NonEmpty FilePath</code> value, which preserves (in the type system!) the knowledge that the list really is non-empty. Put another way, you can think of a value of type <code>NonEmpty a</code> as being like a value of type <code>[a]</code>, plus a <em>proof</em> that the list is non-empty.</p><p>By strengthening the type of the argument to <code>head</code> instead of weakening the type of its result, we’ve completely eliminated all the problems from the previous section:</p><ul><li><p>The code has no redundant checks, so there can’t be any performance overhead.</p></li><li><p>Furthermore, if <code>getConfigurationDirectories</code> changes to stop checking that the list is non-empty, its return type must change, too. Consequently, <code>main</code> will fail to typecheck, alerting us to the problem before we even run the program!</p></li></ul><p>What’s more, it’s trivial to recover the old behavior of <code>head</code> from the new one by composing <code>head</code> with <code>nonEmpty</code>:</p><pre><code><span>head'</span> <span>::</span> <span>[</span><span>a</span><span>]</span> <span>-&gt;</span> <span>Maybe</span> <span>a</span>
<span>head'</span> <span>=</span> <span>fmap</span> <span>head</span> <span>.</span> <span>nonEmpty</span></code></pre><p>Note that the inverse is <em>not</em> true: there is no way to obtain the new version of <code>head</code> from the old one. All in all, the second approach is superior on all axes.</p><h3><a name="the-power-of-parsing"></a>The power of parsing</h3><p>You may be wondering what the above example has to do with the title of this blog post. After all, we only examined two different ways to validate that a list was non-empty—no parsing in sight. That interpretation isn’t wrong, but I’d like to propose another perspective: in my mind, the difference between validation and parsing lies almost entirely in how information is preserved. Consider the following pair of functions:</p><pre><code><span>validateNonEmpty</span> <span>::</span> <span>[</span><span>a</span><span>]</span> <span>-&gt;</span> <span>IO</span> <span>()</span>
<span>validateNonEmpty</span> <span>(</span><span>_</span><span>:</span><span>_</span><span>)</span> <span>=</span> <span>pure</span> <span>()</span>
<span>validateNonEmpty</span> <span>[]</span> <span>=</span> <span>throwIO</span> <span>$</span> <span>userError</span> <span>"list cannot be empty"</span>

<span>parseNonEmpty</span> <span>::</span> <span>[</span><span>a</span><span>]</span> <span>-&gt;</span> <span>IO</span> <span>(</span><span>NonEmpty</span> <span>a</span><span>)</span>
<span>parseNonEmpty</span> <span>(</span><span>x</span><span>:</span><span>xs</span><span>)</span> <span>=</span> <span>pure</span> <span>(</span><span>x</span><span>:|</span><span>xs</span><span>)</span>
<span>parseNonEmpty</span> <span>[]</span> <span>=</span> <span>throwIO</span> <span>$</span> <span>userError</span> <span>"list cannot be empty"</span></code></pre><p>These two functions are nearly identical: they check if the provided list is empty, and if it is, they abort the program with an error message. The difference lies entirely in the return type: <code>validateNonEmpty</code> always returns <code>()</code>, the type that contains no information, but <code>parseNonEmpty</code> returns <code>NonEmpty a</code>, a refinement of the input type that preserves the knowledge gained in the type system. Both of these functions check the same thing, but <code>parseNonEmpty</code> gives the caller access to the information it learned, while <code>validateNonEmpty</code> just throws it away.</p><p>These two functions elegantly illustrate two different perspectives on the role of a static type system: <code>validateNonEmpty</code> obeys the typechecker well enough, but only <code>parseNonEmpty</code> takes full advantage of it. If you see why <code>parseNonEmpty</code> is preferable, you understand what I mean by the mantra “parse, don’t validate.” Still, perhaps you are skeptical of <code>parseNonEmpty</code>’s name. Is it really <em>parsing</em> anything, or is it merely validating its input and returning a result? While the precise definition of what it means to parse or validate something is debatable, I believe <code>parseNonEmpty</code> is a bona-fide parser (albeit a particularly simple one).</p><p>Consider: what is a parser? Really, a parser is just a function that consumes less-structured input and produces more-structured output. By its very nature, a parser is a partial function—some values in the domain do not correspond to any value in the range—so all parsers must have some notion of failure. Often, the input to a parser is text, but this is by no means a requirement, and <code>parseNonEmpty</code> is a perfectly cromulent parser: it parses lists into non-empty lists, signaling failure by terminating the program with an error message.</p><p>Under this flexible definition, parsers are an incredibly powerful tool: they allow discharging checks on input up-front, right on the boundary between a program and the outside world, and once those checks have been performed, they never need to be checked again! Haskellers are well-aware of this power, and they use many different types of parsers on a regular basis:</p><ul><li><p>The <a href="https://hackage.haskell.org/package/aeson">aeson</a> library provides a <code>Parser</code> type that can be used to parse JSON data into domain types.</p></li><li><p>Likewise, <a href="https://hackage.haskell.org/package/optparse-applicative">optparse-applicative</a> provides a set of parser combinators for parsing command-line arguments.</p></li><li><p>Database libraries like <a href="https://hackage.haskell.org/package/persistent">persistent</a> and <a href="https://hackage.haskell.org/package/postgresql-simple">postgresql-simple</a> have a mechanism for parsing values held in an external data store.</p></li><li><p>The <a href="https://hackage.haskell.org/package/servant">servant</a> ecosystem is built around parsing Haskell datatypes from path components, query parameters, HTTP headers, and more.</p></li></ul><p>The common theme between all these libraries is that they sit on the boundary between your Haskell application and the external world. That world doesn’t speak in product and sum types, but in streams of bytes, so there’s no getting around a need to do some parsing. Doing that parsing up front, before acting on the data, can go a long way toward avoiding many classes of bugs, some of which might even be security vulnerabilities.</p><p>One drawback to this approach of parsing everything up front is that it sometimes requires values be parsed long before they are actually used. In a dynamically-typed language, this can make keeping the parsing and processing logic in sync a little tricky without extensive test coverage, much of which can be laborious to maintain. However, with a static type system, the problem becomes marvelously simple, as demonstrated by the <code>NonEmpty</code> example above: if the parsing and processing logic go out of sync, the program will fail to even compile.</p><h3><a name="the-danger-of-validation"></a>The danger of validation</h3><p>Hopefully, by this point, you are at least somewhat sold on the idea that parsing is preferable to validation, but you may have lingering doubts. Is validation really so bad if the type system is going to force you to do the necessary checks eventually anyway? Maybe the error reporting will be a little bit worse, but a bit of redundant checking can’t hurt, right?</p><p>Unfortunately, it isn’t so simple. Ad-hoc validation leads to a phenomenon that the <a href="http://langsec.org/">language-theoretic security</a> field calls <em>shotgun parsing</em>. In the 2016 paper, <a href="http://langsec.org/papers/langsec-cwes-secdev2016.pdf">The Seven Turrets of Babel: A Taxonomy of LangSec Errors and How to Expunge Them</a>, its authors provide the following definition:</p><blockquote><p>Shotgun parsing is a programming antipattern whereby parsing and input-validating code is mixed with and spread across processing code—throwing a cloud of checks at the input, and hoping, without any systematic justification, that one or another would catch all the “bad” cases.</p></blockquote><p>They go on to explain the problems inherent to such validation techniques:</p><blockquote><p>Shotgun parsing necessarily deprives the program of the ability to reject invalid input instead of processing it. Late-discovered errors in an input stream will result in some portion of invalid input having been processed, with the consequence that program state is difficult to accurately predict.</p></blockquote><p>In other words, a program that does not parse all of its input up front runs the risk of acting upon a valid portion of the input, discovering a different portion is invalid, and suddenly needing to roll back whatever modifications it already executed in order to maintain consistency. Sometimes this is possible—such as rolling back a transaction in an RDBMS—but in general it may not be.</p><p>It may not be immediately apparent what shotgun parsing has to do with validation—after all, if you do all your validation up front, you mitigate the risk of shotgun parsing. The problem is that validation-based approaches make it extremely difficult or impossible to determine if everything was actually validated up front or if some of those so-called “impossible” cases might actually happen. The entire program must assume that raising an exception anywhere is not only possible, it’s regularly necessary.</p><p>Parsing avoids this problem by stratifying the program into two phases—parsing and execution—where failure due to invalid input can only happen in the first phase. The set of remaining failure modes during execution is minimal by comparison, and they can be handled with the tender care they require.</p><h2><a name="parsing-not-validating-in-practice"></a>Parsing, not validating, in practice</h2><p>So far, this blog post has been something of a sales pitch. “You, dear reader, ought to be parsing!” it says, and if I’ve done my job properly, at least some of you are sold. However, even if you understand the “what” and the “why,” you might not feel especially confident about the “how.”</p><p>My advice: focus on the datatypes.</p><p>Suppose you are writing a function that accepts a list of tuples representing key-value pairs, and you suddenly realize you aren’t sure what to do if the list has duplicate keys. One solution would be to write a function that asserts there aren’t any duplicates in the list:</p><pre><code><span>checkNoDuplicateKeys</span> <span>::</span> <span>(</span><span>MonadError</span> <span>AppError</span> <span>m</span><span>,</span> <span>Eq</span> <span>k</span><span>)</span> <span>=&gt;</span> <span>[(</span><span>k</span><span>,</span> <span>v</span><span>)]</span> <span>-&gt;</span> <span>m</span> <span>()</span></code></pre><p>However, this check is fragile: it’s extremely easy to forget. Because its return value is unused, it can always be omitted, and the code that needs it would still typecheck. A better solution is to choose a data structure that disallows duplicate keys by construction, such as a <code>Map</code>. Adjust your function’s type signature to accept a <code>Map</code> instead of a list of tuples, and implement it as you normally would.</p><p>Once you’ve done that, the call site of your new function will likely fail to typecheck, since it is still being passed a list of tuples. If the caller was given the value via one of its arguments, or if it received it from the result of some other function, you can continue updating the type from list to <code>Map</code>, all the way up the call chain. Eventually, you will either reach the location the value is created, or you’ll find a place where duplicates actually ought to be allowed. At that point, you can insert a call to a modified version of <code>checkNoDuplicateKeys</code>:</p><pre><code><span>checkNoDuplicateKeys</span> <span>::</span> <span>(</span><span>MonadError</span> <span>AppError</span> <span>m</span><span>,</span> <span>Eq</span> <span>k</span><span>)</span> <span>=&gt;</span> <span>[(</span><span>k</span><span>,</span> <span>v</span><span>)]</span> <span>-&gt;</span> <span>m</span> <span>(</span><span>Map</span> <span>k</span> <span>v</span><span>)</span></code></pre><p>Now the check <em>cannot</em> be omitted, since its result is actually necessary for the program to proceed!</p><p>This hypothetical scenario highlights two simple ideas:</p><ol><li><p><strong>Use a data structure that makes illegal states unrepresentable.</strong> Model your data using the most precise data structure you reasonably can. If ruling out a particular possibility is too hard using the encoding you are currently using, consider alternate encodings that can express the property you care about more easily. Don’t be afraid to refactor.</p></li><li><p><strong>Push the burden of proof upward as far as possible, but no further.</strong> Get your data into the most precise representation you need as quickly as you can. Ideally, this should happen at the boundary of your system, before <em>any</em> of the data is acted upon.<sup><a href="#footnote-3" id="footnote-ref-3-1">3</a></sup></p><p>If one particular code branch eventually requires a more precise representation of a piece of data, parse the data into the more precise representation as soon as the branch is selected. Use sum types judiciously to allow your datatypes to reflect and adapt to control flow.</p></li></ol><p>In other words, write functions on the data representation you <em>wish</em> you had, not the data representation you are given. The design process then becomes an exercise in bridging the gap, often by working from both ends until they meet somewhere in the middle. Don’t be afraid to iteratively adjust parts of the design as you go, since you may learn something new during the refactoring process!</p><p>Here are a handful of additional points of advice, arranged in no particular order:</p><ul><li><p><strong>Let your datatypes inform your code, don’t let your code control your datatypes.</strong> Avoid the temptation to just stick a <code>Bool</code> in a record somewhere because it’s needed by the function you’re currently writing. Don’t be afraid to refactor code to use the right data representation—the type system will ensure you’ve covered all the places that need changing, and it will likely save you a headache later.</p></li><li><p><strong>Treat functions that return <code>m ()</code> with deep suspicion.</strong> Sometimes these are genuinely necessary, as they may perform an imperative effect with no meaningful result, but if the primary purpose of that effect is raising an error, it’s likely there’s a better way.</p></li><li><p><strong>Don’t be afraid to parse data in multiple passes.</strong> Avoiding shotgun parsing just means you shouldn’t act on the input data before it’s fully parsed, not that you can’t use some of the input data to decide how to parse other input data. Plenty of useful parsers are context-sensitive.</p></li><li><p><strong>Avoid denormalized representations of data, <em>especially</em> if it’s mutable.</strong> Duplicating the same data in multiple places introduces a trivially representable illegal state: the places getting out of sync. Strive for a single source of truth.</p><ul><li><p><strong>Keep denormalized representations of data behind abstraction boundaries.</strong> If denormalization is absolutely necessary, use encapsulation to ensure a small, trusted module holds sole responsibility for keeping the representations in sync.</p></li></ul></li><li><p><strong>Use abstract datatypes to make validators “look like” parsers.</strong> Sometimes, making an illegal state truly unrepresentable is just plain impractical given the tools Haskell provides, such as ensuring an integer is in a particular range. In that case, use an abstract <code>newtype</code> with a smart constructor to “fake” a parser from a validator.</p></li></ul><p>As always, use your best judgement. It probably isn’t worth breaking out <a href="https://hackage.haskell.org/package/singletons">singletons</a> and refactoring your entire application just to get rid of a single <code>error "impossible"</code> call somewhere—just make sure to treat those situations like the radioactive substance they are, and handle them with the appropriate care. If all else fails, at least leave a comment to document the invariant for whoever needs to modify the code next.</p><h2><a name="recap-reflection-and-related-reading"></a>Recap, reflection, and related reading</h2><p>That’s all, really. Hopefully this blog post proves that taking advantage of the Haskell type system doesn’t require a PhD, and it doesn’t even require using the latest and greatest of GHC’s shiny new language extensions—though they can certainly sometimes help! Sometimes the biggest obstacle to using Haskell to its fullest is simply being aware what options are available, and unfortunately, one downside of Haskell’s small community is a relative dearth of resources that document design patterns and techniques that have become tribal knowledge.</p><p>None of the ideas in this blog post are new. In fact, the core idea—“write total functions”—is conceptually quite simple. Despite that, I find it remarkably challenging to communicate actionable, practicable details about the way I write Haskell code. It’s easy to spend lots of time talking about abstract concepts—many of which are quite valuable!—without communicating anything useful about <em>process</em>. My hope is that this is a small step in that direction.</p><p>Sadly, I don’t know very many other resources on this particular topic, but I do know of one: I never hesitate to recommend Matt Parson’s fantastic blog post <a href="https://www.parsonsmatt.org/2017/10/11/type_safety_back_and_forth.html">Type Safety Back and Forth</a>. If you want another accessible perspective on these ideas, including another worked example, I’d highly encourage giving it a read. For a significantly more advanced take on many of these ideas, I can also recommend Matt Noonan’s 2018 paper <a href="https://kataskeue.com/gdp.pdf">Ghosts of Departed Proofs</a>, which outlines a handful of techniques for capturing more complex invariants in the type system than I have described here.</p><p>As a closing note, I want to say that doing the kind of refactoring described in this blog post is not always easy. The examples I’ve given are simple, but real life is often much less straightforward. Even for those experienced in type-driven design, it can be genuinely difficult to capture certain invariants in the type system, so do not consider it a personal failing if you cannot solve something the way you’d like! Consider the principles in this blog post ideals to strive for, not strict requirements to meet. All that matters is to try.</p><ol><li id="footnote-1"><p>Technically, in Haskell, this ignores “bottoms,” constructions that can inhabit <em>any</em> value. These aren’t “real” values (unlike <code>null</code> in some other languages)—they’re things like infinite loops or computations that raise exceptions—and in idiomatic Haskell, we usually try to avoid them, so reasoning that pretends they don’t exist still has value. But don’t take my word for it—I’ll let Danielsson et al. convince you that <a href="https://www.cs.ox.ac.uk/jeremy.gibbons/publications/fast+loose.pdf">Fast and Loose Reasoning is Morally Correct</a>. <a href="#footnote-ref-1-1">↩</a></p></li><li id="footnote-2"><p>In fact, <code>Data.List.NonEmpty</code> already provides a <code>head</code> function with this type, but just for the sake of illustration, we’ll reimplement it ourselves. <a href="#footnote-ref-2-1">↩</a></p></li><li id="footnote-3"><p>Sometimes it is necessary to perform some kind of authorization before parsing user input to avoid denial of service attacks, but that’s okay: authorization should have a relatively small surface area, and it shouldn’t cause any significant modifications to the state of your system. <a href="#footnote-ref-3-1">↩</a></p></li></ol></article></div></div>]]></description>
        </item>
    </channel>
</rss>