<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 07 Sep 2024 08:30:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Malaysia started mandating ISPs to redirect DNS queries to local servers (111 pts)]]></title>
            <link>https://thesun.my/local-news/mcmc-addresses-misinformation-on-dns-redirection-internet-access-restrictions-BN12972452</link>
            <guid>41471510</guid>
            <pubDate>Sat, 07 Sep 2024 04:50:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thesun.my/local-news/mcmc-addresses-misinformation-on-dns-redirection-internet-access-restrictions-BN12972452">https://thesun.my/local-news/mcmc-addresses-misinformation-on-dns-redirection-internet-access-restrictions-BN12972452</a>, See on <a href="https://news.ycombinator.com/item?id=41471510">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <p><b>KUALA LUMPUR: </b>The Malaysian Communications and Multimedia Commission (MCMC) has instructed Internet Service Providers (ISPs) to redirect Domain Name Service (DNS) traffic that uses third-party DNS servers back to their own DNS servers.</p> <p>MCMC in a statement tonight said this is to ensure that users continue to benefit from the protection provided by the local ISP’s DNS servers and that malicious sites are inaccessible to Malaysians.</p> <p>As a commitment to protecting the safety of Internet users, MCMC has blocked a total of 24,277 websites between between 2018 to Aug 1, classified into various categories, which are online gambling (39 per cent), pornography/obscene content (31 per cent), copyright infringement (14 per cent), other harmful sites (12 per cent), prostitution (two per cent) and unlawful investments/scams (two per cent).</p> <p>“It has been falsely claimed that the measure undertaken by MCMC is a draconian measure. We reiterate that Malaysia’s implementation is for the protection of vulnerable groups from harmful online content.</p> <p>“The DNS system can protect users by blocking access to websites known for distributing malware, phishing, and other malicious activities, as well as filter inappropriate content such as adult material and violent websites,” the statement said.</p> <p>MCMC said some users choose to use third-party DNS servers like Google DNS or Cloudflare, which are said to offer various benefits, such as faster speeds and increased privacy, but they might not have the same level of protection for harmful content particularly in the local context, compared to local ISP’s DNS servers.</p> <p>DNS is a system designed to turn website addresses into numeric IP addresses to locate websites on the Internet, while ISPs typically operate their own DNS servers, which can be configured to block access to certain websites or domains based on their content, a common method used to protect users from harmful content.</p> <p>The statement said an inaccurate claim also suggested that a so-called blanket ban, with some suggesting that legitimate websites have been made inaccessible because of DNS redirection.</p> <p>“Websites are only blocked when they are found to host malicious content, such as copyright infringements, online gambling, or pornography. Legitimate websites remain accessible as usual, and DNS redirection ensures that harmful content is filtered out while safe sites remain reachable without noticeable disruption,” the statement said.</p> <p>Thus, MCMC encouraged users to report any difficulties in accessing legitimate websites directly to their respective ISPs so the issue could be addressed promptly, as they have yet to receive any such complaint.</p> <p>Moreover, any websites that believe they have been unfairly targeted or affected may file an appeal through the established channels, it said.</p> <p>The Appeals Tribunal, established by MCMC and chaired by a High Court judge, operates independently to ensure a fair and impartial review of each case.</p> <p>“ MCMC remains committed to maintaining a safe and secure online environment in Malaysia, balancing the protection of internet users with the need for seamless access to legitimate online content,” it said</p> <p>Previously, it has been announced that MCMC will introduce a new regulatory framework for safe Internet use by children and families on Aug 1, with implementation set for Jan 1, 2025.</p> <p>Under the new framework, social media and Internet messaging services with at least eight million registered users in Malaysia must apply for an Application Service Provider Class Licence under the Communications and Multimedia Act 1998 (Act 588).</p> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hardware Acceleration of LLMs: A comprehensive survey and comparison (157 pts)]]></title>
            <link>https://arxiv.org/abs/2409.03384</link>
            <guid>41470074</guid>
            <pubDate>Fri, 06 Sep 2024 22:09:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2409.03384">https://arxiv.org/abs/2409.03384</a>, See on <a href="https://news.ycombinator.com/item?id=41470074">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2409.03384">View PDF</a>
    <a href="https://arxiv.org/html/2409.03384v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>Large Language Models (LLMs) have emerged as powerful tools for natural language processing tasks, revolutionizing the field with their ability to understand and generate human-like text. In this paper, we present a comprehensive survey of the several research efforts that have been presented for the acceleration of transformer networks for Large Language Models using hardware accelerators.
<br>The survey presents the frameworks that have been proposed and then performs a qualitative and quantitative comparison regarding the technology, the processing platform (FPGA, ASIC, In-Memory, GPU), the speedup, the energy efficiency, the performance (GOPs), and the energy efficiency (GOPs/W) of each framework. The main challenge in comparison is that every proposed scheme is implemented on a different process technology making hard a fair comparison. The main contribution of this paper is that we extrapolate the results of the performance and the energy efficiency on the same technology to make a fair comparison; one theoretical and one more practical. We implement part of the LLMs on several FPGA chips to extrapolate the results to the same process technology and then we make a fair comparison of the performance.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Christoforos Kachris [<a href="https://arxiv.org/show-email/95ee12c7/2409.03384">view email</a>]      <br>    <strong>[v1]</strong>
        Thu, 5 Sep 2024 09:43:25 UTC (1,209 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Godot founders had desperately hoped Unity wouldn't 'blow up' (145 pts)]]></title>
            <link>https://www.gamedeveloper.com/programming/godot-founders-had-desperately-hoped-unity-wouldn-t-blow-up-</link>
            <guid>41468667</guid>
            <pubDate>Fri, 06 Sep 2024 18:41:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.gamedeveloper.com/programming/godot-founders-had-desperately-hoped-unity-wouldn-t-blow-up-">https://www.gamedeveloper.com/programming/godot-founders-had-desperately-hoped-unity-wouldn-t-blow-up-</a>, See on <a href="https://news.ycombinator.com/item?id=41468667">Hacker News</a></p>
Couldn't get https://www.gamedeveloper.com/programming/godot-founders-had-desperately-hoped-unity-wouldn-t-blow-up-: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Show HN: Infinity – Realistic AI characters that can speak (321 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=41467704</link>
            <guid>41467704</guid>
            <pubDate>Fri, 06 Sep 2024 16:47:04 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=41467704">Hacker News</a></p>
Couldn't get https://news.ycombinator.com/item?id=41467704: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Nginx has moved to GitHub (224 pts)]]></title>
            <link>https://mailman.nginx.org/pipermail/nginx-announce/2024/ITL3AOQSAJANFJXMM3VOVOIGOUADWFFK.html</link>
            <guid>41466963</guid>
            <pubDate>Fri, 06 Sep 2024 15:17:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/ITL3AOQSAJANFJXMM3VOVOIGOUADWFFK.html">https://mailman.nginx.org/pipermail/nginx-announce/2024/ITL3AOQSAJANFJXMM3VOVOIGOUADWFFK.html</a>, See on <a href="https://news.ycombinator.com/item?id=41466963">Hacker News</a></p>
<div id="readability-page-1" class="page">
   
    <b>Roman Arutyunyan</b> 
    <a href="mailto:nginx-announce%40nginx.org?Subject=Re%3A%20%5Bnginx-announce%5D%20NGINX%20has%20moved%20to%20Github%21&amp;In-Reply-To=%3CF7C066E5-1C8C-4E86-B936-273C9F67E8AB%40nginx.com%3E" title="[nginx-announce] NGINX has moved to Github!">arut at nginx.com
       </a><br>
    <i>Fri Sep  6 15:11:21 UTC 2024</i>
    <ul>
        <li>Previous message (by thread): <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/UUOCLLONPR6244YQYU65PO5LB7JDYCWM.html">[nginx-announce] nginx security advisory (CVE-2024-7347)
</a></li>
        
         <li> <b>Messages sorted by:</b> 
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/date.html#357">[ date ]</a>
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/thread.html#357">[ thread ]</a>
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/subject.html#357">[ subject ]</a>
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/author.html#357">[ author ]</a>
         </li>
       </ul>
    <hr>  
<!--beginarticle-->
<pre>Hello from NGINX!

Today we're thrilled to announce that the official NGINX Open Source development
repository has moved from Mercurial to GitHub [1][2][3], where we will now start
accepting contributions in the form of Pull Requests. Additionally, starting
today, we will begin accepting bugs reports, feature requests and enhancements
directly through GitHub, under the "Issues" tab. Moreover, we've moved our
community forums to the GitHub "Discussions" area, where you will now be able
to engage in conversation, ask, and answer questions.

Important: to report a security vulnerability, please follow our security
policy [4].

We understand that changes like these may require adjustment, so to give you
more time, we will continue accepting patches and provide community support
via mailing lists until December 31st, 2024.

We believe these changes will serve to centralize, modernize and expand access
to NGINX development and communities. They represent our continued commitment
to open source, as outlined in the blog post [5]. Most of all, we can't wait to
see all of your contributions, discussions and feedback, as we move into this
next chapter for NGINX.

[1] <a href="https://github.com/nginx/nginx">https://github.com/nginx/nginx</a>
[2] <a href="https://github.com/nginx/nginx-tests">https://github.com/nginx/nginx-tests</a>
[3] <a href="https://github.com/nginx/nginx.org">https://github.com/nginx/nginx.org</a>
[4] <a href="https://github.com/nginx/nginx/blob/master/SECURITY.md">https://github.com/nginx/nginx/blob/master/SECURITY.md</a>
[5] <a href="https://www.f5.com/company/blog/nginx/meetup-recap-nginxs-commitments-to-the-open-source-community">https://www.f5.com/company/blog/nginx/meetup-recap-nginxs-commitments-to-the-open-source-community</a>


On behalf of the NGINX Team,

Roman Arutyunyan
<a href="https://mailman.nginx.org/mailman/listinfo/nginx-announce">arut at nginx.com</a>
</pre>

<!--endarticle-->
    <hr>
    <ul>
        <!--threads-->
	<li>Previous message (by thread): <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/UUOCLLONPR6244YQYU65PO5LB7JDYCWM.html">[nginx-announce] nginx security advisory (CVE-2024-7347)
</a></li>
	
         <li> <b>Messages sorted by:</b> 
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/date.html#357">[ date ]</a>
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/thread.html#357">[ thread ]</a>
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/subject.html#357">[ subject ]</a>
              <a href="https://mailman.nginx.org/pipermail/nginx-announce/2024/author.html#357">[ author ]</a>
         </li>
       </ul>

<hr>
<a href="https://mailman.nginx.org/mailman/listinfo/nginx-announce">More information about the nginx-announce
mailing list</a><br>

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Wealthfolio: A Private, Open-Source Investment Tracker (717 pts)]]></title>
            <link>https://wealthfolio.app</link>
            <guid>41465735</guid>
            <pubDate>Fri, 06 Sep 2024 12:56:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://wealthfolio.app">https://wealthfolio.app</a>, See on <a href="https://news.ycombinator.com/item?id=41465735">Hacker News</a></p>
Couldn't get https://wealthfolio.app: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Effects of Gen AI on High Skilled Work: Experiments with Software Developers (184 pts)]]></title>
            <link>https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4945566</link>
            <guid>41465081</guid>
            <pubDate>Fri, 06 Sep 2024 11:21:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4945566">https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4945566</a>, See on <a href="https://news.ycombinator.com/item?id=41465081">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

	
	
		
	

	
	
		
		
	

	
	

	
	
	
	
	
    
        
    
	

	
	<p>
		
		
			<span>22 Pages</span>
		
		

		<span>Posted: 5 Sep 2024</span>
		
		
		
	</p>
	
		
	
	
	
	
	



	
	
	
	
		
		
	
	
		
			<p>Date Written: September 03, 2024</p>
		
	

	
	
		
		
	

	
	
		
	
	<div>
		<h3>Abstract</h3>
		<p>This study evaluates the impact of generative AI on software developer productivity by analyzing data from three randomized controlled trials conducted at Microsoft, Accenture, and an anonymous Fortune 100 electronics manufacturing company. These field experiments, which were run by the companies as part of their ordinary course of business, provided a randomly selected subset of developers with access to GitHub Copilot, an AI-based coding assistant that suggests intelligent code completions. Though each separate experiment is noisy, combined across all three experiments and 4,867 software developers, our analysis reveals a 26.08% increase (SE: 10.3%) in the number of completed tasks among developers using the AI tool. Notably, less experienced developers showed higher adoption rates and greater productivity gains. </p>
	</div>
	

	<center>
		
		


	

	
	

		
		

	
	


	</center>

	
	
	
		
	
	
	

	
	
	

	
    
    
	

	
	
		<p><strong>JEL Classification:</strong> J24, O32, O33</p>
	
	

	
	

























    	
	
	
	
   	
	
	
	
	
	            
	















	











    
    










    
    
    
    
















	



    




	<p>
		<strong>Suggested Citation:</strong>
		<a href="#">Suggested Citation<i></i></a>
	</p>
	<p>
		
			Cui,  Zheyuan and Demirer,  Mert and Jaffe,  Sonia and Musolff,  Leon and Peng,  Sida and Salz,  Tobias, The Effects of Generative AI on High Skilled Work: Evidence from Three Field Experiments with Software Developers (September 03, 2024).  Available at SSRN: <a href="https://ssrn.com/abstract=4945566" target="_blank">https://ssrn.com/abstract=4945566</a> or <a href="https://dx.doi.org/10.2139/ssrn.4945566" target="_blank">http://dx.doi.org/10.2139/ssrn.4945566 </a>
		
	</p>
	

	
	
	

	
	

	
	
		
	

	
	
	
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Swift is a more convenient Rust (231 pts)]]></title>
            <link>http://blog.namangoel.com/swift-is-the-more-convenient-rust</link>
            <guid>41464371</guid>
            <pubDate>Fri, 06 Sep 2024 09:10:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://blog.namangoel.com/swift-is-the-more-convenient-rust">http://blog.namangoel.com/swift-is-the-more-convenient-rust</a>, See on <a href="https://news.ycombinator.com/item?id=41464371">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="container">
  <article id="kf5pNR8Jwc8n6dk7svFLSk">
	<time datetime="2023-10-02">October  2, 2023</time>
  <h2>
    <a href="http://blog.namangoel.com/swift-is-the-more-convenient-rust">Swift is a more convenient Rust</a>
  </h2>
	<p>I’ve been learning Rust lately. </p>

<p>Rust is one of the most loved languages out there, is fast, and has an amazing community. Rust invented the concept of ownership as a solution memory management issues without resorting to something slower like Garbage Collection or Reference Counting. But, when you don’t need to be quite as low level, it gives you utilities such as <code>Rc</code>, <code>Arc</code> and <code>Cow</code> to do reference counting and “clone-on-right” in your code. And, when you need to go lower-level still, you can use the <code>unsafe</code> system  and access raw C pointers.</p>

<p>Rust also has a bunch of awesome features from functional languages like tagged enums, match expressions, first class functions and a powerful type system with generics.</p>

<p>Rust has an LLVM-based compiler which lets it compile to native code and WASM.</p>

<p>I’ve also been doing a bit of Swift programming for a couple of years now. And the more I learn Rust, the more I see a reflection of Swift. (I know that Swift stole a lot of ideas from Rust, I’m talking about my own perspective here).</p>

<p>Swift, too, has awesome features from functional languages like tagged enums, match expressions and first-class functions. It too has a very powerful type system with generics.</p>

<p>Swift too gives you complete type-safety without a garbage collector. By default, everything is a value type with “copy-on-write” semantics. But when you need extra speed you can opt into an ownership system and “move” values to avoid copying. And if you need to go even lower level, you can use the unsafe system and access raw C pointers.</p>

<p>Swift has an LLVM-based compiler which lets it compile to native code and WASM.</p>
<h2 id="deja-vu_2">Deja Vu? <a href="#deja-vu_2">#</a></h2>
<p>You’re probably feeling like you just read the same paragraphs twice. This is no accident. Swift is extremely similar to Rust and has most of the same feature-set. But there is a very big difference is <em>perspective</em>. If you consider the default memory model, this will start to make a lot of sense.</p>
<h2 id="rust-is-bottomup-swift-is-topdown_2">Rust is bottom-up, Swift is top-down. <a href="#rust-is-bottomup-swift-is-topdown_2">#</a></h2>
<p>Rust is a low-level systems language at heart, but it gives you the tools to go higher level. Swift starts at a high level and gives you the ability to go low-level.</p>

<p>The most obvious example of this is the memory management model. Swift use value-types by default with <code>copy-on-write</code> semantics. This is the equivalent of using <code>Cow&lt;&gt;</code> for all your values in Rust. But defaults matter. Rust makes it easy to use “moved” and “borrowed” values but requires extra ceremony to use <code>Cow&lt;&gt;</code> values as you need to “unwrap” them <code>.as_mutable()</code> to actually use the value within. Swift makes these Copy-on-Write values easy to use and instead requires extra ceremony to use borrowing and moving instead. Rust is faster by default, Swift is simpler and easier by default.</p>
<h2 id="swift-takes-rust39s-ideas-and-hides-them-in-c_2">Swift takes Rust’s ideas and hides them in C-like syntax. <a href="#swift-takes-rust39s-ideas-and-hides-them-in-c_2">#</a></h2>
<p>Swift’s syntax is a masterclass in taking awesome functional language concepts and hiding them in C-like syntax to trick the developers into accepting them.</p>

<p>Consider <code>match</code> statements. This is what a match statement looks like in Rust:</p>

<pre><code>enum Coin {
    Penny,
    Nickel,
    Dime,
    Quarter,
}

fn value_in_cents(coin: Coin) -&gt; u8 {
    match coin {
        Coin::Penny =&gt; 1,
        Coin::Nickel =&gt; 5,
        Coin::Dime =&gt; 10,
        Coin::Quarter =&gt; 25,
    }
}
</code></pre>

<p>Here’s how that same code would be written in Swift:</p>

<pre><code>enum Coin {
    case penny
    case nickel
    case dime
    case quarter
}
func valueInCents(coin: Coin) -&gt; Int {
    switch coin {
    case .penny: 1
    case .nickel: 5
    case .dime: 10
    case .quarter: 25
    }
}
</code></pre>

<p>Swift doesn’t have a <code>match</code> statement or expression. It has a <code>switch</code> statement that developers are already familiar with. Except this <code>switch</code> statement is actually not a <code>switch</code> statement at all. It’s an expression. It doesn’t “fallthrough”. It does pattern matching. It’s just a <code>match</code> expression with a different name and syntax.</p>

<p>In fact, Swift treats <code>enums</code> as more than <em>just</em> types and lets you put methods directly on it:</p>

<pre><code>enum Coin {
    case penny
    case nickel
    case dime
    case quarter

    func valueInCents() -&gt; Int {
        switch self {
        case .penny: 1
        case .nickel: 5
        case .dime: 10
        case .quarter: 25
        }
    }
}
</code></pre>
<h3 id="optional-types_3">Optional Types <a href="#optional-types_3">#</a></h3>
<p>Rust doesn’t have <code>null</code>, but it does have <code>None</code>. Swift has a <code>nil</code>, but it’s really just a <code>None</code> in hiding. Instead of an <code>Option&lt;T&gt;</code>, Swift let’s you use <code>T?</code>, but the compiler still forces you to check that the value is not <code>nil</code> before you can use it.</p>

<p>You get the same safety with more convenience since you can do this in Swift with an optional type:</p>

<pre><code>let val: T?

if let val {
  // val is now of type `T`.
}
</code></pre>

<p>Also, you’re not forced to wrap every value with a <code>Some(val)</code> before returning it. The Swift compiler takes care of that for you. A <code>T</code> will transparently be converted into a <code>T?</code> when needed.</p>
<h3 id="error-handling_3">Error Handling <a href="#error-handling_3">#</a></h3>
<p>Rust doesn’t have <code>try-catch</code>. Instead it has a <code>Result</code> type which contains the success and error types.</p>

<p>Swift doesn’t have a <code>try-catch</code> either, but it does have <code>do-catch</code> and you have to use <code>try</code> before calling a function that could throw. Again, this is just deception for those developers coming from C-like languages. Swift’s error handling works exactly like Rust’s behind the scenes, but it is hidden in a clever, familiar syntax. </p>

<pre><code>func usesErrorThrowingFunction() throws {
  let x = try thisFnCanThrow()
}

func handlesErrors() {
  do {
    let x = try thisFnCanThrow()
  } catch err {
    // handle the `err` here.
  }
}
</code></pre>

<p>This is very similar to how Rust let’s you use <code>?</code> at the end of statements to automatically forward errors, but you don’t have to wrap your success values in <code>Ok()</code>.</p>
<h2 id="rust39s-compiler-catches-problems-swift39s-co_2">Rust’s compiler catches problems. Swift’s compiler solves some of them <a href="#rust39s-compiler-catches-problems-swift39s-co_2">#</a></h2>
<p>There are many common problems that Rust’s compiler will catch at compile time and even suggest solutions for you. The example that portrays this well is self-referencing enums.</p>

<p>Consider an enum that represents a tree. Since, it is a recursive type, Rust will force you to use something like <code>Box&lt;&gt;</code> for referencing a type within itself.</p>

<pre><code>enum TreeNode&lt;T&gt; {
    Leaf(T),
    Branch(Vec&lt;Box&lt;TreeNode&lt;T&gt;&gt;&gt;),
}
</code></pre>

<p>(You could also us <code>Box&lt;Vec&lt;TreeNode&lt;T&gt;&gt;&gt;</code> instead)</p>

<p>This makes the problem explicit and forces you to deal with it directly. Swift is a little more, <em>automatic</em>.</p>

<pre><code>indirect enum TreeNode&lt;T&gt; {
    case leaf(T)
    case branch([TreeNode&lt;T&gt;])
}
</code></pre>

<p><strong>Note</strong>: that you still have to annotate this <code>enum</code> with the <code>indirect</code> keyword to indicate that it is recursive. But once you’ve done that, Swift’s compiler takes care of the rest. You don’t have to think about <code>Box&lt;&gt;</code> or <code>Rc&lt;&gt;</code>. The values just work normally.</p>
<h2 id="swift-is-less-quotpurequot_2">Swift is less “pure” <a href="#swift-is-less-quotpurequot_2">#</a></h2>
<p>Swift was designed to replace Objective-C and needed to be able to interface with existing code. So, it has made a lot of pragmatic choices that makes it a much less “pure” and “minimalist” language. Swift is a pretty big language compared to Rust and has many more features built-in. However, Swift is designed with “progressive disclosure” in mind which means that just as soon as you think you’ve learned the language a little more of the iceberg pops out of the water.</p>

<p>Here are just <em>some</em> of the language features:</p>

<ul>
<li>Classes / Inhertence</li>
<li>async-await</li>
<li>async-sequences</li>
<li>actors</li>
<li>getters and setters</li>
<li>lazy properties</li>
<li>property wrappers</li>
<li>Result Builders (for building tree-like structures. e.g. HTML / SwiftUI)</li>
</ul>
<h2 id="convenience-has-its-costs_2">Convenience has its costs <a href="#convenience-has-its-costs_2">#</a></h2>
<p>Swift is a far easier language to get started and productive with. The syntax is more familiar and a lot more is done for you automatically. But this really just makes Swift a higher-level language and it comes with the same tradeoffs.</p>

<p>By default, a Rust program is much faster than a Swift program. This is because Rust is fast by default, and <em>lets</em> you be slow, while Swift is easy by default and <em>lets</em> you be fast.</p>

<p>Based on this, I would say both languages have their uses. Rust is better for systems and embedded programming. It’s better for writing compilers and browser engines (Servo) and it’s better for writing entire operating systems.</p>

<p>Swift is better for writing UI and servers and some parts of compilers and operating systems. Over time I expect to see the overlap get bigger.</p>

  <figure id="kudo_kf5pNR8Jwc8n6dk7svFLSk">
    <a href="#kudo">
      
    </a>
    <p>198</p>
    <p>Kudos</p>
  </figure>
  <figure id="kudo_side_kf5pNR8Jwc8n6dk7svFLSk">
    <a href="#kudo">
      
    </a>
    <p>198</p>
    <p>Kudos</p>
  </figure>
</article>

</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Study: Playing D&D helps autistic players in social interactions (156 pts)]]></title>
            <link>https://arstechnica.com/science/2024/09/study-playing-dungeons-dragons-helps-autistic-players-in-social-interactions/</link>
            <guid>41464347</guid>
            <pubDate>Fri, 06 Sep 2024 09:05:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/science/2024/09/study-playing-dungeons-dragons-helps-autistic-players-in-social-interactions/">https://arstechnica.com/science/2024/09/study-playing-dungeons-dragons-helps-autistic-players-in-social-interactions/</a>, See on <a href="https://news.ycombinator.com/item?id=41464347">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <header>
            <h4>
      We can be heroes    —
</h4>
            
            <h2 itemprop="description">"I can make a character quite different from how I interact with people in real life."</h2>
                    </header>
        <div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2024/09/dungeons1-800x543.jpg" alt="A Dungeons &amp; Dragons game session featuring a map, miniatures, dice, and character sheets">
      <figcaption><p><a href="https://cdn.arstechnica.net/wp-content/uploads/2024/09/dungeons1.jpg" data-height="815" data-width="1200">Enlarge</a> <span>/</span> Researchers say that <em>Dungeons &amp; Dragons</em> can give autistic players a way to engage in low-risk social interactions.</p></figcaption>  </figure>

  




<!-- cache hit 5:single/related:04b3d803d4cd1281478d87cb93ce04f4 --><!-- empty -->
<p>Since its introduction in the 1970s, <a href="https://en.wikipedia.org/wiki/Dungeons_%26_Dragons"><em>Dungeons &amp; Dragons</em></a> has become one of the most influential <a href="https://en.wikipedia.org/wiki/Tabletop_role-playing_game">tabletop role-playing games</a> (TRPGs) in popular culture, featuring heavily in <em>Stranger Things</em>, for example, and spawning <a href="https://arstechnica.com/gaming/2023/03/review-dd-honor-among-thieves-is-a-worthy-homage-to-the-classic-rpg/">a blockbuster movie</a> released last year. Over the last decade or so, researchers have turned their focus more heavily to the ways in which <em>D&amp;D</em> and other TRPGs <a href="https://link.springer.com/article/10.1007/s10803-024-06408-0">can help</a> people with autism form healthy social connections, in part because the gaming environment offers clear rules around social interactions. According to the authors of a <a href="https://journals.sagepub.com/doi/10.1177/13623613241275260">new paper</a> published in the journal Autism, <em>D&amp;D</em> helped boost players' confidence with autism, giving them a strong sense of kinship or belonging, among other benefits.</p>
<p>“There are many myths and misconceptions about autism, with some of the biggest suggesting that those with it aren’t socially motivated, or don’t have any imagination," <a href="https://www.plymouth.ac.uk/news/dungeons-and-dragons-can-help-autistic-people-gain-confidence-and-find-their-inner-hero">said co-author Gray Atherton</a>, a psychologist at the University of Plymouth. "<em>Dungeons &amp; Dragons</em> goes against all that, centering around working together in a team, all of which takes place in a completely imaginary environment. Those taking part in our study saw the game as a breath of fresh air, a chance to take on a different persona and share experiences outside of an often challenging reality. That sense of escapism made them feel incredibly comfortable, and many of them said they were now trying to apply aspects of it in their daily lives.”</p>
<p>Prior research has shown that autistic people are more likely to feel lonely, have smaller social networks, and often experience anxiety in social settings. Their desire for social connection leads many to "mask" their neurodivergent traits in public for fear of being rejected as a result of social gaffes. "I think every autistic person has had multiple instances of social rejection and loss of relationships," one of the study participants said when Atherton et al. interviewed them about their experiences. "You've done something wrong. You don't know what it is. They don't tell you, and you find out when you've been just, you know, left shunned in relationships, left out.... It's traumatic."</p>                                                                        
                                                                                
<p>TPRGs like <em>D&amp;D</em> can serve as a social lubricant for autistic players, according to a <a href="https://www.researchgate.net/publication/381885971_We've_All_Come_Together_A_Board-Gaming_Approach_for_Working_with_Autistic_People">year-long study</a> published earlier this year co-authored by Atherton, because there is less uncertainty around how to behave in-game—unlike the plethora of unwritten social rules that make navigating social settings so anxiety-inducing. Such games immerse players in a fantastical world where they create their characters with unique backstories, strengths, and weaknesses and cooperate with others to complete campaigns. A game master guides the overall campaign, but the game itself evolves according to the various choices different players make throughout.</p>
<h2>A critical hit</h2>
<p>Small wonder, then, that there tend to be <a href="https://journals.sagepub.com/doi/full/10.1177/10468781231189493">higher percentages</a> of autistic TRPG players than in the general populace. For this latest study. Atherton et al. wanted to specifically investigate how autistic players experience <em>D&amp;D</em> when playing in groups with other autistic players. It's essentially a case study with a small sample size—just eight participants—and qualitative in nature, since the post-play analysis focused on semistructured interviews with each player after the conclusion of the online campaign, the better to highlight their individual voices.</p>
<p>The players were recruited through social media advertisements within the <em>D&amp;D</em>, Reddit and Discord online communities; all had received an autism diagnosis by a medical professional. They were split into two groups of four players, with one of the researchers (who's been playing <em>D&amp;D</em> for years) acting as the dungeon master. The online sessions featured in the study was the <a href="https://forgottenrealms.fandom.com/wiki/Waterdeep:_Dragon_Heist">Waterdeep: Dragonheist</a> campaign. The campaign ran for six weeks, with sessions lasting between two and four hours (including breaks).</p>
<p>Participants spoke repeatedly about the positive benefits they received from playing <em>D&amp;D</em>, providing a friendly environment that helped them relax about social pressures. "When you're interacting with people over <em>D&amp;D</em>, you're more likely to understand what's going on," one participant said in their study interview. "That's because the method you'll use to interact is written out. You can see what you're meant to do. There's an actual sort of reference sheet for some social interactions." That, in turn, helped foster a sense of belonging and kinship with their fellow players.</p>                                                                        
                                                                                
<p>Participants also reported feeling emotionally invested and close to their characters, with some preferring to separate themselves from their character in order to explore other aspects of their personality or even an entirely new persona, thus broadening their perspectives. "I can make a character quite different from how I interact with people in real-life interactions," one participant said. "It helps you put yourself in the other person's perspective because you are technically entering a persona that is your character. You can then try to see how it feels to be in that interaction or in that scenario through another lens." And some participants said they were able to "rewrite" their own personal stories outside the game by adopting some of their characters' traits—a psychological phenomenon known as "bleed."</p>
<p>“Autism comes with several stigmas, and that can lead to people being met with judgment or disdain," <a href="https://www.plymouth.ac.uk/news/dungeons-and-dragons-can-help-autistic-people-gain-confidence-and-find-their-inner-hero">said co-author Liam Cross</a>, also of the University of Plymouth. "We also hear from lots of families who have concerns about whether teenagers with autism are spending too much time playing things like video games. A lot of the time that is because people have a picture in their minds of how a person with autism should behave, but that is based on neurotypical experiences. Our studies have shown that there are everyday games and hobbies that autistic people do not simply enjoy but also gain confidence and other skills from. It might not be the case for everyone with autism, but our work suggests it can enable people to have positive experiences that are worth celebrating.”</p>
<p>Autism, 2024. DOI: <a href="http://dx.doi.org/10.1177/13623613241275260">10.1177/13623613241275260</a> &nbsp;(<a href="http://arstechnica.com/science/news/2010/03/dois-and-their-discontents-1.ars">About DOIs</a>).</p>

                                                </div>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Intent to unship: HTTP/2 Push (161 pts)]]></title>
            <link>https://groups.google.com/a/mozilla.org/g/dev-platform/c/vU9hJg343U8/m/4cZsHz7TAQAJ</link>
            <guid>41464334</guid>
            <pubDate>Fri, 06 Sep 2024 09:03:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://groups.google.com/a/mozilla.org/g/dev-platform/c/vU9hJg343U8/m/4cZsHz7TAQAJ">https://groups.google.com/a/mozilla.org/g/dev-platform/c/vU9hJg343U8/m/4cZsHz7TAQAJ</a>, See on <a href="https://news.ycombinator.com/item?id=41464334">Hacker News</a></p>
Couldn't get https://groups.google.com/a/mozilla.org/g/dev-platform/c/vU9hJg343U8/m/4cZsHz7TAQAJ: Error: timeout of 10000ms exceeded]]></description>
        </item>
    </channel>
</rss>