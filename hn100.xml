<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Thu, 02 Jan 2025 17:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[What Is miniKanren? (128 pts)]]></title>
            <link>http://minikanren.org/</link>
            <guid>42574125</guid>
            <pubDate>Thu, 02 Jan 2025 13:15:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://minikanren.org/">http://minikanren.org/</a>, See on <a href="https://news.ycombinator.com/item?id=42574125">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  

<p><a href="#workshop">Workshop</a> |  
<a href="#trs">Book</a> |
<a href="#onlineCourse">Online Course</a> |
<a href="#implementations">Implementations</a> |
<a href="#projects">Projects</a> |
<a href="#upcomingTalks">Upcoming Talks</a> |
<a href="#talks">Talks</a> |
<a href="#interviews">Interviews</a> |
<a href="#writtenTutorials">Tutorials</a> |
<a href="#theses">Theses</a> |
<a href="#papers">Papers</a> |
<a href="#screencasts">Screencasts</a> |
<a href="#hangouts">Weekly Hangouts</a> |
<a href="#podcasts">Podcasts</a> |
<a href="#blogs">Blogs</a> |
<a href="#contact">Contact</a></p><h2>What is miniKanren?</h2><p>

miniKanren is a family of Domain Specific Languages for logic programming.</p><p>

The name <i>kanren</i> comes from a Japanese word (関連) meaning "relation".</p><p>

The core miniKanren language is very simple, with only three logical operators and one interface operator.<br>
The core language, using Scheme as the host language, is described in this <a href="http://io.livecode.ch/learn/webyrd/webmk">short, interactive tutorial</a>.</p><p>

miniKanren has been implemented in a growing number of <a href="#implementations">host languages</a>, including Scheme, Racket, Clojure,<br> Haskell, Python, JavaScript, Scala, Ruby, OCaml, and PHP, among many other languages.</p><p>

miniKanren is designed to be easily modified and extended; extensions include Constraint Logic Programming,<br>
probabilistic logic programming, nominal logic programming, and tabling.</p><p>

A detailed discussion of the differences between miniKanren and Prolog <a href="http://minikanren.org/minikanren-and-prolog.html">can be found here</a>.</p><h2> miniKanren Workshops and other Meetings </h2>

<ul>
  <li>
    <a href="https://icfp24.sigplan.org/home/minikanren-2024">Sixth miniKanren workshop</a> at ICFP 2024
  </li>
  <li>
    <a href="https://icfp23.sigplan.org/home/minikanren-2023">Fifth miniKanren workshop</a> at ICFP 2023
    <a href="https://dash.harvard.edu/handle/1/37377201">(Proceedings)</a>
    <a href="https://www.youtube.com/playlist?list=PLyrlk8Xaylp5R98oAIE0QxKbU7-cQmju4">(Workshop Videos)</a>
  </li>
  <li>
    <a href="https://icfp22.sigplan.org/home/minikanren-2022">Fourth miniKanren workshop</a> at ICFP 2022
    <a href="https://icfp22.sigplan.org/home/minikanren-2022#program">(Program)</a>
  </li>  
  <li>
    <a href="https://icfp21.sigplan.org/home/minikanren-2021">Third miniKanren workshop</a> at ICFP 2021
    <a href="https://hdl.handle.net/1807/110263">(Proceedings)</a>
    <a href="https://www.youtube.com/playlist?list=PLyrlk8Xaylp45kHIiTnw-w-7bi3pwc6bw">(Workshop Videos)</a>
  </li>
  <li>
    <a href="https://icfp20.sigplan.org/home/minikanren-2020">Second miniKanren workshop</a> at ICFP 2020
    <a href="http://hdl.handle.net/2047/D20413639">(Proceedings)</a>
  </li>
  <li>
    <a href="https://icfp19.sigplan.org/home/minikanren-2019">First miniKanren workshop</a> at ICFP 2019
    <a href="http://nrs.harvard.edu/urn-3:HUL.InstRepos:41307116">(Proceedings)</a>
  </li>
  <li> <a href="#clojure-west">miniKanren confo</a> at Clojure/West 2013</li>
</ul>
<br>


<h2>The Book</h2>

<p><a href="http://www.cs.indiana.edu/~dfried/">Daniel P. Friedman</a>, <a href="http://webyrd.net/">William E. Byrd</a>, <a href="http://okmij.org/ftp/">Oleg Kiselyov</a>, and <a href="http://hemann.pl/">Jason Hemann</a><br>
<a href="https://mitpress.mit.edu/books/reasoned-schemer-second-edition"><i>The Reasoned Schemer, Second Edition</i></a><br>
The MIT Press, Cambridge, MA, 2018</p><p>

<a href="https://github.com/TheReasonedSchemer2ndEd/CodeFromTheReasonedSchemer2ndEd">Source code from the book</a></p><p>

<a href="https://mitpress.mit.edu/books/reasoned-schemer-second-edition"><img src="http://minikanren.org/trs2.png" alt="The Reasoned Schemer, Second Edition front cover" width="300"> </a></p><h2>miniKanren Online Uncourse (via Hangouts on Air)</h2>

<p><a href="http://webyrd.net/">Will Byrd</a> has organized several weekly miniKanren uncourses.  Participants show off miniKanren projects, talk about miniKanren implementation, and do live coding/live research.  A link to each week's hangout is posted to the <a href="https://groups.google.com/forum/#!forum/minikanren-uncourse">miniKanren uncourse mailing list</a>.</p><p>

<a href="https://www.youtube.com/playlist?list=PLO4TbomOdn2cks2n5PvifialL8kQwt0aW">Recordings of previous uncourse hangouts.</a></p><h2>Implementations</h2>


<h3>Scheme</h3>

<p><a href="https://github.com/webyrd/miniKanren-with-symbolic-constraints">miniKanren-with-symbolic-constraints</a><br>
miniKanren with extensions for symbolic constraint solving.  Includes compatibility files for Racket and various Scheme implementations.</p><p>

<a href="https://github.com/nathanielrb/ftmicroKanren"> microKanren with temporal logic programming</a><br>
Related to <a href="https://github.com/nathanielrb/tmicroKanren"> an earlier, similar implementation</a></p><!-- <a href="https://github.com/miniKanren/miniKanren">miniKanren</a><br /><br /> -->

<p><a href="https://github.com/jasonhemann/microKanren">microKanren</a><br>
A minimal miniKanren implementation, as described in the <a href="#microKanrenPaper">2013 Scheme Workshop paper</a></p><p>

<a href="https://github.com/cbrooks90/martelli-montanari"> microKanren implementation using Martelli-Montanari unification algorithm</a></p><p>

<a href="https://github.com/jasonhemann/microKanren-DLS-16">microKanren w/simple complete search</a><br>
A modified/improved microKanren implementation, as described in the <a href="https://dl.acm.org/citation.cfm?doid=2989225.2989230">2016 DLS paper</a>.</p><p>

<a href="https://github.com/webyrd/alphaKanren">alphaKanren</a><br>
miniKanren extended with nominal logic programming, as described in the <a href="#alphaKanrenPaper">2007 Scheme Workshop paper</a>.</p><p>

<a href="https://github.com/webyrd/probKanren">probKanren</a><br>
Research prototype of miniKanren with probabilistic inference.</p><p>

<a href="https://github.com/ThatGeoGuy/chicken-miniKanren">chicken-miniKanren</a><br>
miniKanren implementation for chicken scheme</p><p>

<a href="https://github.com/doyougnu/gerbilog">gerbilog</a><br>
<a href="https://github.com/kwannoel/gerbilKanren">gerbiKanren</a><br>
miniKanren implementations for gerbil scheme</p><p>

<a href="https://github.com/orchid-hybrid/microKanren-sagittarius">microKanren-sagittarius</a><br>
miniKanren implementation for R7RS sagittarius scheme 0.6.0 based on (microKanren) with the <code>=/=</code> operation added.</p><p>

<a href="https://github.com/cgswords/rkanren">rKanren</a><br>
miniKanren with guided search, as described in the <a href="#rKanrenPaper">2013 Scheme Workshop paper</a>.</p><p>

<a href="http://c-lambda.se/guile-log/minikanren.html#minikanren">miniKanren</a> in <a href="http://c-lambda.se/guile-log/">guile-log</a>, a <a href="https://www.gnu.org/software/guile/">Guile Scheme</a> library.</p><p>

<a href="https://github.com/donaldsonjw/bkanren">bkanren</a><br>
miniKanren with constraint extensions that runs under <a href="http://www-sop.inria.fr/mimosa/fp/Bigloo/">Bigloo Scheme</a>.<br>
Fork: <a href="https://github.com/kourzanov/bkanren">bkanren</a></p><p>

<a href="https://github.com/mbillingr/miniKANREN/tree/master/R7RS">miniKANREN R7RS</a></p><p>

<a href="https://github.com/namin/clpsmt-miniKanren">CLP(SMT) miniKanren</a></p><p>

<a href="https://github.com/namin/staged-miniKanren">staged miniKanren</a><br>
explorations of multi-stage logic programming in miniKanren</p><p>

<a href="https://github.com/lackhoa/staticKanren">Static Kanren</a><br>
A variant of miniKanren which returns better answers</p><p>

<a href="https://github.com/zhjhxxxjh/ykanren">ykanren</a></p><p>

<a href="https://github.com/vastopol/uexp/blob/master/nils/scheme/s9fes/s9/lib/amk.scm">amk on S9fes</a></p><!--
<a href="https://github.com/calvis/cKanren">cKanren</a><br />
miniKanren extended with Constraint Logic Programming (CLP), as
described in the <a href="#cKanrenPaper">2011 Scheme Workshop paper</a>.<br /><br />
-->

<p><a href="https://github.com/cbrooks90/semiKanren">semiKanren</a><br>
Logic programming using semiunification for R-ASUP instances</p><p>

<a href="https://github.com/webyrd/slpKanren">slpKanren</a><br>
Stochastic Logic Programs (SLP) style probabilistic logic programming in miniKanren. (Deprecated--please see <a href="https://github.com/webyrd/probKanren">probKanren</a> instead.)</p><p>

<a href="http://okmij.org/ftp/Scheme/sokuza-kanren.scm">sokuza-kanren</a><br>
<a href="http://okmij.org/ftp/">Oleg Kiselyov</a>'s minimal implementation of logic programming.


</p><h3>Racket</h3>

<p><a href="https://github.com/webyrd/miniKanren-with-symbolic-constraints">miniKanren-with-symbolic-constraints</a><br>
miniKanren with extensions for symbolic constraint solving.  Includes compatibility files for Racket and various Scheme implementations.</p><p>

<a href="https://github.com/calvis/cKanren">cKanren</a><br>
miniKanren extended with Constraint Logic Programming (CLP); an improved version of the
system described in the <a href="#cKanrenPaper">2011 Scheme Workshop paper</a>.</p><p>

<a href="https://github.com/miniKanren/Racket-miniKanren">Racket-miniKanren</a><br>
vanilla miniKanren Racket port</p><p>

<a href="https://github.com/niitsuma/Racket-miniKanren/tree/recursive">recursive miniKanren</a><br>
recursive miniKanren implementation in Racket.</p><p>

<a href="https://github.com/zaoqi/zKanren">zKanren</a><br>
cKanren with fair conjunction</p><p>

<a href="https://github.com/rntz/minikanren-datalog">Datalog in miniKanren</a></p><p>

<a href="https://github.com/aqui18/racket-qkanren">racket qkanren</a></p><p>

<a href="https://github.com/mvcccccc/alphaKanren-revisited">alphaKanren revisited</a></p><p>

<a href="https://github.com/gregr/dbKanren">dbKanren</a></p><p>

<a href="https://github.com/femtomc/roxanren">roxanren</a><br>
Experimental fusion of miniKanren and <a href="https://emina.github.io/rosette/">Rosette</a></p><h3>Clojure</h3>

<p><a href="https://github.com/clojure/core.logic">core.logic</a><br>
(<a href="https://rawgithub.com/dedeibel/clojure-core-logic-cheatsheets/master/out/cheatsheet-use-title-attribute-no-cdocs-summary.html">core.logic cheatsheet</a>, courtesy of <a href="http://myminutes.wordpress.com/2013/07/17/clojure-core-logic-cheatsheets/">Benjamin Peter</a>)<br>

<a href="https://github.com/mullr/micrologic"></a><br>
A literate Clojure implementation of microKanren.<br>
<a href="http://mullr.github.io/micrologic/literate.html">Annotated source code.</a></p><p>

<a href="https://github.com/halgari/async-mu-kanren">async-mu-kanren</a><br>
Proof-of-concept implementation of muKanren using CSP (core.async)</p><p>

<a href="https://github.com/azarafrooz/rank-Kanren">rank Kanren</a><br>
rKanren extension of core.logic</p><p>

<a href="https://web.archive.org/web/20180617160703/https://github.com/fogus/eleusis">Eleusis</a></p><p>

<a href="https://github.com/blueninj0r/maikurokanren">maikurokanren</a></p><p>

<a href="https://github.com/cryptism/yaukanren">yaukanren</a></p><h3>Assorted Languages</h3>

<p><a href="https://github.com/bodil/microkanrens">Implementations of microKanren in assorted languages</a></p><h3>C#</h3>

<p><a href="https://github.com/wallymathieu/csharp_ukanren">csharp_ukanren</a></p><p>

<a href="https://github.com/VPetukhov/miniKanren">miniKanren</a></p><p>

<a href="https://github.com/verophyle/cslogic">cslogic</a></p><p>

<a href="https://github.com/yuretz/kanrenmo/tree/master/kanrenmo">kanrenmo</a></p><p>

<a href="https://github.com/waf/Logic">Logic</a></p><p>

<a href="https://github.com/naasking/uKanren.NET">uKanren.NET</a><br>
Described <a href="https://higherlogics.blogspot.com/2015/02/kanrennet-featherweight-relational.html">here</a> in prose.</p><p>

<a href="https://github.com/sKabYY/NMiniKanren">NMiniKanren</a></p><h3>CoffeeScript</h3>

<p><a href="https://github.com/fogus/friebyrd">Friebyrd</a></p><h3>Common Lisp</h3>

<p><a href="https://common-lisp.net/project/cl-kanren-trs/">cl-kanren-trs</a></p><p>
<a href="https://github.com/blasut/cl-microkanren">cl-microkanrens</a></p><p>
<a href="https://github.com/guitarvydas/mini-kanren">mini-kanren</a></p><p>
<a href="https://github.com/daveduthie/mu-kanren">mu-kanren</a></p><p>
<a href="https://github.com/rgc69/si-kanren">sī-Kanren</a></p><p>
<a href="https://github.com/deliciousrobots/kanren-fset">Kanren-Fset</a> (Fset collection library support for cl-kanren-trs)

</p><h3>Coq</h3>

<p><a href="https://github.com/dboulytchev/miniKanren-coq">miniKanren-coq</a></p><h3>Crystal</h3>

<p><a href="https://github.com/jemc/crystal-kanren">crystal-kanren</a></p><h3>Dart</h3>

<p><a href="https://github.com/hkoktay/dmicrokanren">dmicrokanren</a></p><p>

<a href="https://github.com/shd101wyy/logic.dart">logic.dart</a></p><h3>Dylan</h3>

<p><a href="https://github.com/tca/miniKanren-Dylan">miniKanren-Dylan</a></p><h3>Elixir</h3>

<p><a href="https://github.com/lyons/ExKanren">ExKanren</a></p><p>

<a href="https://github.com/xieyuheng/exo">exo</a></p><h3>Elm</h3>

<p><a href="https://github.com/tapeinosyne/elm-microkanren">elm-microKanren</a></p><p>

<a href="https://github.com/ndr-qef/elm-microKanren">Another elm-microKanren</a></p><p>

<a href="https://github.com/dvberkel/microKanren">microKanren</a><br>
<a href="https://dvberkel.github.io/microKanren/">Project homepage</a> for this Elm implementation of the uKanren language. 


</p><h3>Emacs Lisp</h3>

<p><a href="https://github.com/nickdrozd/reazon">Reazon</a></p><h3>Erlang</h3>

<p><a href="https://github.com/zkessin/erlKanren">erlKanren</a></p><p>

<a href="https://github.com/bodil/lolkanren/blob/master/kanren.erl">lolkanren_erlang</a></p><p>

<a href="https://github.com/voila/mukanren">mukanren</a></p><h3>Extempore</h3>

<p><a href="https://github.com/jasonhemann/microKanren-extempore">mini-over-micro-extempore</a></p><h3>F#</h3>

<p><a href="https://github.com/Smaug123/FicroKanSharp">FicroKanSharp</a></p><p>

<a href="https://github.com/palladin/logic">logic</a><br>
A logic programming library for F#</p><p>

<a href="https://github.com/kurtschelfthout/MiniKanren">MiniKanren</a><br>
An attempted implementation of MiniKanren in F#.

</p><h3>Go</h3>

<p><a href="https://github.com/hiredman/gologic">gologic</a></p><p>
<a href="https://github.com/awalterschulze/gominikanren">gominikanren</a></p><p>
<a href="https://github.com/elliotdavies/ukanren-go">ukanren-go</a></p><p>
<a href="https://github.com/GoLangsam/kanren">kanren</a></p><h3>Groovy</h3>

<p><a href="https://github.com/timyates/groovy-logic">groovy-logic</a></p><h3>Haskell</h3>

<p><a href="https://github.com/jcoglan/kanrens/tree/master/haskell">kanrens</a></p><p>

<a href="https://github.com/acfoltzer/Molog">Molog</a></p><p>

<a href="https://github.com/JaimieMurdock/HK">HaskellKanren (HK)</a></p><p>

<a href="https://github.com/jvranish/MiniKanrenT">MiniKanrenT</a></p><p>

<a href="https://github.com/Oregu/featherweight">featherweight</a></p><p>

<a href="https://github.com/iomeone/hKanren">hKanren</a></p><p>

<a href="https://github.com/sergv/hkanren">HKanren</a></p><p>

<a href="https://github.com/justinmimbs/microkanren">Haskell microKanren with miniKanren extensions</a></p><p>

<a href="https://github.com/kyagrd/houkanren">HOuKanren</a><br>
A twist to uKanren to support Higher-Order Relational Programming.</p><p>

<a href="https://github.com/pbevin/khanren">Khaaaaaaanren!</a></p><p>

<a href="https://bitbucket.org/jozefg/ds-kanren">DS-Kanren</a><br>
An <a href="https://github.com/composewell/ds-kanren">alternative version</a> adapted to use Streamly<br>
An <a href="https://github.com/overminder/hs-mini-kanren">adaptation</a> written as a Haskell EDSL</p><p>

<a href="https://gist.github.com/msullivan/4223fd47991acbe045ec#file-microkanren-hs">MicroKanren.hs</a></p><p>

<a href="https://github.com/fsestini/mu-kanren">mu-kanren</a></p><p>

<a href="https://github.com/rntz/ukanren">ukanren</a></p><p>

<a href="https://github.com/kwannoel/uKanren">uKanren</a></p><p>

<a href="https://github.com/seantalts/hasktrip/blob/master/doc/MicroKanren.md">MicroKanren.lhs</a></p><p>

<a href="https://github.com/JeffreyBenjaminBrown/micro-kanren/">micro-kanren</a></p><p>

<a href="https://github.com/sndtkrh/haskanren">hasKanren</a></p><p>

<a href="https://github.com/dramforever/haskell-stuff/blob/master/negation-kanren.hs">negation kanren</a></p><p>

<a href="https://github.com/iomeone/hKanren">hKanren</a></p><p>

<a href="https://github.com/xavierpinho/microKanren-demo">microKanren-demo</a><br>
μKanren in Haskell 98.

</p><h3>HOL Light</h3>

<p><a href="https://github.com/massimo-nocentini/kanren-light">kanren-light</a></p><h3>Hy</h3>

<p><a href="https://github.com/brandonwillard/hypoKanren">HypoKanren</a></p><p>

<a href="https://github.com/mudphone/Hywaii">Hywaii</a></p><p>

<a href="https://github.com/algernon/adderall">Adderall</a></p><h3>Idris</h3>

<p><a href="https://github.com/joom/idris-microKanren">idris microKanren</a></p><p>
<a href="https://github.com/mullr/ikanren">ikanren</a></p><p>
<a href="https://github.com/jmitchell/microKandris">microKandris</a></p><h3>J</h3>

<p><a href="https://github.com/Rscho314/mk">Microkanren in J</a><br>
Supersedes an <a href="https://github.com/Rscho314/new_kanren">older version</a>.

</p><h3>Java</h3>

<p><a href="https://github.com/nd/mk.java">mk.java</a><br>
microKanren in Java.</p><p>

<a href="https://github.com/adarshsoodan/minikanren4j">miniKanren4j</a></p><p>

<a href="https://github.com/free-variation/archelogic"> Archelogic </a></p><p>

<a href="https://github.com/heidisu/java8kanren">java8kanren</a><br>
miniKanren in Java 8.</p><p>

<a href="https://github.com/mmaroti/minikanren">Java miniKanren</a></p><h3>JavaScript</h3>

<p><a href="http://tca.github.io/veneer/editor.html">veneer</a><br>
Browser based miniKanren editor and REPL, with constraints.<br>
<a href="https://github.com/tca/veneer">GitHub repo</a></p><p>

<a href="https://github.com/asolove/microScopeKanren">microScopeKanren</a><br>
A JavaScript implementation of microKanren with a focus on inspecting programs as they run.<br>
<a href="http://www.adamsolove.com/microScopeKanren/">Example, vizualizing <code>appendo</code></a></p><p>

<a href="http://functorial.com/mu-kanren/">mu-kanren</a><br>
A step-by-step MicroKanren evaluator.<br>
<a href="https://github.com/functorial/mu-kanren">GitHub repo</a></p><p>

<a href="https://github.com/jcoglan/kanrens/tree/master/es6">Kanrens</a></p><p>

<a href="https://github.com/joshcox/microJSKanren">microJSKanren</a></p><p>

<a href="https://github.com/bodil/lolkanren">lolkanren</a></p><p>

<a href="https://github.com/stanistan/jolic">jolic</a></p><p>

<a href="https://github.com/keyz/node-kanren">node-kanren</a></p><p>

<a href="https://github.com/keyz/microkanren-js">microKanren JS</a></p><p>

<a href="https://github.com/zaach/ukanren.js">uKanren</a></p><p>

<a href="https://github.com/willkurt/microKanren.js">microKanren</a></p><p>

<a href="https://github.com/cduret/mk.js">mk.js</a></p><p>

<a href="https://github.com/wjlewis/ramo">ramo</a></p><p>

<a href="https://github.com/ramda/ramda-logic">ramda-logic</a></p><p>

<a href="https://github.com/RyanGough/reason.js">reason.js</a></p><p>

<a href="https://github.com/shd101wyy/logic.js">logic.js</a></p><p>

<a href="https://github.com/buzzdecafe/rlg">rlg</a></p><p>

<a href="https://github.com/sebug/SebuKanren">SebuKanren</a></p><h3>Julia</h3>

<p><a href="https://github.com/latticetower/MuKanren.jl">MuKanren.jl</a></p><p>

<a href="https://github.com/habemus-papadum/LilKanren.jl">Lil Kanren</a></p><p>

<a href="https://github.com/RAbraham/MiniKanren">MiniKanren</a></p><p>

<a href="https://www.philipzucker.com/yet-another-microkanren-in-julia/">yet another microKanren in Julia</a></p><h3>Kotlin</h3>

<p><a href="https://github.com/neilgall/KotlinKanren">KotlinKanren</a></p><p>
<a href="https://github.com/veyndan/kanren">kanren</a></p><p>
<a href="https://github.com/MechaRex/logikaldb">LogikalDB</a></p><h3>Lisp Flavored Erlang</h3>

<p><a href="https://github.com/pzel/mkr">mkr</a></p><h3>Lua</h3>

<p><a href="https://github.com/silentbicycle/lua-ukanren">lua-ukanren</a></p><p>

<a href="https://github.com/handsomecheung/miniKanren.lua">miniKanren.lua</a></p><h3>Mímir experimental rules engine</h3>

<p><a href="https://github.com/hraberg/mimir/blob/master/src/mimir/mk.clj">mímirKanren</a></p><h3>miniKanren</h3>

<p><a href="https://github.com/jasonhemann/micro-in-mini">micro-in-mini</a></p><p>

<a href="https://github.com/jpt4/muko">muko</a></p><h3>ML</h3>

<p><a href="https://github.com/eupp/LatticeKanren">LatticeKanren</a></p><p>

<a href="https://github.com/chrisamaphone/ml-mukanren">ml-mukanren</a></p><p>

<a href="https://github.com/KoviRobi/microKanren-SML">microKanren-SML</a></p><p>

<a href="https://github.com/jozefg/sml-kanren">sml-kanren</a></p><h3>Moxie</h3>

<p><a href="https://github.com/rntz/moxy/blob/master/kanren.mox">kanren.mox</a></p><h3>Nu</h3>

<p><a href="https://github.com/finnsson/minikanren-nu">minikanren-nu</a></p><h3>OCaml</h3>

<p><a href="https://github.com/dboulytchev/OCanren">OCanren</a><br>
Statically typed embedding of miniKanren into Objective Caml.</p><p>

<a href="https://github.com/arsalan0c/kanren">kanren</a></p><p>

<a href="https://github.com/lightyang/minikanren-ocaml">minikanren-ocaml</a></p><p>
   
<a href="https://github.com/StrykerKKD/Logical">Logical</a></p><h3>Perl</h3>

<p><a href="https://github.com/alinbsp/Perl-miniKanren">Perl-miniKanren</a></p><h3>PHP</h3>

<p><a href="https://github.com/igorw/reasoned-php">reasoned-php</a></p><p>

<a href="https://github.com/mudge/php-microkanren">php-microKanren</a></p><h3>Pony</h3>

<p><a href="https://github.com/jtfmumm/pony-logic">pony-logic</a><br>
Related to an earlier project <a href="https://github.com/jtfmumm/microkanren-pony">microKanren-pony</a></p><p> 

<a href="https://github.com/kulibali/pony-kanren">pony-kanren</a></p><h3>Prolog</h3>

<p><a href="https://github.com/mndrix/microkanren-prolog">microkanren-prolog</a><br>
A Prolog implementation of microKanren.</p><p>

<a href="https://gist.github.com/aphyr/4d41e7655b10a68e753f729bdc1c5a6d">miniKanren.pl</a><br>
MiniKanren in Lisp in Prolog. Accompanies the <a href="https://aphyr.com/posts/354-unifying-the-technical-interview">Technical Interview</a></p><h3>Python</h3>

<p><a href="https://github.com/pythological/kanren">kanren</a></p><p>

<a href="https://github.com/jcoglan/kanrens/tree/master/python">kanrens</a></p><p>

<a href="https://github.com/jtauber/pykanren">pykanren</a></p><p>

<a href="https://github.com/darius/pythological">pythological</a></p><p>

<a href="https://github.com/logpy/logpy">LogPy</a></p><p>

<a href="https://github.com/mbillingr/miniKANREN/tree/master/Python">miniKANREN Python</a></p><p>

<a href="https://github.com/massimo-nocentini/microkanrenpy">microkanrenpy</a></p><p>

<a href="https://github.com/zaxtax/microKanren">microKanren</a></p><p>

<a href="https://github.com/ethframe/microkanren">Another microkanren</a></p><p>

<a href="https://gist.github.com/cheery/d89bfb4c8d6c7a3eb908">microkanren.py</a></p><p>

<a href="https://github.com/jams2/microkanren">microkanren</a><br>
µKanren with support for disequality and finite domain constraints, and an extendable constraint system.</p><h3>Pure</h3>

<p><a href="https://github.com/bodil/microkanrens/blob/master/mk.pure">pure</a></p><h3>Reason</h3>

<p><a href="https://github.com/robotlolita/tinykaren">Tiny Karen</a></p><h3>Ruby</h3>

<p><a href="https://github.com/spariev/mini_kanren">mini_kanren</a></p><p>

<a href="https://github.com/jsl/ruby_ukanren">micro_kanren</a></p><p>

<a href="https://github.com/levthedev/miniKanren">miniKanren</a></p><p>

<a href="http://scottdial.com/projects/minikanren.rb">MiniKanren</a></p><p>

<a href="https://github.com/tomstuart/kanren">kanren</a><br>
A Ruby implementation to accompany <a href="http://codon.com/hello-declarative-world">Hello, declarative world</a></p><p>

<a href="https://github.com/famished-tiger/mini_kraken/">mini_kraken</a></p><h3>Rust</h3>



<p><a href="https://github.com/wartman4404/rust-kanren">rust-kanren</a></p><p>

<a href="https://github.com/ethframe/rskanren">rskanren</a></p><p>

<a href="https://github.com/xieyuheng/cicada-rs/tree/master/kanren">kanren</a></p><p>

<a href="https://github.com/nystrom/mu-kanren">mu-kanren</a></p><p>

<a href="https://github.com/psl8/tributary">Tributary</a></p><p>

<a href="https://github.com/aslpavel/ukanren-rs-example">Very simple uKanren implementation</a></p><p>

<a href="https://git.witchoflight.com/mukan">mukan</a></p><p>

<a href="https://github.com/ekzhang/ukanren-rs">ukanren-rs</a></p><p>

<a href="https://github.com/mbillingr/miniKANREN">miniKANREN</a></p><p>

<a href="https://github.com/tgecho/canrun_rs">Canrun</a><br>
A Rust implementation described in <a href="https://esimmler.com/announcing-canrun/">Announcing Canrun</a></p><p>

<a href="https://github.com/terohuttunen/proto-vulcan">proto-vulcan</a></p><h3>Scala</h3>

<p><a href="https://github.com/namin/scalogno">scalogno</a></p><p>

<a href="https://github.com/kevzhumba/microKanren">Microkanren in Scala</a></p><p>

<a href="https://github.com/michel-slm/minikanren-scala">minikanren-scala</a></p><p>

<a href="https://github.com/hircus/minikanren-scala">minikanren-scala</a></p><p>

<a href="https://github.com/tsao-chi/sKanren">sKanren</a></p><p>

<a href="https://github.com/jsyeo/mukanren">mukanren</a></p><p>

<a href="https://github.com/clayrat/kanren">kanren (Sokuza-kanren in Scala)</a></p><h3>Shen</h3>

<p><a href="https://github.com/jasonhemann/microKanren-shen">microKanren-shen</a></p><p>

<a href="https://github.com/mthom/shen-minikanren">shen-minikanren</a></p><h3>Smalltalk</h3>

<p><a href="https://github.com/adolfopa/microkanren-pharo">microkanren-pharo</a><br>
<a href="http://smalltalkhub.com/#!/~adolfopa/MicroKanren">Smalltalk Hub link</a> to microkanren-pharo</p><p>
<a href="https://github.com/massimo-nocentini/microkanrenst">microkanrenst</a></p><p>
<a href="https://github.com/emdonahue/SmallKanren">SmallKanren</a></p><p>
<a href="https://github.com/SquareBracketAssociates/Booklet-microKanren">How to implement microKraren in Pharo</a></p><h3>Swift</h3>

<p><a href="https://github.com/mdiep/Logician">Logician</a></p><p>
<a href="https://github.com/kyouko-taiga/SwiftKanren">SwiftKanren</a><a></a><a href="https://github.com/neilgall/SwiftyKanren">SwiftyKanren</a></p><p>
<a href="https://gist.github.com/davidbalbert/dd03c945752c78f7f0a5fbac45a17c03">miniKanren.swift</a></p><h3>Typescript</h3>

<p><a href="https://github.com/atennapel/async-kanren">async-kanren</a></p><p>

<a href="https://github.com/gamburgm/microKanren.ts">microKanren.ts</a></p><p>

<a href="https://github.com/liustanley/microKanren">microKanren</a></p><p>

<a href="https://github.com/mwjaworski/microkanren">Typescript MicroKanren</a></p><h3>Zig</h3>
<p><a href="https://codeberg.org/iacore/kanren.zig">kanren.zig</a></p><h2>Projects using miniKanren or core.logic</h2>

<h3>miniKanren</h3>

<p><a href="https://github.com/webyrd/Barliman">Barliman</a><br>
Barliman is a prototype "smart editor" that performs real-time program synthesis to try to make the programmer's life a little easier.</p><p>

<a href="https://github.com/orchid-hybrid/minimips">minimips</a>, a minikanren mips assembler/disassembler.</p><p>

<a href="https://github.com/brandonwillard/mk-rewrite-completion">rewrite-rule completion in miniKanren</a></p><p>

Luke McCulloch's <a href="https://github.com/LukeMcCulloch/feasible-form-parameter-design">Interval constraint programming dissertation work</a></p><p>

<a href="https://github.com/jpt4/skio">A relational SKI combinator calculus</a></p><p>

<a href="https://github.com/pymc-devs/symbolic-pymc"> Symbolic manipulation of PyMC models, graphs </a></p><p>

<a href="https://github.com/bboskin/Mkanren">Mkanren: Relational/Kanren Automata theory</a></p><p>

<a href="https://github.com/webyrd/mediKanren">mediKanren</a><br>
Project for reasoning over the SemMedDB knowledge base, using miniKanren + heuristics</p><p>

<a href="https://github.com/RehMaar/uKanren-spec">Specializer for microKanren</a></p><p>

<a href="https://github.com/kajigor/uKanren_transformations">uKanren transformations</a></p><p>

<a href="https://github.com/michaelballantyne/minikanren-ee">miniKanren as an extensible EDSL</a></p><h3>core.logic</h3>

<p><a href="https://github.com/owickstrom/smug">SMUG</a><br>
The Sheet Music Generator.<br>
<a href="https://wickstrom.tech/programming/2016/08/07/generating-sight-reading-exercises-using-constraint-logic-programming-in-clojure-part-1.html">blog post</a></p><p>

<a href="https://github.com/clojure-numerics/expresso">expresso</a><br>
A clojure library for symbolic manipulation of Algebraic Expressions.<br>
<a href="https://github.com/mschuene/expresso-tutorial">tutorial</a><br>
<a href="http://kimavcrp.blogspot.com/2013/09/finished-gsoc-project-expresso.html">blog post</a></p><p>

<a href="https://github.com/semperos/webdriver-logic">webdriver-logic</a><br>
Logic programming API for testing web applications using clj-webdriver.<br>
<a href="http://www.youtube.com/watch?v=09zlcS49zL0">Clojure/conj 2012 talk</a></p><p>

<a href="https://github.com/cderoove/damp.ekeko/">damp.ekeko</a><br>
Ekeko enables querying and manipulating an Eclipse workspace using applicative logic programs.<br>
<a href="https://groups.google.com/forum/?fromgroups=#!topic/clojure/xZj3n8zsKdw">anouncement</a><br>
<a href="http://www.youtube.com/watch?v=5wvVFQa1hVU">screencast</a></p><p>

<a href="https://github.com/ReinoutStevens/damp.qwal">damp.qwal</a><br>
QWAL is a path expression library to allow querying graphlike structures using core.logic in Clojure.</p><p>

<a href="https://github.com/ReinoutStevens/damp.qwalkeko">damp.qwalkeko</a><br>
Scrape and reason over Java projects stored on git.</p><p>

<a href="https://github.com/marick/peano">peano</a><br>
Using logic programming (Clojure's core.logic) for test data manipulation and generation.</p><p>

<a href="https://github.com/jonase/kibit/">kibit</a><br>
kibit is a static code analyzer for Clojure which uses core.logic to
search for patterns of code for which there might exist a more
idiomatic function or macro.</p><p>

<a href="https://github.com/tgk/parsing-packet-with-logic">parsing-packet-with-logic</a><br>
A small experiment in parsing packets in a style similar to Erlang's <code>&lt;&lt;...&gt;&gt;</code> using core.logic.</p><p>

<a href="https://github.com/bloat/maze.logic">maze.logic</a><br>
Solving mazes using core.logic.</p><p>

<a href="https://github.com/gga/janus">Janus: Consumer-driven Contracts and Mocks</a><br>
Consumer-driven contracts using core.logic.</p><p>

<a href="https://github.com/aredington/monotony">Monotony</a><br>
Monotony is a solution to the problem of how to schedule things in a way that humans find intuitive.</p><p>

<a href="https://github.com/ReinoutStevens/damp.qwal">QWAL</a><br>
QWAL is a path expression library to allow querying graphlike structures using core.logic in Clojure.</p><p>

<a href="https://github.com/jgralab/funnyqt">FunnyQT</a><br>
FunnyQT is a model querying and transformation library.</p><p>

<a href="https://github.com/timowest/symbol">symbol</a><br>
symbol is a compiler of a subset of Clojure syntax to C++.</p><p>

<a href="https://github.com/dgrnbrg/guzheng">guzheng</a><br>
guzheng is a library for doing branch coverage analysis of Clojure code.</p><p>

<a href="https://github.com/dmikulic/adventure-in-core-logic">Adventure in Clojure core.logic</a><br>
Text adventure game in core.logic.</p><p>

The core.logic <a href="https://github.com/clojure/core.logic/wiki/Projects-using-core.logic">wiki</a> also has links to projects using core.logic.</p><h2>Upcoming Talks</h2>



<h2>Recorded Talks</h2>


<h3>miniKanren</h3><p>

William Byrd
<a href="https://www.youtube.com/watch?v=OyfBQmvr2Hc">The Most Beautiful Program Ever Written</a><br>
<a href="https://www.mixcloud.com/paperswelove/william-byrd-on-the-most-beautiful-program-ever-written/">audio</a><br>
<a href="https://www.meetup.com/papers-we-love/events/238718664/">Papers We Love NYC, Wednesday, April 12, 2017.</a></p><p>

William E. Byrd (joint work with Michael Ballantyne, Gregory Rosenblatt, and Matthew Might)<br>
<a href="https://www.youtube.com/watch?v=o3AHnyEf7IE">A Unified Approach to Solving Seven Programming Problems (Functional Pearl)</a>
<a href="http://icfp17.sigplan.org/event/icfp-2017-papers-functional-pearl-a-unified-approach-to-solving-seven-programming-problems">International Conference on Functional Programming (ICFP)</a>, Oxford, England, 4 September 2017.<br>
<a href="http://dl.acm.org/citation.cfm?id=3110252&amp;CFID=976617079">paper</a> |
<a href="http://io.livecode.ch/learn/namin/icfp2017-artifact-auas7pp">interactive paper</a> |
<a href="https://github.com/gregr/icfp2017-artifact-auas7pp">downloadable artifact</a> |
<a href="https://github.com/webyrd/Barliman">Barliman</a></p><!-- not recorded, I believe
Jason Hemann and Daniel P. Friedman<br />
<a href="http://andykeep.com/SchemeWorkshop2015/">A Framework for Extending microKanren with Constraints</a><br />
Scheme Workshop, Vancouver, BC, Canada, 5 September 2015.<br /><br />
--><p>

Tom Stuart<br>
<a href="https://skillsmatter.com/skillscasts/6523-hello-declarative-world#video">
Hello, declarative world</a><br>
LRUG August 2015 Meetup, August 8, 2015.</p><p>

Dan Friedman and Jason Hemann<br>
<a href="https://www.youtube.com/watch?v=b9C3r3dQnNY">
How to be a good host: miniKanren as a case study</a><br>
Curry On, Prague, Czech Republic, 7 July 2015.</p><p>

William Byrd<br>
<a href="https://www.youtube.com/watch?v=eQL48qYDwp4">
The Promise of Relational Programming</a><br>
PolyConf 15, Poznań, Poland, 2 July 2015.</p><p>

Bodil Stokke <br>
<a href="https://www.youtube.com/watch?v=2e8VFSSNORg">
μKanren: Running the Little Things Backwards</a><br>
EuroClojure, Barcelona, Spain, 25 June 2015.</p><p>

Daniel Brady<br>
<a href="https://www.youtube.com/watch?v=UxeNsjP74jU#t=40s">
  Little Logic Languages</a><br>
Scheme Workshop, Washington, D.C., 19 November 2014.</p><p>

<a href="http://hemann.pl/">Jason Hemann</a> and <a href="http://www.cs.indiana.edu/~dfried/">Dan Friedman</a><br>
<a href="https://www.youtube.com/watch?v=RG9fBbQrVOM">
  Write the Other Half of Your Program: From Functional to Logic Programming</a><br>
Strange Loop, St. Louis, September 18, 2014.</p><!--
<a href="http://webyrd.net">William E. Byrd</a> and <a href="http://www.cs.indiana.edu/~dfried/">Daniel P. Friedman</a><br />
<a href="https://thestrangeloop.com/sessions/program-synthesis-using-minikanren">Program Synthesis Using miniKanren</a><br />
Strange Loop, St. Louis, September 17, 2014.<br /><br />
-->

<p><a href="http://webyrd.net/">William E. Byrd</a><br>
Relational Programming in miniKanren, <a href="https://www.youtube.com/watch?v=zHov3fKYqBA">Part 1</a> and  <a href="https://www.youtube.com/watch?v=nFE2E91VDAk">Part 2</a><br>
<a href="http://www.meetup.com/Lambda-Lounge-Utah/events/164368252/">Logic Night</a><br>
<a href="http://www.meetup.com/Lambda-Lounge-Utah/">Lambda Lounge Utah</a>, Sandy, UT, May 13, 2014.</p><!--
<a href="http://hemann.pl/">Jason Hemann</a> and <a href="http://www.cs.indiana.edu/~dfried/">Dan Friedman</a><br />
<a href="https://a.confui.com/-VWhSYioh">Roll Your Own Relational DSL: A Logic Programming Language in Less than 40 Lines</a><br />
Lambda Jam, Chicago, July 22, 2014.<br /><br />
-->

<!-- video not online yet -->
<!--
<a href="http://webyrd.net">William E. Byrd</a> and <a href="http://namin.github.com/">Nada Amin</a><br />
Meta-Programming in Logic Programming<br />
Code Mesh 2013, London, England, December 5, 2013.<br /><br />
-->

<p><a href="http://www.cs.indiana.edu/~dfried/">Daniel P. Friedman</a> and <a href="http://webyrd.net/">William E. Byrd</a><br>
<a href="http://www.infoq.com/presentations/chomsky-hierarchy">A Relational Exploration of the Chomsky Hierarchy</a><br>
Strange Loop, St. Louis, September, 2013.</p><p>

<a href="http://webyrd.net/">William E. Byrd</a> and <a href="http://www.cs.indiana.edu/~dfried/">Daniel P. Friedman</a><br>
<a href="http://vimeo.com/user18356272/review/66548859/4f724d6341">Fun with Relational Interpreters in miniKanren</a><br>
flatmap 2013, Oslo, Norway, May 14, 2013 (keynote).</p><p>

<a href="http://webyrd.net/">William E. Byrd</a> and <a href="http://www.cs.indiana.edu/~dfried/">Daniel P. Friedman</a><br>
<a href="http://www.youtube.com/watch?v=fHK-uS-Iedc">miniKanren Philosophy</a><br>
Clojure/conj 2012, Raleigh, NC, November 16, 2012.<br>
(Beware the pink tint!)</p><p>

<a href="http://www.cs.indiana.edu/~dfried/">Daniel P. Friedman</a> and <a href="http://webyrd.net/">William E. Byrd</a><br>
<a href="http://www.infoq.com/presentations/miniKanren">Relational Programming in miniKanren</a><br>
Strange Loop 2012, St. Louis, MO, September 24, 2012<br>
<a href="https://github.com/webyrd/quines">source code</a></p><p>

<a href="http://www.cs.indiana.edu/~dfried/">Daniel P. Friedman</a> and <a href="http://webyrd.net/">William E. Byrd</a><br>
<a href="https://www.youtube.com/watch?v=5Q9x16uIsKA">miniKanren "untalk"</a><br>
Clojure/conj 2011, Raleigh, NC, November 10, 2011.


</p><h3>core.logic</h3>

<p><a href="http://namin.github.com/">Nada Amin</a> and <a href="http://webyrd.net/">William E. Byrd</a><br>
<a href="http://www.youtube.com/watch?v=7kPMFkNm2dw">From Greek to Clojure</a><br>
Clojure/conj, Alexandria, VA, November 14, 2013<br>
<a href="https://github.com/namin/grk2clj">source code</a> | <a href="http://lampwww.epfl.ch/%7Eamin/clj/grk.pdf">slides</a></p><p>

<a href="http://www.red-bean.com/~craig/hacking/">Craig Brozefsky</a><br>
<a href="http://www.infoq.com/presentations/Core-logic-SQL-ORM">Core.logic and SQL Killed my ORM</a><br>
Clojure/West 2013, Portland, OR, March 19th, 2013.</p><p>

<a href="http://swannodette.github.io/">David Nolen</a><br>
<a href="http://skillsmatter.com/podcast/scala/the-refined-clojurist">The Refined Clojurist</a><br>
Clojure Exchange 2012, London, December 6, 2012</p><p>

<a href="https://github.com/semperos">Daniel Gregoire</a><br>
<a href="http://www.youtube.com/watch?v=09zlcS49zL0">Web Testing with Logic Programming</a><br>
Clojure/conj 2012, Raleigh, NC, November 17, 2012.<br>
<a href="https://github.com/semperos/webdriver-logic">webdriver-logic project</a></p><p>

<a href="https://github.com/miner">Steve Miner</a><br>
<a href="http://www.youtube.com/watch?v=y6WKr9j76kw">Challenges for Logic Programming</a><br>
Clojure/conj 2012, Raleigh, NC, November 17, 2012.</p><p>

<a href="https://github.com/ejackson">Edmund Jackson</a><br>
<a href="http://www.infoq.com/presentations/Introduction-Logic-Programming">An Introduction to Logic Programming on the JVM with core.logic (Clojure)</a><br>
FP Days 2012, Cambridge, October 25, 2012</p><p>

<a href="http://swannodette.github.io/">David Nolen</a><br>
<a href="http://www.youtube.com/watch?v=A7de6pC-tnU">core.logic: A tutorial reconstruction ("unsession")</a><br>
Strange Loop 2012, St. Louis, MO, September 24, 2012</p><p>

<a href="http://boss-level.com/">Edmund Jackson</a><br>
<a href="http://vimeo.com/45128721">core.logic.intro</a><br>
EuroClojure 2012, London, May 24, 2012<br>
<a href="http://github.com/ejackson/EuroClojure-2012-Talk">source code</a></p><p>

<a href="http://objectcommando.com/">Ryan Senior</a><br>
<a href="http://www.infoq.com/presentations/core-logic">Practical core.logic</a><br>
Clojure/West 2012, San Jose, March 17, 2012</p><p>

<a href="https://github.com/frenchy64">Ambrose Bonnaire-Sergeant</a><br>
<a href="http://www.youtube.com/watch?v=irjP8BO1B8Y">Introduction to Logic Programming with Clojure</a><br>
Clojure/conj 2011, Raleigh, NC, November 10, 2011.



</p><h3>ClojureScript &amp; core.logic</h3>

<p><a href="http://adamsolove.com/">Adam Solove</a><br>
<a href="http://www.youtube.com/watch?v=72sWgwaAoyk">Constraint programming in the browser</a><br>
(Talk focuses on the Cassowary constraint solver for GUI layout, but also discusses core.logic.)<br>
JSConf US, Amelia Island, FL, May 31, 2013


<a name="clojure-west"></a></p><h3>Clojure/West miniKanren confo, Portland, OR, March 19, 2013 (associated with <a href="http://clojurewest.org/">Clojure/West</a>)</h3>

<p><a href="https://github.com/werg">Gabriel Pickard</a><br>
<a href="http://lanyrd.com/2013/clojurewest/sccgmz/">Logic programming in the wild</a>  (video not posted yet)</p><p>

<a href="http://objectcommando.com/">Ryan Senior</a><br>
<a href="http://www.infoq.com/presentations/CLP-core-logic">Intro to CLP with core.logic</a></p><p>

<a href="http://www.acfoltzer.net/">Adam Foltzer</a><br>
<a href="http://www.infoq.com/presentations/molog">Molog: Typed Functional Logic Programming in Haskell</a><br>
<a href="https://github.com/acfoltzer/Molog">source code</a></p><p>

<a href="http://swannodette.github.io/">David Nolen</a><br>
<a href="http://www.infoq.com/presentations/architecture-core-logic">The Architecture of core.logic</a></p><p>

<a href="http://namin.github.com/">Nada Amin</a><br>
<a href="http://lanyrd.com/2013/clojurewest/sccgpf/">core.logic.nominal</a> (video not posted yet)<br>
<a href="https://github.com/namin/minikanren-confo">source code</a></p><p>

<a href="http://webyrd.net/">William E. Byrd</a> and <a href="http://www.cs.indiana.edu/~dfried/">Daniel P. Friedman</a><br>
<a href="http://lanyrd.com/2013/clojurewest/sccgpg/">The Unreasonable Schemers</a> (video not posted yet)<br>
<a href="https://github.com/webyrd/relational-cesk">source code</a>



<a name="interviews"></a></p><h2>Interviews</h2>

<p><a href="http://minikanren.org/hemann.pl">Jason Hemann</a><br>
<a href="https://purelyfunctional.tv/speaker-interview/jason-hemann-code-mesh-2016-interview/">Jason Hemann miniKanren Interview</a><br>
For Code Mesh 2016</p><p>

<a href="http://webyrd.net/">William E. Byrd</a><br>
<a href="https://www.functionalgeekery.com/episode-9-william-e-byrd/">Episode 9: Will Byrd and miniKanren</a><br>
On the <a href="https://www.functionalgeekery.com/">Functional Geekery</a> podcast</p><p>

<a href="http://webyrd.net/">William E. Byrd</a><br>
<a href="http://www.infoq.com/interviews/byrd-relational-programming-minikanren">William Byrd on Logic and Relational Programming, miniKanren</a><br>
Recorded by <a href="http://www.infoq.com/">InfoQ</a> at Code Mesh 2013, London, England, December, 2013



<a name="writtenTutorials"></a></p><h2>Written Tutorials</h2>

<h3>core.logic</h3>

<p><a href="https://github.com/frenchy64/Logic-Starter/wiki">Introduction to Logic Programming with Clojure</a></p><p>

<a href="https://github.com/clojure/core.logic/wiki/A-Core.logic-Primer">A Core.logic Primer</a></p><p>

<a href="http://www.intensivesystems.net/tutorials/logic_prog.html">Logic Programming for the Social Web</a></p><h3>OCanren</h3>

<p><a href="https://github.com/YueLiPicasso/OCanrenTutorial">OCanren Tutorial</a><br>


<a name="theses"></a></p><h2>Theses</h2>

<h3>PhD</h3><p>

Weixi Ma<br>
<a href="https://www.proquest.com/openview/2a5f2e00e8df7ea3f1fd3e86195aba6a/1?pq-origsite=gscholar&amp;cbl=18750&amp;diss=y">𝜆Kanren: Higher-order Logic Programming Made Simpler</a><br>
Indiana University, Bloomington, IN,<br>
December 8, 2021.</p><p>

Jason Hemann<br>
<a href="https://scholarworks.iu.edu/dspace/bitstream/handle/2022/25183/Constraint_Microkanren_in_the_CLP_Scheme.pdf">Constraint microKanren in the CLP Scheme</a><br>
Indiana University, Bloomington, IN,<br>
December 19, 2019.</p><p>

Thomas L. McCulloch<br>
<a href="https://scholarworks.uno.edu/cgi/viewcontent.cgi?article=3698&amp;context=td">Feasible form parameter design of complex ship hull form geometry</a><br>
University of New Orleans, New Orleans, LA,<br>
December 20, 2018.</p><p>

William E. Byrd<br>
<a href="https://search.proquest.com/docview/304903505">Relational Programming in miniKanren: Techniques, Applications, and Implementations</a><br>
Indiana University, Bloomington, IN,<br>
September 30, 2009.</p><p>

<a href="https://github.com/webyrd/dissertation-single-spaced">Easier to read, single-spaced, re-typeset version of Will's dissertation</a>, released under Creative Commons Attribution 4.0 International (CC BY 4.0) license.</p><h3>Masters</h3><p>

Bharathi Joshi<br>
<a href="https://web2py.iiit.ac.in/research_centres/publications/view_publication/mastersthesis/1336">metaKanren: miniKanren Program Synthesis, Relationally</a><br>
International Institute of Information Technology, Hyderabad, India,<br>
2023.</p><p>

Irina Artemeva<br>
<a href="https://github.com/Pluralia/uKanren_translator/tree/master/thesis">Разработка транслятора из реляционного языка программирования в функциональный</a><br>
(Note: Russian. In English, "Development of a Translator from a Relational Programming Language to a Functional Language")<br>
ITMO University, Saint Petersburg, Russia,<br>
2020.</p><p>

Lisa Zhang<br>
<a href="http://lisazhang.ca/msc_thesis.pdf">Leveraging Constraint Logic Programming for Neural Network Guided Program Synthesis</a><br>
University of Toronto, Toronto, Canada,<br>
2016.</p><p>

Kaylen FJ Wheeler<br>
<a href="http://ir.lib.uwo.ca/etd/1279">Representing Game Dialogue as Expressions in First-Order Logic</a><br>
University of Western Ontario, London, Ontario, Canada,<br>
2013.</p><h3>Undergraduate</h3><p>

Laura Zharmukhametova<br>
<a href="https://nrs.harvard.edu/URN-3:HUL.INSTREPOS:37368527">microKanren with Delayed Goals</a><br>
Harvard College, Cambridge, MA<br>
March,  2021. (Bachelor's thesis)</p><p>

Khoa Vo<br>
<a href="https://github.com/lackhoa/Thesis/raw/master/Thesis.pdf">Relational Conditionals With Pseudo-Functions</a><br>
South-Eastern Finland University of Applied Sciences, Mikkeli, Finland,<br>
April, 2019. (Bachelor's Thesis)</p><p>

Emily Fox<br>
<a href="http://minikanren.org/fox_diss.pdf">Automated Canon Composition</a><br>
Churchill College, University of Cambridge, Cambridge, UK,<br>
May 10, 2016. (Computer Science Tripos - Part II)</p><p>

Ramana Kumar<br>
<a href="https://web.archive.org/web/20160316005957/http://cam.xrchz.net/ramkumar/thesis.pdf">Mechanising Aspects of miniKanren in HOL</a><br>
Australian National University, Canberra, Australian Capital Territory, Australia,<br>
May 2010. (Undergraduate Honors Thesis)</p><h2>Papers</h2><p>

Molly Q Feldman, Yiting Wang, William E. Byrd, François Guimbretière, and Erik Andersen.<br>
<a href="https://mollyfeldman.github.io/splashe2019.html">Towards Answering "Am I On the Right Track?" Automatically using Program Synthesis.</a><br>
In SPLASH-E 2019.<br>
<a href="https://mollyfeldman.github.io/splashe2019.pdf">Paper</a></p><p>

Lisa Zhang, Gregory Rosenblatt, Ethan Fetaya, Renjie Liao, William E. Byrd, Matthew Might, Raquel Urtasun, and Richard Zemel.<br>
<a href="https://neurips.cc/Conferences/2018/Schedule?showEvent=11187">Neural Guided Constraint Logic Programming for Program Synthesis.</a><br>
In Advances in Neural Information Processing Systems 31 (NeurIPS 2018), 2018.<br>
<a href="https://neurips.cc/Conferences/2018/Schedule?showEvent=11187">Paper and poster</a><br>
<a href="https://papers.nips.cc/book/advances-in-neural-information-processing-systems-31-2018">Full proceedings</a></p><p>

William E. Byrd, Michael Ballantyne, Gregory Rosenblatt, and Matthew Might<br>
<a href="http://dl.acm.org/citation.cfm?id=3110252&amp;CFID=976617079">A Unified Approach to Solving Seven Programming Problems (Functional Pearl)</a><br>
In Proceedings of the ACM on Programming Languages (PACMPL), 1, ICFP, Article 8 (August 2017), 26 pages. <a href="https://doi.org/10.1145/3110252">DOI</a>.<br>
<a href="http://io.livecode.ch/learn/gregr/icfp2017-artifact-auas7pp">Interactive version</a> of the paper, created by <a href="https://www.cl.cam.ac.uk/~na482/">Nada Amin</a>.
</p><p>

Jason Hemann, Daniel P. Friedman, William E. Byrd, and Matthew Might<br>
<a href="https://dl.acm.org/citation.cfm?doid=2989225.2989230">A Small Embedding of Logic Programming with a Simple Complete Search</a><br>
In Proceedings of the 12th Symposium on Dynamic Languages (DLS 2016), Amsterdam, Netherlands, 2016.</p><p>

Jason Hemann and Daniel P. Friedman<br>
<a href="http://andykeep.com/SchemeWorkshop2015/papers/sfpw3-2015-hemann-friedman.pdf">A Framework for Extending microKanren with Constraints</a><br>
In Proceedings of the 2015 Workshop on Scheme and Functional Programming (Scheme '15), Vancouver, British Columbia, 2015.</p><p>

Peter Kourzanov<br>
<a href="https://ifl2014.github.io/submissions/ifl2014_submission_18.pdf">Bidirectional parsing: a functional/logic perspective</a><br>
In 2014 International Symposium on Implementation and Application of Functional Language (IFL 2014), Boston, MA, October, 2014.</p><p> 

Daniel Brady, Jason Hemann and Daniel P. Friedman<br>
<a href="http://homes.soic.indiana.edu/jhemann/scheme-14/papers/Brady2014.pdf">Little Languages for Relational Programming.</a><br>
In Proceedings of the 2014 Workshop on Scheme and Functional Programming (Scheme '14), Washington, DC, 2014.<br>
<a href="https://github.com/dabrady/LittleLogicLangs">Complete source code (Scheme)</a></p><p>

Erik Wennstrom<br>
<a href="http://www.cs.uic.edu/pub/Isaim2014/WebPreferences/ISAIM2014_NLP_Wennstrom.pdf">Tableau-Based Model Generation for Relational Syllogistic Logics.</a><br>
In Proceedings of the 2014 International Symposium on Artificial Intelligence and Mathematics (ISAIM 2014), Fort Lauderdale, FL, January, 2014.</p><p>

Jason Hemann and Daniel P. Friedman.<a name="microKanrenPaper">&nbsp;</a><br>
<a href="http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf">microKanren: A Minimal Functional Core for Relational Programming.</a><br>
In Proceedings of the 2013 Workshop on Scheme and Functional Programming (Scheme '13), Alexandria, VA, 2013.<br>
<a href="https://github.com/jasonhemann/microKanren">Complete source code (Scheme)</a></p><p>

Cameron Swords and Daniel P. Friedman.<a name="rKanrenPaper">&nbsp;</a><br>
<a href="http://webyrd.net/scheme-2013/papers/Swords2013.pdf">rKanren: Guided Search in miniKanren.</a><br>
In Proceedings of the 2013 Workshop on Scheme and Functional Programming (Scheme '13), Alexandria, VA, 2013.<br>
<a href="https://github.com/cgswords/rkanren">Complete source code (Scheme)</a></p><p>

Zoltan Varju, Richard Littauer and Peteris Ernis.<br>
<a href="" "http:="" ozk.unizd.hr="" proceedings="" index.php="" els="" article="" view="" 108="" 101"="">Using Clojure in Linguistic Computing</a><br>
In Proceedings of the 5th European Lisp Symposium, Zadar, Croatia, 2012.</p><p>

William E. Byrd, Eric Holk, and Daniel P. Friedman.<br>
<a href="http://webyrd.net/quines/quines.pdf">miniKanren, Live and Untagged: Quine Generation via Relational Interpreters (Programming Pearl).</a><br>
To appear in the Proceedings of the 2012 Workshop on Scheme and Functional Programming, Copenhagen, Denmark, 2012.<br>
<a href="https://github.com/webyrd/2012-scheme-workshop-quines-paper-code">Complete source code (Scheme)</a></p><p>

Claire E. Alvis, Jeremiah J. Willcock, Kyle M. Carter, William E. Byrd, and Daniel P. Friedman.<a name="cKanrenPaper">&nbsp;</a><br>
<a href="http://www.schemeworkshop.org/2011/papers/Alvis2011.pdf">cKanren: miniKanren with Constraints.</a><br>
In Proceedings of the 2011 Workshop on Scheme and Functional Programming (Scheme '11), Portland, OR, 2011.<br>
<a href="https://github.com/calvis/cKanren">Complete source code (R6RS Scheme)</a></p><p>

Ramana Kumar and Michael Norrish<br>
<a href="http://ssrg.nicta.com.au/publications/nictaabstracts/Kumar_Norrish_10.abstract.pml">(Nominal) unification by recursive descent with triangular substitutions</a><br>
In Proceedings of the First international conference on Interactive Theorem Proving (ITP'10),<br>
Springer-Verlag Berlin, pp. 51-66, 2010.</p><p>

Andrew W. Keep, Michael D. Adams, Lindsey Kuper, William E. Byrd, and Daniel P. Friedman.<br>
<a href="http://www.schemeworkshop.org/2009/scheme2009.pdf">A Pattern-matcher for miniKanren -or- How to Get into Trouble with CPS Macros.</a><br>
In Proceedings of the 2009 Workshop on Scheme and Functional Programming,<br>
Cal Poly Technical Report CPSLO-CSC-09-03, pp. 37-45, 2009.</p><p>

Joseph P. Near, William E. Byrd and Daniel P. Friedman.<br>
<a href="http://webyrd.net/alphaleantap/alphatap.pdf">alphaleanTAP: A Declarative Theorem Prover for First-Order Classical Logic.</a><br>
In Proceedings of the 24th International Conference on Logic Programming (ICLP 2008),<br>
LNCS vol. 5366, Springer-Verlag, Heidelberg, pp. 238-252, 2008.<br>
<a href="http://webyrd.net/alphaleantap/alphaleanTAP.zip">Complete source code--R6RS Scheme and Prolog (.zip file)</a></p><p>

Oleg Kiselyov, William E. Byrd, Daniel P. Friedman and Chung-chieh Shan<br>
<a href="http://webyrd.net/arithm/arithm.pdf">Pure, declarative, and constructive arithmetic relations (declarative pearl).</a><br>
In Proceedings of the 9th International Symposium on Functional and Logic Programming,<br>
ed. Jacques Garrigue and Manuel Hermenegildo, pp. 64-80.<br>
LNCS vol. 4989, Springer, 2008.</p><p>

William E. Byrd and Daniel P. Friedman<a name="alphaKanrenPaper">&nbsp;</a><br>
<a href="http://webyrd.net/alphamk/alphamk_workshop.pdf">alphaKanren: A Fresh Name in Nominal Logic Programming.</a><br>
In Proceedings of the 2007 Workshop on Scheme and Functional Programming,<br>
Universite Laval Technical Report DIUL-RT-0701, pp. 79-90.<br>
<a href="http://webyrd.net/alphamk/alphamk.pdf">Authors' revised version (recommended)</a><br>
<a href="https://github.com/webyrd/alphaKanren">Revised source code (R5RS Scheme)</a></p><p>

Larisse D. Voufo<br>
<a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.143.9892&amp;rep=rep1&amp;type=pdf">A miniKanren Interactive Proof System for Deciding the Truth of (simple) Quantied Boolean Formulae</a></p><p>

William E. Byrd and Daniel P. Friedman<br>
<a href="http://scheme2006.cs.uchicago.edu/12-byrd.pdf">From Variadic Functions to Variadic Relations: A miniKanren Perspective.</a><br>
In Proceedings of the 2006 Scheme and Functional Programming Workshop,<br>
University of Chicago Technical Report TR-2006-06, 2006, pp. 105-117.</p><p>

Oleg Kiselyov, Chung-chieh Shan, Daniel P. Friedman, and Amr Sabry<br>
<a href="http://okmij.org/ftp/papers/LogicT.pdf">Backtracking, interleaving, and terminating monad transformers: (functional pearl).</a><br>
In Proceedings of the 10th ACM SIGPLAN International Conference on Functional Programming (ICFP '05),<br>
ACM Press, New York, pp. 192-203, 2005.



<a name="screencasts"></a></p><h2>Screencasts</h2>

<h3>Thomas G. Kristensen</h3>

<p><a href="http://vimeo.com/55677313">Composing music using core.logic and Overtone - The Composing Schemer<br>
</a><a href="http://tgk.github.com/2012/12/the-composing-schemer.html">blog post</a><br>
<a href="https://github.com/tgk/the-composing-schemer">source code</a><br>
January 2013.</p><h3>Timothy Baldridge</h3>

<p><a href="http://www.youtube.com/watch?v=HHZ8iqswiCw">Clojure Core.Logic With Custom Data Sources</a><br>
October 25, 2013.</p><p>

<a href="http://www.youtube.com/watch?feature=player_embedded&amp;v=cUxYoNRW3VM">Bytecode Assembler in Core.Logic</a><br>
<a href="http://halgari.blogspot.com/2012/12/byte-packing-with-corelogic.html">related blog post</a><br>
Dec 13, 2012.</p><h3>Coen De Roover</h3>

<p><a href="http://www.youtube.com/watch?v=5wvVFQa1hVU">Getting started querying an Eclipse workspace using Ekeko</a><a><br>
</a><a href="https://github.com/cderoove/damp.ekeko/">ekeko project</a><br>
August 14, 2012.




<a name="hangouts"></a></p><h2>Weekly Google Hangout on Air</h2>

<h3>Upcoming Hangouts</h3>

<h3>Previous Hangouts</h3>

<p><a href="https://www.youtube.com/watch?v=LMrwiVozcsw">Hangout #13, Sunday, June 30.</a><br>
Topic: Claire shows off a new macro for defining constraints using attributed variables, a new version of the matche pattern matching macro, and the implementation of templateo (declarative <code>copy_term</code>) (<a href="https://github.com/calvis/cKanren">URL</a>).  Norman demos his <a href="https://gist.github.com/orb/5895918">code</a> for solving <a href="http://www.brainbashers.com/nonogrids.asp">nonogrids problems</a>.  Will talks about CPSing miniKanren programs.</p><p>

<a href="https://www.youtube.com/watch?v=yNi3W78ZSII">Hangout #12, Sunday, June 23, 2013.</a><a><br>
Topic: Gary shows off his CLP(FD) program to layout </a><a href="http://gfredericks.com/gfrlog/98">2D figures</a>; Will describes the new, apparently fixed <a href="https://github.com/calvis/cKanren/blob/master/cKanren/template.rkt"><code>templateo</code> constraint</a>, and explains how it is used in a <a href="https://github.com/webyrd/templateo">relational term reducer</a><a> for the untyped lambda-calculus.</a><a href="https://www.youtube.com/watch?v=CZVZPugCkJQ">Hangout #11, Sunday, June 9, 2013.</a><br>
Topic: Unexpected memory usage in <code>conde</code>, and how to fix it in CLP(FD); meta-interpreters in miniKanren (<a href="https://github.com/webyrd/meta-interp">code</a>); what do you need to know to use miniKanren effectively?; Will's new book on miniKanren (<a href="https://github.com/webyrd/relational-programming-in-miniKanren">in progress</a>).</p><p>

<a href="https://www.youtube.com/watch?v=boymkCvXJi8">Hangout #10, Sunday, June 2, 2013.</a><br>
Topic: We discuss CLP(Set) and declarative <code>copy_term</code> (a.k.a., <code>templateo</code>) (<a href="https://github.com/calvis/cKanren">code</a>).  Lindsey shows off LVish (<a href="https://github.com/lkuper/lvars/tree/master/redex/LVish">code</a>).  David poses a core.logic puzzle.  Dan and Jason discuss miniC, a minimal miniKanren without macros.  Will shows off a relational lambda calculus reducer (<a href="https://github.com/webyrd/templateo">code</a>).</p><p>

<a href="https://www.youtube.com/watch?v=tqD7ioh_WYw">Hangout #9, Sunday, May 19, 2013.</a><br>
Topic: Will shows off a meta-circular interpreter for miniKanren (<a href="https://github.com/webyrd/mk-metacircular-interp">code</a>), and describes the outline for a new book he is writing on relational programming (<a href="https://github.com/webyrd/relational-programming-in-miniKanren">book</a>).</p><p>

<a href="https://www.youtube.com/watch?v=ux6St9r-KmM">Hangout #8, Sunday, May 5, 2013.</a><br>
Topic: Dan and Jason show off a cool way to implement mutual recursion in an interpreter.  Will and the gang then live-code a relational interpreter for general Deterministic Finite Automata (<a href="https://github.com/webyrd/relational-dfa">code</a>).</p><p>

<a href="https://www.youtube.com/watch?v=hIyVyy78lAs">Hangout #7, Sunday, April 28, 2013.</a><br>
Topic: Translating simple Scheme functions to miniKanren using correctness-preserving transformations.</p><p>

<a href="https://www.youtube.com/watch?v=MTAhbsWUUxM">Hangout #6, Sunday, April 21, 2013.</a><br>
Topic: Live coding/real-time solution of a simple problem solved by Michael.  Also, Claire discusses new features of cKanren in Racket.</p><p>

<a href="http://www.youtube.com/watch?v=VSpq3qK9L88">Hangout #5, Sunday, April 14, 2013.</a><br>
Topic: Stump the Chump!  Will partially translates miniKanren's unify function from Scheme into miniKanren (<a href="https://github.com/webyrd/relational-unifier">code</a>).  Also, discussion of extra-logical operators, and new miniKanren features in progress: CLP(Set), constraint handling rules, lazy constraints for recursion.</p><p>

<a href="http://www.youtube.com/watch?v=WMjvyizzE78">Hangout #4, Sunday, April 7, 2013.</a><br>
Topic: Debugging miniKanren programs; Constraint Logic Programming over sets (based on the paper <a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.132.1779">Sets and Constraint Logic Programming</a> by Dovier, et al., 2000).</p><p>

<a href="https://www.youtube.com/watch?v=su3os5qMLr0">Hangout #3, Sunday, March 31, 2013.</a><br>
Implementation of simplified miniKanren (<a href="https://github.com/miniKanren/simple-miniKanren">source code</a>).</p><p>

<a href="http://www.youtube.com/watch?v=eEDmGOLN4Q4">Hangout #2, March 24, 2013.</a><br>
Implementing disequality constraints, absento/presento constraints, miniKanren Confo at Clojure/West, relational CESK machine.</p><p>

<a href="https://www.youtube.com/watch?v=vRrgaibcTYs">Hangout #1, March 10, 2013.</a><br>
A little miniKanren history, what it means to be relational, a relational variant of copy-term, debugging miniKanren programs.

<a name="podcasts"></a></p><h2>Podcasts</h2><p>

Mostly lazy... a Clojure podcast<br>
<a href="http://mostlylazy.com/2013/01/04/episode-9-with-kevin-lynagh-and-paul-degrandis-web-dev-ennui-crdts-and-core-logic/">Episode 9 with Kevin Lynagh and Paul deGrandis: web dev ennui, CRDTs, and core.logic</a><br>
Recorded December 14th, 2012.

<a name="blogs"></a></p><h2>Blogs</h2>

<h3><a href="http://swannodette.github.com/">David Nolen - dosync</a></h3>

<p><a href="http://swannodette.github.io/2013/03/25/stlc-redux-part-ii">STLC Redux: Part II</a><br>

<a href="http://swannodette.github.io/2013/03/09/logic-programming-is-underrated">Logic Programming is Underrated</a><br>

<a href="http://swannodette.github.io/nominal%20logic/2013/02/08/the-simply-typed-lambda-calculus-in-20-lines-redux">The Simply Typed Lambda Calculus in 20 Lines Redux</a></p><p>


From David Nolen's old blog (courtesy of the <a href="https://archive.org/">Internet Archive's</a> <a href="https://archive.org/web/">Wayback Machine</a>):</p><p>

<a href="https://web.archive.org/web/20130511050720/http://dosync.posterous.com/know-your-bounds">Know Your Bounds</a><br>

<a href="https://web.archive.org/web/20130511050728/http://dosync.posterous.com/friendlier-shorter">friendlier</a><br>

<a href="https://web.archive.org/web/20130511050735/http://dosync.posterous.com/sudoku">sudoku</a><br>

<a href="https://web.archive.org/web/20130511050744/http://dosync.posterous.com/a-logic-programming-reading-list">A Logic Programming Reading List</a><br>

<a href="https://web.archive.org/web/20130511050830/http://dosync.posterous.com/logic-programming-javascript">Logic Programming &amp; JavaScript</a><br>

<a href="https://web.archive.org/web/20130511050856/http://dosync.posterous.com/corelogic-vpri-steps">core.logic &amp; VPRI STEPS</a><br>

<a href="https://web.archive.org/web/20130511051249/http://dosync.posterous.com/another-taste-of-ckanren">Another Taste of cKanren</a><br>

<a href="https://web.archive.org/web/20130511051259/http://dosync.posterous.com/a-taste-of-ckanren">A Taste of cKanren</a><br>

<a href="https://web.archive.org/web/20130511051348/http://dosync.posterous.com/simple-type-inference-for-the-simply-typed-la">Simple Type Inference For The Simply Typed Lambda Calculus in ~20 Lines</a><br>

<a href="https://web.archive.org/web/20130511051414/http://dosync.posterous.com/logos-corelogic">Logos -&gt; core.logic</a><br>

<a href="https://web.archive.org/web/20130511051420/http://dosync.posterous.com/crazy-ideas">Crazy Ideas</a><br>

<a href="https://web.archive.org/web/20130511051429/http://dosync.posterous.com/fun">Fun</a><br>

<a href="https://web.archive.org/web/20130511051436/http://dosync.posterous.com/spring-cleaning">Spring Cleaning</a><br>

<a href="https://web.archive.org/web/20130511051449/http://dosync.posterous.com/simple-constraints">Simple Constraints</a><br>

<a href="https://web.archive.org/web/20130511051504/http://dosync.posterous.com/21ms">~2.1ms</a><br>

<a href="https://web.archive.org/web/20130511051519/http://dosync.posterous.com/tabling-in-logos">Tabling in Logos</a><br>

<a href="https://web.archive.org/web/20130511051525/http://dosync.posterous.com/pattern-matching">Pattern Matching</a><br>

<a href="https://web.archive.org/web/20130511051540/http://dosync.posterous.com/finally-a-clue">Finally ... a clue</a><br>

<a href="https://web.archive.org/web/20130511051605/http://dosync.posterous.com/performance-matters">Performance Matters</a><br>

<a href="https://web.archive.org/web/20130511051615/http://dosync.posterous.com/faster-unification">Faster Unification</a><br>

<a href="https://web.archive.org/web/20130511051624/http://dosync.posterous.com/logic-programming-and-performance">Logic Programming and Performance</a><br>

<a href="https://web.archive.org/web/20130511051638/http://dosync.posterous.com/a-short-break">A Short Break</a><br>

<a href="https://web.archive.org/web/20130511051208/http://dosync.posterous.com/life-without-tail-call-optimization">Life Without Tail Call Optimization</a><br>

<a href="https://web.archive.org/web/20130511051645/http://dosync.posterous.com/announcing-logos">Announcing Logos</a><br>

<a href="https://web.archive.org/web/20130511051706/http://dosync.posterous.com/a-minikanren-introduction-via-clojure">A miniKanren introduction via Clojure</a></p><h3><a href="https://nickdrozd.github.io/">Nick Drozd</a></h3>

<p><a href="https://nickdrozd.github.io/2018/08/14/modal-sentences.html">Generating Sentences of Modal Logic</a><br>

<a href="https://nickdrozd.github.io/2018/08/15/prop-proofs.html">Generating Propositional Logic Proofs</a></p><h3><a href="http://clojurelx.blogspot.com/">Clojure &amp; lx</a></h3>

<p><a href="http://clojurelx.blogspot.com/2012/07/another-logic-programming-reading-list.html">Another Logic Programming Reading List</a><br>

<a href="http://clojurelx.blogspot.com/2012/02/lx-in-corelogic-3-finite-state.html">lx in core.logic #3: Finite State Transducers</a><br>

<a href="http://clojurelx.blogspot.com/2012/01/lx-in-corelogic-2-jumps-flexible.html">lx in core.logic #2: Jumps, Flexible Transitions and Parsing </a><br>

<a href="http://clojurelx.blogspot.com/2012/01/finite-state-machines-in-corelogic.html">Finite State Machines in core.logic</a></p><h3><a href="https://www.msully.net/">Michael Sullivan</a></h3>
<p><a href="https://www.msully.net/blog/2015/02/26/microkanren-%CE%BCkanren-in-haskell/">microkanren-ukanren in Haskell</a></p><h3><a href="https://wickstrom.tech/">Oskar Wickström</a></h3>

<p><a href="https://wickstrom.tech/programming/2016/08/07/generating-sight-reading-exercises-using-constraint-logic-programming-in-clojure-part-1.html">Generating Sight-Reading Exercises using Constraint Logic Programming in Clojure, Part 1</a></p><h3><a href="http://halgari.blogspot.com/">Timothy Baldridge - (apply clojure @life)</a></h3>

<p><a href="http://halgari.blogspot.com/2012/12/heres-quick-screencast-of-some-work-ive.html">Bytecode Assembler in Core.Logic</a><br>

<a href="http://halgari.blogspot.com/2012/12/byte-packing-with-corelogic.html">Byte Packing with core.logic </a></p><h3><a href="http://tgk.github.com/">Thomas G. Kristensen - Clojure/tgk</a></h3>

<p><a href="http://tgk.github.io/2013/02/parsing-packets-erlang-style-using-core-logic.html">Parsing packets Erlang style using core.logic</a><br>

<a href="http://tgk.github.com/2012/12/the-composing-schemer.html">The Composing Schemer</a><br>

<a href="http://tgk.github.com/2012/08/finding-cliques-in-graphs-using-core-logic.html">Finding cliques in graphs using core.logic</a><br>

<a href="http://tgk.github.com/2012/08/maximum-cliques-algorithm-in-clojure.html">Maximum cliques algorithm in Clojure</a></p><h3><a href="http://boss-level.com/">Edmund Jackson - boss level</a></h3>

<p><a href="http://boss-level.com/?p=66">mini-Sudoku in mini-Kanren (in Clojure-"ish")</a><br>

<a href="http://boss-level.com/?p=64">Logic Programming Part 3 (List Logic)</a><br>

<a href="http://boss-level.com/?p=28">Logic Programming Part 2 (Building Blocks)</a><br>

<a href="http://boss-level.com/?p=17">Logic Programming Part 1</a></p><h3><a href="http://clojure.com/blog/">clojure.com - Clojure/core (posts by Stuart Sierra)</a></h3>

<p><a href="http://clojure.com/blog/2011/12/08/lojic-part-two.html">Lojic Part Two</a><br>

<a href="http://clojure.com/blog/2011/12/05/lojic-part-one.html">Lojic Part One</a></p><h3><a href="http://www.clojure.net/">Jim Duey - A Clojure Story</a></h3>

<p><a href="http://www.clojure.net/2013/10/24/Building-trees/">Building Trees</a><br>

<a href="http://www.clojure.net/2013/10/20/Meta-Machinations/">Meta Machinations</a><br>

<a href="http://www.clojure.net/2013/10/16/Build-an-arrow/">Build An Arrow</a><br>

<a href="http://www.clojure.net/2013/10/12/Meta-Machinations/">Meta Machinations</a><br>

<a href="http://www.clojure.net/2013/10/05/Arrowed-core.logic/">Arrowed Core.logic</a><br>

<a href="http://www.clojure.net/2012/10/02/More-core.logic/">More Core.logic</a><br>

<a href="http://www.clojure.net/2012/03/26/Messin-with-core.logic/">Messin With Core.logic</a></p><h3><a href="http://clj-me.cgrand.net/">Christophe Grand - Clojure and me</a></h3>

<p><a href="http://clj-me.cgrand.net/2012/04/06/fair-conjunction-status-report/">Fair conjunction: status report</a><br>

<a href="http://clj-me.cgrand.net/2012/01/30/the-reasoned-scheduler/">The Reasoned Scheduler</a></p><h3><a href="http://objectcommando.com/">Ryan Senior - Object Commando</a></h3>

<p><a href="http://objectcommando.com/blog/2011/11/04/the-magical-island-of-kanren-core-logic-intro-part-1/">The Magical Island of Kanren - core.logic Intro Part 1</a><br>

<a href="http://objectcommando.com/blog/2011/10/13/appendo-the-great/">Appendo the Great</a></p><h3><a href="http://martintrojer.github.io/">Martin Trojer</a></h3>
<p><a href="http://martintrojer.github.io/clojure/2012/09/27/some-corelogic-graph-code">Some core.logic graph code</a><br>

<a href="http://martintrojer.github.io/clojure/2012/08/12/ckanren-time">cKanren time!</a><br>

<a href="http://martintrojer.github.io/clojure/2012/07/11/n-queens-with-corelogic-take-2">Replicating Datomic/Datalog queries with core.logic, take 2</a><br>

<a href="http://martintrojer.github.io/clojure/2012/07/07/n-queens-with-corelogic-take-1">Replicating Datomic/Datalog queries with core.logic, take 1</a><br>

<a href="http://martintrojer.github.io/clojure/2012/07/11/n-queens-with-corelogic-take-2">N-Queens with core.logic, take 2</a><br>

<a href="http://martintrojer.github.io/clojure/2012/07/07/n-queens-with-corelogic-take-1">N-Queens with core.logic, take 1</a></p><h3><a href="http://spin.atomicobject.com/">Atomic Object - Atomic Spin</a></h3>

<p><a href="http://spin.atomicobject.com/2012/12/08/minikanren-in-haskell/">miniKanren in Haskell</a><br>

<a href="http://spin.atomicobject.com/2013/01/14/first-time-programming-scared-me/">The First Time Programming Scared Me</a></p><h3><a href="http://blog.jenkster.com/">Kris Jenkins</a></h3>

<p><a href="http://blog.jenkster.com/2013/02/solving-logic-puzzles-with-clojures-core-logic-part-two.html">Solving Logic Puzzles With Clojure's Core Logic, Part Two</a><br>

<a href="http://blog.jenkster.com/2013/02/solving-logic-puzzles-with-clojures-corelogic.html">Solving Logic Puzzles With Clojure's Core Logic, Part One</a></p><h3><a href="http://www.50ply.com/">Brian Taylor</a></h3>

<p><a href="http://www.50ply.com/blog/2012/08/01/pfai-to-core-logic-chapter-2/">PPfAI Chapter 2 (in Clojure Core.Logic)</a><br>

<a href="http://www.50ply.com/blog/2012/07/29/pfai-to-core-dot-logic/">PPfAI Chapter 1 in Clojure Core.Logic</a></p><h3><a href="http://pragprog.com/magazines">Paul Callaghan - PragPub Magazine</a></h3>

<p><a href="http://pragprog.com/magazines/2013-06/unification">Unification: It's Not Just for Prolog</a></p><h3><a href="http://lindseykuper.livejournal.com/">Lindsey Kuper</a></h3>

<p><a href="http://lindseykuper.livejournal.com/345176.html">Generating tautologies with miniKanren</a></p><h3><a href="http://michaelrbernste.in/">Michael R. Bernstein</a></h3>

<p><a href="http://michaelrbernste.in/2013/05/12/featurec-and-maps.html">A Nice Feature in core.logic and Thoughts About A Data Structure</a></p><h3><a href="http://jvns.ca/">Julia Evans</a></h3>

<p><a href="http://jvns.ca/blog/2013/11/20/day-31-logic-programming-pretty-music/">Day 31: Binary trees with core.logic!</a></p><h3><a href="http://mariapacana.tumblr.com/">Maria Pacana</a></h3>

<p><a href="http://mariapacana.tumblr.com/post/67799683667/minikanren">MiniKanren</a></p><h3><a href="https://kotka.de/index.html">Meikel Brandmeyer</a></h3>

<p><a href="https://kotka.de/blog/2011/10/A_field_trip_into_logic_programming.html">A field trip into logic programming</a></p><h3><a href="http://tsdh.wordpress.com/">Tassilo Horn</a></h3>

<p><a href="http://tsdh.wordpress.com/2012/01/06/using-clojures-core-logic-with-custom-data-structures/">Using Clojure's core.logic with custom data structures</a></p><h3><a href="http://bithacker.net/">Cameron Swords</a></h3>

<p><a href="https://web.archive.org/web/20140811092053/http://bithacker.net/2013-09-20-rkanren.html">rKanren: Guided Search in miniKanren, Part 1</a></p><h3><a href="http://blog.bloidonia.com/">Tim Yates</a></h3>

<p><a href="http://blog.bloidonia.com/post/29552846202/using-clojure-and-core-logic-from-groovy">Using Clojure and core.logic from Groovy</a></p><h3><a href="http://peteriserins.tumblr.com/">Peteris Erins</a></h3>

<p><a href="http://peteriserins.tumblr.com/post/38165611698/temporal-logic-programming-in-clojure-core-logic">Temporal logic programming in Clojure core.logic</a></p><h3><a href="http://blog.malcolmsparks.com/">Malcolm Sparks</a></h3>

<p><a href="http://blog.malcolmsparks.com/?p=49">Transitive relations in core.logic</a></p><h3><a href="http://blog.zolotko.me/">Alexander Zolotko</a></h3>

<p><a href="http://blog.zolotko.me/2013/07/getting-my-feet-wet-with.html">Getting my feet wet with Clojure's core.logic</a></p><h3><a href="http://scattered-thoughts.net/">Jamie Brandon</a></h3>

<p><a href="http://scattered-thoughts.net/blog/2012/12/19/search-trees-and-core-dot-logic/">Search trees and core.logic</a></p><h3><a href="https://coderwall.com/samn">Sam Neubardt - coderwall</a></h3>

<p><a href="https://coderwall.com/p/-w4plq">Find Elements in a Collection Using core.logic</a></p><h3><a href="http://jrheard.tumblr.com/">JR Heard</a></h3>

<p><a href="http://jrheard.tumblr.com/post/43575891007/explorations-in-clojures-core-logic">Explorations in Clojure's core.logic</a></p><h3><a href="http://hakutaku.me/">Oleg Prophet</a></h3>

<p><a href="http://hakutaku.me/posts/2014-05-05-fun-lambda-calc-minikanren.html">Fun with Lambda calculus Interpreters in miniKanren</a></p><h3><a href="https://brandonwillard.github.io/">Brandon T. Willard</a></h3>

<p><a href="https://brandonwillard.github.io/readable-strings-and-relational-programming-in-hy.html">Readable Strings and Relational Programming in Hy</a></p><!---http://matt.might.net/articles/microkanren/-->


<h2>Contact</h2><p>

This site is maintained by Will Byrd: <a href="mailto:webyrd@gmail.com">webyrd@gmail.com</a>.</p><p>

Thanks to <a href="https://github.com/kumarshantanu">Shantanu Kumar</a>, <a href="http://martinsprogrammingblog.blogspot.co.uk/">Martin Trojer</a>, and <a href="http://asylum.madhouse-project.org/">Gergely Nagy</a> for improving the site by submitting a <a href="https://github.com/miniKanren/miniKanren_org-website">pull request</a>.
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Where to Work After 40? (203 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=42573875</link>
            <guid>42573875</guid>
            <pubDate>Thu, 02 Jan 2025 12:33:04 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=42573875">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="42574220"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574220" href="https://news.ycombinator.com/vote?id=42574220&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>I have a couple ideas for you from my own experience.</p><p>There's about a bajillion C/D+ stage 100-500 person software companies in any B2B vertical you could mention who would fight hard for your type of experience. Not necessarily SaaS click-and-drool tools for corporate drones, but unique and opinionated products that have some significant engineering innovation inside. Those companies have essentially no ability to attract talent organically, anyone interested in FANG would turn up their noses, and their number one problem is quality people. In many cases the CEO/CTO leadership is incredibly strong and smart; the colleagues are happy, motivated, intelligent, and disciplined; and the work/life balance is good for the middle aged. They're vital to their customers but under continuous competitive pressure so it is far from a snoozy place to serve out time - it's a mission and a struggle every day, things change often, the pace is fast. It can be very rewarding and compensation is decent. The tradeoff is the big exit is vanishingly unlikely.</p><p>Second idea is go into consulting/professional services. Not Accenture or anything horrible like that, but dozens of boutique/smaller firms with decently inspiring leadership and a very high standard of colleague. Work is variable in interest and environment, pressures are somewhat unfairly around whether you are billable or not which is not really in your control as an engineer.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42575042"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42575042" href="https://news.ycombinator.com/vote?id=42575042&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>My longest employment stint was at such a company and it was a very good experience for me. That said, even though I worked at such a company for a while, I don't have a very good idea how I would go about identifying other such companies with open roles. Any suggestions on how to do that?</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574722"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574722" href="https://news.ycombinator.com/vote?id=42574722&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>This. I'm now working at a small- to mid-sized (~80 people) local B2B company. Pay is fine, they offer 100% WFH if you want, but they also have nice offices, they make good and stable revenue with reasonable growth targets, the actual work is somewhere between interesting and mind-numbingly stupid (e.g. integrating with poorly documented enterprise software - can be fun, but can also be aggravating), people are mostly happy.</p><p>There is a focus on delivering for clients rather than following processes.</p><p>I have about an hour of required meetings a week, 15-30 minutes technical meetings where people bring up any tech roadblocks or things where they need help, and a 20-45 minute sprint planning meeting. There's one monthly "show cool stuff" meeting for the whole company where everybody can voluntarily show something interesting they made. The rest of the time, I'm writing code, documentation, helping coworkers, talking to clients, stuff like that.</p><p>There is very high trust, e.g. people make honest effort estimates and there's no punishment or bad feedback if they're missed. There's a wide variety of skills because it's hard to attract top performers. This makes it easy to get hired (they immediately invited me for an interview after I sent them my CV, and made an offer after talking to me for 30 minutes), and it also means there's a culture of helping people and being patient and understanding when people are making an honest effort, but don't quite get things on the first try.</p><p>I'm working eight hours a day, five days a week, and when I'm done with work for the day, I don't think about it until the next day. It's nice.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574300"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574300" href="https://news.ycombinator.com/vote?id=42574300&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>I would second the mid-size B2B option here. I found professional services a bit stressful for what the OP is saying.</p><p>But I also think it’s really personal. Since turning 40 I tried: moving into management at a ~100 dev company; IC at a big tech firm (first time I’d worked somewhere really big as a dev); and now I’m back to running tech side of things at a startup.</p><p>I don’t think I could have known in advance which of those was going to work for me. There were a lot of positives to the first two, even though I ultimately left. Turns out I actually do prefer a) small places and b) a mix of management and IC work. But I’m absolutely sure that’s not true for everyone.</p><p>OP might feel like they want something very different from running their own startup – I also felt pretty burnt out on that after 7 years of my own – but once they’ve had some time they might remember why they went that way in the first place!</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574344"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574344" href="https://news.ycombinator.com/vote?id=42574344&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>wasn't going to reply but you called out Accenture.</p><p>I work at the Government Contracting arm of Accenture called Accenture Federal and it is by far the best place I've ever worked ( I worked in submarines for a decade so probably nowhere to go but up from there). It ranks highly in those marketing pieces "best places to work" if you're into that sort of thing.</p><p>anyway, I highly recommend Accenture Federal. Great projects, benefits, and WLB</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574828"><td></td></tr>
                        <tr id="42574588"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574588" href="https://news.ycombinator.com/vote?id=42574588&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>For me it was management.  I was an SDE who started caring more about the users of my code than about the code itself and that led me to a team lead position and that led to management at a small company and that led to management at a big company. I found I really like mentoring junior engineers and I'm a good sounding board for senior engineers.  I got to spend a lot of time saying variations on "Hey, let's not do that thing that won't work, let's do something easier that will work."  I also focused a lot more on my career and making money rather than most of my life which I spent focused on cool tech and that got me to a place where I could retire easily when the time was right.  Now I code for fun and I still chat with former colleagues from time to time and get to say things like "Yeah, but you know option B is the right choice so go do that."  None of it was clearly planned, all of it was stressful but in the end it sort of worked out.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42575231"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42575231" href="https://news.ycombinator.com/vote?id=42575231&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Can you share more about your experience regarding how management at a small company lead to management at a big company? Was the switch voluntary, and how did you do it?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="42574126"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574126" href="https://news.ycombinator.com/vote?id=42574126&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>I've been told there are two places which value experience:</p><p>1. A large organization where they have enough people with decades of knowledge to recognize what that is worth.</p><p>2. A small startup as head or lead on some domain where they need your knowledge to build their products.</p><p>It used to be that you could consult but I can tell you from direct experience with this market that it has been flooded with folks who've never consulted but neednwork, e.g. they are charging way too little. The flip side, it's a great time to hire "cheap" contract talent.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574195"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574195" href="https://news.ycombinator.com/vote?id=42574195&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>It really depends on the type of environment and work you are looking to do.</p><p>At 59, I applied for a “full stack” (ugh..not my favorite term) job at a large Asia-based multi-national corporation working on support software (web apps) for their entertainment appliance platform. I got the job after a blessedly short interview process that did not involve any leet coding problems.</p><p>I am on an amazing senior team at a company with a great, relaxed work culture! This work is many things: fun, challenging, predictable, boring. Devs will understand how it can be all these things at once lol.</p><p>Find yourself a situation that meets your current drive/ambitions. There are a ton of places out there. Probably harder now (I got the job in 2018), but there are still people hiring.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574291"><td></td></tr>
                <tr id="42574594"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_42574594" href="https://news.ycombinator.com/vote?id=42574594&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Usually one at a time, but sometimes they combine. Also, parts of the same task can be one or the other, so you may have to switch from fun (coding something new) to boring/annoying (writing unit tests) in a single day.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="42574115"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574115" href="https://news.ycombinator.com/vote?id=42574115&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>For me, reaching 50, it is all about boring enterprise consulting.</p><p>You still get to jump around technology, althought it might not be as cool, as whatever newer generations are making use of on startups, but on the other hand seniority combined with such stacks is exactly what many companies are looking for.</p><p>Naturally social skills also play a big role, as they expect people of our age to also contribute to discussions with all involved key persons, drive architecure and junior devs.</p><p>You need to lookout for opportunities where you can bring more than plain coding.</p><p>Given their classical interviews and crazy workhours, I doubt Google is really the place to retire.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574132"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574132" href="https://news.ycombinator.com/vote?id=42574132&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Google was relatively cozy when I was working there about ten years ago.  (But that was as an SRE and in Sydney.  I believe the Americans make more of a show of long hours?  They always seemed more exhausted in any case.)</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574158"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_42574158" href="https://news.ycombinator.com/vote?id=42574158&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Might be, apparently doing less than 60h or not being reachable during the already short holidays is not doing enough, if the memes are to be belived.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574182"><td></td></tr>
                <tr id="42574290"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_42574290" href="https://news.ycombinator.com/vote?id=42574290&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I really don’t understand that - if you have 20 SREs why would you need to be on call more than 3 weeks a year? If you do get called frequently then you should probably be working shifts anyway.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574354"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_42574354" href="https://news.ycombinator.com/vote?id=42574354&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>Only being oncall 3 weeks a year doesn't work: you'll forget everything in between.</p><p>It makes more sense to split the work by topic or area or so.</p><p>But yes, follow-the-sun shifts make sense.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574362"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_42574362" href="https://news.ycombinator.com/vote?id=42574362&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>But where did you get the '20' figure from?</p><p>Many companies have specializations, and maybe only 1,2 or 3 people for each one. So at best you might have some vacation coverage.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="42574637"><td></td></tr>
                              <tr id="42574961"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574961" href="https://news.ycombinator.com/vote?id=42574961&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Depends on the team you're working with. I'm not going to call out names. But some teams are nightmare 60hr weeks and other teams are 30hr weeks.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="42575178"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42575178" href="https://news.ycombinator.com/vote?id=42575178&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I accidentally fell into working for state government.  Small state relatively and it has been one of the most enjoyable things I have ever done.  I am able to help people, again, use technology to make things easier.  It is very enjoyable.  I can see myself working here until I am no longer able to keep up.  I enjoy programming, but more importantly solving problems, and really hope that I don't have to retire.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574418"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574418" href="https://news.ycombinator.com/vote?id=42574418&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>As someone comin up on 50 myself, I have to say age has yet to be an issue with my career. Maybe I don't go out of my way to advertise it (cut the resume down to the past 10 or so years, don't have a face full of white hair), but I'm still landing plenty of the same ole gigs with Typescript, Ruby on Rails, Python, whatever the flavor of the month is. So I guess my advice is to just ignore it?</p><p>Of course, trying not to giggle at the 28 year old who thinks they need 4 meetings a day for their precious startup is a different matter. But as long as they pay on time...</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574714"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574714" href="https://news.ycombinator.com/vote?id=42574714&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I'm mid-40s and have a lot of older friends. Age doesn't matter for experienced people. Skill is independent of age. Wisdom usually isn't.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="42574623"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574623" href="https://news.ycombinator.com/vote?id=42574623&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>What do you care about? Money, stableness, scope or opportunities?</p><p>I know people who "settle down" in companies with well-known work-life balance (usually develop for B2B products). I know many more people who stayed at the same company and climbed the corporate ladder. I know people who jump to a different, big company for better compensation and work in different areas. I also know a small fraction of people who create their own startups -- yes, in their 40s.</p><p>It all comes to -- what do you want?</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574109"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574109" href="https://news.ycombinator.com/vote?id=42574109&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>What software communities[1] are you a part of and who are you helping in those communities? Do you contribute there in the form of (code, documentation, blog posts, conference talks, helping juniors, etc)?</p><p>At 40 I think you do well to have a decent network in a focused set of communities of people you've mentored, supported, and worked with. IE folks in a specific discipline, project, thing where you might expect there to be community conferences around or other community institutions. You'd be a mainstay there, always looking to help juniors / new people, paying it forward everywhere you can, etc.</p><p>Then finding the next job is about those relationships, continuing to help them through the years, etc</p><p>Don't focus on "F-You money", focus on an "F-You network" <a href="https://softwaredoug.com/blog/2024/05/08/build-an-f-you-network" rel="nofollow">https://softwaredoug.com/blog/2024/05/08/build-an-f-you-netw...</a></p><p>1 - community can mean discord/slack communities, subreddit, projects, on social media, having coffee 1-1 with people, etc etc</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574218"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574218" href="https://news.ycombinator.com/vote?id=42574218&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>&gt; Google is the place you go to retire after 40</p><p>I don't get this honestly. About 1%-2% of devs will manage to work at a FAANG, that's it (correct me if I'm wrong). The rest of us will grind code somewhere else.</p><p>I'm 40 and I'm staying put in the startup I'm currently working for because I like the people and it's not a sweatshop. Eventually I'll find something else. I'm more worried about A.I making me irrelevant than my age.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42575101"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42575101" href="https://news.ycombinator.com/vote?id=42575101&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>1-2% at a FAANG seems way to high.  There are a lot of other companies out there hiring people.  Some of them are great places to work, some of them are not.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574241"><td></td></tr>
                <tr id="42574429"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_42574429" href="https://news.ycombinator.com/vote?id=42574429&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I think that the intention of the FAANG comment is that statistically speaking there is only so much room for people at those companies. Not everybody is going to land there.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="42575043"><td></td></tr>
                <tr id="42575137"><td></td></tr>
                        <tr id="42574520"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574520" href="https://news.ycombinator.com/vote?id=42574520&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I'm in my upper 50s and I resigned from the corporate employee world in spring of 2024. I've been working my handyman business since then. I don't have enough business to keep my schedule full (and not enough income), so I decided to get back into tech on my own terms. I've started developing a software product that I hope to launch soon. No idea how any of this will turn out, but it's the best plan I've got at the moment.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574183"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574183" href="https://news.ycombinator.com/vote?id=42574183&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>I'm 40+ though I try not to act like it. 
My most recent gig, which is my favorite job to date, is working at a small startup as "The X guy", for an X I've worked on for years and years. I suspect you can similarly specialize, if you think carefully about what you did for 10 years.</p><p>If my current gig weren't an option, I'd try for some of the DoD startups where X is applicable, or I'd try to move into consulting, as others have mentioned, or I'd open my own shop for small businesses nearby, in an unrelated field. Small time one-stop consultants in my area charge more for database admin than I do for X in my PhD field.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574928"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574928" href="https://news.ycombinator.com/vote?id=42574928&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>At 60, I applied to Canonical and got hired. The hiring process is thorough but very fair, all WFH, and they generally don't care about personal attributes. Gave me 20% above my asking price and a higher starting rank than expected.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574259"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574259" href="https://news.ycombinator.com/vote?id=42574259&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>I spent a long time in tech (not 40 yet but close), and my opinion is that technology creates a mechanical mindset that is sometimes a blind spot. Although it might be best for you to stay in it, I suggest testing the waters elsewhere for a bit in a more artistic area. It might be quite fun to take a break.</p><p>I am frequently in the minority here but I do believe that spending all your life in a narrow domain like technology can be restricting in the journey to figure out what life is all about.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574632"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574632" href="https://news.ycombinator.com/vote?id=42574632&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I’m not sure about 40, but as you get older, the Federal government is a great place to work as they will allow you generous leave if you get sick, great vacation time and good benefits.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574431"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574431" href="https://news.ycombinator.com/vote?id=42574431&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>I'm in the same situation, 41 and just folded a startup in November after six years and looking at what to do next.</p><p>My concern is if I jump on another startup and it doesn't go well, I will have even less chance to land a decent gig afterwards. Who knows what AI capabilities will be five years down the line?</p><p>I have some friends that work in government that could help me get a job there where you are basically unfireable and even get a pension, but the work is not very technically interesting. They all say it's soul-killing but stay for the stability and benefits.</p><p>Is a large tech company a better bet? I consider my self a very good developer but not sure if I can pass through all filters and the leetcode gauntlet either.</p><p>Deciding which road to go down is giving me more anxiety than ever before.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42575145"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42575145" href="https://news.ycombinator.com/vote?id=42575145&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I think you mostly only run the risk of pigeonholing yourself as a “startup person” if you jump on another startup. But startup people value startup experience, so as along as you enjoy startup work and are making solid contributions, I think you have a long career ahead, with the caveat that options to work in a bigger company may be diminishing. Even then, it’s not all that uncommon for big companies to try to bring in startup types to breathe some life into a stagnant culture. Not so much  FAANG but there are a lot of other big tech companies with good comp.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="42575033"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42575033" href="https://news.ycombinator.com/vote?id=42575033&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I am turning 43 and trying to figure things out as well. I am at the point in my life where the most important thing to me is not work. I just want a balanced 9 to 5 without toxicity or high demands. Is such a thing possible in this industry? If so where?</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42575032"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42575032" href="https://news.ycombinator.com/vote?id=42575032&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Iam at 41, but I learned 100X in my last 2 years than i was at working in sales 
for a domestic company for 10 years. Currently pursuing my passion - Startup in workplace collaboration. 
Moral: Age is just a Number.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574958"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574958" href="https://news.ycombinator.com/vote?id=42574958&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Indie gamedev. It will feel like early day startups again. And gamedev is so special that every one in a while you switch to a new project, and that again feels fresh. But gamedev is demanding.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574145"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574145" href="https://news.ycombinator.com/vote?id=42574145&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>This should be about what you want in your career now, and not about your age. Once you can clearly answer the first question, it will be easy to find the right place.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42575110"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42575110" href="https://news.ycombinator.com/vote?id=42575110&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>That actually distills it down pretty well. What's your financial position? What do you want/need your financial position to be once you (maybe, largely) stop collecting a paycheck? Are you OK with not working for a company vs. maybe doing some stuff on the side?</p><p>Especially once you've thought about your finances, your horizons may open up a lot. I know people who largely retired in their 40s and that may be for you or may be hell.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574180"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574180" href="https://news.ycombinator.com/vote?id=42574180&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>You're making an assumption that OP has the financial security to follow their desires rather than needs.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574615"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_42574615" href="https://news.ycombinator.com/vote?id=42574615&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Neither desire or need was mentioned, only want, which addresses both desire and need. If financial security is what the OP wants, the parent comment already has him covered.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="42574396"><td></td></tr>
            <tr id="42574993"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574993" href="https://news.ycombinator.com/vote?id=42574993&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>I am at Google (and have been for quite somewhat over a decade now), and am over 40 too.</p><p>Despite a lot of internal criticism about "the old Google" and how things have changed, they are still a very good company to work for in my opinion.  Lots of well-known benefits, decent comp, and critically a very good work-life balance (no mandatory work-from-office so far, I probably average about 0.5 to 1 days a week in the office) and laid-back pace.  I have been basically doing 8:15am to 3pm for my hours (no discussion with management about it - it's just what I do), essentially logging off at 3pm to go collect my kids and not logging back on after that (although I keep a rough eye on chat and email and jump back on if something urgent/critical comes up) and no one has batted an eye lid at all - so long as the work gets done, people are happy and are not closely monitoring where you are or how you are working. Some of the work is interesting and engaging, other part are more "meh" but I think that is true of many jobs really.</p><p>Yes I might be able to get slightly more money elsewhere (especially fintech) and might get to work on more sphincter-clenchingly-exciting work elsewhere (especially startups) but the quality of life from what is quite an easy ride of things is very valuable to me. Google is quite grown up in many ways and the culture is calm and predictable (on the whole - the recent (year or two ago) redundancies were <i>not</i> predicted!)</p><p>I'd recommend it.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42575002"><td></td></tr>
                <tr id="42575063"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_42575063" href="https://news.ycombinator.com/vote?id=42575063&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>Not saying that it is an easy place to get in to - the bar is high, but if you are good enough to get in it is fairly chilled.</p><p>FWIW I interview a lot of candidates and there is quite a broad range of ages from college grads up to and including folks older than me. The hiring process is flawed in many ways, but they do seem to go out of their way to be fair and equitable regarding age race gender etc.  It is no longer "culture fit" examined during interview for example, but now "culture add"</p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="42574483"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574483" href="https://news.ycombinator.com/vote?id=42574483&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Am I the only one still getting e-mails from recruiters all the time? My LinkedIn profile indicates I’m not looking for new work, and yet they still come to me in both personal and my work inbox. If I change that setting on my profile I know I’ll be absolutely inundated by them. Most of them I’m sure are non-starters, but occasionally there is one that is promising.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574801"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574801" href="https://news.ycombinator.com/vote?id=42574801&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I worked for 9 years at one of the large US softy companies after 40; I worked from home.  Got promoted a few times, avoided doing management.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574227"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574227" href="https://news.ycombinator.com/vote?id=42574227&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>Just after hitting 40 I moved from being a dev to being a tester/QA
I was working at a small company and after almost 20 years there was getting bored - the tech was changing ( from BCPL on a PDP-11 to C and .Net on Macs/PCs ) but I felt stuck in a rut and found I was better at finding bugs than writing them...</p><p>Got involved with the test community, learned a lot, got myself known and then ended up moving from the UK to Michigan just before I hit 50 to work for a small but growing s/w consultancy</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42575020"><td></td></tr>
            <tr id="42574037"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574037" href="https://news.ycombinator.com/vote?id=42574037&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>After 40, it's musical chairs. The music will stop and there won't be a chair for you.
McKinsey comes in and says "cut staff." 
HR comes in, says "cut 5% and replace them with Desi H1-B's." 
Your best bet is to take a deep breath and build another start-up.
In the meantime, take any job of any nature.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574148"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574148" href="https://news.ycombinator.com/vote?id=42574148&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I try to say this gently, but this comment would make more sense if it came from lots of direct experience, rather than (what appear to be) repeated tropes. Have you seen this repeated in your own over-40 experience or the experience of people you know?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574239"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_42574239" href="https://news.ycombinator.com/vote?id=42574239&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>At best it would be anecdotal, and if not from experience it's an intentionally alarmist and flippant remark.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574179"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_42574179" href="https://news.ycombinator.com/vote?id=42574179&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p><i>Have you seen this repeated in your own over-40 experience or the experience of people you know?</i></p><p>I can't speak for the parent, but that exact thing has happened to me.</p><p>It's no trope.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574751"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_42574751" href="https://news.ycombinator.com/vote?id=42574751&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Likewise. I hit 40, which I didn't think was that old, dropped out of contracting and found employed work has gone from being easy to, well, IME impossible to turn up.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="42574177"><td></td></tr>
            <tr id="42574795"><td></td></tr>
                <tr id="42574815"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_42574815" href="https://news.ycombinator.com/vote?id=42574815&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>This happens, that much is unarguable. But replacing departments does not disproportionately affect workers over 40 unless that dept is disproportionately over 40, which begs the original question: How can one find such a dept!?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574904"><td></td></tr>
                              <tr id="42574649"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574649" href="https://news.ycombinator.com/vote?id=42574649&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>After 40, getting hired has a similar to propensity to making friends. Ageism is a subtle, pervasive bias.</p><p>When I was 20, I looked about 13 and <i>everyone</i> wanted to hire me.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="42574146"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574146" href="https://news.ycombinator.com/vote?id=42574146&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I switched from SWE to SRE in my fifties. The perception is that neckbeards take a long time to grow.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574311"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574311" href="https://news.ycombinator.com/vote?id=42574311&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I am similar demographics. In parallel to my regular job I am registering myself as self employed electrician (in Germany). For couple hours a week at the beginning and let’s see how it evolves later.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42575179"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42575179" href="https://news.ycombinator.com/vote?id=42575179&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Out of curiosity: did you already have an education that certified you for the job, or is it something you acquired recently?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="42574173"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574173" href="https://news.ycombinator.com/vote?id=42574173&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>Tech is everywhere. You don't have to work at a "tech" company to work in tech.</p><p>Try healthcare, banking, pharma, or any other industry that has been around longer than the internet.</p><p>Many big, established companies are used to  people who have worked in one place for decades. That means middle-aged people. It's not weird for them, and their experience has taught them to value experience.</p><p>Protip for anyone: When you interview for a new job, ask how many retirement parties the company had in the last five years. That will tell you a lot about the company.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574056"><td></td></tr>
                <tr id="42574086"><td></td></tr>
            <tr id="42574175"><td></td></tr>
                <tr id="42574837"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_42574837" href="https://news.ycombinator.com/vote?id=42574837&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>More optimism may be creeping back in but there's still a lot more hesitancy, caution, and conservatism in my experience than there was for much of the last decade+ (except probably in AI which is pretty hot overall). It's also not clear how hiring is distributed by seniority. On the one hand, I hear that things for tougher for junior people without networks. On the other hand, I hear that filling slots opened up by attrition are tending to go to more junior/cheaper people.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="42574308"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574308" href="https://news.ycombinator.com/vote?id=42574308&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>I'm in my 40s and I (and the entire team I worked on) was laid off in 2022. After taking a week or so to relax, I was able to find a new position within about 4 weeks, which I'm still at now, and has turned out to be one of the better roles I've had in my career.</p><p>I realize this is just another anecdote, but don't be discouraged by the other posters here -- companies value people with lots of experience.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="42573947"><td></td></tr>
                <tr id="42574047"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574047" href="https://news.ycombinator.com/vote?id=42574047&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>FB gets over 15,000 applications for each posted vacancy.
Your cv is weeded out by an automated system that's difficult to game.
Even if you have a contact at the company, your odds suck.
You are just as likely to win the lottery.
Perhaps buying scratch-off cards isn't such a bad idea.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574120"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_42574120" href="https://news.ycombinator.com/vote?id=42574120&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>If you've ever run a company, you know how bad people's CVs can be and what you need to do to stand out. I recommend it to everyone. I would get 15-20 CVs for a small company, and I didn't even closely look at 10-15 of them because it was clear people were just writing random shit or applying without even looking at what we wanted.</p><p>I suspect it is a similar ratio for any software company.</p><p>My best hire ever was a math teacher in a previous career that wrote his own tools. Worst hire ever was a guy with a PHD that thought he was still in university.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574281"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_42574281" href="https://news.ycombinator.com/vote?id=42574281&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>Second this, try to stand out in some way. I mostly receive floods of terrible resumes, spam and obvious LLM generated text.</p><p>The worst hire I made also had university credentials and apparently wasn't educated in how to deliver anything but academic noodling.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="42574287"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_42574287" href="https://news.ycombinator.com/vote?id=42574287&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>The way you write this suggests that for each engineer at Meta there are 15k other people who applied for the job and didn’t get it, so their ~40k engineers correspond to a pool of 600 million potential employees. This is obviously nonsense. There are a few ways to explain your number:</p><p>- the same unsuitable candidates apply many times. This is not so surprising: suitable candidates get jobs and so stop repeatedly applying</p><p>- perhaps many people can be hired for a single ‘open position’, eg perhaps one is ‘software engineer based at headquarters’</p><p>- if many applicants are from people who are grossly unsuitable, eg maybe you must demonstrate job applications to get some state unemployment assistance</p><p>- maybe Meta aren’t hiring much at the moment and so it is harder to get in than other companies that are hiring</p><p>- the number might be misremembered</p><p>The downside to applying is trivial so even if chances do seem low, it can still be reasonable to apply. I think the probabilities implied by the comment I’m replying to are so extreme that you should have some higher estimated success probability from also considering the chance that the comment above is misleading.</p><p>The thing one often sees about automated cv filtering systems is mostly widely-believed nonsense. It is a story that is told to job seekers to sell cv-optimisation services. That’s not to say automated filtering doesn’t exist – a simple case is filtering out candidates that were recently rejected – but I think even if a lot of people are filtered out, that doesn’t mean you will be.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574139"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_42574139" href="https://news.ycombinator.com/vote?id=42574139&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>I have Facebook recruiters chasing me (and many of my friends).  So I don't think it's that hard to get in.</p><p>(I even worked there briefly for six weeks.  But that's another story.)</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574155"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_42574155" href="https://news.ycombinator.com/vote?id=42574155&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Here's the thing - having worked there briefly you are now on the top of their lists. You're part of the exclusive club in recruiters' eyes, whether it actually sets you apart or not. I worked at Amazon for a few months, and regularly get contacted by Amazon recruiters. But never Facebook, etc.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574350"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_42574350" href="https://news.ycombinator.com/vote?id=42574350&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>I did not notice much of a difference in recruiter intensity before or after my short stint there.</p><p>(But I was at eg Google before at some other point in my career.)</p></div></td></tr>
        </tbody></table></td></tr>
                                    <tr id="42574079"><td></td></tr>
                <tr id="42574104"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574104" href="https://news.ycombinator.com/vote?id=42574104&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>We need more physicians who earned their place in medical school by gaming the MCAT. Equality has no place in hospitals.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574322"><td></td></tr>
                        <tr id="42574049"><td></td></tr>
            <tr id="42574315"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_42574315" href="https://news.ycombinator.com/vote?id=42574315&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>It is my understanding that if you are older than 35, have no C-suite social connections, and you lose your tech job, your tech career is over. Your only opportunities will be entry-level since none of your original education will pass automated filters, no entry-level hire is paid anything above subsistence wages, and at 35+ your rapidly-increasing medical issues (the piper's due for 20+ years of treating your body like shit pulling all-nighters 6 days a week) make living on subsistence wages an impossibility.</p><p>If your health is intact, consider yourself lucky and get the hell out before it gets worse. Find some non-tech job you can scrape out a living from and make tech your hobby instead.</p><p>If your health has already failed, well, good job making it this far, but the only things you have waiting for you in the future are losing whatever medical coverage you have, losing access to your medications, and finding out by experiment how long it will take for your conditions to become terminal when unmedicated. I don't see any reason to believe this situation will improve in the near future. It's probably time to make and/or exercise your end-of-life plans.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574388"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574388" href="https://news.ycombinator.com/vote?id=42574388&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>I hope you're doing okay because this is pretty bleak.</p><p>I also have a bleak outlook on the future, the healthcare costs in particular. I don't want to spend years building up money and then have cancer wipe it all out in just months.</p><p>I haven't (yet) added "tech career ends at 40" to my set of looming tragedies. I'm currently more worried for people starting their careers, they seem replaceable by LLMs. Perhaps I have a false sense of security.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="42574576"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_42574576" href="https://news.ycombinator.com/vote?id=42574576&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>Lots of doomers on here, yet somehow I keep meeting highly technical people still working on interesting things that are in their 40s, 50s, 60s, and older. I think HN probably skews really young and tech tends to fetishize youth, so this is the mentality you get.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="42575195"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_42575195" href="https://news.ycombinator.com/vote?id=42575195&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>I am 46. I am more or less describing my present situation, except I haven't yet been fired. I say "yet" because my employer's products are government-facing and the incoming administration has priorities incompatible with the usage of our products.</p><p>I am told I work on interesting things, but the interesting things are my hobbies and not anything related to my employment. My day job is largely a slowly losing battle against technical debt.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="42574720"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_42574720" href="https://news.ycombinator.com/vote?id=42574720&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div>
                  <p>I’m 64 and just landed a great new job … it’s always my long history of C/C++ and mobile skills that get me in the door.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="42574559"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_42574559" href="https://news.ycombinator.com/vote?id=42574559&amp;how=up&amp;goto=item%3Fid%3D42573875"></a></center>    </td><td><br><div><p>Your understanding is wrong, though I do generally share your concern about the state of healthcare in the USA.</p><p>Reposting something I wrote elsewhere in this thread:</p><p>&gt; I'm in my 40s and I (and the entire team I worked on) was laid off in 2022. After taking a week or so to relax, I was able to find a new position within about 4 weeks, which I'm still at now, and has turned out to be one of the better roles I've had in my career.</p><p>I'll add that I had zero connections in my personal network (C-suite or otherwise) relating to the new role I took in 2022. I found the posting on a job site and applied, went through their standard interview process, and they made me an offer.</p></div></td></tr>
        </tbody></table></td></tr>
                  </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[MitmProxy2Swagger: Automagically reverse-engineer REST APIs (432 pts)]]></title>
            <link>https://github.com/alufers/mitmproxy2swagger</link>
            <guid>42572662</guid>
            <pubDate>Thu, 02 Jan 2025 08:08:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/alufers/mitmproxy2swagger">https://github.com/alufers/mitmproxy2swagger</a>, See on <a href="https://news.ycombinator.com/item?id=42572662">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">mitmproxy2swagger</h2><a id="user-content-mitmproxy2swagger" aria-label="Permalink: mitmproxy2swagger" href="#mitmproxy2swagger"></a></p>
<p dir="auto"><a href="https://badge.fury.io/py/mitmproxy2swagger" rel="nofollow"><img src="https://camo.githubusercontent.com/18c1534b2b1e7a23bf322f06d52749c1a511f391fb6cb7153339e71fa93a3b97/68747470733a2f2f62616467652e667572792e696f2f70792f6d69746d70726f787932737761676765722e737667" alt="PyPI version" data-canonical-src="https://badge.fury.io/py/mitmproxy2swagger.svg"></a>
<a href="https://archlinux.org/packages/extra/any/mitmproxy2swagger/" rel="nofollow"><img src="https://camo.githubusercontent.com/65853a26d224252b94a0df6938cab3da25f7afa499508cdb9df96fbbeae00b7f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f617263686c696e75782d6d69746d70726f787932737761676765722d626c7565" alt="Arch Linux repository" data-canonical-src="https://img.shields.io/badge/archlinux-mitmproxy2swagger-blue"></a></p>
<details open="">
  <summary>
    
    <span aria-label="Video description video.mp4">video.mp4</span>
    <span></span>
  </summary>

  <video src="https://private-user-images.githubusercontent.com/5400940/168086818-c48f60ab-3f95-42eb-b435-c8b1a6326b81.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzU4MTc3MDUsIm5iZiI6MTczNTgxNzQwNSwicGF0aCI6Ii81NDAwOTQwLzE2ODA4NjgxOC1jNDhmNjBhYi0zZjk1LTQyZWItYjQzNS1jOGIxYTYzMjZiODEubXA0P1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEwMiUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMDJUMTEzMDA1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MmQ3ZmZmYTAzOWExMDkzOTdiZjFmNjBjZGExMjQ4ZjFhOWZhMTQ5MjFjNjQ5ZWZhODMzNTYyOGVjNTcxYTc4NCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.L_xRWpmCYgsxwVGDpJBymnSO-bnm2f9zaRKUhHhwty4" data-canonical-src="https://private-user-images.githubusercontent.com/5400940/168086818-c48f60ab-3f95-42eb-b435-c8b1a6326b81.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzU4MTc3MDUsIm5iZiI6MTczNTgxNzQwNSwicGF0aCI6Ii81NDAwOTQwLzE2ODA4NjgxOC1jNDhmNjBhYi0zZjk1LTQyZWItYjQzNS1jOGIxYTYzMjZiODEubXA0P1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEwMiUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMDJUMTEzMDA1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MmQ3ZmZmYTAzOWExMDkzOTdiZjFmNjBjZGExMjQ4ZjFhOWZhMTQ5MjFjNjQ5ZWZhODMzNTYyOGVjNTcxYTc4NCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.L_xRWpmCYgsxwVGDpJBymnSO-bnm2f9zaRKUhHhwty4" controls="controls" muted="muted">

  </video>
</details>

<p dir="auto">A tool for automatically converting <a href="https://mitmproxy.org/" rel="nofollow">mitmproxy</a> captures to <a href="https://swagger.io/specification/" rel="nofollow">OpenAPI 3.0</a> specifications. This means that you can automatically reverse-engineer REST APIs by just running the apps and capturing the traffic.</p>
<hr>
<p dir="auto"><strong>🆕 NEW!</strong></p>
<p dir="auto">Added support for processing HAR exported from the browser DevTools. See <a href="#har">Usage - HAR</a> for more details.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto">First you will need python3 and pip3.</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ pip install mitmproxy2swagger
# ... or ...
$ pip3 install mitmproxy2swagger
# ... or ...
$ git clone git@github.com:alufers/mitmproxy2swagger.git
$ cd mitmproxy2swagger
$ docker build -t mitmproxy2swagger ."><pre>$ pip install mitmproxy2swagger
<span><span>#</span> ... or ...</span>
$ pip3 install mitmproxy2swagger
<span><span>#</span> ... or ...</span>
$ git clone git@github.com:alufers/mitmproxy2swagger.git
$ <span>cd</span> mitmproxy2swagger
$ docker build -t mitmproxy2swagger <span>.</span></pre></div>
<p dir="auto">Then clone the repo and run <code>mitmproxy2swagger</code> as per examples below.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Mitmproxy</h3><a id="user-content-mitmproxy" aria-label="Permalink: Mitmproxy" href="#mitmproxy"></a></p>
<p dir="auto">To create a specification by inspecting HTTP traffic you will need to:</p>
<ol dir="auto">
<li>
<p dir="auto">Capture the traffic by using the mitmproxy tool. I personally recommend using mitmweb, which is a web interface built-in to mitmproxy.</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ mitmweb
Web server listening at http://127.0.0.1:8081/
Proxy server listening at http://*:9999
..."><pre>$ mitmweb
Web server listening at http://127.0.0.1:8081/
Proxy server listening at http://<span>*</span>:9999
...</pre></div>
<p dir="auto"><strong>IMPORTANT</strong></p>
<p dir="auto">To configure your client to use the proxy exposed by mitm proxy, please consult the <a href="https://docs.mitmproxy.org/stable/" rel="nofollow">mitmproxy documentation</a> for more information.</p>
</li>
<li>
<p dir="auto">Save the traffic to a flow file.</p>
<p dir="auto">In mitmweb you can do this by using the "File" menu and selecting "Save":</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/alufers/mitmproxy2swagger/blob/master/docs/mitmweb_save.png"><img src="https://github.com/alufers/mitmproxy2swagger/raw/master/docs/mitmweb_save.png" alt="A screenshot showing the location of the &quot;Save&quot; option in the &quot;File&quot; menu"></a></p>
</li>
<li>
<p dir="auto">Run the first pass of mitmproxy2swagger:</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ mitmproxy2swagger -i <path_to_mitmptoxy_flow> -o <path_to_output_schema> -p <api_prefix>
# ... or ...
$ docker run -it -v $PWD:/app mitmproxy2swagger mitmproxy2swagger -i <path_to_mitmptoxy_flow> -o <path_to_output_schema> -p <api_prefix>"><pre>$ mitmproxy2swagger -i <span>&lt;</span>path_to_mitmptoxy_flow<span>&gt;</span> -o <span>&lt;</span>path_to_output_schema<span>&gt;</span> -p <span>&lt;</span>api_prefix<span>&gt;</span>
<span><span>#</span> ... or ...</span>
$ docker run -it -v <span>$PWD</span>:/app mitmproxy2swagger mitmproxy2swagger -i <span>&lt;</span>path_to_mitmptoxy_flow<span>&gt;</span> -o <span>&lt;</span>path_to_output_schema<span>&gt;</span> -p <span>&lt;</span>api_prefix<span>&gt;</span></pre></div>
<p dir="auto">Please note that you can use an existing schema, in which case the existing schema will be extended with the new data. You can also run it a few times with different flow captures, the captured data will be safely merged.</p>
<p dir="auto"><code>&lt;api_prefix&gt;</code> is the base url of the API you wish to reverse-engineer. You will need to obtain it by observing the requests being made in mitmproxy.</p>
<p dir="auto">For example if an app has made requests like these:</p>
<div dir="auto" data-snippet-clipboard-copy-content="https://api.example.com/v1/login
https://api.example.com/v1/users/2
https://api.example.com/v1/users/2/profile"><pre><span>https://api.example.com/v1/login</span>
<span>https://api.example.com/v1/users/2</span>
<span>https://api.example.com/v1/users/2/profile</span></pre></div>
<p dir="auto">The likely prefix is <code>https://api.example.com/v1</code>.</p>
</li>
<li>
<p dir="auto">Running the first pass should have created a section in the schema file like this:</p>
<div dir="auto" data-snippet-clipboard-copy-content="x-path-templates:
  # Remove the ignore: prefix to generate an endpoint with its URL
  # Lines that are closer to the top take precedence, the matching is greedy
  - ignore:/addresses
  - ignore:/basket
  - ignore:/basket/add
  - ignore:/basket/checkouts
  - ignore:/basket/coupons/attach/{id}
  - ignore:/basket/coupons/attach/104754"><pre><span>x-path-templates</span>:
  <span><span>#</span> Remove the ignore: prefix to generate an endpoint with its URL</span>
  <span><span>#</span> Lines that are closer to the top take precedence, the matching is greedy</span>
  - <span>ignore:/addresses</span>
  - <span>ignore:/basket</span>
  - <span>ignore:/basket/add</span>
  - <span>ignore:/basket/checkouts</span>
  - <span>ignore:/basket/coupons/attach/{id}</span>
  - <span>ignore:/basket/coupons/attach/104754</span></pre></div>
<p dir="auto">You should edit the schema file with a text editor and remove the <code>ignore:</code> prefix from the paths you wish to be generated. You can also adjust the parameters appearing in the paths.</p>
</li>
<li>
<p dir="auto">Run the second pass of mitmproxy2swagger:</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ mitmproxy2swagger -i <path_to_mitmptoxy_flow> -o <path_to_output_schema> -p <api_prefix> [--examples]
# ... or ...
$ docker run -it -v $PWD:/app mitmproxy2swagger mitmproxy2swagger -i <path_to_mitmptoxy_flow> -o <path_to_output_schema> -p <api_prefix> [--examples]"><pre>$ mitmproxy2swagger -i <span>&lt;</span>path_to_mitmptoxy_flow<span>&gt;</span> -o <span>&lt;</span>path_to_output_schema<span>&gt;</span> -p <span>&lt;</span>api_prefix<span>&gt;</span> [--examples]
<span><span>#</span> ... or ...</span>
$ docker run -it -v <span>$PWD</span>:/app mitmproxy2swagger mitmproxy2swagger -i <span>&lt;</span>path_to_mitmptoxy_flow<span>&gt;</span> -o <span>&lt;</span>path_to_output_schema<span>&gt;</span> -p <span>&lt;</span>api_prefix<span>&gt;</span> [--examples]</pre></div>
<p dir="auto">Run the command a second time (with the same schema file). It will pick up the edited lines and generate endpoint descriptions.</p>
<p dir="auto">Please note that mitmproxy2swagger will not overwrite existing endpoint descriptions, if you want to overwrite them, you can delete them before running the second pass.</p>
<p dir="auto">Passing <code>--examples</code> will add example data to requests and responses. Take caution when using this option, as it may add sensitive data (tokens, passwords, personal information etc.) to the schema.
Passing <code>--headers</code> will add headers data to requests and responses. Take caution when using this option, as it may add sensitive data (tokens, passwords, personal information etc.) to the schema.</p>
</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">HAR</h3><a id="user-content-har" aria-label="Permalink: HAR" href="#har"></a></p>
<ol dir="auto">
<li>
<p dir="auto">Capture and export the traffic from the browser DevTools.</p>
<p dir="auto">In the browser DevTools, go to the Network tab and click the "Export HAR" button.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/alufers/mitmproxy2swagger/blob/master/docs/export_har_button.png"><img src="https://github.com/alufers/mitmproxy2swagger/raw/master/docs/export_har_button.png" alt="A screenshot showing where the export har button is located"></a></p>
</li>
<li>
<p dir="auto">Continue the same way you would do with the mitmproxy dump. <code>mitmproxy2swagger</code> will automatically detect the HAR file and process it.</p>
</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Example output</h2><a id="user-content-example-output" aria-label="Permalink: Example output" href="#example-output"></a></p>
<p dir="auto">See the <a href="https://github.com/alufers/mitmproxy2swagger/blob/master/example_outputs">examples</a>. You will find a generated schema there and an html file with the generated documentation (via <a href="https://www.npmjs.com/package/redoc-cli" rel="nofollow">redoc-cli</a>).</p>
<p dir="auto">See the generated html file <a href="https://raw.githack.com/alufers/mitmproxy2swagger/master/example_outputs/lisek-static.html" rel="nofollow">here</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Development and contributing</h2><a id="user-content-development-and-contributing" aria-label="Permalink: Development and contributing" href="#development-and-contributing"></a></p>
<p dir="auto">This project uses:</p>
<ul dir="auto">
<li><a href="https://python-poetry.org/" rel="nofollow">poetry</a> for dependency management</li>
<li><a href="https://pre-commit.com/" rel="nofollow">pre-commit</a> for code formatting and linting</li>
<li><a href="https://docs.pytest.org/en/stable/" rel="nofollow">pytest</a> for unit testing</li>
</ul>
<p dir="auto">To install the dependencies:</p>

<p dir="auto">Run linters:</p>
<div dir="auto" data-snippet-clipboard-copy-content="pre-commit run --all-files"><pre>pre-commit run --all-files</pre></div>
<p dir="auto">Install pre-commit hooks:</p>

<p dir="auto">Run tests:</p>

<p dir="auto">Run tests with coverage:</p>
<div dir="auto" data-snippet-clipboard-copy-content="poetry run pytest --cov=mitmproxy2swagger"><pre>poetry run pytest --cov=mitmproxy2swagger</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">MIT</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ray Tracing in One Weekend (101 pts)]]></title>
            <link>https://raytracing.github.io/books/RayTracingInOneWeekend.html</link>
            <guid>42572602</guid>
            <pubDate>Thu, 02 Jan 2025 07:54:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://raytracing.github.io/books/RayTracingInOneWeekend.html">https://raytracing.github.io/books/RayTracingInOneWeekend.html</a>, See on <a href="https://news.ycombinator.com/item?id=42572602">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>` header (if imperfectly according to some experts). If you
want to use this, you can obtain a random number with the conditions we need as follows:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    ...


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    #include <random>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

    ...


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    inline double random_double() {
        static std::uniform_real_distribution<double> distribution(0.0, 1.0);
        static std::mt19937 generator;
        return distribution(generator);
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

    ...

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [random-double-alt]: <kbd>[rtweekend.h]</kbd> random_double(), alternate implementation]


Generating Pixels with Multiple Samples
----------------------------------------
For a single pixel composed of multiple samples, we'll select samples from the area surrounding the
pixel and average the resulting light (color) values together.

First we'll update the `write_color()` function to account for the number of samples we use: we need
to find the average across all of the samples that we take. To do this, we'll add the full color
from each iteration, and then finish with a single division (by the number of samples) at the end,
before writing out the color. To ensure that the color components of the final result remain within
the proper $[0,1]$ bounds, we'll add and use a small helper function: `interval::clamp(x)`.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class interval {
      public:
        ...

        bool surrounds(double x) const {
            return min &lt; x &amp;&amp; x &lt; max;
        }


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        double clamp(double x) const {
            if (x &lt; min) return min;
            if (x &gt; max) return max;
            return x;
        }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
        ...
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [clamp]: <kbd>[interval.h]</kbd> The interval::clamp() utility function]

Here's the updated `write_color()` function that incorporates the interval clamping function:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    #include "interval.h"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    #include "vec3.h"

    using color = vec3;

    void write_color(std::ostream&amp; out, const color&amp; pixel_color) {
        auto r = pixel_color.x();
        auto g = pixel_color.y();
        auto b = pixel_color.z();

        // Translate the [0,1] component values to the byte range [0,255].
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        static const interval intensity(0.000, 0.999);
        int rbyte = int(256 * intensity.clamp(r));
        int gbyte = int(256 * intensity.clamp(g));
        int bbyte = int(256 * intensity.clamp(b));
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        // Write out the pixel color components.
        out &lt;&lt; rbyte &lt;&lt; ' ' &lt;&lt; gbyte &lt;&lt; ' ' &lt;&lt; bbyte &lt;&lt; '\n';
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [write-color-clamped]: <kbd>[color.h]</kbd> The multi-sample write_color() function]

Now let's update the camera class to define and use a new `camera::get_ray(i,j)` function, which
will generate different samples for each pixel. This function will use a new helper function
`sample_square()` that generates a random sample point within the unit square centered at the
origin. We then transform the random sample from this ideal square back to the particular pixel
we're currently sampling.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class camera {
      public:
        double aspect_ratio      = 1.0;  // Ratio of image width over height
        int    image_width       = 100;  // Rendered image width in pixel count
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        int    samples_per_pixel = 10;   // Count of random samples for each pixel
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        void render(const hittable&amp; world) {
            initialize();

            std::cout &lt;&lt; "P3\n" &lt;&lt; image_width &lt;&lt; ' ' &lt;&lt; image_height &lt;&lt; "\n255\n";

            for (int j = 0; j &lt; image_height; j++) {
                std::clog &lt;&lt; "\rScanlines remaining: " &lt;&lt; (image_height - j) &lt;&lt; ' ' &lt;&lt; std::flush;
                for (int i = 0; i &lt; image_width; i++) {
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
                    color pixel_color(0,0,0);
                    for (int sample = 0; sample &lt; samples_per_pixel; sample++) {
                        ray r = get_ray(i, j);
                        pixel_color += ray_color(r, world);
                    }
                    write_color(std::cout, pixel_samples_scale * pixel_color);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
                }
            }

            std::clog &lt;&lt; "\rDone.                 \n";
        }
        ...
      private:
        int    image_height;         // Rendered image height
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        double pixel_samples_scale;  // Color scale factor for a sum of pixel samples
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
        point3 center;               // Camera center
        point3 pixel00_loc;          // Location of pixel 0, 0
        vec3   pixel_delta_u;        // Offset to pixel to the right
        vec3   pixel_delta_v;        // Offset to pixel below

        void initialize() {
            image_height = int(image_width / aspect_ratio);
            image_height = (image_height &lt; 1) ? 1 : image_height;


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            pixel_samples_scale = 1.0 / samples_per_pixel;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

            center = point3(0, 0, 0);
            ...
        }


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        ray get_ray(int i, int j) const {
            // Construct a camera ray originating from the origin and directed at randomly sampled
            // point around the pixel location i, j.

            auto offset = sample_square();
            auto pixel_sample = pixel00_loc
                              + ((i + offset.x()) * pixel_delta_u)
                              + ((j + offset.y()) * pixel_delta_v);

            auto ray_origin = center;
            auto ray_direction = pixel_sample - ray_origin;

            return ray(ray_origin, ray_direction);
        }

        vec3 sample_square() const {
            // Returns the vector to a random point in the [-.5,-.5]-[+.5,+.5] unit square.
            return vec3(random_double() - 0.5, random_double() - 0.5, 0);
        }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        color ray_color(const ray&amp; r, const hittable&amp; world) const {
            ...
        }
    };

    #endif
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [camera-spp]: <kbd>[camera.h]</kbd> Camera with samples-per-pixel parameter]



(In addition to the new `sample_square()` function above, you'll also find the function
`sample_disk()` in the Github source code. This is included in case you'd like to experiment with
non-square pixels, but we won't be using it in this book. `sample_disk()` depends on the function
`random_in_unit_disk()` which is defined later on.)

<p>
Main is updated to set the new camera parameter.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    int main() {
        ...

        camera cam;

        cam.aspect_ratio      = 16.0 / 9.0;
        cam.image_width       = 400;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        cam.samples_per_pixel = 100;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        cam.render(world);
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [main-spp]: <kbd>[main.cc]</kbd> Setting the new samples-per-pixel parameter]

</p>

<p>
Zooming into the image that is produced, we can see the difference in edge pixels.

  ![<span>Image 6:</span> Before and after antialiasing
  ](../images/img-1.06-antialias-before-after.png class='pixel')

</p>



Diffuse Materials
====================================================================================================
Now that we have objects and multiple rays per pixel, we can make some realistic looking materials.
We’ll start with diffuse materials (also called _matte_). One question is whether we mix and match
geometry and materials (so that we can assign a material to multiple spheres, or vice versa) or if
geometry and materials are tightly bound (which could be useful for procedural objects where the
geometry and material are linked). We’ll go with separate -- which is usual in most renderers -- but
do be aware that there are alternative approaches.

A Simple Diffuse Material
--------------------------
Diffuse objects that don’t emit their own light merely take on the color of their surroundings, but
they do modulate that with their own intrinsic color. Light that reflects off a diffuse surface has
its direction randomized, so, if we send three rays into a crack between two diffuse surfaces they
will each have different random behavior:

  ![Figure [light-bounce]: Light ray bounces](../images/fig-1.09-light-bounce.jpg)

They might also be absorbed rather than reflected. The darker the surface, the more likely the ray
is absorbed (that’s why it's dark!). Really any algorithm that randomizes direction will produce
surfaces that look matte. Let's start with the most intuitive: a surface that randomly bounces a ray
equally in all directions. For this material, a ray that hits the surface has an equal probability
of bouncing in any direction away from the surface.

  ![Figure [random-vec-hor]: Equal reflection above the horizon
  ](../images/fig-1.10-random-vec-horizon.jpg)

This very intuitive material is the simplest kind of diffuse and -- indeed -- many of the first
raytracing papers used this diffuse method (before adopting a more accurate method that we'll be
implementing a little bit later). We don't currently have a way to randomly reflect a ray, so we'll
need to add a few functions to our vector utility header. The first thing we need is the ability to
generate arbitrary random vectors:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class vec3 {
      public:
        ...

        double length_squared() const {
            return e[0]*e[0] + e[1]*e[1] + e[2]*e[2];
        }


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        static vec3 random() {
            return vec3(random_double(), random_double(), random_double());
        }

        static vec3 random(double min, double max) {
            return vec3(random_double(min,max), random_double(min,max), random_double(min,max));
        }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [vec-rand-util]: <kbd>[vec3.h]</kbd> vec3 random utility functions]

Then we need to figure out how to manipulate a random vector so that we only get results that are on
the surface of a hemisphere. There are analytical methods of doing this, but they are actually
surprisingly complicated to understand, and quite a bit complicated to implement. Instead, we'll use
what is typically the easiest algorithm: A rejection method. A rejection method works by repeatedly
generating random samples until we produce a sample that meets the desired criteria. In other words,
keep rejecting bad samples until you find a good one.

There are many equally valid ways of generating a random vector on a hemisphere using the rejection
method, but for our purposes we will go with the simplest, which is:

1. Generate a random vector inside the unit sphere
2. Normalize this vector to extend it to the sphere surface
3. Invert the normalized vector if it falls onto the wrong hemisphere

<p>
First, we will use a rejection method to generate the random vector inside the unit sphere (that is,
a sphere of radius 1). Pick a random point inside the cube enclosing the unit sphere (that is, where
$x$, $y$, and $z$ are all in the range $[-1,+1]$). If this point lies outside the unit
sphere, then generate a new one until we find one that lies inside or on the unit sphere.

  ![Figure [sphere-vec]: Two vectors were rejected before finding a good one (pre-normalization)
  ](../images/fig-1.11-sphere-vec.jpg)

  ![Figure [sphere-vec]: The accepted random vector is normalized to produce a unit vector
  ](../images/fig-1.12-sphere-unit-vec.jpg)

Here's our first draft of the function:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    ...

    inline vec3 unit_vector(const vec3&amp; v) {
        return v / v.length();
    }


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    inline vec3 random_unit_vector() {
        while (true) {
            auto p = vec3::random(-1,1);
            auto lensq = p.length_squared();
            if (lensq &lt;= 1)
                return p / sqrt(lensq);
        }
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [random-in-unit-sphere]: <kbd>[vec3.h]</kbd> The random_unit_vector() function, version one]

</p>

Sadly, we have a small floating-point abstraction leak to deal with. Since floating-point numbers
have finite precision, a very small value can underflow to zero when squared. So if all three
coordinates are small enough (that is, very near the center of the sphere), the norm of the vector
will be zero, and thus normalizing will yield the bogus vector $[\pm\infty, \pm\infty, \pm\infty]$.
To fix this, we'll also reject points that lie inside this "black hole" around the center. With
double precision (64-bit floats), we can safely support values greater than $10^{-160}$.

Here's our more robust function:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    inline vec3 random_unit_vector() {
        while (true) {
            auto p = vec3::random(-1,1);
            auto lensq = p.length_squared();
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            if (1e-160 &lt; lensq &amp;&amp; lensq &lt;= 1)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
                return p / sqrt(lensq);
        }
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [random-in-unit-sphere]: <kbd>[vec3.h]</kbd> The random_unit_vector() function, version one]

<p>
Now that we have a random vector on the surface of the unit sphere, we can determine if it is on the
correct hemisphere by comparing against the surface normal:

  ![Figure [normal-hor]: The normal vector tells us which hemisphere we need
  ](../images/fig-1.13-surface-normal.jpg)

</p>

<p>
We can take the dot product of the surface normal and our random vector to determine if it's in the
correct hemisphere. If the dot product is positive, then the vector is in the correct hemisphere. If
the dot product is negative, then we need to invert the vector.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    ...

    inline vec3 random_unit_vector() {
        while (true) {
            auto p = vec3::random(-1,1);
            auto lensq = p.length_squared();
            if (1e-160 &lt; lensq &amp;&amp; lensq &lt;= 1)
                return p / sqrt(lensq);
        }
    }


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    inline vec3 random_on_hemisphere(const vec3&amp; normal) {
        vec3 on_unit_sphere = random_unit_vector();
        if (dot(on_unit_sphere, normal) &gt; 0.0) // In the same hemisphere as the normal
            return on_unit_sphere;
        else
            return -on_unit_sphere;
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [random-in-hemisphere]: <kbd>[vec3.h]</kbd> The random_on_hemisphere() function]

</p>

If a ray bounces off of a material and keeps 100% of its color, then we say that the material is
_white_. If a ray bounces off of a material and keeps 0% of its color, then we say that the material
is black. As a first demonstration of our new diffuse material we'll set the `ray_color` function to
return 50% of the color from a bounce. We should expect to get a nice gray color.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class camera {
      ...
      private:
        ...
        color ray_color(const ray&amp; r, const hittable&amp; world) const {
            hit_record rec;

            if (world.hit(r, interval(0, infinity), rec)) {
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
                vec3 direction = random_on_hemisphere(rec.normal);
                return 0.5 * ray_color(ray(rec.p, direction), world);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            }

            vec3 unit_direction = unit_vector(r.direction());
            auto a = 0.5*(unit_direction.y() + 1.0);
            return (1.0-a)*color(1.0, 1.0, 1.0) + a*color(0.5, 0.7, 1.0);
        }
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [ray-color-random-unit]: <kbd>[camera.h]</kbd> ray_color() using a random ray direction]

<p>
... Indeed we do get rather nice gray spheres:

  ![<span>Image 7:</span> First render of a diffuse sphere
  ](../images/img-1.07-first-diffuse.png class='pixel')

</p>


Limiting the Number of Child Rays
----------------------------------
There's one potential problem lurking here. Notice that the `ray_color` function is recursive. When
will it stop recursing? When it fails to hit anything. In some cases, however, that may be a long
time -- long enough to blow the stack. To guard against that, let's limit the maximum recursion
depth, returning no light contribution at the maximum depth:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class camera {
      public:
        double aspect_ratio      = 1.0;  // Ratio of image width over height
        int    image_width       = 100;  // Rendered image width in pixel count
        int    samples_per_pixel = 10;   // Count of random samples for each pixel
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        int    max_depth         = 10;   // Maximum number of ray bounces into scene
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        void render(const hittable&amp; world) {
            initialize();

            std::cout &lt;&lt; "P3\n" &lt;&lt; image_width &lt;&lt; ' ' &lt;&lt; image_height &lt;&lt; "\n255\n";

            for (int j = 0; j &lt; image_height; j++) {
                std::clog &lt;&lt; "\rScanlines remaining: " &lt;&lt; (image_height - j) &lt;&lt; ' ' &lt;&lt; std::flush;
                for (int i = 0; i &lt; image_width; i++) {
                    color pixel_color(0,0,0);
                    for (int sample = 0; sample &lt; samples_per_pixel; sample++) {
                        ray r = get_ray(i, j);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
                        pixel_color += ray_color(r, max_depth, world);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
                    }
                    write_color(std::cout, pixel_samples_scale * pixel_color);
                }
            }

            std::clog &lt;&lt; "\rDone.                 \n";
        }
        ...
      private:
        ...
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        color ray_color(const ray&amp; r, int depth, const hittable&amp; world) const {
            // If we've exceeded the ray bounce limit, no more light is gathered.
            if (depth &lt;= 0)
                return color(0,0,0);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

            hit_record rec;

            if (world.hit(r, interval(0, infinity), rec)) {
                vec3 direction = random_on_hemisphere(rec.normal);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
                return 0.5 * ray_color(ray(rec.p, direction), depth-1, world);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            }

            vec3 unit_direction = unit_vector(r.direction());
            auto a = 0.5*(unit_direction.y() + 1.0);
            return (1.0-a)*color(1.0, 1.0, 1.0) + a*color(0.5, 0.7, 1.0);
        }
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [ray-color-depth]: <kbd>[camera.h]</kbd> camera::ray_color() with depth limiting]

<p>
Update the main() function to use this new depth limit:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    int main() {
        ...

        camera cam;

        cam.aspect_ratio      = 16.0 / 9.0;
        cam.image_width       = 400;
        cam.samples_per_pixel = 100;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        cam.max_depth         = 50;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        cam.render(world);
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [main-ray-depth]: <kbd>[main.cc]</kbd> Using the new ray depth limiting]

</p>

<p>
For this very simple scene we should get basically the same result:

  ![<span>Image 8:</span> Second render of a diffuse sphere with limited bounces
  ](../images/img-1.08-second-diffuse.png class='pixel')

</p>


Fixing Shadow Acne
-------------------
There’s also a subtle bug that we need to address. A ray will attempt to accurately calculate the
intersection point when it intersects with a surface. Unfortunately for us, this calculation is
susceptible to floating point rounding errors which can cause the intersection point to be ever so
slightly off. This means that the origin of the next ray, the ray that is randomly scattered off of
the surface, is unlikely to be perfectly flush with the surface. It might be just above the surface.
It might be just below the surface. If the ray's origin is just below the surface then it could
intersect with that surface again. Which means that it will find the nearest surface at
$t=0.00000001$ or whatever floating point approximation the hit function gives us. The simplest hack
to address this is just to ignore hits that are very close to the calculated intersection point:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class camera {
      ...
      private:
        ...
        color ray_color(const ray&amp; r, int depth, const hittable&amp; world) const {
            // If we've exceeded the ray bounce limit, no more light is gathered.
            if (depth &lt;= 0)
                return color(0,0,0);

            hit_record rec;


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            if (world.hit(r, interval(0.001, infinity), rec)) {
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
                vec3 direction = random_on_hemisphere(rec.normal);
                return 0.5 * ray_color(ray(rec.p, direction), depth-1, world);
            }

            vec3 unit_direction = unit_vector(r.direction());
            auto a = 0.5*(unit_direction.y() + 1.0);
            return (1.0-a)*color(1.0, 1.0, 1.0) + a*color(0.5, 0.7, 1.0);
        }
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [reflect-tolerance]: <kbd>[camera.h]</kbd> Calculating reflected ray origins with tolerance]

<p>
This gets rid of the shadow acne problem. Yes it is really called that. Here's the result:

  ![<span>Image 9:</span> Diffuse sphere with no shadow acne
  ](../images/img-1.09-no-acne.png class='pixel')

</p>


True Lambertian Reflection
---------------------------
Scattering reflected rays evenly about the hemisphere produces a nice soft diffuse model, but we can
definitely do better. A more accurate representation of real diffuse objects is the _Lambertian_
distribution. This distribution scatters reflected rays in a manner that is proportional to $\cos
(\phi)$, where $\phi$ is the angle between the reflected ray and the surface normal. This means that
a reflected ray is most likely to scatter in a direction near the surface normal, and less likely to
scatter in directions away from the normal. This non-uniform Lambertian distribution does a better
job of modeling material reflection in the real world than our previous uniform scattering.

We can create this distribution by adding a random unit vector to the normal vector. At the point of
intersection on a surface there is the hit point, $\mathbf{p}$, and there is the normal of the
surface, $\mathbf{n}$. At the point of intersection, this surface has exactly two sides, so there
can only be two unique unit spheres tangent to any intersection point (one unique sphere for each
side of the surface). These two unit spheres will be displaced from the surface by the length of
their radius, which is exactly one for a unit sphere.

One sphere will be displaced in the direction of the surface's normal ($\mathbf{n}$) and one sphere
will be displaced in the opposite direction ($\mathbf{-n}$). This leaves us with two spheres of unit
size that will only be _just_ touching the surface at the intersection point. From this, one of the
spheres will have its center at $(\mathbf{P} + \mathbf{n})$ and the other sphere will have its
center at $(\mathbf{P} - \mathbf{n})$. The sphere with a center at $(\mathbf{P} - \mathbf{n})$ is
considered _inside_ the surface, whereas the sphere with center $(\mathbf{P} + \mathbf{n})$ is
considered _outside_ the surface.

We want to select the tangent unit sphere that is on the same side of the surface as the ray origin.
Pick a random point $\mathbf{S}$ on this unit radius sphere and send a ray from the hit point
$\mathbf{P}$ to the random point $\mathbf{S}$ (this is the vector $(\mathbf{S}-\mathbf{P})$):

  ![Figure [rand-unitvec]: Randomly generating a vector according to Lambertian distribution
  ](../images/fig-1.14-rand-unitvec.jpg)

<p>
The change is actually fairly minimal:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class camera {
        ...
        color ray_color(const ray&amp; r, int depth, const hittable&amp; world) const {
            // If we've exceeded the ray bounce limit, no more light is gathered.
            if (depth &lt;= 0)
                return color(0,0,0);

            hit_record rec;

            if (world.hit(r, interval(0.001, infinity), rec)) {
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
                vec3 direction = rec.normal + random_unit_vector();
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
                return 0.5 * ray_color(ray(rec.p, direction), depth-1, world);
            }

            vec3 unit_direction = unit_vector(r.direction());
            auto a = 0.5*(unit_direction.y() + 1.0);
            return (1.0-a)*color(1.0, 1.0, 1.0) + a*color(0.5, 0.7, 1.0);
        }
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [ray-color-unit-sphere]: <kbd>[camera.h]</kbd> ray_color() with replacement diffuse]

</p>

<p>
After rendering we get a similar image:

  ![<span>Image 10:</span> Correct rendering of Lambertian spheres
  ](../images/img-1.10-correct-lambertian.png class='pixel')

</p>

It's hard to tell the difference between these two diffuse methods, given that our scene of two
spheres is so simple, but you should be able to notice two important visual differences:

  1. The shadows are more pronounced after the change
  2. Both spheres are tinted blue from the sky after the change

Both of these changes are due to the less uniform scattering of the light rays--more rays are
scattering toward the normal. This means that for diffuse objects, they will appear _darker_ because
less light bounces toward the camera. For the shadows, more light bounces straight-up, so the area
underneath the sphere is darker.

Not a lot of common, everyday objects are perfectly diffuse, so our visual intuition of how these
objects behave under light can be poorly formed. As scenes become more complicated over the course
of the book, you are encouraged to switch between the different diffuse renderers presented here.
Most scenes of interest will contain a large amount of diffuse materials. You can gain valuable
insight by understanding the effect of different diffuse methods on the lighting of a scene.


Using Gamma Correction for Accurate Color Intensity
----------------------------------------------------
Note the shadowing under the sphere. The picture is very dark, but our spheres only absorb half the
energy of each bounce, so they are 50% reflectors. The spheres should look pretty bright (in real
life, a light grey) but they appear to be rather dark. We can see this more clearly if we walk
through the full brightness gamut for our diffuse material. We start by setting the reflectance of
the `ray_color` function from `0.5` (50%) to `0.1` (10%):

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class camera {
        ...
        color ray_color(const ray&amp; r, int depth, const hittable&amp; world) const {
            // If we've exceeded the ray bounce limit, no more light is gathered.
            if (depth &lt;= 0)
                return color(0,0,0);

            hit_record rec;

            if (world.hit(r, interval(0.001, infinity), rec)) {
                vec3 direction = rec.normal + random_unit_vector();
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
                return 0.1 * ray_color(ray(rec.p, direction), depth-1, world);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            }

            vec3 unit_direction = unit_vector(r.direction());
            auto a = 0.5*(unit_direction.y() + 1.0);
            return (1.0-a)*color(1.0, 1.0, 1.0) + a*color(0.5, 0.7, 1.0);
        }
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [ray-color-gamut]: <kbd>[camera.h]</kbd> ray_color() with 10% reflectance]

We render out at this new 10% reflectance. We then set reflectance to 30% and render again. We
repeat for 50%, 70%, and finally 90%. You can overlay these images from left to right in the photo
editor of your choice and you should get a very nice visual representation of the increasing
brightness of your chosen gamut. This is the one that we've been working with so far: 

![<span>Image 11:</span> The gamut of our renderer so far
](../images/img-1.11-linear-gamut.png class='pixel')

If you look closely, or if you use a color picker, you should notice that the 50% reflectance render
(the one in the middle) is far too dark to be half-way between white and black (middle-gray).
Indeed, the 70% reflector is closer to middle-gray. The reason for this is that almost all computer
programs assume that an image is “gamma corrected” before being written into an image file. This
means that the 0 to 1 values have some transform applied before being stored as a byte. Images with
data that are written without being transformed are said to be in _linear space_, whereas images
that are transformed are said to be in _gamma space_. It is likely that the image viewer you are
using is expecting an image in gamma space, but we are giving it an image in linear space. This is
the reason why our image appears inaccurately dark.

There are many good reasons for why images should be stored in gamma space, but for our purposes we
just need to be aware of it. We are going to transform our data into gamma space so that our image
viewer can more accurately display our image. As a simple approximation, we can use “gamma 2” as our
transform, which is the power that you use when going from gamma space to linear space. We need to
go from linear space to gamma space, which means taking the inverse of "gamma 2", which means an
exponent of $1/\mathit{gamma}$, which is just the square-root. We'll also want to ensure that we
robustly handle negative inputs.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    inline double linear_to_gamma(double linear_component)
    {
        if (linear_component &gt; 0)
            return std::sqrt(linear_component);

        return 0;
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

    void write_color(std::ostream&amp; out, const color&amp; pixel_color) {
        auto r = pixel_color.x();
        auto g = pixel_color.y();
        auto b = pixel_color.z();


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        // Apply a linear to gamma transform for gamma 2
        r = linear_to_gamma(r);
        g = linear_to_gamma(g);
        b = linear_to_gamma(b);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        // Translate the [0,1] component values to the byte range [0,255].
        static const interval intensity(0.000, 0.999);
        int rbyte = int(256 * intensity.clamp(r));
        int gbyte = int(256 * intensity.clamp(g));
        int bbyte = int(256 * intensity.clamp(b));

        // Write out the pixel color components.
        out &lt;&lt; rbyte &lt;&lt; ' ' &lt;&lt; gbyte &lt;&lt; ' ' &lt;&lt; bbyte &lt;&lt; '\n';
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [write-color-gamma]: <kbd>[color.h]</kbd> write_color(), with gamma correction]

<p>
Using this gamma correction, we now get a much more consistent ramp from darkness to lightness:

  ![<span>Image 12:</span> The gamut of our renderer, gamma-corrected
  ](../images/img-1.12-gamma-gamut.png class='pixel')

</p>


Metal
====================================================================================================

An Abstract Class for Materials
--------------------------------
If we want different objects to have different materials, we have a design decision. We could have a
universal material type with lots of parameters so any individual material type could just ignore
the parameters that don't affect it. This is not a bad approach. Or we could have an abstract
material class that encapsulates unique behavior. I am a fan of the latter approach. For our program
the material needs to do two things:

  1. Produce a scattered ray (or say it absorbed the incident ray).
  2. If scattered, say how much the ray should be attenuated.

<p>
This suggests the abstract class:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    #ifndef MATERIAL_H
    #define MATERIAL_H

    #include "hittable.h"

    class material {
      public:
        virtual ~material() = default;

        virtual bool scatter(
            const ray&amp; r_in, const hit_record&amp; rec, color&amp; attenuation, ray&amp; scattered
        ) const {
            return false;
        }
    };

    #endif
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [material-initial]: <kbd>[material.h]</kbd> The material class]

</p>


A Data Structure to Describe Ray-Object Intersections
------------------------------------------------------
The `hit_record` is to avoid a bunch of arguments so we can stuff whatever info we want in there.
You can use arguments instead of an encapsulated type, it’s just a matter of taste. Hittables and
materials need to be able to reference the other's type in code so there is some circularity of the
references. In C++ we add the line `class material;` to tell the compiler that `material` is a class
that will be defined later. Since we're just specifying a pointer to the class, the compiler doesn't
need to know the details of the class, solving the circular reference issue.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    class material;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

    class hit_record {
      public:
        point3 p;
        vec3 normal;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        shared_ptr<material> mat;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
        double t;
        bool front_face;

        void set_face_normal(const ray&amp; r, const vec3&amp; outward_normal) {
            front_face = dot(r.direction(), outward_normal) &lt; 0;
            normal = front_face ? outward_normal : -outward_normal;
        }
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [hit-with-material]: <kbd>[hittable.h]</kbd> Hit record with added material pointer]

`hit_record` is just a way to stuff a bunch of arguments into a class so we can send them as a
group. When a ray hits a surface (a particular sphere for example), the material pointer in the
`hit_record` will be set to point at the material pointer the sphere was given when it was set up in
`main()` when we start. When the `ray_color()` routine gets the `hit_record` it can call member
functions of the material pointer to find out what ray, if any, is scattered.

<div><p>
To achieve this, `hit_record` needs to be told the material that is assigned to the sphere.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class sphere : public hittable {
      public:
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        sphere(const point3&amp; center, double radius) : center(center), radius(std::fmax(0,radius)) {
            // TODO: Initialize the material pointer `mat`.
        }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        bool hit(const ray&amp; r, interval ray_t, hit_record&amp; rec) const override {
            ...

            rec.t = root;
            rec.p = r.at(rec.t);
            vec3 outward_normal = (rec.p - center) / radius;
            rec.set_face_normal(r, outward_normal);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            rec.mat = mat;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

            return true;
        }

      private:
        point3 center;
        double radius;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        shared_ptr</p><material> mat;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [sphere-material]: <kbd>[sphere.h]</kbd> Ray-sphere intersection with added material information]

</material></div>


Modeling Light Scatter and Reflectance
---------------------------------------
Here and throughout these books we will use the term _albedo_ (Latin for "whiteness"). Albedo is a
precise technical term in some disciplines, but in all cases it is used to define some form of
_fractional reflectance_. Albedo will vary with material color and (as we will later implement for
glass materials) can also vary with incident viewing direction (the direction of the incoming ray).

Lambertian (diffuse) reflectance can either always scatter and attenuate light according to its
reflectance $R$, or it can sometimes scatter (with probability $1-R$) with no attenuation (where a
ray that isn't scattered is just absorbed into the material). It could also be a mixture of both
those strategies. We will choose to always scatter, so implementing Lambertian materials becomes a
simple task:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class material {
        ...
    };


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    class lambertian : public material {
      public:
        lambertian(const color&amp; albedo) : albedo(albedo) {}

        bool scatter(const ray&amp; r_in, const hit_record&amp; rec, color&amp; attenuation, ray&amp; scattered)
        const override {
            auto scatter_direction = rec.normal + random_unit_vector();
            scattered = ray(rec.p, scatter_direction);
            attenuation = albedo;
            return true;
        }

      private:
        color albedo;
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [lambertian-initial]: <kbd>[material.h]</kbd> The new lambertian material class]

Note the third option: we could scatter with some fixed probability $p$ and have attenuation be
$\mathit{albedo}/p$. Your choice.

If you read the code above carefully, you'll notice a small chance of mischief. If the random unit
vector we generate is exactly opposite the normal vector, the two will sum to zero, which will
result in a zero scatter direction vector. This leads to bad scenarios later on (infinities and
NaNs), so we need to intercept the condition before we pass it on.

In service of this, we'll create a new vector method -- `vec3::near_zero()` -- that returns true if
the vector is very close to zero in all dimensions.

The following changes will use the C++ standard library function `std::fabs`, which returns the
absolute value of its input.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class vec3 {
        ...

        double length_squared() const {
            return e[0]*e[0] + e[1]*e[1] + e[2]*e[2];
        }


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        bool near_zero() const {
            // Return true if the vector is close to zero in all dimensions.
            auto s = 1e-8;
            return (std::fabs(e[0]) &lt; s) &amp;&amp; (std::fabs(e[1]) &lt; s) &amp;&amp; (std::fabs(e[2]) &lt; s);
        }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        ...
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [vec3-near-zero]: <kbd>[vec3.h]</kbd> The vec3::near_zero() method]


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class lambertian : public material {
      public:
        lambertian(const color&amp; albedo) : albedo(albedo) {}

        bool scatter(const ray&amp; r_in, const hit_record&amp; rec, color&amp; attenuation, ray&amp; scattered)
        const override {
            auto scatter_direction = rec.normal + random_unit_vector();


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            // Catch degenerate scatter direction
            if (scatter_direction.near_zero())
                scatter_direction = rec.normal;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

            scattered = ray(rec.p, scatter_direction);
            attenuation = albedo;
            return true;
        }

      private:
        color albedo;
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [lambertian-catch-zero]: <kbd>[material.h]</kbd> Lambertian scatter, bullet-proof]


Mirrored Light Reflection
--------------------------
For polished metals the ray won’t be randomly scattered. The key question is: How does a ray get
reflected from a metal mirror? Vector math is our friend here:

  ![Figure [reflection]: Ray reflection](../images/fig-1.15-reflection.jpg)

The reflected ray direction in red is just $\mathbf{v} + 2\mathbf{b}$. In our design, $\mathbf{n}$
is a unit vector (length one), but $\mathbf{v}$ may not be. To get the vector $\mathbf{b}$, we scale
the normal vector by the length of the projection of $\mathbf{v}$ onto $\mathbf{n}$, which is given
by the dot product $\mathbf{v} \cdot \mathbf{n}$. (If $\mathbf{n}$ were not a unit vector, we would
also need to divide this dot product by the length of $\mathbf{n}$.) Finally, because $\mathbf{v}$
points _into_ the surface, and we want $\mathbf{b}$ to point _out_ of the surface, we need to negate
this projection length.

Putting everything together, we get the following computation of the reflected vector:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    ...

    inline vec3 random_on_hemisphere(const vec3&amp; normal) {
        ...
    }


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    inline vec3 reflect(const vec3&amp; v, const vec3&amp; n) {
        return v - 2*dot(v,n)*n;
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [vec3-reflect]: <kbd>[vec3.h]</kbd> vec3 reflection function]

<p>
The metal material just reflects rays using that formula:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    ...

    class lambertian : public material {
        ...
    };


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    class metal : public material {
      public:
        metal(const color&amp; albedo) : albedo(albedo) {}

        bool scatter(const ray&amp; r_in, const hit_record&amp; rec, color&amp; attenuation, ray&amp; scattered)
        const override {
            vec3 reflected = reflect(r_in.direction(), rec.normal);
            scattered = ray(rec.p, reflected);
            attenuation = albedo;
            return true;
        }

      private:
        color albedo;
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [metal-material]: <kbd>[material.h]</kbd> Metal material with reflectance function]

</p>

<p>
We need to modify the `ray_color()` function for all of our changes:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    #include "hittable.h"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    #include "material.h"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    ...

    class camera {
      ...
      private:
        ...
        color ray_color(const ray&amp; r, int depth, const hittable&amp; world) const {
            // If we've exceeded the ray bounce limit, no more light is gathered.
            if (depth &lt;= 0)
                return color(0,0,0);

            hit_record rec;

            if (world.hit(r, interval(0.001, infinity), rec)) {
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
                ray scattered;
                color attenuation;
                if (rec.mat-&gt;scatter(r, rec, attenuation, scattered))
                    return attenuation * ray_color(scattered, depth-1, world);
                return color(0,0,0);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            }

            vec3 unit_direction = unit_vector(r.direction());
            auto a = 0.5*(unit_direction.y() + 1.0);
            return (1.0-a)*color(1.0, 1.0, 1.0) + a*color(0.5, 0.7, 1.0);
        }
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [ray-color-scatter]: <kbd>[camera.h]</kbd> Ray color with scattered reflectance]

</p>

Now we'll update the `sphere` constructor to initialize the material pointer `mat`:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class sphere : public hittable {
      public:
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        sphere(const point3&amp; center, double radius, shared_ptr<material> mat)
          : center(center), radius(std::fmax(0,radius)), mat(mat) {}
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        ...
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [sphere-ctor-material]: <kbd>[sphere.h]</kbd> Initializing sphere with a material]


A Scene with Metal Spheres
---------------------------
Now let’s add some metal spheres to our scene:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    #include "rtweekend.h"

    #include "camera.h"
    #include "hittable.h"
    #include "hittable_list.h"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    #include "material.h"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    #include "sphere.h"

    int main() {
        hittable_list world;


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        auto material_ground = make_shared<lambertian>(color(0.8, 0.8, 0.0));
        auto material_center = make_shared<lambertian>(color(0.1, 0.2, 0.5));
        auto material_left   = make_shared<metal>(color(0.8, 0.8, 0.8));
        auto material_right  = make_shared<metal>(color(0.8, 0.6, 0.2));

        world.add(make_shared<sphere>(point3( 0.0, -100.5, -1.0), 100.0, material_ground));
        world.add(make_shared<sphere>(point3( 0.0,    0.0, -1.2),   0.5, material_center));
        world.add(make_shared<sphere>(point3(-1.0,    0.0, -1.0),   0.5, material_left));
        world.add(make_shared<sphere>(point3( 1.0,    0.0, -1.0),   0.5, material_right));
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        camera cam;

        cam.aspect_ratio      = 16.0 / 9.0;
        cam.image_width       = 400;
        cam.samples_per_pixel = 100;
        cam.max_depth         = 50;

        cam.render(world);
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [scene-with-metal]: <kbd>[main.cc]</kbd> Scene with metal spheres]

<p>
Which gives:

  ![<span>Image 13:</span> Shiny metal
  ](../images/img-1.13-metal-shiny.png class='pixel')

</p>


Fuzzy Reflection
-----------------
We can also randomize the reflected direction by using a small sphere and choosing a new endpoint
for the ray. We'll use a random point from the surface of a sphere centered on the original
endpoint, scaled by the fuzz factor.

  ![Figure [reflect-fuzzy]: Generating fuzzed reflection rays](../images/fig-1.16-reflect-fuzzy.jpg)

The bigger the fuzz sphere, the fuzzier the reflections will be. This suggests adding a fuzziness
parameter that is just the radius of the sphere (so zero is no perturbation). The catch is that for
big spheres or grazing rays, we may scatter below the surface. We can just have the surface absorb
those.

Also note that in order for the fuzz sphere to make sense, it needs to be consistently scaled
compared to the reflection vector, which can vary in length arbitrarily. To address this, we need to
normalize the reflected ray.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class metal : public material {
      public:
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        metal(const color&amp; albedo, double fuzz) : albedo(albedo), fuzz(fuzz &lt; 1 ? fuzz : 1) {}
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        bool scatter(const ray&amp; r_in, const hit_record&amp; rec, color&amp; attenuation, ray&amp; scattered)
        const override {
            vec3 reflected = reflect(r_in.direction(), rec.normal);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            reflected = unit_vector(reflected) + (fuzz * random_unit_vector());
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            scattered = ray(rec.p, reflected);
            attenuation = albedo;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            return (dot(scattered.direction(), rec.normal) &gt; 0);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
        }

      private:
        color albedo;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        double fuzz;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [metal-fuzz]: <kbd>[material.h]</kbd> Metal material fuzziness]

<div><p>
We can try that out by adding fuzziness 0.3 and 1.0 to the metals:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    int main() {
        ...
        auto material_ground = make_shared</p><lambertian>(color(0.8, 0.8, 0.0));
        auto material_center = make_shared<lambertian>(color(0.1, 0.2, 0.5));
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        auto material_left   = make_shared<metal>(color(0.8, 0.8, 0.8), 0.3);
        auto material_right  = make_shared<metal>(color(0.8, 0.6, 0.2), 1.0);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
        ...
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [metal-fuzz-spheres]: <kbd>[main.cc]</kbd> Metal spheres with fuzziness]

  ![<span>Image 14:</span> Fuzzed metal
  ](../images/img-1.14-metal-fuzz.png class='pixel')

</metal></metal></lambertian></lambertian></div>


Dielectrics
====================================================================================================
Clear materials such as water, glass, and diamond are dielectrics. When a light ray hits them, it
splits into a reflected ray and a refracted (transmitted) ray. We’ll handle that by randomly
choosing between reflection and refraction, only generating one scattered ray per interaction.

As a quick review of terms, a _reflected_ ray hits a surface and then "bounces" off in a new
direction.

A _refracted_ ray bends as it transitions from a material's surroundings into the material itself
(as with glass or water). This is why a pencil looks bent when partially inserted in water.

The amount that a refracted ray bends is determined by the material's _refractive index_. Generally,
this is a single value that describes how much light bends when entering a material from a vacuum.
Glass has a refractive index of something like 1.5–1.7, diamond is around 2.4, and air has a
small refractive index of 1.000293.

When a transparent material is embedded in a different transparent material, you can describe the
refraction with a relative refraction index: the refractive index of the object's material divided
by the refractive index of the surrounding material. For example, if you want to render a glass ball
under water, then the glass ball would have an effective refractive index of 1.125. This is given by
the refractive index of glass (1.5) divided by the refractive index of water (1.333).

You can find the refractive index of most common materials with a quick internet search.


Refraction
-----------
The hardest part to debug is the refracted ray. I usually first just have all the light refract if
there is a refraction ray at all. For this project, I tried to put two glass balls in our scene, and
I got this (I have not told you how to do this right or wrong yet, but soon!):

  ![<span>Image 15:</span> Glass first
  ](../images/img-1.15-glass-first.png class='pixel')

Is that right? Glass balls look odd in real life. But no, it isn’t right. The world should be
flipped upside down and no weird black stuff. I just printed out the ray straight through the middle
of the image and it was clearly wrong. That often does the job.


Snell's Law
------------
The refraction is described by Snell’s law:

  $$ \eta \cdot \sin\theta = \eta' \cdot \sin\theta' $$

Where $\theta$ and $\theta'$ are the angles from the normal, and $\eta$ and $\eta'$ (pronounced
"eta" and "eta prime") are the refractive indices. The geometry is:

  ![Figure [refraction]: Ray refraction](../images/fig-1.17-refraction.jpg)

In order to determine the direction of the refracted ray, we have to solve for $\sin\theta'$:

  $$ \sin\theta' = \frac{\eta}{\eta'} \cdot \sin\theta $$

On the refracted side of the surface there is a refracted ray $\mathbf{R'}$ and a normal
$\mathbf{n'}$, and there exists an angle, $\theta'$, between them. We can split $\mathbf{R'}$ into
the parts of the ray that are perpendicular to $\mathbf{n'}$ and parallel to $\mathbf{n'}$:

  $$ \mathbf{R'} = \mathbf{R'}_{\bot} + \mathbf{R'}_{\parallel} $$

If we solve for $\mathbf{R'}_{\bot}$ and $\mathbf{R'}_{\parallel}$ we get:

  $$ \mathbf{R'}_{\bot} = \frac{\eta}{\eta'} (\mathbf{R} + \cos\theta \mathbf{n}) $$
  $$ \mathbf{R'}_{\parallel} = -\sqrt{1 - |\mathbf{R'}_{\bot}|^2} \mathbf{n} $$

You can go ahead and prove this for yourself if you want, but we will treat it as fact and move on.
The rest of the book will not require you to understand the proof.

We know the value of every term on the right-hand side except for $\cos\theta$. It is well known
that the dot product of two vectors can be explained in terms of the cosine of the angle between
them:

  $$ \mathbf{a} \cdot \mathbf{b} = |\mathbf{a}| |\mathbf{b}| \cos\theta $$

If we restrict $\mathbf{a}$ and $\mathbf{b}$ to be unit vectors:

  $$ \mathbf{a} \cdot \mathbf{b} = \cos\theta $$

We can now rewrite $\mathbf{R'}_{\bot}$ in terms of known quantities:

  $$ \mathbf{R'}_{\bot} =
     \frac{\eta}{\eta'} (\mathbf{R} + (\mathbf{-R} \cdot \mathbf{n}) \mathbf{n}) $$

<p>
When we combine them back together, we can write a function to calculate $\mathbf{R'}$:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    ...

    inline vec3 reflect(const vec3&amp; v, const vec3&amp; n) {
        return v - 2*dot(v,n)*n;
    }


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    inline vec3 refract(const vec3&amp; uv, const vec3&amp; n, double etai_over_etat) {
        auto cos_theta = std::fmin(dot(-uv, n), 1.0);
        vec3 r_out_perp =  etai_over_etat * (uv + cos_theta*n);
        vec3 r_out_parallel = -std::sqrt(std::fabs(1.0 - r_out_perp.length_squared())) * n;
        return r_out_perp + r_out_parallel;
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [refract]: <kbd>[vec3.h]</kbd> Refraction function]

</p>

<p>
And the dielectric material that always refracts is:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    ...

    class metal : public material {
        ...
    };


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    class dielectric : public material {
      public:
        dielectric(double refraction_index) : refraction_index(refraction_index) {}

        bool scatter(const ray&amp; r_in, const hit_record&amp; rec, color&amp; attenuation, ray&amp; scattered)
        const override {
            attenuation = color(1.0, 1.0, 1.0);
            double ri = rec.front_face ? (1.0/refraction_index) : refraction_index;

            vec3 unit_direction = unit_vector(r_in.direction());
            vec3 refracted = refract(unit_direction, rec.normal, ri);

            scattered = ray(rec.p, refracted);
            return true;
        }

      private:
        // Refractive index in vacuum or air, or the ratio of the material's refractive index over
        // the refractive index of the enclosing media
        double refraction_index;
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [dielectric-always-refract]: <kbd>[material.h]</kbd> Dielectric material class that always refracts]

</p>

<div><p>
Now we'll update the scene to illustrate refraction by changing the left sphere to glass, which has
an index of refraction of approximately 1.5.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    auto material_ground = make_shared</p><lambertian>(color(0.8, 0.8, 0.0));
    auto material_center = make_shared<lambertian>(color(0.1, 0.2, 0.5));
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    auto material_left   = make_shared<dielectric>(1.50);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    auto material_right  = make_shared<metal>(color(0.8, 0.6, 0.2), 1.0);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [two-glass]: <kbd>[main.cc]</kbd> Changing the left sphere to glass]

</metal></dielectric></lambertian></lambertian></div>

<p>
This gives us the following result:

  ![<span>Image 16:</span> Glass sphere that always refracts
  ](../images/img-1.16-glass-always-refract.png class='pixel')

</p>


Total Internal Reflection
--------------------------
One troublesome practical issue with refraction is that there are ray angles for which no solution
is possible using Snell's law. When a ray enters a medium of lower index of refraction at a
sufficiently glancing angle, it can refract with an angle greater than 90°. If we refer back to
Snell's law and the derivation of $\sin\theta'$:

  $$ \sin\theta' = \frac{\eta}{\eta'} \cdot \sin\theta $$

If the ray is inside glass and outside is air ($\eta = 1.5$ and $\eta' = 1.0$):

  $$ \sin\theta' = \frac{1.5}{1.0} \cdot \sin\theta $$

<p>
The value of $\sin\theta'$ cannot be greater than 1. So, if,

  $$ \frac{1.5}{1.0} \cdot \sin\theta &gt; 1.0 $$

the equality between the two sides of the equation is broken, and a solution cannot exist. If a
solution does not exist, the glass cannot refract, and therefore must reflect the ray:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    if (ri * sin_theta &gt; 1.0) {
        // Must Reflect
        ...
    } else {
        // Can Refract
        ...
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [dielectric-can-refract-1]: <kbd>[material.h]</kbd> Determining if the ray can refract]

</p>

Here all the light is reflected, and because in practice that is usually inside solid objects, it is
called _total internal reflection_. This is why sometimes the water-to-air boundary acts as a
perfect mirror when you are submerged -- if you're under water looking up, you can see things above
the water, but when you are close to the surface and looking sideways, the water surface looks like
a mirror.

We can solve for `sin_theta` using the trigonometric qualities:

  $$ \sin\theta  = \sqrt{1 - \cos^2\theta} $$

and

  $$ \cos\theta = \mathbf{R} \cdot \mathbf{n} $$

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    double cos_theta = std::fmin(dot(-unit_direction, rec.normal), 1.0);
    double sin_theta = std::sqrt(1.0 - cos_theta*cos_theta);

    if (ri * sin_theta &gt; 1.0) {
        // Must Reflect
        ...
    } else {
        // Can Refract
        ...
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [dielectric-can-refract-2]: <kbd>[material.h]</kbd> Determining if the ray can refract]

<p>
And the dielectric material that always refracts (when possible) is:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class dielectric : public material {
      public:
        dielectric(double refraction_index) : refraction_index(refraction_index) {}

        bool scatter(const ray&amp; r_in, const hit_record&amp; rec, color&amp; attenuation, ray&amp; scattered)
        const override {
            attenuation = color(1.0, 1.0, 1.0);
            double ri = rec.front_face ? (1.0/refraction_index) : refraction_index;

            vec3 unit_direction = unit_vector(r_in.direction());
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            double cos_theta = std::fmin(dot(-unit_direction, rec.normal), 1.0);
            double sin_theta = std::sqrt(1.0 - cos_theta*cos_theta);

            bool cannot_refract = ri * sin_theta &gt; 1.0;
            vec3 direction;

            if (cannot_refract)
                direction = reflect(unit_direction, rec.normal);
            else
                direction = refract(unit_direction, rec.normal, ri);

            scattered = ray(rec.p, direction);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            return true;
        }

      private:
        // Refractive index in vacuum or air, or the ratio of the material's refractive index over
        // the refractive index of the enclosing media
        double refraction_index;
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [dielectric-with-refraction]: <kbd>[material.h]</kbd> Dielectric material class with reflection]

</p>

Attenuation is always 1 -- the glass surface absorbs nothing.

If we render the prior scene with the new `dielectric::scatter()` function, we see … no change. Huh?

Well, it turns out that given a sphere of material with an index of refraction greater than air,
there's no incident angle that will yield total internal reflection -- neither at the ray-sphere
entrance point nor at the ray exit. This is due to the geometry of spheres, as a grazing incoming
ray will always be bent to a smaller angle, and then bent back to the original angle on exit.

So how can we illustrate total internal reflection? Well, if the sphere has an index of refraction
_less_ than the medium it's in, then we can hit it with shallow grazing angles, getting total
_external_ reflection. That should be good enough to observe the effect.

We'll model a world filled with water (index of refraction approximately 1.33), and change the
sphere material to air (index of refraction 1.00) -- an air bubble! To do this, change the left
sphere material's index of refraction to

  $$\frac{\text{index of refraction of air}}{\text{index of refraction of water}}$$

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    auto material_ground = make_shared<lambertian>(color(0.8, 0.8, 0.0));
    auto material_center = make_shared<lambertian>(color(0.1, 0.2, 0.5));
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    auto material_left   = make_shared<dielectric>(1.00 / 1.33);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    auto material_right  = make_shared<metal>(color(0.8, 0.6, 0.2), 1.0);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [two-glass]: <kbd>[main.cc]</kbd> Left sphere is an air bubble in water]

<p>
This change yields the following render:

  ![<span>Image 17:</span> Air bubble sometimes refracts, sometimes reflects
  ](../images/img-1.17-air-bubble-total-reflection.png class='pixel')

Here you can see that more-or-less direct rays refract, while glancing rays reflect.

</p>


Schlick Approximation
----------------------
Now real glass has reflectivity that varies with angle -- look at a window at a steep angle and it
becomes a mirror. There is a big ugly equation for that, but almost everybody uses a cheap and
surprisingly accurate polynomial approximation by Christophe Schlick. This yields our full glass
material:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class dielectric : public material {
      public:
        dielectric(double refraction_index) : refraction_index(refraction_index) {}

        bool scatter(const ray&amp; r_in, const hit_record&amp; rec, color&amp; attenuation, ray&amp; scattered)
        const override {
            attenuation = color(1.0, 1.0, 1.0);
            double ri = rec.front_face ? (1.0/refraction_index) : refraction_index;

            vec3 unit_direction = unit_vector(r_in.direction());
            double cos_theta = std::fmin(dot(-unit_direction, rec.normal), 1.0);
            double sin_theta = std::sqrt(1.0 - cos_theta*cos_theta);

            bool cannot_refract = ri * sin_theta &gt; 1.0;
            vec3 direction;


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            if (cannot_refract || reflectance(cos_theta, ri) &gt; random_double())
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
                direction = reflect(unit_direction, rec.normal);
            else
                direction = refract(unit_direction, rec.normal, ri);

            scattered = ray(rec.p, direction);
            return true;
        }

      private:
        // Refractive index in vacuum or air, or the ratio of the material's refractive index over
        // the refractive index of the enclosing media
        double refraction_index;


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        static double reflectance(double cosine, double refraction_index) {
            // Use Schlick's approximation for reflectance.
            auto r0 = (1 - refraction_index) / (1 + refraction_index);
            r0 = r0*r0;
            return r0 + (1-r0)*std::pow((1 - cosine),5);
        }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [glass]: <kbd>[material.h]</kbd> Full glass material]


Modeling a Hollow Glass Sphere
-------------------------------
Let's model a hollow glass sphere. This is a sphere of some thickness with another sphere of air
inside it. If you think about the path of a ray going through such an object, it will hit the outer
sphere, refract, hit the inner sphere (assuming we do hit it), refract a second time, and travel
through the air inside. Then it will continue on, hit the inside surface of the inner sphere,
refract back, then hit the inside surface of the outer sphere, and finally refract and exit back
into the scene atmosphere.

The outer sphere is just modeled with a standard glass sphere, with a refractive index of around
1.50 (modeling a refraction from the outside air into glass). The inner sphere is a bit different
because _its_ refractive index should be relative to the material of the surrounding outer sphere,
thus modeling a transition from glass into the inner air.

This is actually simple to specify, as the `refraction_index` parameter to the dielectric material
can be interpreted as the _ratio_ of the refractive index of the object divided by the refractive
index of the enclosing medium. In this case, the inner sphere would have an refractive index of air
(the inner sphere material) over the index of refraction of glass (the enclosing medium), or
$1.00/1.50 = 0.67$.

Here's the code:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    ...
    auto material_ground = make_shared<lambertian>(color(0.8, 0.8, 0.0));
    auto material_center = make_shared<lambertian>(color(0.1, 0.2, 0.5));
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    auto material_left   = make_shared<dielectric>(1.50);
    auto material_bubble = make_shared<dielectric>(1.00 / 1.50);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    auto material_right  = make_shared<metal>(color(0.8, 0.6, 0.2), 0.0);

    world.add(make_shared<sphere>(point3( 0.0, -100.5, -1.0), 100.0, material_ground));
    world.add(make_shared<sphere>(point3( 0.0,    0.0, -1.2),   0.5, material_center));
    world.add(make_shared<sphere>(point3(-1.0,    0.0, -1.0),   0.5, material_left));
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    world.add(make_shared<sphere>(point3(-1.0,    0.0, -1.0),   0.4, material_bubble));
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    world.add(make_shared<sphere>(point3( 1.0,    0.0, -1.0),   0.5, material_right));
    ...
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [scene-hollow-glass]: <kbd>[main.cc]</kbd> Scene with hollow glass sphere]

<p>
And here's the result:

  ![<span>Image 18:</span> A hollow glass sphere
  ](../images/img-1.18-glass-hollow.png class='pixel')

</p>



Positionable Camera
====================================================================================================
Cameras, like dielectrics, are a pain to debug, so I always develop mine incrementally. First, let’s
allow for an adjustable field of view (_fov_). This is the visual angle from edge to edge of the
rendered image. Since our image is not square, the fov is different horizontally and vertically. I
always use vertical fov. I also usually specify it in degrees and change to radians inside a
constructor -- a matter of personal taste.


Camera Viewing Geometry
------------------------
First, we'll keep the rays coming from the origin and heading to the $z = -1$ plane. We could make
it the $z = -2$ plane, or whatever, as long as we made $h$ a ratio to that distance. Here is our
setup:

  ![Figure [cam-view-geom]: Camera viewing geometry (from the side)
  ](../images/fig-1.18-cam-view-geom.jpg)

<p>
This implies $h = \tan(\frac{\theta}{2})$. Our camera now becomes:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class camera {
      public:
        double aspect_ratio      = 1.0;  // Ratio of image width over height
        int    image_width       = 100;  // Rendered image width in pixel count
        int    samples_per_pixel = 10;   // Count of random samples for each pixel
        int    max_depth         = 10;   // Maximum number of ray bounces into scene


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        double vfov = 90;  // Vertical view angle (field of view)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        void render(const hittable&amp; world) {
        ...

      private:
        ...

        void initialize() {
            image_height = int(image_width / aspect_ratio);
            image_height = (image_height &lt; 1) ? 1 : image_height;

            pixel_samples_scale = 1.0 / samples_per_pixel;

            center = point3(0, 0, 0);

            // Determine viewport dimensions.
            auto focal_length = 1.0;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            auto theta = degrees_to_radians(vfov);
            auto h = std::tan(theta/2);
            auto viewport_height = 2 * h * focal_length;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            auto viewport_width = viewport_height * (double(image_width)/image_height);

            // Calculate the vectors across the horizontal and down the vertical viewport edges.
            auto viewport_u = vec3(viewport_width, 0, 0);
            auto viewport_v = vec3(0, -viewport_height, 0);

            // Calculate the horizontal and vertical delta vectors from pixel to pixel.
            pixel_delta_u = viewport_u / image_width;
            pixel_delta_v = viewport_v / image_height;

            // Calculate the location of the upper left pixel.
            auto viewport_upper_left =
                center - vec3(0, 0, focal_length) - viewport_u/2 - viewport_v/2;
            pixel00_loc = viewport_upper_left + 0.5 * (pixel_delta_u + pixel_delta_v);
        }

        ...
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [camera-fov]: <kbd>[camera.h]</kbd> Camera with adjustable field-of-view (fov)]

</p>

<div><p>
We'll test out these changes with a simple scene of two touching spheres, using a 90° field of view.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    int main() {
        hittable_list world;


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        auto R = std::cos(pi/4);

        auto material_left  = make_shared</p><lambertian>(color(0,0,1));
        auto material_right = make_shared<lambertian>(color(1,0,0));

        world.add(make_shared<sphere>(point3(-R, 0, -1), R, material_left));
        world.add(make_shared<sphere>(point3( R, 0, -1), R, material_right));
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        camera cam;

        cam.aspect_ratio      = 16.0 / 9.0;
        cam.image_width       = 400;
        cam.samples_per_pixel = 100;
        cam.max_depth         = 50;


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        cam.vfov = 90;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        cam.render(world);
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [scene-wide-angle]: <kbd>[main.cc]</kbd> Scene with wide-angle camera]

</sphere></sphere></lambertian></lambertian></div>

<p>
This gives us the rendering:

  ![<span>Image 19:</span> A wide-angle view
  ](../images/img-1.19-wide-view.png class='pixel')

</p>


Positioning and Orienting the Camera
-------------------------------------
To get an arbitrary viewpoint, let’s first name the points we care about. We’ll call the position
where we place the camera _lookfrom_, and the point we look at _lookat_. (Later, if you want, you
could define a direction to look in instead of a point to look at.)

We also need a way to specify the roll, or sideways tilt, of the camera: the rotation around the
lookat-lookfrom axis. Another way to think about it is that even if you keep `lookfrom` and `lookat`
constant, you can still rotate your head around your nose. What we need is a way to specify an “up”
vector for the camera.

  ![Figure [cam-view-dir]: Camera view direction](../images/fig-1.19-cam-view-dir.jpg)

We can specify any up vector we want, as long as it's not parallel to the view direction. Project
this up vector onto the plane orthogonal to the view direction to get a camera-relative up vector. I
use the common convention of naming this the “view up” (_vup_) vector. After a few cross products
and vector normalizations, we now have a complete orthonormal basis $(u,v,w)$ to describe our
camera’s orientation. $u$ will be the unit vector pointing to camera right, $v$ is the unit vector
pointing to camera up, $w$ is the unit vector pointing opposite the view direction (since we use
right-hand coordinates), and the camera center is at the origin.

  ![Figure [cam-view-up]: Camera view up direction](../images/fig-1.20-cam-view-up.jpg)

Like before, when our fixed camera faced $-Z$, our arbitrary view camera faces $-w$. Keep in mind
that we can -- but we don’t have to -- use world up $(0,1,0)$ to specify vup. This is convenient and
will naturally keep your camera horizontally level until you decide to experiment with crazy camera
angles.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class camera {
      public:
        double aspect_ratio      = 1.0;  // Ratio of image width over height
        int    image_width       = 100;  // Rendered image width in pixel count
        int    samples_per_pixel = 10;   // Count of random samples for each pixel
        int    max_depth         = 10;   // Maximum number of ray bounces into scene

        double vfov     = 90;              // Vertical view angle (field of view)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        point3 lookfrom = point3(0,0,0);   // Point camera is looking from
        point3 lookat   = point3(0,0,-1);  // Point camera is looking at
        vec3   vup      = vec3(0,1,0);     // Camera-relative "up" direction
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        ...

      private:
        int    image_height;         // Rendered image height
        double pixel_samples_scale;  // Color scale factor for a sum of pixel samples
        point3 center;               // Camera center
        point3 pixel00_loc;          // Location of pixel 0, 0
        vec3   pixel_delta_u;        // Offset to pixel to the right
        vec3   pixel_delta_v;        // Offset to pixel below
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        vec3   u, v, w;              // Camera frame basis vectors
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        void initialize() {
            image_height = int(image_width / aspect_ratio);
            image_height = (image_height &lt; 1) ? 1 : image_height;

            pixel_samples_scale = 1.0 / samples_per_pixel;


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            center = lookfrom;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

            // Determine viewport dimensions.
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            auto focal_length = (lookfrom - lookat).length();
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            auto theta = degrees_to_radians(vfov);
            auto h = std::tan(theta/2);
            auto viewport_height = 2 * h * focal_length;
            auto viewport_width = viewport_height * (double(image_width)/image_height);


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            // Calculate the u,v,w unit basis vectors for the camera coordinate frame.
            w = unit_vector(lookfrom - lookat);
            u = unit_vector(cross(vup, w));
            v = cross(w, u);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

            // Calculate the vectors across the horizontal and down the vertical viewport edges.
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            vec3 viewport_u = viewport_width * u;    // Vector across viewport horizontal edge
            vec3 viewport_v = viewport_height * -v;  // Vector down viewport vertical edge
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

            // Calculate the horizontal and vertical delta vectors from pixel to pixel.
            pixel_delta_u = viewport_u / image_width;
            pixel_delta_v = viewport_v / image_height;

            // Calculate the location of the upper left pixel.
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            auto viewport_upper_left = center - (focal_length * w) - viewport_u/2 - viewport_v/2;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            pixel00_loc = viewport_upper_left + 0.5 * (pixel_delta_u + pixel_delta_v);
        }

        ...

      private:
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [camera-orient]: <kbd>[camera.h]</kbd> Positionable and orientable camera]

<div><p>
We'll change back to the prior scene, and use the new viewpoint:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    int main() {
        hittable_list world;


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        auto material_ground = make_shared</p><lambertian>(color(0.8, 0.8, 0.0));
        auto material_center = make_shared<lambertian>(color(0.1, 0.2, 0.5));
        auto material_left   = make_shared<dielectric>(1.50);
        auto material_bubble = make_shared<dielectric>(1.00 / 1.50);
        auto material_right  = make_shared<metal>(color(0.8, 0.6, 0.2), 1.0);

        world.add(make_shared<sphere>(point3( 0.0, -100.5, -1.0), 100.0, material_ground));
        world.add(make_shared<sphere>(point3( 0.0,    0.0, -1.2),   0.5, material_center));
        world.add(make_shared<sphere>(point3(-1.0,    0.0, -1.0),   0.5, material_left));
        world.add(make_shared<sphere>(point3(-1.0,    0.0, -1.0),   0.4, material_bubble));
        world.add(make_shared<sphere>(point3( 1.0,    0.0, -1.0),   0.5, material_right));
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        camera cam;

        cam.aspect_ratio      = 16.0 / 9.0;
        cam.image_width       = 400;
        cam.samples_per_pixel = 100;
        cam.max_depth         = 50;


        cam.vfov     = 90;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        cam.lookfrom = point3(-2,2,1);
        cam.lookat   = point3(0,0,-1);
        cam.vup      = vec3(0,1,0);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        cam.render(world);
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [scene-free-view]: <kbd>[main.cc]</kbd> Scene with alternate viewpoint]

</sphere></sphere></sphere></sphere></sphere></metal></dielectric></dielectric></lambertian></lambertian></div>

<p>
to get:

  ![<span>Image 20:</span> A distant view
  ](../images/img-1.20-view-distant.png class='pixel')

</p>

<p>
And we can change field of view:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        cam.vfov     = 20;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [change-field-view]: <kbd>[main.cc]</kbd> Change field of view]

</p>

<p>
to get:

  ![<span>Image 21:</span> Zooming in](../images/img-1.21-view-zoom.png class='pixel')

</p>



Defocus Blur
====================================================================================================
Now our final feature: _defocus blur_. Note, photographers call this _depth of field_, so be sure to
only use the term _defocus blur_ among your raytracing friends.

The reason we have defocus blur in real cameras is because they need a big hole (rather than just a
pinhole) through which to gather light. A large hole would defocus everything, but if we stick a
lens in front of the film/sensor, there will be a certain distance at which everything is in focus.
Objects placed at that distance will appear in focus and will linearly appear blurrier the further
they are from that distance. You can think of a lens this way: all light rays coming _from_ a
specific point at the focus distance -- and that hit the lens -- will be bent back _to_ a single
point on the image sensor.

We call the distance between the camera center and the plane where everything is in perfect focus
the _focus distance_. Be aware that the focus distance is not usually the same as the focal length
-- the _focal length_ is the distance between the camera center and the image plane. For our model,
however, these two will have the same value, as we will put our pixel grid right on the focus plane,
which is _focus distance_ away from the camera center.

In a physical camera, the focus distance is controlled by the distance between the lens and the
film/sensor. That is why you see the lens move relative to the camera when you change what is in
focus (that may happen in your phone camera too, but the sensor moves). The “aperture” is a hole to
control how big the lens is effectively. For a real camera, if you need more light you make the
aperture bigger, and will get more blur for objects away from the focus distance. For our virtual
camera, we can have a perfect sensor and never need more light, so we only use an aperture when we
want defocus blur.


A Thin Lens Approximation
--------------------------
A real camera has a complicated compound lens. For our code, we could simulate the order: sensor,
then lens, then aperture. Then we could figure out where to send the rays, and flip the image after
it's computed (the image is projected upside down on the film). Graphics people, however, usually
use a thin lens approximation:

  ![Figure [cam-lens]: Camera lens model](../images/fig-1.21-cam-lens.jpg)

We don’t need to simulate any of the inside of the camera -- for the purposes of rendering an image
outside the camera, that would be unnecessary complexity. Instead, I usually start rays from an
infinitely thin circular "lens", and send them toward the pixel of interest on the focus plane
(`focal_length` away from the lens), where everything on that plane in the 3D world is in perfect
focus.

In practice, we accomplish this by placing the viewport in this plane. Putting everything together:

  1. The focus plane is orthogonal to the camera view direction.
  2. The focus distance is the distance between the camera center and the focus plane.
  3. The viewport lies on the focus plane, centered on the camera view direction vector.
  4. The grid of pixel locations lies inside the viewport (located in the 3D world).
  5. Random image sample locations are chosen from the region around the current pixel location.
  6. The camera fires rays from random points on the lens through the current image sample location.

  ![Figure [cam-film-plane]: Camera focus plane](../images/fig-1.22-cam-film-plane.jpg)


Generating Sample Rays
-----------------------
Without defocus blur, all scene rays originate from the camera center (or `lookfrom`). In order to
accomplish defocus blur, we construct a disk centered at the camera center. The larger the radius,
the greater the defocus blur. You can think of our original camera as having a defocus disk of
radius zero (no blur at all), so all rays originated at the disk center (`lookfrom`).

So, how large should the defocus disk be? Since the size of this disk controls how much defocus blur
we get, that should be a parameter of the camera class. We could just take the radius of the disk as
a camera parameter, but the blur would vary depending on the projection distance. A slightly easier
parameter is to specify the angle of the cone with apex at viewport center and base (defocus disk)
at the camera center. This should give you more consistent results as you vary the focus distance
for a given shot.

Since we'll be choosing random points from the defocus disk, we'll need a function to do that:
`random_in_unit_disk()`. This function works using the same kind of method we use in
`random_in_unit_sphere()`, just for two dimensions.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    ...

    inline vec3 unit_vector(const vec3&amp; u) {
        return v / v.length();
    }


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
    inline vec3 random_in_unit_disk() {
        while (true) {
            auto p = vec3(random_double(-1,1), random_double(-1,1), 0);
            if (p.length_squared() &lt; 1)
                return p;
        }
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

    ...
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [rand-in-unit-disk]: <kbd>[vec3.h]</kbd> Generate random point inside unit disk]

Now let's update the camera to originate rays from the defocus disk:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    class camera {
      public:
        double aspect_ratio      = 1.0;  // Ratio of image width over height
        int    image_width       = 100;  // Rendered image width in pixel count
        int    samples_per_pixel = 10;   // Count of random samples for each pixel
        int    max_depth         = 10;   // Maximum number of ray bounces into scene

        double vfov     = 90;              // Vertical view angle (field of view)
        point3 lookfrom = point3(0,0,0);   // Point camera is looking from
        point3 lookat   = point3(0,0,-1);  // Point camera is looking at
        vec3   vup      = vec3(0,1,0);     // Camera-relative "up" direction


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        double defocus_angle = 0;  // Variation angle of rays through each pixel
        double focus_dist = 10;    // Distance from camera lookfrom point to plane of perfect focus
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        ...

      private:
        int    image_height;         // Rendered image height
        double pixel_samples_scale;  // Color scale factor for a sum of pixel samples
        point3 center;               // Camera center
        point3 pixel00_loc;          // Location of pixel 0, 0
        vec3   pixel_delta_u;        // Offset to pixel to the right
        vec3   pixel_delta_v;        // Offset to pixel below
        vec3   u, v, w;              // Camera frame basis vectors
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        vec3   defocus_disk_u;       // Defocus disk horizontal radius
        vec3   defocus_disk_v;       // Defocus disk vertical radius
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        void initialize() {
            image_height = int(image_width / aspect_ratio);
            image_height = (image_height &lt; 1) ? 1 : image_height;

            pixel_samples_scale = 1.0 / samples_per_pixel;

            center = lookfrom;

            // Determine viewport dimensions.
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ delete
            auto focal_length = (lookfrom - lookat).length();
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            auto theta = degrees_to_radians(vfov);
            auto h = std::tan(theta/2);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            auto viewport_height = 2 * h * focus_dist;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            auto viewport_width = viewport_height * (double(image_width)/image_height);

            // Calculate the u,v,w unit basis vectors for the camera coordinate frame.
            w = unit_vector(lookfrom - lookat);
            u = unit_vector(cross(vup, w));
            v = cross(w, u);

            // Calculate the vectors across the horizontal and down the vertical viewport edges.
            vec3 viewport_u = viewport_width * u;    // Vector across viewport horizontal edge
            vec3 viewport_v = viewport_height * -v;  // Vector down viewport vertical edge

            // Calculate the horizontal and vertical delta vectors to the next pixel.
            pixel_delta_u = viewport_u / image_width;
            pixel_delta_v = viewport_v / image_height;

            // Calculate the location of the upper left pixel.
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            auto viewport_upper_left = center - (focus_dist * w) - viewport_u/2 - viewport_v/2;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            pixel00_loc = viewport_upper_left + 0.5 * (pixel_delta_u + pixel_delta_v);


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            // Calculate the camera defocus disk basis vectors.
            auto defocus_radius = focus_dist * std::tan(degrees_to_radians(defocus_angle / 2));
            defocus_disk_u = u * defocus_radius;
            defocus_disk_v = v * defocus_radius;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
        }

        ray get_ray(int i, int j) const {
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            // Construct a camera ray originating from the defocus disk and directed at a randomly
            // sampled point around the pixel location i, j.
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

            auto offset = sample_square();
            auto pixel_sample = pixel00_loc
                              + ((i + offset.x()) * pixel_delta_u)
                              + ((j + offset.y()) * pixel_delta_v);


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
            auto ray_origin = (defocus_angle &lt;= 0) ? center : defocus_disk_sample();
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
            auto ray_direction = pixel_sample - ray_origin;

            return ray(ray_origin, ray_direction);
        }

        vec3 sample_square() const {
            ...
        }


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        point3 defocus_disk_sample() const {
            // Returns a random point in the camera defocus disk.
            auto p = random_in_unit_disk();
            return center + (p[0] * defocus_disk_u) + (p[1] * defocus_disk_v);
        }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        color ray_color(const ray&amp; r, int depth, const hittable&amp; world) const {
            ...
        }
    };
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [camera-dof]: <kbd>[camera.h]</kbd> Camera with adjustable depth-of-field]

<p>
Using a large aperture:

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    int main() {
        ...

        camera cam;

        cam.aspect_ratio      = 16.0 / 9.0;
        cam.image_width       = 400;
        cam.samples_per_pixel = 100;
        cam.max_depth         = 50;

        cam.vfov     = 20;
        cam.lookfrom = point3(-2,2,1);
        cam.lookat   = point3(0,0,-1);
        cam.vup      = vec3(0,1,0);


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        cam.defocus_angle = 10.0;
        cam.focus_dist    = 3.4;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        cam.render(world);
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [scene-camera-dof]: <kbd>[main.cc]</kbd> Scene camera with depth-of-field]

</p>

<p>
We get:

  ![<span>Image 22:</span> Spheres with depth-of-field
  ](../images/img-1.22-depth-of-field.png class='pixel')

</p>



Where Next?
====================================================================================================

A Final Render
---------------
Let’s make the image on the cover of this book -- lots of random spheres.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++
    int main() {
        hittable_list world;


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        auto ground_material = make_shared<lambertian>(color(0.5, 0.5, 0.5));
        world.add(make_shared<sphere>(point3(0,-1000,0), 1000, ground_material));

        for (int a = -11; a &lt; 11; a++) {
            for (int b = -11; b &lt; 11; b++) {
                auto choose_mat = random_double();
                point3 center(a + 0.9*random_double(), 0.2, b + 0.9*random_double());

                if ((center - point3(4, 0.2, 0)).length() &gt; 0.9) {
                    shared_ptr<material> sphere_material;

                    if (choose_mat &lt; 0.8) {
                        // diffuse
                        auto albedo = color::random() * color::random();
                        sphere_material = make_shared<lambertian>(albedo);
                        world.add(make_shared<sphere>(center, 0.2, sphere_material));
                    } else if (choose_mat &lt; 0.95) {
                        // metal
                        auto albedo = color::random(0.5, 1);
                        auto fuzz = random_double(0, 0.5);
                        sphere_material = make_shared<metal>(albedo, fuzz);
                        world.add(make_shared<sphere>(center, 0.2, sphere_material));
                    } else {
                        // glass
                        sphere_material = make_shared<dielectric>(1.5);
                        world.add(make_shared<sphere>(center, 0.2, sphere_material));
                    }
                }
            }
        }

        auto material1 = make_shared<dielectric>(1.5);
        world.add(make_shared<sphere>(point3(0, 1, 0), 1.0, material1));

        auto material2 = make_shared<lambertian>(color(0.4, 0.2, 0.1));
        world.add(make_shared<sphere>(point3(-4, 1, 0), 1.0, material2));

        auto material3 = make_shared<metal>(color(0.7, 0.6, 0.5), 0.0);
        world.add(make_shared<sphere>(point3(4, 1, 0), 1.0, material3));
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        camera cam;


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++ highlight
        cam.aspect_ratio      = 16.0 / 9.0;
        cam.image_width       = 1200;
        cam.samples_per_pixel = 500;
        cam.max_depth         = 50;

        cam.vfov     = 20;
        cam.lookfrom = point3(13,2,3);
        cam.lookat   = point3(0,0,0);
        cam.vup      = vec3(0,1,0);

        cam.defocus_angle = 0.6;
        cam.focus_dist    = 10.0;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ C++

        cam.render(world);
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [Listing [scene-final]: <kbd>[main.cc]</kbd> Final scene]

(Note that the code above differs slightly from the project sample code: the `samples_per_pixel` is
set to 500 above for a high-quality image that will take quite a while to render. The project source
code uses a value of 10 in the interest of reasonable run times while developing and validating.)

<p>
This gives:

  ![<span>Image 23:</span> Final scene](../images/img-1.23-book1-final.jpg)

</p>

An interesting thing you might note is the glass balls don’t really have shadows which makes them
look like they are floating. This is not a bug -- you don’t see glass balls much in real life, where
they also look a bit strange, and indeed seem to float on cloudy days. A point on the big sphere
under a glass ball still has lots of light hitting it because the sky is re-ordered rather than
blocked.


Next Steps
-----------
You now have a cool ray tracer! What next?


### Book 2: _Ray Tracing: The Next Week_
The second book in this series builds on the ray tracer you've developed here. This includes new
features such as:

  - Motion blur -- Realistically render moving objects.
  - Bounding volume hierarchies -- speeding up the rendering of complex scenes.
  - Texture maps -- placing images on objects.
  - Perlin noise -- a random noise generator very useful for many techniques.
  - Quadrilaterals -- something to render besides spheres! Also, the foundation to implement disks,
    triangles, rings or just about any other 2D primitive.
  - Lights -- add sources of light to your scene.
  - Transforms -- useful for placing and rotating objects.
  - Volumetric rendering -- render smoke, clouds and other gaseous volumes.


### Book 3: _Ray Tracing: The Rest of Your Life_
This book expands again on the content from the second book. A lot of this book is about improving
both the rendered image quality and the renderer performance, and focuses on generating the _right_
rays and accumulating them appropriately.

This book is for the reader seriously interested in writing professional-level ray tracers, and/or
interested in the foundation to implement advanced effects like subsurface scattering or nested
dielectrics.


### Other Directions
There are so many additional directions you can take from here, including techniques we haven't
(yet?) covered in this series. These include:

**Triangles** -- Most cool models are in triangle form. The model I/O is the worst and almost
everybody tries to get somebody else’s code to do this. This also includes efficiently handling
large _meshes_ of triangles, which present their own challenges.

**Parallelism** -- Run $N$ copies of your code on $N$ cores with different random seeds. Average the
$N$ runs. This averaging can also be done hierarchically where $N/2$ pairs can be averaged to get
$N/4$ images, and pairs of those can be averaged. That method of parallelism should extend well into
the thousands of cores with very little coding.

**Shadow Rays** -- When firing rays at light sources, you can determine exactly how a particular
point is shadowed. With this, you can render crisp or soft shadows, adding another degreee of
realism to your scenes.

Have fun, and please send me your cool images!



                               (insert acknowledgments.md.html here)



Citing This Book
====================================================================================================
Consistent citations make it easier to identify the source, location and versions of this work. If
you are citing this book, we ask that you try to use one of the following forms if possible.

Basic Data
-----------
  - **Title (series)**: “Ray Tracing in One Weekend Series”
  - **Title (book)**: “Ray Tracing in One Weekend”
  - **Author**: Peter Shirley, Trevor David Black, Steve Hollasch
  - **Version/Edition**: v4.0.1
  - **Date**: 2024-08-30
  - **URL (series)**: <https: raytracing.github.io="">
  - **URL (book)**: <https: raytracing.github.io="" books="" raytracinginoneweekend.html="">

Snippets
---------

  ### Markdown
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    [_Ray Tracing in One Weekend_](https://raytracing.github.io/books/RayTracingInOneWeekend.html)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  ### HTML
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    <a href="https://raytracing.github.io/books/RayTracingInOneWeekend.html">
        <cite>Ray Tracing in One Weekend</cite>
    </a>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  ### LaTeX and BibTex
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ~\cite{Shirley2024RTW1}

    @misc{Shirley2024RTW1,
       title = {Ray Tracing in One Weekend},
       author = {Peter Shirley, Trevor David Black, Steve Hollasch},
       year = {2024},
       month = {August},
       note = {\small \texttt{https://raytracing.github.io/books/RayTracingInOneWeekend.html}},
       url = {https://raytracing.github.io/books/RayTracingInOneWeekend.html}
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  ### BibLaTeX
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    \usepackage{biblatex}

    ~\cite{Shirley2024RTW1}

    @online{Shirley2024RTW1,
       title = {Ray Tracing in One Weekend},
       author = {Peter Shirley, Trevor David Black, Steve Hollasch},
       year = {2024},
       month = {August},
       url = {https://raytracing.github.io/books/RayTracingInOneWeekend.html}
    }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  ### IEEE
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    “Ray Tracing in One Weekend.” raytracing.github.io/books/RayTracingInOneWeekend.html
    (accessed MMM. DD, YYYY)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  ### MLA:
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Ray Tracing in One Weekend. raytracing.github.io/books/RayTracingInOneWeekend.html
    Accessed DD MMM. YYYY.
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



[Peter Shirley]:      https://github.com/petershirley
[Steve Hollasch]:     https://github.com/hollasch
[Trevor David Black]: https://github.com/trevordblack

[discussions]:        https://github.com/RayTracing/raytracing.github.io/discussions/
[gfx-codex]:          https://graphicscodex.com/
[readme]:             ../README.md
[releases]:           https://github.com/RayTracing/raytracing.github.io/releases/
[repo]:               https://github.com/RayTracing/raytracing.github.io/
[square-pixels]:      https://www.researchgate.net/publication/244986797
[wiki-further]:       https://github.com/RayTracing/raytracing.github.io/wiki/Further-Readings



<!-- Markdeep: https://casual-effects.com/markdeep/ -->





</https:></https:></sphere></metal></sphere></lambertian></sphere></dielectric></sphere></dielectric></sphere></metal></sphere></lambertian></material></sphere></lambertian></sphere></sphere></sphere></sphere></sphere></metal></dielectric></dielectric></lambertian></lambertian></metal></dielectric></lambertian></lambertian></sphere></sphere></sphere></sphere></metal></metal></lambertian></lambertian></material></material></double></random></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Standard Ebooks Public Domain Day 2025 in Literature (132 pts)]]></title>
            <link>https://standardebooks.org/blog/public-domain-day-2025</link>
            <guid>42572573</guid>
            <pubDate>Thu, 02 Jan 2025 07:46:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://standardebooks.org/blog/public-domain-day-2025">https://standardebooks.org/blog/public-domain-day-2025</a>, See on <a href="https://news.ycombinator.com/item?id=42572573">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
		
		<hgroup>
			
			<p>Read 20 of the best books entering the public domain in 2025</p>
		</hgroup>
				<picture data-caption="The Reader. Harold Knight, circa 1910">
			<source srcset="https://standardebooks.org/images/the-reader@2x.avif 2x, https://standardebooks.org/images/the-reader.avif 1x" type="image/avif">
			<source srcset="https://standardebooks.org/images/the-reader@2x.jpg 2x, https://standardebooks.org/images/the-reader.jpg 1x" type="image/jpg">
			<img src="https://standardebooks.org/images/the-reader@2x.jpg" alt="An oil painting of a woman reading a book in front of a bookcase.">
		</picture>
		<p>Happy Public Domain Day!</p>
		<p>Around the world, people celebrate Public Domain Day on January 1, the day in which copyright expires on some older works and they enter the public domain in many different countries.</p>
		<p>In the U.S. Constitution, copyright terms were meant to be very limited in order to “promote the Progress of Science and useful Arts.” The first copyright act, written in 1790 by the founding fathers themselves, set the term to be up to twenty-eight years.</p>
		<p>But since then, powerful corporations have repeatedly extended the length of copyright to promote not the progress of society, but their profit. The result is that today in the U.S., work only enters the public domain ninety-five years after publication—locking our culture away for <em>nearly a century</em>.</p>
		<p>2019 was the year in which new works were finally scheduled to enter the public domain, ending this long, corporate-dictated cultural winter. And as that year drew closer, it became clear that these corporations <em>wouldn’t</em> try to extend copyright yet again—making it the first year in almost a century in which a significant amount of art and literature once again entered the U.S. public domain, free for anyone in the U.S. to read, use, share, remix, build upon, and enjoy.</p>
		<p>Ever since then, we’ve been celebrating Public Domain Day by preparing some of the year’s biggest literary hits for you to read on January 1.</p>
		<hr>
		<p><strong>On January 1, 2025, books published in 1929 enter the U.S. public domain.</strong></p>
		<p>And 1929 was a literary doozy!</p>
		<p>Books by <a href="https://standardebooks.org/ebooks/william-faulkner">William Faulkner</a>, <a href="https://standardebooks.org/ebooks/ernest-hemingway">Ernest Hemingway</a>, <a href="https://standardebooks.org/ebooks/mahatma-gandhi">Mahatma Gandhi</a>, and <a href="https://standardebooks.org/ebooks/john-steinbeck">John Steinbeck</a> enter the U.S. public domain. Joining these esteemed names is the English translation of <i><a href="https://standardebooks.org/ebooks/erich-maria-remarque/all-quiet-on-the-western-front/a-w-wheen">All Quiet on the Western Front</a></i>, the war novel so grisly that it was banned in parts of Europe; <i><a href="https://standardebooks.org/ebooks/dashiell-hammett/red-harvest">Red Harvest</a></i>, the first novel starring the <a href="https://standardebooks.org/collections/continental-op">Continental Op</a>, the hard-boiled noir detective who formed the archetype for every hard-drinking, fedora-wearing private eye to grace page and screen since; and much more.</p>
		<p>Our friends at the Public Domain Review have written about some <a href="https://publicdomainreview.org/blog/2025/01/public-domain-day-2025/">other things that enter the public domain this year, too</a>.</p>
		<p>These past few months at Standard Ebooks, our volunteers have been working hard to prepare a selection of the books published in 1929 in advance of Public Domain Day. We’re excited to finally be able to share these <strong>20 new free ebooks</strong> with you!</p>
					<ul>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/william-faulkner/the-sound-and-the-fury">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/william-faulkner_the-sound-and-the-fury-cb9da030-cover@2x.avif 2x, https://standardebooks.org/images/covers/william-faulkner_the-sound-and-the-fury-cb9da030-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/william-faulkner_the-sound-and-the-fury-cb9da030-cover@2x.jpg 2x, https://standardebooks.org/images/covers/william-faulkner_the-sound-and-the-fury-cb9da030-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/william-faulkner_the-sound-and-the-fury-cb9da030-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/william-faulkner/the-sound-and-the-fury">The Sound and the Fury</a>
							</h2>
							
							<p>Faulkner’s widely-acclaimed masterpiece is well-known in America, as it’s taught in high schools across the country. In it we follow the Compson family, an aristocratic family in Mississippi, and their slow decline into poverty and ruin. What makes the novel so special—and what lends it its reputation as a challenging read—is its stream-of-consciousness style, in which Faulkner attempts to narrate the characters’ thoughts directly to the reader.</p><p><i>The Sound and the Fury</i> was an essential step in developing that modernist prose style, and is still considered to be one of the greatest works of American literature.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/william-faulkner/the-sound-and-the-fury">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/erich-maria-remarque/all-quiet-on-the-western-front/a-w-wheen">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/erich-maria-remarque_all-quiet-on-the-western-front_a-w-wheen-7be7c501-cover@2x.avif 2x, https://standardebooks.org/images/covers/erich-maria-remarque_all-quiet-on-the-western-front_a-w-wheen-7be7c501-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/erich-maria-remarque_all-quiet-on-the-western-front_a-w-wheen-7be7c501-cover@2x.jpg 2x, https://standardebooks.org/images/covers/erich-maria-remarque_all-quiet-on-the-western-front_a-w-wheen-7be7c501-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/erich-maria-remarque_all-quiet-on-the-western-front_a-w-wheen-7be7c501-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/erich-maria-remarque/all-quiet-on-the-western-front/a-w-wheen">All Quiet on the Western Front</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/erich-maria-remarque">Erich Maria Remarque</a></p>
							<p>One of the greatest war novels to come from any conflict, Erich Maria Remarque’s grisly tale of the brutality and horror of the German trenches during the Great War was so powerful that it earned him nominations for the Nobel Prizes in <em>both</em> Literature and Peace, and was soon widely banned in a Europe that was preparing for a second cataclysmic conflict.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/erich-maria-remarque/all-quiet-on-the-western-front/a-w-wheen">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/ernest-hemingway/a-farewell-to-arms">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/ernest-hemingway_a-farewell-to-arms-4b1bb46d-cover@2x.avif 2x, https://standardebooks.org/images/covers/ernest-hemingway_a-farewell-to-arms-4b1bb46d-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/ernest-hemingway_a-farewell-to-arms-4b1bb46d-cover@2x.jpg 2x, https://standardebooks.org/images/covers/ernest-hemingway_a-farewell-to-arms-4b1bb46d-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/ernest-hemingway_a-farewell-to-arms-4b1bb46d-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/ernest-hemingway/a-farewell-to-arms">A Farewell to Arms</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/ernest-hemingway">Ernest Hemingway</a></p>
							<p>Called “the premier American war novel from World War I,” Hemingway’s semi-autobiographical story of an American ambulance driver serving in the Italian front, and a bright and cynical British nurse, cemented his reputation as one of the generation’s foremost literary figures. Unlike Remarque, whose <i>All Quiet on the Western Front</i> paints the war’s destruction in full color, Hemingway’s story is one of the mundanity of war—of the quotidian smallness that underpins even the most horrific of events.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/ernest-hemingway/a-farewell-to-arms">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/mahatma-gandhi/the-story-of-my-experiments-with-truth/mahadev-desai">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/mahatma-gandhi_the-story-of-my-experiments-with-truth_mahadev-desai-6268485c-cover@2x.avif 2x, https://standardebooks.org/images/covers/mahatma-gandhi_the-story-of-my-experiments-with-truth_mahadev-desai-6268485c-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/mahatma-gandhi_the-story-of-my-experiments-with-truth_mahadev-desai-6268485c-cover@2x.jpg 2x, https://standardebooks.org/images/covers/mahatma-gandhi_the-story-of-my-experiments-with-truth_mahadev-desai-6268485c-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/mahatma-gandhi_the-story-of-my-experiments-with-truth_mahadev-desai-6268485c-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/mahatma-gandhi/the-story-of-my-experiments-with-truth/mahadev-desai">The Story of My Experiments with Truth</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/mahatma-gandhi">Mahatma Gandhi</a></p>
							<p>Mahatma Gandhi, father of the nation to post-colonial India, writes the story of his early life through 1921. He covers his childhood and his parents, his travels and his experiences with prejudice, how his interest in political activity and nonviolence developed throughout the years, and more. Despite this detailed treatment of his life, Gandhi asserts in the introduction that his purpose was not to write a “real autobiography,” but rather to “tell the story of my experiments with truth, and as my life consist of nothing but experiments.”</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/mahatma-gandhi/the-story-of-my-experiments-with-truth/mahadev-desai">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/john-steinbeck/cup-of-gold">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/john-steinbeck_cup-of-gold-b93303a4-cover@2x.avif 2x, https://standardebooks.org/images/covers/john-steinbeck_cup-of-gold-b93303a4-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/john-steinbeck_cup-of-gold-b93303a4-cover@2x.jpg 2x, https://standardebooks.org/images/covers/john-steinbeck_cup-of-gold-b93303a4-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/john-steinbeck_cup-of-gold-b93303a4-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/john-steinbeck/cup-of-gold">Cup of Gold</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/john-steinbeck">John Steinbeck</a></p>
							<p><i>Cup of Gold</i> is John Steinbeck’s first novel, the swashbuckling story of the real-life Captain Morgan, legendary pirate. Little of Morgan’s actual life is known, but Steinbeck fills in the blanks of this rich historical fiction with rich portraits of Caribbean ports and flourishes of magical realism.</p><p>While one might expect a rollicking tale of adventure, the novel is actually a deep meditation on the pursuit of—and inability to find—true happiness, and its skillful craft deftly foreshadows Steinbeck’s later ascension to literary titanhood.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/john-steinbeck/cup-of-gold">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/dashiell-hammett/red-harvest">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/dashiell-hammett_red-harvest-7850e9bd-cover@2x.avif 2x, https://standardebooks.org/images/covers/dashiell-hammett_red-harvest-7850e9bd-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/dashiell-hammett_red-harvest-7850e9bd-cover@2x.jpg 2x, https://standardebooks.org/images/covers/dashiell-hammett_red-harvest-7850e9bd-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/dashiell-hammett_red-harvest-7850e9bd-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/dashiell-hammett/red-harvest">Red Harvest</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/dashiell-hammett">Dashiell Hammett</a></p>
							<p><i>Red Harvest</i> is Dashiell Hammett’s first full-length novel to feature the <a href="https://standardebooks.org/collections/continental-op">Continental Op</a>, the nameless, hard-drinking, cynical private eye that single-handedly created the archetype of the hard-boiled detective. The novel is a fast-paced, tightly-written murder thriller that simultaneously touches all the bases of, and <em>defines</em>, the classic noir style that was much-imitated, and later much-spoofed, in the following century.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/dashiell-hammett/red-harvest">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/sinclair-lewis/dodsworth">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/sinclair-lewis_dodsworth-6771faa1-cover@2x.avif 2x, https://standardebooks.org/images/covers/sinclair-lewis_dodsworth-6771faa1-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/sinclair-lewis_dodsworth-6771faa1-cover@2x.jpg 2x, https://standardebooks.org/images/covers/sinclair-lewis_dodsworth-6771faa1-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/sinclair-lewis_dodsworth-6771faa1-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/sinclair-lewis/dodsworth">Dodsworth</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/sinclair-lewis">Sinclair Lewis</a></p>
							<p>Samuel Dodsworth is a successful automobile executive who decides to retire early. His younger wife Fran wants to tour Europe, so the two embark on a trip. But soon after they arrive, Fran becomes enchanted by the whirlwind of culture and old-world society, while Samuel, a mild-mannered, down-to-earth Midwesterner, yearns to escape the pretentiousness and return to the quiet stability of home. The novel explores the slow breakdown of their marriage while deftly satirizing American middle-class mores and the wide gulf between them and European culture.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/sinclair-lewis/dodsworth">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/oliver-la-farge/laughing-boy">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/oliver-la-farge_laughing-boy-1cc2bb87-cover@2x.avif 2x, https://standardebooks.org/images/covers/oliver-la-farge_laughing-boy-1cc2bb87-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/oliver-la-farge_laughing-boy-1cc2bb87-cover@2x.jpg 2x, https://standardebooks.org/images/covers/oliver-la-farge_laughing-boy-1cc2bb87-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/oliver-la-farge_laughing-boy-1cc2bb87-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/oliver-la-farge/laughing-boy">Laughing Boy</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/oliver-la-farge">Oliver La Farge</a></p>
							<p><i>Laughing Boy</i>, the winner of the 1930 <a href="https://standardebooks.org/collections/pulitzer-prize-for-fiction-winners">Pulitzer Prize for Fiction</a>, is the story of the titular main character, a young Navajo man living in the American Southwest around the turn of the 20th century. He meets the fiery young Slim Girl at a tribal meet, but her reputation precedes her, and the tribe disapproves of their union. Ignoring the advice of the tribe, the two start a life together as they try to keep ancient traditions alive in the face of the rapidly-encroaching modernization of the American Southwest.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/oliver-la-farge/laughing-boy">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/calvin-coolidge/the-autobiography-of-calvin-coolidge">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/calvin-coolidge_the-autobiography-of-calvin-coolidge-15a8c43d-cover@2x.avif 2x, https://standardebooks.org/images/covers/calvin-coolidge_the-autobiography-of-calvin-coolidge-15a8c43d-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/calvin-coolidge_the-autobiography-of-calvin-coolidge-15a8c43d-cover@2x.jpg 2x, https://standardebooks.org/images/covers/calvin-coolidge_the-autobiography-of-calvin-coolidge-15a8c43d-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/calvin-coolidge_the-autobiography-of-calvin-coolidge-15a8c43d-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/calvin-coolidge/the-autobiography-of-calvin-coolidge">The Autobiography of Calvin Coolidge</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/calvin-coolidge">Calvin Coolidge</a></p>
							<p>Calvin Coolidge was the 30th president of the United States, entering the office as vice president when president Warren G. Harding suddenly passed, and winning a reelection term. Even though he was hugely popular, he declined running for a second full term, opting to retire instead. In this autobiography—which is as brief as “Silent Cal’s” legend suggests it might be—we follow the former president from his idyllic boyhood in Vermont, to a career in the law, to the governorship of Massachusetts, to the presidency and beyond.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/calvin-coolidge/the-autobiography-of-calvin-coolidge">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/graham-greene/the-man-within">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/graham-greene_the-man-within-0c00ece9-cover@2x.avif 2x, https://standardebooks.org/images/covers/graham-greene_the-man-within-0c00ece9-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/graham-greene_the-man-within-0c00ece9-cover@2x.jpg 2x, https://standardebooks.org/images/covers/graham-greene_the-man-within-0c00ece9-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/graham-greene_the-man-within-0c00ece9-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/graham-greene/the-man-within">The Man Within</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/graham-greene">Graham Greene</a></p>
							<p><i>The Man Within</i> is acclaimed novelist Graham Greene’s first novel. Set against the backdrop of the English countryside, the novel explores themes of guilt, redemption, the nature of courage and cowardice, and the complex relationship between one’s inner beliefs and outward actions.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/graham-greene/the-man-within">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/edith-wharton/hudson-river-bracketed">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/edith-wharton_hudson-river-bracketed-754a7fba-cover@2x.avif 2x, https://standardebooks.org/images/covers/edith-wharton_hudson-river-bracketed-754a7fba-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/edith-wharton_hudson-river-bracketed-754a7fba-cover@2x.jpg 2x, https://standardebooks.org/images/covers/edith-wharton_hudson-river-bracketed-754a7fba-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/edith-wharton_hudson-river-bracketed-754a7fba-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/edith-wharton/hudson-river-bracketed">Hudson River Bracketed</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/edith-wharton">Edith Wharton</a></p>
							<p>Vance Weston is a young Midwestern man looking to make his way in the world of literature. He gets his chance when he visits some relatives in New York, caretakers of a house in the titular Hudson River Bracketed style.</p><p>Weston is a boy of little means; perhaps it’s this vast gulf between the character’s life and Edith Wharton’s own life that allowed her to feel more free to write in many semi-autobiographical details. In any case, she considered <i>Hudson River Bracketed</i> to be her finest novel, and went so far as to write a sequel in 1932.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/edith-wharton/hudson-river-bracketed">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/lloyd-c-douglas/magnificent-obsession">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/lloyd-c-douglas_magnificent-obsession-d1c63cba-cover@2x.avif 2x, https://standardebooks.org/images/covers/lloyd-c-douglas_magnificent-obsession-d1c63cba-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/lloyd-c-douglas_magnificent-obsession-d1c63cba-cover@2x.jpg 2x, https://standardebooks.org/images/covers/lloyd-c-douglas_magnificent-obsession-d1c63cba-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/lloyd-c-douglas_magnificent-obsession-d1c63cba-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/lloyd-c-douglas/magnificent-obsession">Magnificent Obsession</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/lloyd-c-douglas">Lloyd C. Douglas</a></p>
							<p>Robert Merrick, a young man from a wealthy family, accidentally causes the death of an esteemed neurosurgeon. Wracked by guilt, Robert decides to devote his own life to improving the life of others.</p><p><i>Magnificent Obsession</i> was a hugely popular work in its time, inspiring a blockbuster 1935 film of the same name.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/lloyd-c-douglas/magnificent-obsession">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/j-b-priestley/the-good-companions">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/j-b-priestley_the-good-companions-c9f11283-cover@2x.avif 2x, https://standardebooks.org/images/covers/j-b-priestley_the-good-companions-c9f11283-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/j-b-priestley_the-good-companions-c9f11283-cover@2x.jpg 2x, https://standardebooks.org/images/covers/j-b-priestley_the-good-companions-c9f11283-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/j-b-priestley_the-good-companions-c9f11283-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/j-b-priestley/the-good-companions">The Good Companions</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/j-b-priestley">J. B. Priestley</a></p>
							<p>The recipient of the <a href="https://standardebooks.org/collections/james-tait-black-memorial-fiction-prize-winners">James Tait Black Memorial Fiction Prize</a>, <i>The Good Companions</i> was a blockbuster novel that made J. B. Priestley’s reputation. In it we follow three protagonists from different walks of life who, looking for a change of pace, strike out from home. They eventually cross paths with each other and with a group of “concert players,” a type of traveling vaudeville troupe common in the day. They decide to join forces and form the “Good Companions,” a musical act that takes them on a series of cozy adventures.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/j-b-priestley/the-good-companions">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/thomas-wolfe/look-homeward-angel">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/thomas-wolfe_look-homeward-angel-858a6bee-cover@2x.avif 2x, https://standardebooks.org/images/covers/thomas-wolfe_look-homeward-angel-858a6bee-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/thomas-wolfe_look-homeward-angel-858a6bee-cover@2x.jpg 2x, https://standardebooks.org/images/covers/thomas-wolfe_look-homeward-angel-858a6bee-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/thomas-wolfe_look-homeward-angel-858a6bee-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/thomas-wolfe/look-homeward-angel">Look Homeward, Angel</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/thomas-wolfe">Thomas Wolfe</a></p>
							<p><i>Look Homeward, Angel</i> is Thomas Wolfe’s first novel, and the one on which his considerable fame as a master of the American autobiographical novel rests. The book covers the youth of Eugene Grant, a young man living in North Carolina, and widely considered to be a direct stand-in for Wolfe himself. It was a commercial and critical success, securing Wolfe’s reputation as one of the most important writers in the Southern Renaissance.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/thomas-wolfe/look-homeward-angel">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/dashiell-hammett/the-dain-curse">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/dashiell-hammett_the-dain-curse-426cfcfc-cover@2x.avif 2x, https://standardebooks.org/images/covers/dashiell-hammett_the-dain-curse-426cfcfc-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/dashiell-hammett_the-dain-curse-426cfcfc-cover@2x.jpg 2x, https://standardebooks.org/images/covers/dashiell-hammett_the-dain-curse-426cfcfc-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/dashiell-hammett_the-dain-curse-426cfcfc-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/dashiell-hammett/the-dain-curse">The Dain Curse</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/dashiell-hammett">Dashiell Hammett</a></p>
							<p>In <i>The Dain Curse</i>, the second <a href="https://standardebooks.org/collections/continental-op">Continental Op</a> novel, the legendary but nameless hard-drinking and quick-shooting detective is sent to investigate the theft of diamonds from a San Francisco family. The fast-paced noir thriller quickly veers from car chases to cultists to the supernatural, but the unflappable Continental Op is relentless in his pursuit of truth.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/dashiell-hammett/the-dain-curse">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/c-s-forester/brown-on-resolution">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/c-s-forester_brown-on-resolution-11c07cb1-cover@2x.avif 2x, https://standardebooks.org/images/covers/c-s-forester_brown-on-resolution-11c07cb1-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/c-s-forester_brown-on-resolution-11c07cb1-cover@2x.jpg 2x, https://standardebooks.org/images/covers/c-s-forester_brown-on-resolution-11c07cb1-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/c-s-forester_brown-on-resolution-11c07cb1-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/c-s-forester/brown-on-resolution">Brown on Resolution</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/c-s-forester">C. S. Forester</a></p>
							<p>While on operations in the Pacific during the first World War, the sailor Albert Brown’s ship is sunk—but he survives, and is taken on board the German cruiser that sank them. It too has suffered damage, and heads to some nearby islands for repairs. In this unlikely and hostile setting, Brown, alone, pits himself against the German ship and its crew, seeking to delay its progress while British naval reinforcements rush to his rescue.</p><p>Forester’s careful historical research adds an unimpeachable air of verisimilitude to the novel, and indeed, the plot is loosely based on real events.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/c-s-forester/brown-on-resolution">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/agatha-christie/the-seven-dials-mystery">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/agatha-christie_the-seven-dials-mystery-8acfea30-cover@2x.avif 2x, https://standardebooks.org/images/covers/agatha-christie_the-seven-dials-mystery-8acfea30-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/agatha-christie_the-seven-dials-mystery-8acfea30-cover@2x.jpg 2x, https://standardebooks.org/images/covers/agatha-christie_the-seven-dials-mystery-8acfea30-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/agatha-christie_the-seven-dials-mystery-8acfea30-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/agatha-christie/the-seven-dials-mystery">The Seven Dials Mystery</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/agatha-christie">Agatha Christie</a></p>
							<p><i>The Seven Dials Mystery</i> is the second book to feature <a href="https://standardebooks.org/collections/superintendent-battle">Superintendent Battle</a> and the grand country estate of <a href="https://standardebooks.org/ebooks/agatha-christie/the-secret-of-chimneys">Chimneys</a>. Chimneys is again the setting for a houseparty for a group of guests. One of them has a habit of oversleeping, and as a joke the other guests place eight alarm clocks near his bed to make sure he wakes up on time. Naturally, the next morning he’s discovered murdered in his bed—and Bundle, the bright daughter of the lord of Chimneys, takes up the case.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/agatha-christie/the-seven-dials-mystery">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/john-buchan/the-courts-of-the-morning">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/john-buchan_the-courts-of-the-morning-f39bce88-cover@2x.avif 2x, https://standardebooks.org/images/covers/john-buchan_the-courts-of-the-morning-f39bce88-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/john-buchan_the-courts-of-the-morning-f39bce88-cover@2x.jpg 2x, https://standardebooks.org/images/covers/john-buchan_the-courts-of-the-morning-f39bce88-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/john-buchan_the-courts-of-the-morning-f39bce88-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/john-buchan/the-courts-of-the-morning">The Courts of the Morning</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/john-buchan">John Buchan</a></p>
							<p><i>The Courts of the Morning</i> opens with <a href="https://standardebooks.org/collections/richard-hannay">Major-General Richard Hannay</a> being approached by American diplomats regarding the disappearance of a wealthy industrialist. He in turn seeks the help of his friend Sandy Arbuthnot—but Arbuthnot himself quickly goes missing. We soon head to the South American country of Olifa, where a powerful head of a mining company is gradually enslaving the populace. It seems that only guerrilla warfare will save the country from rule under a ruthless tyrant.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/john-buchan/the-courts-of-the-morning">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/arthur-conan-doyle/the-maracot-deep">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/arthur-conan-doyle_the-maracot-deep-ad2f51e7-cover@2x.avif 2x, https://standardebooks.org/images/covers/arthur-conan-doyle_the-maracot-deep-ad2f51e7-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/arthur-conan-doyle_the-maracot-deep-ad2f51e7-cover@2x.jpg 2x, https://standardebooks.org/images/covers/arthur-conan-doyle_the-maracot-deep-ad2f51e7-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/arthur-conan-doyle_the-maracot-deep-ad2f51e7-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/arthur-conan-doyle/the-maracot-deep">The Maracot Deep</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/arthur-conan-doyle">Arthur Conan Doyle</a></p>
							<p>While investigating the deepest part of the Atlantic Ocean, a team led by Dr. Maracot is cut off from their ship and hurled to the bottom of the ocean. There, they find themselves in the remnants of the ancient civilization of Atlantis.</p><p>Though Doyle is most famous for his <a href="https://standardebooks.org/collections/sherlock-holmes">Sherlock Holmes</a> stories, in which a brilliant logician uses reason and deduction to solve crime, in later years he became deeply spiritual. This novel, written just a year before his death, combines his interest in science and reason with his new spiritual outlook.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/arthur-conan-doyle/the-maracot-deep">Download and read for free →</a>
							</p>
						</div>
					</li>
									<li>
						<div>
							<a href="https://standardebooks.org/ebooks/josephine-tey/the-man-in-the-queue">
								<figure>
	<picture>
		<source srcset="https://standardebooks.org/images/covers/josephine-tey_the-man-in-the-queue-503a5c66-cover@2x.avif 2x, https://standardebooks.org/images/covers/josephine-tey_the-man-in-the-queue-503a5c66-cover.avif 1x" type="image/avif">
		<source srcset="https://standardebooks.org/images/covers/josephine-tey_the-man-in-the-queue-503a5c66-cover@2x.jpg 2x, https://standardebooks.org/images/covers/josephine-tey_the-man-in-the-queue-503a5c66-cover.jpg 1x" type="image/jpg">
		<img src="https://standardebooks.org/images/covers/josephine-tey_the-man-in-the-queue-503a5c66-cover.jpg" alt="" height="363" width="242">
	</picture>
</figure>
							</a>
						</div>
						<div>
							<h2>
								<a href="https://standardebooks.org/ebooks/josephine-tey/the-man-in-the-queue">The Man in the Queue</a>
							</h2>
							<p>by <a href="https://standardebooks.org/ebooks/josephine-tey">Josephine Tey</a></p>
							<p>Standing in line in a long queue for a show at a theater, a young man is stabbed in the back. <a href="https://standardebooks.org/collections/inspector-grant">Inspector Alan Grant</a> of the Metropolitan Police is soon on the case, though he finds it deeply puzzling—not least because the identity of the victim is itself a mystery.</p><p><i>The Man in the Queue</i> was the first in a series of hugely successful detective novels by Josephine Tey.</p>							
							<p>
								<a href="https://standardebooks.org/ebooks/josephine-tey/the-man-in-the-queue">Download and read for free →</a>
							</p>
						</div>
					</li>
							</ul>
						
			</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Dropbox Engineering Career Framework (153 pts)]]></title>
            <link>https://dropbox.github.io/dbx-career-framework/</link>
            <guid>42572515</guid>
            <pubDate>Thu, 02 Jan 2025 07:33:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dropbox.github.io/dbx-career-framework/">https://dropbox.github.io/dbx-career-framework/</a>, See on <a href="https://news.ycombinator.com/item?id=42572515">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="doc-container">
<h2>What’s a Career Framework?</h2>
<p>The Engineering Career Framework is your source for how to achieve impact for your role and team and how to grow in your engineering career. For managers, it can help you set expectations with your teams and hold them accountable for their work.</p>
<h2>What the Career Framework is not</h2>
<p>This framework is not a promotion checklist for your role; rather, it’s designed to help you figure out what your impact could look like at the next level.</p>
<p>This framework is not an exhaustive list of examples and behaviors; each responsibility includes three to four key behaviors that serve as guide for how to think about your work. Consequently, you’ll need to meet with your manager to define your impact goals and align on the expectations for your role.</p>
<h2>What’s in a Career Framework?</h2>
<p>This framework is broken down into two components:</p>
<ul>
<li><strong>Level Expectations</strong> define the scope, collaborative reach, and levers for impact at every level; these expectations are the <em>what</em> that determines the difference between an IC3 and IC4, for example</li>
<li><strong>Core and Craft Responsibilities</strong> define the key behaviors specific to your role and team; these behaviors help you identify <em>how</em> you work to deliver impact based on your level expectations</li>
</ul>
<h2>How to navigate this framework</h2>
<p>Dropbox measures the success of its engineers largely on business impact. Anchor your work first and foremost on creating long-term impact. Since impact can be a bit vague, read <a href="https://dropbox.github.io/dbx-career-framework/what_is_impact.html">What is Impact?</a></p>
<p>Next, ground yourself in the expectations for your level and team. For each level, you’ll find a one-line summary description and the role’s scope, collaborative reach, and levers for impact.</p>
<p>Review the expected behaviors for that level across the Results, Direction, Talent, Culture pillars from the Core Responsibilities. Read your Craft expectations, which are the per discipline technical capabilities you need to master at that level. Finally, meet with your manager to set your goals for the quarter.</p>
<p>

<em>Guideline Version: v2.9.1</em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Zasper: A Modern and Efficient Alternative to JupyterLab, Built in Go (312 pts)]]></title>
            <link>https://github.com/zasper-io/zasper</link>
            <guid>42572057</guid>
            <pubDate>Thu, 02 Jan 2025 05:55:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/zasper-io/zasper">https://github.com/zasper-io/zasper</a>, See on <a href="https://news.ycombinator.com/item?id=42572057">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/zasper-io/zasper/blob/main/logo.svg"><img src="https://github.com/zasper-io/zasper/raw/main/logo.svg" alt="Zasper"></a>
</p>
<p dir="auto">
    ⚡ High Performance IDE 🚀 Massive concurrency 🐥  Inspired by Jupyter
</p>
<p dir="auto">
  <a href="https://github.com/zasper-io/zasper">
      <img src="https://camo.githubusercontent.com/2d2fd0e1ec365918dc5cffbd2635a9fa1f56aed08356bd8225efefa9476cd012/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f7a61737065722d696f2f7a6173706572" alt="Last Commit" data-canonical-src="https://img.shields.io/github/last-commit/zasper-io/zasper">
  </a>
  <a href="https://github.com/zasper-io/zasper/stargazers">
      <img src="https://camo.githubusercontent.com/d478790124b22b1a1fb9c1abcf6c46460968d9b23656846e4025501b330d1ac6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f7a61737065722d696f2f7a6173706572" alt="GitHub Stars" data-canonical-src="https://img.shields.io/github/stars/zasper-io/zasper">
  </a>
  <a href="https://github.com/zasper-io/zasper/issues">
      <img src="https://camo.githubusercontent.com/056ab8f5584d1be4deb252ff7331b4d0d56fcaf6440c81480a128a773b5c75c2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7a61737065722d696f2f7a6173706572" alt="GitHub Issues" data-canonical-src="https://img.shields.io/github/issues/zasper-io/zasper">
  </a>
  <a href="https://github.com/zasper-io/zasper/actions/workflows/gobuild.yml"><img alt="Github CD status" src="https://github.com/zasper-io/zasper/actions/workflows/gobuild.yml/badge.svg"></a>
</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/zasper-io/zasper/blob/main/screenshots/intro.gif"><img src="https://github.com/zasper-io/zasper/raw/main/screenshots/intro.gif" data-animated-image=""></a>
</p>
<p dir="auto">Zasper is an IDE designed from the ground up to support massive concurrency. It provides a minimal memory footprint, exceptional speed, and the ability to handle numerous concurrent connections.</p>
<p dir="auto">It's perfectly suited for running REPL-style data applications, with Jupyter notebooks being one example.</p>
<p dir="auto">Currently Zasper is fully supported on Mac with limited support on Linux.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Benchmarks - 4X Better</h2><a id="user-content-benchmarks---4x-better" aria-label="Permalink: Benchmarks - 4X Better" href="#benchmarks---4x-better"></a></p>
<p dir="auto">Zasper uses one fourth of RAM and one fourth of CPU used by Jupterlab. While Jupyterlab uses around 104.8 MB of RAM and 0.8 CPUs, Zasper uses 26.7 MB of RAM and 0.2 CPUs.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Why I built Zasper ?</h2><a id="user-content-why-i-built-zasper-" aria-label="Permalink: Why I built Zasper ?" href="#why-i-built-zasper-"></a></p>
<p dir="auto">There are several proprietary JupyterLab-like frontend tools available in the market, such as Databricks Notebooks and Deepnote Notebooks. However, none of them are free or open-source, and most require users to work in the cloud. Even the modest personal computers these days are typically equipped with at least 8 GB of RAM, an 8-core CPU, and a decent 4 GB GPU, I saw an opportunity to create a solution that works seamlessly on local machines. That’s why I decided to build Zasper which can effectively utilize the resources available and guarantee maximum efficiency.</p>
<p dir="auto">Originally I wrote <a href="https://github.com/zasper-io/zasper_py">https://github.com/zasper-io/zasper_py</a> (now in Private mode) to build a new frontend around Jupyter. During the process I realized, Go is the ideal choice to rebuild the Jupyter project. Go has excellent support for REST, RPC, WS protocols. Concurrency and Performance are the areas where Go shines.</p>
<p dir="auto">Go's Concurrency: Better suited for applications requiring both concurrency and parallelism, as it leverages multiple cores effectively. It's easier to handle blocking operations without freezing the system.</p>
<p dir="auto">Python's Event Loop: Ideal for I/O-bound applications that need to handle a lot of asynchronous tasks without blocking. However, it struggles with CPU-bound tasks and lacks native parallelism unless additional worker threads are used.</p>
<p dir="auto">Hence the Go version of Zasper was born!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">📷 Screenshots</h2><a id="user-content--screenshots" aria-label="Permalink: 📷 Screenshots" href="#-screenshots"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Editor</h3><a id="user-content-editor" aria-label="Permalink: Editor" href="#editor"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main//editor.png"><img src="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main//editor.png" alt="Editor"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Terminal</h3><a id="user-content-terminal" aria-label="Permalink: Terminal" href="#terminal"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/terminal.png"><img src="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/terminal.png" alt="Editor"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Launcher</h3><a id="user-content-launcher" aria-label="Permalink: Launcher" href="#launcher"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/launcher.png"><img src="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/launcher.png" alt="Launcher"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Jupyter Notebook</h3><a id="user-content-jupyter-notebook" aria-label="Permalink: Jupyter Notebook" href="#jupyter-notebook"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/notebook.png"><img src="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/notebook.png" alt="Notebook"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Version Control</h3><a id="user-content-version-control" aria-label="Permalink: Version Control" href="#version-control"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/git.png"><img src="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/git.png" alt="Version Control"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Command Palette</h3><a id="user-content-command-palette" aria-label="Permalink: Command Palette" href="#command-palette"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/commandPalette.png"><img src="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/commandPalette.png" alt="Command Palette"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Dark Mode</h3><a id="user-content-dark-mode" aria-label="Permalink: Dark Mode" href="#dark-mode"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/dark.png"><img src="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/dark.png" alt="Dark mode"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/darkNotebook.png"><img src="https://raw.githubusercontent.com/zasper-io/assets/refs/heads/main/darkNotebook.png" alt="Dark Notebook mode"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Architecture</h2><a id="user-content-architecture" aria-label="Permalink: Architecture" href="#architecture"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/zasper-io/zasper/blob/main/architecture.svg"><img src="https://github.com/zasper-io/zasper/raw/main/architecture.svg" alt="alt text"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">⚡️ Quick start</h2><a id="user-content-️-quick-start" aria-label="Permalink: ⚡️ Quick start" href="#️-quick-start"></a></p>
<p dir="auto">Zasper comes in two flavours:</p>
<ol dir="auto">
<li>Electron App</li>
<li>Web App</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">Electron App</h3><a id="user-content-electron-app" aria-label="Permalink: Electron App" href="#electron-app"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Install zeromq</h4><a id="user-content-install-zeromq" aria-label="Permalink: Install zeromq" href="#install-zeromq"></a></p>
<p dir="auto">On debian</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo apt-get install libzmq3-dev"><pre>sudo apt-get install libzmq3-dev</pre></div>
<p dir="auto">On mac</p>
<div dir="auto" data-snippet-clipboard-copy-content="brew install pkg-config
brew install zeromq"><pre>brew install pkg-config
brew install zeromq</pre></div>
<p dir="auto">Go to project home and start the server</p>
<div dir="auto" data-snippet-clipboard-copy-content="go build -o ui/public/zasper"><pre>go build -o ui/public/zasper</pre></div>
<p dir="auto">Go to <code>ui</code> and run the app in dev mode</p>
<div data-snippet-clipboard-copy-content="npm run electron-dev       # dev-mode

npm run electron-package   # prod-mode"><pre><code>npm run electron-dev       # dev-mode

npm run electron-package   # prod-mode
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Webapp</h3><a id="user-content-webapp" aria-label="Permalink: Webapp" href="#webapp"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Build the frontend</h4><a id="user-content-build-the-frontend" aria-label="Permalink: Build the frontend" href="#build-the-frontend"></a></p>

<p dir="auto"><h4 tabindex="-1" dir="auto">Install zeromq</h4><a id="user-content-install-zeromq-1" aria-label="Permalink: Install zeromq" href="#install-zeromq-1"></a></p>
<p dir="auto">On debian</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo apt-get install libzmq3-dev"><pre>sudo apt-get install libzmq3-dev</pre></div>
<p dir="auto">On mac</p>
<div dir="auto" data-snippet-clipboard-copy-content="brew install pkg-config
brew install zeromq"><pre>brew install pkg-config
brew install zeromq</pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Start the backend</h4><a id="user-content-start-the-backend" aria-label="Permalink: Start the backend" href="#start-the-backend"></a></p>
<p dir="auto">Install zeromq.</p>
<p dir="auto">Go to project home and start the server</p>

<p dir="auto">This will crate a binary called <code>zasper</code>. Now add this binary to your path.</p>
<p dir="auto">Run zasper in any directory to see if the installation was done correctly.</p>
<div data-snippet-clipboard-copy-content="% zasper -h
Usage of ../zasper:
  -cwd string
    	base directory of project (default &quot;.&quot;)
  -debug
    	sets log level to debug
  -port string
    	port to start the server on (default &quot;:8888&quot;)"><pre><code>% zasper -h
Usage of ../zasper:
  -cwd string
    	base directory of project (default ".")
  -debug
    	sets log level to debug
  -port string
    	port to start the server on (default ":8888")
</code></pre></div>
<p dir="auto">Go to any directory you want to serve and run <code>zasper</code>. This starts zasper server in the directory.</p>
<div data-snippet-clipboard-copy-content="% zasper 
2024/12/15 20:39:12 Zasper Server started! Listening on port:8888

███████╗ █████╗ ███████╗██████╗ ███████╗██████╗ 
╚══███╔╝██╔══██╗██╔════╝██╔══██╗██╔════╝██╔══██╗
  ███╔╝ ███████║███████╗██████╔╝█████╗  ██████╔╝
 ███╔╝  ██╔══██║╚════██║██╔═══╝ ██╔══╝  ██╔══██╗
███████╗██║  ██║███████║██║     ███████╗██║  ██║
╚══════╝╚═╝  ╚═╝╚══════╝╚═╝     ╚══════╝╚═╝  ╚═╝
"><pre><code>% zasper 
2024/12/15 20:39:12 Zasper Server started! Listening on port:8888

███████╗ █████╗ ███████╗██████╗ ███████╗██████╗ 
╚══███╔╝██╔══██╗██╔════╝██╔══██╗██╔════╝██╔══██╗
  ███╔╝ ███████║███████╗██████╔╝█████╗  ██████╔╝
 ███╔╝  ██╔══██║╚════██║██╔═══╝ ██╔══╝  ██╔══██╗
███████╗██║  ██║███████║██║     ███████╗██║  ██║
╚══════╝╚═╝  ╚═╝╚══════╝╚═╝     ╚══════╝╚═╝  ╚═╝

</code></pre></div>
<p dir="auto">Go to <code>http://localhost:8888</code></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Logging</h2><a id="user-content-logging" aria-label="Permalink: Logging" href="#logging"></a></p>
<p dir="auto">By default, the application writes logs to the following locations:</p>
<div dir="auto" data-snippet-clipboard-copy-content="on Linux: ~/.config/zasper/logs/main.log
on macOS: ~/Library/Logs/zasper/main.log
on Windows: %USERPROFILE%\AppData\Roaming\zasper\logs\main.log"><pre>on Linux: <span>~</span>/.config/zasper/logs/main.log
on macOS: <span>~</span>/Library/Logs/zasper/main.log
on Windows: %USERPROFILE%<span>\A</span>ppData<span>\R</span>oaming<span>\z</span>asper<span>\l</span>ogs<span>\m</span>ain.log</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Wiki</h2><a id="user-content-wiki" aria-label="Permalink: Wiki" href="#wiki"></a></p>
<p dir="auto">For Zasper architecture, and other info refer <a href="https://github.com/zasper-io/zasper/wiki">wiki</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">You can contribute in multiple ways:</p>
<ul dir="auto">
<li>Documentation</li>
<li>Bug Filing</li>
<li>Submitting PRs or reviewing them</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Code of Conduct</h2><a id="user-content-code-of-conduct" aria-label="Permalink: Code of Conduct" href="#code-of-conduct"></a></p>
<p dir="auto">See <a href="https://github.com/zasper-io/zasper/blob/main/CODE_OF_CONDUCT.md">Code of conduct</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Roadmap</h2><a id="user-content-roadmap" aria-label="Permalink: Roadmap" href="#roadmap"></a></p>
<p dir="auto">Data Scientists and AI Engineers spend most of their time running Notebooks on IDEs and hence need a robust ecosystem.
Zasper aspires to be a full fledged IDE and the future development will be along making it more efficient by:</p>
<ul dir="auto">
<li>Allowing custom data apps support rather than just Jupyter Notebooks.</li>
<li>Easier integration with the existing tools.</li>
<li>Zasper Hub for Self Hosted deployment in the cloud.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Copyright</h2><a id="user-content-copyright" aria-label="Permalink: Copyright" href="#copyright"></a></p>
<p dir="auto">Prasun Anand</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">⚖️ License</h2><a id="user-content-️-license" aria-label="Permalink: ⚖️ License" href="#️-license"></a></p>
<p dir="auto">Zasper is licensed under AGPL-3.0 license.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Autodesk deletes old forum posts suddenly (119 pts)]]></title>
            <link>https://forums.autodesk.com/t5/net/regarding-community-content-archiving/td-p/13198106</link>
            <guid>42571995</guid>
            <pubDate>Thu, 02 Jan 2025 05:43:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/td-p/13198106">https://forums.autodesk.com/t5/net/regarding-community-content-archiving/td-p/13198106</a>, See on <a href="https://news.ycombinator.com/item?id=42571995">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
		<center>
			
				
					
	
	<div>
	<div id="custom-overridden-breadcrumb-component">
      <ul>


          


          <li>
              <a href="https://forums.autodesk.com/" data-wat-link="true" data-wat-loc="breadcrumbs" data-wat-val="forums home">Forums Home</a>
          </li>
          <li>
            <span>&gt;</span>
          </li>
          <li>
              <a href="https://forums.autodesk.com/t5/autocad/ct-p/8" data-wat-link="true" data-wat-loc="breadcrumbs" data-wat-val="autocad community">AutoCAD Community</a>
          </li>
          <li>
            <span>&gt;</span>
          </li>
          <li>
              <a href="https://forums.autodesk.com/t5/autocad-customization/ct-p/AutoCADTopic1" data-wat-link="true" data-wat-loc="breadcrumbs" data-wat-val="autocad customization forum">AutoCAD Customization Forum</a>
          </li>
          <li>
            <span>&gt;</span>
          </li>
          <li>
              <a href="https://forums.autodesk.com/t5/net/bd-p/152" data-wat-link="true" data-wat-loc="breadcrumbs" data-wat-val=".net forum">.NET forum</a>
          </li>
          <li>
            <span>&gt;</span>
          </li>
          <li>
            <span>Regarding Community Content Archiving</span>
          </li>
      </ul>
    </div><div id="actionMenuDropDown"><p><a title="Show option menu" aria-expanded="false" role="button" aria-label="Options" id="dropDownLink" href="#">Options</a></p><div>
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssThread" href="https://forums.autodesk.com/autodesk/rss/message?board.id=152&amp;message.id=84782">Subscribe to RSS Feed</a></li>
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markThreadUnread">Mark Topic as New</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="markThreadRead">Mark Topic as Read</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addThreadUserFloat">Float this Topic for Current User</span></li>
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addThreadUserBookmark">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addThreadUserEmailSubscription">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addThreadUserMute">Mute</span></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printThread" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84782/print-single-message/false/page/1">Printer Friendly Page</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div>
		</div><div>
	
		
			
		
			
			
			
				<div data-lia-message-uid="13198106" id="lineardisplaymessageviewwrapper">
<div>
	
	<h2 itemprop="name">
			<span>
				
					
						<p>
							Regarding Community Content Archiving
						</p>
					
					
				
			</span>
		</h2>
	
			
	
	</div>    
<div id="actionMenuDropDown_31ba15d9ba2351">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15d9ba2351">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15d9ba2351">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15d9ba2351">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15d9ba2351">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15d9ba2351">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15d9ba2351" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84782">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15d9ba2351" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13198106/highlight/true#M84782">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15d9ba2351" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84782/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15d9ba2351" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13198106">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><div itemprop="text" id="bodyDisplay_31ba15d9fc2816">
			
				
					
					
						<p>Re:&nbsp;<a href="https://forums.autodesk.com/t5/community-announcements/community-content-archiving-announcement-and-faq/td-p/13187702" target="_blank">https://forums.autodesk.com/t5/community-announcements/community-content-archiving-announcement-and-...</a></p><p>This thread is closed for comment, so I'm posting here.<br>The title says archiving but the posts indicate &gt;&gt;&gt;&nbsp;<em><strong>Unfortunately, we cannot keep the content&nbsp;&nbsp;</strong></em>, which in my book&nbsp; is <strong>DELETING</strong>.</p><p>I'm only interested in code groups but these comments also apply to the regular customising and operational Forums,</p><div><p>Deleting everything that was originated prior to 10 years ago will destroy a wealth of information that is still viable. This information has not been transferred to the "Help" files and will no longer be searchable, the bookmarked links (published and personal) will no longer be available and the peers who provided this information probably won't be available ( or not inclined ) to reproduce the information when it is required.</p></div><div><p>These groups are peer to peer and the answers to peoples questions and solutions to problems is typically provided by users of the products, not by the builders of the products.&nbsp; I consider this action to be an insult to the efforts of the people who have, at their own expense, graciously helped other users over the years.<br>If those individuals are still around, I thank you for your efforts and generosity.</p><p>I sure hope AutoDesk are not relying on AI to provide the information currently being destroyed.</p><p>The expression "Going to hell in a handbasket" comes to mind.</p></div>
					
				
			
			
				<div>
	<p><span size="2">// Called Kerry in my other life.</span></p><p>Everything will work just as you expect it to, unless your expectations are incorrect.<br>Sometimes the question is more important than the answer.<br></p><p><span size="2">class keyThumper&lt;T&gt; : Lazy&lt;T&gt;;<em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; another&nbsp;&nbsp;<a title="get below the surface" href="https://www.theswamp.org/" target="_blank" rel="nofollow noopener noreferrer">Swamper</a></em></span></p>
</div>
			
			
				
			
			
			
			
			
			
		</div></div>
				<div id="threadnavigator_0">
	<ul>
		
	
		
			
				<li>
					<a title=".NET" id="link_1" href="https://forums.autodesk.com/t5/net/bd-p/152">
						<span></span> 
						<span>Back to Topic Listing</span>
					</a>
				</li>
			
		
			
				<li>
					<a title="Cutting block" id="link_2" href="https://forums.autodesk.com/t5/net/cutting-block/td-p/13238357">
						<span></span> 
						<span>Previous</span>
					</a>
				</li>
			
		
			
				<li>
					<a title="Copying Layout from another drawing, the viewport layer settings are lost" id="link_3" href="https://forums.autodesk.com/t5/net/copying-layout-from-another-drawing-the-viewport-layer-settings/td-p/12454677">
						<span>Next</span>
						<span></span>
					</a>
				</li>		
			
		
	
	

	</ul>
</div>
				
			
		
		
	
	
</div><div>
	
		
			
		
			
			
	<p>
		Replies <span itemprop="answerCount">(28)</span>
	</p>

		
		
			
			
			
				<div>
	<div>

	    
			
				
			
            
                
                    
        <div data-lia-message-uid="13198176" id="lineardisplaymessageviewwrapper_0">
    
<div id="actionMenuDropDown_31ba15e407ab48">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15e407ab48">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15e407ab48">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15e407ab48">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15e407ab48">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15e407ab48">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15e407ab48" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84784">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15e407ab48" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13198176/highlight/true#M84784">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15e407ab48" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84784/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15e407ab48" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13198176">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><p>
		        Accepted solution
		    </p><div itemprop="text" id="bodyDisplay_31ba15e44ce0ac">
			
				
					
						
					
					
						<p>Not sure what will happen, but if the discussions in this forum started older than 10 years were to be no longer available, it would be really bad. If that really happens, I'd suggest those who post/learn frequently in this forum move to other alternatives, such as&nbsp;<a href="https://www.theswamp.org/" target="_blank" rel="noopener nofollow noreferrer">https://www.theswamp.org/</a>&nbsp; and stop responding questions here, knowing your efforts will be gone/thrown away!</p>

<p>They should have something equivalent or better available and is embraced by users before cutting existing useful stuff off.&nbsp;&nbsp;</p>

					
				
			
			
				
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13200152" id="lineardisplaymessageviewwrapper_1">
    
<div id="actionMenuDropDown_31ba15e56420f7">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15e56420f7">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15e56420f7">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15e56420f7">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15e56420f7">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15e56420f7">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15e56420f7" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84793">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15e56420f7" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13200152/highlight/true#M84793">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15e56420f7" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84793/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15e56420f7" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13200152">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><div itemprop="text" id="bodyDisplay_31ba15e5bc66c0">
			
				
					
					
						<blockquote>@<a href="https://forums.autodesk.com/t5/user/viewprofilepage/user-id/6082570" target="_self"><span>Tiana_Y</span></a>&nbsp;wrote:<p><span>The team has thoroughly reviewed the data and established criteria for content that is still helpful to our customers. We will repurpose or recreate that content before it is archived.&nbsp;</span></p><hr></blockquote><div><p>Yeah, the 10 years of content that are being deleted do hold some excellent content for the 'help' files.</p><p>There is enough content there from&nbsp;<span>Albert and Tony alone to fill a book.</span></p></div>
					
				
			
			
				<div>
	<p><span size="2">// Called Kerry in my other life.</span></p><p>Everything will work just as you expect it to, unless your expectations are incorrect.<br>Sometimes the question is more important than the answer.<br></p><p><span size="2">class keyThumper&lt;T&gt; : Lazy&lt;T&gt;;<em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; another&nbsp;&nbsp;<a title="get below the surface" href="https://www.theswamp.org/" target="_blank" rel="nofollow noopener noreferrer">Swamper</a></em></span></p>
</div>
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13200281" id="lineardisplaymessageviewwrapper_2">
    
<div id="actionMenuDropDown_31ba15e6ca5cd2">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15e6ca5cd2">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15e6ca5cd2">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15e6ca5cd2">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15e6ca5cd2">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15e6ca5cd2">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15e6ca5cd2" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84794">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15e6ca5cd2" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13200281/highlight/true#M84794">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15e6ca5cd2" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84794/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15e6ca5cd2" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13200281">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><p>
		        Accepted solution
		    </p><div itemprop="text" id="bodyDisplay_31ba15e7203166">
			
				
					
						
					
					
						<p>It’s insanity! At least from a developer perspective. There are still code samples from 2005 that are still very relevant today. Especially in the ARX forums, back in the early days Autodesk used to participate in the forums and there’s quit a lot of gems.</p><p>Going forward, I will not be posting code samples here, only links to TheSwamp, or GitHub.</p>
					
				
			
			
				<p>
	Python for AutoCAD, Python wrappers for ARX https://github.com/CEXT-Dan/PyRx
</p>
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13200316" id="lineardisplaymessageviewwrapper_3">
    
<div id="actionMenuDropDown_31ba15e863409e">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15e863409e">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15e863409e">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15e863409e">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15e863409e">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15e863409e">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15e863409e" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84795">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15e863409e" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13200316/highlight/true#M84795">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15e863409e" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84795/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15e863409e" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13200316">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><p>
		        Accepted solution
		    </p><div itemprop="text" id="bodyDisplay_31ba15e8ba76a3">
			
				
					
						
					
					
						<p>I've already switched to posting code on GitHub instead of/in addition to posting it here, for that and other reasons I'd rather not discuss here.</p><p>The thing that has me scratching my head, is the criteria that any thread started 10+ years ago is to be <strike>archived</strike> deleted, regardless of how recently it was updated or how relevant its contents are.</p><p>The suggestion that 'the team' is going to go through that much old content and identify what's worth keeping is pure fiction, as if we couldn't figure out how much work by qualified people would be needed to do that.</p><p>It would seem to appear that legacy products (namedly AutoCAD) is what's being targeted, as there's not very much 10-year-old content for products/services being pushed/promoted today.</p><p>The problem is that much of what Autodesk would like you to replace its legacy products with, is already on the verge of becoming obsolete itself.</p><p>It's not just Autodesk whose very existence is threatened by the rise of AI and AGI. Most vendors of 'traditional' software applications are being regarded as endangered species. For Autodesk and its competitors, the emergence of things like DeepMind's <a href="https://deepmind.google/discover/blog/genie-2-a-large-scale-foundation-world-model" target="_blank" rel="noopener nofollow noreferrer">Genie2</a> and <a href="https://www.worldlabs.ai/blog" target="_blank" rel="noopener nofollow noreferrer">WorldLabs' Spatial Intelligence</a> initiative (both of which are being positioned as foundations for end-to-end solutions for all types of design, as well as other things like gaming), will make application software and services as we know them today, totally obsolete.</p>
					
				
			
			
				
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13200525" id="lineardisplaymessageviewwrapper_4">
    
<div id="actionMenuDropDown_31ba15e9a403ee">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15e9a403ee">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15e9a403ee">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15e9a403ee">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15e9a403ee">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15e9a403ee">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15e9a403ee" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84804">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15e9a403ee" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13200525/highlight/true#M84804">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15e9a403ee" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84804/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15e9a403ee" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13200525">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><div itemprop="text" id="bodyDisplay_31ba15ea0015d9">
			
				
					
					
						<p>The next 5-10 years will be really interesting times.<br><span>AI , AGI and recent releases of NPU's will shift parts of the workload.</span></p><p><span>The reference to DeepMind ( and AlphaGo ) reminds me of the ripples in the GO community 10 years ago when a 'computer' had wins over professional players. It improved since then and it's successors are better.</span></p><p><span>&gt;&gt;&gt;&nbsp;</span></p><p>Since June 21st, 2017, til March 16th, 2018, DeepZenGo has played 3407 games against pros from the Nihon Kiin.</p><p>In those games, it managed to win 3228 games and lose 119 games, for a 96.5% winrate.</p><p>Anyone who has the fortune enough to have the time to play <span>Go/Weiqi/Baduk will appreciate how special this is.</span></p>
					
				
			
			
				<div>
	<p><span size="2">// Called Kerry in my other life.</span></p><p>Everything will work just as you expect it to, unless your expectations are incorrect.<br>Sometimes the question is more important than the answer.<br></p><p><span size="2">class keyThumper&lt;T&gt; : Lazy&lt;T&gt;;<em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; another&nbsp;&nbsp;<a title="get below the surface" href="https://www.theswamp.org/" target="_blank" rel="nofollow noopener noreferrer">Swamper</a></em></span></p>
</div>
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13201933" id="lineardisplaymessageviewwrapper_5">
    
<div id="actionMenuDropDown_31ba15eb22302e">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15eb22302e">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15eb22302e">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15eb22302e">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15eb22302e">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15eb22302e">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15eb22302e" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84815">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15eb22302e" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13201933/highlight/true#M84815">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15eb22302e" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84815/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15eb22302e" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13201933">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><p>
		        Accepted solution
		    </p><div itemprop="text" id="bodyDisplay_31ba15eb6bd3bd">
			
				
					
						
					
					
						<p>If it is about shortage of disc space, I think there is much more to be gained if the installation files are cleaned up instead of deleting valuable forum posts.</p>
					
				
			
			
				
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13201949" id="lineardisplaymessageviewwrapper_6">
    
<div id="actionMenuDropDown_31ba15ec7abed1">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15ec7abed1">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15ec7abed1">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15ec7abed1">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15ec7abed1">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15ec7abed1">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15ec7abed1" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84816">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15ec7abed1" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13201949/highlight/true#M84816">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15ec7abed1" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84816/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15ec7abed1" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13201949">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><div itemprop="text" id="bodyDisplay_31ba15ecdc1f35">
			
				
					
					
						<p>If space is a problem I'm sure we could find a dozen ssd's laying around.&nbsp;&nbsp;<span title=":beaming_face_with_smiling_eyes:">😁</span><br>Putting each group on it's own ssd would probably speed the site up too.</p>
					
				
			
			
				<div>
	<p><span size="2">// Called Kerry in my other life.</span></p><p>Everything will work just as you expect it to, unless your expectations are incorrect.<br>Sometimes the question is more important than the answer.<br></p><p><span size="2">class keyThumper&lt;T&gt; : Lazy&lt;T&gt;;<em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; another&nbsp;&nbsp;<a title="get below the surface" href="https://www.theswamp.org/" target="_blank" rel="nofollow noopener noreferrer">Swamper</a></em></span></p>
</div>
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13201963" id="lineardisplaymessageviewwrapper_7">
    
<div id="actionMenuDropDown_31ba15edf35b70">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15edf35b70">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15edf35b70">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15edf35b70">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15edf35b70">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15edf35b70">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15edf35b70" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84817">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15edf35b70" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13201963/highlight/true#M84817">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15edf35b70" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84817/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15edf35b70" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13201963">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><div itemprop="text" id="bodyDisplay_31ba15ee527474">
			
				
					
					
						<blockquote><hr><a href="https://forums.autodesk.com/t5/user/viewprofilepage/user-id/1948693">@Anton_Huizinga</a>&nbsp;wrote:<p>If it is about shortage of disc space, I think there is much more to be gained if the installation files are cleaned up instead of deleting valuable forum posts.</p><hr></blockquote><p>Let me assure you that this is not about a shortage of disk space.&nbsp; Autodesk has plenty of disk space.</p><p>There may be legitimate issues relating to the performance of searches and what have you that might be alleviated by reducing the amount of content that needs to be searched, but that could be addressed in other ways beside purging 'old' content.</p>
					
				
			
			
				
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13202247" id="lineardisplaymessageviewwrapper_8">
    
<div id="actionMenuDropDown_31ba15ef6ad153">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15ef6ad153">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15ef6ad153">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15ef6ad153">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15ef6ad153">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15ef6ad153">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15ef6ad153" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84820">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15ef6ad153" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13202247/highlight/true#M84820">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15ef6ad153" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84820/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15ef6ad153" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13202247">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><div itemprop="text" id="bodyDisplay_31ba15efba3a94">
			
				
					
					
						<p>“Let me assure you that this is not about a shortage of disk space”</p><p>Did the terms of service change ten years ago?&nbsp; Is it about to change? Or is there a Statute of limitations? Or Andrew just doesn’t like us?</p><p>Autodesk could at least iterate the old posts in the “AutoCAD Customization Forum” and look for code tags, save those.</p>
					
				
			
			
				<p>
	Python for AutoCAD, Python wrappers for ARX https://github.com/CEXT-Dan/PyRx
</p>
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13202318" id="lineardisplaymessageviewwrapper_9">
    
<div id="actionMenuDropDown_31ba15f0c6e79e">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15f0c6e79e">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15f0c6e79e">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15f0c6e79e">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15f0c6e79e">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15f0c6e79e">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15f0c6e79e" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84821">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15f0c6e79e" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13202318/highlight/true#M84821">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15f0c6e79e" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84821/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15f0c6e79e" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13202318">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><p>
		        Accepted solution
		    </p><div itemprop="text" id="bodyDisplay_31ba15f10be273">
			
				
					
						
					
					
						<p>Bummer:</p><p>I have been going through the older posts to see what's worth saving . . .&nbsp;</p><p>The first one&nbsp; I "archived" was from Albert on&nbsp;<span>‎2005-05-28</span></p><p><strong>Today the oldest post available for viewing is dated&nbsp;&nbsp;&nbsp;<span>‎2014-12-12&nbsp;09:45 AM&nbsp;</span></strong></p><p>So much for giving us a chance to save some of the info personally.&nbsp;</p><p>I'm going out to my veggie garden to archive some bugs.</p>
					
				
			
			
				<div>
	<p><span size="2">// Called Kerry in my other life.</span></p><p>Everything will work just as you expect it to, unless your expectations are incorrect.<br>Sometimes the question is more important than the answer.<br></p><p><span size="2">class keyThumper&lt;T&gt; : Lazy&lt;T&gt;;<em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; another&nbsp;&nbsp;<a title="get below the surface" href="https://www.theswamp.org/" target="_blank" rel="nofollow noopener noreferrer">Swamper</a></em></span></p>
</div>
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13202368" id="lineardisplaymessageviewwrapper_10">
    
<div id="actionMenuDropDown_31ba15f1e36685">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15f1e36685">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15f1e36685">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15f1e36685">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15f1e36685">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15f1e36685">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15f1e36685" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84822">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15f1e36685" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13202368/highlight/true#M84822">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15f1e36685" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84822/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15f1e36685" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13202368">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><div itemprop="text" id="bodyDisplay_31ba15f2289f27">
			
				
					
					
						<p>disaster, now most of the google search results are invalid. I’ve seen some bonehead cooperate moves, this is a doozy lol</p>
					
				
			
			
				<p>
	Python for AutoCAD, Python wrappers for ARX https://github.com/CEXT-Dan/PyRx
</p>
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13202420" id="lineardisplaymessageviewwrapper_11">
    
<div id="actionMenuDropDown_31ba15f30eb12d">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15f30eb12d">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15f30eb12d">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15f30eb12d">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15f30eb12d">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15f30eb12d">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15f30eb12d" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84823">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15f30eb12d" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13202420/highlight/true#M84823">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15f30eb12d" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84823/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15f30eb12d" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13202420">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><div itemprop="text" id="bodyDisplay_31ba15f360dece">
			
				
					
					
						<p><span size="4">[tongue-in-cheek]</span><br><span size="4">&nbsp; &nbsp; we're just like little mushrooms,</span></p><p><span size="4">&nbsp; &nbsp; kept in the dark and fed compost.</span></p><p><span size="4">[/tongue-in-cheek]</span></p><p><span title=":broken_heart:">💔</span></p>
					
				
			
			
				<div>
	<p><span size="2">// Called Kerry in my other life.</span></p><p>Everything will work just as you expect it to, unless your expectations are incorrect.<br>Sometimes the question is more important than the answer.<br></p><p><span size="2">class keyThumper&lt;T&gt; : Lazy&lt;T&gt;;<em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; another&nbsp;&nbsp;<a title="get below the surface" href="https://www.theswamp.org/" target="_blank" rel="nofollow noopener noreferrer">Swamper</a></em></span></p>
</div>
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13202567" id="lineardisplaymessageviewwrapper_12">
    
<div id="actionMenuDropDown_31ba15f45f4acf">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15f45f4acf">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15f45f4acf">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15f45f4acf">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15f45f4acf">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15f45f4acf">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15f45f4acf" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84824">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15f45f4acf" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13202567/highlight/true#M84824">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15f45f4acf" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84824/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15f45f4acf" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13202567">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><p>
		        Accepted solution
		    </p><div itemprop="text" id="bodyDisplay_31ba15f4a32a47">
			
				
					
						
					
					
						<blockquote><hr><a href="https://forums.autodesk.com/t5/user/viewprofilepage/user-id/8575899">@daniel_cadext</a>&nbsp;wrote:<p>disaster, now most of the google search results are invalid. I’ve seen some bonehead cooperate moves, this is a doozy lol</p><hr></blockquote><p>In <a href="https://forums.autodesk.com/t5/community-announcements/community-content-archiving-announcement-and-faq/m-p/13193995/highlight/true#M777" target="_blank">this reply</a> in the announcement thread that has been locked, I posted a link to a thread that served as an example of a thread that was started &gt; 10 years ago, that had significant updates (by&nbsp;<a href="https://forums.autodesk.com/t5/user/viewprofilepage/user-id/543921">@norman.yuan</a>) that he contributed within the past month.</p><p>That thread has been deleted.&nbsp;&nbsp;</p><p>Can you imagine that?&nbsp;&nbsp;<a href="https://forums.autodesk.com/t5/user/viewprofilepage/user-id/543921">@norman.yuan</a>&nbsp;put a significant effort into that contribution <strong><em>less than a month ago</em></strong>, and <em><strong>Autodesk just deleted it</strong></em>.</p><p>I also just confirmed that vast amounts of similar contributions made recently in threads that were started &gt; 10 years ago, and which is without a doubt, immensely helpful to customers and still highly-relevant today, has been wiped out.</p><p>When a business displays such blatant disrespect and utter disregard for those who consistently go above and beyond to support their customers, it leaves little room for doubt about their true priorities.</p>
					
				
			
			
				
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13203042" id="lineardisplaymessageviewwrapper_13">
    
<div id="actionMenuDropDown_31ba15f5827325">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15f5827325">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15f5827325">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15f5827325">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15f5827325">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15f5827325">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15f5827325" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84826">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15f5827325" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13203042/highlight/true#M84826">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15f5827325" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84826/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15f5827325" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13203042">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><div itemprop="text" id="bodyDisplay_31ba15f5c40fa7">
			
				
					
					
						<p>Thanks for the moral support guys !</p><p>It's comforting to know I'm not the only one astounded by this debacle.</p>
					
				
			
			
				<div>
	<p><span size="2">// Called Kerry in my other life.</span></p><p>Everything will work just as you expect it to, unless your expectations are incorrect.<br>Sometimes the question is more important than the answer.<br></p><p><span size="2">class keyThumper&lt;T&gt; : Lazy&lt;T&gt;;<em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; another&nbsp;&nbsp;<a title="get below the surface" href="https://www.theswamp.org/" target="_blank" rel="nofollow noopener noreferrer">Swamper</a></em></span></p>
</div>
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13203070" id="lineardisplaymessageviewwrapper_15">
    
<div id="actionMenuDropDown_31ba15f8277fb5">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15f8277fb5">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15f8277fb5">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15f8277fb5">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15f8277fb5">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15f8277fb5">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15f8277fb5" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84829">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15f8277fb5" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13203070/highlight/true#M84829">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15f8277fb5" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84829/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15f8277fb5" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13203070">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><div itemprop="text" id="bodyDisplay_31ba15f8923664">
			
				
					
					
						<blockquote><hr><a href="https://forums.autodesk.com/t5/user/viewprofilepage/user-id/1948693">@Anton_Huizinga</a>&nbsp;wrote:<p>You have my vote if you want to start a petition!</p><hr></blockquote><p>Thanks for the offer Anton, but I think it would be a waste of energy, just as this thread has been a waste of bandwidth. The primary benefit, seemingly, has just been to relieve a little emotional pressure.</p><blockquote><span>@Mrs Google: Emotional pressure, also known as emotional stress, is&nbsp;a negative response to intense emotions like fear, anger, sadness, or frustration.&nbsp;</span><span>It can become unhealthy when it interferes with your ability to do what you need to do or want.</span><br><hr></blockquote><p>Regards,</p>
					
				
			
			
				<div>
	<p><span size="2">// Called Kerry in my other life.</span></p><p>Everything will work just as you expect it to, unless your expectations are incorrect.<br>Sometimes the question is more important than the answer.<br></p><p><span size="2">class keyThumper&lt;T&gt; : Lazy&lt;T&gt;;<em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; another&nbsp;&nbsp;<a title="get below the surface" href="https://www.theswamp.org/" target="_blank" rel="nofollow noopener noreferrer">Swamper</a></em></span></p>
</div>
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13214958" id="lineardisplaymessageviewwrapper_17">
    
<div id="actionMenuDropDown_31ba15fb829d3d">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15fb829d3d">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15fb829d3d">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15fb829d3d">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15fb829d3d">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15fb829d3d">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15fb829d3d" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84921">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15fb829d3d" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13214958/highlight/true#M84921">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15fb829d3d" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84921/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15fb829d3d" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13214958">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><div itemprop="text" id="bodyDisplay_31ba15fbe582f9">
			
				
					
					
						<p>Just so everyone knows (and doesn't bother wasting their time trying to find them), all of the posts that I made under this account have been deleted. Most of those posts are as relevant today as they were the day they were posted.</p>
					
				
			
			
				
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
                
                    
        <div data-lia-message-uid="13215392" id="lineardisplaymessageviewwrapper_18">
    
<div id="actionMenuDropDown_31ba15fd0b104c">
					
	<ul aria-label="Dropdown menu items" role="list" id="dropdownmenuitems_31ba15fd0b104c">
		

	
	
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="markMessageUnread_31ba15fd0b104c">Mark as New</span></li>
		
			
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserBookmark_31ba15fd0b104c">Bookmark</span></li>
		
			
		
			
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserEmailSubscription_31ba15fd0b104c">Subscribe</span></li>
		
			<li role="listitem"><span aria-disabled="true" id="addMessageUserMute_31ba15fd0b104c">Mute</span></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow noopener noreferrer" id="rssMessage_31ba15fd0b104c" href="https://forums.autodesk.com/rss/message?board.id=152&amp;message.id=84923">Subscribe to RSS Feed</a></li>
		
			
		
			
		
			
		
			<li role="listitem"><a id="highlightMessage_31ba15fd0b104c" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/m-p/13215392/highlight/true#M84923">Permalink</a></li>
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="printMessage_31ba15fd0b104c" href="https://forums.autodesk.com/t5/forums/forumtopicprintpage/board-id/152/message-id/84923/print-single-message/true/page/1">Print</a></li>
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			
		
			<li role="listitem"><a rel="nofollow" id="reportAbuse_31ba15fd0b104c" href="https://forums.autodesk.com/t5/notifications/notifymoderatorpage/message-uid/13215392">Report</a></li>
		
			
		
			
		
			
		
			
		
	
	


	</ul>

				</div><p>
		        Accepted solution
		    </p><div itemprop="text" id="bodyDisplay_31ba15fd658c58">
			
				
					
						
					
					
						<p>I have to congratulate the person at Autodesk who came up with this idea. This is without a doubt, the most monumental act of stupidity ever in the company as you have single-handedly crippled the developer community. In no universe could this ever be considered a good idea. Imagine a civilization deleting their history. What you have done is virtually equivalent to this. I cannot imagine how you possibly came up with any benefit this could have for anyone. I cannot even fathom that you would conjure this idea in your mind and, after thorough contemplation, that others would agree to doing this.</p>
					
				
			
			
				<p>
	Python for AutoCAD, Python wrappers for ARX https://github.com/CEXT-Dan/PyRx
</p>
			
			
				
			
			
			
			
			
			
		</div></div>
	
                

                
				
            
        
    </div>
    
        <div id="inlinemessagereplyeditor">
			
				<div>
			<p><span aria-disabled="true" target="_blank" id="link_4"><img alt="" aria-label="Anonymous User" id="display" src="https://forums.autodesk.com/skins/images/C7AA7AB92B9CDA4FCAAC987F500C90BD/responsive_peak/images/icon_anonymous_message.png">
					
				</span>
				
			
		
</p>
		</div>
			

			<div>
			<p><span aria-disabled="true" target="_blank" id="link_5"><img alt="" aria-label="Anonymous User" id="display_0" src="https://forums.autodesk.com/skins/images/C7AA7AB92B9CDA4FCAAC987F500C90BD/responsive_peak/images/icon_anonymous_message.png">
					
				</span>
				
			
		
</p>
		</div>
		</div>
    
    
        
        
            <div aria-label="Use the previous and next links to move between pages. Use the page number links to go directly to a page." role="navigation" id="pager">
	

	
		

	

	

	

	


	
		<ul>
			
	
		
			
					<li>
						
		<span aria-disabled="true" id="link_8">
			<span>
				
					
				
				<span>Previous</span>
			</span>
		</span>
	
					</li>
				
		
			
					<li>
						<ul>
							<li>
								<span aria-disabled="true" aria-current="page" id="link_9">1</span>
							</li><li>
								<a aria-label="Page 2" id="link_10" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/td-p/13198106/page/2">2</a>
							</li>
						</ul>
					</li>
				
		
			
					<li>
						
		<a aria-label="Next Page" rel="next" id="link_11" href="https://forums.autodesk.com/t5/net/regarding-community-content-archiving/td-p/13198106/page/2">
			<span>Next</span>
			
				
			
		</a>
	
					</li>
				
		
	
	

		</ul>
	

	
	

	

	

	

	

	

	

    
</div>
        
        
	
    

	

	

	

	

	

</div>
				
			
		
		
	
	
</div>
</div>

				

			
		</center>
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Mercure: A WebSocket alternative for server-sent events (121 pts)]]></title>
            <link>https://github.com/dunglas/mercure</link>
            <guid>42571651</guid>
            <pubDate>Thu, 02 Jan 2025 04:33:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/dunglas/mercure">https://github.com/dunglas/mercure</a>, See on <a href="https://news.ycombinator.com/item?id=42571651">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto"><h2 tabindex="-1" dir="auto"><a href="https://mercure.rocks/" rel="nofollow"><img src="https://github.com/dunglas/mercure/raw/main/public/mercure.svg" alt="Mercure: Real-time Made Easy" title="Live Updates Made Easy"></a></h2><a id="" aria-label="Permalink: " href="#"></a></div>
<p dir="auto"><em>Protocol and Reference Implementation</em></p>
<p dir="auto">Mercure is a protocol for pushing data updates to web browsers and other HTTP clients in a convenient, fast, reliable, and battery-efficient way.
It is especially useful to publish async and real-time updates of resources served through web APIs, to reactive web and mobile apps.</p>
<p dir="auto"><a href="https://github.com/dunglas/mercure/blob/main/docs/ecosystem/awesome.md"><img src="https://camo.githubusercontent.com/3418ba3754faddfb88c5cbdc94c31ad670fc693c8caa59bc2806c9836acc04e4/68747470733a2f2f617765736f6d652e72652f62616467652e737667" alt="Awesome" data-canonical-src="https://awesome.re/badge.svg"></a>
<a href="https://artifacthub.io/packages/search?repo=mercure" rel="nofollow"><img src="https://camo.githubusercontent.com/8adabe9fd65225961a0d64f8ed1d20fce5959a845b9fc1291ccc81aabfd4c4d3/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f61727469666163746875622e696f2f62616467652f7265706f7369746f72792f6d657263757265" alt="Artifact HUB" data-canonical-src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/mercure"></a>
<a href="https://pkg.go.dev/github.com/dunglas/mercure" rel="nofollow"><img src="https://camo.githubusercontent.com/a90c98ee01265245f05c3d4638ea086773c219c96ea729c7521d034fc45bbb72/68747470733a2f2f706b672e676f2e6465762f62616467652f6769746875622e636f6d2f64756e676c61732f6d657263757265" alt="PkgGoDev" data-canonical-src="https://pkg.go.dev/badge/github.com/dunglas/mercure"></a>
<a href="https://github.com/dunglas/mercure/actions/workflows/ci.yml"><img src="https://github.com/dunglas/mercure/actions/workflows/ci.yml/badge.svg" alt="CI"></a>
<a href="https://coveralls.io/github/dunglas/mercure?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/75d005cab6ddb6aaaea3658e23aa9ca4e7e0e43ddd164ea4ca470ec06cc80df7/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f64756e676c61732f6d6572637572652f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/dunglas/mercure/badge.svg?branch=master"></a>
<a href="https://goreportcard.com/report/github.com/dunglas/mercure" rel="nofollow"><img src="https://camo.githubusercontent.com/7760de808664279956db47ba1a7b87ae8a82b1514e102d44f39b49bd24c1de09/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f64756e676c61732f6d657263757265" alt="Go Report Card" data-canonical-src="https://goreportcard.com/badge/github.com/dunglas/mercure"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/dunglas/mercure/blob/main/spec/subscriptions.png"><img src="https://github.com/dunglas/mercure/raw/main/spec/subscriptions.png" alt="Subscriptions Schema"></a></p>
<ul dir="auto">
<li><a href="https://mercure.rocks/docs/getting-started" rel="nofollow">Getting started</a></li>
<li><a href="https://mercure.rocks/docs" rel="nofollow">Full documentation</a></li>
<li><a href="https://demo.mercure.rocks/" rel="nofollow">Demo</a></li>
</ul>
<p dir="auto"><a href="https://mercure.rocks/spec" rel="nofollow">The protocol</a> is maintained in this repository and is also available as <a href="https://datatracker.ietf.org/doc/draft-dunglas-mercure/" rel="nofollow">an Internet-Draft</a>.</p>
<p dir="auto">A reference, production-grade, implementation of <a href="https://mercure.rocks/docs/hub/install" rel="nofollow"><strong>a Mercure hub</strong></a> (the server) is also available in this repository.
It's free software (AGPL) written in Go. It is provided along with a library that can be used in any Go application to implement the Mercure protocol directly (without a hub) and <a href="https://hub.docker.com/r/dunglas/mercure" rel="nofollow">an official Docker image</a>.</p>
<p dir="auto">In addition, a managed and high-scalability version of the Mercure.rocks hub is <a href="https://mercure.rocks/pricing" rel="nofollow">available on Mercure.rocks</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">See <a href="https://github.com/dunglas/mercure/blob/main/CONTRIBUTING.md">CONTRIBUTING.md</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License and Copyright</h2><a id="user-content-license-and-copyright" aria-label="Permalink: License and Copyright" href="#license-and-copyright"></a></p>
<p dir="auto">See <a href="https://mercure.rocks/docs/hub/license" rel="nofollow">license information</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Credits</h2><a id="user-content-credits" aria-label="Permalink: Credits" href="#credits"></a></p>
<p dir="auto">Created by <a href="https://dunglas.fr/" rel="nofollow">Kévin Dunglas</a>. Graphic design by <a href="https://github.com/ginifizz">Laury Sorriaux</a>.
Sponsored by <a href="https://les-tilleuls.coop/" rel="nofollow">Les-Tilleuls.coop</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Meta Wants More AI Bots on Facebook and Instagram (154 pts)]]></title>
            <link>https://nymag.com/intelligencer/article/meta-wants-more-ai-bots-on-facebook-and-instagram.html</link>
            <guid>42571608</guid>
            <pubDate>Thu, 02 Jan 2025 04:20:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nymag.com/intelligencer/article/meta-wants-more-ai-bots-on-facebook-and-instagram.html">https://nymag.com/intelligencer/article/meta-wants-more-ai-bots-on-facebook-and-instagram.html</a>, See on <a href="https://news.ycombinator.com/item?id=42571608">Hacker News</a></p>
<div id="readability-page-1" class="page"><section data-editable="main" data-track-zone="main">  <article role="main" data-track-type="article-detail" data-uri="nymag.com/intelligencer/_components/article/instances/cm5bl9xo4000l0iigwagqc2zu@published" data-content-channel="Technology" data-crosspost="" data-type="News-Commentary and Analysis" data-syndication="original" data-headline="Meta’s Big Bet on Bots" data-authors="John Herrman" data-publish-date="2024-12-31" data-tags="john herrman, screen time, technology, artificial intelligence, meta, facebook, instagram" data-issue-date="" data-components-count="9" data-canonical-url="http://nymag.com/intelligencer/article/meta-wants-more-ai-bots-on-facebook-and-instagram.html">
    


  
  
  
  <header>
    <div>
        <div>
              
              
                <p><a href="https://nymag.com/intelligencer/tags/screen-time/">screen time</a>
          <time datetime="2024-12-31T07:00:24.588-05:00" data-editable="publishedDate">
                <span>Dec. 31, 2024</span>
          </time>
        </p></div>
        <div>
          <h2 data-editable="overrideHeadline">Meta’s Big Bet on Bots</h2>
            <h2 data-editable="displayTeaser">Why AI friends are coming to Facebook and Instagram.</h2>
            

            <p><span>
                  <a href="https://nymag.com/author/john-herrman/" rel="author">
                    <img src="https://pyxis.nymag.com/v1/imgs/6a1/1fd/b7daa97d945a1ce337bc16618022639a01-john-herrman-intel.2x.rsquare.w168.jpg" alt="Portrait of John Herrman">
                  </a>
                </span>
            <span data-editable="bylines">
            <p><span>By</span> <span>
        ,
          <span>a tech columnist at Intelligencer</span><span>&nbsp;</span>
          <span>Formerly, he was a reporter and critic at the New York Times and co-editor of The Awl.</span>
      </span></p>

              </span>
          </p>
        </div>
      </div>
      <div data-editable="lede">
          <picture> <source media="(min-resolution: 192dpi) and (min-width: 1180px), (-webkit-min-device-pixel-ratio: 2) and (min-width: 1180px)" srcset="https://pyxis.nymag.com/v1/imgs/65c/541/a2c532c324bf9eb7c599b8f9565068f013-topimage-moshed.2x.rhorizontal.w1100.jpg 2x" width="1100" height="733"> <source media="(min-width: 1180px) " srcset="https://pyxis.nymag.com/v1/imgs/65c/541/a2c532c324bf9eb7c599b8f9565068f013-topimage-moshed.rhorizontal.w1100.jpg" width="1100" height="733"> <source media="(min-resolution: 192dpi) and (min-width: 768px), (-webkit-min-device-pixel-ratio: 2) and (min-width: 768px)" srcset="https://pyxis.nymag.com/v1/imgs/65c/541/a2c532c324bf9eb7c599b8f9565068f013-topimage-moshed.2x.rhorizontal.w1100.jpg 2x" width="1100" height="733"> <source media="(min-width: 768px)" srcset="https://pyxis.nymag.com/v1/imgs/65c/541/a2c532c324bf9eb7c599b8f9565068f013-topimage-moshed.rhorizontal.w1100.jpg" width="1100" height="733"> <source media="(min-resolution: 192dpi), (-webkit-min-device-pixel-ratio: 2)" srcset="https://pyxis.nymag.com/v1/imgs/65c/541/a2c532c324bf9eb7c599b8f9565068f013-topimage-moshed.2x.rhorizontal.w1100.jpg" width="1100" height="733"> <img src="https://pyxis.nymag.com/v1/imgs/65c/541/a2c532c324bf9eb7c599b8f9565068f013-topimage-moshed.rhorizontal.w1100.jpg" data-content-img="" width="1100" height="733" fetchpriority="high"> </picture>
          </div>
        <p><span>Photo-Illustration: Facebook</span>
        </p>
  </header>
  <section>
    <div data-editable="content">
      <div>
          <div>
            <picture> <source media="(min-resolution: 192dpi) and (min-width: 1180px), (-webkit-min-device-pixel-ratio: 2) and (min-width: 1180px)" srcset="https://pyxis.nymag.com/v1/imgs/65c/541/a2c532c324bf9eb7c599b8f9565068f013-topimage-moshed.2x.rhorizontal.w1100.jpg 2x" width="1100" height="733"> <source media="(min-width: 1180px) " srcset="https://pyxis.nymag.com/v1/imgs/65c/541/a2c532c324bf9eb7c599b8f9565068f013-topimage-moshed.rhorizontal.w1100.jpg" width="1100" height="733"> <source media="(min-resolution: 192dpi) and (min-width: 768px), (-webkit-min-device-pixel-ratio: 2) and (min-width: 768px)" srcset="https://pyxis.nymag.com/v1/imgs/65c/541/a2c532c324bf9eb7c599b8f9565068f013-topimage-moshed.2x.rhorizontal.w1100.jpg 2x" width="1100" height="733"> <source media="(min-width: 768px)" srcset="https://pyxis.nymag.com/v1/imgs/65c/541/a2c532c324bf9eb7c599b8f9565068f013-topimage-moshed.rhorizontal.w1100.jpg" width="1100" height="733"> <source media="(min-resolution: 192dpi), (-webkit-min-device-pixel-ratio: 2)" srcset="https://pyxis.nymag.com/v1/imgs/65c/541/a2c532c324bf9eb7c599b8f9565068f013-topimage-moshed.2x.rhorizontal.w1100.jpg" width="1100" height="733"> <img src="https://pyxis.nymag.com/v1/imgs/65c/541/a2c532c324bf9eb7c599b8f9565068f013-topimage-moshed.rhorizontal.w1100.jpg" data-content-img="" width="1100" height="733" fetchpriority="high"> </picture>
          </div>
            <div>
              <p><span>Photo-Illustration: Facebook</span>
              </p>
            </div>
              </div>
        <p data-editable="text" data-uri="nymag.com/intelligencer/_components/clay-paragraph/instances/cm5bl9xo4000j0iigj8huqij1@published" data-word-count="65">Among Meta’s many resolutions for the new year —&nbsp;making <a href="https://about.fb.com/news/2024/12/accelerating-the-future-ai-mixed-reality-and-the-metaverse/">augmented reality</a> and the metaverse happen, positioning itself to <a href="https://nymag.com/intelligencer/article/tiktoks-survival-depends-donald-trump.html">absorb</a> TikTok refugees if the app gets banned, <a href="https://www.reuters.com/technology/apple-slams-metas-numerous-interoperability-requests-2024-12-18/">cracking open</a> Apple’s platforms to get more access to user data, and <a href="https://www.cnbc.com/2024/12/23/meta-went-all-in-on-ai-in-2024-the-pressure-builds-in-2025.html">attriting its competition</a> in artificial intelligence with breathtaking spending — one stands out as plain weird: filling its social-media platforms with bots. According <a href="https://www.ft.com/content/91183cbb-50f9-464a-9d2e-96063825bfcf">to the <em>Financial Times</em></a>:</p>

  <blockquote data-uri="nymag.com/intelligencer/_components/blockquote/instances/cm5blel7e001u3b7z1ij4ha02@published" data-editable="text" data-word-count="99"><p>The Silicon Valley group is rolling out a range of AI products, including one that helps users create AI characters on Instagram and Facebook, as it battles with rival tech groups to attract and retain a younger audience. “We expect these AIs to actually, over time, exist on our platforms, kind of in the same way that accounts do,” said Connor Hayes, vice-president of product for generative AI at Meta. “They’ll have bios and profile pictures and be able to generate and share content powered by AI on the platform . . . that’s where we see all of this going,” he added.</p></blockquote>

  <p data-editable="text" data-uri="nymag.com/intelligencer/_components/clay-paragraph/instances/cm5ble2bm00173b7zyfwbqggi@published" data-word-count="193">The company has been <a href="https://nymag.com/intelligencer/article/how-meta-is-using-bots-to-automate-facebook-and-instagram.html">talking about this for a while</a>, to somewhat bewildered responses from the general public. The simplest explanation for what it’s doing is that the company has invested a lot in building generative AI models and would like to get a return on its investment through its most lucrative products: If there’s any economically productive way for Meta to plug AI tools into Facebook, Instagram, and WhatsApp, it’ll consider it. But Meta, a company with no qualms about <a href="https://nymag.com/intelligencer/2023/04/why-every-app-now-feels-like-tiktok-but-worse.html">chasing</a>, <a href="https://www.businessinsider.com/how-developer-mark-zuckerberg-invented-instagram-stories-copied-snapchat-2020-4">copying</a>, and <a href="https://www.nytimes.com/2023/11/08/technology/mark-zuckerberg-whatsapp.html">acquiring</a> its way into trends, is also <em>reacting</em> here. It <a href="https://nymag.com/intelligencer/article/does-anyone-need-an-ai-social-network.html">bought</a> SocialAI, a Twitter-ish “social network” where users’ “feeds” and “comment sections” are filled entirely with bots playing different characters. At the same time, it’s surely noticed that its platforms are already filling with AI slop <em>anyway </em>and that <a href="https://nymag.com/intelligencer/article/ai-generated-content-internet-online-slop-spam.html">some of this slop was creating a lot of engagement</a>, meaning that, in the ways that matter most to Meta, it’s not really slop at all. The company also <a href="https://nymag.com/intelligencer/article/what-messing-with-chatbots-tells-us-about-the-future-of-ai.html">clearly noticed</a> the rise of Character.ai, the popular —&nbsp;but possibly doomed —&nbsp;<a href="https://www.washingtonpost.com/technology/2024/12/10/character-ai-lawsuit-teen-kill-parents-texas/">lawsuit magnet</a> of an app in which young users create and chat and act out fictional scenarios with AI characters.</p>

  <p data-editable="text" data-uri="nymag.com/intelligencer/_components/clay-paragraph/instances/cm5ble2ey00183b7ze00durwr@published" data-word-count="70">Still, Meta’s framing here is unique to the company. It’s by far the leading American social-network firm, with more than a billion actual people using its products around the world to interact with one another. Practically everyone in tech is trying practically everything with AI, but Meta, the suggestion goes, is in a singular position to populate shared <em>human</em> spaces with synthetic characters, and it seems to think it’ll work.</p>

  <p data-editable="text" data-uri="nymag.com/intelligencer/_components/clay-paragraph/instances/cm5ble2h900193b7zsq42wwjt@published" data-word-count="128">As galling as this might sound to a casual Facebook user —&nbsp;after years of characterizing fake and automated profiles as spam, it’s okay now if Meta is running the accounts and they’re a little more convincing? — it has the benefit of sounding somewhat new and novel. Maybe these personas really will be engaging enough to post and respond alongside your friends, family, co-workers, and celebrities in your existing social-media feeds; maybe social-media feeds are the right place to encounter highly specific chatbots; maybe these chatbots can be entertaining or even helpful in the context of the apps users already check multiple times per day. It might not be a convincing story, but it’s a story: <em>There are increasingly intelligent bots among us, and they’re joining social media.&nbsp;</em></p>

  <p data-editable="text" data-uri="nymag.com/intelligencer/_components/clay-paragraph/instances/cm5ble2kq001a3b7zuk9i0bp3@published" data-word-count="216">The main benefit of this story is that, like a lot of AI products —&nbsp;it’s right there in the name! — it <a href="https://nymag.com/intelligencer/2023/11/elon-musks-grok-ai-bot-is-anti-woke-what-does-that-mean.html">anthropomorphizes</a> the underlying technology. A less compelling but perhaps more honest and useful way to characterize Meta’s impulse here is as the next step in a long process of automation and social mediation. When Facebook and Instagram were new, the content you encountered wasn’t just created by people you knew or chose to follow —&nbsp;it carried with it legible and obvious evidence of provenance. If you saw something from someone you didn’t follow or intend to interact with, it was because someone you know chose to share it; if you posted something, you could mostly assume it would be seen by people who intended to see it, and maybe by more people they intended to show it to. Well before the rise of TikTok, which mostly replaced follow/follower relationships with opaque algorithmic distribution, but especially after it, Facebook and Instagram have leaned hard into <a href="https://nymag.com/intelligencer/article/how-meta-is-using-bots-to-automate-facebook-and-instagram.html">subtler forms of automation</a>: content recommendations; people recommendations; unexplained stuff appearing in feeds, as Reels, or bugging users in notifications. The result is platforms where users are consuming more content but in some cases producing less, spaces that function less like social networks than like targeted advertising systems for everything.</p>

  <p data-editable="text" data-uri="nymag.com/intelligencer/_components/clay-paragraph/instances/cm5ble2mc001b3b7zvcdkmtp6@published" data-word-count="70">A lot of formerly social aspects of a platform like Facebook, in other words, have already been automated and replaced with machine learning, but each step in this direction has been subtle and somewhat concealed: You don’t really know, and certainly aren’t clearly told, why Meta assumes this or that Instagram Reel is something you want to see, or why one thing appears above another in an algorithmically sorted feed.</p>

  <p data-editable="text" data-uri="nymag.com/intelligencer/_components/clay-paragraph/instances/cm5ble2o9001c3b7zyqi3k2aw@published" data-word-count="146">The idea of introducing AI characters into Meta’s platforms is in some ways distinct and new —&nbsp;we’re talking about not just automating content curation and promotion here but, in some cases, actual creation — but can also be understood as a way to rebrand an effective but alienating overhaul that’s been a decade in the making. With many AI products —&nbsp;from ChatGPT to a customer-support bot — the performance of personhood, which is a bit of a <a href="https://nymag.com/intelligencer/2023/01/why-artificial-intelligence-often-feels-like-magic.html">misleading magic trick</a> even when done carefully, is at least as important as raw capabilities. Meta can claim it’s building technology to create social-media agents that can exist on its platforms “in the same way that accounts do,” and maybe it’ll turn out to be right. But Meta’s AI characters are also a way to slap a more friendly, humanlike face on a long, bloodless campaign of social automation.</p>

  


    </div>

    


          



      <span>Meta’s Big, Weird Bet on AI Bots</span>



  </section>
  
</article>

  

</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bogus Software (102 pts)]]></title>
            <link>https://minesweepergame.com/history/bogus-software.php</link>
            <guid>42571541</guid>
            <pubDate>Thu, 02 Jan 2025 04:08:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://minesweepergame.com/history/bogus-software.php">https://minesweepergame.com/history/bogus-software.php</a>, See on <a href="https://news.ycombinator.com/item?id=42571541">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>	


<div>
  <p><img src="https://minesweepergame.com/history/image/bogus-software-taipei-1.02-norris-1987.jpg"></p><p>Taipei 1.02 by Dave Norris in 1987 with the Bogus Software logo</p>
</div>

<p>Bogus Software was created in 1987 for games written by Microsoft employees.</p>

<p>Hans Spiller was hired by Microsoft in 1981<sup>1</sup> and Dave Norris joined in July 1984<sup>2</sup> where they both worked on XENIX language C compilers, assemblers and debuggers<sup>1,2,3</sup>. In 1987 they wrote a game in Macro-80 assembly language<sup>4</sup> based on the solitaire game Mahjong and called it Taipei<sup>5</sup>.</p>

<p><i>"Dave Norris and I were talking about Taipei (played with Mah-Jong tiles) one day, and we decided that we really ought to have a copyright notice. We thought about crediting it to Microsoft, but we'd written it about half at MS and half at home and it was (at that time) definitely not part of the MS product line. One of us (neither of can remember which it was) suggested giving the copyright as Bogus Software. We invited a number of other people who had written recreational programs to play along."</i><sup>6</sup></p>

<p>Other people included Ed Fries and Tom Saxton who jointly wrote the famous Fish! screensaver. Fries was a summer intern in 1985 before being hired in March 1986 to join a team of six people working on Excel 2.0<sup>7,8</sup>. He had previously published the Atari games 'Princess and the Frog' (1982), 'Ant Eater' (1983) and 'Sea Chase' (1983) and years later he ended up managing Microsoft Game Studios where he released the XBox<sup>8</sup>. His boss at Microsoft was Chris Peters<sup>9</sup> who wrote the Reversi game included in Windows 1.0. Tom Saxton was hired in 1987 to join the Macintosh Word team<sup>10</sup>. They were joined in 1988 by intern Wes Cherry who wrote Solitaire that summer.<sup>11,12</sup></p>

<p>The group wrote games at work because "when you're a programmer, especially back then, you have a lot of free time, because you make changes and you compile. And for a big project, a compile would take about 10 minutes."<sup>8</sup> Windows 2.0 was released in December 1987 and during the summer of 1988 the group created a Windows poker server and each person wrote a poker player to compete against each other<sup>8</sup>.</p>

<p>Fries remembers, "We were writing little poker AIs as just something fun to do on the side and we had a little front end so we could watch them play. And we needed cards."<sup>12</sup> One anonymous member of the Excel team says, "Of course we needed a DLL to draw the cards and so one evening I wrote the 50 lines of code or so and called it cards.dll. We were programmers, not artists, so initially we did screen grabs of a DOS solitaire game's cards and used those bitmaps." He also remembers, "We had an interface so the dealer could deal hands to any set of player programs and then the AI in the individual players would bet and we'd see who wrote the best player."<sup>13</sup> Fries states that it was Cherry who "ripped graphics from a card game for DOS" with the Bogus Software programmers using the cards.dll file for their poker programs<sup>9</sup>. Cherry writes, "At the time there was an internal 'company within a company' called Bogus software. It was really just a server where [a] bunch of guys [were] having fun hacking Windows to learn [how] the API tossed their games."<sup>11</sup></p>

<div>
  <p><img src="https://minesweepergame.com/history/image/solitaire-windows-3.0-cherry-1990.jpg"></p><p>Solitaire for Windows 3.0 (1990) by Cherry</p>
</div>

<p><a href="https://minesweepergame.com/history/robert-donner.php">Robert Donner</a> was not a member of Bogus Software but remembers uploading Minesweeper to "the internal shared servers"<sup>9</sup> and in another interview says a friend uploaded the game "to an internal server"<sup>12</sup>. This server is mentioned by Norris in an early Help file where he writes, "Taipei is not yet available in computer software stores" but "you can get it from the bogus directory in \\windex\public"<sup>3</sup>. The server was later a goldmine for Bruce Ryan when he became  Product Manager for the Windows Entertainment Pack in 1990<sup>6,9</sup>.</p>

<p>Another origin story is given in Spiller's Space War! Help file:</p>

<p><i>"Bogus Software is a little teeny division of Microsoft that was accidently founded by Dave Norris and Hans Spiller while they were trying to figure out how to avoid working on Codeview and the C Compiler, which is what they were supposed to be doing. It quickly got to be a lot of fun, and soon quite a few other people were joining up, also trying to figure out how to get out of what they were supposed to be doing, all the while thinking up clever ways to waste peoples time."</i><sup>14</sup></p>

<p>Spiller remembers, "Todd Laney even took to putting it into the diagnostic tools he'd written"<sup>6</sup>. Laney had joined Microsoft in 1987 and in 1990 wrote a task manager program called "Windows Process Status" with Charlie Kindel and Ed Halley. WPS 1.09 survives copyright 1990-1992 and it credits Bogus Software.</p>

<p>Spiller wrote several games at Microsoft including a Space Invaders clone and a Space Wars clone<sup>6</sup>. Space War! 0.00 was released for Windows 1.0 on 3 March 1987 and credits Bogus Software but forgot to mention Spiller! Version 0.12 from 7 August 1990 also survives and the Help file claims the Bogus Software logo is called "the Glyph of Bogosity"<sup>14</sup>. Both games almost made it into WEP but "while space invaders was obviously a clone and the lawyers killed it right away, my spacewar/asteroids game is on much stronger legal ground, and the lawyers let me do quite a bit of work on it before killing it just a few days before we went golden on Windows Entertainment Package Version 1."<sup>6</sup> </p>

<div>
  <p><img src="https://minesweepergame.com/history/image/bogus-software-spacewar-0.12-spiller-1990.jpg"></p><p>Space War! 0.12 (1990) by Hans Spiller</p>
</div>

<p>The earliest surviving version of Taipei is 1.02 from 3 April 1987 copyright Bogus Software. The source code for version 2.00 credits "David Norris and Hans Spiller" and jokes that "Bogus software does not do revision histories"<sup>4</sup>. Other versions included 3.10 (May 1990) and 3.50 (August 1990) with 3.50 adding a Help file and already requiring an ABOUTWEP.DLL file to run. However, it was version 4.00 that was released by Microsoft as part of WEP 1 while 5.00 was published by Norris in 1991 as shareware. These later versions credit Norris and thank Spiller "for ideas" except in the WEP version which does not mention Spiller.</p>

<p>Norris had written a chess game which he ported to Windows 3.0 on 11 October 1990 as "Win Chess 1.0"<sup>15</sup>. A second release of Win Chess 1.0 and a version 1.01 added more openings moves to its library and revamped Chess was released by Microsoft in WEP 4 (1992). The original version notes "This is the first released version of my WinChess chess program for Microsoft Windows". The Help file for version 2.0 explained that "As my Taipei program proved to be very popular as a shareware program, I've decided to make WinChess shareware as well" and he thanked "fellow bogusites" Hans and Ferg. The latter was Scott Ferguson who was hired in November 1986 and later became the Development Lead for Visual Basic.<sup>16,17</sup> Ferguson wrote QUADominoes in July 1990 and it was released as TetraVex in WEP 3 (1991).</p>

<div>
  <p><img src="https://minesweepergame.com/history/image/bogus-software-chess-1.0-norris-1990.jpg"></p><p>Win Chess 1.0 (1990) by Norris</p>
</div>

<p>Norris also released Mines 1.0 for Windows 3.0 sometime before June 1990<sup>18</sup>. The objective was to find a path from the top left corner to the bottom right corner across a sea of mines using number clues. Although similar in some respects to Minesweeper a beta version of the latter noted "WinMine bears little resemblance to the other windows Mine game" and teases Norris that Taipei "was a blatant rip-off of a Macintosh game" called Shanghai (1986)<sup>18</sup>. Norris told this site he still had the source code and that his inspiration for the game probably "had something to do with wanting to write a path-finding algorithm"<sup>19</sup>.</p>

<div>
  <p><img src="https://minesweepergame.com/history/image/bogus-software-mines-1.0-norris-1990.jpg"></p><p>Mines 1.0 (1990) by Norris</p>
</div>

<p>A famous Bogus Software program was the Fish! screensaver. During the summer of 1985 an artist in the tutorials team, Janet Vogelzang, asked Fries to convert her ASCII text pictures of fish into a screensaver. He made the MS-DOS screensaver in a few hours then asked for more fish and released an animated screensaver called "Microsoft Fish-O-Rama".<sup>8,9</sup> When he returned in March 1986 he joined the Excel 2.0 team and ported the program to Windows as Microsoft Fish! 1.0 with a copyright date of 1987<sup>9,12</sup>. In one version he says, "I made it so the spreadsheet could control a submarine in Fish, drive it around, shoot at the fish. It showed how live data could come in and out of Excel, and all the logic for controlling a submarine was recalculated in real-time in the spreadsheet."<sup>9</sup></p>

<div>
  <p><img src="https://minesweepergame.com/history/image/bogus-software-fish-1.0-fries-1987.jpg"></p><p>Fish! 1.0 (1987) by Fries</p>
</div>

<p>Excel 1.0 was only a Macintosh product so Fries decided to port his new screensaver to that platform<sup>9</sup>. Saxton suggested creating a fish editor program and promptly wrote one himself<sup>8,11</sup>. The pair released the screensaver and editor for both Macintosh and Windows in 1988 and Fries says, "We had put out a version that had an address on it for people to send the fish - just send fish - and instead of sending fish they started sending money."<sup>12</sup> He continues, "We put the name Bogus Software on that, but we didn't want to just say 'Bogus Software,' since it was just Tom and me, so we called it Tom and Ed's Bogus Software."<sup>9</sup> Fish! 3.0 was released in August 1991 with the Help file noting that "Tom &amp; Ed's Bogus Software was founded in 1988 to accomplish a simple goal: to put 'A Fish on Every Desktop.' Win Fish brings our efforts to the world of Microsoft Windows 3.0."<sup>20</sup></p>

<p>Spiller recalls, "One day, Ed Fries came to me wanting to take the name 'Bogus Software' to use for his shareware company for his fish program. This seemed kind of cool to me, as long as the real core of Bogus Software - the occasional recreational hack - would remain intact. So he and Tom Saxon called their company 'Tom and Ed's Bogus Software'."<sup>6</sup> In the Help file for Space War! Spiller notes, "We have already granted Tom &amp; Ed rights to the name, which is only right, since they are part of Bogus Software."<sup>14</sup></p>

<div>
  <p><img src="https://minesweepergame.com/history/image/bogus-software-fish-3.0-fries-saxton-1991.jpg"></p><p>Fish! 3.0 (1991) by Fries and Saxton</p>
</div>

<p>Dave Edson joined Microsoft in August 1988 to work on product support for the Windows SDK<sup>21</sup>. He had already published several TRS-80 games such as Caterpillar (1982), Tube Frenzy (1982), Venturer (1982), Planet Raider (1982), Catch-Em (1982) and Tutankam (1983). In March 1989 he released Tetris for Windows 1.00 copyright Bogus Software and in July 1990 he added a two-player mode. One lucky person remembers, "When I came to Dave's office for my half-hour interview he was just putting the finishing touches on a two-player mode. Under the pretext of helping him test this new feature, Dave proceeded to throttle me one game after another for a good twenty minutes."<sup>22</sup> Tetris was included in WEP 1 after Microsoft sorted out the copyright issues<sup>12</sup>. He ported Catchem to MS-DOS in 1989 but used his own label, Edson Software.</p><div>
  <p><img src="https://minesweepergame.com/history/image/bogus-software-tetris-1.00-edson-1989.jpg"></p><p>Tetris 1.00 (1989) by Edson</p>
</div>

<p><a href="https://minesweepergame.com/history/curt-johnson.php">Curt Johnson</a> joined Microsoft in 1989 to maintain an OS/2 debugger program. He told this site, "I don't remember who was involved with Bogus Software, or giving them credit for my games."<sup>23</sup> However, the earliest versions of his games PM Mine and Tic Tac Toe are copyright Bogus Software. He wrote PM Mine for OS/2 in 1989 and named it after his favourite MacIntosh game ("Mine") and the OS/2 windowing system ("Presentation Manager"). The object of the game was to cross a minefield from the bottom left corner to the top right corner using number clues. It was updated by Robert Donner in May 1990 as PM Mine 2.01 although the About box still claimed to be version 2.00. The game also credits David Shulman who joined in May 1989 for "Testing &amp; Design"<sup>24</sup>. Johnson also released Tic Tac Toe 0.1 for Windows 3.0 on 12 June 1990 with Robert Donner. His other games included Brick, Slots, Puzzle and Bridge It in 1990 but these do not credit the software label.</p>

<div>
  <p><img src="https://minesweepergame.com/history/image/donner-johnson-os2-pmmine-2.01-1990.jpg"></p><p>PM Mine 2.01 (1990) by Johnson and Donner</p>
</div>

<p>Ken Sykes also joined Microsoft in 1989.<sup>25</sup> His card games Cruel and Golf were included in WEP 1 and do not mention Bogus Software. However, Golf 1.1 (1989) thanks Bogus Software for the card deck which he also used for Cruel.</p>

<div>
  <p><img src="https://minesweepergame.com/history/image/bogus-software-golf-1.1-sykes-1989.jpg"></p><p>Golf 1.1 (1989) by Sykes with the "ace up the sleeve" Solitaire card</p>
</div>

<p>The most famous Bogus Software game was Solitaire and this was included in Windows 3.0 on 22 May 1990. Cherry used the cards.dll file and copied graphics from a DOS Solitaire game. He says, "I wrote it for Windows 2.1 in my own time while an intern at Microsoft during the summer of 1988."<sup>6</sup> A program manager saw the game and decided it should be in Windows 3.0 so Microsoft gave him an IBM XT computer to fix bugs at university<sup>6</sup>. His girlfriend, art major Leslie Kooy, created the rainbow shell, haunted castle, beach scene, robot and hidden ace cards with Cherry writing code for the moving bats<sup>26,27</sup>. His favourite card was the hidden ace based on the line "the aces are crawling up and down your sleeve" from the Grateful Dead song, "Doin' that Rag"<sup>28</sup>. Microsoft hired the famous graphics artist Susan Kare in 1988 and she further improved the card deck while designing icons for Windows 3.0<sup>29,30</sup>. Two beta versions exist from January 1990 and February 1990 which are almost identical to the final version.</p>

<p>Cherry also wrote Pipe Dream which was released in WEP 2 (1991).<sup>11</sup> The game credits Kooy for graphics.</p>

<div>
  <p><img src="https://minesweepergame.com/history/image/pipedream-wep-cherry-1991.jpg"></p><p>Pipe Dream (WEP 2, 1991) by Cherry</p>
</div>

<p>The Windows Entertainment Pack in October 1990 was the end of Bogus Software. Windows 3.0 had been released on 22 May 1990 and "A product manager thought it would be a smart idea to gather a few games together and create the Microsoft Entertainment Pack, so it became an intern's job to track down individual developers, get the source code, and ensure the apps could be shipped."<sup>9</sup> The Product Manager was Bruce Ryan and he was "going to all the Bogus developers" to see if they were interested<sup>6</sup>. Spiller remembers, "It turned out that the state of most of the games was inadequate, so we wound up doing quite a bit of illicit development work before shipping"<sup>6</sup>. Not all games made the cut and although some Bogus Software games such as TetraVex and Chess made it into later WEP editions, programmers were suddenly more careful to use their own names and all references to Bogus Software disappeared.</p>

<hr>
<h5>Pictures</h5>


<div>
<div><p><img id="1" src="https://minesweepergame.com/history/image/microsoft-hans-spiller.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Han Spiller (exmsft.com)</p></div><div><p><img id="2" src="https://minesweepergame.com/history/image/microsoft-hans-spiller-jousting-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Spiller jousting at Microsoft in a 1990 campus brochure</p></div><div><p><img id="3" src="https://minesweepergame.com/history/image/microsoft-hans-spiller-juggling-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Spiller juggling on campus in 1990</p></div><div><p><img id="4" src="https://minesweepergame.com/history/image/microsoft-hans-spiller-biography-1985.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Spiller biography in the IBM Systems Journal (1985)</p></div><div><p><img id="5" src="https://minesweepergame.com/history/image/microsoft-dave-norris-taipei-3.50-helpfile-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Dave Norris in the Taipei 3.50 (1990) Help file</p></div><div><p><img id="6" src="https://minesweepergame.com/history/image/microsoft-dave-norris.jpg" onclick="openModal();currentSlide(this.id);"></p><p>David Norris</p></div><div><p><img id="7" src="https://minesweepergame.com/history/image/microsoft-dave-norris-linkedin.jpg" onclick="openModal();currentSlide(this.id);"></p><p>David Norris (linkedin.com)</p></div><div><p><img id="8" src="https://minesweepergame.com/history/image/microsoft-ed-fries-xbox-2001.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Ed Fries with the new XBox in 2001 (eurogamer.net)</p></div><div><p><img id="9" src="https://minesweepergame.com/history/image/microsoft-ed-fries-microsoft-campus-2020.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Ed Fries at Microsoft in 2020 (shacknews.com)</p></div><div><p><img id="10" src="https://minesweepergame.com/history/image/microsoft-ed-fries-microsoft-alumni-2020.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Ed Fries at Microsoft in 2020 (microsoftalumni.com)</p></div><div><p><img id="11" src="https://minesweepergame.com/history/image/microsoft-scott-ferguson-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Scott Ferguson with the Visual Basic team in 1990</p></div><div><p><img id="12" src="https://minesweepergame.com/history/image/microsoft-scott-ferguson-2020.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Scott Ferguson in 2020 (facebook.com)</p></div><div><p><img id="13" src="https://minesweepergame.com/history/image/microsoft-dave-edson-tutankam-1983.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Dave Edson in 1983 with his Atari game Tutankam (facebook.com)</p></div><div><p><img id="14" src="https://minesweepergame.com/history/image/microsoft-wes-cherry-2017.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Wes Cherry interviewed in 2017</p></div><div><p><img id="15" src="https://minesweepergame.com/history/image/microsoft-wes-cherry-2016.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Wes Cherry at his cider farm in 2016</p></div><div><p><img id="16" src="https://minesweepergame.com/history/image/microsoft-ken-sykes-2017.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Ken Sykes in 2017</p></div><div><p><img id="17" src="https://minesweepergame.com/history/image/microsoft-tom-saxton-golfing-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Tom Saxton (middle) golfing in a 1990 Microsoft campus brochure</p></div><div><p><img id="18" src="https://minesweepergame.com/history/image/microsoft-tom-saxton-2013.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Tom Saxton in 2013</p></div><div><p><img id="19" src="https://minesweepergame.com/history/image/microsoft-todd-laney-2014.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Todd Laney in 2014</p></div><div><p><img id="20" src="https://minesweepergame.com/history/image/curt-johnson-tictalkers-july-2014.png" onclick="openModal();currentSlide(this.id);"></p><p>Curt Johnson in 2014</p></div><div><p><img id="21" src="https://minesweepergame.com/history/image/microsoft-excel-2.0-1987.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Windows Excel 2.0 (1987)</p></div><div><p><img id="22" src="https://minesweepergame.com/history/image/bogus-software-spacewar-0.12-spiller-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Space War! 0.12 (1990) by Spiller</p></div><div><p><img id="23" src="https://minesweepergame.com/history/image/bogus-software-taipei-1.02-norris-1987.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Taipei 1.02 (1987) by Norris</p></div><div><p><img id="24" src="https://minesweepergame.com/history/image/bogus-software-taipei-3.10-norris-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Taipei 3.10 (1990) by Norris</p></div><div><p><img id="25" src="https://minesweepergame.com/history/image/bogus-software-taipei-3.50-norris-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Taipei 3.50 (1990) by Norris</p></div><div><p><img id="26" src="https://minesweepergame.com/history/image/bogus-software-taipei-4.00-norris-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Taipei 4.00 (1990) by Norris</p></div><div><p><img id="27" src="https://minesweepergame.com/history/image/bogus-software-taipei-5.00-norris-1991.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Taipei 5.00 (1991) by Norris</p></div><div><p><img id="28" src="https://minesweepergame.com/history/image/macintosh-shanghai-game-1986.png" onclick="openModal();currentSlide(this.id);"></p><p>Macintosh Shanghai (1986) may have inspired Taipei</p></div><div><p><img id="29" src="https://minesweepergame.com/history/image/bogus-software-tetris-1.00-edson-1989.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Tetris 1.00 (1989) by Edson</p></div><div><p><img id="30" src="https://minesweepergame.com/history/image/tetris-wep-edson-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Tetris (WEP 1, 1990) by Edson</p></div><div><p><img id="31" src="https://minesweepergame.com/history/image/bogus-software-quadominoes-ferguson-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>QUADominoes (1990) by Ferguson</p></div><div><p><img id="32" src="https://minesweepergame.com/history/image/tetravex-wep-ferguson-1991.jpg" onclick="openModal();currentSlide(this.id);"></p><p>TetraVex (WEP 3, 1991) by Ferguson</p></div><div><p><img id="33" src="https://minesweepergame.com/history/image/bogus-software-chess-1.0-norris-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Win Chess 1.0 (1990) by Norris</p></div><div><p><img id="34" src="https://minesweepergame.com/history/image/bogus-software-chess-1.01-norris-1991.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Win Chess 1.01 (1991) by Norris</p></div><div><p><img id="35" src="https://minesweepergame.com/history/image/wep-chess-norris-1992.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Chess (WEP 4, 1992) by Norris</p></div><div><p><img id="36" src="https://minesweepergame.com/history/image/bogus-software-mines-1.0-norris-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Mines 1.0 (1990) by Norris</p></div><div><p><img id="37" src="https://minesweepergame.com/history/image/bogus-software-fish-1.0-fries-1987.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Fish! 1.0 (1987) by Fries</p></div><div><p><img id="38" src="https://minesweepergame.com/history/image/bogus-software-macintosh-fish-2.0-fries-saxton-1988.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Macintosh Fish! 2.0 (1988) by Fries and Saxton</p></div><div><p><img id="39" src="https://minesweepergame.com/history/image/bogus-software-fish-3.0-fries-saxton-1991.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Fish! 3.0 (1991) by Fries and Saxton</p></div><div><p><img id="40" src="https://minesweepergame.com/history/image/bogus-software-wps-1.09-laney-1992.jpg" onclick="openModal();currentSlide(this.id);"></p><p>WPS 1.09 (1992) by Laney</p></div><div><p><img id="41" src="https://minesweepergame.com/history/image/donner-johnson-os2-pmmine-2.01-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>PM Mine 2.01 (1990) by Johnson and Donner</p></div><div><p><img id="42" src="https://minesweepergame.com/history/image/donner-johnson-2d-tictactoe-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Tic Tac Toe 0.1 (1990) by Johnson and Donner</p></div><div><p><img id="43" src="https://minesweepergame.com/history/image/cruel-wep-sykes-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Cruel (WEP 1, 1990) by Sykes</p></div><div><p><img id="44" src="https://minesweepergame.com/history/image/bogus-software-golf-1.1-sykes-1989.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Golf 1.1 (1989) by Sykes</p></div><div><p><img id="45" src="https://minesweepergame.com/history/image/golf-wep-sykes-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Golf (WEP 1, 1990) by Sykes</p></div><div><p><img id="46" src="https://minesweepergame.com/history/image/bogus-software-tetris-1.0-edson-1989.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Tetris for Windows 1.0 (1989) by Edson</p></div><div><p><img id="47" src="https://minesweepergame.com/history/image/tetris-wep-edson-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Tetris (WEP 1, 1990) by Edson</p></div><div><p><img id="48" src="https://minesweepergame.com/history/image/solitaire-windows-3.0-cherry-1990.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Solitaire for Windows 3.0 (1990) by Cherry</p></div><div><p><img id="49" src="https://minesweepergame.com/history/image/susan-kare-solitaire-cards-portfolio.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Solitaire card deck from the Susan Kare portfolio on kare.com</p></div><div><p><img id="50" src="https://minesweepergame.com/history/image/pipedream-wep-cherry-1991.jpg" onclick="openModal();currentSlide(this.id);"></p><p>Pipe Dream (WEP 2, 1991) by Cherry</p></div></div>







<hr>
<h5>Downloads</h5>

<table>
<tbody><tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-entertainment-pack-1-1990.zip">WEP 1 (1990)</a> - The original Windows Entertainment Pack.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-entertainment-pack-2-1991.zip">WEP 2 (1991)</a> - The second Windows Entertainment Pack.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-entertainment-pack-3-1991.zip">WEP 3 (1991)</a> - The third Windows Entertainment Pack.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-entertainment-pack-4-1992.zip">WEP 4 (1992)</a> - The fourth Windows Entertainment Pack.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-spacewar-0.00-spiller-1987.zip">Space War! 0.00 (1987)</a> - Original Windows 1.0 version by Spiller.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-spacewar-0.12-spiller-1990.zip">Space War! 0.12 (1990)</a> - A Windows 3.0 version by Spiller.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-taipei-1.02-norris-1987.zip">Taipei 1.02 (1987)</a> - Earliest known version by Norris.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-taipei-3.10-norris-1990.zip">Taipei 3.10 (1990)</a> - Added colour to the Mahjong tiles.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-taipei-3.50-norris-1990.zip">Taipei 3.50 (1991)</a> - Minor updates.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-taipei-5.00-norris-1991.zip">Taipei 5.00 (1991)</a> - Shareware version released after WEP 1.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-chess-1.0a-norris-1990.zip">Win Chess 1.0 (1990)</a> - Original Windows version by Norris.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-chess-1.0b-norris-1990.zip">Win Chess 1.0 (1990)</a> - Updated version with more openings added to the library.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-chess-1.01-norris-1991.zip">Win Chess 1.01 (1991)</a> - Updated version with more openings added to the library.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-mines-1.0-norris-1990.zip">Mines 1.0 (1990)</a> - Only release of Mines by Norris.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-quadominoes-ferguson-1990.zip">QUADominoes (1990)</a> - Later renamed TetraVex and included in WEP 3.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-fish-1.0-fries-1987.zip">Fish! 1.0 (1987)</a> - The original Windows version based on the MS-DOS version.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/macintosh-fish-2.0-fries-saxton-1989.sit">Fish! 2.0 (1989)</a> - Released for the Macintosh.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-fish-3.0-fries-saxton-1991.zip">Fish! 3.0 (1991)</a> - Released for Windows 3.0.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-tetris-1.00-edson-1989.zip">Tetris 1.00 (1989)</a> - A different version was later included in WEP 1.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-wps-1.09-laney-1992.zip">WPS 1.09 (1992)</a> - Task manager by Todd Laney.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/os2-pmmine-2.01-johnson-donner-1990.zip">PM Mine 2.01 (1990)</a> - OS/2 game by Johnson updated by Donner.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-tictactoe-0.1-johnson-donner-1990.zip">Tic Tac Toe 0.1 (1990)</a> - Written by Johnson and Donner.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-golf-1.1-sykes-1989.zip">Golf 1.1 (1989)</a> - Golf by Sykes credits the Bogus Software card deck.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-solitaire-3.0a-cherry-1990.zip">Solitaire 3.0 (1990)</a> - Same as Windows 3.0 but with different error messages.</td></tr>
<tr><td><a rel="nofollow" href="https://minesweepergame.com/history/file/windows-solitaire-3.0b-cherry-1990.zip">Solitaire 3.0 (1990)</a> - Same as Windows 3.0 except for three bytes.</td></tr>
</tbody></table>

<hr>
<h5>References</h5>
<table>
<tbody><tr>
	<td>1</td>
	<td>
	<a rel="nofollow" href="https://www.linkedin.com/in/hans-spiller-809603b7/" target="_blank">
	linkedin.com</a> - Hans Spiller profile.</td>
</tr>
<tr>
	<td>2</td>
	<td>
	<a rel="nofollow" href="https://www.linkedin.com/in/davidcnorris/" target="_blank">
	linkedin.com</a> - Dave Norris profile.</td>
</tr>
<tr>
	<td>3</td>
	<td>Hans Spiller biography in "The C Programming Language and a C Compiler" in IBM Systems Journal Vol 24 No 1, 1985.</td>
</tr>
<tr>
	<td>4</td>
	<td>Code for Taipei 4.00 from the leaked Windows NT 4.0 source code.</td>
</tr>
<tr>
	<td>5</td>
	<td>Help file for Taipei 2.00 from the leaked Windows NT 4.0 source code.</td>
</tr>
<tr>
	<td>6</td>
	<td>
	<a rel="nofollow" href="https://www.exmsft.com/~hanss/pranks.htm" target="_blank">
	exmsft.com</a> - Hans Spiller homepage with stories about his time at Microsoft.</td>
</tr>
<tr>
	<td>7</td>
	<td>
	<a rel="nofollow" href="https://www.linkedin.com/in/edfries/" target="_blank">
	linkedin.com</a> - Ed Fries profile.</td>
</tr>
<tr>
	<td>8</td>
	<td>
	<a rel="nofollow" href="https://archive.computerhistory.org/resources/access/text/2014/07/102739917-05-01-acc.pdf" target="_blank">
	computerhistory.org</a> - Detailed interview in July 2014 with Ed Fries.</td>
</tr>
<tr>
	<td>9</td>
	<td>
	<a rel="nofollow" href="https://www.shacknews.com/article/120300/bet-on-black-how-microsoft-and-xbox-changed-pop-culture-part-1" target="_blank">
	shacknews.com</a> - Interviews with Ed Fries and Robert Donner in 2020.</td>
</tr>
<tr>
	<td>10</td>
	<td>
	<a rel="nofollow" href="https://saxton.org/tom_saxton/2011/10/steve-jobs.html" target="_blank">
	saxton.org</a> - Blog post in October 2011 by Tom Saxton.</td>
</tr>
<tr>
	<td>11</td>
	<td>
	<a rel="nofollow" href="https://www.reddit.com/r/todayilearned/comments/3zfadv/comment/cylwpua" target="_blank">
	reddit.com</a> - Post by Wes Cherry on 14 Jan 2016.</td>
</tr>
<tr>
	<td>12</td>
	<td>
	<a rel="nofollow" href="https://books.google.co.uk/books?id=H61vDwAAQBAJ" target="_blank">
	Game of X: The Long Road to XBox</a> - Book includes interviews with Donner and Fries in 2019.</td>
</tr>
<tr>
	<td>13</td>
	<td>
	<a rel="nofollow" href="https://web.archive.org/web/20100809203540/http://blogs.msdn.com/b/adam_nathan/archive/2006/12/04/thoughts-from-the-author-of-cards-dll.aspx" target="_blank">
	msdn.com</a> - The anonymous author of cards.dll emailed Adam Nathan's blog in December 2006.</td>
</tr>
<tr>
	<td>14</td>
	<td>Help file for Space Wars! 0.12 from 1990.</td>
</tr>
<tr>
	<td>15</td>
	<td>Help file for Win Chess 1.0 from 1990.</td>
</tr>
<tr>
	<td>16</td>
	<td>
	<a rel="nofollow" href="https://www.facebook.com/scott.ferguson.77312" target="_blank">
	facebook.com</a> - Scott Ferguson profile.</td>
</tr>
<tr>
	<td>17</td>
	<td>
	<a rel="nofollow" href="http://www.forestmoon.com/birthofvb/birthofvb.html" target="_blank">
	forestmoon.com</a> - Scott Ferguson blogs about his career at Microsoft.</td>
</tr>
<tr>
	<td>18</td>
	<td>Help file for Win Mine 2.8 from 1990.</td>
</tr>
<tr>
	<td>19</td>
	<td>Email from Dave Norris on 28 May 2013 with the author of this article.</td>
</tr>
<tr>
	<td>20</td>
	<td>Help file for Win Fish! 3.0 from 1990.</td>
</tr>
<tr>
	<td>21</td>
	<td>
	<a rel="nofollow" href="https://www.linkedin.com/in/dave-edson-89991620" target="_blank">
	linkedin.com</a> - Dave Edson profile.</td>
</tr>
<tr>
	<td>22</td>
	<td>
	<a rel="nofollow" href="https://books.google.co.uk/books?id=O5j5DAAAQBAJ" target="_blank">
	Mystic Microsoft</a> - Kraig Brockschmidt describes his interview with Dave Edson.</td>
</tr>
<tr>
	<td>23</td>
	<td>Email from Curt Johnson on 2 October 2013 with the author of this article.</td>
</tr>
<tr>
	<td>24</td>
	<td>
	<a rel="nofollow" href="https://www.linkedin.com/in/davideshulman/" target="_blank">
	linkedin.com</a> - David Shulman profile.</td>
</tr>
<tr>
	<td>25</td>
	<td>
	<a rel="nofollow" href="https://www.linkedin.com/in/ken-sykes-10ba9a3a/" target="_blank">
	linkedin.com</a> - Ken Sykes profile.</td>
</tr>
<tr>
	<td>26</td>
	<td>
	<a rel="nofollow" href="https://www.reddit.com/r/todayilearned/comments/3zfadv/comment/cym827p/" target="_blank">
	reddit.com</a> - Post by Leslie Kooy on 5 Jan 2016.</td>
</tr>
<tr>
	<td>27</td>
	<td>
	<a rel="nofollow" href="https://www.reddit.com/r/IAmA/comments/3zhuqq/comment/d14xsba/" target="_blank">
	reddit.com</a> - Post by Leslie Kooy on 18 March 2016.</td>
</tr>
<tr>
	<td>28</td>
	<td>
	<a rel="nofollow" href="https://b3ta.com/interview/solitaire/" target="_blank">
	b3ta.com</a> - Interview with Wes Cherry in January 2004 (Issue #118).</td>
</tr>
<tr>
	<td>29</td>
	<td>
	<a rel="nofollow" href="https://web.archive.org/web/20010811072302/http://www.kare.com/MakePortfolioPage.cgi?page=7" target="_blank">
	kare.com</a> - Archived version of site from 2001 with screenshots of the original Solitaire graphics.</td>
</tr>
<tr>
	<td>30</td>
	<td>
	<a rel="nofollow" href="https://web.archive.org/web/20040609210403/http://www.kare.com/articles/sjmerc.html" target="_blank">
	kare.com</a> - Archived San Jose Mercury News interview with Susan Kare on 28 May 1990</td>
</tr>
</tbody></table>

<hr>
<p>Article created 4 October 2021 by Damien Moore.</p>



<!-- End Row 1 Columns -->
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Blogs rot. Wikis wait (173 pts)]]></title>
            <link>https://j3s.sh/thought/blogs-rot-wikis-wait.html</link>
            <guid>42571367</guid>
            <pubDate>Thu, 02 Jan 2025 03:32:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://j3s.sh/thought/blogs-rot-wikis-wait.html">https://j3s.sh/thought/blogs-rot-wikis-wait.html</a>, See on <a href="https://news.ycombinator.com/item?id=42571367">Hacker News</a></p>
<div id="readability-page-1" class="page">
<p>     blogs rot. wikis wait.
          2025-01-01

 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my

              Abyss


   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⡀⠒⠒⠦⣄⡀
   ⠀⠀⠀⠀⠀⢀⣤⣶⡾⠿⠿⠿⠿⣿⣿⣶⣦⣄⠙⠷⣤⡀
   ⠀⠀⠀⣠⡾⠛⠉⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⣿⣷⣄⠘⢿⡄
   ⠀⢀⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠐⠂⠠⢄⡀⠈⢿⣿⣧⠈⢿⡄
   ⢀⠏⠀⠀⠀⢀⠄⣀⣴⣾⠿⠛⠛⠛⠷⣦⡙⢦⠀⢻⣿⡆⠘⡇
   ⠀⠀⠀⠀⡐⢁⣴⡿⠋⢀⠠⣠⠤⠒⠲⡜⣧⢸⠄⢸⣿⡇⠀⡇
   ⠀⠀⠀⡼⠀⣾⡿⠁⣠⢃⡞⢁⢔⣆⠔⣰⠏⡼⠀⣸⣿⠃⢸⠃
   ⠀⠀⢰⡇⢸⣿⡇⠀⡇⢸⡇⣇⣀⣠⠔⠫⠊⠀⣰⣿⠏⡠⠃⠀⠀⢀
   ⠀⠀⢸⡇⠸⣿⣷⠀⢳⡈⢿⣦⣀⣀⣀⣠⣴⣾⠟⠁⠀⠀⠀⠀⢀⡎
   ⠀⠀⠘⣷⠀⢻⣿⣧⠀⠙⠢⠌⢉⣛⠛⠋⠉⠀⠀⠀⠀⠀⠀⣠⠎
   ⠀⠀⠀⠹⣧⡀⠻⣿⣷⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡾⠃
   ⠀⠀⠀⠀⠈⠻⣤⡈⠻⢿⣿⣷⣦⣤⣤⣤⣤⣤⣴⡾⠛⠉
   ⠀⠀⠀⠀⠀⠀⠈⠙⠶⢤⣈⣉⠛⠛⠛⠛⠋⠉
   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠁

   wikis are companions

   a wiki for you--
   just you

   to add, read, delete,
   expand

   a changeling, chaotic,
   inconsistent, wild,
   forever flailing and
   uncertain,
   like you

   ...

   a blog is a storefront

   pretty products adorned, designed,
   pristine and tailored, for them

   skinny plastic legs
   poke through perfect plastic
   casing

   landfills of abandoned posts
   decay

   ...

   a wiki is an abyss

   thoughts written alone
   unravel, and
   stitch themselves with meaning

   ...

   blogs rot.
   wikis wait.


[0]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠖⠒⠒⠦⡄⠀⢠⠄⠀⠀⠀⠀
⠀⠀⠀⠀⠒⠀⠠⠄⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⢠⣋⠂⢀⠀⠀⠀⠀⡠⠞⠀⠀⠀⠄⠀
⠂⠀⠀⠀⠀⠨⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡏⠀⣠⠔⠋⠀⠈⡇⠐⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⠀⠀⢀⠀⠀⠀⠀⠈⡣⣺⣥⣶⡀⠀⠄⣰⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⠉⠘⠮⢍⣝⡥⠞⠁⠀⠀⠀⠀⠐⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⠀
⠀⠁⠀⠀⠀⠀⠄⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⠔⠋⢠⠔⠊⠁⠀⠀⠉⠳⡄⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⢀
⠀⠀⠀⠀⠀⠀⠎⠁⣠⠊⠀⢀⡤⠂⠊⠉⠉⠉⠻⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⡐⠁⣠⠖⢦⠀⠸⡀⠀⠙⡄⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀
⠄⠀⠀⠀⡜⢠⠀⠀⠀⢐⠃⠀⡇⠀⢸⠀⠀⢸⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢊⠘⡄⠀⠀⠘⢆⣀⣀⣠⠃⠀⢠⠏⠀⠀⠰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠘⣆⢳⡀⠀⠀⠀⠀⠀⣀⣀⡴⠊⠁⠀⠀⡆⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠂⠀⠀
⠀⠀⠠⠀⠀⠀⠘⠪⠑⠒⠀⠀⠀⠀⠀⠀⠀⢀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠁⠈⠈⠈⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ^ your wiki here




  p.s. i'm working on a new wiki to replace
       my website with - something
       new, from the ground up.

       git.j3s.sh/abyss - stay tuned

[0]: ascii art from
     https://emojicombos.com/galaxy-ascii-art

</p>
<p>follow me on <a href="https://merveilles.town/@j3s">mastodon!</a>
</p><p>last updated 2025-01-01T00:00:00.000Z

</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Kotaemon: An open-source RAG-based tool for chatting with your documents (142 pts)]]></title>
            <link>https://github.com/Cinnamon/kotaemon</link>
            <guid>42571272</guid>
            <pubDate>Thu, 02 Jan 2025 03:13:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Cinnamon/kotaemon">https://github.com/Cinnamon/kotaemon</a>, See on <a href="https://news.ycombinator.com/item?id=42571272">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text">

<p dir="auto"><h2 tabindex="-1" dir="auto">Introduction</h2><a id="user-content-introduction" aria-label="Permalink: Introduction" href="#introduction"></a></p>
<p dir="auto">This project serves as a functional RAG UI for both end users who want to do QA on their
documents and developers who want to build their own RAG pipeline.
<br></p>
<div dir="auto" data-snippet-clipboard-copy-content="+----------------------------------------------------------------------------+
| End users: Those who use apps built with `kotaemon`.                       |
| (You use an app like the one in the demo above)                            |
|     +----------------------------------------------------------------+     |
|     | Developers: Those who built with `kotaemon`.                   |     |
|     | (You have `import kotaemon` somewhere in your project)         |     |
|     |     +----------------------------------------------------+     |     |
|     |     | Contributors: Those who make `kotaemon` better.    |     |     |
|     |     | (You make PR to this repo)                         |     |     |
|     |     +----------------------------------------------------+     |     |
|     +----------------------------------------------------------------+     |
+----------------------------------------------------------------------------+"><pre><span>+----------------------------------------------------------------------------+</span>
<span>| End users</span>: <span>Those who use apps built with `kotaemon`.                       |</span>
<span>| (You use an app like the one in the demo above)                            |</span>
<span>|     +----------------------------------------------------------------+     |</span>
<span>|     | Developers</span>: <span>Those who built with `kotaemon`.                   |     |</span>
<span>|     | (You have `import kotaemon` somewhere in your project)         |     |</span>
<span>|     |     +----------------------------------------------------+     |     |</span>
<span>|     |     | Contributors</span>: <span>Those who make `kotaemon` better.    |     |     |</span>
<span>|     |     | (You make PR to this repo)                         |     |     |</span>
<span>|     |     +----------------------------------------------------+     |     |</span>
<span>|     +----------------------------------------------------------------+     |</span>
<span>+----------------------------------------------------------------------------+</span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">For end users</h3><a id="user-content-for-end-users" aria-label="Permalink: For end users" href="#for-end-users"></a></p>
<ul dir="auto">
<li><strong>Clean &amp; Minimalistic UI</strong>: A user-friendly interface for RAG-based QA.</li>
<li><strong>Support for Various LLMs</strong>: Compatible with LLM API providers (OpenAI, AzureOpenAI, Cohere, etc.) and local LLMs (via <code>ollama</code> and <code>llama-cpp-python</code>).</li>
<li><strong>Easy Installation</strong>: Simple scripts to get you started quickly.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">For developers</h3><a id="user-content-for-developers" aria-label="Permalink: For developers" href="#for-developers"></a></p>
<ul dir="auto">
<li><strong>Framework for RAG Pipelines</strong>: Tools to build your own RAG-based document QA pipeline.</li>
<li><strong>Customizable UI</strong>: See your RAG pipeline in action with the provided UI, built with <a href="https://github.com/gradio-app/gradio">Gradio <img src="https://camo.githubusercontent.com/0aad2cc35d9b929ec7344ece3bbe7884c9618b501d29c029fffc324932e3f50d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f67726164696f2d6170702f67726164696f" data-canonical-src="https://img.shields.io/github/stars/gradio-app/gradio"></a>.</li>
<li><strong>Gradio Theme</strong>: If you use Gradio for development, check out our theme here: <a href="https://github.com/lone17/kotaemon-gradio-theme">kotaemon-gradio-theme</a>.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Key Features</h2><a id="user-content-key-features" aria-label="Permalink: Key Features" href="#key-features"></a></p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Host your own document QA (RAG) web-UI</strong>: Support multi-user login, organize your files in private/public collections, collaborate and share your favorite chat with others.</p>
</li>
<li>
<p dir="auto"><strong>Organize your LLM &amp; Embedding models</strong>: Support both local LLMs &amp; popular API providers (OpenAI, Azure, Ollama, Groq).</p>
</li>
<li>
<p dir="auto"><strong>Hybrid RAG pipeline</strong>: Sane default RAG pipeline with hybrid (full-text &amp; vector) retriever and re-ranking to ensure best retrieval quality.</p>
</li>
<li>
<p dir="auto"><strong>Multi-modal QA support</strong>: Perform Question Answering on multiple documents with figures and tables support. Support multi-modal document parsing (selectable options on UI).</p>
</li>
<li>
<p dir="auto"><strong>Advanced citations with document preview</strong>: By default the system will provide detailed citations to ensure the correctness of LLM answers. View your citations (incl. relevant score) directly in the <em>in-browser PDF viewer</em> with highlights. Warning when retrieval pipeline return low relevant articles.</p>
</li>
<li>
<p dir="auto"><strong>Support complex reasoning methods</strong>: Use question decomposition to answer your complex/multi-hop question. Support agent-based reasoning with <code>ReAct</code>, <code>ReWOO</code> and other agents.</p>
</li>
<li>
<p dir="auto"><strong>Configurable settings UI</strong>: You can adjust most important aspects of retrieval &amp; generation process on the UI (incl. prompts).</p>
</li>
<li>
<p dir="auto"><strong>Extensible</strong>: Being built on Gradio, you are free to customize or add any UI elements as you like. Also, we aim to support multiple strategies for document indexing &amp; retrieval. <code>GraphRAG</code> indexing pipeline is provided as an example.</p>
</li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/Cinnamon/kotaemon/main/docs/images/preview.png"><img src="https://raw.githubusercontent.com/Cinnamon/kotaemon/main/docs/images/preview.png" alt="Preview"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<blockquote>
<p dir="auto">If you are not a developer and just want to use the app, please check out our easy-to-follow <a href="https://cinnamon.github.io/kotaemon/" rel="nofollow">User Guide</a>. Download the <code>.zip</code> file from the <a href="https://github.com/Cinnamon/kotaemon/releases/latest">latest release</a> to get all the newest features and bug fixes.</p>
</blockquote>
<p dir="auto"><h3 tabindex="-1" dir="auto">System requirements</h3><a id="user-content-system-requirements" aria-label="Permalink: System requirements" href="#system-requirements"></a></p>
<ol dir="auto">
<li><a href="https://www.python.org/downloads/" rel="nofollow">Python</a> &gt;= 3.10</li>
<li><a href="https://www.docker.com/" rel="nofollow">Docker</a>: optional, if you <a href="#with-docker-recommended">install with Docker</a></li>
<li><a href="https://docs.unstructured.io/open-source/installation/full-installation#full-installation" rel="nofollow">Unstructured</a> if you want to process files other than <code>.pdf</code>, <code>.html</code>, <code>.mhtml</code>, and <code>.xlsx</code> documents. Installation steps differ depending on your operating system. Please visit the link and follow the specific instructions provided there.</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">With Docker (recommended)</h3><a id="user-content-with-docker-recommended" aria-label="Permalink: With Docker (recommended)" href="#with-docker-recommended"></a></p>
<ol dir="auto">
<li>
<p dir="auto">We support both <code>lite</code> &amp; <code>full</code> version of Docker images. With <code>full</code>, the extra packages of <code>unstructured</code> will be installed as well, it can support additional file types (<code>.doc</code>, <code>.docx</code>, ...) but the cost is larger docker image size. For most users, the <code>lite</code> image should work well in most cases.</p>
<ul dir="auto">
<li>
<p dir="auto">To use the <code>lite</code> version.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run \
-e GRADIO_SERVER_NAME=0.0.0.0 \
-e GRADIO_SERVER_PORT=7860 \
-p 7860:7860 -it --rm \
ghcr.io/cinnamon/kotaemon:main-lite"><pre>docker run \
-e GRADIO_SERVER_NAME=0.0.0.0 \
-e GRADIO_SERVER_PORT=7860 \
-p 7860:7860 -it --rm \
ghcr.io/cinnamon/kotaemon:main-lite</pre></div>
</li>
<li>
<p dir="auto">To use the <code>full</code> version.</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker run \
-e GRADIO_SERVER_NAME=0.0.0.0 \
-e GRADIO_SERVER_PORT=7860 \
-p 7860:7860 -it --rm \
ghcr.io/cinnamon/kotaemon:main-full"><pre>docker run \
-e GRADIO_SERVER_NAME=0.0.0.0 \
-e GRADIO_SERVER_PORT=7860 \
-p 7860:7860 -it --rm \
ghcr.io/cinnamon/kotaemon:main-full</pre></div>
</li>
</ul>
</li>
<li>
<p dir="auto">We currently support and test two platforms: <code>linux/amd64</code> and <code>linux/arm64</code> (for newer Mac). You can specify the platform by passing <code>--platform</code> in the <code>docker run</code> command. For example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# To run docker with platform linux/arm64
docker run \
-e GRADIO_SERVER_NAME=0.0.0.0 \
-e GRADIO_SERVER_PORT=7860 \
-p 7860:7860 -it --rm \
--platform linux/arm64 \
ghcr.io/cinnamon/kotaemon:main-lite"><pre><span><span>#</span> To run docker with platform linux/arm64</span>
docker run \
-e GRADIO_SERVER_NAME=0.0.0.0 \
-e GRADIO_SERVER_PORT=7860 \
-p 7860:7860 -it --rm \
--platform linux/arm64 \
ghcr.io/cinnamon/kotaemon:main-lite</pre></div>
</li>
<li>
<p dir="auto">Once everything is set up correctly, you can go to <code>http://localhost:7860/</code> to access the WebUI.</p>
</li>
<li>
<p dir="auto">We use <a href="https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry">GHCR</a> to store docker images, all images can be found <a href="https://github.com/Cinnamon/kotaemon/pkgs/container/kotaemon">here.</a></p>
</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">Without Docker</h3><a id="user-content-without-docker" aria-label="Permalink: Without Docker" href="#without-docker"></a></p>
<ol dir="auto">
<li>
<p dir="auto">Clone and install required packages on a fresh python environment.</p>
<div dir="auto" data-snippet-clipboard-copy-content="# optional (setup env)
conda create -n kotaemon python=3.10
conda activate kotaemon

# clone this repo
git clone https://github.com/Cinnamon/kotaemon
cd kotaemon

pip install -e &quot;libs/kotaemon[all]&quot;
pip install -e &quot;libs/ktem&quot;"><pre><span><span>#</span> optional (setup env)</span>
conda create -n kotaemon python=3.10
conda activate kotaemon

<span><span>#</span> clone this repo</span>
git clone https://github.com/Cinnamon/kotaemon
<span>cd</span> kotaemon

pip install -e <span><span>"</span>libs/kotaemon[all]<span>"</span></span>
pip install -e <span><span>"</span>libs/ktem<span>"</span></span></pre></div>
</li>
<li>
<p dir="auto">Create a <code>.env</code> file in the root of this project. Use <code>.env.example</code> as a template</p>
<p dir="auto">The <code>.env</code> file is there to serve use cases where users want to pre-config the models before starting up the app (e.g. deploy the app on HF hub). The file will only be used to populate the db once upon the first run, it will no longer be used in consequent runs.</p>
</li>
<li>
<p dir="auto">(Optional) To enable in-browser <code>PDF_JS</code> viewer, download <a href="https://github.com/mozilla/pdf.js/releases/download/v4.0.379/pdfjs-4.0.379-dist.zip">PDF_JS_DIST</a> then extract it to <code>libs/ktem/ktem/assets/prebuilt</code></p>
</li>
</ol>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/Cinnamon/kotaemon/main/docs/images/pdf-viewer-setup.png"><img src="https://raw.githubusercontent.com/Cinnamon/kotaemon/main/docs/images/pdf-viewer-setup.png" alt="pdf-setup" width="300"></a></p>
<ol start="4" dir="auto">
<li>
<p dir="auto">Start the web server:</p>

<ul dir="auto">
<li>The app will be automatically launched in your browser.</li>
<li>Default username and password are both <code>admin</code>. You can set up additional users directly through the UI.</li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/Cinnamon/kotaemon/main/docs/images/chat-tab.png"><img src="https://raw.githubusercontent.com/Cinnamon/kotaemon/main/docs/images/chat-tab.png" alt="Chat tab"></a></p>
</li>
<li>
<p dir="auto">Check the <code>Resources</code> tab and <code>LLMs and Embeddings</code> and ensure that your <code>api_key</code> value is set correctly from your <code>.env</code> file. If it is not set, you can set it there.</p>
</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">Setup GraphRAG</h3><a id="user-content-setup-graphrag" aria-label="Permalink: Setup GraphRAG" href="#setup-graphrag"></a></p>
<div dir="auto"><p dir="auto">Note</p><p dir="auto">Official MS GraphRAG indexing only works with OpenAI or Ollama API.
We recommend most users to use NanoGraphRAG implementation for straightforward integration with Kotaemon.</p>
</div>
<details>
<summary>Setup Nano GRAPHRAG</summary>
<ul dir="auto">
<li>Install nano-GraphRAG: <code>pip install nano-graphrag</code></li>
<li><code>nano-graphrag</code> install might introduce version conflicts, see <a href="https://github.com/Cinnamon/kotaemon/issues/440" data-hovercard-type="issue" data-hovercard-url="/Cinnamon/kotaemon/issues/440/hovercard">this issue</a>
<ul dir="auto">
<li>To quickly fix: <code>pip uninstall hnswlib chroma-hnswlib &amp;&amp; pip install chroma-hnswlib</code></li>
</ul>
</li>
<li>Launch Kotaemon with <code>USE_NANO_GRAPHRAG=true</code> environment variable.</li>
<li>Set your default LLM &amp; Embedding models in Resources setting and it will be recognized automatically from NanoGraphRAG.</li>
</ul>
</details>
<details>
<summary>Setup LIGHTRAG</summary>
<ul dir="auto">
<li>Install LightRAG: <code>pip install git+https://github.com/HKUDS/LightRAG.git</code></li>
<li><code>LightRAG</code> install might introduce version conflicts, see <a href="https://github.com/Cinnamon/kotaemon/issues/440" data-hovercard-type="issue" data-hovercard-url="/Cinnamon/kotaemon/issues/440/hovercard">this issue</a>
<ul dir="auto">
<li>To quickly fix: <code>pip uninstall hnswlib chroma-hnswlib &amp;&amp; pip install chroma-hnswlib</code></li>
</ul>
</li>
<li>Launch Kotaemon with <code>USE_LIGHTRAG=true</code> environment variable.</li>
<li>Set your default LLM &amp; Embedding models in Resources setting and it will be recognized automatically from LightRAG.</li>
</ul>
</details>
<details>
<summary>Setup MS GRAPHRAG</summary>
<ul dir="auto">
<li>
<p dir="auto"><strong>Non-Docker Installation</strong>: If you are not using Docker, install GraphRAG with the following command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="pip install &quot;graphrag<=0.3.6&quot; future"><pre>pip install <span><span>"</span>graphrag&lt;=0.3.6<span>"</span></span> future</pre></div>
</li>
<li>
<p dir="auto"><strong>Setting Up API KEY</strong>: To use the GraphRAG retriever feature, ensure you set the <code>GRAPHRAG_API_KEY</code> environment variable. You can do this directly in your environment or by adding it to a <code>.env</code> file.</p>
</li>
<li>
<p dir="auto"><strong>Using Local Models and Custom Settings</strong>: If you want to use GraphRAG with local models (like <code>Ollama</code>) or customize the default LLM and other configurations, set the <code>USE_CUSTOMIZED_GRAPHRAG_SETTING</code> environment variable to true. Then, adjust your settings in the <code>settings.yaml.example</code> file.</p>
</li>
</ul>
</details>
<p dir="auto"><h3 tabindex="-1" dir="auto">Setup Local Models (for local/private RAG)</h3><a id="user-content-setup-local-models-for-localprivate-rag" aria-label="Permalink: Setup Local Models (for local/private RAG)" href="#setup-local-models-for-localprivate-rag"></a></p>
<p dir="auto">See <a href="https://github.com/Cinnamon/kotaemon/blob/main/docs/local_model.md">Local model setup</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Setup multimodal document parsing (OCR, table parsing, figure extraction)</h3><a id="user-content-setup-multimodal-document-parsing-ocr-table-parsing-figure-extraction" aria-label="Permalink: Setup multimodal document parsing (OCR, table parsing, figure extraction)" href="#setup-multimodal-document-parsing-ocr-table-parsing-figure-extraction"></a></p>
<p dir="auto">These options are available:</p>
<ul dir="auto">
<li><a href="https://azure.microsoft.com/en-us/products/ai-services/ai-document-intelligence" rel="nofollow">Azure Document Intelligence (API)</a></li>
<li><a href="https://developer.adobe.com/document-services/docs/overview/pdf-extract-api/" rel="nofollow">Adobe PDF Extract (API)</a></li>
<li><a href="https://github.com/DS4SD/docling">Docling (local, open-source)</a>
<ul dir="auto">
<li>To use Docling, first install required dependencies: <code>pip install docling</code></li>
</ul>
</li>
</ul>
<p dir="auto">Select corresponding loaders in <code>Settings -&gt; Retrieval Settings -&gt; File loader</code></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Customize your application</h3><a id="user-content-customize-your-application" aria-label="Permalink: Customize your application" href="#customize-your-application"></a></p>
<ul dir="auto">
<li>
<p dir="auto">By default, all application data is stored in the <code>./ktem_app_data</code> folder. You can back up or copy this folder to transfer your installation to a new machine.</p>
</li>
<li>
<p dir="auto">For advanced users or specific use cases, you can customize these files:</p>
<ul dir="auto">
<li><code>flowsettings.py</code></li>
<li><code>.env</code></li>
</ul>
</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>flowsettings.py</code></h4><a id="user-content-flowsettingspy" aria-label="Permalink: flowsettings.py" href="#flowsettingspy"></a></p>
<p dir="auto">This file contains the configuration of your application. You can use the example
<a href="https://github.com/Cinnamon/kotaemon/blob/main/flowsettings.py">here</a> as the starting point.</p>
<details>
<summary>Notable settings</summary>
<div dir="auto" data-snippet-clipboard-copy-content="# setup your preferred document store (with full-text search capabilities)
KH_DOCSTORE=(Elasticsearch | LanceDB | SimpleFileDocumentStore)

# setup your preferred vectorstore (for vector-based search)
KH_VECTORSTORE=(ChromaDB | LanceDB | InMemory | Qdrant)

# Enable / disable multimodal QA
KH_REASONINGS_USE_MULTIMODAL=True

# Setup your new reasoning pipeline or modify existing one.
KH_REASONINGS = [
    &quot;ktem.reasoning.simple.FullQAPipeline&quot;,
    &quot;ktem.reasoning.simple.FullDecomposeQAPipeline&quot;,
    &quot;ktem.reasoning.react.ReactAgentPipeline&quot;,
    &quot;ktem.reasoning.rewoo.RewooAgentPipeline&quot;,
]"><pre><span># setup your preferred document store (with full-text search capabilities)</span>
<span>KH_DOCSTORE</span><span>=</span>(<span>Elasticsearch</span> <span>|</span> <span>LanceDB</span> <span>|</span> <span>SimpleFileDocumentStore</span>)

<span># setup your preferred vectorstore (for vector-based search)</span>
<span>KH_VECTORSTORE</span><span>=</span>(<span>ChromaDB</span> <span>|</span> <span>LanceDB</span> <span>|</span> <span>InMemory</span> <span>|</span> <span>Qdrant</span>)

<span># Enable / disable multimodal QA</span>
<span>KH_REASONINGS_USE_MULTIMODAL</span><span>=</span><span>True</span>

<span># Setup your new reasoning pipeline or modify existing one.</span>
<span>KH_REASONINGS</span> <span>=</span> [
    <span>"ktem.reasoning.simple.FullQAPipeline"</span>,
    <span>"ktem.reasoning.simple.FullDecomposeQAPipeline"</span>,
    <span>"ktem.reasoning.react.ReactAgentPipeline"</span>,
    <span>"ktem.reasoning.rewoo.RewooAgentPipeline"</span>,
]</pre></div>
</details>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>.env</code></h4><a id="user-content-env" aria-label="Permalink: .env" href="#env"></a></p>
<p dir="auto">This file provides another way to configure your models and credentials.</p>
<details>
<summary>Configure model via the .env file</summary>
<ul dir="auto">
<li>
<p dir="auto">Alternatively, you can configure the models via the <code>.env</code> file with the information needed to connect to the LLMs. This file is located in the folder of the application. If you don't see it, you can create one.</p>
</li>
<li>
<p dir="auto">Currently, the following providers are supported:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong>OpenAI</strong></p>
<p dir="auto">In the <code>.env</code> file, set the <code>OPENAI_API_KEY</code> variable with your OpenAI API key in order
to enable access to OpenAI's models. There are other variables that can be modified,
please feel free to edit them to fit your case. Otherwise, the default parameter should
work for most people.</p>
<div dir="auto" data-snippet-clipboard-copy-content="OPENAI_API_BASE=https://api.openai.com/v1
OPENAI_API_KEY=<your OpenAI API key here>
OPENAI_CHAT_MODEL=gpt-3.5-turbo
OPENAI_EMBEDDINGS_MODEL=text-embedding-ada-002"><pre>OPENAI_API_BASE=https://api.openai.com/v1
OPENAI_API_KEY=<span>&lt;</span>your OpenAI API key here<span>&gt;</span>
OPENAI_CHAT_MODEL=gpt-3.5-turbo
OPENAI_EMBEDDINGS_MODEL=text-embedding-ada-002</pre></div>
</li>
<li>
<p dir="auto"><strong>Azure OpenAI</strong></p>
<p dir="auto">For OpenAI models via Azure platform, you need to provide your Azure endpoint and API
key. Your might also need to provide your developments' name for the chat model and the
embedding model depending on how you set up Azure development.</p>
<div dir="auto" data-snippet-clipboard-copy-content="AZURE_OPENAI_ENDPOINT=
AZURE_OPENAI_API_KEY=
OPENAI_API_VERSION=2024-02-15-preview
AZURE_OPENAI_CHAT_DEPLOYMENT=gpt-35-turbo
AZURE_OPENAI_EMBEDDINGS_DEPLOYMENT=text-embedding-ada-002"><pre>AZURE_OPENAI_ENDPOINT=
AZURE_OPENAI_API_KEY=
OPENAI_API_VERSION=2024-02-15-preview
AZURE_OPENAI_CHAT_DEPLOYMENT=gpt-35-turbo
AZURE_OPENAI_EMBEDDINGS_DEPLOYMENT=text-embedding-ada-002</pre></div>
</li>
<li>
<p dir="auto"><strong>Local Models</strong></p>
<ul dir="auto">
<li>
<p dir="auto">Using <code>ollama</code> OpenAI compatible server:</p>
<ul dir="auto">
<li>
<p dir="auto">Install <a href="https://github.com/ollama/ollama">ollama</a> and start the application.</p>
</li>
<li>
<p dir="auto">Pull your model, for example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="ollama pull llama3.1:8b
ollama pull nomic-embed-text"><pre>ollama pull llama3.1:8b
ollama pull nomic-embed-text</pre></div>
</li>
<li>
<p dir="auto">Set the model names on web UI and make it as default:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/Cinnamon/kotaemon/main/docs/images/models.png"><img src="https://raw.githubusercontent.com/Cinnamon/kotaemon/main/docs/images/models.png" alt="Models"></a></p>
</li>
</ul>
</li>
<li>
<p dir="auto">Using <code>GGUF</code> with <code>llama-cpp-python</code></p>
<p dir="auto">You can search and download a LLM to be ran locally from the <a href="https://huggingface.co/models" rel="nofollow">Hugging Face Hub</a>. Currently, these model formats are supported:</p>
<ul dir="auto">
<li>
<p dir="auto">GGUF</p>
<p dir="auto">You should choose a model whose size is less than your device's memory and should leave
about 2 GB. For example, if you have 16 GB of RAM in total, of which 12 GB is available,
then you should choose a model that takes up at most 10 GB of RAM. Bigger models tend to
give better generation but also take more processing time.</p>
<p dir="auto">Here are some recommendations and their size in memory:</p>
</li>
<li>
<p dir="auto"><a href="https://huggingface.co/Qwen/Qwen1.5-1.8B-Chat-GGUF/resolve/main/qwen1_5-1_8b-chat-q8_0.gguf?download=true" rel="nofollow">Qwen1.5-1.8B-Chat-GGUF</a>: around 2 GB</p>
<p dir="auto">Add a new LlamaCpp model with the provided model name on the web UI.</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li></ul></details>


<p dir="auto"><h3 tabindex="-1" dir="auto">Adding your own RAG pipeline</h3><a id="user-content-adding-your-own-rag-pipeline" aria-label="Permalink: Adding your own RAG pipeline" href="#adding-your-own-rag-pipeline"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Custom Reasoning Pipeline</h4><a id="user-content-custom-reasoning-pipeline" aria-label="Permalink: Custom Reasoning Pipeline" href="#custom-reasoning-pipeline"></a></p>
<ol dir="auto">
<li>Check the default pipeline implementation in <a href="https://github.com/Cinnamon/kotaemon/blob/main/libs/ktem/ktem/reasoning/simple.py">here</a>. You can make quick adjustment to how the default QA pipeline work.</li>
<li>Add new <code>.py</code> implementation in <code>libs/ktem/ktem/reasoning/</code> and later include it in <code>flowssettings</code> to enable it on the UI.</li>
</ol>
<p dir="auto"><h4 tabindex="-1" dir="auto">Custom Indexing Pipeline</h4><a id="user-content-custom-indexing-pipeline" aria-label="Permalink: Custom Indexing Pipeline" href="#custom-indexing-pipeline"></a></p>
<ul dir="auto">
<li>Check sample implementation in <code>libs/ktem/ktem/index/file/graph</code></li>
</ul>
<blockquote>
<p dir="auto">(more instruction WIP).</p>
</blockquote>

<p dir="auto"><h2 tabindex="-1" dir="auto">Citation</h2><a id="user-content-citation" aria-label="Permalink: Citation" href="#citation"></a></p>
<p dir="auto">Please cite this project as</p>
<div dir="auto" data-snippet-clipboard-copy-content="@misc{kotaemon2024,
    title = {Kotaemon - An open-source RAG-based tool for chatting with any content.},
    author = {The Kotaemon Team},
    year = {2024},
    howpublished = {\url{https://github.com/Cinnamon/kotaemon}},
}"><pre><span>@misc</span>{<span>kotaemon2024</span>,
    <span>title</span> = <span><span>{</span>Kotaemon - An open-source RAG-based tool for chatting with any content.<span>}</span></span>,
    <span>author</span> = <span><span>{</span>The Kotaemon Team<span>}</span></span>,
    <span>year</span> = <span><span>{</span>2024<span>}</span></span>,
    <span>howpublished</span> = <span><span>{</span>\url{https://github.com/Cinnamon/kotaemon}<span>}</span></span>,
}</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Star History</h2><a id="user-content-star-history" aria-label="Permalink: Star History" href="#star-history"></a></p>
<a href="https://star-history.com/#Cinnamon/kotaemon&amp;Date" rel="nofollow">
 <themed-picture data-catalyst-inline="true"><picture>
   <source media="(prefers-color-scheme: dark)" srcset="https://camo.githubusercontent.com/d6e6c5960af197ed61e6044420334d16442c6cb52fa2158e4b73011bba8b0401/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d43696e6e616d6f6e2f6b6f7461656d6f6e26747970653d44617465267468656d653d6461726b" data-canonical-src="https://api.star-history.com/svg?repos=Cinnamon/kotaemon&amp;type=Date&amp;theme=dark">
   <source media="(prefers-color-scheme: light)" srcset="https://camo.githubusercontent.com/e6f13a803d251249632a5197bd7999214046b0c7674468eb1566c2211d4a13d9/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d43696e6e616d6f6e2f6b6f7461656d6f6e26747970653d44617465" data-canonical-src="https://api.star-history.com/svg?repos=Cinnamon/kotaemon&amp;type=Date">
   <img alt="Star History Chart" src="https://camo.githubusercontent.com/e6f13a803d251249632a5197bd7999214046b0c7674468eb1566c2211d4a13d9/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d43696e6e616d6f6e2f6b6f7461656d6f6e26747970653d44617465" data-canonical-src="https://api.star-history.com/svg?repos=Cinnamon/kotaemon&amp;type=Date">
 </picture></themed-picture>
</a>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contribution</h2><a id="user-content-contribution" aria-label="Permalink: Contribution" href="#contribution"></a></p>
<p dir="auto">Since our project is actively being developed, we greatly value your feedback and contributions. Please see our <a href="https://github.com/Cinnamon/kotaemon/blob/main/CONTRIBUTING.md">Contributing Guide</a> to get started. Thank you to all our contributors!</p>
<a href="https://github.com/Cinnamon/kotaemon/graphs/contributors">
  <img src="https://camo.githubusercontent.com/da2a9847dfe9724f21bfd485cc9180cd8247fa9d01fb849ae1f3724d8c7b7a93/68747470733a2f2f636f6e747269622e726f636b732f696d6167653f7265706f3d43696e6e616d6f6e2f6b6f7461656d6f6e" data-canonical-src="https://contrib.rocks/image?repo=Cinnamon/kotaemon">
</a>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Exercise may be the 'most potent medical intervention ever known' (128 pts)]]></title>
            <link>https://www.pbs.org/newshour/show/how-exercise-may-be-the-most-potent-medical-intervention-ever-known</link>
            <guid>42571202</guid>
            <pubDate>Thu, 02 Jan 2025 03:00:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.pbs.org/newshour/show/how-exercise-may-be-the-most-potent-medical-intervention-ever-known">https://www.pbs.org/newshour/show/how-exercise-may-be-the-most-potent-medical-intervention-ever-known</a>, See on <a href="https://news.ycombinator.com/item?id=42571202">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="transcript">
                                                        <p>It's been well known for many decades that exercise provides many benefits to our health. But a new scientific consortium is revealing new insights into just how profound exercise can be for the human body. William Brangham discussed more with Euan Ashley, a professor of cardiovascular medicine and genetics at Stanford University and the newly named chair of its department of medicine.</p>
                                

<p><i>Notice: Transcripts are machine and human generated and lightly edited for accuracy. They may contain errors.</i></p>
<ul>
        <li>
                <div>
            <p><strong>Laura Barron-Lopez:</strong></p>
            <p>Today, many Americans are making a New Year's resolution to exercise more.</p><p>It's well-known that regular exercise is good for your health. But a new scientific consortium is revealing fresh insights into just how profound the benefits are for the human body.</p><p>William Brangham spoke recently with someone who's helping lead this research, Euan Ashley. He's a professor of cardiovascular medicine and genetics at Stanford University and the newly named chair of its Department of Medicine. And he calls exercise the single most potent medical intervention ever known.</p>
        </div>
            </li>
        <li>
                <div>
            <p><strong>William Brangham:</strong></p>
            <p>Euan Ashley, so good to have you on the "News Hour."</p><p>You are undertaking this massive multidisciplinary study to understand how exercise changes our body in some fundamental way. But, as I mentioned, don't we already know a lot of this? I mean, what is the importance of doing this much deeper dive that you're doing?</p>
        </div>
            </li>
        <li>
                <div>
            <p><strong>Dr. Euan Ashley, Stanford University:</strong></p>
            <p>Well, look, we have known for maybe 70 years that exercise was among one of the most potent medical interventions known.</p><p>We knew from studies in the 1950s comparing London bus drivers and London bus conductors that lived in the same environment, but one — they had the bus drivers who were sitting, the conductors were standing, and the heart disease rate among the drivers was twice that of the conductors.</p><p>So yes, we have known for 70 years that exercise is really, really good for you. But we have not through that entire time really understood how it works. So the new study was to bring together 17, 18 different groups from across the United States to really study, to build a molecular map of exercise to try and work out how come this intervention that's so available to all of us is the most powerful intervention known.</p><p>How does it actually work?</p>
        </div>
            </li>
        <li>
                <div>
            <p><strong>William Brangham:</strong></p>
            <p>And so you have started to publish some of your findings. When you compare exercise to these other critical things that we know are important for health, diet or sleep or things like that, where does exercise fit in? What are the sort of top-line findings of exercise's potency?</p>
        </div>
            </li>
        <li>
                <div>
            <p><strong>Dr. Euan Ashley:</strong></p>
            <p>Well, one of the things that really surprised us — were all exercise people already, so we were all convinced as to the benefits.</p><p>So — though, in this study, we also had a control group. So the first study we released was rats that were sedentary, and then they were trained over the course of eight weeks aerobic training on — literally on a treadmill. And then at the end of the period of time and at the end of several time points along that eight-week time period, we looked at the tissues from the rats.</p><p>And the thing that we were really surprised to find was that really they turned into almost different beings. I mean, exercise was that potent. Every single tissue we looked at should something completely different from before. It really changed the entire molecular makeup of the individual organs of the rats in a very positive direction.</p><p>One example might be that multiple tissues, for example, fat tissue. Another example would be the mitochondria, the little battery-like organelles inside each cells. When we looked at the changes with exercise, we often saw mirror image changes to the ones we see with disease.</p><p>So, exercise was quite literally kind of reversing in a mirror-image-like way the changes that happen with disease and explaining a little bit about how exercise manages to protect from those diseases.</p>
        </div>
            </li>
        <li>
                <div>
            <p><strong>William Brangham:</strong></p>
            <p>I mean, some of the other findings I read in your initial research is showing that exercise impacts the body in ways that we don't associate with exercise, the digestive system, the mood and mental health.</p><p>How do you explain that mechanism being so widespread?</p>
        </div>
            </li>
        <li>
                <div>
            <p><strong>Dr. Euan Ashley:</strong></p>
            <p>Well, I think one of the things is that exercise, at the end of the day, is a stress. And we don't recommend stress for anyone, certainly not work stress.</p><p>But the reality is, I think that stressing our bodies with exercise in just the right amount actually prepares our bodies to deal with the stress of everyday life. One of the biggest signatures we saw was in a system that basically tends to the proteins in our cells. So it helps them come together in the right format in three dimensions. It stops them sticking together and aggregating.</p><p>And when it's time for those proteins to be renewed, it helps. It's called the heat shock response. And this was something that we saw changed across multiple tissues, across all the tissues, as you mentioned, lungs, skeletal muscle, not just the ones that you might expect. We would expect perhaps skeletal muscle and heart, for sure.</p><p>But we were seeing changes in the kidney, in the adrenal gland, in the intestine, in the brain. And I think that begins to get at how exercise is just such a remarkable intervention, essentially helping with, for example, reducing the risk of heart disease by 50 percent, reducing the list of many cancers by 50 percent and more, reducing the risk of back pain.</p><p>People sleep better. They have better mood. They're able to breathe better. There are just so many ways in which exercise helps. And I think the key is, is just stressing you just enough so that your body then in recovery builds these mechanisms that help you deal with the stress of life in other ways.</p>
        </div>
            </li>
        <li>
                <div>
            <p><strong>William Brangham:</strong></p>
            <p>And I understand there have been some interesting gender differences in your results. Can you explain a little bit about that?</p>
        </div>
            </li>
        <li>
                <div>
            <p><strong>Dr. Euan Ashley:</strong></p>
            <p>Yes, I think one of the other things we were really surprised by was just the extent of the changes.</p><p>In this study, we had both mail and female rats. And of course, we expected to see some changes, but really the changes were profound. And we saw them both at rest before we started, but also with exercise. Some things got closer together with exercise between the sexes. Some things got further apart.</p><p>And this was the case particularly in adipose tissue and in skeletal muscle, where we really saw very profound differences between the two sexes. And I think what it led us to believe is that really every study from now on should be done with both sexes.</p><p>This is something we have known for some time, but, over the history of science, we have tended, just because science costs a lot of money, to choose one or the other. We do studies in all males or all females, or both when we could. But, often, the numbers were smaller then, and that gave us less power for discovery.</p><p>What's really clear, I think, from this study is that we really have to do both sexes in order to really work out what the differences are and be able to describe them adequately for both sexes.</p>
        </div>
            </li>
        <li>
                <div>
            <p><strong>William Brangham:</strong></p>
            <p>I know people listening to you will, of course, be wondering — I'm sure you get this question all the time — what kind of exercise, how often? Does it matter when I do it, how much I do it? What does your research indicate?</p>
        </div>
            </li>
        <li>
                <div>
            <p><strong>Dr. Euan Ashley:</strong></p>
            <p>Well, this particular research with the rats doesn't answer that question, but, fortunately, we have lots of research to give us a good answer to that question.</p><p>And although you read lots of different things as every new study comes up, the overall advice has remained the same. The first thing is, any movement is better than none. So, if you're in a sedentary job or you're not used to moving much, then just stand up. Standing up is a good start.</p><p>If you can walk, take some walking paces, go for a walk at lunchtime, that's great as well. If you can get 30 to 45 minutes of moderate intensity exercise, that's like a brisk walk, if you can do that five, six times a week, that's fantastic.</p><p>And, of course, if you want to do more, there's added benefit. One of the things I regularly tell my patients — I'm a cardiologist — is that one minute of exercise buys you five minutes of extra life, which means you definitely have time to exercise, because, even if you exercise even a little bit higher intensity, you get seven or eight minutes of extra life.</p><p>So you definitely have time to make in your day to exercise. It doesn't matter whether you do it in the morning, at lunchtime, in the evenings. It's particularly good after meals, so the evening is a fine time to take a brisk walk.</p><p>But the main thing is get up, move about as much as you can.</p>
        </div>
            </li>
        <li>
                <div>
            <p><strong>William Brangham:</strong></p>
            <p>Euan Ashley of Stanford University, such fascinating research. Thank you so much for talking with us about it.</p>
        </div>
            </li>
        <li>
                <div>
            <p><strong>Dr. Euan Ashley:</strong></p>
            <p>My pleasure. Thank you for having me.</p>
        </div>
            </li>
    </ul>

            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The GPU, not the TPM, is the root of hardware DRM (316 pts)]]></title>
            <link>https://mjg59.dreamwidth.org/70954.html</link>
            <guid>42570988</guid>
            <pubDate>Thu, 02 Jan 2025 02:09:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mjg59.dreamwidth.org/70954.html">https://mjg59.dreamwidth.org/70954.html</a>, See on <a href="https://news.ycombinator.com/item?id=42570988">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>As part of their "Defective by Design" anti-DRM campaign, the FSF recently made the following claim:<br><q>Today, most of the major streaming media platforms utilize the TPM to decrypt media streams, forcefully placing the decryption out of the user's control</q> (from <a href="https://www.defectivebydesign.org/dayagainstdrm">here</a>).<br>This is part of an overall argument that Microsoft's insistence that only hardware with a TPM can run Windows 11 is with the goal of aiding streaming companies in their attempt to ensure media can only be played in tightly constrained environments.</p><p>I'm going to be honest here and say that I don't know what Microsoft's actual motivation for requiring a TPM in Windows 11 is. I've been talking about TPM stuff for a long time. My job involves writing a lot of TPM code. I think having a TPM enables a number of worthwhile security features. Given the choice, I'd certainly pick a computer with a TPM. But in terms of whether it's of sufficient value to lock out Windows 11 on hardware with no TPM that would otherwise be able to run it? I'm not sure that's a worthwhile tradeoff.</p><p>What I <em>can</em> say is that the FSF's claim is just 100% wrong, and since this seems to be the sole basis of their overall claim about Microsoft's strategy here, the argument is pretty significantly undermined. I'm not aware of any streaming media platforms making use of TPMs in any way whatsoever. There <em>is</em> hardware DRM that the media companies use to restrict users, but it's not in the TPM - it's in the GPU.</p><p>Let's back up for a moment. There's multiple different DRM implementations, but the big three are Widevine (owned by Google, used on Android, Chromebooks, and some other embedded devices), Fairplay (Apple implementation, used for Mac and iOS), and Playready (Microsoft's implementation, used in Windows and some other hardware streaming devices and TVs). These generally implement several levels of functionality, depending on the capabilities of the device they're running on - this will range from all the DRM functionality being implemented in software up to the hardware path that will be discussed shortly. Streaming providers can choose what level of functionality and quality to provide based on the level implemented on the client device, and it's common for 4K and HDR content to be tied to hardware DRM. In any scenario, they stream encrypted content to the client and the DRM stack decrypts it before the compressed data can be decoded and played.</p><p>The "problem" with software DRM implementations is that the decrypted material is going to exist somewhere the OS can get at it at some point, making it possible for users to simply grab the decrypted stream, somewhat defeating the entire point. Vendors try to make this difficult by obfuscating their code as much as possible (and in some cases putting some of it in-kernel), but pretty much all software DRM is at least somewhat broken and copies of any new streaming media end up being available via Bittorrent pretty quickly after release. This is why higher quality media tends to be restricted to clients that implement hardware-based DRM.</p><p>The implementation of hardware-based DRM varies. On devices in the ARM world this is usually handled by performing the cryptography in a Trusted Execution Environment, or TEE. A TEE is an area where code can be executed without the OS having any insight into it at all, with ARM's TrustZone being an example of this. By putting the DRM code in TrustZone, the cryptography can be performed in RAM that the OS has no access to, making the scraping described earlier impossible. x86 has no well-specified TEE (Intel's SGX is an example, but is no longer implemented in consumer parts), so instead this tends to be handed off to the GPU. The exact details of this implementation are somewhat opaque - of the previously mentioned DRM implementations, only Playready does hardware DRM on x86, and I haven't found any public documentation of what drivers need to expose for this to work.</p><p>In any case, as part of the DRM handshake between the client and the streaming platform, encryption keys are negotiated with the key material being stored in the GPU or the TEE, inaccessible from the OS. Once decrypted, the material is decoded (again either on the GPU or in the TEE - even in implementations that use the TEE for the cryptography, the actual media decoding may happen on the GPU) and displayed. One key point is that the decoded video material is still stored in RAM that the OS has no access to, and the GPU composites it onto the outbound video stream (which is why if you take a screenshot of a browser playing a stream using hardware-based DRM you'll just see a black window - as far as the OS can see, there <em>is</em> only a black window there).</p><p>Now, TPMs are sometimes referred to as a TEE, and in a way they are. However, they're fixed function - you can't run arbitrary code on the TPM, you only have whatever functionality it provides. But TPMs <em>do</em> have the ability to decrypt data using keys that are tied to the TPM, so isn't this sufficient? Well, no. First, the TPM can't communicate with the GPU. The OS could push encrypted material to it, and it would get plaintext material back. But the entire point of this exercise was to avoid the decrypted version of the stream from ever being visible to the OS, so this would be pointless. And rather more fundamentally, TPMs are <em>slow</em>. I don't think there's a TPM on the market that could decrypt a 1080p stream in realtime, let alone a 4K one.</p><p>The FSF's focus on TPMs here is not only technically wrong, it's indicative of a failure to understand what's actually happening in the industry. While the FSF has been focusing on TPMs, GPU vendors have quietly deployed all of this technology without the FSF complaining at all. Microsoft has enthusiastically participated in making hardware DRM on Windows possible, and user freedoms have suffered as a result, but Playready hardware-based DRM works just fine on hardware that doesn't have a TPM and will continue to do so.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Are there more trees on Earth than stars in the Milky Way? (2016) (107 pts)]]></title>
            <link>https://www.snopes.com/fact-check/trees-stars-milky-way/</link>
            <guid>42570138</guid>
            <pubDate>Wed, 01 Jan 2025 23:20:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.snopes.com/fact-check/trees-stars-milky-way/">https://www.snopes.com/fact-check/trees-stars-milky-way/</a>, See on <a href="https://news.ycombinator.com/item?id=42570138">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
												
						
						
												<article id="article-content">
							
														

															<section id="fact_check_rating_container">
																		<div>
										<p><span>Claim:</span></p><p>
											It is estimated that there are more trees on Earth than stars in the Milky Way galaxy.										</p>
									</div>
									
																			<div>
											<p><span>Rating:</span></p><a href="https://www.snopes.com/fact-check/rating/true">
												<p><img data-src="https://mediaproxy.snopes.com/width/200/https://media.snopes.com/2018/03/rating-true.png" alt="True" src="https://mediaproxy.snopes.com/width/200/https://media.snopes.com/2018/03/rating-true.png">
												</p>
												
												
											</a>
										</div>

										
																	</section>
							
							
							
							<h3 id="h-origin">Origin</h3>
<p>One popular fact included on numerous list of "science facts that sound wrong" is the claim that there are more trees on Earth than stars in our own Milky Way galaxy. This claim has its origins in a September 2015 <a href="https://www.nature.com/articles/nature14967.epdf" target="_blank">paper</a> published in the scientific journal Nature titled “Mapping Tree Density at a Global Scale,” which provided an estimate for the number of trees on Earth of 3.04 trillion:</p>
<blockquote>
<p>We provide the first spatially continuous map of forest tree density at a global scale. This map reveals that the global number of trees is approximately 3.04 trillion, an order of magnitude higher than the previous estimate. Of these trees, approximately 1.30 trillion exist in tropical and subtropical forests, with 0.74 trillion in boreal regions and 0.66 trillion in temperate regions.</p>
</blockquote>
<p>According to <a href="https://asd.gsfc.nasa.gov/blueshift/index.php/2015/07/22/how-many-stars-in-the-milky-way/" target="_blank">NASA</a> education and outreach specialist Maggie Masetti, most estimates put the number of stars in the Milky Way at between 100 billion and 400 billion stars:</p>
<blockquote>
<p>There are different models for estimating the number of stars in the Milky Way and the answers they give differ depending on what is used as the average mass of a star. The most common answer seems to be that there are 100 billion stars in the Milky Way on the low-end and 400 billion on the high end. But I’ve seen even higher numbers thrown around.</p>
</blockquote>
<p>Inasmuch as these estimates approximate the actual (and impossible to verify) numbers of trees on Earth and stars in the Milky Way, the claim is accurate. However, it should be noted that estimating both the number of trees across the globe and stars in the sky is extremely difficult, and thus any such numbers come with plenty of caveats and limitations.</p>
<p>The Nature paper that estimated the number of trees arrived at a total an entire order of magnitude higher than the previous <a href="https://content.ucpress.edu/chapters/10606.ch01.pdf" target="_blank">estimate</a>, made in 2005, of 400.25 billion trees. To arrive at the 2015 estimate, scientists used 428,775 actual field measurements from selected areas and from different biomes, then created mathematical models to extrapolate to a global scale.</p>
<p>As <a href="https://www.space.com/25959-how-many-stars-are-in-the-milky-way.html" target="_blank">discussed</a> by Space.com’s Elizabeth Howell, coming up with an estimate for the number of stars in our galaxy carries with it even more uncertainty:</p>
<blockquote>
<p>The primary way astronomers estimate stars in a galaxy is by determining the galaxy's mass. The mass is estimated by looking at how the galaxy rotates, as well as its spectrum using spectroscopy ...</p>
<p>Once a galaxy's mass is determined, the other tricky thing is figuring out how much of that mass is stars. Most of the mass will be made up of dark matter, which is a mysterious substance believed to bind most of the universe together ...</p>
<p>So is there any way to figure out how many stars are for sure? In the end, it comes down to an estimate. In one calculation, the Milky Way has a mass of about 100 billion solar masses, so it is easiest to translate that to 100 billion stars. This accounts for the stars that would be bigger or smaller than our sun, and averages them out. Other mass estimates bring the number up to 400 billion.</p>
</blockquote>
<p>Unless someone develops a new methodology for counting stars which yields a much higher number than current estimates, it does seem as though there are more trees on Earth than stars in the Milky Way.</p>
<p>Also relevant to the discussion is the fact that the authors of the tree study estimated that around <a href="https://www.nature.com/articles/nature14967.epdf" target="_blank">15 billion</a> trees are cut down every year.</p>
						</article>
						
													<div>
								<h4>Sources</h4>

								<div id="sources_rows">
									<p>Nadkarni, Nalini. &nbsp; <em>Between Earth and Sky</em>. &nbsp; &nbsp; University of California Press, 2008. &nbsp; ISBN 0520933125.</p>

<p>Howell, Elizabeth. &nbsp; "How Many Stars Are in the Milky Way?" &nbsp; &nbsp; <em>Space.com</em>. &nbsp; 21 May 2014.</p>

<p>Crowther, T.W. et al. &nbsp; “Mapping Tree Density at a Global Scale.” &nbsp; &nbsp; <em>Nature</em>. &nbsp; 10 September 2015.</p>

<p>Mastetti, Maggie. &nbsp; "How Many Stars Are in the Milky Way?" &nbsp; &nbsp; <em>Space.com</em>. &nbsp; 22 July 2015.</p>
								</div>

								
							</div>
												<section>
															<p>
									<h3>
										<a href="https://www.snopes.com/author/alex/">By Alex Kasprak</a>
									</h3>
								</p>
								
																<p>Alex Kasprak is an investigative journalist and science writer reporting on scientific misinformation, online fraud, and financial crime. </p>
													</section>
						
												

												

													<div id="tag_section">
								<h2>Article Tags</h2>

								
							</div>
						
						

												

					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[My 25-year adventure in AI and ML (169 pts)]]></title>
            <link>https://austinhenley.com/blog/25yearsofai.html</link>
            <guid>42569913</guid>
            <pubDate>Wed, 01 Jan 2025 22:41:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://austinhenley.com/blog/25yearsofai.html">https://austinhenley.com/blog/25yearsofai.html</a>, See on <a href="https://news.ycombinator.com/item?id=42569913">Hacker News</a></p>
<div id="readability-page-1" class="page">
    <div>
				  <h2>Austin Z. Henley</h2>
				  <p>
						Associate Teaching Professor<br>
						Carnegie Mellon University
					</p>
				</div>

	  <hr>
	  
    
	  <hr>

	
	<small>12/31/2024</small><p>I never intended to work with AI or ML. It more so happened along the way naturally from using whatever tools I needed for the task, and eventually it took over. I didn't even realize it at the time.</p>

<p>Given that it is New Year's Eve, it seems appropriate to look back on my career to see how I got here. Let's go back to the year 2000 and walk through the major AI/ML projects I worked on.</p>

<hr>


<h3>If statements and random numbers</h3>

<p>I've talked about how I got into programming before: <a href="https://austinhenley.com/blog/mycomputingstory.html">Learning HTML was too hard so I made a compiler instead</a>. But along the way, I also tried to make video games (like any kid).</p>

<p>The first project I remember making in VB6 was a game based on <a href="https://en.wikipedia.org/wiki/Tamagotchi">Tamagotchi</a> pets.</p>

<img src="https://austinhenley.com/blog/images/tamagotchi.png" alt="">

<p>Unfortunately, I had no idea how to make the pet "come alive".</p>

<p>The best I came up with was a timer that triggers some effect every <i>X</i> seconds plus some conditionals. Increase pet's hunger every 10 seconds. Decrement health every 3 seconds if hunger level is greater than 5. Faint if health reaches 0.</p>

<p>Not a fun game at all.</p>

<p>Fast forward to high school. The biggest game I made at the time without giving up was a 2d space shooter where you defended yourself against waves of enemies while collecting simple powerups. A pretty standard exercise for a wanna-be game developer. For this, I hard coded a long, long sequence of if statements that used random numbers, how long you've been playing, how many shots you have fired, your hp, etc. to determine which wave of enemies to send out next. Finally, it felt <i>dynamic</i> and not entirely predictable. It was even almost fun. But no one would play it more than a few minutes. (Unfortunately, I can't find any screenshots from this era.)</p>

<img src="https://austinhenley.com/blog/images/programminggameaibook.jpg" alt="">

<p>Somewhere in the mid-2000s, I purchased the book <i>Programming Game AI by Example</i> (<a href="https://amzn.to/3VVu1DN">Amazon</a>). It took a few years to prove useful though...</p>


<h3>State machines and higher-order functions</h3>

<p>In college, I took it up a notch with my <a href="https://austinhenley.com/blog/makinggames.html">games</a>. They were played by millions, and I even made money! My coding skills were finally maturing, I could put what I read in books into practice, and my roommate spent every waking moment making games.</p>
    
<p>I used finite state machines for the enemy behaviors, the factory pattern to spawn and manage objects, and higher order functions to make enemies and weapons composable. Each unit, each weapon, and each bullet was given a set of behavior functions that would execute each frame to determine what happens next (e.g., the weapon will shoot bullets in bursts that are in the shape of a narrow cone that oscillates left and right 25 degrees; the bullets will slightly home into the nearest target and have a 1% chance of ricocheting)</p>

<img src="https://austinhenley.com/blog/images/ermy.png" alt="">

<p>I found that incrementally adding a bit of dynamism (i.e., based on the game state and the player's input) and variation (i.e., changing behaviors through randomness and composability) made my games much, much more fun. It required layers though. I needed to add this to everything: sprites, particle emitters, sound effects, enemies, bullets, and animations, not just the enemy behaviors.</p>

<p>The games started to feel alive!</p>

<img src="https://austinhenley.com/blog/images/darkestdays2.gif" alt="">


<p>But this isn't AI, right? In the end, it is just some handcrafted if statements and well-architectured function calls. <i>Hmmm</i>.</p>


<h3>First-order logic, knowledge representation, support vector machines, and neural networks</h3>

<p>After graduating, I enrolled in a MS program at the very last minute (as in, after the deadline and just before the Spring semester started). That meant most of the courses were full. I signed up for the only ones available, which included Artificial Intelligence and Neural Networks. I was hoping for a compilers course!</p>

<p>I was disappointed when I found out that neither of these courses involved any coding or how to implement what we learned. They were very high level and we spent a lot of arguing over definitions.</p>

<img src="https://austinhenley.com/blog/images/aibook.jpg" alt="">


<p>The AI course consisted of in-class discussions dissecting the famous book, <i>Artificial Intelligence: A Modern Approach, Third Edition</i> (<a href="https://amzn.to/4gDFmRq">Amazon</a>). I learned about planning, agents, first-order logic, and knowledge representation. It gave me some vocabulary for thinking about these problems, but I wasn't able to make the leap of applying any of it. <i>Sorry, <a href="https://www.norvig.com/">Norvig</a></i>.</p>

<img src="https://austinhenley.com/blog/images/neuralnetworkbook.jpg" alt="">


<p>The neural networks course was heavy on theory. We covered perceptrons, support vector machines, feedforward networks, hopfield models, and back propagation. The textbook wasn't useful so I won't link to it. I asked the professor how I could actually build a neural network and he said, <i>"I think there is a MATLAB package"</i>. Welp.</p>

<p>I spent the summer and fall trying to put this knowledge to use.</p>

<img src="https://austinhenley.com/blog/images/neuralavatar.png" alt="">


<p>I built a program for low-bandwidth video chat. I used OpenCV to detect the face, extract regions of the face, and then a classifier to determine the state of those regions. For example, is the mouth curving up? Is the left brow raised? Is the right eye open? I had several hundreds of labeled face images from some open database back then. The application sent the binary states over a socket to be used to draw an avatar using OpenGL.</p>

<p>It didn't work well. It was tedious to modify, it was extremely sensitive to lighting, minor changes to parameters would have big consequences, OpenCV was a pain to use, and training took forever.</p>

<p>I really had no idea what I was doing, but I eventually learned a lot and got it somewhat working! Here is a [very amateur] demo video that I uploaded in January 2013:</p>

<p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/GN3tjmGpdBY?si=0ODIfjFG7SqBxeOh" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
    </iframe>
  </p>

<p>Over 1000 views!</p>

<h3>Decision trees, clustering, and recommendation algorithms</h3>

<p>As I got into my PhD, I needed statistical methods to analyze log data from code editors. Can I identify when a programmer is stuck or lost in the code? Can I predict which file they'll navigate to next? Can I accurately recommend code of interest?</p>

<img src="https://austinhenley.com/blog/images/cfar.png" alt="">

<p>I learned how to use the <a href="https://en.wikipedia.org/wiki/C4.5_algorithm">C4.5 algorithm</a> to generate decision trees, <a href="https://en.wikipedia.org/wiki/K-means_clustering">k-means</a> and <a href="https://en.wikipedia.org/wiki/DBSCAN">DBCSCAN</a> to cluster events, and <a href="https://en.wikipedia.org/wiki/Apriori_algorithm">Apriori</a> and <a href="https://en.wikipedia.org/wiki/Collaborative_filtering">collaborative filtering</a> to find associations between events. Although fairly simple, these are surprisingly powerful. In fact, I'd say that most of the time that you think you need a big neural network, you don't!</p>

<img src="https://austinhenley.com/blog/images/wandercode.png" alt="">

<br>

<img src="https://austinhenley.com/blog/images/dbscan.png" alt="">

<p>These methods got the job done. I published papers, did a bunch of internships, and built developer tools involving these, and eventually graduated.</p>

<p>If you want to read more about some of these projects, I recommend starting with:</p>

<ul>
<li>Data analysis on how developers look for information: <i>Foraging and Navigations, Fundamentally: Developers' Predictions of Value and Cost</i> (<a href="https://austinhenley.com/pubs/Piorkowski2016FSE_ValueCost.pdf">pdf</a>)</li>
<li>My Microsoft internship experience report about building a code review bot: <a href="https://austinhenley.com/blog/featurestheywanted.html">When users never use they features they asked for</a></li>
</ul>


<h3>Intelligent user interfaces</h3>

<p>As a new tenure-track professor in 2018, I needed a schtick that I would base all my research around. I chose <i>intelligent developer tools</i>, though it was much fuzzier of a concept in my head back then. My first week on the job, I submitted a grant proposal where I'd use predictive models to preemptively identify and correct programmers' misconceptions.</p>

<p>The <a href="https://www.nsf.gov/awardsearch/showAward?AWD_ID=1850027">abstract</a> of the proposal said:</p>

<blockquote>In particular, this project will develop novel tool designs that accomplish three mutually supportive goals: (1) identify misconceptions that novice programmers have about their program's behavior by leveraging program analysis techniques and predictive models, (2) correct novice programmers' misconceptions and explain the rationale without disrupting the programmers, and (3) prevent future misconceptions by generating test code for the novice programmers that will catch unintended changes to the program's behavior.</blockquote>

<p>I summarized that project in my post, <a href="https://austinhenley.com/blog/inquisitivecodeeditor.html">An inquisitive code editor: Overcome bugs before you know you have them</a>.</p>

<p>Next, I collaborated on a <a href="https://www.nsf.gov/awardsearch/showAward?AWD_ID=2008408">project</a> where we'd use models to predict the information needs of programmers and generate user interfaces for them on the fly (e.g., if they're looking through their git history for relevant code, generate a visualization comparing a recommended set of commits).</p>

<p>Then I tied all this work together into my grand vision: <i>Inquisitive Programming Environments as Learning Environments for Novices and Experts</i>. You can see the proposal (<a href="https://austinhenley.com/pubs/Henley2021NSFCAREER.pdf">pdf</a>) and my blog post on how I wrote it (<a href="https://austinhenley.com/blog/500kgrant.html">What a $500,000 grant proposal looks like</a>).</p>

<img src="https://austinhenley.com/blog/images/grantoverview.png" alt="">

<p>However, I <a href="https://austinhenley.com/blog/leavingacademia.html">resigned</a> right around the time I was notified the grant was being funded, so I didn't get to make more progress.</p>


<h3>Program synthesis and large-language models</h3>

<p>In January 2022, I joined the program synthesis team at Microsoft. Now I was immersed in AI. It was perfect timing because ChatGPT was released 10 months later and the world forced LLMs upon everything.</p>

<img src="https://austinhenley.com/blog/images/datawranglerbyexample.gif" alt="A gif of me performing the New Column by Example operation.">

<p>Although I was on an AI team, I often pushed back against applying AI unless we had a really compelling reason. What is the user problem we are trying to solve? Do we really need an LLM or could a few if statements suffice? Are we sure that natural language is the appropriate interface for this? I went on to share my opinions: <a href="https://austinhenley.com/blog/naturallanguageui.html">Natural language is the lazy interface</a> and <a href="https://austinhenley.com/blog/trappedchat.html">Don't trap me in a chat window</a>.</p>

<p>I worked on <i>a lot</i> of cool projects. Including:</p>

    <ul>
        <li>Investigating whether existing LLM attention weights can be used to predict where a human developer will look next
          <ul>
            <li><i>Follow-up Attention: An Empirical Study of Developer and Neural Model Code Exploration</i> (<a href="https://austinhenley.com/pubs/Paltenghi2024IEEE_FollowUpAttention.pdf">pdf</a>)</li>
          </ul>
        </li>
        <li>An AI tutor for data science
          <ul>
            <li>Motivation: <a href="https://austinhenley.com/blog/teachingpainpoints.html">The pain points of teaching computer science</a></li>
            <li>Motivation: <a href="https://austinhenley.com/blog/datasciencemistakes.html">Mistakes that data science students make</a></li>
          </ul>
        </li>
        <li>IntelliCode's user experience for multi-line code edit suggestions
          <ul>
            <li><a href="https://austinhenley.com/blog/intellicode.html">Exploring 50 user interfaces for AI code</a></li>
          </ul>
        </li>
        <li>LLM-based tools for data scientists
          <ul>
            <li>Motivation: <a href="https://austinhenley.com/blog/chatgptdatascience.html">Can ChatGPT do data science?</a> for motivation</li>
            <li>Tool: <i>Improving Steering and Verification in AI-Assisted Data Analysis with Interactive Task Decomposition</i> (<a href="https://austinhenley.com/pubs/Kazemitabaar2024UIST_LLMSteering.pdf">pdf</a>)</li>
            <li>Tool: <a href="https://austinhenley.com/blog/datawrangler.html">Data Wrangling with Data Wrangler</a></li>
          </ul>
        </li>
        <li>LLM-based tools for students
          <ul>
            <li>Motivation: <a href="https://austinhenley.com/blog/learningwithai.html">Learning to code with and without AI</a></li>
            <li>Tool: <a href="https://austinhenley.com/blog/codeaid.html">CodeAid: A classroom deployment of an LLM-based programming assistant</a></li>
            <li>Tool: <i>Exploring the Design Space of Cognitive Engagement Techniques with AI-Generated Code for Enhanced Learning</i> (<a href="https://austinhenley.com/pubs/Kazemitabaar2025IUI_AIFriction.pdf">pdf</a>)</li>
          </ul>
        </li>
        <li>Empirical study of how companies are building copilots
          <ul>
            <li><a href="https://austinhenley.com/blog/copilotpainpoints.html">The pain points of building a copilot</a></li>
          </ul>
        </li>
      </ul>

<p>Since <a href="https://austinhenley.com/blog/leavingmicrosoft.html">leaving</a> Microsoft, I continue to tinker on my own AI tools, such as <a href="https://austinhenley.com/blog/mirrorlang.html">Mirror</a> and <a href="https://austinhenley.com/blog/promptcontext.html">Promptclipper</a>.


</p><hr>

<p>It has been a fun 25 years.</p>

<p>What's next? I'm going to continue teaching, learning, and building.</p>



<p><small>There are Amazon affiliate links on this page.</small></p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Rails for Everything (323 pts)]]></title>
            <link>https://literallythevoid.com/blog/rails_for_everything.html</link>
            <guid>42569236</guid>
            <pubDate>Wed, 01 Jan 2025 20:58:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://literallythevoid.com/blog/rails_for_everything.html">https://literallythevoid.com/blog/rails_for_everything.html</a>, See on <a href="https://news.ycombinator.com/item?id=42569236">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
      <h2>Rails for everything</h2>

      <p><em>Published: 2025-01-01</em></p>

      <p>
        After spending part of my holiday building and deploying a new Rails 8
        application, It's clearer than ever that Rails is awesome, and it's
        especially great for small projects with a single developer.
      </p>

      <h3>Guide is good</h3>

      <p>
        The latest
        <a href="https://guides.rubyonrails.org/getting_started.html#Rails-philosophy">Getting Started with Rails</a>
        guide is really excellent. There's a bit of hand waving around
        installing Ruby (which is still more difficult than it needs to be). But
        if you follow it start to finish, you'll have a Rails app
        <strong>in production</strong>. And it isn't just
        <code>hello world</code>. Your app will have authentication, caching,
        rich text, continuous integration, and a database. That's a real
        application.
      </p>

      <p>If you're brand new to Rails, the guide is the best place to start.</p>

      <h3>SQLite is all you need</h3>

      <p>
        SQlite is a great tool, but its focus on backwards compatibility means
        that it wasn't ideal for a production database out of the box. You
        <a href="https://fractaledmind.github.io/2024/04/15/sqlite-on-Rails-the-how-and-why-of-optimal-performance/">had to add some gems</a>
        to get it ready to perform. However
        <a href="https://fractaledmind.github.io/2024/10/16/sqlite-supercharges-Rails/">Rails 8</a>
        deals with that for you, and SQLite is ready for production.
      </p>

      <p>
        Now that you SQLite is a more robust choice, you don't have to worry
        about spinning up a PostgreSQL server. On top of that, with tools like
        <a href="https://dev.37signals.com/solid-cache/">solid cache</a> you
        don't need to stand up redis either.
      </p>

      <p>Everything is running under Rails and within SQLite. Superb.</p>

      <h3>Easy CI</h3>

      <p>
        After I pushed my initial Rails commit, I got an unexpected email:
        <code>Run failed: CI - main</code>. My first thought was actually a
        malicious actor, but I was wrong.
        <a href="https://guides.rubyonrails.org/getting_started.html#continuous-integration-with-github-actions">Rails 8 comes with basic CI config</a>
        and
        <a href="https://docs.github.com/en/billing/managing-billing-for-your-products/managing-billing-for-github-actions/about-billing-for-github-actions">Github comes with 2000 free minutes per month</a>
        of actions usage.
      </p>

      <p>
        Aside from it being really cool to have CI with no effort, 2000 minutes
        of run time is a lot for solo developer!
      </p>

      <h3>Authentication generator</h3>

      <p>
        <a href="https://github.com/heartcombo/devise">Devise</a> is the
        canonical authentication gem. But it hides a lot of complexity and it's
        not exactly easy to configure correctly, especially for a beginner.
      </p>

      <p>
        Rails 8 adds a new authentication generator. It add a simple sign in
        flow for existing users. All you need to do is add a user via the Rails
        console and boom. You can log in.
      </p>

      <p>The generated code is pretty minimal and easy to read about.</p>

      <h3>Easy and fast deploys with Kamal</h3>

      <p>
        I am more than happy to leave deploys to my very smart friends in the
        ops team. To deploy a new Rails 8 app, I just needed to update a few
        items in <code>deploy.yml</code>, follow a few directions, and I had an
        app live! With SSL!
      </p>

      <p>
        Honestly it took less time to get a web app up than it took me to get
        SSL on a Github page.
      </p>

      <p>
        CI + easy deploys might be the best part about Rails 8. Even just using
        the getting started guide, it encourages best practices.
      </p>

      <h3>Conclusion</h3>

      <p>
        <a href="https://israilsdead.com/">Rails is not dead</a>; It's better
        than ever. Try using it to make something new this year.
      </p>
    </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[My favourite computer ergonomics hack (207 pts)]]></title>
            <link>https://blog.jacobvosmaer.nl/0036-beeper/</link>
            <guid>42569109</guid>
            <pubDate>Wed, 01 Jan 2025 20:39:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.jacobvosmaer.nl/0036-beeper/">https://blog.jacobvosmaer.nl/0036-beeper/</a>, See on <a href="https://news.ycombinator.com/item?id=42569109">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><i><a href="https://blog.jacobvosmaer.nl/">Jacob Vosmaer's blog</a></i></p>

<p>2024-12-31</p>

<p>In this post I will talk about my favourite computer ergonomics hack, a DIY device I call "The Beeper".</p>

<h2>Background</h2>

<p>I built the Beeper almost 8 years ago but I have never written a blog post about it and I thought it might be interesting. I do computer work sitting down at a desk at home. When I get focused on my work then I sit still for too long and my body starts hurting. The Beeper solves the sitting still problem.</p>

<p>The Beeper consitst of three parts: the hardware, the firmware runnning on the hardware, and software running on my work computer. If my computer screen is unlocked for too long, the Beeper starts beeping and because it is situated away from my desk I must get up to silence it. Mission accomplished: I stopped sitting still.</p>

<h2>Hardware</h2>

<p>The Beeper is built into a small ABS Hammond <a href="https://www.hammfg.com/electronics/small-case/plastic/1551">1551KTBU</a> enclosure.</p>

<p><img src="https://blog.jacobvosmaer.nl/0036-beeper/assets/beeper-outside.jpeg" alt="Exterior of the Beeper"></p>

<p>Inside the enclosure are an Adafruit Feather Huzzah ESP8266 development board, a momentary switch and a piezo buzzer. The buzzer is glued to the case.</p>

<p><img src="https://blog.jacobvosmaer.nl/0036-beeper/assets/beeper-inside.jpeg" alt="Interior components of the Beeper"></p>

<p>The switch connects to the RST and GND pins of the Huzzah. Pushing the switch resets the microcontroller. The buzzer is connected to a PWM pin and GND.</p>

<p>The Huzzah is powered over its Micro-USB port. I cut a hole in the case that lets the USB plug come through. ABS plastic is easy to drill, cut and file.</p>

<h2>Firmware</h2>

<p>I'm a little fuzzy on how I got the firmware working because it's so long ago and I don't work with ESP8266 or Lua often. I had to upload a <a href="https://www.nodemcu.com/index_en.html">NodeMCU</a> binary blob to the development board.  I then somehow configured the ESP8266 to connect to our home WiFi network and when it starts up it runs the following Lua script.</p>

<pre><code>
-- init.lua: Beeper firmare

pin0 = 3
pin2 = 4
pin5 = 1

-- Periodically blink the LED connected to pin0
function blink()
  gpio.mode(pin0, gpio.OUTPUT)
  gpio.write(pin0, gpio.HIGH)
  tmr.create():alarm(10000, tmr.ALARM_AUTO, function() 
    gpio.write(pin0, gpio.LOW)
    tmr.create():alarm(100, tmr.ALARM_SINGLE, function()
      gpio.write(pin0, gpio.HIGH)
    end)
  end)
end

-- TCP server that lets us remote-control the device over WiFi
function startserver()
  sv = net.createServer(net.TCP, 30)
  gpio.mode(pin2, gpio.OUTPUT)
  gpio.write(pin2, gpio.HIGH)
  gpio.mode(pin5, gpio.OUTPUT)
  if sv then
    sv:listen(5678, function(conn)
      conn:on("receive", function(sock)
        sock:close()
        gpio.write(pin2, gpio.LOW)
        beep()
      end)
    end)
  end
end

-- The beeping magic
function beep()
  freq = node.random(500) + 500
  delay = node.random(1000) + 1000
  pwm.setup(pin5, freq, 500)
  pwm.stop(pin5)
  tmr.create():alarm(delay/2, tmr.ALARM_SINGLE, function()
    pwm.start(pin5)
    tmr.create():alarm(delay, tmr.ALARM_SINGLE, beep)
  end)
end

blink()
startserver()
</code></pre>

<p>The high level description is that this script blinks an LED every 10s to show that the microcontroller hasn't halted and it starts a TCP server on port 5678. If anything connects to that port the connection handler calls a function called <code>beep()</code> which effectively loops forever because it keeps rescheduling itself with a timer. Every <code>beep()</code> invocation produces a shrill, annoying beep of random pitch and duration. I added the randomness because it makes it harder to mentally tune out the noise.</p>

<p>The only way to get this annoying beeping to stop is to reset the microcontroller with the switch.</p>

<h2>Software</h2>

<p>The software running on my laptop is the part I have had to tweak the most over the years. It has the biggest impact on the user experience and it is important to get this right, because if the Beeper is too annoying I will unplug it and then I no longer get the health benefits.</p>

<p>The current iteration of the laptop software is the following script.</p>

<pre><code>
#!/bin/sh
set -e

screen_locked() {
  ioreg -n Root -d1 -a | grep -q CGSSessionScreenIsLocked
}

external_monitor() {
  # The model identifier of my external monitor is EV2785
  system_profiler SPDisplaysDataType | grep -q EV2785
}

do_sleep() {
  sleep_time=1200
  expect_done=$(($(date +%s) + $sleep_time))
  sleep $sleep_time
  delta=$(($(date +%s) - $expect_done))
  if [ $(($delta * $delta)) -gt 100 ]
  then
    echo 'clock skew'
    exit 0
  fi
}

main() {
  do_sleep

  if ! screen_locked &amp;&amp; external_monitor &amp;&amp; ! pgrep -q zoom.us
  then
    echo hello | nc $IP $PORT
  fi
}

main
</code></pre>

<p>This script is started automatically by a macOS LaunchAgent. It sleeps for 20 minutes (which is the time I'm allowing myself not to move), checks if it is appropriate to beep and if so it activates the Beeper. If not then the script exits, macOS restarts it and we wait another 20 minutes.</p>

<p>If my screen is locked then I'm probably not sitting at my desk so we should not beep then. If I'm using my laptop somewhere else in the house away from my desk then the beeping would also be too annoying so we check if the external monitor that sits on my desk is connected to the computer. Finally, after many Zoom calls where I had to ask people to wait while I got up and turned off the beeper, I decided it would be better to not beep while I'm in a meeting.</p>

<p>It's certainly less awkward to not have the Beeper do its magic during a video call but in my experience video calls can be even worse than focused programming when it comes to sitting still too long. Arguably, I should not be suppressing the Beeper then. But I just got fed up with having to explain to the other participants in Zoom calls why I have to get up all the time.</p>

<h2>Conclusion and acknowledgments</h2>

<p>It's a silly device but it works. I am happy about how simple it is. It appears that the 10 seconds it takes for me to get up and push the button are enough to counteract the discomfort caused by sitting still too long.</p>

<p>As a closing thought I want to acknowledge and thank my wife for pointing out to me that I sit still too much and for putting up with the horrible screeching noises from the Beeper for the past 8 years and counting.</p>
<p>Tags:  <a href="https://blog.jacobvosmaer.nl/diy.html">diy</a></p>
<p><a href="https://blog.jacobvosmaer.nl/">Back</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Indexing Code at Scale with Glean (115 pts)]]></title>
            <link>https://engineering.fb.com/2024/12/19/developer-tools/glean-open-source-code-indexing/</link>
            <guid>42568516</guid>
            <pubDate>Wed, 01 Jan 2025 19:25:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://engineering.fb.com/2024/12/19/developer-tools/glean-open-source-code-indexing/">https://engineering.fb.com/2024/12/19/developer-tools/glean-open-source-code-indexing/</a>, See on <a href="https://news.ycombinator.com/item?id=42568516">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

		<ul>
<li aria-level="1"><span>We’re sharing details about </span><a href="https://glean.software/" target="_blank" rel="noopener"><span>Glean</span></a><span>, Meta’s open source system for collecting, deriving, and working with facts about source code.</span></li>
<li aria-level="1"><span>In this blog post we’ll talk about why a system like Glean is important, explain the rationale for Glean’s design, and run through some of the ways we’re using Glean to supercharge our developer tooling at Meta.</span></li>
</ul>
<p><span>In August 2021 we open-sourced our code indexing system </span><a href="https://glean.software/" target="_blank" rel="noopener"><span>Glean</span></a><span>. Glean collects information about source code and provides it to developer tools through an efficient and flexible query language. We use Glean widely within Meta to power a range of developer tools including code browsing, code search, and documentation generation.</span></p>

<p><span>Many tools that developers use rely on information extracted from the code they’re working on. For example:</span></p>
<ul>
<li aria-level="1"><span>Code navigation (“Go to definition”) in an IDE or a code browser;</span></li>
<li aria-level="1"><span>Code search;</span></li>
<li aria-level="1"><span>Automatically-generated documentation;</span></li>
<li aria-level="1"><span>Code analysis tools, such as dead code detection or linting.</span></li>
</ul>
<p><span>The job of collecting information from code is often called </span><i><span>code indexing</span></i><span>. A code indexing system’s job is to efficiently answer the questions your tools need to ask, such as, “Where is the definition of </span><span>MyClass</span><span>?” or “Which functions are defined in </span><span>myfile.cpp</span><span>?”</span></p>
<p><span>An IDE will typically do indexing as needed, when you load a new file or project for example. But the larger your codebase, the more important it becomes to do code indexing ahead of time. For large projects it becomes impractical to have the IDE process all the code of your project at startup and, depending on what language you’re using, that point may come earlier or later: C++ in particular is problematic due to the long compile times.</span></p>
<p><span>Moreover, with a larger codebase and many developers working on it, it makes sense to have a shared centralized indexing system so that we don’t repeat the work of indexing on every developer’s machine. And as the data produced by indexing can become large, we want to make it available over the network through a query interface rather than having to download it.</span></p>
<p><span>This leads to an architecture like this:<img decoding="async" src="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-1.png?w=768" alt="" width="636" height="450" srcset="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-1.png 768w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-1.png?resize=96,68 96w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-1.png?resize=192,136 192w" sizes="(max-width: 992px) 100vw, 62vw"></span></p>
<p><span>In practice the real architecture is highly distributed:</span></p>
<ul>
<li aria-level="1"><span>Indexing can be heavily parallelized and we may have many indexing jobs running concurrently;</span></li>
<li aria-level="1"><span>The query service will be widely distributed to support load from many clients that are also distributed;</span></li>
<li aria-level="1"><span>The databases will be replicated across the query service machines and also backed up centrally.</span></li>
</ul>
<p><span>We’ve found that having a centralized indexing infrastructure enables a wide range of powerful developer tools. We’ll talk about some of the ways we’ve deployed Glean shortly, but first we’ll dive into the rationale for Glean’s design.</span></p>
<h2><b>How is Glean different?</b></h2>
<p><span>Code indexing systems have been around for a while. For example, there’s a well-established format called </span><a href="https://microsoft.github.io/language-server-protocol/" target="_blank" rel="noopener"><span>LSIF</span></a><span> used by IDEs that caches information about code navigation.</span></p>
<p><span>When we designed Glean we wanted a system that wasn’t tied either to particular programming languages or to any particular use case. While we had some use cases in mind that we wanted to support—primarily code navigation of course—we didn’t want to design the system around one use case, in the hope that a more general system would support emerging requirements further into the future.</span></p>
<p><span>Therefore:</span></p>
<ul>
<li aria-level="1"><b>Glean doesn’t decide for you what data you can store</b><span>. Indeed, most languages that Glean indexes have their own data schema and Glean can store arbitrary non-programming-language data too. The data is ultimately stored using </span><a href="https://rocksdb.org/" target="_blank" rel="noopener"><span>RocksDB</span></a><span>, providing good scalability and efficient retrieval.</span></li>
<li aria-level="1"><b>Glean’s query language is very general</b><span>. It’s a declarative logic-based query language that we call </span><i><span>Angle</span></i><span> (“Angle” is an anagram of “Glean”, and means “to fish”). Angle supports </span><i><span>deriving</span></i><span> information automatically, either on-the-fly at query time or ahead of time; this is a powerful mechanism that enables Glean to abstract over language-specific data and provide a language-neutral view of the data.</span></li>
</ul>
<p><span>Storing arbitrary language-specific data can be very powerful. For example, in C++ we use the detailed data to detect dead code such as unused </span><span>#include</span><span> or </span><span>using</span><span> statements. The latter in particular is rather tricky to do correctly and requires the data to include some C++-specific details, such as which </span><span>using</span><span> statement is used to resolve each symbol reference.</span></p>
<p><span>On the other hand, clients often don’t want the full language-specific data. They want to work at a higher level of abstraction. Imagine asking questions like, “Give me the names and locations of all the declarations in this file”, which should work for any language, and which you could use to implement a code outline feature in a code browser. Glean can provide this language-neutral view of the data by defining an abstraction layer in the schema itself – the mechanism is similar to SQL views if you’re familiar with those. This means that we don’t have to compromise between having detailed language-specific data or a lowest-common-denominator language-neutral view; we can have both.</span></p>
<p><span>This generality has allowed Glean to extend to a number of use cases beyond what we originally envisaged. We’ll cover some of those later in this post.</span></p>
<h2>A taste of Angle</h2>
<p><span>Glean has a unified language, Angle, for specifying both schemas and queries. As mentioned above, each language that we index has its own schema. To give you a flavor of this, here’s a fragment of the schema for C++ function declarations:</span></p>
<p><img decoding="async" src="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-2.png?w=380" alt="" width="380" height="206" srcset="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-2.png 380w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-2.png?resize=96,52 96w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-2.png?resize=192,104 192w" sizes="(max-width: 992px) 100vw, 62vw"></p>
<p><span>Defining a schema for Glean is just like writing a set of type definitions. The braces surround a record definition, with a set of fields and their types.&nbsp;</span></p>
<ul>
<li aria-level="1"><span>A </span><span>FunctionDeclaration</span><span> is a </span><i><span>predicate</span></i><span> (roughly equivalent to a table in SQL).&nbsp;</span></li>
<li aria-level="1"><span>The instances of a predicate are called </span><i><span>facts</span></i><span> (roughly equivalent to rows in SQL).&nbsp;</span></li>
<li aria-level="1"><span>A predicate is a thing that you can query, and a query returns facts.&nbsp;</span></li>
</ul>
<p><span>To query efficiently you specify a prefix of the fields. So, for example, we can retrieve a particular </span><span>FunctionDeclaration</span><span> efficiently if we know its </span><span>name</span><span>.</span></p>
<p><span>Let’s write a query to find the function </span><span>folly::parseJson</span><span>:</span></p>
<p><img loading="lazy" decoding="async" src="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-3.png?w=562" alt="" width="562" height="83" srcset="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-3.png 562w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-3.png?resize=96,14 96w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-3.png?resize=192,28 192w" sizes="auto, (max-width: 992px) 100vw, 62vw"></p>
<p><span>Without going into all the details, at a high level this query specifies that we want to find </span><span>FunctionDeclaration</span><span> facts that have a particular name and namespace. Glean can return results for this query in about a millisecond.</span></p>
<p><span>Angle supports more complex queries too. For example, to find all classes that inherit from a class called </span><span>exception</span><span> and have a method called </span><span>what</span><span> that overrides a method in a base class:</span></p>
<p><img loading="lazy" decoding="async" src="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-4.png?w=717" alt="" width="717" height="240" srcset="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-4.png 717w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-4.png?resize=96,32 96w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-4.png?resize=192,64 192w" sizes="auto, (max-width: 992px) 100vw, 62vw"></p>
<p><span>This query returns the first results in a few milliseconds, and because there might be a lot of results we can fetch the results incrementally from the query server.</span></p>
<h2>Incremental indexing</h2>
<p><span>An important innovation in Glean is the ability to index </span><i><span>incrementally</span></i><span>. As the codebase grows, and the rate of change of the codebase increases (a monorepo suffers from both of these problems) we find that we can’t provide up-to-date information about the latest code because indexing the entire repository can take a long time. The index is perpetually out of date, perhaps by many hours.</span></p>
<p><span>The solution to this scaling problem is to process </span><i><span>just the changes</span></i><span>. In terms of computer science big-O notation, we want the cost of indexing to be </span><i><span>O(changes)</span></i><span> rather than </span><i><span>O(repository)</span></i><span>.</span></p>
<p><span>But actually achieving this is not as straightforward as it might sound.</span></p>
<p><span>We don’t want to destructively modify the original data, because we would like to be able to provide data at multiple revisions of the repository, and to do that without storing multiple full-sized copies of the data. So we would like to store the changes in such a way that we can view the whole index at both revisions simultaneously.</span></p>
<p><span>Even if we figure out a way to represent the changes, in practice it isn’t possible to achieve </span><i><span>O(changes)</span></i><span> for many programming languages. For example, in C++ if a header file is modified, we have to reprocess every source file that depends on it (directly or indirectly). We call this the </span><i><span>fanout</span></i><span>. So in practice the best we can do is </span><i><span>O(fanout)</span></i><span>.</span></p>
<p><span>Glean solves the first problem with an ingenious method of </span><i><span>stacking</span></i><span> immutable databases on top of each other. A stack of databases behaves just like a single database from the client’s perspective, but each layer in the stack can non-destructively add information to, or hide information from, the layers below.&nbsp;</span></p>
<p><img loading="lazy" decoding="async" src="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-5.png?w=569" alt="" width="569" height="458" srcset="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-5.png 569w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-5.png?resize=96,77 96w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-5.png?resize=192,155 192w" sizes="auto, (max-width: 992px) 100vw, 62vw"></p>
<p><span>The full details are beyond the scope of this post, for more on how incrementality works see: </span><a href="https://glean.software/blog/incremental/" target="_blank" rel="noopener"><span>Incremental indexing with Glean</span></a><span>.</span></p>
<p><span>Finding the fanout of a set of changes is different for each language.&nbsp; Interestingly the fanout can often be obtained using Glean queries: for example for C++, the fanout is calculated by finding all the files that </span><span>#include</span><span> one of the changed files, and then repeating that query until there are no more files to find.</span></p>
<h2>How we use Glean at Meta</h2>
<h3>Code navigation</h3>
<p><span>Code navigation at scale, on large monorepos containing millions of lines in diverse programming languages, is a challenging problem. But what makes it different from the code navigation support available in modern IDEs, other than scale? In our experience, code indexing a la Glean offers the following advantages over IDEs:</span></p>
<ol>
<li aria-level="1"><span>Instantly available: Just open the code browser web app (our internal tool uses Monaco) and navigate without waiting for the IDE, build system, and LSP server to initialize</span></li>
<li aria-level="1"><span>More widely available: You can integrate code navigation in pretty much any app that shows code! One particularly useful integration is in your code review tool (ours is called Phabricator), but more on that later.</span></li>
<li aria-level="1"><span>Full repo visibility: Glean allows you to, for example, find all the references to a function, not just the ones visible to the IDE. This is particularly useful for finding dead code, or finding clients of an API that you want to change.</span></li>
<li aria-level="1"><span>Symbol search for all the languages across the whole repository.</span></li>
<li aria-level="1"><span>Cross language navigation: A common situation that comes up is a remote procedure call (RPC). When browsing the code you might want to jump to the service definition or, indeed, to the service implementation itself. Another case is languages with a foreign function interface (FFI), where you would like to browse from an FFI call to the corresponding definition in the target language.</span></li>
</ol>
<p><span>Our architecture for code navigation is based on </span><a href="https://github.com/facebookincubator/Glean/tree/main/glean/glass" target="_blank" rel="noopener"><span>Glass</span></a><span>, a symbol server that abstracts all the complexities of Glean by implementing the usual code navigation logic in a simple but powerful API. The code browser needs only a single Glass API call,</span><i><span> documentSymbols(repo,path,revision),</span></i><span> to obtain a list of all the definitions and references in a source file, including source and target spans. The list of definitions is used to render an outline of the file, and the list of references to render underlines that can be hovered over or clicked to navigate. Finally, other code browser features like Find References or Call Hierarchy are also driven by API calls to Glass.&nbsp;</span></p>
<p><img loading="lazy" decoding="async" src="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-6.png?w=844" alt="" width="844" height="186" srcset="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-6.png 844w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-6.png?resize=768,169 768w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-6.png?resize=96,21 96w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-6.png?resize=192,42 192w" sizes="auto, (max-width: 992px) 100vw, 62vw"></p>
<p><span>The code for Glass is also open-source, you can find it in </span><a href="https://github.com/facebookincubator/Glean/tree/main/glean/glass" target="_blank" rel="noopener"><span>glean/glass</span></a><span> on GitHub.</span></p>
<h3>Speeding up the IDE</h3>
<p><span>Using an IDE such as VS Code on a large project, or a project with a large set of dependencies, or in a large monorepo tends to lead to a degraded experience as the IDE isn’t able to analyze all the code that you might want to explore. At Meta we’re using Glean to plug this gap for C++ developers: Because Glean has already analyzed the whole repository, C++ developers have access to basic functionality such as go-to-definition, find-references, and doc comment hovercards for the whole repository immediately on startup. As the IDE loads the files the developer is working on, the C++ language service seamlessly blends the Glean-provided data with that provided by the native clangd backend.</span></p>
<p><span>Our target was C++ developers initially because that group typically has the worst IDE experience due to the long compile times, but the approach is not specific to C++ and we imagine other languages following the same path in the future.</span></p>
<h3>Documentation generation</h3>
<p><span>The data we store in Glean includes enough information to reconstruct the full details of an API: classes, methods, type signatures, inheritance, and so on. Glean also collects documentation from the source code when it uses the standard convention for the language, e.g., in C++ the convention is </span><span>/// comment</span><span> or </span><span>/** comment */</span><span>. With API data and documentation strings in Glean we can produce automatically-generated documentation on demand.&nbsp;</span></p>
<p><span>Here’s an example page for the </span><span>folly::Singleton</span><span> type:</span></p>
<p><img loading="lazy" decoding="async" src="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-7.png?w=1024" alt="" width="1024" height="664" srcset="https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-7.png 1672w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-7.png?resize=916,594 916w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-7.png?resize=768,498 768w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-7.png?resize=1024,664 1024w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-7.png?resize=1536,997 1536w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-7.png?resize=96,62 96w, https://engineering.fb.com/wp-content/uploads/2024/12/Meta-Glean-image-7.png?resize=192,125 192w" sizes="auto, (max-width: 992px) 100vw, 62vw"></p>
<p><span>The data for these pages is produced by Glass and rendered by a client-side UI. The documentation is fully hyperlinked so the user can navigate around all the APIs throughout the repository easily. Meta engineers get consistent code documentation integrations across all the programming languages supported by Glean.</span></p>
<h3>Symbol IDs</h3>
<p><span>Glass assigns every symbol a </span><i><span>symbol ID</span></i><b><i>, </i></b><span>a unique string that identifies the symbol. For example, the symbol ID for </span><span>folly::Singleton</span><span> would be something like, </span><span>REPOSITORY/cpp/folly/Singleton</span><span>. The symbol ID can be used to link directly to the documentation page for the symbol, so there’s a URL for every symbol that doesn’t change even if the symbol’s definition moves around.&nbsp;</span></p>
<p><span>We can use the symbol ID to request information about a symbol from Glass, for example to find all the references to the symbol throughout the repository. All of this works for every language, although the exact format for a symbol ID varies per language.</span></p>
<h3>Analyzing code changes</h3>
<p><span>Glean indexing runs on diffs (think, “pull requests”) to extract a mechanical summary of the changeset that we call a </span><i><span>diff sketch</span></i><span>. For example, a diff might introduce a new class, remove a method, add a field to a type, introduce a new call to a function, and so on. The diff sketch lists all of these changes in a machine-readable form.</span></p>
<p><span>Diff sketches are used to drive a simple static analysis that can identify potential issues that might require further review. They can also be used to drive non-trivial lint rules, rich notifications, and semantic search over commits. One example of the latter is connecting a production stack trace to recent commits that modified the affected function(s), to help root-cause performance issues or new failures.</span></p>
<p><span>Indexing diffs also powers code navigation in our code review tools, giving code reviewers access to accurate go-to-definition on the code changes being reviewed, along with other code insights such as type-on-hover and documentation. This is a powerful lift to the code review process, making it easier for reviewers to understand the changes and provide valuable review feedback. At Meta this is enabled for a <a href="https://engineering.fb.com/2022/07/27/developer-tools/programming-languages-endorsed-for-server-side-use-at-meta/" target="_blank" rel="noopener">variety of different languages</a>, including C++, Python, PHP, Javascript, <a href="https://engineering.fb.com/2021/04/29/developer-tools/rust/" target="_blank" rel="noopener">Rust</a>, Erlang, Thrift, and even Haskell.</span></p>
<h2>More applications for Glean</h2>
<p><span>Aside from the primary applications described above, Glean is also used to</span></p>
<ul>
<li aria-level="1"><span>Analyse build dependency graphs.</span></li>
<li aria-level="1"><a href="https://engineering.fb.com/2023/10/24/data-infrastructure/automating-dead-code-cleanup/" target="_blank" rel="noopener"><span>Detect and remove dead code</span></a><span>.</span></li>
<li aria-level="1"><span>Track the progress of API migrations.</span></li>
<li aria-level="1"><span>Measure various metrics that contribute to code complexity.</span></li>
<li aria-level="1"><span>Track test coverage and select tests to run.</span></li>
<li aria-level="1"><a href="https://engineering.fb.com/2023/10/31/data-infrastructure/automating-data-removal/" target="_blank" rel="noopener"><span>Automate data removal</span></a><span>.</span></li>
<li aria-level="1"><span>Retrieval Augmented Generation (RAG) in AI coding assistants</span></li>
</ul>
<p><span>Furthermore, there are an ever-growing number of ad-hoc queries made by various people and systems to solve a variety of problems. Having a system like Glean means you can ask questions about your code: we don’t know all the questions we might want to ask, nor do we know all the data we might want to store, so Glean deliberately aims to be as general as possible on both of these fronts.</span></p>
<h2>Try Glean today</h2>
<p><span>Visit the </span><a href="https://glean.software/" target="_blank" rel="noopener"><span>Glean site</span></a><span> for more details, technical documentation, and information on how to get started.</span></p>

		
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Terence Tao: One of my papers got declined today (743 pts)]]></title>
            <link>https://mathstodon.xyz/@tao/113721192051328193</link>
            <guid>42568399</guid>
            <pubDate>Wed, 01 Jan 2025 19:12:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mathstodon.xyz/@tao/113721192051328193">https://mathstodon.xyz/@tao/113721192051328193</a>, See on <a href="https://news.ycombinator.com/item?id=42568399">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
    </channel>
</rss>