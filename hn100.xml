<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Wed, 18 Dec 2024 22:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Java in the Small (117 pts)]]></title>
            <link>https://horstmann.com/unblog/2024-12-11/index.html</link>
            <guid>42454929</guid>
            <pubDate>Wed, 18 Dec 2024 20:42:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://horstmann.com/unblog/2024-12-11/index.html">https://horstmann.com/unblog/2024-12-11/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=42454929">Hacker News</a></p>
<div id="readability-page-1" class="page"><h2>Java in the Small</h2>
    <blockquote><p>Java has many features that make it well suited for large, long-lasting projects. But I find it surprisingly good for small tasks as well. Recent language features make it even better. The killer features are compile-time typing and great tool support. </p><p>This article also appeared in the <a href="https://javaadvent.com/">Java Advent</a> calendar.</p></blockquote>

    <p><img src="https://horstmann.com/unblog/2024-12-11/rc24-duke-java-mascot.jpg" alt=".jpg" loading="lazy"></p>

    <p>In my job as author and teacher, I have many repetitive tasks, such as moving files around and transforming their content in tedious ways. In my quest to automate the boring stuff, I look at a task and think ‚Äúno big deal, I'll write a shell script‚Äù. Then the inevitable happens. As more special cases arise, the script turns into a festering mess of bash code. And I wish that I had written it in a real programming language instead.</p>
    <p>The ‚Äúobvious‚Äù choice is Python, but the Python API isn't all that wonderful, and dynamic typing means that I spend too much time debugging. So I tried Java. I know the API by heart‚Äîat least for collections, files, regex, and so on. Java is statically typed so I am saved early from my foolishness. And the development environments are terrific. </p>
    <p>But, I hear you say, really, a separate POM file and <code>src/main/java</code> hierarchy for every script? Ugh.</p>
    <p>I don't do that. Fortunately, modern Java and tools don't require it. Read on for the details!</p>
    
    <h2>Launching without Compiling</h2>
    <p>Consider a simple, but not too simple, task. As an example, I have a procedure to verify that my backups actually work. I retrieve ten random files once a day, in a scheduled job. (This is a really good idea that has saved me more than once from unreliable backups.) A script randomly picks ten files from a directory tree. It's written in Java. And it sits in a directory with quite a few utility scripts.</p>
    <p>Of course, I could compile it. But then my utility script directory would be cluttered with class files. Or I could make a JAR file. But that's work. When you write a script whose value may not yet be evident, who has the patience for JARs and uber JARs?</p>
    <p>That's why I love <a href="https://openjdk.org/jeps/330">JEP 330</a> and <a href="https://openjdk.org/jeps/458">JEP 458</a>. Now I can put my code in a <code>.java</code> file and just launch it as</p>
    <pre>java RandomFiles.java 10 /home/cay/data</pre> 
    <p>The file gets compiled on the fly, every time that I run the script. And that's just the way I want it during development or later tinkering. And I don't care during regular use because it's not that slow. The Python crowd never loses sleep over that, so why should I?</p>
    <p>You can compile scripts into native executables with Graal for faster startup time. I have experimented with that, but don't find it makes a meaningful difference for most of my use cases.  </p>
    <p>Why not use JShell? I love using JShell for quick experiments (most of which seem to involve debugging regular expressions  üòø).  But it's not great for scripts. The JShell tool itself has a very rudimentary editor integration, and the JShell support in IDEs is poor.  </p>
    <h2>Instance Main Methods and Implicit Classes</h2>
    <p><a href="https://openjdk.org/jeps/477">JEP 477</a> reduces the verbosity of writing small Java programs. This effort is motivated by two desires. First, to make it easier to learn Java. And to simplify ‚Äúother kinds of small programs, such as scripts and command-line utilities‚Äù.  Having taught Java for many years, I never ran into students who said ‚Äúmy head hurts when I copy/paste the <code>public static void main</code> thing‚Äù. But I knew plenty of professors who were bothered by it. So it's a good thing it is going away.</p>
    <p>And for us scripters, it's nice not to look at clutter.</p> 
    <pre>var someVariable = initialValue;
String helper(int param) { ... }
void main(String[] args) {
    ...
}
</pre>
    <p>No pesky class, no <code>static</code>.</p>
    <p>Technically, any Java file with a top-level <code>main</code> method becomes an implicit class whose instance variables and methods are the top-level variables and methods in the file. Note that it is perfectly ok, and even desirable, to have classes, interfaces, enumerations, or records, in an implicit class. They turn into nested types.</p>
    <p>As an added, benefit, all of the <code>java.base</code> module is automatically imported. Hooray, no more 
      </p><pre>import java.util.List;
</pre>
    <p>(As it turns out, the class names in <code>java.base</code> have been carefully curated not to conflict with each other.)</p>
    <p>As of Java 23, three methods are automatically imported from <code>java.io.IO</code>: <code>println</code>, <code>print</code>, <code>readln</code>. From a teaching perspective, that's not ideal because it is yet another factoid to remember. But as a scripter, I'll take it.</p>
    <p>We get to enjoy these automatic imports only in an implicit class. But that's ok for many scripts.</p>
    <p><img src="https://horstmann.com/unblog/2024-12-11/eclipse.png" alt=".png" loading="lazy"></p>
    <h2>Records and Enums</h2>
    <p>Python programmers often use ad-hoc dictionaries (i.e. maps) to aggregate related information. In Java, we have records:</p>
    <pre>record Window(int id, int desktop, int x, int y, int width, int height, String title) {}
</pre>
    <p>They make the code easier to read, and they become natural spots for methods:</p>
    <pre>record Window(...) {
   int xmax() { return x + width; }
   int ymax() { return y + height; }
}
</pre>
    <p>The same holds for enumerations:</p>
    <pre>enum Direction { NORTH, EAST, SOUTH, WEST };
</pre>
    <p>Much nicer than the clunky Python enumerations.</p>
    <h2>Other Helpful Language Features</h2>
    <p>With complex programs, I am conservative with the use of <code>var</code> and only use it when the type is blindingly obvious, e.g.</p>
    <pre>var builder = new StringBuilder();</pre>
    
    <p>But in a script, I use <code>var</code> liberally. It's almost like in Python, except that you still have compile-time typing. In fact, it is better syntax than Python because you can distinguish between declaration and assignment.</p>
    <p>I am also more aggressive with static import:</p>
    <pre>import static java.lang.Math.*;

diagonal = sqrt(pow(width, 2) + pow(height, 2));
</pre>
    <p>(It's just an example, you can actually use <code>hypot(width, height)</code>.)</p>
    <p>Text blocks are nice to keep data with your code. They play the same role as ‚Äúhere documents‚Äù in scripts. I hope that interpolation will come back soon, but in the meantime I use <code>String.formatted</code> for variable text parts.</p>
    <h2>Helpful API Features</h2>
    <p>The Java library for strings, regex, collections, and date/time is excellent and extremely well documented. I much prefer it to the equivalent in Python, JavaScript, or (ugh) Bash. </p>
    <p>For example, reading a file into a string is simply:</p>
    <pre>var content = Files.readString(Path.of(filename));
</pre>
    <p>I use a helper for running an external process:</p>
    <pre>String run(String... cmd) throws Exception {
    var process = new ProcessBuilder(cmd).redirectErrorStream(true).start();
    process.waitFor();
    return new String(process.getInputStream().readAllBytes());
}
</pre>
    <p>Note, by the way, that since <a href="https://openjdk.org/jeps/400">JEP 400</a>, I can rely on UTF-8 as the default encoding.</p>
    <p>For HTTP, there is the <code>HTTPClient</code> (<a href="https://openjdk.org/jeps/321">JEP 321</a>) and the simple web server (<a href="https://openjdk.org/jeps/408">JEP 408</a>).</p>
    <p>The XML support is serviceable. The API is antiquated and cumbersome, but at least it works predictably. In Python, you get a multitude of choices, each partially broken in its own way.</p>
    <p>There are two things that are sorely missing in the standard library: JSON and command-line processing. For a large Java program, this isn't a big issue. Just add your favorite library, such as Jackson or PicoCLI, to the POM. But it is a roadblock when writing scripts. You don't want to manually get all of the dependencies of Jackson downloaded, and then added to the class path.</p>
    <p>One trick is to use really simple libraries that fit into a single file. I've used <a href="https://github.com/arkanovicz/essential-json">Essential JSON</a> and <a href="https://github.com/purcell/jargs">JArgs</a>. Just toss the file into the same directory as your script.</p>
    <h2>Checked Exceptions</h2>
    <p>Depending on your circumstances, it may well be acceptable if the script terminates with a stack trace when something went wrong. But of course, you still need to declare or catch checked exceptions. In a large program, this makes sense, but it can feel like a burden in a script. </p>
    <p>The simplest remedy is to add <code>throws Exception</code> to each method that may throw a checked exception, including <code>main</code>. </p>
    <p>As an aside, this could be another ‚Äúceremony reduction‚Äù for beginning students. Why not do that automatically in methods of implicit classes? But I don't make the rules.</p>
    <p>There is still a problem with checked exceptions in lambda expressions. Scripts do a lot of file handling, and sometimes the API provides streams of file paths. So you want to go on with something like</p>
    <pre>streamOfPaths.map(Files::readString)
</pre>
    <p>But you can't since the <code>readString</code> method may throw an <code>IOException</code>.</p>
    <p>The correct remedy is, of course, to handle the exception in some way. Return an empty string. Log the exception. Turn it into an <code>UncheckedIOException</code>. Only you can make the appropriate decision.</p>
    <p>But in a script, you may not care, and just want the program to terminate. There are a number of ‚Äúsneaky throw‚Äù libraries, such as <a href="https://github.com/ciechanowiec/sneakyfun/">Sneaky Fun</a> to address this problem. They take advantage of a hole in the Java type system. Through a clever use of generics, one can turn a method with <code>throws</code> specifiers into one that doesn't have any. The details are, well, sneaky, but you don't need to know them to use the feature. Simply write:</p>
    <pre>streamOfPaths.map(sneaky(Files::readString))
</pre>
    <p>I am pretty sure this will never be a part of the JDK, because it is arguably bad for large and serious programs. But in a quick and dirty script, why not? Just remember to take it out if your script scales to the point where it no longer quick and dirty.</p>
    <h2>IDEs and File Organization</h2>
    <p>You don't want to write a script with a barebones text editor. The whole point of using Java is that it is a statically typed language where the IDE can help you out with code completion and instant display of programming errors.</p>
    <p>I usually start with a middle-weight editor such as Visual Studio Code or Emacs with LSP mode. That gives me Java integration, but without the need to set up a separate project for every script. Just open the Java file and start editing.</p>
    <p>As I already mentioned, I find it demotivating to start a new <code>src/main/java</code> directory structure whenever an idea for a script occurs to me. So, I get going with my favorite editor. Eventually the script grows to the point where I no longer want to debug with print statements. You can debug a Java program inside VS Code, but I don't find it particularly convenient. At that point, I would like the comfort of an actual IDE. But without <code>src/main/java</code>. </p>
    <p>It is actually possible to coax your heavy-weight IDE into using the project base directory as the source directory. If you ‚Äúseed‚Äù your project base directory with a Java file, and then create a project from existing sources in your IDE, it should recognize your intent automatically. With an existing project, edit the project setup. In Eclipse, right-click on the project name, select Properties and Java Build Path, then the Source tab. In IntelliJ, go to Menu ‚Üí Project structure... ‚Üí Modules, remove the ‚Äúcontent root‚Äù, and add the project base directory as a new ‚Äúcontent root‚Äù that is marked as ‚ÄúSources‚Äù. It sounds weird but it works.</p>
    <h2>JBang</h2>
    <p>The biggest pain point with Java scripting is the use of third party libraries. Why is it that the single-file <code>java</code> launcher can't import stuff from Maven? Well, for starters, Java has no idea that Maven exists. There is nothing in the Java language standard that says anything about the Maven ecosystem. This is where Java shows its age. More modern programming languages have a unified mechanism for third party libraries. But I don't think that this is something that Oracle can or wants to fix. So, you need some tooling to integrate with the Maven ecosystem, and it won't be a part of the JDK.</p>
    <p>As a quick remedy (adapted from <a href="https://advancedweb.hu/using-external-libraries-in-jshell/">this hack</a>), I sometimes make a trivial Gradle script with Maven coordinates to get the files fetched, and to print a class path. But that's only when I am not allowed to use JBang. (See <a href="https://www.javaadvent.com/2021/12/jbang-gift-that-keeps-on-giving.html">this JavaAdvent article</a> for an introduction to JBang.)</p>
    <p>The killer feature of JBang is that you can add Maven dependencies right into the source file:</p>
    <pre>//DEPS org.eclipse.angus:jakarta.mail:2.0.3
</pre>
    <p>Then you can run</p>
    <pre>jbang MailMerge.java
</pre>
    <p>In Linux and Mac OS, you can also turn the file into an executable script with a ‚Äúshebang‚Äù line:</p>
    <pre>///usr/bin/env jbang "$0" "$@" ; exit $?
</pre>
    <p>Note that the <code>//</code> hide the shebang from Java, and the <code>exit $?</code> masks the rest of the Java file from the shell. (Three slashes are used for an <a href="https://pubs.opengroup.org/onlinepubs/000095399/basedefs/xbd_chap04.html#tag_04_11">arcane Posix compliance reason</a>.)</p>
    <p>The rest of JBang is just gravy. You can launch JShell with your file and its dependencies loaded. You can launch an IDE with symlinks to your source inside a temporary <code>src/main/java</code>. There are many more thoughtful features, but not too many. If you are serious about scripting in Java, and are able to use third-party tools, get JBang.</p>
    <h2>Notebooks</h2>
    <p>So far I focused on scripts‚Äîshort programs that one runs regularly. Another aspect of programming in the small is exploratory programming: writing code once or a few times, to get some result out of a data set. Data scientists favor <em>notebooks</em> for this work. A notebook consists of code and text cells. The result of each code cell is displayed as text, a table, an image, or even as an audio or video clip. The code cells invite a trial-and-error approach. Once the desired result is obtained, the computation can be annotated with the text cells.</p>
    <p>Why is this better than JShell? It is much easier to tinker with the cells than with lines of code in JShell. You can see tabular data and graphs. It is easy to save and share notebooks.</p>
    <p>The most common notebook in Python is called ‚ÄúJupyter‚Äù. You can run it locally, usually with a web interface, or it can be hosted. A popular hosted service is Google Colab.</p>
    <p>Actually, the core Jupyter technology is language independent. One can install different <em>kernels</em> for various programming languages. The kernel installation process can be fussy, but <a href="https://www.javaadvent.com/2023/12/jupyter-notebooks-and-java.html">this JavaAdvent article</a> describes Jupyter Java Anywhere, a simple mechanism (using JBang) for installing a Java kernel.</p>
    <p>Confusingly, there are a number of different Java kernels (including <a href="https://github.com/SpencerPark/IJava">IJava</a>, <a href="https://github.com/dflib/jjava">JJava</a>, <a href="https://github.com/allen-ball/ganymede">Ganymede</a>, and <a href="https://github.com/padreati/rapaio-jupyter-kernel">Rapaio</a>). Each kernel has its own way for installing Maven dependencies, displaying non-text results, and so on. Juypter Java Anywhere installs the classic IJava kernel, which has some open issues around dependency resolution. It really would be desirable for Oracle or another major vendor to step up, curate a kernel, and even‚Äîdare we hope‚Äîprovide a Colab-like Java notebook service. Something more useful than the <a href="https://dev.java/playground/">Java playground.</a>
    </p>
    <p>Python notebook coders are blessed with a couple of libraries for number crunching, in particular NumPy and Matplotlib. I have not found either of them to be God's gift in terms of API design, but they are ubiquitous, and therefore StackOverflow and your favorite chatbot will offer suggestions, many of them useful, for tweaking computations and graphs.</p>
    <p>Exploratory coding in Java is not (yet) common, and there isn't a deep bench of support libraries. I think <a href="https://github.com/jtablesaw/tablesaw">tablesaw</a> could be a reasonable NumPy equivalent. It has a wrapper for the well-regarded Plot.ly JavaScript drawing package.</p>
<!--     ‚å©p I tried using the admirable ‚å©a href=https://github.com/fair-acc/chart-fx ChartFX‚å™ package in a notebook, but it requires JavaFX, which I could not get to run with the IJava kernel. ‚å™ -->
    <p>Sven Reimers is developing the <a href="https://github.com/svenreimers/jtaccuino">JTaccuino</a> notebook to offer a better experience. This is a JavaFX implementation with a friendlier user interface than the web-based Jupyter notebook. It uses JShell under the hood. The project is still in its early stages but worth watching.</p>
    <p><img src="https://horstmann.com/unblog/2024-12-11/jtaccuino.png" alt=".png" loading="lazy"></p>
    <p>For Kotlin, there is the <a href="https://kotlinlang.org/docs/kotlin-notebook-overview.html">Kotlin Notebook</a> IntelliJ plugin.</p>
    <p>While Java notebooks may not be ready for prime time, there is hope for the future.</p>
    <h2>Conclusion</h2>
    <p>With the right tooling, Java is a surprisingly effective choice for small programs. For simple scripts that use only the Java API, you can simply launch a Java source file. JBang makes it very easy to launch programs with third-party libraries. You benefit from compile-time typing and an upgrade path for when your programs get more complex, as they often do.</p>
    <p>For the same reasons, Java can become an attractive choice for exploratory programming, but the tooling is not yet where it could be.</p>
    
    
    
    <!-- You can specify a per page discussion id on the next line, if your URLs might change. -->
    
    
    
  

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Windshield pitting incidents in Washington reach fever pitch on April 15, 1954 (2003) (171 pts)]]></title>
            <link>https://www.historylink.org/File/5136</link>
            <guid>42454405</guid>
            <pubDate>Wed, 18 Dec 2024 20:01:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.historylink.org/File/5136">https://www.historylink.org/File/5136</a>, See on <a href="https://news.ycombinator.com/item?id=42454405">Hacker News</a></p>
Couldn't get https://www.historylink.org/File/5136: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[1-800-ChatGPT (262 pts)]]></title>
            <link>https://help.openai.com/en/articles/10193193-1-800-chatgpt-calling-and-messaging-chatgpt-with-your-phone</link>
            <guid>42453660</guid>
            <pubDate>Wed, 18 Dec 2024 19:03:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://help.openai.com/en/articles/10193193-1-800-chatgpt-calling-and-messaging-chatgpt-with-your-phone">https://help.openai.com/en/articles/10193193-1-800-chatgpt-calling-and-messaging-chatgpt-with-your-phone</a>, See on <a href="https://news.ycombinator.com/item?id=42453660">Hacker News</a></p>
Couldn't get https://help.openai.com/en/articles/10193193-1-800-chatgpt-calling-and-messaging-chatgpt-with-your-phone: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[GitHub Copilot is now available for free (323 pts)]]></title>
            <link>https://github.com/features/copilot</link>
            <guid>42453341</guid>
            <pubDate>Wed, 18 Dec 2024 18:29:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/features/copilot">https://github.com/features/copilot</a>, See on <a href="https://news.ycombinator.com/item?id=42453341">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-commit-hovercards-enabled="" data-discussion-hovercards-enabled="" data-issue-and-pr-hovercards-enabled="" data-project-hovercards-enabled="">
        <main data-color-mode="dark" data-dark-theme="dark">
    








<react-app app-name="landing-pages" initial-path="/features/copilot" data-attempted-ssr="true" data-ssr="true" data-lazy="false" data-alternate="false">
  
  
  <div data-color-mode="light" dir="ltr" data-target="react-app.reactRoot"><div data-testid="Grid-:R2b:" id="features"><p><header><span data-testid="Label"><span><span>Features</span></span></span><h2>Customizable. Contextual. <br> AI-powerful.</h2></header></p><div><section><a href="https://docs.github.com/en/copilot/example-prompts-for-github-copilot-chat" aria-label="Accelerate workflow with interactive codebase chat" data-analytics-event="{&quot;action&quot;:&quot;chat_docs&quot;,&quot;tag&quot;:&quot;video&quot;,&quot;context&quot;:&quot;copilot_chat_example_prompts&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;chat_docs_video_copilot_chat_example_prompts_features&quot;}"></a><div><p><em>Create tests, docs, and more.</em> Ask GitHub Copilot a question, get the right answer for you, and accept the code with a single click.<span><a href="https://docs.github.com/en/copilot/example-prompts-for-github-copilot-chat" data-analytics-event="{&quot;action&quot;:&quot;chat_docs&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;context&quot;:&quot;copilot_chat_example_prompts&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;chat_docs_link_copilot_chat_example_prompts_features&quot;}"><span>Our favorite Copilot prompts</span></a></span></p></div></section><section><div><p><h3>Choose your model</h3></p><p>Use models like<!-- --> <a href="https://docs.github.com/en/copilot/using-github-copilot/using-claude-sonnet-in-github-copilot" data-analytics-event="{&quot;action&quot;:&quot;docs_instructions&quot;,&quot;tag&quot;:&quot;inline_link&quot;,&quot;context&quot;:&quot;using_sonnet&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;docs_instructions_inline_link_using_sonnet_features&quot;}">Claude 3.5 Sonnet</a>, o1, and GPT 4o to excel at coding tasks one minute ‚Äî and deeper reasoning and understanding the next.</p></div><p><a href="https://docs.github.com/en/copilot/using-github-copilot/using-claude-sonnet-in-github-copilot" tabindex="-1" data-analytics-event="{&quot;action&quot;:&quot;docs_instructions&quot;,&quot;tag&quot;:&quot;image&quot;,&quot;context&quot;:&quot;using_sonnet&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;docs_instructions_image_using_sonnet_features&quot;}"><img alt="GitHub Copilot model choices" width="708" height="472" src="https://github.githubassets.com/assets/copilot-models-4a4b9e9cdb2e.webp" loading="lazy" decoding="async"></a></p></section><section><div><p><h3>Multi-file edits</h3></p><p>Tell GitHub Copilot what to do, and watch it update multiple files right in your editor.</p></div><p><a href="https://docs.github.com/en/copilot/using-github-copilot/asking-github-copilot-questions-in-your-ide#slash-commands" tabindex="-1" data-analytics-event="{&quot;action&quot;:&quot;docs_instructions&quot;,&quot;tag&quot;:&quot;image&quot;,&quot;context&quot;:&quot;slash_commands&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;docs_instructions_image_slash_commands_features&quot;}"><img alt="GitHub Copilot performing a code fix" width="708" height="472" src="https://github.githubassets.com/assets/copilot-multifile-3eb48ba0aedf.webp" loading="lazy" decoding="async"></a></p></section><section><div><p><h3>Get AI-based suggestions in real time</h3></p><p>GitHub Copilot suggests code completions as you type and turns natural language prompts into coding suggestions based on your project's conventions.</p><p><a href="https://docs.github.com/en/copilot/using-github-copilot/asking-github-copilot-questions-in-your-ide#slash-commands" data-analytics-event="{&quot;action&quot;:&quot;docs_instructions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;context&quot;:&quot;slash_commands&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;docs_instructions_link_slash_commands_features&quot;}"><span>Use slash commands</span></a></p></div><p><a href="https://docs.github.com/en/copilot/quickstart#introduction" tabindex="-1" data-analytics-event="{&quot;action&quot;:&quot;quickstart_docs&quot;,&quot;tag&quot;:&quot;video&quot;,&quot;context&quot;:&quot;ai_suggestions&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;quickstart_docs_video_ai_suggestions_features&quot;}"><img alt="Editor with GitHub Copilot code suggestions in real time" width="708" height="472" src="https://github.githubassets.com/assets/features-river-1-44294b338dbc.webp" loading="lazy" decoding="async"></a></p></section><section><div><p><h3>Instant feedback</h3></p><p>Ask GitHub Copilot to review your work, uncover hidden bugs, fix mistakes, and more‚Äîbefore you get a human review.</p><p><a href="https://github.com/features/preview/copilot-code-review" data-analytics-event="{&quot;action&quot;:&quot;docs_instructions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;context&quot;:&quot;copilot_review&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;docs_instructions_link_copilot_review_features&quot;}"><span>Get early access</span></a></p></div><p><a href="https://github.com/features/preview/copilot-code-review" tabindex="-1" data-analytics-event="{&quot;action&quot;:&quot;docs_instructions&quot;,&quot;tag&quot;:&quot;image&quot;,&quot;context&quot;:&quot;copilot_review&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;docs_instructions_image_copilot_review_features&quot;}"><img alt="GitHub Copilot performing a code review" width="708" height="472" src="https://github.githubassets.com/assets/copilot-review-d0694730cfcd.webp" loading="lazy" decoding="async"></a></p></section><section><div><p><h3>Extensions for your favorite tools</h3></p><p>Check logs, create feature flags, and deploy apps‚Äîall from Copilot Chat, enhanced by an ecosystem of extensions from third party tools and services.</p><p><a href="https://github.com/features/copilot/extensions" data-analytics-event="{&quot;action&quot;:&quot;docs_instructions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;context&quot;:&quot;copilot_extensions&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;docs_instructions_link_copilot_extensions_features&quot;}"><span>Explore GitHub Copilot Extensions</span></a></p></div><p><a href="https://github.com/features/copilot/extensions" tabindex="-1" data-analytics-event="{&quot;action&quot;:&quot;docs_instructions&quot;,&quot;tag&quot;:&quot;image&quot;,&quot;context&quot;:&quot;copilot_extensions&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;docs_instructions_image_copilot_extensions_features&quot;}"><img alt="GitHub Copilot Extensions for Azure, Datastax, Docker, MongoDB and Sentry" width="708" height="472" src="https://github.githubassets.com/assets/copilot-extensions-f78138bbfae2.webp" loading="lazy" decoding="async"></a></p></section></div><section><div><p><h3>Chat with your AI pair programmer on-the-go</h3></p><p><a href="https://play.google.com/store/apps/details?id=com.github.android" target="_blank" rel="noreferrer" data-analytics-event="{&quot;action&quot;:&quot;play_store&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;context&quot;:&quot;mobile_apps&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;play_store_button_mobile_apps_features&quot;}"><img alt="Download GitHub on the Google Play Store" width="180" height="53" src="https://github.githubassets.com/assets/google-play-b4758bd0f618.png" loading="lazy" decoding="async"></a><a href="https://apps.apple.com/app/github/id1477376905?ls=1" target="_blank" rel="noreferrer" data-analytics-event="{&quot;action&quot;:&quot;app_store&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;context&quot;:&quot;mobile_apps&quot;,&quot;location&quot;:&quot;features&quot;,&quot;label&quot;:&quot;app_store_button_mobile_apps_features&quot;}"><img alt="Download GitHub on the Apple App Store" width="179" height="53" src="https://github.githubassets.com/assets/app-store-f73cb66283cf.png" loading="lazy" decoding="async"></a></p></div><div><p><img alt="A phone showing GitHub Copilot in GitHub Mobile" width="724" height="560" src="https://github.githubassets.com/assets/copilot-mobile-828695350edc.webp" loading="lazy" decoding="async"></p></div></section></div><section id="pricing"><div data-testid="Grid-:Rbb:"><p><header><span data-testid="Label"><span><span>Pricing</span></span></span><h2>Take flight with GitHub&nbsp;Copilot</h2></header></p></div><div data-testid="Grid-:Rjb:"><div><div><h3>Free</h3><p>For developers looking to get started with GitHub Copilot.</p></div><p><a href="https://github.com/copilot" data-analytics-event="{&quot;action&quot;:&quot;get_started&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;context&quot;:&quot;free_plan&quot;,&quot;location&quot;:&quot;offer_cards&quot;,&quot;label&quot;:&quot;get_started_button_free_plan_offer_cards&quot;}"><span><span>Get started</span></span><span></span></a><span>Already have<!-- --> <span> <!-- -->VS<!-- --> <!-- -->Code?</span> <a href="vscode://GitHub.copilot" data-analytics-event="{&quot;action&quot;:&quot;open_vscode&quot;,&quot;tag&quot;:&quot;a&quot;,&quot;context&quot;:&quot;click to try copilot in vscode&quot;,&quot;location&quot;:&quot;offer_cards&quot;,&quot;label&quot;:&quot;open_vscode_a_click to try copilot in vscode_offer_cards&quot;}">Open&nbsp;now</a></span><span>Includes up to 2,000 completions and 50 chat requests per month.</span></p></div><div><div><h3>Pro</h3><p>For developers who want unlimited access to GitHub Copilot.</p></div><div><p><span>$</span><span>10</span><span> USD </span></p><p><span>per month. First 30 days free.</span></p></div><p><a href="https://github.com/login?return_to=%2Fgithub-copilot%2Fsignup%3Fcft%3Dcopilot_lo.features_copilot.cfi&amp;cft=copilot_lo.features_copilot.cfi" data-analytics-event="{&quot;action&quot;:&quot;get_started&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;context&quot;:&quot;pro_plan&quot;,&quot;location&quot;:&quot;offer_cards&quot;,&quot;label&quot;:&quot;get_started_button_pro_plan_offer_cards&quot;}"><span><span>Get started</span></span><span></span></a><span>Free for verified students, teachers, and maintainers of popular open source projects.<!-- --> <a href="https://github.com/education" data-analytics-event="{&quot;action&quot;:&quot;learn_more&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;context&quot;:&quot;education_pro_plan&quot;,&quot;location&quot;:&quot;offer_cards&quot;,&quot;label&quot;:&quot;learn_more_link_education_pro_plan_offer_cards&quot;}">Learn more</a></span></p></div><div><h3>Business</h3><p>For teams ready to accelerate their workflows with GitHub Copilot.</p></div><div><h3>Enterprise</h3><p>For organizations seeking a fully customized GitHub Copilot experience.</p></div></div><div role="table" data-testid="Grid-:R13b:"><div><p><span>Compare features</span></p><div role="rowgroup"><div role="row"><p><span>Features</span></p><p><span>Free</span></p><p><span>Pro</span></p><p><span>Business</span></p><p><span>Enterprise</span></p></div><div role="row"><p><span>Pricing</span></p><p><span>$0</span></p><p><span>$10 <span>per month</span></span></p><p><span>$19 <span>per user / month</span></span></p><p><span>$39 <span>per user / month</span></span></p></div></div></div><div><div role="rowgroup"><div role="row"><p><span>Messages and interactions<!-- --> </span></p><div><div role="cell"><p><span>Free<!-- --> <span>plan</span></span><span>Up to 50 per month</span></p><p><span>Up to 50 per month</span></p></div><div role="cell"><p><span>Pro<!-- --> <span>plan</span></span><span>Unlimited</span></p><p><span>Unlimited</span></p></div><div role="cell"><p><span>Business<!-- --> <span>plan</span></span><span>Unlimited</span></p><p><span>Unlimited</span></p></div><div role="cell"><p><span>Enterprise<!-- --> <span>plan</span></span><span>Unlimited</span></p><p><span>Unlimited</span></p></div></div></div><div role="row"><p><span>Context-aware coding support and explanations<!-- --> </span></p></div><div role="row"><p><span>Debugging and security remediation assistance<!-- --> </span></p></div><div role="row"><p><span>Access to knowledge from top open source repositories<!-- --> <sup><a href="#footnote-1" id="footnote-ref-1-1">1</a></sup></span></p></div><div role="row"><p><span>Generate tests, docs, and more with slash commands<!-- --> </span></p></div><div role="row"><p><span>Web search powered by Bing<!-- --> </span></p></div><div role="row"><p><span>Explain failed Actions jobs<!-- --> </span></p></div><div role="row"><p><span>Answers about issues, PRs, discussions, files, commits, etc.<!-- --> <sup><a href="#footnote-1" id="footnote-ref-1-2">1</a></sup></span></p></div><div role="row"><p><span>Multi-file editing in VS Code<!-- --> </span></p></div></div><div role="rowgroup"><p><span>Real-time code suggestions<!-- --> </span></p><div><div role="cell"><p><span>Free<!-- --> <span>plan</span></span><span>Up to 2,000 per month</span></p><p><span>Up to 2,000 per month</span></p></div><div role="cell"><p><span>Pro<!-- --> <span>plan</span></span><span>Unlimited</span></p><p><span>Unlimited</span></p></div><div role="cell"><p><span>Business<!-- --> <span>plan</span></span><span>Unlimited</span></p><p><span>Unlimited</span></p></div><div role="cell"><p><span>Enterprise<!-- --> <span>plan</span></span><span>Unlimited</span></p><p><span>Unlimited</span></p></div></div></div><div role="rowgroup"><div role="row"><p><span>Tailor chat conversations to your private codebase (unlimited repositories indexed)<!-- --> <sup><a href="#footnote-1" id="footnote-ref-1-3">1</a></sup></span></p></div><div role="row"><p><span>Unlimited integrations with GitHub Copilot Extensions<!-- --> </span></p></div><div role="row"><p><span>Build a private extension for internal tooling<!-- --> </span></p></div><div role="row"><p><span>Personalize responses with custom instructions<!-- --> </span></p></div><div role="row"><p><span>Attach knowledge bases to chat for organizational context<!-- --> </span></p><div role="cell"><p><span>Business<!-- --> <span>plan</span></span></p><p><span>Not included</span></p></div></div><div role="row"><p><span>Fine-tuned models for code completion (coming soon as add-on)<!-- --> </span></p><div role="cell"><p><span>Business<!-- --> <span>plan</span></span></p><p><span>Not included</span></p></div></div><div role="row"><p><span>Set coding guidelines for code review<!-- --> </span></p><div role="cell"><p><span>Business<!-- --> <span>plan</span></span></p><p><span>Not included</span></p></div></div></div><div role="rowgroup"><div role="row"><p><span>Inline chat and prompt suggestions<!-- --> </span></p></div><div role="row"><p><span>Slash commands and context variables<!-- --> </span></p></div><div role="row"><p><span>Commit message generation<!-- --> </span></p></div><div role="row"><p><span>Summaries for pull requests, issues, and discussions<!-- --> </span></p></div><div role="row"><p><span>Explanations in Visual Studio‚Äôs Quick Info<!-- --> </span></p></div><div role="row"><p><span>Debug assistant in Visual Studio<!-- --> </span></p></div><div role="row"><p><span>Upgrade assistant for Java in VS Code<!-- --> </span></p></div><div role="row"><p><span>Copilot Workspace in pull requests<!-- --> </span></p></div><div role="row"><p><span>Technical Preview access to Copilot Workspace<!-- --> </span></p></div></div><div role="rowgroup"><p><span>GitHub CLI and Windows Terminal<!-- --> </span></p></div><div role="rowgroup"><div role="row"><p><span>Public code filter with code referencing<!-- --> </span></p></div><div role="row"><p><span>Data excluded from training by default<!-- --> </span></p></div><div role="row"><p><span>Enterprise-grade security<!-- --> </span></p></div><div role="row"><p><span>SAML SSO authentication<!-- --> <sup><a href="#footnote-2" id="footnote-ref-2-1">2</a></sup></span></p></div><div role="row"><p><span>Requires GitHub Enterprise Cloud<!-- --> </span></p><div role="cell"><p><span>Business<!-- --> <span>plan</span></span></p><p><span>Not included</span></p></div></div></div></div></div></section><div data-testid="Grid-:R4b:" id="resources"><header><h2>Get the most out of GitHub Copilot</h2></header></div><div data-testid="Grid-:R5b:" id="faq"><div data-testid="Grid-:Retb:"><p><h3>Frequently asked questions</h3></p></div><div><details><summary><h4>General</h4></summary><section><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_is_github_copilot&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_is_github_copilot_button_null_frequently_asked_questions&quot;}"><h4>What is GitHub Copilot?</h4></summary><div><p>GitHub Copilot transforms the developer experience. Backed by the leaders in AI, Copilot provides contextualized assistance throughout the software development lifecycle, from code completions and chat assistance in the IDE to code explanations and answers to docs in GitHub and more. With Copilot elevating their workflow, developers can focus on more: value, innovation, and happiness.</p><p>GitHub Copilot enables developers to focus more energy on problem solving and collaboration and spend less effort on the mundane and boilerplate. That‚Äôs why developers who use Copilot report up to 75% higher satisfaction with their jobs than those who don‚Äôt and are up to 55% more productive at writing code without sacrifice to quality, which all adds up to engaged developers shipping great software faster.</p><p>GitHub Copilot integrates with leading editors, including Visual Studio Code, Visual Studio, JetBrains IDEs, and Neovim, and, unlike other AI coding assistants, is natively built into GitHub. Growing to millions of individual users and tens of thousands of business customers, Copilot is the world‚Äôs most widely adopted AI developer tool and the competitive advantage developers ask for by name.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;who_is_eligible_to_access_github_copilot_for_free&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;who_is_eligible_to_access_github_copilot_for_free_button_null_frequently_asked_questions&quot;}"><h4>Who is eligible to access GitHub Copilot for free?</h4></summary><div><p>GitHub Copilot Free is a new free pricing tier with limited functionality for individual developers. Users assigned a Copilot Business or Copilot Enterprise seat are not eligible for access. Users with access to Copilot Pro through a paid subscription, trial, or through an existing verified OSS, Student, Faculty, or MVP account may elect to use Free instead.&nbsp;</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_languages_ides_and_platforms_does_github_copilot_support&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_languages_ides_and_platforms_does_github_copilot_support_button_null_frequently_asked_questions&quot;}"><h4>What languages, IDEs, and platforms does GitHub Copilot support?</h4></summary><div><p>GitHub Copilot is trained on all languages that appear in public repositories. For each language, the quality of suggestions you receive may depend on the volume and diversity of training data for that language. For example, JavaScript is well-represented in public repositories and is one of GitHub Copilot‚Äôs best supported languages. Languages with less representation in public repositories may produce fewer or less robust suggestions.</p><p>GitHub Copilot is available as an extension in Visual Studio Code, Visual Studio, Vim, Neovim, the JetBrains suite of IDEs, and Azure Data Studio. Although code completion functionality is available across all these extensions, chat functionality is currently available only in Visual Studio Code, JetBrains and Visual Studio. GitHub Copilot is also supported in terminals through GitHub CLI and as a chat integration in Windows Terminal Canary. With the GitHub Copilot Enterprise plan, GitHub Copilot is natively integrated into GitHub.com. All plans are supported in GitHub Copilot in GitHub Mobile. GitHub Mobile for Copilot Pro and Copilot Business have access to Bing and public repository code search. Copilot Enterprise in GitHub Mobile gives you additional access to your organization's knowledge.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;does_github_copilot_copypaste&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;does_github_copilot_copypaste_button_null_frequently_asked_questions&quot;}"><h4>Does GitHub Copilot ‚Äúcopy/paste‚Äù?</h4></summary><div><p>No, GitHub Copilot generates suggestions using probabilistic determination.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_are_the_differences_between_the_github_copilot_business_github_copilot_enterprise_and_github&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_are_the_differences_between_the_github_copilot_business_github_copilot_enterprise_and_github_button_null_frequently_asked_questions&quot;}"><h4>What are the differences between the GitHub Copilot Business, GitHub Copilot Enterprise, and GitHub Copilot Individual plans?</h4></summary><div><p>GitHub Copilot has multiple offerings for organizations and an offering for individual developers. All the offerings include both code completion and chat assistance. The primary differences between the organization offerings and the individual offering are license management, policy management, and IP indemnity.</p><p>Organizations can choose between GitHub Copilot Business and GitHub Copilot Enterprise. GitHub Copilot Business primarily features GitHub Copilot in the coding environment - that is the IDE, CLI and GitHub Mobile. GitHub Copilot Enterprise includes everything in GitHub Copilot Business. It also&nbsp; adds an additional layer of customization for organizations and integrates into GitHub.com as a chat interface to allow developers to converse with Copilot&nbsp; throughout the platform. GitHub Copilot Enterprise can index an organization‚Äôs codebase for a deeper understanding of the customer‚Äôs knowledge for more tailored suggestions and will offer customers access to fine-tuned custom, private models for code completion.</p><p>GitHub Copilot Individual is designed for individual developers, freelancers, students, educators, and open source maintainers. The plan includes all the features of GitHub Copilot Business except organizational license management, policy management, and IP indemnity.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_data_has_github_copilot_been_trained_on&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_data_has_github_copilot_been_trained_on_button_null_frequently_asked_questions&quot;}"><h4>What data has GitHub Copilot been trained on?</h4></summary><section><p>GitHub Copilot is powered by generative AI models developed by GitHub, OpenAI, and Microsoft. It has been trained on natural language text and source code from publicly available sources, including code in public repositories on GitHub.</p></section></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;which_plan_includes_github_copilot_autofix&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;which_plan_includes_github_copilot_autofix_button_null_frequently_asked_questions&quot;}"><h4>Which plan includes GitHub Copilot Autofix?</h4></summary><section><p>GitHub Copilot Autofix provides contextual explanations and code suggestions to help developers fix vulnerabilities in code, and is included in <a href="https://github.com/enterprise/advanced-security" data-ref="faq-link-V0lDGN0lx3IkSWSvxPUGq" data-analytics-event="{&quot;action&quot;:&quot;github_advanced_security&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;which_plan_includes_github_copilot_autofix&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;github_advanced_security_hyperlink_which_plan_includes_github_copilot_autofix_frequently_asked_questions&quot;}">GitHub Advanced Security</a>.</p></section></details></section></details><details><summary><h4>Plans &amp; Pricing</h4></summary><section><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_are_the_differences_between_the_free_pro_business_and_enterprise_plans&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_are_the_differences_between_the_free_pro_business_and_enterprise_plans_button_null_frequently_asked_questions&quot;}"><h4>What are the differences between the Free, Pro, Business, and Enterprise plans?</h4></summary><div><p>GitHub Copilot has multiple offerings for organizations and an offering for individual developers. All the offerings include both code completion and chat assistance. The primary differences between the organization offerings and the individual offering are license management, policy management, and IP indemnity.</p><p>Organizations can choose between GitHub Copilot Business and GitHub Copilot Enterprise. GitHub Copilot Business primarily features GitHub Copilot in the coding environment - that is the IDE, CLI and GitHub Mobile. GitHub Copilot Enterprise includes everything in GitHub Copilot Business. It also&nbsp; adds an additional layer of customization for organizations and integrates into GitHub.com as a chat interface to allow developers to converse with Copilot&nbsp; throughout the platform. GitHub Copilot Enterprise can index an organization‚Äôs codebase for a deeper understanding of the customer‚Äôs knowledge for more tailored suggestions and will offer customers access to fine-tuned custom, private models for code completion.</p><p>GitHub Copilot Pro is designed for individual developers, freelancers, students, educators, and open source maintainers. The plan includes all the features of GitHub Copilot Business except organizational license management, policy management, and IP indemnity.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;how_can_i_upgrade_my_github_copilot_free_license_to_copilot_pro&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;how_can_i_upgrade_my_github_copilot_free_license_to_copilot_pro_button_null_frequently_asked_questions&quot;}"><h4>How can I upgrade my GitHub Copilot Free license to Copilot Pro?</h4></summary></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_is_included_in_github_copilot_free&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_is_included_in_github_copilot_free_button_null_frequently_asked_questions&quot;}"><h4>What is included in GitHub Copilot Free?</h4></summary><section><p>GitHub Copilot Free users are limited to 2000 completions and 50 chat requests (including Copilot Edits).</p></section></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;which_plan_includes_github_copilot_autofix&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;which_plan_includes_github_copilot_autofix_button_null_frequently_asked_questions&quot;}"><h4>Which plan includes GitHub Copilot Autofix?</h4></summary><section><p>GitHub Copilot Autofix provides contextual explanations and code suggestions to help developers fix vulnerabilities in code, and is included in GitHub Advanced Security and available to all public repositories.</p></section></details></section></details><details><summary><h4>Privacy</h4></summary><section><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_personal_data_does_github_copilot_process&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_personal_data_does_github_copilot_process_button_null_frequently_asked_questions&quot;}"><h4>What personal data does GitHub Copilot process?</h4></summary><div><p>GitHub Copilot processes personal data based on how Copilot is accessed and used: whether via GitHub.com, mobile app, extensions, or one of various IDE extensions, or through features like suggestions for the command line interface (CLI), IDE code completions, or personalized chat on GitHub.com. The types of personal data processed may include:</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;does_github_use_copilot_business_or_enterprise_data_to_train_githubs_model&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;does_github_use_copilot_business_or_enterprise_data_to_train_githubs_model_button_null_frequently_asked_questions&quot;}"><h4>Does GitHub use Copilot Business or Enterprise data to train GitHub‚Äôs model?</h4></summary><section><p>No. GitHub does not use either Copilot Business or Enterprise data to train its models.&nbsp;</p></section></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;how_does_github_use_the_copilot_data&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;how_does_github_use_the_copilot_data_button_null_frequently_asked_questions&quot;}"><h4>How does GitHub use the Copilot data?</h4></summary><div><p>How GitHub uses Copilot data depends on how the user accesses Copilot and for what purpose. Users can access GitHub Copilot through the web, extensions, mobile apps, computer terminal, and various IDEs (Integrated Development Environments). GitHub generally uses personal data to:</p><p>These practices are outlined in GitHub‚Äôs Data Protection Agreement (<a href="https://github.com/customer-terms/github-data-protection-agreement" data-ref="faq-link-7ATrO7EdNUKlJkJ98l7atQ" data-analytics-event="{&quot;action&quot;:&quot;dpa&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;how_does_github_use_the_copilot_data&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;dpa_hyperlink_how_does_github_use_the_copilot_data_frequently_asked_questions&quot;}">DPA)</a>, which details our data handling commitments to our data controller customers.&nbsp;</p><p>GitHub also uses certain personal data with customer authorization under the DPA, for the following purposes:</p><p>For details on GitHub's data processing activities as a controller, particularly for Copilot Pro customers, refer to the <a href="https://docs.github.com/en/site-policy/privacy-policies/github-general-privacy-statement" data-ref="faq-link-7ATrO7EdNUKlJkJ98l7atQ" data-analytics-event="{&quot;action&quot;:&quot;github_privacy_statement&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;how_does_github_use_the_copilot_data&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;github_privacy_statement_hyperlink_how_does_github_use_the_copilot_data_frequently_asked_questions&quot;}">GitHub Privacy Statement</a>.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;how_long_does_github_retain_copilot_data_for_business_and_enterprise_customers&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;how_long_does_github_retain_copilot_data_for_business_and_enterprise_customers_button_null_frequently_asked_questions&quot;}"><h4>How long does GitHub retain Copilot data for Business and Enterprise customers? </h4></summary><div><p>If and for how long GitHub‚Äôs retains Copilot data depends on how a Copilot user accesses Copilot and for what purpose. The default settings for Copilot Business and Enterprise Customers are as follows:&nbsp;</p><p><b>Access through IDE for Chat and Code Completions:</b></p><p><b>All other GitHub Copilot access and use:</b></p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;why_do_some_copilot_features_retain_prompts_and_suggestions&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;why_do_some_copilot_features_retain_prompts_and_suggestions_button_null_frequently_asked_questions&quot;}"><h4>Why do some Copilot features retain prompts and suggestions?</h4></summary><section><p>Retaining prompts and suggestions is necessary for chat on github.com, mobile, and CLI Copilot because those features‚Äô effectiveness depends on using thread history to improve responses. The Copilot model requires access to previous interactions to deliver accurate and relevant suggestions.&nbsp;</p></section></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;does_github_copilot_support_compliance_with_the_gdpr_and_other_data_protection_laws&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;does_github_copilot_support_compliance_with_the_gdpr_and_other_data_protection_laws_button_null_frequently_asked_questions&quot;}"><h4>Does GitHub Copilot support compliance with the GDPR and other data protection laws?</h4></summary><section><p>Yes. GitHub and customers can enter a <a href="https://github.com/customer-terms/github-data-protection-agreement" data-ref="faq-link-4V4FudbOAGbmkegSmhhkDU" data-analytics-event="{&quot;action&quot;:&quot;data_protection_agreement&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;does_github_copilot_support_compliance_with_the_gdpr_and_other_data_protection_laws&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;data_protection_agreement_hyperlink_does_github_copilot_support_compliance_with_the_gdpr_and_other_data_protection_laws_frequently_asked_questions&quot;}">Data Protection Agreement</a> that supports compliance with the GDPR and similar legislation.</p></section></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;does_github_copilot_ever_output_personal_data&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;does_github_copilot_ever_output_personal_data_button_null_frequently_asked_questions&quot;}"><h4>Does GitHub Copilot ever output personal data?</h4></summary><section><p>While we've designed GitHub Copilot with privacy in mind, the expansive definition of personal data under legislation like the EU‚Äôs General Data Protection Regulation (GDPR) means we can't guarantee it will never output such data. The Large Language Model (LLM) powering GitHub Copilot was trained on public code and there were instances in our tests where the tool made suggestions resembling personal data. These suggestions were typically synthesized and not tied to real individuals.&nbsp;</p></section></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;how_does_copilot_allow_users_to_access_alter_or_delete_personal_data&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;how_does_copilot_allow_users_to_access_alter_or_delete_personal_data_button_null_frequently_asked_questions&quot;}"><h4>How does Copilot allow users to access, alter or delete personal data?</h4></summary></details></section></details><details><summary><h4>Responsible AI</h4></summary><section><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_are_the_intellectual_property_considerations_when_using_github_copilot&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_are_the_intellectual_property_considerations_when_using_github_copilot_button_null_frequently_asked_questions&quot;}"><h4>What are the intellectual property considerations when using GitHub Copilot?</h4></summary><div><p>The primary IP considerations for GitHub Copilot relate to copyright. The model that powers Copilot is trained on a broad collection of publicly accessible code, which may include copyrighted code, and Copilot‚Äôs suggestions (in rare instances) may resemble the code its model was trained on. Here‚Äôs some basic information you should know about these considerations:</p><p>Copyright law permits the use of copyrighted works to train AI models:&nbsp; Countries around the world have provisions in their copyright laws that enable machines to learn, understand, extract patterns, and facts from copyrighted materials, including software code. For example, the European Union, Japan, and Singapore, have express provisions permitting machine learning to develop AI models. Other countries including Canada, India, and the United States also permit such training under their fair use/fair dealing provisions. GitHub Copilot‚Äôs AI model was trained with the use of code from GitHub‚Äôs public repositories‚Äîwhich are publicly accessible and within the scope of permissible copyright use.</p><p>What about copyright risk in suggestions? In rare instances (less than 1% based on GitHub‚Äôs research), suggestions from GitHub may match examples of code used to train GitHub‚Äôs AI model. Again, Copilot does not ‚Äúlook up‚Äù or ‚Äúcopy and paste‚Äù code, but is instead using context from a user‚Äôs workspace to synthesize and generate a suggestion.</p><p>Our experience shows that matching suggestions are most likely to occur in two situations: (i) when there is little or no context in the code editor for Copilot‚Äôs model to synthesize, or (ii) when a matching suggestion represents a common approach or method. If a code suggestion matches existing code, there is risk that using that suggestion could trigger claims of copyright infringement, which would depend on the amount and nature of code used, and the context of how the code is used. In many ways, this is the same risk that arises when using any code that a developer does not originate, such as copying code from an online source, or reusing code from a library. That is why responsible organizations and developers recommend that users employ code scanning policies to identify and evaluate potential matching code.</p><p>In Copilot, you can opt whether to allow Copilot to suggest code completions that match publicly available code on GitHub.com. For more information, see "<a href="https://docs-internal-46619-d1aa34.preview.ghdocs.com/en/copilot/configuring-github-copilot/configuring-github-copilot-settings-on-githubcom#enabling-or-disabling-duplication-detection" data-ref="faq-link-R5bKaO3dTeNkfo42vFjRO" data-analytics-event="{&quot;action&quot;:&quot;configuring_github_copilot_settings_on_githubcom&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;what_are_the_intellectual_property_considerations_when_using_github_copilot&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;configuring_github_copilot_settings_on_githubcom_hyperlink_what_are_the_intellectual_property_considerations_when_using_github_copilot_frequently_asked_questions&quot;}">Configuring GitHub Copilot settings on GitHub.com</a>". If you have allowed suggestions that match public code, GitHub Copilot can provide you with details about the matching code when you accept such suggestions. Matching code does not necessarily mean copyright infringement, so it is ultimately up to the user to determine whether to use the suggestion, and what and who to attribute (along with other license compliance) in appropriate circumstances.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;does_github_copilot_include_a_filtering_mechanism_to_mitigate_risk&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;does_github_copilot_include_a_filtering_mechanism_to_mitigate_risk_button_null_frequently_asked_questions&quot;}"><h4>Does GitHub Copilot include a filtering mechanism to mitigate risk?</h4></summary><div><p>Yes, GitHub Copilot does include an optional code referencing filter to detect and suppress certain suggestions that match public code on GitHub.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;does_github_copilot_include_features_to_make_it_easier_for_users_to_identify_potentially_relevant_op&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;does_github_copilot_include_features_to_make_it_easier_for_users_to_identify_potentially_relevant_op_button_null_frequently_asked_questions&quot;}"><h4>Does GitHub Copilot include features to make it easier for users to identify potentially relevant open source licenses for matching suggestions?</h4></summary><section><p>Yes, GitHub Copilot is previewing a <a href="https://github.blog/2023-08-03-introducing-code-referencing-for-github-copilot/" data-ref="faq-link-5ggl5kC4DdHvPRBDPA0rmo" data-analytics-event="{&quot;action&quot;:&quot;code_referencing_feature&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;does_github_copilot_include_features_to_make_it_easier_for_users_to_identify_potentially_relevant_op&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;code_referencing_feature_hyperlink_does_github_copilot_include_features_to_make_it_easier_for_users_to_identify_potentially_relevant_op_frequently_asked_questions&quot;}">code referencing feature</a> as an additional tool to assist users to find and review potentially relevant open source licenses. Code referencing is currently available in Visual Studio Code. This feature searches across public GitHub repositories for code that matches a Copilot suggestion. If there‚Äôs a match, users will find its information displayed in the Copilot console log, including where the match occurred, any applicable licenses, and a deep link to learn more. The deep link will take users to a navigable page on GitHub.com to browse examples of the code match and their repository licenses, and see how many repositories‚Äîincluding ones without licenses‚Äîthat code appears in, as well as links to those repositories. Copilot users can review this information to determine whether the applicable suggestions are suitable for use, and whether additional measures may be necessary to use them.</p></section></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;who_owns_the_suggestions_provided_by_github_copilot&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;who_owns_the_suggestions_provided_by_github_copilot_button_null_frequently_asked_questions&quot;}"><h4>Who owns the suggestions provided by GitHub Copilot?</h4></summary><div><p>We don‚Äôt determine whether a suggestion is capable of being owned, but we are clear that GitHub does not claim ownership of a suggestion. Whether a suggestion generated by an AI model can be owned depends on many factors (e.g. the intellectual property law in the relevant country, the length of the suggestion, the extent that suggestion is considered ‚Äòfunctional‚Äô instead of expressive, etc).</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;can_github_copilot_introduce_insecure_code_in_its_suggestions&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;can_github_copilot_introduce_insecure_code_in_its_suggestions_button_null_frequently_asked_questions&quot;}"><h4>Can GitHub Copilot introduce insecure code in its suggestions?</h4></summary><section><p>Public code may contain insecure coding patterns, bugs, or references to outdated APIs or                        idioms. When GitHub Copilot synthesizes code suggestions based on this data, it can also                        synthesize code that contains these undesirable patterns. Copilot has filters in place that                        either block or notify users of insecure code patterns that are detected in Copilot suggestions. These filters target the most common vulnerable coding patterns, including <a href="https://cwe.mitre.org/data/definitions/798.html" data-ref="faq-link-3RykKrpwILttFe5QahIEyo" data-analytics-event="{&quot;action&quot;:&quot;hardcoded_credentials&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;can_github_copilot_introduce_insecure_code_in_its_suggestions&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;hardcoded_credentials_hyperlink_can_github_copilot_introduce_insecure_code_in_its_suggestions_frequently_asked_questions&quot;}">hardcoded credentials</a>, <a href="https://cwe.mitre.org/data/definitions/89.html" data-ref="faq-link-3RykKrpwILttFe5QahIEyo" data-analytics-event="{&quot;action&quot;:&quot;sql_injections&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;can_github_copilot_introduce_insecure_code_in_its_suggestions&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;sql_injections_hyperlink_can_github_copilot_introduce_insecure_code_in_its_suggestions_frequently_asked_questions&quot;}">SQL injections</a>, and <a href="https://cwe.mitre.org/data/definitions/22.html" data-ref="faq-link-3RykKrpwILttFe5QahIEyo" data-analytics-event="{&quot;action&quot;:&quot;path_injections&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;can_github_copilot_introduce_insecure_code_in_its_suggestions&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;path_injections_hyperlink_can_github_copilot_introduce_insecure_code_in_its_suggestions_frequently_asked_questions&quot;}">path injections</a>. Additionally, in recent years we‚Äôve provided tools such as GitHub Advanced Security, GitHub Actions, Dependabot, and CodeQL to open source projects to help improve code quality. Of course, you should always use GitHub Copilot together with good testing and code review practices and security tools, as well as your own judgment.</p></section></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;is_github_copilot_intended_to_fully_automate_code_generation_and_replace_developers&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;is_github_copilot_intended_to_fully_automate_code_generation_and_replace_developers_button_null_frequently_asked_questions&quot;}"><h4>Is GitHub Copilot intended to fully automate code generation and replace developers?</h4></summary><div><p>No. Copilot is a tool intended to make developers more efficient. It‚Äôs not intended to replace developers, who should continue to apply the same sorts of safeguards and diligence they would apply with regard to any third-party code of unknown origin.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;can_github_copilot_users_simply_use_suggestions_without_concern&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;can_github_copilot_users_simply_use_suggestions_without_concern_button_null_frequently_asked_questions&quot;}"><h4>Can GitHub Copilot users simply use suggestions without concern?</h4></summary><div><p>Not necessarily. GitHub Copilot users should align their use of Copilot with their respective                        risk tolerances.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;does_github_copilot_support_accessibility_features&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;does_github_copilot_support_accessibility_features_button_null_frequently_asked_questions&quot;}"><h4>Does GitHub Copilot support accessibility features?</h4></summary><section><p>We are conducting internal testing of GitHub Copilot‚Äôs ease of use by developers with                        disabilities and working to ensure that GitHub Copilot is accessible to all developers. Please feel free to share your feedback on GitHub Copilot accessibility in our <a href="https://github.com/github-community/community/discussions/categories/copilot" data-ref="faq-link-1Zr8bsvupmT6tjw30IMWfZ" data-analytics-event="{&quot;action&quot;:&quot;feedback_forum&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;does_github_copilot_support_accessibility_features&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;feedback_forum_hyperlink_does_github_copilot_support_accessibility_features_frequently_asked_questions&quot;}">feedback forum</a>.</p></section></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;does_github_copilot_produce_offensive_outputs&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;does_github_copilot_produce_offensive_outputs_button_null_frequently_asked_questions&quot;}"><h4>Does GitHub Copilot produce offensive outputs?</h4></summary><section><p>GitHub Copilot includes filters to block offensive language in the prompts and to avoid                        synthesizing suggestions in sensitive contexts. We continue to work on improving the filter                        system to more intelligently detect and remove offensive outputs. If you see offensive outputs, please report them directly to <a href="mailto:copilot-safety@github.com" data-ref="faq-link-1YzbJgmx3g5KgSqi9yJpDg" data-analytics-event="{&quot;action&quot;:&quot;copilotsafetygithubcom&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;does_github_copilot_produce_offensive_outputs&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;copilotsafetygithubcom_hyperlink_does_github_copilot_produce_offensive_outputs_frequently_asked_questions&quot;}">copilot-safety@github.com</a> so that we can improve our safeguards. GitHub takes this challenge very seriously and we are committed to addressing it.</p></section></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;will_github_copilot_work_as_well_using_languages_other_than_english&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;will_github_copilot_work_as_well_using_languages_other_than_english_button_null_frequently_asked_questions&quot;}"><h4>Will GitHub Copilot work as well using languages other than English?</h4></summary><section><p>Given public sources are predominantly in English, GitHub Copilot will likely work less well in scenarios where natural language prompts provided by the developer are not in English and/or are grammatically incorrect. Therefore, non-English speakers might experience a lower quality of service.</p></section></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_data_has_github_copilot_been_trained_on&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_data_has_github_copilot_been_trained_on_button_null_frequently_asked_questions&quot;}"><h4>What data has GitHub Copilot been trained on?</h4></summary><div><p>GitHub Copilot is powered by generative AI models developed by GitHub, OpenAI, and Microsoft. It has been trained on natural language text and source code from publicly available sources, including code in public repositories on GitHub.</p><ol><li><span><p>Data from June 2023. Additional research can be found <a href="https://github.blog/news-insights/research/the-economic-impact-of-the-ai-powered-developer-lifecycle-and-lessons-from-github-copilot/" data-ref="faq-link-8Ujk5HqRMmgOEHnXmOfpu" data-analytics-event="{&quot;action&quot;:&quot;here&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;what_data_has_github_copilot_been_trained_on&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;here_hyperlink_what_data_has_github_copilot_been_trained_on_frequently_asked_questions&quot;}">here</a>.</p></span></li><li><span><p>Feature in public beta for Copilot Pro and Business plans. Requires use of repositories, issues, discussions, Actions, and other features of GitHub.</p></span></li><li><span><p>Authentication with SAML single sign-on (SSO) available for organizations using GitHub Enterprise Cloud.</p></span></li></ol></div></details></section></details></div><div role="tabpanel" id=":Rtb:-panel-0" aria-labelledby=":Rtb:-tab-0" data-testid="Grid-:Rutb:"><h3 data-testid="FAQGroup-tab-panel-heading-1">General</h3><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_is_github_copilot&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_is_github_copilot_button_null_frequently_asked_questions&quot;}"><h4>What is GitHub Copilot?</h4></summary><div><p>GitHub Copilot transforms the developer experience. Backed by the leaders in AI, Copilot provides contextualized assistance throughout the software development lifecycle, from code completions and chat assistance in the IDE to code explanations and answers to docs in GitHub and more. With Copilot elevating their workflow, developers can focus on more: value, innovation, and happiness.</p><p>GitHub Copilot enables developers to focus more energy on problem solving and collaboration and spend less effort on the mundane and boilerplate. That‚Äôs why developers who use Copilot report up to 75% higher satisfaction with their jobs than those who don‚Äôt and are up to 55% more productive at writing code without sacrifice to quality, which all adds up to engaged developers shipping great software faster.</p><p>GitHub Copilot integrates with leading editors, including Visual Studio Code, Visual Studio, JetBrains IDEs, and Neovim, and, unlike other AI coding assistants, is natively built into GitHub. Growing to millions of individual users and tens of thousands of business customers, Copilot is the world‚Äôs most widely adopted AI developer tool and the competitive advantage developers ask for by name.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;who_is_eligible_to_access_github_copilot_for_free&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;who_is_eligible_to_access_github_copilot_for_free_button_null_frequently_asked_questions&quot;}"><h4>Who is eligible to access GitHub Copilot for free?</h4></summary><div><p>GitHub Copilot Free is a new free pricing tier with limited functionality for individual developers. Users assigned a Copilot Business or Copilot Enterprise seat are not eligible for access. Users with access to Copilot Pro through a paid subscription, trial, or through an existing verified OSS, Student, Faculty, or MVP account may elect to use Free instead.&nbsp;</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_languages_ides_and_platforms_does_github_copilot_support&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_languages_ides_and_platforms_does_github_copilot_support_button_null_frequently_asked_questions&quot;}"><h4>What languages, IDEs, and platforms does GitHub Copilot support?</h4></summary><div><p>GitHub Copilot is trained on all languages that appear in public repositories. For each language, the quality of suggestions you receive may depend on the volume and diversity of training data for that language. For example, JavaScript is well-represented in public repositories and is one of GitHub Copilot‚Äôs best supported languages. Languages with less representation in public repositories may produce fewer or less robust suggestions.</p><p>GitHub Copilot is available as an extension in Visual Studio Code, Visual Studio, Vim, Neovim, the JetBrains suite of IDEs, and Azure Data Studio. Although code completion functionality is available across all these extensions, chat functionality is currently available only in Visual Studio Code, JetBrains and Visual Studio. GitHub Copilot is also supported in terminals through GitHub CLI and as a chat integration in Windows Terminal Canary. With the GitHub Copilot Enterprise plan, GitHub Copilot is natively integrated into GitHub.com. All plans are supported in GitHub Copilot in GitHub Mobile. GitHub Mobile for Copilot Pro and Copilot Business have access to Bing and public repository code search. Copilot Enterprise in GitHub Mobile gives you additional access to your organization's knowledge.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;does_github_copilot_copypaste&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;does_github_copilot_copypaste_button_null_frequently_asked_questions&quot;}"><h4>Does GitHub Copilot ‚Äúcopy/paste‚Äù?</h4></summary><div><p>No, GitHub Copilot generates suggestions using probabilistic determination.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_are_the_differences_between_the_github_copilot_business_github_copilot_enterprise_and_github&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_are_the_differences_between_the_github_copilot_business_github_copilot_enterprise_and_github_button_null_frequently_asked_questions&quot;}"><h4>What are the differences between the GitHub Copilot Business, GitHub Copilot Enterprise, and GitHub Copilot Individual plans?</h4></summary><div><p>GitHub Copilot has multiple offerings for organizations and an offering for individual developers. All the offerings include both code completion and chat assistance. The primary differences between the organization offerings and the individual offering are license management, policy management, and IP indemnity.</p><p>Organizations can choose between GitHub Copilot Business and GitHub Copilot Enterprise. GitHub Copilot Business primarily features GitHub Copilot in the coding environment - that is the IDE, CLI and GitHub Mobile. GitHub Copilot Enterprise includes everything in GitHub Copilot Business. It also&nbsp; adds an additional layer of customization for organizations and integrates into GitHub.com as a chat interface to allow developers to converse with Copilot&nbsp; throughout the platform. GitHub Copilot Enterprise can index an organization‚Äôs codebase for a deeper understanding of the customer‚Äôs knowledge for more tailored suggestions and will offer customers access to fine-tuned custom, private models for code completion.</p><p>GitHub Copilot Individual is designed for individual developers, freelancers, students, educators, and open source maintainers. The plan includes all the features of GitHub Copilot Business except organizational license management, policy management, and IP indemnity.</p></div></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;what_data_has_github_copilot_been_trained_on&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;what_data_has_github_copilot_been_trained_on_button_null_frequently_asked_questions&quot;}"><h4>What data has GitHub Copilot been trained on?</h4></summary><section><p>GitHub Copilot is powered by generative AI models developed by GitHub, OpenAI, and Microsoft. It has been trained on natural language text and source code from publicly available sources, including code in public repositories on GitHub.</p></section></details><details><summary data-analytics-event="{&quot;action&quot;:&quot;which_plan_includes_github_copilot_autofix&quot;,&quot;tag&quot;:&quot;button&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;which_plan_includes_github_copilot_autofix_button_null_frequently_asked_questions&quot;}"><h4>Which plan includes GitHub Copilot Autofix?</h4></summary><section><p>GitHub Copilot Autofix provides contextual explanations and code suggestions to help developers fix vulnerabilities in code, and is included in <a href="https://github.com/enterprise/advanced-security" data-ref="faq-link-V0lDGN0lx3IkSWSvxPUGq" data-analytics-event="{&quot;action&quot;:&quot;github_advanced_security&quot;,&quot;tag&quot;:&quot;hyperlink&quot;,&quot;context&quot;:&quot;which_plan_includes_github_copilot_autofix&quot;,&quot;location&quot;:&quot;frequently_asked_questions&quot;,&quot;label&quot;:&quot;github_advanced_security_hyperlink_which_plan_includes_github_copilot_autofix_frequently_asked_questions&quot;}">GitHub Advanced Security</a>.</p></section></details></div></div><div data-testid="Grid-:R6b:" id="footnotes"><ol><li id="footnote-1"><p>Feature in public beta for Copilot Pro and Business plans. Requires use of repositories, issues, discussions, Actions, and other features of GitHub.<a href="#footnote-ref-2-1" aria-label="Back to content"></a></p></li><li id="footnote-2"><p><a href="https://docs.github.com/en/enterprise-cloud@latest/authentication/authenticating-with-saml-single-sign-on/about-authentication-with-saml-single-sign-on" data-analytics-event="{&quot;action&quot;:&quot;saml_sso&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;context&quot;:&quot;footnote&quot;,&quot;location&quot;:&quot;features_table&quot;,&quot;label&quot;:&quot;saml_sso_link_footnote_features_table&quot;}">Authentication with SAML single sign-on (SSO)</a> <!-- -->available for organizations using GitHub Enterprise Cloud.<a href="#footnote-ref-2-1" aria-label="Back to content"></a></p></li></ol></div></div>
</react-app>


  </main>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[US could ban TP-Link routers over hacking fears: report (142 pts)]]></title>
            <link>https://nypost.com/2024/12/18/business/us-could-ban-chinese-made-tp-link-routers-over-hacking-fears-report/</link>
            <guid>42451130</guid>
            <pubDate>Wed, 18 Dec 2024 15:19:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nypost.com/2024/12/18/business/us-could-ban-chinese-made-tp-link-routers-over-hacking-fears-report/">https://nypost.com/2024/12/18/business/us-could-ban-chinese-made-tp-link-routers-over-hacking-fears-report/</a>, See on <a href="https://news.ycombinator.com/item?id=42451130">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
							


<p>The US government is weighing a ban on a popular brand of Chinese-made home internet routers over fears that their links to<a href="https://nypost.com/2024/10/25/us-news/chinese-hackers-tried-to-break-into-donald-trump-and-jd-vances-cell-phones/"> cyberattacks pose a national security risk</a>, according to a report.</p>



<p>TP-Link, <a href="https://nypost.com/2023/11/27/lifestyle/this-quick-fix-will-make-a-wi-fi-router-give-your-device-vip-treatment/">the manufacturer of high-speed cable modems</a>, routers,<a href="https://nypost.com/article/best-wifi-extenders/"> range extenders</a> and smart home devices that has grabbed a 65% market share in the United States, is the subject of several investigations being overseen by a number of federal agencies, <a href="https://www.wsj.com/politics/national-security/us-ban-china-router-tp-link-systems-7d7507e6?mod=e2tw" target="_blank" rel="noopener">according to the Wall Street Journal.</a></p>



<p>The Departments of Commerce, Defense and Justice have all opened probes into the company, people familiar with the matter told the Journal.</p>



<figure><div><p><a href="#" aria-controls="nyp-slideshow-modal" data-slideshow-modal="trigger" title="Open a slideshow of all 3 article images." aria-label="Open a slideshow of all 3 article images." data-slideshow-slide-number="1" data-slideshow-slides-total="3"><img decoding="async" fetchpriority="high" width="885" height="590" src="https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?w=1024" alt="Chinese workers are seen above at a factory run by TP-Link in Shenzhen in March 2020." srcset="https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?quality=75&amp;strip=all 3000w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=300,200&amp;quality=75&amp;strip=all 300w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=768,512&amp;quality=75&amp;strip=all 768w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=1024,683&amp;quality=75&amp;strip=all 1024w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=1536,1024&amp;quality=75&amp;strip=all 1536w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=2048,1365&amp;quality=75&amp;strip=all 2048w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=878,585&amp;quality=75&amp;strip=all 878w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=744,496&amp;quality=75&amp;strip=all 744w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=720,480&amp;quality=75&amp;strip=all 720w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=576,384&amp;quality=75&amp;strip=all 576w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=457,305&amp;quality=75&amp;strip=all 457w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=440,293&amp;quality=75&amp;strip=all 440w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=424,282&amp;quality=75&amp;strip=all 424w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=389,260&amp;quality=75&amp;strip=all 389w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=360,240&amp;quality=75&amp;strip=all 360w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=340,227&amp;quality=75&amp;strip=all 340w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=320,213&amp;quality=75&amp;strip=all 320w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=314,209&amp;quality=75&amp;strip=all 314w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=306,204&amp;quality=75&amp;strip=all 306w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=280,187&amp;quality=75&amp;strip=all 280w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=260,174&amp;quality=75&amp;strip=all 260w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=246,164&amp;quality=75&amp;strip=all 246w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=234,156&amp;quality=75&amp;strip=all 234w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=195,130&amp;quality=75&amp;strip=all 195w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=180,120&amp;quality=75&amp;strip=all 180w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=171,114&amp;quality=75&amp;strip=all 171w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=160,107&amp;quality=75&amp;strip=all 160w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=144,96&amp;quality=75&amp;strip=all 144w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=107,71&amp;quality=75&amp;strip=all 107w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=93,62&amp;quality=75&amp;strip=all 93w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=84,56&amp;quality=75&amp;strip=all 84w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=105,70&amp;quality=75&amp;strip=all 105w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=200,133&amp;quality=75&amp;strip=all 200w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=231,154&amp;quality=75&amp;strip=all 231w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=322,215&amp;quality=75&amp;strip=all 322w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=600,400&amp;quality=75&amp;strip=all 600w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=662,441&amp;quality=75&amp;strip=all 662w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=90,60&amp;quality=75&amp;strip=all 90w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=87,58&amp;quality=75&amp;strip=all 87w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=150,100&amp;quality=75&amp;strip=all 150w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551908.jpg?resize=50,33&amp;quality=75&amp;strip=all 50w" sizes="(max-width: 1024px) 100vw, 1024px"></a></p></div><figcaption>Chinese workers at a factory run by TP-Link in Shenzhen in March 2020. <span>ZUMAPRESS.com</span></figcaption></figure>



<p>A ban on sales of TP-Link products could come sometime next year ‚Äî after President-elect Donald Trump takes office, the Journal reported.</p>



<p>A division of the Commerce Department has even gone so far as to issue a subpoena to TP-Link, according to the report.</p>



<p>TP-Link is the top choice on Amazon, and powers web communications for the Defense Department and other federal agencies, according to the report. </p>


	



<p>The company has won market dominance partly through lower prices, as its routers are cheaper than competitors‚Äô ‚Äî often by more than half, according to market data. </p>



<p>Concerns over Chinese-made routers came to the fore in October when Microsoft published a cybersecurity report that found that a network of hackers uses compromised devices manufactured by TP-Link.</p>



<p>The report alleged that Chinese-based cybercriminals used routers made by TP-Link to launch ransomware and other cyberattacks.</p>



<figure><div><p><a href="#" aria-controls="nyp-slideshow-modal" data-slideshow-modal="trigger" title="Open a slideshow of all 3 article images." aria-label="Open a slideshow of all 3 article images." data-slideshow-slide-number="2" data-slideshow-slides-total="3"><img decoding="async" loading="lazy" width="1024" height="576" src="https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?w=1024" alt="TP-Link, which is the maker of popular routers and modems used for home and office purposes, is under investigation by the federal government, according to a report." srcset="https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?quality=75&amp;strip=all 4032w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=300,169&amp;quality=75&amp;strip=all 300w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=768,432&amp;quality=75&amp;strip=all 768w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=1024,576&amp;quality=75&amp;strip=all 1024w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=1536,864&amp;quality=75&amp;strip=all 1536w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=2048,1152&amp;quality=75&amp;strip=all 2048w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=878,494&amp;quality=75&amp;strip=all 878w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=744,419&amp;quality=75&amp;strip=all 744w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=576,324&amp;quality=75&amp;strip=all 576w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=440,248&amp;quality=75&amp;strip=all 440w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=424,239&amp;quality=75&amp;strip=all 424w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=180,101&amp;quality=75&amp;strip=all 180w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=107,60&amp;quality=75&amp;strip=all 107w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=124,70&amp;quality=75&amp;strip=all 124w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=200,113&amp;quality=75&amp;strip=all 200w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=231,130&amp;quality=75&amp;strip=all 231w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=322,181&amp;quality=75&amp;strip=all 322w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=664,374&amp;quality=75&amp;strip=all 664w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=87,49&amp;quality=75&amp;strip=all 87w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=234,132&amp;quality=75&amp;strip=all 234w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=150,84&amp;quality=75&amp;strip=all 150w, https://nypost.com/wp-content/uploads/sites/2/2024/12/95551910.jpg?resize=50,28&amp;quality=75&amp;strip=all 50w" sizes="(max-width: 1024px) 100vw, 1024px"></a></p></div><figcaption>TP-Link, which is the maker of popular routers and modems used for home and office purposes, is under investigation by the federal government, according to a report. <span>KT ‚Äì stock.adobe.com</span></figcaption></figure>



<p>US government investigators believe that TP-Link routinely fails to address vulnerabilities in its products that are shipped to customers who use the routers for both home and business purposes, according to the Journal.</p>



<p>Hackers are then able to exploit the vulnerabilities to carry out ransomware attacks and other cybercrimes, it has been alleged.</p>



<p>When cybersecurity experts point out the flaws in TP-Link routers, the company declines to engage with them, according to the Journal.</p>



<figure><div><p><a href="#" aria-controls="nyp-slideshow-modal" data-slideshow-modal="trigger" title="Open a slideshow of all 3 article images." aria-label="Open a slideshow of all 3 article images." data-slideshow-slide-number="3" data-slideshow-slides-total="3"><img decoding="async" loading="lazy" width="885" height="590" src="https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?w=1024" alt="US investigators suspect that TP-Link has failed to address cybersecurity vulnerabilities in their products." srcset="https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?quality=75&amp;strip=all 3000w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=300,200&amp;quality=75&amp;strip=all 300w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=768,512&amp;quality=75&amp;strip=all 768w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=1024,683&amp;quality=75&amp;strip=all 1024w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=1536,1024&amp;quality=75&amp;strip=all 1536w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=2048,1365&amp;quality=75&amp;strip=all 2048w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=878,585&amp;quality=75&amp;strip=all 878w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=744,496&amp;quality=75&amp;strip=all 744w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=720,480&amp;quality=75&amp;strip=all 720w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=576,384&amp;quality=75&amp;strip=all 576w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=457,305&amp;quality=75&amp;strip=all 457w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=440,293&amp;quality=75&amp;strip=all 440w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=424,282&amp;quality=75&amp;strip=all 424w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=389,260&amp;quality=75&amp;strip=all 389w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=360,240&amp;quality=75&amp;strip=all 360w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=340,227&amp;quality=75&amp;strip=all 340w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=320,213&amp;quality=75&amp;strip=all 320w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=314,209&amp;quality=75&amp;strip=all 314w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=306,204&amp;quality=75&amp;strip=all 306w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=280,187&amp;quality=75&amp;strip=all 280w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=260,174&amp;quality=75&amp;strip=all 260w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=246,164&amp;quality=75&amp;strip=all 246w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=234,156&amp;quality=75&amp;strip=all 234w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=195,130&amp;quality=75&amp;strip=all 195w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=180,120&amp;quality=75&amp;strip=all 180w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=171,114&amp;quality=75&amp;strip=all 171w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=160,107&amp;quality=75&amp;strip=all 160w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=144,96&amp;quality=75&amp;strip=all 144w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=107,71&amp;quality=75&amp;strip=all 107w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=93,62&amp;quality=75&amp;strip=all 93w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=84,56&amp;quality=75&amp;strip=all 84w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=105,70&amp;quality=75&amp;strip=all 105w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=200,133&amp;quality=75&amp;strip=all 200w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=231,154&amp;quality=75&amp;strip=all 231w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=322,215&amp;quality=75&amp;strip=all 322w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=600,400&amp;quality=75&amp;strip=all 600w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=662,441&amp;quality=75&amp;strip=all 662w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=90,60&amp;quality=75&amp;strip=all 90w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=87,58&amp;quality=75&amp;strip=all 87w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=150,100&amp;quality=75&amp;strip=all 150w, https://nypost.com/wp-content/uploads/sites/2/2024/12/2020-shenzhen-seen-97-percent-95551907.jpg?resize=50,33&amp;quality=75&amp;strip=all 50w" sizes="(max-width: 1024px) 100vw, 1024px"></a></p></div><figcaption>US investigators suspect that TP-Link has failed to address cybersecurity vulnerabilities in its products. <span>ZUMAPRESS.com</span></figcaption></figure>



<p>TP-Link has its headquarters in Shenzhen, China, while maintaining a legal office based in California.</p>



<p>‚ÄúWe welcome any opportunities to engage with the US government to demonstrate that our security practices are fully in line with industry security standards, and to demonstrate our ongoing commitment to the US market, US consumers, and addressing US national security risks,‚Äù an office spokeswoman told the Journal.</p>



<p>The Post has sought comment from the TP-Link office.</p>



<p>The Biden administration‚Äôs lingering concerns over Chinese-made technology and the potential threat it poses to American interests have fueled efforts to restrict imports from the mainland.</p>



<p>The federal government is set to initiate a trade investigation into Chinese semiconductors in the coming days ‚Äî a probe that could result in tariffs or other measures on older-model chips and the products containing them, <a href="https://www.bloomberg.com/news/articles/2024-12-17/biden-to-announce-chinese-semiconductor-probe-in-coming-days" target="_blank" rel="noopener">people familiar with the matter told Bloomberg News.</a></p>



<p>In the last two years, the administration has restricted exports of advanced semiconductors made by American and allied technology to China.</p>







<p>China responded by manufacturing older, cheaper semiconductors ‚Äî prompting worry that they will flood the global market with inexpensive chips that will undercut US-based and Western competitors, according to Bloomberg News.</p>



<p>In May, the Biden administration announced it will boost tariffs on Chinese-made legacy chips from the current 25% rate to 50% by next year.</p>



<p>An embassy spokesperson told the Journal that the US was using national security as a pretext to ‚Äúsuppress Chinese companies‚Äù and that Beijing would ‚Äúresolutely defend‚Äù the interests of Chinese firms.</p>
						</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cultural Evolution of Cooperation Among LLM Agents (178 pts)]]></title>
            <link>https://arxiv.org/abs/2412.10270</link>
            <guid>42450950</guid>
            <pubDate>Wed, 18 Dec 2024 15:00:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2412.10270">https://arxiv.org/abs/2412.10270</a>, See on <a href="https://news.ycombinator.com/item?id=42450950">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2412.10270">View PDF</a>
    <a href="https://arxiv.org/html/2412.10270v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>Large language models (LLMs) provide a compelling foundation for building generally-capable AI agents. These agents may soon be deployed at scale in the real world, representing the interests of individual humans (e.g., AI assistants) or groups of humans (e.g., AI-accelerated corporations). At present, relatively little is known about the dynamics of multiple LLM agents interacting over many generations of iterative deployment. In this paper, we examine whether a "society" of LLM agents can learn mutually beneficial social norms in the face of incentives to defect, a distinctive feature of human sociality that is arguably crucial to the success of civilization. In particular, we study the evolution of indirect reciprocity across generations of LLM agents playing a classic iterated Donor Game in which agents can observe the recent behavior of their peers. We find that the evolution of cooperation differs markedly across base models, with societies of Claude 3.5 Sonnet agents achieving significantly higher average scores than Gemini 1.5 Flash, which, in turn, outperforms GPT-4o. Further, Claude 3.5 Sonnet can make use of an additional mechanism for costly punishment to achieve yet higher scores, while Gemini 1.5 Flash and GPT-4o fail to do so. For each model class, we also observe variation in emergent behavior across random seeds, suggesting an understudied sensitive dependence on initial conditions. We suggest that our evaluation regime could inspire an inexpensive and informative new class of LLM benchmarks, focussed on the implications of LLM agent deployment for the cooperative infrastructure of society.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Edward Hughes [<a href="https://arxiv.org/show-email/857833b1/2412.10270" rel="nofollow">view email</a>]      <br>    <strong>[v1]</strong>
        Fri, 13 Dec 2024 16:45:49 UTC (1,544 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Updates to H-1B (169 pts)]]></title>
            <link>https://www.uscis.gov/newsroom/news-releases/dhs-strengthens-h-1b-program-allowing-us-employers-to-more-quickly-fill-critical-jobs</link>
            <guid>42450413</guid>
            <pubDate>Wed, 18 Dec 2024 13:54:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.uscis.gov/newsroom/news-releases/dhs-strengthens-h-1b-program-allowing-us-employers-to-more-quickly-fill-critical-jobs">https://www.uscis.gov/newsroom/news-releases/dhs-strengthens-h-1b-program-allowing-us-employers-to-more-quickly-fill-critical-jobs</a>, See on <a href="https://news.ycombinator.com/item?id=42450413">Hacker News</a></p>
Couldn't get https://www.uscis.gov/newsroom/news-releases/dhs-strengthens-h-1b-program-allowing-us-employers-to-more-quickly-fill-critical-jobs: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Jaguar Land Rover electric car whistleblower sacked (112 pts)]]></title>
            <link>https://www.bbc.com/news/articles/c20nr3zdppjo</link>
            <guid>42450080</guid>
            <pubDate>Wed, 18 Dec 2024 12:58:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bbc.com/news/articles/c20nr3zdppjo">https://www.bbc.com/news/articles/c20nr3zdppjo</a>, See on <a href="https://news.ycombinator.com/item?id=42450080">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><p data-component="headline-block"><h2>Jaguar Land Rover electric car whistleblower sacked<!-- --></h2></p><figure><div data-component="image-block"><p><img src="https://www.bbc.com/bbcx/grey-placeholder.png"><img sizes="(min-width: 1280px) 50vw, (min-width: 1008px) 66vw, 96vw" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/77ef/live/f664fbe0-bd19-11ef-a0f2-fd81ae5962f4.jpg.webp 240w,https://ichef.bbci.co.uk/news/320/cpsprodpb/77ef/live/f664fbe0-bd19-11ef-a0f2-fd81ae5962f4.jpg.webp 320w,https://ichef.bbci.co.uk/news/480/cpsprodpb/77ef/live/f664fbe0-bd19-11ef-a0f2-fd81ae5962f4.jpg.webp 480w,https://ichef.bbci.co.uk/news/640/cpsprodpb/77ef/live/f664fbe0-bd19-11ef-a0f2-fd81ae5962f4.jpg.webp 640w,https://ichef.bbci.co.uk/news/800/cpsprodpb/77ef/live/f664fbe0-bd19-11ef-a0f2-fd81ae5962f4.jpg.webp 800w,https://ichef.bbci.co.uk/news/1024/cpsprodpb/77ef/live/f664fbe0-bd19-11ef-a0f2-fd81ae5962f4.jpg.webp 1024w,https://ichef.bbci.co.uk/news/1536/cpsprodpb/77ef/live/f664fbe0-bd19-11ef-a0f2-fd81ae5962f4.jpg.webp 1536w" src="https://ichef.bbci.co.uk/news/480/cpsprodpb/77ef/live/f664fbe0-bd19-11ef-a0f2-fd81ae5962f4.jpg.webp" alt="BBC A man in a white shirt and black suit jacket sitting in a darkened room with the blind drawn. He has dark short hair and a dark beard."><span>BBC</span></p></div><p data-component="caption-block"><figcaption>Mechanical engineer Hazar Denli says he was sacked after raising safety concerns<!-- --></figcaption></p></figure><div data-component="text-block"><p>The BBC has seen evidence the multinational corporation that owns Jaguar Land Rover (JLR) arranged for a whistleblower to be sacked for raising concerns about the safety of electric cars it designed.<!-- --></p><p>Confidential emails between executives at Tata Group reveal they retaliated against mechanical engineer Hazar Denli for posting concerns on Reddit that lives were being put at risk. He was then blacklisted.<!-- --></p><p>US authorities are now investigating an earlier model of the same car after 28 reports of safety defects and a crash in which a family-of-four were killed.<!-- --></p><p>In response to a detailed right of reply letter from the BBC, both JLR and Tata Group declined to comment.<!-- --></p></div><div data-component="text-block"><p>Mr Denli, from Milton Keynes, first raised concerns internally while working at a different division of Tata Group, its global engineering consultancy Tata Technologies.<!-- --></p><p>He told the BBC that in test-driving prototypes, designed by Tata Technologies for Vietnamese car maker Vinfast, he identified improperly designed components in the car's chassis, including its suspension system. <!-- --></p><p>At low mileages, some of them were snapping off, he said.<!-- --></p><p>That created a risk that under stress, such as hitting a pothole at speed, the wheels could become misaligned, causing the car to veer to the left or right without prompting, and the driver could lose control, Mr Denli added.<!-- --></p><p>"We saw, for example, the front strut-to-knuckle connection was loosening, which could be extremely dangerous," he said. "It could cause a loosening of the entire structure that could cause wheels to come off.<!-- --></p><p>"In a crash scenario, it could be completely unsafe. It could cause the vehicle to lose control."<!-- --></p></div><figure><div data-component="image-block"><p><img src="https://www.bbc.com/bbcx/grey-placeholder.png"><img sizes="(min-width: 1280px) 50vw, (min-width: 1008px) 66vw, 96vw" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/1a18/live/5b27b8a0-bbd6-11ef-96a6-9d05544d8e20.png.webp 240w,https://ichef.bbci.co.uk/news/320/cpsprodpb/1a18/live/5b27b8a0-bbd6-11ef-96a6-9d05544d8e20.png.webp 320w,https://ichef.bbci.co.uk/news/480/cpsprodpb/1a18/live/5b27b8a0-bbd6-11ef-96a6-9d05544d8e20.png.webp 480w,https://ichef.bbci.co.uk/news/640/cpsprodpb/1a18/live/5b27b8a0-bbd6-11ef-96a6-9d05544d8e20.png.webp 640w,https://ichef.bbci.co.uk/news/800/cpsprodpb/1a18/live/5b27b8a0-bbd6-11ef-96a6-9d05544d8e20.png.webp 800w,https://ichef.bbci.co.uk/news/1024/cpsprodpb/1a18/live/5b27b8a0-bbd6-11ef-96a6-9d05544d8e20.png.webp 1024w,https://ichef.bbci.co.uk/news/1536/cpsprodpb/1a18/live/5b27b8a0-bbd6-11ef-96a6-9d05544d8e20.png.webp 1536w" src="https://ichef.bbci.co.uk/news/480/cpsprodpb/1a18/live/5b27b8a0-bbd6-11ef-96a6-9d05544d8e20.png.webp" alt="Getty Images A black car in a showroom with the letters VF8 on the number plate and two black scooters and a blue car in the background"><span>Getty Images</span></p></div><p data-component="caption-block"><figcaption>US authorities have started an investigation into the VinFast VF8 after drivers reported flaws<!-- --></figcaption></p></figure><p data-component="subheadline-block"><h2>'Alarm bells'<!-- --></h2></p><div data-component="text-block"><p>Mr Denli, a specialist in chassis design, was appointed to lead the engineering team working on the car's front suspension and chassis from September 2022, halfway through a design and testing phase he says had an unusually tight timetable.<!-- --></p><p>He soon became concerned VinFast was cutting corners with safety, keeping costs down by employing a small team of inexperienced engineers.<!-- --></p><p>His concerns grew when he heard three of his predecessors had quit after short spells on the project.<!-- --></p><p>He says in February and March 2023, while running vigorous testing on VinFast cars at the Mira Technology Park near Nuneaton, two components snapped off and another two failed. <!-- --></p><p>He reported the "extremely concerning" incidents to colleagues at Tata Technologies Limited (TTL), the consultancy's UK division, based in Leamington Spa, Warwickshire.<!-- --></p><p>In subsequent testing, he alleges further components failed. <!-- --></p><p>Mr Denli said they were failing after fewer than 25,000 km (15,534 miles), when normally they would be expected to last for at least 150,000 km (93,205 miles).<!-- --></p><p>"In the drive units, some of the brackets were completely failing and falling out on to the road," he said. "We're talking one or two kilograms worth of aluminium. <!-- --></p><p>"These [incidents] started causing alarm bells to go off just a short time before we we went into production."<!-- --></p></div><div data-component="text-block"><p>He escalated his concerns to senior executives at TTL and VinFast and said he  had recommended they redesign the faulty components and manufacture safer, higher quality parts.<!-- --></p><p>That would have sharply boosted costs and required VinFast Group to postpone production of the car, he added.<!-- --></p><p>But VinFast, which was preparing to sell shares in itself and raise funds by floating on the New York Stock Exchange, instead pushed ahead with production.<!-- --></p><p>Mr Denli asked Tata Technologies to reassign him to another project but senior managers refused. <!-- --></p><p>Unhappy to be associated with the VinFast car, he says, in May last year he resigned.<!-- --></p></div><div data-component="text-block"><p>With his skills as a consultant engineer in demand, Mr Denli later found new work via an agency at JLR in Gaydon, also owned by the Tata Group.<!-- --></p><p>But he said he kept seeing reports online appearing to show serious safety defects in earlier models of the same VinFast car ‚Äì including a video that appeared to show a car reversing with no driver in it ‚Äì and crashed cars where the wheels had come off. <!-- --></p><p>In another report, a VinFast car at a showroom in Germany caught fire.<!-- --></p><p>The same components he was testing in VinFast's VF6 and VF7 models had been carried over from two earlier models already on sale in the United States, Vietnam and Europe - the VF8 and VF9.<!-- --></p><p>Then on 24 April this year, <!-- --><a target="_blank" href="https://www.latimes.com/california/story/2024-05-23/federal-agency-investigates-fiery-ev-crash-that-killed-california-family">a family-of-four was killed in a crash<!-- --></a> in Pleasanton, California. Police reported the vehicle lost control, veered off the road, hit a pole and caught fire. <!-- --></p><p>The following month, US safety regulator the National Highway Traffic Safety Administration (NHTSA), announced it was reviewing the VinFast VF8. VinFast said it was cooperating with the investigation.<!-- --></p><p>The reports of the crash prompted Mr Denli to publish the posts <!-- --><a target="_blank" href="https://www.reddit.com/r/VinFastCommunity/comments/1d3be8z/i_designed_major_sections_of_vinfast_ask_me/?rdt=62979">on a Reddit account<!-- --></a> saying he had worked on the design of the car and it was a vehicle he believed endangered lives.<!-- --></p><p>"I would get into every other vehicle I have designed from other brands‚Ä¶ and every vehicle has flaws‚Ä¶ But Vinfast, I wouldn't get into one‚Ä¶ never will and I won't let my loved ones get into one either," he wrote.<!-- --></p><p>Two months later, on 18 July this year, Mr Denli's contract at JLR was terminated.<!-- --></p></div><figure><div data-component="image-block"><p><img src="https://www.bbc.com/bbcx/grey-placeholder.png"><img sizes="(min-width: 1280px) 50vw, (min-width: 1008px) 66vw, 96vw" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/61dd/live/247e3830-bc97-11ef-8d74-9336f9cf2a33.jpg.webp 240w,https://ichef.bbci.co.uk/news/320/cpsprodpb/61dd/live/247e3830-bc97-11ef-8d74-9336f9cf2a33.jpg.webp 320w,https://ichef.bbci.co.uk/news/480/cpsprodpb/61dd/live/247e3830-bc97-11ef-8d74-9336f9cf2a33.jpg.webp 480w,https://ichef.bbci.co.uk/news/640/cpsprodpb/61dd/live/247e3830-bc97-11ef-8d74-9336f9cf2a33.jpg.webp 640w,https://ichef.bbci.co.uk/news/800/cpsprodpb/61dd/live/247e3830-bc97-11ef-8d74-9336f9cf2a33.jpg.webp 800w,https://ichef.bbci.co.uk/news/1024/cpsprodpb/61dd/live/247e3830-bc97-11ef-8d74-9336f9cf2a33.jpg.webp 1024w,https://ichef.bbci.co.uk/news/1536/cpsprodpb/61dd/live/247e3830-bc97-11ef-8d74-9336f9cf2a33.jpg.webp 1536w" src="https://ichef.bbci.co.uk/news/480/cpsprodpb/61dd/live/247e3830-bc97-11ef-8d74-9336f9cf2a33.jpg.webp" alt="Getty Images A bright blue VinFast electric car plugged in at an outdoor charging station. Only the rear of the vehicle can be seen, with the charging hatch open. A picture of a grey version of the vehicle can be seen next to the car."><span>Getty Images</span></p></div><p data-component="caption-block"><figcaption>VinFast is a client of Jaguar Land Rover owner Tata Group<!-- --></figcaption></p></figure><div data-component="text-block"><p>Internal documents obtained through a Data Subject Access Request (DSAR) reveal a senior executive at his former employer Tata Technologies had been in touch with JLR executives to seek his dismissal.<!-- --></p><p>After he saw the Reddit posts, Tata Technologies HR director Patrick Flood discussed his company's wish to have Mr Denli's new employment terminated with JLR's HR director and board member Dave Williams.<!-- --></p><p>Mr Flood told Mr Williams that Tata Group's client VinFast had conducted its own investigation and identified Mr Denli as the author of the Reddit posts: "The concern is if he has done this now, he could do the same at JLR."<!-- --></p><p>The same day he was sacked, Mr Denli was blacklisted on industry recruitment platform Magnit, which told JLR he had been "red-flagged" so any applications from him for other work via the platform would be automatically declined.<!-- --></p><p>On 19 July, Mr Flood emailed JLR corporate investigators: "I just wanted to check whether the individual's services have been terminated with JLR?" The investigator confirmed they had.<!-- --></p><p>The internal documents show another Tata Technologies engineer had also told JLR there were problems with components Mr Denli had warned about on Reddit.<!-- --></p><p>Mr Denli said his bosses at JLR knew he had done nothing wrong in his JLR employment and told him he had been dismissed because Tata Group was embarrassed by his postings about its client, VinFast. <!-- --></p><p>He is now taking JLR to an employment tribunal.<!-- --></p><p>"I was distressed as to what was happening around the world where innocent people were paying the price - a very high price," he said.<!-- --></p><p>"I thought that if some people would start to speak up about it, they would actually be forced to make some changes. Unfortunately, their response was not to make these improvements, but, 'Hey, who said this? Let's go and shut him up'."<!-- --></p></div><div data-component="text-block"><p>On 12 September, the NHTSA launched an investigation into the Vinfast VF8.<!-- --></p><p><a target="_blank" href="https://www.reuters.com/business/autos-transportation/us-opens-probe-into-around-3118-vinfast-vehicles-2024-09-12">It announced it was looking into 3,118 VinFast vehicles<!-- --></a> sold in the US after 14 drivers reported the Lane Keep Assist systems were flawed in VF8 cars bought in 2023 and 2024.<!-- --></p><p>The NHTSA said the drivers reported the system "has difficulty detecting lanes on the roadway, provides improper steering inputs and is difficult to override by the driver". <!-- --></p><p>VinFast said it would cooperate fully with the NHTSA throughout this process.<!-- --></p><p>"We take all safety concerns seriously and will continue to monitor the situation closely," VinFast told Reuters, expressing the company's confidence in its safety standards.<!-- --></p><p>The number of reports of safety issues received by the NHTSA has now <!-- --><a target="_blank" href="https://www.nhtsa.gov/vehicle/2023/VINFAST/VF8#investigations">grown to 28<!-- --></a>.<!-- --></p></div><figure><div data-component="image-block"><p><img src="https://www.bbc.com/bbcx/grey-placeholder.png"><img sizes="(min-width: 1280px) 50vw, (min-width: 1008px) 66vw, 96vw" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/d65b/live/58494960-bc9d-11ef-8d74-9336f9cf2a33.jpg.webp 240w,https://ichef.bbci.co.uk/news/320/cpsprodpb/d65b/live/58494960-bc9d-11ef-8d74-9336f9cf2a33.jpg.webp 320w,https://ichef.bbci.co.uk/news/480/cpsprodpb/d65b/live/58494960-bc9d-11ef-8d74-9336f9cf2a33.jpg.webp 480w,https://ichef.bbci.co.uk/news/640/cpsprodpb/d65b/live/58494960-bc9d-11ef-8d74-9336f9cf2a33.jpg.webp 640w,https://ichef.bbci.co.uk/news/800/cpsprodpb/d65b/live/58494960-bc9d-11ef-8d74-9336f9cf2a33.jpg.webp 800w,https://ichef.bbci.co.uk/news/1024/cpsprodpb/d65b/live/58494960-bc9d-11ef-8d74-9336f9cf2a33.jpg.webp 1024w,https://ichef.bbci.co.uk/news/1536/cpsprodpb/d65b/live/58494960-bc9d-11ef-8d74-9336f9cf2a33.jpg.webp 1536w" src="https://ichef.bbci.co.uk/news/480/cpsprodpb/d65b/live/58494960-bc9d-11ef-8d74-9336f9cf2a33.jpg.webp" alt="Getty Images A close up on a man's hands using a mobile phone. He is wearing a cream jumper and brown trousers and sitting in a room with a grey rug and carpet."><span>Getty Images</span></p></div><p data-component="caption-block"><figcaption>Stronger protections are needed for whistleblowers, supporters say<!-- --></figcaption></p></figure><p data-component="subheadline-block"><h2>Parliamentary bill to support whistleblowers<!-- --></h2></p><div data-component="text-block"><p>In UK employment law, workers have some protection from employer retaliation if they disclose information they reasonably believe shows the health and safety of any individual is likely to be endangered. <!-- --></p><p>Under the Public Interest Disclosure at Work Act 1998, any clause in a contract that seeks to bind them to silence is void.<!-- --></p><p>However, there is growing pressure in Parliament for stronger safeguards for whistleblowers amid concerns existing protections are too weak. <!-- --></p><p>A bill will be introduced on Wednesday proposing to set up an Office of the Whistleblower to protect workers who speak up.<!-- --></p><p>Supporters such as Baroness Susan Kramer, a former transport minister, says Mr Denli's case is not exceptional and underlines why the bill is needed.<!-- --></p><p>"Whistleblowers very typically find themselves fired, blacklisted for future jobs and they pay a huge price in terms of their personal career," she said.<!-- --></p><p>"It is not acceptable, because we need whistleblowers to deter wrongdoing and to expose wrongdoing."<!-- --></p><p>Georgina Halford-Hall, chief executive of Whistleblowers UK, said: "This story is one of hundreds we hear every year from whistleblowers who have been rewarded for doing the right thing with retaliation.  <!-- --></p><p>"Currently whistleblowers have to decide between speaking up and their personal wellbeing. The best incentive that MPs can deliver is to ensure whistleblowers are properly protected and that wrongdoing will be investigated."<!-- --></p><p>The BBC offered both Tata Group and JLR the opportunity to comment in detail. <!-- --></p><p>Tata Group, the multinational corporation that owns JLR, did not respond. <!-- --></p><p>JLR said it did not comment on ongoing legal proceedings.<!-- --></p><p>VinFast said: "We do not interfere in the recruitment or HR activities of the Tata Group or its companies. We have no further comment on the matter."<!-- --></p></div><figure><div data-component="image-block"><p><img src="https://www.bbc.com/bbcx/grey-placeholder.png"><img sizes="(min-width: 1280px) 50vw, (min-width: 1008px) 66vw, 96vw" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/d0cc/live/7dc13690-bbd4-11ef-96a6-9d05544d8e20.png.webp 240w,https://ichef.bbci.co.uk/news/320/cpsprodpb/d0cc/live/7dc13690-bbd4-11ef-96a6-9d05544d8e20.png.webp 320w,https://ichef.bbci.co.uk/news/480/cpsprodpb/d0cc/live/7dc13690-bbd4-11ef-96a6-9d05544d8e20.png.webp 480w,https://ichef.bbci.co.uk/news/640/cpsprodpb/d0cc/live/7dc13690-bbd4-11ef-96a6-9d05544d8e20.png.webp 640w,https://ichef.bbci.co.uk/news/800/cpsprodpb/d0cc/live/7dc13690-bbd4-11ef-96a6-9d05544d8e20.png.webp 800w,https://ichef.bbci.co.uk/news/1024/cpsprodpb/d0cc/live/7dc13690-bbd4-11ef-96a6-9d05544d8e20.png.webp 1024w,https://ichef.bbci.co.uk/news/1536/cpsprodpb/d0cc/live/7dc13690-bbd4-11ef-96a6-9d05544d8e20.png.webp 1536w" src="https://ichef.bbci.co.uk/news/480/cpsprodpb/d0cc/live/7dc13690-bbd4-11ef-96a6-9d05544d8e20.png.webp" alt="Getty Images The front of a car showroom with black-framed windows and the words Vinfast in silver lettering above the doors"><span>Getty Images</span></p></div><p data-component="caption-block"><figcaption>VinFast has denied it interferes with HR activities of the Tata Group<!-- --></figcaption></p></figure><!--$!--><!--/$--></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The unbearable slowness of being: Why do we live at 10 bits/s? (216 pts)]]></title>
            <link>https://www.cell.com/neuron/abstract/S0896-6273(24)00808-0?_returnURL=https%3A%2F%2Flinkinghub.elsevier.com%2Fretrieve%2Fpii%2FS0896627324008080%3Fshowall%3Dtrue</link>
            <guid>42449602</guid>
            <pubDate>Wed, 18 Dec 2024 11:14:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cell.com/neuron/abstract/S0896-6273(24)00808-0?_returnURL=https%3A%2F%2Flinkinghub.elsevier.com%2Fretrieve%2Fpii%2FS0896627324008080%3Fshowall%3Dtrue">https://www.cell.com/neuron/abstract/S0896-6273(24)00808-0?_returnURL=https%3A%2F%2Flinkinghub.elsevier.com%2Fretrieve%2Fpii%2FS0896627324008080%3Fshowall%3Dtrue</a>, See on <a href="https://news.ycombinator.com/item?id=42449602">Hacker News</a></p>
Couldn't get https://www.cell.com/neuron/abstract/S0896-6273(24)00808-0?_returnURL=https%3A%2F%2Flinkinghub.elsevier.com%2Fretrieve%2Fpii%2FS0896627324008080%3Fshowall%3Dtrue: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Trying to Recreate iOS on the Web (149 pts)]]></title>
            <link>https://homescreen.app/</link>
            <guid>42449588</guid>
            <pubDate>Wed, 18 Dec 2024 11:11:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://homescreen.app/">https://homescreen.app/</a>, See on <a href="https://news.ycombinator.com/item?id=42449588">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Silver amulet is the oldest evidence of Christianity north of the Alps (230 pts)]]></title>
            <link>https://archaeologymag.com/2024/12/oldest-evidence-of-christianity-north-of-the-alps/</link>
            <guid>42448939</guid>
            <pubDate>Wed, 18 Dec 2024 08:31:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://archaeologymag.com/2024/12/oldest-evidence-of-christianity-north-of-the-alps/">https://archaeologymag.com/2024/12/oldest-evidence-of-christianity-north-of-the-alps/</a>, See on <a href="https://news.ycombinator.com/item?id=42448939">Hacker News</a></p>
Couldn't get https://archaeologymag.com/2024/12/oldest-evidence-of-christianity-north-of-the-alps/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: ImPlot3D ‚Äì A 3D Plotting Library for Dear ImGui (149 pts)]]></title>
            <link>https://github.com/brenocq/implot3d</link>
            <guid>42448913</guid>
            <pubDate>Wed, 18 Dec 2024 08:24:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/brenocq/implot3d">https://github.com/brenocq/implot3d</a>, See on <a href="https://news.ycombinator.com/item?id=42448913">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">ImPlot3D</h2><a id="user-content-implot3d" aria-label="Permalink: ImPlot3D" href="#implot3d"></a></p>
<p dir="auto">
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/17342434/396294009-359473d2-73a9-452c-a5f3-cb96e3785dc2.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ1MzYxMDMsIm5iZiI6MTczNDUzNTgwMywicGF0aCI6Ii8xNzM0MjQzNC8zOTYyOTQwMDktMzU5NDczZDItNzNhOS00NTJjLWE1ZjMtY2I5NmUzNzg1ZGMyLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDEyMTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMjE4VDE1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWQyMDA2NzBkNzgwMTQ2Yzc5OTc4NTBmNTk1MjEzOWZiMDZjN2FjZTc5Y2RjOWEwYjU1ZTE4Mzg5MTdmYzVjNjUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.VTIOZATWNCgfD9jqrN7I2sf9sDEgaKQTbL4eeXp-XKM"><img src="https://private-user-images.githubusercontent.com/17342434/396294009-359473d2-73a9-452c-a5f3-cb96e3785dc2.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ1MzYxMDMsIm5iZiI6MTczNDUzNTgwMywicGF0aCI6Ii8xNzM0MjQzNC8zOTYyOTQwMDktMzU5NDczZDItNzNhOS00NTJjLWE1ZjMtY2I5NmUzNzg1ZGMyLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDEyMTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMjE4VDE1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWQyMDA2NzBkNzgwMTQ2Yzc5OTc4NTBmNTk1MjEzOWZiMDZjN2FjZTc5Y2RjOWEwYjU1ZTE4Mzg5MTdmYzVjNjUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.VTIOZATWNCgfD9jqrN7I2sf9sDEgaKQTbL4eeXp-XKM" width="270" data-animated-image=""></a> <a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/17342434/396293920-97ec8be4-50f9-428b-b357-25e2479409b8.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ1MzYxMDMsIm5iZiI6MTczNDUzNTgwMywicGF0aCI6Ii8xNzM0MjQzNC8zOTYyOTM5MjAtOTdlYzhiZTQtNTBmOS00MjhiLWIzNTctMjVlMjQ3OTQwOWI4LmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDEyMTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMjE4VDE1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTRiMTUzYTk0ODFhYmFlMDZhMTQ0MjBjMGEzMTRmZTk3MWE0YmI5YzNiYThlMTE1NDhmMDVlODgxZWYxYjJkYmQmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.6N4RUAIZHGzToq6YEnD1ScvJrxb_1Mjnz7jARKrcuNw"><img src="https://private-user-images.githubusercontent.com/17342434/396293920-97ec8be4-50f9-428b-b357-25e2479409b8.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ1MzYxMDMsIm5iZiI6MTczNDUzNTgwMywicGF0aCI6Ii8xNzM0MjQzNC8zOTYyOTM5MjAtOTdlYzhiZTQtNTBmOS00MjhiLWIzNTctMjVlMjQ3OTQwOWI4LmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDEyMTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMjE4VDE1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTRiMTUzYTk0ODFhYmFlMDZhMTQ0MjBjMGEzMTRmZTk3MWE0YmI5YzNiYThlMTE1NDhmMDVlODgxZWYxYjJkYmQmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.6N4RUAIZHGzToq6YEnD1ScvJrxb_1Mjnz7jARKrcuNw" width="270" data-animated-image=""></a> <a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/17342434/396293963-c212039b-4853-4d26-95a5-5470bf97555e.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ1MzYxMDMsIm5iZiI6MTczNDUzNTgwMywicGF0aCI6Ii8xNzM0MjQzNC8zOTYyOTM5NjMtYzIxMjAzOWItNDg1My00ZDI2LTk1YTUtNTQ3MGJmOTc1NTVlLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDEyMTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMjE4VDE1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTYwNGQyY2E0NmVkZDBkODQ0OTc2NTI1MGU4ZmQxYWIzMGRlN2VlZmNhNmMzODZkYWFjMGUyMTc4ZWZlMmRkZDAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.x_iGhu2SickTdn2e7szGsTwFikjZpoOcg_4a_RZWBjQ"><img src="https://private-user-images.githubusercontent.com/17342434/396293963-c212039b-4853-4d26-95a5-5470bf97555e.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ1MzYxMDMsIm5iZiI6MTczNDUzNTgwMywicGF0aCI6Ii8xNzM0MjQzNC8zOTYyOTM5NjMtYzIxMjAzOWItNDg1My00ZDI2LTk1YTUtNTQ3MGJmOTc1NTVlLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDEyMTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMjE4VDE1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTYwNGQyY2E0NmVkZDBkODQ0OTc2NTI1MGU4ZmQxYWIzMGRlN2VlZmNhNmMzODZkYWFjMGUyMTc4ZWZlMmRkZDAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.x_iGhu2SickTdn2e7szGsTwFikjZpoOcg_4a_RZWBjQ" width="270" data-animated-image=""></a>
</p>
<p dir="auto">
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/17342434/396293851-ec7ec42a-3c62-44bf-9275-f735f0304c95.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ1MzYxMDMsIm5iZiI6MTczNDUzNTgwMywicGF0aCI6Ii8xNzM0MjQzNC8zOTYyOTM4NTEtZWM3ZWM0MmEtM2M2Mi00NGJmLTkyNzUtZjczNWYwMzA0Yzk1LmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDEyMTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMjE4VDE1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPThmM2IzNTc5MDhkZGJiMzc4YzM2NzBjMGEyNjZlNzkyZTNjODU5NDE2OTU2YTAwZDQ5ZDY5Mzk4MzM4ZjFhMmUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.SlPrGpoBjv1WRxHJib3NG5vYWNjPnaCIWpxhrpK5xxY"><img src="https://private-user-images.githubusercontent.com/17342434/396293851-ec7ec42a-3c62-44bf-9275-f735f0304c95.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ1MzYxMDMsIm5iZiI6MTczNDUzNTgwMywicGF0aCI6Ii8xNzM0MjQzNC8zOTYyOTM4NTEtZWM3ZWM0MmEtM2M2Mi00NGJmLTkyNzUtZjczNWYwMzA0Yzk1LmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDEyMTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMjE4VDE1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPThmM2IzNTc5MDhkZGJiMzc4YzM2NzBjMGEyNjZlNzkyZTNjODU5NDE2OTU2YTAwZDQ5ZDY5Mzk4MzM4ZjFhMmUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.SlPrGpoBjv1WRxHJib3NG5vYWNjPnaCIWpxhrpK5xxY" width="270" data-animated-image=""></a> <a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/17342434/396294038-e6bd03fa-6d76-4f3e-8d15-c24a05a5f714.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ1MzYxMDMsIm5iZiI6MTczNDUzNTgwMywicGF0aCI6Ii8xNzM0MjQzNC8zOTYyOTQwMzgtZTZiZDAzZmEtNmQ3Ni00ZjNlLThkMTUtYzI0YTA1YTVmNzE0LmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDEyMTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMjE4VDE1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTQ5NGU5Y2U2ODBhMjQzZmM4ZjlkYmQ3OWQ3ZjUwZTFjMTkzNjE1OTY5MDFjMzhjY2YwZDk1ZTc3N2RhMjcyYjYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.xTf-jYLyBnhWwTX76H9-wop8XuLmE-OEoP_ewOhxXwI"><img src="https://private-user-images.githubusercontent.com/17342434/396294038-e6bd03fa-6d76-4f3e-8d15-c24a05a5f714.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ1MzYxMDMsIm5iZiI6MTczNDUzNTgwMywicGF0aCI6Ii8xNzM0MjQzNC8zOTYyOTQwMzgtZTZiZDAzZmEtNmQ3Ni00ZjNlLThkMTUtYzI0YTA1YTVmNzE0LmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDEyMTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMjE4VDE1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTQ5NGU5Y2U2ODBhMjQzZmM4ZjlkYmQ3OWQ3ZjUwZTFjMTkzNjE1OTY5MDFjMzhjY2YwZDk1ZTc3N2RhMjcyYjYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.xTf-jYLyBnhWwTX76H9-wop8XuLmE-OEoP_ewOhxXwI" width="270" data-animated-image=""></a> <a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/17342434/396294001-b66ff296-7fbf-4644-9129-37daecca0b62.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ1MzYxMDMsIm5iZiI6MTczNDUzNTgwMywicGF0aCI6Ii8xNzM0MjQzNC8zOTYyOTQwMDEtYjY2ZmYyOTYtN2ZiZi00NjQ0LTkxMjktMzdkYWVjY2EwYjYyLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDEyMTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMjE4VDE1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWQyZjk1ODNjYzRhZTk4ZjQ4OGFiNTNmNTllYTk5MGFkYWE0MTg1MmY5NDkxYmI0NGIyZGFjNDBlMmRjNzJjY2ImWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.hOSL_5rAcg5LWYmJ6cZE7Gb6bFi4Up3vQIV5QBLYcxY"><img src="https://private-user-images.githubusercontent.com/17342434/396294001-b66ff296-7fbf-4644-9129-37daecca0b62.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ1MzYxMDMsIm5iZiI6MTczNDUzNTgwMywicGF0aCI6Ii8xNzM0MjQzNC8zOTYyOTQwMDEtYjY2ZmYyOTYtN2ZiZi00NjQ0LTkxMjktMzdkYWVjY2EwYjYyLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDEyMTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMjE4VDE1MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWQyZjk1ODNjYzRhZTk4ZjQ4OGFiNTNmNTllYTk5MGFkYWE0MTg1MmY5NDkxYmI0NGIyZGFjNDBlMmRjNzJjY2ImWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.hOSL_5rAcg5LWYmJ6cZE7Gb6bFi4Up3vQIV5QBLYcxY" width="270" data-animated-image=""></a>
</p>
<p dir="auto">ImPlot3D is an extension of <a href="https://github.com/ocornut/imgui">Dear ImGui</a> that provides easy-to-use, high-performance 3D plotting functionality. Inspired by <a href="https://github.com/epezent/implot">ImPlot</a>, it brings a familiar and intuitive API for developers already acquainted with ImPlot. ImPlot3D is designed for rendering 3D plots with customizable markers, lines, surfaces, and meshes, providing an ideal solution for applications requiring visual representation of 3D data.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">üöÄ Features</h2><a id="user-content--features" aria-label="Permalink: üöÄ Features" href="#-features"></a></p>
<ul dir="auto">
<li>GPU-accelerated rendering</li>
<li>Multiple plot types:
<ul dir="auto">
<li>Line plots</li>
<li>Scatter plots</li>
<li>Surface plots</li>
<li>Quad plots</li>
<li>Triangle plots</li>
<li>Mesh plots</li>
<li>Text plots</li>
</ul>
</li>
<li>Rotate, pan, and zoom 3D plots interactively</li>
<li>Several plot styling options: 10 marker types, adjustable marker sizes, line weights, outline colors, fill colors, etc.</li>
<li>16 built-in colormaps and support for and user-added colormaps</li>
<li>Optional plot titles, axis labels, and grid labels</li>
<li>Optional and configurable legends with toggle buttons to quickly show/hide plot items</li>
<li>Default styling based on the current ImGui theme, or completely custom plot styles</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">üõ†Ô∏è Usage</h2><a id="user-content-Ô∏è-usage" aria-label="Permalink: üõ†Ô∏è Usage" href="#Ô∏è-usage"></a></p>
<p dir="auto">The ImPlot3D API is designed to feel very similar to Dear ImGui and ImPlot. You start by calling <code>ImPlot3D::BeginPlot()</code> to initialize a 3D plot, followed by plotting various data using the <code>PlotX</code> functions (e.g., <code>PlotLine()</code> , <code>PlotScatter()</code> , <code>PlotSurface()</code> ). Finally, you end the plot with <code> ImPlot3D::EndPlot()</code> .</p>
<div dir="auto" data-snippet-clipboard-copy-content="float x_data[1000] = ...;
float y_data[1000] = ...;
float z_data[1000] = ...;

ImGui::Begin(&quot;My Window&quot;);
if (ImPlot3D::BeginPlot(&quot;My Plot&quot;)) {
    ImPlot3D::PlotLine(&quot;My Line Plot&quot;, x_data, y_data, z_data, 1000);
    ImPlot3D::PlotScatter(&quot;My Scatter Plot&quot;, x_data, y_data, z_data, 1000);
    ...
    ImPlot3D::EndPlot();
}
ImGui::End();"><pre><span>float</span> x_data[<span>1000</span>] = ...;
<span>float</span> y_data[<span>1000</span>] = ...;
<span>float</span> z_data[<span>1000</span>] = ...;

<span>ImGui::Begin</span>(<span><span>"</span>My Window<span>"</span></span>);
<span>if</span> (ImPlot3D::BeginPlot(<span><span>"</span>My Plot<span>"</span></span>)) {
    <span>ImPlot3D::PlotLine</span>(<span><span>"</span>My Line Plot<span>"</span></span>, x_data, y_data, z_data, <span>1000</span>);
    <span>ImPlot3D::PlotScatter</span>(<span><span>"</span>My Scatter Plot<span>"</span></span>, x_data, y_data, z_data, <span>1000</span>);
    ...
    <span>ImPlot3D::EndPlot</span>();
}
<span>ImGui::End</span>();</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">üé® Demos</h2><a id="user-content--demos" aria-label="Permalink: üé® Demos" href="#-demos"></a></p>
<p dir="auto">A comprehensive example showcasing ImPlot3D features can be found in <code>implot3d_demo.cpp</code>. Add this file to your project and call <code>ImPlot3D::ShowDemoWindow()</code> in your update loop. This demo provides a wide variety of 3D plotting examples, serving as a reference for creating different types of 3D plots. The demo is regularly updated to reflect new features and plot types, so be sure to revisit it with each release!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">‚öôÔ∏è Integration</h2><a id="user-content-Ô∏è-integration" aria-label="Permalink: ‚öôÔ∏è Integration" href="#Ô∏è-integration"></a></p>
<p dir="auto">To integrate ImPlot3D into your application, follow these steps:</p>
<ol dir="auto">
<li>Ensure you have a working Dear ImGui environment. ImPlot3D requires only Dear ImGui to function and does not depend on ImPlot.</li>
<li>Add the following source files to your project: <code>implot3d.h</code>, <code>implot3d.cpp</code>, <code>implot3d_internal.h</code>, <code>implot3d_items.cpp</code>. Optionally, include <code>implot3d_demo.cpp</code> for examples and <code>implot3d_meshes.cpp</code> to support pre-loaded meshes.</li>
<li>Create and destroy an ImPlot3DContext alongside your ImGuiContext:</li>
</ol>
<div dir="auto" data-snippet-clipboard-copy-content="ImGui::CreateContext();
ImPlot3D::CreateContext();
...
ImPlot3D::DestroyContext();
ImGui::DestroyContext();"><pre><span>ImGui::CreateContext</span>();
<span>ImPlot3D::CreateContext</span>();
...
<span>ImPlot3D::DestroyContext</span>();
<span>ImGui::DestroyContext</span>();</pre></div>
<p dir="auto">You're now ready to start plotting in 3D!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto"><g-emoji alias="warning">‚ö†Ô∏è</g-emoji> Extremely Important Note</h2><a id="user-content-Ô∏è-extremely-important-note" aria-label="Permalink: ‚ö†Ô∏è Extremely Important Note" href="#Ô∏è-extremely-important-note"></a></p>
<p dir="auto">Dear ImGui, by default, uses 16-bit indexing, which might cause issues with high-density 3D visualizations such as complex surfaces or meshes. This can lead to assertion failures, data truncation, or visual glitches. To avoid these problems, it's recommended to:</p>
<ul dir="auto">
<li>Option 1: Enable 32-bit indices by uncommenting <code>#define ImDrawIdx unsigned int</code> in your ImGui imconfig.h file.</li>
<li>Option 2: Ensure your renderer supports the <code>ImGuiBackendFlags_RendererHasVtxOffset</code> flag. Many official ImGui backends already support this functionality.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">üí¨ FAQ</h2><a id="user-content--faq" aria-label="Permalink: üí¨ FAQ" href="#-faq"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Why ImPlot3D?</h4><a id="user-content-why-implot3d" aria-label="Permalink: Why ImPlot3D?" href="#why-implot3d"></a></p>
<p dir="auto">While ImGui excels at building UI, it lacks tools for 3D data visualization. ImPlot3D fills this gap, offering a lightweight, real-time library for 3D plotting, designed with interactivity and ease of use in mind.</p>
<p dir="auto">Inspired by ImPlot, ImPlot3D provides a similar API, making it easy for existing ImPlot users to adopt. It focuses on real-time, application-level 3D visualizations for debugging, simulations, and data analysis, with performance as a priority.</p>
<p dir="auto">ImPlot is great for 2D visualizations; ImPlot3D extends this power to 3D, offering the same simplicity and speed.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Where can I find documentation?</h4><a id="user-content-where-can-i-find-documentation" aria-label="Permalink: Where can I find documentation?" href="#where-can-i-find-documentation"></a></p>
<p dir="auto">The API for ImPlot3D is thoroughly commented in <code>implot3d.h</code>, and a comprehensive demo file, <code>implot3d_demo.cpp</code>, showcases all the features. You are encouraged to explore the demo file as it is regularly updated to reflect new functionality. Additionally, if you're familiar with ImPlot, you'll notice many similarities in usage patterns.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">How is ImPlot3D different from ImPlot?</h4><a id="user-content-how-is-implot3d-different-from-implot" aria-label="Permalink: How is ImPlot3D different from ImPlot?" href="#how-is-implot3d-different-from-implot"></a></p>
<p dir="auto">ImPlot3D is highly inspired by ImPlot, so if you're already familiar with ImPlot, you'll feel right at home. However, ImPlot3D is specifically built for 3D visualizations, offering interactive 3D rotations, panning, and scaling.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Do I need ImPlot to use ImPlot3D?</h3><a id="user-content-do-i-need-implot-to-use-implot3d" aria-label="Permalink: Do I need ImPlot to use ImPlot3D?" href="#do-i-need-implot-to-use-implot3d"></a></p>
<p dir="auto">No. ImPlot3D is a standalone library and does not depend on ImPlot. You only need Dear ImGui to get started.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Does ImPlot3D support 2D plots?</h4><a id="user-content-does-implot3d-support-2d-plots" aria-label="Permalink: Does ImPlot3D support 2D plots?" href="#does-implot3d-support-2d-plots"></a></p>
<p dir="auto">While you can rotate the 3D view to align with a 2D plane, ImPlot is far better suited for visualizing 2D data. ImPlot3D is specifically designed for 3D plotting and interaction, so we recommend using ImPlot for all your 2D visualization needs.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Can I customize the appearance of plots?</h4><a id="user-content-can-i-customize-the-appearance-of-plots" aria-label="Permalink: Can I customize the appearance of plots?" href="#can-i-customize-the-appearance-of-plots"></a></p>
<p dir="auto">Absolutely. ImPlot3D allows you to modify plot styles, including line colors, thickness, fill opacity, and marker sizes. You can also use colormaps for surfaces and customize axis labels, grid styles, and background colors.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Can I export 3D plots to an image?</h4><a id="user-content-can-i-export-3d-plots-to-an-image" aria-label="Permalink: Can I export 3D plots to an image?" href="#can-i-export-3d-plots-to-an-image"></a></p>
<p dir="auto">Not currently. You can use your OS's screen capturing tools to save a plot. ImPlot3D is designed for real-time visualization and interaction, not for creating publication-quality renders. For publication-quality output, consider exporting your data to a dedicated 3D rendering tool.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Is ImPlot3D suitable for publication-quality visuals?</h4><a id="user-content-is-implot3d-suitable-for-publication-quality-visuals" aria-label="Permalink: Is ImPlot3D suitable for publication-quality visuals?" href="#is-implot3d-suitable-for-publication-quality-visuals"></a></p>
<p dir="auto">ImPlot3D prioritizes interactivity and real-time performance. If you need high-quality visualizations, use ImPlot3D for initial exploration and then switch to tools like <a href="https://www.mathworks.com/products/matlab.html" rel="nofollow">MATLAB</a>, <a href="https://matplotlib.org/" rel="nofollow">matplotlib</a>, or <a href="https://www.paraview.org/" rel="nofollow">ParaView</a> for the final output.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">This project is licensed under the MIT License - check <a href="https://github.com/brenocq/implot3d/blob/main/LICENSE">LICENSE</a> for details.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Lou's Pseudo 3D Page (2013) (145 pts)]]></title>
            <link>http://www.extentofthejam.com/pseudo/</link>
            <guid>42448184</guid>
            <pubDate>Wed, 18 Dec 2024 04:45:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://www.extentofthejam.com/pseudo/">http://www.extentofthejam.com/pseudo/</a>, See on <a href="https://news.ycombinator.com/item?id=42448184">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>


<table><tbody><tr><td>
<img src="http://www.extentofthejam.com/pseudo/images/curves1.png"></td><td>
</td></tr></tbody></table>

<br><a href="http://www.extentofthejam.com/pseudo/espanol.html">Pseudo 3d en espa√±ol aqui! Gracias a Luis Pe√±a!</a>

<br>(C) 2013 Louis Gorenfeld, updated May 3, 2013<p>
<b>NEW:</b> Important details on the segmented road system and some additional links
<br><b>NEW:</b> An (optional) explanation of finding field-of-view for the 3d projection formula
<br><b>NEW:</b> An analysis of S.T.U.N. Runner
<br><b>NEW:</b> General writing improvements

</p><div><p>Previous update:</p><p>
An explanation of 3d projection mathematics (under Road Basics) and analysis of Activision's Enduro (under Case Studies)!
<br>Thanks to everyone for all the e-mail!  Keep it coming :)
Sorry, I can't answer questions about when I'll post source code, but I'm 
always happy to answer anything else about these engines!
<br>Official material on the Road Rash graphics engine and more detailed explanation of curves and a generalized curve equation
</p><p>
Is this information inaccurate?  Am I way off?  Don't hesitate to write me at louis.gorenfeld at gmail dot com!
</p></div><hr noshade="">
<h2>Table of Contents</h2>
<a href="#intro">
Introduction<br>
</a>
<a href="#basics">
Road Basics<br>
</a>
<a href="#curves">
Curves and Steering<br>
</a>
<a href="#sprites">
Sprites and Data<br>
</a>
<a href="#hills">
Hills<br>
</a>
<a href="#wrapup">Taking Raster Roads Farther<br></a>
<a href="#proj3d">True 3d-Projected Segments<br></a>
<a href="#enhancements">
Enhancements<br>
</a>
<a href="#related">
Related Effects<br>
</a>
<a href="#hw">
Case Studies<br>
</a>
<a href="#stuff">
Code Stuff<br>
</a>
<a href="#glossary">
Glossary<br>
</a>
<a href="#gallery">
The Gallery
</a>
<hr noshade="">

<a name="intro">

<h2>Introduction</h2>

</a><p><a name="intro"><u><b>Why Pseudo 3d?</b></u><br>
</a>
Now that every system can produce graphics consisting of a zillion polygons on the fly, why would you want to do a road the old way?  Aren't polygons the exact same thing, only better?  Well, no.  It's true that polygons lead to less distortion, but it is the warping in these old engines that give the surreal, exhillerating sense of speed found in many pre-polygon games.  Think of the view as being controlled by a camera.  As you take a curve in a game which uses one of these engines, it seems to look around the curve.  Then, as the road straightens, the view straightens.  As you go over a blind curve, the camera would seem to peer down over the ridge.  And, since these games do not use a traditional track format with perfect spatial relationships, it is possible to effortlessly create tracks large enough that the player can go at ridiculous speeds-- without worrying about an object appearing on the track faster than the player can possibly react since the physical reality of the game can easily be tailored to the gameplay style.
</p><p>But they have plenty of drawbacks as well.  The depth of physics found in more simulation-like games tends to be lost, and so these engines aren't suited to every purpose.  They are, however, easy to implement, run quickly, and are generally a lot of fun to play with!
</p><p>It is worth noting that not every older racing game used these techniques.  In fact, the method outlined here is only one possible way to do a pseudo 3d road.  Some used projected and scaled sprites, others seem to involve varying degrees of real projection for the road.  How you blend real mathematics with trickery is up to you.  
I hope you have as much fun exploring this special effect as I did.

</p><p><u><b>How Much Math Do I Need?</b></u><br>
If you...
<br>
...have Trigonometry knowledge, that's the most math you'll need for the entire tutorial<br>
...have just Algebra and Geometry, skip the field-of-view explanation<br>
...want to avoid as much math as possible, read: The Simplest Road, Curves and Steering, Sprites and Data, and Hills<br>
</p><p>This is a very flexible technique, and you can actually get by with just addition! With more advanced math, it can look better, but
with just arithmetic, you can get up to the level of detail seen in games like Pole Position or the first OutRun.

</p><p><u><b>How Much Programming Knowledge Do I Need?</b></u><br>
It helps a lot to understand raster graphics: Know what a scanline is, and that each line is made of a row of pixels. 
The programming examples are written in pseudocode, so you don't need experience in any specific language to understand them.
</p><p>
Ready? Let's begin!

</p><p><u><b>Raster Effects - Some Background</b></u><br>
A pseudo 3d road is just a variation of a more general class of effects called raster effects.  
One of the best-known examples of a raster effect is in Street Fighter II:  
As the fighters move left and right, the ground scrolls in perspective.  This actually isn't 3d.  Instead, the ground
graphic is stored as an extremely wide-angle perspective shot.  When the view scrolls, the lines of the screen which are supposed to be farther away scroll more slowly than the lines which
are closer.  That is, each line of the screen scrolls independently of each other.  
Shown below is both the end result and the ground graphic as it is stored in memory.
</p><center>
<img src="http://www.extentofthejam.com/pseudo/images/sf2.png">
<br>
<img src="http://www.extentofthejam.com/pseudo/images/sf2ground_rom.png">
</center>


<a name="basics">
<u>
<h2>Road Basics</h2></u>
</a>
<p><u><b>Introduction to Raster Roads</b></u><br>
We are used to thinking of 3d effects in terms of polygons whose vertices are
suspended in 3d space.  Older systems, however, were not powerful enough to
make a large number of 3d calculations.  Many older effects, in general,
fall into the category of raster effects.  These are special effects which
are done by changing some variable per line.  Most commonly, this means changing
the color or palette per line, or scrolling per line.  This is well-suited to
old graphics hardware which had acceleration for scrolling and used an indexed
color mode.
</p><p>
The pseudo raster road effect actually works similarly to the Street Fighter
II perspective effect in that it warps a static image to create the illusion
of 3d.  Here's how they do it:
</p><p>
Most raster roads start off with an image of a flat road.  This is essentially
a graphic of two parallel lines on the ground retreating into the distance.
As they get farther into the distance, the lines appear to the viewer to
be closer 
together.  This is a basic rule of perspective.  
Now, in order to give the illusion 
of motion, most arcade racing games have stripes on the road.
Moving these stripes on the road forwards is
generally either achieved by color cycling or by changing the palette every line.
Curves and steering are done by scrolling each line independently of one
another, just like in Street Fighter II.  
</p><p>
We will get into curves and steering
in the next chapter.  For now, let's put that aside and concentrate on 
making the road appear to scroll forwards.  

</p><p><u><b>The Simplest Road</b></u><br>
Take the image of a road described above:  Two parallel lines demarcating the left and right edges of the road
retreat into the distance.  As they move into the distance, they appear to the viewer to be closer together.
Below is what this might look like:<br>
<img src="http://www.extentofthejam.com/pseudo/images/nolines.png">
</p><p>
What is missing from this picture are road markings to give a good impression of distance.  Games use alternating light and dark strips, among other road markings, for this effect.  
To help accomplish this, let's define a "texture position" variable.  This variable starts at zero at the bottom of the screen and increases
each line going up the screen.  When this is below a certain amount, the road is drawn in one shade.  When it is above that amount, it is drawn in the other shade.  The position variable then wraps back to zero when it exceeds the maximum amount, causing a repeating pattern.  
</p><p>It is not enough to change this by a set amount each line though, because then you'll just see several strips of different colors which are not getting smaller as the road goes into the distance.  That means you need another variable which will change by a set amount, add it to another variable each line, and then add the last one to the texture position change.
</p><p>Here's an example which shows, from the bottom of the screen, what the Z value will be for each line as it 
recedes into the distance.  After the variables, I print what is added to get the values for the next line.  I've named the values DDZ (delta delta Z), DZ
(delta Z), and Z.  DDZ remains constant, DZ changes in a linear fashion, and Z's value curves.  You can think of Z as
representing the Z position, DZ as holding the velocity of the position, and DDZ as being the acceleration of
the position (the change in acceleration).
Note that the value I chose, four, is arbitrary and was just convinient for this example.
</p><p>
<code>
<span size="-1">
DDZ = 4   DZ = 0   Z = 0  : dz += 4, z += 4<br>
DDZ = 4   DZ = 4   Z = 4  : dz += 4, z += 8<br>
DDZ = 4   DZ = 8   Z = 12 : dz += 4, z += 12<br>
DDZ = 4   DZ = 12  Z = 24 : dz += 4, z += 16<br>
DDZ = 4   DZ = 16  Z = 40 : etc...<br>
</span>
</code>
</p><p>
Noice that DZ is modified first, and then that is used to modify Z.  To sum it up, say you are moving through the texture at speed 4.  That means that after line one, you are reading the texture at position 4.  The next line will be 12.  After that, 24.  So, this way it reads through the texture faster and faster.  This is why I like to refer to these variables as the texture position (where in the texture we are reading), the texture speed (how quickly we read through the texture), and the texture acceleration (how quickly the texture speed increases).
</p><p>A similar method will also be used to draw curves and hills without too much number crunching.  Now, 
to make the road appear to move, just change where the texture position starts at the bottom of the screen for each frame.
</p><p>Now, you may notice a shortcoming with this trick:  the zooming rate is inaccurate.  
This causes a distortion that I will refer to as the "oatmeal effect".  It is a warping effect present in early pseudo games such as OutRun in which objects, including the stripes on the road,
appear to slow down as they move outwards from the center of the screen.
</p><p>This method for finding the Z value has another disadvantage: It's not easily predictable what the value is in the very distance, especially
when hills are involved. We will learn a more advanced method which I will call the Z-map. This is a table that calculates what the Z distance is
for every scanline of the screen. But first, we need a little more math...

</p><p><u><b>A Mathematical Detour: 3d Perspective Projection</b></u><br>
There are ways to get rid of the oatmeal effect.  However, some traditional 3d mathematics are needed to make them possible.  What we need is a way of translating
3d coordinates so that they fit onto a 2d surface. 
</p><p><img src="http://www.extentofthejam.com/pseudo/images/project.png">
</p><p>In the picture above, an eyeball (lower left) is looking through the screen (the blue vertical line) at an object in our 3d world ("y_world").  The eyeball is
a distance "dist" from the screen, and a distance "z_world" from the object.  Now, one thing you might have noticed if you've spent some time with geometry or
trigonometry is that there are not one but two triangles in the picture.  The first triangle is the largest one, from the eyeball over to the ground on the right side
and up to the object we're looking at.  The second triangle I've colored yellow.  This is from the eyeball to where on the screen we'll see our object, down to the
ground, and back.  
</p><p>These two triangles' hypoteneuses (the line from the eye to the object) are at the same angle even though one is longer than the other.  They are essentially 
the same triangle, but the smaller one is just scaled down.  What this implies is that the ratio of the horizontal and vertical sides must be the same!  In math terms:
</p><p><code>y_screen/dist = y_world/z_world</code>
</p><p>What we need to do now is juggle the equation to get y_screen.  This gives us:
</p><p><code>y_screen = (y_world*dist)/z_world</code>
</p><p>In summary, to find the y coordinate of an object on the screen, we take the y world coordinate, multiply that by the distance we are to the screen, and then divide
it by the distance it is in the world.  Of course, if we just do that, the center of our view is going to be the upper-left corner of the screen!  Just plug in y_world=0 to
see this.  What we can do to center it is add half of our screen resolution to the result to put it right in the middle.  The equation can also be simplified a little bit
by pretending that our noses are right up to the screen.  In this case, dist=1.  The final equation then is:
</p><p><code>y_screen = (y_world/z_world) + (y_resolution/2)</code>
</p><p>There is a relationship between the ratios and the viewing angle, as well as scaling the image so that it is resolution-neutral, but we won't really need any of that to fix our road problem.  
If you are curious, try looking at the diagram from the top view:  the angle to the edge of the screen is the field of view and the same relationships hold!

</p><p><u><b>More Math: Adding Field-of-View to 3d Projection</b></u><br>
Now, this is <b>largely unnecessary</b> for most road engine cases. But, it's useful for making projection parameters
resolution-independent, or for objects that need to rotate or for integration with true 3d effects.
</p><p>Let's go back to the original projection formula. The "dist" from the explanation above will now be called "scaling":
</p><p><code>y_screen = (y_world*scaling)/z_world + (y_resolution/2)</code>
</p><p>The idea is that we need to scale all the points on the screen by some value which lets points within a certain
field-of-view (FOV) remain visible. You'll need a constant for the x FOV and a constant for the y FOV.
</p><p>As an example, let's assume we're working in 640x480 resolution and we want a FOV of 60 degrees. We've seen a diagram of
3d projection from the side view. For this, let's look at this
top view of the projection space instead:<br>
<img src="http://www.extentofthejam.com/pseudo/images/TopView.png"><br>
One way to think about the problem is that if an object is at the right edge of our FOV, it needs to appear on the screen
at x=640 (since we're at 640x480). Looking at the chart, our FOV can be split into two right triangles where the angle
of each is fov_angle/2 (a/2). And since our FOV is a cone, an object is on the right edge of its FOV if its x=R*sin(a/2) and
z=R*cos(a/2), where R is any radius value we want. We might as well make R=1. And we need the object to appear at
x_screen=640.
That gives us this (starting from the basic projection formula):
</p><p><code>
	x_screen=640 &nbsp; fov_angle=60 &nbsp; y_world=sin(60/2) &nbsp;  z_world=(60/2) &nbsp;  x_resolution/2=320 &nbsp;  scaling=?<p>
	
x_screen = (y_world*scaling)/z_world + (x_resolution/2)<br>
640 = (sin(30)*scaling/cos(30)) + 320<br>
320 = tan(30)*scaling<br>
320/tan(30) = scaling</p><p>
In generic terms: scaling = (x_resolution/2) / tan(fov_angle/2)
</p></code>
</p><p>
We've replaced a/2 by 30 (half of 60 degrees), recognized that sin/cos = tan, and voila! We should be able to test this
by placing an object at the right edge of the field-of-view, plugging these values into the original projection equation,
and ensuring that the X value winds up as 640. For example, an (x, z) point at (20, 34.64) will wind up at X=640 because 20 is
40*sin(30) and 34.64 is 40*cos(30).
</p><p>
Note that you'll have different FOV values for horizontal (x) and vertical (y) for a standard or widescreen monitor that's in
horizontal orientation.

</p><p><u><b>A More Accurate Road - Using a Z Map</b></u><br>
What we want to do to fix our perspective problem is to precompute a list of distances for each line of the screen.  In short, the problem is how to describe a flat plane in 3d. 
To understand how this works, first think of the 2d equivalent: a line!  To describe a horizontal line in 2d, you would say that for every (x, y) coordinate the y is the same. 
If we extend this into 3d, it becomes a plane: for every x and z distance, the y is the same!  When it comes to a flat horizontal surface, it doesn't matter how far from the camera it is, the
y is always the same.  Likewise, it doesn't matter how much to the left or right the point is, the y will still be the same.

Back to figuring out the distance of each line of the screen:  let's call this a Z Map.  Calculating the Z Map is just a matter of rearranging the 3d 
projection formula to find a Z value for each screen Y!
</p><p>
First, take the equation from the last section:
</p><p>
<code>
Y_screen = (Y_world / Z) + (y_resolution / 2)
</code>
</p><p>
Now, since we're given Y_screen (each line), juggle the equation so that we're finding the Z:
</p><p>
<code>Z = Y_world / (Y_screen - (height_screen / 2))</code>
</p><p>
Y_world is basically the difference between the ground and the camera height, which is going to be negative.  This is the same for each line because, as described in the introductory paragraph,
we're interested in a flat road for the time-being.  
In addition to looking much more accurate and avoiding the "oatmeal effect", it has the advantage that it is easy to compute what the maximum draw distance is.  
</p><p>The road is mapped onto the screen by reading through this buffer:  For each distance, you must figure out what part of the road texture belongs there by noting how many units each stripe or pixel of the texture take up.  
</p><div><p> 
Though we now know the distance of each row of the screen, it may also be useful to cache either the width of the road or scale factor for each line.  The scaling factor would just be the
inverse of the distance, adjusted so that the value is 1 on the line which the player's car graphic spends the most time.  This can then be used to scale sprites which are on a given line, or to
find what the width of the road is.  
</p><a name="curves">
<u>
</u></a></div><h2><a name="curves"><u>Curves and Steering</u></a></h2><a name="curves">
</a>

<p><u><b>Making it Curve</b></u><br>
To curve a road, you just need to change the position of the center-line in a curve shape.  There are a couple ways to do this.  
One way is to do it the way the Z positions were done in "The Simplest Road": with three variables.  That is, starting at the bottom of the screen, the amount that the center of the road shifts left or right per line steadily increases.  Like with the texture reads, we can refer to these variables as the center line (curve) position, the curve velocity, and the curve acceleration.
</p><p>There are some problems with this method though.  One is that S-curves are not very convinient.  Another limitation that going into a turn looks the same as coming out of a turn: The road bends, and simply unbends. <br>
</p><p>To improve the situation, we'll introduce the idea of road segments.  A road segment is a partition which is invisible to the player.
Think of it as an invisible horizontal divide which sets the curve of the road above that line.  At any given time, one of these segment dividers is at the bottom of the screen and another is travelling down at a steady rate towards the bottom of the screen.  Let's call the one at the bottom the base segment, because it sets the initial curve of the road.  Here's how it works:
</p><p>
When we start drawing the road, the first thing we do is look at the base point and set the parameters for drawing accordingly. 
As a turn approaches, the segment line for that would start in the distance and come towards the player kind of like any other road object, except it needs to drift down the screen at a steady rate. That is, for a specific speed that the player is traveling, the segment divider travels down the
screen at so many lines per frame. Or, if you're using a Z-Map, so many z-map entries per frame. If the segment were to 'accelerate' at the player
the way 3d objects on the track do, the road would swing too wildly.
</p><p>
Let's see how this works. Suppose the segment line for a left curve is halfway down the road and the base segment is just a straight road.  As the road is drawn, it doesn't even start curving until it hits the "left curve" segment.  Then the curve of the road begins to change at the rate specified by that point.  As the moving segment hits the bottom of the screen, it becomes the new base segment and what was previously the base segment goes to the top of the road.

</p><p>Shown below are two roads:  One is a straightaway followed by a left turn, and one is a left turn followed by a straightaway.  In both these cases, the segment position is halfway down the
Z Map (or, halfway down the screen).  In other words, the road begins to curve or straighten halfway down the road, and the camera is entering the turn in the first picture and leaving the turn in the second.

</p><p><img src="http://www.extentofthejam.com/pseudo/images/straight-then-left.png"> <img src="http://www.extentofthejam.com/pseudo/images/left-then-straight.png"> 

</p><p>And this is the same technique and same segment position applied to an S-curve:<br>
<img src="http://www.extentofthejam.com/pseudo/images/left-then-right.png">

</p><p>The best way to keep track of the segment position is in terms of where on the Z Map it is.  That is, instead of tying the 
segment position to a screen y position, tie it to a position in the Z Map.  This way, it will still start at the road's
horizon, but will more gracefully be able to handle hills.  Note that on a flat road that the two methods of tracking
the segment position are equivalent.

<!-- One possibility is that Final Lap does its complex track visuals by using more than two segments. -->
</p><p>Let's illustrate this with some code:
</p><p><code>
<span size="-1">
current_x = 160  // Half of a 320 width screen<br>
dx = 0 // Curve amount, constant per segment<br>
ddx = 0 // Curve amount, changes per line<p>
for each line of the screen from the bottom to the top:<br>
&nbsp;&nbsp;if line of screen's Z Map position is below segment.position:<br>
&nbsp;&nbsp;&nbsp;&nbsp;dx = bottom_segment.dx<br>
&nbsp;&nbsp;else if line of screen's Z Map position is above segment.position:<br>
&nbsp;&nbsp;&nbsp;&nbsp;dx = segment.dx<br>
&nbsp;&nbsp;end if<br>
&nbsp;&nbsp;ddx += dx<br>
&nbsp;&nbsp;current_x += ddx<br>
&nbsp;&nbsp;this_line.x = current_x<br>
end for</p><p>
// Move segments<br>
segment_y += constant * speed // Constant makes sure the segment doesn't move too fast<br>
if segment.position &lt; 0 // 0 is nearest<br>
&nbsp;&nbsp;bottom_segment = segment<br>
&nbsp;&nbsp;segment.position = zmap.length - 1 // Send segment position to farthest distance<br>
&nbsp;&nbsp;segment.dx = GetNextDxFromTrack() // Fetch next curve amount from track data<br>
end if</p></span>
</code>

</p><p>One big advantage of doing the curves this way is that if you have a curve followed by a straightaway, you can see the straightaway as you come
out of the curve.  Likewise, if you have a curve followed by a curve in the opposite direction (or even a steeper curve the same direction), you can
see that next piece of track coming around the bend before you hit it.

</p><p>To complete the illusion, you need to have a horizon graphic.  As the curve approaches, the horizon doesn't change (or scrolls only slightly).  Then when the curve is completely drawn, it is assumed that the car is going around it, and the horizon scrolls quickly in the opposite direction that the curve is pointing.  As the curve straightens out again, the background continues to scroll until the curve is complete.  If you are using segments, you can just scroll the horizon according to the settings on the base segment.

</p><p><u><b>General Curve Formula</b></u><br>
There is one interesting observation we can make about the curve technique detailed in the section "The Simplest
Road".  This observation is more mathematical than the above-material, and can be safely skipped as long as your
graphics engine either does not have to be resolution-independent or is using the "3d projected segments" technique
discussed in the chapter on hills.
</p><p>Looking at the curve example using "Z" from the section "The Simplest Road", we can see that the z-position (or x-position) at a given line is the sum of an increasing series of numbers (e.g. 1 + 2 + 3 + 4).  This is
what's called an arithmetic series, or an arithmetic progression.  Instead of 1 + 2 + 3 + 4, a sharper curve can be produced by adding 2 + 4 + 6 + 8, or 2*1 + 2*2 + 2*3 + 2*4.  The "2" in this case is the 
variable segment.dx from above.  It can also be factored out to get 2(1 + 2 + 3 + 4)!  Now all that has to be done is to find a formula to describe 1 + 2 + ... + N, where N is the number of lines making up the curve.
It turns out that the sum of an arithmetic series is equal to N(N+1)/2.  So, the formula can be written as s = A * [ N(N+1)/2 ] where A is the sharpness of the curve and s is the sum.  This can be further modified
to add a starting point, for instance, the center of the road at the bottom of the screen.  If we call this 'x', we now have s = x + A * [ N(N+1)/2 ].
</p><p>We now have a formula to describe our curve.  The question that we want to ask it is, "given a starting point x and N lines of the curve, what should A be to make the curve reach x-position 's' by the end?"  Juggling
the equation to solve for A gets us A = 2(s - x)/[n(n+1)].  This means that the sharpness of a given curve may be 
stored in terms of the endpoint's X position, making the graphics engine resolution-independent.

</p><div><u><b>Perspective-style Steering</b></u><p>
It's much less interesting looking to have a game in which when you
steer, it only moves the car sprite.  So, instead of moving the player's car sprite, you keep it in the center of the screen and move the road-- more importantly, you move the position of the center-line at the front (bottom) of the screen.  Now, you want to assume that the player is going to be looking at the road always, so make the road end at the center of the screen.  You'll need an angle-of-road variable for this.  So, calculate the difference between the center of the screen and the position of the front of the road, and divide by
the height of the road's graphic.  That will give you the amount to
move the center of the road each line.

</p><a name="sprites">
<u>
</u></a></div><h2><a name="sprites"><u>Sprites and Data</u></a></h2><a name="sprites">
</a>

<p><u><b>Placing Objects and Scaling</b></u><br>
Sprites should be drawn back-to-front.  This is sometimes referred to as the Painter's Algorithm.  To do this, you'll have to note in advance where on the screen each object should be drawn, and then draw them in a different step.
The way I do this is as follows:  As I go through the Z Map while drawing the road, I like to also note at that time which line of the screen each sprite
will be associated with.  If you've kept your sprites sorted by Z, this is trivial:  Each time a new Z Map value is read,
check to see whether the next sprite's Z position is closer to the camera than the current Z Map value, or whether it's
equal.  If so, note that sprite's screen Y position as belonging to the current line.  Then check the next sprite the
same way.  Keep doing this until you take a sprite off the list which has a farther Z position than the current one.
</p><p>The X position of the object should be kept track of relative to the center of the road.  The easiest way then to position
the sprite horizontally is just to multiply it by the scaling factor for the current line (inverse of Z) and add that to the road's center.

</p><p><b><u>Storing Track Data</u></b><br>
When I did my first road demo, I stored the level information as a list of events which would happen at specified distances.  The distances are, of course, in terms of texture position units.  The events would consist of commands to begin and stop curves.  Now, as far as I can tell, the speed at which the road starts and stops curving is arbitrary.  The only rule seems to be that it must correlate to the speed of the player vehicle.
</p><p>If, however, you are using a segmented system, you can just use a list of commands.  The distance that each command takes is equivalent to how
quickly the invisible segment line drifts down the screen.  This also frees you up to create a track format which works on a tile map, for representing
somewhat realistic track geography.  That is, each tile could be one segment.  A sharp turn could turn the track 90 degrees, while a more mild turn
would come out at 45 degrees.

</p><p><b><u>Texturing the Road</u></b><br>
Now, you probably would like a real graphical texture on your road
instead of the alternating lines and such that you have at the moment.
There are a couple ways to do this.  A cheap and easy way to do it is this:  You have a couple of textures for the road (for the alternating line effect).
When each horizontal line of the road is drawn, you stretch the texture to fit the width of that line.  Or, if you can't stretch, pick a line out of one of two complete road
bitmaps (ala Outrunners).
</p><p>
If you want the road to look more accurate, make the Z for each line correspond to a row number on a texture graphic.  Voila!  One textured road!
</p><div><p>However, if you only want strips of alternating color, the answer is even simpler-- especially when using fixed point.  For each Z, make one of the bits
represent the shade of the road (dark or light). Then, just draw the appropriate road pattern or colors for that bit.
</p><a name="hills">
<u>
</u></a></div><h2><a name="hills"><u>Hills</u></a></h2><a name="hills">
</a>

<p>
<u><b>Varieties of Hills</b></u><br>
It seems there are a near-infinite number of ways to produce hill effects.  Hill effects have a wide range of geometric accuracy, with some of the
less accurate techniques being more convincing than others.  Here we will examine two possible methods.

</p><p>
<u><b>Faked Hills</b></u>
<br>After much experimentation, I've come up with a flexible method for faking hills which uses little in the way of
calculations.  Additionally, it accurately tracks objects which are beneath the horizon.  It is a scaling
and warping effect which vertically stretches and compresses the road.   It uses the same addition trick
used to draw the curves to generate the curvature of the hill.
</p><p>
Here's how it's done:  First of all, the drawing loop would start at the beginning of the Z Map (nearest) and stop when it gets to the end
(farthest).  If we are to decrement the drawing position each line by 1, the road will be drawn flat.  However, if we decrement
the drawing position each line by 2, doubling lines as we go, the road will be drawn twice as high.  Finally, by varying the
amount we decrement the drawing position each line, we can draw a hill which starts flat and curves upwards.  If the next drawing
position is more than one line from the current drawing position, the current Z Map line is repeated until we get there,
producing a scaling effect. 
</p><p>Downhills are similar:  If the drawing position is incremented instead of decremented, it will move beneath the last line
drawn.  Of course, lines which are below the horizon will not be visible on-screen-- only lines which are 1 or more pixels
above the last line should be drawn.  However, we'll still want to keep track of objects which are beneath the horizon.  To
do this, note the screen Y position of each sprite as the Z Map is traversed. 
It may help to make the Z Map larger
than needed for a flat road.  This way, as the buffer stretches, it won't become too pixellated.

</p><p>Now, we have to move the horizon to convince the player.  I like to 
use a Lotus-style background in which the horizon doesn't just consist 
of just a skyline, but also a distant ground graphic.  When the hill curves
upwards (elongating the view), the horizon should move downwards slightly relative to
the top of the road.  When the hill curves downwards as the camera crests
the hill (shortening the view), the horizon should move upwards.
</p><p>
This is what the effect looks like for a downhill and an uphill-- minus the horizon graphic of course:</p><p>
<img src="http://www.extentofthejam.com/pseudo/images/downhill1.png">
<img src="http://www.extentofthejam.com/pseudo/images/uphill1.png">
</p><p>
<b>Pros</b>
</p><ul>
<li>Inexpensive in terms of calculations: No multiplies or divides necessary
</li><li>Objects on the back side of the hill are tracked
</li><li>The view's angle appears to follow the player over hills
</li></ul>
<b>Cons</b>
<ul>
<li>Accurate 3d geometry is impossible
</li><li>Tweaking is required to create a convincing effect
</li></ul>

<h2><a name="wrapup"><u>Wrap-up: Taking Raster Roads Farther</u></a></h2>
These accumulation-style curve formulas can be used verbatim if you don't need crazy curves or huge, rolling hills. Many games which use these
kinds of tricks scroll the road so fast that even a slight curve can be convincing.
<p>However, you may want to exaggerate
the effect in order to get a more dramatic road. One thing that can be done with any of these curve formulas
is to use high ddx or ddy values, but not allow dx or dy to exceed a sane value. And a user on YouTube, Foppygames,
has discovered another trick for getting more severe curves out of these accumulation formulas: multiply the dx or dy value by the 
z value for each line! This makes the curve more severe in the distance than it is in the foreground, and it creates 
a <a href="http://www.youtube.com/watch?v=mL5yJ5K13po">pretty convincing effect</a>.
</p><p>And, the experimentation doesn't stop there. In fact, the best thing about these engines is that there's no "right" way of doing it. Anything
that creates curves and warpage which is pleasing to the eye is allowed! In my earliest road engines, I used a sinewave lookup table to bend the
road.
</p><p>You can also use multiplication: To shift the road right, you might multiply the x position by, for example, 1.01 each line.
To move it left the same amount, you'd multiply it by 0.99, or 1/1.01 (reciprocal of 1.01). However, armed with the knowledge
that many old processors did not have multiplication or were slow at it, I settled upon using
the accumulation technique because it only uses addition. It seemed the most likley "authentic" way of curving the road.
</p><p>
Some games, like OutRun, even use a simple spline system-- at least judging by the great reverse-engineered open-source C++ port,
<a href="http://reassembler.blogspot.com/p/cannonball-open-source-outrun-engine.html">Cannonball</a>.
</p><p>So, play around and experiment, and see what technique you like best!
</p><div><p>...or, read on for a description of a clever trick that mixes 3d polygons, is nearly as fast, is even more convincing, 
and can be displayed with the same oldschool raster hardware. Intrigued?




</p></div><h2><a name="proj3d"><u>True 3d-Projected Segments</u></a></h2>
<p>
<b><u>3d-Projected Segments vs. Raster Roads</u></b><br>
As nice as raster roads are, they can be made even more impressive by involving a simple form of polygon rendering. This form of rendering
can actually be pulled off using the same limited raster hardware. However, it involves more calculations.
</p><p>
This trick is known to have been used in games such as <b>Road Rash</b> and <b>Test Drive II: The Duel</b>. Here's what it is: The track is
made of polygonal segments. However, rather than moving in full 3d space, it still only moves towards the camera. For curves, the road still
just skews left and right in almost an identical way to the raster road: There is no actual rotation when going around
curves as there would be in a full polygonal engine.
</p><p>Here's a rundown:
</p><ul>
<li>Since we are still faking curves and road angles, that means expensive rotation calculations still won't be needed
</li><li>The road is essentially a strip of quads: each section of the road is attached to the next section.  This means
we can calculate whether part of the road is visible or not based solely on its screen Y position relative to its previous neighbor.
</li><li>The relationship of these quads to one another will never change.  That is, the angle never actually changes, so
the quads are always and automatically sorted by Z.
</li></ul>

<p>
<b><u>The Basic 3d Road</u></b><br>
First, break the road into polygonal quads. Each of these will be called a segment. Just like a segment in a purely raster
road, each segment here still has a curve amount (ddx), and either a hill amount (ddy) or a y-position that determines how high
up it is. Of course, these can also have other attributes as well such as terrain changes.
</p><p>
Pictured below is a segmented road made of very few polygons so we can easily see the boundaries between the segments and how
it affects the curvature of the road:<br>
<img src="http://www.extentofthejam.com/pseudo/images/SegmentedRoad.png">
</p><p>
When rendering, first find the screen y location of each 3d segment by using the screen_y = world_y/z formula.  Or, if division
is too slow,
you could find the height off the ground of a given segment by multiplying the segment's height by the scaling factor for that
line. That could then be subtracted that from a reverse z-map (this map would be: for every z position of a flat road, what is the 
y?) to find
the final position on screen.
</p><p>
Then, you would
linearly interpolate the road widths and texture (if desired) between these heights.  Deciding which 3d segments to draw and which not to can be
determined easily:  From the front of the screen back, a 3d segment whose screen_y is projected as lower than the last-drawn 3d segment would not be shown (however, its sprites may still be visible because they stick up-- keep that in mind).
</p><p>
<u><b>Scrolling the Road</b></u><br>
Now, we also need to learn how to scroll these segments. Move the entire mess of polygons which make up the road towards the camera. As the frontmost segment's polygon passes through the camera, move the entire road back to its starting point so that it loops. 
This is akin to how a scolling 2d tilefield can be made by scrolling up to one tile-worth, and when that is hit all the tiles are
shifted over and new tilemap data is pulled in. In this, we scroll up to one segment-worth, and when that is hit, we move the road
back and pull in new road data.
</p><p>
But there is one last very important detail: Let's say the road is a sharp curve. You might have noticed that as
you go around this polygonal curve that it jitters as you cross the segment boundary and the road is subsequently reset. One obvious thing that is happening to cause this is that
as you traverse a skewed segment, the camera's center relative to the road changes. That is, by the time you get to the end of that segment, the road is no longer centered.
It's as if you're driving on the road at an angle. 
You might be tempted to fix it by moving the road to center it just as objects' x-positions are linearly interpolated.
</p><p>However, this is <b>wrong</b> and does not completely solve our problem: If the road were skewed in a straight line, this would be fine. The problem is that our road curves, so the polygons in the distance still are not lined up! Another way to think about it is this: We are approximating a curve using polygonal segments. We want the shape of the curve to be 
more or less constant even as it scrolls.
</p><p>Jake over at <a href="http://www.codeincomplete.com/">codeincomplete.com</a> has a <a href="http://codeincomplete.com/posts/2012/6/24/javascript_racer_v2_curves/">great solution</a> for this. Instead of changing the x position as the road as you move across the segment, what about changing the
initial dx value from 0 to something that keeps the road in line as you move through the segment? The formula used is this:
</p><p>
<code>
	dx = -percentage_of_segment_traversed * ddx</code>
</p><p>The percentage of the segment has to go from 0 to 1.0 and back as the camera crosses the segments.
</p><p>In mathematical terms, doing this makes the X of the road a function of its Z. In other terms, we're keeping the curve the same shape regardless of how the points which
approximate it scroll. The frontmost segment is "pulled into position" with the rest of the road, which then means that the subsequent
segments' X position are placed correctly. You can see this clearly if you test it with a road made of few polygons. It solves the following problems as the segment is traversed (assuming the curve's shape
does not change):
</p><ul><li>It keeps the center of the road (x position) constant
</li><li>It adjusts dx so that the next segment starts at an appropriate x-location regardless of the scroll position of the road
</li></ul>
<p>This video demonstrates the technique. I've used very few segments and a very sharp curve to demonstrate how this looks. Notice
that as the polygons move towards the player that they carve out a perfect curve shape. This is most apparent if you watch the
right side of the road.
</p><p>
<iframe width="420" height="236" src="http://www.youtube.com/embed/E1PEOg50Zn4?rel=0" frameborder="0" allowfullscreen=""></iframe>


</p><p>
<u><b>Placing Sprites</b></u><br>
The sprites on that 3d segment would still need to be shown and properly cropped, however-- assuming you're making a custom
renderer and not using a Z-buffer.  We can actually draw the sprites as the last step:  If a sprite is on a segment which is completely visible, 
it does not need to be cropped since it sticks straight up from the ground, which is our only polygon.
</p><p>But if a sprite
is on a segment which is either not visible or partially visible, we can easily crop it.  First, find the
top of the sprite.  Then, every line of the sprite will be drawn until it hits the last visible segment's screen Y position.
That is, if there is a segment behind the sprite which is supposed to cover part of it,  you stop drawing the sprite when you hit 
that line. And if the top of the sprite is below the last segment's Y position, the sprite 
won't be visible at all and will be skipped.

</p><p>
<u><b>Variations and Rendering Technologies</b></u><br>
Now, since we're throwing around the term <i>polygon</i>, you may be tempted to think that you need polygonal rendering routines
to pull this off. Using technologies like OpenGL or a simple trapezoidal drawing routine definitely do work. But even tile and
sprite-based 2d hardware are perfectly capable of pulling this off. 
</p><p>
Observe that each road segment's beginning and end are perfectly horizontal. This means that they always start and end on a specific
scanline. Much the way the purely pseudo-3d road is rendered on tile hardware by scrolling the flat road graphic as it's being
drawn, we can do exactly the same with these 3d segments. For further reading, check out the section called <u>Dedicated
	Road Hardware</u>. Though it discusses arcade hardware designed from scratch to draw road effects, the same technique
can be achieved with basic 2d sprite-tile systems through scrolling the road graphic vertically as well as horizontally.

</p><p>
<u><b>Further Reading on 3d-Projected Segments</b></u><br>
Since my mock-up of this specific variation is underdeveloped, I will point you to <a href="http://codeincomplete.com/posts/2012/6/23/javascript_racer_v1_straight/">Code inComplete's amazing tutorial</a> if you're interested in further details on this technique.
</p><p>
<b>Pros</b>
</p><ul>
<li>Real 3d geometry can be used for the hills, adding greatly to the amount of detail possible
</li><li>The system is more consistent: Terrain and road width changes don't need to be done using a separate technique
</li></ul>
<b>Cons</b>
<ul>
	<li>There are more calculations involved
	</li><li>A decent number of segments must be used or the road will look jagged and polygonal
</li></ul>


<h2><u>Enhancements</u></h2>
<p><u><b>Multiple Roads</b></u><br>
Most arcade racing games handle multiple roads at a time.  Though the most obvious reason to do this is to have more than one road on the screen at a time,
other effects can be achieved as well.  For example, OutRun uses more than one road to form its six lane freeway.  This lets the game widen and narrow
the road easily, as well as convincingly fork.  They do this by overlapping the two roads and giving one drawing priority over the other.  Here is the
familiar beginning of OutRun both with and without two roads (look to the right of the bushes):
</p><p><img src="http://www.extentofthejam.com/pseudo/images/or-road1.png"> <img src="http://www.extentofthejam.com/pseudo/images/or-noroad1.png">
</p><p>And, even more dramatic, below is the freeway after the two roads are overlapped to form six lanes, both with and without the second road:
</p><p><a name="enhancements"><img src="http://www.extentofthejam.com/pseudo/images/or-road2.png"> <img src="http://www.extentofthejam.com/pseudo/images/or-noroad2.png">

</a><a name="related">
<u>
</u></a></p><h2><a name="related"><u>Related Effects</u></a></h2><a name="related">
<p><u><b>Endless Checkerboard</b></u><br>
The endless checkerboard in the arcade game Space Harrier is just a variation on the road technique.  Like
a road, the game contains graphics of lines coming at the player in perspective.  In fact, Space Harrier
uses the same hardware as Hang-On.
</p><p>
 Pictured below is the Space Harrier checkerboard effect with and without the palette changes.  To turn this
into a checkerboard, all that has to be done is to flip the color palette every few lines.  Think of it as analogous to the 
light and dark strips on a road.
</p><p>
<img src="http://www.extentofthejam.com/pseudo/images/sh-pal.png"> <img src="http://www.extentofthejam.com/pseudo/images/sh-nopal.png"><br>
 
</p></a><p><a name="related">
So, how then does it scroll left and right?  This is just a variation on perspective-style steering:  As the
player moves to the left or right, the ground graphic is skewed.  After a few pixels have scrolled past, the ground
"resets" or "wraps" its position.  This is how it appears to scroll endlessly to the left and right.
</a><a name="hw">
<u>
</u></a></p><h2><a name="hw"><u>Case Studies</u></a></h2><a name="hw">
<p>
<u><b>Dedicated Road Hardware</b></u><br>
Although there are many ways to render roads, it is interesting to note that many arcade games used hardware designed for this specific purpose.
These chips automate the basics of road drawing, but not the road calculations themselves.  As a typical example, I will take Sega's OutRun road
chip, used in games such as Super Hang-on, Outrun and Space Harrier.
</p><p>First off, the chip has its own graphics memory.  What is stored in this road ROM is nearly a perspective view of the road, given that it is flat,
centered, and not curving.
Then, for each line of the screen, the programmer specifies roughly which line of the perspective graphic to draw there.
Each line also has an X offset (for curving the road) and each line can also have a different color palette (to draw road markings and simulate movement). 
To show an example, here are some images taken from Sega racing game road graphics side-by-side with the road as seen in-game 
(special thanks to Charles MacDonald for his road viewing application):

</p><p>The first thing you might notice is that the road graphics are much higher resolution than the in-game graphics.  In these particular
games, the road is up to 512x256 resolution while the game's display resolution is only 320x224.  This gives the graphics engine plenty
of graphic to play with, which cuts down on the amount of jaggies.  Another thing which might pop out at you is that the perspective of
the road stored in the ROM is completely different from the perspective shown in-game.  This is because the graphic in the ROM merely
stores what the road might look like for various road widths.  It is the job of the program to select the correct lines out of this
large graphic for each line of the screen.
</p><p>The hardware supports two
roads at a time, and so you can assign priority to the left or right road.  This is for the parts of the game in which the road branches,
or when there is a center divider between lanes of traffic.
</p><p>For you ROM hackers out there, check out MAME's src/mame/video/segaic16.c and src/mame/video/taitoic.c files for examples of road chips.
Note that the Sega road graphics are stored in a 2-bit planar format, with the center of the graphic able to sport a fourth color (this
is the yellow line shown in the graphics above).  
<!-- <P>I mentioned that only the drawing is taken care of by the road chip, but not the technique.  A dramatic illustration of this is the difference
between Chase H.Q. and Top Speed.  Both of these games run on the same hardware with the same road chip, but Chase H.Q. is much more convincing.
Top Speed's hills for example look to be less accurate, and there are sprite clipping issues at times.  Also see MAME's src/mame/video/taitoic.c file
for a more detailed explanation of this specific road chip. -->



</p><p>
<u><b>Enduro</b></u><br>
Enduro is a remarkable game.  Released in 1983 for an incredibly
underpowered 70's gaming console, Enduro still manages to produce a
convincing road effect complete with changing weather and day-night
cycles.  On top of that, it manages to be an exciting game even 
25 years after its release!

</p><p>
<img src="http://www.extentofthejam.com/pseudo/images/enduro-2.png" width="50%"><br>Screenshot of Enduro
</p><p>As you can see here, Enduro looks a little different from other
road engines we've seen so far.  Immediately apparant is that the
road is only drawn in outline:  The terrain to the sides of the road are not drawn
in a different color from the pavement.  There are also no roadside obstacles.  
Once you start to play Enduro, you might also notice that the road doesn't move in
perspective.  Instead, the player car sprite and road both shift left and right 
to give the illusion of steering.

</p><p>In order to better understand why Enduro looks the way it does, 
let's take a peek at the Atari 2600's limitations.  The Atari 2600 was designed
primarily to play Combat-like games (tank games) and Pong-like games.  So,
it was capable of displaying: two sprites, two squares representing missiles 
for each player, a square representing a ball, and a very blocky background.  And that's it.  

</p><p>But what's notable about the Atari's video hardware is that it's essentially
one-dimensional:  the software must update the graphics for each scanline itself.  For
example, to show a sprite, the programmer has to upload a new line of
graphics to display at the beginning of each scanline.  To draw the ball
object, the programmer would turn on the ball when the TV's beam got to the right
line, and turn off the ball when the beam got to a line where the ball should 
no longer be visible.

</p><p>This leaves an important side-effect:  a solid vertical line can be drawn down the screen by turning on
the ball or missiles and then never turning them off!  If the programmer moves
these objects each line, diagonal lines may be drawn.  

</p><p>Now, back to the task at hand.  We could draw the road using the background
blocks, but the resolution is much too low to be effective.  What Atari driving
games did instead was use the two missile or ball graphic objects to draw the left
and right sides of the road, much in the same way they can be used to draw
lines.  Enduro in particular uses the first player's missile sprite and the
ball sprite in order to draw the left and right sides.  Pole Position, on the other hand, uses
both missile sprites for the sides of the road and then uses the ball sprite
to draw a dotted line down the center.

</p><p><br>
<img src="http://www.extentofthejam.com/pseudo/images/polepsn.png" width="50%">
<br>Screenshot of Pole Position on 2600 for comparison

</p><p>One thing I haven't discussed is how you move objects per-line on an Atari 2600.  The
Atari's graphic chip has a facility called HMOVE (horizontal move).  This allows the
programmer to set up moves each line for all the different objects very easily.  All the
programmer has to do is set how many pixels to move for the various objects, and then call
HMOVE and voila-- they all move according to what was set!

</p><p>Enduro exploits this in order to draw curves.  In short, what Enduro does create a
table in memory of how the HMOVE values of the left and right sides vary as the screen
is drawn.  This uses almost half of the Atari 2600's available memory.  Since the Atari's
memory is so tiny, this value is only read every 4 lines.  There is a different table for
the left and the right sides of the road. 

</p><p>When the road is straight, the array for the right side of the road is all 8's.  The
HMOVE only uses the upper 4 bits, so 8 loaded into HMOVE wouldn't move the sides
of the road at all.  The lower 4 bits are used for a crude form
of fixed point.

</p><p>As an example, here's what a curve looks like in memory as it approaches (the
horizon is the end of the array):<br>
<code><span size="-1">
08,08,08,08,08,08,0a,0a,0b,0c,0e,0d,0e,0e,0f,10,13,11,12,13,14,17,16,17
</span></code>

</p><p>And the next frame:<br>
<code><span size="-1">
08,08,09,09,0a,0a,0b,0b,0c,0d,0d,0e,0f,0f,10,11,12,12,13,14,15,16,17,18
</span></code>

</p><p>Note that the higher curve values progressively write over the lower values, shifting
down towards the front of the screen to provide the illusion that the curve is coming towards
the player.  And what does
Enduro do with this data?  Here's some of the code used to write out the curve for the
right side of the road
</p><p>
For each scanline of the road:<br>
<code><span size="-1">
LDA $be      ; Load what's in address $be<br>
AND #$0f     ; Blow away the upper 4 bits (the bits HMOVE uses)<br>
ADC $e4,x    ; Add the value from the curve table (X is how far towards the front of the screen we are)<br>
STA $be      ; Save the value again (so we can load it again next scanline like we did above)<br>
STA HMBL     ; Also shove it into the Horizontal Motion - Ball register<br></span>
</code>

</p><p>
So what's this doing?  Well, $be is a counter for the curve amount which increments.  When it's loaded, the upper 4 bits are tossed
overboard, leaving a range of 0 to 16 ($0-F).  Then, the curve table entry for that particular scanline is loaded and added in.
Finally, it's stored back to the counter and also loaded into the horizontal move register for the ball object (the right side of the road).

</p><p>
This does a few things.  First, it only results in the sides of the road moving every two lines when the road is straight:  If the array is
all 8s and $be contains 0 on the first line, the next line will contain 8 (the upper nybble is still 0).  The next line after that will
contain $10.  But when $10 is loaded back into the register A on the next scanline, the upper nybble is discarded leaving 0 again!  This
causes the counter to flip between $10 and 8.  Since the HMOVE values only use the upper 4 bytes, the line moves 0 positions or 1 positions
alternating.

</p><p>
OK, but what if the array is all 9s instead of 8s?  Here's what happens:  On the first scanline, 9 is stored into the ball HMOVE register and
written back to the counter.  The next line, 9 is again added to the value from the table making $12 (18 decimal).  This will move the ball
by 1 (upper 4 bits is 1).  On the line after that, the upper nybble is discarded leaving 2.  Adding 9 from the table makes $B.  Let's look
at one more scanline.  B is loaded.  There is no upper nybble.  Adding 9 makes $14 (20).  

</p><p>The sequence described above is 09,12,0b,14.  This is still only going to cause the ball to move every other line for these 4 lines.
But, eventually the lower nybble is going to become high enough that it will cause the routine to move the ball sprite left two lines
in a row.  The pattern will then wrap, but after a few more lines, the side of the road will move two lines in a row again.  In essence, this
is a simple and blazing fast form of fixed point math.

</p><p>There is another hurdle in implementing a road system on such limited hardware:
positioning sprites.  On more sophisticated systems, sprites can be positioned horizontally on the
road as a percentage of the road width.  But this requires either fixed point or floating point
multiplication, both of which are extremely slow on a 6502.  In contrast, Enduro only has three possible
positions for the cars, which saves some calculation.



</p><p>
<u><b>Road Rash</b></u><br>
Road Rash and 3do Road Rash both have amazing graphics engines.  The original Genesis version of the game pulled off
a relatively accurate 3d sensation on the Genesis' 7.25mhz 68000 processor, complete with realtime scaling of the
roadside objects.  The 3do follow-up is no less fascinating, as it turns out to be a mixture of 3d and pseudo
technique artistically combined to give the player an amazing sensation of speed.
</p><p>
As I mentioned above, both the Road Rash and 3do Road Rash engines are a mixture of 3d and pseudo 3d trickery.  They use
a technique similar to the one described in the "Realistic Hills Using 3d-Projected Segments" chapter in which the
hills are in 3d space, but the road's curves are not.
Road Rash's curves use the same method described in this
article, and each road segment has its own DDX or "x acceleration" value.  Each segment also has a height
which is relative to the last segment's height.  There are roughly 50 segments
on-screen at once.
</p><p>But where the 3do Road Rash is really interesting is that the programmers added warping which increases the sensation of speed that the player experiences:
Objects far from the camera move more slowly, and objects near the camera move
more quickly.
</p><p>
The 3do Road Rash also adds polygonal 
roadside objects whose X coordinates are still relative to the road.  These are
used to create hills, buildings, and other relatively complex scenery.  
This uses a fair amount of data, so the geometry and textures both are
streamed from
the disc as the track is traversed.

</p>
<u><b>S.T.U.N. Runner: Arcade vs. Lynx</b></u><br>
S.T.U.N. Runner was a marvelous game when it debuted at arcades in 1989. It made great use of fully 3d filled polygon technology, 
allowing the player to take control of a futuristic race craft barreling down twisting, turning corridors at breakneck speed. 

Not long after,
I saw a version for the Atari Lynx. The Atari Lynx was a handheld system which came out about the time of the original Game Boy. Like the
Game Boy, it had a 4MHz 8-bit processor. So, the port was horrible, right? Well, check out the footage below:
<p>
<iframe width="420" height="236" src="http://www.youtube.com/embed/_7tv5gtjun8?rel=0" frameborder="0" allowfullscreen=""></iframe>


</p><p>Actually, the port was fantastic! It came close to perfectly capturing what made the arcade game so thrilling. With Game Boy-era portable hardware,
how on earth was it done? 
</p><p>It turns out that the Lynx had one important weapon in its arsenal: hardware scaling. But this isn't a huge help in rendering
polygonal graphics. It turns out that it wasn't just the Lynx that had some tricks up its sleeve: The author who ported it had some tricks of
his own.

</p><p>To recreate the speed of the arcade machine, the Lynx version of S.T.U.N. Runner resorted to a pseudo-3d road engine. The polygon slices that make up the tunnel walls are
actually sprites.  These are essentially trackside objects which are glued to the road, much like the roadside objects in any other pseudo
3d racing game, and are drawn using the painter's algorithm (back-to-front). This convincingly creates the illusion of polygon graphics while still playing to the strengths of the hardware. And to save
space on the cartridge, one sprite wasn't a full ring of the tunnel graphic. Not only does this save on the number of blank, transparent pixels, but it's arranged
so that horizontal flipping of the graphics hardware could be used.

</p><p>One interesting problem that the author had to solve was when the tunnel branches. You can also see this in the video above. The 
branching tunnel is actually a big sprite which
scales at the player. After the player has chosen their new path, the split graphic goes away. According to the author, sometimes you can
spot vehicles driving right through this sprite!

</p></a><p><a name="hw">If you're interested in reading more, the conversation on AtariAge with the original author can be found </a><a href="http://atariage.com/forums/topic/194231-lynx-stun-runner-3d-techniques/">here</a>.



</p><p><a name="hw">
<u><b>Roads on the Commodore 64</b></u><br>
This information is courtesy of </a><a href="http://caspianit.co.uk/index.cfm">Simon Nicol</a>, who figured out a great technique for fast roads
on the C64.
</p><p>
First, some background:  On many console systems, a pseudo-3d road can be done by drawing a straight road with tiles and scrolling per-line to make it appear to curve.  However, this turned
out to be too slow for a full-framerate game on the Commodore 64.  
</p><p>Simon's engine instead uses C64's bitmap mode and uses a fast-fill algorithm.  His fast-fill algorithm uses self-modifying code to speed up draws:  Each line is a series of per-pixel
stores which specify an address in video memory.  
At the point though that the color has to change, the code is altered.  The store command is turned into a load command, and what was the address for the store is turned into 
the literal number of the new color.
</p><p>One major advantage of this technique is that sprite multiplexing techniques to show more than eight sprites on the screen can still be used.  In Simon's words:
"Offsetting the horizontal scroll to get a stable raster effect would involve manipulating register $D011.  
The raster IRQ at $D012 would flicker badly otherwise depending on the number of sprites 
on that particular raster line.  To have any sort of smooth display would involve locking up the processor to get the timing just right, or by not using the screen graphics and just changing the 
border colour.  This which would be solid and flicker free, but there wouldn't be road visible on the screen because it would have to be switched off. 
These smooth, per-line border colour changes were used 
chasing the raster down the screen, and it could also be used to 'hold off' where the top of the screen could be displayed. It was called $D011 hold-off or sometimes FLD for flexible line distancing
(the technique used to eliminate VIC's bad lines).

</p><p>
<u><b>Other Engines</b></u><br>
</p><p>
<b>Power Drift</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/pdrift_a.png"><img src="http://www.extentofthejam.com/pseudo/images/pdrift_b.png"><br>
Power Drift is interesting because it is one of the few games I know of which use sprite-based 3d.  Each chunk of the track is a small sprite blob,
and the flyby is Sega's way of showing it off.  I don't have proof, but I believe games such as F1 Exhaust Heat and RadMobile use a similar system.
It is also worth noting that the deluxe cabinet of Power Drift tilted almost 45 degrees, making it somewhat important to wear that seatbelt for once.
Screenshots from system16.com.
</p><p>
<b>Racin' Force</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/rforce_a.jpg"><img src="http://www.extentofthejam.com/pseudo/images/rforce_b.jpg"><br>
Racin' Force was reverse-engineered by the intrepid Charles MacDonald.  Racin' Force runs on the Konami GX board, which features a daughterboard 
with a voxel engine capability.  This hardware is based upon older hardware which could only draw a SNES mode 7-like floormap.  It was extended
to do a heightmap through this clever technique:  It projects not just the tilemap onto a flat 3d plane, but also the height information for
each pixel onto its own separate 3d plane.  Then, for each pixel of the screen, it looks up the height information on the projected heightmap, and extrudes each pixel
upwards as necessary.  Screenshots from system16.com.
</p><h2><u>Further Exploration</u></h2>
Here are some sites which may be useful for learning more about pseudo 3d roads:<br>
<ul>
	<li><a href="http://reassembler.blogspot.com/p/cannonball-open-source-outrun-engine.html">Cannonball: Open source OutRun port</a>
	</li><li><a href="http://www.extentofthejam.com/pseudo/codeincomplete.com/posts/2012/6/23/javascript_racer_v1_straight/">Code inComplete JavaScript Racer</a>
</li></ul>



<a name="stuff">
<u>
</u></a><h2><a name="stuff"><u>Code Stuff</u></a></h2><a name="stuff">
</a>
<b><u>Formulas and Tips</u></b><p>
<b>3d Projection</b><br>
<code>
	y_screen = (y_world*scale / z) + (screen_height &gt;&gt; 1)<br>
</code>
or:<br>
<code>
z = (y_world*scale) / (y_screen - (screen_height &gt;&gt; 1))<br>
</code><br>
This formula takes the x or y world coordinates of an object, the z of the object, and returns the x or y
pixel location.  Or, alternately, given the world and screen coordinates, returns the z location.
</p><p>
The scale determines the field-of-view (FOV), and can be found by:
</p><p><code>
	scale_x = x_resolution/tan(x_angle/2)<br>
	scale_y = y_resolution/tan(y_angle/2)
</code></p><p>
<b>Fast Linear Interpolation</b><br>
<code>
  o(x) = y1 + ((d * (y2-y1)) &gt;&gt; 16)
</code><br>
This assumes that all the numbers are in 16.16 fixed point.  <b>y1</b> and <b>y2</b> are the two values
to interpolate between, and <b>d</b> is the 16-bit fractional distance between the two points.  For example,
if <b>d</b>=$7fff, that would be halfway between the two values.  This is useful
for finding where between two segments a value is.
</p><p>

<b>Fixed Point Arithmetic</b><br>
Floating point is very expensive for old systems which did not have specialized math hardware.  Instead, a 
system called fixed point was used.  This reserved a certain number of bits for the fractional part of the number.
For a test case, say you only reserve one bit for the fractional amount, leaving seven bits for the whole
number amounts.   That fraction bit would represent one half (because
a half plus a half equals a whole).  To obtain the whole number value stored in that byte, the number is shifted
right once.  This can be expanded to use any number of bits for the fractional and whole portions of the number.
</p><div><p>Fixed point multiplcation is trickier than addition.  In this operation, you would multiply the two numbers and
then shift right by however many bits are reserved for fractions.  Due to overflow, sometimes you may need to shift
before multiplication instead of after.  See "Fast Linear Interpolation" for an example of fixed point multiplcation.
</p><p>

<b>Point Rotation</b><br>
<code>
x' = x*cos(a) - y*sin(a)<br>
y' = x*sin(a) + y*cos(a)<br>
</code>
Mentioned briefly in the tutorial as being an expensive operation, here is the basic point rotation
formula.  As you can see, it's at least 2 table lookups, 4 multiplications, and two additions, but the sine and cosine values can be reused for each point.
Rotating for the purpose of hills would mean rotating the Z and Y coordinates, not the X and Y
coordinates.  To find the derivation of this formula, look up <i>Rotation of Axes</i>.
</p><p>

<b>Avoid Division</b><br>
Instead of dividing by the z of an object in the standard projection formulas, you can take advantage of some
properties of the road to speed up calculations.  Say you have a 3d segment z position and a y position, and you
want to find which line of the screen it belongs on.  First, read through the z-map until you get to the 
3d segment's z position.  Then, multiply the height of the segment by the corresponding scaling value.
The result is the number of pixels above the road that the segment belongs. 

</p><p>
<b>Use Z as Scaling Value</b><br>
Scaling routines work by slowing or speeding up the speed at which 
a draw routine reads through graphics data.  For example, if you were
to set the read speed to half, this would draw a sprite double the size.
This is because for each time a pixel is drawn, the read position in the
sprite data is only incremented by half, causing the read position to only
increment by a whole number every two pixels.
</p></div><div><p>Usually, a scaling routine has parameters like x, y, and scaling factor.
But since a scaling factor is just 1/z, we can just reuse the Z value of that
sprite!  We will still need the scaling factor though to determine the
boundaries of the sprite so that we can keep it centered as it scales.


</p><a name="glossary">
<u>
</u></a></div><h2><a name="glossary"><u>Glossary</u></a></h2><a name="glossary">
</a>
<p><b>Bad Line</b> - In the C64's VIC II graphics chip, at the first pixel of every background tile, the VIC takes over the processor to pull in more data such as colors.  Since there are fewer cycles left for a program to do computations, these are refered to as bad lines
</p><p><b>Height Map</b> - A height map is an array of height values.  In a
polygon or voxel landscape engine, this might be a 2d array (think of a 
landscape viewed from the top).
However, in a road engine, a height map would only need to be one-dimensional
(think of a landscape viewed from the side).
</p><p><b>Indexed Color Mode</b> - Older systems which feature few colors on the screen at a time are generally
in indexed color modes.  Some of the most common indexed color modes are the 256-color VGA modes.  In these
modes, each pixel is represented by a byte.  Each byte stores an index value from 0 to 255.  When the screen
is drawn, the index number for each pixel is looked up in the palette.  Each entry in the palette can be one of
VGA's 262,144 possible colors.  In summary, even though only 256 colors can be on screen at a time, the user can
choose each color from a much larger palette.  
</p><p><b>Linear Interpolation</b> - The process of obtaining in-between values from a data set by drawing lines between
the points
</p><p><b>Painter's Algorithm</b> - The <i>Painter's Algorithm</i> is the practice
of drawing overlapping objects from far to near.  This ensures that closer
objects always appear on top of farther ones.
</p><p><b>Planar Graphics Mode</b> - A <i>Planar graphics mode</i> is one in which an N-bit image is made up of N 1-bit images
which are combined to produce the final image.
This is opposed to most graphics modes, sometimes referred to as <i>chunky</i>, in which an N-bit image is made up of
N-bit pixel values.
</p><p><b>Raster Effect</b> - A <i>raster effect</i> is a graphical trick which takes advantage of the scanline-based nature of
most computer, or raster, displays.
</p><p><b>Scaling Factor</b> - The reciprocal of Z.  This gives you the amount by which to scale an object at a given Z distance.
</p><p><b>Segment (Road)</b> - I am using the term <i>segment</i> to mean a position below which the road acts one way, and above a
different way.  For example, the segment could divide a left turn on the lower half of the screen from a right turn on
the upper half.  As the segment makes its way towards the player, the road will appear to snake left then right.
</p><p><b>Segment, 3d (Road)</b> - I am using the term <i>3d segment</i> to mean a horizontal line which has both a Z distance
and a world Y height.  Unlike a vertex, which could be a 3d point, a 3d segment would be a 3d line with the left and right
X-axis endpoints at positive and negative infinity.
</p><p><b>Voxel</b> - A 3d pixel.  Raycast/landscape voxel engines were popularized in the game Commanche: Maximum Overkill.
</p><div><p><b>Z Map</b> - A lookup table which associates each line of the screen with a Z distance.


</p><a name="gallery">
<u></u></a></div><h2><a name="gallery"><u>The Gallery</u></a></h2><a name="gallery">
</a>
Here is a collection of screenshots that show various ways to do unorthodox road engines.  Take a look!
<p><b>Cisco Heat</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/cischeat.png">
<br>The hills in this game come at you like a solid wall.  The turns are also very exaggerated.  The engine seems quite flexible and deals with multiple roads simultaneously, as well as being able to show the height of one road relative to another.
</p><p><b>Pole Position</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/polepos.png">
<br>This is the first smoothly running pseudo game I remember.  Not extremely impressive today graphically.
</p><p><b>Hydra</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/hydra.gif">
<br>This is another Atari shoot em up along the lines of Roadblasters.  It features a very nice jumping effect in which the road layer's perspective tips, causing the closest objects to fall off the screen.  It also nicely projects objects of varying distances above the ground.
</p><p><b>Outrunners</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/outrunner2.png">
<br>This sequel to Outrun is a prime example of rollercoaster-like hills in a racing game.  Everything is quite exaggerated in this, and the result is one of the most blinding fast yet nicely controllable racing games ever.
</p><p><b>Road Rash</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/rash1.jpg">
<br>In the 32-bit generation version of Road Rash, everything was textured and buildings were cleverly drawn next to the roadside, leaving some people with the impression that it was a purely polygonal game running fast on the 3do.  However, the way objects whip around the corners, buildings warp, and that you can't go backwards would seem to give away that it's not really a polygon engine.  The sharp lines on the pavement do hint at some sort of projected segment system though.  The tracks have a lot of detail and variety.
The 16-bit generation Road Rash was also no slouch, also featuring a flexible engine with a tiny bit of faked texuring (but was slow).</p><p><b>Turbo</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/turbo.png">
<br>This predates Pole Position and also features hills and bridges.  The drawback?  There are no transitions from hill to bridge to curve.  This used analog graphics scaling hardware.
</p><p><b>Spy Hunter II</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/spyhunt2.gif">
<br>I don't know what the makers of Spy Hunter II were thinking.  Nice idea, bad execution.  The road effects seem very similar to Turbo's with a little more in the way of transitions.
</p><p><b>Pitstop II</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/pitstop2.gif">
<br>This technique is so quick that on the lowly Commodore 64, people were able to pull off a split screen racing game.
</p><p><b>Enduro</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/enduro.gif">
<br>Enduro demonstrates the use of pseudo 3d on the Atari 2600.
</p><p><b>Enduro Racer</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/enduroracer.png">
<br>Not to be confused with Enduro, this was a sort of 3d Excitebike-like game.  The screenshot shows off the hill technique.  Hills are rather sharp, flexible, but generally don't affect the horizon's position, so I'm guessing interpolated points.
</p><p><b>Lotus</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/lotus.gif">
<br>Lotus comes through with the perfectly curved hill technique.  One interesting thing is that Lotus will draw the road's top below the horizon and then fill the gap with a solid color to imply a downhill.
</p><p><b>Test Drive II</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/tdrive2.gif">
<br>I'm not sure exactly what to make of Test Drive 2's graphics.  While clearly not a polygon racer, it tries very hard to realistically represent a variety of roads.  The game is similar to the Need for Speed series but predates it by several years.
</p><p><b>Speed Buggy</b><br>
<img src="http://www.extentofthejam.com/pseudo/images/speedbuggy.png">
<br>When you steer in this, in addition to shifting the perspective, the road also slides left and right a little.
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How We Centralized and Structured Error Handling in Golang (153 pts)]]></title>
            <link>https://olivernguyen.io/w/namespace.error/</link>
            <guid>42447762</guid>
            <pubDate>Wed, 18 Dec 2024 03:04:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://olivernguyen.io/w/namespace.error/">https://olivernguyen.io/w/namespace.error/</a>, See on <a href="https://news.ycombinator.com/item?id=42447762">Hacker News</a></p>
Couldn't get https://olivernguyen.io/w/namespace.error/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Ergo Chat ‚Äì A modern IRC server written in Go (262 pts)]]></title>
            <link>https://github.com/ergochat/ergo</link>
            <guid>42447071</guid>
            <pubDate>Wed, 18 Dec 2024 00:46:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ergochat/ergo">https://github.com/ergochat/ergo</a>, See on <a href="https://news.ycombinator.com/item?id=42447071">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ergochat/ergo/blob/master/docs/logo.png"><img src="https://github.com/ergochat/ergo/raw/master/docs/logo.png" alt="Ergo logo"></a></p>
<p dir="auto">Ergo (formerly known as Oragono) is a modern IRC server written in Go. Its core design principles are:</p>
<ul dir="auto">
<li>Being simple to set up and use</li>
<li>Combining the features of an ircd, a services framework, and a bouncer (integrated account management, history storage, and bouncer functionality)</li>
<li>Bleeding-edge <a href="https://ircv3.net/software/servers.html" rel="nofollow">IRCv3 support</a>, suitable for use as an IRCv3 reference implementation</li>
<li>High customizability via a rehashable (i.e., reloadable at runtime) YAML config</li>
</ul>
<p dir="auto">Ergo is a fork of the <a href="https://github.com/jlatt/ergonomadic">Ergonomadic</a> IRC daemon &lt;3</p>
<hr>
<p dir="auto"><a href="https://goreportcard.com/report/github.com/ergochat/ergo" rel="nofollow"><img src="https://camo.githubusercontent.com/715dca1ef407679efd095c0f7e6bb84af1a4f3578777ba0e6fee876767360a3b/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f6572676f636861742f6572676f" alt="Go Report Card" data-canonical-src="https://goreportcard.com/badge/github.com/ergochat/ergo"></a>
<a href="https://github.com/ergochat/ergo/actions/workflows/build.yml"><img src="https://github.com/ergochat/ergo/actions/workflows/build.yml/badge.svg" alt="build"></a>
<a href="https://github.com/ergochat/ergo/releases/latest"><img src="https://camo.githubusercontent.com/a7f0ce32dfcb5a49fb515fc9f9c17fbf695f17c1f9453ae88ded4f7be1e45a32/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f776e6c6f6164732d6c617465737425323072656c656173652d677265656e2e737667" alt="Download Latest Release" data-canonical-src="https://img.shields.io/badge/downloads-latest%20release-green.svg"></a>
<a href="https://crowdin.com/project/ergochat" rel="nofollow"><img src="https://camo.githubusercontent.com/1b32d58517ce51950670a25e3273d77513044ac8c502648e76d0afe7e1b8b7d2/68747470733a2f2f64333232637174353834626f346f2e636c6f756466726f6e742e6e65742f6572676f636861742f6c6f63616c697a65642e737667" alt="Crowdin" data-canonical-src="https://d322cqt584bo4o.cloudfront.net/ergochat/localized.svg"></a></p>
<p dir="auto">If you want to take a look at a running Ergo instance or test some client code, feel free to play with <a href="https://testnet.ergo.chat/" rel="nofollow">testnet.ergo.chat</a> (TLS on port 6697 or plaintext on port 6667).</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>integrated services: NickServ for user accounts, ChanServ for channel registration, and HostServ for vanity hosts</li>
<li>bouncer-like features: storing and replaying history, allowing multiple clients to use the same nickname</li>
<li>native TLS/SSL support, including support for client certificates</li>
<li><a href="https://ircv3.net/software/servers.html" rel="nofollow">IRCv3 support</a></li>
<li><a href="https://yaml.org/" rel="nofollow">yaml</a> configuration</li>
<li>updating server config and TLS certificates on-the-fly (rehashing)</li>
<li>SASL authentication</li>
<li><a href="https://github.com/ergochat/ergo-ldap">LDAP support</a></li>
<li>supports <a href="https://crowdin.com/project/ergochat" rel="nofollow">multiple languages</a> (you can also set a default language for your network)</li>
<li>optional support for UTF-8 nick and channel names with RFC 8265 (PRECIS)</li>
<li>advanced security and privacy features (support for requiring SASL for all logins, cloaking IPs, and running as a Tor hidden service)</li>
<li>an extensible privilege system for IRC operators</li>
<li>ident lookups for usernames</li>
<li>automated client connection limits</li>
<li>passwords stored with <a href="https://godoc.org/golang.org/x/crypto" rel="nofollow">bcrypt</a></li>
<li><code>UBAN</code>, a unified ban system that can target IPs, networks, masks, and registered accounts (<code>KLINE</code> and <code>DLINE</code> are also supported)</li>
<li>a focus on developing with <a href="https://ergo.chat/specs.html" rel="nofollow">specifications</a></li>
</ul>
<p dir="auto">For more detailed information on Ergo's functionality, see:</p>
<ul dir="auto">
<li><a href="https://github.com/ergochat/ergo/blob/stable/docs/MANUAL.md">MANUAL.md, the operator manual</a></li>
<li><a href="https://github.com/ergochat/ergo/blob/stable/docs/USERGUIDE.md">USERGUIDE.md, the guide for end users</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Quick start guide</h2><a id="user-content-quick-start-guide" aria-label="Permalink: Quick start guide" href="#quick-start-guide"></a></p>
<p dir="auto">Download the latest release from this page: <a href="https://github.com/ergochat/ergo/releases/latest">https://github.com/ergochat/ergo/releases/latest</a></p>
<p dir="auto">Extract it into a folder, then run the following commands:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cp default.yaml ircd.yaml
vim ircd.yaml  # modify the config file to your liking
./ergo mkcerts
./ergo run     # server should be ready to go!"><pre>cp default.yaml ircd.yaml
vim ircd.yaml  <span><span>#</span> modify the config file to your liking</span>
./ergo mkcerts
./ergo run     <span><span>#</span> server should be ready to go!</span></pre></div>
<p dir="auto"><strong>Note:</strong> See the <a href="https://github.com/ergochat/ergo/blob/stable/docs/MANUAL.md#productionizing-with-systemd">productionizing guide in our manual</a> for recommendations on how to run a production network, including obtaining valid TLS certificates.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Platform Packages</h3><a id="user-content-platform-packages" aria-label="Permalink: Platform Packages" href="#platform-packages"></a></p>
<p dir="auto">Some platforms/distros also have Ergo packages maintained for them:</p>
<ul dir="auto">
<li>Arch Linux <a href="https://aur.archlinux.org/packages/ergochat/" rel="nofollow">AUR</a> - Maintained by <a href="https://github.com/vith">Jason Papakostas (@vith)</a>.</li>
<li><a href="https://packages.gentoo.org/packages/net-irc/ergo" rel="nofollow">Gentoo Linux</a> - Maintained by <a href="https://github.com/thesamesam">Sam James (@thesamesam)</a>.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Using Docker</h3><a id="user-content-using-docker" aria-label="Permalink: Using Docker" href="#using-docker"></a></p>
<p dir="auto">A Dockerfile and example docker-compose recipe are available in the <code>distrib/docker</code> directory. Ergo is automatically published
to the GitHub Container Registry at <a href="https://ghcr.io/ergochat/ergo" rel="nofollow">ghcr.io/ergochat/ergo</a>. For more information, see the distrib/docker
<a href="https://github.com/ergochat/ergo/blob/master/distrib/docker/README.md">README file</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">From Source</h3><a id="user-content-from-source" aria-label="Permalink: From Source" href="#from-source"></a></p>
<p dir="auto">You can also clone this repository and build from source. Typical deployments should use the <code>stable</code> branch, which points to the latest stable release. In general, <code>stable</code> should coincide with the latest published tag that is not designated as a beta or release candidate (for example, <code>v2.7.0-rc1</code> was an unstable release candidate and <code>v2.7.0</code> was the corresponding stable release), so you can also identify the latest stable release tag on the <a href="https://github.com/ergochat/ergo/releases">releases page</a> and build that.</p>
<p dir="auto">The <code>master</code> branch is not recommended for production use since it may contain bugs, and because the forwards compatibility guarantees for the config file and the database that apply to releases do not apply to master. That is to say, running master may result in changes to your database that end up being incompatible with future versions of Ergo.</p>
<p dir="auto">For information on contributing to Ergo, see <a href="https://github.com/ergochat/ergo/blob/master/DEVELOPING.md">DEVELOPING.md</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Building</h4><a id="user-content-building" aria-label="Permalink: Building" href="#building"></a></p>
<p dir="auto">You'll need an <a href="https://golang.org/dl/" rel="nofollow">up-to-date distribution of the Go language for your OS and architecture</a>. Once that's installed (check the output of <code>go version</code>), just check out your desired branch or tag and run <code>make</code>. This will produce an executable binary named <code>ergo</code> in the base directory of the project. (Ergo vendors all its dependencies, so you will not need to fetch any dependencies remotely.)</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Configuration</h2><a id="user-content-configuration" aria-label="Permalink: Configuration" href="#configuration"></a></p>
<p dir="auto">The default config file <a href="https://github.com/ergochat/ergo/blob/master/default.yaml"><code>default.yaml</code></a> helps walk you through what each option means and changes.</p>
<p dir="auto">You can use the <code>--conf</code> parameter when launching Ergo to control where it looks for the config file. For instance: <code>ergo run --conf /path/to/ircd.yaml</code>. The configuration file also stores where the log, database, certificate, and other files are opened. Normally, all these files use relative paths, but you can change them to be absolute (such as <code>/var/log/ircd.log</code>) when running Ergo as a service.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Logs</h3><a id="user-content-logs" aria-label="Permalink: Logs" href="#logs"></a></p>
<p dir="auto">By default, logs go to stderr only. They can be configured to go to a file, or you can use systemd to direct the stderr to the system journal (see the manual for details). The configuration format of logs is designed to be easily pluggable, and is inspired by the logging config provided by InspIRCd.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Passwords</h3><a id="user-content-passwords" aria-label="Permalink: Passwords" href="#passwords"></a></p>
<p dir="auto">Passwords (for both <code>PASS</code> and oper logins) are stored using bcrypt. To generate encrypted strings for use in the config, use the <code>genpasswd</code> subcommand as such:</p>

<p dir="auto">With this, you receive a blob of text which you can plug into your configuration file.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Nickname and channel registration</h3><a id="user-content-nickname-and-channel-registration" aria-label="Permalink: Nickname and channel registration" href="#nickname-and-channel-registration"></a></p>
<p dir="auto">Ergo relies heavily on user accounts to enable its distinctive features (such as allowing multiple clients per nickname). As a user, you can register your current nickname as an account using <code>/msg NickServ register &lt;password&gt;</code>. Once you have done so, you should <a href="https://libera.chat/guides/sasl" rel="nofollow">enable SASL in your clients</a>, ensuring that you will be automatically logged into your account on each connection. This will prevent <a href="https://github.com/ergochat/ergo/blob/master/docs/MANUAL.md#nick-equals-account">problems claiming your registered nickname</a>.</p>
<p dir="auto">Once you have registered your nickname, you can use it to register channels:</p>
<ol dir="auto">
<li>Join the channel with <code>/join #channel</code></li>
<li>Register the channel with <code>/CS REGISTER #channel</code></li>
</ol>
<p dir="auto">After this, your channel will remember the fact that you're the owner, the topic, and any modes set on it!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Credits</h2><a id="user-content-credits" aria-label="Permalink: Credits" href="#credits"></a></p>
<ul dir="auto">
<li>Jeremy Latt (2012-2014)</li>
<li>Edmund Huber (2014-2015)</li>
<li>Daniel Oaks (2016-present)</li>
<li>Shivaram Lingamneni (2017-present)</li>
<li><a href="https://github.com/ergochat/ergo/blob/master/CHANGELOG.md">Many other contributors and friends of the project &lt;3</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The XOR Texture (2004) (212 pts)]]></title>
            <link>https://lodev.org/cgtutor/xortexture.html</link>
            <guid>42447053</guid>
            <pubDate>Wed, 18 Dec 2024 00:43:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lodev.org/cgtutor/xortexture.html">https://lodev.org/cgtutor/xortexture.html</a>, See on <a href="https://news.ycombinator.com/item?id=42447053">Hacker News</a></p>
<div id="readability-page-1" class="page">
<h2>Lode's Computer Graphics Tutorial</h2>

<h2>Table of Contents</h2>
<ul>
<li><a href="#Introduction_">Introduction</a></li>
<li><a href="#The_XOR_Texture">The XOR Texture</a></li>
<li><a href="#Colors">Colors</a></li>
<li><a href="#AND_and_OR">AND and OR</a></li>
<li><a href="#Conclusion">Conclusion</a><br></li>
</ul>
<a href="https://lodev.org/cgtutor/index.html">Back to index</a><br>
<h2><a name="Introduction_" id="Introduction_"></a>Introduction<br></h2>
The XOR texture is a very easy to generate texture that looks fine.
However, it's so overused that it's not a good choice to use in in
a demo or intro release. It isn't useful for games either, unless
you want some fancy floor tiles. What it's useful for, is for
testing a texture mapper you just wrote, in case you want to
quickly test out a pattern without having to load an image file or
write more complex texture generation code.<p>

This is an extremely small article, but the XOR Texture just
couldn't be left out in a series of texture generation
articles.</p><h2><a name="The_XOR_Texture" id="The_XOR_Texture"></a>The XOR
Texture</h2>
The XOR texture is simply generated by xor-ing the x and y
coordinate of the current pixel. The '^' operator in C++ is the XOR
operator.<center>
<div>
<pre><span>int main(int argc, char *argv[])
{
  screen(256, 256, 0, "The XOR Texture");

  for(int y = 0; y &lt; h; y++)
  for(int x = 0; x &lt; w; x++)
  {
    Uint8 c = x ^ y;
    pset(x, y, ColorRGB(c, c, c));
  }

  redraw();
  sleep();
  return 0;
}</span></pre>
</div>
</center>
<br>
That's it, if you run it, you see the XOR texture:<p>

<img alt="The XOR Texture" src="https://lodev.org/cgtutor/images/xortexture.gif"></p><p>

There are 3 things you should keep in mind though:</p><p>

<b>1)</b> The sizes of the texture should be a power of two, if
they aren't, the texture doesn't look as good:</p><p>

<img alt="" src="https://lodev.org/cgtutor/images/xortexturesize.gif"></p><p>

<b>2)</b> Color component values range from 0 to 255. The maximum
color value generated by the XOR operation is the same as the
dimensions of the texture if its size is a power of two. So if the
size of your XOR pattern is smaller than 256, for example only 64,
it'll be too dark (image on the left). Multiply the color with 4 to
make it bright again (image on the right):</p><p>

<img alt="" src="https://lodev.org/cgtutor/images/xortexturedark.gif"> <img alt="" src="https://lodev.org/cgtutor/images/xortexturebright.gif"></p><p>

<b>3)</b> On the other hand, if the size is larger than 256, for
example 512, you have to make sure the color is limited to a
maximum value of 256. You can either modulo divide it through 256,
but then it isn't a real XOR pattern anymore. Better is to divide
it through 2. In any case, using a XOR texture larger than 256x256
doesn't increase the quality because there aren't enough distinct
color values, unless you're using a color mode that allows more
bits per channel. But who'd want to generate a 1024x1024 XOR
texture anyway.</p><p>

The XOR operator takes the binary values of both integers, and does
a binary XOR on every two corresponding bits. XOR or eXclusive OR
returns 1 if both bits are different, and returns 0 if both bits
are the same: "Bit a is 1 OR bit 2 is 1, but <i>not</i> both". In
other words, it applies the following truth table to every two
corresponding bits:</p><table>

<tbody><tr>
<td colspan="3" rowspan="1">
<b>XOR</b><br></td>
</tr>
<tr>
<td><i>Bit_a</i><br></td>
<td><i>Bit_b</i><br></td>
<td><i>Result</i><br></td>
</tr>
<tr>
<td>0<br></td>
<td>0<br></td>
<td>0<br></td>
</tr>
<tr>
<td>0<br></td>
<td><b>1</b><br></td>
<td><b>1</b><br></td>
</tr>
<tr>
<td><b>1</b><br></td>
<td>0<br></td>
<td><b>1</b><br></td>
</tr>
<tr>
<td><b>1</b><br></td>
<td><b>1</b><br></td>
<td>0<br></td>
</tr>

</tbody></table>
<br>
This is done on every bit of the integer, creating the many
possible resulting values.<p>

For example, 5 XOR 13 = 8, because in binary 0101 XOR 1101 =
1000.</p><h2><a name="Colors" id="Colors"></a>Colors</h2>
You can also try the XOR texture with different colors, by using
different value for R, G and B. For example:<center>
<div>
<pre><span>int main(int argc, char *argv[])
{
  screen(256, 256, 0, "The XOR Texture");

  ColorRGB color;

  for(int y = 0; y &lt; h; y++)
  for(int x = 0; x &lt; w; x++)
  {
    Uint8 c = (x ^ y);
    color.r = 255 - c;
    color.g = c;
    color.b = c % 128;
    pset(x, y, color);
  }

  redraw();
  sleep();
  return 0;
}
</span></pre>
</div>
</center>
<br>
<img alt="" src="https://lodev.org/cgtutor/images/xortexturecolor.gif"><p>

You can even use the xor value as hue for the HSVtoRGB
function...</p><center>
<div>
<pre><span>int main(int argc, char *argv[])
{
  screen(256, 256, 0, "The XOR Texture");

  ColorRGB color;

  for(int y = 0; y &lt; h; y++)
  for(int x = 0; x &lt; w; x++)
  {
    Uint8 c = (x ^ y);
    color = HSVtoRGB(ColorHSV(c, 255, 255));
    pset(x, y, color);
  }

  redraw();
  sleep();
  return 0;
}
</span></pre>
</div>
</center>
<br>
<img alt="" src="https://lodev.org/cgtutor/images/xortexturehsv.gif"><h2><a name="AND_and_OR" id="AND_and_OR"></a>AND and OR</h2>
The AND and the OR operator also generate a similar texture.<p>

The XOR operator returns 1 if both bits are different:</p><table>

<tbody><tr>
<td colspan="3" rowspan="1">
<b>XOR</b><br></td>
</tr>
<tr>
<td><i>Bit_a</i><br></td>
<td><i>Bit_b</i><br></td>
<td><i>Result</i><br></td>
</tr>
<tr>
<td>0<br></td>
<td>0<br></td>
<td>0<br></td>
</tr>
<tr>
<td>0<br></td>
<td><b>1</b><br></td>
<td><b>1</b><br></td>
</tr>
<tr>
<td><b>1</b><br></td>
<td>0<br></td>
<td><b>1</b><br></td>
</tr>
<tr>
<td><b>1</b><br></td>
<td><b>1</b><br></td>
<td>0<br></td>
</tr>

</tbody></table>
<br>
The AND operator, only returns 1 if both bits are 1 (bit a AND bit
b are true)<table>

<tbody><tr>
<td colspan="3" rowspan="1">
<b>AND</b><br></td>
</tr>
<tr>
<td><i>Bit_a</i><br></td>
<td><i>Bit_b</i><br></td>
<td><i>Result</i><br></td>
</tr>
<tr>
<td>0<br></td>
<td>0<br></td>
<td>0<br></td>
</tr>
<tr>
<td>0<br></td>
<td><b>1</b><br></td>
<td>0<br></td>
</tr>
<tr>
<td><b>1</b><br></td>
<td>0<br></td>
<td>0<br></td>
</tr>
<tr>
<td><b>1</b><br></td>
<td><b>1</b><br></td>
<td><b>1</b><br></td>
</tr>

</tbody></table>
<br>
The OR operator returns 1 if any or both of the bits are 1 (bit a
OR bit b is true)<table>

<tbody><tr>
<td colspan="3" rowspan="1">
<b>OR</b><br></td>
</tr>
<tr>
<td><i>Bit_a</i><br></td>
<td><i>Bit_b</i><br></td>
<td><i>Result</i><br></td>
</tr>
<tr>
<td>0<br></td>
<td>0<br></td>
<td>0<br></td>
</tr>
<tr>
<td>0<br></td>
<td><b>1</b><br></td>
<td><b>1</b><br></td>
</tr>
<tr>
<td><b>1</b><br></td>
<td>0<br></td>
<td><b>1</b><br></td>
</tr>
<tr>
<td><b>1</b><br></td>
<td><b>1</b><br></td>
<td><b>1</b><br></td>
</tr>

</tbody></table>
<br>
The AND operator is denoted '&amp;' in C++, and the OR operator
'|', replace the '^' operator with those to use the new operators.
Here's the result of XOR, AND and OR respectively:<p>

<img alt="" src="https://lodev.org/cgtutor/images/xortexture.gif"> <img alt="" src="https://lodev.org/cgtutor/images/andtexture.gif">
<img alt="" src="https://lodev.org/cgtutor/images/ortexture.gif"></p><p>

It makes sense that the AND texture is darker, because it returns 1
only in a single case. The OR texture is brighter, because it
returns 1 very often. The sum of the XOR texture and the AND
texture is the OR texture.</p><h2><a name="Conclusion" id="Conclusion"></a>Conclusion</h2>
It was shown how easy it is to create a XOR texture, which makes
the XOR texture useful to test if a texture renderer is working.
However, it's not suitable for applications such as art or
games.<p>

Here, the XOR pattern was used as a 3D texture (x ^ y ^ z) to test
if a planet texture renderer was working correctly:</p><p>

<img alt="" src="https://lodev.org/cgtutor/images/xorplanet.gif"></p><hr>
Last edited: 2004
<p>
Copyright (c) 2004-2007 by Lode Vandevenne. All rights reserved.
</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ad: An Adaptable Text Editor (125 pts)]]></title>
            <link>https://github.com/sminez/ad</link>
            <guid>42447012</guid>
            <pubDate>Wed, 18 Dec 2024 00:37:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/sminez/ad">https://github.com/sminez/ad</a>, See on <a href="https://news.ycombinator.com/item?id=42447012">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">ad :: an adaptable text editor</h2><a id="user-content-ad--an-adaptable-text-editor" aria-label="Permalink: ad :: an adaptable text editor" href="#ad--an-adaptable-text-editor"></a></p>
<p dir="auto"><a href="https://github.com/sminez/ad/actions?query=workflow%3ABuild"><img src="https://github.com/sminez/ad/workflows/Build/badge.svg" alt="Build"></a> <a href="https://crates.io/crates/ad-editor" rel="nofollow"><img src="https://camo.githubusercontent.com/b85e95578041b718fb667b6a6ba2eb44d11b18a44ea76d66d5a25140515e4619/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f61642d656469746f72" alt="crates.io version" data-canonical-src="https://img.shields.io/crates/v/ad-editor"></a> <a href="https://docs.rs/ad-editor" rel="nofollow"><img src="https://camo.githubusercontent.com/159a3447fa97d7e50e8d27dc7765f54fcd62b826c6e97a1d064fd2f1db655e81/68747470733a2f2f696d672e736869656c64732e696f2f646f637372732f61642d656469746f723f6c6f676f3d72757374" alt="docs.rs" data-canonical-src="https://img.shields.io/docsrs/ad-editor?logo=rust"></a></p>
<p dir="auto"><code>ad</code> (pronounced A.D.) is an attempt at combining a modal editing interface of likes of <code>vi</code>
and <code>kakoune</code> with the approach to extensibility of Plan9's <code>Acme</code>. Inside of <code>ad</code> text is
something you can execute as well as edit.</p>
<p dir="auto">It is primarily intended as playground for experimenting with implementing various text editor
features and currently is not at all optimised or feature complete enough for use as your main
text editor.</p>
<p dir="auto">That said, if this sounds like something you might find interesting then please to take a
look and see what you think! For now there isn't a whole lot of user facing documentation so
you will need to read through the source code to learn about what is and is not implemented.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Project Status</h2><a id="user-content-project-status" aria-label="Permalink: Project Status" href="#project-status"></a></p>
<p dir="auto"><code>ad</code> is stable enough and feature complete enough that you can try it out and see what you
think. That said, there is currently very little documentation and there are likely to be
a variety of bugs and crashes in places that I've not managed to fully track down yet. If
you do try it out and spot something that is broken, please raise an issue on GitHub so I
can look into it.</p>
<p dir="auto">You have been warned!</p>
<p dir="auto"><a href="https://www.youtube.com/watch?v=jb2pAi5hLUg" rel="nofollow"><img src="https://camo.githubusercontent.com/b24964ea9f911479b4354f1637a37d47c5c3ea0c09022100d1c80d870df4be29/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f6a623270416935684c55672f302e6a7067" alt="tour" data-canonical-src="https://img.youtube.com/vi/jb2pAi5hLUg/0.jpg"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">The design of ad</h2><a id="user-content-the-design-of-ad" aria-label="Permalink: The design of ad" href="#the-design-of-ad"></a></p>
<p dir="auto"><code>ad</code> is aiming to be a hybrid of the pieces of various editors that I find most useful:</p>
<ul dir="auto">
<li>vim style modal editing to allow for convenient key bindings</li>
<li>convenient text navigation and selection from vim/kakoune</li>
<li>mini-buffer based user defined minor modes from emacs</li>
<li>sam/acme style editing commands for larger editing actions</li>
<li>acme style extension through exposing editor state and functionality for
external client programs.</li>
<li>support for mouse based navigation and selection but not requiring that as the main
way of using the editor like in acme. That's fine for desktop but most of the time
I'm working with a laptop which makes that far too clunky.</li>
</ul>
<p dir="auto"><code>ad</code> is <em>not</em> trying to replace vim (or kakoune, or emacs) in terms of being a massively
hackable editor. Rather it is trying to follow the philosophy of acme in being an
integrat<strong>ing</strong> development environment (rather than integrat<strong>ed</strong>). By which I mean
that the aim is to provide a comfortable editing environment to work in that supports
direct interaction with external tools and programs from the outside rather than pulling
everything <strong>in</strong>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Repo structure</h2><a id="user-content-repo-structure" aria-label="Permalink: Repo structure" href="#repo-structure"></a></p>
<p dir="auto">Given the (arguably questionable) goal of implementing everything from scratch, there is a fair amount
of functionality included in <code>ad</code> which in turn is split out into a number of modules within the crate.
For now, I'm not structuring things as individual crates but that may change in future.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Modules</h3><a id="user-content-modules" aria-label="Permalink: Modules" href="#modules"></a></p>
<p dir="auto"><em>This is a non-exhaustive list of some of the more interesting parts of the internals of <code>ad</code></em></p>
<ul dir="auto">
<li><strong>buffer/internal</strong>: a <a href="https://en.wikipedia.org/wiki/Gap_buffer" rel="nofollow">gap buffer</a> implementation for the
internal state of a Buffer.</li>
<li><strong>dot</strong>: manipulation of the current selection in a given buffer (including vim-like motions)</li>
<li><strong>exec</strong>: minimal implementation of the core of the <a href="http://doc.cat-v.org/bell_labs/sam_lang_tutorial/sam_tut.pdf" rel="nofollow">sam editing language</a></li>
<li><strong>fsys</strong>: virtual filesystem interface to the editor state in the style of <a href="http://acme.cat-v.org/" rel="nofollow">acme</a></li>
<li><strong>ninep</strong>: <a href="http://9p.cat-v.org/" rel="nofollow">9p protocol</a> implementation that backs the fsys module
<ul dir="auto">
<li>Now moved out to its own crate with source code available <a href="https://github.com/sminez/ad/crates/ninep">here</a>.</li>
</ul>
</li>
<li><strong>regex</strong>: custom regex engine that is able to work on character streams. This is nowhere near as performant as
the <a href="https://github.com/rust-lang/regex">regex crate</a> (obviously) but it allows for some flexability in tinkering
with the exec command language.</li>
<li><strong>trie</strong>: <a href="https://en.wikipedia.org/wiki/Trie" rel="nofollow">trie</a> data structure for handling sequence based keybindings</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Why?</h2><a id="user-content-why" aria-label="Permalink: Why?" href="#why"></a></p>
<p dir="auto">I've used <a href="https://www.vim.org/" rel="nofollow">vim</a> for years now (more recently <a href="https://neovim.io/" rel="nofollow">neovim</a> and <a href="https://github.com/mawww/kakoune">kakoune</a>) and I really love the
core editor itself. A while back I discovered <a href="https://en.wikipedia.org/wiki/Acme_(text_editor)" rel="nofollow">acme</a> through a fantastic <a href="https://www.youtube.com/watch?v=dP1xVpMPn8M" rel="nofollow">screencast</a> from
Russ Cox, showing how you could interface with it via plan filesystem protocol, allowing you to run
pretty much whatever you want inside of the editor (in any language) so long as you can interact with
that protocol. <em>That</em> I absolutely love, but the lack of modal editing and requirement to use the mouse
when I'm sat with my laptop is proving hard to get used to, so I set about looking at how to port
over some of the acme ideas into vim (namely the load/execute semantics via the plumber and the
idea of exposing the editor state in a really simple way to client programs).</p>
<p dir="auto">Turns out, vim has a <em>lot</em> more built into it that I was previously aware (and I've been hacking on
my vimrc for years now) which was more than a little scary. What I want is a small, usable editor
that I can hack on.</p>
<p dir="auto">So...How hard could it be?</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Simplicity</h2><a id="user-content-simplicity" aria-label="Permalink: Simplicity" href="#simplicity"></a></p>
<p dir="auto">For things that are going to be core parts of the experience (bindings, per-filetype configuration)
I'm just going to hard code stuff. I'll try to do it in a way that makes it easy to update / change
but the whole thing will be a lot easier to write if there isn't too much config parsing.</p>
<p dir="auto">That said, the more I work on this, the more I wonder if it might be interesting to structure <code>ad</code>
in the same way as <a href="https://github.com/sminez/penrose">penrose</a> and have it as a library for writing
your own text editor? That would require some restructuring but might be interesting to explore...</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Goals</h2><a id="user-content-goals" aria-label="Permalink: Goals" href="#goals"></a></p>
<ul dir="auto">
<li>Simple modal editing to the extent that I use VIM</li>
<li>Sed/Sam style edit commands</li>
<li>Acme style use of external commands rather than an embedded language:
<ul dir="auto">
<li>Exposing current buffer / window state to external programs</li>
<li>Exposing events to external programs</li>
<li>Accepting events from other programs</li>
</ul>
</li>
<li>Virtual buffers for command output that can be hidden</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Sam style structural regular expressions</h2><a id="user-content-sam-style-structural-regular-expressions" aria-label="Permalink: Sam style structural regular expressions" href="#sam-style-structural-regular-expressions"></a></p>
<p dir="auto">One aim of this project is to provide an implementation of "Structural Regular Expressions" as first
presented (to my knowledge) in the <a href="http://doc.cat-v.org/plan_9/4th_edition/papers/sam/" rel="nofollow">Sam text editor</a> from plan9 by Rob Pike. <a href="http://doc.cat-v.org/bell_labs/sam_lang_tutorial/sam_tut.pdf" rel="nofollow">This tutorial</a>
from Pike covers the command language of Sam which I am using as a starting point for the command
language for <code>ad</code>. So far I'm not aiming for a perfect match with the functionality of Sam or Acme
but I <em>am</em> looking to make use of the pieces that feel particularly useful. As the project develops
I may well end up pulling in more but for now I'm happy to have a decent starting point for an
implementation of the structural regular expression engine.</p>
<p dir="auto">There is still a fair amount to do but so far the idea is to allow for repeated narrowing and looping
over sub-matches within a buffer or file loaded from disk. (A streaming interface working over stdin
is coming but I need to have a think about how best to buffer the input and track partial matches in
the regex engine to avoid slowing things down too much or requiring the engine to buffer and collect
<em>all</em> of its standard input before matching).</p>
<p dir="auto">The current engine can be used via the <code>-e</code> and <code>-f</code> flags to run <code>ad</code> in headless mode, but hooking
things into the interactive editor directly should be coming soon. For now, here is a demo of some
simple functionality of the engine:</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ cat examples/exec_scripts/result_fns.ad
,                              # set dot to be the full input (not required as this is the default)
x/fn@*?\{/                     # select all Rust function signatures up to the opening brace
g/->.*Result.*\{/              # keep those that return some form of Result
x/fn (\w+)@*?-> (.*?) \{/      # extract the function name and return type from the signature
p/($FILENAME) $1 returns $2/   # print them along with the filename using a template


$ ad -f examples/exec_scripts/result_fns.ad src/**/*.rs | head
(src/buffer/buffers.rs) open_or_focus returns io::Result<()>
(src/buffer/dot/cur.rs) fmt returns fmt::Result
(src/buffer/dot/mod.rs) fmt returns fmt::Result
(src/buffer/dot/range.rs) fmt returns fmt::Result
(src/buffer/edit.rs) fmt returns fmt::Result
(src/buffer/mod.rs) new_from_canonical_file_path returns io::Result<Self>
(src/exec/parse.rs) execute returns Result<(usize, usize), Error>
(src/exec/parse.rs) step returns Result<(usize, usize), Error>
(src/exec/parse.rs) try_parse returns Result<Self, Error>
(src/exec/parse.rs) validate returns Result<(), Error>"><pre>$ cat examples/exec_scripts/result_fns.ad
,                              <span><span>#</span> set dot to be the full input (not required as this is the default)</span>
x/fn@<span>*?</span><span>\{</span>/                     <span><span>#</span> select all Rust function signatures up to the opening brace</span>
g/-<span>&gt;</span>.<span>*</span>Result.<span>*</span><span>\{</span>/              <span><span>#</span> keep those that return some form of Result</span>
x/fn (<span>\w</span>+)@<span>*?</span>-<span>&gt;</span> (.<span>*?</span>) <span>\{</span>/      <span><span>#</span> extract the function name and return type from the signature</span>
p/(<span>$FILENAME</span>) <span>$1</span> returns <span>$2</span>/   <span><span>#</span> print them along with the filename using a template</span>


$ ad -f examples/exec_scripts/result_fns.ad src/<span>**</span>/<span>*</span>.rs <span>|</span> head
(src/buffer/buffers.rs) open_or_focus returns <span>io::Result&lt;</span>()<span>&gt;</span>
(src/buffer/dot/cur.rs) fmt returns fmt::Result
(src/buffer/dot/mod.rs) fmt returns fmt::Result
(src/buffer/dot/range.rs) fmt returns fmt::Result
(src/buffer/edit.rs) fmt returns fmt::Result
(src/buffer/mod.rs) new_from_canonical_file_path returns io::Result<span>&lt;</span>Self<span>&gt;</span>
(src/exec/parse.rs) execute returns Result<span><span>&lt;(</span>usize, usize<span>)</span></span>, Error<span>&gt;</span>
(src/exec/parse.rs) step returns Result<span><span>&lt;(</span>usize, usize<span>)</span></span>, Error<span>&gt;</span>
(src/exec/parse.rs) try_parse returns Result<span>&lt;</span>Self, Error<span>&gt;</span>
(src/exec/parse.rs) validate returns <span>Result&lt;</span>(), Error<span>&gt;</span></pre></div>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[We Built the Saturn V (2017) (127 pts)]]></title>
            <link>https://www.smithsonianmag.com/air-space-magazine/we-built-saturn-v-180964759/</link>
            <guid>42446889</guid>
            <pubDate>Wed, 18 Dec 2024 00:17:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.smithsonianmag.com/air-space-magazine/we-built-saturn-v-180964759/">https://www.smithsonianmag.com/air-space-magazine/we-built-saturn-v-180964759/</a>, See on <a href="https://news.ycombinator.com/item?id=42446889">Hacker News</a></p>
Couldn't get https://www.smithsonianmag.com/air-space-magazine/we-built-saturn-v-180964759/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Optimizing Ruby's JSON, Part 1 (220 pts)]]></title>
            <link>https://byroot.github.io/ruby/json/2024/12/15/optimizing-ruby-json-part-1.html</link>
            <guid>42446846</guid>
            <pubDate>Wed, 18 Dec 2024 00:08:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://byroot.github.io/ruby/json/2024/12/15/optimizing-ruby-json-part-1.html">https://byroot.github.io/ruby/json/2024/12/15/optimizing-ruby-json-part-1.html</a>, See on <a href="https://news.ycombinator.com/item?id=42446846">Hacker News</a></p>
Couldn't get https://byroot.github.io/ruby/json/2024/12/15/optimizing-ruby-json-part-1.html: Error: timeout of 10000ms exceeded]]></description>
        </item>
    </channel>
</rss>