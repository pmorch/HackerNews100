<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 29 Nov 2024 12:30:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Australian Parliament bans social media for under-16s (168 pts)]]></title>
            <link>https://apnews.com/article/australia-social-media-children-ban-safeguarding-harm-accounts-d0cde2603bdbc7167801da1d00ecd056</link>
            <guid>42270966</guid>
            <pubDate>Fri, 29 Nov 2024 05:01:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://apnews.com/article/australia-social-media-children-ban-safeguarding-harm-accounts-d0cde2603bdbc7167801da1d00ecd056">https://apnews.com/article/australia-social-media-children-ban-safeguarding-harm-accounts-d0cde2603bdbc7167801da1d00ecd056</a>, See on <a href="https://news.ycombinator.com/item?id=42270966">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                                        <p>MELBOURNE, Australia (AP) — A <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/australia-social-media-ban-children-1abadf5445418c8c14f5f68cf76b38d0">social media ban for children</a></span> under 16 passed the Australian Parliament on Friday in a world-first law.</p><p>The law will make platforms including TikTok, Facebook, Snapchat, Reddit, X and Instagram liable for fines of up to 50 million Australian dollars ($33 million) for systemic failures to prevent children younger than 16 from holding accounts.</p><p>The Senate passed the bill on Thursday 34 votes to 19. The House of Representatives on Wednesday <span><a data-gtm-enhancement-style="LinkEnhancementA" href="https://apnews.com/article/australia-social-media-young-children-bf0ca2aedaf61b71fe335421240e94c4">overwhelmingly approved</a></span> the legislation by 102 votes to 13.</p><p>The House on Friday endorsed opposition amendments made in the Senate, making the bill law. </p><p>Prime Minister Anthony Albanese said the law supported parents concerned by online harms to their children.</p><p>“Platforms now have a social responsibility to ensure the safety of our kids is a priority for them,” Albanese told reporters.</p>
    

<p>The platforms have one year to work out how they could implement the ban before penalties are enforced.</p><p>Meta Platforms, which owns Facebook and Instagram, said the legislation had been “rushed.”</p><p>Digital Industry Group Inc., an advocate for the platforms in Australia, said questions remain about the law’s impact on children, its technical foundations and scope.</p>



<p>“The social media ban legislation has been released and passed within a week and, as a result, no one can confidently explain how it will work in practice – the community and platforms are in the dark about what exactly is required of them,” DIGI managing director Sunita Bose said.</p>
    
    
    
<p>The amendments passed on Friday bolster privacy protections. Platforms would not be allowed to compel users to provide government-issued identity documents including passports or driver’s licenses, nor could they demand digital identification through a government system.</p><p>Critics of the legislation fear that banning young children from social media will impact the privacy of all users who must establish they are older than 16.</p>
    

<p>While the major parties support the ban, many child welfare and mental health advocates are concerned about unintended consequences.</p><p>Sen. David Shoebridge, from the minority Greens party, said mental health experts agreed that the ban could dangerously isolate many children who used social media to find support.</p><p>“This policy will hurt vulnerable young people the most, especially in regional communities and especially the LGBTQI community, by cutting them off,” Shoebridge told the Senate.</p><p>Exemptions will apply for health and education services including YouTube, Messenger Kids, WhatsApp, Kids Helpline and Google Classroom.</p><p>Opposition Sen. Maria Kovacic said the bill was not radical but necessary. “The core focus of this legislation is simple: It demands that social media companies take reasonable steps to identify and remove underage users from their platforms,” Kovacic told the Senate.</p><p>“This is a responsibility these companies should have been fulfilling long ago, but for too long they have shirked these responsibilities in favor of profit,” she added.</p><p>Online safety campaigner Sonya Ryan, whose 15-year-old daughter Carly was murdered by a 50-year-old pedophile who pretended to be a teenager online, described the Senate vote as a “monumental moment in protecting our children from horrendous harms online.”</p>
    

<p>“It’s too late for my daughter, Carly, and the many other children who have suffered terribly and those who have lost their lives in Australia, but let us stand together on their behalf and embrace this together,” she said.</p><p>Wayne Holdsworth, whose teenage son Mac took his own life after falling victim to an online sextortion scam, had advocated for the age restriction and took pride in its passage. </p><p>“I have always been a proud Australian, but for me subsequent to today’s Senate decision, I am bursting with pride,” Holdsworth said.</p><p>Christopher Stone, executive director of Suicide Prevention Australia, the governing body for the suicide prevention sector, said the legislation failed to consider positive aspects of social media in supporting young people’s mental health and sense of connection.</p>
    

<p>“The government is running blindfolded into a brick wall by rushing this legislation. Young Australians deserve evidence-based policies, not decisions made in haste,” Stone said.</p><p>The platforms had complained that the law would be unworkable and had urged the Senate to delay the vote until at least June 2025 when a government-commissioned evaluation of age assurance technologies will report on how young children could be excluded.</p><p>“Naturally, we respect the laws decided by the Australian Parliament,” Facebook and Instagram owner Meta Platforms said. “However, we are concerned about the process which rushed the legislation through while failing to properly consider the evidence, what industry already does to ensure age-appropriate experiences, and the voices of young people.”</p>
    

<p>Snapchat said it was also concerned by the law and would cooperate with the government regulator, the eSafety Commissioner.</p><p>“While there are many unanswered questions about how this law will be implemented in practice, we will engage closely with the Government and the eSafety Commissioner during the 12-month implementation period to help develop an approach that balances privacy, safety and practicality. As always, Snap will comply with any applicable laws and regulations in Australia,” Snapchat said in a statement.</p><p>Critics argue the government is attempting to convince parents it is protecting their children ahead of a general election due by May. The government hopes that voters will reward it for responding to parents’ concerns about their children’s addiction to social media. Some argue the legislation could cause more harm than it prevents.</p><p>Criticisms include that the legislation was rushed through Parliament without adequate scrutiny, is ineffective, poses privacy risks for all users, and undermines the authority of parents to make decisions for their children.</p><p>Opponents also argue the ban would isolate children, deprive them of the positive aspects of social media, drive them to the dark web, discourage children too young for social media to report harm, and reduce incentives for platforms to improve online safety.</p><h2>____</h2><p>AP Business Writer Kelvin Chan in London contributed to this report.</p>
                                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[BYD launches sodium-ion grid-scale BESS product (117 pts)]]></title>
            <link>https://www.energy-storage.news/byd-launches-sodium-ion-grid-scale-bess-product/</link>
            <guid>42270610</guid>
            <pubDate>Fri, 29 Nov 2024 03:44:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.energy-storage.news/byd-launches-sodium-ion-grid-scale-bess-product/">https://www.energy-storage.news/byd-launches-sodium-ion-grid-scale-bess-product/</a>, See on <a href="https://news.ycombinator.com/item?id=42270610">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>



<p>He said it uses the company’s Long Blade Battery, has a ‘CTS super integrated design’, and is the world’s first high-performance sodium-ion battery energy storage system (BESS). He claimed it has ultra high energy density, exceptional safety standards and flexible module design. </p>



<p>The BESS has an energy storage capacity of 2.3MWh and a nominal voltage of 1200V, with a voltage range from 800V-1400V.</p>



<p><em>Energy-Storage.news </em>has asked BYD’s press team for more information and will update this article or follow up in due course. </p>



<p>In response to questions left as comments on <a href="https://www.linkedin.com/posts/activity-7262096404557250560-TlM4/?utm_source=share&amp;utm_medium=member_desktop" target="_blank" rel="noreferrer noopener">his post</a>, Wang said, of the advantages of sodium-ion: “The first advantage is its natural abundance, which theoretically results in lower manufacturing costs compared to lithium-ion batteries. Furthermore, sodium-ion batteries offer a higher charge/discharge rate, a broader operating temperature range, a longer cycle life, and improved safety.”</p>



<p>Natural abundance of sodium and better fire safety features are the two main reasons many are pinning their hopes on sodium-ion as an alternative to lithium-ion, with the latter’s supply chain shocks of 2021 and 2022 and relatively rare but high-profile fire incidents causing major challenges for the energy storage industry to-date. </p>



<p>Most agree that, thanks to its cheaper materials, sodium-ion cells should also be cheaper than lithium-ion once manufacturing scales up. </p>



<p>Sodium-ion cells are however much less energy dense, as illustrated by BYD’s new product only packing 2.3MWh per 20-foot container, much less than the <a href="https://www.energy-storage.news/cost-shipping-energy-density-driven-convergence-to-5mwh-bess-form-factor-cea/" target="_blank" rel="noreferrer noopener">5MWh and more than is now standard in the lithium-ion BESS space</a>. That is less of an issue in the BESS segment than for EVs, however, though there are EVs in China being sold with sodium-ion batteries too. </p>



<p>Chinese companies are investing a lot into the sodium-ion technology space, and the world’s largest BESS system using sodium-ion technology is there, <a href="https://www.energy-storage.news/first-half-world-largest-200mwh-sodium-ion-project-comes-online-china/" target="_blank" rel="noreferrer noopener">a 100MW/200MWh system, half of which came online in summer</a>. One of the technology providers on that project was China-based company called HiNa Battery.</p>



<p>In January, BYD began construction of 30GWh sodium-ion battery plant in Xuzhou City, China. BYD is the largest EV company in the world by sales, and has also expanded into lithium-ion battery cells and BESS production over the years, <a href="https://www.energy-storage.news/huawei-and-byd-among-global-top-five-system-integrators-of-2022-amidst-china-price-war/" target="_blank" rel="noreferrer noopener">growing to be one of the largest in that space too</a>.</p>



<p>The US is also making a push into sodium-ion technology. The US Department of Energy (DOE) last week (21 November) awarded US$50 million to establish the ‘Low-cost Earth-abundant Na-ion Storage (LENS) Consortium’, which aims to develop high-energy, long-lasting sodium-ion battery technology.</p>



<p>The consortium will be led by Argonne National Laboratory, and will also involve Brookhaven National Laboratory, Lawrence Berkeley National Laboratory, Pacific Northwest National Laboratory, Sandia National Laboratories and SLAC National Accelerator Laboratory.</p>



<p>US-based sodium-ion BESS startup Peak Energy recently raised US$55 million in a Series A led by TDK Ventures, following which the <a href="https://www.energy-storage.news/density-cycle-life-now-where-they-need-to-be-sodium-ion-bess-investor-tdk-on-technologys-state-of-play/">TDK partner who led the deal spoke to <em>Energy-Storage.news </em>about the sodium-ion BESS space (Premium access article)</a>. </p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How much memory do you need in 2024 to run 1M concurrent tasks? (236 pts)]]></title>
            <link>https://hez2010.github.io/async-runtimes-benchmarks-2024/</link>
            <guid>42270378</guid>
            <pubDate>Fri, 29 Nov 2024 02:50:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hez2010.github.io/async-runtimes-benchmarks-2024/">https://hez2010.github.io/async-runtimes-benchmarks-2024/</a>, See on <a href="https://news.ycombinator.com/item?id=42270378">Hacker News</a></p>
Couldn't get https://hez2010.github.io/async-runtimes-benchmarks-2024/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Car tires shed a quarter of all microplastics in the environment (234 pts)]]></title>
            <link>https://phys.org/news/2024-11-car-quarter-microplastics-environment-urgent.html</link>
            <guid>42269925</guid>
            <pubDate>Fri, 29 Nov 2024 01:09:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://phys.org/news/2024-11-car-quarter-microplastics-environment-urgent.html">https://phys.org/news/2024-11-car-quarter-microplastics-environment-urgent.html</a>, See on <a href="https://news.ycombinator.com/item?id=42269925">Hacker News</a></p>
Couldn't get https://phys.org/news/2024-11-car-quarter-microplastics-environment-urgent.html: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Screen Sharing in the Browser (116 pts)]]></title>
            <link>https://github.com/tonghohin/screen-sharing</link>
            <guid>42269897</guid>
            <pubDate>Fri, 29 Nov 2024 01:04:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/tonghohin/screen-sharing">https://github.com/tonghohin/screen-sharing</a>, See on <a href="https://news.ycombinator.com/item?id=42269897">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-turbo-body="">
      


    <div>
      <p><a href="#start-of-content" data-skip-target-assigned="false">Skip to content</a>

      <span data-view-component="true">
    <span data-view-component="true"></span>
</span></p>

<react-partial partial-name="keyboard-shortcuts-dialog" data-ssr="false" data-attempted-ssr="false">
  
  
  
</react-partial>




      

          

              


<header role="banner" data-is-top="true" data-color-mode="light" data-light-theme="light" data-dark-theme="dark">
  <h2>Navigation Menu</h2>

  

  <div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_copilot&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_copilot_link_product_navbar&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>GitHub Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;security&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;security_link_product_navbar&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;actions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;actions_link_product_navbar&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;codespaces&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;codespaces_link_product_navbar&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;issues&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;issues_link_product_navbar&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_review&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_review_link_product_navbar&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code Review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;discussions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;discussions_link_product_navbar&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_search&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_search_link_product_navbar&quot;}" href="https://github.com/features/code-search">
      
      <div>
        <p>Code Search</p><p>
        Find more, search less
      </p></div>

    
</a></li>

                </ul>
              </div>
</li>

                  <li>
      
      
</li>

                  <li>
      
      <div>
                    <p><span id="resources-explore-heading">Explore</span></p><ul aria-labelledby="resources-explore-heading">
                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;learning_pathways&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;learning_pathways_link_resources_navbar&quot;}" href="https://resources.github.com/learn/pathways">
      Learning Pathways

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;white_papers_ebooks_webinars&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;white_papers_ebooks_webinars_link_resources_navbar&quot;}" href="https://resources.github.com/">
      White papers, Ebooks, Webinars

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;customer_stories&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;customer_stories_link_resources_navbar&quot;}" href="https://github.com/customer-stories">
      Customer Stories

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;partners&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;partners_link_resources_navbar&quot;}" href="https://partner.github.com/">
      Partners

    
</a></li>

                </ul>
              </div>
</li>


                <li>
      
      <div>
              <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_sponsors&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_sponsors_link_open_source_navbar&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

                </ul>
              </div>
              <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;the_readme_project&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;the_readme_project_link_open_source_navbar&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

                </ul>
              </div>
              
          </div>
</li>


                <li>
      
      <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;enterprise_platform&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;enterprise_platform_link_enterprise_navbar&quot;}" href="https://github.com/enterprise">
      
      <div>
        <p>Enterprise platform</p><p>
        AI-powered developer platform
      </p></div>

    
</a></li>

                </ul>
              </div>
</li>


                <li>
    <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;pricing&quot;,&quot;context&quot;:&quot;global&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;pricing_link_global_navbar&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:tonghohin/screen-sharing" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="0X-r-0_8_8zIvlPXCn8rhUHDHbo6YC6UD_y6yuY3vPi7t-UwTjmRDO1iV7gSKJtzY5PR6BxWABAYXriY6K3P3Q" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="tonghohin/screen-sharing" data-current-org="" data-current-owner="tonghohin" data-logged-in="false" data-copilot-chat-enabled="false" data-nl-search-enabled="false" data-retain-scroll-position="true">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
        
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>

            

              <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&amp;source=header-repo&amp;source_repo=tonghohin%2Fscreen-sharing" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/tonghohin/screen-sharing&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="6e064e5075801c4abf3dbee925034f3796fa1a0576b373d01314dbb9fab13d1a" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>;ref_cta:Sign up;ref_loc:header logged out&quot;}">
                Sign up
              </a>
          
        </p></div>
      </div>
</header>

      
    </div>

  








    


    






  <div itemscope="" itemtype="http://schema.org/SoftwareSourceCode" data-commit-hovercards-enabled="" data-discussion-hovercards-enabled="" data-issue-and-pr-hovercards-enabled="">
    <main id="js-repo-pjax-container">
      
  





    






  
  

  



<turbo-frame id="repo-content-turbo-frame" target="_top" data-turbo-action="advance">
    <div data-view-component="true" id="repo-content-pjax-container">      



















<react-partial partial-name="repos-overview" data-ssr="true" data-attempted-ssr="true">
  
  
  <div data-hpc="true" data-target="react-partial.reactRoot"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Screen Sharing Application</h2><a id="user-content-screen-sharing-application" aria-label="Permalink: Screen Sharing Application" href="#screen-sharing-application"></a></p>
<p dir="auto">A real-time screen sharing application built with Next.js, WebRTC, and PeerJS. Create or join rooms to share your screen with others instantly.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🚀 Features</h2><a id="user-content--features" aria-label="Permalink: 🚀 Features" href="#-features"></a></p>
<ul dir="auto">
<li>Real-time screen sharing</li>
<li>Room-based sharing system</li>
<li>Cross-browser support</li>
<li>Fullscreen mode</li>
<li>Simple and intuitive interface</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🛠️ Built With</h2><a id="user-content-️-built-with" aria-label="Permalink: 🛠️ Built With" href="#️-built-with"></a></p>
<ul dir="auto">
<li><a href="https://nextjs.org/" rel="nofollow">Next.js</a> - React framework</li>
<li><a href="https://peerjs.com/" rel="nofollow">PeerJS</a> - WebRTC abstraction</li>
<li><a href="https://tailwindcss.com/" rel="nofollow">Tailwind CSS</a> - Styling</li>
<li><a href="https://ui.shadcn.com/" rel="nofollow">shadcn/ui</a> - UI components</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔧 Development Tools</h2><a id="user-content--development-tools" aria-label="Permalink: 🔧 Development Tools" href="#-development-tools"></a></p>
<p dir="auto">This project was developed using:</p>
<ul dir="auto">
<li><a href="https://bolt.new/" rel="nofollow">Bolt.new</a> - Cloud development environment</li>
<li><a href="https://cursor.sh/" rel="nofollow">Cursor</a> - AI-powered code editor</li>
</ul>
</article></div>
</react-partial>

      </div>

</turbo-frame>


    </main>
  </div>

          




    <ghcc-consent id="ghcc" data-initial-cookie-consent-allowed="" data-cookie-consent-required="true"></ghcc-consent>


  

    <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm" open="">
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog="">
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

    

    <template id="snippet-clipboard-copy-button">
  <div class="zeroclipboard-container position-absolute right-0 top-0">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn js-clipboard-copy m-2 p-0" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon m-2">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>
<template id="snippet-clipboard-copy-button-unpositioned">
  <div class="zeroclipboard-container">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 d-flex flex-justify-center flex-items-center" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>




    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Engineers do not get to make startup mistakes when they build ledgers (211 pts)]]></title>
            <link>https://news.alvaroduran.com/p/engineers-do-not-get-to-make-startup</link>
            <guid>42269227</guid>
            <pubDate>Thu, 28 Nov 2024 23:03:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://news.alvaroduran.com/p/engineers-do-not-get-to-make-startup">https://news.alvaroduran.com/p/engineers-do-not-get-to-make-startup</a>, See on <a href="https://news.ycombinator.com/item?id=42269227">Hacker News</a></p>
Couldn't get https://news.alvaroduran.com/p/engineers-do-not-get-to-make-startup: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Goodbye, Rust. I wish you success but I'm back to C++ (sorry, it is a rant) (218 pts)]]></title>
            <link>https://old.reddit.com/r/rust/comments/1h15md8/goodbye_rust_i_wish_you_success_but_im_back_to_c/</link>
            <guid>42268819</guid>
            <pubDate>Thu, 28 Nov 2024 22:02:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://old.reddit.com/r/rust/comments/1h15md8/goodbye_rust_i_wish_you_success_but_im_back_to_c/">https://old.reddit.com/r/rust/comments/1h15md8/goodbye_rust_i_wish_you_success_but_im_back_to_c/</a>, See on <a href="https://news.ycombinator.com/item?id=42268819">Hacker News</a></p>
Couldn't get https://old.reddit.com/r/rust/comments/1h15md8/goodbye_rust_i_wish_you_success_but_im_back_to_c/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Send someone you appreciate an official 'Continue and Persist' Letter (925 pts)]]></title>
            <link>https://ContinueAndPersist.org</link>
            <guid>42268580</guid>
            <pubDate>Thu, 28 Nov 2024 21:16:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ContinueAndPersist.org">https://ContinueAndPersist.org</a>, See on <a href="https://news.ycombinator.com/item?id=42268580">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="G1876240563" page-url="continue-and-persist"><bodycopy><p><h2><span><b></b></span>BOONDOGGLE &amp; DOGGLE PARTNERS LLP</h2></p><p><br>
<column-set gutter="0.0rem" mobile-gutter="0.0rem" mobile-stack="false"><column-unit slot="0"><span><b>New York</b></span></column-unit><column-unit slot="1"><span><b> &nbsp; Markham</b></span></column-unit><column-unit slot="2"><span><b>Dubai</b></span></column-unit><column-unit slot="3"><span><b>Chicago</b></span></column-unit><column-unit slot="4"><span><b>Parsipanny</b></span></column-unit></column-set>


</p><column-set gutter="2" mobile-stack="true"><column-unit slot="0"><p><h2><a href="https://cargo.site/" target="_blank"></a><span><s><a href="https://www.investopedia.com/terms/c/cease-and-desist.asp" target="_blank">CEASE</a> &nbsp;AND DESIST </s></span> <br><span>CONTINUE AND PERSIST</span></h2></p><div>

<p><span><span><span>Send someone you appreciate <br>
an official ‘Continue and Persist’ Letter</span></span></span></p></div><br><span><span>Every day, thousands of Cease and Desist letters are issued, telling people to stop what they’re doing (<a href="https://www.theguardian.com/food/2024/apr/04/chili-crunch-trademark-momofuku-david-chang" target="_blank"><u>Looking at you, David Chang</u></a>). What a bummer!<p>
That’s why we created:<b> The</b> <b>Continue and Persist Letter</b>. A official-looking </p><s>legal</s> letter that encourages and uplifts people, one that tells people to keep doing what they’re doing! Surprise someone you appreciate by sending them a Continue and Persist Letter.</span>
</span><p><u><span><b>How It Works</b></span></u></p><br><span><span>1. Fill out the form below to choose who will receive your letter.<br>
2. We'll send your personalized letter for free!<br>
3. They will receive the letter within one week.</span><br>
 
 </span><span><br>
</span></column-unit><column-unit slot="1"><media-item freeform-scale="150" freeform-x="-16.6910936264412" freeform-y="0" freeform-z="1" hash="V1771987302032174028998573787549" scale="100.1.00"></media-item><br></column-unit></column-set><media-item autoplay="false" browser-default="true" disable-zoom="true" hash="S1800446353418563434206537157021" loop="false" muted="false"></media-item><p>

<span><p><span><u><span><b>
Send a Continue &amp; Persist Letter to:</b></span></u><br>
<marquee-set behavior="scroll" friction="5" speed="-5" vertical-height="100"><marquee-inner slot="contents"><span><br><span>A friend for hearing you out &nbsp;<text-icon icon="checkmark"></text-icon> &nbsp; Someone you appreciate &nbsp;<text-icon icon="checkmark"></text-icon> &nbsp;Someone who deserves acknoledgement <text-icon icon="checkmark"></text-icon> &nbsp; A family member for supporting you &nbsp;<text-icon icon="checkmark"></text-icon> A friend who always goes above and beyond &nbsp;<text-icon icon="checkmark"></text-icon> &nbsp; A coworker who is underappreciated &nbsp; <text-icon icon="checkmark"></text-icon> &nbsp; Someone you love &nbsp; <text-icon icon="checkmark"></text-icon> &nbsp; A great coworker &nbsp; &nbsp;<text-icon icon="checkmark"></text-icon></span> &nbsp; &nbsp;</span></marquee-inner></marquee-set></span></p></span><br>
<span><p><span><u><span><b>All This For Free!</b></span></u></span></p></span><br><span><span><text-icon icon="checkmark"></text-icon>Formal Letterhead<br>
 <text-icon icon="checkmark"></text-icon>Official Envelope &nbsp;
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>
 <text-icon icon="checkmark"></text-icon>Fancy Paper<br>
 <text-icon icon="checkmark"></text-icon>Hand-Signed by <s>Legal</s> Professionals<br>
<text-icon icon="checkmark"></text-icon>Over 100+ Letters Already Sent!<br>
 <text-icon icon="checkmark"></text-icon><b>Free / Optional Donation!</b></span></span></p><marquee-set friction="5" speed="-7" vertical-height="100"><marquee-inner slot="contents"><media-item hash="A1741508973765919055580573758316" scale="71.8%"></media-item><media-item hash="F1741508974153300681128474342252" scale="69.1%"></media-item><media-item hash="K1741508974171747425202183893868" scale="66.4%"></media-item><media-item hash="U1741508974190194169275893445484" scale="68.6%"></media-item><media-item hash="C1741508974208640913349602997100" scale="66.8%"></media-item><media-item hash="F1741508974227087657423312548716" scale="67.4%"></media-item></marquee-inner></marquee-set><p><h2><br><marquee-set behavior="scroll" direction="horizontal" friction="5" pointer-interaction="false" speed="-14" vertical-height="100"><marquee-inner slot="contents"></marquee-inner></marquee-set>FILL OUT THE FORM AND WE’LL TAKE CARE OF THE REST</h2></p>&nbsp;

<!--  <script type="text/javascript">kofiwidget2.init('$3 for a very scary letter', '#000000', 'L3L7X03JZ');kofiwidget2.draw();</script>  -->
<!--    END JOTFORM EMBED    -->

<!--    START KOFI EMBED    -->
<p><a href="https://ko-fi.com/L3L7X03JZ" target="_blank"><img alt="Buy Me a Coffee at ko-fi.com" src="https://freight.cargo.site/t/original/i/I1771989892803592205210260048285/Legal-Fees-34x.png"></a></p>
<!--  <iframe height="550" id="kofiframe" src="https://ko-fi.com/boondogglepartners/?hidefeed=true&amp;widget=true&amp;embed=true&amp;preview=true" style="border:none;width:100%;padding:4px;background:#f9f9f9;" title="boondogglepartners"></iframe>   -->
<!--    END KOFI EMBED    -->
<br><hr><p><span><span><u>About Boondoggle &amp; Doggle Partners LLP</u></span><br>
</span></p><span>
<br>
Boondoggle &amp; Doggle Partners LLP is a nationally-recognized firm specializing solely in the administration of Continue and Persist Letters. Need legal help? What do we look like, lawyers!? Go get a real lawyer. <p>

Founding Partners Mark Chan and Adnan Aga represent a combined one month of general, non-specific experience representing general, non-specific clients. </p><p>

Boondoggle &amp; Doggle Partners LLP is a subsidiary of Boondoggle Corporation.</p></span><p><span><u>The Partners</u></span></p>
<column-set gutter="2" mobile-stack="false"><column-unit slot="0"><span><media-item hash="H1707948944683348161522198410092" scale="41.9%"></media-item><p>
<span><b>Mark Chan</b>, Partner</span></p><p>
<span>Mark has a combined 3 hours of legal training in the form of accidentally walking into a law school open house tour. He has the law school branded clicky pen to prove it.</span></p></span></column-unit><column-unit slot="1"><span><media-item hash="W1707948882185779239794237535084" scale="43.4%"></media-item></span><span><span><b>Adnan Aga</b>, Partner</span><p>
<span>Adnan has been involved in the legal world since he was eight by watching Judge Judy on basic cable. He has never passed any bar (without having a drink).</span></p></span><br></column-unit></column-set><br>&nbsp;

<!--  Google tag (gtag.js)  -->

</bodycopy></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hetzner raises prices while significantly lowering bandwidth (US) (295 pts)]]></title>
            <link>https://adriano.fyi/posts/hetzner-raises-prices-while-significantly-lowering-bandwidth-in-us/</link>
            <guid>42268475</guid>
            <pubDate>Thu, 28 Nov 2024 20:56:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://adriano.fyi/posts/hetzner-raises-prices-while-significantly-lowering-bandwidth-in-us/">https://adriano.fyi/posts/hetzner-raises-prices-while-significantly-lowering-bandwidth-in-us/</a>, See on <a href="https://news.ycombinator.com/item?id=42268475">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
<article>
  
  <p><time>2024-11-28&nbsp;</time></p>

  

  
    <div>
      <h2>
        Content Overview
      </h2>
      <nav id="TableOfContents">
  <ul>
    <li><a href="#hetzner-raises-prices">Hetzner raises prices</a></li>
    <li><a href="#update">Update</a></li>
    <li><a href="#new-price-and-bandwidth-table">New price and bandwidth table</a></li>
    <li><a href="#hetzners-email">Hetzner’s email</a></li>
  </ul>
</nav>
    </div>
  

  
  <img src="https://adriano.fyi/img/hetzner.webp" alt="Hetzner raises prices while significantly lowering bandwidth (US)" title="Cover Image">


  <div>
        <h2 id="hetzner-raises-prices">Hetzner raises prices<a href="#hetzner-raises-prices" arialabel="Anchor">⌗</a> </h2>
<p>This morning I received an email from Hetzner stating that they are raising prices in the US while significantly reducing bandwidth.</p>
<p>The largest price percentage increase is <strong>27.52%</strong> for <strong>CPX21</strong> servers, and the smallest is <strong>4.17%</strong> for <strong>CX3+</strong> servers.</p>
<p>Bandwidth allotments are decreasing on average, across all products, <strong>88.19%</strong> from previous allotments.</p>
<p>I’ve been a big fan of Hetzner. Unfortunately they’ve made a feeble attempt to dress this change up in the name of “fairness”.</p>
<blockquote>
<p>With the new tariff structure, we want to make conditions for our customers around the world as fair as possible … Until this change, customers who have used fewer resources have covered the costs, in a way, for other customers who have used much more resources. We want to make things more balanced. The new prices will give our customers the best possible price for the resources they use.</p>
<ul>
<li>Hetzner</li>
</ul>
</blockquote>
<p>I’d love to see a better explanation for why prices are increasing <em>so much</em> in exchange for such a significant drop in bandwidth allotments. A lot of Hetzner customers cite generous bandwidth allotments as one of the reasons they’ve chosen Hetzner as a provider. As far as I can tell, that generosity has evaporated in the great US of A.</p>
<p>And the fact that this was announced on Thanksgiving Day, a major holiday in the US, certainly deserves a dishonorable mention.</p>
<h2 id="update">Update<a href="#update" arialabel="Anchor">⌗</a> </h2>
<p>Now that I’ve looked at my invoice, Hetzner’s price change and justification is even more frustrating.</p>
<p>

<label for="zoomCheck-ad53e">
  <img loading="lazy" decoding="async" src="https://adriano.fyi/img/hetzner-invoice.png" alt="hetzner invoice" title="hetzner invoice">
</label>
</p>
<p>I personally use <code>0TB</code> per month across 6 <code>CPX21</code> servers (I know I’m over-provisioned; that’s not the point). The point is I’ve been paying <code>€42.30 + €1.00/mo</code> for <code>20TB</code> of bandwidth, of which I’ve used zero on average. What Hetzner’s statement tells me is that even at that price, I was subsidizing some heavy users. And to thank me for it, I can now pay <code>€53.94/mo</code> in exchange for <code>12TB</code>, for fairness.</p>
<h2 id="new-price-and-bandwidth-table">New price and bandwidth table<a href="#new-price-and-bandwidth-table" arialabel="Anchor">⌗</a> </h2>
<p>From the updated bandwidth and pricing table provided in Hetzner’s email, here are the price changes for CCX and CPX servers in Ashburn and Hillsboro.</p>


<table>
  <thead>
    <tr>
      <th>Product</th>
      <th>Old(€)</th>
      <th>New(€)</th>
      <th>Increase(%)</th>
      <th>Old Traffic (TB)</th>
      <th>New Traffic (TB)</th>
      <th>Traffic Decrease (%)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>CPX11</td>
      <td>3.85</td>
      <td>4.49</td>
      <td>16.62%</td>
      <td>20</td>
      <td>1</td>
      <td>95.000000</td>
    </tr>
    <tr>
      <td>CPX21</td>
      <td>7.05</td>
      <td>8.99</td>
      <td>27.52%</td>
      <td>20</td>
      <td>2</td>
      <td>90.000000</td>
    </tr>
    <tr>
      <td>CPX31</td>
      <td>13.10</td>
      <td>15.99</td>
      <td>22.06%</td>
      <td>20</td>
      <td>3</td>
      <td>85.000000</td>
    </tr>
    <tr>
      <td>CPX41</td>
      <td>24.70</td>
      <td>29.99</td>
      <td>21.42%</td>
      <td>20</td>
      <td>4</td>
      <td>80.000000</td>
    </tr>
    <tr>
      <td>CPX51</td>
      <td>54.40</td>
      <td>59.99</td>
      <td>10.28%</td>
      <td>20</td>
      <td>5</td>
      <td>75.000000</td>
    </tr>
    <tr>
      <td>CCX13</td>
      <td>11.99</td>
      <td>12.99</td>
      <td>8.34%</td>
      <td>20</td>
      <td>1</td>
      <td>95.000000</td>
    </tr>
    <tr>
      <td>CCX23</td>
      <td>23.99</td>
      <td>25.99</td>
      <td>8.34%</td>
      <td>20</td>
      <td>2</td>
      <td>90.000000</td>
    </tr>
    <tr>
      <td>CCX33</td>
      <td>47.99</td>
      <td>49.99</td>
      <td>4.17%</td>
      <td>30</td>
      <td>3</td>
      <td>90.000000</td>
    </tr>
    <tr>
      <td>CCX43</td>
      <td>95.99</td>
      <td>99.99</td>
      <td>4.17%</td>
      <td>40</td>
      <td>4</td>
      <td>90.000000</td>
    </tr>
    <tr>
      <td>CCX53</td>
      <td>191.99</td>
      <td>199.99</td>
      <td>4.17%</td>
      <td>50</td>
      <td>6</td>
      <td>88.000000</td>
    </tr>
    <tr>
      <td>CCX63</td>
      <td>287.99</td>
      <td>299.99</td>
      <td>4.17%</td>
      <td>60</td>
      <td>8</td>
      <td>86.666667</td>
    </tr>
    <tr>
      <td>LB11</td>
      <td>5.39</td>
      <td>5.39</td>
      <td>0.00%</td>
      <td>20</td>
      <td>1</td>
      <td>95.000000</td>
    </tr>
    <tr>
      <td>LB21</td>
      <td>16.40</td>
      <td>16.40</td>
      <td>0.00%</td>
      <td>20</td>
      <td>2</td>
      <td>90.000000</td>
    </tr>
    <tr>
      <td>LB31</td>
      <td>32.90</td>
      <td>32.90</td>
      <td>0.00%</td>
      <td>20</td>
      <td>3</td>
      <td>85.000000</td>
    </tr>
  </tbody>
</table>


<h2 id="hetzners-email">Hetzner’s email<a href="#hetzners-email" arialabel="Anchor">⌗</a> </h2>


<div>
      <table max-width="600">
        <tbody><tr>
          <td><img src="https://cdn.hetzner.com/assets/hetzner-logo-300.png" alt="Hetzner Online 
GmbH" width="200"></td></tr>
        <tr>
          <td><p>Your client number: XXXXXXXXXX</p>

<p>Dear Adriano Caloiaro</p>

<p>We are writing to inform you about important changes to the tariff 
structure of our Cloud servers (CCX and CPX lines) and our Load balancers at 
our US locations in Ashburn and Hillsboro.</p>

<h4>What will change?</h4>

<p>Starting on 1 December 2024, 01:00 am CET, we will begin charging new 
prices for newly-created Cloud servers and introduce new amounts for included 
traffic for Cloud Servers and Load balancers at the US locations in Ashburn 
(ASH) and Hillsboro (HIL). This also applies to existing Cloud servers and 
Load balancers that are switched to a different tariff using the 
“Rescale” function. For any existing Cloud servers and Load balancers you 
have at these locations, the new prices and the new amounts for included 
traffic will apply later, starting on 1 February 2025, 01:00 am CET. The 
price for traffic overage will remain unchanged in the new price 
structure.</p>

<p>What are the new prices and amounts of included traffic?</p>

<p>Below, you can see a list of the old and new prices and the included 
traffic.
</p><table>
<tbody><tr><td><b>Product</b></td><td><b>Old price</b></td><td><b>New 
price</b></td><td><b>Old included traffic</b></td><td><b>New included 
traffic</b></td></tr>
<tr><td>CPX11</td><td>€&nbsp;3.85</td><td>€ 
4.49</td><td>20&nbsp;TB</td><td>1&nbsp;TB</td></tr>
<tr><td>CPX21</td><td>€&nbsp;7.05</td><td>€ 
8.99</td><td>20&nbsp;TB</td><td>2&nbsp;TB</td></tr>
<tr><td>CPX31</td><td>€&nbsp;13.10</td><td>€ 
15.99</td><td>20&nbsp;TB</td><td>3&nbsp;TB</td></tr>
<tr><td>CPX41</td><td>€&nbsp;24.70</td><td>€ 
29.99</td><td>20&nbsp;TB</td><td>4&nbsp;TB</td></tr>
<tr><td>CPX51</td><td>€&nbsp;54.40</td><td>€ 
59.99</td><td>20&nbsp;TB</td><td>5&nbsp;TB</td></tr>
<tr><td>&nbsp;</td></tr>
<tr><td>CCX13</td><td>€&nbsp;11.99</td><td>€ 
12.99</td><td>20&nbsp;TB</td><td>1&nbsp;TB</td></tr>
<tr><td>CCX23</td><td>€&nbsp;23.99</td><td>€ 
25.99</td><td>20&nbsp;TB</td><td>2&nbsp;TB</td></tr>
<tr><td>CCX33</td><td>€&nbsp;47.99</td><td>€ 
49.99</td><td>30&nbsp;TB</td><td>3&nbsp;TB</td></tr>
<tr><td>CCX43</td><td>€&nbsp;95.99</td><td>€ 
99.99</td><td>40&nbsp;TB</td><td>4&nbsp;TB</td></tr>
<tr><td>CCX53</td><td>€&nbsp;191.99</td><td>€ 
199.99</td><td>50&nbsp;TB</td><td>6&nbsp;TB</td></tr>
<tr><td>CCX63</td><td>€&nbsp;287.99</td><td>€ 
299.99</td><td>60&nbsp;TB</td><td>8&nbsp;TB</td></tr>
<tr><td>&nbsp;</td></tr>
<tr><td>LB11</td><td>€&nbsp;5.39</td><td>unchanged</td><td>20&nbsp;TB</td><td>1&nbsp;TB</td></tr>
<tr><td>LB21</td><td>€&nbsp;16.40</td><td>unchanged</td><td>20&nbsp;TB</td><td>2&nbsp;TB</td></tr>
<tr><td>LB31</td><td>€&nbsp;32.90</td><td>unchanged</td><td>20&nbsp;TB</td><td>3&nbsp;TB</td></tr>
</tbody></table>
All monthly prices are excl. VAT and excl. IPv4 addresses.

<h4>Why are we making these changes?</h4>

<p>With the new tariff structure, we want to make conditions for our 
customers around the world as fair as possible. To do that, we will calculate 
our prices based on local conditions in Europe, Singapore, and the USA. Until 
this change, customers who have used fewer resources have covered the costs, 
in a way, for other customers who have used much more resources. We want to 
make things more balanced. The new prices will give our customers the best 
possible price for the resources they use.</p>

<h4>What else do I need to know?</h4>

<p>Displayed prices and included traffic on Cloud Console</p>

<p>For technical reasons, we will display the new prices and amounts of 
included traffic on the Cloud server and Load balancer detail pages on Cloud 
Console starting on 1 December 2024. This will also be true for your existing 
Cloud servers and Load balancers. However, the invoice will still be issued 
according to the previous conditions. A corresponding note will be displayed 
for your existing affected products. On the invoice preview on the 
“Usage” page, you will see the correct existing price for your existing 
servers.</p>

<p>Displayed prices on the Cloud API</p>

<p>In the transition time period between 1 December 2024 and 1 February 2025, 
the Cloud API will already return the new prices and included traffic. This 
will also be true for your existing Cloud servers and Load balancers. But 
this will only affect the display here. The invoice preview will display the 
correct existing price. And of course, your invoice itself will be for the 
correct existing price.</p>

<p>Traffic warning</p>

<p>You may see early traffic warnings during the transition time period 
starting on 1 December 2024 for your existing Cloud servers and Load 
balancers. Please note that the previous traffic included for existing Cloud 
servers and Load balancers remains valid until 31 January 2025.</p>

<p>If you do not agree with this adjustment, you can cancel the affected 
products at any time. We ask for your understanding for why we are making 
these changes. We truly believe that we can continue to offer you our Cloud 
Servers and features at the best price-performance ratio despite these 
adjustments.</p>

<p>We will be happy to answer any questions you may have. Please write us a 
support request using your account on Cloud Console at <a href="https://console.hetzner.cloud/support">https://console.hetzner.cloud/support</a></p>

<p>Thank you for your trust and support.</p>

<p>Kind regards</p>

<p>Hetzner Online</p>
  </td>
</tr>
<tr>
  <td>
    Hetzner Online GmbH, Industriestr. 25, 91710 Gunzenhausen, Germany<br>
    CEO: Martin Hetzner, Stephan Konvickova, Günther Müller<br>Register 
Court: Registergericht Ansbach, HRB 6089,
    VAT Reg. No.: DE812871812
  </td></tr>
<tr>
<td>
  <a href="https://www.hetzner.com/rechtliches/agb">Terms and Conditions</a>  
 •   <a href="https://www.hetzner.com/rechtliches/impressum/">Legal 
Notice</a>    •   <a href="https://www.hetzner.com/datenschutzhinweis">Data 
Privacy</a>   •   <a href="https://www.hetzner.com/rechtliches/system-policies/">System 
Policies</a>
</td>
</tr>
</tbody></table>
</div>



      </div>

  
    

<section id="comments">
  <h2>Comments</h2>
  <p>With an account on the Fediverse or Mastodon, you can respond to this <a href="https://indieweb.social/@adriano/113561501744218878">post</a>. Since Mastodon is decentralized, you can use your existing account hosted by another Mastodon server or compatible platform if you don't have an account on this one. Known non-private replies are displayed below.</p>

  
  
  
  
  
</section>


  

  
    


  

</article>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The success and failure of Ninja (2020) (213 pts)]]></title>
            <link>https://neugierig.org/software/blog/2020/05/ninja.html</link>
            <guid>42268310</guid>
            <pubDate>Thu, 28 Nov 2024 20:21:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://neugierig.org/software/blog/2020/05/ninja.html">https://neugierig.org/software/blog/2020/05/ninja.html</a>, See on <a href="https://news.ycombinator.com/item?id=42268310">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>



<p>Around nine years ago I published Ninja, a build system that is
mostly comparable to Make.  At the time <a href="https://neugierig.org/software/chromium/notes/2011/02/ninja.html">I was a bit embarrassed to
share my side
project</a>
but since then it has become widely popular.</p>
<p>I can't list all of the users off the top of my head anymore, but some
of the "big" projects that use Ninja include:</p>
<ul>
<li>Chrome, which eventually removed all of its non-Ninja builds;</li>
<li>Android, which uses it for some large component of the system that
I've never quite understood;</li>
<li>all <a href="https://mesonbuild.com/">Meson</a> projects, which appears to
increasingly be the build system used in the free software world;</li>
<li>many other projects that that use Ninja with CMake (for one
random example, the <a href="https://github.com/apple/swift#system-requirements">build instructions for the Swift programming
language</a> tell you
to install Ninja).</li>
</ul>
<p>Ninja has been by far my most successful open source project,
depending on how you quantify success.  (Other projects of mine like
Chrome have more users, but I was responsible for only parts of
Chrome; Ninja also has had important contributions by collaborators
but it feels more like "mine".)  I released Ninja in 2011, gave
ownership of the Ninja project away in 2014, and it has since been
passed on again to a third maintainer, so now that my part in the
story is pretty much over I here would like to reflect on what I
learned.</p>
<p>If I were to summarize what I learned in a single sentence, it would
be this: we talk about programming like it is about writing code, but
the code ends up being less important than the architecture, and the
architecture ends up being less important than social issues.</p>
<p>That is, as programmers we like to talk about problems as if they are
primarily technical — "how do I optimize this loop to squeeze more
qps out of this service?" — when in my experience the tech almost
always ends up secondary to bigger picture factors.  I have since seen
that same observation in other words stated by many others as
describing the journey from a "junior" to "senior" engineer which also
rings very true against my career, so I also hope in this
retrospective to give some insight into what that means.</p>
<h2>The tech</h2>
<p>Let's start by getting some technical details out of the way.</p>
<p>What Ninja specifically does is pretty simple; given a description of
the requirements, I'd expect a competent undergrad, perhaps in a
systems course, to be able to bang out a basic version of it without
much help.  To summarize, the user gives Ninja a <code>ninja.build</code> file
which (omitting some details) contains all the commands you'd like
Ninja to run, along with which files each command consumes and
produces.  Ninja loads this file, checks the modification timestamps
of the various files, and executes in parallel the commands needed to
bring everything up to date.  As compared to Make (which does pretty
much the same thing) Ninja provides <em>fewer</em> features in its input
build language, and is primarily structured around making the few
things it does very fast.</p>
<p>The few things Ninja does are: (1) parse and interpret that build
file; (2) check the modification times of its inputs; (3) execute the
needed commands.  The goal is to get to step 3 as fast as possible
even on huge (&gt;100k input files) projects, and doing so is a
collection of careful but small optimizations. For one small example,
Ninja is careful to map each input file path to a unique in-memory
object as early as possible, and then on it uses pointer comparisons
between those objects for testing path equality (interned strings,
effectively).  I wrote a chapter for the book "The Performance of Open
Source Software" about Ninja that tells some of the stories of the
lower level technical details of making that fast which <a href="https://www.aosabook.org/en/posa/ninja.html">you can read
online</a>.</p>
<p>Many people have done rewrites of Ninja over the years.  It's a small
enough project that it's fun to try implementing in your favorite
language.  For some examples,
<a href="https://github.com/apple/swift-llbuild">llbuild</a> and
<a href="https://shakebuild.com/">Shake</a> both support Ninja files as inputs,
and <a href="https://github.com/michaelforney/samurai">samurai</a> is a nearly
file-by-file reimplementation (with less code, but with fewer features
and no tests(!)). Ninja is pretty easy to implement for the fun 20% of
it and the remaining 80% is "just" some fiddly details.  To my
knowledge nobody has ever made a faster implementation.</p>
<h2>Some architecture notes</h2>
<p>Some pieces of Ninja took struggle to get to and then are obvious in
retrospect.  I think this is true of much of math, that once you have
distilled the ideas to their essence they seem obvious. The power
comes from having the right way of thinking about the problem.  I
mostly stumbled through Ninja's design but once I was on the other
side of it I came to see I accidentally hit some good points in the
design space.  Here are a few examples.</p>
<p><strong>The graph representation</strong>.  Make doesn't well handle the case when
build rules produce multiple files.  I don't know how Make is
structured internally, but I would guess that it represents the build
structure as a graph between files since that is what the input syntax
looks like and that structure would generate that behavior.  Ninja
instead uses a bipartite graph between files and commands, where file
nodes are edges into command nodes which have edges back out to files.
This representation better captures the structure of builds: the
command is out of date if any of its inputs change, and it updates all
its outputs when it runs.  (The one graph invariant is that a given
file may have at most one input edge.)  For another consequence of
this, note that the command line itself can be thought of as an input
to command nodes, in that the command is out of date (and consequently
so are its outputs) if the command-line flags change.</p>
<p><strong>The deps log</strong>.  To get C header dependencies right you need to
consume additional dependency data produced by the C compiler.  It's
described more in <a href="https://www.aosabook.org/en/posa/ninja.html">the book chapter</a>. I recall struggling with
whether to bring in a database and how to reconcile that with my
aspirations of simplicity until I finally hit upon a <a href="https://github.com/ninja-build/ninja/blob/master/src/deps_log.h#L29">representation
format</a>
that ended up pretty tight.  (It's unfortunately still wrong in some
important ways but oh well.)</p>
<p><strong>End-to-end / crash-only</strong>.  Ninja is not a persistent daemon process
but instead does all its work from scratch on each execution.  This
is intentional and a mixture of the insights of <a href="https://en.wikipedia.org/wiki/End-to-end_principle">the end-to-end
principle</a> and
<a href="https://en.wikipedia.org/wiki/Crash-only_software">crash only
software</a>, which
is to say: given that you need to run Ninja from scratch sometimes,
if you make that fast, then you don't need to build a second "online"
codepath.  Projects that can stay memory-resident tend to eventually
let their startup performance languish.</p>
<p><strong>File status</strong>.  The reason programmers sometimes expect build tools to
be memory resident is so they can cache status about files on disk.
But in practice, the kernel is already caching this information in
memory and caching it again in userland doesn't save you much;
fetching file status from Linux is extremely fast.  Ninja does it all
from a single thread even.  On a machine that was "fast" ten years
ago you can <a href="https://github.com/ninja-build/ninja/wiki/Timing-Numbers">stat 30k files in 10s of
milliseconds</a>.
(A programming joke: half of performance problems are fixed by
introducing a cache; the other half are fixed by removing one.)</p>
<p><strong>Orders of magnitude</strong>.  A rule of thumb is that you can get scale by
2x with optimization, but to scale by 10x you need to rearchitecture.
Ninja was designed around Chrome's build which at the time had around
30k build steps.  These days it's used in much smaller settings where
it's likely not needed (see below discussion on speed) and in larger
settings like the Android build where it is failing to scale and will
likely need an alternative approach.</p>
<p><strong>Underspecifying and overspecifying</strong>.  Ninja executes commands in
parallel, so it requires the user to provide enough information to get
that correct. But at the other extreme, it also doesn't mandate that
it has a complete picture of the build. You can see one discussion of
this dynamic <a href="https://github.com/ninja-build/ninja/issues/1303">in this bug in
particular</a> (search
for "evmar" to see my comments).  You must often compromise between
correctness and convenience or performance and you should be
intentional when you choose a point along that continuum.  I find some
programmers are inflexible when considering this dynamic, where it's
somehow obvious that one of those concerns dominates, but in my
experience the interplay is pretty subtle; for example, a tool that
trades off correctness for convenience might overall produce a more
correct ecosystem than a more correct but less convenient alternative,
if programmers end up avoiding the latter.  (That could be <a href="https://neugierig.org/software/blog/2011/10/why-not-haskell.html">one reason
Haskell isn't more
successful</a>.
Now that I work in programming languages I see this dynamic play out
regularly.)</p>
<p>And finally, the biggest architectural insight is:</p>
<h2>The 'assembler' metaphor</h2>
<p>When people think of build systems they think of a broad range of
features, so broad that often the way build systems talk about
themselves sometimes aren't even comparable across different tools.
The marketing text for these tools often talks about how user-friendly
the input syntax is.</p>
<p>Ninja's insight (discovered in retrospect) is that all of these tools,
no matter the high-level features, ultimately eventually must
construct some sort of graph of the <em>actions</em>: the files they intend
to keep up to date and which commands to execute.  Ninja only
implements that action graph and leaves it to the user to choose
another "generator" program on top.</p>
<p>I originally invented this two program split just because it neatly
fit into the project (Chrome) I was working on at the time, but I have
since come to see it as Ninja's primary contribution.</p>
<p>On one side, it allowed me to make Ninja stupid but quick, because
anything costly (such as "glob for *.c") is forced into the generator.
Compared to other build systems that do all the work in one pass,
Ninja's design effectively forces you to "snapshot" the action graph
to disk once you've computed it.  Another way to look at this is that
it effectively has you cache the action graph across builds.</p>
<p>On the other side, it also meant Ninja was useful in very flexible
ways, because the generator could be as high level as the user wanted
("tests are found by globbing the entire source tree for files with
'test' in their name").  Importantly, it forced the developer who used
Ninja to decide what they were going to pay for.  If their generator
program wanted to glob all over the disk looking for files, it was
welcome to, but then it would be more obvious to them why their builds
were slow.</p>
<p>(I should note here that a clean separation between a generator and
the resulting action graph is not as easy as I make it out to be.
Ninja ultimately has a lot of fiddly details that are all struggling
around which layer the work belongs in, but it's hard to write up the
lessons learned.)</p>
<p>The irony of this aspect of Ninja's design is that there is nothing
preventing anyone else from doing this.  Xcode or Visual Studio's
build systems (for example) could just as well do the same thing: do a
bunch of work up front, then snapshot the result for quick
reexecution.  I think the reason so few succeed at this is that it's
just too tempting to mix the layers.</p>
<p>Ninja's closest relative is Make, which attempts to encompass all of
this programmer-facing functionality (with globbing, variable
expansions, substringing, functions, etc.) that resulted in a
programming language that was too weak to express all the needed
features (witness autotools) but still strong enough to let people
write slow Makefiles.  This is vaguely <a href="https://en.wikipedia.org/wiki/Greenspun%27s_tenth_rule">Greenspun's tenth
rule</a>, which
I strongly attempted to avoid in Ninja.</p>
<h2>Defaults dominate</h2>
<p>By default, Ninja executes the desired commands in parallel.  Make is
capable of this too; Ninja borrows the same flag name for this
capability (<code>-j</code>) and just uses a different default value.  However,
because Make defaulted to running commands serially, it is relatively
easy to write a Makefile that underspecifies dependencies such that it
is unsafe to execute it in parallel.  In fact, there's even some
commercial vendor that offers some sort of "Makefile accelerator" tool
that helps people discover and repair underspecified dependencies.</p>
<p>In contrast, because Ninja always executes commands in parallel (even
on a single-core system) it ends up revealing mistakes like these
earlier.  This means that programs that build with Ninja typically end
up safe to build in parallel.  (Ninja has no fancy system for
detecting when you've gotten things wrong, it just causes wrong builds
more often.)  In contrast, users often forget or are unaware of the
flag to Make that makes it also run in parallel.  It is embarrassing
to take credit for this because it's just a flag, but just because of
its default value, Ninja in practice will end up being "twice as fast
as Make" or more for users who aren't careful.  The lesson is that all
the optimization in the world doesn't matter if your users don't
actually see it.</p>
<h2>Speed</h2>
<p>In this post I have talked about performance a few times, and it's
important to note that there are lots of different kinds of
performance metrics to care about in a build system.  For example, one
might care "how long does the build take when I start from scratch?"
Ninja was solely focused on the edit-compile cycle of <em>incremental</em>
builds in large codebases, which is to say you've run a build, you've
edited one file, and you run the next build.</p>
<p>When I wrote Ninja, I had a memory of blaze (aka
<a href="https://bazel.build/">bazel</a>) being very fast, but it had been years
since I had last used it.  Because of this memory, I kept trying to
make Ninja even faster, to try to catch up with my memory of blaze.
Ironically it turns out blaze is not particularly fast on the speed
metric I cared about; because blaze is a Java program, even having
blaze print its "help" output is pretty slow.</p>
<p>It is maybe silly of me to fixate on incremental builds, but I
strongly believe that iteration time has a huge impact on programmer
satisfaction, and Ninja is used exactly in the edit-compile loop where
the difference of 1 second and 4 seconds is critical.  I think I am
personally more latency-sensitive than the average programmer, but I
also believe that programmers <em>feel</em> latency and it affects their mood
even if they don't notice it.  (Google has recently done some research
in this area that kinda confirmed my belief, here's hoping they'll
publish it publicly!)</p>
<p>It is very difficult to communicate to users the many possible
meanings of "fast".  The Ninja manual tries to warn people away from
using it on small programs. Literally the <a href="https://ninja-build.org/manual.html#_using_ninja_for_your_project">second paragraph after the
introduction</a>
says "If your project is small, Ninja's speed impact is likely
unnoticeable" and recommends using a different build system.
Unfortunately "fast" sells, and the Ninja list often had users trying
to use it for their miniature apps and getting frustrated by its lack
of features.</p>
<p>Though Ninja focused on incremental rebuild performance, some users
reported that Ninja improved their end-to-end build performance too.
This was unintentional, but is because Ninja (again by virtue of doing
nearly nothing) consumes very little CPU while running those builds,
while comparable programs for whatever reason consume more CPU while
running and that takes CPU away from the underlying build.</p>
<p>In my post <a href="https://neugierig.org/software/chromium/notes/2010/05/fast.html">"What does it mean for a browser to be
fast"</a>
I go into how there are many aspects to speed, and that ultimately
what's important is the user's <em>perception</em> of speed.  Ninja is very
terse in its output: for most successful builds, it prints a single
line.  In contrast, other build systems tend to print a bunch of
(often gratuitously colored) output with timing numbers about the
various stages of the build it's going through, which makes them feel
heavy.  Ninja, by virtue of saying little, makes it feel even more
like it's not there.</p>
<h2>CMake</h2>
<p>I originally built Ninja to work with Chrome's wacky one-off build
system and left it at that.  Somehow a kind stranger named Peter
Collingbourne found Ninja and did the work to plug it into the much
more popular CMake build system.  Ninja's design fits well into CMake,
but there were (as always) a lot of details to work out and Peter did
most of this, initially to use Ninja to work on LLVM.  This was more
than just CMake, but also required building new semantics into Ninja.
If anyone is responsible for making Ninja succeed out there in the
real world, Peter is due the credit.</p>
<p>The CMake authors eventually took over this integration and I feel bad
about how poorly I supported them; they were very kind and patient
with me but I never really had the time to answer their requests or
concerns.  Brad, if you read this, I am very sorry!  To this day I've
never actually used CMake and I never could find the time to worry
about it.</p>
<h2>Windows</h2>
<p>Because the motivating project for Ninja was Chrome and Chrome targets
Windows too, we got it working on Windows.  (This was another part of
Ninja that was primarily written by <a href="http://h4ck3r.net/">a
contributor</a>.)</p>
<p>At a technical level, supporting Windows is mostly a big hassle.  In
the places where the Linux code doesn't work as is, it requires either
uninteresting abstractions or major redesigns.  For an example of the
former, spawning processes and capturing their output is very
different between the platforms, but mostly in that you need to learn
a totally different API.  For an example of the latter, Ninja's design
centrally relies on the property that you can get a kernel-cached
file's last modification time quickly, and that is <a href="https://github.com/ninja-build/ninja/wiki/Timing-Numbers">just not true on
Windows</a>.</p>
<p>But Windows is still a huge platform in terms of developers, and those
developers are starved for tools.  The underlying dynamic is that when
someone makes a neat tool for Linux, the impulse is to share it, but
when they do so for Windows, the impulse is to sell it, and so because
of that there aren't as many tools freely available on Windows.</p>
<p>It was a surprise to me how many of the early Ninja users were Windows
users, but in retrospect it is kind of obvious: even if only one in a
hundred Windows developers cared about Ninja, there are so many people
on Windows that they would eventually show up.  (Sometimes in the
Linux Chrome early days we talked about it this way: even if we got
~all desktop Linux users using Chrome, in terms of total humans that's
only like getting an additional 5% of Windows users.  You can disagree
with the specific value of that number but hopefully you get my
point.)</p>
<h2>Related work</h2>
<p>I mentioned that I stumbled through Ninja's design.  I regret not
spending more time researching before building, but I intended the
whole project as just a weekend demo hack, not a serious thing.
(Relatedly, please forgive me for the embarrassing name.)  Since then
I have come to appreciate how important it is to actually understand
the design space when building a thing.  I now find myself noticing
how rare it is for programmers to discuss related work and it now
drives me mad.</p>
<p>The term I used above ("action graph") is not how I thought about it
in Ninja, but is instead taken from Google's build system
("blaze"/"bazel").  In bazel, they explicitly talk about how there's a
graph of targets (higher-level user concepts like "library" and
"binary") and how that generates a <a href="https://docs.bazel.build/versions/master/bazel-overview.html#how-does-bazel-work">graph of actions
(commands)</a>.</p>
<p>I wrote above a bit about how the command-line text can be viewed as
an 'input' to commands in the same way that files are.  This is a
specific instance of the broader concept of incremental computation,
which covers not only build systems but also incrementality in UI.  My
friend <a href="https://twitter.com/radokirov">Rado</a> has been reading the
research in this area for the past year or so(!) and is working on a
series of blog posts that attempt to summarize it; watch for it.  The
Jane Street blog has had <a href="https://blog.janestreet.com/introducing-incremental/">some work on summarizing this area
too</a>; as you can
see there, there's even a connection to our recent renaissance in UI
construction as found in React.</p>
<p>The fantastic paper <a href="https://www.microsoft.com/en-us/research/uploads/prod/2018/03/build-systems-final.pdf">"Build Systems à la
Carte"</a>
discusses incremental computation in the context of build systems.  I
wish this paper had existed before I wrote Ninja.</p>
<h2>Open source</h2>
<p>I'd like to wrap this up by talking a bit about being an open source
maintainer.  As you might have read elsewhere, it ends up not being
especially fun.  (<a href="https://www.youtube.com/watch?v=o_4EX4dPppA">This talk "The Hard Parts of Open
Source"</a> is worth your
time.)</p>
<p>When I try to take stock of my overall feelings about the project, it
is a mixture of the occasional pride when I see someone on proggit or
HN say something nice about it and a larger overall sense of
disappointment.</p>
<p>I made this thing that I thought was cool and I gave it away, and what
I got back were occasionally friendly people who nicely requested
things from me, but more often angry users who demanded things of me,
and rarely anyone saying thanks.  People repeatedly threatened to fork
the project when I didn't agree to their demands, never once
considering the possibility that I had more context on the design
space than they did.</p>
<p>A different source of sadness were the friendly and intelligent people
who made reasonable-seeming contributions that conflicted with my
design goals, where I wanted to repay their effort with a thorough
explanation about why I was turning them down, and doing that was
itself exhausting.</p>
<p>I got into programming via free software, and I wrote code with the
desire to give back to the people who gave me so much.  (If you are
reading this post then I predict you are benefiting from one or more
one of my free software contributions.)  But today I see
that free software is not really about sharing between equals anymore;
people instead think of themselves as customers and treat authors as
if they can go complain to the manager.</p>
<p>Another way of saying this is that today I am motivated by just trying
to impress or live up to the ~ten hackers that I admire, people like
apenwarr or agl or bradfitz or graydon, and while it's occasionally
cool to meet someone and have the reputation of my software precede
me, I think a lot of "succeeding" was mostly just kind of a burden.  I
think I could have learned about as much with a much smaller fraction
of the success.</p>
<h2>Final acknowledgements</h2>
<p>I mentioned a few people already in this post, but I'd like to also
specifically thank Nico Weber, both for being a careful collaborator
and for taking on maintainership of Ninja for years, and also Jan
Niklas Hasse, who took over after Nico and whom I don't know at all
but who seems to be doing a fine job.  And finally, thanks to the many
other <a href="https://github.com/ninja-build/ninja/graphs/contributors">authors of
Ninja</a>.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The UX of Lego Interface Panels (2020) (387 pts)]]></title>
            <link>https://interactionmagic.com/UX-LEGO-Interfaces/</link>
            <guid>42267725</guid>
            <pubDate>Thu, 28 Nov 2024 19:00:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://interactionmagic.com/UX-LEGO-Interfaces/">https://interactionmagic.com/UX-LEGO-Interfaces/</a>, See on <a href="https://news.ycombinator.com/item?id=42267725">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
	
	<h3>August 2020</h3>
	<p>Piloting an <a href="https://www.lego.com/en-de/product/ocean-exploration-ship-60266">ocean exploration ship</a> or <a href="https://www.lego.com/en-de/product/mars-research-shuttle-60226">Martian research shuttle</a> is serious business. Let's hope the control panel is up to scratch. Two studs wide and angled at 45°, the ubiquitous "2x2 decorated slope" is a LEGO minifigure's interface to the world.</p>

<p>These iconic, low-resolution designs are the perfect tool to learn the basics of physical interface design. Armed with 52 different bricks, let's see what they can teach us about the design, layout and organisation of complex interfaces. </p>

<p>Welcome to the world of LEGO UX design.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/interfaces.jpg" alt="" loading="lazy"><figcaption></figcaption></figure>

<h2>Organised chaos</h2>

<p>At a glance, the variety of these designs can be overwhelming, but it's clear that some of these interfaces look far more chaotic than others. Most interfaces in our world contain a blend of digital screens and analog inputs like switches and dials. These LEGO panels are no different.</p>

<p>Plotting the panels across these two axes reveals a few different clusters. Screens with an accompanying row of buttons sit in the top left. A small cluster of very organised switch panels lies to the far right. The centre bottom is occupied by some wild concepts that are hard to understand, even after several glances.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/positioning.jpg" alt="Design positioning with LEGO, in LEGO" loading="lazy"><figcaption>Design positioning with LEGO, in LEGO</figcaption></figure>

<p>Designing a complex machine interface is a juggling act of many different factors from ergonomics to engineering. But we can break down the problem into two key questions:</p>

<ol>
	<li>How can we <strong>differentiate</strong> between the function of different inputs?</li>
	<li>How can we <strong>organise</strong> the many inputs and outputs so that we understand how they relate to each other?</li>
</ol>

<p>Let's take a deeper look at tackling these two challenges in LEGO.</p>

<h2>Differentiating inputs</h2>

<p>What could cause 400 WWII pilots to raise the landing gear on their B-17 bomber just before touchdown? Catastrophic pilot error, or something more fundamental?</p>

<p>It was the psychologist Alphonse Chapanis who first suggested that the high rate of crash landings might be the fault of poor interface design. The adjacent landing gear and flap control knobs were identically shaped. The pilots never stood a chance.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/landing.jpg" alt="B-17 belly landing, and the shape coding that helped to eradicate the problem. Source: Wikipedia" loading="lazy"><figcaption>B-17 belly landing, and the shape coding that helped to eradicate the problem. Source: Wikipedia</figcaption></figure>

<p>His temporary solution was to glue differently shaped strips of rubber to each switch, enabling blind operation by touch alone. This gave rise to the idea of shape coding and a system of differentiation still being followed in aircraft cockpits today.</p>

<p>We can compare the three interfaces below to see this in action. Ignore the overall layout, it's the differences between individual switches that matter here. Imagine trying to feel for one of these buttons without looking. The left panel ("Slope 45 2 x 2 with 12 Buttons") would require careful hand-eye co-ordination. The right panel ("Aircraft Multiple Flight Controls") clearly distinguishes between the throttle (large, linear vertical movement), toggle switches (round vertical flick) and the push buttons (square push-in). </p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/differentiation.jpg" alt="Left to right: terrible, poor and better input differentiation" loading="lazy"><figcaption>Left to right: terrible, poor and better input differentiation</figcaption></figure>

<p>Differentiation like this is a still a very real problem today. In 2015, <a href="https://money.cnn.com/2015/01/06/autos/ford-push-button-ignition-recall/index.html">Ford recalled 13,500 Lincoln SUVs</a> because drivers speeding down the motorway were mistakenly shutting off the engine when they tried to activate sport mode. See if you can spot why:</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/ford-lincoln.jpg" alt="Ford Lincoln MKC before the Engine start/stop button was moved. Source: CNN" loading="lazy"><figcaption>Ford Lincoln MKC before the Engine start/stop button was moved. Source: CNN</figcaption></figure>

<p>Shape coding is one approach to differentiation, but there are many others. Colour coding is perhaps the only one to break into our everyday vocabulary, but we can add four more: size, texture, position and operation coding. Together these six are our allies in the design of error-proof interfaces.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/codings.jpg" alt="The 6 basic codings. Notice that many of these examples actually combine multiple codings in one." loading="lazy"><figcaption>The 6 basic codings. Notice that many of these examples actually combine multiple codings in one.</figcaption></figure>

<p>Size, shape and colour-coding are the fundamentals: quick-wins that can fix a lot of interface problems. Texture is also a great differentiator for blind operation, particularly on small dials requiring precise control.</p>

<p>Position-coding is seemingly straightforward but is often under used. Products with a clear default ergonomic position (like binoculars or a gaming console) can exploit the natural position of the hand to differentiate between primary and secondary actions.</p>

<p>Finally, operation-coding ascribes different types of movements (like a twist or vertical slide) to different inputs. This can be immensely powerful when the switch motion reinforces the operation behind it, e.g. a crane lever which raises the crane when the lever is raised.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/lego-codings.jpg" alt="The six different codings in use in the LEGO interfaces: size, shape, colour, texture, position, operation" loading="lazy"><figcaption>The six different codings in use in the LEGO interfaces: size, shape, colour, texture, position, operation</figcaption></figure>

<p>Differentiation is a good first step that will avoid confusion between adjacent switches. But its only with organisation that we can create a clear and accurate mental model of the interface for the user.</p>

<h2>Organising inputs</h2>

<p>Compare the three panels below. Identical layouts, but the blue one is much clearer than the white. This is the <a href="https://www.usertesting.com/blog/gestalt-principles">gestalt principles</a> at work, identifying related items with a common region.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/gestalt.jpg" alt="Basic differentiation by clustering" loading="lazy"><figcaption>Basic differentiation by clustering</figcaption></figure>

<p>Easy. But how are you going to decide which inputs to cluster together?</p>

<p>I like to use <a href="http://blog.presentandcorrect.com/27986-2">Soviet control panels</a> as a starting point. These beautiful walls of nonsensical dials and levers are brought to life when arranged in a giant factory schematic.  It would be hard to find a more literal organisation of the information.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/soviet-control-panels.jpg" alt="Soviet control panels in action. Source: Present and Correct" loading="lazy"><figcaption>Soviet control panels in action. Source: Present and Correct</figcaption></figure>

<p>These panels are what I'd called a consolidated interface. Every piece of input and feedback has been moved onto the same panel. This is the approach that <a href="https://www.thedrive.com/news/33847/the-defunct-dyson-evs-steering-wheel-looks-like-it-was-made-by-vacuum-cleaner-people">Dyson took with their car</a>. Now imagine the opposite, moving each of those lights and switches to the actual location of that valve in the factory. Sounds ludicrous, but these <a href="https://deeptread.com/blog/2016/11/21/audi-tt-air-vent-design">air vents in the Audi TT</a> show that this distributed approach can also be a great win for user experience. I wrote a lot more about these <a href="https://www.designedbycave.co.uk/2018/Interfaces/">distributed interfaces last year</a>.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/distributed.jpg" alt="Lego vehicle dashboard: distributed (left) vs. consolidated (right)" loading="lazy"><figcaption>Lego vehicle dashboard: distributed (left) vs. consolidated (right)</figcaption></figure>

<p>Back to the Soviet factories. Those interface panels were great for answering the question "does this valve let water into tank Б?". But they're very poor for answering "are all water valves closed?" or "where are all the switches I need to prepare for the shift changeover?".</p>

<p>LEGO use the Soviet schematic approach for their <a href="https://www.bricklink.com/catalogItemIn.asp?P=3298pb005&amp;in=S">fantasy</a> <a href="https://www.bricklink.com/catalogItemIn.asp?P=3298px10&amp;in=S">orientated</a> designs, because schematics are superb at providing a mental model of the inner workings of an alien system. However for everyday use, there are some other approaches that work better.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/alien-interfaces.jpg" alt="LEGO Insectoid and UFO interfaces. I wonder what these buttons actually do?" loading="lazy"><figcaption>LEGO Insectoid and UFO interfaces. I wonder what these buttons actually do?</figcaption></figure>

<p><strong>Feature</strong> based organisation is the most common, perhaps even the "default" design philosophy. Group together all the inputs and outputs for each product feature. This <a href="https://www.cambridgeconsultants.com/press-releases/building-life-saving-ventilator-lightning-speed">COVID-19 ventilator from Cambridge Consultants</a> is a wonderful example but we also see this a lot in cars, with a cluster of switches for the airflow control and all of the lights on one control stick.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/covid-ventilator.jpg" alt="COVID-19 ventilator by Cambridge Consultants with clear feature-based organisation. Source: Cambridge Consultants" loading="lazy"><figcaption>COVID-19 ventilator by Cambridge Consultants with clear feature-based organisation. Source: Cambridge Consultants</figcaption></figure>

<p>Organising by <strong>operation</strong> means putting all the switches that function in a certain way in the same place. I've no idea what all the valves in the picture below do, but I bet they don't all open things that relate to each other. Anytime you see a row of switches that look and function the same, but control disparate parts of the system, you've come across organisation by operation.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/valves.jpg" alt="Source: Twitter @aglushko" loading="lazy"><figcaption>Source: Twitter @aglushko</figcaption></figure>

<p>Today most interfaces are effectively <a href="https://en.wikipedia.org/wiki/Fly-by-wire">fly-by-wire</a>, but historically the levers that you pulled in, say, a tractor cabin would literally move the hydraulic pistons beneath the seat to a new position. Routing all these different electrical, mechanical and hydraulic systems efficiently can severely compromise your interface clustering, leading to organisation by <strong>technology</strong>.</p>

<p>The modern equivalent of this is surprisingly common. Any touchscreen with buttons by the side exhibits this technology-based split. In a <a href="https://www.chrisharrison.net/index.php/Research/PneumaticDisplays">future</a> <a href="https://vimeo.com/343640141">world</a>, SpaceX might embed <a href="https://www.space.com/spacex-crew-dragon-touchscreen-astronaut-thoughts.html">these physical controls</a> right inside the screen next to the information they affect, but for now they sit awkwardly by the side as if nothing is wrong.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/spacex-dragon.jpg" alt="Bob and Doug in the SpaceX Dragon capsule. Source: SpaceX" loading="lazy"><figcaption>Bob and Doug in the SpaceX Dragon capsule. Source: SpaceX</figcaption></figure>

<p>In LEGO we find the feature based organisation in the "Monitor with -19° pattern". Two clear clusters, perhaps one for temperature control and another for vital signs monitoring. In the second panel below, I don't know what all those switches do, but they seem to be clustered based on their operation, not because of what they will operate.</p>

<p>There are many LEGO panels with a technology split like the SpaceX Dragon capsule, but I like to imagine that this early 90s police control unit was forced to divide the audio and video playback because the newer tape reel technology was incompatible with the older analog phone line system. This is organisation by technology in action.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/organisation.jpg" alt="L-to-R: organisation by feature, operation, technology and use case" loading="lazy"><figcaption>L-to-R: organisation by feature, operation, technology and use case</figcaption></figure>

<p>All of our approaches so far: organisation by features, operation or technology, have been grounded in properties of the system, not of the user. Organisation by <strong>use-case</strong> is the antidote to this, a clustering based on the daily routines and tasks of the user.</p>

<p>Imagine arriving for work each day at the LEGO body scanner factory. Grouping the switches by task (prepare machine, load body, process scan...) would mean splitting up the radiation and scanner buttons into many different regions. More complex for the computer, but more streamlined for the operator. As the designer, only you and your users will be the judge of what works best.</p>

<h2>But George, which is the best interface?</h2>

<p>I often say there's no such thing as the best interface, but there are plenty of examples of the worst interface.</p>

<p>However I do have three favourites. Beautiful, visual layouts with clearly differentiated inputs and simple, clean organisation. I'd be proud to sit behind the console of any of them.</p>

<figure><img src="https://interactionmagic.com/images/pages/UX-LEGO-Interfaces/favourites.jpg" alt="Beautiful interface panels" loading="lazy"><figcaption>Beautiful interface panels</figcaption></figure>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tk9.0: CGo-free, cross platform GUI toolkit for Go (212 pts)]]></title>
            <link>https://pkg.go.dev/modernc.org/tk9.0</link>
            <guid>42265817</guid>
            <pubDate>Thu, 28 Nov 2024 15:18:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pkg.go.dev/modernc.org/tk9.0">https://pkg.go.dev/modernc.org/tk9.0</a>, See on <a href="https://news.ycombinator.com/item?id=42265817">Hacker News</a></p>
Couldn't get https://pkg.go.dev/modernc.org/tk9.0: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[A Pretty Visualisation of the European Power Grid (2022) (268 pts)]]></title>
            <link>https://121gigawatts.org/copper-sushi-power-flow-european-grid/</link>
            <guid>42265533</guid>
            <pubDate>Thu, 28 Nov 2024 14:33:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://121gigawatts.org/copper-sushi-power-flow-european-grid/">https://121gigawatts.org/copper-sushi-power-flow-european-grid/</a>, See on <a href="https://news.ycombinator.com/item?id=42265533">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="site-main">

        <article>

            

<!--            -->
<!--            <figure class="post-full-image">-->
<!--                -->
<!--                <img-->
<!--                    srcset="/content/images/size/w300/2022/08/coppersushi-gif-1.gif 300w,-->
<!--                            /content/images/size/w600/2022/08/coppersushi-gif-1.gif 600w,-->
<!--                            /content/images/size/w1000/2022/08/coppersushi-gif-1.gif 1000w,-->
<!--                            /content/images/size/w2000/2022/08/coppersushi-gif-1.gif 2000w"-->
<!--                    sizes="(max-width: 800px) 400px,-->
<!--                        (max-width: 1170px) 1170px,-->
<!--                            2000px"-->
<!--                    src="/content/images/size/w2000/2022/08/coppersushi-gif-1.gif"-->
<!--                    alt="Copper Sushi 🍣"-->
<!--                />-->
<!--            </figure>-->
<!--            -->

            <div>
                    <h2 id="a-pretty-visualisation-of-the-european-power-grid">A Pretty Visualisation of the European Power Grid</h2><p>This is a map of the European electrical transmission network. Each dot is a connection point where all the consumption from nearby settlements connects to the network, as well as all electricity generation from nearby power plants.</p><ul><li>🥒 Green dots mean more generation than consumption, so they <strong>export power to</strong> the network</li><li>🍇 Purple dots mean more consumption than generation, so they <strong>take power from</strong> the network</li><li>▲ Triangles show <strong>which way</strong> the power is flowing</li><li>🕹 Hovering over the triangles shows <strong>how much power is flowing</strong> through the power lines, and each line's <strong>total capacity</strong></li></ul><!--kg-card-begin: html--><figure>
    
</figure><!--kg-card-end: html--><p>The numbers shown above are the results of running an optimisation algorithm. Its aim is to find <strong>optimal power flow</strong>. It goes like this:</p><p>I pick a date, and I ask the algorithm to calculate:</p><ul><li> which power plants should produce how much power</li><li>for each 2-hour slot in that day,</li><li>so that the total cost is minimal,</li><li>and all power consumption is covered</li></ul><p>To do that, for each connection point and each time slot, the algorithm gathers all the inputs first:</p><ul><li>💻💡 Get <strong>total consumption</strong> from the nearby settlements and industry</li><li>💶 Get the <strong>price of generation</strong> per MW for solar, wind, hydro, coal, oil, gas &amp; nuclear</li><li>🏭 Get the <strong>total generation capacity</strong> available at each point for the <strong>old-school power plants</strong> (gas, coal, nuclear, etc.)</li><li>☀️💨 Calculate how much the <strong>sun</strong> is shining, the <strong>wind</strong> is blowing, and the <strong>rivers</strong> are flowing (from historical data for the date I picked), based on which it can</li><li>⚡️Calculate <strong>how much solar, wind and hydro power plants can generate</strong> at most</li><li>🔌 Get <strong>how much power each power line can transfer</strong> at most</li></ul><p>And then it just starts guessing how much each power plant should produce, while making sure that all of the above adds up right. It keeps guessing and improving its guesses until it finds the minimum cost of generation that satisfies all of these conditions.</p><p>If you then <strong>add up all the power generated</strong> at each point, and <strong>subtract all the power consumed</strong> at each point, you get the numbers which pop up if you hover over the dots.</p><h2 id="whered-you-get-the-data-%F0%9F%A5%B8">Where'd You Get the Data? 🥸</h2><p>The data comes from <code>pypsa-eur</code>, a research paper which is to my knowledge the best summary of the European power grid data that is currently publicly available:</p><figure><a href="https://github.com/PyPSA/pypsa-eur"><div><p>GitHub - PyPSA/pypsa-eur: PyPSA-Eur: An Open Optimisation Model of the European Transmission System</p><p>PyPSA-Eur: An Open Optimisation Model of the European Transmission System - GitHub - PyPSA/pypsa-eur: PyPSA-Eur: An Open Optimisation Model of the European Transmission System</p><p><img src="https://github.com/fluidicon.png" alt=""><span>PyPSA</span></p></div><p><img src="https://opengraph.githubassets.com/129b79416a66cc263f49af180ce6e1a6345f1784b3c239829b978f2c27601bf2/PyPSA/pypsa-eur" alt=""></p></a></figure><p>A huge thanks to <a href="https://twitter.com/fneum_">Fabian Neumann</a> and everyone else from Professor <a href="https://twitter.com/nworbmot">Tom Brown</a>'s research group behind <code>pypsa-eur</code> - for the great software, great documentation, and for gathering and prepaing all the data.</p><p>The little bit of code that I had to write on top of <code>pypsa-eur</code> to make that pretty-ass map above can be found here:</p><figure><a href="https://github.com/zoltanmaric/coppersushi"><div><p>GitHub - zoltanmaric/coppersushi: Optimal power flow visualisation based on pypsa-eur</p><p>Optimal power flow visualisation based on pypsa-eur - GitHub - zoltanmaric/coppersushi: Optimal power flow visualisation based on pypsa-eur</p><p><img src="https://github.com/fluidicon.png" alt=""><span>GitHub</span><span>zoltanmaric</span></p></div><p><img src="https://opengraph.githubassets.com/388df45b4eb4ed80ec56c20ce612b3bb979f10b3db83a08803eed4aa03600ba5/zoltanmaric/coppersushi" alt=""></p></a></figure><h2 id="is-this-real-%F0%9F%A6%A6">Is This Real? 🦦</h2><p>The math behind it is real, and it uses the same calculations that real grid operators use to keep the lights on. However, the amount of power that each power plant actually produces depends on the price they offer. This price varies wildly from hour to hour, and neither the price nor the power amount is publicly available.</p><p>Instead, <code>pypsa-eur</code> makes assumptions on prices for solar, wind, coal, nuclear, etc. based on historical averages, and then runs an optimisation algorithm to cover all consumption for the least cost of production. In short:</p><blockquote>It's <strong>the real way of calculating who produces how much</strong>, and <strong>how the power flows</strong> in that case;<br>but it's calculated based on <strong>data that is not real</strong>.</blockquote><p>For a full discussion of the limitations of the model, have a look at chapter 4 of the original <code>pypsa-eur</code> paper:</p><figure><a href="https://arxiv.org/abs/1806.01613"><div><p>PyPSA-Eur: An Open Optimisation Model of the European Transmission System</p><p>PyPSA-Eur, the first open model dataset of the European power system at thetransmission network level to cover the full ENTSO-E area, is presented. Itcontains 6001 lines (alternating current lines at and above 220 kV voltagelevel and all high voltage direct current lines), 3657 substations, a new…</p><p><img src="https://static.arxiv.org/static/browse/0.3.4/images/icons/favicon.ico" alt=""><span>arXiv.org</span><span>Jonas Hörsch</span></p></div><p><img src="https://static.arxiv.org/icons/twitter/arxiv-logo-twitter-square.png" alt=""></p></a></figure><h2 id="why-does-this-matter-%F0%9F%A4%B7%E2%80%8D%E2%99%80%EF%B8%8F">Why Does This Matter? 🤷‍♀️</h2><p><strong>TL;DR:</strong> we can delete most of the emissions of the developed world today by switching heating &amp; car and truck transport to electrical - if we make sure we generate all electricity with near-zero emissions. Just building more renewable generation won't solve it though, as you still need to make sure it covers all consumption <strong>everywhere</strong>. This map intends to show why that's a complicated problem, and why we should also be smart about <strong>where</strong> we build renewable generation so that most of the generated energy can also be <strong>used</strong> and not <strong>thrown away</strong> because the grid can't handle it.</p><p>I wrote a less condensed explanation of this problem in another post:</p><figure><a href="https://121gigawatts.org/the-copper-plate-must-die/"><div><p>The Copper Plate Must Die 💀</p><p>EU energy market rules are counterproductive to grid congestion &amp; don’t incentivise optimal use of renewables.</p><p><img src="https://121gigawatts.org/favicon.png" alt=""><span>1.21 Gigawatts</span><span>Zoltán Marić</span></p></div><p><img src="https://121gigawatts.org/content/images/2022/06/title-slide-2.gif" alt=""></p></a></figure><h2 id="%F0%9F%91%8B">👋</h2>
                </div>



        </article>

    </div></div>]]></description>
        </item>
    </channel>
</rss>