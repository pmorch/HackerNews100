<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Wed, 06 Mar 2024 13:00:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Dada, an Experiement by the Creators of Rust (105 pts)]]></title>
            <link>https://dada-lang.org/</link>
            <guid>39614433</guid>
            <pubDate>Wed, 06 Mar 2024 10:31:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dada-lang.org/">https://dada-lang.org/</a>, See on <a href="https://news.ycombinator.com/item?id=39614433">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Copyright Â© 2024 the <a href="https://github.com/orgs/dada-lang/teams/dadaists">Dadaists team</a>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tell HN: "Default" FileZilla download bundled with adware (129 pts)]]></title>
            <link>https://filezilla-project.org/</link>
            <guid>39613789</guid>
            <pubDate>Wed, 06 Mar 2024 08:53:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://filezilla-project.org/">https://filezilla-project.org/</a>, See on <a href="https://news.ycombinator.com/item?id=39613789">Hacker News</a></p>
Couldn't get https://filezilla-project.org/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Pg_vectorize: The simplest way to do vector search and RAG on Postgres (140 pts)]]></title>
            <link>https://github.com/tembo-io/pg_vectorize</link>
            <guid>39613669</guid>
            <pubDate>Wed, 06 Mar 2024 08:34:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/tembo-io/pg_vectorize">https://github.com/tembo-io/pg_vectorize</a>, See on <a href="https://news.ycombinator.com/item?id=39613669">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto"><h2 tabindex="-1" dir="auto">
 <b>pg_vectorize: a VectorDB for Postgres</b>
<p>

  <a href="https://tembo.io/" rel="nofollow"><img src="https://github.com/tembo-io/pg_vectorize/assets/15756360/34d65cba-065b-485f-84a4-76284e9def19" alt="pg_vectorize" width="368px"></a></p></h2><a id="user-content--pg_vectorize-a-vectordb-for-postgres--" aria-label="Permalink: pg_vectorize: a VectorDB for Postgres" href="#-pg_vectorize-a-vectordb-for-postgres--"></a></div>

<p dir="auto">A Postgres extension that automates the transformation and orchestration of text to embeddings and provides hooks into the most popular LLMs. This allows you to do vector search and build LLM applications on existing data with as little as two function calls.</p>
<p dir="auto">This project relies heavily on the work by <a href="https://github.com/pgvector/pgvector">pgvector</a> for vector similarity search, <a href="https://github.com/tembo-io/pgmq">pgmq</a> for orchestration in background workers, and <a href="https://huggingface.co/sentence-transformers" rel="nofollow">SentenceTransformers</a>.</p>
<hr>
<p dir="auto"><a href="https://join.slack.com/t/tembocommunity/shared_invite/zt-277pu7chi-NHtvHWvLhHwyK0Y5Y6vTPw" rel="nofollow"><img src="https://camo.githubusercontent.com/503899b9c81b00cb3eb72ac40b042daad8fcd5aec105d593c763646fdb04bc5b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f25343074656d626f2d636f6d6d756e6974793f6c6f676f3d736c61636b266c6162656c3d736c61636b" alt="Static Badge" data-canonical-src="https://img.shields.io/badge/%40tembo-community?logo=slack&amp;label=slack"></a>
<a href="https://pgxn.org/dist/vectorize/" rel="nofollow"><img src="https://camo.githubusercontent.com/ea436684f6beb26a8cc5ea1cd46044990fe359e3f60bc91eda163feb4c4b5672/68747470733a2f2f62616467652e667572792e696f2f70672f766563746f72697a652e737667" alt="PGXN version" data-canonical-src="https://badge.fury.io/pg/vectorize.svg"></a>
<a href="https://ossrank.com/p/3815" rel="nofollow"><img src="https://camo.githubusercontent.com/3c42348f4c8375f58183a0d0196a77a1aae334d02695c35f38ceff59b36ba490/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f6f737372616e6b2e636f6d2f736869656c642f33383135" alt="OSSRank" data-canonical-src="https://shields.io/endpoint?url=https://ossrank.com/shield/3815"></a></p>
<p dir="auto"><strong>API Documentation</strong>: <a href="https://tembo-io.github.io/pg_vectorize/" rel="nofollow">https://tembo-io.github.io/pg_vectorize/</a></p>
<p dir="auto"><strong>Source</strong>: <a href="https://github.com/tembo-io/pg_vectorize">https://github.com/tembo-io/pg_vectorize</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>Workflows for both vector search and RAG</li>
<li>Integrations with OpenAI's <a href="https://platform.openai.com/docs/guides/embeddings" rel="nofollow">embeddings</a> and <a href="https://platform.openai.com/docs/guides/text-generation" rel="nofollow">chat-completion</a> endpoints and a self-hosted container for running <a href="https://huggingface.co/sentence-transformers" rel="nofollow">Hugging Face Sentence-Transformers</a></li>
<li>Automated creation of Postgres triggers to keep your embeddings up to date</li>
<li>High level API - one function to initialize embeddings transformations, and another function to search</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Table of Contents</h2><a id="user-content-table-of-contents" aria-label="Permalink: Table of Contents" href="#table-of-contents"></a></p>
<ul dir="auto">
<li><a href="#features">Features</a></li>
<li><a href="#table-of-contents">Table of Contents</a></li>
<li><a href="#installation">Installation</a></li>
<li><a href="#vector-search-example">Vector Search Example</a></li>
<li><a href="#rag-example">RAG Example</a></li>
<li><a href="#trigger-based-updates">Trigger based updates</a></li>
<li><a href="#try-it-on-tembo-cloud">Try it on Tembo Cloud</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto">The fastest way to get started is by running the Tembo docker container and the vector server with docker compose:</p>

<p dir="auto">Then connect to Postgres:</p>
<div data-snippet-clipboard-copy-content="docker compose exec -it postgres psql"><pre lang="text"><code>docker compose exec -it postgres psql
</code></pre></div>
<p dir="auto">Enable the extension and its dependencies</p>
<div dir="auto" data-snippet-clipboard-copy-content="CREATE EXTENSION vectorize CASCADE;"><pre>CREATE EXTENSION vectorize CASCADE;</pre></div>
<details>
<summary>Install into an existing Postgres instance</summary>
<p dir="auto">If you're installing in an existing Postgres instance, you will need the following dependencies:</p>
<p dir="auto">Rust:</p>
<ul dir="auto">
<li><a href="https://github.com/pgcentralfoundation/pgrx">pgrx toolchain</a></li>
</ul>
<p dir="auto">Postgres Extensions:</p>
<ul dir="auto">
<li><a href="https://github.com/citusdata/pg_cron">pg_cron</a> ^1.5</li>
<li><a href="https://github.com/tembo-io/pgmq">pgmq</a> ^1</li>
<li><a href="https://github.com/pgvector/pgvector">pgvector</a> ^0.5.0</li>
</ul>
<p dir="auto">Then set the following either in postgresql.conf or as a configuration parameter:</p>
<div dir="auto" data-snippet-clipboard-copy-content="-- requires restart of Postgres
alter system set shared_preload_libraries = 'vectorize,pg_cron';
alter system set cron.database_name = 'postgres'"><pre><span><span>--</span> requires restart of Postgres</span>
alter system <span>set</span> shared_preload_libraries <span>=</span> <span><span>'</span>vectorize,pg_cron<span>'</span></span>;
alter system <span>set</span> <span>cron</span>.<span>database_name</span> <span>=</span> <span><span>'</span>postgres<span>'</span></span></pre></div>
<p dir="auto">And if you're running the vector-serve container, set the following url as a configuration parameter in Postgres.
The host may need to change from <code>localhost</code> to something else depending on where you are running the container.</p>
<div dir="auto" data-snippet-clipboard-copy-content="alter system set vectorize.embedding_service_url = 'http://localhost:3000/v1/embeddings'

SELECT pg_reload_conf();"><pre>alter system <span>set</span> <span>vectorize</span>.<span>embedding_service_url</span> <span>=</span> <span><span>'</span>http://localhost:3000/v1/embeddings<span>'</span></span>

<span>SELECT</span> pg_reload_conf();</pre></div>
</details>
<p dir="auto"><h2 tabindex="-1" dir="auto">Vector Search Example</h2><a id="user-content-vector-search-example" aria-label="Permalink: Vector Search Example" href="#vector-search-example"></a></p>
<p dir="auto">Text-to-embedding transformation can be done with either Hugging Face's Sentence-Transformers or OpenAI's embeddings. The following examples use Hugging Face's Sentence-Transformers. See the project <a href="https://tembo-io.github.io/pg_vectorize/" rel="nofollow">documentation</a> for OpenAI examples.</p>
<p dir="auto">Follow the <a href="#installation">installation</a> steps if you haven't already.</p>
<p dir="auto">Setup a products table. Copy from the example data provided by the extension.</p>
<div dir="auto" data-snippet-clipboard-copy-content="CREATE TABLE products (LIKE vectorize.example_products INCLUDING ALL);
INSERT INTO products SELECT * FROM vectorize.example_products;"><pre><span>CREATE</span> <span>TABLE</span> <span>products</span> (<span>LIKE</span> <span>vectorize</span>.<span>example_products</span> INCLUDING ALL);
<span>INSERT INTO</span> products <span>SELECT</span> <span>*</span> <span>FROM</span> <span>vectorize</span>.<span>example_products</span>;</pre></div>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT * FROM products limit 2;"><pre><span>SELECT</span> <span>*</span> <span>FROM</span> products <span>limit</span> <span>2</span>;</pre></div>
<div data-snippet-clipboard-copy-content=" product_id | product_name |                      description                       |        last_updated_at        
------------+--------------+--------------------------------------------------------+-------------------------------
          1 | Pencil       | Utensil used for writing and often works best on paper | 2023-07-26 17:20:43.639351-05
          2 | Laptop Stand | Elevated platform for laptops, enhancing ergonomics    | 2023-07-26 17:20:43.639351-05"><pre lang="text"><code> product_id | product_name |                      description                       |        last_updated_at        
------------+--------------+--------------------------------------------------------+-------------------------------
          1 | Pencil       | Utensil used for writing and often works best on paper | 2023-07-26 17:20:43.639351-05
          2 | Laptop Stand | Elevated platform for laptops, enhancing ergonomics    | 2023-07-26 17:20:43.639351-05
</code></pre></div>
<p dir="auto">Create a job to vectorize the products table. We'll specify the tables primary key (product_id) and the columns that we want to search (product_name and description).</p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT vectorize.table(
    job_name => 'product_search_hf',
    &quot;table&quot; => 'products',
    primary_key => 'product_id',
    columns => ARRAY['product_name', 'description'],
    transformer => 'sentence-transformers/multi-qa-MiniLM-L6-dot-v1'
);"><pre><span>SELECT</span> <span>vectorize</span>.<span>table</span>(
    job_name <span>=&gt;</span> <span><span>'</span>product_search_hf<span>'</span></span>,
    <span><span>"</span>table<span>"</span></span> <span>=&gt;</span> <span><span>'</span>products<span>'</span></span>,
    primary_key <span>=&gt;</span> <span><span>'</span>product_id<span>'</span></span>,
    columns <span>=&gt;</span> ARRAY[<span><span>'</span>product_name<span>'</span></span>, <span><span>'</span>description<span>'</span></span>],
    transformer <span>=&gt;</span> <span><span>'</span>sentence-transformers/multi-qa-MiniLM-L6-dot-v1<span>'</span></span>
);</pre></div>
<p dir="auto">This adds a new column to your table, in our case it is named <code>product_search_embeddings</code>, then populates that data with the transformed embeddings from the <code>product_name</code> and <code>description</code> columns.</p>
<p dir="auto">Then search,</p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT * FROM vectorize.search(
    job_name => 'product_search_hf',
    query => 'accessories for mobile devices',
    return_columns => ARRAY['product_id', 'product_name'],
    num_results => 3
);

                                       search_results                                        
---------------------------------------------------------------------------------------------
 {&quot;product_id&quot;: 13, &quot;product_name&quot;: &quot;Phone Charger&quot;, &quot;similarity_score&quot;: 0.8147814132322894}
 {&quot;product_id&quot;: 6, &quot;product_name&quot;: &quot;Backpack&quot;, &quot;similarity_score&quot;: 0.7743061352550308}
 {&quot;product_id&quot;: 11, &quot;product_name&quot;: &quot;Stylus Pen&quot;, &quot;similarity_score&quot;: 0.7709902653575383}"><pre><span>SELECT</span> <span>*</span> <span>FROM</span> <span>vectorize</span>.<span>search</span>(
    job_name <span>=&gt;</span> <span><span>'</span>product_search_hf<span>'</span></span>,
    query <span>=&gt;</span> <span><span>'</span>accessories for mobile devices<span>'</span></span>,
    return_columns <span>=&gt;</span> ARRAY[<span><span>'</span>product_id<span>'</span></span>, <span><span>'</span>product_name<span>'</span></span>],
    num_results <span>=&gt;</span> <span>3</span>
);

                                       search_results                                        
<span><span>--</span>-------------------------------------------------------------------------------------------</span>
 {<span><span>"</span>product_id<span>"</span></span>: <span>13</span>, <span><span>"</span>product_name<span>"</span></span>: <span><span>"</span>Phone Charger<span>"</span></span>, <span><span>"</span>similarity_score<span>"</span></span>: <span>0</span>.<span>8147814132322894</span>}
 {<span><span>"</span>product_id<span>"</span></span>: <span>6</span>, <span><span>"</span>product_name<span>"</span></span>: <span><span>"</span>Backpack<span>"</span></span>, <span><span>"</span>similarity_score<span>"</span></span>: <span>0</span>.<span>7743061352550308</span>}
 {<span><span>"</span>product_id<span>"</span></span>: <span>11</span>, <span><span>"</span>product_name<span>"</span></span>: <span><span>"</span>Stylus Pen<span>"</span></span>, <span><span>"</span>similarity_score<span>"</span></span>: <span>0</span>.<span>7709902653575383</span>}</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">RAG Example</h2><a id="user-content-rag-example" aria-label="Permalink: RAG Example" href="#rag-example"></a></p>
<p dir="auto">Ask raw text questions of the example  <code>products</code> dataset and get chat responses from an OpenAI LLM.</p>
<p dir="auto">Follow the <a href="#installation">installation</a> steps if you haven't already.</p>
<p dir="auto">Set the <a href="https://platform.openai.com/docs/guides/embeddings" rel="nofollow">OpenAI API key</a>, this is required to for use with OpenAI's chat-completion models.</p>
<div dir="auto" data-snippet-clipboard-copy-content="ALTER SYSTEM SET vectorize.openai_key TO '<your api key>';
SELECT pg_reload_conf();"><pre>ALTER SYSTEM <span>SET</span> <span>vectorize</span>.<span>openai_key</span> TO <span><span>'</span>&lt;your api key&gt;<span>'</span></span>;
<span>SELECT</span> pg_reload_conf();</pre></div>
<p dir="auto">Create an example table if it does not already exist.</p>
<div dir="auto" data-snippet-clipboard-copy-content="CREATE TABLE products (LIKE vectorize.example_products INCLUDING ALL);
INSERT INTO products SELECT * FROM vectorize.example_products;"><pre><span>CREATE</span> <span>TABLE</span> <span>products</span> (<span>LIKE</span> <span>vectorize</span>.<span>example_products</span> INCLUDING ALL);
<span>INSERT INTO</span> products <span>SELECT</span> <span>*</span> <span>FROM</span> <span>vectorize</span>.<span>example_products</span>;</pre></div>
<p dir="auto">Initialize a table for RAG. We'll use an open source Sentence Transformer to generate embeddings.</p>
<p dir="auto">Create a new column that we want to use as the context. In this case, we'll concatenate both <code>product_name</code> and <code>description</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="ALTER TABLE products
ADD COLUMN context TEXT GENERATED ALWAYS AS (product_name || ': ' || description) STORED;"><pre><span>ALTER</span> <span>TABLE</span> products
ADD COLUMN context <span>TEXT</span> GENERATED ALWAYS <span>AS</span> (product_name <span>||</span> <span><span>'</span>: <span>'</span></span> <span>||</span> description) STORED;</pre></div>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT vectorize.init_rag(
    agent_name => 'product_chat',
    table_name => 'products',
    &quot;column&quot; => 'context',
    unique_record_id => 'product_id',
    transformer => 'sentence-transformers/all-MiniLM-L12-v2'
);"><pre><span>SELECT</span> <span>vectorize</span>.<span>init_rag</span>(
    agent_name <span>=&gt;</span> <span><span>'</span>product_chat<span>'</span></span>,
    table_name <span>=&gt;</span> <span><span>'</span>products<span>'</span></span>,
    <span><span>"</span>column<span>"</span></span> <span>=&gt;</span> <span><span>'</span>context<span>'</span></span>,
    unique_record_id <span>=&gt;</span> <span><span>'</span>product_id<span>'</span></span>,
    transformer <span>=&gt;</span> <span><span>'</span>sentence-transformers/all-MiniLM-L12-v2<span>'</span></span>
);</pre></div>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT vectorize.rag(
    agent_name => 'product_chat',
    query => 'What is a pencil?'
) -> 'chat_response';"><pre><span>SELECT</span> <span>vectorize</span>.<span>rag</span>(
    agent_name <span>=&gt;</span> <span><span>'</span>product_chat<span>'</span></span>,
    query <span>=&gt;</span> <span><span>'</span>What is a pencil?<span>'</span></span>
) <span>-</span><span>&gt;</span> <span><span>'</span>chat_response<span>'</span></span>;</pre></div>
<div data-snippet-clipboard-copy-content="&quot;A pencil is an item that is commonly used for writing and is known to be most effective on paper.&quot;"><pre lang="text"><code>"A pencil is an item that is commonly used for writing and is known to be most effective on paper."
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Trigger based updates</h2><a id="user-content-trigger-based-updates" aria-label="Permalink: Trigger based updates" href="#trigger-based-updates"></a></p>
<p dir="auto">When vectorize job is set up as <code>realtime</code> (the default behavior, via <code>vectorize.table(..., schedule =&gt; 'realtime')</code>), vectorize will create triggers on your table that will keep your embeddings up to date. When the text inputs are updated or if new rows are inserted, the triggers handle creating a background job that updates the embeddings. Since the transformation is executed in a background job and the transformer model is invoked in a separate container, there is minimal impact on the performance of the update or insert statement.</p>
<div dir="auto" data-snippet-clipboard-copy-content="INSERT INTO products (product_id, product_name, description)
VALUES (12345, 'pizza', 'dish of Italian origin consisting of a flattened disk of bread');

UPDATE products
SET description = 'sling made of fabric, rope, or netting, suspended between two or more points, used for swinging, sleeping, or resting'
WHERE product_name = 'Hammock';"><pre><span>INSERT INTO</span> products (product_id, product_name, description)
<span>VALUES</span> (<span>12345</span>, <span><span>'</span>pizza<span>'</span></span>, <span><span>'</span>dish of Italian origin consisting of a flattened disk of bread<span>'</span></span>);

<span>UPDATE</span> products
<span>SET</span> description <span>=</span> <span><span>'</span>sling made of fabric, rope, or netting, suspended between two or more points, used for swinging, sleeping, or resting<span>'</span></span>
<span>WHERE</span> product_name <span>=</span> <span><span>'</span>Hammock<span>'</span></span>;</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Try it on Tembo Cloud</h2><a id="user-content-try-it-on-tembo-cloud" aria-label="Permalink: Try it on Tembo Cloud" href="#try-it-on-tembo-cloud"></a></p>
<p dir="auto">Try it for yourself! Install with a single click on a Vector DB Stack (or any other instance) in <a href="https://cloud.tembo.io/" rel="nofollow">Tembo Cloud</a> today.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[YaCy, a distributed Web Search Engine, based on a peer-to-peer network (131 pts)]]></title>
            <link>https://yacy.net/</link>
            <guid>39612950</guid>
            <pubDate>Wed, 06 Mar 2024 06:33:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://yacy.net/">https://yacy.net/</a>, See on <a href="https://news.ycombinator.com/item?id=39612950">Hacker News</a></p>
<div id="readability-page-1" class="page">
    
    
    
    
    
    
    
    
    

    

    <div role="main">


<div>
  <p><img src="https://yacy.net/img/YaCyLogo2011_240.png" alt="YaCy" width="240"></p><h2>Search Engine Software</h2>
</div>

<h2 id="yacy-is-free-software-for-your-own-search-engine">YaCy is free software for your own search engine.</h2>
<p>Join a community of search engines or make your own search portal!</p>
<p>There are these three use cases you can choose from:</p>
<div>
        <div id="mode-p2p">
          <h2>P2P Mode</h2>
      <p><img src="https://yacy.net/img/usecase_freeworld.png" alt="YaCy Use Case: Freeworld"></p><p>Web Search by the people, for the people: decentralized, all users are equal, no central, no search request storage, shared index.</p>
        </div>
        <div id="mode-portal">
          <h2>Your Search Portal</h2>
      <p><img src="https://yacy.net/img/usecase_webportal.png" alt="YaCy Use Case: Web Portal"></p><p>Your YaCy installation is independent from other peers. Define your own web index and starting your own web crawl.</p>
       </div>
        <div id="mode-intranet">
          <h2>Intranet Search</h2>
      <p><img src="https://yacy.net/img/usecase_intranet.png" alt="YaCy Use Case: Intranet"></p><p>Create a search portal for your intranet or web pages or your (shared) file system.</p><br>
        </div>
      </div>



<h2 id="decentralization">Decentralization</h2>
<p>Imagine if, rather than relying on the proprietary software of a large professional search engine operator, your search engine was run across many private devices, not under the control of any one company or individual. Well, that's what YaCy does!</p>
<p>Here is a live image of the YaCy network:</p>
<p><img alt="YaCy P2P Network" src="https://yacy.searchlab.eu/NetworkPicture.png?width=960&amp;height=720&amp;bgcolor=2C3E4F&amp;pal=10080&amp;pol=10080&amp;coronaangle=120"></p>
<h2 id="installation-is-easy">Installation is easy!</h2>
<p>The installation takes only three minutes. Just download the release, decompress the package and run the start script.</p>
<p>Next Steps:</p>
<p><a href="https://yacy.net/download_installation/" role="button">Download and Install YaCy</a>
<a href="https://yacy.net/demonstration_tutorial_screenshot/" role="button">Watch screenshots and tutorial movies</a>
<a href="https://yacy.searchlab.eu/Status.html" role="button">Try out the YaCy Demo Peer</a>
</p></div>

    
    
    
    

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Free data transfer out to internet when moving out of AWS (133 pts)]]></title>
            <link>https://aws.amazon.com/blogs/aws/free-data-transfer-out-to-internet-when-moving-out-of-aws/</link>
            <guid>39612607</guid>
            <pubDate>Wed, 06 Mar 2024 05:22:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://aws.amazon.com/blogs/aws/free-data-transfer-out-to-internet-when-moving-out-of-aws/">https://aws.amazon.com/blogs/aws/free-data-transfer-out-to-internet-when-moving-out-of-aws/</a>, See on <a href="https://news.ycombinator.com/item?id=39612607">Hacker News</a></p>
<div id="readability-page-1" class="page"><article vocab="https://schema.org/" typeof="TechArticle"> 
      <meta property="inLanguage" content="en-US"> 
      <meta property="image" content="https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/02/05/Free-DTO-Featured-Image-800x400-1.png"> 
       
       
      <section property="articleBody"> 
       <div id="amazon-polly-audio-tab"> 
            
            
            
           <p><a href="https://aws.amazon.com/polly/" target="_blank" rel="noopener noreferrer"><img src="https://a0.awsstatic.com/aws-blog/images/Voiced_by_Amazon_Polly_EN.png" alt="Voiced by Polly" width="554" height="56"></a> 
           </p> </div> 
       <p>You told us one of the primary reasons to adopt Amazon Web Services (AWS) is the broad choice of services we offer, enabling you to innovate, build, deploy, and monitor your workloads. AWS has continuously expanded its services to support virtually any cloud workload. It now offers over 200 fully featured services for compute, storage, databases, networking, analytics, machine learning (ML) and artificial intelligence (AI), and many more. For example, <a href="https://aws.amazon.com/ec2/">Amazon Elastic Compute Cloud (Amazon EC2)</a> offers over 750 generally available instancesâmore than any other major cloud providerâand you can choose from <a href="https://aws.amazon.com/getting-started/decision-guides/databases-on-aws-how-to-choose/">numerous relational, analytics, key-value, document, or graph databases</a>.</p> 
       <p>We believe this choice must include the one to migrate your data to another cloud provider or on-premises. Thatâs why, starting today, weâre waiving data transfer out to the internet (DTO) charges when you want to move outside of AWS.</p> 
       <p>Over 90 percent of our customers already incur no data transfer expenses out of AWS because <a href="https://aws.amazon.com/blogs/aws/aws-free-tier-data-transfer-expansion-100-gb-from-regions-and-1-tb-from-amazon-cloudfront-per-month/">we provide 100 gigabytes per month free from AWS Regions to the internet</a>. This includes traffic from Amazon EC2, <a href="https://aws.amazon.com/s3/">Amazon Simple Storage Service (Amazon S3)</a>, <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/introduction.html">Application Load Balancer</a>, among others. In addition, we offer one terabyte of free data transfer out of <a href="https://aws.amazon.com/cloudfront/">Amazon CloudFront</a> every month.</p> 
       <p>If you need more than 100 gigabytes of data transfer out per month while transitioning, you can contact <a href="https://aws.amazon.com/contact-us/">AWS Support</a> to ask for free DTO rates for the additional data. Itâs necessary to go through support because you make hundreds of millions of data transfers each day, and we generally do not know if the data transferred out to the internet is a normal part of your business or a one-time transfer as part of a switch to another cloud provider or on premises.</p> 
       <p>We will review requests at the AWS account level. Once approved, we will provide credits for the data being migrated. We donât require you to close your account or change your relationship with AWS in any way. Youâre welcome to come back at any time. We will, of course, apply additional scrutiny if the same AWS account applies multiple times for free DTO.</p> 
       <p>We believe in customer choice, including the choice to move your data out of AWS. The waiver on data transfer out to the internet charges also follows the direction set by the <a href="https://digital-strategy.ec.europa.eu/en/news/european-data-act-enters-force-putting-place-new-rules-fair-and-innovative-data-economy">European Data Act</a> and is available to all AWS customers around the world and from any AWS Region.</p> 
       <p>Freedom of choice is not limited to data transfer rates. AWS also supports <a href="https://www.fairsoftware.cloud/principles/">Fair Software Licensing Principles</a>, which make it easy to use software with other IT providers of your choice. <a href="https://aws.amazon.com/blogs/networking-and-content-delivery/promoting-customer-choice-aws-takes-another-step-to-lower-costs-for-customers-changing-it-providers/">You can read this blog post for more details.</a></p> 
       <p>You can check the<a href="https://aws.amazon.com/ec2/faqs/#Data_transfer_fees_when_moving_all_data_off_AWS"> FAQ for more information</a>, or <a href="https://aws.amazon.com/contact-us/">you can contact AWS Customer Support</a> to request credits for DTO while switching.</p> 
       <p>But I sincerely hope you will not.</p> 
       <a href="https://twitter.com/sebsto">-- seb</a> 
       <!-- '"` --> 
      </section> 
       
       
       
     </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Leaving LinkedIn: Choosing Engineering Excellence over Expediency (214 pts)]]></title>
            <link>https://corecursive.com/leaving-linkedin-with-chris-krycho/</link>
            <guid>39612443</guid>
            <pubDate>Wed, 06 Mar 2024 04:49:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://corecursive.com/leaving-linkedin-with-chris-krycho/">https://corecursive.com/leaving-linkedin-with-chris-krycho/</a>, See on <a href="https://news.ycombinator.com/item?id=39612443">Hacker News</a></p>
<div id="readability-page-1" class="page"><p><i>Note: This podcast is designed to be heard. If you are able, we strongly encourage you to listen to the
audio, which includes emphasis thatâs not on the page</i></p><div>
<h2 id="intro">Intro</h2>
<p><strong>Adam:</strong>
Hello, and welcome to CoRecursive. Iâm Adam Gordon Bell. Imagine that youâre at the forefront of shaping the front end for the worldâs largest professional social network with like a billion users, LinkedIn, only to find yourself at a crossroads where your core values are just clashing with the demands of the job.</p>

<p>Today, weâre diving into the story of a senior staff engineer at LinkedIn who faced a real dilemma. And if youâre a loyal listener, you might recognize the guest.</p>
<p><strong>Chris:</strong>
There we go. Okay, those are running now. Crap. Did I screw up my ability to hear you?</p>
<p><strong>Adam:</strong>
Hello, hello, hello?</p>
<p><strong>Chris:</strong>
I did. Dang it. Hang on.</p>
<p><strong>Adam:</strong>
Hello, hello?</p>
<p><strong>Chris:</strong>
Yeah, yeah, weâre good now. Okay. Letâs try that again.</p>
<p><strong>Adam:</strong>
Thatâs Chris Krycho, and he was on the podcast some time ago talking about TypeScript. Today, though, heâs talking about his time at LinkedIn.</p>
<p><strong>Chris:</strong>
I loved my time at LinkedIn. It was great. And Iâm really excited for where it takes me next, because I couldnât do whatever it is I do next without that, including the bumpy parts, but also the really bright parts.</p>

<p>You know, you could come away from that whole difficult ending to the story thinking, wow, LinkedIn really sucked for Chris, but no, actually in the main, it was really great and Iâm really glad of it. And even that bumpy ending, Iâm glad of the lessons I learned and looking forward to where it takes me next.</p>
<p><strong>Adam:</strong>
So, yeah, about that bumpy ending. Chris worked at LinkedIn in a pretty important and senior role for close to five years. And he oversaw a bunch of important projects in the desktop app, what you see when you go to LinkedIn.com and in a non-mobile browser, that he worked on that. He led projects like modernizing just massive loads of JavaScript,</p>

<p>But letâs cut to the chase. Chris quit LinkedIn. And he quit out of frustration. Thatâs the story weâre going to unpack today. What itâs like to have a senior technical role at a place with thousands of devs. Right, how do you get big initiatives coordinating across many teams?</p>

<p>How do you get things like that done? How do you lead big projects? How do you improve a massive code base? Also, how do you balance sustainable development practices with a business need for speed? What if this thirst for velocity and speed of iteration clashes with your approach, and your values, and how you think things should be done?</p>

<p>How do you handle that conflict? And spoiler alert, it ends with Chris walking away from the job. Thatâs what weâre talking about today. But yeah, it all started in Sunnyvale.</p>
<h2 id="first-days-at-linkedin"><strong>First Days At LinkedIn</strong></h2>
<p><strong>Chris:</strong>
It was almost exactly five years ago now. I started. The last days of January, 2019, which feels like a lot more than five years ago. Thanks COVID. But, uh, when I first got there, when you join a big company or good, healthy, small companies, thereâs usually some variety of onboarding. So I spent a lot of time going through the onboarding classes, learning how all the different layers of the stack worked and all of that.</p>
<p><strong>Adam:</strong>
Chris was going to be working remotely from Colorado once he got going, but the first two weeks were onboarding, and the second of those two weeks was spending time with his team,</p>
<p><strong>Chris:</strong>
You know, sitting next to and chatting with people on my team, my manager, and a couple of the folks I, I worked with.</p>

<p>Even then, that team was a bit more distributed than most. So we had a couple people who worked in that little corner of cubicle land in the Sunnyvale office, and we had a couple people who lived in a corner of cubicle land in the SF office, and then we had one person working from Alaska, and then we had me, Actually working from Colorado remotely, which was very unusual for LinkedIn at the time we had, I think, under 100 engineers remote when I joined and thousands of engineers total.</p>
<p><strong>Adam:</strong>
For Chris, working at such a place was a big change.</p>
<h2 id="millions-of-lines-of-code"><strong>Millions of Lines of Code</strong></h2>
<p><strong>Chris:</strong>
The startup Iâd been coming from had a relatively standard, relatively well-factored monolith backend, and then, you know, database and a handful of services here and there. And I got to LinkedIn and discovered, okay, number one, there are more people working on the front end client app that are employed by my previous employer. And there are more lines of code in this client app than exist at my previous employer in total. And there are thousands of services running in the backend and these monstrous API servers which absolutely dwarf anything we had at my previous employer, but that thatâs just the API server for one and this is just the client you think of as LinkedIn.com and oh, by the way, we also have our ad selling platform. And oh, by the way, we also have LinkedIn Learning. And oh, by the way, we also and just the list goes on and on. And so one of the really strong, striking experiences was just repeatedly over and over again saying Iâm Iâm sorry, did you say insert number here?</p>

<p>My previous company had what I thought at the time was a pretty decent sized app, like 150,000 lines of code. And the LinkedIn front end, when I got there had 2 million, itâs just like, Iâm, did you say million? Uh, thatâs, thatâs a lot.</p>

<p>Thatâs 20 times almost the size of my, how, how do you even build that? How long to build? Oh, 17 minutes for a new build. Thatâs, thatâs not bad. We should probably make that better, but thatâs not bad.</p>
<h2 id="infrastructure-team"><strong>Infrastructure Team</strong></h2>
<p><strong>Adam:</strong>
Chrisâs team was called the Infrastructure Team, but this didnât mean standing up servers. It was more like engineering enablement or developer experience. Chrisâs job was to make the front end of LinkedInâs massive desktop app easier to work on. And thatâs well, well thatâs a lot.</p>
<p><strong>Chris:</strong>
What does it mean to be serving and to some extent helping lead somewhere between 150 to 200 engineers committing to this app every quarter, uh, shipping more and more and more lines of code, just how do, how do you do anything at that scale where there are dozens of teams, hundreds of engineers trying to ship one cohesive product? Just kind of overwhelming at first the scale of all of that exciting also to be very clear It wasnât like I was like, oh no, it was more like this is cool. But oh my gosh, thereâs how do we do what and also then? You know you think about tech debt or tech success either one But at that scale all of those successes and problems are very much magnified.</p>

<p>So youâre like, oh We have two million lines worth of tech debt like whatever your tech debt problems are Itâs multiplied by that rather than, you know, whatever your baseline is. And thatâs, itâs a lot.</p>
<h2 id="js-modernization"><strong>JS Modernization</strong></h2>
<p><strong>Adam:</strong>
One of the first big changes that Chris helped with was introducing JavaScript classes. JavaScript had introduced classes, but they were using Ember, the framework, and their code needed some careful updating.</p>
<p><strong>Chris:</strong>
So how do we get 2 million lines of code to change how they author classes from, you know, pass an object literal into a function to, okay, now weâre going to use class foo extends subclass bar or superclass bar.</p>

<p>So that kind of thing was like, okay, we, we have code mods. But theyâre not a hundred percent and there are complicated things about like, okay, if you take a native class from JavaScript and use it as a subclass of an old school Ember class? And then that is a subclass of a native class, so itâs kind of striped.</p>

<p>We, we came up with the fun name Zebra Striping for that. Like, if your classes look like a series of zebra stripes where some of them are white and some of them are black, think of that as, you know, old school classes versus modern JavaScript classes all the way along down. There were interrupt bugs because the, the old system was never designed to work with this.</p>

<p>And that gets it maybe one of the biggest pieces that I learned there.

Is for a migration to work at that kind of scale it, it has to be as automatable as possible because otherwise itâll, itâll just never get done because the amount of work it would take to manually rewrite 2 million lines of code, itâs just going to take months and months of work, even if you could work on it full time and.</p>

<p>Itâs totally unreasonable to ask a product team to stop work full time to go get some nice new syntax for their JavaScript. Even if it comes with performance benefits, even if it comes from end user experience benefits,</p>
<p><strong>Adam:</strong>
Oh, right. The product teams. Right. Chrisâs team works on ways to improve developer experience, but they need everyone else on board. They need the product teams that are busy shipping features to help.</p>
<p><strong>Chris:</strong>
LinkedIn has a number of relatively well baked processes, always undergoing some degree of revision, but a number of well baked processes for. Wrangling large technical investments, and that dates back to when LinkedIn hit a scaling cliff on its monolith in the early 2010s and just had to go into a service oriented architecture, early microservices.</p>

<p>Mode because it just it could not scale a single monolith anymore at the point It was at and that was a tenth of the size that the user base is now and so on So they basically had to stop work for a year and they looked at that and you know I say stop work stop product work and they said weâre never weâre never gonna do this again Itâs too expensive as a business to stop all work for a year.</p>

<p>And so we had a system For horizontal initiatives like that, and thatâs what they were called, where horizontal meaning kind of cutting across large numbers of teams and you had to pitch them. Thereâs a committee that reviews them for the whole company and keeps the level of engagement there at a, you know.</p>

<p>10 percent of these teams commitment or lower so that you can just say, weâre not, weâre not going to spend 100 percent of all of the product teams working on the flagship app on your technical initiative.</p>
<p><strong>Adam:</strong>
Keeping it under 10 percent was tough, so the plan was to use a lot of automation and tooling to speed things up.</p>

<p>But first, they needed a green light from a senior VP, so they crafted a pitch.</p>
<p><strong>Chris:</strong>
So try to fit all of the wins and trade offs and how that makes business value sense and what the actual, what the technical outcomes are and what the then business outcomes are from those technical outcomes in one page. As an aside, LinkedIn had a hilarious culture of one pagers that were like three to six pages long.</p>
<p><strong>Adam:</strong>
are you saying you made a tool and then the specific teams kind of run the tool with the human in the loop and make sure, like,</p>
<p><strong>Chris:</strong>
Yes exactly, right now we also learned from some of those early phases that if If we didnât have to get those specific teams to do it and we could do it for them. That was also better Because itâs a lot easier for a team to say. Yes I will review your prs and do a smoke test to make sure everythingâs good Then it is to get them to sign up to say I will take a You know, a half a week or a week of my product shipping time to do these code mods.</p>

<p>If instead I can just say, Hey, Iâve got this automation. Iâm going to run it on your code base. Hereâs some training. So, you know, what the output is going to look like and how to work with it. And can you merge my PRs? Much easier, much easier to get buy in from them and especially their management than saying, Hey, can you do some work for us, please?</p>

<p>It took us 18 months end to end to do the Ember stuff. Uh, most of it was in a six month period, but you always have a long tail of teams that Ah, sorry, we have to delay this for two quarters. And another team that gets hit by, well, we would like to fund this, but actually the CEO himself just vetoed our attempted rollout of a new product design.</p>

<p>And weâre going to have to rebuild it from scratch. And sorry, when you go up against the CEO, youâll lose. So your technical initiative, itâs important. We agree, but no, you canât have that. Or the CEO wins.</p>
<h2 id="typescript"><strong>TypeScript</strong></h2>
<p><strong>Adam:</strong>
After that projectâs success, Chris and his team had a clear next target. It was the flood of errors being generated in the front end.</p>
<p><strong>Chris:</strong>
Like most companies, LinkedIn has error logging for those kinds of things. Most, you know, your startup probably uses a ray gun or something like that to ingest those. LinkedIn has its own internal infrastructure because the prices for the levels of errors we were filing every, every hour would be exorbitant.</p>
<p><strong>Adam:</strong>
thatâs wild. I guess thereâs like an implication that thereâs a lot of like maybe secondary code paths that are just broken. Uh, and thatâs surprising to me.</p>
<p><strong>Chris:</strong>
I mean, I guess my snarky take is it shouldnât be. It really shouldnât be. Itâs like, I mean, to make it a little less snarky and to really speak earnestly about this. When I look at software, a lot of software is bad. Broken in those ways and itâs not generally due to a lack of care on the part of engineers itâs usually down to a combination of structural factors of at least two sorts Sort one is what I think many of us are familiar with just in the form of business pressures of look Weâve got a ship this thing and in a lot of ways, thatâs a really good forcing function Motivated engineers are often inclined to polishing for too long, and sometimes we just need to get the thing out into the world.</p>

<p>And thatâs again, not necessarily.</p>

<p>bad, but it can mean that we cut corners and we compromise on quality and without a very strong and robust engineering culture that understands, yes, thatâs a valuable trade off to make, but no, we canât make it all the time or weâll end up with ultimately Broken, janky user experiences that in the short term may not hurt us, but in the long term will actually hurt us as a business.</p>

<p>Even when youâre doing your best, you end up with code that is often subtly broken. So your smoke test might not catch it. Your attempt at QA might not catch it. It might be in an obscure path, but when youâve got LinkedIn cross the billion members count sometime this past year.</p>

<p>Well, a billion members touching what by the time I left was the 3. 2 million lines of code in this mono repo, half of which is tests and half of which is production code. But like, it doesnât matter how hard you have tried QA wise. Thereâs just going to be stuff that somebody thinks to do that. No one ever thought of that particular pathway in combination of stuff to test.</p>

<p>And so you end up with something thatâs broken and maybe the page hangs, maybe it white screens on you, you know, somebody reloads</p>

<p>it or. in an app on a mobile device, they just kill the app and restart it and try to do it again. And well, we all know that turn it off and turn it on again, fixes a lot of problems because you get in out of those weird state bugs.</p>
<p><strong>Adam:</strong>
But there was a solution though. If you took those issues one by one and just imagined that instead you have been using TypeScript.</p>
<p><strong>Chris:</strong>
So one of the things we did is go and look at, okay, whatâs our actual count of JavaScript errors that we know would be caught by this? There are some that youâre never going to catch.</p>

<p>TypeScript is complicated, JavaScript is complicated, but there were classes of errors that we could say, Look, if we actually do the whole migration, how many of these things will stop going to our logging infrastructure? And when youâre looking at a number thatâs in the millions per day, you start to actually be able to talk real numbers of, hey, we could cut our logging volume from the application down by at least a quarter.</p>

<p>Uh, just get rid of 25%. The numberâs probably higher than that. Thatâs a floor.</p>
<h2 id="typescript-buy-in"><strong>TypeScript Buy In</strong></h2>
<p><strong>Adam:</strong>
So, Chris starts putting together a one pager on moving to TypeScript. The good news is, migrating to TypeScript can be done incrementally.</p>

<p>Lots of codebases have done it before. The bad news is, thereâs no way it can fit in a 10 percent time budget. Itâs just too large of a task.</p>

<p>But Chrisâs document was convincing. TypeScript used to have this slogan, JavaScript that scales.</p>

<p>And with those millions of lines of code, with all of those errors, and going through them, it was pretty clear that LinkedIn needed those scaling benefits. And so, Chris skipped the horizontal initiatives, he, he sort of went grassroots, went bottom up.</p>
<p><strong>Chris:</strong>
Engineering managers would ask engineers on their team, okay, youâre advocating that we be early adopters for this, or that we make a significant investment here.</p>

<p>Why? That document would just get handed to them. And so it became a really useful tool to just have the information available in a relatively concise format that said, here are the problems it solves. Here are the wins it gives us. Hereâs how it stacks up even in our hiring ability to compete with our peers who are trying to hire.</p>

<p>And then people could fit that into their mental box of hereâs what the tool is. Hereâs what it gives us. Hereâs how that competes against other priorities. Okay. Yeah, this makes sense. And with that in place, then those conversations about prioritization of it versus other things became a lot easier. I think it became a lot easier for anybody to say, No, this, this is worthwhile. Okay, I get it.</p>
<p><strong>Adam:</strong>
Thatâs, yeah, thatâs powerful. Itâs like youâre like, Oh, I just told them something that was obviously true, and then people had to do it.</p>
<p><strong>Chris:</strong>
Yeah. Yeah, thatâs right.</p>
<p><strong>Adam:</strong>
So, TypeScript takes off. And Chris becomes the go to guy for tough typing problems, need help with a tricky bit of TypeScripting, call Chris. But with this new free time, with this project underway, the next big issue lands on his desk. And this is where things start to spiral a little bit.</p>

<p>LinkedIn was the biggest user of EmberJS in the world. But they werenât super thrilled about it. And it was a conflict. Chris felt it too. He was an open source Ember team member, a contributor. But at LinkedIn, as the DX guy, he saw a lot of mismatches.</p>
<p><strong>Chris:</strong>
But long story short, we ended up in a spot where my job a year and a half ago was figure out a plan to get us off of Ember and onto React.</p>

<p>And at the same time, we had senior leaders saying the cost of migrations at LinkedIn is too high. We, even with all these things youâve been trying to do, all the things we talked about, about getting costs of migration lower, making it things that infrastructure platform kinds of teams do as much of themselves as possible.</p>

<p>Itâs still too high. We feel like it is too much of a cost for our product velocity. Now, I would argue that some of the reasons for decreased product velocity are you have a 3 million line of code app thatâs seven years old, that has a fair bit of debt piled into it. Both technical and product debt.</p>

<p>Thatâs just going to slow down over time. Itâs very hard to keep up that kind of velocity permanently. And you canât just change things because youâre going to break user things. So even the product design work is harder because how and where does it fit in the product is harder at that scale. But the message we were getting from leadership in any case was.</p>

<p>We want to see the cost of migrations be lower. So, how do you migrate 3 million lines of Ember code to React code in a way thatâs low cost?</p>
<p><strong>Adam:</strong>
Think about this. This is a hard problem. Do a big migration, but donât slow anybody down while youâre doing it.</p>
<h2 id="the-slow-migration-plan"><strong>The Slow Migration Plan</strong></h2>
<p><strong>Chris:</strong>
We came up with a strategy that we thought answered the thing they were saying. And it was a roughly, we expected it to take three to five years. And three years was very optimistic.</p>

<p>Our thought was just double down hard on the automation side of it. Make this a thing that product teams basically never have to do a lot of work on. And at the, the idea was sequence it and chunk it up in ways, pull apart the threads of it so that you could tackle one chunk of it, do it end to end, and then move on to the next one.</p>

<p>And some of them could be parallelized. Some of them, not so much so figure out the sequencing, figure out the chunking, parallelize what you can change the build pipeline, change the data layer, change the routing layer, figure out a bridge for the reactivity system that understands how to handle the routing and the view layer, and then finally kind of flip the view layer in the reactivity system over from the ember.</p>

<p>Rendering and reactivity system, the react one at the very end, but in a way where youâve written automation that can do it. So that was our pitch. It was, like I said, three to five years going to be a lot of work, but the idea was product teams will never really have to stop.</p>
<p><strong>Adam:</strong>
Thatâs a huge undertaking, like rebuilding a car piece by piece while driving it continuously on a long road trip. That would be impressive. But three to five years, thatâs a really long time.</p>

<p>Meanwhile, while Chrisâs team was prepping their plan for the engineering bosses, another team reached out. This team weâre going to call the Fingerguns team, not their real name, by the way. But they had a plan too, and they were tackling a similar problem.</p>
<p><strong>Chris:</strong>
Including what they framed differently. And in my view, correctly, as the thing that engineering leadership executive and otherwise really wanted, which was that word of velocity.</p>

<p>How do we ship features and ideas faster? How do we iterate faster? How do we take an idea from idea to A/B testing? Can, can we get that down to be a matter of weeks rather than months? Because. You know, it has been months. And they identified, okay, we have this split in our stacks. We have this big desktop stack.</p>

<p>We have a different mobile web stack. We have these long cycle times on our iOS and our Android apps. Can we get those times down? Down. And I think, in retrospect, they correctly identified that when our leadership was telling us migration fatigue, migration fatigue was a symptom.</p>

<p>And the actual problem they were really caring about was that. It was, can we focus on faster iteration, trying ideas, killing ideas if theyâre not good ideas or theyâre not working faster. And migrations get in the way of doing that because our engineers are spending 10 or 20 or 25 percent of their time on migrations and not on being able to iterate on these things.</p>

<p>And the plan we proposed didnât address that at all.</p>

<p>And this other team came in with a pitch that was kind of a blow up the world pitch. It was, what if we rethink this all from the ground up?</p>
<h2 id="the-finger-guns-plan"><strong>The Finger Gunâs Plan</strong></h2>
<p><strong>Chris:</strong>
It was completely what another colleague of mine once described as being in finger guns mode, meaning like, yeah, yeah, yeah, this is going to be awesome, man, kind of finger gunning at each other without answering any of the kinds of questions about what does it look to like to operate this when weâre trying to support hundreds and hundreds of engineers,</p>

<p>And I think it wouldnât have made me so mad if theyâd come in with an attitude of hereâs an idea. But we recognize that there are things weâre going to miss because weâre used to supporting a dozen, not 180 and being 30 times as many engineers, just going to reshape things.</p>

<p>Sometimes that fresh perspective lets you come in and say, yeah, I hear you. And we do need to make sure we solve that problem. What if we try this and maybe it wonât work, but what if we try it? Thereâs a way to do that. The team that came in did not do that. They were like, nah, it just wonât be a problem, man.

I was like, well, no, it, it will, maybe we can solve the problem. And Iâm up, Iâm totally up for you telling me, letâs try this way of solving the problem instead. But no, no, it will actually be a problem. We have a lot of experience to tell you from, from being in the trenches with it, this is a real problem. And so it was very much a case of. Trying to find ways to be collaborative while actually just being perpetually pretty frustrated that our message didnât seem to be getting through to this other team. Theyâre like, no, there are concerns you really do actually need to care about here, and weâre happy to help you care about them, but weâre just fundamentally not sold on the thing youâre trying to sell because youâre not showing us, from our perspective, a seriousness about the problem space and the actual difficulty of what youâre trying to do here.</p>

<p>We think maybe itâs worth doing. But what about X and Y and Z? And just getting fundamentally blow it off kind of responses.</p>

<p>Mm like two investment advisors and the one is like, S&amp;P 500 index fund and the other oneâs like, Have you seen Bitcoin? NFTs? And like, theyâre just like really pumped, right? And the enthusiasm is exciting.</p>
<p><strong>Adam:</strong>
Maybe thatâs, maybe thatâs too extreme of a dichotomy.</p>
<p><strong>Chris:</strong>
I mean, for whatever itâs worth, that is a perfect analogy to how we felt.</p>
<h2 id="plan-judgement"><strong>Plan Judgement</strong></h2>
<p><strong>Adam:</strong>
So Chris is mad, heâs mad about this plan. He didnât know that he could pitch a big idea, like, stop everything and start fresh on a huge project with the promise of speed later on. If he knew that, you could bet heâd have a plan, right? Maybe a less wild plan, maybe with more considerations, but it would certainly have a more aggressive timeline than the three to five years. But he didnât even know stopping the world was an option.</p>

<p>And thereâs thereâs also sort of a cultural clash here to Jim, a top very senior engineer on the finger guns team. And Chris, they just donât see eye to eye on a lot of things. They have fundamentally different views on what software engineering looks like.</p>

<p>And so Chrisâs team presented their, you know, well thought out, very considered, albeit kind of dull and long term plan to engineering leadership.</p>
<p><strong>Chris:</strong>
Leadership hated it.</p>
<p><strong>Adam:</strong>
They probably have a hard time understanding a five year plan. Like,</p>
<p><strong>Chris:</strong>
Yeah. Yeah, I think that was a huge part of it, and we werenât excited about the plan, which made it really hard to sell.</p>

<p>And itâs really hard to get a team of execs and leaders to be really excited about a team that the engineers are pitching as a, well, itâll get the job done, kind of</p>

<p>like it solves all the things we think you asked us to solve.</p>

<p>We think it kind of sucks, but it sucks less than any of the other options that we can find.</p>
<p><strong>Adam:</strong>
So presumably, this is all sort of bubbling around at the exec level. People tossing around solutions to a fuzzy problem that started as, how Ember to React, but really the core thing was maybe about how do we change things so that we can pick up more speed? How do we get faster at making changes at LinkedIn?</p>

<p>And really, I imagine the execs have their own worries, right? They have numbers to hit. They have market pressures. They probably have pressures from Microsoft. A plan to ditch all the cruft that had built up over time. And a plan to gain velocity, to gain speed.</p>

<p>It must sound pretty good. And then Chris took some time off for Christmas.</p>
<h2 id="on-call"><strong>On Call</strong></h2>
<p><strong>Chris:</strong>
and I came back and discovered that weâd been having site up problems, where chunks of LinkedInâs user base Would for up to about 20 minutes end up with a, Hey, sorry, somethingâs wrong and not see the linkedin.com page at all.</p>

<p>And well, Iâll tell you two things. One, I hate on call and ops kind of work. And two, I was the most senior engineer on the team and got tapped to do this. And it was a hundred percent on call and ops kind of work as we tried to get to the bottom of what. Those problems were so I basically I went on Christmas break frustrated and came back like okay.</p>

<p>Iâve taken a deep breath. I Can do this. Weâll figure out these dynamics with the other team and instead what happened was things are on fire And also this other thing is still going on in the background and now you get to spend three months doing the kind of work You hate most Trying to figure out whatâs going wrong there</p>
<h2 id="memory-leaks"><strong>Memory Leaks</strong></h2>
<p><strong>Adam:</strong>
So about the incident, LinkedIn had these sort of pre rendering services. They ran the client code with Node. js and sort of aggregated all the data from the backend and then they could send it to the client in one big request, bundling everything up for quick delivery right from the data center to the user.</p>

<p>But this had memory leaks and the services were going down.</p>
<p><strong>Chris:</strong>
So, we hit the point where those boxes started running out of memory, and we had a system designed to say, Ah, youâve tripped over a limit memory usage wise. Weâre just going to restart the box. reasonable. We had a couple things missing though.</p>

<p>One, there was no alerting for that. So no one was particularly getting alerted that like, Hey, youâre getting a lot of memory kills. I shouldnât say there was no alerting. There was insufficient alerting on that. Second, there was a setting to say, How many of these containers can be restarted at the same time?</p>

<p>That setting was a key in a YAML file for configuration, and that key was typed</p>

<p>But at some point, someone set a value there that was a legitimate possible value, but was the, maybe the wrong value to have for this system.</p>

<p>And by maybe, I mean, definitely.</p>
<p><strong>Adam:</strong>
Specifically, the number was approximately the entire number of these services that was running. And they all, you know, start up at about the same time. They all get about the same amount of requests, so their memory all creeps up at about the same rate. Which sounds bad. And somebody might take notice of that memory creeping up.</p>

<p>Except, yeah. Insufficient alerting.</p>
<p><strong>Chris:</strong>
So this is growing and it had gotten bad enough that what we started seeing is anytime there was a long weekend or some reason why there was another kind of deployment pause for long enough, And this misconfigured toggle meant, whoops, we can restart them all at the same time. You know what happens when you restart all of your servers at the same time? Suddenly theyâre not responding to user requests. And we would just end up with this kind of thundering herd problem where youâd take a bunch of them offline and that would increase the pressure on the rest of them.</p>

<p>So they would start increasing their memory usage faster because theyâre getting more traffic. So washers repeat and we would end up taking down an entire data center worth of these servers. In the background, there had also been a rightsizing process where the idea was weâre going to drop the amount of CPU and memory usage across our fleet to try to avoid over provisioning where we think weâve got sufficiently Large headroom that everything will be fine and we can save money on not buying new hardware if we donât actually need it. way to think about the intersection of these things was that right sizing process brought down the ceiling and meanwhile the memory leaks were Raising the water level in the room and all of a sudden now the waterâs at the ceiling and the combination of that with one bad configuration meant we were just hosed.</p>

<p>And so a bunch of other engineers and I were looking around saying, we need better alerting, better observability on this. We need more resiliency. Thereâs no reason that a node server running away should kill the host process thatâs managing these node processes. Instead, we should kill the node process alert on that for that condition and restart the node process because then we donât need to ever bring the container down and we never get into this situation.</p>
<p><strong>Adam:</strong>
Itâs like, thereâs not a, thereâs five opportunities here where we can improve</p>
<p><strong>Chris:</strong>
Exactly, exactly.

Failure is inevitable, right? Humans are going to make mistakes. Systems are going to experience power outages. Stuff is going to go wrong in the world. And so the way I think about software engineering. versus programming or hacking, or perhaps as a super set of those, is about designing systems that support engineers in doing their job of getting to those product outcomes.</p>

<p>do we have resiliency of multiple layers of places we can catch that something is wrong, Fix that the, the wrongness in a safe way here and alert and say, Hey, by the way, something changed and itâs going wrong now.</p>

<p>So when it happens, how do we make the system, both the technical side of it and the people side of it, able to respond well?</p>
<p><strong>Adam:</strong>
If you have the inclination, thereâs a lot you can learn from an incident like this. Solve the problem, yes, but also improve the system. Prevent the problem from ever happening. One fail safe Chris explored is just falling back to client side fetching if these services were down.</p>

<p>Chrisâs approach says a lot about him as an engineer. Heâs all about, you know, not just the software, but the systems around it and how can we improve these things, right?</p>

<p>He even has a podcast called winning slowly. Thatâs all about steady gains and continuous improvement.</p>

<p>But yeah, the higher ups just wanted this incident closed. Maybe this was about the speed thing again, but whatever the cause, the incident meetings started to get a bit tense.</p>
<h2 id="incident-push-back"><strong>Incident Push Back</strong></h2>
<p><strong>Chris:</strong>
So we had a Multiple times a week, stand up for it. Whatâs status? What have we made progress on?</p>

<p>Letâs report outward. Send info to execs, etc. about what progress weâve made, etc. Ask for more help if we need it. And one of those, after a weekend where we had run a long experiment, found a new problem.</p>
<p><strong>Adam:</strong>
This was a bad time to find a new problem because a manager for the finger guns team Letâs just call him Dave had just taken over the incident response</p>
<p><strong>Chris:</strong>
He came in and pulled in a bunch of other people and those people were fine, but it was a case very clearly of I donât trust you to solve this problem and I donât trust any of your answers and so Iâm going to pull in these other people to supersede you, which is frustrating in its own right.</p>
<p><strong>Adam:</strong>
Thatâs how Jim lands in the middle of the incident call meetings, and things only go downhill from there.</p>
<p><strong>Chris:</strong>
Why doesnât Code Review just solve this? That was a direct quote from Jim. And my answer was, well it didnât, and it wonât again in the future because people are going to make mistakes and just be better. Again, itâs not an answer, because what happens when itâs some junior on the rotation who thinks, yeah, that seems reasonable, and this PR was made by a very senior SRE?</p>

<p>Why am I going to question whether that value is reasonable? Like, yeah, thereâs a bunch of boxes. That seems fine. Those kinds of things happen. And to that question of engineering systems, one of the things I think about a lot is, does our system only work or does this process only work? Or does this tool only succeed?</p>

<p>If Iâm acting like a senior engineer, on his or her very best day or, or does it work if Iâm a super junior engineer whoâs having a bad day and we really want our systems to be workable for the latter case. And that helps all of us because sometimes, even though Iâm a very senior engineer, sometimes I have bad days.</p>

<p>Sometimes my brain doesnât feel like itâs working at all. Does the system still support me on those days or does it punish me? I really would like to not be punished.</p>
<h2 id="pressure-mounts"><strong>Pressure mounts</strong></h2>
<p><strong>Adam:</strong>
The incident was moving forward, but the pressure was mounting, and Chris felt like this group just didnât understand the scope of the problem or appreciate his considered approach.</p>
<p><strong>Chris:</strong>
âAnd why isnât this just getting solved?â</p>
<p>âAnd execs are unhappy with the rate of progressâ</p>

<p>And itâs like, cause youâve got seven years of piled up technical debt and lack of resiliency that weâre trying to fix and it, if it takes us three months. To fix seven years of negligence. I think thatâs actually not too bad was kind of my take. Uh, I remember telling my old manager that that was easily the maddest I have ever been in any job ever was when the finger gun manager came in and was telling me I was not doing a good enough job because it was taking a while to fix these deep seated problems, and it, it really exacerbated my feelings around their, their other proposal of just kind of a lack of seriousness about engineering on this scale of, no, these, These things arenât easy to solve.</p>

<p>We have an unbounded number of memory leaks to fix, and because of the way this particular memory leak was shaped, they were all references to the same core object. So you could fix one of them, and it didnât change the behavior of the system. I was very frustrated. And in the background, this also kicked off the experiment for the alternative plan, which everybody bought in on and was like, yes, this is going to work.</p>

<p>And a bunch of engineers were like, but âwhat aboutâ. No, thou shalt not ask, but âwhat aboutâ.</p>
<h2 id="reorg"><strong>ReOrg</strong></h2>
<p><strong>Chris:</strong>
Around the same time, his group took over my group in a reorg hostile takeover. It was, it was a thing.</p>
<p><strong>Adam:</strong>
Ooh, heâs your manager now?</p>
<p><strong>Chris:</strong>
Yeah, he was my bossâs boss kind of situation So not my direct manager, which is good because I probably honestly would have quit on the spot we were in a like letâs so we can see You know, sometimes people get in a different role and they end up learning a bunch of new things.</p>
<h2 id="reflecting-on-frustrations"><strong>Reflecting on Frustrations</strong></h2>
<p><strong>Adam:</strong>
Maybe this would all work out for the best though, right? Chris is a reflective, thoughtful guy. He could think to himself, maybe I can learn from this new skip managerâs business focus. He knew this was a needs improvement area for him.</p>
<p><strong>Chris:</strong>
The things I was speaking about were real problems. And they really did make things better in ways that I think some people at LinkedIn really do appreciate and I think really do make a difference for people using LinkedIn. But they were never the thing that the business leadership was most concerned about at any given moment.</p>

<p>And that decoupling I think is a big part of Why we ended up in very different spots, and what made it hard to communicate the value of those things</p>
<p><strong>Adam:</strong>
And as Chris entered this more reflective state, reflecting on his frustrations, he noticed he had some weaknesses in building relationships. So many of my colleagues have personal relationships with folks that maybe I struggled even to connect with or figure out how to work with Because theyâd see them in the cafeteria</p>

<p>Specifically, Chris is thinking of Jim.</p>
<p><strong>Chris:</strong>
other folks I talked to had less of that challenge. Some of it was just. You know, the way that particular engineer related to our corner of engineering, man, there were, there were some challenges, but there were people who had very good working relationships with him because they just end up sitting down with him in the cafeteria because itâd be a big group of people there.</p>

<p>And it does really help when youâre in the midst of some kind of heated technical argument or whatever to have had lunch with somebody. Uh, or, or otherwise to have built that relationship, but when you have a really strong in person culture and a very high, high percentage of your people are all in person that shows up in those kinds of things, because as a company culture, as a, an engineering culture, your norms are all around.</p>

<p>Yeah, weâll see each other in the, the cafes and weâll bump into each other in the halls and, you know, people would tell stories about ending up in the bathroom next to the CEO. Right. You know, thatâs a funny dynamic and a funny place to, you know, look over and youâre washing your hands and thereâs the CEO washing his hands.</p>

<p>I could see the difference it made to have had constant, just physical interaction with someone who ended up being an SVP of engineering or a principal engineer or whatever, that you just know those people.</p>
<p><strong>Adam:</strong>
This raises another point.</p>

<p>Weâve been focused on this technical clash, speed versus sustainability, but maybe itâs more of a social thing. People under pressure just not hearing each other. I mean, we only have Chrisâs side of the story. Maybe this is all a social issue.</p>
<p><strong>Chris:</strong>
Charity Majors had a great quote in a recent article where she said, âAt a sufficiently senior level, engineering, or manager, there are no purely social or purely technical problems.â</p>

<p>Theyâre all socio-technical, and you have to be able to identify whereâs the blocker on this. Is it the social side, or the technical side, or usually some mix of the two, and whatâs the proportion, and what do I need to do to solve this?</p>
<p><strong>Adam:</strong>
Yeah.</p>
<p><strong>Adam:</strong>
So maybe itâs both. Anyways, stepping back from the incident, Chris finds out that the Fingergunâs plan is gaining ground. Itâs gaining traction. And itâs grown in scope. Now itâs about rewriting both the mobile and the desktop apps.</p>
<p><strong>Chris:</strong>
âWeâre going to rethink everything about how we build all of our products at LinkedInâ, which thatâs exciting. And there were some really interesting parts to that. And also one way of saying what happened was you could just say I and my manager and my team lost. And that would not be a false way of describing it.</p>

<p>But okay my pitch lost. Whatever. I just didnât like it that much anyway. Can we make the, can we make your version good? Oh, you donât even want to hear questions that read to you as anything but enthusiasm for this thingâs going to be great. And Iâm like, I want to make it great, but we have to tackle these things to make, oh, you donât even want to hear that.</p>

<p>Okay. Well, I can keep butting my head against this wall. I had conversations with that manager where I was told in literally so many words, âYouâre too idealistic. You donât care enough about the bottom line. You should change your values.â And I was like, no, nope, thatâs not how this is going to work, man. Uh, outside I did the politic.</p>

<p>I understand that perspective. I see where youâre coming from. And inside, the little flip switch in my head was flipping saying, ânope, nope, nope, warning alarms, klaxons going off all around me.â</p>
<p><strong>Adam:</strong>
Chris thought that their need for speed was blinding them to the real problem.</p>
<h2 id="speed-has-a-cost"><strong>Speed has a Cost</strong></h2>
<p><strong>Chris:</strong>
A lot of the problems we had in the codebases that we had were the direct result of overvaluing velocity and refusing to stop and say: This thing over here, this secondary path doesnât work right. Letâs fix it or letâs get rid of it.</p>

<p>Either of those are good options, but refusing to do that and constantly just know weâve got to ship the next feature and how fast can we get it out? And weâve got to ship the next feature and how fast can we get it out? When velocity becomes the primary or driving value that everything else is subservient to, it leaves you in a spot where maybe you have good velocity initially, but you canât sustain it over time.</p>

<p>Itâs kind of the classic pattern, actually, for codebases as they age, is if youâre not continually investing in them, but youâre continually extending them, you end up exactly where we were. And the things that I saw being pitched were all about maximizing velocity and made no, not even a gesture at how are you going to handle these, these other things.</p>

<p>And I, Iâve kept mulling on it and I, I did my best to give it a fair shot of thereâs some interesting ideas here. Thereâs some interesting technical directions here, but I was also remembering why I left my previous job, which it ultimately was a very bad case of burnout. Of the Iâm having horrific migraines and the worst stomach pains Iâve ever had in my life and unable to exercise, uh, random outbursts of sobbing at random times, panic attacks. It was a bad time.</p>

<p>I donât recommend burnout. Itâs not fun.</p>

<p>And if I stay on this road, I know where that goes, and itâs a bad spot, and I donât want to end up there again. And I can either stay in a world where Iâm constantly working not to be angry, because I donât, you know, I did my best not to stay angry in those times. But when the things that youâre running up against every day make it active work not to be angry, it makes your job not fun, to say the least.</p>

<p>And I can either, you know, try to turn this Titanic with my little rowboat over here and be mad that Iâm failing. So thatâs not going to work, like, shove it with your paddle, doesnât, doesnât turn the Titanic.</p>

<p>Or I can just say, âIâm just going to paddle that way.â The Titanic thing implies that I think theyâre heading for an iceberg. I mostly just mean the scale of the thing, not the iceberg side of it. I hope they donât iceberg. That would be sad. You know, a Disney cruise liner. Iâm not going to turn a Disney cruise liner with a rowboat and a paddle.</p>

<p>So I didnât. I said, Iâve learned a ton. I have some idea of what itâs like to work on a three million lines of code app now that migrate a ton of TypeScript at a huge company and think about those big problems and now I can go do something else and not burn out and not be angry at my job every day or not be fighting not to be angry at my job every day.</p>

<p>Iâm not going to spend years of my life trying to build in a way and on things that I ultimately donât believe in.</p>

<p>Lifeâs too short. That would be a waste. Okay, this sucks, but I guess itâs time to walk away. Not, not out of spite or malice or any of that, but just saying weâre going different directions.</p>

<p>Maybe the values that this particular corner of LinkedIn was embracing at this particular find are not morally objectionable.</p>

<p>But theyâre not mine.</p>
<h2 id="outro"><strong>Outro</strong></h2>
<p><strong>Adam:</strong>
That was the show. Thank you, Chris, for being so candid. I feel like stories like this are unfolding at a hundred different places all the time. These socio-technical issues, people butting heads about the right way to solve things.</p>
<p>But they never get heard outside of small circles. So thank you, Chris, for sharing. Chris is at the time of this writing, looking for work. You can find more at ChrisKrycho.com. Iâll put a link in the show notes. It shouldnât surprise you to hear that Chris is looking for a role that aligns with his personal values.</p>

<p>Thatâs a big takeaway from our chat. You, you need to agree with your team and your organization about whatâs important. And sometimes those things change and you just need to. But specifically, Chris is looking for a role where he can help drive engineering excellence. Heâs pretty passionate about finding ways to make building software better.</p>

<p>He has a whole blog post about this and what he calls Ratchets. And you should check it out on his website. And if you like the podcast and you made it this far, so unless youâre like hate listening or something, I assume you do.</p>

<p>If you want to support the podcast and keep it going, the best thing you can do to support me is go to <a href="https://corecursive.com/supporters">CoRecursive.com/supporters</a>. You know, I have no sponsors of the podcast besides individuals. Link in the show notes. You can join as a podcast supporter and youâll receive access to bonus episodes and join the community.</p>

<p>And until next time, thank you so much for listening.</p>
<form action="https://app.convertkit.com/forms/2082075/subscriptions" method="post" data-sv-form="2082075" data-uid="99a50e1950" data-format="inline" data-version="5" data-options="{&quot;settings&quot;:{&quot;after_subscribe&quot;:{&quot;action&quot;:&quot;message&quot;,&quot;success_message&quot;:&quot;Success! Now check your email to confirm your subscription.&quot;,&quot;redirect_url&quot;:&quot;&quot;},&quot;analytics&quot;:{&quot;google&quot;:null,&quot;facebook&quot;:null,&quot;segment&quot;:null,&quot;pinterest&quot;:null,&quot;sparkloop&quot;:null,&quot;googletagmanager&quot;:null},&quot;modal&quot;:{&quot;trigger&quot;:&quot;timer&quot;,&quot;scroll_percentage&quot;:null,&quot;timer&quot;:5,&quot;devices&quot;:&quot;all&quot;,&quot;show_once_every&quot;:15},&quot;powered_by&quot;:{&quot;show&quot;:true,&quot;url&quot;:&quot;https://convertkit.com?utm_source=dynamic&amp;utm_medium=referral&amp;utm_campaign=poweredby&amp;utm_content=form&quot;},&quot;recaptcha&quot;:{&quot;enabled&quot;:false},&quot;return_visitor&quot;:{&quot;action&quot;:&quot;show&quot;,&quot;custom_content&quot;:&quot;&quot;},&quot;slide_in&quot;:{&quot;display_in&quot;:&quot;bottom_right&quot;,&quot;trigger&quot;:&quot;timer&quot;,&quot;scroll_percentage&quot;:null,&quot;timer&quot;:5,&quot;devices&quot;:&quot;all&quot;,&quot;show_once_every&quot;:15},&quot;sticky_bar&quot;:{&quot;display_in&quot;:&quot;top&quot;,&quot;trigger&quot;:&quot;timer&quot;,&quot;scroll_percentage&quot;:null,&quot;timer&quot;:5,&quot;devices&quot;:&quot;all&quot;,&quot;show_once_every&quot;:15}},&quot;version&quot;:&quot;5&quot;}" min-width="400 500 600 700 800">

<div data-style="minimal">

<p>
Hello, <br>I make CoRecursive because I love it when someone shares the details behind some project, some bug, or some incident with me.
</p><p>
No other podcast was telling stories quite like I wanted to hear.
</p><p>
Right now this is all done by just me and I love doing it, but it's also exhausting.
</p><p>
Recommending the show to others and contributing to this patreon are the biggest things you can do to help out.
</p><div><p>
Whatever you can do to help, I truly appreciate it!</p><p>
Thanks! Adam Gordon Bell
</p></div>
<p><a href="https://www.patreon.com/adamgordonbell">Support The Podcast</a>
</p></div>
</form>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenAI and Elon Musk (755 pts)]]></title>
            <link>https://openai.com/blog/openai-elon-musk</link>
            <guid>39611484</guid>
            <pubDate>Wed, 06 Mar 2024 02:19:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openai.com/blog/openai-elon-musk">https://openai.com/blog/openai-elon-musk</a>, See on <a href="https://news.ycombinator.com/item?id=39611484">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p> is exactly right. We may wish it otherwise, but, in my and </p><p>âs opinion, Tesla is the only path that could even hope to hold a candle to Google. Even then, the probability of being a counterweight to Google is small. It just isn't zero. </p></div><div><!----><p><span>Date:</span> January 31, 2018 at 11:54:30 PM PST</p><p><span>Subject:</span> Re: Top AI institutions today</p><div><p>Working at the cutting edge of AI is unfortunately expensive. For example,</p><p>In addition to DeepMind, Google also has Google Brain, Research, and Cloud. And TensorFlow, TPUs, and they own about a third of all research (in fact, they hold their own AI conferences).</p><p>I also strongly suspect that compute horsepower will be necessary (and possibly even sufficient) to reach AGI. If historical trends are any indication, progress in AI is primarily driven by systems - compute, data, infrastructure. The core algorithms we use today have remained largely unchanged from the ~90s. Not only that, but any algorithmic advances published in a paper somewhere can be almost immediately re-implemented and incorporated. Conversely, algorithmic advances alone are inert without the scale to also make them scary.</p><p>It seems to me that OpenAI today is burning cash and that the funding model cannot reach the scale to seriously compete with Google (an 800B company). If you can't seriously compete but continue to do research in open, you might in fact be making things worse and helping them out âfor freeâ, because any advances are fairly easy for them to copy and immediately incorporate, at scale.</p><p>A for-profit pivot might create a more sustainable revenue stream over time and would, with the current team, likely bring in a lot of investment. However, building out a product from scratch would steal focus from AI research, it would take a long time and it's unclear if a company could âcatch upâ to Google scale, and the investors might exert too much pressure in the wrong directions.The most promising option I can think of, as I mentioned earlier, would be for OpenAI to attach to Tesla as its cash cow. I believe attachments to other large suspects (e.g. Apple? Amazon?) would fail due to an incompatible company DNA. Using a rocket analogy, Tesla already built the âfirst stageâ of the rocket with the whole supply chain of Model 3 and its onboard computer and a persistent internet connection. The âsecond stageâ would be a full self driving solution based on large-scale neural network training, which OpenAI expertise could significantly help accelerate. With a functioning full self-driving solution in ~2-3 years we could sell a lot of cars/trucks. If we do this really well, the transportation industry is large enough that we could increase Tesla's market cap to high O(~100K), and use that revenue to fund the AI work at the appropriate scale.</p><p>I cannot see anything else that has the potential to reach sustainable Google-scale capital within a decade.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Embedded Swift on the Raspberry Pi Pico (234 pts)]]></title>
            <link>https://forums.swift.org/t/embedded-swift-on-the-raspberry-pi-pico-rp2040-without-the-pico-sdk/69338</link>
            <guid>39611111</guid>
            <pubDate>Wed, 06 Mar 2024 01:10:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://forums.swift.org/t/embedded-swift-on-the-raspberry-pi-pico-rp2040-without-the-pico-sdk/69338">https://forums.swift.org/t/embedded-swift-on-the-raspberry-pi-pico-rp2040-without-the-pico-sdk/69338</a>, See on <a href="https://news.ycombinator.com/item?id=39611111">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemscope="" itemtype="http://schema.org/DiscussionForumPosting">
      <meta itemprop="headline" content="Embedded Swift on the Raspberry Pi Pico/RP2040 without the Pico SDK">
      
      <meta itemprop="datePublished" content="2024-01-08T20:12:02Z">
        <meta itemprop="articleSection" content="Community Showcase">
      <meta itemprop="keywords" content="embedded, rp-pico, rp2040">
      


          <div id="post_1">
            <div>
              

                

              <p><span>
                  <time datetime="2024-01-08T20:12:02Z">
                    January 8, 2024,  8:12pm
                  </time>
                  <meta itemprop="dateModified" content="2024-01-08T20:23:25Z">
              <span itemprop="position">1</span>
              </span>
            </p></div>
            <div itemprop="text">
              <p>This is sort of a follow-up on <a href="https://forums.swift.org/t/embedded-swift-running-on-the-raspberry-pi-pico/69001">Embedded Swift running on the Raspberry Pi Pico</a>, but with a different take.</p>
<p>I managed to create a very small Embedded Swift "toolchain" for building pure Swift executables for the Raspberry Pi Pico (it might also work with other RP2040 boards, but I'm only testing on the Pico). The "toolchain" is just a Makefile, so no SwiftPM integration yet, but I feel we're not too far off. The repository is here if you want to try it out:</p>


<p>It should work on macOS and Linux as hosts (tested with Ubuntu 22.04 via Docker). Please report back if you try this out and manage to get something running on a Pico.</p>
<p>Unlike our other approach (in <a href="https://forums.swift.org/t/embedded-swift-running-on-the-raspberry-pi-pico/69001">Embedded Swift running on the Raspberry Pi Pico</a>), this doesn't use the Raspberry Pi Pico C/C++ SDK as a basis, which has pros and cons:</p>
<ul>
<li>
<p>Much less build system complexity. This makes it much more feasible IMO to get it working with SwiftPM eventually. I found the complexity of the Pico SDK's CMake config very overwhelming. The Makefile we have here isn't pretty, but it's soooo much smaller.</p>
</li>
<li>
<p>We have to build everything from scratch, so almost nothing works yet. I wrote a few simple functions to talk to a GPIO pin (very ugly code currently), but that's it for now â we have no timers, no IÂ²C, no SPI, etc.</p>
</li>
<li>
<p>This clean slate is also exciting, of course. Lots of room for experimentation and learning.</p>
</li>
</ul>
<p>The main application code is all Swift. There's very little C and Assembly involved for the bootstrapping. I copied the necessary files (linker script etc.) from the Pico SDK and patched them slightly. The bootstrapping code still does a few things we don't really need. I hope to make whittle it down to the bare minimum we need eventually, if only to understand it better.</p>
<p>I'm using the C compiler and linker from the <a href="https://github.com/ARM-software/LLVM-embedded-toolchain-for-Arm/" rel="noopener nofollow ugc">ARM Embedded LLVM toolchain</a>. If I'm reading <a href="https://forums.swift.org/u/kubamracek">@kubamracek</a> current work in the Swift repo correctly (e.g. <a href="https://github.com/apple/swift/pull/70715" rel="noopener nofollow ugc">[embedded] Start building and including lld even in Darwin toolchains by kubamracek Â· Pull Request #70715 Â· apple/swift Â· GitHub</a>), we may soon be able to use the Swift linker for this?</p>
<p>By the way, the current executable, which blinks an LED and listens to a GPIO input, is less than 1 KB:</p>
<pre data-code-wrap="sh"><code>/Applications/LLVMEmbeddedToolchainForArm-17.0.1-Darwin/bin/llvm-size SwiftPico.elf
   text	   data	    bss	    dec	    hex	filename
    992	      0	      0	    992	    3e0	SwiftPico.elf
</code></pre>
<p>The next step I'd love to take is SwiftPM integration as this would make it so much easier to integrate other packages. I started experimenting with building an <a href="https://github.com/apple/swift-evolution/blob/main/proposals/0387-cross-compilation-destinations.md" rel="noopener nofollow ugc">SE-0387</a>-style SDK for the RP-2040, but I haven't succeeded yet. I'll probably post questions in a separate thread.</p>
            </div>

            

            

                
          </div>
          <div id="post_2" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/Helge_Hess1"><span itemprop="name">Helge_Hess1</span></a>
                (Helge HeÃ)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2024-01-08T20:41:33Z">
                    January 8, 2024,  8:41pm
                  </time>
                  <meta itemprop="dateModified" content="2024-01-08T20:41:33Z">
              <span itemprop="position">2</span>
              </span>
            </p>
            <div itemprop="text">
              <p>I didn't play with the new 387 stuff yet (FP coprocessor support?), which is probably much better, but maybe my cross compiler sample might be helpful too: <a href="https://github.com/SPMDestinations" rel="noopener nofollow ugc">Swift Package Manager Cross Compilation Destinations Â· GitHub</a></p>
            </div>

            

            

          </div>
          <div id="post_3" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/kubamracek"><span itemprop="name">kubamracek</span></a>
                (Kuba Mracek)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2024-01-09T12:52:58Z">
                    January 9, 2024, 12:52pm
                  </time>
                  <meta itemprop="dateModified" content="2024-01-09T12:52:58Z">
              <span itemprop="position">3</span>
              </span>
            </p>
            <p>This is awesome work, <a href="https://forums.swift.org/u/ole">@ole</a>! <img src="https://emoji.discourse-cdn.com/apple/blush.png?v=12" title=":blush:" alt=":blush:" loading="lazy" width="20" height="20"></p>

            

            

          </div>
          <div id="post_4" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/flocked"><span itemprop="name">flocked</span></a>
                (Florian Zand)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2024-01-11T01:31:01Z">
                    January 11, 2024,  1:31am
                  </time>
                  <meta itemprop="dateModified" content="2024-01-11T01:33:12Z">
              <span itemprop="position">4</span>
              </span>
            </p>
            <p><a href="https://forums.swift.org/u/ole">@ole</a> Amazing work! So happy to see Swift running on embedded platforms. I love coding for them but I'm not the biggest fan of Arduino (thought they are doing amazing work!).</p>

            

            

          </div>
          <div id="post_5" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/Max_Desiatov"><span itemprop="name">Max_Desiatov</span></a>
                (Max Desiatov)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2024-01-11T09:55:26Z">
                    January 11, 2024,  9:55am
                  </time>
                  <meta itemprop="dateModified" content="2024-01-11T09:58:29Z">
              <span itemprop="position">5</span>
              </span>
            </p>
            <div itemprop="text">
              
<p>I'm not entirely convinced Swift SDKs are the right answer for embedded platforms. The primary reason to have a Swift SDK is a need for a special libc and dependencies like swift-corelibs-dispatch and swift-corelibs-xctest that are hard to build as a package. Another potential use case is the ability to define test runners and debuggers, but this latter possibility hasn't been explored yet.</p>
<p>Since you don't immediately need either of those in this case, if you can fit all the required platform things into a separate package it should be much easier for users to depend on it. That also makes it highly customizable and easy to update in one go, as opposed to adding an out-of-package Swift SDK dependency.</p>
<p>If you need to add unsafe compiler/linker flags to such "embedded platform support" package, please let us know. I hope we'll be able to work around or find fixes for those new requirements.</p>
            </div>

            

            

          </div>
          <div id="post_6" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/ole"><span itemprop="name">ole</span></a>
                (Ole Begemann)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2024-01-14T19:45:32Z">
                    January 14, 2024,  7:45pm
                  </time>
                  <meta itemprop="dateModified" content="2024-01-14T19:45:32Z">
              <span itemprop="position">6</span>
              </span>
            </p>
            <div itemprop="text">
              
<p>Thank you, Helge. I think I'd rather go with the new SDK approach (if it's necessary at all, see <a href="https://forums.swift.org/u/max_desiatov">@Max_Desiatov</a>'s <a href="https://forums.swift.org/t/embedded-swift-on-the-raspberry-pi-pico-rp2040-without-the-pico-sdk/69338/5">reply above</a>) because why not use the new stuff? I never used cross-compilation with <code>destination.json</code> so I think my time is better spent focusing on the new stuff. Both approaches seem very similar to me.</p>
            </div>

            

            

          </div>
          <div id="post_7" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/Helge_Hess1"><span itemprop="name">Helge_Hess1</span></a>
                (Helge HeÃ)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2024-01-14T20:15:37Z">
                    January 14, 2024,  8:15pm
                  </time>
                  <meta itemprop="dateModified" content="2024-01-14T20:15:37Z">
              <span itemprop="position">7</span>
              </span>
            </p>
            <p>Oh yes, absolutely use the new stuff!! As mentioned I haven't looked at it yet, I thought my stuff might be potentially helpful to build <em>upon</em> the new things.<br>
My things essentially streamline the work by <a href="https://forums.swift.org/u/johannesweiss">@johannesweiss</a> into distinct steps (getting a target toolchain and things like that).</p>

            

            

          </div>
          <div id="post_8" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/Helge_Hess1"><span itemprop="name">Helge_Hess1</span></a>
                (Helge HeÃ)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2024-01-14T20:17:21Z">
                    January 14, 2024,  8:17pm
                  </time>
                  <meta itemprop="dateModified" content="2024-01-14T20:17:21Z">
              <span itemprop="position">8</span>
              </span>
            </p>
            <p>Is there a good intro on the new things? E.g. how do Linux toolchains work?</p>

            

            

          </div>
          <div id="post_9" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/ole"><span itemprop="name">ole</span></a>
                (Ole Begemann)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2024-01-14T20:30:51Z">
                    January 14, 2024,  8:30pm
                  </time>
                  <meta itemprop="dateModified" content="2024-01-14T20:41:32Z">
              <span itemprop="position">9</span>
              </span>
            </p>
            <div itemprop="text">
              
<p>Interesting. I think a special libc <em>might</em> be interesting/necessary for some embedded environments. For example, the Pico C SDK does depend on an embedded libc AFAIK, but that's a topic for the other thread <a href="https://forums.swift.org/t/embedded-swift-running-on-the-raspberry-pi-pico/69001">Embedded Swift running on the Raspberry Pi Pico</a>. You're right that the from-scratch approach we're discussing in this thread doesn't need it.</p>

<p>That would be nice, although I fear the stuff we need to do for the RP2040 will be difficult to wrap in a package:</p>
<ul>
<li>The second-stage bootloader (boot2) is assembled and linked with a special linker script that puts it at the right location in flash</li>
<li>Then we calculate a checksum over the bootloader binary and write that checksum into the binary (the RP2040 won't boot unless this checksum is there). This is currently done by a Python script.</li>
<li>The runtime (crt0) for the main executable (setting up IRQ handlers, exception handlers etc.) is assembled and linked with the main executable</li>
<li>The main executable also needs to be linked with a special linker script</li>
</ul>
<p>Maybe the checksum calculation can be done in a SwiftPM plugin? But I'm not sure we can integrate this cleanly.</p>
<p>We can prebuild boot2 and crt0, but then we're also no longer talking about a simple package that you can include as a dependency, right (because of the binary files involved)? And it doesn't solve how to pass the linker script to the final link step.</p>

<p>I think my biggest problem in doing any SwiftPM experiments right now is that I can't use <code>swift</code> as the linker to build a Pico executable â I have to use Clang for linking. I don't think I can tell SwiftPM to link with Clang unless I build an SE-0387-style SDK?</p>
<p>Here are the errors I get when I try to link with Swift (on Linux; I understand linking ELF files on macOS is work in progress: <a href="https://github.com/apple/swift/pull/70715" rel="noopener nofollow ugc">[embedded] Start building and including lld even in Darwin toolchains by kubamracek Â· Pull Request #70715 Â· apple/swift Â· GitHub</a>):</p>
<pre data-code-wrap="sh"><code>/usr/bin/swift --version
Swift version 5.11-dev (LLVM 13124099c3f0229, Swift d6871edc839adec)
Target: aarch64-unknown-linux-gnu

"/usr/bin/swiftc" \
	-enable-experimental-feature Embedded \
	-target armv6m-none-none-eabi \
	-Xlinker --script=pico-sdk-comps/memmap_default.ld \
	-Xlinker -z -Xlinker max-page-size=4096 \
	-Xlinker --gc-sections \
	-Xlinker --wrap=__aeabi_lmul \
	build/bs2_default_padded_checksummed.S.obj build/crt0.S.obj build/bootrom.c.obj build/pico_int64_ops_aeabi.S.obj build/main.o \
	-o "build/SwiftPico.elf"
error: link command failed with exit code 1 (use -v to see invocation)
clang: error: no such file or directory: '/usr/lib/swift/armv6m/swiftrt.o'
error: fatalError
make: *** [Makefile:141: build/SwiftPico.elf] Error 1
</code></pre>
<p>OK, so it's looking for <code>/usr/lib/swift/armv6m/swiftrt.o</code> and doesn't find it. That directory doesn't exist. Should it exist? Will it exist in the future as the embedded toolchain improves?</p>
<p>Linking with <code>-nostartfiles</code> gets rid of that error, but produces more:</p>
<pre data-code-wrap="sh"><code>"/usr/bin/swiftc" \
	-enable-experimental-feature Embedded \
	-target armv6m-none-none-eabi \
	-nostartfiles \
	-Xlinker -nostdlib \
	-Xlinker --script=pico-sdk-comps/memmap_default.ld \
	-Xlinker -z -Xlinker max-page-size=4096 \
	-Xlinker --gc-sections \
	-Xlinker --wrap=__aeabi_lmul \
	build/bs2_default_padded_checksummed.S.obj build/crt0.S.obj build/bootrom.c.obj build/pico_int64_ops_aeabi.S.obj build/main.o \
	-o "build/SwiftPico.elf"
error: link command failed with exit code 1 (use -v to see invocation)
/usr/bin/ld.gold: error: cannot find -lswiftCore
/usr/bin/ld.gold: error: cannot find -lc
/usr/bin/ld.gold: error: cannot find -lm
/usr/bin/ld.gold: error: cannot find -lclang_rt.builtins-armv6m
/usr/bin/ld.gold: internal error in set_address, at ../../gold/output.h:322
clang: error: ld.lld command failed with exit code 1 (use -v to see invocation)
error: fatalError
make: *** [Makefile:142: build/SwiftPico.elf] Error 1
</code></pre>
<p>I'm afraid I don't really understand what I'm doing here, so it's hard to ask better questions.</p>
            </div>

            

            

          </div>
          <div id="post_10" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/ole"><span itemprop="name">ole</span></a>
                (Ole Begemann)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2024-01-14T20:38:42Z">
                    January 14, 2024,  8:38pm
                  </time>
                  <meta itemprop="dateModified" content="2024-01-14T20:38:42Z">
              <span itemprop="position">10</span>
              </span>
            </p>
            <div itemprop="text">
              
<p>I ran <a href="https://github.com/apple/swift-sdk-generator" rel="noopener nofollow ugc">GitHub - apple/swift-sdk-generator: Generate Swift SDKs for cross-compilation</a> with the default settings. It produced a working Mac-to-Linux cross-compilation SDK, i.e. I successfully used it to build a Linux binary on the Mac.</p>
<p>The JSON files in the generated <code>.artifactbundle</code> look a lot like <code>destination.json</code>:</p>
<details>
<p>xyx.artifactbundle/info.json:</p>
<pre data-code-wrap="json"><code>{
  "artifacts" : {
    "5.9.2-RELEASE_ubuntu_jammy_aarch64" : {
      "type" : "swiftSDK",
      "version" : "0.0.1",
      "variants" : [
        {
          "path" : "5.9.2-RELEASE_ubuntu_jammy_aarch64/aarch64-unknown-linux-gnu",
          "supportedTriples" : [
            "arm64-apple-macosx13.0"
          ]
        }
      ]
    }
  },
  "schemaVersion" : "1.0"
}
</code></pre>
<p>xyx.artifactbundle/5.9.2-RELEASE_ubuntu_jammy_aarch64/aarch64-unknown-linux-gnu/swift-sdk.json:</p>
<pre data-code-wrap="json"><code>{
  "targetTriples" : {
    "aarch64-unknown-linux-gnu" : {
      "sdkRootPath" : "ubuntu-jammy.sdk",
      "toolsetPaths" : [
        "toolset.json"
      ]
    }
  },
  "schemaVersion" : "4.0"
}
</code></pre>
<p>xyx.artifactbundle/5.9.2-RELEASE_ubuntu_jammy_aarch64/aarch64-unknown-linux-gnu/toolset.json:</p>
<pre data-code-wrap="json"><code>{
  "librarian" : {
    "path" : "llvm-ar"
  },
  "schemaVersion" : "1.0",
  "swiftCompiler" : {
    "extraCLIOptions" : [
      "-use-ld=lld",
      "-Xlinker",
      "-R/usr/lib/swift/linux/"
    ]
  },
  "cxxCompiler" : {
    "extraCLIOptions" : [
      "-lstdc++"
    ]
  },
  "linker" : {
    "path" : "ld.lld"
  },
  "rootPath" : "swift.xctoolchain/usr/bin"
}
</code></pre>
</details>
            </div>

            

            

          </div>
          <div id="post_11" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/Max_Desiatov"><span itemprop="name">Max_Desiatov</span></a>
                (Max Desiatov)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2024-01-14T21:27:10Z">
                    January 14, 2024,  9:27pm
                  </time>
                  <meta itemprop="dateModified" content="2024-01-14T21:27:10Z">
              <span itemprop="position">11</span>
              </span>
            </p>
            <div itemprop="text">
              
<p>This should be doable with a plugin. Maybe even the Python script can be packaged in an <code>.artifactbundle</code> and then called from the plugin? You can just pretend it's a "binary", by sticking an executable flag on it and adding an appropriate Python shebang header. IMO in SwiftPM we're too prescriptive in saying that package plugins must delegate to binary executables, any executable script should do, assuming an interpreter for it is available.</p>

<p>IIUC this can be done today with something like <code>LinkerSetting.unsafeFlags(["-T", "&lt;your_linker_script&gt;"])</code> passed to your target that needs it in <code>Package.swift</code>.</p>

<p>IIUC we're basically always delegate to Clang for linking anyway. Pass <code>-v</code> to your <code>swiftc</code> invocation to see that it invokes Clang under the hood.</p>

<p>It should not, this file is irrelevant in the embedded mode as of right now. There are apparently still Swift Driver bugs present, where unrelated non-embedded options are passed in the embedded mode. I've fixed some of them recently in <a href="https://github.com/apple/swift-driver/pull/1516">Don't pass `-rpath` and `-lswiftCore` in embedded mode by MaxDesiatov Â· Pull Request #1516 Â· apple/swift-driver Â· GitHub</a>, apparently there are more lurking out there in the codebase.</p>

<p>These also look like driver bugs to me, some of them possibly fixed by the PR I linked above.</p>
            </div>

            

            

          </div>
          <div id="post_12" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/ole"><span itemprop="name">ole</span></a>
                (Ole Begemann)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2024-01-15T17:06:42Z">
                    January 15, 2024,  5:06pm
                  </time>
                  <meta itemprop="dateModified" content="2024-01-15T17:06:42Z">
              <span itemprop="position">12</span>
              </span>
            </p>
            <div itemprop="text">
              <p>OK, I created a repo with a minimal SwiftPM package: just an executable product with an empty <code>main</code> method, not including any of the RP2040-specific stuff. Here's the repo: <a href="https://github.com/ole/SwiftPM-embedded-minimal" rel="noopener nofollow ugc">GitHub - ole/SwiftPM-embedded-minimal</a></p>
<p>Now I want to build this for Embedded (<code>armv6m-none-none-eabi</code> in my case). Depending on the configuration (Mac vs. Linux and debug vs. release), I'm getting different build errors. I have documented these in two issues:</p>
<ul>
<li><a href="https://github.com/ole/SwiftPM-embedded-minimal/issues/1" rel="noopener nofollow ugc">SwiftPM build failures on macOS Â· Issue #1 Â· ole/SwiftPM-embedded-minimal Â· GitHub</a></li>
<li><a href="https://github.com/ole/SwiftPM-embedded-minimal/issues/2" rel="noopener nofollow ugc">SwiftPM build failures on Linux Â· Issue #2 Â· ole/SwiftPM-embedded-minimal Â· GitHub</a></li>
</ul>
<p>I don't necessarily expect these builds to succeed as they are because the linker would certainly miss some required symbols. But the errors I'm seeing seem to occur at an earlier stage, and they're the same errors I'm seeing with my more complex RP2040-specific setup (incl. linker scripts etc.), which I pushed here: <a href="https://github.com/ole/swift-rp-pico-bare/pull/4" rel="noopener nofollow ugc">[WIP] Try to build with SwiftPM by ole Â· Pull Request #4 Â· ole/swift-rp-pico-bare Â· GitHub</a>.</p>
<p>Any help is appreciated.</p>
            </div>

            

            

          </div>
          <div id="post_13" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <div>
              <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/kebo"><span itemprop="name">kebo</span></a>
                (Kenta Kubo)
              </span></p>

              <p><span>
                  <time itemprop="datePublished" datetime="2024-01-15T17:41:10Z">
                    January 15, 2024,  5:41pm
                  </time>
                  <meta itemprop="dateModified" content="2024-01-15T18:05:15Z">
              <span itemprop="position">13</span>
              </span>
            </p></div>
            <div itemprop="text">
              <p>I have successfully used SwiftPM to build Swift sources to a static library and link it with other object files using lld. This is still a very small example, but I hope it is at least partially helpful for you.</p>


<p>(Note that swiftly cannot currently be used as is due to <a href="https://github.com/swift-server/swiftly/issues/92" rel="noopener nofollow ugc">this issue</a>)</p>
            </div>

            

            

          </div>
          <div id="post_14" itemprop="comment" itemscope="" itemtype="http://schema.org/Comment">
            <p><span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
                <a itemprop="url" href="https://forums.swift.org/u/ole"><span itemprop="name">ole</span></a>
                (Ole Begemann)
              </span>



              <span>
                  <time itemprop="datePublished" datetime="2024-01-15T19:26:13Z">
                    January 15, 2024,  7:26pm
                  </time>
                  <meta itemprop="dateModified" content="2024-01-15T19:26:13Z">
              <span itemprop="position">14</span>
              </span>
            </p>
            <div itemprop="text">
              
<p>Thank you <a href="https://forums.swift.org/u/kebo">@kebo</a>! And thanks for the link, I'll take a look.</p>
            </div>

            

            

          </div>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Accenture to Acquire Udacity (115 pts)]]></title>
            <link>https://techcrunch.com/2024/03/05/accenture-to-acquire-udacity-to-build-a-learning-platform-focused-on-ai/</link>
            <guid>39610931</guid>
            <pubDate>Wed, 06 Mar 2024 00:46:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://techcrunch.com/2024/03/05/accenture-to-acquire-udacity-to-build-a-learning-platform-focused-on-ai/">https://techcrunch.com/2024/03/05/accenture-to-acquire-udacity-to-build-a-learning-platform-focused-on-ai/</a>, See on <a href="https://news.ycombinator.com/item?id=39610931">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				<p id="speakable-summary">Accenture announced today that it would acquire the <a href="https://newsroom.accenture.com/news/2024/accenture-to-acquire-edtech-leader-udacity-to-accelerate-capabilities-of-accenture-learnvantage" target="_blank" rel="noopener">learning platform Udacity</a> as part of an effort to build a learning platform focused on the growing interest in AI. While the company didnât specify how much it paid for Udacity, it also announced a $1 billion investment in building a technology learning platform itâs calling LearnVantage.</p>
<p>While it could also offer more general technology training, the company made clear that it is particularly interested in offering training to get workers up to speed on AI. âThe rise of generative AI represents one of the most transformative changes in how work gets done and is driving a growing need for enterprises to train and upskill people in cloud, data and AI as they build their digital core and reinvent their enterprises,â Kishore Durg, global lead of Accenture LearnVantage said in a statement.</p>
<p>As for Udacity, which was founded in 2011, it gave the usual kinds of statements a company makes when it gets acquired by a much larger organization like Accenture. That is, it believes that it can reach more people and help them acquire skills as part of the larger entity. That goes without saying, but there had been<a href="https://economictimes.indiatimes.com/tech/startups/upgrad-in-talks-for-100-million-to-close-us-edtech-udacity-buy/articleshow/106842130.cms?from=mdr" target="_blank" rel="noopener"> rumors earlier this year</a> that the company was in talks with Indian edtech company Upgrad with an asking price of $80 million. Apparently that deal fell through and Accenture ended up buying them instead.</p>
<p>Regardless, if the rumored $80 million price tag was correct, that was a precipitous drop in value for a company that raised almost $300 million, <a href="https://my.pitchbook.com/profile/54606-61/company/profile#general-info">per PitchBook</a>, and sported a $1 billion valuation in 2015.</p>
<p>Per usual, the deal is subject to regulatory review and antitrust oversight.</p>

			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[BlackCat ransomware group implodes after apparent payment by Change Healthcare (104 pts)]]></title>
            <link>https://krebsonsecurity.com/2024/03/blackcat-ransomware-group-implodes-after-apparent-22m-ransom-payment-by-change-healthcare/</link>
            <guid>39610846</guid>
            <pubDate>Wed, 06 Mar 2024 00:32:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://krebsonsecurity.com/2024/03/blackcat-ransomware-group-implodes-after-apparent-22m-ransom-payment-by-change-healthcare/">https://krebsonsecurity.com/2024/03/blackcat-ransomware-group-implodes-after-apparent-22m-ransom-payment-by-change-healthcare/</a>, See on <a href="https://news.ycombinator.com/item?id=39610846">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
												<p>There are indications that U.S. healthcare giant <strong>Change Healthcare</strong> has made a $22 million extortion payment to the infamous <strong>BlackCat</strong> ransomware group (a.k.a. â<strong>ALPHV</strong>â) as the company struggles to bring services back online amid a cyberattack that has disrupted prescription drug services nationwide for weeks. However, the cybercriminal who claims to have given BlackCat access to Changeâs network says the crime gang cheated them out of their share of the ransom, and that they still have the sensitive data Change reportedly paid the group to destroy. Meanwhile, the affiliateâs disclosure appears to have prompted BlackCat to cease operations entirely.</p>
<div id="attachment_58289"><p><img aria-describedby="caption-attachment-58289" decoding="async" src="https://krebsonsecurity.com/wp-content/uploads/2022/01/blackcat.png" alt="" width="730" height="346"></p><p id="caption-attachment-58289">Image: Varonis.</p></div>
<p>In the third week of February, a cyber intrusion at Change Healthcare began shutting down important healthcare services as company systems were taken offline. It soon emerged that BlackCat was behind the attack, which has <a href="https://www.nytimes.com/2024/03/05/health/cyberattack-healthcare-cash.html" target="_blank" rel="noopener">disrupted the delivery of prescription drugs</a> for hospitals and pharmacies nationwide for nearly two weeks.</p>
<p>On March 1, a cryptocurrency address that security researchers had already mapped to BlackCat received a single transaction worth approximately $22 million. On March 3, a BlackCat affiliate posted a complaint to the exclusive Russian-language ransomware forum <strong>Ramp</strong> saying that Change Healthcare had paid a $22 million ransom for a decryption key, and to prevent four terabytes of stolen data from being published online.</p>
<p>The affiliate claimed BlackCat/ALPHV took the $22 million payment but never paid him his percentage of the ransom. BlackCat is known as a âransomware-as-serviceâ collective, meaning they rely on freelancers or affiliates to infect new networks with their ransomware. And those affiliates in turn earn commissions ranging from 60 to 90 percent of any ransom amount paid.</p>
<p>âBut after receiving the payment ALPHV team decide to suspend our account and keep lying and delaying when we contacted ALPHV admin,â the affiliate âNotchyâ wrote. âSadly for Change Healthcare, their data [is] still with us.â</p>
<p>Change Healthcare has neither confirmed nor denied paying, and has responded to multiple media outlets with a similar non-denial statement â that the company is <a href="https://www.unitedhealthgroup.com/changehealthcarecyberresponse" target="_blank" rel="noopener">focused on its investigation and on restoring services</a>.</p>
<p>Assuming Change Healthcare did pay to keep their data from being published, that strategy seems to have gone awry: Notchy said the list of affected Change Healthcare partners theyâd stolen sensitive data from included <strong>Medicare</strong> and a host of other major insurance and pharmacy networks.</p>
<p>On the bright side, Notchyâs complaint seems to have been the final nail in the coffin for the BlackCat ransomware group, which was <a href="https://krebsonsecurity.com/2023/12/blackcat-ransomware-raises-ante-after-fbi-disruption/" target="_blank" rel="noopener">infiltrated by the FBI and foreign law enforcement partners in late December 2023</a>. As part of that action, the government seized the BlackCat website and released a decryption tool to help victims recover their systems.</p>
<p>BlackCat responded by re-forming, and increasing affiliate commissions to as much as 90 percent. The ransomware group also declared it was formally removing any restrictions or discouragement against targeting hospitals and healthcare providers.</p>
<p>However, instead of responding that they would compensate and placate Notchy, a representative for BlackCat said today the group was shutting down and that it had already found a buyer for its ransomware source code.</p>
<div id="attachment_66615"><p><img aria-describedby="caption-attachment-66615" decoding="async" loading="lazy" src="https://krebsonsecurity.com/wp-content/uploads/2024/03/alphvseizureexit.png" alt="" width="751" height="384" srcset="https://krebsonsecurity.com/wp-content/uploads/2024/03/alphvseizureexit.png 1596w, https://krebsonsecurity.com/wp-content/uploads/2024/03/alphvseizureexit-768x393.png 768w, https://krebsonsecurity.com/wp-content/uploads/2024/03/alphvseizureexit-1536x786.png 1536w, https://krebsonsecurity.com/wp-content/uploads/2024/03/alphvseizureexit-782x400.png 782w" sizes="(max-width: 751px) 100vw, 751px"></p><p id="caption-attachment-66615">The seizure notice now displayed on the BlackCat darknet website.</p></div>
<p>âThereâs no sense in making excuses,â wrote the RAMP member âRansom.â âYes, we knew about the problem, and we were trying to solve it. We told the affiliate to wait. We could send you our private chat logs where we are shocked by everything thatâs happening and are trying to solve the issue with the transactions by using a higher fee, but thereâs no sense in doing that because we decided to fully close the project. We can officially state that we got screwed by the feds.â<span id="more-66606"></span></p>
<p>BlackCatâs website now features a seizure notice from the FBI, but several researchers noted that this image seems to have been merely cut and pasted from the notice the FBI left in its December raid of BlackCatâs network. The FBI has not responded to requests for comment.</p>
<p><strong>Fabian Wosar</strong>, head of ransomware research at the security firm <strong>Emsisoft</strong>, said it appears BlackCat leaders are trying to pull an âexit scamâ on affiliates by withholding many ransomware payment commissions at once and shutting down the service.</p>
<p>âALPHV/BlackCat did not get seized,â Wosar wrote on Twitter/X today. âThey are exit scamming their affiliates. It is blatantly obvious when you check the source code of their new takedown notice.â</p>
<p><strong>Dmitry Smilyanets</strong>, a researcher for the security firm Recorded Future, said BlackCatâs exit scam was especially dangerous because the affiliate still has all the stolen data, and could still demand additional payment or leak the information on his own.</p>
<p>âThe affiliates still have this data, and theyâre mad they didnât receive this money, Smilyanets <a href="https://apple.news/A15zH2UVNQpaKt1gwZ8QRCQ" target="_blank" rel="noopener">told Wired.com</a>. âItâs a good lesson for everyone. You cannot trust criminals; their word is worth nothing.â</p>
<p><img decoding="async" loading="lazy" src="https://krebsonsecurity.com/wp-content/uploads/2024/03/dstweet.png" alt="" width="583" height="569"></p>
<p>BlackCatâs apparent demise comes closely on the heels of the implosion of another major ransomware group â <strong>LockBit</strong>, a ransomware gang estimated to have extorted over $120 million in payments from more than 2,000 victims worldwide. On Feb. 20, LockBitâs website <a href="https://krebsonsecurity.com/2024/02/feds-seize-lockbit-ransomware-websites-offer-decryption-tools-troll-affiliates/" target="_blank" rel="noopener">was seized by the FBI</a> and the U.K.âs National Crime Agency (NCA) following a months-long infiltration of the group.</p>
<p>LockBit also tried to restore its reputation on the cybercrime forums by resurrecting itself at a new darknet website, and by threatening to release data from a number of major companies that were hacked by the group in the weeks and days prior to the FBI takedown.</p>
<p>But LockBit appears to have since lost any credibility the group may have once had. After a much-promoted attack on the government of Fulton County, Ga., for example, LockBit threatened to release Fulton Countyâs data unless paid a ransom by Feb. 29. But when Feb. 29 rolled around, LockBit <a href="https://krebsonsecurity.com/2024/02/fulton-county-security-experts-call-lockbits-bluff/" target="_blank" rel="noopener">simply deleted the entry for Fulton County from its site</a>, along with those of several financial organizations that had previously been extorted by the group.</p>
<p>Fulton County held a press conference to say that it had not paid a ransom to LockBit, nor had anyone done so on their behalf, and that they were just as mystified as everyone else as to why LockBit never followed through on its threat to publish the countyâs data. Experts told KrebsOnSecurity LockBit likely balked because it was bluffing, and that the FBI likely relieved them of that data in their raid.</p>
<p>Smilyanetsâ comments are driven home in revelations first published last month by Recorded Future, which <a href="https://therecord.media/lockbit-lied-about-deleting-exfiltrated-data-after-ransom-payments" target="_blank" rel="noopener">quoted</a> an NCA official as saying LockBit never deleted the data after being paid a ransom, even though that is the only reason many of its victims paid.</p>
<p>âIf we do not give you decrypters, or we do not delete your data after payment, then nobody will pay us in the future,â LockBitâs extortion notes typically read.</p>
<p>Hopefully, more companies are starting to get the memo that <a href="https://krebsonsecurity.com/2020/11/why-paying-to-delete-stolen-data-is-bonkers/" target="_blank" rel="noopener">paying cybercrooks to delete stolen data</a> is a losing proposition all around.</p>
											</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[European court favors strong encryption, calling it key to privacy rights (236 pts)]]></title>
            <link>https://www.washingtonpost.com/technology/2024/03/05/encryption-eu-human-rights-privacy-ruling/</link>
            <guid>39609846</guid>
            <pubDate>Tue, 05 Mar 2024 22:16:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.washingtonpost.com/technology/2024/03/05/encryption-eu-human-rights-privacy-ruling/">https://www.washingtonpost.com/technology/2024/03/05/encryption-eu-human-rights-privacy-ruling/</a>, See on <a href="https://news.ycombinator.com/item?id=39609846">Hacker News</a></p>
Couldn't get https://www.washingtonpost.com/technology/2024/03/05/encryption-eu-human-rights-privacy-ruling/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Ace of Aces: or, why you should Do Maths as a game designer (184 pts)]]></title>
            <link>https://paxsims.wordpress.com/2024/03/02/ace-of-aces-or-why-you-should-do-maths-as-a-game-designer/</link>
            <guid>39609528</guid>
            <pubDate>Tue, 05 Mar 2024 21:45:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://paxsims.wordpress.com/2024/03/02/ace-of-aces-or-why-you-should-do-maths-as-a-game-designer/">https://paxsims.wordpress.com/2024/03/02/ace-of-aces-or-why-you-should-do-maths-as-a-game-designer/</a>, See on <a href="https://news.ycombinator.com/item?id=39609528">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				
<p>Every now and again you come across something that stretches your brain in a new direction. Last week I stumbled on a magic trick of a Choose Your Own Adventure: Al Leonardiâs Ace of Aces, a paper computer running a first-person shooter, programmed in 1980âeleven years before <a href="https://en.wikipedia.org/wiki/Wolfenstein_3D">Wolfenstein 3D</a>, the âfirstâ first-person shooter.</p>



<h2>Wait what? A physical game can be a computer?</h2>



<p>There are of course, all sorts of early âcomputersâ of various flavours that predate what we generally mean when we talk about computer programs:</p>



<ul>
<li>Jaquet Drozâs <a href="https://www.youtube.com/watch?v=laJX0txJc6M">The Writer</a>: a 1770 programmable automaton that could hand-write tweets</li>



<li>The Difference Engine (more about Ada Lovelaceâs adventures in computing in <a href="https://www.vox.com/2015/4/21/11561702/sydney-paduas-new-comic-proves-ada-lovelace-was-not-a-fake-geek-girl">this delightful graphic novel</a>)</li>



<li><a href="https://en.wikipedia.org/wiki/Curta">The Curta</a> (or âmaths hand grenadeâ)</li>



<li>And many mechanical <a href="https://en.wikipedia.org/wiki/Admiralty_Fire_Control_Table">fire control computers</a> from the beginning-of-the-end of the era in which <a href="https://paxsims.wordpress.com/2020/10/12/wrens-pioneer-synthetic-environment-training/">âcomputerâ was a role filled by women</a>.</li>
</ul>



<p>All of these devices share a common limitation: they may be programable to a degree, but they solve a singular problem: the Writer can only hand-write a message stored in his main cam âmemoryâ, the Difference Engine and Curta perform <em>particular</em> mathematical operations, fire control computers perform only that calculationâ¦the device <em>is</em> the program, in the same way that Wolfenstein 3D <em>is</em> a first-person shooter, not the computer or operating system or programming language used to make it run. And when you start to think of programming in these terms, all sorts of interesting âcomputer programsâ are there to be explored:</p>



<p>Computer programs are just algorithmsâoften big and quite complexâbut at their heart, just a list of mathematical instructions:</p>



<ul>
<li>Add two numbers</li>



<li>Subtract two numbers</li>
</ul>



<p>â¦and from there all mathematics is possibleâ¦ (seriously. Thatâs what a slide rule does: âmultiplicationâ is just adding the value several times.)</p>



<p>You can encode these operations in a (real) computer program by writing code. You can encode them mechanically. One of my favourite YouTubes of all time is the 1950s US Navy educational film explaining how mechanical computers perform maths:</p>



<figure><p><span><iframe width="630" height="355" src="https://www.youtube.com/embed/gwf5mAlI7Ug?version=3&amp;rel=1&amp;showsearch=0&amp;showinfo=1&amp;iv_load_policy=1&amp;fs=1&amp;hl=en&amp;autohide=2&amp;wmode=transparent" allowfullscreen="true" sandbox="allow-scripts allow-same-origin allow-popups allow-presentation allow-popups-to-escape-sandbox"></iframe></span>
</p></figure>



<p>And if you know a little about analogue electronics, you know that <a href="https://www.youtube.com/watch?v=J62AVFREwxQ">basic electrical circuits</a> just do maths, and from there <a href="https://www.youtube.com/watch?v=QZwneRb-zqA">you can create all the complex logic</a> of analogue and digital computing. Which is a long way of saying: if you can say something with maths, you can construct an algorithm that computes it.</p>



<p>Board games are doing this all the time and we just donât think about it so much:</p>



<p>Sometimes the player performs operations to physically compute for the game: rolling a dice for a random number.</p>



<p>Sometimes the state of the board <em>is</em> the computation. You see this kind of trick used to modify player abilities directly inside game mechanics: when you âscoreâ with pieces otherwise used to play the game, removing them from the board to track your score imposes a mechanical disadvantage: in the 2-player game <a href="https://boardgamegeek.com/boardgame/7854/yinsh">Yinsh</a>, you move one of your three rings to construct 5-in-a-row patternsâbut when you connect five, one of your rings comes off the board to signal this, reducing the options you have to connect five again.</p>



<p>From a particular frame of reference, this is an algorithm encoding some pretty sophisticated maths.</p>



<p>Sometimes the computation is encoded in a look-up table. These can be simple conversion factors, like the 4:1 ratio to trade resources with the bank in Catan, or fairly complex range tables for weapon class vs armour class used in the <a href="http://www.wrg.me.uk/wrg-me.html">Wargames Research Group</a> games.</p>



<p>Choose Your Own Adventures are essentially a look-up table: after each page the player is presented with a list of options and the page to turn to if you choose that optionâa look-up table that converts their choice into the next page number.</p>



<h2>Whatâs so interesting about Ace of Aces?</h2>



<p>First: what <em>is</em> Ace of Aces? Itâs a two-player World War One dogfighting game. One of you is the Red Baron, one of you is <s>Snoopy</s> Biggles, and you attempt to line the other up in your sights for some dakka dakka dakka. So far so <a href="https://boardgamegeek.com/boardgame/1711/richthofens-war">several other board games</a>. What sets Ace of Aces apart is the ingenious interface: you play with a pair of picture books, one for the German pilot, one for the Allied pilot. Each page of the book shows you the view of your enemy given your current position.</p>



<p>Each page has a list of manoeuvres you can choose from and the page to turn to that âperformsâ the manoeuvre. Iâve put âperformsâ in quotes, but as weâll see, the look-up table actually has this maths encoded into the page numbers, itâs some sneaky-clever design.</p>



<p>Your opponent tells you the page number for their move and you turn to that page. Then you look up your move in the look-up table you find there, andâby the Power Of Awesomeness it will take you to <em>the same page number</em> as your opponent gets to by turning to the page for your move and then looking up their move.</p>



<p>The entire game is encoded into these paired books:</p>



<ul>
<li>No matter what manoeuvres you and your opponent pick, you always end up on the same page number.</li>



<li>For any given page number, the relative positions of the two planes are the same in both books. One shows the view from the German aircraft, the other shows the view looking back the other way.</li>
</ul>



<figure><p><img id="36909" src="https://paxsims.files.wordpress.com/2024/03/a170.jpg" alt="" width="600" height="485"><img id="36910" src="https://paxsims.files.wordpress.com/2024/03/g170.jpg" alt="" width="600" height="449"></p><figcaption>Both players are on page 170. The Allied player sends the German player to page 64, the German player sends the Allied player to page 54:</figcaption></figure>



<figure><p><img id="36915" src="https://paxsims.files.wordpress.com/2024/03/a54.jpg" alt="" width="600" height="466"><img id="36916" src="https://paxsims.files.wordpress.com/2024/03/g64.jpg" alt="" width="600" height="472"></p><figcaption>â¦where we see the Allied player side-slips left, and the German player makes a stall-turn rightâ¦</figcaption></figure>



<figure><p><img id="36912" src="https://paxsims.files.wordpress.com/2024/03/a15.jpg" alt="" width="600" height="470"><img id="36913" src="https://paxsims.files.wordpress.com/2024/03/g15.jpg" alt="" width="600" height="473"></p><figcaption>Both players end up on page 15</figcaption></figure>



<p>Thereâs a lot of interesting stuff going on here! But before we dive into how the magic trick works (maybe your maths brain has an inkling of what may be involved ?), letâs take a minute to appreciate:</p>



<p>The sheer simplicity of play:</p>



<ul>
<li>You look at a picture of the game state</li>



<li>You choose a move</li>



<li>You and your opponent turn to the page number for each-otherâs moves</li>



<li>You look up your move on that intermediate page, and turn to that page number which is the new game state</li>



<li>Repeat.</li>
</ul>



<p>There are no dice, no counters, no moving parts. You donât even need to be in the same place as your opponent, you just need to be able to give each other page numbers. It takes less than a minute to learn how to playâeven though you now have full control over a pretty sophisticated flying machineâand creates quick-fire play that makes total sense in the seat-of-your-pants early aviation era.</p>



<p>Error correction is effortlessly built in: if you donât end up on matching page numbers, one of you goofed.</p>



<p>The framing is brilliant. The first-person view from the cockpit is <em>so</em> immersive, and itâs key to the simplicity of play. The state of the game and manoeuvre options (drawn as pictures of the manoeuvre) are intuitiveâbut that rare kind of intuitive that makes sense to subject matter experts who know how to fly a plane for real, and casual gamers who know <em>nothing</em> about flying or WW1.</p>



<p>One of the reasons the game works so well is the lever youâre given to pull is perfect. The game moves at the speed of your thoughts: you donât have to pull the yoke and throttle and set the flaps correctly, you canât âfailâ to perform your actionâthe <em>game</em> is that your opponent isnât sitting still while you do it.</p>



<p>You are in full control of this aircraft: itâs not like you pick âdo you want to break left or right?â and then sit back and watch a cut scene of the dogfight where the next dozen decisions are made for you. Thereâs no system to beat your opponent at beatingâand that is part of what makes this game endlessly re-playable.</p>



<figure><p><span><iframe width="630" height="355" src="https://www.youtube.com/embed/UF8BF7_ywkI?version=3&amp;rel=1&amp;showsearch=0&amp;showinfo=1&amp;iv_load_policy=1&amp;fs=1&amp;hl=en&amp;autohide=2&amp;wmode=transparent" allowfullscreen="true" sandbox="allow-scripts allow-same-origin allow-popups allow-presentation allow-popups-to-escape-sandbox"></iframe></span>
</p></figure>



<p>When I talk about this game as a paper computer, itâs because youâre playing something much closer to a genuine flightsim than a board or card game.</p>



<p>And it turns out that the framing is the secret sauce to everything about this game.</p>



<h2>Itâs all about perspectives.</h2>



<p>One of the big lessons to learn in programming for game design is that the visuals and the game state are not the same thingâthe visuals at the front end isnât necessarily driving how the back end works. Tetris has âfallingâ blocks but the game is not about gravity and âfallingâ, thatâs just a visual representation of a time limit. (<a href="https://stabyourself.net/nottetris2/">Not Tetris</a> illustrates this point perfectly.)</p>



<p>Ace of Aces is doing something sneaky-clever in the background:</p>



<p>First of all, the game is secretly a hex-based game.</p>



<p>But Kit! You said this game was <em>not</em> like the other hex-based WW1 dogfighting games. And thatâs true for the player ð and also true for the game, because yes, the game is using hexes, but not like Richtofenâs War or any other hex-based wargame.</p>



<p>In these games, the map is made of hexes. You have hex-based movement relative to a fixed point of referenceâthe topology of the map. The movement is absoluteâthe value itself matters.</p>



<p>Ace of Aces is using hexes, but there is no map. Movement is relative to your current position. The absolute value is irrelevant, the change in the value between one turn and the next is all that matters. This works because the game is first-person: the only thing that matters is where is the enemy relative to your current position. Not only <em>is</em> this the first-person perspective, but itâs what makes the system manageable in an analogue formatâthe first-person view of every possible relative position of the German aircraft from the Allied aircraft is 222â¦almost exactly the number of pages in the paired books (page 223 is the âohnoes! You lost themâ page).</p>



<p>If the German plane is dead ahead of you, it looks the same regardless of how you got here. If there were a map, the view of the aircraft would be the same whether the two aircraft where head-to-head over the field or the stand of trees or the country lane between them. If there was a map and the map actually mattered, the first-person perspective would require ~1,400 pages <em>per map hex</em> to show the appropriate landscape under both planes (223 unique relative positions of Allied and German aircraft, times the six unique orientations of the perspective aircraft relative to the map hex).</p>



<p>This trick of stationary player, moving world, is another reason why calling Ace of Aces a program feels right: this is how computer games work. Your monitor is a stationary window onto the game world that is moving relative to you. Itâs an easy trick for the computer to pat its head and rub its stomach and have the dogfight happen in relative spaceâhexes that arenât map hexesâwhile simultaneously moving the map beneath you as a separate calculation.</p>



<p>This relative frame of reference is also going to be familiar to anyone who has done old-school air-to-air lethality analysis: the endgame of a missile versus an aircraft doesnât care about where they are in absolute space, just relative to each otherâand in fact you especially <em>donât</em> care about any permutation of endgame geometry where the missile isnât on an intercept course with the aircraft (duh, itâs going to miss), so it was common to separate out the different computations of âdo they intercept?â and âif they intercept, whatâs the damage?â, the latter being stuffed into a lookup table that gives you the lethality that your six-degrees-of-freedom flightsim can call on. The frame of reference called <a href="https://eprints.soton.ac.uk/23361/1/pate_05.pdf">GW372</a> is explicitly relative to the aircraft (or missile) being shot at. So, yes, Ace of Aces is a FORTRAN flightsim.</p>



<p>The other sneaky trick that Ace of Aces is doing comes back to the reciprocal perspectives again, but from another angle. Hold onto your hats, here comes the maths!</p>



<p>A <a href="https://www.youtube.com/watch?v=kYB8IZa5AuE">Transformation Matrix</a> is a magic number you can multiply by, to get from one position and rotation to another. Itâs sort of like converting between degrees Celsius and Fahrenheit, or meters and kilometresâthe transformation matrix is the âconversion factorâ to teleport from a given position and rotation in the world to another.</p>



<p>Why thatâs important is the magical property they have when our world position is not absolute, but relative:</p>



<p>Letâs say the Allied aircraft is at <em>A</em>, and the German aircraft is a <em>G</em></p>



<p>And we say the transformation matrix of the Allied aircraftâs manoeuvre is <em>a</em></p>



<p>And the transformation matrix of the German aircraftâs manoeuvre is <em>g</em></p>



<p>Then <em>Aga = Gag</em></p>



<p>That is, if we apply the enemyâs manoeuvre to ourselves, then do our manoeuvre, we end up at the correct position and rotation relative to the other aircraft, given our respective starting points and manoeuvres. And because the books are paired, thatâs also the same page number: the books show the two aircraft in the same relative positions on any given page, just one book shows the view of that is from the German perspective and the other book is from the Allied perspective.</p>



<p>The clue to this is in that intermediate page: if you pay attention to the pictures, the page your opponent sends you to is literally showing you their aircraftâs movement relative to your current position, before youâve taken your move.</p>



<p>You can tell because of another concept called the Identity Matrix: the transformation matrix that does no movement and no rotationâthe âmultiply by 1â or âadd 0â equivalent. Because weâre not using the hexes for a mapâbecause itâs relative movement, not absoluteâthere is a âno movement, no rotationâ option, and if your opponent chooses it, they send you toâ¦the page youâre currently on as the intermediate page, because no relative change in position or rotation! Remember the intermediate page shows you their movement relative to you while youâre not moving. And if you look up the Identity manoeuvre on any page it always says the page number that youâre currently on.</p>



<h2>Ok but how on earth do you make a book that does this ?!?!</h2>



<p>You can read the <a href="https://patents.google.com/patent/US4378118A/en">fairly obtuse patent here</a>. Itâs not particularly easy to parse, because of a lack of good diagrams and the generalisation to all possible interpretations of the IP, but I managed to unpick how it works and how to make my own paired-books. Hats off to Leonardi who did this (literally) with <a href="https://ludology.libsyn.com/ludology-257-all-about-that-ace">string, transparencies, and a banda machine</a>. I ended up creating the tools to create my own paired-books as the by-product of trying to visualise the patent description.</p>



<p>The game takes place on a hex grid. <a href="https://h3geo.org/docs/core-library/coordsystems/">Coordinate systems for hex grids</a> areâ¦interestingâ¦but in this case we donât need an x or y axis, we just need a notation system for each cell of the grid, and the six possible orientations an aircraft can have in any given cell. Leonardiâs system puts hex 0 at the centre, and winds the cell numbers clockwise from the top left. The orientations take a letter, and also wind clockwise from the top left.</p>



<p>Secretly, you start every turn at the centre of this grid in position 0A, the origin in this notation.</p>



<figure><a href="https://paxsims.files.wordpress.com/2024/03/us4378118-drawings-page-5.png"><img data-attachment-id="36919" data-permalink="https://paxsims.wordpress.com/2024/03/02/ace-of-aces-or-why-you-should-do-maths-as-a-game-designer/us4378118-drawings-page-5/" data-orig-file="https://paxsims.files.wordpress.com/2024/03/us4378118-drawings-page-5.png" data-orig-size="1222,988" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="us4378118-drawings-page-5" data-image-description="" data-image-caption="" data-medium-file="https://paxsims.files.wordpress.com/2024/03/us4378118-drawings-page-5.png?w=300" data-large-file="https://paxsims.files.wordpress.com/2024/03/us4378118-drawings-page-5.png?w=630" width="1024" height="827" src="https://paxsims.files.wordpress.com/2024/03/us4378118-drawings-page-5.png?w=1024" alt="Plot showing a hex grid with the hexes numbered 0 to 6, wound clockwise, and each face of each hex labeled A to F also wound clockwise." srcset="https://paxsims.files.wordpress.com/2024/03/us4378118-drawings-page-5.png?w=1024 1024w, https://paxsims.files.wordpress.com/2024/03/us4378118-drawings-page-5.png?w=150 150w, https://paxsims.files.wordpress.com/2024/03/us4378118-drawings-page-5.png?w=300 300w, https://paxsims.files.wordpress.com/2024/03/us4378118-drawings-page-5.png?w=768 768w, https://paxsims.files.wordpress.com/2024/03/us4378118-drawings-page-5.png 1222w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure>



<p>The enemy aircraft can be in any position and rotation on the grid, giving you all possible relative positions and rotations to each other. They have some relative position and rotation to you. Meanwhile they see themselves from position 0A and see you at the reciprocal of that relative position. That can make your brain ache a little.</p>



<p>The first thing to do is construct a list of the reciprocal positions: if you move the Allied aircraft to any given position and rotation on the grid, taking its frame of reference with, which cell position and rotation of the Allied aircraftâs grid is now at the âoriginâ. This is the kind of thing my brain finds extremely slippery, so I drew a pictureâor, rather, I constructed the grid in Unity, wrote some code that let me set the position and rotation of the Allied aircraft, and asked Unity âhey, what cell number and letter is in that position now please?â</p>



<figure><a href="https://paxsims.files.wordpress.com/2024/03/transformation-matrix.png"><img data-attachment-id="36924" data-permalink="https://paxsims.wordpress.com/2024/03/02/ace-of-aces-or-why-you-should-do-maths-as-a-game-designer/transformation-matrix/" data-orig-file="https://paxsims.files.wordpress.com/2024/03/transformation-matrix.png" data-orig-size="3829,2242" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="transformation-matrix" data-image-description="" data-image-caption="" data-medium-file="https://paxsims.files.wordpress.com/2024/03/transformation-matrix.png?w=300" data-large-file="https://paxsims.files.wordpress.com/2024/03/transformation-matrix.png?w=630" width="1024" height="599" src="https://paxsims.files.wordpress.com/2024/03/transformation-matrix.png?w=1024" alt="Screenshot of the above hex grid imposed on two vehicles with different positions and orientations." srcset="https://paxsims.files.wordpress.com/2024/03/transformation-matrix.png?w=1024 1024w, https://paxsims.files.wordpress.com/2024/03/transformation-matrix.png?w=2046 2046w, https://paxsims.files.wordpress.com/2024/03/transformation-matrix.png?w=150 150w, https://paxsims.files.wordpress.com/2024/03/transformation-matrix.png?w=300 300w, https://paxsims.files.wordpress.com/2024/03/transformation-matrix.png?w=768 768w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>(Well spotted: these are not aircraft ð more on that later.)</figcaption></figure>



<p>I did this initially so I could follow the example in the patent and set the Allied player to the position in the worked example and confirm what the obtuse language was even talking about. But, having written a script that lets me set the values by hand, it was a short step to writing a loop to iterate through all of them to read the result and write out the table to Excel. What you end up with is a somewhat symmetric result: when the enemy is in front of me, I am behind them. When they are to my east, I am to their west.</p>



<p>This is the key to determining the page number for any given relative position: you go through the list of all possible positions and rotations and assign each a unique page number for the Allied book. For each page in the Allied book, the <em>reciprocal</em> view in the German book shares that page numberâso position 0B in the Allied book shares a page number with position 0F in the German book. This is easy to conceptualise if you iterate through the German positions and rotations in the same order as the Allied ones, but instead of copying the page number directly, you look up the Allied page number for the reciprocal position.</p>



<p>This has created you a lookup table for the correct page number for Allied and German relative positions on the hex grid. You can put it aside while we change gear to think about manoeuvring.</p>



<p>We know that the transformation matrices we need work independent of the other player, which is super-handy. It simplifies everything that follows to just thinking about one aircraft moving at a time.</p>



<p>How does a manoeuvre work ? You begin your turn at the origin. In purely mathematical terms, your available moves are to any other position and rotation on the grid, but in practical terms your aircraft is only so manoeuvrable. The <em>allowed</em> moves in Ace of Aces are:</p>



<figure><a href="https://paxsims.files.wordpress.com/2024/03/moves.jpg"><img data-attachment-id="36921" data-permalink="https://paxsims.wordpress.com/2024/03/02/ace-of-aces-or-why-you-should-do-maths-as-a-game-designer/moves/" data-orig-file="https://paxsims.files.wordpress.com/2024/03/moves.jpg" data-orig-size="600,452" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="moves" data-image-description="" data-image-caption="" data-medium-file="https://paxsims.files.wordpress.com/2024/03/moves.jpg?w=300" data-large-file="https://paxsims.files.wordpress.com/2024/03/moves.jpg?w=600" width="600" height="452" src="https://paxsims.files.wordpress.com/2024/03/moves.jpg?w=600" alt="Hex grid showing an aircraft and the hex position and direction destination for each of Ace of Ace's manoeuvre symbols." srcset="https://paxsims.files.wordpress.com/2024/03/moves.jpg 600w, https://paxsims.files.wordpress.com/2024/03/moves.jpg?w=150 150w, https://paxsims.files.wordpress.com/2024/03/moves.jpg?w=300 300w" sizes="(max-width: 600px) 100vw, 600px"></a></figure>



<p>This is how the manoeuvre symbols match the hex grid movement. Youâll notice itâs not entirely symmetric, because the torque of a rotary engine makes it much easier to turn and spin with the propeller, not against it. You can also tune âallowedâ moves to match the capability of a particular aircraft (and thatâs why there is a whole series of these books that you can use interchangeably in any Allied-German pair: the underlying reciprocal page numbers, hex grid and movement are the same, but some planes donât have access to <em>all</em> the manoeuvres).</p>



<p>A particular manoeuvre will change your position and rotation <em>by</em> the same amount regardless of your starting position and rotationâthe manoeuvre is a transformation matrixâand the Identity manoeuvre, that has zero change in position and rotation, is the clue to what happens next:</p>



<p>The intermediate page number for any given manoeuvreâthe one you tell to your enemyâis the page number that corresponds to your destination taking that move from 0A. That destination encodes the movement of your aircraft relative to the origin in a transformation matrix that can be applied to your enemy to make it the movement relative to their current position and rotation. â¦if that makes your hair catch on fire, think about vectors and co-ordinates:</p>



<p>If you have a point (2, 4) thatâs the same as having a vectorâa lineâthat goes from position (0, 0) to position (2, 4). If I <em>add</em> another vector (3, 1) to this point, weâre taking the vector that goes from (0, 0) to (1, 3), moving it to put the (0, 0) at position (2, 4) and then drawing the line from (2, 4) to whatever position (2, 4) + (3, 1) is. The addition can happen in either order, we still end up at (5, 5).</p>



<figure><a href="https://paxsims.files.wordpress.com/2024/03/graph.png"><img data-attachment-id="36922" data-permalink="https://paxsims.wordpress.com/2024/03/02/ace-of-aces-or-why-you-should-do-maths-as-a-game-designer/graph-2/" data-orig-file="https://paxsims.files.wordpress.com/2024/03/graph.png" data-orig-size="461,460" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="graph" data-image-description="" data-image-caption="" data-medium-file="https://paxsims.files.wordpress.com/2024/03/graph.png?w=300" data-large-file="https://paxsims.files.wordpress.com/2024/03/graph.png?w=461" loading="lazy" width="461" height="460" src="https://paxsims.files.wordpress.com/2024/03/graph.png?w=461" alt="Graph of the above vectors." srcset="https://paxsims.files.wordpress.com/2024/03/graph.png 461w, https://paxsims.files.wordpress.com/2024/03/graph.png?w=150 150w, https://paxsims.files.wordpress.com/2024/03/graph.png?w=300 300w" sizes="(max-width: 461px) 100vw, 461px"></a></figure>



<p>(This is literally the maths weâre doing to add an Allied aircraft manoeuvre to the German aircraftâs position. It is just 2D vectors, but because hex grid itâs <em>ugly</em>.)</p>



<p>What we need to do is construct a matrix of every possible position and rotation we could land at vs where the enemy could land atâthis is easy to do in code by iterating through all combinations for each aircraftâand for each, reduce it to the corresponding unique situations in our first table. We only care about relative positions. This is what I mean when I say secretly the Allied aircraft starts every turn at 0A. That relative position is the intermediate page youâre going to send the enemy aircraft to, and you get the page number for it by looking it up in that first table.</p>



<p>What you end up with is this monster matrix of all possible intermediate destinations, and one strip of it is what you find at your intermediate destination: for a given actual manoeuvre your enemy chose, the row or column of your manoeuvres is the final destination for all the manoeuvres you could have chosen. If you go to the one for the manoeuvre you already told your enemy, then magically you both end up on the same page. Otherwise, the maths breaks, because youâre not applying the same transformation matrix to both aircraft.</p>



<p>Instead of <em>Aga = Gag</em></p>



<p>Youâll have <em>Agb =/= Gag</em></p>



<p>The page numbers wonât match because (in an absolute frame of reference) the Allied aircraft will be at 0A looking towards the German aircraft at (say) 5B, while the German aircraft will be at 9F looking towards the Allied aircraft at 0A. And if you both gave the other one manoeuvre and then performed a different one from your intermediate page, weâd have a situation where <em>Agb =/= Gah</em>.</p>



<p>In both these situations you get a view of the world (because thatâs the nature of the book!) but itâs not reciprocal, which breaks everything about a relative frame of reference. Given this, isnât it a brilliant idea to have the reciprocal positions have matching page numbers? The game contains its own <a href="https://www.youtube.com/watch?v=X8jsijhllIA">parity check</a>.</p>



<p>It would be entirely possible to make the paired-books where the relative positions donât have matching page numbers, but youâd never know when the two hex positions were actually out of sync, youâd just be chasing your own tail with nonsense page turns.</p>



<p>This has made the manoeuvre table thatâs common to both players. Leonardi did this by hand for all 222 permutations. Praise be for C#, which whips through all the combinations for me quicker than I can blink and writes them out to an Excel file.</p>



<p>This is all the possible moves; you can narrow it to only certain moves.</p>



<p>Certain permutations result in the two aircraft further apart than our little hex grid. These are the manoeuvres that will take you to that âohnoes! You lost themâ 223<sup>rd</sup> page. Youâre out of range of the other aircraft.</p>



<figure><a href="https://paxsims.files.wordpress.com/2024/03/lost-contact-in-red.png"><img data-attachment-id="36926" data-permalink="https://paxsims.wordpress.com/2024/03/02/ace-of-aces-or-why-you-should-do-maths-as-a-game-designer/lost-contact-in-red/" data-orig-file="https://paxsims.files.wordpress.com/2024/03/lost-contact-in-red.png" data-orig-size="1261,830" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="lost-contact-in-red" data-image-description="" data-image-caption="" data-medium-file="https://paxsims.files.wordpress.com/2024/03/lost-contact-in-red.png?w=300" data-large-file="https://paxsims.files.wordpress.com/2024/03/lost-contact-in-red.png?w=630" loading="lazy" width="1024" height="674" src="https://paxsims.files.wordpress.com/2024/03/lost-contact-in-red.png?w=1024" alt="A very large matix with some cells coloured red." srcset="https://paxsims.files.wordpress.com/2024/03/lost-contact-in-red.png?w=1024 1024w, https://paxsims.files.wordpress.com/2024/03/lost-contact-in-red.png?w=150 150w, https://paxsims.files.wordpress.com/2024/03/lost-contact-in-red.png?w=300 300w, https://paxsims.files.wordpress.com/2024/03/lost-contact-in-red.png?w=768 768w, https://paxsims.files.wordpress.com/2024/03/lost-contact-in-red.png 1261w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>All possible moves for the Allied player across the top, German player down the side. Lost Contact at the red cells.</figcaption></figure>



<p>Next you need to convert the hex cell references (position and rotation) to the page numbers for the Allied player, and German player, using the first table as the look-up. That last bit using the reciprocal value for the German book is the thing that closes the loop on our transformation matrices, because remember we computed the whole table from the perspective of the Allied aircraft. Now with a reciprocal pair of tables, it <em>works</em> that youâre giving a page number to your enemy for <em>your</em> move, and theyâre giving you a page number for <em>their</em> move. Honestly, the more I think about this, the more Iâm blown away by Leonardiâs conception. Itâs fiendishly clever.</p>



<p>The final step to make the books is to pair up the starting position page with the strip out of this matrix of possible intermediate pages. Thatâs where Leonardi had to put down the slide rule and start drawing pictures. 446 of them. But since Iâm using Unity to move hex grids around to generate all these page numbersâ¦why donât I attach 3D objects to the grids and cameras and take a screenshot of each relative position while Iâm working out its cell reference?</p>



<p>This is art: using a game engine to write a program to encode a program into paper computer. (I wonder if thereâs a way to 3D print a game engine out of a paper computerâ¦?)</p>



<p>Oh, and also: because Iâve automated this process, it takesâ¦less than a secondâ¦to generate the pages of these books. And the same program can write the Excel spreadsheet that allows me to automate turning them into a hyperlinked pdf (itâs Turtles all the way down), which means I can easily generate more complicated grids than Ace of Aces. So I did.</p>



<p>Behold: Ace of U-boats:</p>



<figure><a href="https://paxsims.files.wordpress.com/2024/03/escort-163.png"><img data-attachment-id="36928" data-permalink="https://paxsims.wordpress.com/2024/03/02/ace-of-aces-or-why-you-should-do-maths-as-a-game-designer/escort-163/" data-orig-file="https://paxsims.files.wordpress.com/2024/03/escort-163.png" data-orig-size="1790,907" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="escort-163" data-image-description="" data-image-caption="" data-medium-file="https://paxsims.files.wordpress.com/2024/03/escort-163.png?w=300" data-large-file="https://paxsims.files.wordpress.com/2024/03/escort-163.png?w=630" loading="lazy" width="1024" height="518" src="https://paxsims.files.wordpress.com/2024/03/escort-163.png?w=1024" alt="The view from the deck of an Allied Corvette at night, with a surfaced U-boat on the starboard beam." srcset="https://paxsims.files.wordpress.com/2024/03/escort-163.png?w=1022 1022w, https://paxsims.files.wordpress.com/2024/03/escort-163.png?w=150 150w, https://paxsims.files.wordpress.com/2024/03/escort-163.png?w=300 300w, https://paxsims.files.wordpress.com/2024/03/escort-163.png?w=768 768w, https://paxsims.files.wordpress.com/2024/03/escort-163.png 1790w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>Open fire with the deck guns!</figcaption></figure>



<ul>
<li>a 4-hex gridâ¦</li>



<li>â¦with two layers for the U-boatâsurfaced, or submerged</li>



<li>and (hold onto your hats) <a href="https://www.youtube.com/watch?v=kEB11PQ9Eo8">non-euclidean geometry</a>: I cheated the hex grid scale at the different ranges because close-up you need to be working at a roughly-one-shipsâ-length scale (70 yards), but I want to play out to asdic ranges (3,500 yards) without having a gaziilion grid cells in between. Because weâre in relative geometry space, this totally works; the reciprocal distances are always self-consistent.</li>
</ul>



<p>Also, I used <a href="https://www.youtube.com/watch?v=28JTTXqMvOU">minimap</a> tricks to create the asdic screen for the screenshot, which feels like adding one more layer of inception: using a games engine to program a computer game to encode a program in a paper computer. If I can get Midjourney to play the game for me, Iâm pretty sure thereâll be a phone call for Professor Falken.</p>



<figure><a href="https://paxsims.files.wordpress.com/2024/03/escort-164.png"><img data-attachment-id="36930" data-permalink="https://paxsims.wordpress.com/2024/03/02/ace-of-aces-or-why-you-should-do-maths-as-a-game-designer/escort-164/" data-orig-file="https://paxsims.files.wordpress.com/2024/03/escort-164.png" data-orig-size="1790,907" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="escort-164" data-image-description="" data-image-caption="" data-medium-file="https://paxsims.files.wordpress.com/2024/03/escort-164.png?w=300" data-large-file="https://paxsims.files.wordpress.com/2024/03/escort-164.png?w=630" loading="lazy" width="1024" height="518" src="https://paxsims.files.wordpress.com/2024/03/escort-164.png?w=1024" alt="The view from the deck of an Allied Corvette at night, nothing visible on the surface but an Asdic response on the starboard bow." srcset="https://paxsims.files.wordpress.com/2024/03/escort-164.png?w=1022 1022w, https://paxsims.files.wordpress.com/2024/03/escort-164.png?w=150 150w, https://paxsims.files.wordpress.com/2024/03/escort-164.png?w=300 300w, https://paxsims.files.wordpress.com/2024/03/escort-164.png?w=768 768w, https://paxsims.files.wordpress.com/2024/03/escort-164.png 1790w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>Contact! The Asdic always shows contacts relative to your shipsâ orientation, but the look out view is looking in the direction of that contact. The indicator shows the relative bearing your looking towards, with 0deg being ahead of the ship (also, the stars are a fixed point of reference ð)</figcaption></figure>



<h2>But how can I apply this to games that arenât 2-player first-person shooters?</h2>



<p>A particularly rich vein of interesting maths for boardgames are <a href="https://en.wikipedia.org/wiki/Nomogram">nomograms</a>: the paper version of cam-based mechanical computing. They are a close-cousin of slide rules (nomograms with moving parts) like <em>the</em> <a href="https://en.wikipedia.org/wiki/Slide_rule">slide rule</a> for general maths, the <a href="https://en.wikipedia.org/wiki/Planimeter">planimeter</a> for integration (measuring the area under a graph), or for solving relative motion problems: the <a href="https://en.wikipedia.org/wiki/Maneuvering_board">manoeuvring board</a>, the <a href="https://en.wikipedia.org/wiki/Battenberg_course_indicator">Battenberg Course Indicator</a>, and the U-boat <a href="https://www.youtube.com/watch?v=EOSEItGE2qI">Attack Disc</a>.</p>



<p>Theyâre basically just a multi-dimensional look-up tableâone thatâs much easier to use than cross-referencing a bunch of look up tables (Iâm looking at you, weapon vs armour class vs range charts!) Hereâs a nice example from the Conduct of Anti-U-Boat operations in WW2:</p>



<figure><a href="https://paxsims.files.wordpress.com/2024/03/2021-06-09-11.36.54.jpg"><img data-attachment-id="36932" data-permalink="https://paxsims.wordpress.com/2024/03/02/ace-of-aces-or-why-you-should-do-maths-as-a-game-designer/2021-06-09-11-36-54/" data-orig-file="https://paxsims.files.wordpress.com/2024/03/2021-06-09-11.36.54.jpg" data-orig-size="4032,3024" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;2.2&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;iPhone SE (1st generation)&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1623238614&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;4.15&quot;,&quot;iso&quot;:&quot;50&quot;,&quot;shutter_speed&quot;:&quot;0.03030303030303&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="2021-06-09-11.36.54" data-image-description="" data-image-caption="" data-medium-file="https://paxsims.files.wordpress.com/2024/03/2021-06-09-11.36.54.jpg?w=300" data-large-file="https://paxsims.files.wordpress.com/2024/03/2021-06-09-11.36.54.jpg?w=630" loading="lazy" width="1024" height="768" src="https://paxsims.files.wordpress.com/2024/03/2021-06-09-11.36.54.jpg?w=1024" alt="Photo of a WW2 nomogram, titled &quot;Search for submarine reported at a distance&quot; and two graphs labelled approach diagram and sweeping diagram." srcset="https://paxsims.files.wordpress.com/2024/03/2021-06-09-11.36.54.jpg?w=1024 1024w, https://paxsims.files.wordpress.com/2024/03/2021-06-09-11.36.54.jpg?w=2048 2048w, https://paxsims.files.wordpress.com/2024/03/2021-06-09-11.36.54.jpg?w=150 150w, https://paxsims.files.wordpress.com/2024/03/2021-06-09-11.36.54.jpg?w=300 300w, https://paxsims.files.wordpress.com/2024/03/2021-06-09-11.36.54.jpg?w=768 768w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>Suppose you are in command of an escort, and you get a report of a U-boat sighting. You want to steam over and then find the U-boat, obviouslyâ¦but by the time you get there, the U-boat will have moved. The longer it takes you to arrive at its last-known location, the bigger the area youâll need to search to find it. How big an area ? Well, that depends on how far away you are, how fast you travel, how long you wait before starting outâ¦</figcaption></figure>




			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cracking Meta's Messenger Certificate Pinning on macOS (422 pts)]]></title>
            <link>https://texts.blog/2024/02/20/cracking-metas-messenger-certificate-pinning-on-macos/</link>
            <guid>39609336</guid>
            <pubDate>Tue, 05 Mar 2024 21:25:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://texts.blog/2024/02/20/cracking-metas-messenger-certificate-pinning-on-macos/">https://texts.blog/2024/02/20/cracking-metas-messenger-certificate-pinning-on-macos/</a>, See on <a href="https://news.ycombinator.com/item?id=39609336">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>With Metaâs Messenger application for macOS being so close to the Texts.com modelâthat being a standalone desktop applicationâ<a href="https://bt.hn/">Batuhan Ä°Ã§Ã¶z</a> who is leading the Meta platform project at Texts.com thought we could gain some valuable insight by analyzing it. Everyone knows that intercepting network requests is a great and low barrier-of-entry first-step.</p>



<p>Meta implements certificate pinning into their applications which enhances their security model, and prevents us from being able to execute a <a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">MITM (man-in-the-middle) attack</a> on ourselves to analyze the requests made to their servers.</p>



<h2>What is Certificate Pinning?</h2>



<p>When you set up a proxy client capable of intercepting your requests, youâre forced to configure and trust a âcertificate authority,â one which you created. Certificates issued by your certificate authority will be used and will be able to intercept and decrypt information pertaining to the requests.</p>



<p>If a service implements certificate pinning, theyâve effectively opted to accept certificates issued only by specific certificate authorities, preventing certificates issued by your certificate authority from being used.</p>



<p>With certificate pinning enabled, our self-signed certificate is invalid, and thus our requests cannot be intercepted.</p>



<h2>Default Behaviour</h2>



<p>Without disabling certificate pinning, all requests return an âInternal Errorâ and our proxy software indicates that the âSSL Handshake Failedâ with the request not completing its lifecycle. We thus can infer no information about the request.</p>







<figure><img fetchpriority="high" decoding="async" width="800" height="674" data-attachment-id="174" data-permalink="https://texts.blog/2024/02/20/cracking-metas-messenger-certificate-pinning-on-macos/cleanshot-2024-02-19-at-18-25-09/" data-orig-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.25.09.gif?fit=800%2C674&amp;ssl=1" data-orig-size="800,674" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="cleanshot-2024-02-19-at-18.25.09" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.25.09.gif?fit=300%2C253&amp;ssl=1" data-large-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.25.09.gif?fit=800%2C674&amp;ssl=1" src="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.25.09.gif?resize=800%2C674&amp;ssl=1" alt="" data-recalc-dims="1"></figure>



<h2>Desired Behaviour</h2>



<p>We want to be able to successfully make requests and read the request, response and headers from our network debugging tool by using a MITM attack on ourselves.</p>



<h2>Potential Approaches</h2>



<p>One option Iâve found to work in the past would be to alter the URL strings in the binary to insecure self-hosted endpoints that donât implement TLS. It would forward requests and responses between the end-client and end-server. This works best for smaller applications, unlike Messenger.</p>



<p>We could use a dynamic instrumentation library, such as Frida to achieve the desired outcome. Iâve found that Messenger in particular is prone to crashes when hooking into it and with all this overhead, it can be difficult to pinpoint the pain-point. Thereâs also the more complicated distribution process involved with Frida. Those who wanted to run it would need to configure a very specific environment and set of tools.</p>



<p>Despite this, I did attempt to use a Frida script that Iâve been maintaining over the past few years that works to bypass common certificate pinning libraries and methods. It works on the vast majority of applications. Unfortunately, Metaâs subset of applications is not part of this âvast majority.â</p>



<p>In this case, weâll be looking to turn off certificate pinning entirely in a way which can be easily distributed to my fellow team members using binary patching.</p>



<h2>The Approach</h2>



<p>After downloading Messenger and moving it into my applications folder, I grabbed the compiled ARM binary from <code>/Applications/Messenger.app/Content/MacOS/Messenger</code> and imported it into Hopper.</p>







<figure><img decoding="async" width="1024" height="379" data-attachment-id="176" data-permalink="https://texts.blog/2024/02/20/cracking-metas-messenger-certificate-pinning-on-macos/cleanshot-2024-02-19-at-18-37-33/" data-orig-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.37.33.png?fit=1178%2C436&amp;ssl=1" data-orig-size="1178,436" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="cleanshot-2024-02-19-at-18.37.33" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.37.33.png?fit=300%2C111&amp;ssl=1" data-large-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.37.33.png?fit=1024%2C379&amp;ssl=1" src="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.37.33.png?resize=1024%2C379&amp;ssl=1" alt="" srcset="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.37.33.png?resize=1024%2C379&amp;ssl=1 1024w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.37.33.png?resize=300%2C111&amp;ssl=1 300w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.37.33.png?resize=768%2C284&amp;ssl=1 768w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.37.33.png?w=1178&amp;ssl=1 1178w" sizes="(max-width: 1000px) 100vw, 1000px" data-recalc-dims="1"></figure>



<p>Hopper allows us to disassemble, decompile, recompile, debug, and visualize compiled binaries. </p>







<figure><img decoding="async" width="1024" height="508" data-attachment-id="177" data-permalink="https://texts.blog/2024/02/20/cracking-metas-messenger-certificate-pinning-on-macos/cleanshot-2024-02-19-at-18-41-38/" data-orig-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.41.38.png?fit=1897%2C941&amp;ssl=1" data-orig-size="1897,941" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="cleanshot-2024-02-19-at-18.41.38" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.41.38.png?fit=300%2C149&amp;ssl=1" data-large-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.41.38.png?fit=1024%2C508&amp;ssl=1" src="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.41.38.png?resize=1024%2C508&amp;ssl=1" alt="" srcset="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.41.38.png?resize=1024%2C508&amp;ssl=1 1024w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.41.38.png?resize=300%2C149&amp;ssl=1 300w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.41.38.png?resize=768%2C381&amp;ssl=1 768w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.41.38.png?resize=1536%2C762&amp;ssl=1 1536w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.41.38.png?resize=1200%2C595&amp;ssl=1 1200w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/cleanshot-2024-02-19-at-18.41.38.png?w=1897&amp;ssl=1 1897w" sizes="(max-width: 1000px) 100vw, 1000px" data-recalc-dims="1"></figure>



<p>Once the binary was loaded and references had loaded, I started by searching for certificate pinning related terminology such as âcertificate,â âssl,â âpinning,â etc.</p>



<p><code>"SSL pinning verification failed for host:"</code> certainly felt like a great place to start.</p>



<p>Ideally weâll modify as little as possible. When it comes to compiled binaries, modifications can easily result in gnarly crashes if we overextend ourselves. The best case scenario would be flipping a boolean value, reversing a conditional, etc., ideally modifying a single or few instructions.</p>







<figure><img loading="lazy" decoding="async" width="800" height="396" data-attachment-id="189" data-permalink="https://texts.blog/2024/02/20/cracking-metas-messenger-certificate-pinning-on-macos/cleanshot-2024-02-19-at-18-47-13-2/" data-orig-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.47.13.gif?fit=800%2C396&amp;ssl=1" data-orig-size="800,396" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="CleanShot-2024-02-19-at-18.47.13" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.47.13.gif?fit=300%2C149&amp;ssl=1" data-large-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.47.13.gif?fit=800%2C396&amp;ssl=1" src="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.47.13.gif?resize=800%2C396&amp;ssl=1" alt="" data-recalc-dims="1"></figure>



<p>I switched to the control flow graph, allowing me to visualize the execution flow and walked myself up a series of linked references. Eventually, I found a string which said&nbsp;<code>"Using custom sandbox -&gt; turn off SSL verification"</code>. I liked it. I scanned the file for references to the function that determines this flag and found it in the top of the procedure.</p>







<figure><img loading="lazy" decoding="async" width="1024" height="455" data-attachment-id="190" data-permalink="https://texts.blog/2024/02/20/cracking-metas-messenger-certificate-pinning-on-macos/cleanshot-2024-02-19-at-18-56-12-2/" data-orig-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.56.12.png?fit=2497%2C1109&amp;ssl=1" data-orig-size="2497,1109" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="CleanShot-2024-02-19-at-18.56.12" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.56.12.png?fit=300%2C133&amp;ssl=1" data-large-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.56.12.png?fit=1024%2C455&amp;ssl=1" src="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.56.12.png?resize=1024%2C455&amp;ssl=1" alt="" srcset="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.56.12.png?resize=1024%2C455&amp;ssl=1 1024w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.56.12.png?resize=300%2C133&amp;ssl=1 300w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.56.12.png?resize=768%2C341&amp;ssl=1 768w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.56.12.png?resize=1536%2C682&amp;ssl=1 1536w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.56.12.png?resize=2048%2C910&amp;ssl=1 2048w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.56.12.png?resize=1200%2C533&amp;ssl=1 1200w" sizes="(max-width: 1000px) 100vw, 1000px" data-recalc-dims="1"></figure>



<p>Looking at the function <code>IsUsingSandbox()</code>, we can see exactly where the returned value is being assigned. In the following screenshot, the&nbsp;<code>w0</code>&nbsp;register is being moved from&nbsp;<code>w19</code>&nbsp;and then returned.&nbsp;<code>w19</code>&nbsp;is assigned through a load byte instruction.</p>







<figure><img loading="lazy" decoding="async" width="1024" height="455" data-attachment-id="191" data-permalink="https://texts.blog/2024/02/20/cracking-metas-messenger-certificate-pinning-on-macos/cleanshot-2024-02-19-at-18-59-42-2/" data-orig-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.59.42.png?fit=2497%2C1109&amp;ssl=1" data-orig-size="2497,1109" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="CleanShot-2024-02-19-at-18.59.42" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.59.42.png?fit=300%2C133&amp;ssl=1" data-large-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.59.42.png?fit=1024%2C455&amp;ssl=1" src="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.59.42.png?resize=1024%2C455&amp;ssl=1" alt="" srcset="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.59.42.png?resize=1024%2C455&amp;ssl=1 1024w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.59.42.png?resize=300%2C133&amp;ssl=1 300w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.59.42.png?resize=768%2C341&amp;ssl=1 768w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.59.42.png?resize=1536%2C682&amp;ssl=1 1536w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.59.42.png?resize=2048%2C910&amp;ssl=1 2048w, https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-18.59.42.png?resize=1200%2C533&amp;ssl=1 1200w" sizes="(max-width: 1000px) 100vw, 1000px" data-recalc-dims="1"></figure>



<p>Instead of assigning&nbsp;<code>w19</code>&nbsp;through a load byte instruction, weâre going to just set it to true no matter what. This will effectively force&nbsp;<code>IsUsingSandbox</code> to be&nbsp;true, which judging from that string from earlier, means certificate pinning will be disabled.</p>



<h3>Original</h3>


<div><pre title="">ARM: ldrb w19, [sp, #0x40 + var_20]
HEX: F3 83 40 39
</pre></div>


<h3>Rewritten</h3>


<div><pre title="">ARM: mov w19, #1
HEX: 33 00 80 52
</pre></div>


<p>We can do this replacement with the hexadecimal mode, which allows us to directly modify the byte code in the application.</p>







<figure><img loading="lazy" decoding="async" width="800" height="356" data-attachment-id="192" data-permalink="https://texts.blog/2024/02/20/cracking-metas-messenger-certificate-pinning-on-macos/cleanshot-2024-02-19-at-19-05-06-2/" data-orig-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-19.05.06.gif?fit=800%2C356&amp;ssl=1" data-orig-size="800,356" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="CleanShot-2024-02-19-at-19.05.06" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-19.05.06.gif?fit=300%2C134&amp;ssl=1" data-large-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-19.05.06.gif?fit=800%2C356&amp;ssl=1" src="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-19.05.06.gif?resize=800%2C356&amp;ssl=1" alt="" data-recalc-dims="1"></figure>



<h2>Result</h2>



<p>After this, we can export our new executable using the âProduce New Executableâ option under âFile,â remove the signature from the executable, and weâre off to the races. Weâll replace the original Messenger binary with this new binary weâve produced.</p>



<p>After relaunching Messenger, we can see that headers, response body, and all other request information is visible in our proxy tool. By modifying just 4 of the binaryâs 97,477,728 bytes we can now intercept requests!</p>







<figure><img loading="lazy" decoding="async" width="800" height="672" data-attachment-id="193" data-permalink="https://texts.blog/2024/02/20/cracking-metas-messenger-certificate-pinning-on-macos/cleanshot-2024-02-19-at-19-08-25-2/" data-orig-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-19.08.25.gif?fit=800%2C672&amp;ssl=1" data-orig-size="800,672" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="CleanShot-2024-02-19-at-19.08.25" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-19.08.25.gif?fit=300%2C252&amp;ssl=1" data-large-file="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-19.08.25.gif?fit=800%2C672&amp;ssl=1" src="https://i0.wp.com/texts.blog/wp-content/uploads/2024/02/CleanShot-2024-02-19-at-19.08.25.gif?resize=800%2C672&amp;ssl=1" alt="" data-recalc-dims="1"></figure>



<h2>Distribution</h2>



<p>After compiling the binary, I sent it over to Batuhan to use. Once he had the binary in-hand he obtained and installed a signing certificate and proceeded to sign the application. Once that was done, he was able to utilize the binary on his system and view his own requests.</p>



<pre><code>codesign --force --deep -s CERTNAME_OR_ID /Applications/Messenger.app</code></pre>



<hr>



<p>Want to see a similar approach for iOS? <a href="https://www.cyclon3.com/bypass-instagram-ssl-certificate-pinning-for-ios" data-type="link" data-id="https://www.cyclon3.com/bypass-instagram-ssl-certificate-pinning-for-ios">Read this 2020 post</a> by <a href="https://twitter.com/_Cyclon3" data-type="link" data-id="https://twitter.com/_Cyclon3">Hassan Mostafa</a> where he flipped a conditional branching instruction to crack certificate pinning on Instagram on a jailbroken iPhone.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Array languages vs. the curse of the spreadsheet (112 pts)]]></title>
            <link>https://blog.dhsdevelopments.com/array-languages-vs</link>
            <guid>39608822</guid>
            <pubDate>Tue, 05 Mar 2024 20:32:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.dhsdevelopments.com/array-languages-vs">https://blog.dhsdevelopments.com/array-languages-vs</a>, See on <a href="https://news.ycombinator.com/item?id=39608822">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>It has been said that the most popular programming language in the world is the spreadsheet (and in particular these days, Excel).</p>

<p>There is a valid argument that the spreadsheet embodies an array programming model, making Excel the most popular array programming language in the world.</p>

<p>As the author of an array programming language based on the ideas of APL, I see the popularity of the spreadsheet as both a problem (because it's so error-prone) and an opportunity (because while the fans of imperative languages like Python are probably too set in their ways to consider an alternative model of computation, users of spreadsheets are already thinking in terms of matrices of values, and some of those users may be more open to the idea of performing the same computation in a more reliable way).</p>

<p>Before discussing how to leverage the power of spreadsheets with a proper array based programming language, there is a need to discuss how spreadsheets are used today, and some of the problems with them.</p>

<h2 id="the-different-uses-of-spreadsheets">The different uses of spreadsheets</h2>

<p>When people use a spreadsheet, it's to do one of several things. In short, spreadsheets are used to perform many different activities, which can roughly be grouped into 3 main categories:</p>
<ul><li>Data entry</li>
<li>Computation</li>
<li>Presentation</li></ul>

<h3 id="data-entry">Data entry</h3>

<p>Ever since VisiCalc was released in 1979, the spreadsheet has presented the user with a hugely inviting blank sheet of empty cells when the program was started.</p>

<table>
<thead>
<tr>
<th><img src="https://i.snap.as/yOXZFHEs.png" alt="Screenshot of the LibreOffice initial page"></th>
</tr>
</thead>

<tbody>
<tr>
<td><em>What do you want to calculate today?</em></td>
</tr>
</tbody>
</table>

<p>The page almost calls out to the user to start inputting numbers. Our innate desire to organise things in categories is what has made this design so successful. The VisiCalc initial screen looked like this, as does the latest version of LibreOffice some 45 years later.</p>

<p>All you have to do is to move the cursor to the cell you want to edit, type the values and things will just work. While data entry specialist is still a job title in use today, there was a time when <em>any</em> data input was a complicated process that required specialist knowledge. The spreadsheet changed this to allow anyone to record anything they wanted in digital form.</p>

<h3 id="computation">Computation</h3>

<p>Once the data is in the spreadsheet, you inevitably want to work with the numbers to produce some output.</p>

<p>Spreadsheets makes it very easy to take the step from simple data entry to computation of results. All you have to do is to add a <code>=sum(a1:a5)</code> to the sheet you'll have the sum in the cell you want.</p>

<h3 id="presentation">Presentation</h3>

<p>Spreadsheets aren't just about entering data and computing some results based on that data. It's also about presenting it in an appealing manner.</p>

<p>This is really where the you can see the genius of the invention. From something as simple as looking at a set of numbers, with the sum of those numbers neatly displayed as <strong>âTotal:â</strong> below the values, to a complex form with coloured highlighting and different text styles to emphasise the results.</p>

<p>These sheets also become interactive without any extra work, since any change in the source data will automatically propagate to the sheet that contains the results.</p>

<h2 id="the-problems-with-spreadsheets-as-a-programming-environment">The problems with spreadsheets as a programming environment</h2>

<h3 id="the-spreadsheet-paradigm-hides-what-s-important-the-formulas-in-favour-of-the-superficial-the-data">The spreadsheet paradigm hides what's important (the formulas) in favour of the superficial (the data)</h3>

<p>Once you've taken that first step to compute a sum in a spreadsheet, it's not a very long road until you find yourself in one of those multi-sheet monsters most people who work in a large company have seen. I've certainly spent more time than I want to admit trying to untangle one of those bowls of spaghetti trying to find out why a certain number is computed the way it is.</p>

<p><img src="https://i.snap.as/qREaEZBm.png" alt="Screenshot of LibreOffice showing some products, its prices, amounts and the totals"></p>

<p>Here's a silly quiz: Can you spot the error in the above spreadsheet?</p>

<p>I don't think is possible to tell just by looking at the screenshot. The problem is that cell D5 has the actual value entered instead of a formula (this could have happened due to some simple copy&amp;paste error).</p>

<p>And this is the true danger of spreadsheets. These kinds of mistakes are completely invisible when they happen. Instead, the results start to deviate (probably slowly) once the input data start to change, and you could be looking at invalid numbers for quite some time before anyone notices the problem. And if the dataset is large, it may be a lot of work to actually find the underlying mistake.</p>

<p>And this bring us to my proposition: <strong>Spreadsheets are doing a great job at data entry and presentation, but it's severely lacking as a computation tool.</strong></p>

<p>However, very few tools allow you to have a seamless workflow using a proper language for computation while still using spreadsheets for the other aspects of the workflow. Once a spreadsheet has grown too large, someone decides to write a Python application to replicate it, which inevitably means that they have to build a webapp around it, which is probably going to be much less user-friendly since spreadsheets have had 40+ years of UI refinements, while the webapp was put together in an afternoon.</p>

<h3 id="spreadsheets-intentionally-hides-errors-in-an-attempt-to-do-what-the-user-thinks-they-want">Spreadsheets intentionally hides errors in an attempt to do what the user thinks they want</h3>

<p>Since this section could become very large if I listed all the examples where spreadsheets (and Excel in particular) fails to highlight problems, so here's a sample:</p>
<ul><li>Numbers tend to be floating point, which means that the moment a value is entered, there are precision issues. This is actually something that could be improved simply by supporting rational arithmetic, although I don't think there are any spreadsheets that do.</li>
<li>If a number is entered as a string, it will look identical to an actual number (except that the alignment will be different by default). If you're lucky, you'll get an error later which will manifest as an <a href="https://blog.dhsdevelopments.com/tag:ERR"><span>#</span><span>ERR</span></a> field, and then you'll have a fun time finding the source of that issue.</li>
<li>The system invites the user to write long single-line formulas in a language that is not suited for long, single-line formulas. It all ends up being crammed into a space that is nowhere near large enough to hold it. This makes editing the code an absolutely painful experience.</li>
<li>Various errors, such as exceeding limits tend to be ignored instead of invalidating the entire document. This is something the <a href="https://www.bbc.com/news/technology-54423988">UK government was made painfully aware of</a>.</li></ul>



<p>The <a href="https://kapdemo.dhsdevelopments.com/">Kap</a> programming language provides an alternative. Or rather, it's a work in progress so it's probably better to say it <em>aims</em> to provide an alternative. That said, I already use it for many tasks where a spreadsheet would be the go-to tool for many people.</p>

<p>Like most APL derivatives, the way you use it is often not by opening a test editor and start writing a program. Instead, you start it, you are presented with a prompt, and you start using it more as a calculator than a traditional programming language. This makes sense, since a large number of programming tasks that would take a lot of code in another language, can be solved in just a few characters in Kap.</p>

<p><img src="https://i.snap.as/ZnCmOdri.png" alt="Screenshot of the Kap welcome screen"></p>

<p>When given a problem to solve, you typically look at the problem and then reach for the tool that is the most efficient way to solve that problem, given tool availability and the person's preferences. For example:</p>
<ul><li>You need to compute the square of the number 54321. Most people would likely reach for their desktop environment's calculator here.</li>
<li>You want to compute the sum of some set of numbers. A natural choice here would be to use a spreadsheet.</li>
<li>You're given a dictionary and asked to find the longest word which contains no more than 2 vowels. I suspect a lot of people would open an editor and start writing Python code to solve this.</li></ul>

<p>For me, in all of these cases I open the Kap interactive tool, type a few characters and the problem is solved.</p>

<p>This is how I solved the third problem, by the way:</p>

<pre><code>{ â âµ ââ¨ âââ¢Â¨ âµ /â¨ 2â¥ (â"aeiou") (+/ââ¨)Â¨ âµ } io:read "dict.txt"
</code></pre>

<p>At this point, comments suggesting the code is âunreadableâ are bound to be thrown around, but once you learn a handful of symbols, this is in fact significantly more readable than the kinds of formulas I see on a regular basis in Excel. This is proof that one is not more difficult to learn than the other, and that the problem is one of marketing rather than technological.</p>

<p>In case anyone is curious about the above code, the next blog post will be a breakdown of the code above to explain how it works. Check this blog in the coming days.</p>

<p>The point I am trying to make by showing this example at all is to try to evoke the same kind of response as beginners get when faced with any code of any kind.</p>

<h2 id="the-kap-approach-to-spreadsheet-integration">The Kap approach to spreadsheet integration</h2>

<h3 id="the-array-editor">The array editor</h3>

<p>The array editor is a graphical tool that allows the user to edit arrays in a way that is similar to a spreadsheet. The goal of this tool is to be as familiar as possible to someone who has used spreadsheets in the past.</p>

<p>The tool also allows you to type Kap expressions to manipulate values in the sheet. This is not like formulas, but rather direct modification of the data.</p>

<p>Funnily enough, this is actually something that is not obvious how to do in Excel. If you have a set of numbers, and you want to add some constant to them, the way you'd do that is to create a formula that adds the constant to a cell and put that into a different location, usually on the same sheet, and then paste that formula to all the cells in an area with the same size as the original data, and hope that you got the dimensions right.</p>

<p>The array editor allows you to easily edit the content of an array. Of course, you can always do it programmatically, but I think the prevalence of spreadsheets has shown that it's convenient to do it in a visual manner.</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/ps9olHDleCA" title="YouTube video player" frameborder="0" allowfullscreen=""></iframe>

<h3 id="data-import">Data import</h3>

<p>I have been participating in discussion forums and chat channels about APL and other array languages for a while now, and when a beginner starts learning one of these languages, after they have gone through all the tutorials, there comes a time where they want to work with real data and the first question is: <em>How do I get my data into the system?</em></p>

<p>After all, that's what I asked myself and was frustrated when I realised that preparing the data was harder than actually working with it.</p>

<p>So, when I started working on my own implementation, one of the most important goals was that loading pre-existing data into the interpreter was one of the most important features.</p>

<p>What's the most common format of array-based data today? It's probably not very far fetched to assume it's Excel. For this reason, being able to read spreadsheets into Kap has been a priority, and at the time of writing the following methods are supported:</p>
<ul><li>Using functions such as <code>msoffice:read</code> function in the language itself. There are similar functions to load data in other formats, such as CSV and JSON.</li>
<li>Open the a spreadsheet file (Excel or LibreOffice) in the gui-based array editor.</li>
<li>Copy&amp;paste directly from the spreadsheet.</li></ul>

<p>By the way, you can also paste any table data into the array editor. Here's an example of using Wikipedia content:</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/Dwm-KUms6I0" title="YouTube video player" frameborder="0" allowfullscreen=""></iframe>

<h3 id="presentation-1">Presentation</h3>

<p>This is the part of the Kap UI tool that needs to most work. The vision is to provide a user interface that makes it just as easy to create a presentation of results as it is in Excel. However, it would only be used for presentation purposes, and not for data entry nor computation.</p>

<p>While there is some actual code there that can be tested, it's still not usable except as a demonstration of what the current ideas in this direction are.</p>

<h2 id="the-goal-of-kap-is-to-be-a-complement-to-spreadsheets">The goal of Kap is to be a complement to spreadsheets</h2>

<p>When someone needs to compute something, they typically look at the problem and then decide to open a tool that helps them solve said problem. While Kap is a great tool to solve a variety of problems, I tend to believe that it particularly excels in the kinds of problems where the solution would otherwise involve a spreadsheet.</p>

<p>Kap is a fully open source project available under the MIT license. If you want to learn more about Kap, visit the <a href="https://kapdemo.dhsdevelopments.com/">Kap website</a>. Feedback is always welcome.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[New Federal Rule Caps Credit Card Late Fees at $8 (205 pts)]]></title>
            <link>https://www.nytimes.com/2024/03/05/business/credit-card-late-fees.html</link>
            <guid>39608641</guid>
            <pubDate>Tue, 05 Mar 2024 20:13:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2024/03/05/business/credit-card-late-fees.html">https://www.nytimes.com/2024/03/05/business/credit-card-late-fees.html</a>, See on <a href="https://news.ycombinator.com/item?id=39608641">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2024/03/05/business/credit-card-late-fees.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[JEDEC publishes GDDR7 graphics memory standard (143 pts)]]></title>
            <link>https://www.jedec.org/news/pressreleases/jedec-publishes-gddr7-graphics-memory-standard</link>
            <guid>39607753</guid>
            <pubDate>Tue, 05 Mar 2024 18:57:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.jedec.org/news/pressreleases/jedec-publishes-gddr7-graphics-memory-standard">https://www.jedec.org/news/pressreleases/jedec-publishes-gddr7-graphics-memory-standard</a>, See on <a href="https://news.ycombinator.com/item?id=39607753">Hacker News</a></p>
<div id="readability-page-1" class="page"><div property="content:encoded"><p><b>ARLINGTON, Va., USA â MARCH 5, 2024</b> â<a href="https://www.jedec.org/">JEDEC Solid State Technology Association</a>, the global leader in the development of standards for the microelectronics industry, is pleased to announce the publication of JESD239 Graphics Double Data Rate (GDDR7) SGRAM.&nbsp; This groundbreaking new memory standard is available for free download from the <a href="https://www.jedec.org/standards-documents/docs/jesd239">JEDEC website</a>.&nbsp; JESD239 GDDR7 offers double the bandwidth over GDDR6, reaching up to 192 GB/s per device, and is poised to meet the escalating demand for more memory bandwidth in graphics, gaming, compute, networking and AI applications.</p>
<p>JESD239 GDDR7 is the first JEDEC standard DRAM to use the Pulse Amplitude Modulation (PAM) interface for high frequency operations.&nbsp; Its PAM3 interface improves the signal to noise ratio (SNR) for high frequency operation while enhancing energy efficiency. &nbsp;By using 3 levels (+1, 0, -1) to transmit 3 bits over 2-cycles versus the traditional NRZ (non-return-to-zero) interface transmitting 2 bits over 2-cycles, PAM3 offers higher data transmission rate per cycle resulting in improved performance.</p>
<p>Additional advanced features include:</p>
<ul>
<li>Core independent LFSR (linear-feedback shift register) training patterns with eye masking and error counters to improve training accuracy while reduce training time.</li>
<li>Doubles the number of independent channels doubles from 2 in GDDR6 to 4 in GDDR7.</li>
<li>Support for 16 Gbit to 32 Gbit densities including support for 2-Channel mode to double system capacity.</li>
<li><span><span>Address the market need for RAS (Reliability, Availability, Serviceability) by incorporating the latest data integrity features including on die ECC (ODECC) with real time reporting, data poison, Error check and Scrub, and command address parity with command blocking (CAPARBLK).</span></span></li>
</ul>
<p>âJESD239 GDDR7 marks a substantial advancement in high-speed memory design,â said Mian Quddus, JEDEC Board of Directors Chairman. âWith the shift to PAM3 signaling, the memory industry has a new path to extend the performance of GDDR devices and drive the ongoing evolution of graphics and various high-performance applications.â</p>
<p>âGDDR7 is the first GDDR that not only focuses on bandwidth but addresses the market needs for RAS by incorporating the latest data integrity features that allow GDDR devices to better service existing markets such as Cloud gaming and compute and extend into new applications such as AI,â said Michael Litt, Chair of the JEDEC GDDR Subcommittee.</p>
<p><b>Industry Support</b></p>
<p>âThe groundbreaking GDDR7 memory standard unveiled today represents a pivotal step towards unlocking the potential of next-generation consumer, gaming, commercial, and enterprise devices,â said Joe Macri, Compute and Graphics CTO and Corporate Fellow at <b>AMD</b>. "By harnessing the transformative power of GDDR7s, we can collectively unlock a new era of transformational compute and graphics possibilities, paving the way for a future shaped by innovation and discovery."</p>
<p>â<b>Micron</b> has a long-standing history of defining graphics DRAM standards with JEDEC and has played a critical role in driving GDDR7 standardization activities with our partners and customers,â said Frank Ross, lead architect and distinguished member of technical staff in Micronâs Compute and Networking Business Unit. âThe development of GDDR products utilizing multi-level signaling has helped define a path to meet increasing future system bandwidth requirements. With the addition of leading RAS functionalities, the GDDR7 standard addresses workload requirements well beyond traditional graphics markets.â</p>
<p>â<b>NVIDIA</b> is excited that our work with JEDEC has helped to make PAM signaling the foundational technology for GDDR7, helping customers to get the most performance out of their GPU,â said Kaustubh Sanghani, VP GPU Product Management at NVIDIA.</p>
<p>âAI, HPC, and high-end gaming are demanding high-performance memory to process data at unprecedented speeds,â said YongCheol Bae, EVP, Head of Memory Product Planning, <b>Samsung</b>. âGDDR7 32Gbps will achieve 1.6x higher-performance with the highest reliability and cost-effectiveness.â</p>
<p>âWith each successive generation of graphic memory, the industry always strives to achieve the ambitious goal of simultaneously securing the highest speed and improved power efficiency. <b>SK hynix</b> is proud to have participated in the GDDR7 standard work as a member of JEDEC, and is pleased to be able to provide customers with the memory with the highest speed and excellent power efficiency. Achieving the standard work once again will be a new opportunity for the industry to expand the memory ecosystem,â said Sang Kwon Lee, SK hynix VP of Product Planning.</p>
<p><b>About JEDEC</b><br>JEDEC is the global leader in the development of standards for the microelectronics industry. Thousands of volunteers representing over 350 member companies work together in more than 100 JEDEC committees and task groups to meet the needs of every segment of the industry, for manufacturers and consumers alike. The publications and standards generated by JEDEC committees are accepted throughout the world. All JEDEC standards are available for download from the JEDEC website. For more information, visit <a href="https://www.jedec.org/">https://www.jedec.org</a>.</p>
<p><b>Contact</b><br>Emily Desjardins<br><a href="mailto:emilyd@jedec.org"><span>emilyd@jedec.org</span></a><br>703-907-7560</p>
<p>###</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Linux Touchpad Like MacBook Update: 2023 Progress on Smooth Scrolling (243 pts)]]></title>
            <link>https://www.gitclear.com/blog/linux_touchpad_like_macbook_2023_update_smooth_scroll</link>
            <guid>39607747</guid>
            <pubDate>Tue, 05 Mar 2024 18:57:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.gitclear.com/blog/linux_touchpad_like_macbook_2023_update_smooth_scroll">https://www.gitclear.com/blog/linux_touchpad_like_macbook_2023_update_smooth_scroll</a>, See on <a href="https://news.ycombinator.com/item?id=39607747">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">

<div>
<ul>
<li>Engineering Clarity:</li>
<li>
<a href="https://www.gitclear.com/blog">All</a>
</li>
<li>
<a href="https://www.gitclear.com/blog?category_em=article">Articles</a>
</li>
<li>
<a href="https://www.gitclear.com/blog?category_em=news">News</a>
</li>
<li>
<a href="https://www.gitclear.com/blog?category_em=tip">Tips</a>
</li>
</ul>
</div>

<div>
<p><img data-retina="https://image.gitclear.com/1ei070fit02w3wm4eti78ww0scsd" src="https://image.gitclear.com/1ei070fit02w3wm4eti78ww0scsd">
</p>
</div>
<div>
<p><a href="https://www.gitclear.com/authors/1">Bill Harding</a>
<span title=" 6:51pm">
March  5, 2024
</span>
</p></div>

<div>
<div>
<div>
<p><a href="https://www.gitclear.com/authors/1"><img src="https://image.gitclear.com/0co0x8ol6om9sbuztyvm2ey4lwe4"></a>
</p>
<div>
<h3><a href="https://www.gitclear.com/authors/1">Bill Harding</a></h3>
<p>CEO/Programmer, GitClear</p>
</div>
</div>
<p>Bill is driven by the challenge of how best to quantify valuable questions that defy quantification. It's possible this instinct may have been awakened in Bill at age 14, when he won a soft, stuffed bunny at the orthodontist for guessing the number of jelly beans in the gumball machine.</p>
</div>

<div>
<h2>Comments</h2>
<p>No comments have been left on this blog.</p>

<p>Login to leave a comment</p>

</div>

</div>



</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[This Is Knuth 3:16 (2002) (128 pts)]]></title>
            <link>http://www.larry.denenberg.com/Knuth-3-16/</link>
            <guid>39607412</guid>
            <pubDate>Tue, 05 Mar 2024 18:30:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://www.larry.denenberg.com/Knuth-3-16/">http://www.larry.denenberg.com/Knuth-3-16/</a>, See on <a href="https://news.ycombinator.com/item?id=39607412">Hacker News</a></p>
<div id="readability-page-1" class="page">

<h2>This is Knuth 3:16</h2>

Welcome to Knuth 3:16, a commemoration of one of the great computer
scientists of ancient times, Donald Ervin Knuth.

<!-- This web page is a *PARODY*, a history of Knuth's life as it might be
written in the far future, when 2002 is a year in the very hazy past.
Please don't send me email telling me that Knuth is still alive!
-->

<p>

<table>
<caption>A rare surviving photograph of Don Knuth.</caption>
<tbody><tr><td>
<img src="http://www.larry.denenberg.com/Knuth-3-16/Images/rockne.jpg" alt="Coach Knuth Rockne"></td></tr></tbody></table>

<!-- The picture is of Knute Rockne -->


Knuth was probably born in the twentieth or early twentieth-first 
century.&nbsp; 

<!-- Knuth was born on January 10, 1938 -->


He had a primarily academic career, but unfortunately never held a position
at any present-day institution, so many details have been lost.&nbsp;

<!-- Knuth has been at Stanford since 1968 -->


His achievements were many.&nbsp; Some sources credit him with being the
original inventor of the computer, though this cannot be proved with any
accuracy.&nbsp; Certainly he made significant advances in several areas of
computer science and mathematics.

<!-- Need to mention Knuth's obvious ancestor King Knut somewhere! -->

</p><p>

But his accomplishments spanned other fields as well.&nbsp; As we shall
see, he was an artist of typeface and book design.&nbsp; He was also a
leading moralist and wrote commentaries on God and the Bible.&nbsp;

He was an enthusiastic musician, though exactly which was his instrument is
a subject of some dispute (the most likely candidates are the accordion,
jew's harp, and flugelhorn).&nbsp;

<!-- organ, really:  http://www-cs-faculty.stanford.edu/~knuth/organ.html -->

And many historians agree that, before becoming a mathematician and
computer scientist, he started life as a college football coach.&nbsp; He
was evidently highly respected in this field and was widely known by his
nickname "Knuth Rockne".&nbsp; In his declining years he returned
to this nickname as his interest and talents 
<a href="http://www.originalbirdart.com/knuth.htm">went to the birds</a>.

<!-- The link is to a page about wildlife artist Rockne Knuth, specialist
in bird art. -->

</p><p>

Here we celebrate Knuth using one of his own tricks:&nbsp; We examine the
sixteenth sentence (zero-based, of course) of the third chapter of each of
his surviving books.
</p><ul>
<li><a href="http://www.larry.denenberg.com/Knuth-3-16/taocp.html">The Art of Computer Programming</a>
</li><li><a href="http://www.larry.denenberg.com/Knuth-3-16/texbook.html">The TeXbook</a>
</li><li><a href="http://www.larry.denenberg.com/Knuth-3-16/visual-basic.html">Big Dummies Guide to Visual Basic</a>
</li><li><a href="http://www.larry.denenberg.com/Knuth-3-16/math-writing.html">Mathematical Writing</a>
</li><li><a href="http://www.larry.denenberg.com/Knuth-3-16/mariages-stables.html">Mariages Stables et leurs relations avec d'autres problï¿½ms combinatoires</a>
</li><li><a href="http://www.larry.denenberg.com/Knuth-3-16/surreal-numbers.html">Surreal Numbers</a>
</li><li><a href="http://www.larry.denenberg.com/Knuth-3-16/metafontbook.html">The METAFONTbook</a>
</li><li><a href="http://www.larry.denenberg.com/Knuth-3-16/story-of-o.html">The Story of O</a>
</li><li><a href="http://www.larry.denenberg.com/Knuth-3-16/concrete-math.html">Concrete Mathematics</a>
</li><li><a href="http://www.larry.denenberg.com/Knuth-3-16/data-structures.html">Data Structures and Their Algorithms</a>
</li><li><a href="http://www.larry.denenberg.com/Knuth-3-16/three-sixteen.html">3:16 Bible Texts Illuminated</a>
</li><li><a href="http://www.larry.denenberg.com/Knuth-3-16/mmixware.html">MMIXware:  A RISC Computer for the Third Millenium</a>
</li></ul>
<!--
<p>

New books will be added to this list as they are discovered.
-->

<p>
<a href="http://www.larry.denenberg.com/">This way to Larry's home page</a><br>
<small>Copyright Â© 20002 Larry Denenberg</small><br>

<!-- Not a typo.  Copyright 2002 Larry Denenberg -->

</p>



</div>]]></description>
        </item>
        <item>
            <title><![CDATA[The "missing" graph datatype already exists. It was invented in the '70s (301 pts)]]></title>
            <link>https://tylerhou.com/posts/datalog-go-brrr/</link>
            <guid>39606885</guid>
            <pubDate>Tue, 05 Mar 2024 17:53:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tylerhou.com/posts/datalog-go-brrr/">https://tylerhou.com/posts/datalog-go-brrr/</a>, See on <a href="https://news.ycombinator.com/item?id=39606885">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <p><em>This post is a response to/inspired by <a href="https://www.hillelwayne.com/post/graph-types/">The Hunt for the Missing Data
Type</a>
(<a href="https://news.ycombinator.com/item?id=39592444">HN</a>) by Hillel Wayne. <br>I
suggest reading his article first.</em></p>
<p>Why do programming languages lack built-in support for graphs and graph
algorithms? Orâwhy is there no âdatatypeâ for a graph? Hillel Wayne argues
(in the post linked above) that there are a few reasons:</p>
<ol>
<li>There are too many types of graphs.</li>
<li>There are too many graph algorithms.</li>
<li>Even if you focus on one particular type of graph, there are many possible
different graph representations.</li>
<li>The graph representation you choose has a large effect on performance.</li>
</ol>
<p>I agree with all these reasons. But I donât agree with Wayneâs (implied)
conclusionâthat graphs are inherently too complex to be well-supported by
mainstream programming languages. Languages <strong>could</strong> have <strong>amazing</strong> graph
support! In maybe a decade? And only after lots of research effort? (More on
this laterâ¦)</p>
<p>I claim the reason why it is so difficult to support graphs in languages
nowadays is <strong>because the imperative/structured programming model of modern
programming languages is ill-suited for graph algorithms.</strong> As Wayne correctly
points out, the core problem is that when you write a graph algorithm in an
imperative language like Python or Rust, you have to choose some explicit
representation for the graph. Then, your traversal algorithm is dependent on
the representation you chose. If you find out later that your representation is
no longer efficient, it is a lot of work to adapt your algorithms for a new
representation.</p>
<p>So what if we just, like, didnât do this? What if we donât pick a graph
representation? What if we could express our graph and our graph algorithm
declaratively and have the computer pick a representation for us? Would such an
program be just as performant? Are these questions rhetorical?</p>
<p>The answers, of course, are yes. <strong>We already have a declarative programming
language where expressing graph algorithms is extremely
natural</strong>â<a href="https://en.wikipedia.org/wiki/Datalog">Datalog</a>, whose semantics
are based on the relational algebra, which was developed in the 1970s. For
example, computing graph reachability is a two line Datalog program and (in
extensions to Datalog) it is remarkably easy to compute more sophisticated
facts like single-source or all-pairs shortest paths. Datalog implementations
are also highly performant, adjust query strategies in response to changes in
data, and some engines even support advanced features like live
streams/incremental view maintenance. The downside? You have to write Datalog.</p>

<h2 id="datalog"><a href="#datalog"></a><span>Datalog</span></h2>
<p>In Datalog, it is natural to encode a graph as an <em>edge relation</em> (a set of
edges). Queries on a graph like connectivity are well-expressed by <em>recursive
joins</em> on that edge relation. (In fact, transitive closure in a graph is so
naturally expressed in Datalog that it is often used as the <a href="https://berkeley-cs294-248.github.io/lectures/unit9.pdf#page=37">first example when
teaching
Datalog!</a>)
Here is a concrete example of such a program:</p>
<p><span><pre tabindex="0"><code><span><span>edge</span><span>(</span><span>1</span><span>, </span><span>2</span><span>)</span><span>.</span></span>
<span><span>edge</span><span>(</span><span>2</span><span>, </span><span>3</span><span>)</span><span>.</span></span>
<span><span>edge</span><span>(</span><span>3</span><span>, </span><span>4</span><span>)</span><span>.</span></span>
<span></span>
<span><span>path</span><span>(</span><span>a</span><span>, </span><span>b</span><span>) </span><span>:-</span><span> edge(</span><span>a</span><span>, </span><span>b</span><span>)</span><span>.</span></span>
<span><span>path</span><span>(</span><span>a</span><span>, </span><span>b</span><span>) </span><span>:-</span><span> path(</span><span>a</span><span>, </span><span>c</span><span>), edge(</span><span>c</span><span>, </span><span>b</span><span>)</span><span>.</span></span></code></pre></span></p><p>Lines 1-3 encode the graph in the edge relation. This graph in particular is a
(directed) âlinked-listâ graph on three nodes, where vertex 1 has an edge to
vertex 2, which has an edge to vertex 3.</p>
<p>In plain English, lines 5 and 6 say: there are two ways that there might be a
path from <mjx-container jax="SVG"><svg style="vertical-align:-0.023ex" xmlns="http://www.w3.org/2000/svg" width="1.197ex" height="1.02ex" role="img" focusable="false" viewBox="0 -441 529 451" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-1-TEX-I-1D44E"></use></g></g></g></svg></mjx-container> to <mjx-container jax="SVG"><svg style="vertical-align:-0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D44F" xlink:href="#MJX-2-TEX-I-1D44F"></use></g></g></g></svg></mjx-container>. Either there is a direct edge from <mjx-container jax="SVG"><svg style="vertical-align:-0.023ex" xmlns="http://www.w3.org/2000/svg" width="1.197ex" height="1.02ex" role="img" focusable="false" viewBox="0 -441 529 451" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-3-TEX-I-1D44E"></use></g></g></g></svg></mjx-container> to <mjx-container jax="SVG"><svg style="vertical-align:-0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-I-1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D44F" xlink:href="#MJX-4-TEX-I-1D44F"></use></g></g></g></svg></mjx-container> (line 5),
or there is a path from <mjx-container jax="SVG"><svg style="vertical-align:-0.023ex" xmlns="http://www.w3.org/2000/svg" width="1.197ex" height="1.02ex" role="img" focusable="false" viewBox="0 -441 529 451" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-5-TEX-I-1D44E"></use></g></g></g></svg></mjx-container> to some other vertex <mjx-container jax="SVG"><svg style="vertical-align:-0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.98ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 433 453" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D450" xlink:href="#MJX-6-TEX-I-1D450"></use></g></g></g></svg></mjx-container>, and a direct edge from
<mjx-container jax="SVG"><svg style="vertical-align:-0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.98ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 433 453" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-7-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D450" xlink:href="#MJX-7-TEX-I-1D450"></use></g></g></g></svg></mjx-container> to <mjx-container jax="SVG"><svg style="vertical-align:-0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-8-TEX-I-1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D44F" xlink:href="#MJX-8-TEX-I-1D44F"></use></g></g></g></svg></mjx-container> (line 6). Both rules are repeatedly evaluated until the database
reaches a <em>fixed-point;</em> i.e. further application of either rule leads to no
changes.</p>
<p>How does this evaluate? First, the database starts off as just containing the
edges:</p>
<mjx-container jax="SVG" display="true"><svg style="vertical-align:-3.507ex" xmlns="http://www.w3.org/2000/svg" width="15.06ex" height="8.145ex" role="img" focusable="false" viewBox="0 -2050 6656.7 3600" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-9-TEX-S4-23A7" d="M712 899L718 893V876V865Q718 854 704 846Q627 793 577 710T510 525Q510 524 509 521Q505 493 504 349Q504 345 504 334Q504 277 504 240Q504 -2 503 -4Q502 -8 494 -9T444 -10Q392 -10 390 -9Q387 -8 386 -5Q384 5 384 230Q384 262 384 312T383 382Q383 481 392 535T434 656Q510 806 664 892L677 899H712Z"></path><path id="MJX-9-TEX-S4-23A9" d="M718 -893L712 -899H677L666 -893Q542 -825 468 -714T385 -476Q384 -466 384 -282Q384 3 385 5L389 9Q392 10 444 10Q486 10 494 9T503 4Q504 2 504 -239V-310V-366Q504 -470 508 -513T530 -609Q546 -657 569 -698T617 -767T661 -812T699 -843T717 -856T718 -876V-893Z"></path><path id="MJX-9-TEX-S4-23A8" d="M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 924Q504 691 503 682Q494 549 425 439T243 259L229 250L243 241Q349 175 421 66T503 -182Q504 -191 504 -424Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -425V-282Q384 -176 377 -116T342 10Q325 54 301 92T255 155T214 196T183 222T171 232Q170 233 170 250T171 268Q171 269 191 284T240 331T300 407T354 524T383 679Q384 691 384 925Q384 1152 385 1155L389 1159Z"></path><path id="MJX-9-TEX-S4-23AA" d="M384 150V266Q384 304 389 309Q391 310 455 310Q496 310 498 309Q502 308 503 298Q504 283 504 150Q504 32 504 12T499 -9H498Q496 -10 444 -10T390 -9Q386 -8 385 2Q384 17 384 150Z"></path><path id="MJX-9-TEX-M-1D68E" d="M48 217Q48 295 100 361T248 439L258 440Q268 440 274 440Q329 438 369 416T428 359T456 292T464 228Q464 215 461 208T454 198T442 190L288 189H135L138 179Q153 132 199 102T303 71Q336 71 353 86T380 120T398 143Q404 146 422 146Q453 146 462 126Q464 120 464 116Q464 84 416 39T285 -6Q187 -6 118 59T48 217ZM377 264Q371 291 365 306T341 338T294 362Q288 363 264 363Q225 363 190 336T139 264H377Z"></path><path id="MJX-9-TEX-M-1D68D" d="M266 573Q266 596 277 603T314 611H352H385Q411 611 419 607T435 586V76H498Q512 67 516 60T520 38Q520 9 498 1H436Q429 1 417 1T398 0Q375 0 363 7T351 34V43L342 36Q288 -6 223 -6Q143 -6 87 58T31 216Q31 307 88 372T230 437Q292 437 342 405L351 399V535H320L289 536Q266 543 266 573ZM351 290Q347 302 337 316T302 346T244 361Q193 361 154 319T115 215Q115 152 152 111T235 70Q314 70 351 170V290Z"></path><path id="MJX-9-TEX-M-1D690" d="M60 274Q60 337 107 386T233 436Q278 436 316 417L329 410L338 416Q384 442 427 442T489 423T509 381T494 345T460 332Q449 332 440 338Q432 341 427 348T419 360T415 365Q414 364 410 364L383 355Q406 320 406 274Q406 211 358 162T233 112Q189 112 155 128L146 133Q142 125 142 115Q142 99 150 85T175 71Q182 72 187 70Q188 70 195 70T218 70T254 69Q259 69 275 69T297 69T318 68T340 66T361 62T384 57T405 49T428 38Q495 -1 495 -76Q495 -143 427 -186T262 -229Q161 -229 94 -185T29 -73Q30 -60 33 -48T39 -26T47 -8T57 8T67 20T77 30T86 38L91 43Q91 44 86 53T75 80T70 117Q70 142 89 183L83 194Q60 232 60 274ZM321 274Q321 312 296 337T230 362Q197 362 171 338T145 274Q145 235 170 211T233 187Q273 187 297 212T321 274ZM422 -78Q422 -54 408 -38T366 -15T315 -6T255 -4H200Q198 -4 193 -4T183 -3Q148 -3 125 -26T102 -78Q102 -110 151 -132T261 -154Q321 -154 371 -132T422 -78Z"></path><path id="MJX-9-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-9-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-9-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-9-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-9-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-9-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-9-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-9-TEX-S4-23AB" d="M170 875Q170 892 172 895T189 899H194H211L222 893Q345 826 420 715T503 476Q504 467 504 230Q504 51 504 21T499 -9H498Q496 -10 444 -10Q402 -10 394 -9T385 -4Q384 -2 384 240V311V366Q384 469 380 513T358 609Q342 657 319 698T271 767T227 812T189 843T171 856T170 875Z"></path><path id="MJX-9-TEX-S4-23AD" d="M384 -239V-57Q384 4 389 9Q391 10 455 10Q496 10 498 9Q501 8 502 5Q504 -5 504 -230Q504 -261 504 -311T505 -381Q505 -486 492 -551T435 -691Q357 -820 222 -893L211 -899H195Q176 -899 173 -896T170 -874Q170 -858 171 -855T184 -846Q262 -793 312 -709T378 -525Q378 -524 379 -522Q383 -493 384 -351Q384 -345 384 -334Q384 -276 384 -239Z"></path><path id="MJX-9-TEX-S4-23AC" d="M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 925V782Q504 676 511 616T546 490Q563 446 587 408T633 345T674 304T705 278T717 268Q718 267 718 250T717 232Q717 231 697 216T648 169T588 93T534 -24T505 -179Q504 -191 504 -425Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -424Q384 -191 385 -182Q394 -49 463 61T645 241L659 250L645 259Q539 325 467 434T385 682Q384 692 384 873Q384 1153 385 1155L389 1159Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><use data-c="23A7" xlink:href="#MJX-9-TEX-S4-23A7" transform="translate(0,1151)"></use><use data-c="23A9" xlink:href="#MJX-9-TEX-S4-23A9" transform="translate(0,-651)"></use><use data-c="23A8" xlink:href="#MJX-9-TEX-S4-23A8" transform="translate(0,0)"></use><svg width="889" height="181" y="1060" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-9-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg><svg width="889" height="181" y="-741" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-9-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg></g><g data-mml-node="mstyle" transform="translate(889,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mtable" transform="translate(1167,0)"><g data-mml-node="mtr" transform="translate(0,1300)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-9-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-9-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-9-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-9-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-9-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-9-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-9-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="32" xlink:href="#MJX-9-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-9-TEX-N-29"></use></g></g></g><g data-mml-node="mtr" transform="translate(0,0)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-9-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-9-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-9-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-9-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-9-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-9-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-9-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-9-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-9-TEX-N-29"></use></g></g></g><g data-mml-node="mtr" transform="translate(0,-1300)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-9-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-9-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-9-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-9-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-9-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="33" xlink:href="#MJX-9-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-9-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-9-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-9-TEX-N-29"></use></g></g></g></g><g data-mml-node="mstyle" transform="translate(5489.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(5767.7,0)"><use data-c="23AB" xlink:href="#MJX-9-TEX-S4-23AB" transform="translate(0,1151)"></use><use data-c="23AD" xlink:href="#MJX-9-TEX-S4-23AD" transform="translate(0,-651)"></use><use data-c="23AC" xlink:href="#MJX-9-TEX-S4-23AC" transform="translate(0,0)"></use><svg width="889" height="181" y="1060" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-9-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg><svg width="889" height="181" y="-741" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-9-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg></g></g></g></g></svg></mjx-container>
<p>While Datalog rules are allowed to fire in arbitrary order, letâs assume that
they fire in program order. The rule on line 5 fires, adding a path to our
database for each edge:</p>
<mjx-container jax="SVG" display="true"><svg style="vertical-align:-3.507ex" xmlns="http://www.w3.org/2000/svg" width="27.356ex" height="8.145ex" role="img" focusable="false" viewBox="0 -2050 12091.3 3600" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-10-TEX-S4-23A7" d="M712 899L718 893V876V865Q718 854 704 846Q627 793 577 710T510 525Q510 524 509 521Q505 493 504 349Q504 345 504 334Q504 277 504 240Q504 -2 503 -4Q502 -8 494 -9T444 -10Q392 -10 390 -9Q387 -8 386 -5Q384 5 384 230Q384 262 384 312T383 382Q383 481 392 535T434 656Q510 806 664 892L677 899H712Z"></path><path id="MJX-10-TEX-S4-23A9" d="M718 -893L712 -899H677L666 -893Q542 -825 468 -714T385 -476Q384 -466 384 -282Q384 3 385 5L389 9Q392 10 444 10Q486 10 494 9T503 4Q504 2 504 -239V-310V-366Q504 -470 508 -513T530 -609Q546 -657 569 -698T617 -767T661 -812T699 -843T717 -856T718 -876V-893Z"></path><path id="MJX-10-TEX-S4-23A8" d="M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 924Q504 691 503 682Q494 549 425 439T243 259L229 250L243 241Q349 175 421 66T503 -182Q504 -191 504 -424Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -425V-282Q384 -176 377 -116T342 10Q325 54 301 92T255 155T214 196T183 222T171 232Q170 233 170 250T171 268Q171 269 191 284T240 331T300 407T354 524T383 679Q384 691 384 925Q384 1152 385 1155L389 1159Z"></path><path id="MJX-10-TEX-S4-23AA" d="M384 150V266Q384 304 389 309Q391 310 455 310Q496 310 498 309Q502 308 503 298Q504 283 504 150Q504 32 504 12T499 -9H498Q496 -10 444 -10T390 -9Q386 -8 385 2Q384 17 384 150Z"></path><path id="MJX-10-TEX-M-1D68E" d="M48 217Q48 295 100 361T248 439L258 440Q268 440 274 440Q329 438 369 416T428 359T456 292T464 228Q464 215 461 208T454 198T442 190L288 189H135L138 179Q153 132 199 102T303 71Q336 71 353 86T380 120T398 143Q404 146 422 146Q453 146 462 126Q464 120 464 116Q464 84 416 39T285 -6Q187 -6 118 59T48 217ZM377 264Q371 291 365 306T341 338T294 362Q288 363 264 363Q225 363 190 336T139 264H377Z"></path><path id="MJX-10-TEX-M-1D68D" d="M266 573Q266 596 277 603T314 611H352H385Q411 611 419 607T435 586V76H498Q512 67 516 60T520 38Q520 9 498 1H436Q429 1 417 1T398 0Q375 0 363 7T351 34V43L342 36Q288 -6 223 -6Q143 -6 87 58T31 216Q31 307 88 372T230 437Q292 437 342 405L351 399V535H320L289 536Q266 543 266 573ZM351 290Q347 302 337 316T302 346T244 361Q193 361 154 319T115 215Q115 152 152 111T235 70Q314 70 351 170V290Z"></path><path id="MJX-10-TEX-M-1D690" d="M60 274Q60 337 107 386T233 436Q278 436 316 417L329 410L338 416Q384 442 427 442T489 423T509 381T494 345T460 332Q449 332 440 338Q432 341 427 348T419 360T415 365Q414 364 410 364L383 355Q406 320 406 274Q406 211 358 162T233 112Q189 112 155 128L146 133Q142 125 142 115Q142 99 150 85T175 71Q182 72 187 70Q188 70 195 70T218 70T254 69Q259 69 275 69T297 69T318 68T340 66T361 62T384 57T405 49T428 38Q495 -1 495 -76Q495 -143 427 -186T262 -229Q161 -229 94 -185T29 -73Q30 -60 33 -48T39 -26T47 -8T57 8T67 20T77 30T86 38L91 43Q91 44 86 53T75 80T70 117Q70 142 89 183L83 194Q60 232 60 274ZM321 274Q321 312 296 337T230 362Q197 362 171 338T145 274Q145 235 170 211T233 187Q273 187 297 212T321 274ZM422 -78Q422 -54 408 -38T366 -15T315 -6T255 -4H200Q198 -4 193 -4T183 -3Q148 -3 125 -26T102 -78Q102 -110 151 -132T261 -154Q321 -154 371 -132T422 -78Z"></path><path id="MJX-10-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-10-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-10-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-10-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-10-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-10-TEX-M-1D699" d="M89 431Q93 431 104 431T121 432Q173 432 173 401V396L182 402Q237 437 305 437Q376 437 434 378T492 217Q492 146 459 93T382 17T291 -6Q261 -6 232 5T188 26L174 37Q173 37 173 -54V-146H236Q250 -155 254 -162T258 -184Q258 -213 236 -221H27Q4 -214 4 -184Q4 -169 8 -162T27 -146H89V355H58L27 356Q4 363 4 393Q4 408 8 415T27 431H89ZM409 215Q409 269 377 315T283 361Q255 361 224 344T177 297L173 290V167Q189 124 213 97T278 70Q330 70 369 111T409 215Z"></path><path id="MJX-10-TEX-M-1D68A" d="M126 306Q105 306 90 321T74 359Q74 439 211 439Q268 439 276 438Q343 426 383 390T430 306Q431 301 431 190V81Q446 79 465 78T492 76T509 72T521 60T524 38Q524 11 506 3Q502 1 466 1Q426 1 406 5T379 14T355 36L345 30Q284 -6 205 -6Q135 -6 92 39T48 141Q48 182 79 212T158 256T252 278T342 285H347V290Q347 315 325 335T267 362Q258 363 224 363Q189 363 185 362H179L178 358Q178 353 178 352T176 345T174 337T170 330T165 322T158 316T150 311T139 308T126 306ZM132 140Q132 115 157 93T224 70Q269 70 302 87T344 133Q346 139 347 175V211H339Q256 209 194 190T132 140Z"></path><path id="MJX-10-TEX-M-1D69D" d="M25 395Q26 405 26 408T29 416T35 423T48 431H145V481L146 532Q154 547 161 550T184 554H189Q218 554 227 534Q229 529 229 480V431H405Q406 430 411 427T418 422T422 416T426 407T427 393Q427 387 427 382T424 374T421 368T417 363T413 360T408 358L405 356L317 355H229V249Q229 237 229 214T228 179Q228 126 241 98T295 70Q354 70 365 149Q366 167 375 174Q383 182 407 182H415Q438 182 446 166Q448 161 448 148Q448 84 398 39T282 -6Q226 -6 189 29T146 128Q145 134 145 247V355H96H72Q45 355 35 362T25 395Z"></path><path id="MJX-10-TEX-M-1D691" d="M4 573Q4 596 15 603T52 611H90H124Q146 611 155 608T171 591Q173 586 173 489Q173 394 175 394L186 402Q197 410 219 420T269 434Q278 436 306 436Q343 436 371 423Q411 402 423 365T436 265Q436 257 436 239T435 211V198V76H498Q512 67 516 60T520 38Q520 9 498 1H308Q286 10 286 32V38V46Q286 65 303 73Q309 76 329 76H351V188Q351 204 351 230T352 266Q352 321 341 341T288 361Q253 361 222 341T176 274L174 264L173 170V76H236Q250 67 254 60T258 38Q258 9 236 1H27Q4 8 4 38Q4 53 8 60T27 76H89V535H58L27 536Q4 543 4 573Z"></path><path id="MJX-10-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-10-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-10-TEX-S4-23AB" d="M170 875Q170 892 172 895T189 899H194H211L222 893Q345 826 420 715T503 476Q504 467 504 230Q504 51 504 21T499 -9H498Q496 -10 444 -10Q402 -10 394 -9T385 -4Q384 -2 384 240V311V366Q384 469 380 513T358 609Q342 657 319 698T271 767T227 812T189 843T171 856T170 875Z"></path><path id="MJX-10-TEX-S4-23AD" d="M384 -239V-57Q384 4 389 9Q391 10 455 10Q496 10 498 9Q501 8 502 5Q504 -5 504 -230Q504 -261 504 -311T505 -381Q505 -486 492 -551T435 -691Q357 -820 222 -893L211 -899H195Q176 -899 173 -896T170 -874Q170 -858 171 -855T184 -846Q262 -793 312 -709T378 -525Q378 -524 379 -522Q383 -493 384 -351Q384 -345 384 -334Q384 -276 384 -239Z"></path><path id="MJX-10-TEX-S4-23AC" d="M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 925V782Q504 676 511 616T546 490Q563 446 587 408T633 345T674 304T705 278T717 268Q718 267 718 250T717 232Q717 231 697 216T648 169T588 93T534 -24T505 -179Q504 -191 504 -425Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -424Q384 -191 385 -182Q394 -49 463 61T645 241L659 250L645 259Q539 325 467 434T385 682Q384 692 384 873Q384 1153 385 1155L389 1159Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><use data-c="23A7" xlink:href="#MJX-10-TEX-S4-23A7" transform="translate(0,1151)"></use><use data-c="23A9" xlink:href="#MJX-10-TEX-S4-23A9" transform="translate(0,-651)"></use><use data-c="23A8" xlink:href="#MJX-10-TEX-S4-23A8" transform="translate(0,0)"></use><svg width="889" height="181" y="1060" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-10-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg><svg width="889" height="181" y="-741" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-10-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg></g><g data-mml-node="mstyle" transform="translate(889,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mtable" transform="translate(1167,0)"><g data-mml-node="mtr" transform="translate(0,1300)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-10-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-10-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-10-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-10-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-10-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-10-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-10-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="32" xlink:href="#MJX-10-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-10-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(4322.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4600.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4878.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5156.7,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(5434.7,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-10-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-10-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-10-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-10-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-10-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-10-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-10-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="32" xlink:href="#MJX-10-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-10-TEX-N-29"></use></g></g></g><g data-mml-node="mtr" transform="translate(0,0)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-10-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-10-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-10-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-10-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-10-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-10-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-10-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-10-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-10-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(4322.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4600.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4878.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5156.7,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(5434.7,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-10-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-10-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-10-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-10-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-10-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-10-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-10-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-10-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-10-TEX-N-29"></use></g></g></g><g data-mml-node="mtr" transform="translate(0,-1300)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-10-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-10-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-10-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-10-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-10-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="33" xlink:href="#MJX-10-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-10-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-10-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-10-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(4322.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4600.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4878.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5156.7,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(5434.7,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-10-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-10-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-10-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-10-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-10-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="33" xlink:href="#MJX-10-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-10-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-10-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-10-TEX-N-29"></use></g></g></g></g><g data-mml-node="mstyle" transform="translate(10924.3,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(11202.3,0)"><use data-c="23AB" xlink:href="#MJX-10-TEX-S4-23AB" transform="translate(0,1151)"></use><use data-c="23AD" xlink:href="#MJX-10-TEX-S4-23AD" transform="translate(0,-651)"></use><use data-c="23AC" xlink:href="#MJX-10-TEX-S4-23AC" transform="translate(0,0)"></use><svg width="889" height="181" y="1060" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-10-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg><svg width="889" height="181" y="-741" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-10-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg></g></g></g></g></svg></mjx-container>
<p>To execute line 6, the Database engine <em>joins</em> the <code>edge</code> and <code>path</code> relations on
the common variable <mjx-container jax="SVG"><svg style="vertical-align:-0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.98ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 433 453" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-11-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D450" xlink:href="#MJX-11-TEX-I-1D450"></use></g></g></g></svg></mjx-container>. That is, the equivalent SQL statement might be:</p>
<pre tabindex="0"><code><span><span>SELECT</span><span> path</span><span>.</span><span>from</span><span>, </span><span>edge</span><span>.</span><span>to</span><span> FROM</span><span> path</span><span> INNER JOIN</span><span> edge </span><span>ON</span><span> path</span><span>.</span><span>to</span><span> =</span><span> edge</span><span>.</span><span>from</span><span>;</span></span></code></pre>

<p>Here is the result of the join.</p>
<mjx-container jax="SVG" display="true"><svg style="vertical-align:-2.036ex" xmlns="http://www.w3.org/2000/svg" width="34.619ex" height="5.204ex" role="img" focusable="false" viewBox="0 -1400 15301.8 2300" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-12-TEX-M-1D699" d="M89 431Q93 431 104 431T121 432Q173 432 173 401V396L182 402Q237 437 305 437Q376 437 434 378T492 217Q492 146 459 93T382 17T291 -6Q261 -6 232 5T188 26L174 37Q173 37 173 -54V-146H236Q250 -155 254 -162T258 -184Q258 -213 236 -221H27Q4 -214 4 -184Q4 -169 8 -162T27 -146H89V355H58L27 356Q4 363 4 393Q4 408 8 415T27 431H89ZM409 215Q409 269 377 315T283 361Q255 361 224 344T177 297L173 290V167Q189 124 213 97T278 70Q330 70 369 111T409 215Z"></path><path id="MJX-12-TEX-M-1D68A" d="M126 306Q105 306 90 321T74 359Q74 439 211 439Q268 439 276 438Q343 426 383 390T430 306Q431 301 431 190V81Q446 79 465 78T492 76T509 72T521 60T524 38Q524 11 506 3Q502 1 466 1Q426 1 406 5T379 14T355 36L345 30Q284 -6 205 -6Q135 -6 92 39T48 141Q48 182 79 212T158 256T252 278T342 285H347V290Q347 315 325 335T267 362Q258 363 224 363Q189 363 185 362H179L178 358Q178 353 178 352T176 345T174 337T170 330T165 322T158 316T150 311T139 308T126 306ZM132 140Q132 115 157 93T224 70Q269 70 302 87T344 133Q346 139 347 175V211H339Q256 209 194 190T132 140Z"></path><path id="MJX-12-TEX-M-1D69D" d="M25 395Q26 405 26 408T29 416T35 423T48 431H145V481L146 532Q154 547 161 550T184 554H189Q218 554 227 534Q229 529 229 480V431H405Q406 430 411 427T418 422T422 416T426 407T427 393Q427 387 427 382T424 374T421 368T417 363T413 360T408 358L405 356L317 355H229V249Q229 237 229 214T228 179Q228 126 241 98T295 70Q354 70 365 149Q366 167 375 174Q383 182 407 182H415Q438 182 446 166Q448 161 448 148Q448 84 398 39T282 -6Q226 -6 189 29T146 128Q145 134 145 247V355H96H72Q45 355 35 362T25 395Z"></path><path id="MJX-12-TEX-M-1D691" d="M4 573Q4 596 15 603T52 611H90H124Q146 611 155 608T171 591Q173 586 173 489Q173 394 175 394L186 402Q197 410 219 420T269 434Q278 436 306 436Q343 436 371 423Q411 402 423 365T436 265Q436 257 436 239T435 211V198V76H498Q512 67 516 60T520 38Q520 9 498 1H308Q286 10 286 32V38V46Q286 65 303 73Q309 76 329 76H351V188Q351 204 351 230T352 266Q352 321 341 341T288 361Q253 361 222 341T176 274L174 264L173 170V76H236Q250 67 254 60T258 38Q258 9 236 1H27Q4 8 4 38Q4 53 8 60T27 76H89V535H58L27 536Q4 543 4 573Z"></path><path id="MJX-12-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-12-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-12-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-12-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-12-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-12-TEX-N-22A2" d="M55 678Q55 679 56 681T58 684T61 688T65 691T70 693T77 694Q88 692 95 679V367H540Q555 359 555 347Q555 334 540 327H95V15Q88 2 77 0Q73 0 70 1T65 3T61 6T59 9T57 13T55 16V678Z"></path><path id="MJX-12-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-12-TEX-N-2227" d="M318 591Q325 598 333 598Q344 598 348 591Q349 590 414 445T545 151T611 -4Q609 -22 591 -22Q588 -22 586 -21T581 -20T577 -17T575 -13T572 -9T570 -4L333 528L96 -4Q87 -20 80 -21Q78 -22 75 -22Q57 -22 55 -4Q55 2 120 150T251 444T318 591Z"></path><path id="MJX-12-TEX-M-1D68E" d="M48 217Q48 295 100 361T248 439L258 440Q268 440 274 440Q329 438 369 416T428 359T456 292T464 228Q464 215 461 208T454 198T442 190L288 189H135L138 179Q153 132 199 102T303 71Q336 71 353 86T380 120T398 143Q404 146 422 146Q453 146 462 126Q464 120 464 116Q464 84 416 39T285 -6Q187 -6 118 59T48 217ZM377 264Q371 291 365 306T341 338T294 362Q288 363 264 363Q225 363 190 336T139 264H377Z"></path><path id="MJX-12-TEX-M-1D68D" d="M266 573Q266 596 277 603T314 611H352H385Q411 611 419 607T435 586V76H498Q512 67 516 60T520 38Q520 9 498 1H436Q429 1 417 1T398 0Q375 0 363 7T351 34V43L342 36Q288 -6 223 -6Q143 -6 87 58T31 216Q31 307 88 372T230 437Q292 437 342 405L351 399V535H320L289 536Q266 543 266 573ZM351 290Q347 302 337 316T302 346T244 361Q193 361 154 319T115 215Q115 152 152 111T235 70Q314 70 351 170V290Z"></path><path id="MJX-12-TEX-M-1D690" d="M60 274Q60 337 107 386T233 436Q278 436 316 417L329 410L338 416Q384 442 427 442T489 423T509 381T494 345T460 332Q449 332 440 338Q432 341 427 348T419 360T415 365Q414 364 410 364L383 355Q406 320 406 274Q406 211 358 162T233 112Q189 112 155 128L146 133Q142 125 142 115Q142 99 150 85T175 71Q182 72 187 70Q188 70 195 70T218 70T254 69Q259 69 275 69T297 69T318 68T340 66T361 62T384 57T405 49T428 38Q495 -1 495 -76Q495 -143 427 -186T262 -229Q161 -229 94 -185T29 -73Q30 -60 33 -48T39 -26T47 -8T57 8T67 20T77 30T86 38L91 43Q91 44 86 53T75 80T70 117Q70 142 89 183L83 194Q60 232 60 274ZM321 274Q321 312 296 337T230 362Q197 362 171 338T145 274Q145 235 170 211T233 187Q273 187 297 212T321 274ZM422 -78Q422 -54 408 -38T366 -15T315 -6T255 -4H200Q198 -4 193 -4T183 -3Q148 -3 125 -26T102 -78Q102 -110 151 -132T261 -154Q321 -154 371 -132T422 -78Z"></path><path id="MJX-12-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,650)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-12-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-12-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-12-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-12-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-12-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-12-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-12-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-12-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-12-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4600.4,0)"><use data-c="22A2" xlink:href="#MJX-12-TEX-N-22A2"></use></g><g data-mml-node="mtext" transform="translate(5489.2,0)"><use data-c="1D699" xlink:href="#MJX-12-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-12-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-12-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-12-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(7589.2,0)"><use data-c="28" xlink:href="#MJX-12-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(7978.2,0)"><use data-c="31" xlink:href="#MJX-12-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(8478.2,0)"><use data-c="2C" xlink:href="#MJX-12-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(8922.9,0)"><use data-c="32" xlink:href="#MJX-12-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(9422.9,0)"><use data-c="29" xlink:href="#MJX-12-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(10034.1,0)"><use data-c="2227" xlink:href="#MJX-12-TEX-N-2227"></use></g><g data-mml-node="mstyle" transform="translate(10701.1,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(10979.1,0)"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-12-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-12-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-12-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-12-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-12-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-12-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-12-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-12-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-12-TEX-N-29"></use></g></g></g><g data-mml-node="mtr" transform="translate(0,-650)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-12-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-12-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-12-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-12-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-12-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-12-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-12-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-12-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-12-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4600.4,0)"><use data-c="22A2" xlink:href="#MJX-12-TEX-N-22A2"></use></g><g data-mml-node="mtext" transform="translate(5489.2,0)"><use data-c="1D699" xlink:href="#MJX-12-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-12-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-12-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-12-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(7589.2,0)"><use data-c="28" xlink:href="#MJX-12-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(7978.2,0)"><use data-c="32" xlink:href="#MJX-12-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(8478.2,0)"><use data-c="2C" xlink:href="#MJX-12-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(8922.9,0)"><use data-c="33" xlink:href="#MJX-12-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(9422.9,0)"><use data-c="29" xlink:href="#MJX-12-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(10034.1,0)"><use data-c="2227" xlink:href="#MJX-12-TEX-N-2227"></use></g><g data-mml-node="mstyle" transform="translate(10701.1,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(10979.1,0)"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-12-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-12-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-12-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-12-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-12-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="33" xlink:href="#MJX-12-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-12-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-12-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-12-TEX-N-29"></use></g></g></g></g></g></g></svg></mjx-container>
<p>And the Datalog engine adds these new tuples to the database. Note that before
firing the rule on line 6, we had paths of length <mjx-container jax="SVG"><svg style="vertical-align:0" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-13-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-13-TEX-N-31"></use></g></g></g></svg></mjx-container> in our database; now we
have paths of length <mjx-container jax="SVG"><svg style="vertical-align:0" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-14-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-14-TEX-N-32"></use></g></g></g></svg></mjx-container>.</p>
<mjx-container jax="SVG" display="true"><svg style="vertical-align:-3.507ex" xmlns="http://www.w3.org/2000/svg" width="43.548ex" height="8.145ex" role="img" focusable="false" viewBox="0 -2050 19248 3600" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-15-TEX-S4-23A7" d="M712 899L718 893V876V865Q718 854 704 846Q627 793 577 710T510 525Q510 524 509 521Q505 493 504 349Q504 345 504 334Q504 277 504 240Q504 -2 503 -4Q502 -8 494 -9T444 -10Q392 -10 390 -9Q387 -8 386 -5Q384 5 384 230Q384 262 384 312T383 382Q383 481 392 535T434 656Q510 806 664 892L677 899H712Z"></path><path id="MJX-15-TEX-S4-23A9" d="M718 -893L712 -899H677L666 -893Q542 -825 468 -714T385 -476Q384 -466 384 -282Q384 3 385 5L389 9Q392 10 444 10Q486 10 494 9T503 4Q504 2 504 -239V-310V-366Q504 -470 508 -513T530 -609Q546 -657 569 -698T617 -767T661 -812T699 -843T717 -856T718 -876V-893Z"></path><path id="MJX-15-TEX-S4-23A8" d="M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 924Q504 691 503 682Q494 549 425 439T243 259L229 250L243 241Q349 175 421 66T503 -182Q504 -191 504 -424Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -425V-282Q384 -176 377 -116T342 10Q325 54 301 92T255 155T214 196T183 222T171 232Q170 233 170 250T171 268Q171 269 191 284T240 331T300 407T354 524T383 679Q384 691 384 925Q384 1152 385 1155L389 1159Z"></path><path id="MJX-15-TEX-S4-23AA" d="M384 150V266Q384 304 389 309Q391 310 455 310Q496 310 498 309Q502 308 503 298Q504 283 504 150Q504 32 504 12T499 -9H498Q496 -10 444 -10T390 -9Q386 -8 385 2Q384 17 384 150Z"></path><path id="MJX-15-TEX-M-1D68E" d="M48 217Q48 295 100 361T248 439L258 440Q268 440 274 440Q329 438 369 416T428 359T456 292T464 228Q464 215 461 208T454 198T442 190L288 189H135L138 179Q153 132 199 102T303 71Q336 71 353 86T380 120T398 143Q404 146 422 146Q453 146 462 126Q464 120 464 116Q464 84 416 39T285 -6Q187 -6 118 59T48 217ZM377 264Q371 291 365 306T341 338T294 362Q288 363 264 363Q225 363 190 336T139 264H377Z"></path><path id="MJX-15-TEX-M-1D68D" d="M266 573Q266 596 277 603T314 611H352H385Q411 611 419 607T435 586V76H498Q512 67 516 60T520 38Q520 9 498 1H436Q429 1 417 1T398 0Q375 0 363 7T351 34V43L342 36Q288 -6 223 -6Q143 -6 87 58T31 216Q31 307 88 372T230 437Q292 437 342 405L351 399V535H320L289 536Q266 543 266 573ZM351 290Q347 302 337 316T302 346T244 361Q193 361 154 319T115 215Q115 152 152 111T235 70Q314 70 351 170V290Z"></path><path id="MJX-15-TEX-M-1D690" d="M60 274Q60 337 107 386T233 436Q278 436 316 417L329 410L338 416Q384 442 427 442T489 423T509 381T494 345T460 332Q449 332 440 338Q432 341 427 348T419 360T415 365Q414 364 410 364L383 355Q406 320 406 274Q406 211 358 162T233 112Q189 112 155 128L146 133Q142 125 142 115Q142 99 150 85T175 71Q182 72 187 70Q188 70 195 70T218 70T254 69Q259 69 275 69T297 69T318 68T340 66T361 62T384 57T405 49T428 38Q495 -1 495 -76Q495 -143 427 -186T262 -229Q161 -229 94 -185T29 -73Q30 -60 33 -48T39 -26T47 -8T57 8T67 20T77 30T86 38L91 43Q91 44 86 53T75 80T70 117Q70 142 89 183L83 194Q60 232 60 274ZM321 274Q321 312 296 337T230 362Q197 362 171 338T145 274Q145 235 170 211T233 187Q273 187 297 212T321 274ZM422 -78Q422 -54 408 -38T366 -15T315 -6T255 -4H200Q198 -4 193 -4T183 -3Q148 -3 125 -26T102 -78Q102 -110 151 -132T261 -154Q321 -154 371 -132T422 -78Z"></path><path id="MJX-15-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-15-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-15-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-15-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-15-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-15-TEX-M-1D699" d="M89 431Q93 431 104 431T121 432Q173 432 173 401V396L182 402Q237 437 305 437Q376 437 434 378T492 217Q492 146 459 93T382 17T291 -6Q261 -6 232 5T188 26L174 37Q173 37 173 -54V-146H236Q250 -155 254 -162T258 -184Q258 -213 236 -221H27Q4 -214 4 -184Q4 -169 8 -162T27 -146H89V355H58L27 356Q4 363 4 393Q4 408 8 415T27 431H89ZM409 215Q409 269 377 315T283 361Q255 361 224 344T177 297L173 290V167Q189 124 213 97T278 70Q330 70 369 111T409 215Z"></path><path id="MJX-15-TEX-M-1D68A" d="M126 306Q105 306 90 321T74 359Q74 439 211 439Q268 439 276 438Q343 426 383 390T430 306Q431 301 431 190V81Q446 79 465 78T492 76T509 72T521 60T524 38Q524 11 506 3Q502 1 466 1Q426 1 406 5T379 14T355 36L345 30Q284 -6 205 -6Q135 -6 92 39T48 141Q48 182 79 212T158 256T252 278T342 285H347V290Q347 315 325 335T267 362Q258 363 224 363Q189 363 185 362H179L178 358Q178 353 178 352T176 345T174 337T170 330T165 322T158 316T150 311T139 308T126 306ZM132 140Q132 115 157 93T224 70Q269 70 302 87T344 133Q346 139 347 175V211H339Q256 209 194 190T132 140Z"></path><path id="MJX-15-TEX-M-1D69D" d="M25 395Q26 405 26 408T29 416T35 423T48 431H145V481L146 532Q154 547 161 550T184 554H189Q218 554 227 534Q229 529 229 480V431H405Q406 430 411 427T418 422T422 416T426 407T427 393Q427 387 427 382T424 374T421 368T417 363T413 360T408 358L405 356L317 355H229V249Q229 237 229 214T228 179Q228 126 241 98T295 70Q354 70 365 149Q366 167 375 174Q383 182 407 182H415Q438 182 446 166Q448 161 448 148Q448 84 398 39T282 -6Q226 -6 189 29T146 128Q145 134 145 247V355H96H72Q45 355 35 362T25 395Z"></path><path id="MJX-15-TEX-M-1D691" d="M4 573Q4 596 15 603T52 611H90H124Q146 611 155 608T171 591Q173 586 173 489Q173 394 175 394L186 402Q197 410 219 420T269 434Q278 436 306 436Q343 436 371 423Q411 402 423 365T436 265Q436 257 436 239T435 211V198V76H498Q512 67 516 60T520 38Q520 9 498 1H308Q286 10 286 32V38V46Q286 65 303 73Q309 76 329 76H351V188Q351 204 351 230T352 266Q352 321 341 341T288 361Q253 361 222 341T176 274L174 264L173 170V76H236Q250 67 254 60T258 38Q258 9 236 1H27Q4 8 4 38Q4 53 8 60T27 76H89V535H58L27 536Q4 543 4 573Z"></path><path id="MJX-15-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-15-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-15-TEX-S4-23AB" d="M170 875Q170 892 172 895T189 899H194H211L222 893Q345 826 420 715T503 476Q504 467 504 230Q504 51 504 21T499 -9H498Q496 -10 444 -10Q402 -10 394 -9T385 -4Q384 -2 384 240V311V366Q384 469 380 513T358 609Q342 657 319 698T271 767T227 812T189 843T171 856T170 875Z"></path><path id="MJX-15-TEX-S4-23AD" d="M384 -239V-57Q384 4 389 9Q391 10 455 10Q496 10 498 9Q501 8 502 5Q504 -5 504 -230Q504 -261 504 -311T505 -381Q505 -486 492 -551T435 -691Q357 -820 222 -893L211 -899H195Q176 -899 173 -896T170 -874Q170 -858 171 -855T184 -846Q262 -793 312 -709T378 -525Q378 -524 379 -522Q383 -493 384 -351Q384 -345 384 -334Q384 -276 384 -239Z"></path><path id="MJX-15-TEX-S4-23AC" d="M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 925V782Q504 676 511 616T546 490Q563 446 587 408T633 345T674 304T705 278T717 268Q718 267 718 250T717 232Q717 231 697 216T648 169T588 93T534 -24T505 -179Q504 -191 504 -425Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -424Q384 -191 385 -182Q394 -49 463 61T645 241L659 250L645 259Q539 325 467 434T385 682Q384 692 384 873Q384 1153 385 1155L389 1159Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><use data-c="23A7" xlink:href="#MJX-15-TEX-S4-23A7" transform="translate(0,1151)"></use><use data-c="23A9" xlink:href="#MJX-15-TEX-S4-23A9" transform="translate(0,-651)"></use><use data-c="23A8" xlink:href="#MJX-15-TEX-S4-23A8" transform="translate(0,0)"></use><svg width="889" height="181" y="1060" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-15-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg><svg width="889" height="181" y="-741" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-15-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg></g><g data-mml-node="mstyle" transform="translate(889,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mtable" transform="translate(1167,0)"><g data-mml-node="mtr" transform="translate(0,1300)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-15-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-15-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-15-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-15-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-15-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-15-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-15-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="32" xlink:href="#MJX-15-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-15-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(4322.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4600.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4878.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5156.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5434.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5712.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5990.7,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(6268.7,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-15-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-15-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-15-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-15-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-15-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-15-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-15-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="32" xlink:href="#MJX-15-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-15-TEX-N-29"></use></g></g><g data-mml-node="mtd" transform="translate(12591.3,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-15-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-15-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-15-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-15-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-15-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-15-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-15-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-15-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-15-TEX-N-29"></use></g></g></g><g data-mml-node="mtr" transform="translate(0,0)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-15-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-15-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-15-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-15-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-15-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-15-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-15-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-15-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-15-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(4322.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4600.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4878.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5156.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5434.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5712.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5990.7,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(6268.7,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-15-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-15-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-15-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-15-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-15-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-15-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-15-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-15-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-15-TEX-N-29"></use></g></g><g data-mml-node="mtd" transform="translate(12591.3,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-15-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-15-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-15-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-15-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-15-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-15-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-15-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-15-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-15-TEX-N-29"></use></g></g></g><g data-mml-node="mtr" transform="translate(0,-1300)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-15-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-15-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-15-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-15-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-15-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="33" xlink:href="#MJX-15-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-15-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-15-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-15-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(4322.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4600.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4878.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5156.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5434.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5712.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5990.7,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(6268.7,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-15-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-15-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-15-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-15-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-15-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="33" xlink:href="#MJX-15-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-15-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-15-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-15-TEX-N-29"></use></g></g></g></g><g data-mml-node="mstyle" transform="translate(18081,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(18359,0)"><use data-c="23AB" xlink:href="#MJX-15-TEX-S4-23AB" transform="translate(0,1151)"></use><use data-c="23AD" xlink:href="#MJX-15-TEX-S4-23AD" transform="translate(0,-651)"></use><use data-c="23AC" xlink:href="#MJX-15-TEX-S4-23AC" transform="translate(0,0)"></use><svg width="889" height="181" y="1060" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-15-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg><svg width="889" height="181" y="-741" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-15-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg></g></g></g></g></svg></mjx-container>
<p>We fire the rule on line 5 again, but it does not change our database. Finally
we fire the rule on line 6, and we get the join</p>
<mjx-container jax="SVG" display="true"><svg style="vertical-align:-3.507ex" xmlns="http://www.w3.org/2000/svg" width="34.619ex" height="8.145ex" role="img" focusable="false" viewBox="0 -2050 15301.8 3600" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-16-TEX-M-1D699" d="M89 431Q93 431 104 431T121 432Q173 432 173 401V396L182 402Q237 437 305 437Q376 437 434 378T492 217Q492 146 459 93T382 17T291 -6Q261 -6 232 5T188 26L174 37Q173 37 173 -54V-146H236Q250 -155 254 -162T258 -184Q258 -213 236 -221H27Q4 -214 4 -184Q4 -169 8 -162T27 -146H89V355H58L27 356Q4 363 4 393Q4 408 8 415T27 431H89ZM409 215Q409 269 377 315T283 361Q255 361 224 344T177 297L173 290V167Q189 124 213 97T278 70Q330 70 369 111T409 215Z"></path><path id="MJX-16-TEX-M-1D68A" d="M126 306Q105 306 90 321T74 359Q74 439 211 439Q268 439 276 438Q343 426 383 390T430 306Q431 301 431 190V81Q446 79 465 78T492 76T509 72T521 60T524 38Q524 11 506 3Q502 1 466 1Q426 1 406 5T379 14T355 36L345 30Q284 -6 205 -6Q135 -6 92 39T48 141Q48 182 79 212T158 256T252 278T342 285H347V290Q347 315 325 335T267 362Q258 363 224 363Q189 363 185 362H179L178 358Q178 353 178 352T176 345T174 337T170 330T165 322T158 316T150 311T139 308T126 306ZM132 140Q132 115 157 93T224 70Q269 70 302 87T344 133Q346 139 347 175V211H339Q256 209 194 190T132 140Z"></path><path id="MJX-16-TEX-M-1D69D" d="M25 395Q26 405 26 408T29 416T35 423T48 431H145V481L146 532Q154 547 161 550T184 554H189Q218 554 227 534Q229 529 229 480V431H405Q406 430 411 427T418 422T422 416T426 407T427 393Q427 387 427 382T424 374T421 368T417 363T413 360T408 358L405 356L317 355H229V249Q229 237 229 214T228 179Q228 126 241 98T295 70Q354 70 365 149Q366 167 375 174Q383 182 407 182H415Q438 182 446 166Q448 161 448 148Q448 84 398 39T282 -6Q226 -6 189 29T146 128Q145 134 145 247V355H96H72Q45 355 35 362T25 395Z"></path><path id="MJX-16-TEX-M-1D691" d="M4 573Q4 596 15 603T52 611H90H124Q146 611 155 608T171 591Q173 586 173 489Q173 394 175 394L186 402Q197 410 219 420T269 434Q278 436 306 436Q343 436 371 423Q411 402 423 365T436 265Q436 257 436 239T435 211V198V76H498Q512 67 516 60T520 38Q520 9 498 1H308Q286 10 286 32V38V46Q286 65 303 73Q309 76 329 76H351V188Q351 204 351 230T352 266Q352 321 341 341T288 361Q253 361 222 341T176 274L174 264L173 170V76H236Q250 67 254 60T258 38Q258 9 236 1H27Q4 8 4 38Q4 53 8 60T27 76H89V535H58L27 536Q4 543 4 573Z"></path><path id="MJX-16-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-16-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-16-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-16-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-16-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-16-TEX-N-22A2" d="M55 678Q55 679 56 681T58 684T61 688T65 691T70 693T77 694Q88 692 95 679V367H540Q555 359 555 347Q555 334 540 327H95V15Q88 2 77 0Q73 0 70 1T65 3T61 6T59 9T57 13T55 16V678Z"></path><path id="MJX-16-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-16-TEX-N-2227" d="M318 591Q325 598 333 598Q344 598 348 591Q349 590 414 445T545 151T611 -4Q609 -22 591 -22Q588 -22 586 -21T581 -20T577 -17T575 -13T572 -9T570 -4L333 528L96 -4Q87 -20 80 -21Q78 -22 75 -22Q57 -22 55 -4Q55 2 120 150T251 444T318 591Z"></path><path id="MJX-16-TEX-M-1D68E" d="M48 217Q48 295 100 361T248 439L258 440Q268 440 274 440Q329 438 369 416T428 359T456 292T464 228Q464 215 461 208T454 198T442 190L288 189H135L138 179Q153 132 199 102T303 71Q336 71 353 86T380 120T398 143Q404 146 422 146Q453 146 462 126Q464 120 464 116Q464 84 416 39T285 -6Q187 -6 118 59T48 217ZM377 264Q371 291 365 306T341 338T294 362Q288 363 264 363Q225 363 190 336T139 264H377Z"></path><path id="MJX-16-TEX-M-1D68D" d="M266 573Q266 596 277 603T314 611H352H385Q411 611 419 607T435 586V76H498Q512 67 516 60T520 38Q520 9 498 1H436Q429 1 417 1T398 0Q375 0 363 7T351 34V43L342 36Q288 -6 223 -6Q143 -6 87 58T31 216Q31 307 88 372T230 437Q292 437 342 405L351 399V535H320L289 536Q266 543 266 573ZM351 290Q347 302 337 316T302 346T244 361Q193 361 154 319T115 215Q115 152 152 111T235 70Q314 70 351 170V290Z"></path><path id="MJX-16-TEX-M-1D690" d="M60 274Q60 337 107 386T233 436Q278 436 316 417L329 410L338 416Q384 442 427 442T489 423T509 381T494 345T460 332Q449 332 440 338Q432 341 427 348T419 360T415 365Q414 364 410 364L383 355Q406 320 406 274Q406 211 358 162T233 112Q189 112 155 128L146 133Q142 125 142 115Q142 99 150 85T175 71Q182 72 187 70Q188 70 195 70T218 70T254 69Q259 69 275 69T297 69T318 68T340 66T361 62T384 57T405 49T428 38Q495 -1 495 -76Q495 -143 427 -186T262 -229Q161 -229 94 -185T29 -73Q30 -60 33 -48T39 -26T47 -8T57 8T67 20T77 30T86 38L91 43Q91 44 86 53T75 80T70 117Q70 142 89 183L83 194Q60 232 60 274ZM321 274Q321 312 296 337T230 362Q197 362 171 338T145 274Q145 235 170 211T233 187Q273 187 297 212T321 274ZM422 -78Q422 -54 408 -38T366 -15T315 -6T255 -4H200Q198 -4 193 -4T183 -3Q148 -3 125 -26T102 -78Q102 -110 151 -132T261 -154Q321 -154 371 -132T422 -78Z"></path><path id="MJX-16-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,1300)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-16-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-16-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-16-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-16-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-16-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-16-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-16-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-16-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-16-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4600.4,0)"><use data-c="22A2" xlink:href="#MJX-16-TEX-N-22A2"></use></g><g data-mml-node="mtext" transform="translate(5489.2,0)"><use data-c="1D699" xlink:href="#MJX-16-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-16-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-16-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-16-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(7589.2,0)"><use data-c="28" xlink:href="#MJX-16-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(7978.2,0)"><use data-c="31" xlink:href="#MJX-16-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(8478.2,0)"><use data-c="2C" xlink:href="#MJX-16-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(8922.9,0)"><use data-c="32" xlink:href="#MJX-16-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(9422.9,0)"><use data-c="29" xlink:href="#MJX-16-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(10034.1,0)"><use data-c="2227" xlink:href="#MJX-16-TEX-N-2227"></use></g><g data-mml-node="mstyle" transform="translate(10701.1,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(10979.1,0)"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-16-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-16-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-16-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-16-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-16-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-16-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-16-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-16-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-16-TEX-N-29"></use></g></g></g><g data-mml-node="mtr" transform="translate(0,0)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-16-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-16-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-16-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-16-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-16-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-16-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-16-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-16-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-16-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4600.4,0)"><use data-c="22A2" xlink:href="#MJX-16-TEX-N-22A2"></use></g><g data-mml-node="mtext" transform="translate(5489.2,0)"><use data-c="1D699" xlink:href="#MJX-16-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-16-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-16-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-16-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(7589.2,0)"><use data-c="28" xlink:href="#MJX-16-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(7978.2,0)"><use data-c="32" xlink:href="#MJX-16-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(8478.2,0)"><use data-c="2C" xlink:href="#MJX-16-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(8922.9,0)"><use data-c="33" xlink:href="#MJX-16-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(9422.9,0)"><use data-c="29" xlink:href="#MJX-16-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(10034.1,0)"><use data-c="2227" xlink:href="#MJX-16-TEX-N-2227"></use></g><g data-mml-node="mstyle" transform="translate(10701.1,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(10979.1,0)"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-16-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-16-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-16-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-16-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-16-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="33" xlink:href="#MJX-16-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-16-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-16-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-16-TEX-N-29"></use></g></g></g><g data-mml-node="mtr" transform="translate(0,-1300)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-16-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-16-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-16-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-16-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-16-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-16-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-16-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-16-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-16-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4600.4,0)"><use data-c="22A2" xlink:href="#MJX-16-TEX-N-22A2"></use></g><g data-mml-node="mtext" transform="translate(5489.2,0)"><use data-c="1D699" xlink:href="#MJX-16-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-16-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-16-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-16-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(7589.2,0)"><use data-c="28" xlink:href="#MJX-16-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(7978.2,0)"><use data-c="31" xlink:href="#MJX-16-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(8478.2,0)"><use data-c="2C" xlink:href="#MJX-16-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(8922.9,0)"><use data-c="33" xlink:href="#MJX-16-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(9422.9,0)"><use data-c="29" xlink:href="#MJX-16-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(10034.1,0)"><use data-c="2227" xlink:href="#MJX-16-TEX-N-2227"></use></g><g data-mml-node="mstyle" transform="translate(10701.1,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(10979.1,0)"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-16-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-16-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-16-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-16-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-16-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="33" xlink:href="#MJX-16-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-16-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-16-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-16-TEX-N-29"></use></g></g></g></g></g></g></svg></mjx-container>
<p>Only the last entry is new, so we add it to our database:</p>
<mjx-container jax="SVG" display="true"><svg style="vertical-align:-3.507ex" xmlns="http://www.w3.org/2000/svg" width="57.73ex" height="8.145ex" role="img" focusable="false" viewBox="0 -2050 25516.7 3600" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-17-TEX-S4-23A7" d="M712 899L718 893V876V865Q718 854 704 846Q627 793 577 710T510 525Q510 524 509 521Q505 493 504 349Q504 345 504 334Q504 277 504 240Q504 -2 503 -4Q502 -8 494 -9T444 -10Q392 -10 390 -9Q387 -8 386 -5Q384 5 384 230Q384 262 384 312T383 382Q383 481 392 535T434 656Q510 806 664 892L677 899H712Z"></path><path id="MJX-17-TEX-S4-23A9" d="M718 -893L712 -899H677L666 -893Q542 -825 468 -714T385 -476Q384 -466 384 -282Q384 3 385 5L389 9Q392 10 444 10Q486 10 494 9T503 4Q504 2 504 -239V-310V-366Q504 -470 508 -513T530 -609Q546 -657 569 -698T617 -767T661 -812T699 -843T717 -856T718 -876V-893Z"></path><path id="MJX-17-TEX-S4-23A8" d="M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 924Q504 691 503 682Q494 549 425 439T243 259L229 250L243 241Q349 175 421 66T503 -182Q504 -191 504 -424Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -425V-282Q384 -176 377 -116T342 10Q325 54 301 92T255 155T214 196T183 222T171 232Q170 233 170 250T171 268Q171 269 191 284T240 331T300 407T354 524T383 679Q384 691 384 925Q384 1152 385 1155L389 1159Z"></path><path id="MJX-17-TEX-S4-23AA" d="M384 150V266Q384 304 389 309Q391 310 455 310Q496 310 498 309Q502 308 503 298Q504 283 504 150Q504 32 504 12T499 -9H498Q496 -10 444 -10T390 -9Q386 -8 385 2Q384 17 384 150Z"></path><path id="MJX-17-TEX-M-1D68E" d="M48 217Q48 295 100 361T248 439L258 440Q268 440 274 440Q329 438 369 416T428 359T456 292T464 228Q464 215 461 208T454 198T442 190L288 189H135L138 179Q153 132 199 102T303 71Q336 71 353 86T380 120T398 143Q404 146 422 146Q453 146 462 126Q464 120 464 116Q464 84 416 39T285 -6Q187 -6 118 59T48 217ZM377 264Q371 291 365 306T341 338T294 362Q288 363 264 363Q225 363 190 336T139 264H377Z"></path><path id="MJX-17-TEX-M-1D68D" d="M266 573Q266 596 277 603T314 611H352H385Q411 611 419 607T435 586V76H498Q512 67 516 60T520 38Q520 9 498 1H436Q429 1 417 1T398 0Q375 0 363 7T351 34V43L342 36Q288 -6 223 -6Q143 -6 87 58T31 216Q31 307 88 372T230 437Q292 437 342 405L351 399V535H320L289 536Q266 543 266 573ZM351 290Q347 302 337 316T302 346T244 361Q193 361 154 319T115 215Q115 152 152 111T235 70Q314 70 351 170V290Z"></path><path id="MJX-17-TEX-M-1D690" d="M60 274Q60 337 107 386T233 436Q278 436 316 417L329 410L338 416Q384 442 427 442T489 423T509 381T494 345T460 332Q449 332 440 338Q432 341 427 348T419 360T415 365Q414 364 410 364L383 355Q406 320 406 274Q406 211 358 162T233 112Q189 112 155 128L146 133Q142 125 142 115Q142 99 150 85T175 71Q182 72 187 70Q188 70 195 70T218 70T254 69Q259 69 275 69T297 69T318 68T340 66T361 62T384 57T405 49T428 38Q495 -1 495 -76Q495 -143 427 -186T262 -229Q161 -229 94 -185T29 -73Q30 -60 33 -48T39 -26T47 -8T57 8T67 20T77 30T86 38L91 43Q91 44 86 53T75 80T70 117Q70 142 89 183L83 194Q60 232 60 274ZM321 274Q321 312 296 337T230 362Q197 362 171 338T145 274Q145 235 170 211T233 187Q273 187 297 212T321 274ZM422 -78Q422 -54 408 -38T366 -15T315 -6T255 -4H200Q198 -4 193 -4T183 -3Q148 -3 125 -26T102 -78Q102 -110 151 -132T261 -154Q321 -154 371 -132T422 -78Z"></path><path id="MJX-17-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-17-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-17-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-17-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-17-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-17-TEX-M-1D699" d="M89 431Q93 431 104 431T121 432Q173 432 173 401V396L182 402Q237 437 305 437Q376 437 434 378T492 217Q492 146 459 93T382 17T291 -6Q261 -6 232 5T188 26L174 37Q173 37 173 -54V-146H236Q250 -155 254 -162T258 -184Q258 -213 236 -221H27Q4 -214 4 -184Q4 -169 8 -162T27 -146H89V355H58L27 356Q4 363 4 393Q4 408 8 415T27 431H89ZM409 215Q409 269 377 315T283 361Q255 361 224 344T177 297L173 290V167Q189 124 213 97T278 70Q330 70 369 111T409 215Z"></path><path id="MJX-17-TEX-M-1D68A" d="M126 306Q105 306 90 321T74 359Q74 439 211 439Q268 439 276 438Q343 426 383 390T430 306Q431 301 431 190V81Q446 79 465 78T492 76T509 72T521 60T524 38Q524 11 506 3Q502 1 466 1Q426 1 406 5T379 14T355 36L345 30Q284 -6 205 -6Q135 -6 92 39T48 141Q48 182 79 212T158 256T252 278T342 285H347V290Q347 315 325 335T267 362Q258 363 224 363Q189 363 185 362H179L178 358Q178 353 178 352T176 345T174 337T170 330T165 322T158 316T150 311T139 308T126 306ZM132 140Q132 115 157 93T224 70Q269 70 302 87T344 133Q346 139 347 175V211H339Q256 209 194 190T132 140Z"></path><path id="MJX-17-TEX-M-1D69D" d="M25 395Q26 405 26 408T29 416T35 423T48 431H145V481L146 532Q154 547 161 550T184 554H189Q218 554 227 534Q229 529 229 480V431H405Q406 430 411 427T418 422T422 416T426 407T427 393Q427 387 427 382T424 374T421 368T417 363T413 360T408 358L405 356L317 355H229V249Q229 237 229 214T228 179Q228 126 241 98T295 70Q354 70 365 149Q366 167 375 174Q383 182 407 182H415Q438 182 446 166Q448 161 448 148Q448 84 398 39T282 -6Q226 -6 189 29T146 128Q145 134 145 247V355H96H72Q45 355 35 362T25 395Z"></path><path id="MJX-17-TEX-M-1D691" d="M4 573Q4 596 15 603T52 611H90H124Q146 611 155 608T171 591Q173 586 173 489Q173 394 175 394L186 402Q197 410 219 420T269 434Q278 436 306 436Q343 436 371 423Q411 402 423 365T436 265Q436 257 436 239T435 211V198V76H498Q512 67 516 60T520 38Q520 9 498 1H308Q286 10 286 32V38V46Q286 65 303 73Q309 76 329 76H351V188Q351 204 351 230T352 266Q352 321 341 341T288 361Q253 361 222 341T176 274L174 264L173 170V76H236Q250 67 254 60T258 38Q258 9 236 1H27Q4 8 4 38Q4 53 8 60T27 76H89V535H58L27 536Q4 543 4 573Z"></path><path id="MJX-17-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-17-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-17-TEX-S4-23AB" d="M170 875Q170 892 172 895T189 899H194H211L222 893Q345 826 420 715T503 476Q504 467 504 230Q504 51 504 21T499 -9H498Q496 -10 444 -10Q402 -10 394 -9T385 -4Q384 -2 384 240V311V366Q384 469 380 513T358 609Q342 657 319 698T271 767T227 812T189 843T171 856T170 875Z"></path><path id="MJX-17-TEX-S4-23AD" d="M384 -239V-57Q384 4 389 9Q391 10 455 10Q496 10 498 9Q501 8 502 5Q504 -5 504 -230Q504 -261 504 -311T505 -381Q505 -486 492 -551T435 -691Q357 -820 222 -893L211 -899H195Q176 -899 173 -896T170 -874Q170 -858 171 -855T184 -846Q262 -793 312 -709T378 -525Q378 -524 379 -522Q383 -493 384 -351Q384 -345 384 -334Q384 -276 384 -239Z"></path><path id="MJX-17-TEX-S4-23AC" d="M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 925V782Q504 676 511 616T546 490Q563 446 587 408T633 345T674 304T705 278T717 268Q718 267 718 250T717 232Q717 231 697 216T648 169T588 93T534 -24T505 -179Q504 -191 504 -425Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -424Q384 -191 385 -182Q394 -49 463 61T645 241L659 250L645 259Q539 325 467 434T385 682Q384 692 384 873Q384 1153 385 1155L389 1159Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><use data-c="23A7" xlink:href="#MJX-17-TEX-S4-23A7" transform="translate(0,1151)"></use><use data-c="23A9" xlink:href="#MJX-17-TEX-S4-23A9" transform="translate(0,-651)"></use><use data-c="23A8" xlink:href="#MJX-17-TEX-S4-23A8" transform="translate(0,0)"></use><svg width="889" height="181" y="1060" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-17-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg><svg width="889" height="181" y="-741" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-17-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg></g><g data-mml-node="mstyle" transform="translate(889,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mtable" transform="translate(1167,0)"><g data-mml-node="mtr" transform="translate(0,1300)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-17-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-17-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-17-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-17-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-17-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-17-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-17-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="32" xlink:href="#MJX-17-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-17-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(4322.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4600.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4878.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5156.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5434.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5712.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5990.7,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(6268.7,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-17-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-17-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-17-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-17-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-17-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-17-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-17-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="32" xlink:href="#MJX-17-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-17-TEX-N-29"></use></g></g><g data-mml-node="mtd" transform="translate(12591.3,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-17-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-17-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-17-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-17-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-17-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-17-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-17-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-17-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-17-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(4322.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4600.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4878.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5156.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5434.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5712.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5990.7,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(18860,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-17-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-17-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-17-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-17-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-17-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="31" xlink:href="#MJX-17-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-17-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-17-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-17-TEX-N-29"></use></g></g></g><g data-mml-node="mtr" transform="translate(0,0)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-17-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-17-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-17-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-17-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-17-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-17-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-17-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-17-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-17-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(4322.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4600.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4878.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5156.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5434.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5712.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5990.7,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(6268.7,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-17-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-17-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-17-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-17-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-17-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-17-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-17-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="33" xlink:href="#MJX-17-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-17-TEX-N-29"></use></g></g><g data-mml-node="mtd" transform="translate(12591.3,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-17-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-17-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-17-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-17-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-17-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="32" xlink:href="#MJX-17-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-17-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-17-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-17-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(4322.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4600.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4878.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5156.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5434.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5712.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5990.7,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(18860,0)"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-1300)"><g data-mml-node="mtd"><g data-mml-node="mtext"><use data-c="1D68E" xlink:href="#MJX-17-TEX-M-1D68E"></use><use data-c="1D68D" xlink:href="#MJX-17-TEX-M-1D68D" transform="translate(525,0)"></use><use data-c="1D690" xlink:href="#MJX-17-TEX-M-1D690" transform="translate(1050,0)"></use><use data-c="1D68E" xlink:href="#MJX-17-TEX-M-1D68E" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-17-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="33" xlink:href="#MJX-17-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-17-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-17-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-17-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(4322.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4600.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4878.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5156.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5434.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5712.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(5990.7,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(6268.7,0)"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-17-TEX-M-1D699"></use><use data-c="1D68A" xlink:href="#MJX-17-TEX-M-1D68A" transform="translate(525,0)"></use><use data-c="1D69D" xlink:href="#MJX-17-TEX-M-1D69D" transform="translate(1050,0)"></use><use data-c="1D691" xlink:href="#MJX-17-TEX-M-1D691" transform="translate(1575,0)"></use></g><g data-mml-node="mo" transform="translate(2100,0)"><use data-c="28" xlink:href="#MJX-17-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2489,0)"><use data-c="33" xlink:href="#MJX-17-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(2989,0)"><use data-c="2C" xlink:href="#MJX-17-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(3433.7,0)"><use data-c="34" xlink:href="#MJX-17-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(3933.7,0)"><use data-c="29" xlink:href="#MJX-17-TEX-N-29"></use></g></g><g data-mml-node="mtd" transform="translate(16636,0)"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(278,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(556,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(834,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(1112,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(1390,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(1668,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(1946,0)"><g data-mml-node="mspace"></g></g></g><g data-mml-node="mtd" transform="translate(18860,0)"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g></g></g></g><g data-mml-node="mstyle" transform="translate(24349.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(24627.7,0)"><use data-c="23AB" xlink:href="#MJX-17-TEX-S4-23AB" transform="translate(0,1151)"></use><use data-c="23AD" xlink:href="#MJX-17-TEX-S4-23AD" transform="translate(0,-651)"></use><use data-c="23AC" xlink:href="#MJX-17-TEX-S4-23AC" transform="translate(0,0)"></use><svg width="889" height="181" y="1060" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-17-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg><svg width="889" height="181" y="-741" x="0" viewBox="0 31.9 889 181"><use data-c="23AA" xlink:href="#MJX-17-TEX-S4-23AA" transform="scale(1,0.89)"></use></svg></g></g></g></g></svg></mjx-container>
<p>And now the program is finished, because execution of either rule will not
change the database. Notice how we have not only computed that there is a path
from vertex 1 to vertex 4, as expected, but also computed whether there is a
path between every pair of vertices. You can see <a href="https://egraphs-good.github.io/egglog/?example=path">this program in
action</a> in Egglog, an
extension of Datalog.</p>
<p>This program is also easy to augment. For example, if we wanted to support
undirected transitive closure, that would be as simple as adding one extra
rule, which says that there is a path from <mjx-container jax="SVG"><svg style="vertical-align:-0.023ex" xmlns="http://www.w3.org/2000/svg" width="1.197ex" height="1.02ex" role="img" focusable="false" viewBox="0 -441 529 451" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-18-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-18-TEX-I-1D44E"></use></g></g></g></svg></mjx-container> to <mjx-container jax="SVG"><svg style="vertical-align:-0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-19-TEX-I-1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D44F" xlink:href="#MJX-19-TEX-I-1D44F"></use></g></g></g></svg></mjx-container> if there is a path from
<mjx-container jax="SVG"><svg style="vertical-align:-0.025ex" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-20-TEX-I-1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D44F" xlink:href="#MJX-20-TEX-I-1D44F"></use></g></g></g></svg></mjx-container> to <mjx-container jax="SVG"><svg style="vertical-align:-0.023ex" xmlns="http://www.w3.org/2000/svg" width="1.197ex" height="1.02ex" role="img" focusable="false" viewBox="0 -441 529 451" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-21-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-21-TEX-I-1D44E"></use></g></g></g></svg></mjx-container>:</p>
<pre tabindex="0"><code><span><span>path</span><span>(</span><span>a</span><span>, </span><span>b</span><span>) </span><span>:-</span><span> path(</span><span>b</span><span>, </span><span>a</span><span>)</span><span>.</span></span></code></pre>
<p>You can express much more powerful programs in Egglog (and Datalog in general)
than just transitive closure on a graph. For example, Egglog also supports
algebraic data types, which means the path relation can be annotated <a href="https://egraphs-good.github.io/egglog/?example=pathproof">with a
âproofâ of the path</a>.
If the weights of each edge are given (<code>edge(a, b, w)</code>), then Egglog can also
compute shortest paths; see <a href="https://arxiv.org/pdf/2304.04332.pdf#page=6">page 6 of the Egglog paper for an
example</a>.</p>
<p>In fact, in recent years there has been a trend to use Datalog to compute
<a href="https://en.wikipedia.org/wiki/Program_analysis">program analyses</a>. This is
because most program analysis algorithms involve traversing program graphs.
These traversals are often mutually recursive: for example, in order to
determine whether a variable points to an object, a program needs to traverse
the control flow graphâbut in order to traverse the control flow graph, an
analysis needs to resolve virtual methods, which requires points-to analysis!
Datalog makes it much easier to express complex, mutually recursive graph
algorithms in a declarative manner.</p>
<h2 id="performance"><a href="#performance"></a><span>Performance</span></h2>
<p>What about performance? Surely, a graph traversal algorithm hand-written in
Rust would beat a database engine in raw speed? You might be surprised. When
program analyses have been rewritten to use Datalog, the Datalog
implementations run much faster.</p>
<p><a href="https://dl.acm.org/doi/10.1145/1639949.1640108">Doop</a>, a points-to analysis
framework written in Datalog, performed analyses about an order of magnitude
faster than predecessors written in Java (which additionally used sophisticated
techniques like <a href="https://en.wikipedia.org/wiki/Binary_decision_diagram">binary decision
diagrams</a>). More
recently, <a href="https://arxiv.org/abs/2304.04332">Egglog</a> is about an order of
magnitude faster at equality saturation compared to its predecessor Egg, which
was handwritten in Rust.</p>
<p>How can database engines be so fast? First, the execution model of the above
Datalog program was simplified for clarity. In practice, there are techniques
make Datalog run much faster than the ânaÃ¯veâ execution presented above. The
big ones are <a href="https://pages.cs.wisc.edu/~paris/cs838-s16/lecture-notes/lecture8.pdf#page=2">semi-naÃ¯ve
evaluation</a>
and <a href="https://dl.acm.org/doi/abs/10.1145/1836089.1836094">the demand
transformation</a>/<a href="https://dl.acm.org/doi/10.1145/28659.28689">magic
sets</a>.</p>
<p>Second, (as Wayne observed) the most efficient representation of a graph and
the most efficient algorithms to traverse that graph depends how the graph is
structured. This type of data-dependent optimization is exactly what databases
are best at. There have been decades and decades of research in database
systems on how to best represent datasets ([un]clustered indexes, efficient
in-memory data structures) and queries on those datasets (join ordering, types
of joins).</p>
<p>These correspond decently well to efficient representations of a graph: for
example, an adjacency list is essentially a database index on the edge
relation! If your edge relation is small enough, itâs reasonable for a database
engine to join on it using (hash)-joins and an in-memory index. This would be
essentially the same as a normal in-memory graph traversal in an imperative
languageâexcept the database join would probably be much better optimized.</p>
<p>If a graph is huge but sparse, a database could choose to merge-join relations,
which has high throughput because of its predictable memory and disk access
patterns. If itâs huge but dense, it could possibly encode joins as <a href="https://arxiv.org/abs/2311.02206">matrix
multiplications on a GPUâ¦?</a> And there are
all sorts of advanced join techniques (worst case optimal joins:
<a href="https://berkeley-cs294-248.github.io/lectures/hung-ngo-wcoj.pdf#page=22">VAAT</a>,
<a href="https://berkeley-cs294-248.github.io/lectures/hung-ngo-wcoj.pdf#page=45">IAAT</a>)
that would perform even better on certain graphs.</p>
<p>Thatâs not to mention that sophisticated database engines can adapt their
storage and query strategies as data changes over time. If your graph starts
out sparse but gets denser over time, a database system can continuously
collect statistics on your graph and switch to a better representation when
appropriate. When everything works properly, this requires no extra work from
the programmer. (And often databases offer tuning knobs if the chosen
representation or join ordering is not appropriate.)</p>
<p>That said, there are still a few performance challenges for Datalog. First, a
lot of the databases that support such sophisticated query optimization and
fancy join algorithms are not open source, which poses a barrier for widespread
adoption. Second, a major assumption of Datalogâs evaluation is that the
database must grow monotonicallyâthat is, it never âdeletesâ a fact. This
poses challenges for memory constrained systems (e.g. <a href="https://www.hillelwayne.com/post/graph-types/#:~:text=Everyone%20I%20talked,of%20a%20thousand.">traversing a huge
filesystem, or searching over trillions of
vertices</a>)
but in principle these problems are likely solvable with more research.</p>
<h2 id="wonderful-except-for-the-writing-datalog-part"><a href="#wonderful-except-for-the-writing-datalog-part"></a><span>Wonderful! Except for the âwriting Datalogâ part.</span></h2>
<p>If Datalog is so great, why hasnât it seen more adoption?</p>
<p>The short answer is that Datalog is relatively esoteric outside of academia
and some industry applications and, as a result, is not a great language from a
âsoftware engineeringâ perspective. It is hard for programmers accustomed to
imperative code to write Datalog programs, and large Datalog programs can be
hard to write and understand.</p>
<p>Fortunately, in recent years, there has been research in the area of how to
make Datalog easier to use in everyday languages. The <a href="https://flix.dev/">Flix</a>
language was originally created as an <a href="https://dl.acm.org/doi/10.1145/2980983.2908096">extension of Datalog to support lattices
for program analysis</a> and
nowadays resembles an imperative language that also <a href="https://doc.flix.dev/fixpoints.html">natively supports Datalog
constraints and fixpoint computation</a>. The
advantage of âmeldingâ Datalog with a traditional programming language is that
you can express all the graph traversal/fixpoint algorithms in Datalog with
hopefully seamless interop with traditional programming.</p>
<p>Another research paper, <a href="https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2022.7">Functional Programming with Datalog
(2022)</a>,
explored a different approach to integrate Datalog into a traditional language:
instead of embedding Datalog into a traditional language, the authors compile a
(simple) functional programming language <em>into</em> Datalog. The technique is a bit
wild; at a high level, they (ab)use the demand transformation to âcontrolâ the
flow of Datalog evaluation (as traditionally Datalog rules can evaluate in any
order, but functional languages usually have an evaluation order defined by
control flow).</p>
<p>And there are other papers that I havenât mentioned
(<a href="https://arxiv.org/abs/2211.11573">Slog</a>) but if I keep listing prior work,
Iâd just be repeating the entire <a href="https://inst.eecs.berkeley.edu/~cs294-260/sp24/">reading list of the Declarative Program
Analysis and Optimization class being offered at Berkeley this
semester</a>, so Iâll stop.</p>
<p>The point of all of this is: I think it is very possible that some future
(mainstream?) programming language will have serious support for Datalog. And
this isnât just because Datalog makes recursive graph traversals easy to
expressâin recent years there has also been <a href="https://arxiv.org/abs/2203.16684">a lot of exciting research on
incremental view maintenance</a> in database
systems. Imagine writing a complex graph traversal (or some other reasonably
incrementalizable algorithm) and getting efficient incremental updates <em>for
free</em>.</p>
<p>In summary, the data model for graphsârelations, and the relational
algebraâwas indeed invented in the â70s. But recently there have been exciting
developments in the field: the adoption of Datalog by the program analysis
community, recent advancements in join algorithms
(<a href="https://dl.acm.org/doi/10.1145/3180143">WCOJ</a>), a simple framework for
incremental view maintenance (<a href="https://arxiv.org/abs/2203.16684">DBSP</a>), and in
general, a renewed interest in Datalog. The database overlords have shown me
the light, and the light says that Datalog go brrr. <!--?xml version="1.0" encoding="UTF-8"?--><svg xmlns="http://www.w3.org/2000/svg" width="151.989" height="147.156" viewBox="0 0 151.989 147.156"><path d="m.511,32.378c4.793,16.333,7.546,33.113,10.114,49.913,2.616,17.113,5.188,34.232,7.737,51.355.895,6.015,8.489,9.328,13.839,7.857,6.442-1.77,8.756-7.806,7.857-13.839-2.549-17.123-5.12-34.243-7.737-51.355-2.569-16.8-5.321-33.579-10.114-49.913C18.138,12.532-3.582,18.433.511,32.378h0Z" style="fill:#05181c; stroke-width:0px;"></path><path d="m41.712,34.804c13.703-6.91,28.878-10.135,44.102-11.339,8.173-.646,16.381-.858,24.577-.913,5.637-.038,12.837-.294,16.898,3.749,3.904,3.887,1.948,12.861,1.44,18.005-.847,8.579-2.808,17.042-4.536,25.475-3.654,17.832-6.623,35.835-7.655,54.027-.344,6.072,5.417,11.25,11.25,11.25,6.378,0,10.905-5.159,11.25-11.25,1.142-20.151,5.351-39.632,9.149-59.393,3.488-18.146,9.166-43.099-7.706-56.315C132.856,2.128,123.427.224,113.909.044c-9.341-.177-18.783.185-28.095.921-19.385,1.532-38.015,5.615-55.458,14.41-5.424,2.735-6.968,10.38-4.036,15.392,3.227,5.518,9.948,6.781,15.392,4.036h0Z" style="fill:#05181c; stroke-width:0px;"></path><path d="m50.093,146.789c10.356-2.523,20.851-4.449,31.444-5.65,5.33-.605,10.675-1.079,16.026-1.45,5.182-.359,10.77-1.215,15.942-.709l-7.955-3.295.552.468c-.964-3.649-1.929-7.297-2.893-10.946l-.155.393,7.857-7.857-.44.112,12.705,5.17-.16-.274c-7.321-12.483-26.776-1.173-19.428,11.356l.16.274c2.557,4.361,7.862,6.405,12.705,5.17,4.462-1.138,6.846-4.288,8.452-8.363,1.341-3.403-.138-8.609-2.893-10.946-5.619-4.765-11.906-3.793-18.779-3.408-6.617.371-13.226.886-19.815,1.596-13.229,1.424-26.375,3.511-39.306,6.662-14.062,3.426-8.107,25.129,5.981,21.696h0Z" style="fill:#05181c; stroke-width:0px;"></path></svg>
</p>
 </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Microsoft is ending support for the Windows Subsystem for Android (WSA) (289 pts)]]></title>
            <link>https://learn.microsoft.com/en-us/windows/android/wsa/</link>
            <guid>39606464</guid>
            <pubDate>Tue, 05 Mar 2024 17:22:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://learn.microsoft.com/en-us/windows/android/wsa/">https://learn.microsoft.com/en-us/windows/android/wsa/</a>, See on <a href="https://news.ycombinator.com/item?id=39606464">Hacker News</a></p>
<div id="readability-page-1" class="page">
	<div>
		<a href="#main" tabindex="1">Skip to main content</a>

		

		<div id="unsupported-browser" hidden="">
				<p>This browser is no longer supported.</p>
				<p>Upgrade to Microsoft Edge to take advantage of the latest features, security updates, and technical support.</p>
				
			</div>
		<!-- liquid-tag banners global -->

		<!-- site header -->
		<header id="ms--site-header" data-test-id="site-header-wrapper" role="banner" itemscope="itemscope" itemtype="http://schema.org/Organization"></header>

		


			

		
	</div>

	<div data-bi-name="body">


					<div id="main-column">

						<main id="main" role="main" data-bi-name="content" lang="en-us" dir="ltr">
							<!-- article-header -->
							
							<!-- end article-header -->


							

							<!-- end mobile-contents button  -->

							<div>


								<h2 id="windows-subsystem-for-android">Windows Subsystem for Androidâ¢ï¸</h2>


									<div>
											<ul data-bi-name="page info" lang="en-us" dir="ltr">
														<li>
Article														</li>
															<li>
																<time data-article-date="" aria-label="Article review date" datetime="2023-08-28T20:21:00Z" data-article-date-source="calculated">08/28/2023</time>
															</li>
														<li>
															
														</li>
											</ul>
										</div>

									

										<nav id="center-doc-outline" data-bi-name="intopic toc" role="navigation" aria-label="In this article">
											<h2 id="ms--in-this-article">In this article</h2>
										</nav>

								<!-- <content> -->
									<p>Windows Subsystem for Androidâ¢ï¸ enables your Windows 11 device to run Android applications that are available in the Amazon Appstore. Android is a trademark of Google LLC. If you're a developer interested in targeting Windows desktop devices and optimizing for the Windows operating system, this guide is for you.</p>
<div>
<p>Important</p>
<p>Microsoft is ending support for the Windows Subsystem for Androidâ¢ï¸ (WSA). As a result, the Amazon Appstore on Windows and all applications and games dependent on WSA will no longer be supported beginning <strong>March 5, 2025</strong>. Until then, technical support will remain available to customers.<br>
Customers that have installed the Amazon Appstore or Android apps prior to March 5, 2024, will continue to have access to those apps through the deprecation date of March 5, 2025. Please reach out to our support team for further questions at <a href="https://support.microsoft.com/" data-linktype="external">support.microsoft.com</a>.
We are grateful for the support of our developer community and remain committed to listening to feedback as we evolve experiences.</p>
</div>
<p>To make your Android app available on Windows 11 devices, you must:</p>
<ul>
<li><a href="https://developer.amazon.com/apps-and-games/appstore-on-windows-11" data-linktype="external">Submit your app to the Amazon Appstore</a>.</li>
</ul>
<p>For more information or support:</p>
<ul>
<li><a href="https://m.amazonappservices.com/developer-interest" data-linktype="external">Sign up for updates to the Amazon Appstore on Windows program</a>.</li>
<li><a href="https://developer.amazon.com/apps-and-games/appstore-on-windows-11" data-linktype="external">Visit the Amazon developer support portal</a> where you can find articles, forums, FAQs, or reach out for direct support via the Appstore "Contact us" page once you set up an Amazon Developer account.</li>
</ul>
<p>This guide can help you test and debug your Android app on Windows:</p>
<ul>
<li><a href="#set-up-your-development-environment" data-linktype="self-bookmark">Set up your development environment</a>, including <a href="#prerequisites" data-linktype="self-bookmark">prerequisites</a>, <a href="#install-the-amazon-appstore" data-linktype="self-bookmark">installing the Amazon Appstore</a>, and using the <a href="#windows-subsystem-for-android-settings" data-linktype="self-bookmark">Settings</a>.</li>
<li><a href="#test-and-debug" data-linktype="self-bookmark">Test and debug</a> your app on a Windows 11 device.</li>
<li>Handle input compatibility considerations for Windows devices, such as: <a href="#keyboard-input" data-linktype="self-bookmark">keyboard input</a>, <a href="#mouse-input" data-linktype="self-bookmark">mouse input</a>, and <a href="#window-management-and-resizing" data-linktype="self-bookmark">window management and resizing</a>.</li>
<li><a href="#troubleshooting-issues" data-linktype="self-bookmark">Troubleshoot and find answers</a>.</li>
</ul>
<h2 id="developer-github">Developer GitHub</h2>
<p>Want to learn more about Windows Subsystem for Androidâ¢ï¸ roadmap, discuss developer issues and file bugs or feature requests with the subsystem team? Visit the <a href="https://github.com/microsoft/WSA" data-linktype="external">Windows Subsystem for Androidâ¢ï¸ Developers GitHub</a>.</p>
<h2 id="preview-program">Preview Program</h2>
<p>The Windows Subsystem for Androidâ¢ï¸ Preview Program allows users to receive early-preview builds of the Windows Subsystem for Androidâ¢ and Amazon Appstore on Windows. For more details, visit the <a href="https://learn.microsoft.com/en-us/windows/android/wsa/preview-program" data-linktype="relative-path">Preview Program page</a>.</p>
<h2 id="set-up-your-development-environment">Set up your development environment</h2>
<p>To test your Android app in the Windows desktop environment, a bit of set up will be required.</p>
<h3 id="prerequisites">Prerequisites</h3>
<p>Windows Subsystem for Androidâ¢ï¸ is available on Windows 11. Your device must meet specific requirements: <a href="https://support.microsoft.com/windows/f8d0abb5-44ad-47d8-b9fb-ad6b1459ff6c" data-linktype="external">Device requirements</a>.</p>
<h3 id="install-the-amazon-appstore">Install the Amazon Appstore</h3>
<p>The Microsoft Store will automatically install Windows Subsystem for Androidâ¢ï¸ silently in the background when either of the two following user actions are taken:</p>
<ol>
<li>Install the <a href="https://www.microsoft.com/store/productId/9NJHK44TTKSX" data-linktype="external">Amazon Appstore from the Microsoft Store</a>. Selecting <strong>Get</strong> will begin the installation of the app.</li>
<li>Install an Android app from the Microsoft Store for the first time, which will also install the Amazon Appstore.</li>
</ol>
<p>The <strong>Amazon Appstore</strong> app will then appear in the Windows 11 Start menu and be available on search, offering a catalogue of Android apps. The <strong>Windows Subsystem for Androidâ¢ï¸</strong> app, which lets you control mobile app settings and features, will also appear in the Start menu.</p>
<p><img src="https://learn.microsoft.com/en-us/windows/images/wsa-amazon-appstore-get.png" alt="Screenshot of Microsoft Store page featuring the Get button on the Amazon App Store" data-linktype="relative-path"></p>
<div>
<p>Note</p>
<p>The Amazon Appstore on Windows (a requirement for running Android apps on Windows 11) is available in <a href="https://support.microsoft.com/windows/countries-and-regions-that-support-amazon-appstore-on-windows-d8dd17c7-5994-4187-9527-ddb076f9493e?preview=true" data-linktype="external">select regions</a>.</p>
</div>
<h2 id="windows-subsystem-for-android-settings">Windows Subsystem for Androidâ¢ï¸ Settings</h2>
<p>To modify Windows Subsystem for Androidâ¢ï¸ settings, go to: <strong>Start &gt; All Apps &gt; Windows Subsystem for Androidâ¢ï¸</strong>. Learn more about specific settings app features: <a href="https://support.microsoft.com/windows/000f97e8-8c20-490e-9ef4-cd90d903f847" data-linktype="external">Manage settings for mobile apps on Windows</a>.</p>
<p><img src="https://learn.microsoft.com/en-us/windows/images/wsa-settings.png" alt="Screenshot of Latte app settings" data-linktype="relative-path"></p>
<h2 id="test-and-debug">Test and debug</h2>
<p>To test and debug your app on a Windows 11 device using the Windows Subsystem for Androidâ¢ï¸ the following set up steps are required.</p>
<h3 id="enable-developer-mode-in-windows-settings">Enable developer mode in Windows Settings</h3>
<p>You must first enable developer mode. Open the <strong><a href="#windows-subsystem-for-android-settings" data-linktype="self-bookmark">Windows Subsystem for Androidâ¢ï¸</a></strong> settings. Once open, enable <strong>Developer mode</strong> under <strong>Advanced settings</strong>.</p>
<h3 id="connect-to-the-windows-subsystem-for-android-for-debugging">Connect to the Windows Subsystem for Androidâ¢ï¸ for debugging</h3>
<p>To connect to the Windows Subsystem for Androidâ¢ï¸ VM for debugging:</p>
<ol>
<li><p>Launch an Android app that was installed using the Amazon Appstore.</p>
</li>
<li><p>You can connect using adb connect with the following command (you must have <a href="https://developer.android.com/studio/command-line/adb" data-linktype="external">adb installed</a>):</p>
<pre><code>adb connect 127.0.0.1:58526
</code></pre>
</li>
</ol>
<h3 id="connect-to-a-test-device">Connect to a test device</h3>
<p>To connect to a test device (with Windows Subsystem for Androidâ¢ï¸ installed) on the same network from Windows/Mac:</p>
<ol>
<li><p>On the test device (where Windows Subsystem for Androidâ¢ï¸ is installed) open a PowerShell window and identify the IP address of the test device by running the command:</p>
<pre><code>ipconfig
</code></pre>
</li>
<li><p>Using the debugging device terminal where Android Studio and the Android SDK is installed (Mac/Windows), enter the command:</p>
<pre><code>adb connect &lt;TEST DEVICE IP ADDRESS&gt;:58526
</code></pre>
</li>
</ol>
<p>The <code>&lt;TEST DEVICE IP ADDRESS&gt;</code> can be found in the output of "ipconfig" from the test device. You can also deploy and debug apps from Android Studio.</p>
<p>To use Android Debug Bridge (ADB) to connect your development workstation directly to your Android device so you can install packages and evaluate changes, see <a href="https://source.android.com/setup/build/adb" data-linktype="external">Android Debug Bridge in the Android Open Source Project docs</a>.</p>
<h3 id="debug-your-app">Debug your app</h3>
<p>While apps should be installed using the Amazon Appstore, debugging an Android app on a Windows device is possible using an APK (Android application package) and adb (Android Debug Bridge).</p>
<p>To debug an APK using adb:</p>
<ol>
<li><p>Follow the steps to connect to the Windows Subsystem for Androidâ¢ï¸ VM above.</p>
</li>
<li><p>Install the APK using the adb install command: <code>adb install app-debug.apk</code></p>
<p>Expected Output:</p>
<pre><code>Performing Streamed Install
Success
</code></pre>
</li>
<li><p>A successful âapp installedâ notification  will appear in the Windows notification menu and the app will launch once selected.</p>
</li>
</ol>
<h3 id="building-universal-apks">Building Universal APKs</h3>
<p>Windows Subsystem for Androidâ¢ï¸ utilizes Intel Bridge Technology to enable Arm applications on x86 based processors. Arm applications will run on Arm-based processors natively. The emulation layer will induce a performance overhead â for optimal performance, submit your application for both the x86-64 and Arm64 architectures.</p>
<h2 id="input-compatibility-considerations-for-windows-devices">Input compatibility considerations for Windows devices</h2>
<p>There are a few unique input behaviors to consider that will likely require updates to your Android app code, designed for handheld devices, to be compatible when running on a Windows desktop device via the Amazon Appstore.</p>
<h3 id="keyboard-input">Keyboard input</h3>
<p>For text input fields handled by an on-screen virtual keyboard input method (or IME), such as <code>EditText</code>, apps should behave as expected. (<a href="https://developer.android.com/reference/android/widget/EditText" data-linktype="external">EditText class in the Android docs</a>).</p>
<p>For keystrokes that cannot be anticipated by the framework, apps will need to handle the behavior themselves. If this is already implemented in-app, no extra work is required.</p>
<p>As an example, some games may already support movement facilitated via keyboard, through <code>w</code> <code>a</code> <code>s</code> <code>d</code> keys, alongside touch input.</p>
<p>The following are keyboard inputs that developers should consider code updates for when building for Windows 11 devices:</p>
<ul>
<li>Enter Key</li>
<li>Arrow-key and Tab-key Navigation</li>
<li>Change Selected Item Highlight Color</li>
<li>Ctrl-based Shortcuts</li>
</ul>
<p>Learn more about how to optimize for these keyboard input scenarios on desktop devices by following the Android documentation:</p>
<ul>
<li><a href="https://developer.android.com/topic/arc/input-compatibility" data-linktype="external">Input compatibility guide in the Android docs</a></li>
<li><a href="https://developer.android.com/training/keyboard-input" data-linktype="external">Handle keyboard input guide in the Android docs</a></li>
<li><a href="https://developer.android.com/training/gestures" data-linktype="external">Use touch gestures guide in the Android docs</a></li>
</ul>
<h3 id="mouse-input">Mouse input</h3>
<p>Developers should consider updating code for the following mouse inputs when building for Windows devices:</p>
<ul>
<li>Right Click</li>
<li>Tooltips / Hover Text</li>
<li>Hover Effects</li>
<li>Mouse Scroll Wheel Action</li>
<li>Drag and Drop</li>
</ul>
<p>Mouse input, similar to keyboard input, must follow the official Android app guidelines. This means using the <code>InputDevice</code> class paired with the <code>SOURCE_MOUSE</code> constant. Learn more about how to optimize for these mouse input scenarios on desktop devices by following the Android documentation:</p>
<ul>
<li><a href="https://developer.android.com/topic/arc/input-compatibility" data-linktype="external">Input compatibility guide in the Android docs</a></li>
<li><a href="https://developer.android.com/reference/android/view/InputDevice" data-linktype="external">InputDevice reference in the Android docs</a></li>
<li><a href="https://developer.android.com/reference/android/view/InputDevice#SOURCE_MOUSE" data-linktype="external">SOURCE_MOUSE reference in the Android docs</a></li>
</ul>
<h2 id="window-management-and-resizing">Window management and resizing</h2>
<p>Unlike traditional mobile form factors, Android apps running on Windows 11 can be freely resized, should be responsive in their resizing, and can be snapped using Windows actions/gestures.</p>
<h3 id="minimum-screen-requirement">Minimum screen requirement</h3>
<p>Windows 11 enforces a minimum screen requirement of 720p resolution (1280x720) with a &gt;9â screen.</p>
<h3 id="letter--pillar-boxing">Letter &amp; pillar boxing</h3>
<p>When the aspect ratio of a window size does not align between the device screen sizes that window is being displayed on, the result may be Letterboxing (the window is wider than it is high, or horizontally longer) or Pillarboxing (the window is more narrow than it is wide, or vertically longer). The result is bars being placed on the sides of the window in order to center it. These bars may be light- or dark-themed depending on the system settings selected. This will only occur as necessary when the Android app is snapped or maximized, allowing Android apps to take advantage of the rich snapping features in Windows and integrate into the windowing model.</p>
<p><img src="https://learn.microsoft.com/en-us/windows/images/letterboxing.png" alt="Letterboxing and Pillarboxing example showing blank bars that center the window" data-linktype="relative-path"></p>
<h3 id="additional-resizing-considerations">Additional resizing considerations</h3>
<p>The following should also be considered when updating an Android app to run on a Windows 11 device with respect to window management and resizing:</p>
<ul>
<li>Initial launch size</li>
<li>Window dimensions
<ul>
<li>Content bounds</li>
<li>Free form resizing</li>
</ul>
</li>
<li>Screen Orientation</li>
</ul>
<p>Learn more about how to optimize for window resizing scenarios on desktop devices by following the <a href="https://developer.android.com/topic/arc/window-management" data-linktype="external">Window Management guide in the Android docs</a>.</p>
<h2 id="application-lifecycle-events">Application Lifecycle Events</h2>
<p>Developing Android applications for a multi-window environment has an impact on the lifecycle events that you choose to utilize in your application. While overriding the <code>onPause</code> event may achieve the results youâd like on a phone or tablet, itâs typically the wrong event to use if youâre changing your appâs UX.</p>
<p>See the <a href="https://developer.android.com/guide/components/activities/activity-lifecycle" data-linktype="external">Android documentation</a> for a description of the lifecycle events. More often than not, youâll want to use the <code>onStop</code> event and not the <code>onPause</code> or <code>onUserLeaveHint</code> events. In fact, many multi-window Android implementations do not deliver the <code>onUserLeaveHint</code> notification, and thus any business critical logic that might be in that event handler will not be called on these platforms, including Windows Subsystem for Androidâ¢ï¸.</p>
<h2 id="vm-lifecycle-considerations">VM lifecycle considerations</h2>
<p>Windows Subsystem for Androidâ¢ï¸ utilizes a virtual machine (VM) which provides compatibility with the <a href="https://source.android.com/" data-linktype="external">AOSP framework</a> and devices like keyboards, mice, touch, pen, etc.</p>
<p>There are three possible states for the VM running apps with Windows Subsystem for Androidâ¢ï¸:</p>
<ol>
<li>Running</li>
<li>Lightweight Doze: Activated after no app activity for 3 minutes. Deactivated by user activity or an app notification.</li>
<li>Not Running: Activated after no app activity for 7 minutes.</li>
</ol>
<p>Transitions between these states are triggered by user activity, such as launching or interaction with the Android app or an app notification. Android apps are paused and then stopped when their window is minimized.</p>
<p><img src="https://learn.microsoft.com/en-us/windows/images/wsa-lifecycle.png" alt="VM lifecycle graph showing the running, lightweight doze, and not running" data-linktype="relative-path"></p>
<h3 id="vm-properties">VM Properties</h3>
<p>The properties for the Windows Subsystem for Androidâ¢ï¸ VM are listed below. Hardcoding these values is not recommended as that could cause future incompatibilities.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>Build.MANUFACTURER</td>
<td>Microsoft Corporation</td>
</tr>
<tr>
<td>Build.MODEL</td>
<td>Subsystem for Android(TM)</td>
</tr>
<tr>
<td>Build.VERSION.SDK_INT</td>
<td>32</td>
</tr>
<tr>
<td>Build.BOARD</td>
<td>windows</td>
</tr>
</tbody>
</table>
<h2 id="redirect-to-windows-apps">Redirect to Windows apps</h2>
<p>Windows Subsystem for Androidâ¢ï¸ automatically redirects intents for files and common URI schemes to the corresponding Windows default file/protocol handler (if multiple intent filters match, users see a "Windows default app" option in the chooser dialog). Supported file intents include <a href="https://developer.android.com/reference/android/content/Intent#ACTION_VIEW" data-linktype="external">ACTION_VIEW</a>, <a href="https://developer.android.com/reference/android/content/Intent#ACTION_EDIT" data-linktype="external">ACTION_EDIT</a>, <a href="https://developer.android.com/reference/android/content/Intent#ACTION_SEND" data-linktype="external">ACTION_SEND</a>, and <a href="https://developer.android.com/reference/android/content/Intent#ACTION_SEND_MULTIPLE" data-linktype="external">ACTION_SEND_MULTIPLE</a>, which copy the file to the Windows Downloads folder before opening it. Supported URI intents include <a href="https://developer.android.com/reference/android/content/Intent#ACTION_VIEW" data-linktype="external">ACTION_VIEW</a> for the http/https schemes and <a href="https://developer.android.com/reference/android/content/Intent#ACTION_VIEW" data-linktype="external">ACTION_VIEW</a> and <a href="https://developer.android.com/reference/android/content/Intent#ACTION_SENDTO" data-linktype="external">ACTION_SENDTO</a> for the mailto scheme.</p>
<p>Android apps can also manually redirect to Windows apps using custom URI schemes. Set the intent action to <code>com.microsoft.windows.LAUNCH_URI</code> and add a string extra to the intent named <code>com.microsoft.windows.EXTRA_URI</code> with the custom URI as the value. For example, to launch the Windows Calculator app from an Android app (Java):</p>
<pre><code>Intent intent = new Intent("com.microsoft.windows.LAUNCH_URI");
intent.putExtra("com.microsoft.windows.EXTRA_URI", "ms-calculator:");
 
try {
    startActivity(intent);
} catch (ActivityNotFoundException e) {
    // Not running in Windows Subsystem for Androidâ¢ï¸ (or running on an older build that did not contain this feature).
}
</code></pre>
<h2 id="security">Security</h2>
<p>Both Windows kernel-mode drivers and Windows applications running at medium integrity level (IL) can inspect arbitrary Android containers and Android app memory. There are no plans to add detection for cheats/macro/bot/suspicious behaviors detection in the short-term.</p>
<p>Developers querying <code>getSecurityLevel</code> will get <code>SECURITY_LEVEL_SW_SECURE_CRYPTO</code>. Learn more about <code>getSecurityLevel</code> in the <a href="https://developer.android.com/reference/android/media/MediaDrm#getSecurityLevel(byte%5B%5D)" data-linktype="external">Android API Reference guide</a>.</p>
<h2 id="uninstalling-windows-subsystem-for-android">Uninstalling Windows Subsystem for Androidâ¢ï¸</h2>
<p>You can uninstall the Windows Subsystem for Androidâ¢ï¸, but note that all associated apps will also be uninstalled.</p>
<ul>
<li>Uninstalling the Amazon Appstore will uninstall the Windows Subsystem for Androidâ¢ï¸ and all other Android apps.</li>
<li>Uninstalling an Amazon Appstore app will only uninstall the app (same behavior as Windows apps).</li>
<li>Uninstalling the Windows Subsystem for Androidâ¢ï¸ will uninstall the Amazon Appstore and all Android apps.</li>
</ul>
<h2 id="troubleshooting-issues">Troubleshooting issues</h2>
<p>If you encounter issues specific to the Amazon Appstore on Windows, try the following troubleshooting steps:</p>
<ol>
<li>Select <strong>Windows search</strong> from the Windows task bar.</li>
<li>Search for âAmazon Appstoreâ and right-click on the Amazon Appstore icon.</li>
<li>Select âApp Settingsâ in the dropdown options.</li>
<li>Select âStorage and Cacheâ and click both âClear Storageâ and âClear cacheâ.</li>
<li>Go back and select âForce Stopâ.</li>
<li>Close the Amazon Appstore Settings window.</li>
<li>Relaunch the Amazon Appstore.</li>
</ol>
<p>For further troubleshooting steps relating to the Windows Subsystem for Androidâ¢ï¸ Settings app or to leave feedback using Feedback Hub, see <a href="https://support.microsoft.com/windows/d6062afd-98a1-4018-a7c8-6b3b680a2ea5" data-linktype="external">Troubleshooting and FAQ for mobile apps on Windows</a>.</p>
<p>For any other developer questions and support, use the <a href="https://learn.microsoft.com/en-us/answers/topics/windows-subsystem-for-android.html" data-linktype="absolute-path">Windows Subsystem for Androidâ¢ï¸ tag on Microsoft Q&amp;A</a>.</p>
<h2 id="additional-resources">Additional resources</h2>
<ul>
<li><a href="https://support.microsoft.com/en-us/windows/apps-from-the-amazon-appstore-abed2335-81bf-490a-92e5-fe01b66e5c48" data-linktype="external">Apps from the Amazon Appstore</a></li>
<li><a href="https://support.microsoft.com/windows/97b77924-6df9-4597-8394-15b6e34d1658" data-linktype="external">Accessibility on Windows Subsystem for Androidâ¢ï¸</a></li>
</ul>

							</div>

							
							
							<!-- </content> -->

						</main>




						<!-- recommendations section -->
						<!-- end recommendations section -->

						<!-- feedback section -->
<div data-bi-name="open-source-feedback-section" data-open-source-feedback-section="" hidden="">
				<div>
					<span aria-hidden="true">
						<span></span>
					</span>
					<span>Collaborate with us on GitHub					</span>
				</div>
				<span>
					The source for this content can be found on GitHub, where you can also create and review issues and pull requests. For more information, see <a href="https://learn.microsoft.com/contribute/content/how-to-write-quick-edits">our contributor guide</a>.
				</span>
			</div>
<section data-bi-name="feedback-section">
    <h2 id="feedback">Feedback</h2>

    <div>
		<p id="git-issues-deprecation-notice">
			<span aria-hidden="true">
				<span>
			</span>
			</span>Coming soon: Throughout 2024 we will be phasing out GitHub Issues as the feedback mechanism for content and replacing it with a new feedback system. For more information see: <a href="https://aka.ms/ContentUserFeedback" data-bi-name="content-user-feedback">https://aka.ms/ContentUserFeedback</a>.		</p>

        <p id="send-feedback-about">Submit and view feedback for</p>

        
    </div>

    
</section>
						<!-- end feedback section -->

						<!-- feedback report section -->
						<!-- end feedback report section -->

							

						

					</div>

						<div id="ms--additional-resources" data-bi-name="pageactions" role="complementary" aria-label="Additional resources">
								<h2 id="ms--additional-resources-heading" hidden="">Additional resources</h2>
								
								
								
								<nav id="side-doc-outline" data-bi-name="intopic toc" role="navigation" aria-label="In this article">
									<h3>In this article</h3>
								</nav>
								
							</div>

				</div>
	<!--end of .mainContainer -->

	

	


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to generate uniformly random points on n-spheres and in n-balls (152 pts)]]></title>
            <link>https://extremelearning.com.au/how-to-generate-uniformly-random-points-on-n-spheres-and-n-balls/</link>
            <guid>39606371</guid>
            <pubDate>Tue, 05 Mar 2024 17:14:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://extremelearning.com.au/how-to-generate-uniformly-random-points-on-n-spheres-and-n-balls/">https://extremelearning.com.au/how-to-generate-uniformly-random-points-on-n-spheres-and-n-balls/</a>, See on <a href="https://news.ycombinator.com/item?id=39606371">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-2165"><div><p><span>For many Monte Carlo methods, such as those in graphical computing, it is critical to uniformly sample from $d$-dimensional spheres and balls. This post describes over twenty different methods to uniformly random sample from the (surface of) a $d$-dimensional sphere or the (interior of) a $d$-dimensional ball.</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;First published: 10<em>th March, 2019</em> Last updated:&nbsp; &nbsp; <em>16 April, 2020</em></p><h2><span>Introduction.</span></h2><p>This post gives a comprehensive list of the twenty most frequent and useful methods to uniformly sample from a the surface of a&nbsp; $d$-sphere, and the interior of the $d$-ball.</p><p>Many of them are simple and intuitive; others utilize well-known math methods in sophisticated ways; whilst others can only be described as truly remarkable in their structure. The choice of which one suits your needs will most likely be a balance between code complexity and time efficiency. However, other aspects such as variance reduction may also be of considerable importance.</p><p>It is of course, always possible to use the most generalised versions of these formulae as outlined in methods 19-22 for all $d$, but I specifically list some of the specialised methods for smaller $d$ because they may be more efficient, relevant to your application,&nbsp; and/or amenable to understanding than their&nbsp; more general expressions. Furthermore, many of the methods applicable to the lower dimensions do not have simple or natural generalization.</p><h3>Definition of the $d-$sphere and $d$-ball.</h3><p>Let us recap the standard definitions of spheres and balls in $d$-dimensions.</p><p>A unit $d-$dimensional sphere is defined such that:</p><p>$$ S^d = \left\{&nbsp; &nbsp;x \in \Bbb{R}^{d+1} : \left \lvert x \right \rvert = 1&nbsp; &nbsp; \right\} $$</p><p>And a unit $d-$dimensional ball is defined such that:</p><p>$$ B^d = \left\{&nbsp; &nbsp;x \in \Bbb{R}^{d} : \left \lvert x \right \rvert&nbsp; \leq 1&nbsp; &nbsp; \right\} $$</p><p>So the <span>perimeter of a circle is a 1-sphere</span>, and the <span>interior of the circle (a disk) is a 2-ball</span>.</p><p>And if the earth was perfectly spherical, than the <span>surface of earth would be a 2-sphere</span>, and the <span>interior of&nbsp; the earth would be a 3-ball</span>.</p><p>The way I remember these definitions, is that for both the $d$-sphere and the $d$-ball, the $d$ signifies how many degrees of freedom it has.</p><h3>Uniform Random Sampling</h3><p>In this post, we adopt the convention that â<strong><em>uniform random sampling</em></strong>â, â(<em>continuous) simple random sampling</em>â, and even â<em>uniform sampling</em>â are all fully synonymous. And that for discrete probabilities, this means that all possible elements of $S$ have an equal probability of being selected. For continuous probabilities, this means that the likelihood of an element falling in any subinterval is directly proportional to the length of the subinterval.</p><p>Virtually all computer languages have a built-in function for this concept. For example , $\text{rand}(\cdot)$, that produces a random number that is (pseudo)-randomly drawn from uniform distribution $[0,1)$.</p><h3>Note 1.</h3><p>In contrast to many of my other posts on this blog, we are not talking about quasirandom sampling (aka âevenly distributedâ), we are just talking about âplain old simple vanillaâ uniform random sampling.</p><h3>Note 2.</h3><p>For the coding examples, I generally use readable python code (built on numpy), except for acceptance/rejection methods where I used pseudo-code. The purpose of the code is aimed for clarity and so does not necessarily include language-specific conventions or optimizations. It uses the notation that $x**y$ is equal to $x^y$.</p><p>Although each of them have their strengths and weaknesses, <span>an asterisk (*) indicates methods that I believe are an excellent default option for that section.</span></p><h2><span>Uniformly sampling a 1-sphere (a circle).</span></h2><p>That is, uniformly sampling points on the circumferende of a circle.</p><p><img fetchpriority="high" decoding="async" src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300,h_286/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-S1-300x286.png" alt="" width="300" height="286" srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-S1-300x286.png 300w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_640/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-S1.png 640w" sizes="(max-width: 300px) 100vw, 300px"></p><h3>*Method 1. Polar</h3><p>This should be very clear to everyone, and is the foundation for many of the other methods.</p><pre>theta = 2*PI * random()
x = cos(theta)
y = sin(theta)
</pre><h3>Method 2. Rejection Method</h3><p>A lesser-known method (<a href="http://mathworld.wolfram.com/CirclePointPicking.html">Cook, 1957</a>) that does not directly require trigonometric functions.</p><p>You might notice that the expressions have almost identical structure to Pythagorean triplets!</p><p>(This method is better known when generalised to the 2-sphere.)</p><pre>Select u,v ~ U(-1,1)
d2 = u^2+v^2
If d2 &gt;1 then
    reject and go back to step 1
Else
    x = (u^2-v^2)/d2
    y = (2*u*v)/d2
Return (x,y)
</pre><h3>Method 3. Muller , Marsaglia (âNormalised Gaussiansâ)</h3><p>This method was first proposed by Muller and then Marsaglia and the popularised by Knuth, it is very elegant. It naturally generalizes and remains efficient for higher dimensions.</p><p>Presumably, it is less well-known due to the less obvious (magical?!) relationship between a circle and the Normal Distribution.</p><p>Note that in this version (and its generalizations), the standard deviation does not have to be 1, it just has to be identical for all the random variates. However, in nearly all implementations, a standard error of 1 is picked due to its convenience.</p><p>Also, in the absence of a native function, a simple and common method to draw from a normal distribution is via the Box-Mueller algorithm.</p><pre>u = np.random.normal(0,1)
v = np.random.normal(0,1)
d= (u^2+v^2)**0.5  # notation for sqrt(.)
(x,y) = (u,v)/d
</pre><p>To very briefly understand why this works, consider the function</p><p>$$ f(u,v) = f(\mathbf{z}) = \left( \frac{1}{\sqrt{2\pi}} e^{-\frac{1}{2}u^2} \right) \left( \frac{1}{\sqrt{2\pi}} e^{-\frac{1}{2}v^2} \right) $$</p><p>After some algebra, this simplifies to</p><p>$$ f(u,v) = f(\mathbf{z}) = \left( \frac{1}{(\sqrt{2\pi})^{3/2} }\right) e^{-\frac{1}{2}(u^2+v^2)} =&nbsp; \left( \frac{1}{(\sqrt{2\pi})^{3/2} }\right) e^{-\frac{1}{2}(|\mathbf{z}|^2)}&nbsp; $$</p><p>This illustrates that the probability distribution of $\mathbf{z}$ only depends on its magnitude and not any direction. Thus it must be rotationally invariant (symmetric). And thus, must correspond to a uniform distribution on the circle.</p><p>This argument is not specific to $d=2$ and can be generalized to any $d$.</p><h2><span>Uniformly sampling a 2-ball (disk).</span></h2><p>That is, uniformly sampling points inside a circle.</p><h3>*Method 4. Rejection Method</h3><p>This is probably the most intuitive method, and is quite fast for a 2-ball.</p><p>However, (as discussed later) it generally gets a bad rap, because if you generalize this algorithm to higher dimensions, it can become catastrophically very inefficient.</p><figure id="attachment_2192" aria-describedby="caption-attachment-2192"><img decoding="async" src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300,h_286/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-B2-v2-300x286.png" data-src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300,h_286/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-B2-v2-300x286.png" alt="" width="300" height="286" data-srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-B2-v2-300x286.png 300w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_640/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-B2-v2.png 640w" data-sizes="(max-width: 300px) 100vw, 300px" srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-B2-v2-300x286.png 300w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_640/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-B2-v2.png 640w"><figcaption id="caption-attachment-2192">The rejection method for $B^2$ has a ~ 0.78 acceptance rate.</figcaption></figure><pre>1. Select x,y ~ U(-1,1)
2. If (x^2+y^2 &gt;1) then reject and go to step 1.
3. Return (x,y)</pre><h3>Method 5. Polar + Radial CDF</h3><p>For balls of any dimension, a very common method of uniformly picking from a $d$-ball, is to first select a random directional unit-vector from a $(d-1)$-sphere, and then multiply this vector by a scalar radial multiplicative factor.</p><p>The crucial aspect of this algorithm is the multiplicative factor, $\sqrt{\cdot}$ function. This is intuitively required because area, which corresponds to the cumulative distribution function (CDF), grows according to $r^2$, so we need to apply the inverse of this. See <a href="https://stackoverflow.com/questions/5837572/generate-a-random-point-within-a-circle-uniformly">here</a> for a more visual explanation of this.</p><p>The following method is notably asymmetrical. Geometrically, one variable is used for radial distance and the other for the angular displacement.</p><figure id="attachment_2187" aria-describedby="caption-attachment-2187"><img decoding="async" src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300,h_121/https://extremelearning.com.au/wp-content/uploads/2019/03/Method4-mapping-v2-300x121.jpg" data-src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300,h_121/https://extremelearning.com.au/wp-content/uploads/2019/03/Method4-mapping-v2-300x121.jpg" alt="" width="300" height="121" data-srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300/https://extremelearning.com.au/wp-content/uploads/2019/03/Method4-mapping-v2-300x121.jpg 300w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_768/https://extremelearning.com.au/wp-content/uploads/2019/03/Method4-mapping-v2-768x311.jpg 768w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_1024/https://extremelearning.com.au/wp-content/uploads/2019/03/Method4-mapping-v2-1024x414.jpg 1024w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_1140/https://extremelearning.com.au/wp-content/uploads/2019/03/Method4-mapping-v2-1140x461.jpg 1140w" data-sizes="(max-width: 300px) 100vw, 300px" srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300/https://extremelearning.com.au/wp-content/uploads/2019/03/Method4-mapping-v2-300x121.jpg 300w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_768/https://extremelearning.com.au/wp-content/uploads/2019/03/Method4-mapping-v2-768x311.jpg 768w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_1024/https://extremelearning.com.au/wp-content/uploads/2019/03/Method4-mapping-v2-1024x414.jpg 1024w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_1140/https://extremelearning.com.au/wp-content/uploads/2019/03/Method4-mapping-v2-1140x461.jpg 1140w"><figcaption id="caption-attachment-2187">Figure 5. Polar mapping. Horizontal lines map to concentric circles.</figcaption></figure><pre>u = random()
v = random()
r = u**0.5  # sqrt function
theta = 2* PI *v
x = r*cos(theta)
y = r*sin(theta)
</pre><h3>*Method 6. Concentric Map (Shirley 1997)</h3><p>This variance reduction method&nbsp; <a href="https://pdfs.semanticscholar.org/4322/6a3916a85025acbb3a58c17f6dc0756b35ac.pdf">(Shirley, 1997)</a> is fascinating and motivated by the idea that ideal mappings from the square-based random variate $uv$-space to the coordinate $xy$-space (disks) should be area-preserving, two-way continuous, and with low distortion. By comparing the <a href="http://l2program.co.uk/900/concentric-disk-sampling">figures</a> for method 5 and method 6, it should be clear why this one generally produces better results in (finite) MC methods. Additional visual explanation and analysis of this method is given <a href="http://marc-b-reynolds.github.io/math/2017/01/08/SquareDisc.html">here</a> (which also include some other variations including âsquircleâ, elliptical and approximate equal areas).</p><figure id="attachment_2188" aria-describedby="caption-attachment-2188"><img decoding="async" src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300,h_123/https://extremelearning.com.au/wp-content/uploads/2019/03/Method5-mapping-v2-300x123.jpg" data-src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300,h_123/https://extremelearning.com.au/wp-content/uploads/2019/03/Method5-mapping-v2-300x123.jpg" alt="" width="300" height="123" data-srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300/https://extremelearning.com.au/wp-content/uploads/2019/03/Method5-mapping-v2-300x123.jpg 300w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_768/https://extremelearning.com.au/wp-content/uploads/2019/03/Method5-mapping-v2-768x314.jpg 768w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_1024/https://extremelearning.com.au/wp-content/uploads/2019/03/Method5-mapping-v2-1024x419.jpg 1024w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_1140/https://extremelearning.com.au/wp-content/uploads/2019/03/Method5-mapping-v2-1140x466.jpg 1140w" data-sizes="(max-width: 300px) 100vw, 300px" srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300/https://extremelearning.com.au/wp-content/uploads/2019/03/Method5-mapping-v2-300x123.jpg 300w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_768/https://extremelearning.com.au/wp-content/uploads/2019/03/Method5-mapping-v2-768x314.jpg 768w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_1024/https://extremelearning.com.au/wp-content/uploads/2019/03/Method5-mapping-v2-1024x419.jpg 1024w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_1140/https://extremelearning.com.au/wp-content/uploads/2019/03/Method5-mapping-v2-1140x466.jpg 1140w"><figcaption id="caption-attachment-2188">Figure 6. Concentric Mapping maps concentric squares to concentric circles.</figcaption></figure><pre>u= random()
v = random()
if (u==0 &amp;&amp; v==0) return (0,0)
theta=0
r = 1
a=2*u-1
b=2*v-1
if(a*a&gt;b*b)
    {r = a; phi = PI/4*b/a}
else
    {r = b; PI/2- PI/4*a/b}
x= r*cos(theta)
y= r*sin(theta)
</pre><h3>Method 7. Muller / Marsaglia (âNormalized Gaussiansâ)</h3><p>This method is a hybrid of methods 3 and 5, because it selects a random direction via method 3 and a random radius via method 5.</p><pre>u = np.random.normal(0,1)
v = np.random.normal(0,1)
norm = (u*u+v*v)**0.5
r = pow( np.random(0,1),1/2.)
(x,y) = r*(u,v)/norm

</pre><h3>Method 8. Exponential Distribution</h3><p>Another stunningly elegant method (<a href="https://arxiv.org/abs/math/0503650">Barthe, 2005</a>) that is valid for balls of any dimension, is to draw $d$ random variates from the normal distribution, and a single random variable from the <a href="https://en.wikipedia.org/wiki/Exponential_distribution">exponential distribution</a> (with $\lambda=1/2$).</p><p>(Note that I believe there is a typo in the original paper, as the original paper says $\lambda = 1$, which has then also been copied into Wolframâs <a href="http://mathworld.wolfram.com/BallPointPicking.html">mathworld</a>. )</p><p>Recall, that in the absence of a native function, a simple and common method to draw from an exponential distribution with parameter $\lambda$, is via the <a href="https://en.wikipedia.org/wiki/Exponential_distribution#Generating_exponential_variates">negative logarithm of a uniform random variate</a> divided by $\lambda$.</p><pre>u = np.random.normal(0,1) 
v = np.random.normal(0,1)
e = np.random.exponential(0.5)
denom = (u*u + v*v + e)**0.5
(x,y) = (u,v)/denom
</pre><h3>Method 9. Dropped Coordinates</h3><p>A somewhat magical method, first noted by (<a href="https://ac.els-cdn.com/S0047259X10001211/1-s2.0-S0047259X10001211-main.pdf?_tid=73b0035a-3af7-4bb8-bed0-75db9b15a265&amp;acdnat=1552228662_b1f683ed62e08af9d8772f92efa534e6">Harman and Lacko 2010</a>)&nbsp; and then proven ( <a href="http://compneuro.uwaterloo.ca/files/publications/voelker.2017.pdf">Voelker 2017</a>) that is not well-known is that if $(x_1,x_2,x_3,x_4)$ is a random vector uniformly distributed on the $3$-sphere, the random vector $(x_1,x_2)$, (that is, with the last two coordinates dropped) is uniformly distributed in the $2$-ball.</p><p>See method 20 for a more detailed commentary of this method.</p><pre>s = np.random.normal(0,1)
t = np.random.normal(0,1)
u = np.random.normal(0,1)
v = np.random.normal(0,1)
norm = (s*s + t*t + u*u + v*v)**(0.5)
(x,y) = (u,v)/norm
</pre><figure id="attachment_2206" aria-describedby="caption-attachment-2206"><img decoding="async" src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_640,h_220/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-comparison_B2.png" data-src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_640,h_220/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-comparison_B2.png" alt="" width="640" height="220" data-srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_640/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-comparison_B2.png 640w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-comparison_B2-300x103.png 300w" data-sizes="(max-width: 640px) 100vw, 640px" srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_640/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-comparison_B2.png 640w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_300/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-comparison_B2-300x103.png 300w"><figcaption id="caption-attachment-2206">Results for n=3000, for methods 8 (radial CDF), 9 (exponential) and 10 (dropped coordinates). It is truly remarkable that such different techniques can produce the same result!</figcaption></figure><h2><span>Uniformly sampling a 2-sphere (surface of a sphere).</span></h2><p>That is, uniformly sampling points on the surface of a sphere.</p><p><img decoding="async" src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_276,h_300/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-S2-276x300.png" data-src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_276,h_300/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-S2-276x300.png" alt="" width="276" height="300" data-srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_276/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-S2-276x300.png 276w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_640/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-S2.png 640w" data-sizes="(max-width: 276px) 100vw, 276px" srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_276/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-S2-276x300.png 276w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_640/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-S2.png 640w"></p><h3>Method 10. Polar</h3><p>This is the natural generalization of method 1. Note that the inverse cosine is required for the same reason that the sqrt is required in method 5.</p><pre>u = random()
v = random()
theta = 2 * PI * u
phi = np.arccos(2v-1)
x   = np.sin(theta) np.cos(phi)
y   = np.sin(theta) np.sin(phi)
z   = np.cos (theta)
</pre><p>Using $u=\cos \theta$, an equivalent version of this that does not directly involve inverse trig functions is</p><pre>u   = 2*random()-1
phi = 2* PI * random()
x = cos(phi) * (1-z^2)**0.5
y = sin(phi)* (1-z^2)**0.5
z = u</pre><h3>*Method 11. Muller</h3><p>This is a direct generalization of method 3.</p><pre>u = np.random.normal(0,1)
v = np.random.normal(0,1)
w = np.random.normal(0,1)
norm = (u*u + v*v + w*w)**(0.5)
(x,y,z) = (u,v,w)/norm
</pre><h3>Method 12. Rejection Method #1</h3><p>This method <a href="http://mathworld.wolfram.com/SpherePointPicking.html">(Marsaglia, 1972)</a> is a direct generalization of Method 2 .</p><pre>Select u,v ~ U(-1,1)
d2 = u*u + v*v
If d2&gt;1 then
    reject and go to step 1.
Else
&nbsp; &nbsp; x = 2*u* sqrt (1-d2)
    y = 2*v* sqrt (1-d2)
    z = 1-2*d2
Return (x,y,z)
</pre><h3>Method 13. Rejection Method #2</h3><p>This method <a href="http://mathworld.wolfram.com/SpherePointPicking.html">(Cook, 1957)</a> is quite different to any of the previously discussed methods.</p><p>For those variables that are accepted, the rules for quaternion transformations, imply that the following points are uniformly distributed.</p><pre>Select s,t,u,v ~ U(-1,1)
d2 = s^2 + t^2 + u^2 + v^2
If d2&gt;1 then
    reject and go to step 1.
Else
&nbsp; &nbsp; x = 2*(s*u+t*v)/d2
    y = 2*(u*v-s*t)/d2
    z = (s*s-t*t+u*u-v*v)/d2
Return (x,y,z)

</pre><h2><span>Uniformly sampling a 3-ball (interior of a sphere).</span></h2><p>That is, uniformly sampling points on the inside of a sphere.</p><h3>*Method 14. Rejection Method</h3><p>This <a href="http://mathworld.wolfram.com/SpherePointPicking.html">method</a> is a direct generalization of Method 2. Again, it is quite efficient as the acceptance rate is still relatively high and the calculations can be done blazingly fast. However, it carries a bad reputation as it is catastrophically inefficient for higher dimensions.</p><pre>1. Select x,y,z ~ U(-1,1)
2. If (x^2+y^2 +z^2&gt;1) then reject and go to step 1.
3. Return (x,y,z)
</pre><figure id="attachment_2198" aria-describedby="caption-attachment-2198"><img decoding="async" src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_276,h_300/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-B3-v2-276x300.png" data-src="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_276,h_300/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-B3-v2-276x300.png" alt="" width="276" height="300" data-srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_276/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-B3-v2-276x300.png 276w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_640/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-B3-v2.png 640w" data-sizes="(max-width: 276px) 100vw, 276px" srcset="https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_276/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-B3-v2-276x300.png 276w, https://sp-ao.shortpixel.ai/client/to_auto,q_glossy,ret_img,w_640/https://extremelearning.com.au/wp-content/uploads/2019/03/UniformRandomSampling-B3-v2.png 640w"><figcaption id="caption-attachment-2198">The rejection method for $B^3$ has a ~0.52 acceptance rate.</figcaption></figure><h3>*Method 15. Muller</h3><p>This is combination of method 7.</p><pre>u = np.random.normal(0,1)
v = np.random.normal(0,1)
w = np.random.normal(0,1)
r = random()**(1./3)
norm= (u*u+v*v+w*w)**(0.5)
(x,y,z) = r*(u,v,w)/norm
</pre><h3>*Method 16. Polar</h3><p>This is the natural generalization of method 5.</p><pre>u = 2*random()-1
phi = 2* PI * random()
r = random()**(1/3.)
x = r* cos(phi) * (1-u^2)**0.5
y = r* sin(phi)* (1-u^2)**0.5
z = r*u
</pre><h3>Method 17. Exponential Distribution</h3><p>This is a direct generalisation of method 8. Again, note that I believe there is a typo in the original paper, as the original paper says $\lambda = 1$, which has then also been copied into Wolframâs <a href="http://mathworld.wolfram.com/BallPointPicking.html">mathworld</a>.</p><pre>u = np.random.normal(0,1)
v = np.random.normal(0,1)
w = np.random.normal(0,1)
e = np.random.exponential(0.5)
denom = (e + u*u + v*v + w*w)**0.5
(x,y,z) = (u,v,w)/denom
</pre><h3>Method 18. Dropped Coordinates</h3><p>A natural extension of method X.</p><p>Based on the fact that if $(x_1,x_2,x_3,x_4,x_5)$ is a random vector uniformly distributed on the $4$-sphere, the random vector $(x_1,x_2,x_3)$, (that is, with the last two coordinates dropped) is uniformly distributed in the $3$-ball.</p><p>See method 20 for a more detailed commentary of this method.</p><pre>s = np.random.normal(0,1)
t = np.random.normal(0,1)
u = np.random.normal(0,1)
v = np.random.normal(0,1)
w = np.random.normal(0,1)
norm = (s*s + t*t + u*u + v*v + w*w)**(0.5)
(x,y,z) = (u,v,w)/norm
</pre><h2><span><span>Uniformly sampling a $d$-sphere.</span> </span></h2><h3>*Method 19. Muller</h3><p>For higher dimensions where $d&gt;3$, most of the above methods do not neatly simplify. Therefore, the one that is almost always used for a $d$-sphere is the generalised version of methods 3 and 9.</p><pre>u = np.random.normal(0,1,d)&nbsp; # an array of d normally distributed random variables
d=np.sum(u**2) **(0.5)
(x,y,z) = (u,v,w)/d
</pre><h2><span><span>Uniformly sampling a $d$-ball.</span> </span></h2><p>Although the rejection methods 4 and 13 are extremely intuitive and trivially generalise to higher dimensions, one quickly encounters âthe curse of dimensionalityâ. As mentioned, for $d=1$ the acceptance rate is $\sim 0.71$, and for $d=2$ the acceptance rate is $\sim 0.52$. Although this might appear inefficient, due to not requiring to calculate any complex functions this is often one of the fastest ways to pick points in a $2-$ball or $3$-ball.</p><p>By comparing the hypervolume of a $d$-ball with the enclosing cube, one can deduce that for $d=10$, the acceptance rate is less than 0.0025 and it gets exponentially worse for higher $d$.</p><h3>*Method 20. Muller</h3><p>In practice, the almost exclusive method to calculate points inside a $d-$ball is the generalized version of method 14. Namely,</p><pre>u = np.random.normal(0,1,d)&nbsp; # an array of d normally distributed random variables
norm=np.sum(u**2) **(0.5)
r = random()**(1.0/d)
x= r*u/norm
</pre><h3>Method 21. Exponential Distribution</h3><p>This is a direct generalisation of method 8 and 16.</p><pre>x = np.random.normal(0,1,d)
e = np.random.exponential(0.5)
denom = (e + np.sum(u**2))**0.5 
(x,y,z) = (u,v,w)/denom
</pre><h3>*Method 22. Dropped Coordinates</h3><p>A very elegant method, first noted by (<a href="https://ac.els-cdn.com/S0047259X10001211/1-s2.0-S0047259X10001211-main.pdf?_tid=73b0035a-3af7-4bb8-bed0-75db9b15a265&amp;acdnat=1552228662_b1f683ed62e08af9d8772f92efa534e6">Harman and Lacko 2010</a>)&nbsp; and then proven ( <a href="http://compneuro.uwaterloo.ca/files/publications/voelker.2017.pdf">Voelker 2017</a>) that is not well-known is that if $ (x_1,x_2,x_3,â¦,x_d,x_{d+1},x_{d+2})$ is a random vector uniformly distributed on the $(d+1)$-sphere, the random vector $ (x_1,x_2,x_3,â¦,x_d)$, (that is, with the last two coordinates dropped) is uniformly distributed in the $d$-ball.</p><p>This is non-trivial result where even developing an intuition is <a href="https://mathoverflow.net/questions/33129/intuitive-proof-that-the-first-n-2-coordinates-on-a-sphere-are-uniform-in-a">difficult</a>, (even the base case of $d=1$ is <a href="https://math.stackexchange.com/questions/185298/random-point-uniform-on-a-sphere">not trivial!</a>)</p><p>However, it may be interesting/useful to note that an $\exp(1/2)$ variable $Y$ in method 19, has the same distribution as $(Y_1^2+Y_2^2)$&nbsp; where $Y_1,Y_2$ are standard normal â thus connecting this methods 19 and 20.</p><p>Thus,</p><pre>u = np.random.normal(0,1,d+2)&nbsp; # an array of (d+2) normally distributed random variables
norm=np.sum(u**2) **(0.5)
u = u/norm
x = u[0:d] #take the first d coordinates
</pre><h2><span>Conclusion</span></h2><p>This post gives a comprehensive list of the most frequent and useful methods to uniformly sample from a the surface of a&nbsp; $d$-sphere, an the interior of the $d$-ball.</p><p>Many of them are simple and intuitive, whilst others are truly remarkable in their structure.</p><p>It is of course, possible to always use the most generalised versions of these formulae as outlined in methods 19-22, but sometimes specialised methods for smaller $d$ may be more efficient and/or amenable to understanding.</p><blockquote><p>***</p><blockquote><p><span>My name is Dr Martin Roberts, and Iâm a freelance Principal Data Science consultant, who loves working at the intersection of maths and computing. <em> <strong>âI transform and modernize organizations through innovative data strategies solutions.â</strong></em></span></p><blockquote><p><strong>You can contact me through any of these channels.</strong></p><p>LinkedIn: <a href="https://www.linkedin.com/in/martinroberts/">https://www.linkedin.com/in/martinroberts/</a></p><p>Twitter: <strong>@TechSparx</strong>&nbsp; <a href="https://twitter.com/TechSparx">https://twitter.com/TechSparx</a></p><p>email: Martin (at) RobertsAnalytics (dot) com</p><p>More details about me can be found <em><strong><a href="https://extremelearning.com.au/about">here</a>.</strong></em></p></blockquote></blockquote></blockquote><h2><span>Other Posts you may like</span></h2><ul><li><a href="https://extremelearning.com.au/isotropic-blue-noise-point-sets/">A new method to construct isotropic blue noise point sets with uniform projections</a></li><li><a href="https://extremelearning.com.au/how-to-evenly-distribute-points-on-a-sphere-more-effectively-than-the-canonical-fibonacci-lattice/">How to evenly distribute points on a sphere more effectively than the canonical Fibonacci lattice</a></li><li><a href="https://extremelearning.com.au/a-simple-method-to-construct-isotropic-quasirandom-blue-noise-point-sequences/">A simple method to construct isotropic quasirandom blue noise point sequences</a></li></ul></div></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Kagi and Wolfram (717 pts)]]></title>
            <link>https://blog.kagi.com/kagi-wolfram</link>
            <guid>39606048</guid>
            <pubDate>Tue, 05 Mar 2024 16:50:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.kagi.com/kagi-wolfram">https://blog.kagi.com/kagi-wolfram</a>, See on <a href="https://news.ycombinator.com/item?id=39606048">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            
            <p>Building a search engine is hard. Delivering accurate and reliable search results requires processing vast amounts of data, understanding complex queries, and constantly evolving to meet user expectations. In an era where AI-generated content is <a href="https://news.ycombinator.com/item?id=34785437">becoming</a> <a href="https://www.theregister.com/2023/02/09/google_reverses_ai_page_spam/">more</a> <a href="https://www.theintrinsicperspective.com/p/here-lies-the-internet-murdered-by">prevalent</a>, ensuring the trustworthiness of information provided by the search engine is more important than ever.</p>

<p>At Kagi, we are committed to providing our users with the most accurate and dependable search experience possible. We adhere to a <a href="https://blog.kagi.com/kagi-ai-search#philosophy">philosophy of using AI</a> to enhance, rather than create, search experience, and only when explicitly requested by the user. To ensure result quality, we automatically downrank pages with advertising and tracking, which are often associated with low-quality or machine-generated content. Our <a href="https://help.kagi.com/kagi/features/website-info-personalized-results.html">personalization features</a> allow users to customize their search feed according to their preferences. Furthermore, we strive to promote authentic content from personal blogs and websites through our â<a href="https://blog.kagi.com/small-web">Small Web</a>â initiative, which aims to increase the visibility of genuine, high-quality content.</p>

<p>To further enhance our search capabilities and address the issue of potentially misleading AI-generated answers, we have partnered with <a href="https://www.wolframalpha.com/">Wolfram|Alpha</a>, a well-respected computational knowledge engine. By integrating Wolfram Alphaâs extensive knowledge base and robust algorithms into Kagiâs search platform, we aim to deliver more precise, reliable, and comprehensive search results to our users. This partnership represents a significant step forward in our goal to provide a search engine that users can trust to find the dependable information they need quickly and easily.</p>

<p>In addition, we are very pleased to welcome <a href="https://www.stephenwolfram.com/">Stephen Wolfram</a> to Kagiâs board of advisors. Stephen brings years of experience (Wolfram Research was founded in 1987!) running a largely bootstrapped business and growing it to 1,000 employees, which resonates strongly with us. With his extensive experience in catering to the needs of educational institutions worldwide, Stephen brings a wealth of knowledge that we believe will be instrumental in guiding Kagiâs next significant step forward.</p>

<h3>Wolfram|Alpha integration in Kagi</h3>

<p>We launched our first integrations with Wolfram|Alpha <a href="https://kagi.com/changelog#3179">two weeks ago</a> and you have been seeing them for many computational queries already. Today we are taking this further.</p>

<p>Wolfram|Alpha now powers quick access to math, time, unit conversion and factual information in Kagi.</p>

<p><img src="https://kagifeedback.org/assets/files/2024-03-05/1709602716-173349-screenshot-2024-03-04-at-173830.png"></p>

<p><img src="https://kagifeedback.org/assets/files/2024-03-05/1709601833-665151-screenshot-2024-03-04-at-172321.png"></p>

<p><img src="https://kagifeedback.org/assets/files/2024-03-05/1709602650-333723-screenshot-2024-03-04-at-173726.png"></p>

<p>Kagi is now able to immediately answer more complex computational queries.</p>

<p><img src="https://kagifeedback.org/assets/files/2024-03-05/1709602866-571981-screenshot-2024-03-04-at-174102.png"></p>

<p>And for diehard fans of Wolfram language, we even support direct evaluation of commands.</p>

<p><img src="https://kagifeedback.org/assets/files/2024-03-05/1709601833-764992-screenshot-2024-03-04-at-172210.png"></p>

<p>In addition, today we are launching rich knowledge graph widgets powered by Wolfram|Alpha.</p>

<p><img src="https://kagifeedback.org/assets/files/2024-03-05/1709601834-211843-screenshot-2024-03-04-at-172007.png"></p>

<p>And last but not least, we are launching instant summary boxes that show information as you type, saving you an entire search!</p>

<p><img src="https://kagifeedback.org/assets/files/2024-03-05/1709654440-735786-screenshot-2024-03-05-at-080035.png">
</p><center><em>Doggo is very happy about this, but cautious to show his excitement</em></center>

<p>It is a very powerful feature that makes sense to be implemented directly in the browser. We will be bringing this into <a href="https://kagi.com/orion">Orion browser</a> and it will be open for any other browser to implement as well.</p>

<p><img src="https://kagifeedback.org/assets/files/2024-03-05/1709652268-714268-screenshot-2024-03-05-at-072340.png"></p>

<h3>Whatâs next</h3>

<p>We hope you try and like the Wolfram|Alpha integration in Kagi. Please let us know what you think via
<a href="https://kagifeedback.org/d/3422-wolframalpha-integration-feedback">kagifeedback.org</a>.</p>

<p>We will be enabling our <a href="https://help.kagi.com/kagi/ai/assistant.html">Assistant</a> to use Wolfram|Alpha information as a powerful source of truth for those situations where you want to interact with an LLM to get answers. And all this will come at no additional cost for our users.</p>

<p>Looking forward, we acknowledge the importance of providing structured, accurate, and swift informational widgets, enabling users to quickly access the information they need and spend least amount possible in the search engine. We already have a number of them like the <a href="https://kagi.com/search?q=weather+london">weather</a>, <a href="https://kagi.com/search?q=time+in+romania">time</a>, <a href="https://kagi.com/search?q=calc">calculator</a>, <a href="https://kagi.com/search?q=speed+test">internet speed test</a>, <a href="https://kagi.com/search?q=translate+good+day+to+german">translation</a> and <a href="https://kagi.com/search?q=%23ff3454">color</a> widgets - just to name a few.</p>

<p>We will continue adding them, including a more robust calculator widget, sport scores and stock price charts, and we are even thinking of providing a consumeable API for users to add their own widgets to Kagi search results triggered on demand (and shareable with others via an <a href="https://help.kagi.com/kagi/support-and-community/open-source.html">open-source repository</a>). Stay tuned!</p>

<p>â</p>

<p>Discuss on <a href="https://news.ycombinator.com/item?id=39606048">Hacker News</a></p>

        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Launch HN: Greptile (YC W24) - RAG on codebases that actually works (223 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=39604961</link>
            <guid>39604961</guid>
            <pubDate>Tue, 05 Mar 2024 15:48:56 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=39604961">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <tbody><tr id="39604961">
      <td><span></span></td>      <td><center><a id="up_39604961" href="https://news.ycombinator.com/vote?id=39604961&amp;how=up&amp;goto=item%3Fid%3D39604961"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=39604961">Launch HN: Greptile (YC W24) - RAG on codebases that actually works</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_39604961">112 points</span> by <a href="https://news.ycombinator.com/user?id=dakshgupta">dakshgupta</a> <span title="2024-03-05T15:48:56"><a href="https://news.ycombinator.com/item?id=39604961">4 hours ago</a></span> <span id="unv_39604961"></span> | <a href="https://news.ycombinator.com/hide?id=39604961&amp;goto=item%3Fid%3D39604961">hide</a> | <a href="https://hn.algolia.com/?query=Launch%20HN%3A%20Greptile%20(YC%20W24)%20-%20RAG%20on%20codebases%20that%20actually%20works&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=39604961&amp;auth=f7f83bdc21579ba21828d8b26b3fe04d6f528d71">favorite</a> | <a href="https://news.ycombinator.com/item?id=39604961">86&nbsp;comments</a>        </span>
              </td></tr>
    <tr></tr><tr><td colspan="2"></td><td><div><p>Hi HN, we're the co-founders of Greptile, a tool that can accurately answer questions about complex codebases. Developers use us to spend less time wrestling with codebases and more time actually writing code. Here's a demo: <a href="https://youtu.be/qI24eKO1YX0" rel="nofollow">https://youtu.be/qI24eKO1YX0</a>. You can try it on 100 popular repos here: <a href="https://app.greptile.com/repo">https://app.greptile.com/repo</a>, and on your own repo (if you give permission - more on that below) here: <a href="https://app.greptile.com/">https://app.greptile.com</a>.</p><p>We are far from the first people to try "RAG on your codebase". We focus on full codebase comprehension: using LLMs to accurately answer difficult questions with full context of large, complex, and even multi-repo codebases.</p><p>Simple RAG alone is not sufficient for this task. Codebases arenât like most PDFs, docs, or other similar data types. They are graphsâcomplex puzzles where each piece is interlinked. So Greptile does a few things past simple RAG:</p><p>(1) Instead of directly embedding code, we parse the AST of the codebase, recursively generate docstrings for each node in the tree, and then embed the docstrings.</p><p>(2) Alongside vector similarity search and keyword search, we do âagentic searchâ where an agent reviews the relevance of the search results, and scans the source code to follow references that might lead to something important. Then it returns the relevant sources.</p><p>For example, here are a couple questions that this system is able to answer in our test repo that simple RAG couldnât (in our experience):</p><p>â<i>Where are the auth providers configured?</i>â (They are in an array inside of an options.ts file, where looking at the file itâs not obvious itâs an auth related file. However, because that array is imported into the auth/route.ts file, Greptileâs agent traces and find it)</p><p>â<i>How would I add a postgres connector?</i>â (The best way to answer this is to see how the Redis connector is set up and mirror it. Simple RAG sometimes retrieves some of the code for the Redis connector, but Greptileâs agent follows the connections to retrieve all the code that the redis connector touches, and uses that to write instructions.)</p><p>Developers (including at Stripe and Microsoft) are using Greptile for things like:</p><p>Debuggingâyou can paste in an error message and it does a pretty good job of diagnosing the root cause and suggesting fixes.</p><p>Grokking OSS reposâfor example, if you're forking a repo, modifying it for your usecase, or just integrating it, Greptile lets you add multiple repos and dependencies in the same chat session so it has full context.</p><p>Parsing legacy code at workâespecially if original engineers have left the company.</p><p>Since we're accessing your private code, we're very careful with security. We don't store any code on our servers after initial processing, and just pull snippets as needed from the GitHub API.</p><p>Quick note: when you sign in with GH, it might ask for permission to "act on your behalf". This is a quirk of GitHub's wordingâour permissions are read-only and the only thing we do "on your behalf" is read code, so we can index the repo.</p><p>We came up with this idea while working at AWSâthe codebase was super complicated, the docs were sparse and out of date, and our team was remote so it was slow to get answers to questions. We picked "greptile" because of "grep" and also we just wanted a somewhat silly name.</p><p>Try it out! It's a work in progress, so any feedback is appreciated. Here are the links again: for popular open source repos see <a href="https://app.greptile.com/repo">https://app.greptile.com/repo</a>, and to get it working on your own repo, start at <a href="https://app.greptile.com/">https://app.greptile.com</a>.</p><p>If you have experience working with a complex codebase at work or for a project, Iâd love to hear about it. It really helps us educate our product direction. Looking forward to comments!</p><p>edit. For those who want to try this on large or private repos, here is a promo code for a free month -&gt;</p><p>HACKERNEWS100</p></div></td></tr>        <tr></tr><tr><td colspan="2"></td><td></td></tr>  </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Facebook Is Not Working (172 pts)]]></title>
            <link>https://metastatus.com/</link>
            <guid>39604746</guid>
            <pubDate>Tue, 05 Mar 2024 15:36:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://metastatus.com/">https://metastatus.com/</a>, See on <a href="https://news.ycombinator.com/item?id=39604746">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Open-source project ZLUDA lets CUDA apps run on AMD GPUs (397 pts)]]></title>
            <link>https://www.cgchannel.com/2024/02/open-source-project-zluda-lets-cuda-apps-run-on-amd-gpus/</link>
            <guid>39604745</guid>
            <pubDate>Tue, 05 Mar 2024 15:36:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cgchannel.com/2024/02/open-source-project-zluda-lets-cuda-apps-run-on-amd-gpus/">https://www.cgchannel.com/2024/02/open-source-project-zluda-lets-cuda-apps-run-on-amd-gpus/</a>, See on <a href="https://news.ycombinator.com/item?id=39604745">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				
				
<p><img src="https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_f-960x480.jpg" alt="" width="960" height="480" srcset="https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_f-960x480.jpg 960w, https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_f-500x250.jpg 500w, https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_f-768x384.jpg 768w, https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_f-610x305.jpg 610w, https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_f-640x320.jpg 640w, https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_f-300x150.jpg 300w, https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_f.jpg 1200w" sizes="(max-width: 960px) 100vw, 960px"></p>
<p><br>
Andrzej Janik has released <a href="https://github.com/vosen/ZLUDA/releases/tag/v3" target="_blank">ZLUDA 3</a>, a new version of his open-source project that enables GPU-based applications designed for NVIDIA GPUs <a href="https://github.com/vosen/ZLUDA" target="_blank">to run on other manufacturersâ hardware</a>.</p>
<p>The wrapper technology is designed to enable existing applications to run on new hardware unmodified, without the need for any work on their developersâ part.</p>
<p>While previous versions of ZLUDA enabled CUDA applications to run on Intel GPUs, with version 3, that has switched to AMD GPUs.</p>
<p>ZLUDA has been confirmed to work, to varying degrees of success, with software including Blender, photogrammetry apps 3DF Zephyr and RealityCapture, and the Arnold renderer.</p>
<p>Below, weâve compiled our own FAQs on the project, summarising how it might affect CG artists, and how well other CUDA-based CG applications are likely to run on AMD GPUs under ZLUDA.</p>
<p><strong>ZLUDA? Isnât that for Intel GPUs?</strong><br>
ZLUDA was first released in 2020, initially as a drop-in replacement for CUDA on Intel GPUs.</p>
<p>It attracted a fair amount of attention in the open-source community, but in 2021, shortly after the release of version 2, Janik <a href="https://thenewstack.io/zluda-a-cuda-for-intel-gpus-needs-a-new-maintainer/" target="_blank">announced</a> that he was unable to keep developing the project.</p>
<p>No reason was given, and that seemed to be it for ZLUDA.</p>
<p>However, this week, Janik updated the <a href="https://github.com/vosen/ZLUDA?tab=readme-ov-file#faq" target="_blank">FAQs section</a> of the ZLUDA GitHub repository to explain the reasons for the radio silence.</p>
<p>In 2021, while he was still working at Intel â he was a Software Engineering Manager on the Visual Technologies team â the firm began to evaluate ZLUDA as a potential official technology.</p>
<p>Intel eventually decided there was âno business case for running CUDA applications on Intel GPUsâ, and in 2022, Janik left the company, and, now a freelance contractor, approached AMD.</p>
<p>AMD evaluated ZLUDA for two years, but also decided not to go further with the project â at which point, Janik open-sourced the updated code.</p>
<p>Itâs a fascinating story, and one told in more detail in <a href="https://www.phoronix.com/review/radeon-cuda-zluda" target="_blank">this article on Phoronix</a>, which first reported the news earlier this week.</p>
<p><strong>Why might this matter to CG artists?</strong><br>
Version 3 of ZLUDA is intended to enable GPU-based applications developed using NVIDIAâs <a href="https://developer.nvidia.com/about-cuda" target="_blank">CUDA</a> API to run on AMD GPUs.</p>
<p>Thatâs significant in industries like VFX, motion graphics and visualization, because a number of key CG applications, particularly renderers, are CUDA-based, and effectively NVIDIA-only.</p>
<p>Although AMD has its own technology, <a href="https://github.com/ROCm/HIP" target="_blank">HIP</a>, for porting CUDA apps to run on its hardware, it requires work on the part of the software developer.</p>
<p>HIP has been used to create AMD-compatible versions of <a href="https://www.cgchannel.com/2023/05/maxon-releases-redshift-3-5-15/" target="_blank">Redshift</a> and Blenderâs <a href="https://www.cgchannel.com/2021/11/cycles-x-now-runs-on-amd-gpus/" target="_blank">Cycles</a> renderer, but so far, few other CG tools developers have followed suit.</p>
<p>In contrast, ZLUDA â version 3 of which is actually built on HIP â is designed to enable CUDA applications run on AMD GPUs unmodified.</p>
<p>That means that artists can, at least in theory, take existing version of NVIDIA-only applications and run them on AMD hardware.</p>
<p>Previously NVIDIA-only software that Janik has tested with ZLUDA includes photogrammetry apps <a href="https://www.3dflow.net/3df-zephyr-photogrammetry-software/" target="_blank">3DF Zephyr</a> and <a href="https://www.capturingreality.com/realitycapture" target="_blank">RealityCapture</a>, and Autodeskâs <a href="https://www.autodesk.com/products/arnold/overview?term=1-YEAR&amp;tab=subscription&amp;plc=ARNOL" target="_blank">Arnold renderer</a>.</p>
<p><br><img src="https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_Arnold-960x480.jpg" alt="" width="960" height="480" srcset="https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_Arnold.jpg 960w, https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_Arnold-500x250.jpg 500w, https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_Arnold-768x384.jpg 768w, https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_Arnold-610x305.jpg 610w, https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_Arnold-640x320.jpg 640w, https://www.cgchannel.com/wp-content/uploads/2024/02/240216_ZLUDA3_RunCUDASoftwareOnAMDGPUs_Arnold-300x150.jpg 300w" sizes="(max-width: 960px) 100vw, 960px"></p>
<p><em>Gleb Alexandrovâs <a href="https://cloud.blender.org/p/gallery/564a0d34c379cf089a7ad48f" target="_blank">Attic scene</a> rendered in Arnold under ZLUDA. Support for Arnold is a âproof of conceptâ: only one other scene has rendered successfully using ZLUDAâs OptiX implementation.</em></p>
<p><strong>How fast is running a CUDA application under ZLUDA?</strong><br>
Janik describes CUDA apps as running with ânear-native performanceâ on AMD GPUs.</p>
<p>Benchmark scores shown in Phoronixâs article and <a href="https://blenderartists.org/t/zluda-v2-opensource-cuda-driver-for-intel-products-amd-what-about-you-hehe/1287308/8" target="_blank">this thread</a> on the Blender Artists forum suggest that for Blender, performance under ZLUDA is similar to the native HIP backend.</p>
<p>However, the ZLUDA GitHub repository notes that both 3DF Zephyr and Reality Capture are âmuch slowerâ under ZLUDA.</p>
<p>In addition, many developers of GPU renderers also use a second NVIDA API, <a href="https://developer.nvidia.com/rtx/ray-tracing/optix" target="_blank">OptiX</a>, to accelerate ray tracing, which also contributes to performance.</p>
<p>ZLUDA has âminimumâ support for OptiX, but only on Linux, not Windows, and the implementation is described as âbuggy, unoptimized and incompleteâ.</p>
<p>In fact, ZLUDA-Optix â used primarily for âproof of conceptâ support for Arnold â is not included in the redistributable version of ZLUDA: to use it, you have to build it yourself.</p>
<p><strong>Will other CG applications run on AMD GPUs under ZLUDA?</strong><br>
Without user testing, itâs difficult to say how well other CUDA-based CG applications will run under ZLUDA.</p>
<p>However, it seems unlikely to be a magic solution: there are a number of <a href="https://github.com/vosen/ZLUDA?tab=readme-ov-file#known-issues" target="_blank">known issues</a>, and Janik has had limited success with other GPU renderers.</p>
<p>The <a href="https://www.chaos.com/vray/benchmark" target="_blank">V-Ray benchmark</a> runs on âcertain âluckyâ older combinationsâ of ZLUDA and HIP, but <a href="https://render.otoy.com/octanebench/" target="_blank">OctaneBench</a>, the OctaneRender benchmark, doesnât run at all. </p>
<p><strong>Will more CUDA-based CG applications run under ZLUDA in future?</strong><br>
Janik says that without the backing of Intel or AMD, ârealistically [ZLUDA] is now abandonedâ.</p>
<p>Although he says that he is âopen to any offers that could move the project forwardâ, without it, he is only likely to add support for NVIDIA technologies that interest him personally, like <a href="https://www.nvidia.com/en-gb/geforce/technologies/dlss/" target="_blank">DLSS</a>.</p>
<p>However, the source code is publicly available, and Janik suggests that even its current state, ZLUDA could be used by software devs as part of a âmore gradual porting from CUDA to HIPâ.</p>
<p><strong>License and system requirements</strong><br>
Compiled versions of ZLUDA 3 are available for Windows and Linux. The source code is available under either an <a href="https://github.com/vosen/ZLUDA?tab=Apache-2.0-1-ov-file" target="_blank">Apache 2.0</a> or <a href="https://github.com/vosen/ZLUDA?tab=MIT-2-ov-file" target="_blank">MIT license</a>.</p>
<p><a href="https://github.com/vosen/ZLUDA" target="_blank">Download ZLUDA 3 from the projectâs GitHub repository</a></p>
<p><br><em>Have your say on this story by following CG Channel on <a href="https://www.facebook.com/cgchannel" target="_blank">Facebook</a>, <a href="https://www.instagram.com/thecgchannel/" target="_blank">Instagram</a> and <a href="https://twitter.com/theCGchannel" target="_blank">X (formerly Twitter)</a>. As well as being able to comment on stories, followers of our social media accounts can see videos we donât post on the site itself, including making-ofs for the latest VFX movies, animations, games cinematics and motion graphics projects.</em></p>

			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Elliptic curve 'murmurations' found with AI (233 pts)]]></title>
            <link>https://www.quantamagazine.org/elliptic-curve-murmurations-found-with-ai-take-flight-20240305/</link>
            <guid>39604600</guid>
            <pubDate>Tue, 05 Mar 2024 15:27:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.quantamagazine.org/elliptic-curve-murmurations-found-with-ai-take-flight-20240305/">https://www.quantamagazine.org/elliptic-curve-murmurations-found-with-ai-take-flight-20240305/</a>, See on <a href="https://news.ycombinator.com/item?id=39604600">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Almost immediately, the preprint garnered interest, particularly from <a href="https://math.mit.edu/~drew/">Andrew Sutherland</a>, a research scientist at MIT who is one of the managing editors of the LMFDB. Sutherland realized that 3 million elliptic curves werenât enough for his purposes. He wanted to look at much larger conductor ranges to see how robust the murmurations were. He pulled data from another immense repository of about 150 million elliptic curves. Still unsatisfied, he then pulled in data from a different repository with 300 million curves.</p>
<p>âBut even those werenât enough, so I actually computed a new data set of over a billion elliptic curves, and thatâs what I used to compute the really high-res pictures,â Sutherland said. The murmurations showed up whether he averaged over 15,000 elliptic curves at a time or a million at a time. The shape stayed the same even as he looked at the curves over larger and larger prime numbers, a phenomenon called scale invariance. Sutherland also realized that murmurations are not unique to elliptic curves, but also appear in more general <em>L</em>-functions. He wrote <a href="https://math.mit.edu/~drew/RubinsteinSarnakLetter.pdf">a letter summarizing his findings</a> and sent it to Sarnak and <a href="https://uwaterloo.ca/pure-mathematics-number-theory/about/people/mrubinst">Michael Rubinstein</a> at the University of Waterloo.</p>
<p>âIf there is a known explanation for it I expect you will know it,â Sutherland wrote.</p>
<p>They didnât.</p>
<h2><strong>Explaining the Pattern</strong></h2>
<p>Lee, He and Oliver organized a workshop on murmurations in August 2023 at Brown Universityâs Institute for Computational and Experimental Research in Mathematics (ICERM). Sarnak and Rubinstein came, as did Sarnakâs student <a href="https://sites.google.com/view/ninazubrilina/">Nina Zubrilina</a>.</p>

<p>Zubrilina presented her research into murmuration patterns in <a href="https://www.quantamagazine.org/behold-modular-forms-the-fifth-fundamental-operation-of-math-20230921/">modular forms</a>, special complex functions which, like elliptic curves, have associated <em>L</em>-functions. In modular forms with large conductors, the murmurations converge into a sharply defined curve, rather than forming a discernible but dispersed pattern. In <a href="https://arxiv.org/abs/2310.07681">a paper</a> posted on October 11, 2023, Zubrilina proved that this type of murmuration follows an explicit formula she discovered.</p>
<p>âNinaâs big achievement is that sheâs given a formula for this; I call it the Zubrilina murmuration density formula,â Sarnak said. âUsing very sophisticated math, she has proven an exact formula which fits the data perfectly.â</p>
<p>Her formula is complicated, but Sarnak hails it as an important new kind of function, comparable to the Airy functions that define solutions to differential equations used in a variety of contexts in physics, ranging from optics to quantum mechanics.</p>
<p>Though Zubrilinaâs formula was the first, others have followed. âEvery week now, thereâs a new paper out,â Sarnak said, âmainly using Zubrilinaâs tools, explaining other aspects of murmurations.â</p>

<p><a href="https://people.maths.bris.ac.uk/~jb12407/">Jonathan Bober</a>, <a href="https://people.maths.bris.ac.uk/~maarb/">Andrew Booker</a> and <a href="https://people.maths.bris.ac.uk/~ml14850/">Min Lee</a> of the University of Bristol, together with <a href="https://davidlowryduda.com/">David Lowry-Duda</a> of ICERM, proved the existence of a different type of murmuration in modular forms in <a href="https://arxiv.org/abs/2310.07746v1">another October paper</a>. And Kyu-Hwan Lee, Oliver and Pozdnyakov <a href="https://arxiv.org/abs/2307.00256">proved the existence</a> of murmurations in objects called Dirichlet characters that are closely related to <em>L</em>-functions.</p>
<p>Sutherland was impressed by the significant dose of luck that had led to the discovery of murmurations. If the elliptic curve data hadnât been ordered by conductor, the murmurations would have disappeared. âThey were fortunate to be taking data from the LMFDB, which came pre-sorted according to the conductor,â he said. âItâs what relates an elliptic curve to the corresponding modular form, but thatâs not at all obvious. â¦ Two curves whose equations look very similar can have very different conductors.â For example, Sutherland noted that <em>y</em><sup>2 </sup>= <em>x</em><sup>3 </sup>â 11<em>x </em>+ 6 has conductor 17, but flipping the minus sign to a plus sign, <em>y</em><sup>2 </sup>= <em>x</em><sup>3</sup>&nbsp;+ 11<em>x </em>+ 6 has conductor 100,736.</p>

<p>Even then, the murmurations were only found because of Pozdnyakovâs inexperience. âI donât think we would have found it without him,â Oliver said, âbecause the experts traditionally normalize <em>a<sub>p</sub></em> to have absolute value 1. But he didnât normalize them â¦ so the oscillations were very big and visible.â</p>
<p>The statistical patterns that AI algorithms use to sort elliptic curves by rank exist in a parameter space with hundreds of dimensions â too many for people to sort through in their minds, let alone visualize, Oliver noted. But though machine learning found the hidden oscillations, âonly later did we understand them to be the murmurations.â</p>
<p><em>Editorâs Note: Andrew Sutherland, Kyu-Hwan Lee and the L-functions and modular forms database (LMFDB) have all received funding from the Simons Foundation, which also funds this editorially independent publication. Simons Foundation funding decisions have no influence on our coverage. More information is available <a href="https://www.quantamagazine.org/about/">here</a>.</em></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Facebook, Instagram, WhatsApp outage (681 pts)]]></title>
            <link>https://downdetector.com/status/facebook/</link>
            <guid>39604590</guid>
            <pubDate>Tue, 05 Mar 2024 15:27:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://downdetector.com/status/facebook/">https://downdetector.com/status/facebook/</a>, See on <a href="https://news.ycombinator.com/item?id=39604590">Hacker News</a></p>
Couldn't get https://downdetector.com/status/facebook/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Nerdy internals of an Apple text editor (357 pts)]]></title>
            <link>https://papereditor.app/internals</link>
            <guid>39603087</guid>
            <pubDate>Tue, 05 Mar 2024 13:28:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://papereditor.app/internals">https://papereditor.app/internals</a>, See on <a href="https://news.ycombinator.com/item?id=39603087">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><div><p><span>ð¿</span>&nbsp;&nbsp;Fascinating engineering details behind <a href="https://papereditor.app/" target="_blank">Paper</a>.</p><div><p><time datetime="2024-03-04" title="First published on January 28th, 2024. Last updated on March 4th, 2024."><span>ð</span>&nbsp;&nbsp;March 4th, 2024</time></p><p><span>â³</span>&nbsp;&nbsp;19 min read</p></div></div><section><p>In this article, weâll dive into the details of the way <a href="https://papereditor.app/" target="_blank">Paper</a> functions as a <code>TextView</code>-based text editor for Apple platforms.</p><p>The <a href="https://papereditor.app/dev" target="_blank">first article</a> was just a warm-up â here is where we get to truly geek out! ð¤</p><p>Before we start, Iâll add that for the time being Paper is built on the older TextKit 1 framework, so the article is relative to TextKit 1. That said, all of the concepts, abstractions, and principles discussed here still exist in TextKit 2, either unchanged or under a better API.</p></section><section><h2 id="text-view">Text view</h2><p>To understand how text editing works in native Apple text editors, we first need to discuss the centerpiece of the whole system â the <code>TextView</code> class. Technically, <code>NSTextView</code> and <code>UITextView</code> have their differences, but the API is similar enough that we can treat them as a single <code>TextView</code> class. I will highlight the differences where necessary.</p><p><code>TextView</code> is a massive component that only <a href="https://papereditor.app/dev#gnarly-stuff" target="_blank">grows in complexity</a> with each release of respective operating systems. The TextEdit app consists almost entirely of a single <code>TextView</code>. When a single class can be used to build an entire app â you know itâs a beast.</p><p>Luckily, <code>TextView</code> is not just one huge pile of code. Apple tried to subdivide it into a bunch of layers â each represented by a flagship class. The layers build on top of each other to create a text editing experience.</p><img src="https://papereditor.app/internals-article/text-view-classes.png" width="544" height="1162" alt="A diagram showing the classes that make up the text view. NSTextStorage and NSTextContainer flow into NSLayoutManager which then flows into TextView. Finally, TextView flows into ScrollView. Each next class in the diagram uses the information from the previous one to, in the end, construct a complete text editor."><div><div><h3><code>NSTextStorage</code></h3><ul><li><em>Stores</em> the raw text string.</li><li><div><p><em>Stores</em> the attributes (string-value pairs) assigned to ranges of text.</p><ol><li>Styles such as font and color <span>(defined by AppKit and UIKit)</span>.</li><li>Any string-value pair that acts as metadata for your needs.</li></ol></div></li><li>Emits events about text and attribute changes.</li></ul></div><div><h3><code>NSTextContainer</code></h3><ul><li>Defines the shape and dimensions of the area that hosts text symbols (glyphs).</li><li>Most of the time itâs a rectangle <span>(duh ð)</span> but can be any shape.</li></ul></div><div><h3><code>NSLayoutManager</code></h3><ul><li><div><p>Figures out the dimensions of the glyphs and the spacings between them by looking at the ranges of attributes applied to the text string in <code>NSTextStorage</code>.</p><ul><li>Extracts vector glyphs from the font.</li><li>Converts each text character to one or more glyphs. Some symbols and languages need more than one.</li><li>Calculates the size of each glyph.</li><li>Calculates the distances between glyphs.</li><li>Calculates the distances between lines of glyphs.</li></ul></div></li><li><div><p>Lays out each glyph, line by line, into the shape defined by <code>NSTextContainer</code>.</p><ul><li>Calculates where every line of text starts and ends.</li><li>Calculates how many lines there are and what is the total height of the text.</li></ul></div></li></ul></div><div><h3><code>TextView</code></h3><ul><li>Draws the glyph layout generated by <code>NSLayoutManager</code>.</li><li>Syncs the height of the view with the current height of laid-out text.</li><li>Manages the <em>text selection</em>.</li><li>Manages the <em>caret</em> â empty text selection.</li><li>Manages the <em>typing attributes</em> â attributes applied to the newly inserted text.</li><li>Can define margins (<code>textContainerInset</code>) around the <code>NSTextContainer</code>.</li><li>Manages all the additional bells and whistles such as dictation, copy-paste, spell check, etc.</li></ul></div><div><h3><code>ScrollView</code></h3><ul><li>Shows the visible portion of the <code>TextView</code>.</li><li>Manages scrolling, scroll bars, and zooming.</li><li>Can define its own margins (<code>contentInset</code>) in addition to the <code>textContainerInset</code> defined by the <code>TextView</code>.</li><li><div><p>Implementation details:</p><ul><li><div><p><strong>AppKit</strong></p><ul><li><code>NSScrollView</code> contains <code>NSClipView</code> and two instances of <code>NSScroller</code>.</li><li><code>NSClipView</code> contains <code>NSTextView</code>.</li><li>Thus many separate classes work together to make the scrolling effect.</li></ul></div></li><li><div><p><strong>UIKit</strong></p><ul><li><code>UITextView</code> extends from <code>UIScrollView</code>.</li><li>Thus <code>UITextView</code> holds everything, including the scrolling logic.</li><li>Another notable detail is that moving the caret outside the visible area of <code>UITextView</code>, bounded by <code>contentInset</code>, causes <code>UITextView</code> to <em>auto-scroll</em> to ensure that the caret stays within the visible area. You can often experience this in iOS text editors, where if the caret moves behind the keyboard, the editor scrolls to the next line. This is because the bottom <code>contentInset</code> is dynamically set to the current height of the keyboard.</li></ul></div></li></ul></div></li></ul></div></div><img src="https://papereditor.app/internals-article/text-view-mac.png" width="768" height="1270" alt="A diagram breaking down the interface of the Mac app. Areas of the interface are outlined with different colors to show what classes are responsible for them."> <img src="https://papereditor.app/internals-article/text-view-ipad.png" width="768" height="1632" alt="A diagram breaking down the interface of the iPad app. Areas of the interface are outlined with different colors to show what classes are responsible for them."> <img src="https://papereditor.app/internals-article/text-view-iphone.png" width="768" height="1704" alt="A diagram breaking down the interface of the iPhone app. Areas of the interface are outlined with different colors to show what classes are responsible for them."></section><section><h2 id="attributes">Attributes</h2><p>With the general structure of <code>TextView</code> out of the way, letâs zoom in on <code>NSTextStorage</code>, or rather its parent class <code>NSAttributedString</code>, as it is the foundation of rich text editing in Appleâs frameworks.</p><p><code>NSAttributedString</code> consists of two parts:</p><ol><li>A regular text string.</li><li>String-value pairs of attributes attached to ranges of text within the string.</li></ol><p>Attributes are used mostly for styling purposes, but nothing restricts you from assigning custom string-value pairs for your own needs.</p><p>To get started, letâs make an <code>NSAttributedString</code> via the API:</p><div><p><code><span>NSMutableAttributedString</span> *string = [<span>NSMutableAttributedString</span>.<span>alloc</span><br>&nbsp;&nbsp;<span>initWithString</span>:<span>@"The quick brown fox jumps over the lazy dog."</span>];<p><span>NSMutableParagraphStyle</span> *style = <span>NSMutableParagraphStyle</span>.<span>new</span>;<br>style.<span>firstLineHeadIndent</span> = <span>30.0</span>;</p><p>[string <span>addAttribute</span>:<span>NSParagraphStyleAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>value</span>:style<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>range</span>:<span>NSMakeRange</span>(<span>0</span>, string.<span>length</span>)];<br>[string <span>addAttribute</span>:<span>NSFontAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>value</span>:[<span>NSFont systemFontOfSize</span>:<span>25.0</span>]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>range</span>:<span>NSMakeRange</span>(<span>0</span>, string.<span>length</span>)];</p><p>[string <span>addAttribute</span>:<span>NSForegroundColorAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>value</span>:<span>NSColor</span>.<span>brownColor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>range</span>:<span>NSMakeRange</span>(<span>10</span>, <span>5</span>)];</p><p>[string <span>addAttribute</span>:<span>NSFontAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>value</span>:[<span>NSFont boldSystemFontOfSize</span>:<span>25.0</span>]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>range</span>:<span>NSMakeRange</span>(<span>20</span>, <span>5</span>)];</p><p>[string <span>addAttribute</span>:<span>NSBackgroundColorAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>value</span>:<span>NSColor</span>.<span>lightGrayColor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>range</span>:<span>NSMakeRange</span>(<span>26</span>, <span>4</span>)];</p><p>[string <span>addAttribute</span>:<span>NSUnderlineStyleAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>value</span>:<span>@(</span><span>NSUnderlineStyleSingle</span><span>)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>range</span>:<span>NSMakeRange</span>(<span>35</span>, <span>4</span>)];<br>[string <span>addAttribute</span>:<span>NSFontAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>value</span>:[<span>NSFontManager</span>.<span>sharedFontManager</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>convertFont</span>:[<span>NSFont boldSystemFontOfSize</span>:<span>25.0</span>]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>toHaveTrait</span>:<span>NSFontItalicTrait</span>]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>range</span>:<span>NSMakeRange</span>(<span>35</span>, <span>4</span>)];</p></code></p></div><p><code>NSRange</code> is a structure consisting of a <code>location</code> and a <code>length</code>. <code>NSMakeRange(10,5)</code> means a range of <code>5</code> characters starting from position <code>10</code>, or in other words, an inclusive range between positions <code>10</code> and <code>14</code>. In case different ranges define the same attribute under the same position then the last applied range takes precedence. In the example above, the bold and italic fonts overwrite the default font that is applied to the whole string.</p><p>This code can be easily visualized in TextEdit as it is pretty much an <code>NSTextView</code> with some buttons.</p><img src="https://papereditor.app/internals-article/text-attributes-in-textedit.png" width="768" height="588" alt="TextEdit app window with the text âThe quick brown fox jumps over the lazy dog.â The text is styled with different fonts, colors, and background colors. Every style is labeled with the names of attributes that are applied to it."><p>The second big part of the API is dedicated to checking what attributes are applied to what ranges. The API itself is quite peculiar. A lot of thought has gone into making it fast and efficient, but as a result, the usage can be a bit of a pain.</p><p>For instance, if you want to check whether a certain attribute exists at a certain position you would use this method:</p><div><p><code><span>id</span> value = [string <span>attribute</span>:<span>NSFontAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>atIndex</span>:<span>6</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>effectiveRange</span>:<span>nil</span>];</code></p></div><p>If the <code>value</code> is <code>nil</code>, then it does not exist. Otherwise, it is the value of the attribute which in this case is a <code>NSFont</code>/<code>UIFont</code> object. So this method can be used both to query the value and to check the existence of the attribute.</p><p>But it gets better. You can pass a pointer to the <code>NSRange</code> structure as the last argument <span>(the good old C technique to return multiple values from a single function call)</span>:</p><div><p><code><span>NSRange</span> effectiveRange;<br><span>id</span> value = [string <span>attribute</span>:<span>NSFontAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>atIndex</span>:<span>6</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>effectiveRange</span>:&amp;effectiveRange];</code></p></div><p>And it will return either:</p><ul><li>The range of the continuous span of the same attribute with the same value.</li><li>Or the range of the gap where the attribute is absent.</li></ul><img src="https://papereditor.app/internals-article/text-attributes-at-index.png" width="768" height="882" alt="Two diagrams with the text âThe quick brownâ. The word âbrownâ is in brown color. In the first diagram, the NSFontAttributeName attribute is sampled at index 6. The result is ânilâ and the effective range is between indexes 0 and 9 inclusive. In the second diagram, the NSFontAttributeName attribute is sampled at index 11. The result is an NSFont.brownColor object and the effective range is between indexes 10 and 14 inclusive."><p>Though not exactlyâ¦ You see the <code>effectiveRange</code> here is not what you think it is. Quoting the documentation:</p><blockquote><p>The range isnât necessarily the maximum range covered by the attribute, and its extent is implementation-dependent.</p></blockquote><p>In other words, it <em>could be</em> the correct maximum rangeâ¦ but it also <em>might not be</em>.</p><p><span><span>â</span><span>Ahh â I just love having a bit of non-determinism in my code!</span><span>â</span></span></p><img src="https://papereditor.app/internals-article/effective-range.png" width="768" height="452" alt="Same diagram as the second diagram in the previous image except multiple different ranges are labeled. Labels read: âCan be thisâ, âOr thisâ or âOr even thisâ."><p>To get the guaranteed maximum range you need to use a different method.</p><div><p><code><span>NSRange</span> effectiveRange;<br><span>id</span> value = [string <span>attribute</span>:<span>NSFontAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>atIndex</span>:<span>6</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>longestEffectiveRange</span>:&amp;effectiveRange<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>inRange</span>:<span>NSMakeRange</span>(<span>0</span>, string.<span>length</span>)];</code></p></div><p>I suppose, this separation is done to make the <em>checking</em> of the attribute existence faster with the former method as the latter one probably needs to do some range merging to figure out the longest range when multiple ranges overlap. Still â how the <code>effectiveRange</code> in the former method is even useful? ð¤·ð¼ââï¸</p><p>The same pair of methods exist to query an <code>NSDictionary</code> of all the attributes at a position and the <code>effectiveRange</code> for which this unique combination of attributes spans.</p><div><p><code><span>NSRange</span> effectiveRange;<br><span>NSDictionary</span>&lt;<span>NSAttributedStringKey</span>, <span>id</span>&gt; attributes =<p>&nbsp;&nbsp;[string <span>attributesAtIndex</span>:<span>6</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>longestEffectiveRange</span>:&amp;effectiveRange<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>inRange</span>:<span>NSMakeRange</span>(<span>0</span>, string.<span>length</span>)];</p></code></p></div><p>Finally, there is a convenience method to iterate over attributes within a range. With the longest constant name that ever existed for specifying which mode of attribute range inspection you prefer.</p><div><p><code>[string <span>enumerateAttribute</span>:<span>NSFontAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>inRange</span>:<span>NSMakeRange</span>(<span>0</span>, string.<span>length</span>)<br>&nbsp;&nbsp;<span>options</span>:<span>NSAttributedStringEnumerationLongestEffectiveRangeNotRequired</span><br>&nbsp;&nbsp;<span>usingBlock</span>:^(<span>id</span> value, <span>NSRange</span> range, <span>BOOL</span> *stop) {<br>&nbsp;&nbsp;<span>// do something</span><br>}];</code></p></div></section><section><h2 id="styling">Styling</h2><p>With the foundational knowledge behind us, itâs time to discuss how the syntax highlighting and text styling work in Paper.</p><p>As mentioned before, styling means applying special framework-defined attributes to ranges of text. In addition to them, Paper also uses custom attributes to identify the structure of the text before styling it. Hereâs the breakdown:</p><ol><li><div><p><strong>Meta attributes</strong></p><ul><li>Defined by the Markdown parser to identify individual parts of the Markdown syntax.</li><li>These are custom string-value pairs used purely for semantics.</li><li>They do not influence the visual look of the text.</li></ul></div></li><li><div><p><strong>Styling attributes</strong></p><ul><li>The visual attributes applied on top of the parts marked by meta attributes.</li><li>These are built-in string-value pairs defined by AppKit and UIKit.</li></ul></div></li></ol><img src="https://papereditor.app/internals-article/meta-and-styling-attributes.png" width="768" height="768" alt="The Mac app with the text âThe quick brown fox **jumps** ==over== the ~_lazy_~ dog.â in the center. Meta and styling attributes are labeled."><p>The attributes are kept in sync with:</p><ul><li>The <strong>Markdown text</strong> in <code>NSTextStorage</code> that changes due to user input.</li><li>The <strong>text-affecting settings</strong> that change as the user adjusts them from various menu items, sliders, and gestures.</li></ul><p>Technically, we can identify three types of events that trigger this attribute update process:</p><ol><li><strong>Document opened</strong> â full update of meta attributes and styling attributes.</li><li><strong>Text changed</strong> â partial update of meta attributes and styling attributes in the affected part. Most of the time only in the edited text. Sometimes in the whole paragraph. More on that in the next chapter.</li><li><strong>Setting changed</strong> â full update of styling attributes but not meta attributes.</li></ol><img src="https://papereditor.app/internals-article/attribute-update-events.png" width="768" height="940" alt="A diagram showing the three events and how much they update the meta and styling attributes."><p>In every update there is a well-defined sequence of steps:</p><ol><li><div><p><strong>Start the text editing transaction</strong></p><ul><li>Without a transaction, every attribute change would trigger an expensive layout recalc by the <code>NSLayoutManager</code>. Instead, we want to batch all the changes and re-layout only once in step <span><span>[</span><span>4.</span><span>]</span></span>.</li></ul></div></li><li><div><p><strong>Parse the Markdown structure</strong></p><ul><li>This is where the Markdown string is broken down into pieces denoted by the <em>meta attributes</em>.</li><li>This step is skipped for <em>setting change</em> since the Markdown structure does not change in this case.</li></ul></div></li><li><div><p><strong>Update layout-affecting attributes</strong></p><ul><li>The first batch of <em>styling attributes</em>.</li><li>This is every visual attribute that can influence the position or size of the glyphs in the text view.</li></ul></div></li><li><strong>End the text editing transaction</strong></li><li><div><p><strong>Update decorative attributes</strong></p><ul><li>The second batch of <em>styling attributes</em>.</li><li>The decorative attributes <span>(or <em>rendering attributes</em> in Appleâs terminology)</span> are applied outside the transaction. The reason is simple â they donât affect the layout, so updating them is not expensive. And they are not even aware of the transaction since they live in the <code>NSLayoutManager</code> itself, not in <code>NSTextStorage</code>.</li></ul></div></li></ol><img src="https://papereditor.app/internals-article/attribute-update-steps.png" width="768" height="922" alt="A diagram showing the five steps of the attribute update process on the text â**jumps** ==overâ. During step 3 the font attribute is applied to âjumpsâ. During step 5 the light gray color is applied to Markdown tags and the background color to âoverâ."><p>The most important attribute of the layout-affecting ones is <code>NSParagraphStyle</code>. It defines the bulk of the values that influence the layout of the lines and paragraphs.</p><img src="https://papereditor.app/internals-article/paragraph-style.png" width="768" height="712" alt="A diagram breaking down which parts of the text and in which way are affected by the NSParagraphStyle attribute in the Mac app."><p>The last chunk of attributes that participate in the styling process are the <em>typing attributes</em>. They are tied to the attributes at the position preceding the caret <span>(for empty selection)</span> or to the one at the start of the selection <span>(for non-empty selection)</span>. Once you type a character, the typing attributes are assigned to the newly inserted text automatically. In a Markdown editor, they are not that important as the styling is derived entirely from the Markdown syntax, but they are crucial for rich text editors where the styles <em>stick</em> to the caret until you turn them off or move the caret to a new location. Despite being a Markdown editor, Paper <em>does</em> have a rich text editing experience called the Preview Mode. In this mode, the editor behaves just like a rich text editor with <em>toggleable</em> typing attributes being highlighted, for example, on the toolbar in the iOS app.</p></section><section><h2 id="performance">Performance</h2><p>The separation of meta, layout, and decorative attributes plays nicely into keeping certain editor changes fast. For instance, toggling between light and dark modes requires updating only decorative attributes which is very fast as it does not trigger the layout. Setting changes such as text size adjustments, though require a re-layout of the whole document, is still reasonably fast compared to doing that plus a full re-parse of the Markdown structure.</p><p>That said, the most crucial performance piece of any text editor is undoubtedly the typing speed. The bad news is that due to how Markdown works, any text change has the potential to affect the styling of the whole paragraph.</p><p>Thus the logical thing to do is to re-parse and re-style the whole paragraph on every keystroke. The problem with that is while this is technically the most correct approach, it can slow down the editing for longer paragraphs. At the same time, if youâre simply typing out a long sentence, the Markdown structure does not change. There is really no need to re-style everything all the time for those simple typing scenarios.</p><p>So to make typing snappier, Iâve built an algorithm that looks at the next character being typed as well as what characters are around it. The gist of the logic is that if youâre typing a special Markdown symbol, or the location of the edit is surrounded by one, then you should update the whole paragraph, otherwise you can simply rely on the typing attributes. Itâs a simple algorithm that does marvels for the speed of the editor in the majority of typing situations.</p><img src="https://papereditor.app/internals-article/typing-optimization.png" width="768" height="866" alt="Two diagrams. In the first diagram the letter âpâ is inserted into the text â**jums** ==over=â between âmâ and âsâ. The newly inserted letter âpâ is restyled as a result. In the second diagram the letter â*â is deleted from â**jumps** ==overâ. The whole paragraph is restyled as a result and âjumpsâ is no longer bold."><p>The only nasty exception to the above is when you have code blocks in the document. Code blocks are the only multi-paragraph Markdown constructs in Paper. A keystroke has the potential to re-style the whole document.</p><p>For now, I decided to ignore code blocks in documents beyond a certain character limit. It keeps the editor fast for the majority of users who donât care about code, at the same time making Paper more useful for dev-adjacent audiences.</p><p>The final technique that I use to speed things up is to cache every complex value object in the string-value attribute pair.</p><ul><li><code>NSFont</code>/<code>UIFont</code></li><li><code>NSColor</code>/<code>UIColor</code></li><li><code>NSParagraphStyle</code></li></ul><p>They are being re-assigned on every keystroke and never change unless a text-affecting setting is changed, so it makes sense to reuse them instead of creating new instances every time.</p></section><section><p>Besides the highlighting logic, meta attributes play a crucial role in various features that need to know about the structure of the text.</p><div><div><h3>Formatting shortcuts</h3><div><ul><li>Toggling styles on a selected piece of Markdown text requires detailed information about the existing Markdown styles inside the selection.</li><li>If the selection completely encloses the same style, then the style is removed.</li><li>If the selection does not contain the same style, then the style is added.</li><li>If the selection partially encloses the same style, then the style is moved to the selection.</li><li>You also need to be careful not to mix the styles that cannot be mixed. The conflicting styles need to be removed first, before a new style can be added. For example, styles that define the type of the paragraph such as <em>heading</em> and <em>blockquote</em> cannot be mixed.</li></ul></div></div><div><h3>Jumping between chapters</h3><div><ul><li>Paper has a feature that allows you to jump to the previous or the next edge of the chapter.</li><li>Meta attributes help to locate the headings relative to the position of the caret.</li></ul></div></div><div><h3>Outline</h3><ul><li>The outline feature relies on being able to traverse every heading.</li><li>Pressing on the item in the outline moves the caret to that chapter.</li></ul></div><div><h3>Rearranging chapters</h3><div><ul><li>Paper also has a feature that allows rearranging chapters in the outline.</li></ul></div></div><div><h3>Converting formats</h3><ul><li>Converting the Markdown content to RTF, HTML, and DOCX relies on knowing the structure of the text.</li><li>Since Paper <a href="https://papereditor.app/dev#third-party-dependencies" target="_blank">does not include any external libraries</a>, having a pre-parsed model of the text allows me to traverse the structure, building the respective output format in the process.</li></ul><div><p><code>- (<span>NSString</span> *)<span>toHtml</span>:(<span>NSMutableAttributedString</span> *)string {<br>&nbsp;&nbsp;[<span>self</span> <span>encloseInHtmlTags</span>:string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>MdStrongAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>@{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span>MdStrong</span>: <span>@[</span> <span>@"&lt;strong&gt;"</span>, <span>@"&lt;/strong&gt;"</span> <span>]</span><br>&nbsp;&nbsp;<span>}</span>];<br>&nbsp;&nbsp;[<span>self</span> <span>encloseInHtmlTags</span>:string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>MdEmphasisAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>@{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span>MdEmphasis</span>: <span>@[</span> <span>@"&lt;em&gt;"</span>, <span>@"&lt;/em&gt;"</span> <span>]</span><br>&nbsp;&nbsp;<span>}</span>];<br>&nbsp;&nbsp;[<span>self</span> <span>encloseInHtmlTags</span>:string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>MdUnderlineAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>@{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span>MdUnderline</span>: <span>@[</span> <span>@"&lt;u&gt;"</span>, <span>@"&lt;/u&gt;"</span> <span>]</span><br>&nbsp;&nbsp;<span>}</span>];<br>&nbsp;&nbsp;[<span>self</span> <span>encloseInHtmlTags</span>:string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>MdStrikethroughAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>@{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span>MdStrikethrough</span>: <span>@[</span> <span>@"&lt;s&gt;"</span>, <span>@"&lt;/s&gt;"</span> <span>]</span><br>&nbsp;&nbsp;<span>}</span>];<br>&nbsp;&nbsp;[<span>self</span> <span>encloseInHtmlTags</span>:string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>MdHighlightAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>@{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span>MdHighlight</span>: <span>@[</span> <span>@"&lt;mark&gt;"</span>, <span>@"&lt;/mark&gt;"</span> <span>]</span><br>&nbsp;&nbsp;<span>}</span>];<br>&nbsp;&nbsp;[<span>self</span> <span>encloseInHtmlTags</span>:string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>MdCodeAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>@{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span>MdCode</span>: <span>@[</span> <span>@"&lt;code&gt;"</span>, <span>@"&lt;/code&gt;"</span> <span>]</span><br>&nbsp;&nbsp;<span>}</span>];<br>&nbsp;&nbsp;[<span>self</span> <span>encloseInHtmlTags</span>:string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>MdHeadingAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>@{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span>MdHeading1</span>: <span>@[</span> <span>@"&lt;h1&gt;"</span>, <span>@"&lt;/h1&gt;"</span> <span>]</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span>MdHeading2</span>: <span>@[</span> <span>@"&lt;h2&gt;"</span>, <span>@"&lt;/h2&gt;"</span> <span>]</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span>MdHeading3</span>: <span>@[</span> <span>@"&lt;h3&gt;"</span>, <span>@"&lt;/h3&gt;"</span> <span>]</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span>MdHeading4</span>: <span>@[</span> <span>@"&lt;h4&gt;"</span>, <span>@"&lt;/h4&gt;"</span> <span>]</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span>MdHeading5</span>: <span>@[</span> <span>@"&lt;h5&gt;"</span>, <span>@"&lt;/h5&gt;"</span> <span>]</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span>MdHeading6</span>: <span>@[</span> <span>@"&lt;h6&gt;"</span>, <span>@"&lt;/h6&gt;"</span> <span>]</span><br>&nbsp;&nbsp;<span>}</span>];<br>&nbsp;&nbsp;[<span>self</span> <span>encloseInHtmlTags</span>:string<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>ParagraphAttributeName</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:<span>@{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span>Paragraph</span>: <span>@[</span> <span>@"&lt;p&gt;"</span>, <span>@"&lt;/p&gt;"</span> <span>]</span><br>&nbsp;&nbsp;<span>}</span>];<p>&nbsp;&nbsp;[<span>self</span> <span>encloseInBlockquoteHtmlTags</span>:string];<br>&nbsp;&nbsp;[<span>self</span> <span>encloseInListHtmlTags</span>:string];<br>&nbsp;&nbsp;[<span>self</span> <span>transformFootnotesForHtml</span>:string];<br>&nbsp;&nbsp;[<span>self</span> <span>deleteCharactersWithAttributes</span>:string :<span>MetaAttributes</span>.<span>tags</span>];<br>&nbsp;&nbsp;[<span>self</span> <span>insertHtmlBreaksOnEmptyLines</span>:string];</p><p>&nbsp;&nbsp;<span>return</span> string;<br>}</p></code></p></div></div></div></section><section><h2 id="text-container-math">Text container math</h2><p>The most important rule for the text container is to maintain the preferred line length, dividing the remaining space between side insets.</p><img src="https://papereditor.app/internals-article/text-container-math.png" width="768" height="798" alt="A diagram breaking down the interface of the Mac app. The text container is centered and the side margins are of the same width."><p>There are however trickier cases where you need to fake the symmetry. Like when the heading tags are placed outside of the regular flow of text. The text container is shifted to the left and the paragraphs are indented with <code>NSParagraphStyle</code>.</p><img src="https://papereditor.app/internals-article/text-container-symmetry.png" width="768" height="1018" alt="A diagram breaking down the interface of the Mac app. Various gaps and dimensions are labeled."><p>While there is enough space, it tries to keep the margins visually symmetrical. If there is no extra space left, then it breaks the symmetry in favor of keeping the specified line length. But only while there is padding remaining on the right side. When there is no padding left, the minimum margins take precedence over keeping the line length to its preferred width.</p><p>You can achieve this gradual collapsing with a combination of <code>min</code> and <code>max</code> functions. It takes a second or two to get your head around the math, but once you do, it feels quite elegant in my opinion. I love this kind of simple mathy code that leads to beautiful visual results.</p><div><div><p> MaTvTextContainerModule.m</p></div><p><code>- (<span>CGFloat</span>)<span>leftInset</span> {<br>&nbsp;&nbsp;<span>return</span> (<span>self</span>.<span>availableInsetWidth</span> - <span>fmin</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span>self</span>.<span>availableInsetWidth</span> - <span>self</span>.<span>totalMinInset</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span>self</span>.<span>leftPadding</span><br>&nbsp;&nbsp;)) / <span>2.0</span>;<br>}<p>- (<span>CGFloat</span>)<span>rightInset</span> {<br>&nbsp;&nbsp;<span>return</span> <span>self</span>.<span>availableInsetWidth</span> - <span>self</span>.<span>leftInset</span>;<br>}</p><p>- (<span>CGFloat</span>)<span>availableInsetWidth</span> {<br>&nbsp;&nbsp;<span>return</span> <span>self</span>.<span>availableWidth</span> - <span>self</span>.<span>textContainerWidth</span>;<br>}</p><p>- (<span>CGFloat</span>)<span>textContainerWidth</span> {<br>&nbsp;&nbsp;<span>return</span> <span>fmin</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span>self</span>.<span>maxContentWidth</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span>self</span>.<span>availableWidth</span> - <span>self</span>.<span>totalMinInset</span><br>&nbsp;&nbsp;);<br>}</p><p>- (<span>CGFloat</span>)<span>maxContentWidth</span> {<br>&nbsp;&nbsp;<span>return</span> <span>self</span>.<span>lineLength</span> * <span>self</span>.<span>characterWidth</span> + <span>self</span>.<span>leftPadding</span>;<br>}</p><p>- (<span>CGFloat</span>)<span>availableWidth</span> {<br>&nbsp;&nbsp;<span>return</span> <span>CGRectGetWidth</span>(<span>self</span>.<span>clipView</span>.<span>bounds</span>);<br>}</p><p>- (<span>CGFloat</span>)<span>totalMinInset</span> {<br>&nbsp;&nbsp;<span>return</span> <span>self</span>.<span>minInset</span> * <span>2.0</span>;<br>}</p><p>- (<span>CGFloat</span>)<span>minInset</span> {<br>&nbsp;&nbsp;<span>return</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span>CGRectGetMinX</span>(<span>self</span>.<span>window</span>.<span>titlebarButtonGroupBoundingRect_</span>) +<br>&nbsp;&nbsp;&nbsp;&nbsp;<span>CGRectGetMaxX</span>(<span>self</span>.<span>window</span>.<span>titlebarButtonGroupBoundingRect_</span>);<br>}</p><p>- (<span>CGFloat</span>)<span>leftPadding</span> {<br>&nbsp;&nbsp;<span>return</span> [<span>@"### "</span> <span>sizeWithAttributes</span>:<span>@{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span>NSFontAttributeName</span>: <span>Font</span>.<span>body</span><br>&nbsp;&nbsp;<span>}</span>].<span>width</span>;<br>}</p></code></p></div></section><section><h2 id="selection-anchoring">Selection anchoring</h2><p>Text selection always has an anchor point. Itâs something we are so used to that we never stop to think about.</p><p>On the Mac, we click and drag to select the text and we instinctively know that the selection will increase when dragging to the right and decrease when dragging to the left. But only until we hit the point of the click. Then the opposite happens.</p><p>On iOS the selection is a bit more interactive. We can drag one edge and then the other one becomes the anchor, and vice versa.</p><p>The same logic applies when we extend the selection with the keyboard. Hold the <em>Option</em> key plus a left or a right arrow and you can jump between the edges of the words. Do the same while holding the <em>Shift</em> key, in addition to the <em>Option</em> key, and you can select with word increments. And again â it remembers where you started.</p><p>It even works naturally when you first click and drag and then continue extending or shrinking the selection with the keyboard. The initial point of the click remains the anchor.</p></section><section><h2 id="selection-affinity">Selection affinity</h2><p>Another fascinating concept of text editing that you <em>most probably</em> donât know about is <em>selection affinity</em>. Quoting Appleâs documentation:</p><blockquote><p>Selection affinity determines whether, for instance, the insertion point appears after the last character on a line or before the first character on the following line in cases where text wraps across line boundaries.</p></blockquote><p>My guess is you still have no clue what it means, so letâs see it in action.</p><p>Pay attention to the screencast below. When I move the caret with the arrow keys, it simply switches the lines when moving around the wrapping point denoted by the <em>space</em> character. However, if I move the caret to the end of the line with the shortcut, it attaches itself to the right side of the wrapping space while staying on the same line.</p><p>There are also other instances where the <code>TextView</code> decides to play this trick. Itâs a tiny detail and sort of makes sense when you think about it, but quite hard to actually notice.</p></section><section><h2 id="utis">Uniform Type Identifiers</h2><p>The last chapter will focus on cross-app data exchange, but first, we need to discuss the system that underpins it â the UTIs. Itâs a hierarchical system where data types <em>conform to</em> (inherit from) parent data types.</p><ul><li><code>public.*</code> types are defined by Apple. They identify the widely accepted formats such as <code>public.html</code> and <code>public.jpeg</code>.</li><li>Developers can create their own identifiers using the <em>reverse domain naming scheme</em> to avoid collisions.</li></ul><img src="https://papereditor.app/internals-article/utis.png" width="768" height="768" alt="A diagram showing the hierarchical structure of UTIs. At the top is âpublic.dataâ, below it âpublic.textâ. Then it splits to âpublic.plain-textâ and âpublic.rtfâ. Below âpublic.plain-textâ is ânet.daringfireball.markdownâ." .=""><p>The benefit of the hierarchical system is that, for example, if your app can view any text format then you donât need to list all of them â you can just say that it works with <code>public.text</code>. And indeed, Paper declares that it can open any text file, and although you wonât get any highlighting, you can still open <code>.html</code>, <code>.rtf</code>, or any other text format.</p><img src="https://papereditor.app/internals-article/rtf-in-paper.png" width="768" height="712" alt="RTF file opened in the Mac app." .=""><p>When exchanging data via a programmatic interface such as the clipboard, UTIs can be used directly. Files however are a bit trickier. File is a cross-platform concept and de-facto identifiers for files in the cross-platform realm are <em>file extensions</em>. Even if Apple would redo their systems to rely on some file-level UTI metadata field instead of the file extension <span>(and <a href="https://stackoverflow.com/questions/34927527" target="_blank">it appears they have</a>)</span>, other systems would not know anything about it. So to stay compatible, every UTI can define one or more file extensions that are associated with it.</p><p>Now, most of the time you work with either public UTIs or private ones that youâve created specifically for your app. Things are relatively straightforward in these scenarios. The harder case is when you have a format thatâs widely accepted, but not defined by Apple. This is exactly the case with <a href="https://daringfireball.net/linked/2011/08/05/markdown-uti" target="_blank">Markdown</a>. I will explain some of the annoying edge cases with these <em>semi-public</em> UTIs in the next chapter.</p></section><section><h2 id="pasteboard">Pasteboard</h2><p>UTIs transition nicely into the topic of cross-app exchange driven primarily by the <em>clipboard</em>, or in Appleâs technical terms â the <em>pasteboard</em>.</p><p>The pasteboard is nothing more than a dictionary where UTIs are mapped to serialized data â in either textual or binary format. In fact, using the <em>Clipboard Viewer</em> from <em>Additional Tools for Xcode</em> you can inspect the contents of the pasteboard in real time.</p><p>As you can see, a single <em>copy</em> action writes multiple representations of the same data at once <span>(for backward compatibility some apps also write legacy non-UTI identifiers such as <code>NeXT Rich Text Format v1.0 pasteboard type</code>)</span>. Thatâs how, for instance, if you copy from Pages and paste it into <a href="https://apps.apple.com/app/id1669953820" target="_blank">MarkEdit</a> â you get just the text, but if you paste it into TextEdit â you get the whole shebang.</p><p>As a general rule, editors pick whatever is the <em>richest</em> format they can handle. Some apps provide ways to force a specific format to be used. For example, a common menu item in the <em>Edit</em> menu of rich text editors is <em>Paste and Match Style</em> or <em>Paste as Plain Text</em>. It tells the app to use the plain text format from the pasteboard. The styles applied to the pasted text are usually taken from the <em>typing attributes</em>.</p><p>A fun fact is that drag and drop is also powered by the pasteboard, but a different one. The standard one is called the <em>general pasteboard</em> and itâs used for copy-paste. You can even create custom ones for bespoke cross-app interactions.</p><p>Another fun fact is that RTF is basically the serialized form of <code>NSAttributedString</code>. Or vice versa, <code>NSAttributedString</code> is the programmatic interface for RTF.</p><div><p><code><span>NSAttributedString</span> *string = [<span>NSAttributedString</span>.<span>alloc initWithString</span>:<br>&nbsp;&nbsp;<span>@"The quick brown fox jumps over the lazy dog."</span>];<br><span>NSData</span> *data = [string <span>dataFromRange</span>:<span>NSMakeRange</span>(<span>0</span>, string.<span>length</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>documentAttributes</span>:<span>@{</span><br>&nbsp;&nbsp;<span>NSDocumentTypeDocumentOption</span>: <span>NSRTFTextDocumentType</span><br><span>}</span> <span>error</span>:<span>nil</span>];<p><span>// {\rtf1\ansi\ansicpg1252\cocoartf2759â¦</span><br><span>NSLog</span>(<span>@"%@"</span>, [<span>NSString</span>.<span>alloc initWithData</span>:data]);</p></code></p></div><p>This means that <code>TextView</code> is out-of-the-box compatible with the pasteboard since it works on top of <code>NSTextStorage</code> â the child class of <code>NSAttributedString</code>. No extra coding is needed to copy the contents to the pasteboard.</p><p>Now, as I mentioned in the last chapter, this is all great for public UTIs. But what about <a href="https://daringfireball.net/linked/2011/08/05/markdown-uti" target="_blank">semi-public</a> ones like Markdown? From my experience, the cross-app exchange is a mixed bagâ¦</p><p>Imagine you want to copy from one Markdown editor and paste it into another one. Letâs say both have implemented the standard protocol to export formats with various levels of richness and to import the richest format given. Copying from the first editor exports Markdown as <code>public.text</code> and the rich text representation as <code>public.rtf</code>. When pasting to the second editor, it will pick <code>public.rtf</code> instead of the native Markdown format since there is no indication that the text is indeed Markdown. You end up with this weird double conversion that leads to all sorts of small formatting issues, such as extra newlines due to slight variations in the way MarkdownâRTF translation works in both apps, as well as just fundamental styling differences between Markdown and RTF. For the user it is obvious â <span><span>â</span><span>I copy Markdown from here and paste it here â it should just copy 1:1</span><span>â</span>, but under the hood there is a lot of needless conversion.</span></p><p>For this to work nicely, both apps should magically agree to export the <code>net.daringfireball.markdown</code> UTI and prefer it over <code>public.rtf</code>. If only one of the apps does it â it wonât make a difference. Paper tried to be a good citizen by exporting the Markdown UTI, but none of the other apps seem to prefer it over rich text. In addition to that, Pages has a weird behavior where it <em>does</em> prefer <code>net.daringfireball.markdown</code> over <code>public.rtf</code>, but in doing so it just inserts the raw Markdown string as is without converting it to rich text <span>(why-y-y??? ð«)</span>. For this reason, I had to drop the Markdown UTI.</p><p><span><span>â</span><span>But why export RTF at all? Markdown is all about plain text â drop RTF and problem solved</span><span>â</span> â you might think. Well, thatâs true, but I want to provide a seamless copy-paste experience from Paper to rich text editors. And being a good OS citizen, you <em>should</em> provide many formats that represent the copied data, so that the receiving application could pick the richest one it can handle. In Paper, you can copy the Markdown text from the editor and paste it into the Mail app, and it would paste as nicely formatted rich text, not as some variant of Markdown. This is a great experience in my opinion. The only problem is that it often leads to less-than-ideal UX in other cases.</span></p><p>Another feature closely related to the pasteboard is <em>sharing</em> on iOS. Itâs quite similar to copy-paste, only with a bit of UI on top. Your app exports data in various formats and the receiving app decides what format it wants to grab. Strangely enough, UTIs are not used to identify the data <span>(well actually they <a href="https://stackoverflow.com/questions/28654593" target="_blank">kind of are</a> through some bizarre scripting language in a config file ð±)</span>. Rather, classes such as <code>NSAttributedString</code>, <code>NSURL</code>, and <code>UIImage</code> are directly used to represent the type. Unlike the pasteboard that applies to all apps automatically, the sharing feature on iOS requires apps to explicitly opt-in to be present in that top row of apps by providing a <em>share extension</em> with a custom UI.</p></section><section><h2 id="thats-it">Thatâs it for now</h2><p>Check out the <a href="https://papereditor.app/dev" target="_blank">first article</a> if you havenât already. It has a lot more tidbits about the app and the development process.</p></section></article><p>PS â I like sweating the details. If you think I might be useful to you â <a href="https://twitter.com/_mihhail" target="_blank">reach out</a>. <span>ð</span></p></div>]]></description>
        </item>
    </channel>
</rss>