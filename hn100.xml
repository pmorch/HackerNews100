<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 10 Dec 2023 05:00:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Show HN: Open source alternative to ChatGPT and ChatPDF-like AI tools (118 pts)]]></title>
            <link>https://github.com/SecureAI-Tools/SecureAI-Tools</link>
            <guid>38587052</guid>
            <pubDate>Sat, 09 Dec 2023 23:02:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/SecureAI-Tools/SecureAI-Tools">https://github.com/SecureAI-Tools/SecureAI-Tools</a>, See on <a href="https://news.ycombinator.com/item?id=38587052">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">SecureAI Tools</h2>
<p dir="auto">Private and secure AI tools for everyone's productivity.</p>
<p dir="auto"><a href="https://discord.gg/YTyPGHcYP9" rel="nofollow"><img src="https://camo.githubusercontent.com/fa9f3bc30878e81e1f1185116459d5c7545de20691b02704fc3e02c242531b65/68747470733a2f2f646362616467652e76657263656c2e6170702f6170692f7365727665722f595479504748635950393f7374796c653d666c617426636f6d706163743d74727565" alt="Discord" data-canonical-src="https://dcbadge.vercel.app/api/server/YTyPGHcYP9?style=flat&amp;compact=true"></a></p>
<h2 tabindex="-1" dir="auto">Highlights</h2>
<ul dir="auto">
<li><strong>Chat with AI</strong>: Allows you to chat with AI models (i.e. ChatGPT).</li>
<li><strong>Chat with Documents</strong>: Allows you to chat with documents (PDFs for now). Demo videos below</li>
<li><strong>Local inference</strong>: Runs AI models locally. Supports 100+ open-source (and semi-open-source) AI models through <a href="https://ollama.ai/library" rel="nofollow">Ollama</a>.</li>
<li><strong>Built-in authentication</strong>: A simple email/password authentication so it can be opened to internet and accessed from anywhere.</li>
<li><strong>Built-in user management</strong>: So family members or coworkers can use it as well if desired.</li>
<li><strong>Self-hosting optimized</strong>: Comes with necessary scripts and docker-compose files to get started in under 5 minutes.</li>
<li><strong>Lightweight</strong>: A simple web app with SQLite DB to avoid having to run docker container for DB. Data is persisted on host machine through docker volumes</li>
</ul>
<h2 tabindex="-1" dir="auto">Demos</h2>
<h4 tabindex="-1" dir="auto">Chat with documents demo: OpenAI's GPT3.5</h4>
<p dir="auto"><a href="https://www.youtube.com/watch?v=Br2D3G9O47s" rel="nofollow"><img src="https://camo.githubusercontent.com/9c020ee9a9c39f400b5b609ffc5980fa34bcc4bbc372221d0c9c8c62c9ceb95e/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f427232443347394f3437732f302e6a7067" alt="Chat with documents demo: OpenAI's GPT3.5" data-canonical-src="https://img.youtube.com/vi/Br2D3G9O47s/0.jpg"></a></p>
<h4 tabindex="-1" dir="auto">Chat with documents demo: Locally running Mistral (M2 MacBook)</h4>
<p dir="auto"><a href="https://www.youtube.com/watch?v=UvRHL6f_w74" rel="nofollow"><img src="https://camo.githubusercontent.com/491fb33329828504bbdc3ca9a1a5669f14916ab88a8828a0775a3cc3bb093f48/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f557652484c36665f7737342f302e6a7067" alt="Chat with documents demo: Locally running Mistral" data-canonical-src="https://img.youtube.com/vi/UvRHL6f_w74/0.jpg"></a></p>
<h2 tabindex="-1" dir="auto">Install</h2>
<h3 tabindex="-1" dir="auto">Docker Compose [Recommended]</h3>
<h4 tabindex="-1" dir="auto">1. Create a directory</h4>
<div data-snippet-clipboard-copy-content="mkdir secure-ai-tools &amp;&amp; cd secure-ai-tools"><pre><code>mkdir secure-ai-tools &amp;&amp; cd secure-ai-tools
</code></pre></div>
<h4 tabindex="-1" dir="auto">2. Run set-up script</h4>
<p dir="auto">The script downloads <code>docker-compose.yml</code> and generates a <code>.env</code> file with sensible defaults.</p>
<div dir="auto" data-snippet-clipboard-copy-content="curl -sL https://github.com/SecureAI-Tools/SecureAI-Tools/releases/latest/download/set-up.sh | sh"><pre>curl -sL https://github.com/SecureAI-Tools/SecureAI-Tools/releases/latest/download/set-up.sh <span>|</span> sh</pre></div>
<h4 tabindex="-1" dir="auto">3. [Optional] Edit <code>.env</code> file</h4>
<p dir="auto">Customize the <code>.env</code> file created in the above step to your liking.</p>
<h4 tabindex="-1" dir="auto">4. [Optional] On Linux machine with Nvidia GPUs, enable GPU support</h4>
<p dir="auto">To accelerate inference on Linux machines, you will need to enable GPUs. This is not strictly required as the inference service will run on CPU-only mode as well, but it will be slow on CPU. So if your machine has Nvidia GPU then this step is recommended.</p>
<ol dir="auto">
<li>Install <a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#installation" rel="nofollow">Nvidia container toolkit</a> if not already installed.</li>
<li>Uncomment the <code>deploy:</code> block in <code>docker-compose.yml</code> file. It gives inference service access to Nvidia GPUs.</li>
</ol>
<h4 tabindex="-1" dir="auto">5. Run docker compose</h4>

<h4 tabindex="-1" dir="auto">6. Post-installation set-up</h4>
<ol dir="auto">
<li>
<p dir="auto">Login at <a href="http://localhost:28669/log-in" rel="nofollow">http://localhost:28669/log-in</a> using the initial credentials below, and change the password.</p>
<ul dir="auto">
<li>
<p dir="auto">Email</p>
<div data-snippet-clipboard-copy-content="bruce@wayne-enterprises.com"><pre><code>bruce@wayne-enterprises.com
</code></pre></div>
</li>
<li>
<p dir="auto">Password</p>

</li>
</ul>
</li>
<li>
<p dir="auto">Set up the AI model by going to <a href="http://localhost:28669/-/settings?tab=ai" rel="nofollow">http://localhost:28669/-/settings?tab=ai</a></p>
</li>
<li>
<p dir="auto">Navigate to <a href="http://localhost:28669/-" rel="nofollow">http://localhost:28669/-</a> and start using AI tools</p>
</li>
</ol>
<h2 tabindex="-1" dir="auto">Features wishlist</h2>
<p dir="auto">A set of features on our todo list (in no particular order).</p>
<ul dir="auto">
<li>✅ Chat with documents</li>
<li>✅ Support for OpenAI, Claude etc APIs</li>
<li>Support for markdown rendering</li>
<li>Chat sharing</li>
<li>Mobile friendly UI</li>
<li>Specify AI model at chat-creation time</li>
<li>Prompt templates library</li>
</ul>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Matter of Millimeters: The story of Qantas flight 32 (228 pts)]]></title>
            <link>https://admiralcloudberg.medium.com/a-matter-of-millimeters-the-story-of-qantas-flight-32-bdaa62dc98e7</link>
            <guid>38586773</guid>
            <pubDate>Sat, 09 Dec 2023 22:30:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://admiralcloudberg.medium.com/a-matter-of-millimeters-the-story-of-qantas-flight-32-bdaa62dc98e7">https://admiralcloudberg.medium.com/a-matter-of-millimeters-the-story-of-qantas-flight-32-bdaa62dc98e7</a>, See on <a href="https://news.ycombinator.com/item?id=38586773">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><a rel="noopener follow" href="https://admiralcloudberg.medium.com/?source=post_page-----bdaa62dc98e7--------------------------------"><div aria-hidden="false"><p><img alt="Admiral Cloudberg" src="https://miro.medium.com/v2/resize:fill:88:88/2*pZPMtIONqtJYi2xHYD_Ivg.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"></p></div></a></div><figure><figcaption>Officials observe damage to the engine of a Qantas A380 after it made an emergency landing in Singapore. (Reuters)</figcaption></figure><p id="8705">On the 4th of November 2010, a Qantas Airbus A380 was rocked by a catastrophic engine failure minutes after takeoff from Singapore, hurling fragments of a turbine disk through its wings and fuselage in multiple locations. The explosion damaged almost every major system on the airplane, from the flight controls and fuel tanks to hydraulics and pneumatics. Faced with a barrage of diverse failure warnings and an airplane of uncertain integrity, the flight crew worked together to make a series of critical decisions that would get their enormous airplane back on the ground. And in the end, despite one curveball after another — including landing gear problems, loss of braking power, and an engine that refused to shut down — they not only landed the plane, but did so without putting a scratch on any of the 469 passengers and crew.</p><p id="5ab9">The cause of the incident would ultimately be traced deep inside the number two engine to a single oil pipe that had been manufactured with a wall that was slightly too thin. How this seemingly tiny defect came about, and how it nearly brought down the world’s largest passenger plane, represent a story equally as fascinating as that of the flight itself, tracing back years to encompass questionable drawing board decisions, hidden flaws in the machining logic, and faulty assumptions about engine behavior. Time and time again, the problem slipped through the gaps in the system, tumbling down the long slope toward disaster — only to be stopped at the last moment, not only by the pilots themselves, but by a number of explicit protections built into the design of the A380, each of which played a crucial role in containing the fallout from a failure that exceeded the manufacturer’s worst expectations. The story of Qantas flight 32, as told herein, is therefore not only the tale of a dramatic emergency, but a testament to the safety of aviation today — a story that should make every reader feel a little less fearful of flight.</p><p id="1a65">◊◊◊</p><figure><figcaption>A brand new Airbus A380 takes to the skies. (Pascal Le Segretain)</figcaption></figure><p id="dab4">Introduced to service in 2007, the double decker, four-engine A380 is by far the largest passenger aircraft in the world, exceeding the vaunted Boeing 747 in almost every measurement. Awesome to behold and pleasant to fly, there’s not much to dislike about the A380 — unless you’re an airline, in which case most major carriers dismissed the behemoth as too large for their operating models. Indeed, analysts’ assessment today is that the A380 was built for a market that had shrunk considerably by the time it actually entered service, and as a result, production ended in 2021 with only 254 built, some of which have already been scrapped. For an extraordinarily expensive aircraft equipped with some of the most advanced technology of any airliner, the collective result of immense effort and imagination, such a fate is unfortunate, but the reasons behind it, and the future of the type, are topics for a different article.</p><p id="5896">Despite the above, some airlines did find the A380 suitable for their operations, including Qantas, the flag carrier of Australia. Qantas ordered 10 A380s to be delivered in 2008, of which eight are still flying today. It was the very first of these, registered as VH-OQA and nicknamed Nancy-Bird Walton after the pioneering Australian aviator, that would come to be involved in the events of the 4th of November 2010.</p><figure><figcaption>VH-OQA, the aircraft involved in the accident. (Andrei Dimofte)</figcaption></figure><p id="5e90">On that date, VH-OQA arrived in Singapore for a scheduled stopover on a marathon London-to-Sydney trip, where it took on fuel, passengers, and a new flight crew for the last leg to Australia. The plane was essentially full, with 440 of 450 passenger seats filled, plus a massive complement of 29 crewmembers, including no less than five pilots. Although the A380 is normally flown by only two pilots, Qantas had also rostered a second officer as a relief crewmember; a check airman was conducting a line check on the captain; and another check airman was training the first check airman, so the cockpit was certainly crowded.</p><p id="ff17">In command, and under examination, was 53-year-old Captain Richard Champion de Crespigny, a veteran airman with over 15,000 hours of experience and 32 years in aviation. The other crewmembers consisted of First Officer Matt Hicks, Second Officer Mark Johnson, Check Captain Harry Wubben, and Senior Check Captain David Evans. The five crewmembers had a combined 140 years in aviation and 71,000 hours of flying experience, an incredible total that is rarely equaled.</p><p id="70ee">At 9:56 a.m. local time, with Captain de Crespigny at the controls, Qantas flight 32 departed Singapore and proceeded southeast across the strait toward Indonesia, passing over the densely populated island of Batam. All parameters still appeared normal as the A380 climbed through 7,000 feet, four minutes after takeoff. There was no indication that a catastrophic failure was in fact just seconds away.</p><p id="bece">◊◊◊</p><figure><figcaption>A Rolls-Royce Trent 900 engine with a man for scale. (Wikimedia user Tangopaso)</figcaption></figure><p id="4196">The Airbus A380 is powered by four massive Rolls-Royce RB211 Trent 900-series high-bypass turbofan engines, each producing up to 84,000 lbf of thrust. Designed specifically for the A380, the Trent 900 was produced at several locations in the United Kingdom and was sold in competition with the American-built GP7200 jointly developed by Pratt &amp; Whitney and General Electric.</p><p id="9d52">Understanding what happened aboard Qantas flight 32 requires that I subject you to a description of the structure of certain very specific parts of the engine.</p><p id="e805">Like all high-bypass jet engines, the Trent 900 consists of four main sections: the fan, the compressors, the combustion chamber, and the turbines. During normal operation, air is forced backward and pressurized by a series of increasingly powerful compressors before being fed into the combustion chamber, where it is mixed with fuel and ignited. The combustion creates mechanical energy that spins a series of turbines, which in turn power the compressors, as well as the fan at the front of the engine, which accelerates large quantities of so-called bypass air around the outside of the engine core to generate most of the thrust output.</p><figure><figcaption>Locations of turbines and compressors on the Trent 900. (FAA)</figcaption></figure><p id="dcf5">Most turbofan engines examined in my articles have a high pressure compressor and a low pressure compressor, which correspond to high- and low-pressure turbines. These turbines are connected to their respective compressor sections by concentric drive shafts. However, the Trent 900 differs from this layout slightly, because it also has an intermediate pressure compressor with a corresponding intermediate pressure turbine, in between the high and low pressure sections. It also differs in that the fan itself doubles as the low pressure compressor. (From now on, for brevity’s sake, the abbreviations LP, IP, and HP will be used for low pressure, intermediate pressure, and high pressure, respectively.)</p><figure><figcaption>In this cutaway diagram of the IP turbine area, I’ve drawn blue boxes around the components mentioned in the following paragraph. (ATSB)</figcaption></figure><p id="48a2">On the Trent 900, the HP and IP turbine sections at the rear of the engine each consist of a single-stage turbine disk. Blades around the circumference of each disk capture mechanical energy from hot combustion gases flowing through what is known as the “annulus gas path.” These gases spin the disk, which is attached by a drive arm to its associated drive shaft. The shaft then transfers the turbine’s rotational energy forward to the corresponding compressor at the front of the engine.</p><figure><figcaption>This clip from an FAA video helps visualize the cutaway of the HP/IP bearing assembly. Note the location of the bearing chamber, which is depicted full of oil, and the pipe leading into it. Watch the full video here: <a href="https://www.youtube.com/watch?v=sYxVin_FFxQ" rel="noopener ugc nofollow" target="_blank">https://www.youtube.com/watch?v=sYxVin_FFxQ</a></figcaption></figure><p id="dfc8">In order to support the turbine disks and shafts while still allowing them to rotate freely, the engine features a complex system of bearings. The HP and IP turbine sections have a common bearing assembly, called the HP/IP bearing hub, which encircles the drive shafts and holds them in place while allowing free rotation of the shafts within.</p><p id="d60c">To prevent wear on the bearings, the space inside the bearing hub, called the bearing chamber, is constantly filled with pressurized oil that keeps everything gliding smoothly. This oil is supplied primarily by an oil feed pipe that runs from the main engine oil supply, past the annulus gas path, and down into the HP/IP bearing hub, where it injects oil through a filter and into the bearing chamber.</p><p id="d009">The structure of the bearing hub consists of an inner and outer hub section, such that an empty buffer space exists between the bearing chamber and the rest of the engine. The oil feed pipe runs through both sections in order to reach the bearing chamber. The last segment of this pipe, a few centimeters in length, is welded in place during manufacture of the bearing hub, and the main portion of the pipe is fitted to it later. This fixed final segment that passes through the buffer space between the inner and outer sections of the HP/IP bearing hub is called the “stub pipe.”</p><p id="5d37">For reasons that will be examined in detail later, this tiny oil feed stub pipe triggered an escalating sequence of events within the space of mere seconds as Qantas flight 32 climbed away from Singapore.</p><p id="1540">Within the №2 engine, located in the inboard position on the left wing, a crack in the oil feed stub pipe caused it to begin leaking oil less than four minutes after takeoff. The leak was small, but the oil within the pipe was highly pressurized, resulting in an atomized spray into the buffer space between the inner and outer sections of the HP/IP bearing hub. The temperature inside this buffer space was likely between 365 and 375˚C, well above the 280-degree auto-ignition temperature of the engine oil, so the spray immediately ignited.</p><figure><figcaption>An FAA animation of the failure sequence leading up to the explosion aboard Qantas 32, annotated by me. This should be really helpful for visualizing the following paragraph. (FAA)</figcaption></figure><p id="eb6e">At the forward end of the bearing hub, a triple seal is attached to the hub structure to isolate the buffer space, which has a low internal pressure, from the area behind the high pressure turbine disk, where pressure is higher. But as the fire in the buffer space expanded, it impinged upon this seal, causing it to fail. With the low-pressure area no longer sealed off, highly pressurized air from the annulus gas path was drawn toward it, bursting down past the high pressure turbine disk and into the buffer space. This rush of air coming in through the forward end of the buffer space blasted the fire aft, propelling it like a blowtorch against the corresponding seal at the other end, which also failed. The burning oil “blowtorch” was then able to make direct contact with the drive arm connecting the IP turbine disk to its drive shaft, located directly behind the HP/IP bearing hub. Already under considerable stress as a result of normal engine operation, the drive arm failed under the withering heat within a matter of seconds.</p><p id="8614">This entire sequence, from the initiation of the oil leak to the failure of the drive arm, lasted considerably less than one minute.</p><figure><figcaption>The turbine disk disintegrates. (ATSB)</figcaption></figure><p id="66fa">Now, with the drive arm broken, the IP turbine disk was not directly connected to anything, which is (to use the technical jargon) a really big problem. A turbine disk is subjected to considerable mechanical energy from the annulus gas path, and that doesn’t go away when the drive arm breaks, but what does go away is any ability to transfer that energy somewhere other than the turbine disk itself. During normal operations, this energy is used to turn the intermediate compressors, which requires considerable force. But this load path only exists when the turbine disk is connected to the drive shaft, so when the drive arm broke, the only way for the disk to absorb all that energy was to spin faster… and faster… and faster…</p><p id="bea9">Within the space of four seconds, the energy from the annular gas flow accelerated the IP turbine past its critical speed, until centrifugal forces exceeded the ultimate strength of the nickel alloy disk. The red-hot, wildly spinning disk instantly fractured into several sections, which rocketed outward in multiple directions at incomprehensible speed.</p><figure><figcaption>The disk fragments neatly ripped out everything within the disk’s plane of rotation. (ATSB)</figcaption></figure><p id="60d0">Engine designers do their best to make sure that the engine structure can contain flying debris like individual fan and turbine blades, but the amount of energy contained within those types of projectiles is a fraction of that within a piece of a burst disk. For engineering purposes, disk fragments are assumed to have infinite energy at the moment of release; they will cut through any reasonable material and cannot be contained.</p><p id="c241">When the IP turbine disk on Qantas flight 32 suddenly burst, nothing could stop the resulting fragments, which cut through the engine case and cowling like butter, cleaving a neat circumferential fissure all the way around the engine within the plane where the disk used to be. Within a fraction of a second, one of these disk fragments exited the engine downward and to the left, propelled toward the distant ground, but several more traveled in the opposite direction. One fragment shot to the right, entered the belly area below the cargo hold, plowed through several structural stringers and wire bundles, then exited out the other side, never to be seen again. Two more fragments rocketed upward, carving paths of destruction through the interior of the left wing before emerging from its upper surface, at which point they too disappeared into space. Numerous smaller pieces, such as dislodged turbine blades and fragments of engine structure, also peppered various parts of the aircraft, including the wings and fuselage.</p><figure><figcaption>The trajectories of the various fragments. (ATSB)</figcaption></figure><p id="9749">On board the plane, the pilots and passengers heard two distinct bangs in very short succession, which were followed in the cockpit by a sudden, overwhelming cascade of warnings. The plane yawed slightly to the left and the autothrust system disconnected. Recognizing that a serious malfunction had occurred, Captain de Crespigny pressed the altitude hold button on the autopilot to level the plane, and then everyone’s attention turned to the ECAM.</p><p id="7051">The Electronic Centralized Aircraft Monitoring system, or ECAM, presents the crew with warnings, cautions, and advisories related to the degradation or failure of a huge range of aircraft systems, along with the associated abnormal or emergency procedures. A feature of most modern airliners, ECAM displays have transformed the way pilots deal with in-flight emergencies, helping ensure swift and correct action in response to almost any conceivable mechanical failure. Today, this system would be put to the test.</p><p id="9357">The first message to appear on the ECAM screen was an ENG 2 TURBINE OVERHEAT warning, which was followed within the next 20 seconds by another 34 messages of varying alert levels. The highest priority messages, displayed at the top of the list, all indicated a major problem with the №2 engine, but strangely enough, not its outright failure, because the engine — minus the IP turbine disk and everything in line with it — was in fact still turning. Following the indicated ECAM actions, Captain de Crespigny reduced power to the damaged engine, but instead of correcting the problem, an “ENG 2 FIRE” warning flashed on the screen for one or two seconds, then disappeared.</p><figure><figcaption>A flight crewmember took this photo of the instrument panel during the flight, showing several messages, including a red “warning” level message, on the ECAM display. (ATSB)</figcaption></figure><p id="5ff0">As First Officer Hicks made a pan-pan call to air traffic control, one level short of “mayday,” the crew decided that the engine was likely severely damaged and elected to shut it down. As they moved to reduce power, an ENG 2 FAIL message finally appeared on the ECAM. The pilots also attempted to actuate both of the engine’s two built-in fire extinguishers, but only one of them actually fired, and neither of the confirmation lights illuminated. However, as they scrolled through the seemingly unending list of ECAM alerts, only one or two of which could be displayed at one time, it became clear that the engine and its fire extinguishers were hardly the only systems having issues.</p><p id="f41b">When the fragments of the IP turbine disk passed through the wing and belly of the A380, they caused considerable secondary damage along the way, not only to the №2 engine but also to the left wing fuel tank, which sprang a leak; the leading edge wing slat extension mechanism, which took a direct hit; and the aircraft’s electrical system. Additionally, two wire looms in the leading edge of the wing and in the belly area were completely severed, collectively affecting about 650 wires that carried critical information to and from almost every conceivable aircraft system. A brief and hardly exhaustive summary of the damage to the aircraft included impact damage to the left wing upper and lower skin, front spar, internal ribs, and wing-to-fuselage joint; loss of control over the green (left) hydraulic pumps; degradation of the yellow (right) hydraulic system; loss of AC electrical power from engines 1 and 2; loss of one of four AC power distribution systems; loss of functionality of all leading edge slats; partial loss of functionality of the spoilers and ailerons; degradation of control over all remaining engines, resulting in loss of the autothrust system; loss of functionality of the left wing landing gear brakes and anti-skid on the right wing gear brakes; severe disruption of the pneumatic system; loss of both the №1 and №2 low fuel pressure shutoff valves; degradation of the fuel quantity indicating system; reduction in fuel transfer capability; loss of the fuel jettison system; loss of fire protection capability on engines 1 and 2; and much more besides.</p><figure><figcaption>A map of operational flight controls surfaces [green] and inoperative surfaces [red]. (ATSB)</figcaption></figure><p id="3733">One of the most serious malfunctions was the loss of the green hydraulic system. Although the system itself was not breached, the severed wires stopped all the green hydraulic pumps, resulting in a loss of pressure that rendered inoperative all systems reliant upon it. Unlike some other wide body aircraft, the A380 has only two hydraulic systems — green and yellow — which mainly supply the left and right sides of the aircraft, respectively. Instead of more redundant hydraulic systems, the A380 has independent backup hydraulic actuators on each individual flight control surface, ensuring that even a total loss of both hydraulic systems will result in minimal flight control difficulties. Nevertheless, direct damage had degraded the plane’s roll control, eliminating the left middle aileron (the A380 has three on each wing) and left wing spoilers 4 and 6. The loss of green hydraulic pressure also caused the failure of the outboard ailerons on both wings, spoilers 2 and 8 on each wing, and spoiler 4 on the right wing. However, the built-in redundancy in the A380 was so great that the remaining spoiler and aileron panels were sufficient to maneuver the airplane despite what amounted to a 65% loss of roll control capability.</p><p id="2987">Initially, the hydraulic system indications confused the crew. Their initial impression was that the damage was confined to the left side of the airplane, so they were surprised to see an indication related to the yellow (right) hydraulic system mixed in with all the other ECAM messages, and they briefly considered whether the messages might be spurious. The same possibility was considered by Qantas technicians on the ground, who were receiving live telemetry data from the aircraft. But by accessing detailed electronic status pages for each aircraft system and cross-checking what was not working, the pilots were able to come to the conclusion that all the failures were most likely real.</p><figure><figcaption>A passenger took this photo in flight, showing turbine fragment exit holes in the upper surface of the wing. (ATSB)</figcaption></figure><p id="6f42">At that point the crew needed to make a decision: should they land immediately, or should they wait to action all of the abnormal procedures associated with the dozens of ECAM messages? Assessing that the aircraft was controllable with the autopilot both on and off, they eventually came to an agreement that it was safe to remain airborne, and that they would rather make sure all crewmembers had a complete understanding of the health of every aircraft system before coming in for a landing. The last thing they needed was a surprise on final approach that would force them to go around.</p><p id="4fbd">Having chosen this course of action, the crew requested clearance to enter a holding pattern, and ATC granted them permission to circle over the ocean northeast of Singapore. The crew estimated that it would take at least 30 minutes to work through all of the ECAM actions.</p><p id="5692">In the meantime, the cabin crew had been attempting to get the pilots’ attention using the emergency call button, but all the pilots were so focused on the failures that they initially didn’t notice. Only now did they send Second Officer Mark Johnson to assess the situation in the cabin, whereupon a Qantas pilot riding as a passenger in the upper deck drew his attention to the in-flight entertainment system, which featured a live view of the aircraft from a tail-mounted camera. The digital stream clearly showed a much more literal stream of fuel pouring from the left wing and into the aircraft’s wake, which was also visible with the naked eye from the lower deck. Johnson proceeded down to check for himself, at which point he also observed for the first time that there were two gaping holes in the top of the left wing, surrounded by jagged metal, where the turbine disk fragments had exited.</p><p id="4acc">According to Check Captain David Evans, the cabin crew were concerned that so many passengers were watching the live feed from the tail camera, but in a collective decision, the pilots elected not to turn it off because, in their view, the feed suddenly cutting out would probably be more alarming than anything that could be seen on it.</p><p id="ec59">◊◊◊</p><figure><figcaption>Part of the turbine disk caused serious damage to a building. (ATSB/Posmetro newspaper)</figcaption></figure><p id="3a4e">Meanwhile on the ground, events were taking an unexpected turn. On Batam Island in Indonesia, debris from the №2 engine plunged into a populated area shortly after the failure, resulting in surprise and alarm. Among the debris was a large portion of the failed IP turbine disk, which fell with such force that it cleaved straight through a building, razing a brick wall. Thankfully, no one on Batam was hurt by the debris. However, photographs of locals holding airplane wreckage in what appeared to be Qantas livery were soon posted to Twitter, where they were taken as indications that a Qantas airplane had actually crashed somewhere over Batam. Qantas engineers already knew that the plane was still flying, but they were unable to contact the crew to find out more information. And outside that bubble, the news that a Qantas A380 had possibly gone down spread so quickly that even investors reacted while the plane was still in the air. In fact, the first time Qantas’s CEO learned of the situation was when he received a call asking why the company’s stock price was dropping.</p><figure><figcaption>People collect pieces of the fallen engine cowling on Batam. (Reuters)</figcaption></figure><p id="3597">Up in the air, such concerns were far from the minds of the crew. Working through one ECAM procedure after another, they slowly stabilized various disrupted systems, but as they did so, one problem in particular was getting worse: their fuel situation. With fuel leaking prodigiously from the left wing tank, an imbalance had developed between the left and right wings, prompting an ECAM alert instructing them to open the fuel transfer valves to equalize the fuel levels. However, with a leak clearly occurring and other ECAM messages indicating damage to the fuel transfer system, after a detailed discussion the pilots concluded that following the computer’s instructions would be inadvisable — a great example of why experience and judgment are still necessary even on an aircraft as highly automated as the A380.</p><p id="95dd">In the end, it took 55 minutes to clear all of the ECAM messages, an unprecedented length of time that was certainly far beyond anything any of the pilots had previously imagined. But even then, more considerations remained before they could land. Most notably, the airplane was still more than 40 tons over its maximum landing weight, and among the failures that had occurred was the loss of the fuel jettison system, so it would be impossible to reduce their weight by dumping fuel. The possibility of remaining in the air until they had burned the extra fuel was considered, but with an increasing fuel imbalance between the right and left wings and a 65% loss of roll control, the pilots determined that this would be irresponsible. Their conclusion was that they had to land soon, even if they were over the maximum weight. But would any of the runways at Singapore be long enough to accommodate a significantly overweight A380 with degraded brakes, several faulty spoilers, and no reverse thrust on engine 2? There was certainly reason to doubt.</p><figure><figcaption>The complete flight path of flight 32, including its extensive hold. (ATSB)</figcaption></figure><p id="0409">In order to find out for sure, Captain de Crespigny instructed the two Check Captains to determine their required landing distance using the Airbus performance software installed on laptop computers stored in the cockpit. The detailed software allowed them to enter various parameters including the weather, runway condition, and any systems failures, and then calculate whether it was possible to land. But when everything had been entered, the program spit out an unhelpful answer: “no result.”<br> When calculating the landing distance, the software applied a generic “operational coefficient” to account conservatively for variations in pilot techniques that could result in less efficient deceleration. The problem, as investigators would later discover, was that the software applied the coefficient again whenever another system failure was added. With so many system failures on the aircraft, the coefficient was applied a total of 9 times, resulting in a calculated landing distance considerably greater than the length of the available runway. However, Check Captain Evans was able to fix the problem by manually entering their actual landing weight, overriding the program’s assumption of a maximum landing weight. By specifying an landing weight in excess of the maximum, the system logic changed to apply the operational coefficient only once — for unrelated and obscure reasons — and lo and behold, when he ran the numbers this time, the computer said they could just barely land on any of the 4,000-meter runways at Singapore Changi Airport, with only 100 meters to spare. It wasn’t much, but with no better runways anywhere nearby, it would have to do.</p><figure><figcaption>Indonesian police pose with a fallen piece of the airplane. (AP)</figcaption></figure><p id="1b49">Finally ready to commit, Captain de Crespigny now removed the aircraft from its holding pattern and began maneuvering for approach. The crew requested fire trucks on landing due to the fuel leak, and advised the cabin crew to prepare for an on-ground emergency if they overran the runway. They aligned with the runway from considerably farther away than usual in order minimize maneuvering, since the controls felt rather sluggish — mainly the result of the degraded roll control. Captain de Crespigny subsequently carried out further manual control checks during the approach to make sure that the controllability characteristics remained consistent as First Officer Hicks progressively extended the flaps. The pilots also decided to leave engines 1 and 4 at a constant thrust level and adjust their airspeed using only engine 3, because that engine was least affected by the various electronic control system failures.</p><p id="4004">The problems only continued, however. Due to the failure of the green hydraulic system, the landing gear did not drop when the gear lever was selected “down,” forcing the pilots to use a backup system that gravity drops the gear instead. Fortunately, this was successful. Captain de Crespigny also had to maintain a very narrow airspeed band, because there was only a fine margin between the slowest safe speed in the air, below which they would stall, and the highest safe speed on touchdown, above which they would overrun the runway. De Crespigny later recalled that the safe band between these speeds was probably only three or four knots. At one point, the airplane even generated an automatic low energy alert, warning that their airspeed was dropping too low for their present configuration — so de Crespigny increased power slightly on engine 3, and the alert went away.</p><p id="3866">Nevertheless, with the help of the Airbus’s still operational fly-by-wire system and mostly undamaged controls, de Crespigny was able to thread the needle, greasing it onto runway 20C at Changi Airport at 11:46, just shy of two hours after the flight took off. A stall warning briefly sounded just before touchdown, but a split second later they were on the ground and the matter was moot. The pilots applied those brakes that were still working, activated reverse thrust on engine 3 — the A380 only has reversers on its inboard engines — and hoped that it would be enough. The deceleration was not exactly exuberant, but considering how much it takes to stop something the size of an A380 even on a good day, it was impressive enough. Nevertheless, it was not until fairly late in the rollout that the pilots felt certain that they would stop on the runway, and ultimately the performance software was not far off the mark: by the time the plane ground to a halt, only 150 meters remained of the 4,000-meter runway.</p><figure><figcaption>Firefighters spray foam on the airplane after its emergency landing. (Reuters)</figcaption></figure><p id="de92">And yet at that point, even if some of the passengers thought their ordeal was over, it turned out that there was more to come. As the pilots shut down the engines, they observed that the brake temperature on the left body gear brakes had risen alarmingly. These had been the only working brakes on the left side of the aircraft and were subject to considerable strain during the landing, causing them to overheat; the overheating in turn caused four tires to deflate. To make matters worse, fuel was still leaking from the wing, and there was genuine concern that a fire could erupt if spilled fuel contacted the hot brakes. And on top of that, when engines 3 and 4 were shut down, the plane lost electrical power, and when they tried to start the auxiliary power unit, it wouldn’t hook up the electrical system because of damage to the distribution infrastructure. Operating solely on emergency electrical power, the plane now had only one working VHF radio, and it took a few moments for the crew to figure out which one that was so that de Crespigny could contact the airport fire services.</p><figure><figcaption>People disembark from flight 32. (Richard de Crespigny)</figcaption></figure><p id="7d03">Upon making contact with the fire crew, de Crespigny urged them to cool down the brakes, but the firefighter in charge replied with surprising news: the №1 engine was still running, even though the crew had already carried out the shutdown procedure. Damage to systems in the wing had rendered the №1 fuel shutoff valves inoperative, preventing the crew from shutting the engine down by normal means. Both fire extinguisher bottles in engine №1 were also inoperative, preventing the crew from shutting it down by pulling the emergency fire handle. Unable to resolve the issue, de Crespigny instead urged firefighters to approach the brakes while staying as far as possible from the inlet and exhaust ends of the №1 engine. If firefighters got too close to the inlet, they could be sucked into the fan; alternatively, approaching too close behind would result in severe burns, not to mention the jet blast. Nevertheless, the fire crews managed to get close enough to douse the brakes with foam, averting a conflagration.</p><p id="5d18">Throughout this period, the crew also debated whether or not to evacuate the passengers. An evacuation is not always an easy call: statistics show that around 5 to 10% of passengers who evacuate by the emergency escape slides sustain serious injuries, and with 440 passengers on board, including elderly and disabled, that was potentially a rather large number of people. Considering that the fire risk had been tamped down, the crew ultimately agreed that the safest place for the passengers was on the plane — at least for the moment. The flight attendants were asked to move to their stations on the right side of the aircraft to be ready for an emergency evacuation, should the calculus suddenly change, while the pilots attempted to call for a set of stairs to be brought to the aircraft. But with the only working radio being used to liaison with the firefighters, the only other working communications systems aboard the powered-down airplane were the pilots’ cell phones. It took quite some time, and several abortive attempts, before they managed to get through to someone at Qantas who could call the airport services company at Changi Airport and tell them to send a set of boarding stairs.</p><figure><figcaption>Firefighters attempt to drown the still-running №1 engine. (Reuters)</figcaption></figure><p id="8955">After 50 minutes aboard the increasingly sweltering airplane — without power, there was no air conditioning — the stairs finally arrived, and the disembarkation began. It ultimately took an hour to get everyone off through a single exit in an orderly manner, but in the end, all 440 passengers walked away without a single injury.</p><p id="0740">As for the still-running №1 engine, Qantas engineers eventually concluded that the only way to shut it down was to drown it with firefighting foam. Firefighters then poured huge amounts of water and foam into the intake, which proved successful, as the engine finally spooled down and stopped at 14:53, more than three hours after the aircraft landed.</p><p id="e852">◊◊◊</p><figure><figcaption>The crew of flight 32; from left to right: Mark Johnson, Matt Hicks, Richard de Crespigny, David Evans, and Harry Wubben. (Richard de Crespigny)</figcaption></figure><p id="a7ba">The news that the crippled Qantas A380 had landed safely in Singapore came as a great relief to all, especially those who were on board the airplane, who immediately heaped praise on the crew. Captain de Crespigny, in an exemplary act of professionalism, even handed out his personal phone number and stayed for two hours in the Qantas lounge in Singapore to answer passengers’ questions about the flight. He and his crew were hailed as heroes, and not without reason. The sheer number of failures aboard the A380 eclipsed almost any other incident, at least on an aircraft with modern failure monitoring technology. Levelheaded decision-making, teamwork, and crew resource management helped the crew collectively determine the course of action least likely to result in injury or loss of life, with perfect results.</p><p id="0e19">The aircraft itself, however, helped quite a lot. The design of the flight control system ensured that the impact on controllability was limited, even with serious damage to the ailerons and the loss of one of two hydraulic systems. Despite its size, the A380 is known to respond very gracefully to control inputs thanks to the design of its fly-by-wire system, which during the incident remained fully intact, allowing the pilots to focus primarily on decision-making rather than handling the airplane. The ECAM and the detailed systems pages also helped the pilots take full stock of the extent of the failures in a way that was not necessarily possible two decades earlier. Without minimizing the actions of the crew in any way, it’s also fair to say that the design of the A380 incorporated such redundancy and such high safety margins that the risk of a catastrophic crash was probably very low, even with so much damage to the airplane.</p><figure><figcaption>Dark colored residue inside the fuel tank near the breaches testified to a brief flash fire. (ATSB)</figcaption></figure><p id="4acb">However, there were a couple of places where the potential for worse damage existed. It goes without saying that if any of the turbine fragments had entered the passenger cabin, there would have been injuries, if not fatalities, even if the plane later landed safely. And perhaps even more worrying, investigators later found signs of a very brief flash fire inside the left wing fuel tank, which likely occurred when an extremely hot turbine fragment contacted fuel vapors in the tank ullage. Research conducted as part of the investigation into the 1996 crash of TWA flight 800, which was caused by an explosion of the center fuel tank, found that the wing tanks on commercial airliners contained flammable fuel-air mixtures around 7% of the time. However, on Qantas flight 32, the temperature in the tank was too low for the fuel-air mixture to reach a flammable concentration, and investigators determined that the brief ignition of vapors during passage of the turbine fragment likely failed to raise the temperature of the rest of the fuel sufficiently to sustain combustion. Had this fuel continued to burn, causing an explosion or sustained wing fire, then the outcome could have been very different.</p><figure><figcaption>Severed wires in the wing leading edge. (ATSB)</figcaption></figure><p id="b8cd">Even though these worst case scenarios didn’t happen, the level of damage was still far beyond anything Airbus or Rolls-Royce had anticipated, and both companies were keen to know why — as were investigators with the Australian Transport Safety Bureau (ATSB), who were charged with finding out. Initial efforts established that an oil leak caused an internal fire that led to the failure of the IP turbine disk drive arm, as described previously. But that didn’t answer one of the manufacturers’ most burning questions, which was why the disk was allowed to overspeed until it burst — because according to the engine’s design philosophy, this should never have happened.</p><p id="d712">The risk posed by a burst engine disk, whether it’s a fan, compressor, or turbine, is well known in the industry. Numerous catastrophic accidents have occurred as a result of burst disks, either due to overspeed or material defects. Demonstrated side effects of burst disks include severe flight control damage (<a rel="noopener" href="https://admiralcloudberg.medium.com/fields-of-fortune-the-crash-of-united-airlines-flight-232-9cf65ae14c68">see United flight 232, Sioux City, Iowa, 1989,</a> in which fan disk debris resulted in the failure of all hydraulic systems, a loss of control on landing, and 111 deaths); direct fatal impacts to passengers (<a rel="noopener" href="https://admiralcloudberg.medium.com/written-in-metal-the-story-of-delta-air-lines-flight-1288-1205599c1b55">see Delta flight 1288, Pensacola, Florida, 1996,</a> in which a compressor disk entered the passenger cabin on takeoff, killing two passengers); and in-flight fires (<a rel="noopener" href="https://admiralcloudberg.medium.com/under-the-iron-curtain-the-crashes-of-lot-polish-airlines-flights-007-and-5055-f0f1c0ba4a64">see LOT Polish Airlines flight 5055, Warsaw, Poland, 1987,</a> which crashed after a fragment of a burst turbine disk started a fire in the baggage compartment, killing 183). Accidents such as these inform aircraft certification guidelines, which classify a disk failure as a “hazardous” event whose probability must be “extremely remote” (defined as one event or less per 100 million operating hours). And just in case such an event were to happen anyway, rules introduced following the United accident in Sioux City also require manufacturers to minimize the potential secondary failures that could occur as a result, which was part of why the A380 had individual backup hydraulics for all critical control surfaces.</p><figure><figcaption>Officials inspect the damaged №2 engine. (Reuters)</figcaption></figure><p id="31ed">In general, the accident aboard flight 32 demonstrated that the requirements for damage minimization were met, with the exception of the resultant inability to cut fuel to the №1 engine, which was explicitly defined in certification guidelines as undesirable. This success alone distinguished it from previous, fatal disk release accidents. But Rolls-Royce was concerned that the disk burst at all. During development of the Trent 900, the company calculated that in the event that the IP turbine disk became disconnected from the drive shaft, the disk would not accelerate fast enough to burst. Essentially, it was believed that without the turbine to drive it, the IP compressor would decelerate until air no longer flowed smoothly over its blades, causing a compressor stall that would subsequently spread to the HP compressor behind it. This should lead to an engine surge, in which the disruption of airflow through the compressor section allows pressurized air from the combustion chamber to surge forward toward the front of the engine. In theory, this would reduce the amount of air flowing rearward through the annulus gas path and over the IP turbine, relieving the load on the turbine and preventing it from accelerating beyond its critical speed.</p><p id="a052">A key assumption here was that the IP compressor stall would happen faster than the advanced electronic engine control system could detect the surge and reduce fuel flow, which would bring down the combustion chamber pressure to clear the surge and restore normal airflow. In the actual event, investigators found that although the IP compressor stalled and a surge occurred, the automatic reduction in fuel flow came swiftly enough to enable the partial recovery of the HP compressor, which resumed forcing pressurized air into the combustion chamber and thence over the turbine. This unexpectedly robust airflow provided the mechanical energy required to accelerate the IP turbine disk beyond its critical speed. Rolls-Royce engineers were unable to conclusively determine why this occurred. Nevertheless, to prevent it from happening again, the company developed an IP turbine overspeed function for the electronic engine control that directly monitors the IP turbine disk and instantly cuts fuel flow to the engine if the disk starts spinning too fast.</p><p id="3d9e">◊◊◊</p></div><div><p id="03b1">Of course, if you’ve gotten this far, then you’re probably aware that one critical question remains. This entire chain of events began when the oil feed stub pipe — remember that? — developed a leak. If you need a refresher, this was the short segment of pipe that passed through the outer and inner sections of the bearing hub to deliver oil to the bearing chamber. So why did this happen?</p><p id="14f4">The answer, as it turns out, was visible to the naked eye. When investigators removed the faulty pipe, they found that one wall of the pipe was simply too thin. Unable to withstand the stresses of normal operation, it began suffering from metal fatigue and failed after only 677 flights.</p><figure><figcaption>How the oil feed stub pipe and its fittings were constructed. (ATSB, annotations mine)</figcaption></figure><p id="014e">The oil feed stub pipe was designed to have a slightly wider inner diameter at the bottom end in order to accommodate a filter. This required widening the interior diameter of the pipe by drilling a “counter bore” in from one end, as shown above. The center of the counter bore should be aligned with the center of the main bore. But on the stub pipe recovered from the failed Qantas engine, the counter bore was displaced to one side by approximately half a millimeter, resulting in an irregular wall thickness that varied from 1.42 mm on one side to only 0.35 mm on the other. It was this extra thin part of the pipe wall that failed on flight 32.</p><p id="b98e">The story of how the counter bore became offset by half a millimeter has implications that far outstrip the physical size of the error. The following section is going to involve some fairly complex discussions of the design and manufacturing process, but I hope you’ll bear with me.</p><figure><figcaption>How the bores for the stub pipe were defined according to the design drawings. (ATSB, annotations mine)</figcaption></figure><p id="bafb">When the designs for the HP/IP bearing hub assembly were drawn up during the early 2000s, the design engineers followed standard practice by defining the position and dimensions of the oil feed stub pipe and associated features relative to a fixed point, referred to as a “datum.” This point, designated datum AA, was defined as the hole in the outer section of the bearing hub through which the oil feed stub pipe passes on its way to the bearing chamber. This hole will henceforth be known as the “outer clearance hole.” All other aspects of the stub pipe fitting were positioned with respect to the centerline of this hole.</p><p id="c311">In line with the outer clearance hole, the designs also called for an “interference bore” in the inner hub into which the bottom end of the stub pipe would fit. The interference bore was designed to be very slightly narrower than the stub pipe so that the pipe end, once tapped firmly into place within it, would be held inside by friction. This bore was required to be centered on datum AA so as to keep it perfectly aligned with the outer clearance hole.</p><p id="a407">Next, an “inner hub counter bore” would be drilled in from the inside of the inner hub, meeting in the middle with the interference bore. This was the hole through which the oil from the stub pipe would enter the bearing chamber.</p><p id="2407">Then, once these holes were machined, the oil feed stub pipe itself would be inserted through the outer clearance hole and into the interference bore, then welded in place.</p></div><div><p id="6465">Finally, working from the inside through the inner hub counter bore, the stub pipe counter bore would be drilled to a specified depth to accommodate the filter. (This was the bore that was later found to be offset by half a millimeter.) According to the design specifications, the stub pipe counter bore should be in line with datum AA, with a tolerance of Ø 0.10 mm. In plain English, that means that the center of the counter bore should lie within a 0.10-mm-diameter circle centered on datum AA. It does not mean that the bore can be 0.10 mm from the datum, but rather <em>that the bore can lie within 0.05 mm of the datum in any direction, for a total range of possible positions measuring 0.10 mm across.</em> (Hereinafter, the term “offset” refers to the distance of a given point from the datum, while the terms “tolerance” and “non-conformance,” indicated with the “Ø” symbol, refer to the diameter of a circle centered on the datum with its edge at the given point. As confusing as this may be for some readers, this is how tolerances are measured in real life engineering, so if engineers can deal with it, so can you (hopefully).)</p><figure><figcaption>How the stub pipe and its fittings were defined according to the manufacturing stage drawings. (ATSB, annotations mine)</figcaption></figure><p id="78a8">In any case, when it came time to plan the actual manufacture of the bearing hub assembly, some changes had to be made to this process. The basic problem was that once the oil feed stub pipe was inserted into the hub assembly, it would no longer be possible for the machining computer to find the location of datum AA, because the outer clearance hole by which it was defined would be too full of stub pipe. That meant that it would be impossible to determine exactly where the oil feed stub pipe counter bore should subsequently be drilled.</p><p id="bb4c">In order to fix this problem, Rolls-Royce manufacturing engineers decided to redefine the position of the stub pipe counter bore with relation to a new datum, named datum M, which corresponded to the center of the inner hub counter bore. At the same time, the tolerance for the stub pipe counter bore was changed from Ø 0.10 mm to Ø 0.20 mm for unknown reasons. But the bigger problem was that the position of the stub pipe itself was determined by the position of the interference bore, which was still defined by datum AA. Because the position of the inner hub counter bore did not have a specified tolerance relative to datum AA — in fact, in the original design plan, its position didn’t matter much at all — there was no direct assurance that datum M would line up with datum AA, and thus it could not be assured that the stub pipe would line up with its own counter bore either. At this point you might already be starting to see the problem.</p><figure><figcaption>How the series of bores was actually drilled. (ATSB, annotations mine)</figcaption></figure><p id="4890">The actual manufacturing process, based on the above specifications that were written into the manufacturing stage drawings, proceeded as follows. First, the basic hub assemblies were delivered to the Rolls-Royce machining plant in Hucknall, UK, with the outer clearance hole already drilled (and datum AA thus defined), but without the interference bore or the inner hub counter bore (datum M). Instead, a reference hole was drilled, with reference to datum AA, in the location that would later become the inner hub counter bore. A temporary timing pin was inserted into this reference hole, which was then used by the computerized machining equipment to orient the hub so that the machining arm aligned with datum AA. So far so good.</p><p id="4b4c">Subsequently, the interference bore was drilled, with reference to datum AA. Then came the most dastardly part: in order to drill the inner hub counter bore, the timing pin had to be removed, but the machine also needed to remember its location in order to know where to drill. Therefore, the machining computer used specialized probes to measure and record the position of the timing pin within three-dimensional space, allowing subsequent removal of the pin. At that point the only thing ensuring the correct alignment of the inner hub counter bore — and thus datum M, and thus the stub pipe counter bore — was the assumption that the recorded position of the timing pin remained accurate.</p><figure><figcaption>Can you see the offset in the drilled position of the inner hub counter bore? (ATSB)</figcaption></figure><p id="b667">Unfortunately, that assumption proved incorrect. The problem was that while the interference bore had been drilled from the outside, the inner hub counter bore had to be drilled from the inside, which necessitated the reconfiguration of the clamps holding the hub assembly in place, in order to make room for the machining arm. During this process, the hub assembly sometimes — but not always — shifted imperceptibly.</p><p id="5634">If the hub shifted, then when the machining process resumed, the recorded location of the timing pin (and thus datum AA) would by slightly offset from its actual, new location, and the machine would subsequently drill the inner hub counter bore offset by an equal amount. That meant that datum M — again, defined as the center of the inner hub counter bore — would also be offset from datum AA by that amount.</p><p id="b4db">Subsequently, the stub pipe was inserted through the outer clearance hole and into the interference bore, where it was welded in place. The stub pipe counter bore was then drilled into the end of the pipe with reference to datum M, which, again, would be offset if the hub had shifted. In the case of the components involved in the accident, the hub presumably shifted by just under half a millimeter, resulting in an equal offset of both the inner hub counter bore and the stub pipe counter bore relative to the pipe itself. As a side effect, one wall of the pipe was too thin.</p><figure><figcaption>The final product is created with a thin stub pipe wall. The best way to notice this offset of the stub pipe counter bore is by measuring the position of the interference bore relative to datum M. Measuring the interference bore relative to datum AA will not reveal the error. (ATSB)</figcaption></figure><p id="5f50">In the original design, no stub pipe wall thickness was specified; instead, adequate wall thickness was ensured by the alignment of both the pipe (via the interference bore) and its counter bore with the same datum (AA). The fact that this assurance could be lost when using the reworked manufacturing process was not recognized at the time, nor were the subsequent inspections tailored to find such a defect.</p><p id="7fa8">In this regard, two inspections are of note, both of which involved the use of a computerized coordinate machine, or CMM. One of these, known as OP 230, involved only the measurement of the stub pipe counter bore position relative to datum M, which provided no useful information as to its position relative to the pipe itself. A visual inspection was also conducted at this stage, but it was not possible for an inspector to observe the stub pipe wall thickness at the counter bore because this end of the pipe was welded inside the interference bore, completely out of sight.</p><p id="6d6e">Another inspection, called OP 70, occurred prior to OP 230 and presented a better opportunity to notice the error. During this inspection, the CMM measured the position of the interference bore relative to datum M, even though it was machined with reference to datum AA. If datum M and datum AA were offset by more than the specified tolerance for the interference bore, this should have caused the CMM to report an error in the position of the interference bore. The tolerance for this bore was supposed to be Ø 0.05 mm according to the design drawings, but was changed to Ø 0.5 mm in the manufacturing drawings without explanation. Even so, the non-conformance on the accident hub was between Ø 0.90 and Ø 0.98 (an offset of 0.45–0.49 mm), which should have been flagged by the machine. The CMM records from the accident hub were not retained, so it was not possible for investigators to confirm that the error was actually registered. However, even if it was, a follow-up inspection might have concluded that the error was false — because the manufacturing drawings specified the position of the interference bore relative to datum AA, and inspectors were generally unaware that the CMM was actually measuring the position of the bore relative to datum M. Therefore, if inspectors saw that the position of the interference bore was flagged as out of tolerance, they could refer to the manufacturing drawings, check the bore’s position with reference to datum AA, find everything to be normal, and give the hub a clean bill of health.</p><figure><figcaption>A coordinate measuring machine used at the Hucknall facility. (ATSB)</figcaption></figure><p id="7b08">For the above reasons, numerous HP/IP bearing assembly hubs were released for service with oil feed stub pipe walls that may or may not have been too thin. No one was aware of this until 2009, after the accident hub was manufactured, when Hucknall Casings and Structures decided to change the datum for the oil feed stub pipe counter bore in order to simplify the manufacturing process. The change called for the use of datum AF, which was defined as the center of the pipe’s main bore, to position the pipe’s counter bore. Subsequently, two previously manufactured stub pipe counter bores were measured against this new datum and found to have a non-conformance of Ø 0.5 mm (or an offset of 0.25 mm, about half that of the accident pipe). As a reminder, the tolerance for the stub pipe counter bore was supposed to be Ø 0.20 (for a maximum permissible offset of 0.1 mm).</p><p id="8af6">This problem was soon called to the attention of a design engineer, who escalated it up the chain of command in order to figure out what to do about the approximately 100 oil feed stub pipes that had already been released for service. At issue was whether the error would have safety implications. If there were no safety implications, then the plant could issue what it termed a “retrospective concession,” allowing the improperly manufactured products to remain in service. But if there were safety implications, then there would need to be corrective actions, perhaps even a recall. In order to find out, a manufacturing engineer was assigned to conduct a statistical analysis of the likely distribution of oil stub pipe counter bore non-conformances based on measurements taken on nine previously manufactured hubs that were still at the facility. Using a statistical analysis program, the engineer found that the likely maximum non-conformance of any stub pipe counter bore was Ø 0.7 mm (an offset of 0.35 mm). Engineering calculations showed that the resulting wall thickness would not seriously alter the service life of the stub pipe, which meant that there was no safety implications.</p><figure><figcaption>The revised manufacturing datum was much more robust, but the implications for previously produced hub assemblies were not adequately appreciated. (ATSB)</figcaption></figure><p id="2b98">In reality, this statistical analysis was flawed because of the low number of data points, and the lack of assurance that the dataset of nine hubs was representative of hubs manufactured in previous years. Therefore, the result should really have been read as “a maximum likely non-conformance of Ø 0.7 mm plus or minus an uncertainty factor of unspecified magnitude.” However, the engineer was unfamiliar with the statistical analysis program and failed to clearly convey this uncertainty in the report that was submitted to the Non-Conformance Authority, the engineer empowered to make decisions about the acceptability of non-conformances. The Non-Conformance Authority took the report to mean that there were no safety implications, and signed off on the retroactive concession allowing the affected pipes, including the accident pipe, to remain in service.</p><p id="dd46">Investigators noted that according to Rolls-Royce’s internal procedures, a retrospective concession also required the signatures of the Business Quality Director and more importantly the Chief Engineer, who had the power to decide whether any fleet-wide actions were warranted. Neither of these signatures were obtained for the retrospective concession that was granted to the oil feed stub pipes. The ATSB observed that the Hucknall facility was using the same paperwork for retrospective concessions as it used for concessions on non-conforming parts that were caught in-house, which did not require these extra signatures, so no signature field for them was provided. There was also nothing on the paperwork to indicate whether a concession was retrospective or not. As such, the Non-Conformance Authority might have been unaware that they lacked the right to unilaterally approve the concession without the consent of a higher-ranking engineer.</p><p id="8d31">◊◊◊</p><figure><figcaption>Another view of the damaged engine. (ATSB)</figcaption></figure><p id="d612">After the accident, measurements were taken on all in-service HP/IP bearing oil feed stub pipes to determine the alignment of their counter bores. The majority were outside the Ø 0.20 mm tolerance on the manufacturing drawings, and several of them had non-conformances greater than the Ø 0.7 mm predicted by the statistical analysis. Four of the stub pipes had non-conformances even greater than the accident pipe, and two were found to have a staggering non-conformance in the vicinity of Ø 1.2 mm. These pipes likely would have failed in service, potentially causing repeats of the Qantas incident, had they not been caught.</p><p id="41f7">Investigators also criticized the culture within the Hucknall facility that manufactured the HP/IP bearing hubs, identifying signs of complacency and widespread procedural non-compliance. A paperwork review showed that the required signatures were missing from 131 out of 138 retrospective concessions issued between 2009 and 2011, and a large number of minor non-conformances had not been properly handled through the normal chain of command. An internal review in 2007 had also previously found that the Hucknall facility lacked a “strong focus on quality within the business.” This appeared to extend to the creation of the original manufacturing drawings, which had been altered from the design drawings without the consent of the design engineers. Furthermore, initial inspections at the start of the production run were supposed to verify that the manufacturing process was creating products that satisfied the “design intent,” but the initial products were checked against the manufacturing drawings, not the design drawings. This verification was circular in nature and did nothing to ensure that the design intent was actually met. Had the design drawings been used, as procedures demanded, engineers likely would have been discovered that the process was not producing stub pipes with the required tolerances.</p><p id="b31e">◊◊◊</p><figure><figcaption>Another passenger view of the upper wing surface damage. (Reuters)</figcaption></figure><p id="0fd0">Following the accident, a long list of safety actions were taken to prevent a recurrence and incorporate lessons learned. A non-exhaustive list of these safety actions includes the following:</p><p id="b3a3">· Qantas temporarily grounded its A380 fleet between November 4 to November 27, 2010.</p><p id="9958">· The European Aviation Safety Agency issued an airworthiness directive mandating inspections of all Trent 900 oil feed stub pipes.</p><p id="3705">· Rolls-Royce developed an IP turbine overspeed protection system. Airbus issued a mandatory service bulletin requiring its installation on All A380s within 10 flights.</p><p id="b61b">· The entire original production run of HP/IP bearing hubs was removed from service and scrapped. All other HP/IP bearing hubs with an oil feed stub pipe wall thickness less than 0.7 mm were also removed from service.</p><p id="9bdc">· Rolls-Royce revised its procedures to ensure consultation between manufacturing and design engineers over the design intent of newly introduced parts.</p><p id="d73d">· A number of efforts were initiated to change the culture around non-conformances at the Hucknall facility.</p><p id="b015">· Rolls-Royce ended the practice of retrospective concessions and instituted a new program for dealing with non-conforming parts that escaped into service.</p><p id="8ced">· Airbus modified the landing performance software to more accurately predict the actual performance of the airplane at all landing weights.</p><p id="dfff">Collectively, these reforms have done much to ensure that Rolls-Royce continues to produce quality products, and to maintain the perfect safety record of the Airbus A380, which to date has never suffered an accident resulting in injury to passengers.</p><p id="959f">◊◊◊</p><figure><figcaption>Large sections of the airplane’s wing had to be replaced, among other repairs, but it eventually flew again. (Qantas)</figcaption></figure><p id="70b1">If you have made it this far, I first of all commend your patience, and/or your nerdiness. And second, I will speculate that everything you’ve read thus far has probably left a positive impression of modern aviation safety. The sequence of events required to merely wound, not kill, this Airbus A380 was absurdly long, passing numerous gates at which the progress toward disaster could have been stopped. And yet the system still held its ground. According to the swiss cheese model of safety, an accident happens when the holes in the stacked swiss cheese slices align, allowing a hazard to pass straight through unhindered. The hazard in this case penetrated countless swiss cheese slices, from the drawing board to the manufacturing floor to the inspection room and beyond. But the industry has put up so many slices of cheese that even this impressive run was insufficient to put a scratch on so much as a single passenger. Even the airplane itself ultimately survived: after a marathon repair that lasted 535 days and cost $139 million, the A380 Nancy-Bird Walton triumphantly returned to the skies in 2012.</p><p id="0a27">A number of intangible lessons can be drawn from both the successes and failures along the road to Qantas 32, from the continued importance of experience and judgment in the cockpit, to the negative consequences of believing that a tiny non-conformance couldn’t possibly be consequential. The fact remains that a deviation of less than half a millimeter nearly brought down the world’s largest passenger airliner. Aviation is, and has always been, unforgiving of even the smallest flaws. The devices, designs, and decisions that kept Qantas flight 32 in the air didn’t appear from nothing, but are rather the collective result of rules, regulations, and forward-thinking policies imposed by people upon that unforgiving substrate. In that sense, the upshot of the drama aboard flight 32 is that at the end of the day, the system is working.</p><p id="883e">_______________________________________________________________</p><p id="2f3b"><em>Don’t forget to listen to Controlled Pod Into Terrain, my new podcast (with slides!), where I discuss aerospace disasters with my cohosts Ariadne and J! </em><a href="https://www.youtube.com/@ControlledPodIntoTerrain" rel="noopener ugc nofollow" target="_blank"><em>Check out our channel here</em></a><em>, and </em><a href="https://www.youtube.com/watch?v=sEEuyZ4_qHo" rel="noopener ugc nofollow" target="_blank"><em>listen to our latest episode, in which we break down the incredibly poor decision-making aboard Pinnacle Airlines flight 3701. </em></a><em>Alternatively, download audio-only versions via </em><a href="https://rss.com/podcasts/cpit/" rel="noopener ugc nofollow" target="_blank"><em>RSS.com</em></a><em>, or look us up on Spotify!</em></p><p id="7809">_______________________________________________________________</p><p id="52c0"><a href="https://www.reddit.com/r/CatastrophicFailure/comments/18eg22j/2010_the_near_crash_of_qantas_flight_32_an_engine/?" rel="noopener ugc nofollow" target="_blank">Join the discussion of this article on Reddit</a></p><p id="5f25"><a href="https://www.patreon.com/Admiral_Cloudberg" rel="noopener ugc nofollow" target="_blank">Support me on Patreon</a> (Note: I do not earn money from views on Medium!)</p><p id="af1f"><a href="https://twitter.com/KyraCloudy" rel="noopener ugc nofollow" target="_blank">Follow me on Twitter</a></p><p id="c488">Visit <a href="https://www.reddit.com/r/AdmiralCloudberg/" rel="noopener ugc nofollow" target="_blank">r/admiralcloudberg</a> to read and discuss over 250 similar articles</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Gooey: Turn almost any Python command line program into a full GUI application (314 pts)]]></title>
            <link>https://github.com/chriskiehl/Gooey</link>
            <guid>38586767</guid>
            <pubDate>Sat, 09 Dec 2023 22:30:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/chriskiehl/Gooey">https://github.com/chriskiehl/Gooey</a>, See on <a href="https://news.ycombinator.com/item?id=38586767">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">Gooey</h2>
<p dir="auto">Turn (almost) any Python 3 Console Program into a GUI application with one line</p>
<p dir="auto">
    <a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/1-0-4-title-card.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/1-0-4-title-card.png"></a>
</p>
<h2 tabindex="-1" dir="auto">Table of Contents</h2>
<ul dir="auto">
<li><a href="#gooey">Gooey</a></li>
<li><a href="#table-of-contents">Table of contents</a></li>
<li><a href="#latest-update">Latest Update</a></li>
<li><a href="#quick-start">Quick Start</a>
<ul dir="auto">
<li><a href="#installation-instructions">Installation Instructions</a></li>
<li><a href="#usage">Usage</a></li>
<li><a href="#examples">Examples</a></li>
</ul>
</li>
<li><a href="#what-is-it">What It Is</a></li>
<li><a href="#why">Why Is It</a></li>
<li><a href="#who-is-this-for">Who is this for</a></li>
<li><a href="#how-does-it-work">How does it work</a></li>
<li><a href="#internationalization">Internationalization</a></li>
<li><a href="#global-configuration">Global Configuration</a></li>
<li><a href="#layout-customization">Layout Customization</a></li>
<li><a href="#run-modes">Run Modes</a>
<ul dir="auto">
<li><a href="#advanced">Full/Advanced</a></li>
<li><a href="#basic">Basic</a></li>
<li><a href="#no-config">No Config</a></li>
</ul>
</li>
<li><a href="#menus">Menus</a></li>
<li><a href="#dynamic-validation">Dynamic Validation</a></li>
<li><a href="#lifecycle-events-and-ui-control">Lifecycle Events and UI control</a></li>
<li><a href="#showing-progress">Showing Progress</a>
<ul dir="auto">
<li><a href="#elapsed--remaining-time">Elapsed / Remaining Time</a></li>
</ul>
</li>
<li><a href="#customizing-icons">Customizing Icons</a></li>
<li><a href="#packaging">Packaging</a></li>
<li><a href="#screenshots">Screenshots</a></li>
<li><a href="#wanna-help">Contributing</a></li>
<li><a href="#image-credits">Image Credits</a></li>
</ul>
<hr>
<h2 tabindex="-1" dir="auto">Quick Start</h2>
<h3 tabindex="-1" dir="auto">Installation instructions</h3>
<p dir="auto">The easiest way to install Gooey is via <code>pip</code></p>

<p dir="auto">Alternatively, you can install Gooey by cloning the project to your local directory</p>
<div data-snippet-clipboard-copy-content="git clone https://github.com/chriskiehl/Gooey.git"><pre><code>git clone https://github.com/chriskiehl/Gooey.git
</code></pre></div>
<p dir="auto">run <code>setup.py</code></p>

<h3 tabindex="-1" dir="auto">Usage</h3>
<p dir="auto">Gooey is attached to your code via a simple decorator on whichever method has your <code>argparse</code> declarations (usually <code>main</code>).</p>
<div data-snippet-clipboard-copy-content="from gooey import Gooey

@Gooey      <--- all it takes! :)
def main():
  parser = ArgumentParser(...)
  # rest of code"><pre><code>from gooey import Gooey

@Gooey      &lt;--- all it takes! :)
def main():
  parser = ArgumentParser(...)
  # rest of code
</code></pre></div>
<p dir="auto">Different styling and functionality can be configured by passing arguments into the decorator.</p>
<div data-snippet-clipboard-copy-content="# options
@Gooey(advanced=Boolean,          # toggle whether to show advanced config or not 
       language=language_string,  # Translations configurable via json
       auto_start=True,           # skip config screens all together
       target=executable_cmd,     # Explicitly set the subprocess executable arguments
       program_name='name',       # Defaults to script name
       program_description,       # Defaults to ArgParse Description
       default_size=(610, 530),   # starting size of the GUI
       required_cols=1,           # number of columns in the &quot;Required&quot; section
       optional_cols=2,           # number of columns in the &quot;Optional&quot; section
       dump_build_config=False,   # Dump the JSON Gooey uses to configure itself
       load_build_config=None,    # Loads a JSON Gooey-generated configuration
       monospace_display=False)   # Uses a mono-spaced font in the output screen
)
def main():
  parser = ArgumentParser(...)
  # rest of code"><pre><code># options
@Gooey(advanced=Boolean,          # toggle whether to show advanced config or not 
       language=language_string,  # Translations configurable via json
       auto_start=True,           # skip config screens all together
       target=executable_cmd,     # Explicitly set the subprocess executable arguments
       program_name='name',       # Defaults to script name
       program_description,       # Defaults to ArgParse Description
       default_size=(610, 530),   # starting size of the GUI
       required_cols=1,           # number of columns in the "Required" section
       optional_cols=2,           # number of columns in the "Optional" section
       dump_build_config=False,   # Dump the JSON Gooey uses to configure itself
       load_build_config=None,    # Loads a JSON Gooey-generated configuration
       monospace_display=False)   # Uses a mono-spaced font in the output screen
)
def main():
  parser = ArgumentParser(...)
  # rest of code
</code></pre></div>
<p dir="auto">See: <a href="#how-does-it-work">How does it Work</a> section for details on each option.</p>
<p dir="auto">Gooey will do its best to choose sensible widget defaults to display in the GUI. However, if more fine tuning is desired, you can use the drop-in replacement <code>GooeyParser</code> in place of <code>ArgumentParser</code>. This lets you control which widget displays in the GUI. See: <a href="#gooeyparser">GooeyParser</a></p>
<div data-snippet-clipboard-copy-content="from gooey import Gooey, GooeyParser

@Gooey
def main():
  parser = GooeyParser(description=&quot;My Cool GUI Program!&quot;) 
  parser.add_argument('Filename', widget=&quot;FileChooser&quot;)
  parser.add_argument('Date', widget=&quot;DateChooser&quot;)
  ..."><pre><code>from gooey import Gooey, GooeyParser

@Gooey
def main():
  parser = GooeyParser(description="My Cool GUI Program!") 
  parser.add_argument('Filename', widget="FileChooser")
  parser.add_argument('Date', widget="DateChooser")
  ...
</code></pre></div>
<h3 tabindex="-1" dir="auto">Examples</h3>
<p dir="auto">Gooey downloaded and installed? Great! Wanna see it in action? Head over the the <a href="https://github.com/chriskiehl/GooeyExamples">Examples Repository</a> to download a few ready-to-go example scripts. They'll give you a quick tour of all Gooey's various layouts, widgets, and features.</p>
<p dir="auto"><a href="https://github.com/chriskiehl/GooeyExamples/archive/master.zip">Direct Download</a></p>
<h2 tabindex="-1" dir="auto">What is it?</h2>
<p dir="auto">Gooey converts your Console Applications into end-user-friendly GUI applications. It lets you focus on building robust, configurable programs in a familiar way, all without having to worry about how it will be presented to and interacted with by your average user.</p>
<h2 tabindex="-1" dir="auto">Why?</h2>
<p dir="auto">Because as much as we love the command prompt, the rest of the world looks at it like an ugly relic from the early '80s. On top of that, more often than not programs need to do more than just one thing, and that means giving options, which previously meant either building a GUI, or trying to explain how to supply arguments to a Console Application. Gooey was made to (hopefully) solve those problems. It makes programs easy to use, and pretty to look at!</p>
<h2 tabindex="-1" dir="auto">Who is this for?</h2>
<p dir="auto">If you're building utilities for yourself, other programmers, or something which produces a result that you want to capture and pipe over to another console application (e.g. *nix philosophy utils), Gooey probably isn't the tool for you. However, if you're building 'run and done,' around-the-office-style scripts, things that shovel bits from point A to point B, or simply something that's targeted at a non-programmer, Gooey is the perfect tool for the job. It lets you build as complex of an application as your heart desires all while getting the GUI side for free.</p>
<h2 tabindex="-1" dir="auto">How does it work?</h2>
<p dir="auto">Gooey is attached to your code via a simple decorator on whichever method has your <code>argparse</code> declarations.</p>
<div data-snippet-clipboard-copy-content="@Gooey
def my_run_func():
  parser = ArgumentParser(...)
  # rest of code"><pre><code>@Gooey
def my_run_func():
  parser = ArgumentParser(...)
  # rest of code
</code></pre></div>
<p dir="auto">At run-time, it parses your Python script for all references to <code>ArgumentParser</code>. (The older <code>optparse</code> is currently not supported.) These references are then extracted, assigned a <code>component type</code> based on the <code>'action'</code> they provide, and finally used to assemble the GUI.</p>
<h4 tabindex="-1" dir="auto">Mappings:</h4>
<p dir="auto">Gooey does its best to choose sensible defaults based on the options it finds. Currently, <code>ArgumentParser._actions</code> are mapped to the following <code>WX</code> components.</p>
<table>
<thead>
<tr>
<th>Parser Action</th>
<th>Widget</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>store</td>
<td>TextCtrl</td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f54e9f5e-07c5-11e5-86e5-82f011c538cf.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f54e9f5e-07c5-11e5-86e5-82f011c538cf.png"></a></td>
</tr>
<tr>
<td>store_const</td>
<td>CheckBox</td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f538c850-07c5-11e5-8cbe-864badfa54a9.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f538c850-07c5-11e5-8cbe-864badfa54a9.png"></a></td>
</tr>
<tr>
<td>store_true</td>
<td>CheckBox</td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f538c850-07c5-11e5-8cbe-864badfa54a9.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f538c850-07c5-11e5-8cbe-864badfa54a9.png"></a></td>
</tr>
<tr>
<td>store_False</td>
<td>CheckBox</td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f538c850-07c5-11e5-8cbe-864badfa54a9.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f538c850-07c5-11e5-8cbe-864badfa54a9.png"></a></td>
</tr>
<tr>
<td>version</td>
<td>CheckBox</td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f538c850-07c5-11e5-8cbe-864badfa54a9.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f538c850-07c5-11e5-8cbe-864badfa54a9.png"></a></td>
</tr>
<tr>
<td>append</td>
<td>TextCtrl</td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f54e9f5e-07c5-11e5-86e5-82f011c538cf.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f54e9f5e-07c5-11e5-86e5-82f011c538cf.png"></a></td>
</tr>
<tr>
<td>count</td>
<td>DropDown &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f53ccbe4-07c5-11e5-80e5-510e2aa22922.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f53ccbe4-07c5-11e5-80e5-510e2aa22922.png"></a></td>
</tr>
<tr>
<td>Mutually Exclusive Group</td>
<td>RadioGroup</td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f553feb8-07c5-11e5-9d5b-eaa4772075a9.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f553feb8-07c5-11e5-9d5b-eaa4772075a9.png"></a></td>
</tr>
<tr>
<td>choice &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>DropDown</td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f54e4da6-07c5-11e5-9e66-d8e6d7f18ac6.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f54e4da6-07c5-11e5-9e66-d8e6d7f18ac6.png"></a></td>
</tr>
</tbody>
</table>
<h3 tabindex="-1" dir="auto">GooeyParser</h3>
<p dir="auto">If the above defaults aren't cutting it, you can control the exact widget type by using the drop-in <code>ArgumentParser</code> replacement <code>GooeyParser</code>. This gives you the additional keyword argument <code>widget</code>, to which you can supply the name of the component you want to display. Best part? You don't have to change any of your <code>argparse</code> code to use it. Drop it in, and you're good to go.</p>
<p dir="auto"><strong>Example:</strong></p>
<div data-snippet-clipboard-copy-content="from argparse import ArgumentParser
....

def main(): 
    parser = ArgumentParser(description=&quot;My Cool Gooey App!&quot;)
    parser.add_argument('filename', help=&quot;name of the file to process&quot;) "><pre><code>from argparse import ArgumentParser
....

def main(): 
    parser = ArgumentParser(description="My Cool Gooey App!")
    parser.add_argument('filename', help="name of the file to process") 
</code></pre></div>
<p dir="auto">Given then above, Gooey would select a normal <code>TextField</code> as the widget type like this:</p>
<p dir="auto">
    <a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f5393e20-07c5-11e5-88e9-c153fc3ecfaa.PNG"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f5393e20-07c5-11e5-88e9-c153fc3ecfaa.PNG"></a>
</p>
<p dir="auto">However, by dropping in <code>GooeyParser</code> and supplying a <code>widget</code> name, you can display a much more user friendly <code>FileChooser</code></p>
<div data-snippet-clipboard-copy-content="from gooey import GooeyParser
....

def main(): 
    parser = GooeyParser(description=&quot;My Cool Gooey App!&quot;)
    parser.add_argument('filename', help=&quot;name of the file to process&quot;, widget='FileChooser') "><pre><code>from gooey import GooeyParser
....

def main(): 
    parser = GooeyParser(description="My Cool Gooey App!")
    parser.add_argument('filename', help="name of the file to process", widget='FileChooser') 
</code></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f53ae23e-07c5-11e5-8757-c8aa6f3013b5.PNG"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f53ae23e-07c5-11e5-8757-c8aa6f3013b5.PNG"></a></p>
<p dir="auto"><strong>Custom Widgets:</strong></p>
<table>
<thead>
<tr>
<th>Widget</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>DirChooser, FileChooser, MultiFileChooser, FileSaver, MultiFileSaver</td>
<td><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f5483b28-07c5-11e5-9d01-1935635fc22d.gif"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f5483b28-07c5-11e5-9d01-1935635fc22d.gif" width="400" data-animated-image=""></a></p></td>
</tr>
<tr>
<td>DateChooser/TimeChooser   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f544756a-07c5-11e5-86d6-862ac146ad35.gif"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f544756a-07c5-11e5-86d6-862ac146ad35.gif" width="400" data-animated-image=""></a></p> <p dir="auto">Please note that for both of these widgets the values passed to the application will always be in <a href="https://www.wxpython.org/Phoenix/docs/html/wx.DateTime.html#wx.DateTime.FormatISOTime" rel="nofollow">ISO format</a> while localized values may appear in some parts of the GUI depending on end-user settings.</p></td>
</tr>
<tr>
<td>PasswordField</td>
<td><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/28953722-eae72cca-788e-11e7-8fa1-9a1ef332a053.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/28953722-eae72cca-788e-11e7-8fa1-9a1ef332a053.png" width="400"></a></p></td>
</tr>
<tr>
<td>Listbox</td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/31590191-fadd06f2-b1c0-11e7-9a49-7cbf0c6d33d1.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/31590191-fadd06f2-b1c0-11e7-9a49-7cbf0c6d33d1.png" alt="image"></a></td>
</tr>
<tr>
<td>BlockCheckbox</td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/46922288-9296f200-cfbb-11e8-8b0d-ddde08064247.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/46922288-9296f200-cfbb-11e8-8b0d-ddde08064247.png" alt="image"></a> <br> The default InlineCheck box can look less than ideal if a large help text block is present. <code>BlockCheckbox</code> moves the text block to the normal position and provides a short-form <code>block_label</code> for display next to the control. Use <code>gooey_options.checkbox_label</code> to control the label text</td>
</tr>
<tr>
<td>ColourChooser   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td><p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/21027844/72672451-0752aa80-3a0f-11ea-86ed-8303bd3e54b5.gif"><img src="https://user-images.githubusercontent.com/21027844/72672451-0752aa80-3a0f-11ea-86ed-8303bd3e54b5.gif" width="400" data-animated-image=""></a></p></td>
</tr>
<tr>
<td>FilterableDropdown</td>
<td><p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/chriskiehl/GooeyImages/images/readme-images/filterable-dropdown.gif"><img src="https://raw.githubusercontent.com/chriskiehl/GooeyImages/images/readme-images/filterable-dropdown.gif" width="400" data-animated-image=""></a></p></td>
</tr>
<tr>
<td>IntegerField</td>
<td><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/integer-field.PNG"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/integer-field.PNG" width="400"></a></p></td>
</tr>
<tr>
<td>DecimalField</td>
<td><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/decimal-field.PNG"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/decimal-field.PNG" width="400"></a></p></td>
</tr>
<tr>
<td>Slider</td>
<td><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/slider.PNG"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/slider.PNG" width="400"></a></p></td>
</tr>
</tbody>
</table>
<h2 tabindex="-1" dir="auto">Internationalization</h2>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f52e9f1a-07c5-11e5-8f31-36a8fc14ac02.jpg"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f52e9f1a-07c5-11e5-8f31-36a8fc14ac02.jpg"></a></p>
<p dir="auto">Gooey is international ready and easily ported to your host language. Languages are controlled via an argument to the <code>Gooey</code> decorator.</p>
<div data-snippet-clipboard-copy-content="@Gooey(language='russian')
def main(): 
    ... "><pre><code>@Gooey(language='russian')
def main(): 
    ... 
</code></pre></div>
<p dir="auto">All program text is stored externally in <code>json</code> files. So adding new language support is as easy as pasting a few key/value pairs in the <code>gooey/languages/</code> directory.</p>
<p dir="auto">Thanks to some awesome <a href="https://github.com/chriskiehl/Gooey/graphs/contributors">contributors</a>, Gooey currently comes pre-stocked with over 18 different translations!</p>
<p dir="auto">Want to add another one? Submit a <a href="https://github.com/chriskiehl/Gooey/compare">pull request!</a></p>
<hr>
<h2 tabindex="-1" dir="auto">Global Configuration</h2>
<p dir="auto">Just about everything in Gooey's overall look and feel can be customized by passing arguments to the decorator.</p>
<table>
<thead>
<tr>
<th>Parameter</th>
<th>Summary</th>
</tr>
</thead>
<tbody>
<tr>
<td>encoding</td>
<td>Text encoding to use when displaying characters (default: 'utf-8')</td>
</tr>
<tr>
<td>use_legacy_titles</td>
<td>Rewrites the default argparse group name from "Positional" to "Required". This is primarily for retaining backward compatibility with previous versions of Gooey (which had poor support/awareness of groups and did its own naive bucketing of arguments).</td>
</tr>
<tr>
<td>advanced</td>
<td>Toggles whether to show the 'full' configuration screen, or a simplified version</td>
</tr>
<tr>
<td>auto_start</td>
<td>Skips the configuration all together and runs the program immediately</td>
</tr>
<tr>
<td>language</td>
<td>Tells Gooey which language set to load from the <code>gooey/languages</code> directory.</td>
</tr>
<tr>
<td>target</td>
<td>Tells Gooey how to re-invoke itself. By default Gooey will find python, but this allows you to specify the program (and arguments if supplied).</td>
</tr>
<tr>
<td>suppress_gooey_flag</td>
<td>Should be set when using a custom <code>target</code>. Prevent Gooey from injecting additional CLI params</td>
</tr>
<tr>
<td>program_name</td>
<td>The name displayed in the title bar of the GUI window. If not supplied, the title defaults to the script name pulled from <code>sys.argv[0]</code>.</td>
</tr>
<tr>
<td>program_description</td>
<td>Sets the text displayed in the top panel of the <code>Settings</code> screen. Defaults to the description pulled from <code>ArgumentParser</code>.</td>
</tr>
<tr>
<td>default_size</td>
<td>Initial size of the window</td>
</tr>
<tr>
<td>fullscreen</td>
<td>start Gooey in fullscreen mode</td>
</tr>
<tr>
<td>required_cols</td>
<td>Controls how many columns are in the Required Arguments section <br> <g-emoji alias="warning">⚠️</g-emoji> <strong>Deprecation notice:</strong> See <a href="https://github.com/chriskiehl/Gooey#layout-customization">Layout Customization</a> for modern layout controls</td>
</tr>
<tr>
<td>optional_cols</td>
<td>Controls how many columns are in the Optional Arguments section <br> <g-emoji alias="warning">⚠️</g-emoji> <strong>Deprecation notice:</strong> See <a href="https://github.com/chriskiehl/Gooey#layout-customization">Layout Customization</a> for modern layout controls</td>
</tr>
<tr>
<td>dump_build_config</td>
<td>Saves a <code>json</code> copy of its build configuration on disk for reuse/editing</td>
</tr>
<tr>
<td>load_build_config</td>
<td>Loads a <code>json</code> copy of its build configuration from disk</td>
</tr>
<tr>
<td>monospace_display</td>
<td>Uses a mono-spaced font in the output screen <br> <g-emoji alias="warning">⚠️</g-emoji> <strong>Deprecation notice:</strong> See <a href="https://github.com/chriskiehl/Gooey#layout-customization">Layout Customization</a> for modern font configuration</td>
</tr>
<tr>
<td>image_dir</td>
<td>Path to the directory in which Gooey should look for custom images/icons</td>
</tr>
<tr>
<td>language_dir</td>
<td>Path to the directory in which Gooey should look for custom languages files</td>
</tr>
<tr>
<td>disable_stop_button</td>
<td>Disable the <code>Stop</code> button when running</td>
</tr>
<tr>
<td>show_stop_warning</td>
<td>Displays a warning modal before allowing the user to force termination of your program</td>
</tr>
<tr>
<td>force_stop_is_error</td>
<td>Toggles whether an early termination by the shows the success or error screen</td>
</tr>
<tr>
<td>show_success_modal</td>
<td>Toggles whether or not to show a summary modal after a successful run</td>
</tr>
<tr>
<td>show_failure_modal</td>
<td>Toggles whether or not to show a summary modal on failure</td>
</tr>
<tr>
<td>show_restart_button</td>
<td>Toggles whether or not to show the restart button at the end of execution</td>
</tr>
<tr>
<td>run_validators</td>
<td>Controls whether or not to have Gooey perform validation before calling your program</td>
</tr>
<tr>
<td>poll_external_updates</td>
<td>(Experimental!) When True, Gooey will call your code with a <code>gooey-seed-ui</code> CLI argument and use the response to fill out dynamic values in the UI (See: <a href="#using-dynamic-values">Using Dynamic Values</a>)</td>
</tr>
<tr>
<td>use_cmd_args</td>
<td>Substitute any command line arguments provided at run time for the default values specified in the Gooey configuration</td>
</tr>
<tr>
<td>return_to_config</td>
<td>When True, Gooey will return to the configuration settings window upon successful run</td>
</tr>
<tr>
<td>progress_regex</td>
<td>A text regex used to pattern match runtime progress information. See: <a href="#showing-progress">Showing Progress</a> for a detailed how-to</td>
</tr>
<tr>
<td>progress_expr</td>
<td>A python expression applied to any matches found via the <code>progress_regex</code>. See: <a href="#showing-progress">Showing Progress</a> for a detailed how-to</td>
</tr>
<tr>
<td>hide_progress_msg</td>
<td>Option to hide textual progress updates which match the <code>progress_regex</code>. See: <a href="#showing-progress">Showing Progress</a> for a detailed how-to</td>
</tr>
<tr>
<td>disable_progress_bar_animation</td>
<td>Disable the progress bar</td>
</tr>
<tr>
<td>timing_options</td>
<td>This contains the options for displaying time remaining and elapsed time, to be used with <code>progress_regex</code> and <code>progress_expr</code>. <a href="#elapsed--remaining-time">Elapsed / Remaining Time</a>. Contained as a dictionary with the options <code>show_time_remaining</code> and <code>hide_time_remaining_on_complete</code>. Eg: <code>timing_options={'show_time_remaining':True,'hide_time_remaining_on_complete':True}</code></td>
</tr>
<tr>
<td>show_time_remaining</td>
<td>Disable the time remaining text see <a href="#elapsed--remaining-time">Elapsed / Remaining Time</a></td>
</tr>
<tr>
<td>hide_time_remaining_on_complete</td>
<td>Hide time remaining on complete screen see <a href="#elapsed--remaining-time">Elapsed / Remaining Time</a></td>
</tr>
<tr>
<td>requires_shell</td>
<td>Controls whether or not the <code>shell</code> argument is used when invoking your program. <a href="https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess#3172488" rel="nofollow">More info here</a></td>
</tr>
<tr>
<td>shutdown_signal</td>
<td>Specifies the <code>signal</code> to send to the child process when the <code>stop</code> button is pressed. See <a href="https://github.com/chriskiehl/Gooey/tree/master/docs">Gracefully Stopping</a> in the docs for more info.</td>
</tr>
<tr>
<td>navigation</td>
<td>Sets the "navigation" style of Gooey's top level window. <br>Options: <table> <thead> <tr><th>TABBED</th><th>SIDEBAR</th></tr></thead> <tbody> <tr> <td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464826-2a946ba2-ee47-11e7-92a4-4afeb49dc9ca.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464826-2a946ba2-ee47-11e7-92a4-4afeb49dc9ca.png" width="200" height="auto"></a></td><td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464847-9918fbb0-ee47-11e7-8d5f-0d42631c2bc0.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464847-9918fbb0-ee47-11e7-8d5f-0d42631c2bc0.png" width="200" height="auto"></a></td></tr></tbody></table></td>
</tr>
<tr>
<td>sidebar_title</td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34472159-1bfedbd0-ef10-11e7-8bc3-b6d69febb8c3.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34472159-1bfedbd0-ef10-11e7-8bc3-b6d69febb8c3.png" width="250" height="auto"></a> Controls the heading title above the SideBar's navigation pane. Defaults to: "Actions"</td>
</tr>
<tr>
<td>show_sidebar</td>
<td>Show/Hide the sidebar in when navigation mode == <code>SIDEBAR</code></td>
</tr>
<tr>
<td>body_bg_color</td>
<td>HEX value of the main Gooey window</td>
</tr>
<tr>
<td>header_bg_color</td>
<td>HEX value of the header background</td>
</tr>
<tr>
<td>header_height</td>
<td>height in pixels of the header</td>
</tr>
<tr>
<td>header_show_title</td>
<td>Show/Hide the header title</td>
</tr>
<tr>
<td>header_show_subtitle</td>
<td>Show/Hide the header subtitle</td>
</tr>
<tr>
<td>footer_bg_color</td>
<td>HEX value of the Footer background</td>
</tr>
<tr>
<td>sidebar_bg_color</td>
<td>HEX value of the Sidebar's background</td>
</tr>
<tr>
<td>terminal_panel_color</td>
<td>HEX value of the terminal's panel</td>
</tr>
<tr>
<td>terminal_font_color</td>
<td>HEX value of the font displayed in Gooey's terminal</td>
</tr>
<tr>
<td>terminal_font_family</td>
<td>Name of the Font Family to use in the terminal</td>
</tr>
<tr>
<td>terminal_font_weight</td>
<td>Weight of the font (<code>constants.FONTWEIGHT_NORMAL</code>, <code>constants.FONTWEIGHT_XXX</code>)</td>
</tr>
<tr>
<td>terminal_font_size</td>
<td>Point size of the font displayed in the terminal</td>
</tr>
<tr>
<td>error_color</td>
<td>HEX value of the text displayed when a validation error occurs</td>
</tr>
<tr>
<td>richtext_controls</td>
<td>Switch on/off the console support for terminal control sequences (limited support for font weight and color). Defaults to : False. See <a href="https://github.com/chriskiehl/Gooey/tree/master/docs">docs</a> for additional details</td>
</tr>
<tr>
<td>menus</td>
<td>Show custom menu groups and items (see: <a href="#menus">Menus</a></td>
</tr>
<tr>
<td>clear_before_run</td>
<td>When true, previous output will be cleared from the terminal when running program again</td>
</tr>
</tbody>
</table>
<h2 tabindex="-1" dir="auto">Layout Customization</h2>
<p dir="auto">You can achieve fairly flexible layouts with Gooey by using a few simple customizations.</p>
<p dir="auto">At the highest level, you have several overall layout options controllable via various arguments to the Gooey decorator.</p>
<table>
<thead>
<tr>
<th><code>show_sidebar=True</code></th>
<th><code>show_sidebar=False</code></th>
<th><code>navigation='TABBED'</code></th>
<th><code>tabbed_groups=True</code></th>
</tr>
</thead>
<tbody>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464847-9918fbb0-ee47-11e7-8d5f-0d42631c2bc0.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464847-9918fbb0-ee47-11e7-8d5f-0d42631c2bc0.png" width="400"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/35487799-762aa308-0434-11e8-8eb3-1e9fab2d13ae.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/35487799-762aa308-0434-11e8-8eb3-1e9fab2d13ae.png" width="400"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464835-5ba9b0e4-ee47-11e7-9561-55e3647c2165.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464835-5ba9b0e4-ee47-11e7-9561-55e3647c2165.png" width="400"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464826-2a946ba2-ee47-11e7-92a4-4afeb49dc9ca.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464826-2a946ba2-ee47-11e7-92a4-4afeb49dc9ca.png" width="400"></a></td>
</tr>
</tbody>
</table>
<p dir="auto"><strong>Grouping Inputs</strong></p>
<p dir="auto">By default, if you're using Argparse with Gooey, your inputs will be split into two buckets: <code>positional</code> and <code>optional</code>. However, these aren't always the most descriptive groups to present to your user. You can arbitrarily bucket inputs into logic groups and customize the layout of each.</p>
<p dir="auto">With <code>argparse</code> this is done via <code>add_argument_group()</code></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/35487956-a4c9915e-0436-11e8-8a11-fd21528aedf0.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/35487956-a4c9915e-0436-11e8-8a11-fd21528aedf0.png" width="410"></a></p>
<div data-snippet-clipboard-copy-content="parser = ArgumentParser()
search_group = parser.add_argument_group(
    &quot;Search Options&quot;, 
    &quot;Customize the search options&quot;
)"><pre><code>parser = ArgumentParser()
search_group = parser.add_argument_group(
    "Search Options", 
    "Customize the search options"
)
</code></pre></div>
<p dir="auto">You can add arguments to the group as normal</p>
<div data-snippet-clipboard-copy-content="search_group.add_argument(
    '--query', 
    help='Base search string'
) "><pre><code>search_group.add_argument(
    '--query', 
    help='Base search string'
) 
</code></pre></div>
<p dir="auto">Which will display them as part of the group within the UI.</p>
<h2 tabindex="-1" dir="auto">Run Modes</h2>
<p dir="auto">Gooey has a handful of presentation modes so you can tailor its layout to your content type and user's level or experience.</p>
<h3 tabindex="-1" dir="auto">Advanced</h3>
<p dir="auto">The default view is the "full" or "advanced" configuration screen. It has two different layouts depending on the type of command line interface it's wrapping. For most applications, the flat layout will be the one to go with, as its layout matches best to the familiar CLI schema of a primary command followed by many options (e.g. Curl, FFMPEG).</p>
<p dir="auto">On the other side is the Column Layout. This one is best suited for CLIs that have multiple paths or are made up of multiple little tools each with their own arguments and options (think: git). It displays the primary paths along the left column, and their corresponding arguments in the right. This is a great way to package a lot of varied functionality into a single app.</p>
<p dir="auto">
<a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f06a36cc-08ad-11e5-843e-9322df96d4d6.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f06a36cc-08ad-11e5-843e-9322df96d4d6.png"></a>
</p>
<p dir="auto">Both views present each action in the <code>Argument Parser</code> as a unique GUI component. It makes it ideal for presenting the program to users which are unfamiliar with command line options and/or Console Programs in general. Help messages are displayed along side each component to make it as clear as possible which each widget does.</p>
<p dir="auto"><strong>Setting the layout style:</strong></p>
<p dir="auto">Currently, the layouts can't be explicitly specified via a parameter (on the TODO!). The layouts are built depending on whether or not there are <code>subparsers</code> used in your code base. So, if you want to trigger the <code>Column Layout</code>, you'll need to add a <code>subparser</code> to your <code>argparse</code> code.</p>
<p dir="auto">It can be toggled via the <code>advanced</code> parameter in the <code>Gooey</code> decorator.</p>
<div data-snippet-clipboard-copy-content="@gooey(advanced=True)
def main():
    # rest of code   "><pre><code>@gooey(advanced=True)
def main():
    # rest of code   
</code></pre></div>
<hr>
<h3 tabindex="-1" dir="auto">Basic</h3>
<p dir="auto">The basic view is best for times when the user is familiar with Console Applications, but you still want to present something a little more polished than a simple terminal. The basic display is accessed by setting the <code>advanced</code> parameter in the <code>gooey</code> decorator to <code>False</code>.</p>
<div data-snippet-clipboard-copy-content="@gooey(advanced=False)
def main():
    # rest of code  "><pre><code>@gooey(advanced=False)
def main():
    # rest of code  
</code></pre></div>
<p dir="auto">
    <a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f53a4306-07c5-11e5-8e63-b510d6db9953.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f53a4306-07c5-11e5-8e63-b510d6db9953.png"></a>
</p>
<hr>
<h3 tabindex="-1" dir="auto">No Config</h3>
<p dir="auto">No Config pretty much does what you'd expect: it doesn't show a configuration screen. It hops right to the <code>display</code> section and begins execution of the host program. This is the one for improving the appearance of little one-off scripts.</p>
<p dir="auto">To use this mode, set <code>auto_start=True</code> in the Gooey decorator.</p>
<div dir="auto" data-snippet-clipboard-copy-content="@Gooey(auto_start=True) 
def main (): 
    ... "><pre><span>@<span>Gooey</span>(<span>auto_start</span><span>=</span><span>True</span>)</span> 
<span>def</span> <span>main</span> (): 
    ... </pre></div>
<p dir="auto">
    <a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f54fe6f2-07c5-11e5-92e4-f72a2ae12862.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/f54fe6f2-07c5-11e5-92e4-f72a2ae12862.png"></a>
</p>
<hr>
<h3 tabindex="-1" dir="auto">Menus</h3>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/47250909-74782a00-d3df-11e8-88ac-182d06c4435a.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/47250909-74782a00-d3df-11e8-88ac-182d06c4435a.png" alt="image"></a></p>
<blockquote>
<p dir="auto">Added 1.0.2</p>
</blockquote>
<p dir="auto">You can add a Menu Bar to the top of Gooey with customized menu groups and items.</p>
<p dir="auto">Menus are specified on the main <code>@Gooey</code> decorator as a list of maps.</p>
<div data-snippet-clipboard-copy-content="@Gooey(menu=[{}, {}, ...])"><pre><code>@Gooey(menu=[{}, {}, ...])
</code></pre></div>
<p dir="auto">Each map is made up of two key/value pairs</p>
<ol dir="auto">
<li><code>name</code> - the name for this menu group</li>
<li><code>items</code> - the individual menu items within this group</li>
</ol>
<p dir="auto">You can have as many menu groups as you want. They're passed as a list to the <code>menu</code> argument on the <code>@Gooey</code> decorator.</p>
<div data-snippet-clipboard-copy-content="@Gooey(menu=[{'name': 'File', 'items: []},
             {'name': 'Tools', 'items': []},
             {'name': 'Help', 'items': []}])"><pre><code>@Gooey(menu=[{'name': 'File', 'items: []},
             {'name': 'Tools', 'items': []},
             {'name': 'Help', 'items': []}])
</code></pre></div>
<p dir="auto">Individual menu items in a group are also just maps of key / value pairs. Their exact key set varies based on their <code>type</code>, but two keys will always be present:</p>
<ul dir="auto">
<li><code>type</code> - this controls the behavior that will be attached to the menu item as well as the keys it needs specified</li>
<li><code>menuTitle</code> - the name for this MenuItem</li>
</ul>
<p dir="auto">Currently, three types of menu options are supported:</p>
<ul dir="auto">
<li>AboutDialog</li>
<li>MessageDialog</li>
<li>Link</li>
<li>HtmlDialog</li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/47251026-9ffc1400-d3e1-11e8-9095-982a6367561b.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/47251026-9ffc1400-d3e1-11e8-9095-982a6367561b.png" width="400" height="auto"></a></p>
<p dir="auto"><strong>About Dialog</strong> is your run-of-the-mill About Dialog. It displays program information such as name, version, and license info in a standard native AboutBox.</p>
<p dir="auto">Schema</p>
<ul dir="auto">
<li><code>name</code> - (<em>optional</em>)</li>
<li><code>description</code> - (<em>optional</em>)</li>
<li><code>version</code> - (<em>optional</em>)</li>
<li><code>copyright</code> - (<em>optional</em>)</li>
<li><code>license</code> - (<em>optional</em>)</li>
<li><code>website</code> - (<em>optional</em>)</li>
<li><code>developer</code> - (<em>optional</em>)</li>
</ul>
<p dir="auto">Example:</p>
<div data-snippet-clipboard-copy-content="{
    'type': 'AboutDialog',
    'menuTitle': 'About',
    'name': 'Gooey Layout Demo',
    'description': 'An example of Gooey\'s layout flexibility',
    'version': '1.2.1',
    'copyright': '2018',
    'website': 'https://github.com/chriskiehl/Gooey',
    'developer': 'http://chriskiehl.com/',
    'license': 'MIT'
}"><pre><code>{
    'type': 'AboutDialog',
    'menuTitle': 'About',
    'name': 'Gooey Layout Demo',
    'description': 'An example of Gooey\'s layout flexibility',
    'version': '1.2.1',
    'copyright': '2018',
    'website': 'https://github.com/chriskiehl/Gooey',
    'developer': 'http://chriskiehl.com/',
    'license': 'MIT'
}
</code></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/47250925-bbfeb600-d3df-11e8-88a8-5ba838e9466d.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/47250925-bbfeb600-d3df-11e8-88a8-5ba838e9466d.png" width="400" height="auto"></a></p>
<p dir="auto"><strong>MessageDialog</strong> is a generic informational dialog box. You can display anything from small alerts, to long-form informational text to the user.</p>
<p dir="auto">Schema:</p>
<ul dir="auto">
<li><code>message</code> - (<em>required</em>) the text to display in the body of the modal</li>
<li><code>caption</code> - (<em>optional</em>) the caption in the title bar of the modal</li>
</ul>
<p dir="auto">Example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="{
    'type': 'MessageDialog',
    'menuTitle': 'Information',
    'message': 'Hey, here is some cool info for ya!',
    'caption': 'Stuff you should know'
}"><pre>{
    <span>'type'</span>: <span>'MessageDialog'</span>,
    <span>'menuTitle'</span>: <span>'Information'</span>,
    <span>'message'</span>: <span>'Hey, here is some cool info for ya!'</span>,
    <span>'caption'</span>: <span>'Stuff you should know'</span>
}</pre></div>
<p dir="auto"><strong>Link</strong> is for sending the user to an external website. This will spawn their default browser at the URL you specify.</p>
<p dir="auto">Schema:</p>
<ul dir="auto">
<li><code>url</code> - (<em>required</em>) - the fully qualified URL to visit</li>
</ul>
<p dir="auto">Example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="{
    'type': 'Link',
    'menuTitle': 'Visit Out Site',
    'url': 'http://www.example.com'
}"><pre>{
    <span>'type'</span>: <span>'Link'</span>,
    <span>'menuTitle'</span>: <span>'Visit Out Site'</span>,
    <span>'url'</span>: <span>'http://www.example.com'</span>
}</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/docs/menus/html-dialog.PNG"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/docs/menus/html-dialog.PNG" width="400" height="auto"></a></p>
<p dir="auto"><strong>HtmlDialog</strong> gives you full control over what's displayed in the message dialog (bonus: people can copy/paste text from this one!).</p>
<p dir="auto">Schema:</p>
<ul dir="auto">
<li><code>caption</code> - (<em>optional</em>) the caption in the title bar of the modal</li>
<li><code>html</code> - (<em>required</em>) the html you want displayed in the dialog. Note: only a small subset of HTML is supported. <a href="https://wxpython.org/Phoenix/docs/html/html_overview.html" rel="nofollow">See the WX docs for more info</a>.</li>
</ul>
<p dir="auto">Example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="{
    'type': 'HtmlDialog',
    'menuTitle': 'Fancy Dialog!',
    'caption': 'Demo of the HtmlDialog',
    'html': '''
    <body bgcolor=&quot;white&quot;>
        <img src=/path/to/your/image.png&quot; /> 
        <h1>Hello world!</h1> 
        <p><font color=&quot;red&quot;>Lorem ipsum dolor sit amet, consectetur</font></p>
    </body>
    '''
}
"><pre>{
    <span>'type'</span>: <span>'HtmlDialog'</span>,
    <span>'menuTitle'</span>: <span>'Fancy Dialog!'</span>,
    <span>'caption'</span>: <span>'Demo of the HtmlDialog'</span>,
    <span>'html'</span>: <span>'''</span>
<span>    &lt;body bgcolor="white"&gt;</span>
<span>        &lt;img src=/path/to/your/image.png" /&gt; </span>
<span>        &lt;h1&gt;Hello world!&lt;/h1&gt; </span>
<span>        &lt;p&gt;&lt;font color="red"&gt;Lorem ipsum dolor sit amet, consectetur&lt;/font&gt;&lt;/p&gt;</span>
<span>    &lt;/body&gt;</span>
<span>    '''</span>
}</pre></div>
<p dir="auto"><strong>A full example:</strong></p>
<p dir="auto">Two menu groups ("File" and "Help") with four menu items between them.</p>
<div dir="auto" data-snippet-clipboard-copy-content="@Gooey(
    program_name='Advanced Layout Groups',
    menu=[{
        'name': 'File',
        'items': [{
                'type': 'AboutDialog',
                'menuTitle': 'About',
                'name': 'Gooey Layout Demo',
                'description': 'An example of Gooey\'s layout flexibility',
                'version': '1.2.1',
                'copyright': '2018',
                'website': 'https://github.com/chriskiehl/Gooey',
                'developer': 'http://chriskiehl.com/',
                'license': 'MIT'
            }, {
                'type': 'MessageDialog',
                'menuTitle': 'Information',
                'caption': 'My Message',
                'message': 'I am demoing an informational dialog!'
            }, {
                'type': 'Link',
                'menuTitle': 'Visit Our Site',
                'url': 'https://github.com/chriskiehl/Gooey'
            }]
        },{
        'name': 'Help',
        'items': [{
            'type': 'Link',
            'menuTitle': 'Documentation',
            'url': 'https://www.readthedocs.com/foo'
        }]
    }]
)"><pre><span>@<span>Gooey</span>(</span>
<span>    <span>program_name</span><span>=</span><span>'Advanced Layout Groups'</span>,</span>
<span>    <span>menu</span><span>=</span>[{</span>
<span>        <span>'name'</span>: <span>'File'</span>,</span>
<span>        <span>'items'</span>: [{</span>
<span>                <span>'type'</span>: <span>'AboutDialog'</span>,</span>
<span>                <span>'menuTitle'</span>: <span>'About'</span>,</span>
<span>                <span>'name'</span>: <span>'Gooey Layout Demo'</span>,</span>
<span>                <span>'description'</span>: <span>'An example of Gooey<span>\'</span>s layout flexibility'</span>,</span>
<span>                <span>'version'</span>: <span>'1.2.1'</span>,</span>
<span>                <span>'copyright'</span>: <span>'2018'</span>,</span>
<span>                <span>'website'</span>: <span>'https://github.com/chriskiehl/Gooey'</span>,</span>
<span>                <span>'developer'</span>: <span>'http://chriskiehl.com/'</span>,</span>
<span>                <span>'license'</span>: <span>'MIT'</span></span>
<span>            }, {</span>
<span>                <span>'type'</span>: <span>'MessageDialog'</span>,</span>
<span>                <span>'menuTitle'</span>: <span>'Information'</span>,</span>
<span>                <span>'caption'</span>: <span>'My Message'</span>,</span>
<span>                <span>'message'</span>: <span>'I am demoing an informational dialog!'</span></span>
<span>            }, {</span>
<span>                <span>'type'</span>: <span>'Link'</span>,</span>
<span>                <span>'menuTitle'</span>: <span>'Visit Our Site'</span>,</span>
<span>                <span>'url'</span>: <span>'https://github.com/chriskiehl/Gooey'</span></span>
<span>            }]</span>
<span>        },{</span>
<span>        <span>'name'</span>: <span>'Help'</span>,</span>
<span>        <span>'items'</span>: [{</span>
<span>            <span>'type'</span>: <span>'Link'</span>,</span>
<span>            <span>'menuTitle'</span>: <span>'Documentation'</span>,</span>
<span>            <span>'url'</span>: <span>'https://www.readthedocs.com/foo'</span></span>
<span>        }]</span>
<span>    }]</span>
<span>)</span></pre></div>
<hr>
<h3 tabindex="-1" dir="auto">Dynamic Validation</h3>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464861-0e82c214-ee48-11e7-8f4a-a8e00721efef.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464861-0e82c214-ee48-11e7-8f4a-a8e00721efef.png" width="400" height="auto"></a></p>
<blockquote>
<p dir="auto"><g-emoji alias="warning">⚠️</g-emoji>
Note! This functionality is experimental and likely to be unstable. Its API may be changed or removed altogether. Feedback/thoughts on this feature is welcome and encouraged!</p>
</blockquote>
<blockquote>
<p dir="auto"><g-emoji alias="warning">⚠️</g-emoji>
See <a href="https://github.com/chriskiehl/Gooey/blob/master">Release Notes</a> for guidance on upgrading from 1.0.8 to 1.2.0</p>
</blockquote>
<p dir="auto">Before passing the user's inputs to your program, Gooey can optionally run a special pre-flight validation to check that all arguments pass your specified validations.</p>
<p dir="auto"><strong>How does it work?</strong></p>
<p dir="auto">Gooey piggy backs on the <code>type</code> parameter available to most Argparse Argument types.</p>
<div dir="auto" data-snippet-clipboard-copy-content="parser.add_argument('--some-number', type=int)
parser.add_argument('--some-number', type=float)"><pre><span>parser</span>.<span>add_argument</span>(<span>'--some-number'</span>, <span>type</span><span>=</span><span>int</span>)
<span>parser</span>.<span>add_argument</span>(<span>'--some-number'</span>, <span>type</span><span>=</span><span>float</span>)</pre></div>
<p dir="auto">In addition to simple builtins like <code>int</code> and <code>float</code>, you can supply your own function to the <code>type</code> parameter to vet the incoming values.</p>
<div dir="auto" data-snippet-clipboard-copy-content="def must_be_exactly_ten(value): 
    number = int(value) 
    if number == 10:
        return number
    else: 
        raise TypeError(&quot;Hey! you need to provide exactly the number 10!&quot;)
        
        
def main(): 
    parser = ArgumentParser()
    parser.add_argument('--ten', type=must_be_exactly_ten)"><pre><span>def</span> <span>must_be_exactly_ten</span>(<span>value</span>): 
    <span>number</span> <span>=</span> <span>int</span>(<span>value</span>) 
    <span>if</span> <span>number</span> <span>==</span> <span>10</span>:
        <span>return</span> <span>number</span>
    <span>else</span>: 
        <span>raise</span> <span>TypeError</span>(<span>"Hey! you need to provide exactly the number 10!"</span>)
        
        
<span>def</span> <span>main</span>(): 
    <span>parser</span> <span>=</span> <span>ArgumentParser</span>()
    <span>parser</span>.<span>add_argument</span>(<span>'--ten'</span>, <span>type</span><span>=</span><span>must_be_exactly_ten</span>)</pre></div>
<p dir="auto"><strong>How to enable the pre-flight validation</strong></p>
<p dir="auto">By default, Gooey won't run the validation. Why? This feature is fairly experimental and does a lot of intense Monkey Patching behind the scenes. As such, it's currently opt-in.</p>
<p dir="auto">You enable to validation by telling Gooey you'd like to subscribe to the <code>VALIDATE_FORM</code> event.</p>
<div dir="auto" data-snippet-clipboard-copy-content="from gooey import Gooey, Events 

@Gooey(use_events=[Events.VALIDATE_FORM])
def main(): 
    ... "><pre><span>from</span> <span>gooey</span> <span>import</span> <span>Gooey</span>, <span>Events</span> 

<span>@<span>Gooey</span>(<span>use_events</span><span>=</span>[<span>Events</span>.<span>VALIDATE_FORM</span>])</span>
<span>def</span> <span>main</span>(): 
    ... </pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/dynamic-validation-1-2-0.JPG"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/dynamic-validation-1-2-0.JPG"></a></p>
<p dir="auto">Now, when you run Gooey, before it invokes your main program, it'll send a separate pre-validation check and record any issues raised from your <code>type</code> functions.</p>
<p dir="auto"><strong>Full Code Example</strong></p>
<div data-snippet-clipboard-copy-content="from gooey import Gooey, Events
from argparse import ArgumentParser

def must_be_exactly_ten(value):
    number = int(value)
    if number == 10:
        return number
    else:
        raise TypeError(&quot;Hey! you need to provide exactly the number 10!&quot;)

@Gooey(program_name='Validation Example', use_events=[Events.VALIDATE_FORM])
def main():
    parser = ArgumentParser(description=&quot;Checkout this validation!&quot;)
    parser.add_argument('--ten', metavar='This field should be 10', type=must_be_exactly_ten)
    args = parser.parse_args()
    print(args)"><pre><code>from gooey import Gooey, Events
from argparse import ArgumentParser

def must_be_exactly_ten(value):
    number = int(value)
    if number == 10:
        return number
    else:
        raise TypeError("Hey! you need to provide exactly the number 10!")

@Gooey(program_name='Validation Example', use_events=[Events.VALIDATE_FORM])
def main():
    parser = ArgumentParser(description="Checkout this validation!")
    parser.add_argument('--ten', metavar='This field should be 10', type=must_be_exactly_ten)
    args = parser.parse_args()
    print(args)
</code></pre></div>
<hr>
<h2 tabindex="-1" dir="auto">Lifecycle Events and UI control</h2>
<blockquote>
<p dir="auto"><g-emoji alias="warning">⚠️</g-emoji>
Note! This functionality is experimental. Its API may be changed or removed altogether. Feedback on this feature is welcome and encouraged!</p>
</blockquote>
<p dir="auto">As of 1.2.0, Gooey now exposes coarse grain lifecycle hooks to your program. This means you can now take additional follow-up actions in response to successful runs or failures and even control the current state of the UI itself!</p>
<p dir="auto">Currently, two primary hooks are exposed:</p>
<ul dir="auto">
<li><code>on_success</code></li>
<li><code>on_error</code></li>
</ul>
<p dir="auto">These fire exactly when you'd expect: after your process has completed.</p>
<p dir="auto"><strong>Anatomy of an lifecycle handler</strong>:</p>
<p dir="auto">Both <code>on_success</code> and <code>on_error</code> have the same type signature.</p>
<div dir="auto" data-snippet-clipboard-copy-content="from typing import Mapping, Any, Optional
from gooey.types import PublicGooeyState  

def on_success(args: Mapping[str, Any], state: PublicGooeyState) -> Optional[PublicGooeyState]:
    &quot;&quot;&quot;
    You can do anything you want in the handler including 
    returning an updated UI state for your next run!   
    &quot;&quot;&quot; 
    return state
    
def on_error(args: Mapping[str, Any], state: PublicGooeyState) -> Optional[PublicGooeyState]:
    &quot;&quot;&quot;
    You can do anything you want in the handler including 
    returning an updated UI state for your next run!   
    &quot;&quot;&quot; 
    return state    "><pre><span>from</span> <span>typing</span> <span>import</span> <span>Mapping</span>, <span>Any</span>, <span>Optional</span>
<span>from</span> <span>gooey</span>.<span>types</span> <span>import</span> <span>PublicGooeyState</span>  

<span>def</span> <span>on_success</span>(<span>args</span>: <span>Mapping</span>[<span>str</span>, <span>Any</span>], <span>state</span>: <span>PublicGooeyState</span>) <span>-&gt;</span> <span>Optional</span>[<span>PublicGooeyState</span>]:
    <span>"""</span>
<span>    You can do anything you want in the handler including </span>
<span>    returning an updated UI state for your next run!   </span>
<span>    """</span> 
    <span>return</span> <span>state</span>
    
<span>def</span> <span>on_error</span>(<span>args</span>: <span>Mapping</span>[<span>str</span>, <span>Any</span>], <span>state</span>: <span>PublicGooeyState</span>) <span>-&gt;</span> <span>Optional</span>[<span>PublicGooeyState</span>]:
    <span>"""</span>
<span>    You can do anything you want in the handler including </span>
<span>    returning an updated UI state for your next run!   </span>
<span>    """</span> 
    <span>return</span> <span>state</span>    </pre></div>
<ul dir="auto">
<li><strong>args</strong> This is the parsed Argparse object (e.g. the output of <code>parse_args()</code>). This will be a mapping of the user's arguments as existed when your program was invoked.</li>
<li><strong>state</strong> This is the current state of Gooey's UI. If your program uses subparsers, this currently just lists the state of the active parser/form. Whatever updated version of this state you return will be reflected in the UI!</li>
</ul>
<p dir="auto"><strong>Attaching the handlers:</strong></p>
<p dir="auto">Handlers are attached when instantiating the <code>GooeyParser</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="parser = GooeyParser(
    on_success=my_success_handler,
    on_failure=my_failure_handler)"><pre><span>parser</span> <span>=</span> <span>GooeyParser</span>(
    <span>on_success</span><span>=</span><span>my_success_handler</span>,
    <span>on_failure</span><span>=</span><span>my_failure_handler</span>)</pre></div>
<p dir="auto"><strong>Subscribing to the lifecycle events</strong></p>
<p dir="auto">Just like <a href="#dynamic-validation">Validation</a>, these lifecycle events are opt-in. Pass the event you'd like to subscribe to into the <code>use_events</code> Gooey decorator argument.</p>
<div dir="auto" data-snippet-clipboard-copy-content="from gooey import Gooey, Events 

@Gooey(use_events=[Events.ON_SUCCESS, Events.ON_ERROR])
def main(): 
    ... "><pre><span>from</span> <span>gooey</span> <span>import</span> <span>Gooey</span>, <span>Events</span> 

<span>@<span>Gooey</span>(<span>use_events</span><span>=</span>[<span>Events</span>.<span>ON_SUCCESS</span>, <span>Events</span>.<span>ON_ERROR</span>])</span>
<span>def</span> <span>main</span>(): 
    ... </pre></div>
<hr>
<h2 tabindex="-1" dir="auto">Showing Progress</h2>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/45590349-55bbda80-b8eb-11e8-9aed-b4fe377756ac.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/45590349-55bbda80-b8eb-11e8-9aed-b4fe377756ac.png" width="420"></a></p>
<p dir="auto">Giving visual progress feedback with Gooey is easy! If you're already displaying textual progress updates, you can tell Gooey to hook into that existing output in order to power its Progress Bar.</p>
<p dir="auto">For simple cases, output strings which resolve to a numeric representation of the completion percentage (e.g. <code>Progress 83%</code>) can be pattern matched and turned into a progress bar status with a simple regular expression (e.g. <code>@Gooey(progress_regex=r"^progress: (\d+)%$")</code>).</p>
<p dir="auto">For more complicated outputs, you can pass in a custom evaluation expression (<code>progress_expr</code>) to transform regular expression matches as needed.</p>
<p dir="auto">Output strings which satisfy the regular expression can be hidden from the console via the <code>hide_progress_msg</code> parameter (e.g. <code>@Gooey(progress_regex=r"^progress: (\d+)%$", hide_progress_msg=True)</code>.</p>
<p dir="auto"><strong>Regex and Processing Expression</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="@Gooey(progress_regex=r&quot;^progress: (?P<current>\d+)/(?P<total>\d+)$&quot;,
       progress_expr=&quot;current / total * 100&quot;)"><pre><span>@<span>Gooey</span>(<span>progress_regex</span><span>=</span><span>r"^progress: (?P&lt;current&gt;\d+)/(?P&lt;total&gt;\d+)$"</span>,</span>
<span>       <span>progress_expr</span><span>=</span><span>"current / total * 100"</span>)</span></pre></div>
<p dir="auto"><strong>Program Output:</strong></p>
<div data-snippet-clipboard-copy-content="progress: 1/100
progress: 2/100
progress: 3/100
..."><pre><code>progress: 1/100
progress: 2/100
progress: 3/100
...
</code></pre></div>
<p dir="auto">There are lots of options for telling Gooey about progress as your program is running. Checkout the <a href="https://github.com/chriskiehl/GooeyExamples">Gooey Examples</a> repository for more detailed usage and examples!</p>
<h3 tabindex="-1" dir="auto">Elapsed / Remaining Time</h3>
<p dir="auto">Gooey also supports tracking elapsed / remaining time when progress is used! This is done in a similar manner to that of the project <a href="https://github.com/tqdm/tqdm">tqdm</a>. This can be enabled with <code>timing_options</code>, the <code>timing_options</code> argument takes in a dictionary with the keys <code>show_time_remaining</code> and <code>hide_time_remaining_on_complete</code>. The default behavior is True for <code>show_time_remaining</code> and False for <code>hide_time_remaining_on_complete</code>. This will only work when <code>progress_regex</code> and <code>progress_expr</code> are used.</p>
<div dir="auto" data-snippet-clipboard-copy-content="@Gooey(progress_regex=r&quot;^progress: (?P<current>\d+)/(?P<total>\d+)$&quot;,
       progress_expr=&quot;current / total * 100&quot;,
       timing_options = {
        'show_time_remaining':True,
        'hide_time_remaining_on_complete':True,
    })"><pre><span>@<span>Gooey</span>(<span>progress_regex</span><span>=</span><span>r"^progress: (?P&lt;current&gt;\d+)/(?P&lt;total&gt;\d+)$"</span>,</span>
<span>       <span>progress_expr</span><span>=</span><span>"current / total * 100"</span>,</span>
<span>       <span>timing_options</span> <span>=</span> {</span>
<span>        <span>'show_time_remaining'</span>:<span>True</span>,</span>
<span>        <span>'hide_time_remaining_on_complete'</span>:<span>True</span>,</span>
<span>    })</span></pre></div>
<hr>
<h2 tabindex="-1" dir="auto">Customizing Icons</h2>
<p dir="auto">Gooey comes with a set of six default icons. These can be overridden with your own custom images/icons by telling Gooey to search additional directories when initializing. This is done via the <code>image_dir</code> argument to the <code>Gooey</code> decorator.</p>
<div data-snippet-clipboard-copy-content="@Gooey(program_name='Custom icon demo', image_dir='/path/to/my/image/directory')
def main():
    # rest of program"><pre><code>@Gooey(program_name='Custom icon demo', image_dir='/path/to/my/image/directory')
def main():
    # rest of program
</code></pre></div>
<p dir="auto">Images are discovered by Gooey based on their <em>filenames</em>. So, for example, in order to supply a custom configuration icon, simply place an image with the filename <code>config_icon.png</code> in your images directory. These are the filenames which can be overridden:</p>
<ul dir="auto">
<li>program_icon.png</li>
<li>success_icon.png</li>
<li>running_icon.png</li>
<li>loading_icon.gif</li>
<li>config_icon.png</li>
<li>error_icon.png</li>
</ul>
<h2 tabindex="-1" dir="auto">Packaging</h2>
<p dir="auto">Thanks to some <a href="https://github.com/chriskiehl/Gooey/issues/58" data-hovercard-type="issue" data-hovercard-url="/chriskiehl/Gooey/issues/58/hovercard">awesome contributors</a>, packaging Gooey as an executable is super easy.</p>
<p dir="auto">The tl;dr <a href="https://github.com/pyinstaller/pyinstaller">pyinstaller</a> version is to drop this <a href="https://raw.githubusercontent.com/chriskiehl/Gooey/master/docs/packaging/build-win.spec" rel="nofollow">build.spec</a> into the root directory of your application. Edit its contents so that the <code>APPPNAME</code> and <code>name</code> are relevant to your project and the <code>pathex</code> value points to your applications root, then execute <code>pyinstaller -F --windowed build.spec</code> to bundle your app into a ready-to-go executable.</p>
<p dir="auto">Detailed step by step instructions can be found <a href="https://github.com/chriskiehl/Gooey/blob/master/docs/packaging/Packaging-Gooey.md">here</a>.</p>
<h2 tabindex="-1" dir="auto">Screenshots</h2>
<table>
<thead>
<tr>
<th>Flat Layout</th>
<th>Column Layout</th>
<th>Success Screen</th>
<th>Error Screen</th>
<th>Warning Dialog</th>
</tr>
</thead>
<tbody>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/4414e54e-0965-11e5-964b-f717a7adaac6.jpg"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/4414e54e-0965-11e5-964b-f717a7adaac6.jpg"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/4411b824-0965-11e5-905a-3a2b5df0efb3.jpg"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/4411b824-0965-11e5-905a-3a2b5df0efb3.jpg"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/44165442-0965-11e5-8edf-b8305353285f.jpg"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/44165442-0965-11e5-8edf-b8305353285f.jpg"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/4410dcce-0965-11e5-8243-c1d832c05887.jpg"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/4410dcce-0965-11e5-8243-c1d832c05887.jpg"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/4415432c-0965-11e5-9190-17f55460faf3.jpg"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/4415432c-0965-11e5-9190-17f55460faf3.jpg"></a></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Custom Groups</th>
<th>Tabbed Groups</th>
<th>Tabbed Navigation</th>
<th>Sidebar Navigation</th>
<th>Input Validation</th>
</tr>
</thead>
<tbody>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464824-c044d57a-ee46-11e7-9c35-6e701a7c579a.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464824-c044d57a-ee46-11e7-9c35-6e701a7c579a.png"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464826-2a946ba2-ee47-11e7-92a4-4afeb49dc9ca.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464826-2a946ba2-ee47-11e7-92a4-4afeb49dc9ca.png"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464835-5ba9b0e4-ee47-11e7-9561-55e3647c2165.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464835-5ba9b0e4-ee47-11e7-9561-55e3647c2165.png"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464847-9918fbb0-ee47-11e7-8d5f-0d42631c2bc0.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464847-9918fbb0-ee47-11e7-8d5f-0d42631c2bc0.png"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464861-0e82c214-ee48-11e7-8f4a-a8e00721efef.png"><img src="https://github.com/chriskiehl/GooeyImages/raw/images/readme-images/34464861-0e82c214-ee48-11e7-8f4a-a8e00721efef.png"></a></td>
</tr>
</tbody>
</table>
<hr>
<h2 tabindex="-1" dir="auto">Wanna help?</h2>
<p dir="auto">Code, translation, documentation, or graphics? All pull requests are welcome. Just make sure to checkout <a href="https://github.com/chriskiehl/Gooey/blob/master/CONTRIBUTING.md">the contributing guidelines</a> first.</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Firefox Keeps Getting Faster (238 pts)]]></title>
            <link>https://blog.mozilla.org/en/products/quick-as-a-fox-firefox-keeps-getting-faster/</link>
            <guid>38586512</guid>
            <pubDate>Sat, 09 Dec 2023 22:00:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.mozilla.org/en/products/quick-as-a-fox-firefox-keeps-getting-faster/">https://blog.mozilla.org/en/products/quick-as-a-fox-firefox-keeps-getting-faster/</a>, See on <a href="https://news.ycombinator.com/item?id=38586512">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page">
    <p><a href="#content">Skip to content</a></p><!-- #masthead -->
    <p>
      <h4>Search</h4>
          </p>

    <div id="content">
  <main id="main">

    
<article id="post-73563">
  

  <div>
    
<figure><img decoding="async" fetchpriority="high" width="1024" height="683" src="https://blog.mozilla.org/wp-content/blogs.dir/278/files/2021/06/fx_website_meta-image_tips-tricks_alt-04-1024x683.png" alt="" srcset="https://blog.mozilla.org/wp-content/blogs.dir/278/files/2021/06/fx_website_meta-image_tips-tricks_alt-04-1024x683.png 1024w, https://blog.mozilla.org/wp-content/blogs.dir/278/files/2021/06/fx_website_meta-image_tips-tricks_alt-04-300x200.png 300w, https://blog.mozilla.org/wp-content/blogs.dir/278/files/2021/06/fx_website_meta-image_tips-tricks_alt-04-768x512.png 768w, https://blog.mozilla.org/wp-content/blogs.dir/278/files/2021/06/fx_website_meta-image_tips-tricks_alt-04-1000x667.png 1000w, https://blog.mozilla.org/wp-content/blogs.dir/278/files/2021/06/fx_website_meta-image_tips-tricks_alt-04.png 1200w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>Web browsing is a pervasive part of modern life, and the quality of the experience directly affects the quality of your day. When your tasks are disrupted by slow or unresponsive pages, it is frustrating and distracting. As such, performance is a key component of <a href="https://www.mozilla.org/en-US/about/webvision/full/#performance">Mozilla’s vision</a> for the web.</p>



<p>To deliver against our vision and enable a better online experience for everyone, we’ve been working hard on making Firefox even faster. We’re extremely happy to report that this has resulted in a significant improvement in speed over the past year.</p>



<h2><strong>Improvements on benchmarks</strong></h2>



<p>One way to judge browser performance is by using industry benchmarks. We have seen measurable improvements here, specifically around the popular benchmark <a href="https://browserbench.org/Speedometer2.1/">Speedometer 2.1</a>.&nbsp; This benchmark measures browser responsiveness by simulating user interactions (such as manipulating a list of to-do items).</p>



<figure><img decoding="async" src="https://lh7-us.googleusercontent.com/JycfLdWVg3aahOa4S-3l3AH7d2uJnmwIHJODCVjjhIjGoHDGdw5zIZ9ZhLnBW8e6geZKoZCF4Gj9CbwTU-WZ1-a6aMucqREb8rgRVM4YCtq-yn-VEf5Q59JrsQS0JpnrHI7jvjdwg9Yl5rpt6y9ei-Y" alt=""></figure>



<p>Since January 2023, Firefox’s Speedometer score has improved by 50%, a significant performance improvement for our users.</p>



<h2><strong>Performance on the web</strong></h2>



<p>Yes, benchmarks matter, but it’s worth pointing out they only simulate what a user could experience. It was important for us to verify that the performance improvements were actually being felt by users.</p>



<p>We’ve observed improvements on performance metrics that matter. In particular, pages are appearing 15% faster on average:</p>



<figure><img decoding="async" src="https://lh7-us.googleusercontent.com/CCucpMvQ1P91Vumz-WgDN8EjbYWX9wM8agpIxsZrNFCc4P1rwU-OI1FFFYW6_q46WKQ8HGokmSn4gMF2_xImZX1suuBgz0Tpzs_lQwQtJ_oYPppavTB7DdSXdrpeXRhTHydR8U2U_bkE5jbpDZ-nUHU" alt=""></figure>



<p>It is extremely gratifying to see that the improvements in benchmark scores are actually being felt by Firefox users everywhere. If you’re interested in getting more technical details, check out our recent <a href="https://hacks.mozilla.org/2023/10/down-and-to-the-right-firefox-got-faster-for-real-users-in-2023/">blog post on Mozilla Hacks</a>.&nbsp;</p>



<p>It’s been an exciting year for the Firefox Performance team – and we’re not stopping any time soon. This is a preview of the work we’ve been doing, and we’ll be sharing more technical detailed posts in the next few weeks on <a href="https://hacks.mozilla.org/">Mozilla Hacks.</a>&nbsp;</p>



<a href="https://www.mozilla.org/en-US/firefox/new?utm_medium=mozilla-websites&amp;utm_source=blog.mozilla.org&amp;utm_content=inline-cta">
  <p><img width="512" height="512" src="https://blog.mozilla.org/wp-content/blogs.dir/278/files/2020/12/Fx-Browser-icon-fullColor-512-512x512.png" alt="" decoding="async" srcset="https://blog.mozilla.org/wp-content/blogs.dir/278/files/2020/12/Fx-Browser-icon-fullColor-512.png 512w, https://blog.mozilla.org/wp-content/blogs.dir/278/files/2020/12/Fx-Browser-icon-fullColor-512-300x300.png 300w, https://blog.mozilla.org/wp-content/blogs.dir/278/files/2020/12/Fx-Browser-icon-fullColor-512-150x150.png 150w" sizes="(max-width: 512px) 100vw, 512px">  </p>
  <div>
     <h3>Get Firefox</h3>      <p><span>Get the browser that protects what’s important</span>   </p></div>
</a>
  </div>

</article><!-- #post-73563 -->

  </main><!-- #main -->
  

<div id="related-articles">
    <h2>Related Articles</h2>
    
  </div>



</div><!-- #content -->

<!-- Newsletter -->



</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sneakers Film Promotional Floppy (106 pts)]]></title>
            <link>https://archive.org/details/Sneakers_Film_Promotional_Floppy</link>
            <guid>38585213</guid>
            <pubDate>Sat, 09 Dec 2023 19:45:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://archive.org/details/Sneakers_Film_Promotional_Floppy">https://archive.org/details/Sneakers_Film_Promotional_Floppy</a>, See on <a href="https://news.ycombinator.com/item?id=38585213">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="descript" itemprop="description"><p>Released in conjuction with the computer hacking movie "Sneakers" (1992), this floppy-based "computer press kit" contained many of the aspects of regular movie press kits, including cast bios, plots, and information on all aspects of production. It was intended for press, and as such is both "locked up" (via passwords) but also endeavored to help the same press get through the barriers as quickly as possible.&nbsp;</p><p>The balancing act between technical complexity and simplicity to ensure promotion is quite notable.&nbsp;</p><div><p>The program in question is DOS-based, and was released in 1992 as part of a package of both written and computer-based information.</p><p>This floppy is from the collection of Marcin Wichary.</p></div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Amazon Has an Honesty Issue (158 pts)]]></title>
            <link>https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html</link>
            <guid>38584230</guid>
            <pubDate>Sat, 09 Dec 2023 18:18:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html">https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html</a>, See on <a href="https://news.ycombinator.com/item?id=38584230">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>Amazon has been our retailer of first-resort for <em>years</em>: ordering on Amazon is quick, convenient and (on average) tends to have lower prices. Even our TV was originally bought via Amazon Prime.</p>
<p>Over the course of that time, there's inevitably been the odd issue with ordered items, but they were all resolved quickly and easily via the customer-service text chat (although <strong>finding</strong> that chat can be a bit of a pain).</p>
<p>Even as recently as a couple of months ago, if asked,  I'd have said that it's generally been a fairly positive experience.</p>
<p>In November, though, my opinion of Amazon changed pretty significantly. </p>
<p>We experienced an issue with a high-value item not being delivered and, since that, have been left stuck in a state of financial limbo. Despite initially accepting that there was an issue with the delivery, Amazon have not issued a refund and have even contested credit card charge-backs.</p>
<p>With the benefit of hindsight and a bit of searching online, it seems that this is something that others have been experiencing too, so I thought that it might be helpful to post about our experience (so far) as well as what I think that the underlying issues at Amazon actually are.</p>
<!-- TEASER_END -->

<hr>
<h4>Contents</h4>
<p>This has turned into quite a long post, although hopefully it's relatively easy to read through. All the same, for ease of navigation, here's a table of contents:</p>

<ul>
<li>
<a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#background">Background</a><ul>
<li><a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#background">Ordering and "delivery"</a></li>
<li><a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#raising_with_amazon">Raising with Amazon</a></li>
<li><a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#refund_is_where">Where's my refund?</a></li>
<li><a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#chargeback">Chargeback</a></li>
<li><a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#chargeback_failed">Chargeback Failed</a></li>
</ul>
</li>
<li>
<a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#analysis">Analysis</a><ul>
<li><a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#playing_dumb">Amazon Like Playing Dumb</a></li>
<li><a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#otp_make_things_standout">Advertising High*Value Packages</a></li>
<li><a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#blame_management">Management Driven?</a></li>
</ul>
</li>
<li><a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#now">Current Status</a></li>
<li><a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#the_future">The Future</a></li>
<li><a href="https://www.bentasker.co.uk/posts/blog/opinion/amazon-parcel-contents-get-stolen-and-then-amazon-tries-to-keep-payment.html#conclusion">Closing Thoughts</a></li>
</ul>
<hr>

<h3>Background</h3>
<h4>Ordering and "delivery"</h4>
<p>Before writing about the broader issues that I think Amazon have, I'll lay out the course of events:</p>
<ul>
<li>On Nov 1, I ordered an Xbox Series X bundle, along with an additional controller (and charging pack) for delivery the next day (because, you know, Amazon Prime)</li>
<li>Two sets of packages were dispatched: the Xbox in one, the rest of the stuff in another</li>
<li>Because it's a high value item, Amazon sent me an email noting that I needed to provide a one-time code to the driver on receipt</li>
<li>The <code>My Orders</code> page suggested that everything would be delivered "by" <code>14:30</code>
</li>
<li>At about <code>14:15</code> the doorbell went. I was downstairs so only took a few seconds to get to the front door, <em>just in time</em> to see a white van speeding off</li>
<li>There were several boxes (turns out my other half had also ordered some stuff), but no Xbox</li>
<li>Given I hadn't been asked for a code, I figured the Xbox was going to be delivered separately so looked in <code>My Orders</code> again: <strong>nothing</strong> showed as having been delivered and the tracking showed the driver as being 9 stops away. Weird, but maybe he was out of coverage?</li>
<li>About <code>18:30</code>, whilst I was cooking dinner, the doorbell went again</li>
<li>Stood in our (now dark) porch was a driver, with a package clearly visible next to him - he wanted a code before he'd hand the parcel over </li>
<li>I provided the code, took the package and went back inside.</li>
</ul>
<p>I initially went back to cooking dinner (because leaving food to burn on the hob isn't a great idea), but then figured I should check the Xbox before stashing it ahead of Christmas (which was <em>very</em> lucky - otherwise I wouldn't have found any of this out until weeks later).</p>
<p>When I opened the box though, I didn't find an Xbox, I found this:</p>
<p><img alt="Photo of the contents of the box: snickers chew bars, bounty chew bars, an air freshener and a box of flash detergent" src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/20231102_00_contents_of_box.jpg"></p>
<p>Clearly someone had nicked it and filled the box with crap to make up the weight!</p>
<p>Personally, I felt (and still feel) that it was probably the driver - the way that the delivery of the other parcels had occurred was just plain <strong>weird</strong>. Drivers shooting off quickly isn't all that unusual, but this was fast even by their standards and the online tracking was <em>way out</em> . </p>
<p>Looking in my inbox, the "Your package has been delivered" mails for those earlier parcels didn't arrive until <code>16:41</code>. Normally they arrive more or less immediately after delivery: Is that the result of delays in Amazon's systems, or did the driver not mark them as delivered until later to give himself cover for the time spent swapping the parcel out?</p>
<p>For those who are wondering, the driver requesting a code before handing over the parcel is consistent with the instructions that Amazon send to customers:</p>
<p><img alt="Screenshot of Amazons notification mail. The final paragraph reads: For security, the recipient of this package must provide this one-time password or last to digits of the delivery address phone number to driver in-person to receive the package. Do not communicate this password or your phone number to the driver over phone or intercom" src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/amazon_otp_mail.png"></p>
<p>Even if it occurred to the customer that they might need to, it's not possible to check the contents of the parcel first, because you <em>have to give the code to even receive it</em>.</p>
<hr>

<h4>Raising with Amazon</h4>
<p>I hopped straight into the customer service chat, expecting that - like previous experiences - this would be dealt with reasonably easily.</p>
<p>Amazon's customer service, though, really needed things spelling out for them. I got transferred 4 times, sometimes immediately after the previous transfer.</p>
<p>Eventually though, I was told that Amazon needed a couple of days to investigate before they could replace or refund the item:</p>
<p><img alt="Screenshot of chat with Amazon support. In it, I spell out to them why I think it's the driver and then they say they need to investigate which will take 24-46 hours " src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/chat_day_1.png"></p>
<p>Although I'd have liked a resolution there and then, a couple of days wasn't a huge ask. At the time, I (somewhat naively) took that as a sign that Amazon were <em>actually interested</em> in identifying and dealing with the thief.</p>
<p>Unfortunately, a few days later, I'd heard nothing more from Amazon. I checked my access logs and found that no-one had even visited the link I'd provided for the photo of the box's contents.</p>
<p>So, I hopped back onto their live-chat.</p>
<p>This time, when I mentioned the photo, I was given a customer services email to send it to. A few minutes later, after the rep had checked my mail, they came back to me in the chat to confirm that they'd initiate a return</p>
<p><img alt="Screenshot of chat with Amazon support. Having looked at my photo they say they can see that I've not received an Xbox and offer to initiate a return" src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/chat_2_1.png"></p>
<p>I did have some concern about this though - that box was my evidence - I didn't want it returned only for Amazon to say "your return didn't contain an Xbox", so I asked explicitly if that was going to be an issue</p>
<p><img alt="Screenshot of chat with Amazon support. I ask whether it's going to be an issue that there wont be an Xbox in the returned box and the adviser specifically says that it will not be a problem" src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/chat_2_2.png"></p>
<p>I didn't have much choice but to take a leap of faith and, after all, Amazon are a multi-national retailer who care about customer service and their reputation, right?</p>
<p>My one remaining concern was how long it was going to take for the refund to come through - after all Christmas was approaching and I was currently short one (very expensive) present.</p>
<p><img alt="Screenshot of chat with Amazon support. I ask how long a refund will take and am told 5-7 days upon receipt of the returned item." src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/chat_2_3.png"></p>
<p>Although a gift-card refund would be processed quicker, the timeline for refund to my card was reasonable. I didn't really want to buy the replacement from Amazon, after all, can you imagine the difficulties if the same thing happened a second time?</p>
<p>The adviser triggered the return process and I received an email with a QR code to take to the post office along with the parcel. The next morning, the parcel was on its way back to the mothership.</p>
<p>Upon dispatch, Royal mail provide a tracking code, so I can show that the package was delivered to Amazon on the 8th of November 2023.</p>
<hr>

<h4>Where's my refund?</h4>
<p>A week later, I still hadn't received a refund, so I checked <code>My Orders</code> and saw that it hadn't yet been approved (but the interface suggested that it would be in the next few days).</p>
<p>That date came and went and every time that I checked, the projected date slipped back until, eventually, the interface flipped over to claiming they hadn't received the return <em>at all</em>.</p>
<p>It's since switched back to acknowledging receipt, but providing no estimation for the refund to be issued.</p>
<p><img alt="Screenshot of Amazon's refund status view, showing the item as received, but refund not issued" src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/amazon_returns_interface.png"></p>
<p>So, <em>back into the chat</em> I went.</p>
<p>At this point I was beyond frustrated, but it isn't right to abuse support staff, so I opened by explaining that I knew that it wasn't the advisers fault personally, but that I was absolutely furious with Amazon: it was 3 weeks since their delivery chain had stolen our item and I was still without refund, leaving me facing the prospect of having to settle a credit card bill containing something that I hadn't received.</p>
<p>The adviser apologised but said that the refund needed to go through additional approvals and wouldn't be <strong>authorised</strong> until 6th December:</p>
<p><img alt="Screenshot of chat with Amazon support. CS adviser explains that because it's over 220 GBP in value it takes more than a month for the refund to be reflected on our account." src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/chat_3_1.png"></p>
<p>Worse than that, the 6th wasn't even when we'd <strong>get</strong> the refund, just when it'd be processed. They still wanted 14 days after that for issuance of the refund</p>
<p><img alt="Screenshot of chat with Amazon support. CS adviser explains that because it's over 220 GBP in value it takes more than a month for the refund to be reflected on our account." src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/chat_3_2.png"></p>
<p>So, just to put Amazon's proposed timeline into context:</p>
<ul>
<li>01 Nov: order placed</li>
<li>01 Nov: money taken</li>
<li>02 Nov: box delivered</li>
<li>02 Nov: Amazon delay things</li>
<li>06 Nov: Return initiated</li>
<li>30 Nov: Credit card statement issued/paid</li>
<li>06 Dec: Refund to be approved</li>
<li>20 Dec: Refund to be paid</li>
</ul>
<p>In fact, the date of the 20th of December is actually me being <em>being generous</em>, because the adviser said 14 <strong>business</strong> days, so, in practice, we might not even have seen a refund <strong>this year</strong>.</p>
<p>Put simply, following on from one of their staff stealing our purchase, Amazon wanted us to remain in a state of financial limbo for the better part of 2 months, spending Christmas wondering whether we'd ever see our money again.</p>
<hr>

<h4>Chargeback</h4>
<p>As much as I <em>wanted</em> to tell Amazon to GFY, I instead politely explained to the adviser that the timeline was unacceptable and that I'd be contacting my credit card provider to invoke a chargeback under <a href="https://www.financial-ombudsman.org.uk/consumers/complaints-can-help/credit-borrowing-money/goods-services-bought-credit">Section 75 of the Consumer Credit Act</a>.</p>
<p>I'd paid for the order using an American Express card, so I contacted them: Amex are fairly notorious for backing their customers, so I figured we'd be made right relatively quickly.</p>
<p>I logged into Amex's portal and found that filing a dispute is <em>really</em> simple: </p>
<ol>
<li>Find the relevant transaction </li>
<li>Click the <code>Dispute payment</code> link</li>
<li>Fill out a multiple choice form</li>
<li>Upload any evidence (I uploaded copies of my chat with Amazon etc)</li>
</ol>
<p>Once I'd submitted the dispute, Amex suspended the line item from my statement (so I <strong>wouldn't</strong> have to pay for something I hadn't received that month) and contacted Amazon to let them know the transaction had been disputed.</p>
<p>Two days later, on 23 Nov, I received an email from Amazon, with the following:</p>
<blockquote>
<p>We are writing to let you know that the credit or debit card issuing bank has raised a dispute regarding the transaction below.</p>
<p>To help us resolve this matter, please reply to this email and explain the reason for disputing this charge.</p>
<p>You will find the transaction details below.</p>
</blockquote>
<p>I'm sure they <em>could</em> have looked up my chat history if I directed them to it, but at this point I was feeling a little cynical and decided that it'd be better to lay everything out again, allowing it to later be referred back to if the need arose.</p>
<p>I sent Amazon a fairly concise email re-providing timelines as well as explaining that I'd filed a chargeback because Amazon's proposed timelines would have left me at a significant financial disadvantage over Christmas:</p>
<p><img alt="Screenshot of chat with Amazon support. CS adviser explains that because it's over 220 GBP in value it takes more than a month for the refund to be reflected on our account." src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/cb_email.png"></p>
<p>The response that I received from Amazon later that day was short and to the point:</p>
<blockquote>
<p>We received your email. We are currently working with your card issuer to resolve this dispute.</p>
<p>Card issuers usually resolve chargeback disputes within 30 days, but sometimes it can take longer. If you need more information or wish to cancel any disputes, please contact your card issuer.</p>
</blockquote>
<p>Although I was still feeling cynical, I took this to mean that Amazon would probably go back to Amex and accept the dispute <em>apart from</em> the <code>£72.25</code> that I'd authorised them to take for the controller and battery pack.</p>
<p>I heard nothing from either Amazon or Amex for nearly two weeks, but such was my trust in Amex's reputation that I felt quite comfortable popping out to a <strong>trustworthy</strong> retailer and collecting, in person, an Xbox Series X to ensure that we could give the intended present (I did, however, make that retailer open the box whilst we were still in store, just to be safe).</p>
<hr>

<h4>Chargeback Failed</h4>
<p>On the 6th of December 2023 I received a snail-mail letter from Amex, which noted that:</p>
<p><img alt="Snippet of letter from Amex: The merchant has now sent us a copy of the documentation for your reference. The merchant has provided proof of delivery" src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/amex_letter_snippet.png"></p>
<p>Amex were intending to re-apply the charge to my statement, putting me back on the hook to pay for an Xbox that I hadn't received.</p>
<p>What <strong>possible</strong> evidence could Amazon have provided in order to prove delivery of an Xbox that hadn't been in the box? </p>
<p><img alt="Snippet of letter from detailing response from Amazon. I highlighted a section which reads: The customer has successfully used this shipping address for 83 number of orders that were previously processed and weren't disputed. Please have the customer carefully review the order details." src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/amex_letter_snippet_2.png"></p>
<p>Essentially, they hadn't - they'd simply suggested that delivery to our address has always been fine before and that maybe <em>I'd</em> messed up somehow?</p>
<p>It was <strong>astonishingly</strong> clear that Amazon's chargeback department either <strong>hadn't read</strong> my reply or <strong>had decided to ignore it</strong>.</p>
<p>What <em>really</em> concerned me, though, was that American Express clearly hadn't read the provided information <em>either</em>. If they had, it would have taken them all of 3 seconds to realise that what Amazon had said was <strong>completely irrelevant</strong> to the dispute, not to mention that <strong>Amazon had accepted</strong> that there was an issue in the customer service chats.</p>
<p>I picked up the phone, called Amex customer services and <em>instructed</em> them to re-open the dispute. </p>
<p>I explained that it was obvious that they hadn't actually investigated, that Amazon's chargeback department had emailed me after the chargeback was raised and that their response to Amex wasn't consistent with either my reply or the complaint itself. As a result, I was asked to upload copies of the email chain with Amazon.</p>
<p>At this point, I was really quite annoyed, so as well as uploading copies of the Amazon emails I uploaded a file called <code>Attention_Amex.pdf</code> containing a note to them explaining my displeasure at the closing of the dispute, pointing out why Amazon's response was obviously bunk and suggesting that they pull their finger out:</p>
<p><img alt="Snippet of note I sent to amex: Please investigate this dispute *properly*. Under s75 if the consumer credit act my agreement is with you, if you are unable to resolve this, please clearly state that this is the case as my next step will be to initiate legal action." src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/amex_instruction.png"></p>
<p>Still annoyed, that night, I also emailed Jeff Bezos ('cos why not?) to ask if he was aware that his chargeback department seemed to be in the habit of misleading credit card providers.</p>
<p>Which, brings us round to today. </p>
<p>Currently, I'm still waiting to hear back from Amex on the chargeback or (if by some miracle it happens) from Bezos on having set his team straight. In the meantime, I've been preparing for the possibility of taking legal action because I am <strong>not</strong> paying for an Xbox that wasn't delivered.</p>
<hr>

<h3>Analysis: The Real Problems</h3>
<p><img alt="Modified version of the Amazon A-Z logo - I've inverted the arrow to turn the smile upside down. It looks like a sad face" src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/a-z-sad-shrunk.png"></p>
<p>Moving onto the analysis then.</p>
<p>It'd be easy to think that the biggest problem is that things are getting nicked from within Amazon's supply chain. </p>
<p>As we'll quickly explore, though, I think Amazon's problems are <strong>much more</strong> severe and run much more deeply than that.</p>
<hr>

<h4>Amazon Like Playing Dumb</h4>
<p>When I first contacted Amazon's customer support, I had to lay out in no uncertain terms that the item had clearly been nicked by someone on Amazon's side. </p>
<p>They were <em>intent</em> on treating it as a wrong-item received claim, which I didn't want:</p>
<ol>
<li>On the day, I was full of <a href="https://buckyoharetoadwars.fandom.com/wiki/Righteous_Indignation">righteous indignation</a> and ideally wanted the driver to be nailed to the nearest wall</li>
<li>I was concerned that it being treated as a wrong-item return would lead to Amazon later trying to dispute the refund (don't I feel vindicated...)</li>
</ol>
<p>In my second chat with customer services, I didn't push so hard on the "it's been nicked" front because I'd reached the point that I just <em>wanted my money back</em> and it seemed to be the path of least resistance.</p>
<p>The thing is, though, I should not have needed to explain it to Amazon's staff in the first place.</p>
<p>I'm <a href="https://www.bentasker.co.uk/posts/blog/security/playing-around-with-bings-ai-chatbot.html">no particular fan of Chat-GPT</a> but <em>even Bing's chat</em> can figure out what likely went on:</p>
<p><img alt="Screenshot of a question being provided to Bing chat. It reads: Consider this: A consumer orders a high value item from an online retailer. Because it's high value, the retailer requires the consumer to communicate a one time password to the delivery driver on delivery - the package is marked as requiring this code. After receipt and provision of the code, the consumer opens the package and finds that their high value item is not in it - it's instead full of low value items such as chocolate bars. What do you think might have happened here? " src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/bing_chat_1.png"><img alt="Screenshot of part of Bings response, reading: The consumer was a victim of an item not received scam, where the seller sent the correct item to the consumer, but the delivery driver or someone else intercepted the package and replaced the high-value item with low-value items. The delivery driver or the thief then used the one time password to confirm the delivery and avoid suspicion. " src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/bing_chat_2.png"></p>
<p>It's not like this form of theft is even particularly new to Amazon, it's even previously been covered by large publications:</p>
<ul>
<li><a href="https://www.forbes.com/sites/barrycollins/2022/07/23/amazons-one-time-passwords-backfire-on-customers/">Forbes: Amazon's one-time codes backfire on customers </a></li>
<li><a href="https://www.which.co.uk/news/article/amazon-one-time-passwords-customers-report-item-thefts-and-parcels-being-switched-ait1r3T6wfnz">Which?: Amazon one-time passwords: customers report item thefts &amp; parcels being switched</a></li>
<li><a href="https://www.which.co.uk/news/article/scamwatch-an-amazon-delivery-driver-tricked-me-and-stole-my-new-phone-a0lED0s92Efz">Scamwatch: An Amazon Delivery driver tricked me and stole my parcel</a></li>
</ul>
<p>A quick search online shows that social media is awash with customers complaining of stuff being stolen and Amazon's subsequent reluctance to issue refunds.</p>
<p>It follows, then, that Amazon <strong>cannot</strong> be unaware of the rot that exists within their own system, suggesting that they have consciously chosen to try and let customers carry the financial consequences of their corporate impotence.</p>
<p>Anecdotal reports suggest that this year is <a href="https://www.theguardian.com/money/2023/jul/08/parcel-thefts-from-uk-doorsteps-soaring-new-figures-reveal"><em>particularly bad</em> </a> for thefts of Amazon parcels, with drivers reportedly even being so bold as to photograph packages on people's doorstep before stealing them.</p>
<p>By not acting decisively to address the theft occurring within it's delivery organ, Amazon has fomented an environment where thieves believe that they can act with impunity.</p>
<p>This billionaire-owned behemoth's sloping shoulders and general ineptitude leaves their customers suffering through no fault of their own.</p>
<hr>

<h4>Advertising High-Value Packages</h4>
<p>Amazon presumably implemented one-time passwords out of concern that high value items were going missing (and, presumably, to address some incidence of consumer fraud).</p>
<p>The problem is, those packages are now <strong>clearly marked</strong> as being of value - the need for a OTP screams to <em>everyone</em> in the delivery chain that "this" might be worth nicking.</p>
<p>That could never end well in an environment where taking packages is seemingly almost risk free for logistics staff.</p>
<p>I wouldn't be surprised, at all, if the introduction of OTP coincided with an <strong>increase</strong> in overall theft. </p>
<p>I'm sure that Amazon will have statistics, but given their apparent reluctance to record occurrences of theft as such, I suspect that their numbers don't accurately reflect reality. Even if they do, there's still the risk that some level of management is focused only on one metric (a reduction in recorded incidences of consumer fraud) to the exclusion of all else.</p>
<hr>

<h4>Management Driven?</h4>
<p>It's not unusual, when dealing with a company, to find that your experience differs a bit based on the customer service agent that you get - people in front-line roles tend to each have their own approach to exploring and resolving issues (those differences are what tends to make people good at their jobs).</p>
<p>Reading about other's experiences with Amazon online, it's quite clear that Amazon would <strong>like</strong> us to believe that it's the customer service agents who are at fault. News stories often note that, when challenged by the media, Amazon explain that</p>
<blockquote>
<p>a customer service agent had misinformed you and has received further training.</p>
</blockquote>
<p>However, I don't believe that this is likely to truly be the case:</p>
<ol>
<li>My own interactions with their customer service teams <strong>do not support</strong> this contention: the staff did not come across as obstructive in the least and a return <strong>was</strong> even arranged - the holdup came when the refund had to be sent for approval.</li>
<li>Amazon's chargeback department clearly <strong>have</strong> been, at best, obstructive. It seems unlikely that chargebacks are handled by frontline customer-service staff, being more of a finance function.</li>
<li>It's abundantly clear from reports online that this issue is quite widespread. If a large number of customer service agents <strong>are</strong>, in fact, misinformed this would suggest that there's an issue with Amazon's training and/or internal policies - ergo, there's a <em>systemic issue</em> that Amazon is failing to address and is choosing to scapegoat agents instead (something that would be entirely consistent with our understanding of <a href="https://www.theguardian.com/technology/2021/mar/25/amazon-delivery-workers-bathrooms-memo">their attitude to employees</a>).</li>
</ol>
<p>Personally, I consider it far more likely that <em>someone</em> within Amazon's management chain is trying to achieve an arbitrary set of figures or targets. They're pushing for this, at all costs, with the result that customer welfare and <strong>what's right</strong> isn't considered <em>at all</em>. </p>
<p>Putting it bluntly, I'm not sure whether Amazon have considered a move into agriculture, but I'd say they're quite adept at shovelling a <em>certain something</em>.</p>
<hr>

<h3>The Current Situation</h3>
<p>At time of writing, my case is still unresolved - sooner or later I'll get a letter from American Express detailing their conclusions and will have to take it from there.</p>
<p>About the time that I emailed Bezos (who, obviously, was busy with <a href="https://www.youtube.com/watch?v=FpdHtGr2_KI">more important things</a>), I realised that I'd started using the word "contempt" in relation to the way that Amazon had been treating us. </p>
<p>It turns out that I'm not alone and the word "contempt" turns up elsewhere: <a href="https://www.theguardian.com/money/2023/nov/14/amazon-shows-contempt-for-uk-law-over-parcel-thefts">Amazon shows ‘contempt’ for UK law over parcel thefts</a>. </p>
<p>Now, Amazon <em>haven't</em> asked me for a crime number and if they did, I'd argue that it's not actually on <strong>me</strong> to acquire one in the first place: the Xbox was not stolen <em>from me</em>, it was stolen <em>from Amazon</em>. The criminal action was against the retailer and my dispute is <strong>entirely</strong> civil: Amazon have not fulfilled their side of the contract by delivering the Xbox that I paid for.</p>
<p>I am <strong>extremely</strong> privileged in that I'm not relying on that money for food and heat.</p>
<p>That doesn't make Amazon's behaviour any less contemptible though: I <em>could</em> equally well be a single-parent who'd saved all year for a special present and was now facing the choice of a present-less Christmas, or having to sacrifice something else to free up money to purchase a replacement Xbox. </p>
<p>The fact that Amazon could equally be doing, or do, the same to someone who <em>is</em> in that position was a big motivator in writing this post.</p>
<p>Whilst I am <strong>very</strong> fortunate not to be in that position, it doesn't make me immune from stress and certainly doesn't make me any less annoyed.</p>
<p><img alt="Gif of the Friends scene where Ross says I'm indignant, as a consumer! whilst holding a pack of rubbers" src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/indignant.gif"></p>
<p>The pack of johnnies that Ross is holding are a little more pertinent than you might think: I've never been afraid to <a href="https://www.bentasker.co.uk/images/benscomputer_no-ip_org_Archive/blog/Tiscali.php.html">stand on principle</a> and, given the opportunity, I'd be <em>more</em> than happy to f..k Amazon's day up as much as possible.</p>
<p>Unfortunately, however, that's not <em>quite</em> how all of this works.</p>
<p>I made the purchase with a credit card and, as a result, the law holds that my contract is with American Express and <em>not</em> Amazon. It's American Express who have the legal duty to make me whole.</p>
<p>So, if this <em>does</em> get to the point that I need to start legal action (and, I absolutely will), Amex are the unfortunate middle-man who will end up taking Amazon's well-deserved breach-of-contract kicking.</p>
<p>Of course, at time of writing, American Express aren't <em>entirely</em> without fault themselves.</p>
<p>I'm <strong>hugely</strong> disappointed at their handling of the chargeback so far: They were <em>supposed</em> to be one of the <strong>good</strong> credit-card providers but, presumably, have made cutbacks, with levels of customer service suffering as a result.</p>
<hr>

<h4>The Future</h4>
<p>I don't know exactly what the future holds for this case, other than that I've every intention of fighting harder than a honey-badger with a sore-head.</p>
<p>Beyond that though, the rules of the future are relatively straightforward</p>
<ul>
<li>Never buy anything of any meaningful value (if anything at all) from Amazon <em>ever again</em>
</li>
<li>Assume that Amazon absolutely do not act in good faith, do not give them the benefit of any trust</li>
<li>If something does turn up needing an OTP, refuse the delivery and repurchase elsewhere</li>
</ul>
<p>If we reach the point of legal action, I suspect that I'll also need to look for a new credit card provider - I can't imagine that Amex won't respond by disinviting me from using their services.</p>
<hr>

<h4>Closing Thoughts</h4>
<p>Amazon's handling of the case aggrieves me far more than the initial theft does. In a supply chain the size of Amazon it's inevitable that there are sometimes going to be some bad apples. As with <em>all things customer facing</em>, the bit that matters is not the initial incident so much as how you respond to it. Clearly, Amazon have <em>utterly failed</em> in that respect.</p>
<p>Until the response to the chargeback came through, I was quite willing to give Amazon the benefit of Hanlon's Razor (Never attribute to malice that which is adequately explained by stupidity). However, with the response that they sent to Amex, it became hard not to conclude that any signs of ineptitude are not, in fact, deliberate.</p>
<p>I'm disappointed in Amex's initial handling of the chargeback, but if I were being generous, I'd say that a significant part of the problem is their web portal over-simplifying the process. It's <em>very easy</em> to file a chargeback, but it's all done with multiple choice answers: there is no means to provide context or detail other than uploading files of evidence.</p>
<p>I <em>suspect</em> that what's happened, is that Amex have seen the "Item not received" selection in the multiple choice and followed a script without reviewing any of the rest of the dispute.</p>
<p>It doesn't excuse it, but if the root of it is bad UI, then there is hope that Amex could fix things for future customers.</p>
<p>Casual readers of my site may have noticed, by now, that I've gone to some lengths to avoid my usual... uh... application of language in this post: I wanted to make sure that the post could get past corporate web filters, hopefully one day even being seen within Amazon itself.</p>
<p><a name="are_you_an_amazon_senior_manager"></a>
However, it would be remiss of me not to also honestly communicate my current feelings towards the relevant levels of Amazon's management, which I shall do via the medium of meme:</p>
<p><img alt="Meme of a raised middle finger. Can't fully repeat the words because filters but it says, go blank yourself, then do it twice more" src="https://www.bentasker.co.uk/images/BlogItems/amazons_theft_issue/to_amazon.jpg"></p>
<p>I'd also suggest turning it sideways and repeating.</p>
<p>As a closing note, if you do find that you are affected by similar then please, please, try not to take it out on the front-line staff: it's not their fault that they work for a shower of morally corrupt nobs.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Doug Engelbart’s 1968 demo (225 pts)]]></title>
            <link>https://dougengelbart.org/content/view/209/</link>
            <guid>38583881</guid>
            <pubDate>Sat, 09 Dec 2023 17:45:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dougengelbart.org/content/view/209/">https://dougengelbart.org/content/view/209/</a>, See on <a href="https://news.ycombinator.com/item?id=38583881">Hacker News</a></p>
Couldn't get https://dougengelbart.org/content/view/209/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Backdoor found in secure TETRA radios (185 pts)]]></title>
            <link>https://www.cryptomuseum.com/radio/tetra/burst.htm</link>
            <guid>38583489</guid>
            <pubDate>Sat, 09 Dec 2023 17:02:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cryptomuseum.com/radio/tetra/burst.htm">https://www.cryptomuseum.com/radio/tetra/burst.htm</a>, See on <a href="https://news.ycombinator.com/item?id=38583489">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td>
<a href="https://www.cryptomuseum.com/radio/tetra/index.htm"><p>TETRA</p></a>&nbsp;&nbsp;<a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm"><p>TEA1 →</p></a><a href="https://www.cryptomuseum.com/crypto/algo/taa"><p>TAA →</p></a>&nbsp;&nbsp;        
        <p><span color="#F52E00">9 August 2023 —</span>
We are now able to share the reverse-engineered <a href="#pub"><span data-balloon-pos="up" aria-label="Jump to: C-source code">C-source code</span></a> of
the <span aria-label="TETRA Authentication Algorithm" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/taa">TAA1</a></span>, <span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span>, <span aria-label="TETRA Encryption Algorithm 2" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/2.htm">TEA2</a></span> and <span aria-label="TETRA Encryption Algorithm 3" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/3.htm">TEA3</a></span> algorithms. This clearly shows
the weakness in <span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span>. Also published is a paper on TETRA:BURST,
written by the Midnight Blue researchers Carlo Meijer, Wouter Bokslag
and Jos Wetzels.
<span color="#E7E">➤</span>&nbsp;<a href="#pub">More</a>
        </p>
        
        
        <p>
          <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
<b>Vulnerabilities in TETRA radio networks</b>
<p>

On 24 July 2023, researchers of the Dutch security firm
<a href="https://www.cryptomuseum.com/manuf/midnightblue"><span data-balloon-pos="up" aria-label="More about: Midnight Blue">Midnight Blue</span></a> revealed
that they had found five vulnerabilities in the authentication and
encryption algorithms of the <span aria-label="Terrestrial Trunked Radio" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/radio/tetra/index.htm">TETRA</a></span> radio network, which is used in
the critical infrastructure of more than 100 countries.
Two of the vulnerabilities are deemed critical. One of them
appears to be an intentional <i><span aria-label="deliberate weaking of a cipher system with the aim to provide covert access" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/intel/nsa/backdoor.htm">backdoor</a></span></i> <a href="#ref_1">[1]</a>.
</p><table><tbody><tr><td>
            <p><img src="https://www.cryptomuseum.com/radio/tetra/svg/tetraburst.svg">
            </p>
            </td></tr><tr><td>
          </td></tr></tbody></table>
<br>
The vulnerabilities were discovered during the course of 2020, and were
reported to the <span aria-label="National Cyber Security Centre (Netherlands)" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/intel/index.htm#ncsc">NCSC</a></span> in the Netherlands in December of that year. It was
decided to hold off public disclosure until July 2023, to give emergency
services and equipment suppliers the ability to patch the equipment.
</span>
          </p>
<br>        
        <p>
          <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
Several algorithm suites and cryptographic primitives are used at the
core of the TETRA protocol, in particular <span aria-label="TETRA Authentication Algorithm" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/taa">TAA</a></span> for authentication,
and <span aria-label="TETRA Encryption Algorithm" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea">TEA</a></span> for encryption.
As these algorithms are secret, they have never been
publicly disclosed and, hence, have never been subjected to in-depth
public scrutiny. In order to find any vulnerabilities in the
code, the researchers therefore first had to <i>reverse-engineer</i> the
<span aria-label="TETRA Authentication Algorithm" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/taa">TAA</a></span> and <span aria-label="TETRA Encryption Algorithm" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea">TEA</a></span> algorithms, which appeared to be not trivial at all.
<p>

The reverse-engineering project — codenamed RE:TETRA — was started
on 1 January 2020, with funding from the non-profit
<a href="https://nlnet.nl/" target="_blank"><span data-balloon-pos="up" aria-label="nlnet.nl (off-site)">NLnet foundation</span></a>, as part of the latter's
European Commission supported <a href="https://nlnet.nl/PET/" target="_blank"><span data-balloon-pos="up" aria-label="nlnet.nl (off-site)">NGI0 PET fund</span></a>.
Once the reverse-engineering was completed, the researchers were
able to isolate and analyse the cryptographic functions.
</p></span>
          </p>
<br>        <a name="platform"></a>
        
        <p>
          <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
For reverse-engineering, a <span color="#F52E00">Motorola MTM-5400</span>
commercial off-the-shelf (<span data-balloon-pos="up" aria-label="Commercial Off-The-Shelf">COTS</span>) mobile radio was used,
along with associated firmware upgrades obtained through
amateur radio forums. Reading the contents of a firmware upgrade
is not trivial though, as it is heavily encrypted and relies
on a Trusted Execution Environment (<span data-balloon-pos="up" aria-label="Trusted Execution Environment">TEE</span>), embedded in
the core processor of the radio.
          </span>
          </p>
<br>        <table>
          <tbody><tr>
          <td>
          <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
The MTM-5000 series is built around a Texas Instruments
OMAP-L138 System on Chip (<span data-balloon-pos="up" aria-label="System on Chip">SoC</span>), which contains an
<span data-balloon-pos="up" aria-label="Advanced RISC Machines">ARM</span> core and <span data-balloon-pos="up" aria-label="Texas Instruments">TI</span> C6748 <span data-balloon-pos="up" aria-label="Digital Signal Processor">DSP</span>.
It offers secure boot by means of <span data-balloon-pos="up" aria-label="Trusted Execution Environment">TEE</span>,
as a result of which confidential code can be loaded
and executed without revealing its implementation.
This is how the <span aria-label="Terrestrial Trunked Radio" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/radio/tetra/index.htm">TETRA</a></span> algorithms are protected.
<p>

In order to execute arbitrary code on the <span data-balloon-pos="up" aria-label="Advanced RISC Machines">ARM</span> core,
the researchers first had to exploit another series of
known vulnerabilities, using a serial AT command interface
as the attack surface and performing a cache-timing side
channel attack.
          </p></span></td>
          <td>&nbsp;&nbsp;</td>
          <td>
          <table><tbody><tr><td>
<a href="https://www.cryptomuseum.com/radio/tetra/img/motorola_mtm5400.jpg">            <p><img src="https://www.cryptomuseum.com/radio/tetra/img/motorola_mtm5400_small.jpg" alt="Click to see more" width="298" height="199">
            </p>
            </a>
            </td></tr><tr><td>
          </td></tr></tbody></table>
          </td></tr>
        </tbody></table>
<br>        <p>
          <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
With the <span data-balloon-pos="up" aria-label="Advanced RISC Machines">ARM</span> core and the <span data-balloon-pos="up" aria-label="Digital Signal Processor">DSP</span> now firmly under control of the attackers,
the MBM-5000 series can be used as a development platform for researchers,
allowing in-depth security research into <span aria-label="Terrestrial Trunked Radio" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/radio/tetra/index.htm">TETRA</a></span>, which will hopefully
improve overall <span aria-label="Terrestrial Trunked Radio" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/radio/tetra/index.htm">TETRA</a></span> security.
The <a href="https://www.cryptomuseum.com/manuf/midnightblue"><span data-balloon-pos="up" aria-label="More about: Midnight Blue">Midnight Blue</span></a> researchers have announced
that they will publicly release the tools for unpacking Motorola
firmware upgrade packages, as well as utilities for instrumenting, debugging,
monitoring and packet injection.
</span>
          </p>
<br>        
        <p>
          <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
Once the software had been reverse-engineered, the researchers were
able to do in-depth security research with the aim to find vulnerabilities
and ultimately mount an attack. Over the course of one year,
the following vulnerabilities were discovered:
          </span>
          </p>
<br>        <p>
          <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
          <ol>
            <li><a href="#flaw1">Dependence on network time</a><br>
The Air Interface Encryption (<span data-balloon-pos="up" aria-label="Air Interface Encryption">AIE</span>) keystream relies on network time,
which is publicly broadcast in an unauthenticated manner. This allows
for <i>decryption oracle attacks</i> and may lead to loss of
confidentiality and authenticity. This vulnerability is deemed critical.
<br>
            <div>
<p><b>CVE-2022-24401 ·</b>
This problem can be fixed by installing a firmware upgrade.
</p><p>★★★★★</p>
            </div>
            </li><li><a href="#flaw2">Backdoor in TEA1</a><br>
The TEA1 algorithm has a <i><span aria-label="deliberate weaking of a cipher system with the aim to provide covert access" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/intel/nsa/backdoor.htm">backdoor</a></span></i> that reduces the original
80-bit key to a size which is trivially brute-forceable on consumer
hardware in minutes. This is a critical flaw that leads to loss of
confidentiality and authenticity. The researchers believe that this
is a deliberately created weakness to provide intelligence services
access to the traffic.
<br>
            <div>
<p><b>CVE-2022-24402 ·</b>
This problem can be fixed by using <span data-balloon-pos="up" aria-label="end-to-end encryption">E2EE</span> on top of TEA1.
</p><p>★★★★★</p>
            </div>
            </li><li><span color="#F52E00">Lack of ciphertext authentication</span><br>
The lack of ciphertext authentication of <span data-balloon-pos="up" aria-label="Air Interface Encryption">AIE</span> allows for
malleability attacks. This may eventually lead to loss of authenticity.
<br>
            <div>
<p><b>CVE-2022-24404 ·</b>
This problem can be fixed by installing a firmware upgrade.
</p><p>★★★★</p>
            </div>
            </li><li><span color="#F52E00">Weak anonymisation</span><br>
The cryptographic scheme used to obfuscate radio identities, has a weak
design that allows attackers to deanonymize and track users.
<br>
            <div>
<p><b>CVE-2022-24403 ·</b>
This problem can be fixed by using <span data-balloon-pos="up" aria-label="end-to-end encryption">E2EE</span> on top of TEA1.
</p><p>★★★</p>
            </div>
            </li><li><span color="#F52E00">DCK can be set to 0</span><br>
A flaw in the authentication algorithm allows attackers to set the
Derived Cipher Key (<span data-balloon-pos="up" aria-label="Derived Cipher Key">DCK</span>) to 0.
This may lead to loss of authenticity and partial loss of confidentially.
<br>
            <div>
<p><b>CVE-2022-24400 ·</b>
This problem can be fixed by migrating to TAA2 (long-term).
</p><p>★</p>
            </div>
          </li></ol>
        </span></p>
        <a name="etsi"></a>
        
        <p>
          <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
The <span aria-label="Terrestrial Trunked Radio" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/radio/tetra/index.htm">TETRA</a></span> encryption algorithms were implemented in 1996 and 1997 by
or on behalf of the
<a href="https://www.cryptomuseum.com/org/etsi/index.htm#sage"><span data-balloon-pos="up" aria-label="More about: Security Experts Group">Security Experts Group</span></a> of the
<a href="https://www.cryptomuseum.com/org/etsi/index.htm"><span data-balloon-pos="up" aria-label="More about: European Telecommunications ...">European Telecommunications Standards Insitute</span></a>
(<span aria-label="ETSI Security Algorithms Group of Experts" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/org/etsi/index.htm#sage">ETSI-SAGE</a></span>).
It is ETSI's policy not to disclose their cryptographic algorithms
and not to submit them to public in-depth security research,
other than validation by the other <span aria-label="ETSI Security Algorithms Group of Experts" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/org/etsi/index.htm#sage">ETSI-SAGE</a></span> members, claiming that
<i>obscurity</i> is also a form of <i>security</i> <a href="#ref_7">[7]</a>. Researchers
often see this as a violation of <i>Kerckhoffs's Principle</i> however <a href="#ref_5">[5]</a>,
which in the long run can potentially lead to weak exploitable systems.
<p>

On the day of the TETRA:BURST disclosures,
<span aria-label="European Telecommunications Standards Institute" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/org/etsi/index.htm">ETSI</a></span> issued a press statement in which the findings of the
researchers were largely downplayed, claiming that improvements
were already underway and that no actual exploitations of operational
networks were known at the time <a href="#ref_6">[6]</a>.
</p><p>

The Midnight Blue researchers have since demonstrated real-life
exploitations of some of the vulnerabilities, for example at the
2023 Blackhat Conference in Las Vegas (USA). They have shown that
<span aria-label="Terrestrial Trunked Radio" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/radio/tetra/index.htm">TETRA</a></span> communications secured with the <span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span> encryption algorithm
can be broken in one minute on a regular commercial laptop and in 12 hours
on a classic laptop from 1998 <a href="#pub_3">[III]</a>.
</p></span>
          </p>
<br>        
        
<br>        <a name="demo"></a>
        
        <a name="flaw1"></a>
        
        
<br>        <table>
          <tbody><tr>
          <td>
          <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
In the video below, the first critical vulnerability (CVE-2022-24401) is
demonstrated. It shows a <i>decryption oracle attack</i> that is based on the
fact that the Air Interface Encryption (<span data-balloon-pos="up" aria-label="Air Interface Encryption">AIE</span>) keystream relies on network time,
which is publicly broad­cast in an unauthenticated manner. The video shows a
lab setup in which an instrumented base station is used as an attacker platform.
<br>
          </span></td>
          <td>&nbsp;&nbsp;</td>
          <td>
          <div>
          <iframe width="298" height="200" src="https://www.youtube.com/embed/oJjTiO6C9xs" frameborder="0" allowfullscreen=""></iframe>
        </div>
        </td></tr>
      </tbody></table>
<br>      
<br>      <a name="flaw2"></a>
      
      
<br>      <table>
        <tbody><tr>
        <td>
        <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
Midnight Blue researchers discovered a <i><span aria-label="deliberate weaking of a cipher system with the aim to provide covert access" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/intel/nsa/backdoor.htm">backdoor</a></span></i> in the <span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span>
encryption algorithm, which had clearly been added deliberately, probably
to give inteligence services access to the system.
In the video below, the <span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span> backdoor is demonstrated on a real network.
After breaking the initial key — one minute on a regular laptop —
the rest of the traffic can be read without any problems.
<br>
        </span></td>
        <td>&nbsp;&nbsp;</td>
        <td>
        <div>
        <iframe width="298" height="200" src="https://www.youtube.com/embed/-m9UTJLt4uw" frameborder="0" allowfullscreen=""></iframe>
      </div>
      </td></tr>
    </tbody></table>
<br>    
<br>    
    
<br>    <table>
      <tbody><tr>
      <td>
      <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
After the TETRA:BURST vulnerabilities were dis­closed on 24 July 2023,
the European standards body <span aria-label="European Telecommunications Standards Institute" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/org/etsi/index.htm">ETSI</a></span> downplayed the
discoveries, saying that the short <span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span> key is not a real <span aria-label="deliberate weaking of a cipher system with the aim to provide covert access" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/intel/nsa/backdoor.htm">backdoor</a></span>,
and that a key length of 32 bits was appropriate when the standard was
issued in the late 1990s.
<p>

To bust these claims, the researchers have run their <span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span> cracking
tool on an old 1998 Toshiba laptop, running Microsoft Windows 95
on a Pentium II at 266 MHz. The key was found after 12.5 hours,
which demonstrates that even in the late 1990s an attack would
have been realistic.
</p></span></td>
      <td>&nbsp;&nbsp;</td>
      <td>
      <div>
      <iframe width="298" height="200" src="https://www.youtube.com/embed/u2pbCu7zDrA" frameborder="0" allowfullscreen=""></iframe>
    </div>
    </td></tr>
  </tbody></table>
<br>  
<br>  
  
<br>  <a name="tea"></a>
  
  <p>
    <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
<span aria-label="TETRA Encryption Algorithm" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea">TEA</a></span> is a set of encryption algorithms that can be used for
Air Interface Encryption (<span data-balloon-pos="up" aria-label="Air Interface Encryption">AIE</span>) in the <span aria-label="Terrestrial Trunked Radio" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/radio/tetra/index.htm">TETRA</a></span> communications system.
It consists of four variants (<span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span>, <span aria-label="TETRA Encryption Algorithm 2" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/2.htm">TEA2</a></span>, <span aria-label="TETRA Encryption Algorithm 3" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/3.htm">TEA3</a></span> and <span aria-label="TETRA Encryption Algorithm 4" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/4.htm">TEA4</a></span>), with
differing levels of security, depending on the application. The algorithms
are simple yet strong, and can easily be implemented in both hard- and
software. All <span aria-label="TETRA Encryption Algorithm" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea">TEA</a></span> variants use an 80-bit key.
<p>

The structure of the <span aria-label="TETRA Authentication Algorithm" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/taa">TAA</a></span> and <span aria-label="TETRA Encryption Algorithm" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea">TEA</a></span> algorithms, including the
HURDLE block cipher used in <span aria-label="TETRA Authentication Algorithm" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/taa">TAA</a></span>, is described in detail in a paper
by Carlo Meijer, Wouter Bokslag and Jos Wetzels — all
involved in the TETRA:BURST vulnerability research at
<a href="https://www.cryptomuseum.com/manuf/midnightblue"><span data-balloon-pos="up" aria-label="More about: Midnight Blue">Midnight Blue</span></a> <a href="#pub_1">[I]</a>.
</p><span color="#E7E">➤</span>&nbsp;<a href="https://www.cryptomuseum.com/radio/tetra/files/tetra_paper.pdf">Read the paper</a>
<br><span color="#E7E">➤</span>&nbsp;<a href="https://www.cryptomuseum.com/radio/tetra/files/tetracrypto.zip">Reverse-engineered source code</a>
<br><span color="#E7E">➤</span>&nbsp;<a href="https://www.cryptomuseum.com/crypto/algo/tea">Overview of TEA algorithms</a>
</span>
    </p>
<br>  <a name="tea1"></a>
  
  <p>
    <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
The <span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span> algorithm was intended for commercial applications and
restricted export.
Its structure is very similar to <a href="#tea2"><span data-balloon-pos="up" aria-label="Jump to: TEA2">TEA2</span></a>,
but the 80-bit key is manipulated in such a way that it becomes
a 32-bit key, which can be broken with a brute-force attack
on a regular commercial laptop in around one minute.
The source code snippet below shows how the key length is reduced.
    </span>
    </p>
<br>  <div>
    <pre>     int32_t tea1_init_key_register(const uint8_t *lpKey) {
         int32_t dwResult = 0;
         for (int i = 0; i &lt; 10; i++) {
             dwResult = (dwResult &lt;&lt; 8) |
             g_abTea1Sbox[((dwResult &gt;&gt; 24) ^ lpKey[i] ^ dwResult) &amp; 0xff];
         }
         return dwResult;
     }
     
    </pre>
</div>
<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
The key consists of 80 bits, which is equal to 10 bytes.
In the above code, the 10 bytes are processed one at a time, and then shifted
into the result (<p>dwResult</p>) register. However, as the <p>dwResult</p>
register is only 32 bits wide, the first 48 bits are shifted out
and the key consists of the last 32 bits only, which is trivially
short for a brute-force attack.
<p>

Although the short key length can be seen as a <i><span aria-label="deliberate weaking of a cipher system with the aim to provide covert access" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/intel/nsa/backdoor.htm">backdoor</a></span></i>
— it is a deliberate weakening —
this is disputed by the original developer, as it was done in plain
sight and not hidden in some complex code, function or table <a href="#ref_3">[3]</a>.
The short key length was simply an <span aria-label="European Telecommunications Standards Institute" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/org/etsi/index.htm">ETSI</a></span> requirement.
Any company that had to implement the algorithm in its equipment,
had access to the design specification and must have been aware
of the limitation <a href="#ref_3">[3]</a>.
This is corroborated by Gert Roelofsen in an interview with
De Volkskrant on 29 July 2023, in which he states that the government
had been aware of it for the past 30 years <a href="#ref_2">[2]</a>. At the time, Roelofsen
was on the <span aria-label="European Telecommunications Standards Institute" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/org/etsi/index.htm">ETSI</a></span> experts team on behalf of <span aria-label="Koninklijke PTT Nederland" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/manuf/ptt">KPN</a></span>.
</p><span color="#E7E">➤</span>&nbsp;<a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">More about TEA1</a>
</span>
  </p>
<br><a name="tea2"></a>

<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
<span aria-label="TETRA Encryption Algorithm 2" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/2.htm">TEA2</a></span> was developed for European emergency services, and is arguably
the strongest of the four algorithms. It uses the full 80-bit key
length. If we assume that a 32-bit key can be broken in one
minute – as with <a href="#tea1"><span data-balloon-pos="up" aria-label="Jump to: TEA1">TEA1</span></a> above – we can calculate how long it would take
to brute-force an 80-bit key. As each bit doubles the required time,
the total time needed is:
<center>
60 × 2<sup>48</sup> [sec] ≈ <b>535 milion years</b>
</center>
  </span>
  </p>
<br><p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
If there is no known way to break the cipher other than by means of
a brute-force attack, this algorithm can be assumed secure.
<span color="#E7E">➤</span>&nbsp;<a href="https://www.cryptomuseum.com/crypto/algo/tea/2.htm">More about TEA2</a>
</span>
  </p>
<br><a name="tea3"></a>

<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
<span aria-label="TETRA Encryption Algorithm 3" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/3.htm">TEA3</a></span> is intended for emergency services outside Europe.
It is similar to <span aria-label="TETRA Encryption Algorithm 2" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/2.htm">TEA2</a></span> and does not have the weakness of
<span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span> (i.e. the reduced key length). Although it is likely that
<span aria-label="TETRA Encryption Algorithm 3" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/3.htm">TEA3</a></span> is stronger than <span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span> and <span aria-label="TETRA Encryption Algorithm 4" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/4.htm">TEA4</a></span>, it is also likely
that it is weaker than <span aria-label="TETRA Encryption Algorithm 2" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/2.htm">TEA2</a></span>. So far, the researchers have not found
any weaknesses in this cipher, but acknowledge the need for further
research.
<span color="#E7E">➤</span>&nbsp;<a href="https://www.cryptomuseum.com/crypto/algo/tea/3.htm">More about TEA3</a>
</span>
  </p>
<br><a name="tea4"></a>

<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
The <span aria-label="TETRA Encryption Algorithm 4" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/4.htm">TEA4</a></span> algorithm is intended for commercial use and restricted
access, just like <span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span>, which suggests that it also has a
built-in weakness. However, as no implementation of this
cipher was available on the Motorola target MTM-5400 platform,
the researchers were unable to review the algorithm.
It seems likely though, that it has similar weaknesses to <span aria-label="TETRA Encryption Algorithm 1" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/crypto/algo/tea/1.htm">TEA1</a></span>.
<span color="#E7E">➤</span>&nbsp;<a href="https://www.cryptomuseum.com/crypto/algo/tea/4.htm">More about TEA4</a>
</span>
  </p>
<br>
<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
Although there is no direct proof of actual exploitation of a <span aria-label="Terrestrial Trunked Radio" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/radio/tetra/index.htm">TETRA</a></span>
network, it seems likely that malicious parties are interested in reading
or interfering with <span aria-label="Terrestrial Trunked Radio" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/radio/tetra/index.htm">TETRA</a></span> traffic. The simple fact that no exploitations
are known <a href="#ref_6">[6]</a>, does not mean that they do not exist.
The TETRA:BURST
project shows that reverse-engineering of the cryptographic primitives
is feasible with limited resources.
<p>

A weakness like the reduced key
length of <a href="#tea1"><span data-balloon-pos="up" aria-label="Jump to: TEA1">TEA1</span></a> is so obvious that it will certainly have been
noticed and exploited. Apart from the possibility of reverse-engineering,
an adversary would not be hampered by legal restrictions,
and might use leaked or stolen documentation instead.
</p></span>
  </p>
<br>
<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
Below is a timeline of events since the start of the reverse-engineering
project RE:TETRA on 1 January 2021 and the first public disclosure on 24 July
2023. The Dutch <span aria-label="National Cyber Security Centre (Netherlands)" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/intel/index.htm#ncsc">NCSC</a></span> (<span aria-label="National Cyber Security Centre (Netherlands)" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/intel/index.htm#ncsc">NCSC-NL</a></span>) was informed in December 2021, after which
meetings were held with the law enforcement and intelligence communities,
as well as with <span aria-label="European Telecommunications Standards Institute" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/org/etsi/index.htm">ETSI</a></span> and the vendors. Shortly afterwards, on 2 February 2022,
preliminary advice was distributed to the various stakeholders and <span data-balloon-pos="up" aria-label="Computer Emergency Respnse Team">CERT</span>s.
The remainder of 2022 and the first half of 2023 were used for coordination
and advisory sessions with stake­holders, allowing manufacturers to come
up with firmware patches, updates or workarounds.
<table><tbody><tr><td>
    <p><img src="https://www.cryptomuseum.com/radio/tetra/svg/tetraburst_timeline.svg">
    </p>
    </td></tr><tr><td>
  </td></tr></tbody></table>
<br>
The time between the first contact with <span aria-label="National Cyber Security Centre (Netherlands)" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/intel/index.htm#ncsc">NCSC-NL</a></span> and the public disclosure
of the vulnerabilities, is a carefully chosen tradeoff between giving
asset owners as much time as possible and the right of the public to know.
The 1.5+ years inbetween were used to find as many stakeholders as
possible and inform/advice them, so that software updates and mitigations
could be devoloped.
</span>
  </p>
<br><a name="events"></a>

<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
The Midnight Blue researchers will present their finding at the following
events and conferences:
  </span>
  </p>
<br><p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
  <ul>
    <li><a href="https://www.blackhat.com/us-23/" target="_blank"><p><s>2023 Aug 9</s></p><s>Blackhat 2023, Las Vegas (USA)</s></a>    </li><li><a href="https://www.usenix.org/conference/usenixsecurity23" target="_blank"><p><s>2023 Aug 11</s></p><s>Usenix Security, Anaheim (Germany)</s></a>    </li><li><a href="https://defcon.org/html/defcon-31/dc-31-index.html" target="_blank"><p><s>2023 Aug 13</s></p><s>DEF CON, Las Vegas (USA)</s></a>    </li><li><a href="https://events.ccc.de/camp/2023/infos/" target="_blank"><p><s>2023 Aug 15-19</s></p><s>CCC summer camp, Berlin (Germany)</s></a>    </li><li><a href="https://one-conference.nl/" target="_blank"><p>2023 Oct 3</p>ONE conference, The Hague (Netherlands)</a>    </li><li><a href="https://insightevents.dk/isc-cph/program/" target="_blank"><p>2023 Nov 14</p>ISC, Copenhagen (Denmark)</a>  </li></ul>
</span></p><a name="pub"></a>

<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
  <ol type="I">
    <a name="pub_1"></a>
    <li><a href="https://www.cryptomuseum.com/radio/tetra/files/tetra_paper.pdf">Carlo Meijer, Wouter Bokslag and Jos Wetzels,<br><i>All cops are broadcasting: TETRA under scrutiny</i></a><br>
Paper submitted to Crypto Museum. 9 August 2023.
    </li><li><a href="https://www.cryptomuseum.com/radio/tetra/files/tetracrypto.zip">Full source code of TAA1, TEA1, TEA2 and TEA3 algorithms in C</a><br>
Reverse-engineered and used for analysis and real life tests.<br>
Midnight Blue, 9 August 2023.
    </li><li><a href="https://www.cryptomuseum.com/radio/tetra/files/tetra_pres_20230809.pdf"><i>All Cops Are Broadcasting, Breaking TETRA after decades in the shadows</i></a><br>
Presentation by Jos Wetzels, Carlo Meijer and Wouter Bokslag at Black Hat 2023.<br>
Midnight Blue, 9 August 2023
  </li></ol>
</span></p>

<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
  <ul>
    <li><a href="https://github.com/MidnightBlueLabs/TETRA_burst" target="_blank">Midnight Blue, TETRA burst sources</a><br>
  </li></ul>
</span></p>
<a name="data"></a>

<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
  <ol type="a">
    <a name="data_1"></a>
    <li><a href="https://www.ti.com/product/OMAP-L138" target="_blank">OMAP-L138 processor documentation</a><br>
Texas Instruments website.
    </li><li><a href="https://www.ti.com/product/TMS320C6748" target="_blank">TMS320 DSP documentation</a><br>
Texas Instruments website.
  </li></ol>
</span></p>
<a name="ref"></a>

<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
  <ol>
    <a name="ref_1"></a>
    <li><a href="https://www.midnightblue.nl/tetraburst" target="_blank">TETRA:BURST</a><br>
Midnight Blue, 24 July 2023.
    </li><li><a href="https://bit.ly/43UXoYd" target="_blank">Huib Modderkolk, <i>Overheid weet al dertig jaar van 'achterdeur' in beveiliging radiocommunicatie</i></a><br>
De Volkskrant, 29 July 2023.
    </li><li><a href="https://ceesjansen.nl/category/nieuws" target="_blank">Cees Jansen, TEA co-developer at Philips Crypto BV</a><br>
Personal correspondence.
Crypto Museum, 2 August 2023.
    </li><li><a href="https://ref2014impact.azurewebsites.net/casestudies2/refservice.svc/GetCaseStudyPDF/30193" target="_blank">Royal Holloway, University of London, <i>Impact case study (REF3b)</i></a><br>
<i><a href="https://ref2014impact.azurewebsites.net/casestudies2/refservice.svc/GetCaseStudyPDF/30193" target="_blank">Design of a block cipher used in TETRA secure radio.</a></i><br>
REF2014. Undated but probably 2014.
    </li><li><a href="https://en.wikipedia.org/wiki/Kerckhoffs's_principle" target="_blank">Wikipedia, <i>Kerckhoffs's principle</i></a><br>
Retrieved 5 August 2023.
    </li><li><a href="https://bit.ly/447xMaw" target="_blank">ETSI and TCCA Statement to<br>TETRA Security Algorithms Research Findings Publication on 24 July 2023</a><br>
<span aria-label="European Telecommunications Standards Institute" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/org/etsi/index.htm">ETSI</a></span>/TCCA. Sophia Antipolis, 24 July 2023.
    </li><li><a href="https://zetter.substack.com/p/interview-with-the-etsi-standards" target="_blank">Kim Zetter, <i>Interview with the ETSI Standards Organisation That Created TETRA "Backdoor"</i></a><br>
Interview between Kim Zetter and Brian Murgatroyd, Chairman  ETSI TC TETRA.<br>
Zero Day website, 25 July 2023.
    </li><li><a href="https://bit.ly/447xMaw" target="_blank">ETSI and TCCA Statement to<br>TETRA Security Algorithms Research Findings Publication on 24 July 2023</a><br>
<span aria-label="European Telecommunications Standards Institute" data-balloon-pos="up"><a href="https://www.cryptomuseum.com/org/etsi/index.htm">ETSI</a></span>/TCCA. Sophia Antipolis, 24 July 2023.
  </li></ol>
</span></p>

<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
  <ul>
    <li><a href="https://www.cryptomuseum.com/crypto/algo/taa">TAA algorithm</a><br>
    </li><li><a href="https://www.cryptomuseum.com/crypto/algo/tea">TEA algorithms</a><br>
    </li><li><a href="https://www.cryptomuseum.com/radio/tetra/index.htm">TETRA radio network</a><br>
    </li><li><a href="https://www.cryptomuseum.com/manuf/midnightblue">About Midnight Blue</a><br>
  </li></ul>
</span></p>

<p>
  <span size="-1" face="Lucida Grande,Arial,Verdana,sans-serif" color="#555555">
  <ul>
    <li><a href="https://www.rtl-sdr.com/tetra-kit-a-new-open-source-tetra-decoder" target="_blank">TETRA Kit, open source TETRA decoder for RTL-SDR</a><br>
  </li></ul>
</span></p>
</td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Make Apps for Linux (239 pts)]]></title>
            <link>https://makealinux.app</link>
            <guid>38583399</guid>
            <pubDate>Sat, 09 Dec 2023 16:50:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://makealinux.app">https://makealinux.app</a>, See on <a href="https://news.ycombinator.com/item?id=38583399">Hacker News</a></p>
<div id="readability-page-1" class="page">
<!-- preloader start -->

<!-- preloader end -->

<header>
  <p>
    <nav>
      <a href="https://makealinux.app/"> Make a Linux App </a>
    </nav>
  </p>
</header>


<div>
			<p><img src="https://makealinux.app/images/vscodium-akira.png" alt="">
			</p>
			<div>
					<h2>Make Apps for Linux</h2>
					<p>Desktop and mobile Linux users have a healthy appetite for new software. Linux app stores and repositories lack applications compared to their proprietary counterparts.</p>
<p>Technical enthusiasts are encouraged to direct their passion and creativity towards creating fresh apps for Linux users.</p>
<p>Too often they fall into the trap of creating more Linux distributions. We don’t need more Linux distributions. Stop making Linux distributions, make applications instead.</p>

					
			</div>
	</div>
<div id="feature">
      <div>
        <p>
          <h2>Why create more applications</h2>
        </p>
      </div>
      <div>
        
        <div>
          <h4>Scratch an Itch</h4>
          <p>Ever had an idea for an application you personally need? You may find others have a similar desire for your application idea. Scratch that itch.</p>
        </div>
        
        <div>
          <h4>Broaden the ecosystem</h4>
          <p>New applications can inspire new developers on Linux. Building applications in the open allows developers even newer than yourself to learn and get started. Help build the next Linux app generation.</p>
        </div>
        
        <div>
          <h4>Be creative</h4>
          <p>Developing applications is a naturally creative endeavour. The sense of fulfilment gained when completing a project can be very rewarding. Exercise that half of your brain.</p>
        </div>
        
      </div>
      <p><img src="https://makealinux.app/images/gnome-software.png" alt="">
      </p>
      <div>
          
        <div>
          <h4>Collaborate</h4>
          <p>Building applications fosters communities. Linux communities often want to help developers succeed. Make something people want, and build a group of fans and contributors around it.</p>
        </div>
        
        <div>
          <h4>Learn new skills</h4>
          <p>Developing applications is a sought-after skill. There are many free training resources to help you learn to develop software. Level up your résumé!</p>
        </div>
        
        <div>
          <h4>Earn a wage</h4>
          <p>Build popular paid applications and services. It’s a myth that Linux users don’t support developers financially. Use this as an opportunity to create a new source of income for yourself.</p>
        </div>
        
      </div>
    </div>

<div>
      <p><img src="https://makealinux.app/images/distro-timeline.png" alt="">
      </p>
      <div>
          <h2>Target all the Linux distributions</h2>
          <p>Unlike other platforms, Linux is a very diverse target. There are hundreds of Linux distributions, some more popular than others. Once published though, applications can generally work everywhere.</p>
<p>There are well documented software packaging and distribution systems which enable developers to get their applications into the hands of users.</p>
<p>Each developer framework and Linux distribution will have their own recommended route to users. When you’re ready to share your creation, the development documentation will signpost their suggested packaging guides.</p>

        </div>
    </div>



<div>
    <div>
        <p>
          <h2>Where to start</h2>
        </p>
      </div>
    
    <div>
      <p><img src="https://makealinux.app/images/gnome-builder.png" alt="">
      </p>
      <div>
          <h4>GNOME</h4>
          <p>The GNOME project builds the popular GNOME Shell desktop, and enables development based around Gjs and Gtk. Popular programming languages may be used with Gtk, including Python, C, C++, Rust, and even Javascript.</p>
          
          
          <p><a href="https://developer.gnome.org/">GNOME Developer Center</a>
          
          
        </p></div>
    </div>
    
    <div>
      <div>
          <h4>KDE Frameworks</h4>
          <p>KDE produces the widely-used Plasma desktop and the tools and frameworks to create applications. The KDE Frameworks have enabled the development of many diverse desktop applications. KDE Frameworks primarily leverage the Qt toolkit and C++ programming language.</p>
          
          
          <p><a href="https://develop.kde.org/docs">KDE Frameworks Getting Started</a>
          
          
        </p></div>
      <p><img src="https://makealinux.app/images/kde-kdevelop.png" alt="">
      </p>
    </div>
    
    
    <div>
      <p><img src="https://makealinux.app/images/elementary-code.png" alt="">
      </p>
      <div>
          <h4>elementary OS</h4>
          <p>elementary OS is a fast, open, and privacy-respecting replacement for Windows and macOS. The developers have built a desktop and ecosystem in which developers build applications. Their developer guide recommends Vala and Gtk for application development.</p>
          
          
          <p><a href="https://developer.elementary.io/">elementary OS Developer Guide</a>
          
          
        </p></div>
    </div>
    
    <div>
      <div>
          <h4>Electron</h4>
          <p>Electron enables developers to build cross-platform desktop apps with JavaScript, HTML, and CSS. Electron developers can leverage the vast library of node modules to build their own applications on web technologies.</p>
          
          
          <p><a href="https://www.electronjs.org/docs">Electron Documentation</a>
          
          
        </p></div>
      <p><img src="https://makealinux.app/images/electron-atom.png" alt="">
      </p>
    </div>
    
    
    <div>
      <p><img src="https://makealinux.app/images/ubuntu-touch.png" alt="">
      </p>
      <div>
          <h4>Ubuntu Touch</h4>
          <p>Ubuntu Touch is an open source operating system designed to run on a variety of devices from phones to tablets and PCs. Native Ubuntu Touch applications are made using QML or HTML with their behavior defined in JavaScript, C++, Python, Rust or Go.</p>
          
          
          <p><a href="https://docs.ubports.com/en/latest/appdev/index.html">Ubuntu Touch Documentation</a>
          
          
        </p></div>
    </div>
    
  </div>


<div id="testimonial">
      <div>
        <p>
          <h2>Developer opinion</h2>
        </p>
      </div>
      
      <div>
          <p>We need to ensure a thriving app ecosystem to bring Linux to the masses. Our dream of an open desktop, accessible to all can only be achieved by enabling everyone to develop for Linux.</p>
          
        </div>
      
      <div>
          <p>To make Linux the operating system we all want, we need great apps. Join us, you will find the tools to create everything you ever imagined!</p>
          <div>
            <p><img src="https://makealinux.app/images/avatars/aleix_pol.jpg" alt="Aleix Pol"></p><h4>Aleix Pol</h4>
            <p><span>President of the KDE e.V. and hacker</span>
          </p></div>
        </div>
      
      <div>
          <p>There’s a unique opportunity with desktop Linux to not only build great apps, but to help shape platform APIs and influence the overall direction of the desktop you’re publishing on.</p>
          <div>
            <p><img src="https://makealinux.app/images/avatars/daniel_fore.jpg" alt="Daniel Foré"></p><h4>Daniel Foré</h4>
            <p><span>Founder, elementary</span>
          </p></div>
        </div>
      
      <div>
          <p>Working on Linux apps is a completely different experience from developing for a closed ecosystem. Though we’re technically competitors, in the end, we’re all collaborating on the same bigger vision.</p>
          <div>
            <p><img src="https://makealinux.app/images/avatars/jan_sprinz.jpg" alt="Jan Sprinz"></p><h4>Jan Sprinz</h4>
            <p><span>Member of the Board of the UBports Foundation</span>
          </p></div>
        </div>
      
    </div>


<div>
    <div>
        <p>
          <h2>Sharing Your Creation</h2>
        </p>
      </div>
    
    <div>
      <p><img src="https://makealinux.app/images/packaging/appcenter.png" alt="">
      </p>
      <div>
          <h4>AppCenter</h4>
          <p>Publish and monetize your app on AppCenter, the open, pay-what-you-want app store and build service for indie developers. Publish without disrupting your workflow—the AppCenter Dashboard integrates with GitHub for releases and issue tracking.</p>
          
          
          <p><a href="https://developer.elementary.io/">AppCenter Dashboard</a>
          
          
        </p></div>
    </div>
    
    <div>
      <div>
          <h4>AppImage</h4>
          <p>Distribute your desktop Linux application in the AppImage format and win users running all common Linux distributions. Package once and run everywhere. Reach users on all major desktop distributions.</p>
          
          
          <p><a href="https://docs.appimage.org/packaging-guide/index.html">AppImage Packaging Guide</a>
          
          
        </p></div>
      <p><img src="https://makealinux.app/images/packaging/appimage.png" alt="">
      </p>
    </div>
    
    
    <div>
      <p><img src="https://makealinux.app/images/packaging/flatpak.png" alt="">
      </p>
      <div>
          <h4>Flatpak</h4>
          <p>Flatpak is a framework for distributing desktop applications on Linux. It has been created by developers who have a long history of working on the Linux desktop, and is run as an independent open source project.</p>
          
          
          <p><a href="https://docs.flatpak.org/en/latest/">Flatpak Documentation</a>
          
          
        </p></div>
    </div>
    
    <div>
      <div>
          <h4>Open Build Service</h4>
          <p>The openSUSE Build Service is the public instance of the Open Build Service (OBS) used for development of the openSUSE distribution and to offer packages from same source for Fedora, Debian, Ubuntu, SUSE Linux Enterprise and other distributions.</p>
          
          
          <p><a href="https://en.opensuse.org/Portal:Packaging">openSUSE Build Service Help</a>
          
          
        </p></div>
      <p><img src="https://makealinux.app/images/packaging/obs.png" alt="">
      </p>
    </div>
    
    
    <div>
      <p><img src="https://makealinux.app/images/packaging/snapcraft.png" alt="">
      </p>
      <div>
          <h4>Snapcraft</h4>
          <p>Snapcraft is a powerful and easy to use command line tool for building snaps. Snaps are app packages for desktop, cloud and IoT that are easy to install, secure, cross-platform and dependency-free.</p>
          
          
          <p><a href="https://snapcraft.io/docs/snapcraft-overview">Snapcraft Documentation</a>
          
          
        </p></div>
    </div>
    
  </div>































</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple to move key iPad engineering resources to Vietnam (118 pts)]]></title>
            <link>https://asia.nikkei.com/Spotlight/Supply-Chain/Apple-to-move-key-iPad-engineering-resources-to-Vietnam</link>
            <guid>38582000</guid>
            <pubDate>Sat, 09 Dec 2023 14:05:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://asia.nikkei.com/Spotlight/Supply-Chain/Apple-to-move-key-iPad-engineering-resources-to-Vietnam">https://asia.nikkei.com/Spotlight/Supply-Chain/Apple-to-move-key-iPad-engineering-resources-to-Vietnam</a>, See on <a href="https://news.ycombinator.com/item?id=38582000">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><img full="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F4%2F3%2F4%2F2%2F46952434-1-eng-GB%2Fvietnam+ipad.jpg?source=nar-cms" src="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F4%2F3%2F4%2F2%2F46952434-1-eng-GB%2Fvietnam+ipad.jpg?width=700&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms" onerror="this.src = '/bundles/app/images/placeholder.jpg?ez'; this.alt = '(placeholder image)'" alt="" loading="lazy"></p><p><span data-trackable="caption">    Vietnam is emerging as an increasingly important production hub for Apple as the iPhone maker seeks to reduce its dependence on China. (Nikkei&nbsp;montage/Source photos by AP)&nbsp;


</span></p><p><span data-trackable="timestamp" data-test="timestamp" data-time-utc="December 08, 2023 04:39 UTC" data-updated="false" data-show-full="true" datetime="December 08, 2023 04:39 UTC"><time>December 8, 2023 13:39 JST</time><span> | </span><a href="https://asia.nikkei.com/Location/Southeast-Asia/Vietnam">Vietnam</a></span></p><div id="article-body-preview" data-article-body="" data-trackable="bodytext" data-paragraph-count="13" data-word-count="607" data-text-length="3812"><p>TAIPEI -- Apple is for the first time allocating product development resources for the iPad to Vietnam, sources briefed on the matter said, a major step toward strengthening the Southeast Asian country's position as an alternative manufacturing hub outside of China.</p><p>Apple is working with China's BYD, a key iPad assembler, to move new product introduction (NPI) resources to Vietnam. NPI involves a tech company like Apple collaborating with suppliers on the design and development of new products to make sure the blueprints are doable. This is the first time Apple has shifted NPI resources to Vietnam for such a core device.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Scrambling eggs for Spotify with Knuth's Fibonacci hashing (123 pts)]]></title>
            <link>https://pncnmnp.github.io/blogs/fibonacci-hashing.html</link>
            <guid>38581959</guid>
            <pubDate>Sat, 09 Dec 2023 14:00:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pncnmnp.github.io/blogs/fibonacci-hashing.html">https://pncnmnp.github.io/blogs/fibonacci-hashing.html</a>, See on <a href="https://news.ycombinator.com/item?id=38581959">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      <p><a id="rss-feed" href="https://pncnmnp.github.io/rss.xml">If you like this blog post, do subscribe to my RSS feed</a></p>
      <h2>First Published: 08/12/23</h2>
      <blockquote>
        <i>
          He was very late in returning -- so late, that I knew that the concert
          could not have detained him all the time. Dinner was on the table
          before he appeared.
          <br>
          "It was magnificent," he said, as he took his seat. "Do you remember
          what Darwin says about music? He claims that the power of producing
          and appreciating it existed among the human race long before the power
          of speech was arrived at. Perhaps that is why we are so subtly
          influenced by it. There are vague memories in our souls of those misty
          centuries when the world was in its childhood."
          <br>
          "That's rather a broad idea," I remarked.
          <br>
          "One's ideas must be as broad as Nature if they are to interpret
          Nature," he answered.
        </i>
        <br>
        - A Study in Scarlet, Arthur Conan Doyle
      </blockquote>
      <p>
        A few weeks back, while browsing Hacker News’
        <a href="https://news.ycombinator.com/pool">second chance pool</a>, I
        came across a
        <a href="https://engineering.atspotify.com/2014/02/how-to-shuffle-songs/">2014 blog post from Spotify</a>
        discussing how to shuffle songs.
      </p>
      <p>
        Now, at first glance, you might think, “How challenging could it be to
        shuffle songs in a playlist? Can we not randomly shuffle them out?”
      </p>
      <p>
        You see, that’s precisely the approach Spotify initially took. They used
        the
        <a href="https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle">Fisher–Yates shuffle</a>
        to do this. Say you have five songs from three artists, as illustrated
        in the figure below:
      </p>
      <figure>
        <img src="https://pncnmnp.github.io/blogs/pics/fibonacci-hashing/songs-artists.png" alt="Songs and Artists">
        <figcaption>
          <i>Figure 1: 5 songs from 3 artists in a playlist</i>
        </figcaption>
      </figure>
      <p>
        The modern implementation of Fisher–Yates shuffle is an \(O(n)\) time
        algorithm and can be described as follows:
      </p>
      <ol>
        <li>
          To shuffle an array \(a\) of \(n\) elements (indices \(0..n-1\)):
        </li>
        <li>
          For \(i\) from \(n - 1\) down to \(1\) do
        </li>
        <ol>
          <li>
            \(j \leftarrow \) random integer such that \( 0 \le j \le i \)
          </li>
          <li>exchange \(a[j]\) and \(a[i]\)</li>
        </ol>
      </ol>
      <p>Using the figure above, we can visualize the algorithm:</p>
      <figure>
        <img src="https://pncnmnp.github.io/blogs/pics/fibonacci-hashing/fisher-yates.png" alt="Fisher Yates Shuffle">
        <figcaption>
          <i>Figure 2: Fisher Yates Shuffle</i>
        </figcaption>
      </figure>
      <p>
        Now, this was all fine for the Sweden-based team till they faced a
        fascinating issue. In their words:
      </p>
      <blockquote>
        ..... We noticed some users complaining about our shuffling algorithm
        playing a few songs from the same artist right after each other. The
        users were asking “Why isn’t your shuffling random?”. We responded “Hey!
        Our shuffling is random!”
      </blockquote>
      <blockquote>
        At first we didn’t understand what the users were trying to tell us by
        saying that the shuffling is not random, but then we read the comments
        more carefully and noticed that some people don’t want the same artist
        playing two or three times within a short time period.
      </blockquote>
      <blockquote>
        ..... If you just heard a song from a particular artist, that doesn’t
        mean that the next song will be more likely from a different artist in a
        perfectly random order. However, the old saying says that the user is
        always right, so we decided to look into ways of changing our shuffling
        algorithm so that the users are happier. We learned that they don’t like
        perfect randomness.
      </blockquote>
      <p>
        Fascinating indeed! To create an illusion of randomness -
        <i>randomness with artists evenly spread throughout the playlist</i> -
        the engineers drew inspiration from a
        <a href="https://keyj.emphy.de/balanced-shuffle/">2007 blog-post by Martin Fiedler</a>.
      </p>
      <p>
        Fiedler’s algorithm is divided into two parts:
        <b>the merge algorithm</b> and <b>the fill algorithm</b>. Initially, the
        songs to be shuffled are <i>categorized</i> based on their artist. For
        instance, assume that we now have three artists and ten songs in our
        playlist. Then,
      </p>
      <figure>
        <img src="https://pncnmnp.github.io/blogs/pics/fibonacci-hashing/categorization-step.png" alt="Categorization step">
        <figcaption>
          <i>Figure 3: Categorization step in Fiedler’s algorithm using 10 songs
            from 3 artists.</i>
        </figcaption>
      </figure>
      <p>
        The <i>fill algorithm</i> aims to distribute dummy tracks evenly among
        shorter categories to match the length of the longest one. This step is
        followed by the <i>merge algorithm</i>, which combines tracks from
        different categories to form a single playlist in a column-wise fashion.
      </p>
      <p>
        For example, with the categories mentioned earlier, the fill algorithm
        would:
      </p>
      <figure>
        <img src="https://pncnmnp.github.io/blogs/pics/fibonacci-hashing/fill-algorithm.png" alt="Fill algorithm">
        <figcaption>
          <i>Figure 4: Fill algorithm in Fiedler’s algorithm</i>
        </figcaption>
      </figure>
      <p>
        Subsequently, the merge algorithm would create a final playlist as
        follows:
      </p>
      <figure>
        <img src="https://pncnmnp.github.io/blogs/pics/fibonacci-hashing/merge-algorithm.png" alt="Merge algorithm">
        <figcaption>
          <i>Figure 5: Merge algorithm in Fiedler’s algorithm</i>
        </figcaption>
      </figure>
      <p>
        While this method distributes the songs quite efficiently, as mentioned
        by Spotify, it is complicated and potentially slow in certain scenarios,
        particularly due to the numerous randomization operations.
      </p>
      <p>
        Spotify suggested drawing inspiration from existing dithering
        algorithms, like
        <a href="https://en.wikipedia.org/wiki/Floyd%E2%80%93Steinberg_dithering">Floyd–Steinberg dithering</a>, to spread each artist as evenly as possible. Although they don't
        provide specific details of their algorithm, the basic concept they
        describe is as follows:
      </p>
      <blockquote>
        Let’s say we have 4 songs from The White Stripes as in the picture
        above. This means that they should appear roughly every 25% of the
        length of the playlist. We spread out the 4 songs along a line, but
        their distance will vary randomly from about 20% to 30% to make the
        final order look more random.
      </blockquote>
      <blockquote>
        We introduce a random offset in the beginning; otherwise all first songs
        would end up at position 0.
      </blockquote>
      <blockquote>
        We also shuffle the songs by the same artist among each other. Here we
        can use Fisher-Yates shuffle or apply the same algorithm recursively,
        for example we could prevent songs from the same album playing too close
        to each other.
      </blockquote>
      <p>
        After reading Spotify’s blog post, an idea struck me! You see, a year
        ago, I wrote a small library to generate aesthetically pleasing colors
        in the
        <a href="https://en.wikipedia.org/wiki/HSL_and_HSV">HSV (hue, saturation, value) space</a>.
      </p>
      <figure>
        <img src="https://pncnmnp.github.io/blogs/pics/fibonacci-hashing/hsv-space.png" alt="HSV color space">
        <figcaption>
          <i>Figure 6: HSV color space. This image is
            <a href="https://commons.wikimedia.org/wiki/File:HSV_color_solid_cylinder_saturation_gray.png">
              licensed under CC BY-SA 3.0</a>.</i>
        </figcaption>
      </figure>
      <p>
        But how do we define "aesthetically pleasing colors"? And what's the
        connection to shuffling algorithms?
      </p>
      <p>
        Let's consider an example where we need to pick five colors to label a
        chart. Choosing these colors randomly from the RGB space can be quite
        problematic. Some colors, especially on darker backgrounds, can make
        text hard to read. Moreover, it is possible to end up with colors that
        are too similar to each other.
      </p>
      <p>
        Addressing the issue of dark or light backgrounds turns out to be
        relatively straightforward – <i>avoid the RGB space</i> and instead,
        <i>use the HSV space with fixed saturation and value</i>. However, even
        then, there's a high chance of selecting colors that are too close on
        the color spectrum. In other words,
        <b>the selection can be too random</b>, and we might prefer colors that
        are distributed as evenly as possible across the entire color spectrum.
      </p>
      <p>
        To achieve this, my library employed <b>Fibonacci hashing</b>. The
        algorithm I implemented
        <a href="https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/">was proposed by Martin Leitner‑Ankerl</a>. It utilizes the reciprocal of <b>golden ratio</b>: \[ \Phi^{-1} =
        \dfrac{\sqrt{5} - 1}{2} \approx 0.618033988749895 \]
      </p>

      <p>
        As Martin explains in his blog, one of the intriguing properties of the
        golden ratio is that
        <i>
          each subsequent hash value divides the interval into which it falls in
          accordance with the golden ratio!
        </i>
      </p>
      <p>
        To better understand Fibonacci hashing, let us explore it through the
        perspective of Donald Knuth’s
        <a href="https://en.wikipedia.org/wiki/The_Art_of_Computer_Programming">The Art of Computer Programming, Volume 3</a>.
      </p>
      <p>
        The foundation of Fibonacci hashing is based upon the
        <a href="https://en.wikipedia.org/wiki/Three-gap_theorem">
          three-distance theorem</a>. This theorem states: Suppose \(\theta\) is an irrational number. When
        the points \(\theta\), \((2*theta) % 1\), ….., \((n*theta) % 1\) are
        placed on a line segment ranging from \(0\) to \(1\) (inclusive), the
        \(n + 1\) line segments formed will have at most three distinct lengths.
        Furthermore, the next point \(((n+1)*theta) % 1\)
        <b>will fall into one of the largest existing segments</b>.
      </p>
      <p>
        Consider the largest existing segment, spanning from \(a\) to \(c\)
        (inclusive), being divided into two parts: \(a\) to \(b\) and \(b\) to
        \(c\). If one of these parts is more than twice the length of the other,
        we call this division a <i>bad break</i>. Using the three-distance
        theorem, it can be shown that the two numbers \(\Phi^{-1}\) (<b>the reciprocal of golden ratio!</b>) and \(1 - \Phi^{-1}\) lead to the most uniformly distributed
        sequences among all numbers \(\theta\) between \(0\) and \(1\). In other
        words, a break break will occur unless \(\Phi^{-1}\) or \(1 -
        \Phi^{-1}\) are used.
      </p>
      <p>
        Using the theory described above, we can now define
        <b>Fibonacci hashing</b>. However, before diving into that, it is
        important to first understand <b>multiplicative hashing</b>.
        Multiplicative hashing involves multiplying a key \(K\) by a constant
        \(\alpha\). The fractional part of this product is then used to
        determine the index in a hash table.
        <i>
          Fibonacci hashing is a specific variant of multiplicative hashing
        </i>
        where the constant \(\alpha\) is set to be the reciprocal of the golden
        ratio \(\Phi^{-1}\).
      </p>
      <p>
        And that’s it! We can start at a random hue value between 0 and 1 (this
        will be our initial key \(K_1\)) and use the Fibonacci hashing from that
        point to evenly select colors on the color spectrum.
      </p>
      <figure>
        <img src="https://pncnmnp.github.io/blogs/pics/fibonacci-hashing/colors-fibonacci-hashing.png" alt="Colors generated using Fibonacci hashing">
        <figcaption>
          <i>Figure 8: Colors generated using Fibonacci hashing.</i>
        </figcaption>
      </figure>
      <p>
        So how can we apply all of this to shuffle songs? Well, the algorithm I
        came up with is as follows:
      </p>
      <ol>
        <li>
          <b>Categorization Function:</b> Let \(S\) be the set of all songs in
          the playlist. Define a categorization function \(C: S \rightarrow A\),
          where \(A\) is the set of artists. This function assigns each song in
          \(S\) to an artist in \(A\).
        </li>
        <li>
          <b>Shuffle Songs per Artist:</b> For each artist \(a \in A\), shuffle
          the subset of \(S\) where \(C(s) = A\) for all \(s\) in the subset.
        </li>
        <li>
          <b>Shuffle Artist List:</b> Let \(A’\) be the list of all artists.
          Apply a random permutation \(\pi\) to \(A’\).
        </li>
        <li>
          <b>Initialize Playlist \(P\)</b>: Let \(P\) be an empty list that will
          store the final shuffled songs.
        </li>
        <li>
          <b>Set Parameters:</b> Initialize \(K=1\) and let \(N = |A|\) (the
          total number of artists).
        </li>
        <li>
          <b>Select Artist Index:</b> Compute the index \(I = \lfloor ((K *
          0.618033988749895) \% 1) * N) \rfloor \).
        </li>
        <li>
          <b>Add Songs to \(P\)</b>: Remove the first song from the list of
          songs corresponding to the artist at \(A’[I]\) and append it to \(P\).
        </li>
        <li><b>Update Parameters:</b> Increment \(K\) by 1.</li>
        <li>
          <b>Update Artist List:</b> If the artist at \(A’[I]\) has no remaining
          songs, decrement \(N\) by 1 and remove the artist from \(A’\).
        </li>
        <li>
          <b>Loop Through:</b> Repeat steps 6 to 9 until \(A’\) is empty. When
          empty, return \(P\).
        </li>
      </ol>
      <figure>
        <img src="https://pncnmnp.github.io/blogs/pics/fibonacci-hashing/shuffle-with-fibonacci-hashing.png" alt="Algorithm for shuffling songs using Fibonacci hashing">
        <figcaption>
          <i>Figure 9: An illustration of the above algorithm for shuffling
            songs using Fibonacci hashing.</i>
        </figcaption>
      </figure>
      <p>
        If we use a hash table in the categorization function and an array to
        store the list of all artists, then the overall time complexity of the
        algorithm would be \(O(S)\).
      </p>
      <p>
        To compare this algorithm against the naive Fisher-Yates shuffle, I used
        a measure that calculates the ratio of the count of adjacent song pairs
        by the same artist to the total number of songs in the playlist minus
        one. That is,
      </p>
      <pre><code>def measure(shuffled_songs):
    clusters = sum(
        1
        for i in range(len(shuffled_songs) - 1)
        if shuffled_songs[i][‘artist’] == shuffled_songs[i + 1][‘artist’]
    )
    return clusters / (len(shuffled_songs) - 1)    
</code></pre>
      <p>
        When the playlist contains songs only from one artist, this measure will
        be 1. Conversely, when no adjacent song pairs are by the same artist,
        the measure will return 0.
      </p>
      <p>
        Using fuzzy testing on a maximum of ten artists, with each having up to
        ten songs, I generated a million playlists and calculated the statistics
        for the above algorithm (A) and the fisher-yates shuffle (B). The
        results were as follows:
      </p>
      <ul>
        <li>
          A - Mean: 0.11831, Median: 0.05263, Mode: 0.0, p25: 0.02040, p75:
          0.14814, p90: 0.33333, p95: 0.5
        </li>
        <li>
          B - Mean: 0.23296, Median: 0.18181, Mode: 0.33333, p25: 0.12121, p75:
          0.29629, p90: 0.46666, p95: 0.58333
        </li>
      </ul>
      <p>
        At first glance, the p95 result might seem surprising. However, this
        occurs in cases where the fuzzy testing populates a playlist
        predominantly with songs from a single artist, rendering optimal
        shuffling infeasible. When a minimum of four songs per artist were used,
        the results were:
      </p>
      <ul>
        <li>
          A - Mean: 0.05948, Median: 0.03703, Mode: 0.0, p25: 0.01694, p75:
          0.07843, p90: 0.14285, p95: 0.2
        </li>
        <li>
          B - Mean: 0.17223, Median: 0.15555, Mode: 0.2, p25: 0.10909, p75:
          0.21875, p90: 0.29268, p95: 0.34482
        </li>
      </ul>
      <p>
        The results look decent. I’d expect Fiedler’s algorithm to have a
        near-zero mean, however, the simplicity and speed of the above algorithm
        does look appealing to me.
      </p>
      <p>
        And that’s it folks! I hope you enjoyed this little journey. Happy
        exploring!
      </p>
      <h2>Addendum</h2>
      <p>
        Recently, I was exploring the “History” section in Knuth’s TAOCP volume
        3 to trace back the history of hashing. In it, Knuth states that:
      </p>
      <blockquote>
        The idea of hashing appears to have been originated by H. P. Luhn, who
        wrote an internal IBM memorandum in January 1953 that suggested the use
        of chaining; in fact, his suggestion was one of the first applications
        of linked linear lists.
      </blockquote>
      <p>
        Unfortunately, I couldn't locate the memo. It seems they never made it
        public. However, I stumbled upon a nice paper from 1953 in which he
        discusses
        <a href="http://jonathanstray.com/papers/Luhn-SearchEngine-1953.pdf">enhancing search engines by refining sets</a>.
      </p>
      <p>
        Knuth also references Arnold I. Dumey, who appears to be the first to
        describe hash tables in open literature.
        <a href="https://archive.org/details/sim_computers-and-people_1956-12_5_12/page/n5/mode/2up">
          I was able to retrieve his paper </a>.
      </p>
      <p>
        Dumey initiates with an \(O(log\; n)\) solution using the "twenty
        questions" game, subsequently explaining how we'd be better off if we
        could do computation before we access the memory. I found his
        introduction to the hash function rather intriguing:
      </p>
      <blockquote>
        A certain manufacturing company had a parts and assemblies list of many
        thousands of items. A mixed digital and alphabetic system of numbering
        items was used, of six positions in all. Eight complex machines or
        assemblies were sold to the public. These had item numbers taken from
        the general system. In setting up a punch card control system on these
        eight items it was first proposed to record the entire six digit number
        for each item. However, examination of the eight assembly numbers
        disclosed that no two were alike on the fourth digit. It was therefore
        sufficient, for sorting purposes, merely to record the fourth digit,
        thereby releasing five badly needed information spaces for other
        purposes.
      </blockquote>
      <blockquote>
        This rather extreme case indicates that an examination of the item
        description may disclose a built-in redunancy which can be used to cut
        the field down to practical size.
      </blockquote>
      <p>He further discusses handling duplicates and introduces chaining:</p>
      <blockquote>
        Adjust the addressing scheme, according to a method which will be
        described later, to reduce the number of direct addresses, and use the
        excess locations to store overflows. Put the overflow address at the
        tail end of stored item information. What the best reduction is varies
        from case to case. Note that the expectation of the number of accesses
        to be made goes up when these methods are used. At each access we check
        by using the complete item description, usually.
      </blockquote>
      <p>
        And discusses how a somewhat efficient hash address can be constructed
        by dividing a prime number and using the remainder:
      </p>
      <blockquote>
        Consider the item description as though it were a number in the scale of
        37 or whatever. Or write it as a binary number by using the appropriate
        punched tape coding. Divide this number by a number slightly less than
        the number of addressable locations (the writer prefers the nearest
        prime). Throw away the quotient. Use the remainder as the address,
        adjusting to base 10, as the case may be.
      </blockquote>
      
      <p><a id="back-link" href="https://pncnmnp.github.io/blog.html">←</a>
    </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Murder is a pixel art ECS game engine in C# (277 pts)]]></title>
            <link>https://github.com/isadorasophia/murder</link>
            <guid>38581852</guid>
            <pubDate>Sat, 09 Dec 2023 13:42:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/isadorasophia/murder">https://github.com/isadorasophia/murder</a>, See on <a href="https://news.ycombinator.com/item?id=38581852">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><p dir="auto">
<a target="_blank" rel="noopener noreferrer" href="https://github.com/isadorasophia/murder/blob/main/media/logo-8x-1.png"><img width="450" src="https://github.com/isadorasophia/murder/raw/main/media/logo-8x-1.png" alt="Murder logo"></a>
</p>
<h2 tabindex="-1" dir="auto">Welcome to Murder Engine!</h2>
<h4 tabindex="-1" dir="auto">This is the source for Murder Engine, a pixel art ECS game engine built on top of MonoGame.</h4>
<p dir="auto">
<a href="https://github.com/isadorasophia/murder/actions/workflows/ci.yml"><img src="https://github.com/isadorasophia/murder/actions/workflows/ci.yml/badge.svg" alt="Publish release"></a>
<a href="https://github.com/isadorasophia/murder/blob/main/LICENSE"><img src="https://camo.githubusercontent.com/0cbd3ab5884c08be7090105a2993810414350eb7fd9e488efe4fa3b07f07e101/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f697361646f7261736f706869612f6d75726465722e737667" alt="License" data-canonical-src="https://img.shields.io/github/license/isadorasophia/murder.svg"></a>
<a href="https://discord.gg/zF6axz9nQy" rel="nofollow"><img src="https://camo.githubusercontent.com/e44f4fd3262b1a8b52ec7533d780fe1cf99806ff683ea735f9d8489730b20e90/68747470733a2f2f646362616467652e76657263656c2e6170702f6170692f7365727665722f7a463661787a396e51793f7374796c653d666c6174" data-canonical-src="https://dcbadge.vercel.app/api/server/zF6axz9nQy?style=flat"></a>
</p>
<blockquote>
<p dir="auto">🚧👷 <strong>Warning</strong> Proceed at your own risk. This is an in-development engine, which is another way of saying that it will change <em>quite a lot</em>. We do our best to keep release branches stable, but expect a lot of breaking changes and things that are not perfect (yet!).</p>
</blockquote>
<h3 tabindex="-1" dir="auto">How to build it?</h3>
<p dir="auto">If you're good at just digging examples and figuring things out, I recommend starting out with our <a href="https://github.com/isadorasophia/neocityexpress">game jam project</a> or the <a href="https://github.com/isadorasophia/hellomurder">Hello World project</a>. These projects show what to expect from the Murder architecture and how to create a world, entities and components, which ECS is all about.</p>
<blockquote>
<p dir="auto">...I realize this is quite redundant because the Hello World references this repository as a documentation source, but hang with me.</p>
</blockquote>
<p dir="auto">This is what the architecture looks like:</p>
<div data-snippet-clipboard-copy-content="└── root 
    └── resources
    └── src
        ├── game
        │   ├── bin (final game)
        │   ├── packed
        │   └── resources
        └── game.editor
            ├── bin (game editor)
            └── resources"><pre><code>└── root 
    └── resources
    └── src
        ├── game
        │   ├── bin (final game)
        │   ├── packed
        │   └── resources
        └── game.editor
            ├── bin (game editor)
            └── resources
</code></pre></div>
<p dir="auto">You may notice that <strong>there is no external editor.exe</strong>, only your own project. This is so you can have full control of your project! Very similar of what you expect developing a <a href="https://www.monogame.net/" rel="nofollow">MonoGame</a> project, for example.</p>
<p dir="auto">The idea of a separate project for the editor is that editor code never touches your beautiful and efficient game code, and you can do whatever you want on the editor side.</p>
<p dir="auto">There is no nuget package for Murder yet, so the recommended way is to keep a git submodule to reference in your .csproj, <a href="https://github.com/isadorasophia/hellomurder/blob/main/src/HelloMurder/HelloMurder.csproj">see example</a>.</p>
<p dir="auto">For more information on how the ECS applies to the engine, I recommend checking out the documentation for <a href="https://github.com/isadorasophia/bang">Bang</a>, the framework that Murder uses.</p>
<h3 tabindex="-1" dir="auto">Requirements</h3>
<p dir="auto">We support developing (which means, running the editor) on <strong>Linux, MacOS, Windows</strong> and even <strong>SteamDeck</strong>. All you really need is .NET 8 SDK installed. The game obviously also ships to all these architectures.</p>
<p dir="auto">Console support is still on progress.</p>
<h3 tabindex="-1" dir="auto">Contributing</h3>
<p dir="auto">This is still super early, but feel free to contact me or <a href="http://saint11.org/" rel="nofollow">saint11</a> if you have any suggestions. I am very interested in people trying it out and any feedback you may have!</p>
<h3 tabindex="-1" dir="auto">✨ Editor examples</h3>
<p dir="auto">
<a target="_blank" rel="noopener noreferrer" href="https://github.com/isadorasophia/murder/blob/main/media/screenshot0.png"><img src="https://github.com/isadorasophia/murder/raw/main/media/screenshot0.png" alt="Murder logo"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/isadorasophia/murder/blob/main/media/screenshot1.png"><img src="https://github.com/isadorasophia/murder/raw/main/media/screenshot1.png" alt="Murder logo"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/isadorasophia/murder/blob/main/media/screenshot2.png"><img src="https://github.com/isadorasophia/murder/raw/main/media/screenshot2.png" alt="Murder logo"></a>
</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Deadweight Loss as a Service (150 pts)]]></title>
            <link>https://unoriginal.blog/introducing-dwlaas/</link>
            <guid>38581373</guid>
            <pubDate>Sat, 09 Dec 2023 12:22:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://unoriginal.blog/introducing-dwlaas/">https://unoriginal.blog/introducing-dwlaas/</a>, See on <a href="https://news.ycombinator.com/item?id=38581373">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>I’m excited to announce our fintech startup <a href="https://www.youtube.com/watch?v=dQw4w9WgXcQ">Deadweight Loss as a Service</a> is coming out of stealth after receiving $8M in seed funding from Emergent Ventures and Thiel Capital. Our platform makes charitable giving more efficient using the latest AI and blockchain technology. Our platform has two major innovations:</p><ul><li><strong>OmniMatch™️</strong> will match any funding through our platform up to fifty cents on the dollar.</li><li><strong>Antidollars™️</strong> remove $1 of funding from an organization of your choosing.</li></ul><h2 id="antidollarstm">Antidollars™️</h2><p>Frustrated that the only avenues for disagreement with an organization’s decisions or worldview are ineffective and inefficient protests, petitions, boycotts, and social media campaigns? Tired of cardboard protest signs wasting valuable economic resources, then being reduced to litter in the street? The Antidollar™️ is for you. Patent-pending and only available through Deadweight Loss as a Service, each Antidollar™️ donation either annihilates a dollar donated to your target or donates a dollar to its antithesis.</p><p>Here’s how it works: We’ve identified hundreds of pairs of organizations which directly oppose each other (e.g. Clean Air Task Force / American Coalition for Clean Coal Electricity, Electronic Frontier Foundation / <a href="https://theintercept.com/2023/10/01/apple-encryption-iphone-heat-initiative/">Heat Initiative</a>). For each pair, we’ve created a smart contract providing a “market” for this pair. Each market has a <em>balance</em> which starts at $0 and can become either negative or positive. Each January 1st at 00:00, the absolute value of the balance is donated to one of the organizations. If the balance is negative, it is donated to the first in the pair; if positive, it is donated to the second.</p><p>On our platform, you can send money (plus an <a href="https://unoriginal.blog/introducing-dwlaas/#omnimatchtm">OmniMatch™️ subsidy</a>) to a supported organization of your choosing. Behind the scenes, this works by increasing or decreasing the relevant market’s balance. If $1 is sent to the first organization, the balance decreases by a dollar; if the second, the balance increases by a dollar. The Antidollar™️ does the exact opposite: sending an Antidollar™️ to the first organization <em>increases</em> the balance by a dollar, and sending an Antidollar™️ to the second <em>decreases</em> the balance by a dollar. If the balance currently favors the organization sent an Antidollar™️, the Antidollar™️ will simply subtract $1 from the amount donated; if not, the Antidollar™️ is sent to the opposing organization, which, for well-chosen markets, should have a similar effect. Sending dollars or Antidollars™️ on our platform is completely free.</p><h2 id="omnimatchtm">OmniMatch™️</h2><p>If Antidollars™️ aren’t motivation enough to use our platform, OmniMatch™️ will be. $0.20 per Antidollar™️ sold is directed towards an OmniMatch™️ pool. This pool is used to match a fraction of each dollar or Antidollar™️ directed towards an organization on our platform. Our proprietary OmniMatch™️ algorithm determines this fraction using factors such as market activity. We guarantee these OmniMatch™️ subsidies will never go below 10 cents per dollar. Funding organizations through our platform is a no-brainer: your donation will be worth 10%-50% more at no cost.</p><p><img alt="A simple infographic-style bar chart with two bars, the left labeled “Without DWLaaS” and the right labeled “With DWLaaS”. The right bar is actually two bars, one behind the other. One is 10% larger than the left bar; the other is 50% larger. Above the left bar is text reading “10-50¢ matched per dollar”." src="https://unoriginal.blog/dwlaas-subsidy.png"></p><p>Thanks to OmniMatch™️, in our closed beta lasting only a few months, several of our markets have already seen more than $10,000 in volume:</p><ul><li>Cato Institute / Democratic Socialists of America (current balance -$12)</li><li>Brady Campaign / National Rifle Association (current balance +$536)</li><li>Planned Parenthood Federation of America / National Right to Life Committee (current balance -$4165)</li><li>United States Treasury / Democratic People’s Republic of Korea Central Planning Committee (current balance -$3484)</li><li>People for the Ethical Treatment of Animals / National Cattlemen’s Beef Association (current balance $6645)</li><li>Biden for President / Donald J Trump for President (current balance -$8392)</li></ul><h2 id="testimonials">Testimonials</h2><blockquote><p>Tired of political quarrels at the Thanksgiving table? Buy anti-gift cards for the whole family! Can’t make it to a (counter-)protest? Whether you’d have been at Planned Parenthood or on Wall Street, Deadweight Loss as a Service has got you covered. …. This startup … is … good.</p><p>— <a href="https://m.media-amazon.com/images/I/716nAssnUVL._AC_SL1500_.jpg">WIRED Magazine</a>, “Forget Political Activism. ‘Deactivism’ Is Sweeping Silicon Valley”</p></blockquote><blockquote><p>[The] Hatch-Waxman [Act] was our wakeup call at Eli Lilly to start making connections inside the Beltway. They’ve been worth every penny, but were starting to impact our image. We partnered with Deadweight Loss as a Service to redirect our lobbying spend towards [Patients For Affordable Drugs Now] Antidollars™. It’s much more efficient, and our ESG scores have never been better.</p><p>— David A. Ricks, CEO of Eli Lilly and Company</p></blockquote><h2 id="pro-modetm">Pro Mode™</h2><p>Stay tuned for a future update to the platform, Pro Mode™. For power users, Pro Mode™ further increases liquidity on our markets using advanced AI technology. We embed the mission statements of thousands of humanitarian aid groups, religious organizations, PACs, and more into a high-dimensional “cause-space” which accurately represents divergence in goals between any two supported organizations. The Pro Mode™ smart contract unifies Antidollar™ markets, replacing many distinct prices with a single Praxis Vector™ within cause-space. At the end of the year, the Pro Mode™ contract allocates its funds proportionally to each charity’s cause-space distance from the final Praxis Vector™.</p><p>In Pro Mode™ with patent-pending Praxis Vector™ technology, every dollar pushes the market’s Praxis Vector™ towards your own PPV (Personal Praxis Vector™), set manually or inferred with state-of-the-art LLMs. With Pro Mode™, you can be confident your funds increase the cosine similarity of your and the market’s Praxis Vectors™ as efficiently as possible, without wasting an Anticent™️ on causes literally and figuratively orthogonal to your beliefs. And best of all, Pro Mode™ comes at no additional cost.<sup><a href="#1">1</a></sup></p><h2 id="what-s-next">What’s next</h2><p>Our “PvP mode” experiment was extremely successful in closed alpha. We’ll go GA as soon as a lawyer stays long enough to sign off on it.</p><p>In the long term, you can expect even more from us. A certain seed investor has encouraged us to expand into the <a href="https://en.wikipedia.org/wiki/Vote_pairing_in_the_2016_United_States_presidential_election">vote swapping</a> market with the help of Dr. Bryan Caplan. Meanwhile, Dr. Robin Hanson has been instrumental in the design of the <a href="https://www.youtube.com/watch?v=dQw4w9WgXcQ">Jury Nullification Market Beta</a>—early adopters can join the waitlist starting today!</p><p>We don’t expect to go public any time soon, but what’s a few unregistered securities between friends: invest in Deadweight Loss as a Service by sending Antidollars™ to our enemies.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[French AI startup Mistral secures €2B valuation (101 pts)]]></title>
            <link>https://www.ft.com/content/ea29ddf8-91cb-45e8-86a0-f501ab7ad9bb</link>
            <guid>38580758</guid>
            <pubDate>Sat, 09 Dec 2023 10:57:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ft.com/content/ea29ddf8-91cb-45e8-86a0-f501ab7ad9bb">https://www.ft.com/content/ea29ddf8-91cb-45e8-86a0-f501ab7ad9bb</a>, See on <a href="https://news.ycombinator.com/item?id=38580758">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="barrier-page">
<div data-o-grid-colspan="12 L6" data-component="articleBanner" data-component-unique-name="default"><p>Keep abreast of significant corporate, financial and political developments around the world. Stay informed and spot emerging risks and opportunities with independent global reporting, expert commentary and analysis you can trust.</p></div>
<div data-component="unlockBanner" data-component-unique-name="default"><p><img src="https://www.ft.com/__assets/creatives/optimizely/MAR090/key_icon.svg" alt=""><span id="text-unlockBanner-default">Subscribe to unlock this article</span></p></div>
<div data-theme="" data-component="heroOffer" data-component-unique-name="CHE-Print"><div data-o-grid-colspan="12"><p><h3>Try unlimited access</h3>
<h3><strong>Only CHF 1 for 4 weeks</strong></h3></p></div><div><div data-o-grid-colspan="12 M6"><ul>
<li>Then CHF 85 per month</li>
<li>New customers only</li>
<li>Cancel anytime during your trial</li>
</ul></div><div data-o-grid-colspan="12 M6"><p><a id="charge-button-CHE-Print" data-trackable="41218b9e-c8ae-c934-43ad-71b13fcb4465" href="https://www.ft.com/buy/offer/41218b9e-c8ae-c934-43ad-71b13fcb4465/"><span><p>Keep reading for CHF 1</p></span></a></p></div></div></div>
<p data-component="subscriptionOptionsHeader" data-component-unique-name="default"><h4 id="text-subscriptionOptionsHeader-default">Explore our subscriptions</h4></p>
<div data-component="subscriptionOptions" data-component-unique-name="CHE-Print"><div><h5 id="title-CHE-Print">Individual</h5><p>Find the plan that suits you best.</p><ul><li data-text="Digital"><a id="button1-CHE-Print" data-trackable="digital" href="https://subs.ft.com/digital_edit?ft-content-uuid=7da5d7e5-2c4d-4619-9c81-294d9a634ac4">Digital</a></li><li data-text="Print"><a id="button2-CHE-Print" data-trackable="print" href="https://subs.ft.com/spa3_uk3m?segmentId=461cfe95-f454-6e0b-9f7b-0800950bef25&amp;utm_us=JJIBAX&amp;utm_eu=WWIBEAX&amp;utm_ca=JJIBAZ&amp;utm_as=FIBAZ&amp;ft-content-uuid=7da5d7e5-2c4d-4619-9c81-294d9a634ac4">Print</a></li><li data-text="Print + Digital"><a id="button3-CHE-Print" data-trackable="digital-print" href="https://subs.ft.com/bundleoptions?segmentId=de88addc-8125-43ec-21f1-152c9886e67f&amp;utm_us=JJIBAX&amp;utm_eu=WWIBEAX&amp;utm_ca=JJIBAZ&amp;utm_as=FIBAZ">Print + Digital</a></li></ul></div></div>
<div data-component="subscriptionOptions" data-component-unique-name="default"><div><h5 id="title-default">Professional</h5><p>Premium access for businesses and educational institutions.</p><ul><li data-text="Get Started"><a id="button1-default" data-trackable="professional" href="https://professional.ft.com/en-gb/services/professional-subscriptions/?barrierName=anon_barrier&amp;ft-content-uuid=7da5d7e5-2c4d-4619-9c81-294d9a634ac4&amp;segmentId=9fbe4fe1-9315-3d67-cc6d-2bc7650c4aea">Get Started</a></li><li data-text=""><a id="button2-default" data-trackable="" href=""></a></li><li data-text=""><a id="button3-default" data-trackable="" href=""></a></li></ul><p>Check if your <a href="https://www.ft.com/licence-finder?segmentId=a0e9a794-4c6d-bb35-e4dc-8bd409e0f54f" data-trackable="edu-finder">university</a> or <a href="https://enterprise.ft.com/licence-finder?segmentId=9fb23d7d-afe4-12f3-3eaa-ff7a41e9d073" data-trackable="license-finder">organisation</a> offers FT membership to read for free.</p>
</div></div>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[W4 Games raises $15M to drive video game development with Godot Engine (412 pts)]]></title>
            <link>https://w4games.com/2023/12/07/w4-games-raises-15m-to-drive-video-game-development-inflection-with-godot-engine/</link>
            <guid>38580742</guid>
            <pubDate>Sat, 09 Dec 2023 10:55:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://w4games.com/2023/12/07/w4-games-raises-15m-to-drive-video-game-development-inflection-with-godot-engine/">https://w4games.com/2023/12/07/w4-games-raises-15m-to-drive-video-game-development-inflection-with-godot-engine/</a>, See on <a href="https://news.ycombinator.com/item?id=38580742">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">

		
					<main id="main">
				

<article id="post-1615" itemtype="https://schema.org/CreativeWork" itemscope="itemscope">

	
	
<div itemprop="text">

		
		
<p><strong><mark>OSS Capital leads the Series A funding alongside Naval Ravikant (Founder of AngelList) and a group of angels including Justin Hoffman, Larry Augustin, Alex Atallah, Thomas Dohmke, Diogo Mónica, Scott Williamson.</mark></strong></p>



<p>3 billion people play video games – that’s nearly half the planet! Despite this already massive market size, <strong>the video game industry is at an inflection point where its already strong growth rate will increase even further, and exponentially so. </strong>Shifting demographics, widening Internet access, emerging technologies, and ever-growing adoption by non-gaming industries will completely transform demand for video game developers, platforms, and games themselves. 25,000+ studios. 22 million+ gaming jobs. These illustrate just the tip of the iceberg.</p>



<p>We at W4 Games are going all-in on the creation of an ecosystem with the Godot Engine at its center. The free, open-source technology of the Godot Engine empowers developers to create stunning 2D and 3D games, and we believe it will become the most used game engine in the world within the decade, driving video game development to new heights. It is already the preferred game engine for new generations of game developers and will scale exponentially further thanks to its fast learning curve, intuitive design, and a fast-growing and welcoming community.</p>



<p>To help drive our continuing growth, we are thrilled to announce a new $15M Series A funding round led by OSS Capital and Naval Ravikant (AngelList and AirChat co-founder). Other investors include Justin Hoffman (Ex&nbsp;Elastic), Larry Augustin (Ex SugarCRM),&nbsp;Alex Atallah (Co-founder of OpenSea), Thomas Dohmke (CEO of GitHub), Diogo Mónica (Founder of Anchorage Digital), Scott Williamson (Ex GitLab) and more notable founders and executives in the commercial open-source ecosystem.</p>



<p>W4 Games will strengthen our role within the Godot ecosystem by supporting its open-source development and continuing to build products and services to facilitate Godot’s expansion, such as W4 Consoles (an approved middleware console porting solution for Godot games) and W4 Cloud (multi-tenant service to support millions of users). Moreover, we will target international expansion across North America, Europe, and Asia, and the development of a new Godot education program.</p>



<p>With this new funding, W4 Games aims to more than double its headcount in the coming 18 months to capture the fast-growing demand for its products and services.</p>



<p>“W4 and the Godot community mark the first time in history that the now $300B+ gaming industry is seeing fundamental disruption and acceleration of innovation thanks to open source. OSS Capital is proud to deepen our partnership with W4 towards an open future in gaming.”</p>



<p><em>Joseph Jacks (Founder and General Partner at OSS Capital)</em></p>



<p><strong>About W4 Games (w4games.com)&nbsp;</strong></p>



<p>Founded in 2021, W4 Games is an Irish startup formed by Godot veterans Juan Linietsky, Rémi Verschelde and Fabio Alessandrelli, and veteran entrepreneur Nicola Farronato. The company plans to revolutionize the game industry by bringing the Commercial Open Source Software (COSS) business model to an ecosystem that has traditionally relied on proprietary solutions from an ever-shrinking number of independent vendors. By providing a commercial services offering anchored in the entirely open and community-developed Godot platform, W4 Games believes that companies will be able to reclaim control of the technology powering their games, with a level of freedom and flexibility they never had before. In 2021 W4 Games raised its seed investment round led by OSS and Lux Capital, with the participation of SISU Ventures and Bob Young, the co-founder of Red Hat.</p>

		
		
			</div>

	
</article><!-- #post-## -->


	        			</main><!-- #main -->
			
		
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Spain expels two US spies for infiltrating secret service (210 pts)]]></title>
            <link>https://english.elpais.com/spain/2023-12-08/spain-expels-two-us-spies-for-infiltrating-secret-service.html</link>
            <guid>38579981</guid>
            <pubDate>Sat, 09 Dec 2023 08:46:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://english.elpais.com/spain/2023-12-08/spain-expels-two-us-spies-for-infiltrating-secret-service.html">https://english.elpais.com/spain/2023-12-08/spain-expels-two-us-spies-for-infiltrating-secret-service.html</a>, See on <a href="https://news.ycombinator.com/item?id=38579981">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-dtm-region="articulo_cuerpo"><p>The discovery that two agents from Spain’s <a href="https://english.elpais.com/politics/catalonia_independence/2020-07-16/spains-intelligence-service-has-spyware-program-that-targeted-catalan-politicians.html">CNI intelligence service</a> were bribed to provide classified information to the United States has led to an unprecedented situation between Madrid and Washington. Spanish Minister of Defense Margarita Robles, who oversees the CNI, summoned the U.S. ambassador to Spain, Julissa Reynoso, to her office to explain what happened. Such actions are considered hostile and are not expected between two allies. The Spanish Minister of Foreign Affairs, José Manuel Albares, also spoke with Reynoso and expressed the Spanish government’s unease over the revelations, according to government sources. At least two U.S. agents stationed at the U.S. Embassy in Madrid, who were directly involved in recruiting the CNI spies, have been discreetly expelled from Spain.</p><p>The investigation into the spying operation began before the summer, when during a CNI security check, it was discovered that the two Spanish agents had accessed classified information that they did not need for their work, nor were authorized to know. The internal investigation confirmed that at least one of the agents, a middle-ranking official at the secret service, had been recruited by U.S. spies to obtain secret information in exchange for a large sum of money. According to sources close to the CNI, the agent was an area chief, one of the sections that are part of the intelligence division, while the other was his assistant.</p><p>When the CNI concluded its investigation, the director of the secret service, Esperanza Casteleiro, reported the case to the Prosecutor’s Office of Spain’s highest court, the National Assembly, which transferred the case to the Prosecutor’s Office of the High Court of Madrid, on the grounds that it was the competent authority. The Madrid tribunal then presented the complaint to the investigative courts of Plaza de Castilla.</p><figure><span><img alt="Margarita Robles" decoding="auto" height="275" srcset="https://images.english.elpais.com/resizer/_PyZjH5NdM4k53dWZsOq0v16wgc=/414x0/filters:focal(352x123:362x133)/cloudfront-eu-central-1.images.arcpublishing.com/prisa/GAH4LNRE6VFUFNYO2GGXBSPN3A.JPG 414w,https://images.english.elpais.com/resizer/65ucy8UnINhGGz9RdPt77kqGoEM=/828x0/filters:focal(352x123:362x133)/cloudfront-eu-central-1.images.arcpublishing.com/prisa/GAH4LNRE6VFUFNYO2GGXBSPN3A.JPG 640w,https://images.english.elpais.com/resizer/G5YVvdz_8MCDVVDp7iV_pnh6EO4=/980x0/filters:focal(352x123:362x133)/cloudfront-eu-central-1.images.arcpublishing.com/prisa/GAH4LNRE6VFUFNYO2GGXBSPN3A.JPG 1000w,https://images.english.elpais.com/resizer/tZlYyRwpLKvqDrLZSJClrd2hHEg=/1960x0/filters:focal(352x123:362x133)/cloudfront-eu-central-1.images.arcpublishing.com/prisa/GAH4LNRE6VFUFNYO2GGXBSPN3A.JPG 1960w" width="414" loading="lazy" src="https://images.english.elpais.com/resizer/_PyZjH5NdM4k53dWZsOq0v16wgc=/414x0/filters:focal(352x123:362x133)/cloudfront-eu-central-1.images.arcpublishing.com/prisa/GAH4LNRE6VFUFNYO2GGXBSPN3A.JPG" sizes="(min-width:1199px) 1155px,(min-width:1001px) calc(100vw - 44px),(min-width:768px) 767px, 100vw"></span><figcaption><span>Spain's Minister of Defense, Margarita Robles (l) and the U.S. ambassador to Spain, Julissa Reynoso, last May.</span><span>MINISTERIO DE DEFENSA</span></figcaption></figure><p>It was at that moment, according to the sources consulted, that the Spanish government decided to share the findings of the investigation with the United States and condemn what happened. The case is a very serious matter, since recruiting secret agents of a host state to betray their own country is considered an <a href="https://english.elpais.com/international/2023-12-05/ex-us-ambassador-who-put-evo-morales-on-the-map-arrested-for-spying-for-cuba.html">openly hostile act</a>. Such actions may be taken with enemy or adversary governments, but never with friends and allies. Sources from the Spanish intelligence service do not fully understand what happened. “What do Americans have to pay for if we give them everything they ask for?” they noted. These sources insist that Spain openly collaborates with the United States, and always exchanges information. According to these sources, the number of times in which Spain has refused to share information of interest to Washington is “between one and zero.”</p><p>These sources explain that, when the U.S. Ambassador Reynoso was summoned by Minister Robles, she said that she was not aware of the case. The U.S. ambassador allegedly claimed that the U.S. agents who had bribed the Spanish spies were working independently of her, in a program that was launched before current <a href="https://english.elpais.com/usa/2023-12-06/biden-says-he-might-not-have-run-for-reelection-if-not-for-threat-of-trump.html">President Joe Biden</a> arrived at the White House and that, for reasons unknown, had been maintained until now. Reynoso, the same sources add, apologized for what happened and promised utmost collaboration with the ongoing investigation. The case has left the U.S. in an embarrassing situation.</p><p>The Spanish Ministries of Defense and Foreign Affairs agreed to expel at least two American spies — some sources claim that there were more — who were involved in recruiting and bribing the CNI agents. The spies were expelled discreetly, as Washington rushed to remove them. For its part, the Madrid court sealed the investigation, and ordered the arrest of the two alleged CNI spies and for their homes to be searched. Both were taken to the Estremera prison module in Madrid, which is reserved for security forces personnel and prison officials who are serving a sentence or are in pre-trial, and is separated from the rest of the inmates. The CNI assistant was released last month, while his superior remains behind bars.</p><p>According to CNI sources, the arrest of the CNI area chief has shocked his colleagues, since he is a veteran agent and widely known in the center. Both he and his subordinate are accused of the crime of revealing secrets and could be sentenced to between six and 12 years in prison under Article 584 of the Penal Code, which punishes “a Spaniard who, with the purpose of helping a foreign power, association or international organization, procures, falsifies, disables or discloses information classified as reserved or secret, that is likely to harm national security or national defense.”</p><p>This is not the first time that the Spanish secret service has denounced one of its own agents for spying. In 2007, the CNI opened a case against former spy Roberto Flórez — who had worked for the center between 1992 and 2004 —, after classified documentation was found in his premises and two apartments he owned in Puerto de la Cruz in Tenerife. The CNI also seized a letter addressed to the Russian secret services in which Flórez offered to work for them in exchange for a first payment of $200,000. Although it could not be proven that Flórez had delivered the secret documents, the Provincial Court of Madrid sentenced him to 12 years in prison in 2010, which the Supreme Court later reduced to nine.</p><p><i>Sign up for </i><a href="https://plus.elpais.com/newsletters/lnp/1/333/?lang=en" target="_blank"><i>our weekly newsletter </i></a><i>to get more English-language news coverage from EL PAÍS USA Edition</i></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[If buying isn't owning, piracy isn't stealing (1334 pts)]]></title>
            <link>https://pluralistic.net/2023/12/08/playstationed/#tyler-james-hill</link>
            <guid>38579899</guid>
            <pubDate>Sat, 09 Dec 2023 08:31:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pluralistic.net/2023/12/08/playstationed/#tyler-james-hill">https://pluralistic.net/2023/12/08/playstationed/#tyler-james-hill</a>, See on <a href="https://news.ycombinator.com/item?id=38579899">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-7581">
	<!-- .entry-header -->

	
	
	<div>
		<p><!--
Tags:
playstation, sony, copyright, copyfight, drm, monopoly, enshittification, batgirl, road runner, financiazation, the end of ownership, ip

Summary:
"If buying isn't owning, piracy isn't stealing"; Hey look at this

URL:
https://pluralistic.net/2023/12/08/playstationed/

Title:
Pluralistic: "If buying isn't owning, piracy isn't stealing" (08 Dec 2023) playstationed

Bullet:
👨🏾‍💻

Separator:
_,.-'~'-.,__,.-'~'-.,__,.-'~'-.,__,.-'~'-.,__,.-'~'-.,_

Top Sources:
None

--><br>
<a href="https://pluralistic.net/2023/12/08/playstationed/"><img decoding="async" src="https://i0.wp.com/craphound.com/images/08Dec2023.jpg?w=840&amp;ssl=1" data-recalc-dims="1"></a></p>
<h2>Today's links</h2>
<ul>
<li><a href="https://pluralistic.net/2023/12/08/playstationed/#tyler-james-hill">"If buying isn't owning, piracy isn't stealing"</a>: When Big Content makes the paid version *worse* than the free one.
</li>
<li><a href="https://pluralistic.net/2023/12/08/playstationed/#linkdump">Hey look at this</a>: Delights to delectate.
</li>
<li><a href="https://pluralistic.net/2023/12/08/playstationed/#retro">This day in history</a>: 2003, 2008, 2018, 2022.
</li>
<li><a href="https://pluralistic.net/2023/12/08/playstationed/#bragsheet">Colophon</a>: Recent publications, upcoming/recent appearances, current writing projects, current reading
</li>
</ul>

<hr>
<p><a name="tyler-james-hill"></a><br>
<img decoding="async" alt="The forward deck of a rigged sailing ship. A ogrish caricatured millionaire stands at a podium sporting a gilded dollar-sign-shaped lever, in place of a ship's wheel. He wears a skull-and-bones pirate hat and eyepatch. He is holding up a fil reel with one white-gloved hand." src="https://i0.wp.com/craphound.com/images/no-property-no-piracy.jpg?w=840&amp;ssl=1" data-recalc-dims="1"></p>
<h2>"If buying isn't owning, piracy isn't stealing" (<a href="https://pluralistic.net/2023/12/08/playstationed/#tyler-james-hill">permalink</a>)</h2>
<p>20 years ago, I got in a (friendly) public spat with Chris Anderson, who was then the editor in chief of <em>Wired</em>. I'd publicly noted my disappointment with glowing <em>Wired</em> reviews of DRM-encumbered digital devices, prompting Anderson to call me unrealistic for expecting the magazine to condemn gadgets for their DRM:</p>
<p><a href="https://longtail.typepad.com/the_long_tail/2004/12/is_drm_evil.html">https://longtail.typepad.com/the_long_tail/2004/12/is_drm_evil.html</a></p>
<p>I replied in public, telling him that he'd misunderstood. This wasn't an issue of ideological purity – it was about good reviewing practice. <em>Wired</em> was telling readers to buy a product because it had features x, y and z, but at any time in the future, without warning, without recourse, the vendor could switch off any of those features:</p>
<p><a href="https://memex.craphound.com/2004/12/29/cory-responds-to-wired-editor-on-drm/">https://memex.craphound.com/2004/12/29/cory-responds-to-wired-editor-on-drm/</a></p>
<p>I proposed that all <em>Wired</em> endorsements for DRM-encumbered products should come with this disclaimer:</p>
<blockquote><p>
  WARNING: THIS DEVICE’S FEATURES ARE SUBJECT TO REVOCATION WITHOUT NOTICE, ACCORDING TO TERMS SET OUT IN SECRET NEGOTIATIONS. YOUR INVESTMENT IS CONTINGENT ON THE GOODWILL OF THE WORLD’S MOST PARANOID, TECHNOPHOBIC ENTERTAINMENT EXECS. THIS DEVICE AND DEVICES LIKE IT ARE TYPICALLY USED TO CHARGE YOU FOR THINGS YOU USED TO GET FOR FREE — BE SURE TO FACTOR IN THE PRICE OF BUYING ALL YOUR MEDIA OVER AND OVER AGAIN. AT NO TIME IN HISTORY HAS ANY ENTERTAINMENT COMPANY GOTTEN A SWEET DEAL LIKE THIS FROM THE ELECTRONICS PEOPLE, BUT THIS TIME THEY’RE GETTING A TOTAL WALK. HERE, PUT THIS IN YOUR MOUTH, IT’LL MUFFLE YOUR WHIMPERS.
</p></blockquote>
<p><em>Wired</em> didn't take me up on this suggestion.</p>
<p>But I was right. The ability to change features, prices, and availability of things you've <em>already paid for</em> is a powerful temptation to corporations. Inkjet printers were always a sleazy business, but once these printers got directly connected to the internet, companies like HP started pushing out "security updates" that modified your printer to make it reject the third-party ink you'd paid for:</p>
<p><a href="https://www.eff.org/deeplinks/2020/11/ink-stained-wretches-battle-soul-digital-freedom-taking-place-inside-your-printer">https://www.eff.org/deeplinks/2020/11/ink-stained-wretches-battle-soul-digital-freedom-taking-place-inside-your-printer</a></p>
<p>Now, this scam wouldn't work if you could just put things back the way they were before the "update," which is where the DRM comes in. A thicket of IP laws make reverse-engineering DRM-encumbered products into a <em>felony</em>. Combine always-on network access with indiscriminate criminalization of user modification, and the enshittification will follow, as surely as night follows day.</p>
<p>This is the root of all the right to repair shenanigans. Sure, companies withhold access to diagnostic codes and parts, but codes can be extracted and parts can be cloned. The real teeth in blocking repair comes from the law, not the tech. The company that makes McDonald's wildly unreliable McFlurry machines makes a fortune charging franchisees to fix these eternally broken appliances. When a third party threatened this racket by reverse-engineering the DRM that blocked independent repair, they got buried in legal threats:</p>
<p><a href="https://pluralistic.net/2021/04/20/euthanize-rentier-enablers/#cold-war">https://pluralistic.net/2021/04/20/euthanize-rentier-enablers/#cold-war</a></p>
<p>Everybody loves this racket. In Poland, a team of security researchers at the OhMyHack conference just presented their teardown of the anti-repair features in NEWAG Impuls <em>locomotives</em>. NEWAG boobytrapped their trains to try and detect if they've been independently serviced, and to respond to any unauthorized repairs by bricking themselves:</p>
<p><a href="https://mamot.fr/@q3k@hackerspace.pl/111528162905209453">https://mamot.fr/@q3k@hackerspace.pl/111528162905209453</a></p>
<p>Poland is part of the EU, meaning that they are required to uphold the provisions of the 2001 EU Copyright Directive, including Article 6, which bans this kind of reverse-engineering. The researchers are planning to present their work again at the Chaos Communications Congress in Hamburg this month – Germany is also a party to the EUCD. The threat to researchers from presenting this work is real – but so is the threat to conferences that host them:</p>
<p><a href="https://www.cnet.com/tech/services-and-software/researchers-face-legal-threats-over-sdmi-hack/">https://www.cnet.com/tech/services-and-software/researchers-face-legal-threats-over-sdmi-hack/</a></p>
<p>20 years ago, Chris Anderson told me that it was unrealistic to expect tech companies to refuse demands for DRM from the entertainment companies whose media they hoped to play. My argument – then and now – was that any tech company that sells you a gadget that can have its features revoked is defrauding you. You're paying for x, y and z – and if they are contractually required to remove x and y on demand, they are selling you something that you can't rely on, without making that clear to you.</p>
<p>But it's worse than that. When a tech company designs a device for remote, irreversible, nonconsensual downgrades, they <em>invite</em> both external and internal parties to demand those downgrades. Like Pavel Chekov says, a phaser on the bridge in Act I is going to go off by Act III. Selling a product that can be remotely, irreversibly, nonconsensually downgraded <em>inevitably</em> results in  the worst person at the product-planning meeting proposing to do so. The fact that there are no penalties for doing so makes it impossible for the better people in that meeting to win the ensuing argument, leading to the moral injury of seeing a product you care about reduced to a pile of shit:</p>
<p><a href="https://pluralistic.net/2023/11/25/moral-injury/#enshittification">https://pluralistic.net/2023/11/25/moral-injury/#enshittification</a></p>
<p>But even if everyone at that table is a swell egg who wouldn't dream of enshittifying the product, the existence of a remote, irreversible, nonconsensual downgrade feature makes the product vulnerable to <em>external</em> actors who will demand that it be used. Back in 2022, Adobe informed its customers that it had lost its deal to include Pantone colors in Photoshop, Illustrator and other "software as a service" packages. As a result, users would now have to start paying a monthly fee to see their own, completed images. Fail to pay the fee and all the Pantone-coded pixels in your artwork would just show up as black:</p>
<p><a href="https://pluralistic.net/2022/10/28/fade-to-black/#trust-the-process">https://pluralistic.net/2022/10/28/fade-to-black/#trust-the-process</a></p>
<p>Adobe blamed this on Pantone, and there was lots of speculation about what had happened. Had Pantone jacked up its price to Adobe, so Adobe passed the price on to its users in the hopes of embarrassing Pantone? Who knows? Who <em>can</em> know? That's the point: you invested in Photoshop, you spent money and time creating images with it, but you have no way to know whether or how you'll be able to access those images in the future. Those terms can change at any time, and if you don't like it, you can go fuck yourself.</p>
<p>These companies are all run by CEOs who got their MBAs at Darth Vader University, where the first lesson is "I have altered the deal, pray I don't alter it further." Adobe <em>chose</em> to design its software so it would be vulnerable to this kind of demand, and then its <em>customers</em> paid for that choice. Sure, Pantone are dicks, but this is <em>Adobe's</em> fault. They stuck a KICK ME sign to your back, and Pantone obliged.</p>
<p>This keeps happening and it's <em>gonna</em> keep happening. Last week, Playstation owners who'd bought (or "bought") Warner TV shows got messages telling them that Warner had walked away from its deal to sell videos through the Playstation store, and so all the videos they'd paid for were going to be deleted forever. They wouldn't even get refunds (to be clear, refunds would also be bullshit – when I was a bookseller, I didn't get to break into your house and steal the books I'd sold you, not even if I left some cash on your kitchen table).</p>
<p>Sure, Warner is an unbelievably shitty company run by the single most guillotineable executive in all of Southern California, the loathsome David Zaslav, who oversaw the merger of Warner with Discovery. Zaslav is the creep who figured out that he could make more money <em>cancelling completed movies and TV shows</em> and taking a tax writeoff than he stood to make by releasing them:</p>
<p><a href="https://aftermath.site/there-is-no-piracy-without-ownership">https://aftermath.site/there-is-no-piracy-without-ownership</a></p>
<p>Imagine putting years of your life into making a program – showing up on set at 5AM and leaving your kids to get their own breakfast, performing stunts that could maim or kill you, working 16-hour days during the acute phase of the covid pandemic and driving home in the night, only to have this absolute <em>turd</em> of a man <em>delete</em> the program before anyone could see it, forever, to get a minor tax advantage. Talk about moral injury!</p>
<p>But without Sony's complicity in designing a remote, irreversible, nonconsensual downgrade feature into the Playstation, Zaslav's war on art and creative workers would be limited to material that hadn't been released yet. Thanks to Sony's awful choices, David Zaslav can break into your house, steal your movies – and he doesn't even have to leave a twenty on your kitchen table.</p>
<p>The point here – the point I made 20 years ago to Chris Anderson – is that <em>this is the foreseeable, inevitable result</em> of designing devices for remote, irreversible, nonconsensual downgrades. Anyone who was paying attention should have figured that out in the GW Bush administration. Anyone who does this <em>today</em>? Absolute flaming garbage.</p>
<p>Sure, Zaslav deserves to be staked out over and anthill and slathered in high-fructose corn syrup. But save the next anthill for the Sony exec who shipped a product that would let Zaslav come into your home and rob you. That piece of shit <em>knew what they were doing</em> and <em>they did it anyway</em>. <em>Fuck</em> them. Sideways. With a <em>brick</em>.</p>
<p>Meanwhile, the studios keep making the case for stealing movies rather than paying for them. As Tyler James Hill wrote: "If buying isn't owning, piracy isn't stealing":</p>
<p><a href="https://bsky.app/profile/tylerjameshill.bsky.social/post/3kflw2lvam42n">https://bsky.app/profile/tylerjameshill.bsky.social/post/3kflw2lvam42n</a></p>
<p>(<i>Image: <a href="https://pxhere.com/en/photo/218986">Alan Levine</a>, <a href="https://creativecommons.org/licenses/by/2.0/">CC BY 2.0</a> modified</i>)</p>
<hr>

<h2>Hey look at this (<a href="https://pluralistic.net/2023/12/08/playstationed/#linkdump">permalink</a>)</h2>
<p><img decoding="async" src="https://i0.wp.com/craphound.com/images/heylookatthis.jpg?w=840&amp;ssl=1" data-recalc-dims="1"></p>
<ul>
<li>Taking advantage of the Purge by building dense multifamily housing units Palo Alto <a href="https://twitter.com/tomgara/status/1731520311206490440">https://twitter.com/tomgara/status/1731520311206490440</a> (h/t Super Punch)
</li>
<li>
<p>Electing the Doge of Venice: analysis of a 13th Century protocol <a href="https://www.hpl.hp.com/techreports/2007/HPL-2007-28R1.html">https://www.hpl.hp.com/techreports/2007/HPL-2007-28R1.html</a> (h/t Schneier)</p>
</li>
<li>
<p>23andMe just sent out an email trying to trick customers into accepting a TOS change that will prevent you from suing them after they literally lost your genome to thieves <a href="https://mamot.fr/@thomasfuchs@hachyderm.io/111531294948620738">https://mamot.fr/@thomasfuchs@hachyderm.io/111531294948620738</a></p>
</li>
</ul>
<hr>
<p><a name="retro"></a><br>
<img decoding="async" alt="A Wayback Machine banner." src="https://i0.wp.com/craphound.com/images/wayback-machine-hed-796x416.png?resize=796%2C416&amp;ssl=1" data-recalc-dims="1"></p>
<h2>This day in history (<a href="https://pluralistic.net/2023/12/08/playstationed/#retro">permalink</a>)</h2>
<p>#20yrsago Beat Me Daddy (Eight to the Bar) <a href="https://web.archive.org/web/20040112231612/http://www.forteanbureau.com/dec2003/Doctorow/index.html">https://web.archive.org/web/20040112231612/http://www.forteanbureau.com/dec2003/Doctorow/index.html</a></p>
<p>#15yrsago New Rochelle school board mutilates books to protect children <a href="https://web.archive.org/web/20081210080026/http://www.newrochelletalk.com/?q=node/288">https://web.archive.org/web/20081210080026/http://www.newrochelletalk.com/?q=node/288</a></p>
<p>#15yrsago  How to Pay for National Health Insurance <a href="https://ritholtz.com/2008/12/how-to-pay-for-national-health-insurance/">https://ritholtz.com/2008/12/how-to-pay-for-national-health-insurance/</a></p>
<p>#5yrsago Literal breadboarding, with toast and Vegemite <a href="https://twitter.com/lukeweston/status/1071220362606608385">https://twitter.com/lukeweston/status/1071220362606608385</a></p>
<p>#5yrsago $30 plug-and-play kit converts a Bird scooter into a “personal scooter” <a href="https://hackaday.com/2018/12/07/liberating-birds-for-a-cheap-electric-scooter/">https://hackaday.com/2018/12/07/liberating-birds-for-a-cheap-electric-scooter/</a></p>
<p>#5yrsago An annual Christmas craft tradition: the Die Hard Air Duct ornament <a href="https://web.archive.org/web/20171214160218/https://unlikelywords.com/2016/12/23/how-to-make-your-own-die-hard-christmas-tree-ornament/">https://web.archive.org/web/20171214160218/https://unlikelywords.com/2016/12/23/how-to-make-your-own-die-hard-christmas-tree-ornament/</a></p>
<p>#5yrsago Top FTC official is so such a corporate shill that he has conflicts of interest for 100 companies, including Equifax and Facebook <a href="https://www.theverge.com/2018/12/6/18129572/facebook-uber-ftc-conflict-interest-andrew-smith">https://www.theverge.com/2018/12/6/18129572/facebook-uber-ftc-conflict-interest-andrew-smith</a></p>
<p>#5yrsago Ha-ha, only serious: McSweeney’s on price-gouging in the emergency room <a href="https://www.mcsweeneys.net/articles/welcome-to-our-modern-hospital-where-if-you-want-to-know-a-price-you-can-go-fuck-yourself">https://www.mcsweeneys.net/articles/welcome-to-our-modern-hospital-where-if-you-want-to-know-a-price-you-can-go-fuck-yourself</a></p>
<p>#1yrago One weird trick to make monopolies self-destruct <a href="https://pluralistic.net/2022/12/08/one-last-job/#icahns-raiders">https://pluralistic.net/2022/12/08/one-last-job/#icahns-raiders</a></p>
<hr>
<p><a name="bragsheet"></a><br>
<img decoding="async" src="https://i0.wp.com/craphound.com/images/colophonimages.jpeg?w=840&amp;ssl=1" data-recalc-dims="1"></p>
<h2>Colophon (<a href="https://pluralistic.net/2023/12/08/playstationed/#bragsheet">permalink</a>)</h2>
<p>Today's top sources:</p>
<p>Currently writing:</p>
<ul>
<li>A Little Brother short story about DIY insulin PLANNING
</li>
<li>
<p>Picks and Shovels, a Martin Hench noir thriller about the heroic era of the PC. FORTHCOMING TOR BOOKS JAN 2025</p>
</li>
<li>
<p>The Bezzle, a Martin Hench noir thriller novel about the prison-tech industry. FORTHCOMING TOR BOOKS FEB 2024</p>
</li>
<li>
<p>Vigilant, Little Brother short story about remote invigilation. FORTHCOMING ON TOR.COM</p>
</li>
<li>
<p>Spill, a Little Brother short story about pipeline protests. FORTHCOMING ON TOR.COM</p>
</li>
</ul>
<p>Latest podcast: Don’t Be Evil <a href="https://craphound.com/articles/2023/12/03/dont-be-evil/">https://craphound.com/articles/2023/12/03/dont-be-evil/</a><br>
Upcoming appearances:</p>
<ul>
<li>The Geneva Dialog (Dec 7)<br>
<a href="https://genevadialogue.ch/event/geneva-manual-event/">https://genevadialogue.ch/event/geneva-manual-event/</a></li>
</ul>
<p>Recent appearances:</p>
<ul>
<li>AI needs to work with humans — not replace us (CBC IDEAS)<br>
<a href="https://www.cbc.ca/radio/ideas/artificial-intelligence-provocation-ideas-festival-1.7046841">https://www.cbc.ca/radio/ideas/artificial-intelligence-provocation-ideas-festival-1.7046841</a>
</li>
<li>
<p>Explore the Future of the 🔥 Climate and Information Climate (Andrew Revkin)<br>
<a href="https://www.youtube.com/watch?v=-OGT-cvs4_Q">https://www.youtube.com/watch?v=-OGT-cvs4_Q</a></p>
</li>
<li>
<p>Digital Markets Act; Interoperability; Entrenchment; Copyright; "What-About-Ism" (Digital Markets Research Hub)<br>
<a href="https://www.youtube.com/watch?v=Xm23pO5_WKM">https://www.youtube.com/watch?v=Xm23pO5_WKM</a></p>
</li>
</ul>
<p>Latest books:</p>
<ul>
<li>"The Lost Cause:" a solarpunk novel of hope in the climate emergency, Tor Books (US), Head of Zeus (UK), November 2023 (<a href="http://lost-cause.org/">http://lost-cause.org</a>). Signed, personalized copies at Dark Delicacies (<a href="https://www.darkdel.com/store/p3007/Pre-Order_Signed_Copies%3A_The_Lost_Cause_HB.html#/">https://www.darkdel.com/store/p3007/Pre-Order_Signed_Copies%3A_The_Lost_Cause_HB.html#/</a>)
</li>
<li>
<p>"The Internet Con": A nonfiction book about interoperability and Big Tech (Verso) September 2023 (<a href="http://seizethemeansofcomputation.org/">http://seizethemeansofcomputation.org</a>). Signed copies at Book Soup (<a href="https://www.booksoup.com/book/9781804291245">https://www.booksoup.com/book/9781804291245</a>).</p>
</li>
<li>
<p>"Red Team Blues": "A grabby, compulsive thriller that will leave you knowing more about how the world works than you did before." Tor Books <a href="http://redteamblues.com/">http://redteamblues.com</a>. Signed copies at Dark Delicacies (US): <a href="https://www.darkdel.com/store/p2873/Wed%2C_Apr_26th_6pm%3A_Red_Team_Blues%3A_A_Martin_Hench_Novel_HB.html#/"> and Forbidden Planet (UK): </a><a href="https://forbiddenplanet.com/385004-red-team-blues-signed-edition-hardcover/">https://forbiddenplanet.com/385004-red-team-blues-signed-edition-hardcover/</a>.</p>
</li>
<li>
<p>"Chokepoint Capitalism: How to Beat Big Tech, Tame Big Content, and Get Artists Paid, with Rebecca Giblin", on how to unrig the markets for creative labor, Beacon Press/Scribe 2022 <a href="https://chokepointcapitalism.com/">https://chokepointcapitalism.com</a></p>
</li>
<li>
<p>"Attack Surface": The third Little Brother novel, a standalone technothriller for adults. The <em>Washington Post</em> called it "a political cyberthriller, vigorous, bold and savvy about the limits of revolution and resistance." Order signed, personalized copies from Dark Delicacies <a href="https://www.darkdel.com/store/p1840/Available_Now%3A_Attack_Surface.html">https://www.darkdel.com/store/p1840/Available_Now%3A_Attack_Surface.html</a></p>
</li>
<li>
<p>"How to Destroy Surveillance Capitalism": an anti-monopoly pamphlet analyzing the true harms of surveillance capitalism and proposing a solution. <a href="https://onezero.medium.com/how-to-destroy-surveillance-capitalism-8135e6744d59?sk=f6cd10e54e20a07d4c6d0f3ac011af6b">https://onezero.medium.com/how-to-destroy-surveillance-capitalism-8135e6744d59?sk=f6cd10e54e20a07d4c6d0f3ac011af6b</a>) (signed copies: <a href="https://www.darkdel.com/store/p2024/Available_Now%3A__How_to_Destroy_Surveillance_Capitalism.html">https://www.darkdel.com/store/p2024/Available_Now%3A__How_to_Destroy_Surveillance_Capitalism.html</a>)</p>
</li>
<li>
<p>"Little Brother/Homeland": A reissue omnibus edition with a new introduction by Edward Snowden: <a href="https://us.macmillan.com/books/9781250774583">https://us.macmillan.com/books/9781250774583</a>; personalized/signed copies here: <a href="https://www.darkdel.com/store/p1750/July%3A__Little_Brother_%26_Homeland.html">https://www.darkdel.com/store/p1750/July%3A__Little_Brother_%26_Homeland.html</a></p>
</li>
<li>
<p>"Poesy the Monster Slayer" a picture book about monsters, bedtime, gender, and kicking ass. Order here: <a href="https://us.macmillan.com/books/9781626723627">https://us.macmillan.com/books/9781626723627</a>. Get a personalized, signed copy here: <a href="https://www.darkdel.com/store/p2682/Corey_Doctorow%3A_Poesy_the_Monster_Slayer_HB.html#/">https://www.darkdel.com/store/p2682/Corey_Doctorow%3A_Poesy_the_Monster_Slayer_HB.html#/</a>.</p>
</li>
</ul>
<p>Upcoming books:</p>
<ul>
<li>The Bezzle: a sequel to "Red Team Blues," about prison-tech and other grifts, Tor Books, February 2024
</li>
<li>
<p>Picks and Shovels: a sequel to "Red Team Blues," about the heroic era of the PC, Tor Books, February 2025</p>
</li>
<li>
<p>Unauthorized Bread: a graphic novel adapted from my novella about refugees, toasters and DRM, FirstSecond, 2025</p>
</li>
</ul>
<hr>
<p><img decoding="async" src="https://i0.wp.com/craphound.com/images/by.svg.png?w=840&amp;ssl=1" data-recalc-dims="1"></p>
<p>This work – excluding any serialized fiction – is licensed under a Creative Commons Attribution 4.0 license. That means you can use it any way you like, including commercially, provided that you attribute it to me, Cory Doctorow, and include a link to pluralistic.net.</p>
<p><a href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></p>
<p>Quotations and images are not included in this license; they are included either under a limitation or exception to copyright, or on the basis of a separate license. Please exercise caution.</p>
<hr>
<h2>How to get Pluralistic:</h2>
<p>Blog (no ads, tracking, or data-collection):</p>
<p><a href="http://pluralistic.net/">Pluralistic.net</a></p>
<p>Newsletter (no ads, tracking, or data-collection):</p>
<p><a href="https://pluralistic.net/plura-list">https://pluralistic.net/plura-list</a></p>
<p>Mastodon (no ads, tracking, or data-collection):</p>
<p><a href="https://mamot.fr/@pluralistic">https://mamot.fr/@pluralistic</a></p>
<p>Medium (no ads, paywalled):</p>
<p><a href="https://doctorow.medium.com/">https://doctorow.medium.com/</a></p>
<p>Twitter (mass-scale, unrestricted, third-party surveillance and advertising):</p>
<p><a href="https://twitter.com/doctorow">https://twitter.com/doctorow</a></p>
<p>Tumblr (mass-scale, unrestricted, third-party surveillance and advertising):</p>
<p><a href="https://mostlysignssomeportents.tumblr.com/tagged/pluralistic">https://mostlysignssomeportents.tumblr.com/tagged/pluralistic</a></p>
<p>"<em>When life gives you SARS, you make sarsaparilla</em>" -Joey "Accordion Guy" DeVilla</p>

	</div><!-- .entry-content -->

	<!-- .entry-footer -->
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A connection between after-hours work and decreased productivity (184 pts)]]></title>
            <link>https://slack.com/blog/news/the-surprising-connection-between-after-hours-work-and-decreased-productivity</link>
            <guid>38579890</guid>
            <pubDate>Sat, 09 Dec 2023 08:29:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://slack.com/blog/news/the-surprising-connection-between-after-hours-work-and-decreased-productivity">https://slack.com/blog/news/the-surprising-connection-between-after-hours-work-and-decreased-productivity</a>, See on <a href="https://news.ycombinator.com/item?id=38579890">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-js-content="true" data-js-dom="toc"><p><em><strong>Quick take:</strong> How do you spend your time at work and what is it costing you? Slack’s Workforce Index, based on survey responses from more than 10,000 desk workers around the globe, uncovers new findings on how to structure the workday to maximize productivity and strengthen employee well-being and satisfaction. </em></p>
<p>Key learnings include:</p>
<ul><li>Employees who log off at the end of the workday register 20% higher productivity scores than those who feel obligated to work after hours.</li>
<li>Making time for breaks during the workday improves employee productivity and well-being, and yet half of all desk workers say they rarely or never take breaks.</li>
<li>On average, desk workers say that the ideal amount of focus time is around four hours a day, and more than two hours a day in meetings is the tipping point at which a majority of workers feel overburdened by meetings.</li>
<li>Three out of every four desk workers report working in the 3 to 6pm timeframe, but of those, only one in four consider these hours highly productive.</li>
</ul>

<p>For decades, putting in extra hours at the office was seen by many as a sign of hard work and productivity, even a badge of honor. But new research from Slack shows despite that longstanding perception, working after hours is more often associated with <em>lower</em> levels of productivity—and could be a red flag that an employee is juggling too many tasks and needs help prioritizing and balancing their time.</p>
<p>The latest results from the Workforce Index, Slack’s survey of more than 10,000 desk workers, show the productivity gap depends on what’s driving workers to burn the midnight (or early morning) oil. About two out of every five desk workers (37%) are logging on outside of their company’s standard hours at least weekly, and more than half (54%) of these workers say it’s because they feel pressured to, not because they choose to.</p>
<p>Employees who feel <em>obligated</em> to work after-hours register 20% lower productivity scores than those who log off at the end of the standard workday. They also report:</p>
<ul><li>2.1x worse work-related stress</li>
<li>1.7x times lower satisfaction with their overall working environment</li>
<li>2x greater burnout</li>
</ul>
<section><figure><img alt="Employees who feel pressured to work after hours report 20% lower productivity throughout the day" loading="lazy" data-src="https://d34u8crftukxnk.cloudfront.net/slackpress/prod/sites/6/Workforce-Lab-Blog-Graphics-Pulse-11_V2_After-Hours-Horchata.png" data-srcset="" src="https://d34u8crftukxnk.cloudfront.net/slackpress/prod/sites/6/Workforce-Lab-Blog-Graphics-Pulse-11_V2_After-Hours-Horchata.png"></figure></section>
<p>Both groups say around 70% of their time spent working is productive—a sign that those working extra hours are putting in as much effort as their colleagues—but those who work after hours are 50% more likely to say their productivity is blocked by competing priorities compared to those who log a standard workday.</p>
<p>On the flip side, employees who work outside of standard hours by choice, to better suit their schedule or to pursue personal ambitions, report no negative impacts and even a slight uptick in their wellness and productivity scores.</p>
<div><blockquote><p>“We’ve long seen a focus on quantity over quality across many aspects of work, from how we spend our time to how we define productivity. Constantly feeling like you need to catch up is hurting employees and businesses. This underscores the importance of building a culture of trust where employees feel safe enough to speak up when they need help prioritizing and have the right balance of time in the work day to get work done.”</p></blockquote></div>
<h2>When it comes to productivity, it’s not quantity of time spent working, it’s quality</h2>
<p>Results from the Workforce Index show that a significant portion of desk workers across the globe are struggling to balance their time at work, with different job tiers experiencing this problem in different ways.</p>
<p>More than one in four desk workers (27%), including more than half (55%) of executives, say they spend too much time in meetings. A similar share (25%) of all desk workers, including 43% of executives, say they spend too much time in email.</p>
<p>One in five (20%) don’t have enough time to connect with coworkers, and this problem is most pronounced among more junior employees.</p>
<p>Alarmingly, the data shows that many workers across all levels are plowing through their daily tasks without any down time: Half of desk workers surveyed (50%) say they rarely or never take breaks during the workday. These workers are 1.7x more likely to experience burnout.</p>
<p>Their break-taking counterparts, on the other hand, show 62% higher scores for work-life balance, 43% greater ability to manage stress and anxiety, 43% greater overall satisfaction, and—perhaps surprisingly—13% higher scores for productivity.</p>
<div><blockquote><p>“Why did we all come to believe that we are more productive if we are always on and that we need to burn out in order to succeed? It goes back to the first Industrial Revolution, when we started revering machines. The goal of machines is to minimize downtime. But for the human operating system, downtime is not a bug, it’s a feature. Elite athletes know that recovery is part of peak performance. Downtime is a productivity multiplier.”</p></blockquote></div><section><figure><img alt="Workers who regularly take breaks have 13% higher productivity" loading="lazy" data-src="https://d34u8crftukxnk.cloudfront.net/slackpress/prod/sites/6/Workforce-Lab-Blog-Graphics-Pulse-11_V2_Taking-Breaks-Horchata.png" data-srcset="" src="https://d34u8crftukxnk.cloudfront.net/slackpress/prod/sites/6/Workforce-Lab-Blog-Graphics-Pulse-11_V2_Taking-Breaks-Horchata.png"></figure></section>
<h2>Prime productivity hours: Whether you’re a morning person or a night owl, the afternoon slump is real</h2>
<p>On average, desk workers say that 70% of their time at work is productive. When asked about prime hours for productivity, answers vary widely, with some desk workers preferring the morning and others preferring the evening. But no matter their preference, a majority (71%) of desk workers agree that the late afternoon is the worst time for work, with productivity plummeting between the hours of 3 and 6pm.</p>
<section><figure><img alt="" loading="lazy" data-src="https://d34u8crftukxnk.cloudfront.net/slackpress/prod/sites/6/Workforce-Lab-Blog-Graphics-Pulse-11_V2_Afternoon-Slump-Purple.png" data-srcset="" src="https://d34u8crftukxnk.cloudfront.net/slackpress/prod/sites/6/Workforce-Lab-Blog-Graphics-Pulse-11_V2_Afternoon-Slump-Purple.png"></figure></section>
<p>While three out of every four desk workers report working in the 3-6pm timeframe, only one in four consider these hours highly productive.</p>
<div><blockquote><p>“This goes to show that productivity isn’t linear. Productivity happens in bursts, on and off throughout a day, not necessarily in prescribed windows of time, and definitely not for eight consecutive hours. The ‘afternoon slump’ shouldn’t be seen as a bad thing; for many workers this could be an ideal time to take that break that will boost their overall productivity for the day.”</p></blockquote></div>
<p>The most productive people use time management strategies. They are 1.6x more likely to block time to complete specific tasks, 1.7x more likely to only check email at specific times, and 2.2x more likely to set focus timers.</p>
<h2>The “Goldilocks Zone” for work: How to balance your workday to optimize your productivity</h2>
<p>While there’s no one-size-fits-all schedule that applies across all industries, roles, and job levels, a close examination of the data reveals a formula emerging to set employees up for success.</p>
<p>Regardless of job tier, the research shows a “Goldilocks Zone” for the ideal balance of focus time, collaboration time, social connection, and downtime. On average, desk workers say the ideal amount of focus time is around four hours a day. More than two hours a day in meetings is the tipping point at which a majority of workers say they’re spending “too much time” in meetings, with a similar pattern emerging across all job levels. People who say they spend too much time in meetings are more than twice as likely to say they don’t have enough time to focus.</p>
<p>In contrast, about 10% of desk workers, most common among employees with less than one year at a company and those under 30, say they spend <em>too little</em> time in meetings, and this is also associated with decreased sense of belonging and productivity.</p>
<div><blockquote><p>“Focus time, collaboration time, connection, and rest are like the macronutrients of a workday. The right balance gives you the energy you need to work your best. We cannot consider these critical components of our work in silos. To be our most effective, we must create the space for collaborative work and for focused work.”</p></blockquote></div>
<h2>What do desk workers most want from AI? Assistance and automation to rightsize the meeting load and free up time</h2>
<p>At the same time that desk workers are struggling with time management, many are also excited about the potential of AI tools to give them more command over balancing their time.</p>
<p>An overwhelming majority of executives—94%—feel some urgency to incorporate AI into their organizations, with half of executives saying they feel a strong sense of urgency. And yet, our survey shows that adoption of AI is still in its infancy, with only one in five desk workers reporting that they have used AI tools for work.</p>
<p>Given the low adoption, it’s not surprising that most desk workers (more than 80%) say that AI tools are not improving their productivity at work—yet. But they’re anticipating that AI will assist with one of the biggest struggles of the workday: meetings. The top three activities that employees expect AI will provide the most value in the future are 1) meeting notes and recaps 2) writing assistance and 3) automation of workflows.</p>
<div><blockquote><p>“People at every job level may be shocked to see that more than two hours of meetings a day reduces productivity. It may feel unrealistic to many team leaders to try to hit that target today. But that’s where the newest generation of AI tools could be a lifesaver. An AI assistant that could accurately summarize meeting notes and automate common workflows could be the key that frees up our time and helps us to unlock the balance we need to set ourselves up for success.”</p></blockquote></div>
<p><strong>Are you working hard or working smart? Dive deeper into what the data shows about how to optimize your time at work in our webinar <em><a href="https://slack.com/events/new-research-uncovers-the-secret-to-a-productive-workday" target="_blank" rel="noopener noreferrer">New research uncovers the secret to a productive workday. </a></em><a href="https://slack.com/events/new-research-uncovers-the-secret-to-a-productive-workday" target="_blank" rel="noopener noreferrer"><svg width="17" height="17" viewBox="0 0 54 54" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><path d="M19.712.133a5.381 5.381 0 0 0-5.376 5.387 5.381 5.381 0 0 0 5.376 5.386h5.376V5.52A5.381 5.381 0 0 0 19.712.133m0 14.365H5.376A5.381 5.381 0 0 0 0 19.884a5.381 5.381 0 0 0 5.376 5.387h14.336a5.381 5.381 0 0 0 5.376-5.387 5.381 5.381 0 0 0-5.376-5.386" fill="#44BEDF"></path><path d="M53.76 19.884a5.381 5.381 0 0 0-5.376-5.386 5.381 5.381 0 0 0-5.376 5.386v5.387h5.376a5.381 5.381 0 0 0 5.376-5.387m-14.336 0V5.52A5.381 5.381 0 0 0 34.048.133a5.381 5.381 0 0 0-5.376 5.387v14.364a5.381 5.381 0 0 0 5.376 5.387 5.381 5.381 0 0 0 5.376-5.387" fill="#2EB67D"></path><path d="M34.048 54a5.381 5.381 0 0 0 5.376-5.387 5.381 5.381 0 0 0-5.376-5.386h-5.376v5.386A5.381 5.381 0 0 0 34.048 54m0-14.365h14.336a5.381 5.381 0 0 0 5.376-5.386 5.381 5.381 0 0 0-5.376-5.387H34.048a5.381 5.381 0 0 0-5.376 5.387 5.381 5.381 0 0 0 5.376 5.386" fill="#ECB22E"></path><path d="M0 34.249a5.381 5.381 0 0 0 5.376 5.386 5.381 5.381 0 0 0 5.376-5.386v-5.387H5.376A5.381 5.381 0 0 0 0 34.25m14.336-.001v14.364A5.381 5.381 0 0 0 19.712 54a5.381 5.381 0 0 0 5.376-5.387V34.25a5.381 5.381 0 0 0-5.376-5.387 5.381 5.381 0 0 0-5.376 5.387" fill="#E01E5A"></path></g></svg></a></strong></p>
<h2>Methodology</h2>
<p><em>The Workforce Index surveyed 10,333 workers in the U.S., Australia, France, Germany, Japan and the U.K. between August 24 and September 15, 2023. The survey was administered by Qualtrics and did not target Slack or Salesforce employees or customers. Respondents were all desk workers, defined as employed full-time (30 or more hours per week) and either having one of the roles listed below or saying they “work with data, analyze information or think creatively”: executive management (e.g. president/partner, CEO, CFO, C-suite), senior management (e.g. executive VP, senior VP), middle management (e.g. department/group manager, VP), junior management (e.g. manager, team leader), senior staff (i.e. non-management), skilled office worker (e.g. analyst, graphic designer). For brevity, we refer to the survey population as “desk-based” or “desk workers.”</em></p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[EU strikes deal to regulate ChatGPT, AI tech (191 pts)]]></title>
            <link>https://www.bloomberg.com/news/articles/2023-12-08/eu-strikes-deal-to-regulate-chatgpt-other-ai-in-landmark-act</link>
            <guid>38579170</guid>
            <pubDate>Sat, 09 Dec 2023 06:20:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bloomberg.com/news/articles/2023-12-08/eu-strikes-deal-to-regulate-chatgpt-other-ai-in-landmark-act">https://www.bloomberg.com/news/articles/2023-12-08/eu-strikes-deal-to-regulate-chatgpt-other-ai-in-landmark-act</a>, See on <a href="https://news.ycombinator.com/item?id=38579170">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
    <section>
        <h3>Why did this happen?</h3>
        <p>Please make sure your browser supports JavaScript and cookies and that you are not
            blocking them from loading.
            For more information you can review our <a href="https://www.bloomberg.com/notices/tos">Terms of
                Service</a> and <a href="https://www.bloomberg.com/notices/tos">Cookie Policy</a>.</p>
    </section>
    <section>
        <h3>Need Help?</h3>
        <p>For inquiries related to this message please <a href="https://www.bloomberg.com/feedback">contact
            our support team</a> and provide the reference ID below.</p>
        <p>Block reference ID:</p>
    </section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[PysimpleGUI (246 pts)]]></title>
            <link>https://github.com/PySimpleGUI/PySimpleGUI</link>
            <guid>38579161</guid>
            <pubDate>Sat, 09 Dec 2023 06:16:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/PySimpleGUI/PySimpleGUI">https://github.com/PySimpleGUI/PySimpleGUI</a>, See on <a href="https://news.ycombinator.com/item?id=38579161">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Logo%20with%20text%20for%20GitHub%20Top.png"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Logo%20with%20text%20for%20GitHub%20Top.png" alt="User Interfaces for Humans"></a>
  </p><h2 tabindex="-1" dir="auto">User Interfaces for Humans<sup>TM</sup></h2>


<p dir="auto">Transforms the tkinter, Qt, WxPython, and Remi (browser-based) GUI frameworks into a simpler interface.  The window definition is simplified by using Python core data types understood by beginners (lists and dictionaries). Further simplification happens by changing event handling from a callback-based model to a message passing one.</p>
<p dir="auto">Your code is not <em>required</em> to have an object oriented architecture which makes the package usable by a larger audience. While the architecture is simple to understand, it does not <em>necessarily</em> limit you to only simple problems.</p>
<p dir="auto">Some programs are not well-suited for PySimpleGUI however.  By definition, PySimpleGUI implements a subset of the underlying GUI frameworks' capabilities.  It's difficult to define exactly which programs are well suited for PySimpleGUI and which are not.  It depends on the details of your program.  Duplicating Excel in every detail is an example of something not well suited for PySimpleGUI.</p>
<p dir="auto"><a href="https://github.com/PySimpleGUI/PySimpleGUI/blob/master/readme.ja.md">Japanese version of this readme</a>.</p>
<p dir="auto">PySimpleGUI needs your support.  If you find PySimpleGUI useful, please consider sponsoring the project on GitHub or BuyMeACoffee.  It's expensive working full-time on PySimpleGUI and also paying for ongoing expenses (domains, artists, software, consultants, sponsoring open source projects).</p>
<p dir="auto"><a href="https://www.buymeacoffee.com/PySimpleGUI" rel="nofollow"><img src="https://camo.githubusercontent.com/0a290f56e8d4bfbdd3bb41c1192ea41c8ef744a5b3e70cf7f5eb46ef97871e78/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f76322f617269616c2d79656c6c6f772e706e67" alt="Buy Me A Coffee" width="217px" data-canonical-src="https://cdn.buymeacoffee.com/buttons/v2/arial-yellow.png"></a></p>
<p dir="auto"><a href="https://github.com/sponsors/PySimpleGUI"><img src="https://camo.githubusercontent.com/a2ce41e084ce35696542594bca838198c4932e719c2fc8457393669e3b136c7e/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d53706f6e736f72266d6573736167653d254532253944254134266c6f676f3d476974487562266c696e6b3d25334375726c25334526636f6c6f723d663838333739" data-canonical-src="https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;link=%3Curl%3E&amp;color=f88379"></a></p>
<hr>
<h2 tabindex="-1" dir="auto">Statistics  📈</h2>
<h2 tabindex="-1" dir="auto">PyPI Statistics &amp; Versions</h2>
<table>
<thead>
<tr>
<th>TK</th>
<th>TK 2.7</th>
<th>Qt</th>
<th>WxPython</th>
<th>Web (Remi)</th>
</tr>
</thead>
<tbody>
<tr>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/8006b513a33970ca72425339b547317e029e08263bc62eab62013357895a8f6c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707973696d706c656775693f6c6162656c3d746b696e746572"><img src="https://camo.githubusercontent.com/8006b513a33970ca72425339b547317e029e08263bc62eab62013357895a8f6c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707973696d706c656775693f6c6162656c3d746b696e746572" alt="tkinter" data-canonical-src="https://img.shields.io/pypi/dm/pysimplegui?label=tkinter"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/2afa948e4590f4926383332eeb38d167013b7a13af73f5d5ca3c8a8cc943118f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707973696d706c6567756932373f6c6162656c3d746b696e746572253230322e37"><img src="https://camo.githubusercontent.com/2afa948e4590f4926383332eeb38d167013b7a13af73f5d5ca3c8a8cc943118f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707973696d706c6567756932373f6c6162656c3d746b696e746572253230322e37" alt="tkinter 2.7 downloads" data-canonical-src="https://img.shields.io/pypi/dm/pysimplegui27?label=tkinter%202.7"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ec4f967d79a21ada522cc6aa50d2b7a381cd61d40d0bd2da8788c13322f6ec77/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707973696d706c6567756971743f6c6162656c3d7174"><img src="https://camo.githubusercontent.com/ec4f967d79a21ada522cc6aa50d2b7a381cd61d40d0bd2da8788c13322f6ec77/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707973696d706c6567756971743f6c6162656c3d7174" alt="qt" data-canonical-src="https://img.shields.io/pypi/dm/pysimpleguiqt?label=qt"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/5a12ff54b8e1e4e1f7946989b584585a8f89f57d18d9aafece2716c1ec4b0c20/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707973696d706c6567756977783f6c6162656c3d7778"><img src="https://camo.githubusercontent.com/5a12ff54b8e1e4e1f7946989b584585a8f89f57d18d9aafece2716c1ec4b0c20/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707973696d706c6567756977783f6c6162656c3d7778" alt="wx" data-canonical-src="https://img.shields.io/pypi/dm/pysimpleguiwx?label=wx"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/62ebaf4c75e1dfcda873c5e25fe96972dddeae177cd7f9b230c8e3f5282afa91/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707973696d706c656775697765623f6c6162656c3d776562"><img src="https://camo.githubusercontent.com/62ebaf4c75e1dfcda873c5e25fe96972dddeae177cd7f9b230c8e3f5282afa91/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707973696d706c656775697765623f6c6162656c3d776562" alt="web" data-canonical-src="https://img.shields.io/pypi/dm/pysimpleguiweb?label=web"></a></td>
</tr>
<tr>
<td><a href="http://pepy.tech/project/pysimplegui" rel="nofollow"><img src="https://camo.githubusercontent.com/8031d73fc1fb8ea7c528c94c036b5e6ad0927c7d58397fcab278d2542ecb3680/687474703a2f2f706570792e746563682f62616467652f707973696d706c65677569" alt="tkinter" data-canonical-src="http://pepy.tech/badge/pysimplegui"></a></td>
<td><a href="https://pepy.tech/project/pysimplegui27" rel="nofollow"><img src="https://camo.githubusercontent.com/75e5dc867b252361a13d1b68486aa981f3a888a31740a494c653fe17a00a2609/68747470733a2f2f706570792e746563682f62616467652f707973696d706c656775693237" alt="tkinter27" data-canonical-src="https://pepy.tech/badge/pysimplegui27"></a></td>
<td><a href="https://pepy.tech/project/pysimpleguiqt" rel="nofollow"><img src="https://camo.githubusercontent.com/35dba6d42903f72fea9bbea4e60740bc0ba224fad15f361179741c397e830738/68747470733a2f2f706570792e746563682f62616467652f707973696d706c656775697174" alt="Downloads" data-canonical-src="https://pepy.tech/badge/pysimpleguiqt"></a></td>
<td><a href="https://pepy.tech/project/pysimpleguiWx" rel="nofollow"><img src="https://camo.githubusercontent.com/85aef00152ca1681880762a96c23b124bf52e21e0aa4f089c68cc3731508d3aa/68747470733a2f2f706570792e746563682f62616467652f707973696d706c656775697778" alt="Downloads" data-canonical-src="https://pepy.tech/badge/pysimpleguiwx"></a></td>
<td><a href="https://pepy.tech/project/pysimpleguiWeb" rel="nofollow"><img src="https://camo.githubusercontent.com/49bd49a8e6a44acd35abf356f9f3643bdcbe96863355e62bf05b3d2a53a101d0/68747470733a2f2f706570792e746563682f62616467652f707973696d706c65677569776562" alt="Downloads" data-canonical-src="https://pepy.tech/badge/pysimpleguiweb"></a></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/3cc8fdede206c134e83cc9b1f41a2205965e18729b824dd9365c9731557ace9b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707973696d706c656775692e7376673f6c6162656c3d746b696e7465722532305079504925323056657226636f6c6f723d726564"><img src="https://camo.githubusercontent.com/3cc8fdede206c134e83cc9b1f41a2205965e18729b824dd9365c9731557ace9b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707973696d706c656775692e7376673f6c6162656c3d746b696e7465722532305079504925323056657226636f6c6f723d726564" alt="tkinter" data-canonical-src="https://img.shields.io/pypi/v/pysimplegui.svg?label=tkinter%20PyPI%20Ver&amp;color=red"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0e1a3219ecd7b0673cf2bf77c6ec59c1df9324b70953baa2275742dedc28a92f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707973696d706c6567756932372e7376673f6c6162656c3d746b696e746572253230322e372532305079504925323056657226636f6c6f723d726564"><img src="https://camo.githubusercontent.com/0e1a3219ecd7b0673cf2bf77c6ec59c1df9324b70953baa2275742dedc28a92f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707973696d706c6567756932372e7376673f6c6162656c3d746b696e746572253230322e372532305079504925323056657226636f6c6f723d726564" alt="tkinter 2.7" data-canonical-src="https://img.shields.io/pypi/v/pysimplegui27.svg?label=tkinter%202.7%20PyPI%20Ver&amp;color=red"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/7c2eafc4f82307041ab81a562827841ba735cc1c27d245f1642ae20b53404370/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707973696d706c6567756971742e7376673f6c6162656c3d71742532305079504925323056657226636f6c6f723d726564"><img src="https://camo.githubusercontent.com/7c2eafc4f82307041ab81a562827841ba735cc1c27d245f1642ae20b53404370/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707973696d706c6567756971742e7376673f6c6162656c3d71742532305079504925323056657226636f6c6f723d726564" alt="qt" data-canonical-src="https://img.shields.io/pypi/v/pysimpleguiqt.svg?label=qt%20PyPI%20Ver&amp;color=red"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/a0346f65da14fb8cb05d8c32b27048913d142142f05c407f3de33ce55a5e75f6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707973696d706c6567756977782e7376673f6c6162656c3d77782532305079504925323056657226636f6c6f723d726564"><img src="https://camo.githubusercontent.com/a0346f65da14fb8cb05d8c32b27048913d142142f05c407f3de33ce55a5e75f6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707973696d706c6567756977782e7376673f6c6162656c3d77782532305079504925323056657226636f6c6f723d726564" alt="wx" data-canonical-src="https://img.shields.io/pypi/v/pysimpleguiwx.svg?label=wx%20PyPI%20Ver&amp;color=red"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/fa3b177b5580fe9fc6daef0ce733417bcab483c84287faf2259295a692e46f93/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707973696d706c656775697765622e7376673f6c6162656c3d7765622532305079504925323056657226636f6c6f723d726564"><img src="https://camo.githubusercontent.com/fa3b177b5580fe9fc6daef0ce733417bcab483c84287faf2259295a692e46f93/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707973696d706c656775697765622e7376673f6c6162656c3d7765622532305079504925323056657226636f6c6f723d726564" alt="web" data-canonical-src="https://img.shields.io/pypi/v/pysimpleguiweb.svg?label=web%20PyPI%20Ver&amp;color=red"></a></td>
</tr>
<tr>
<td><a href="https://pypi.python.org/pypi/PySimpleGUI/" rel="nofollow"><img src="https://camo.githubusercontent.com/a8d77906902223c2393ea3276c600cfaf2271875ceb82ace91033484926d8714/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f507953696d706c65475549" alt="PyPI pyversions" data-canonical-src="https://img.shields.io/pypi/pyversions/PySimpleGUI"></a></td>
<td><a href="https://pypi.python.org/pypi/PySimpleGUI27/" rel="nofollow"><img src="https://camo.githubusercontent.com/d35740eba0e24fb4dda49d286b0007aaf4c5827c547a2c51584f6f17a98b024d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f507953696d706c654755493237" alt="PyPI pyversions" data-canonical-src="https://img.shields.io/pypi/pyversions/PySimpleGUI27"></a></td>
<td><a href="https://pypi.python.org/pypi/PySimpleGUIQt/" rel="nofollow"><img src="https://camo.githubusercontent.com/a26c8be359b75bffeb02a96df792568d9bad87fb506fd59bdc4130555f12041c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f507953696d706c654755495174" alt="PyPI pyversions" data-canonical-src="https://img.shields.io/pypi/pyversions/PySimpleGUIQt"></a></td>
<td><a href="https://pypi.python.org/pypi/PySimpleGUIWx/" rel="nofollow"><img src="https://camo.githubusercontent.com/5fa701c21282e6b50fa2eceb28f064c7e8c68387d484d4b42c8e677a5737317c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f507953696d706c654755495778" alt="PyPI pyversions" data-canonical-src="https://img.shields.io/pypi/pyversions/PySimpleGUIWx"></a></td>
<td><a href="https://pypi.python.org/pypi/PySimpleGUIWeb/" rel="nofollow"><img src="https://camo.githubusercontent.com/441296eb9cf1d89f1e42f486c47ab09621820e9c94e1714eb570d49777cd1e93/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f507953696d706c65475549576562" alt="PyPI pyversions" data-canonical-src="https://img.shields.io/pypi/pyversions/PySimpleGUIWeb"></a></td>
</tr>
</tbody>
</table>
<hr>
<h2 tabindex="-1" dir="auto">GitHub Statistics</h2>
<table>
<thead>
<tr>
<th>Issues</th>
<th>Commit Activity</th>
<th>Stars</th>
<th>Docs</th>
</tr>
</thead>
<tbody>
<tr>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0d323cf8517c221836d5cfb9f7d714bcf91d60b22f8ff7cbde0aed500b5f8905/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d7261772f507953696d706c654755492f507953696d706c654755493f636f6c6f723d626c7565"><img src="https://camo.githubusercontent.com/0d323cf8517c221836d5cfb9f7d714bcf91d60b22f8ff7cbde0aed500b5f8905/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d7261772f507953696d706c654755492f507953696d706c654755493f636f6c6f723d626c7565" alt="GitHub issues" data-canonical-src="https://img.shields.io/github/issues-raw/PySimpleGUI/PySimpleGUI?color=blue"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/696e74bbb3d3da1aaf5f923d5d6a2be6fe27fab2de04374ed86b6458cebc8523/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f6d2f507953696d706c654755492f507953696d706c654755492e7376673f636f6c6f723d626c7565"><img src="https://camo.githubusercontent.com/696e74bbb3d3da1aaf5f923d5d6a2be6fe27fab2de04374ed86b6458cebc8523/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f6d2f507953696d706c654755492f507953696d706c654755492e7376673f636f6c6f723d626c7565" alt="commit activity" data-canonical-src="https://img.shields.io/github/commit-activity/m/PySimpleGUI/PySimpleGUI.svg?color=blue"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/a4240f5f5036375f8f0c27d61c7416cc3d2de760e6a81c887a25782e62caac58/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f507953696d706c654755492f507953696d706c654755492e7376673f6c6162656c3d7374617273266d61784167653d32353932303030"><img src="https://camo.githubusercontent.com/a4240f5f5036375f8f0c27d61c7416cc3d2de760e6a81c887a25782e62caac58/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f507953696d706c654755492f507953696d706c654755492e7376673f6c6162656c3d7374617273266d61784167653d32353932303030" alt="stars" data-canonical-src="https://img.shields.io/github/stars/PySimpleGUI/PySimpleGUI.svg?label=stars&amp;maxAge=2592000"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/6d44da2d48844b9ab1c7a751f4cfc9817fa03b455285efef882a8106931970e5/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707973696d706c656775692f62616467652f3f76657273696f6e3d6c6174657374"><img src="https://camo.githubusercontent.com/6d44da2d48844b9ab1c7a751f4cfc9817fa03b455285efef882a8106931970e5/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707973696d706c656775692f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/pysimplegui/badge/?version=latest"></a></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/997c4566412454d70a583be21d6ba1c579ac948606d9907459bed2e93479724b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642d7261772f507953696d706c654755492f507953696d706c654755493f636f6c6f723d626c7565"><img src="https://camo.githubusercontent.com/997c4566412454d70a583be21d6ba1c579ac948606d9907459bed2e93479724b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642d7261772f507953696d706c654755492f507953696d706c654755493f636f6c6f723d626c7565" alt="GitHub closed issues" data-canonical-src="https://img.shields.io/github/issues-closed-raw/PySimpleGUI/PySimpleGUI?color=blue"></a></td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/e83b893e9fe23069f0082b6a0bca1c1c62ac3afa961acfc3e8be43e9199062fa/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f507953696d706c654755492f507953696d706c654755492e7376673f636f6c6f723d626c7565"><img src="https://camo.githubusercontent.com/e83b893e9fe23069f0082b6a0bca1c1c62ac3afa961acfc3e8be43e9199062fa/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f507953696d706c654755492f507953696d706c654755492e7376673f636f6c6f723d626c7565" alt="last commit" data-canonical-src="https://img.shields.io/github/last-commit/PySimpleGUI/PySimpleGUI.svg?color=blue"></a></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/49b4e7b1b4cef35706d6041a0f3b1bfe65ee5608e15d46c6f3fe2c7254b29f3d/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f3f757365726e616d653d507953696d706c654755492662675f636f6c6f723d336537626163267469746c655f636f6c6f723d6666646435352669636f6e5f636f6c6f723d66666464353526746578745f636f6c6f723d6666646435352673686f775f69636f6e733d7472756526636f756e745f707269766174653d74727565"><img src="https://camo.githubusercontent.com/49b4e7b1b4cef35706d6041a0f3b1bfe65ee5608e15d46c6f3fe2c7254b29f3d/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f3f757365726e616d653d507953696d706c654755492662675f636f6c6f723d336537626163267469746c655f636f6c6f723d6666646435352669636f6e5f636f6c6f723d66666464353526746578745f636f6c6f723d6666646435352673686f775f69636f6e733d7472756526636f756e745f707269766174653d74727565" data-canonical-src="https://github-readme-stats.vercel.app/api/?username=PySimpleGUI&amp;bg_color=3e7bac&amp;title_color=ffdd55&amp;icon_color=ffdd55&amp;text_color=ffdd55&amp;show_icons=true&amp;count_private=true"></a>
</p>
<hr>

<h2 tabindex="-1" dir="auto">What Is PySimpleGUI ❓</h2>
<p dir="auto">PySimpleGUI is a Python package that enables Python programmers of all levels to create GUIs.  You specify your GUI window using a "layout" which contains widgets (they're called "Elements" in PySimpleGUI).  Your layout is used to create a window using one of the 4 supported frameworks to display and interact with your window.  Supported frameworks include tkinter, Qt, WxPython, or Remi. The term "wrapper" is sometimes used for these kinds of packages.</p>
<p dir="auto">Your PySimpleGUI code is simpler and shorter than writing directly using the underlying framework because PySimpleGUI implements much of the "boilerplate code" for you.  Additionally, interfaces are simplified to require as little code as possible to get the desired result.  Depending on the program and framework used, a PySimpleGUI program may require 1/2 to 1/10th amount of code to create an identical window using one of the frameworks directly.</p>
<p dir="auto">While the goal is to encapsulate/hide the specific objects and code used by the GUI framework you are running on top of, if needed you can access the frameworks' dependent widgets and windows directly. If a setting or feature is not yet exposed or accessible using the PySimpleGUI APIs, you are not walled off from the framework. You can expand capabilities without directly modifying the PySimpleGUI package itself.</p>
<h2 tabindex="-1" dir="auto">Bridging the "GUI Gap"</h2>
<p dir="auto">Python has brought a large number of people into the programming community. The number of programs and the range of areas it touches is mindboggling.  But more often than not, these technologies are out of reach of all but a handful of people.  The majority of Python programs are "command line" based. This isn't a problem for programmer-types as we're all used to interacting with computers through a text interface.  While programmers don't have a problem with command-line interfaces, most "normal people" do.  This creates a digital divide, a "GUI Gap".</p>
<p dir="auto">Adding a GUI to a program opens that program up to a wider audience. It becomes more approachable. GUIs can also make interacting with some programs easier, even for those that are comfortable with a command-line interface.  And finally, some problems require a GUI.</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/GUI%20Gap%202020.png"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/GUI%20Gap%202020.png" width="600px"></a>
</p>
<h2 tabindex="-1" dir="auto">Recognition of Open Source Use</h2>
<p dir="auto">In the Demo Programs or one of the PySimpleGUI Account's Repos these packages were used at least one time. Some of your are the goodies on the right of the GUI gap.</p>
<p dir="auto">If you use Open Source software in your project, be sure and supply information about the packages you used.</p>
<ul dir="auto">
<li>chatterbot</li>
<li>cv2</li>
<li>fitz</li>
<li>forecastio</li>
<li>gtts</li>
<li>matplotlib</li>
<li>mido</li>
<li>mpl_toolkits</li>
<li>notifypy</li>
<li>numpy</li>
<li>pandas</li>
<li>PIL</li>
<li>praw</li>
<li>psgtray</li>
<li>psutil</li>
<li>pyfiglet</li>
<li>pygame</li>
<li>pylab</li>
<li>pymunk</li>
<li>requests</li>
<li>vlc</li>
<li>win32api</li>
<li>win32con</li>
<li>win32gui</li>
<li>win32process</li>
</ul>
<h4 tabindex="-1" dir="auto">LPLG3 as an Example</h4>
<p dir="auto">The licensing terms in the LLC3 Licensing, it states:</p>
<blockquote>
<ol start="4" dir="auto">
<li>Combined Works.
You may convey a Combined Work under terms of your choice that,
taken together, effectively do not restrict modification of the
portions of the Library contained in the Combined Work and reverse
engineering for debugging such modifications, if you also do each of
the following:</li>
</ol>
<p dir="auto">a) Give prominent notice with each copy of the Combined Work that
the Library is used in it and that the Library and its use are
covered by this License.</p>
<p dir="auto">b) Accompany the Combined Work with a copy of the GNU GPL and this license
document.</p>
</blockquote>
<p dir="auto">Since the above packages each have a similar license clause, I'm listing them here, in what I would consider a "prominent notice" location, that I'm using the fine works of these groups or individuals.  They are used in the Demo Programs most likely or one of the Repos that are under this account as this list is all inclusive.</p>
<p dir="auto">You all have my respect and admiration.  You're enabling bigger things. What a special kind of thing to make. Who knows what you've enabled. I believe more people are getting over to your creations and getting to experience them.</p>
<p dir="auto">tkinter team - PySimpleGUI would be nowhere without your lengthy work &amp; continuous dedication. ONE GUI API for 3 different OS's? Really? With no code changes to move between? That's a huge accomplishment. You're #1 to me.  Thank you for your hard work.</p>
<h2 tabindex="-1" dir="auto">Getting Over "The Bar"</h2>
<p dir="auto">It's been said by some that "the bar is pretty high" when it comes to learning GUI programming in Python.</p>
<blockquote>
<p dir="auto">What happens when the bar is placed on the ground and can be stepped over?</p>
</blockquote>
<p dir="auto">This is one of the questions that the PySimpleGUI project has tried to answer.  Here's a humorous look at what's been a not funny situation.</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/GettingOverThe%20GUILearningBar.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/GettingOverThe%20GUILearningBar.jpg" width="600px"></a>
</p>
<p dir="auto">The results have been fascinating to witness and it's been touching to read the accounts of the journeys of users.</p>
<p dir="auto">Nothing prepared me for the emails that started to arrive soon after the first release of PySimpleGUI. They are heartwarming and heartbreaking tales of life-long dreams of creating a program that required a GUI. Some made a few attempts, giving up each time. Others never started once they started to research what was required.</p>
<p dir="auto">After recounting the varied and long road to finding PySimpleGUI, the stories became similar. They each found success and expressed joy and gratitude. The joy expressed in these messages was unlike anything I had encountered in the entirety of career in the computing field.</p>
<p dir="auto">It's been these emails and the messages of gratitude seen here in the GitHub Issues that made dedicating my life to his project a non-decision.</p>
<hr>
<h2 tabindex="-1" dir="auto">Subscribing to Announcements 📢</h2>
<p dir="auto">If you click the "Subscribe" button in <a href="https://github.com/PySimpleGUI/PySimpleGUI/issues/142" data-hovercard-type="issue" data-hovercard-url="/PySimpleGUI/PySimpleGUI/issues/142/hovercard">the Announcements GitHub Issue</a>, then you'll be notified when project news is published.  This Issue is <strong>the official location</strong> to get the latest PySimpleGUI information.  Information is posted frequently including release contents, tips &amp; tricks, documentation updates, etc. There have been over 1,000 posts since the project started.</p>
<hr> 
<h2 tabindex="-1" dir="auto">About Me 👋</h2>
<p dir="auto">Hi there!  I'm Mike.  You'll find me right here, on the PySimpleGUI GitHub, solving problems and continuously pushing PySimpleGUI forward.  I've dedicated my days, nights, and weekends to the project and PySimpleGUI users.  Our successes are ultimately shared.  I'm successful when you're successful.</p>
<p dir="auto">While I'm a relative newcomer to Python, I've been writing software since the 70s.  The majority of my career was spent creating products in Silicon Valley. I bring to PySimpleGUI the same professionalism and dedication as I did to the corporate products I developed. You are my customers now.</p>
<h2 tabindex="-1" dir="auto">Project Goals 🥅</h2>
<p dir="auto">Two of the most important goals of the PySimpleGUI project:</p>
<ul dir="auto">
<li>Having fun</li>
<li>Your success</li>
</ul>
<p dir="auto"><strong>Fun</strong> as a goal on a serious project sounds odd, but it's a serious goal. I find writing these GUI programs to be a lot of fun. One reason is how little time it takes to write a complete solution. If we're not enjoying the process then someone's going to give up.</p>
<p dir="auto">There is a significant amount of documentation, a cookbook, 100's of demo programs to get you immediately running, a detailed call reference, YouTube videos, online Trinket demos, and more... all working to create... a fun experience.</p>
<p dir="auto"><strong>Your Success</strong> is a shared goal.  PySimpleGUI was built for developers. You're my peeps. It's been an unexpected reward to see the results of the combined effort of users and PySimpleGUI. Use the documentation &amp; other materials to help build your application.  If you run into trouble, help is available by opening on <a href="http://issues.pysimplegui.org/" rel="nofollow">Issue on the PySimpleGUI GitHub</a>.  Take a look at the section on Support below.</p>
<hr>
<h2 tabindex="-1" dir="auto">Educational Resources 📚</h2>
<p dir="auto">PySimpleGUI now has an official Udemy course!  Check the header of this readme and the PySimpleGUI documentation for a coupon code.  The course can be found at <a href="https://www.udemy.com/PySimpleGUI" rel="nofollow">www.udemy.com/PySimpleGUI</a>.  <strong>This course</strong> is currently the only income source for the PySimpleGUI project other than sponsorships and donations.</p>
<p dir="auto"><a href="http://www.pysimplegui.org/" rel="nofollow">www.PySimpleGUI.org</a>
is easy to remember and is where the documentation is located. You'll find tabs across the top that represent several different documents. The documentation is located on "Read The Docs" so that there is a table of contents for each document and they are easy to search.</p>
<p dir="auto">There are 100s of pages of written documentation and 100s of example programs that will help you be effective very quickly.  Rather than requiring days or weeks of investment to learn a single GUI package, you may be able to complete your project in a single afternoon when using PySimpleGUI.</p>
<h2 tabindex="-1" dir="auto">Example 1 - The One-Shot Window</h2>
<p dir="auto">This type of program is called a "one-shot" window because the window is displayed one time, the values collected, and then it is closed.  It doesn't remain open for a long time like you would in a Word Processor.</p>
<h3 tabindex="-1" dir="auto">Anatomy of a Simple PySimpleGUI Program</h3>
<p dir="auto">There are 5 sections to a PySimpleGUI program</p>
<div dir="auto" data-snippet-clipboard-copy-content="import PySimpleGUI as sg                        # Part 1 - The import

# Define the window's contents
layout = [  [sg.Text(&quot;What's your name?&quot;)],     # Part 2 - The Layout
            [sg.Input()],
            [sg.Button('Ok')] ]

# Create the window
window = sg.Window('Window Title', layout)      # Part 3 - Window Defintion
                                                
# Display and interact with the Window
event, values = window.read()                   # Part 4 - Event loop or Window.read call

# Do something with the information gathered
print('Hello', values[0], &quot;! Thanks for trying PySimpleGUI&quot;)

# Finish up by removing from the screen
window.close()                                  # Part 5 - Close the Window"><pre><span>import</span> <span>PySimpleGUI</span> <span>as</span> <span>sg</span>                        <span># Part 1 - The import</span>

<span># Define the window's contents</span>
<span>layout</span> <span>=</span> [  [<span>sg</span>.<span>Text</span>(<span>"What's your name?"</span>)],     <span># Part 2 - The Layout</span>
            [<span>sg</span>.<span>Input</span>()],
            [<span>sg</span>.<span>Button</span>(<span>'Ok'</span>)] ]

<span># Create the window</span>
<span>window</span> <span>=</span> <span>sg</span>.<span>Window</span>(<span>'Window Title'</span>, <span>layout</span>)      <span># Part 3 - Window Defintion</span>
                                                
<span># Display and interact with the Window</span>
<span>event</span>, <span>values</span> <span>=</span> <span>window</span>.<span>read</span>()                   <span># Part 4 - Event loop or Window.read call</span>

<span># Do something with the information gathered</span>
<span>print</span>(<span>'Hello'</span>, <span>values</span>[<span>0</span>], <span>"! Thanks for trying PySimpleGUI"</span>)

<span># Finish up by removing from the screen</span>
<span>window</span>.<span>close</span>()                                  <span># Part 5 - Close the Window</span></pre></div>
<p dir="auto">The code produces this window</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ex1-tkinter.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ex1-tkinter.jpg"></a>
</p>
<hr>
<h2 tabindex="-1" dir="auto">Example 2 - Interactive Window</h2>
<p dir="auto">In this example, our window will remain on the screen until the user closes the window or clicks the Quit button.  The main difference between the one-shot window you saw earlier and an interactive window is the addition of an "Event Loop". The Event Loop reads events and inputs from your window.  The heart of your application lives in the event loop.</p>
<div dir="auto" data-snippet-clipboard-copy-content="import PySimpleGUI as sg

# Define the window's contents
layout = [[sg.Text(&quot;What's your name?&quot;)],
          [sg.Input(key='-INPUT-')],
          [sg.Text(size=(40,1), key='-OUTPUT-')],
          [sg.Button('Ok'), sg.Button('Quit')]]

# Create the window
window = sg.Window('Window Title', layout)

# Display and interact with the Window using an Event Loop
while True:
    event, values = window.read()
    # See if user wants to quit or window was closed
    if event == sg.WINDOW_CLOSED or event == 'Quit':
        break
    # Output a message to the window
    window['-OUTPUT-'].update('Hello ' + values['-INPUT-'] + &quot;! Thanks for trying PySimpleGUI&quot;)

# Finish up by removing from the screen
window.close()"><pre><span>import</span> <span>PySimpleGUI</span> <span>as</span> <span>sg</span>

<span># Define the window's contents</span>
<span>layout</span> <span>=</span> [[<span>sg</span>.<span>Text</span>(<span>"What's your name?"</span>)],
          [<span>sg</span>.<span>Input</span>(<span>key</span><span>=</span><span>'-INPUT-'</span>)],
          [<span>sg</span>.<span>Text</span>(<span>size</span><span>=</span>(<span>40</span>,<span>1</span>), <span>key</span><span>=</span><span>'-OUTPUT-'</span>)],
          [<span>sg</span>.<span>Button</span>(<span>'Ok'</span>), <span>sg</span>.<span>Button</span>(<span>'Quit'</span>)]]

<span># Create the window</span>
<span>window</span> <span>=</span> <span>sg</span>.<span>Window</span>(<span>'Window Title'</span>, <span>layout</span>)

<span># Display and interact with the Window using an Event Loop</span>
<span>while</span> <span>True</span>:
    <span>event</span>, <span>values</span> <span>=</span> <span>window</span>.<span>read</span>()
    <span># See if user wants to quit or window was closed</span>
    <span>if</span> <span>event</span> <span>==</span> <span>sg</span>.<span>WINDOW_CLOSED</span> <span>or</span> <span>event</span> <span>==</span> <span>'Quit'</span>:
        <span>break</span>
    <span># Output a message to the window</span>
    <span>window</span>[<span>'-OUTPUT-'</span>].<span>update</span>(<span>'Hello '</span> <span>+</span> <span>values</span>[<span>'-INPUT-'</span>] <span>+</span> <span>"! Thanks for trying PySimpleGUI"</span>)

<span># Finish up by removing from the screen</span>
<span>window</span>.<span>close</span>()</pre></div>
<p dir="auto">This is the window that Example 2 produces.</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Example2-1.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Example2-1.jpg"></a>
</p>
<p dir="auto">And here's what it looks like after you enter a value into the Input field and click the Ok button.</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Example2-2.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Example2-2.jpg"></a>
</p>
<p dir="auto">Let's take a quick look at some of the differences between this example and the one-shot window.</p>
<p dir="auto">First, you'll notice differences in the layout.  Two changes in particular are important.  One is the addition of the <code>key</code> parameter to the <code>Input</code> element and one of the <code>Text</code> elements.  A <code>key</code> is like a name for an element.  Or, in Python terms, it's like a dictionary key.  The <code>Input</code> element's key will be used as a dictionary key later in the code.</p>
<p dir="auto">Another difference is the addition of this <code>Text</code> element:</p>
<div dir="auto" data-snippet-clipboard-copy-content="          [sg.Text(size=(40,1), key='-OUTPUT-')],"><pre>          [<span>sg</span>.<span>Text</span>(<span>size</span><span>=</span>(<span>40</span>,<span>1</span>), <span>key</span><span>=</span><span>'-OUTPUT-'</span>)],</pre></div>
<p dir="auto">There are 2 parameters, the <code>key</code> we already covered.  The <code>size</code> parameter defines the size of the element in characters.  In this case, we're indicating that this <code>Text</code> element is 40 characters wide, by 1 character high.  Notice that there is no text string specified which means it'll be blank.  You can easily see this blank row in the window that's created.</p>
<p dir="auto">We also added a button,  "Quit".</p>
<p dir="auto">The Event Loop has our familiar <code>window.read()</code> call.</p>
<p dir="auto">Following the read is this if statement:</p>
<div dir="auto" data-snippet-clipboard-copy-content="    if event == sg.WINDOW_CLOSED or event == 'Quit':
        break"><pre>    <span>if</span> <span>event</span> <span>==</span> <span>sg</span>.<span>WINDOW_CLOSED</span> <span>or</span> <span>event</span> <span>==</span> <span>'Quit'</span>:
        <span>break</span></pre></div>
<p dir="auto">This code is checking to see if the user closed the window by clicking the "X" or if they clicked the "Quit" button.  If either of these happens, then the code will break out of the event loop.</p>
<p dir="auto">If the window wasn't closed nor the Quit button clicked, then execution continues.  The only thing that could have happened is the user clicked the "Ok" button.  The last statement in the Event Loop is this one:</p>
<div dir="auto" data-snippet-clipboard-copy-content="    window['-OUTPUT-'].update('Hello ' + values['-INPUT-'] + &quot;! Thanks for trying PySimpleGUI&quot;)"><pre>    <span>window</span>[<span>'-OUTPUT-'</span>].<span>update</span>(<span>'Hello '</span> <span>+</span> <span>values</span>[<span>'-INPUT-'</span>] <span>+</span> <span>"! Thanks for trying PySimpleGUI"</span>)</pre></div>
<p dir="auto">This statement updates the <code>Text</code> element that has the key <code>-OUTPUT-</code> with a string.  <code>window['-OUTPUT-']</code> finds the element with the key <code>-OUTPUT-</code>.  That key belongs to our blank <code>Text</code> element.  Once that element is returned from the lookup, then its <code>update</code> method is called.  Nearly all elements have an <code>update</code> method.  This method is used to change the value of the element or to change some configuration of the element.</p>
<p dir="auto">If we wanted the text to be yellow, then that can be accomplished by adding a <code>text_color</code> parameter to the <code>update</code> method so that it reads:</p>
<div dir="auto" data-snippet-clipboard-copy-content="    window['-OUTPUT-'].update('Hello ' + values['-INPUT-'] + &quot;! Thanks for trying PySimpleGUI&quot;,
                              text_color='yellow')"><pre>    <span>window</span>[<span>'-OUTPUT-'</span>].<span>update</span>(<span>'Hello '</span> <span>+</span> <span>values</span>[<span>'-INPUT-'</span>] <span>+</span> <span>"! Thanks for trying PySimpleGUI"</span>,
                              <span>text_color</span><span>=</span><span>'yellow'</span>)</pre></div>
<p dir="auto">After adding the <code>text_color</code> parameter, this is our new resulting window:</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Example2-3.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Example2-3.jpg"></a>
</p>
<p dir="auto">The parameters available for each element are documented in both the <a href="http://calls.pysimplegui.org/" rel="nofollow">call reference documentation</a> as well as the docstrings.  PySimpleGUI has extensive documentation to help you understand all of the options available to you. If you lookup the <code>update</code> method for the <code>Text</code> element, you'll find this definition for the call:</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/TextUpdate.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/TextUpdate.jpg"></a>
</p>
<p dir="auto">As you can see several things can be changed for a <code>Text</code> element.  The call reference documentation is a valuable resource that will make programming in PySimpleGUI, uhm, simple.</p>
<hr>
<h2 tabindex="-1" dir="auto">Jump Start! Get the Demo Programs &amp; Demo Browser 🔎</h2>
<p dir="auto">The over 300 Demo Programs will give you a jump-start and provide many design patterns for you to learn how to use PySimpleGUI and how to integrate PySimpleGUI with other packages.  By far the best way to experience these demos is using the Demo Browser.  This tool enables you to search, edit and run the Demo Programs.</p>
<p dir="auto">To get them installed quickly along with the Demo Browser, use <code>pip</code> to install <code>psgdemos</code>:</p>
<p dir="auto"><code>python -m pip install psgdemos</code></p>
<p dir="auto">or if you're in Linux, Mac, etc, that uses <code>python3</code> instead of <code>python</code> to launch Python:</p>
<p dir="auto"><code>python3 -m pip install psgdemos</code></p>
<p dir="auto">Once installed, launch the demo browser by typing <code>psgdemos</code> from the command line"</p>
<p dir="auto"><code>psgdemos</code></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/46163555/151877440-85ad9239-3219-4711-8cdf-9abc1501f05a.jpg"><img src="https://user-images.githubusercontent.com/46163555/151877440-85ad9239-3219-4711-8cdf-9abc1501f05a.jpg" alt="SNAG-1543"></a></p>
<hr>
<h2 tabindex="-1" dir="auto">Layouts Are Funny LOL! 😆</h2>
<p dir="auto">Your window's layout is a "list of lists" (LOL).  Windows are broken down into "rows".  Each row in your window becomes a list in your layout.  Concatenate together all of the lists and you've got a layout...a list of lists.</p>
<p dir="auto">Here is the same layout as before with an extra <code>Text</code> element added to each row so that you can more easily see how rows are defined:</p>
<div dir="auto" data-snippet-clipboard-copy-content="layout = [  [sg.Text('Row 1'), sg.Text(&quot;What's your name?&quot;)],
            [sg.Text('Row 2'), sg.Input()],
            [sg.Text('Row 3'), sg.Button('Ok')] ]"><pre><span>layout</span> <span>=</span> [  [<span>sg</span>.<span>Text</span>(<span>'Row 1'</span>), <span>sg</span>.<span>Text</span>(<span>"What's your name?"</span>)],
            [<span>sg</span>.<span>Text</span>(<span>'Row 2'</span>), <span>sg</span>.<span>Input</span>()],
            [<span>sg</span>.<span>Text</span>(<span>'Row 3'</span>), <span>sg</span>.<span>Button</span>(<span>'Ok'</span>)] ]</pre></div>
<p dir="auto">Each row of this layout is a list of elements that will be displayed on that row in your window.</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/layout-with-rows.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/layout-with-rows.jpg"></a>
</p>
<p dir="auto">Using lists to define your GUI has some huge advantages over how GUI programming is done using other frameworks.  For example, you can use Python's list comprehension to create a grid of buttons in a single line of code.</p>
<p dir="auto">These 3 lines of code:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import PySimpleGUI as sg

layout = [[sg.Button(f'{row}, {col}') for col in range(4)] for row in range(4)]

event, values = sg.Window('List Comprehensions', layout).read(close=True)"><pre><span>import</span> <span>PySimpleGUI</span> <span>as</span> <span>sg</span>

<span>layout</span> <span>=</span> [[<span>sg</span>.<span>Button</span>(<span>f'<span><span>{</span><span>row</span><span>}</span></span>, <span><span>{</span><span>col</span><span>}</span></span>'</span>) <span>for</span> <span>col</span> <span>in</span> <span>range</span>(<span>4</span>)] <span>for</span> <span>row</span> <span>in</span> <span>range</span>(<span>4</span>)]

<span>event</span>, <span>values</span> <span>=</span> <span>sg</span>.<span>Window</span>(<span>'List Comprehensions'</span>, <span>layout</span>).<span>read</span>(<span>close</span><span>=</span><span>True</span>)</pre></div>
<p dir="auto">produces this window which has a 4 x 4 grid of buttons:</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/4x4grid.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/4x4grid.jpg"></a>
</p>
<p dir="auto">Recall how "fun" is one of the goals of the project.  It's fun to directly apply Python's powerful basic capabilities to GUI problems. Instead of pages of code to create a GUI, it's a few (or often 1) lines of code.</p>
<h2 tabindex="-1" dir="auto">Collapsing Code</h2>
<p dir="auto">It's possible to condense a window's code down to a single line of code.  The layout definition, window creation, display, and data collection can all be written in this line of code:</p>
<div dir="auto" data-snippet-clipboard-copy-content="event, values = sg.Window('Window Title', [[sg.Text(&quot;What's your name?&quot;)],[sg.Input()],[sg.Button('Ok')]]).read(close=True)"><pre><span>event</span>, <span>values</span> <span>=</span> <span>sg</span>.<span>Window</span>(<span>'Window Title'</span>, [[<span>sg</span>.<span>Text</span>(<span>"What's your name?"</span>)],[<span>sg</span>.<span>Input</span>()],[<span>sg</span>.<span>Button</span>(<span>'Ok'</span>)]]).<span>read</span>(<span>close</span><span>=</span><span>True</span>)</pre></div>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ex1-tkinter.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ex1-tkinter.jpg"></a>
</p>
<p dir="auto">The same window is shown and returns the same values as the example showing the sections of a PySimpleGUI program.  Being able to do so much with so little enables you to quickly and easily add GUIs to your Python code.  If you want to display some data and get a choice from your user, it can be done in a line of code instead of a page of code.</p>
<p dir="auto">By using short-hand aliases, you can save even more space in your code by using fewer characters.  All of the Elements have one or more shorter names that can be used.  For example, the <code>Text</code> element can be written simply as <code>T</code>. The <code>Input</code> element can be written as <code>I</code> and the <code>Button</code> as <code>B</code>.  Your single-line window code thus becomes:</p>
<div dir="auto" data-snippet-clipboard-copy-content="event, values = sg.Window('Window Title', [[sg.T(&quot;What's your name?&quot;)],[sg.I()],[sg.B('Ok')]]).read(close=True)"><pre><span>event</span>, <span>values</span> <span>=</span> <span>sg</span>.<span>Window</span>(<span>'Window Title'</span>, [[<span>sg</span>.<span>T</span>(<span>"What's your name?"</span>)],[<span>sg</span>.<span>I</span>()],[<span>sg</span>.<span>B</span>(<span>'Ok'</span>)]]).<span>read</span>(<span>close</span><span>=</span><span>True</span>)</pre></div>
<h3 tabindex="-1" dir="auto">Code Portability</h3>
<p dir="auto">PySimpleGUI is currently capable of running on 4 Python GUI Frameworks.  The framework to use is specified using the import statement.  Change the import and you'll change the underlying GUI framework.  For some programs, no other changes are needed than the import statement to run on a different GUI framework.  In the example above, changing the import from <code>PySimpleGUI</code> to <code>PySimpleGUIQt</code>, <code>PySimpleGUIWx</code>, <code>PySimpleGUIWeb</code> will change the framework.</p>
<table>
<thead>
<tr>
<th>Import Statement</th>
<th>Resulting Window</th>
</tr>
</thead>
<tbody>
<tr>
<td>PySimpleGUI</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ex1-tkinter.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ex1-tkinter.jpg" alt=""></a></td>
</tr>
<tr>
<td>PySimpleGUIQt</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ex1-Qt.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ex1-Qt.jpg" alt=""></a></td>
</tr>
<tr>
<td>PySimpleGUIWx</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ex1-WxPython.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ex1-WxPython.jpg" alt=""></a></td>
</tr>
<tr>
<td>PySimpleGUIWeb</td>
<td><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ex1-Remi.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ex1-Remi.jpg" alt=""></a></td>
</tr>
</tbody>
</table>
<p dir="auto">Porting GUI code from one framework to another (e.g. moving your code from tkinter to Qt) usually requires a rewrite of your code.  PySimpleGUI is designed to enable you to have easy movement between the frameworks.  Sometimes some changes are required of you, but the goal is to have highly portable code with minimal changes.</p>
<p dir="auto">Some features, like a System Tray Icon, are not available on all of the ports.  The System Tray Icon feature is available on the Qt and WxPython ports.  A simulated version is available on tkinter.  There is no support for a System Tray icon in the PySimpleGUIWeb port.</p>
<h2 tabindex="-1" dir="auto">Runtime Environments</h2>
<table>
<thead>
<tr>
<th>Environment</th>
<th>Supported</th>
</tr>
</thead>
<tbody>
<tr>
<td>Python</td>
<td>Python 3.4+</td>
</tr>
<tr>
<td>Operating Systems</td>
<td>Windows, Linux, Mac</td>
</tr>
<tr>
<td>Hardware</td>
<td>Desktop PCs, Laptops, Raspberry Pi, Android devices running PyDroid3</td>
</tr>
<tr>
<td>Online</td>
<td>repli.it, Trinket.com (both run tkinter in a browser)</td>
</tr>
<tr>
<td>GUI Frameworks</td>
<td>tkinter, pyside2, WxPython, Remi</td>
</tr>
</tbody>
</table>
<h2 tabindex="-1" dir="auto">Integrations</h2>
<p dir="auto">Among the more than 200 "Demo Programs", you'll find examples of how to integrate many popular Python packages into your GUI.</p>
<p dir="auto">Want to embed a Matplotlib drawing into your window?  No problem, copy the demo code and instantly have a Matplotlib drawing of your dreams into your GUI.</p>
<p dir="auto">These packages and more are ready for you to put into your GUI as there are demo programs or a demo repo available for each:</p>
<table>
<thead>
<tr>
<th>Package</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Matplotlib</td>
<td>Many types of graphs and plots</td>
</tr>
<tr>
<td>OpenCV</td>
<td>Computer Vision (often used for AI)</td>
</tr>
<tr>
<td>VLC</td>
<td>Video playback</td>
</tr>
<tr>
<td>pymunk</td>
<td>Physics engine</td>
</tr>
<tr>
<td>psutil</td>
<td>System environment statistics</td>
</tr>
<tr>
<td>prawn</td>
<td>Reddit API</td>
</tr>
<tr>
<td>json</td>
<td>PySimpleGUI wraps a special API to store "User Settings"</td>
</tr>
<tr>
<td>weather</td>
<td>Integrates with several weather APIs to make weather apps</td>
</tr>
<tr>
<td>mido</td>
<td>MIDI playback</td>
</tr>
<tr>
<td>beautiful soup</td>
<td>Web Scraping (GitHub issue watcher example)</td>
</tr>
</tbody>
</table>
<hr>
<h2 tabindex="-1" dir="auto">Installing  💾</h2>
<p dir="auto">Two common ways of installing PySimpleGUI:</p>
<ol dir="auto">
<li>pip to install from PyPI</li>
<li>Download the file PySimpleGUI.py and place in your application's folder</li>
</ol>
<h3 tabindex="-1" dir="auto">Pip Installing &amp; Upgrading</h3>
<p dir="auto">The current suggested way of invoking the <code>pip</code> command is by running it as a module using Python.  Previously the command <code>pip</code> or <code>pip3</code> was directly onto a command-line / shell.  The suggested way</p>
<p dir="auto">Initial install for Windows:</p>
<p dir="auto"><code>python -m pip install PySimpleGUI</code></p>
<p dir="auto">Initial install for Linux and MacOS:</p>
<p dir="auto"><code>python3 -m pip install PySimpleGUI</code></p>
<p dir="auto">To upgrade using <code>pip</code>, you simply add 2 parameters to the line <code>--upgrade --no-cache-dir</code>.</p>
<p dir="auto">Upgrade installation on Windows:</p>
<p dir="auto"><code>python -m pip install --upgrade --no-cache-dir PySimpleGUI</code></p>
<p dir="auto">Upgrade for Linux and MacOS:</p>
<p dir="auto"><code>python3 -m pip install --upgrade --no-cache-dir PySimpleGUI</code></p>
<h3 tabindex="-1" dir="auto">Single File Installing</h3>
<p dir="auto">PySimpleGUI was created as a single .py file so that it would be very easy for you to install it, even on systems that are not connected to the internet like a Raspberry Pi.  It's as simple as placing the PySimpleGUI.py file into the same folder as your application that imports it. Python will use your local copy when performing the import.</p>
<p dir="auto">When installing using just the .py file, you can get it from either PyPI or if you want to run the most recent unreleased version then you'll download it from GitHub.</p>
<p dir="auto">To install from PyPI, download either the wheel or the .gz file and unzip the file.  If you rename the .whl file to .zip you can open it just like any normal zip file.  You will find the PySimpleGUI.py file in one of the folders.  Copy this file to your application's folder and you're done.</p>
<p dir="auto">The PyPI link for the tkinter version of PySimpleGUI is:
<a href="https://pypi.org/project/PySimpleGUI/#files" rel="nofollow">https://pypi.org/project/PySimpleGUI/#files</a></p>
<p dir="auto">The GitHub repo's latest version can be found here:
<a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/PySimpleGUI.py" rel="nofollow">https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/PySimpleGUI.py</a></p>
<p dir="auto">Now some of you are thinking, "yea, but, wait, having a single huge source file is a terrible idea".  And, yea, <em>sometimes</em> it can be a terrible idea.  In this case, the benefits greatly outweighed the downside.  Lots of concepts in computer science are tradeoffs or subjective.  As much as some would like it to be, not everything is black and white.  Many times the answer to a question is "it depends".</p>
<h2 tabindex="-1" dir="auto">Galleries 🎨</h2>
<p dir="auto">Work on a more formal gallery of user-submitted GUIs as well as those found on GitHub is underway but as of this writing it's not complete.  There are currently 2 places you can go to see some screenshots in a centralized way.  Hopefully, a Wiki or other mechanism can be released soon to do justice to the awesome creations people are making.</p>
<h3 tabindex="-1" dir="auto">User Submitted Gallery</h3>
<p dir="auto">The first is a <a href="https://github.com/PySimpleGUI/PySimpleGUI/issues/10" data-hovercard-type="issue" data-hovercard-url="/PySimpleGUI/PySimpleGUI/issues/10/hovercard">user submitted screenshots issue</a> located on the GitHub.  It's an informal way for people to show off what they've made.  It's not ideal, but it was a start.</p>
<h3 tabindex="-1" dir="auto">Massive Scraped GitHub Images</h3>
<p dir="auto">The second is a <a href="https://www.dropbox.com/sh/g67ms0darox0i2p/AAAMrkIM6C64nwHLDkboCWnaa?dl=0" rel="nofollow">massive gallery of over 3,000 images</a> scraped from 1,000 projects on GitHub that are reportedly using PySimpleGUI.  It's not been hand-filtered and there are plenty of old screenshots that were used in the early documentation.  But, you may find something in there that sparks your imagination.</p>
<hr>
<h2 tabindex="-1" dir="auto">Uses for PySimpleGUI 🔨</h2>
<p dir="auto">The following sections showcase a fraction of the uses for PySimpleGUI.  There are over 1,000 projects on GitHub alone that use PySimpleGUI.  It's truly amazing how possibilities have opened up for so many people.  Many users have spoken about previously attempting to create a GUI in Python and failing, but finally achieving their dreams when they tried PySimpleGUI.</p>
<h2 tabindex="-1" dir="auto">Your First GUI</h2>
<p dir="auto">Of course one of the best uses of PySimpleGUI is getting you into making GUIs for your Python projects.  You can start as small as requesting a filename.  For this, you only need to make a single call to one of the "high-level functions" called <code>popup</code>.  There are all kinds of popups, some collect information.</p>
<p dir="auto"><code>popup</code> on itself makes a window to display information.  You can pass multiple parameters just like a print.  If you want to get information, then you will call functions that start with <code>popup_get_</code> such as <code>popup_get_filename</code>.</p>
<p dir="auto">Adding a single line to get a filename instead of specifying a filename on the command line can transform your program into one that "normal people" will feel comfortable using.</p>
<div dir="auto" data-snippet-clipboard-copy-content="import PySimpleGUI as sg

filename = sg.popup_get_file('Enter the file you wish to process')
sg.popup('You entered', filename)"><pre><span>import</span> <span>PySimpleGUI</span> <span>as</span> <span>sg</span>

<span>filename</span> <span>=</span> <span>sg</span>.<span>popup_get_file</span>(<span>'Enter the file you wish to process'</span>)
<span>sg</span>.<span>popup</span>(<span>'You entered'</span>, <span>filename</span>)</pre></div>
<p dir="auto">This code will display 2 popup windows.  One to get the filename, which can be browsed to or pasted into the input box.</p>
<p dir="auto">
<a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/First_GUI1.jpg" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/First_GUI1.jpg" alt="img" width="400px"></a>
</p>
<p dir="auto">The other window will output what is collected.</p>
<p dir="auto">
<a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/First_GUI2.jpg" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/First_GUI2.jpg" alt="img" width="175px"></a>
</p>
<br>
<h2 tabindex="-1" dir="auto">Rainmeter-Style Windows</h2>
<p dir="auto"><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/RainmeterStyleWidgets.jpg" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/RainmeterStyleWidgets.jpg" alt="img" width="500px"></a>
The default settings for GUI frameworks don't tend to produce the nicest looking windows.  However, with some attention to detail, you can do several things to make windows look attractive.  PySimpleGUI makes it easier to manipulate colors and features like removing the title bar.  The result is windows that don't look like your typical tkinter windows.</p>
<p dir="auto">Here is an example of how you can create windows that don't look like your typical tkinter in windows.  In this example, the windows have their titlebars removed.  The result is windows that look much like those found when using Rainmeter, a desktop widget program.</p>
<p>
You can easily set the transparency of a window as well.  Here are more examples of desktop widgets in the same Rainmeter style.  Some are dim appearing because they are semi-transparent.
<a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/semi-transparent.jpg" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/semi-transparent.jpg" alt="img" width="500px"></a></p>
<p dir="auto">Both of these effects; removing the titlebar and making a window semi-transparent, are achieved by setting 2 parameters when creating the window.  This is an example of how PySimpleGUI enables easy access to features.  And because PySimpleGUI code is portable across the GUI frameworks, these same parameters work for the other ports such as Qt.</p>
<p dir="auto">Changing the Window creation call in Example 1 to this line of code produces a similar semi-transparent window:</p>
<div dir="auto" data-snippet-clipboard-copy-content="window = sg.Window('My window', layout, no_titlebar=True, alpha_channel=0.5)"><pre><span>window</span> <span>=</span> <span>sg</span>.<span>Window</span>(<span>'My window'</span>, <span>layout</span>, <span>no_titlebar</span><span>=</span><span>True</span>, <span>alpha_channel</span><span>=</span><span>0.5</span>)</pre></div>
<h2 tabindex="-1" dir="auto">Games</h2>
<p dir="auto">While not specifically written as a game development SDK, PySimpleGUI makes the development of some games quite easy.</p>
<p dir="auto"><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Chess.png" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Chess.png" alt="img" width="500px"></a>
This Chess program not only plays chess, but it integrates with the Stockfish chess-playing AI.</p>
<p>
<a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Minesweeper.gif" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Minesweeper.gif" alt="img" width="500px" data-animated-image=""></a>
Several variants of Minesweeper have been released by users.</p>

<div dir="auto"><p><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/minesweeper_israel_dryer.png" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/minesweeper_israel_dryer.png" alt="img" width="500px"></a></p></div>
<div dir="auto"><p><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Solitaire.gif" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Solitaire.gif" alt="img" width="500px" data-animated-image=""></a></p><p>
Card games work well with PySimpleGUI as manipulating images is simple when using the PySimpleGUI <code>Graph</code> element.</p></div>
<div dir="auto"><p>While not specifically written as a game development SDK, PySimpleGUI makes development of some games quite easy.
</p></div>
<h2 tabindex="-1" dir="auto">Media Capture and Playback</h2>
<p dir="auto"><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/OpenCV.jpg" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/OpenCV.jpg" alt="img" width="400px"></a></p>
<p dir="auto">Capturing and displaying video from your webcam in a GUI is 4 lines of PySimpleGUI code.  Even more impressive is that these 4 lines of code work with the tkinter, Qt, and Web ports.  You can display your webcam, in realtime, in a browser using the same code that displays the image using tkinter.</p>
<div dir="auto"><p>Media playback, audio and video, can also be achieved using the VLC player.  A demo application is provided to you so that you have a working example to start from. Everything you see in this readme is available to you as a starting point for your own creations.
</p></div>
<h2 tabindex="-1" dir="auto">Artificial Intelligence</h2>
<p dir="auto"><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/YOLO_GIF.gif" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/YOLO_GIF.gif" alt="img" width="500px" data-animated-image=""></a></p>
<p dir="auto">AI and Python have long been a recognized superpower when the two are paired together. What's often missing however is a way for users to interact with these AI algorithms familiarly, using a GUI.</p>
<p dir="auto">These YOLO demos are a great example of how a GUI can make a tremendous difference in interacting with AI algorithms.  Notice two sliders at the bottom of these windows.  These 2 sliders change a couple of the parameters used by the YOLO algorithm.</p>
<div dir="auto"><p>If you were tuning your YOLO demo using only the command line, you would need to set the parameters, once, when you launch the application, see how they perform, stop the application, change the parameters, and finally restart the application with the new parameters.
</p></div>
<p dir="auto"><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/YOLO%20Object%20Detection.jpg" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/YOLO%20Object%20Detection.jpg" alt="img" width="500px"></a></p>
<p dir="auto">Contrast those steps against what can be done using a GUI.  A GUI enables you to modify these parameters in real-time.  You can immediately get feedback on how they are affecting the algorithm.</p>
<p>

<a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Colorizer.jpg" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Colorizer.jpg" alt="img" width="500px"></a></p>
<p dir="auto">There are SO many AI programs that have been published that are command-line driven.  This in itself isn't a huge hurdle, but it's enough of a "pain in the ass" to type/paste the filename you want to colorize on the command line, run the program, then open the resulting output file in a file viewer.</p>
<p dir="auto">GUIs have the power to <strong>change the user experience</strong>, to fill the "GUI Gap".  With this colorizer example, the user only needs to supply a folder full of images, and then click on an image to both colorize and display the result.</p>
<p dir="auto">The program/algorithm to do the colorization was freely available, ready to use.  What was missing is the ease of use that a GUI could bring.</p>
<hr>
<h2 tabindex="-1" dir="auto">Graphing</h2>
<p dir="auto"><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/CPU%20Cores%20Dashboard%202.gif" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/CPU%20Cores%20Dashboard%202.gif" alt="img" width="500px" data-animated-image=""></a></p>
<p dir="auto">Displaying and interacting with data in a GUI is simple with PySimpleGUI.  You have several options.</p>
<div dir="auto"><p>You can use the built-in drawing/graphing capabilities to produce custom graphs.  This CPU usage monitor uses the <code>Graph</code> element
</p></div>
<p dir="auto"><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Matplotlib.jpg" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Matplotlib.jpg" alt="img" width="500px"></a></p>
<p dir="auto">Matplotlib is a popular choice with Python users.  PySimpleGUI can enable you to embed Matplotlib graphs directly into your GUI window.  You can even embed the interactive controls into your window if you want to retain the Matplotlib interactive features.</p>

<p dir="auto"><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Matplotlib2.jpg" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Matplotlib2.jpg" alt="img" width="500px"></a>
Using PySimpleGUI's color themes, you can produce graphs that are a notch above default graphs that most people create in Matplotlib.</p>

<hr>
<h2 tabindex="-1" dir="auto">Front-ends</h2>
<p dir="auto"><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/JumpCutter.png" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/JumpCutter.png" alt="img" width="500px"></a></p>
<p dir="auto">The "GUI Gap" mentioned earlier can be easily solved using PySimpleGUI.  You don't even need to have the source code to the program you wish to add a GUI onto.  A "front-end" GUI is one that collects information that is then passed to a command-line application.</p>
<p dir="auto">Front-end GUIs are a fantastic way for a programmer to distribute an application that users were reluctant to use previously because they didn't feel comfortable using a command-line interface.  These GUIs are your only choice for command-line programs that you don't have access to the source code for.</p>
<div dir="auto"><p>This example is a front-end for a program called "Jump Cutter".  The parameters are collected via the GUI, a command-line is constructed using those parameters, and then the command is executed with the output from the command-line program being routed to the GUI interface.  In this example, you can see in yellow the command that was executed.
</p></div>
<hr>
<h2 tabindex="-1" dir="auto">Raspberry Pi</h2>
<p dir="auto"><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Raspberry%20Pi.jpg" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Raspberry%20Pi.jpg" alt="img" width="500px"></a></p>
<p dir="auto">Because PySimpleGUI is compatible back to Python 3.4, it is capable of creating a GUI for your Raspberry Pi projects.  It works particularly well when paired with a touchscreen.  You can also use PySimpleGUIWeb to control your Pi if it doesn't have a monitor attached.</p>

<hr>
<h2 tabindex="-1" dir="auto">Easy Access to Advanced Features</h2>
<p dir="auto"><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Customized%20Titlebar.gif" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Customized%20Titlebar.gif" alt="img" width="500px" data-animated-image=""></a></p>
<p dir="auto">Because it's very easy to access many of the underlying GUI frameworks' features, it's possible to piece together capabilities to create applications that look nothing like those produced using the GUI framework directly.</p>
<div dir="auto"><p>For example, it's not possible to change the color/look-and-feel of a titlebar using tkinter or the other GUI packages, but with PySimpleGUI it's easy to create windows that appear as if they have a custom titlebar.
</p></div>
<p dir="auto"><a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Desktop%20Bouncing%20Balls.gif" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/Desktop%20Bouncing%20Balls.gif" alt="img" width="500px" data-animated-image=""></a></p>
<p dir="auto">Unbelievably, this window is using tkinter to achieve what appears to be something like a screensaver.</p>
<p dir="auto">On windows, tkinter can completely remove the background from your application.  Once again, PySimpleGUI makes accessing these capabilities trivial.  Creating a transparent window requires adding a single parameter to the call that creates your <code>Window</code>.  One parameter change can result in a simple application with this effect:</p>
<p dir="auto">You can interact with everything on your desktop, clicking through a full-screen window.</p>
<hr>
<h2 tabindex="-1" dir="auto">Themes</h2>
<p dir="auto">Tired of the default grey GUIs?  PySimpleGUI makes it trivial for your window to look nice by making a single call to the <code>theme</code> function.  There are over 150 different color themes available for you to choose:</p>
<p dir="auto">
<a href="https://github.com/PySimpleGUI/PySimpleGUI/blob/master"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/ThemePreview.jpg" alt="img" width="900px"></a>
</p>
<p dir="auto">With most GUI frameworks, you must specify the color for every widget you create.  PySimpleGUI takes this chore from you and will automatically color the Elements to match your chosen theme.</p>
<p dir="auto">To use a theme, call the <code>theme</code> function with the name of the theme before creating your window. You can add spaces for readability.  To set the theme to "Dark Grey 9":</p>
<div dir="auto" data-snippet-clipboard-copy-content="import PySimpleGUI as sg

sg.theme('dark grey 9')"><pre><span>import</span> <span>PySimpleGUI</span> <span>as</span> <span>sg</span>

<span>sg</span>.<span>theme</span>(<span>'dark grey 9'</span>)</pre></div>
<p dir="auto">This single line of code changes the window's appearance entirely:</p>
<p dir="auto">
<a href="https://github.com/PySimpleGUI/PySimpleGUI/blob/master"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/DarkGrey.jpg" alt="img" width="400px"></a>
</p>
<p dir="auto">The theme changed colors of the background, text, input background, input text, and button colors.  In other GUI packages, to change color schemes like this, you would need to specify the colors of each widget individually, requiring numerous changes to your code.</p>
<hr>
<h2 tabindex="-1" dir="auto">Distribution</h2>
<p dir="auto">Want to share your PySimpleGUI program with friends and family that don't have Python installed on their computer?  Try the GUI front-end for PyInstaller that you'll find in the <a href="https://github.com/PySimpleGUI/psgcompiler">psgcompiler</a> project.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/psgcompiler/main/screenshot_for_readme/psgcompiler_screenshot.jpg?token=ALAGMY3Z33WHFX3RTFXEZ73BTEUPO"><img src="https://raw.githubusercontent.com/PySimpleGUI/psgcompiler/main/screenshot_for_readme/psgcompiler_screenshot.jpg?token=ALAGMY3Z33WHFX3RTFXEZ73BTEUPO" alt=""></a></p>
<hr>
<h2 tabindex="-1" dir="auto">Support 💪</h2>
<p dir="auto">Your first stop should be the <a href="http://www.pysimplegui.org/" rel="nofollow">documentation</a> and <a href="http://demos.pysimplegui.org/" rel="nofollow">demo programs</a>.</p>
<p dir="auto">Be sure and install the Demo Browser (instructions in the Cookbook) so that you can search and run the 100s of demo programs.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_cookbook/Project_Browser_Main_Window_Explained.jpg"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_cookbook/Project_Browser_Main_Window_Explained.jpg" alt=""></a></p>
<p dir="auto">If you still have a question or need help...  no problem... help is available to you, at no cost. Simply <a href="http://issues.pysimplegui.org/" rel="nofollow">file an Issue</a> on the PySimpleGUI GitHub repo and you'll get help.</p>
<p dir="auto">Nearly all software companies have a form that accompanies bug reports.  It's not a bad trade... fill in the form, get free software support.  This information helps get you an answer efficiently.</p>
<p dir="auto">In addition to requesting information such as the version numbers of PySimpleGUI and underlying GUI frameworks, you're also given a checklist of items that may help you solve your problem.</p>
<p dir="auto"><em><strong>Please fill in the form.</strong></em>  It may feel pointless to you.  It may feel painful, despite it taking just a moment.  It helps get you a solution faster.  If it wasn't useful and necessary information to help you get a speedy reply and fix, you wouldn't be asked to fill it out.  "Help me help you".</p>
<h2 tabindex="-1" dir="auto">Supporting 	<a href="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/PSGSuperHero.png" rel="nofollow"><img src="https://raw.githubusercontent.com/PySimpleGUI/PySimpleGUI/master/images/for_readme/PSGSuperHero.png" alt="img" width="90px"></a></h2>
<p dir="auto">Financial support for the project is greatly appreciated.  To be honest, financial help is needed.  It's expensive just keeping the lights on.  The domain name registrations, a long list of subscriptions for things like Trinket, consulting help, etc., quickly add up to a sizable recurring cost.</p>
<p dir="auto">PySimpleGUI wasn't inexpensive to create. While a labor of love, it was very laborious over several years, and quite a bit was invested, and continues to be invested, in creating what you see today.</p>
<p dir="auto">PySimpleGUI has an open-source license and it would be great if it could remain that way.  If you or your company (especially if you're using PySimpleGUI in a company) are benefiting financially by using PySimpleGUI, you have the capability of extending the life of the project for you and other users.</p>
<h3 tabindex="-1" dir="auto">Buy Me A Coffee</h3>
<p dir="auto">Buy Me a Coffee is a great way to publicly support developers.  It's quick, easy, and your contribution is recorded so that others can see that you're a supporter of PySimpleGUI.  You can also choose to make your donation private.</p>
<p dir="auto"><a href="https://www.buymeacoffee.com/PySimpleGUI" rel="nofollow"><img src="https://camo.githubusercontent.com/0a290f56e8d4bfbdd3bb41c1192ea41c8ef744a5b3e70cf7f5eb46ef97871e78/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f76322f617269616c2d79656c6c6f772e706e67" alt="Buy Me A Coffee" width="217px" data-canonical-src="https://cdn.buymeacoffee.com/buttons/v2/arial-yellow.png"></a></p>
<h3 tabindex="-1" dir="auto">GitHub Sponsoring</h3>
<p dir="auto"><a href="https://github.com/sponsors/PySimpleGUI"><img src="https://camo.githubusercontent.com/a2ce41e084ce35696542594bca838198c4932e719c2fc8457393669e3b136c7e/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d53706f6e736f72266d6573736167653d254532253944254134266c6f676f3d476974487562266c696e6b3d25334375726c25334526636f6c6f723d663838333739" data-canonical-src="https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;link=%3Curl%3E&amp;color=f88379"></a></p>
<p dir="auto">The <a href="https://github.com/sponsors/PySimpleGUI">GitHub recurring sponsorship</a> is how you can sponsor the project at varying levels of support on an ongoing basis.  It's how many Open Source developers are able to receive corporate level sponsorship.</p>
<p dir="auto">Your help in financially contributing to the project would be greatly appreciated. Being an Open Source developer is financially challenging.  YouTube video creators are able to make a living creating videos.  It's not so easy yet for Open Source developers.</p>
<h2 tabindex="-1" dir="auto">Thank you for the Thank You's</h2>
<p dir="auto">To everyone that's helped, in whatever fashion, I'm very very grateful.</p>
<p dir="auto">Even taking a moment to say "thank you" helps, and a HUGE number of you have done that.  It's been an amazing number actually.  I value these thanks and find inspiration in the words alone.  Every message is a little push forward.  It adds a little bit of energy and keeps the whole project's momentum.  I'm so very grateful to everyone that's helped in whatever form it's been.</p>
<h2 tabindex="-1" dir="auto">Contributing  👷</h2>
<p dir="auto">While PySimpleGUI is currently licensed under an open-source license, the project itself is structured like a proprietary product.  Pull Requests are not accepted.</p>
<p dir="auto">One of the best ways for you to contribute code is to write and publish applications.  Users are inspired by seeing what other users build.  Here's a simple set of steps you can take - Create a GitHub repo, post the code, and include a screenshot in your repo's readme file.  Then come back to the PySimpleGUI repo and post a screenshot in Issue #10 or in the project's WIKI.</p>
<p dir="auto">If there is a feature missing that you need or you have an enhancement to suggest, then <a href="https://github.com/PySimpleGUI/PySimpleGUI/issues/new?assignees=&amp;labels=&amp;template=issue-form---must-fill-in-this-form-with-every-new-issue-submitted.md&amp;title=%5B+Enhancement%2FBug%2FQuestion%5D+My+problem+is...">open an Issue</a></p>
<h2 tabindex="-1" dir="auto">Special Thanks 🙏</h2>
<p dir="auto">The PySimpleGUI team is tiny and they're all superstars. Every week I've been stunned by what they do. Dream-team is an understatement.  Simply put <a href="https://github.com/Chr0nicT">@Chr0nicT</a>, <a href="https://github.com/jason990420">@jason990420</a>, <a href="https://github.com/snaiel">@Snaiel</a> and Mike<a href="https://github.com/PySimpleGUI">@PySimpleGUI</a> <em><strong>are</strong></em> PySimpleGUI.</p>
<p dir="auto">This version of the PySimpleGUI readme wouldn't have come together without the help from <a href="https://github.com/M4cs">@M4cs</a>. He's a fantastic developer and has been a PySimpleGUI supporter since the project's launch.   <a href="https://github.com/israel-dryer">@israel-dryer</a> is another long-term supporter and has written several PySimpleGUI programs that pushed the envelope of the package's capabilities.  The unique minesweeper that uses an image for the board was created by Israel.  <a href="https://github.com/jason990420">@jason990420</a> surprised many when he published the first card game using PySimpleGUI that you see pictured above as well as the first minesweeper game made with PySimpleGUI.  <a href="https://github.com/Chr0nicT">@Chr0nicT</a> is the youngest developer I've worked with, ever, on projects. This kid shocks me on a regular basis.  Ask for a capability, such as the PySimpleGUI GitHub Issues form error checking bot, and it simply happens regardless of the technologies involved. I'm fortunate that we were introduced. Someday he's going to be whisked away, but until then we're all benefiting from his talent. <a href="https://github.com/snaiel">@Snaiel</a> made the Udemy course happen. It wouldn't have been 1/4th of what it is without his amazing skills in video production, course design, marketing brilliance, and web programming. The Japanese version of the readme was greatly improved with help from  <a href="https://github.com/okajun35">@okajun35</a>. <a href="https://github.com/nngogol">@nngogol</a> has had a very large impact on the project, also getting involved with PySimpleGUI in the first year of initial release.  He wrote a designer, came up with the familiar window[key] lookup syntax, wrote the tools that create the documentation, designed the first set of doc strings as well as tools that generate the online documenation using the PySimpleGUI code itself.  PySimpleGUI would not be where it is today were it not for the help of these individuals.</p>
<p dir="auto">The more than 4,000 GitHub repos that use PySimpleGUI are owed a "Thank You" as well, for it is <em>you</em> that has been the inspiration that fuels this project's engine.</p>
<p dir="auto">The overseas users that post on Twitter overnight are the spark that starts the day's work on PySimpleGUI. They've been a source of positive energy that gets the development engine started and ready to run every day. As a token of appreciation, this readme file has been translated into <a href="https://github.com/PySimpleGUI/PySimpleGUI/blob/master/readme.ja.md">Japanese</a>.</p>
<p dir="auto">PySimpleGUI users have been the best user community an Open Source developer could hope for. I've never seen expressions of gratitude and joy like PySimpleGUI users show on a daily basis.</p>
<p dir="auto">© Copyright 2021, 2022 PySimpleGUI</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenBao – FOSS Fork of HashiCorp Vault (287 pts)]]></title>
            <link>https://github.com/openbao/openbao/tree/development</link>
            <guid>38579130</guid>
            <pubDate>Sat, 09 Dec 2023 06:09:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/openbao/openbao/tree/development">https://github.com/openbao/openbao/tree/development</a>, See on <a href="https://news.ycombinator.com/item?id=38579130">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">OpenBao</h2>
<hr>
<p dir="auto"><strong>Please note</strong>: We take OpenBao's security and our users' trust very seriously. If you believe you have found a security issue in Vault, <em>please responsibly disclose</em> by contacting us at <a href="https://github.com/openbao/openbao/blob/development/openbao-security@lists.lfedge.org">openbao-security@lists.lfedge.org</a>.</p>
<hr>

<ul dir="auto">
<li>Announcement list: <a href="https://lists.lfedge.org/g/openbao" rel="nofollow">Mailing List</a></li>
<li>Discussion forum: <a href="https://github.com/openbao/openbao/discussions">GitHub Discussions</a></li>
</ul>

<p dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/openbao/openbao/blob/development/bao.svg"><img width="300" alt="OpenBao Mascot" src="https://github.com/openbao/openbao/raw/development/bao.svg"></a>
</p>
<p dir="auto"><strong>OpenBao exists to provide a software solution to manage, store, and distribute sensitive data including secrets, certificates, and keys. The OpenBao community intends to provide this software under an OSI-approved open-source license, led by a community run under open governance principles.</strong></p>
<p dir="auto">A modern system requires access to a multitude of secrets: database credentials, API keys for external services, credentials for service-oriented architecture communication, etc. Understanding who is accessing what secrets is already very difficult and platform-specific. Adding on key rolling, secure storage, and detailed audit logs is almost impossible without a custom solution. This is where OpenBao steps in.</p>
<p dir="auto">The key features of OpenBao are:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Secure Secret Storage</strong>: Arbitrary key/value secrets can be stored
in OpenBao. OpenBao encrypts these secrets prior to writing them to persistent
storage, so gaining access to the raw storage isn't enough to access
your secrets. OpenBao can write to disk, <a href="https://www.consul.io/" rel="nofollow">Consul</a>,
and more.</p>
</li>
<li>
<p dir="auto"><strong>Dynamic Secrets</strong>: OpenBao can generate secrets on-demand for some
systems, such as AWS or SQL databases. For example, when an application
needs to access an S3 bucket, it asks OpenBao for credentials, and OpenBao
will generate an AWS keypair with valid permissions on demand. After
creating these dynamic secrets, OpenBao will also automatically revoke them
after the lease is up.</p>
</li>
<li>
<p dir="auto"><strong>Data Encryption</strong>: OpenBao can encrypt and decrypt data without storing
it. This allows security teams to define encryption parameters and
developers to store encrypted data in a location such as a SQL database without
having to design their own encryption methods.</p>
</li>
<li>
<p dir="auto"><strong>Leasing and Renewal</strong>: All secrets in OpenBao have a <em>lease</em> associated
with them. At the end of the lease, OpenBao will automatically revoke that
secret. Clients are able to renew leases via built-in renew APIs.</p>
</li>
<li>
<p dir="auto"><strong>Revocation</strong>: OpenBao has built-in support for secret revocation. OpenBao
can revoke not only single secrets, but a tree of secrets, for example,
all secrets read by a specific user, or all secrets of a particular type.
Revocation assists in key rolling as well as locking down systems in the
case of an intrusion.</p>
</li>
</ul>
<h2 tabindex="-1" dir="auto">Documentation, Getting Started, and Certification Exams</h2>

<h2 tabindex="-1" dir="auto">Developing Vault</h2>
<p dir="auto">If you wish to work on OpenBao itself or any of its built-in systems, you'll
first need <a href="https://www.golang.org/" rel="nofollow">Go</a> installed on your machine.</p>
<p dir="auto">For local dev first make sure Go is properly installed, including setting up a
<a href="https://golang.org/doc/code.html#GOPATH" rel="nofollow">GOPATH</a>. Ensure that <code>$GOPATH/bin</code> is in
your path as some distributions bundle the old version of build tools. Next, clone this
repository. OpenBao uses <a href="https://github.com/golang/go/wiki/Modules">Go Modules</a>,
so it is recommended that you clone the repository <em><strong>outside</strong></em> of the GOPATH.
You can then download any required build tools by bootstrapping your environment:</p>

<p dir="auto">To compile a development version of OpenBao, run <code>make</code> or <code>make dev</code>. This will
put the OpenBao binary in the <code>bin</code> and <code>$GOPATH/bin</code> folders:</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ make dev
...
$ bin/bao
..."><pre>$ make dev
...
$ bin/bao
...</pre></div>
<p dir="auto">To compile a development version of Vault with the UI, run <code>make static-dist dev-ui</code>. This will
put the OpenBao binary in the <code>bin</code> and <code>$GOPATH/bin</code> folders:</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ make static-dist dev-ui
...
$ bin/bao
..."><pre>$ make static-dist dev-ui
...
$ bin/bao
...</pre></div>
<p dir="auto">To run tests, type <code>make test</code>. Note: this requires Docker to be installed. If
this exits with exit status 0, then everything is working!</p>

<p dir="auto">If you're developing a specific package, you can run tests for just that
package by specifying the <code>TEST</code> variable. For example below, only
<code>vault</code> package tests will be run.</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ make test TEST=./vault
..."><pre>$ make <span>test</span> TEST=./vault
...</pre></div>
<h3 tabindex="-1" dir="auto">Acceptance Tests</h3>
<p dir="auto">OpenBao has comprehensive <a href="https://en.wikipedia.org/wiki/Acceptance_testing" rel="nofollow">acceptance tests</a>
covering most of the features of the secret and auth methods.</p>
<p dir="auto">If you're working on a feature of a secret or auth method and want to
verify it is functioning (and also hasn't broken anything else), we recommend
running the acceptance tests.</p>
<p dir="auto"><strong>Warning:</strong> The acceptance tests create/destroy/modify <em>real resources</em>, which
may incur real costs in some cases. In the presence of a bug, it is technically
possible that broken backends could leave dangling data behind. Therefore,
please run the acceptance tests at your own risk. At the very least,
we recommend running them in their own private account for whatever backend
you're testing.</p>
<p dir="auto">To run the acceptance tests, invoke <code>make testacc</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ make testacc TEST=./builtin/logical/consul
..."><pre>$ make testacc TEST=./builtin/logical/consul
...</pre></div>
<p dir="auto">The <code>TEST</code> variable is required, and you should specify the folder where the
backend is. The <code>TESTARGS</code> variable is recommended to filter down to a specific
resource to test, since testing all of them at once can sometimes take a very
long time.</p>
<p dir="auto">Acceptance tests typically require other environment variables to be set for
things such as access keys. The test itself should error early and tell
you what to set, so it is not documented here.</p>

</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Nebula Genomics – First to offer consumer anonymous sequencing (156 pts)]]></title>
            <link>https://nebula.org/anonymous-seq/</link>
            <guid>38578951</guid>
            <pubDate>Sat, 09 Dec 2023 05:38:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nebula.org/anonymous-seq/">https://nebula.org/anonymous-seq/</a>, See on <a href="https://news.ycombinator.com/item?id=38578951">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__nuxt" data-server-rendered="true"><div data-v-18711aaa=""><p><a href="https://nebula.org/whole-genome-sequencing-dna-test/" data-v-18711aaa=""><img alt="nebula-logo" src="https://portal.nebula.org/api/public-images/brochure/group.svg" data-v-18711aaa=""></a></p>   </div> <div data-v-2fba6a8e=""> <p>
    Nebula Genomics is proud to be the first personal genomics company to offer
    anonymous genetic testing.
  </p></div> <div data-v-3dba5014=""><div data-v-3dba5014=""> <p>
      Anonymous Sequencing is a service that enables
      you to gain all the benefits of genomic sequencing, without needing to share any personal information.
      Sign up, submit your sample, and receive your genetic report without
      ever personally identifying yourself. For more information about what you receive by getting your
      genome sequenced with Nebula Genomics, check out
      <a target="_blank" href="https://portal.nebula.org/get-sequenced" data-v-3dba5014="">Nebula Explore</a>.
    </p></div> <p><img src="https://portal.nebula.org/api/public-images/brochure/anonymous-sequencing-desktop.png" data-v-3dba5014=""> <img src="https://portal.nebula.org/api/public-images/brochure/anonymous-sequencing-mobile.png" data-v-3dba5014=""></p></div> <div data-v-58ca23f4=""><p>
      PRIVACY FIRST
    </p> <p>
      Why does this matter?
    </p> <p>
      Anonymous genetic testing can eliminate several potential vulnerabilities individuals
      are exposed to when purchasing genetic testing services. Most importantly, enabling
      individuals to remain anonymous would eliminate the dependence on data de-identification
      by personal genomics companies prior to data sharing.
    </p></div> <div data-v-d23d7b80=""><div data-v-d23d7b80=""> <p>
        Cryptocurrencies, such as Bitcoin, can enable (pseudo)anonymous payments because they rely on blockchain addresses that can have no connection to real-life identities such as name, address or bank accounts. Alternatively, a prepaid debit card purchased with cash can be used to make anonymous payments.
      </p></div> <div data-v-d23d7b80=""> <p>
        Consider using an email address that is not tied to any personal information. Creating a new email address that you are using for nebula purposes only through a service such as <a target="_blank" href="https://protonmail.com/" data-v-d23d7b80="">Protonmail</a> is a great first step.
      </p></div> <div data-v-d23d7b80=""> <p>
        A virtual private network (VPN) is a tool that allows you to browse the internet while maintaining your privacy. It is good practice to always use a VPN, especially when you are purchasing anything or sharing any personal information online.
      </p></div> <div data-v-d23d7b80=""> <p>
        A PO Box s a uniquely addressable lockable box that allows you to have something shipped to you without needing to use your own address. You can reserve a PO Box from the USPS.
      </p></div></div> <div data-v-52d8f226=""><section data-v-52d8f226=""><div data-v-52d8f226=""><p>
        Nebula Library
      </p> <p>
        The Nebula Library is a curated and personalized repository
        of research publications and genomic discoveries.
      </p> <p>
        New research studies are frequently added to the Nebula Library.
        These studies cover cutting-edge research, and how it could impact
        you based on your genomic data.
      </p></div> <img alt="Whole Genome Sequencing Nebula Library" src="https://portal.nebula.org/api/public-images/brochure/nebula-library@3x.png" data-v-52d8f226=""></section> <div data-v-52d8f226=""> <p data-v-52d8f226="">
        Unlike other DNA Tests, Nebula Explore unlocks your whole genome instead of just a
        fraction. Additionally, unlike other tests, we’ll give you all of your data, including:
      </p> <div data-v-52d8f226=""><p><img alt="BAM files for Whole Genome Sequencing" src="https://portal.nebula.org/api/public-images/brochure/file-BAM@2x.png" width="40" height="41" data-v-52d8f226=""></p><h6 data-v-52d8f226="">CRAM</h6> <p data-v-52d8f226="">Your genome, reconstructed from your sequencing data.</p></div> <div data-v-52d8f226=""><p><img alt="VCF files for Whole Genome Sequencing" src="https://portal.nebula.org/api/public-images/brochure/file-VCF@2x.png" width="40" height="41" data-v-52d8f226=""></p><h6 data-v-52d8f226="">VCF</h6> <p data-v-52d8f226="">A list of all genetic variants found in your genome.</p> <p data-v-52d8f226="">
          Note: Imputation for Nebula Explore is based on the 1000 Genomes Phase 3 or HRC
        </p></div></div> <section data-v-52d8f226=""><h2 data-v-52d8f226="">A Lifetime of Discovery</h2> <p data-v-52d8f226="">
      Nebula Explore sequences all of your DNA, even the parts that haven’t been researched yet.
      As the understanding of genomics advances, you can stay up-to-date on your genome with the Nebula Library.
      We’ll provide you highly customized reports on new variants, risk scores, and research.
    </p> <div data-v-52d8f226=""><p><img alt="Microbiome reports for Whole Genome Sequencing" src="https://portal.nebula.org/api/public-images/brochure/group-36@2x.png" width="528" height="393" data-v-52d8f226=""></p> <div data-v-52d8f226=""><p>
          Microbiome
        </p> <div data-v-52d8f226=""><p><img src="https://portal.nebula.org/api/public-images/brochure/product-checkmark@2x.png" width="36" height="36" data-v-52d8f226=""></p><p data-v-52d8f226="">Discover the composition of your oral microbiome.</p></div> <div data-v-52d8f226=""><p><img src="https://portal.nebula.org/api/public-images/brochure/product-checkmark@2x.png" width="36" height="36" data-v-52d8f226=""></p><p data-v-52d8f226="">Access curated research studies and how they relate to your microbiome.</p></div> <div data-v-52d8f226=""><p><img src="https://portal.nebula.org/api/public-images/brochure/product-checkmark@2x.png" width="36" height="36" data-v-52d8f226=""></p><p data-v-52d8f226="">Compare how your bacterial composition compares to the general population.</p></div></div></div> <div data-v-52d8f226=""><div data-v-52d8f226=""><p>
          Traits
        </p> <div data-v-52d8f226=""><p><img src="https://portal.nebula.org/api/public-images/brochure/product-checkmark@2x.png" width="36" height="36" data-v-52d8f226=""></p><p data-v-52d8f226="">Learn more about the traits that make up your physical appearance.</p></div> <div data-v-52d8f226=""><p><img src="https://portal.nebula.org/api/public-images/brochure/product-checkmark@2x.png" width="36" height="36" data-v-52d8f226=""></p><p data-v-52d8f226="">See how sensitive you are to certain tastes and smells.</p></div> <div data-v-52d8f226=""><p><img src="https://portal.nebula.org/api/public-images/brochure/product-checkmark@2x.png" width="36" height="36" data-v-52d8f226=""></p><p data-v-52d8f226="">Find out how your genetic makeup has impacted your ability to gain or lose weight.</p></div> <div data-v-52d8f226=""><p><img src="https://portal.nebula.org/api/public-images/brochure/product-checkmark@2x.png" width="36" height="36" data-v-52d8f226=""></p><p data-v-52d8f226="">Understand how susceptible you might be to addiction.</p></div> <div data-v-52d8f226=""><p><img src="https://portal.nebula.org/api/public-images/brochure/product-checkmark@2x.png" width="36" height="36" data-v-52d8f226=""></p><p data-v-52d8f226="">Figure out whether you have the genetic potential to be a great athlete!</p></div></div> <p><img src="https://portal.nebula.org/api/public-images/brochure/traits-blockup@2x.png" width="528" height="393" data-v-52d8f226=""></p></div></section>  <section data-v-52d8f226=""><div data-v-52d8f226=""><h2 data-v-52d8f226="">Re-Discover Who You Are and Where You Came From</h2> <p data-v-52d8f226="">Find out about your heritage and which geographic locations your family traces back to</p></div> <p><img src="https://portal.nebula.org/api/public-images/brochure/ancestry-map@2x.png" width="459" height="395" data-v-52d8f226=""></p></section></div> <div data-v-733b0bbe=""><p>
      Nebula Anonymous Sequencing
    </p> <p>
      $175
    </p> <div data-v-733b0bbe=""><div data-v-733b0bbe=""><p>1 year of access to the Nebula Library, including
        personalized curation of new genomic research and how it impacts you
      </p></div> <div data-v-733b0bbe=""><p>Access to raw genomic data (VCF, FASTQ, CRAM)
      </p></div>  <div data-v-733b0bbe=""><p>Genetic traits (includes wellness, nutrition, diet)
      </p></div> <div data-v-733b0bbe=""><p>Access to blockchain based secure storage
      </p></div> <div data-v-733b0bbe=""><p>Oral microbiome sequencing
      </p></div> <div data-v-733b0bbe=""><p>Priority access to research opportunities and studies
      </p></div></div> <p>
      Coming soon!
    </p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA["If buying isn't owning, piracy isn't stealing" (180 pts)]]></title>
            <link>https://pluralistic.net/2023/12/08/playstationed/</link>
            <guid>38578872</guid>
            <pubDate>Sat, 09 Dec 2023 05:22:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pluralistic.net/2023/12/08/playstationed/">https://pluralistic.net/2023/12/08/playstationed/</a>, See on <a href="https://news.ycombinator.com/item?id=38578872">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-7581">
	<!-- .entry-header -->

	
	
	<div>
		<p><!--
Tags:
playstation, sony, copyright, copyfight, drm, monopoly, enshittification, batgirl, road runner, financiazation, the end of ownership, ip

Summary:
"If buying isn't owning, piracy isn't stealing"; Hey look at this

URL:
https://pluralistic.net/2023/12/08/playstationed/

Title:
Pluralistic: "If buying isn't owning, piracy isn't stealing" (08 Dec 2023) playstationed

Bullet:
👨🏾‍💻

Separator:
_,.-'~'-.,__,.-'~'-.,__,.-'~'-.,__,.-'~'-.,__,.-'~'-.,_

Top Sources:
None

--><br>
<a href="https://pluralistic.net/2023/12/08/playstationed/"><img decoding="async" src="https://i0.wp.com/craphound.com/images/08Dec2023.jpg?w=840&amp;ssl=1" data-recalc-dims="1"></a></p>
<h2>Today's links</h2>
<ul>
<li><a href="https://pluralistic.net/2023/12/08/playstationed/#tyler-james-hill">"If buying isn't owning, piracy isn't stealing"</a>: When Big Content makes the paid version *worse* than the free one.
</li>
<li><a href="https://pluralistic.net/2023/12/08/playstationed/#linkdump">Hey look at this</a>: Delights to delectate.
</li>
<li><a href="https://pluralistic.net/2023/12/08/playstationed/#retro">This day in history</a>: 2003, 2008, 2018, 2022.
</li>
<li><a href="https://pluralistic.net/2023/12/08/playstationed/#bragsheet">Colophon</a>: Recent publications, upcoming/recent appearances, current writing projects, current reading
</li>
</ul>

<hr>
<p><a name="tyler-james-hill"></a><br>
<img decoding="async" alt="The forward deck of a rigged sailing ship. A ogrish caricatured millionaire stands at a podium sporting a gilded dollar-sign-shaped lever, in place of a ship's wheel. He wears a skull-and-bones pirate hat and eyepatch. He is holding up a fil reel with one white-gloved hand." src="https://i0.wp.com/craphound.com/images/no-property-no-piracy.jpg?w=840&amp;ssl=1" data-recalc-dims="1"></p>
<h2>"If buying isn't owning, piracy isn't stealing" (<a href="https://pluralistic.net/2023/12/08/playstationed/#tyler-james-hill">permalink</a>)</h2>
<p>20 years ago, I got in a (friendly) public spat with Chris Anderson, who was then the editor in chief of <em>Wired</em>. I'd publicly noted my disappointment with glowing <em>Wired</em> reviews of DRM-encumbered digital devices, prompting Anderson to call me unrealistic for expecting the magazine to condemn gadgets for their DRM:</p>
<p><a href="https://longtail.typepad.com/the_long_tail/2004/12/is_drm_evil.html">https://longtail.typepad.com/the_long_tail/2004/12/is_drm_evil.html</a></p>
<p>I replied in public, telling him that he'd misunderstood. This wasn't an issue of ideological purity – it was about good reviewing practice. <em>Wired</em> was telling readers to buy a product because it had features x, y and z, but at any time in the future, without warning, without recourse, the vendor could switch off any of those features:</p>
<p><a href="https://memex.craphound.com/2004/12/29/cory-responds-to-wired-editor-on-drm/">https://memex.craphound.com/2004/12/29/cory-responds-to-wired-editor-on-drm/</a></p>
<p>I proposed that all <em>Wired</em> endorsements for DRM-encumbered products should come with this disclaimer:</p>
<blockquote><p>
  WARNING: THIS DEVICE’S FEATURES ARE SUBJECT TO REVOCATION WITHOUT NOTICE, ACCORDING TO TERMS SET OUT IN SECRET NEGOTIATIONS. YOUR INVESTMENT IS CONTINGENT ON THE GOODWILL OF THE WORLD’S MOST PARANOID, TECHNOPHOBIC ENTERTAINMENT EXECS. THIS DEVICE AND DEVICES LIKE IT ARE TYPICALLY USED TO CHARGE YOU FOR THINGS YOU USED TO GET FOR FREE — BE SURE TO FACTOR IN THE PRICE OF BUYING ALL YOUR MEDIA OVER AND OVER AGAIN. AT NO TIME IN HISTORY HAS ANY ENTERTAINMENT COMPANY GOTTEN A SWEET DEAL LIKE THIS FROM THE ELECTRONICS PEOPLE, BUT THIS TIME THEY’RE GETTING A TOTAL WALK. HERE, PUT THIS IN YOUR MOUTH, IT’LL MUFFLE YOUR WHIMPERS.
</p></blockquote>
<p><em>Wired</em> didn't take me up on this suggestion.</p>
<p>But I was right. The ability to change features, prices, and availability of things you've <em>already paid for</em> is a powerful temptation to corporations. Inkjet printers were always a sleazy business, but once these printers got directly connected to the internet, companies like HP started pushing out "security updates" that modified your printer to make it reject the third-party ink you'd paid for:</p>
<p><a href="https://www.eff.org/deeplinks/2020/11/ink-stained-wretches-battle-soul-digital-freedom-taking-place-inside-your-printer">https://www.eff.org/deeplinks/2020/11/ink-stained-wretches-battle-soul-digital-freedom-taking-place-inside-your-printer</a></p>
<p>Now, this scam wouldn't work if you could just put things back the way they were before the "update," which is where the DRM comes in. A thicket of IP laws make reverse-engineering DRM-encumbered products into a <em>felony</em>. Combine always-on network access with indiscriminate criminalization of user modification, and the enshittification will follow, as surely as night follows day.</p>
<p>This is the root of all the right to repair shenanigans. Sure, companies withhold access to diagnostic codes and parts, but codes can be extracted and parts can be cloned. The real teeth in blocking repair comes from the law, not the tech. The company that makes McDonald's wildly unreliable McFlurry machines makes a fortune charging franchisees to fix these eternally broken appliances. When a third party threatened this racket by reverse-engineering the DRM that blocked independent repair, they got buried in legal threats:</p>
<p><a href="https://pluralistic.net/2021/04/20/euthanize-rentier-enablers/#cold-war">https://pluralistic.net/2021/04/20/euthanize-rentier-enablers/#cold-war</a></p>
<p>Everybody loves this racket. In Poland, a team of security researchers at the OhMyHack conference just presented their teardown of the anti-repair features in NEWAG Impuls <em>locomotives</em>. NEWAG boobytrapped their trains to try and detect if they've been independently serviced, and to respond to any unauthorized repairs by bricking themselves:</p>
<p><a href="https://mamot.fr/@q3k@hackerspace.pl/111528162905209453">https://mamot.fr/@q3k@hackerspace.pl/111528162905209453</a></p>
<p>Poland is part of the EU, meaning that they are required to uphold the provisions of the 2001 EU Copyright Directive, including Article 6, which bans this kind of reverse-engineering. The researchers are planning to present their work again at the Chaos Communications Congress in Hamburg this month – Germany is also a party to the EUCD. The threat to researchers from presenting this work is real – but so is the threat to conferences that host them:</p>
<p><a href="https://www.cnet.com/tech/services-and-software/researchers-face-legal-threats-over-sdmi-hack/">https://www.cnet.com/tech/services-and-software/researchers-face-legal-threats-over-sdmi-hack/</a></p>
<p>20 years ago, Chris Anderson told me that it was unrealistic to expect tech companies to refuse demands for DRM from the entertainment companies whose media they hoped to play. My argument – then and now – was that any tech company that sells you a gadget that can have its features revoked is defrauding you. You're paying for x, y and z – and if they are contractually required to remove x and y on demand, they are selling you something that you can't rely on, without making that clear to you.</p>
<p>But it's worse than that. When a tech company designs a device for remote, irreversible, nonconsensual downgrades, they <em>invite</em> both external and internal parties to demand those downgrades. Like Pavel Chekov says, a phaser on the bridge in Act I is going to go off by Act III. Selling a product that can be remotely, irreversibly, nonconsensually downgraded <em>inevitably</em> results in  the worst person at the product-planning meeting proposing to do so. The fact that there are no penalties for doing so makes it impossible for the better people in that meeting to win the ensuing argument, leading to the moral injury of seeing a product you care about reduced to a pile of shit:</p>
<p><a href="https://pluralistic.net/2023/11/25/moral-injury/#enshittification">https://pluralistic.net/2023/11/25/moral-injury/#enshittification</a></p>
<p>But even if everyone at that table is a swell egg who wouldn't dream of enshittifying the product, the existence of a remote, irreversible, nonconsensual downgrade feature makes the product vulnerable to <em>external</em> actors who will demand that it be used. Back in 2022, Adobe informed its customers that it had lost its deal to include Pantone colors in Photoshop, Illustrator and other "software as a service" packages. As a result, users would now have to start paying a monthly fee to see their own, completed images. Fail to pay the fee and all the Pantone-coded pixels in your artwork would just show up as black:</p>
<p><a href="https://pluralistic.net/2022/10/28/fade-to-black/#trust-the-process">https://pluralistic.net/2022/10/28/fade-to-black/#trust-the-process</a></p>
<p>Adobe blamed this on Pantone, and there was lots of speculation about what had happened. Had Pantone jacked up its price to Adobe, so Adobe passed the price on to its users in the hopes of embarrassing Pantone? Who knows? Who <em>can</em> know? That's the point: you invested in Photoshop, you spent money and time creating images with it, but you have no way to know whether or how you'll be able to access those images in the future. Those terms can change at any time, and if you don't like it, you can go fuck yourself.</p>
<p>These companies are all run by CEOs who got their MBAs at Darth Vader University, where the first lesson is "I have altered the deal, pray I don't alter it further." Adobe <em>chose</em> to design its software so it would be vulnerable to this kind of demand, and then its <em>customers</em> paid for that choice. Sure, Pantone are dicks, but this is <em>Adobe's</em> fault. They stuck a KICK ME sign to your back, and Pantone obliged.</p>
<p>This keeps happening and it's <em>gonna</em> keep happening. Last week, Playstation owners who'd bought (or "bought") Warner TV shows got messages telling them that Warner had walked away from its deal to sell videos through the Playstation store, and so all the videos they'd paid for were going to be deleted forever. They wouldn't even get refunds (to be clear, refunds would also be bullshit – when I was a bookseller, I didn't get to break into your house and steal the books I'd sold you, not even if I left some cash on your kitchen table).</p>
<p>Sure, Warner is an unbelievably shitty company run by the single most guillotineable executive in all of Southern California, the loathsome David Zaslav, who oversaw the merger of Warner with Discovery. Zaslav is the creep who figured out that he could make more money <em>cancelling completed movies and TV shows</em> and taking a tax writeoff than he stood to make by releasing them:</p>
<p><a href="https://aftermath.site/there-is-no-piracy-without-ownership">https://aftermath.site/there-is-no-piracy-without-ownership</a></p>
<p>Imagine putting years of your life into making a program – showing up on set at 5AM and leaving your kids to get their own breakfast, performing stunts that could maim or kill you, working 16-hour days during the acute phase of the covid pandemic and driving home in the night, only to have this absolute <em>turd</em> of a man <em>delete</em> the program before anyone could see it, forever, to get a minor tax advantage. Talk about moral injury!</p>
<p>But without Sony's complicity in designing a remote, irreversible, nonconsensual downgrade feature into the Playstation, Zaslav's war on art and creative workers would be limited to material that hadn't been released yet. Thanks to Sony's awful choices, David Zaslav can break into your house, steal your movies – and he doesn't even have to leave a twenty on your kitchen table.</p>
<p>The point here – the point I made 20 years ago to Chris Anderson – is that <em>this is the foreseeable, inevitable result</em> of designing devices for remote, irreversible, nonconsensual downgrades. Anyone who was paying attention should have figured that out in the GW Bush administration. Anyone who does this <em>today</em>? Absolute flaming garbage.</p>
<p>Sure, Zaslav deserves to be staked out over and anthill and slathered in high-fructose corn syrup. But save the next anthill for the Sony exec who shipped a product that would let Zaslav come into your home and rob you. That piece of shit <em>knew what they were doing</em> and <em>they did it anyway</em>. <em>Fuck</em> them. Sideways. With a <em>brick</em>.</p>
<p>Meanwhile, the studios keep making the case for stealing movies rather than paying for them. As Tyler James Hill wrote: "If buying isn't owning, piracy isn't stealing":</p>
<p><a href="https://bsky.app/profile/tylerjameshill.bsky.social/post/3kflw2lvam42n">https://bsky.app/profile/tylerjameshill.bsky.social/post/3kflw2lvam42n</a></p>
<p>(<i>Image: <a href="https://pxhere.com/en/photo/218986">Alan Levine</a>, <a href="https://creativecommons.org/licenses/by/2.0/">CC BY 2.0</a> modified</i>)</p>
<hr>

<h2>Hey look at this (<a href="https://pluralistic.net/2023/12/08/playstationed/#linkdump">permalink</a>)</h2>
<p><img decoding="async" src="https://i0.wp.com/craphound.com/images/heylookatthis.jpg?w=840&amp;ssl=1" data-recalc-dims="1"></p>
<ul>
<li>Taking advantage of the Purge by building dense multifamily housing units Palo Alto <a href="https://twitter.com/tomgara/status/1731520311206490440">https://twitter.com/tomgara/status/1731520311206490440</a> (h/t Super Punch)
</li>
<li>
<p>Electing the Doge of Venice: analysis of a 13th Century protocol <a href="https://www.hpl.hp.com/techreports/2007/HPL-2007-28R1.html">https://www.hpl.hp.com/techreports/2007/HPL-2007-28R1.html</a> (h/t Schneier)</p>
</li>
<li>
<p>23andMe just sent out an email trying to trick customers into accepting a TOS change that will prevent you from suing them after they literally lost your genome to thieves <a href="https://mamot.fr/@thomasfuchs@hachyderm.io/111531294948620738">https://mamot.fr/@thomasfuchs@hachyderm.io/111531294948620738</a></p>
</li>
</ul>
<hr>
<p><a name="retro"></a><br>
<img decoding="async" alt="A Wayback Machine banner." src="https://i0.wp.com/craphound.com/images/wayback-machine-hed-796x416.png?resize=796%2C416&amp;ssl=1" data-recalc-dims="1"></p>
<h2>This day in history (<a href="https://pluralistic.net/2023/12/08/playstationed/#retro">permalink</a>)</h2>
<p>#20yrsago Beat Me Daddy (Eight to the Bar) <a href="https://web.archive.org/web/20040112231612/http://www.forteanbureau.com/dec2003/Doctorow/index.html">https://web.archive.org/web/20040112231612/http://www.forteanbureau.com/dec2003/Doctorow/index.html</a></p>
<p>#15yrsago New Rochelle school board mutilates books to protect children <a href="https://web.archive.org/web/20081210080026/http://www.newrochelletalk.com/?q=node/288">https://web.archive.org/web/20081210080026/http://www.newrochelletalk.com/?q=node/288</a></p>
<p>#15yrsago  How to Pay for National Health Insurance <a href="https://ritholtz.com/2008/12/how-to-pay-for-national-health-insurance/">https://ritholtz.com/2008/12/how-to-pay-for-national-health-insurance/</a></p>
<p>#5yrsago Literal breadboarding, with toast and Vegemite <a href="https://twitter.com/lukeweston/status/1071220362606608385">https://twitter.com/lukeweston/status/1071220362606608385</a></p>
<p>#5yrsago $30 plug-and-play kit converts a Bird scooter into a “personal scooter” <a href="https://hackaday.com/2018/12/07/liberating-birds-for-a-cheap-electric-scooter/">https://hackaday.com/2018/12/07/liberating-birds-for-a-cheap-electric-scooter/</a></p>
<p>#5yrsago An annual Christmas craft tradition: the Die Hard Air Duct ornament <a href="https://web.archive.org/web/20171214160218/https://unlikelywords.com/2016/12/23/how-to-make-your-own-die-hard-christmas-tree-ornament/">https://web.archive.org/web/20171214160218/https://unlikelywords.com/2016/12/23/how-to-make-your-own-die-hard-christmas-tree-ornament/</a></p>
<p>#5yrsago Top FTC official is so such a corporate shill that he has conflicts of interest for 100 companies, including Equifax and Facebook <a href="https://www.theverge.com/2018/12/6/18129572/facebook-uber-ftc-conflict-interest-andrew-smith">https://www.theverge.com/2018/12/6/18129572/facebook-uber-ftc-conflict-interest-andrew-smith</a></p>
<p>#5yrsago Ha-ha, only serious: McSweeney’s on price-gouging in the emergency room <a href="https://www.mcsweeneys.net/articles/welcome-to-our-modern-hospital-where-if-you-want-to-know-a-price-you-can-go-fuck-yourself">https://www.mcsweeneys.net/articles/welcome-to-our-modern-hospital-where-if-you-want-to-know-a-price-you-can-go-fuck-yourself</a></p>
<p>#1yrago One weird trick to make monopolies self-destruct <a href="https://pluralistic.net/2022/12/08/one-last-job/#icahns-raiders">https://pluralistic.net/2022/12/08/one-last-job/#icahns-raiders</a></p>
<hr>
<p><a name="bragsheet"></a><br>
<img decoding="async" src="https://i0.wp.com/craphound.com/images/colophonimages.jpeg?w=840&amp;ssl=1" data-recalc-dims="1"></p>
<h2>Colophon (<a href="https://pluralistic.net/2023/12/08/playstationed/#bragsheet">permalink</a>)</h2>
<p>Today's top sources:</p>
<p>Currently writing:</p>
<ul>
<li>A Little Brother short story about DIY insulin PLANNING
</li>
<li>
<p>Picks and Shovels, a Martin Hench noir thriller about the heroic era of the PC. FORTHCOMING TOR BOOKS JAN 2025</p>
</li>
<li>
<p>The Bezzle, a Martin Hench noir thriller novel about the prison-tech industry. FORTHCOMING TOR BOOKS FEB 2024</p>
</li>
<li>
<p>Vigilant, Little Brother short story about remote invigilation. FORTHCOMING ON TOR.COM</p>
</li>
<li>
<p>Spill, a Little Brother short story about pipeline protests. FORTHCOMING ON TOR.COM</p>
</li>
</ul>
<p>Latest podcast: Don’t Be Evil <a href="https://craphound.com/articles/2023/12/03/dont-be-evil/">https://craphound.com/articles/2023/12/03/dont-be-evil/</a><br>
Upcoming appearances:</p>
<ul>
<li>The Geneva Dialog (Dec 7)<br>
<a href="https://genevadialogue.ch/event/geneva-manual-event/">https://genevadialogue.ch/event/geneva-manual-event/</a></li>
</ul>
<p>Recent appearances:</p>
<ul>
<li>AI needs to work with humans — not replace us (CBC IDEAS)<br>
<a href="https://www.cbc.ca/radio/ideas/artificial-intelligence-provocation-ideas-festival-1.7046841">https://www.cbc.ca/radio/ideas/artificial-intelligence-provocation-ideas-festival-1.7046841</a>
</li>
<li>
<p>Explore the Future of the 🔥 Climate and Information Climate (Andrew Revkin)<br>
<a href="https://www.youtube.com/watch?v=-OGT-cvs4_Q">https://www.youtube.com/watch?v=-OGT-cvs4_Q</a></p>
</li>
<li>
<p>Digital Markets Act; Interoperability; Entrenchment; Copyright; "What-About-Ism" (Digital Markets Research Hub)<br>
<a href="https://www.youtube.com/watch?v=Xm23pO5_WKM">https://www.youtube.com/watch?v=Xm23pO5_WKM</a></p>
</li>
</ul>
<p>Latest books:</p>
<ul>
<li>"The Lost Cause:" a solarpunk novel of hope in the climate emergency, Tor Books (US), Head of Zeus (UK), November 2023 (<a href="http://lost-cause.org/">http://lost-cause.org</a>). Signed, personalized copies at Dark Delicacies (<a href="https://www.darkdel.com/store/p3007/Pre-Order_Signed_Copies%3A_The_Lost_Cause_HB.html#/">https://www.darkdel.com/store/p3007/Pre-Order_Signed_Copies%3A_The_Lost_Cause_HB.html#/</a>)
</li>
<li>
<p>"The Internet Con": A nonfiction book about interoperability and Big Tech (Verso) September 2023 (<a href="http://seizethemeansofcomputation.org/">http://seizethemeansofcomputation.org</a>). Signed copies at Book Soup (<a href="https://www.booksoup.com/book/9781804291245">https://www.booksoup.com/book/9781804291245</a>).</p>
</li>
<li>
<p>"Red Team Blues": "A grabby, compulsive thriller that will leave you knowing more about how the world works than you did before." Tor Books <a href="http://redteamblues.com/">http://redteamblues.com</a>. Signed copies at Dark Delicacies (US): <a href="https://www.darkdel.com/store/p2873/Wed%2C_Apr_26th_6pm%3A_Red_Team_Blues%3A_A_Martin_Hench_Novel_HB.html#/"> and Forbidden Planet (UK): </a><a href="https://forbiddenplanet.com/385004-red-team-blues-signed-edition-hardcover/">https://forbiddenplanet.com/385004-red-team-blues-signed-edition-hardcover/</a>.</p>
</li>
<li>
<p>"Chokepoint Capitalism: How to Beat Big Tech, Tame Big Content, and Get Artists Paid, with Rebecca Giblin", on how to unrig the markets for creative labor, Beacon Press/Scribe 2022 <a href="https://chokepointcapitalism.com/">https://chokepointcapitalism.com</a></p>
</li>
<li>
<p>"Attack Surface": The third Little Brother novel, a standalone technothriller for adults. The <em>Washington Post</em> called it "a political cyberthriller, vigorous, bold and savvy about the limits of revolution and resistance." Order signed, personalized copies from Dark Delicacies <a href="https://www.darkdel.com/store/p1840/Available_Now%3A_Attack_Surface.html">https://www.darkdel.com/store/p1840/Available_Now%3A_Attack_Surface.html</a></p>
</li>
<li>
<p>"How to Destroy Surveillance Capitalism": an anti-monopoly pamphlet analyzing the true harms of surveillance capitalism and proposing a solution. <a href="https://onezero.medium.com/how-to-destroy-surveillance-capitalism-8135e6744d59?sk=f6cd10e54e20a07d4c6d0f3ac011af6b">https://onezero.medium.com/how-to-destroy-surveillance-capitalism-8135e6744d59?sk=f6cd10e54e20a07d4c6d0f3ac011af6b</a>) (signed copies: <a href="https://www.darkdel.com/store/p2024/Available_Now%3A__How_to_Destroy_Surveillance_Capitalism.html">https://www.darkdel.com/store/p2024/Available_Now%3A__How_to_Destroy_Surveillance_Capitalism.html</a>)</p>
</li>
<li>
<p>"Little Brother/Homeland": A reissue omnibus edition with a new introduction by Edward Snowden: <a href="https://us.macmillan.com/books/9781250774583">https://us.macmillan.com/books/9781250774583</a>; personalized/signed copies here: <a href="https://www.darkdel.com/store/p1750/July%3A__Little_Brother_%26_Homeland.html">https://www.darkdel.com/store/p1750/July%3A__Little_Brother_%26_Homeland.html</a></p>
</li>
<li>
<p>"Poesy the Monster Slayer" a picture book about monsters, bedtime, gender, and kicking ass. Order here: <a href="https://us.macmillan.com/books/9781626723627">https://us.macmillan.com/books/9781626723627</a>. Get a personalized, signed copy here: <a href="https://www.darkdel.com/store/p2682/Corey_Doctorow%3A_Poesy_the_Monster_Slayer_HB.html#/">https://www.darkdel.com/store/p2682/Corey_Doctorow%3A_Poesy_the_Monster_Slayer_HB.html#/</a>.</p>
</li>
</ul>
<p>Upcoming books:</p>
<ul>
<li>The Bezzle: a sequel to "Red Team Blues," about prison-tech and other grifts, Tor Books, February 2024
</li>
<li>
<p>Picks and Shovels: a sequel to "Red Team Blues," about the heroic era of the PC, Tor Books, February 2025</p>
</li>
<li>
<p>Unauthorized Bread: a graphic novel adapted from my novella about refugees, toasters and DRM, FirstSecond, 2025</p>
</li>
</ul>
<hr>
<p><img decoding="async" src="https://i0.wp.com/craphound.com/images/by.svg.png?w=840&amp;ssl=1" data-recalc-dims="1"></p>
<p>This work – excluding any serialized fiction – is licensed under a Creative Commons Attribution 4.0 license. That means you can use it any way you like, including commercially, provided that you attribute it to me, Cory Doctorow, and include a link to pluralistic.net.</p>
<p><a href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></p>
<p>Quotations and images are not included in this license; they are included either under a limitation or exception to copyright, or on the basis of a separate license. Please exercise caution.</p>
<hr>
<h2>How to get Pluralistic:</h2>
<p>Blog (no ads, tracking, or data-collection):</p>
<p><a href="http://pluralistic.net/">Pluralistic.net</a></p>
<p>Newsletter (no ads, tracking, or data-collection):</p>
<p><a href="https://pluralistic.net/plura-list">https://pluralistic.net/plura-list</a></p>
<p>Mastodon (no ads, tracking, or data-collection):</p>
<p><a href="https://mamot.fr/@pluralistic">https://mamot.fr/@pluralistic</a></p>
<p>Medium (no ads, paywalled):</p>
<p><a href="https://doctorow.medium.com/">https://doctorow.medium.com/</a></p>
<p>Twitter (mass-scale, unrestricted, third-party surveillance and advertising):</p>
<p><a href="https://twitter.com/doctorow">https://twitter.com/doctorow</a></p>
<p>Tumblr (mass-scale, unrestricted, third-party surveillance and advertising):</p>
<p><a href="https://mostlysignssomeportents.tumblr.com/tagged/pluralistic">https://mostlysignssomeportents.tumblr.com/tagged/pluralistic</a></p>
<p>"<em>When life gives you SARS, you make sarsaparilla</em>" -Joey "Accordion Guy" DeVilla</p>

	</div><!-- .entry-content -->

	<!-- .entry-footer -->
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Terraform module for scalable GitHub action runners on AWS (108 pts)]]></title>
            <link>https://github.com/philips-labs/terraform-aws-github-runner</link>
            <guid>38578771</guid>
            <pubDate>Sat, 09 Dec 2023 05:03:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/philips-labs/terraform-aws-github-runner">https://github.com/philips-labs/terraform-aws-github-runner</a>, See on <a href="https://news.ycombinator.com/item?id=38578771">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">Terraform module for scalable self hosted GitHub action runners </h2>
<p dir="auto"><a href="https://github.com/jonico/awesome-runners"><img src="https://camo.githubusercontent.com/18ba0b9a8b8c2c53b9dfb9481490bb802fb6a2e7f7786c4dd8db333885b3f6cd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c69737465642532306f6e2d617765736f6d652d2d72756e6e6572732d626c75652e737667" alt="awesome-runners" data-canonical-src="https://img.shields.io/badge/listed%20on-awesome--runners-blue.svg"></a><a href="https://registry.terraform.io/modules/philips-labs/github-runner/aws/" rel="nofollow"><img src="https://camo.githubusercontent.com/4f0fe08bcc86dd5468295f44fbd64babee81acd31764781f5c0aeb3d2fa04321/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f7068696c6970732d6c6162732f7465727261666f726d2d6177732d6769746875622d72756e6e65723f6c6162656c3d5465727261666f726d2532305265676973747279" alt="Terraform registry" data-canonical-src="https://img.shields.io/github/v/release/philips-labs/terraform-aws-github-runner?label=Terraform%20Registry"></a> <a href="https://github.com/philips-labs/terraform-aws-github-runner/actions/workflows/terraform.yml"><img src="https://github.com/philips-labs/terraform-aws-github-runner/actions/workflows/terraform.yml/badge.svg" alt="Terraform checks"></a> <a href="https://github.com/philips-labs/terraform-aws-github-runner/actions/workflows/lambda.yml"><img src="https://github.com/philips-labs/terraform-aws-github-runner/actions/workflows/lambda.yml/badge.svg" alt="Lambdas"></a></p>
<p dir="auto">This <a href="https://www.terraform.io/" rel="nofollow">Terraform</a> module creates the required infrastructure needed to host <a href="https://github.com/features/actions">GitHub Actions</a> self-hosted, auto-scaling runners on <a href="https://aws.amazon.com/ec2/spot/" rel="nofollow">AWS spot instances</a>. It provides the required logic to handle the life cycle for scaling up and down using a set of AWS Lambda functions. Runners are scaled down to zero to avoid costs when no workflows are active.</p>
<blockquote>
<p dir="auto">📢 We maintain the project as a truly open-source project. We maintain the project on a best effort basis. We welcome contributions from the community. Feel free to help us answering issues, reviewing PRs, or maintaining and improving the project.</p>
</blockquote>
<blockquote>
<p dir="auto">📢 <a href="https://github.com/philips-labs/terraform-aws-github-runner/pull/3552" data-hovercard-type="pull_request" data-hovercard-url="/philips-labs/terraform-aws-github-runner/pull/3552/hovercard"><code>v5</code></a> replaces Amazon Linux 2 with Amazon Linux 2023 as default OS. Check the PR for more details and other changes.</p>
</blockquote>
<blockquote>
<p dir="auto">📢 For contibutions to older versions you can make a PR to the related branch, e.g. <code>v4</code>. We have no release process in place for older versions.</p>
</blockquote>
<blockquote>
<p dir="auto">📢 HELP WANTED: We have been running the AWS self-hosted GitHub runners OS project in Philips Labs for over two years! And we are incredibly happy with all the feedback and contributions of the open-source community. In the next months we will speak at some conferences to share the solution and story of running this open-source project. Via <a href="https://forms.office.com/r/j03CUzdLFp" rel="nofollow">this questionnaire</a> we would like to gather  feedback from the community to use in our talks.</p>
</blockquote>
<ul dir="auto">
<li><a href="#motivation">Motivation</a></li>
<li><a href="#overview">Overview</a>
<ul dir="auto">
<li><a href="#major-configuration-options">Major configuration options</a></li>
<li><a href="#aws-ssm-parameters">AWS SSM Parameters</a></li>
</ul>
</li>
<li><a href="#usages">Usages</a>
<ul dir="auto">
<li><a href="#setup-github-app-part-1">Setup GitHub App (part 1)</a></li>
<li><a href="#setup-terraform-module">Setup terraform module</a></li>
<li><a href="#setup-the-webhook--github-app-part-2">Setup the webhook / GitHub App (part 2)</a>
<ul dir="auto">
<li><a href="#option-1-webhook">Option 1: Webhook</a></li>
<li><a href="#option-2-app">Option 2: App</a></li>
<li><a href="#install-app">Install app</a></li>
</ul>
</li>
<li><a href="#encryption">Encryption</a></li>
<li><a href="#pool">Pool</a></li>
<li><a href="#idle-runners">Idle runners</a></li>
<li><a href="#ephemeral-runners">Ephemeral runners</a></li>
<li><a href="#prebuilt-images">Prebuilt Images</a></li>
<li><a href="#experimental---optional-queue-to-publish-github-workflow-job-events">Experimental - Optional queue to publish GitHub workflow job events</a></li>
</ul>
</li>
<li><a href="#examples">Examples</a></li>
<li><a href="#sub-modules">Sub modules</a></li>
<li><a href="#logging">Logging</a></li>
<li><a href="#tracing">Tracing</a></li>
<li><a href="#debugging">Debugging</a></li>
<li><a href="#security-considerations">Security Considerations</a></li>
<li><a href="#requirements">Requirements</a></li>
<li><a href="#providers">Providers</a></li>
<li><a href="#modules">Modules</a></li>
<li><a href="#resources">Resources</a></li>
<li><a href="#inputs">Inputs</a></li>
<li><a href="#outputs">Outputs</a></li>
<li><a href="#contributing">Contributing</a></li>
<li><a href="#philips-forest">Philips Forest</a></li>
</ul>
<h2 tabindex="-1" dir="auto">Motivation</h2>
<p dir="auto">GitHub Actions <code>self-hosted</code> runners provide a flexible option to run CI workloads on the infrastructure of your choice. However, currently GitHub does not provide tooling to automate the creation and scaling of action runners. This module creates the AWS infrastructure to host action runners on spot instances. It also provides lambda modules to orchestrate the life cycle of the action runners.</p>
<p dir="auto">Lambda was selected as the preferred runtime for two primary reasons. Firstly, it enables the development of compact components with limited access to AWS and GitHub. Secondly, it offers a scalable configuration with minimal expenses, applicable at both the repository and organizational levels. The Lambda functions will be responsible for provisioning Linux-based EC2 instances equipped with Docker to handle CI workloads compatible with Linux and/or Docker. The primary objective is to facilitate Docker-based workloads.</p>
<p dir="auto">A pertinent question may arise: why not opt for Kubernetes? The current strategy aligns closely with the implementation of GitHub's action runners. The chosen approach involves installing the runner on a host where the necessary software is readily available, maintaining proximity to GitHub's existing practices. Another viable option could be AWS Auto Scaling groups. However, this alternative usually demands broader permissions at the instance level from GitHub. Additionally, managing the scaling process, both up and down, becomes a non-trivial task in this scenario.</p>
<h2 tabindex="-1" dir="auto">Overview</h2>
<p dir="auto">The moment a GitHub action workflow requiring a <code>self-hosted</code> runner is triggered, GitHub will try to find a runner which can execute the workload. See <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/docs/additional_notes.md">additional notes</a> for how the selection is made. This module reacts to GitHub's <a href="https://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#workflow_job"><code>workflow_job</code> event</a> for the triggered workflow and creates a new runner if necessary.</p>
<p dir="auto">For receiving the <code>workflow_job</code> event by the webhook (lambda), a webhook needs to be created in GitHub. The <code>check_run</code> option was dropped from version 2.x. The following options to send the event are supported.</p>
<ul dir="auto">
<li>Create a GitHub app, define a webhook and subscribe the app to the <code>workflow_job</code> event.</li>
<li>Create a webhook on enterprise, org or repo level, define a webhook and subscribe the app to the <code>workflow_job</code> event.</li>
</ul>
<p dir="auto">In AWS an <a href="https://docs.aws.amazon.com/apigateway/index.html" rel="nofollow">API gateway</a> endpoint is created that is able to receive the GitHub webhook events via HTTP post. The gateway triggers the webhook lambda which will verify the signature of the event. This check guarantees the event is sent by the GitHub App. The lambda only handles <code>workflow_job</code> events with status <code>queued</code> and matching the runner labels. The accepted events are posted on a SQS queue. Messages on this queue will be delayed for a configurable amount of seconds (default 30 seconds) to give the available runners time to pick up this build.</p>
<p dir="auto">The "Scale Up Runner" Lambda actively monitors the SQS queue, processing incoming events. The Lambda conducts a series of checks to determine the necessity of creating a new EC2 spot instance. For instance, it refrains from creating an instance if a build is already initiated by an existing runner or if the maximum allowable number of runners has been reached.</p>
<p dir="auto">The Lambda first requests a JIT configuration or registration token from GitHub, which is needed later by the runner to register itself. This avoids the case that the EC2 instance, which later in the process will install the agent, needs administration permissions to register the runner. Next, the EC2 spot instance is created via the launch template. The launch template defines the specifications of the required instance and contains a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html" rel="nofollow"><code>user_data</code></a> script. This script will install the required software and configure it. The registration token for the action runner is stored in the parameter store (SSM), from which the user data script will fetch it and delete it once it has been retrieved. Once the user data script is finished, the action runner should be online, and the workflow will start in seconds.</p>
<p dir="auto">The current method for scaling down runners employs a straightforward approach: at predefined intervals, the Lambda conducts a thorough examination of each runner (instance) to assess its activity. If a runner is found to be idle, it is deregistered from GitHub, and the associated AWS instance is terminated. Presently, no alternative method appears available for achieving a more gradual scaling down process.</p>
<p dir="auto">To address potential delays in downloading the GitHub Action Runner distribution, a lambda function has been implemented to synchronize the action runner binary from GitHub to an S3 bucket. This ensures that the EC2 instance can retrieve the distribution from the S3 bucket, mitigating the need to rely on internet downloads, which can occasionally take more than 10 minutes.</p>
<p dir="auto">Sensitive information such as secrets and private keys is stored securely in the SSM Parameter Store. These values undergo encryption using either the default KMS key for SSM or a custom KMS key, depending on the specified configuration.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/docs/component-overview.svg"><img src="https://github.com/philips-labs/terraform-aws-github-runner/raw/main/docs/component-overview.svg" alt="Architecture"></a></p>
<p dir="auto">Permission are managed in several places. Below are the most important ones. For details check the Terraform sources.</p>
<ul dir="auto">
<li>The GitHub App requires access to actions and to publish <code>workflow_job</code> events to the AWS webhook (API gateway).</li>
<li>The scale up lambda should have access to EC2 for creating and tagging instances.</li>
<li>The scale down lambda should have access to EC2 to terminate instances.</li>
</ul>
<p dir="auto">Besides these permissions, the lambdas also need permission to CloudWatch (for logging and scheduling), SSM and S3. For more details about the required permissions see the <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/modules/setup-iam-permissions/README.md">documentation</a> of the IAM module which uses permission boundaries.</p>
<h3 tabindex="-1" dir="auto">Major configuration options</h3>
<p dir="auto">To be able to support a number of use-cases, the module has quite a lot of configuration options. We tried to choose reasonable defaults. Several examples also show the main cases of how to configure the runners.</p>
<ul dir="auto">
<li>Org vs Repo level. You can configure the module to connect the runners in GitHub on an org level and share the runners in your org, or set the runners on repo level and the module will install the runner to the repo. There can be multiple repos but runners are not shared between repos.</li>
<li>Multi-Runner module. This modules allows you to create multiple runner configurations with a single webhook and single GitHub App to simplify deployment of different types of runners. Refer to the <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/modules/multi-runner/README.md">ReadMe</a> for more information to understand the functionality.</li>
<li>Workflow job event. You can configure the webhook in GitHub to send workflow job events to the webhook. Workflow job events were introduced by GitHub in September 2021 and are designed to support scalable runners. We advise using the workflow job event when possible.</li>
<li>Linux vs Windows. You can configure the OS types linux and win. Linux will be used by default.</li>
<li>Re-use vs Ephemeral. By default runners are re-used, until detected idle. Once idle they will be removed from the pool. To improve security we are introducing ephemeral runners. Those runners are only used for one job. Ephemeral runners only work in combination with the workflow job event. For ephemeral runners the lambda requests a JIT (just in time) configuration via the GitHub API to register the runner. <a href="https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-just-in-time-runners">JIT configuration</a> is limited to ephemeral runners (and currently not supported by GHES). For non-ephemeral runners, a registration token is always requested. In both cases the configuration is made available to the instance via the same SSM parameter. To disable JIT configuration for ephermeral runners set <code>enable_jit_config</code> to <code>false</code>. We also suggest using a pre-build AMI to improve the start time of jobs for ephemeral runners.</li>
<li>GitHub Cloud vs GitHub Enterprise Server (GHES). The runners support GitHub Cloud as well GitHub Enterprise Server. For GHES, we rely on our community for support and testing. We at Philips have no capability to test GHES ourselves.</li>
<li>Spot vs on-demand. The runners use either the EC2 spot or on-demand life cycle. Runners will be created via the AWS <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet.html" rel="nofollow">CreateFleet API</a>. The module (scale up lambda) will request via the CreateFleet API to create instances in one of the subnets and of the specified instance types.</li>
<li>ARM64 support via Graviton/Graviton2 instance-types. When using the default example or top-level module, specifying <code>instance_types</code> that match a Graviton/Graviton 2 (ARM64) architecture (e.g. a1, t4g or any 6th-gen <code>g</code> or <code>gd</code> type), you must also specify <code>runner_architecture = "arm64"</code> and the sub-modules will be automatically configured to provision with ARM64 AMIs and leverage GitHub's ARM64 action runner. See below for more details.</li>
</ul>
<h3 tabindex="-1" dir="auto">AWS SSM Parameters</h3>
<p dir="auto">The module uses the AWS System Manager Parameter Store to store configuration for the runners, as well as registration tokens and secrets for the Lambdas. Paths for the parameters can be configured via the variable <code>ssm_paths</code>. The location of the configuration parameters is retrieved by the runners via the instance tag <code>ghr:ssm_config_path</code>. The following default paths will be used. Tokens or JIT config stored in the token path will be deleted after retrieval by instance, data not deleted after a day will be deleted by a SSM housekeeper lambda.</p>
<table>
<thead>
<tr>
<th>Path</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>ssm_paths.root/var.prefix?/app/</code></td>
<td>App secrets used by Lambda's</td>
</tr>
<tr>
<td><code>ssm_paths.root/var.prefix?/runners/config/&lt;name&gt;</code></td>
<td>Configuration parameters used by runner start script</td>
</tr>
<tr>
<td><code>ssm_paths.root/var.prefix?/runners/tokens/&lt;ec2-instance-id&gt;</code></td>
<td>Either JIT configuration (ephemeral runners) or registration tokens (non ephemeral runners) generated by the control plane (scale-up lambda), and consumed by the start script on the runner to activate / register the runner.</td>
</tr>
</tbody>
</table>
<p dir="auto">Available configuration parameters:</p>
<table>
<thead>
<tr>
<th>Parameter name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>agent_mode</code></td>
<td>Indicates if the agent is running in ephemeral mode or not.</td>
</tr>
<tr>
<td><code>enable_cloudwatch</code></td>
<td>Configuration for the cloudwatch agent to stream logging.</td>
</tr>
<tr>
<td><code>run_as</code></td>
<td>The user used for running the GitHub action runner agent.</td>
</tr>
<tr>
<td><code>token_path</code></td>
<td>The path where tokens are stored.</td>
</tr>
</tbody>
</table>
<h2 tabindex="-1" dir="auto">Usages</h2>
<p dir="auto">Examples are provided in <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples">the example directory</a>. Please ensure you have installed the following tools.</p>
<ul dir="auto">
<li>Terraform, or <a href="https://github.com/tfutils/tfenv">tfenv</a>.</li>
<li>Bash shell or compatible</li>
<li>Docker (optional, to build lambdas without node).</li>
<li>AWS cli (optional)</li>
<li>Node and yarn (for lambda development).</li>
</ul>
<p dir="auto">The module supports two main scenarios for creating runners. Repository level runners will be dedicated to only one repository, so no other repository can use the runner. At the organization level, you can use the runner(s) for all repositories within the organization. See <a href="https://help.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners">GitHub self-hosted runner instructions</a> for more information. Before starting the deployment you have to choose one option.</p>
<p dir="auto">The setup consists of running Terraform to create all AWS resources and manually configuring the GitHub App. The Terraform module requires configuration from the GitHub App and the GitHub app requires output from Terraform. Therefore you first create the GitHub App and configure the basics, then run Terraform, and afterwards finalize the configuration of the GitHub App.</p>
<h3 tabindex="-1" dir="auto">Setup GitHub App (part 1)</h3>
<p dir="auto">Go to GitHub and <a href="https://docs.github.com/en/developers/apps/creating-a-github-app">create a new app</a>. Be aware you can create apps for your organization or for a user. For now we only support organization level apps.</p>
<ol dir="auto">
<li>Create an app in Github</li>
<li>Choose a name</li>
<li>Choose a website (mandatory, not required for the module).</li>
<li>Disable the webhook for now (we will configure this later or create an alternative webhook).</li>
<li>Permissions for all runners:
<ul dir="auto">
<li>Repository:
<ul dir="auto">
<li><code>Actions</code>: Read-only (check for queued jobs)</li>
<li><code>Checks</code>: Read-only (receive events for new builds)</li>
<li><code>Metadata</code>: Read-only (default/required)</li>
</ul>
</li>
</ul>
</li>
<li><em>Permissions for repo level runners only</em>:
<ul dir="auto">
<li>Repository:
<ul dir="auto">
<li><code>Administration</code>: Read &amp; write (to register runner)</li>
</ul>
</li>
</ul>
</li>
<li><em>Permissions for organization level runners only</em>:
<ul dir="auto">
<li>Organization
<ul dir="auto">
<li><code>Self-hosted runners</code>: Read &amp; write (to register runner)</li>
</ul>
</li>
</ul>
</li>
<li>Save the new app.</li>
<li>On the General page, make a note of the "App ID" and "Client ID" parameters.</li>
<li>Generate a new private key and save the <code>app.private-key.pem</code> file.</li>
</ol>
<h3 tabindex="-1" dir="auto">Setup terraform module</h3>
<h4 tabindex="-1" dir="auto">Download lambdas </h4>
<p dir="auto">To apply the terraform module, the compiled lambdas (.zip files) need to be available either locally or in an S3 bucket. They can either be downloaded from the GitHub release page or built locally.</p>
<p dir="auto">To read the files from S3, set the <code>lambda_s3_bucket</code> variable and the specific object key for each lambda.</p>
<p dir="auto">The lambdas can be downloaded manually from the <a href="https://github.com/philips-labs/terraform-aws-github-runner/releases">release page</a> or using the <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/modules/download-lambda">download-lambda</a> terraform module (requires <code>curl</code> to be installed on your machine). In the <code>download-lambda</code> directory, run <code>terraform init &amp;&amp; terraform apply</code>. The lambdas will be saved to the same directory.</p>
<p dir="auto">For local development you can build all the lambdas at once using <code>.ci/build.sh</code> or individually using <code>yarn dist</code>.</p>
<h4 tabindex="-1" dir="auto">Service-linked role </h4>
<p dir="auto">To create spot instances the <code>AWSServiceRoleForEC2Spot</code> role needs to be added to your account. You can do that manually by following the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#service-linked-roles-spot-instance-requests" rel="nofollow">AWS docs</a>. To use terraform for creating the role, either add the following resource or let the module manage the service linked role by setting <code>create_service_linked_role_spot</code> to <code>true</code>. Be aware this is an account global role, so maybe you don't want to manage it via a specific deployment.</p>
<div dir="auto" data-snippet-clipboard-copy-content="resource &quot;aws_iam_service_linked_role&quot; &quot;spot&quot; {
  aws_service_name = &quot;spot.amazonaws.com&quot;
}"><pre><span>resource</span> <span><span>"</span>aws_iam_service_linked_role<span>"</span></span> <span><span>"</span>spot<span>"</span></span> {
  aws_service_name <span>=</span> <span><span>"</span>spot.amazonaws.com<span>"</span></span>
}</pre></div>
<h4 tabindex="-1" dir="auto">Terraform module </h4>
<p dir="auto">Next create a second terraform workspace and initiate the module, or adapt one of the <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples">examples</a>.</p>
<p dir="auto">Note that <code>github_app.key_base64</code> needs to be a base64-encoded string of the <code>.pem</code> file i.e. the output of <code>base64 app.private-key.pem</code>. The decoded string can either be a multiline value or a single line value with new lines represented with literal <code>\n</code> characters.</p>
<div dir="auto" data-snippet-clipboard-copy-content="module &quot;github-runner&quot; {
  source  = &quot;philips-labs/github-runner/aws&quot;
  version = &quot;REPLACE_WITH_VERSION&quot;

  aws_region = &quot;eu-west-1&quot;
  vpc_id     = &quot;vpc-123&quot;
  subnet_ids = [&quot;subnet-123&quot;, &quot;subnet-456&quot;]

  prefix = &quot;gh-ci&quot;

  github_app = {
    key_base64     = &quot;base64string&quot;
    id             = &quot;1&quot;
    webhook_secret = &quot;webhook_secret&quot;
  }

  webhook_lambda_zip                = &quot;lambdas-download/webhook.zip&quot;
  runner_binaries_syncer_lambda_zip = &quot;lambdas-download/runner-binaries-syncer.zip&quot;
  runners_lambda_zip                = &quot;lambdas-download/runners.zip&quot;
  enable_organization_runners = true
}"><pre><span>module</span> <span><span>"</span>github-runner<span>"</span></span> {
  source  <span>=</span> <span><span>"</span>philips-labs/github-runner/aws<span>"</span></span>
  version <span>=</span> <span><span>"</span>REPLACE_WITH_VERSION<span>"</span></span>

  aws_region <span>=</span> <span><span>"</span>eu-west-1<span>"</span></span>
  vpc_id     <span>=</span> <span><span>"</span>vpc-123<span>"</span></span>
  subnet_ids <span>=</span> [<span><span>"</span>subnet-123<span>"</span></span>, <span><span>"</span>subnet-456<span>"</span></span>]

  prefix <span>=</span> <span><span>"</span>gh-ci<span>"</span></span>

  github_app <span>=</span> {
    key_base64     <span>=</span> <span><span>"</span>base64string<span>"</span></span>
    id             <span>=</span> <span><span>"</span>1<span>"</span></span>
    webhook_secret <span>=</span> <span><span>"</span>webhook_secret<span>"</span></span>
  }

  webhook_lambda_zip                <span>=</span> <span><span>"</span>lambdas-download/webhook.zip<span>"</span></span>
  runner_binaries_syncer_lambda_zip <span>=</span> <span><span>"</span>lambdas-download/runner-binaries-syncer.zip<span>"</span></span>
  runners_lambda_zip                <span>=</span> <span><span>"</span>lambdas-download/runners.zip<span>"</span></span>
  enable_organization_runners <span>=</span> <span>true</span>
}</pre></div>
<p dir="auto">Run terraform by using the following commands</p>
<div dir="auto" data-snippet-clipboard-copy-content="terraform init
terraform apply"><pre>terraform init
terraform apply</pre></div>
<p dir="auto">The terraform output displays the API gateway url (endpoint) and secret, which you need in the next step.</p>
<p dir="auto">The lambda for syncing the GitHub distribution to S3 is triggered via CloudWatch (by default once per hour). After deployment the function is triggered via S3 to ensure the distribution is cached.</p>
<h3 tabindex="-1" dir="auto">Setup the webhook / GitHub App (part 2)</h3>
<p dir="auto">At this point you have two options. Either create a separate webhook (enterprise,
org, or repo), or create a webhook in the App.</p>
<h4 tabindex="-1" dir="auto">Option 1: Webhook</h4>
<ol dir="auto">
<li>Create a new webhook at the repo level for repo level runners, or org (or enterprise level) for org level runners.</li>
<li>Provide the webhook url, which should be part of the output of terraform.</li>
<li>Provide the webhook secret (<code>terraform output -raw &lt;NAME_OUTPUT_VAR&gt;</code>).</li>
<li>Ensure the content type is <code>application/json</code>.</li>
<li>In the "Permissions &amp; Events" section and then "Subscribe to Events" subsection, check either "Workflow Job" or "Check Run" (choose only one option!!!).</li>
<li>In the "Install App" section, install the App in your organization, either in all or in selected repositories.</li>
</ol>
<h4 tabindex="-1" dir="auto">Option 2: App</h4>
<p dir="auto">Go back to the GitHub App and update the following settings.</p>
<ol dir="auto">
<li>Enable the webhook.</li>
<li>Provide the webhook url, should be part of the output of terraform.</li>
<li>Provide the webhook secret (<code>terraform output -raw &lt;NAME_OUTPUT_VAR&gt;</code>).</li>
<li>In the "Permissions &amp; Events" section and then "Subscribe to Events" subsection, check either "Workflow Job" or "Check Run" (choose only one option!!!).</li>
</ol>
<h4 tabindex="-1" dir="auto">Install app</h4>
<p dir="auto">Finally you need to ensure the app is installed to all or selected repositories.</p>
<p dir="auto">Go back to the GitHub App and update the following settings.</p>
<ol dir="auto">
<li>In the "Install App" section, install the App in your organization, either in all or in selected repositories.</li>
</ol>
<h3 tabindex="-1" dir="auto">Encryption</h3>
<p dir="auto">The module supports two scenarios to manage environment secrets and private keys of the Lambda functions.</p>
<h4 tabindex="-1" dir="auto">Encrypted via a module managed KMS key (default) </h4>
<p dir="auto">This is the default, no additional configuration is required.</p>
<h4 tabindex="-1" dir="auto">Encrypted via a provided KMS key </h4>
<p dir="auto">You have to create and configure you KMS key. The module will use the context with key: <code>Environment</code> and value <code>var.environment</code> as encryption context.</p>
<div dir="auto" data-snippet-clipboard-copy-content="resource &quot;aws_kms_key&quot; &quot;github&quot; {
  is_enabled = true
}

module &quot;runners&quot; {

  ...
  kms_key_arn = aws_kms_key.github.arn
  ..."><pre><span>resource</span> <span><span>"</span>aws_kms_key<span>"</span></span> <span><span>"</span>github<span>"</span></span> {
  is_enabled <span>=</span> <span>true</span>
}

<span>module</span> <span><span>"</span>runners<span>"</span></span> {

  <span>...</span>
  kms_key_arn <span>=</span> aws_kms_key<span>.</span><span>github</span><span>.</span><span>arn</span>
  <span>...</span></pre></div>
<h3 tabindex="-1" dir="auto">Pool</h3>
<p dir="auto">The module supports two options for keeping a pool of runners. One is via a pool which only supports org-level runners, the second option is <a href="#idle-runners">keeping runners idle</a>.</p>
<p dir="auto">The pool is introduced in combination with the ephemeral runners and is primarily meant to ensure if any event is unexpectedly dropped and no runner was created, the pool can pick up the job. The pool is maintained by a lambda. Each time the lambda is triggered a check is performed to ensure the number of idle runners managed by the module matches the expected pool size. If not, the pool will be adjusted. Keep in mind that the scale down function is still active and will terminate instances that are detected as idle.</p>
<div dir="auto" data-snippet-clipboard-copy-content="pool_runner_owner = &quot;my-org&quot;                  # Org to which the runners are added
pool_config = [{
  size                = 20                    # size of the pool
  schedule_expression = &quot;cron(* * * * ? *)&quot;   # cron expression to trigger the adjustment of the pool
}]"><pre><span><span>pool_runner_owner</span> <span>= </span></span><span><span>"</span>my-org<span>"</span></span>                  <span><span>#</span> Org to which the runners are added</span>
<span><span>pool_config</span> <span>= </span></span>[{
  size                <span>=</span> <span>20</span>                    <span><span>#</span> size of the pool</span>
  schedule_expression <span>=</span> <span><span>"</span>cron(* * * * ? *)<span>"</span></span>   <span><span>#</span> cron expression to trigger the adjustment of the pool</span>
}]</pre></div>
<p dir="auto">The pool is NOT enabled by default and can be enabled by setting at least one object of the pool config list. The <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples/ephemeral/README.md">ephemeral example</a> contains configuration options (commented out).</p>
<h3 tabindex="-1" dir="auto">Idle runners</h3>
<p dir="auto">The module will scale down to zero runners by default. By specifying a <code>idle_config</code> config, idle runners can be kept active. The scale down lambda checks if any of the cron expressions matches the current time with a margin of 5 seconds. When there is a match, the number of runners specified in the idle config will be kept active. In case multiple cron expressions match, the first one will be used. Below is an idle configuration for keeping runners active from 9:00am to 5:59pm on working days. The <a href="https://crontab.cronhub.io/" rel="nofollow">cron expression generator by Cronhub</a> is a great resource to set up your idle config.</p>
<p dir="auto">By default, the oldest instances are evicted. This helps keep your environment up-to-date and reduce problems like running out of disk space or RAM. Alternatively, if your older instances have a long-living cache, you can override the <code>evictionStrategy</code> to <code>newest_first</code> to evict the newest instances first instead.</p>
<div dir="auto" data-snippet-clipboard-copy-content="idle_config = [{
   cron             = &quot;* * 9-17 * * 1-5&quot;
   timeZone         = &quot;Europe/Amsterdam&quot;
   idleCount        = 2
   # Defaults to 'oldest_first'
   evictionStrategy = &quot;oldest_first&quot;
}]"><pre><span><span>idle_config</span> <span>= </span></span>[{
   cron             <span>=</span> <span><span>"</span>* * 9-17 * * 1-5<span>"</span></span>
   timeZone         <span>=</span> <span><span>"</span>Europe/Amsterdam<span>"</span></span>
   idleCount        <span>=</span> <span>2</span>
   <span><span>#</span> Defaults to 'oldest_first'</span>
   evictionStrategy <span>=</span> <span><span>"</span>oldest_first<span>"</span></span>
}]</pre></div>
<p dir="auto"><em><strong>Note</strong></em>: When using Windows runners, we recommend keeping a few runners warmed up due to the minutes-long cold start time.</p>
<h4 tabindex="-1" dir="auto">Supported config </h4>
<p dir="auto">Cron expressions are parsed by <a href="https://github.com/harrisiirak/cron-parser#readme">cron-parser</a>. The supported syntax.</p>
<div dir="auto" data-snippet-clipboard-copy-content="*    *    *    *    *    *
┬    ┬    ┬    ┬    ┬    ┬
│    │    │    │    │    |
│    │    │    │    │    └ day of week (0 - 7) (0 or 7 is Sun)
│    │    │    │    └───── month (1 - 12)
│    │    │    └────────── day of month (1 - 31)
│    │    └─────────────── hour (0 - 23)
│    └──────────────────── minute (0 - 59)
└───────────────────────── second (0 - 59, optional)"><pre><span>*</span>    <span>*</span>    <span>*</span>    <span>*</span>    <span>*</span>    <span>*</span>
┬    ┬    ┬    ┬    ┬    ┬
│    │    │    │    │    <span>|</span>
│    │    │    │    │    └ day of week (0 - 7) (0 or 7 is Sun)
│    │    │    │    └───── month (1 - 12)
│    │    │    └────────── day of month (1 - 31)
│    │    └─────────────── hour (0 - 23)
│    └──────────────────── minute (0 - 59)
└───────────────────────── second (0 - 59, optional)</pre></div>
<p dir="auto">For time zones please check <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" rel="nofollow">TZ database name column</a> for the supported values.</p>
<h3 tabindex="-1" dir="auto">Ephemeral runners</h3>
<p dir="auto">You can configure runners to be ephemeral, in which case runners will be used only for one job. The feature should be used in conjunction with listening for the workflow job event. Please consider the following:</p>
<ul dir="auto">
<li>The scale down lambda is still active, and should only remove orphan instances. But there is no strict check in place. So ensure you configure the <code>minimum_running_time_in_minutes</code> to a value that is high enough to get your runner booted and connected to avoid it being terminated before executing a job.</li>
<li>The messages sent from the webhook lambda to the scale-up lambda are by default delayed by SQS, to give available runners a chance to start the job before the decision is made to scale more runners. For ephemeral runners there is no need to wait. Set <code>delay_webhook_event</code> to <code>0</code>.</li>
<li>All events in the queue will lead to a new runner created by the lambda. By setting <code>enable_job_queued_check</code> to <code>true</code> you can enforce a rule of only creating a runner if the event has a correlated queued job. Setting this can avoid creating useless runners. For example, a job getting cancelled before a runner was created or if the job was already picked up by another runner. We suggest using this in combination with a pool.</li>
<li>To ensure runners are created in the same order GitHub sends the events, by default we use a FIFO queue. This is mainly relevant for repo level runners. For ephemeral runners you can set <code>enable_fifo_build_queue</code> to <code>false</code>.</li>
<li>Errors related to scaling should be retried via SQS. You can configure <code>job_queue_retention_in_seconds</code> and <code>redrive_build_queue</code> to tune the behavior. We have no mechanism to avoid events never being processed, which means potentially no runner gets created and the job in GitHub times out in 6 hours.</li>
</ul>
<p dir="auto">The example for <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples/ephemeral">ephemeral runners</a> is based on the <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples/default">default example</a>. Have look at the diff to see the major configuration differences.</p>
<h3 tabindex="-1" dir="auto">Prebuilt Images</h3>
<p dir="auto">This module also allows you to run agents from a prebuilt AMI to gain faster startup times. The module provides several examples to build your own custom AMI. To remove old images, an <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/modules/ami-housekeeper/README.md">AMI housekeeper module</a> can be used. You can find more information in <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/images/README.md">the image README.md</a> for building custom images.</p>
<h3 tabindex="-1" dir="auto">Experimental - Optional queue to publish GitHub workflow job events</h3>
<p dir="auto">This queue is an experimental feature to allow you to receive a copy of the wokflow_jobs events sent by the GitHub App. This can be used to calculate a matrix or monitor the system.</p>
<p dir="auto">To enable the feature set <code>enable_workflow_job_events_queue = true</code>. Be aware though, this feature is experimental!</p>
<p dir="auto">Messages received on the queue are using the same format as published by GitHub wrapped in a property <code>workflowJobEvent</code>.</p>
<div data-snippet-clipboard-copy-content="export interface GithubWorkflowEvent {
  workflowJobEvent: WorkflowJobEvent;
}"><pre><code>export interface GithubWorkflowEvent {
  workflowJobEvent: WorkflowJobEvent;
}
</code></pre></div>
<p dir="auto">This extensible format allows more fields to be added if needed.
You can configure the queue by setting properties to <code>workflow_job_events_queue_config</code></p>
<p dir="auto">NOTE: By default, a runner AMI update requires a re-apply of this terraform config (the runner AMI ID is looked up by a terraform data source). To avoid this, you can use <code>ami_id_ssm_parameter_name</code> to have the scale-up lambda dynamically lookup the runner AMI ID from an SSM parameter at instance launch time. Said SSM parameter is managed outside of this module (e.g. by a runner AMI build workflow).</p>
<h2 tabindex="-1" dir="auto">Examples</h2>
<p dir="auto">Examples are located in the <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples">examples</a> directory. The following examples are provided:</p>
<ul dir="auto">
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples/default/README.md">Default</a></em>: The default example of the module</li>
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples/arm64/README.md">ARM64</a></em>: Example usage with ARM64 architecture</li>
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples/ephemeral/README.md">Ephemeral</a></em>: Example usages of ephemeral runners based on the default example.</li>
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples/multi-runner/README.md">Multi Runner</a></em> : Example usage of creating a multi runner which creates multiple runners/ configurations with a single deployment</li>
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples/permissions-boundary/README.md">Permissions boundary</a></em>: Example usages of permissions boundaries.</li>
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples/prebuilt/README.md">Prebuilt Images</a></em>: Example usages of deploying runners with a custom prebuilt image.</li>
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples/ubuntu/README.md">Ubuntu</a></em>: Example usage of creating a runner using Ubuntu AMIs.</li>
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/examples/windows/README.md">Windows</a></em>: Example usage of creating a runner using Windows as the OS.</li>
</ul>
<h2 tabindex="-1" dir="auto">Sub modules</h2>
<p dir="auto">The module contains several submodules, you can use the module via the main module or assemble your own setup by initializing the submodules yourself.</p>
<p dir="auto">The following submodules are the core of the module and are mandatory:</p>
<ul dir="auto">
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/modules/runner-binaries-syncer/README.md">runner-binaries-syncer</a></em> - Syncs the action runner distribution.</li>
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/modules/runners/README.md">runners</a></em> - Scales the action runners up and down</li>
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/modules/webhook/README.md">webhook</a></em> - Handles GitHub webhooks</li>
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/modules/multi-runner/README.md">multi-runner</a></em> - Creates multiple runner configurations in a single deployment</li>
</ul>
<p dir="auto">The following sub modules are optional and are provided as examples or utilities:</p>
<ul dir="auto">
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/modules/download-lambda/README.md">download-lambda</a></em> - Utility module to download lambda artifacts from GitHub Release</li>
<li><em><a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/modules/setup-iam-permissions/README.md">setup-iam-permissions</a></em> - Example module to setup permission boundaries</li>
</ul>
<p dir="auto">ARM64 configuration for submodules. When using the top level module configure <code>runner_architecture = "arm64"</code> and ensure the list of <code>instance_types</code> matches. When not using the top-level, ensure these properties are set on the submodules.</p>
<h2 tabindex="-1" dir="auto">Logging</h2>
<p dir="auto">The module uses <a href="https://awslabs.github.io/aws-lambda-powertools-typescript/latest/" rel="nofollow">AWS Lambda Powertools</a> for logging. By default the log level is set to <code>info</code>, by setting the log level to <code>debug</code> the incoming events of the Lambda are logged as well.</p>
<p dir="auto">Log messages contains at least the following keys:</p>
<ul dir="auto">
<li><code>messages</code>: The logged messages</li>
<li><code>environment</code>: The environment prefix provided via Terraform</li>
<li><code>service</code>: The lambda</li>
<li><code>module</code>: The TypeScript module writing the log message</li>
<li><code>function-name</code>: The name of the lambda function (prefix + function name)</li>
<li><code>github</code>: Depending on the lambda, contains GitHub context</li>
<li><code>runner</code>: Depending on the lambda, specific context related to the runner</li>
</ul>
<p dir="auto">An example log message of the scale-up function:</p>
<div dir="auto" data-snippet-clipboard-copy-content="{
    &quot;level&quot;: &quot;INFO&quot;,
    &quot;message&quot;: &quot;Received event&quot;,
    &quot;service&quot;: &quot;runners-scale-up&quot;,
    &quot;timestamp&quot;: &quot;2023-03-20T08:15:27.448Z&quot;,
    &quot;xray_trace_id&quot;: &quot;1-6418161e-08825c2f575213ef760531bf&quot;,
    &quot;module&quot;: &quot;scale-up&quot;,
    &quot;region&quot;: &quot;eu-west-1&quot;,
    &quot;environment&quot;: &quot;my-linux-x64&quot;,
    &quot;aws-request-id&quot;: &quot;eef1efb7-4c07-555f-9a67-b3255448ee60&quot;,
    &quot;function-name&quot;: &quot;my-linux-x64-scale-up&quot;,
    &quot;runner&quot;: {
        &quot;type&quot;: &quot;Repo&quot;,
        &quot;owner&quot;: &quot;test-runners/multi-runner&quot;
    },
    &quot;github&quot;: {
        &quot;event&quot;: &quot;workflow_job&quot;,
        &quot;workflow_job_id&quot;: &quot;1234&quot;
    }
}"><pre>{
    <span>"level"</span>: <span><span>"</span>INFO<span>"</span></span>,
    <span>"message"</span>: <span><span>"</span>Received event<span>"</span></span>,
    <span>"service"</span>: <span><span>"</span>runners-scale-up<span>"</span></span>,
    <span>"timestamp"</span>: <span><span>"</span>2023-03-20T08:15:27.448Z<span>"</span></span>,
    <span>"xray_trace_id"</span>: <span><span>"</span>1-6418161e-08825c2f575213ef760531bf<span>"</span></span>,
    <span>"module"</span>: <span><span>"</span>scale-up<span>"</span></span>,
    <span>"region"</span>: <span><span>"</span>eu-west-1<span>"</span></span>,
    <span>"environment"</span>: <span><span>"</span>my-linux-x64<span>"</span></span>,
    <span>"aws-request-id"</span>: <span><span>"</span>eef1efb7-4c07-555f-9a67-b3255448ee60<span>"</span></span>,
    <span>"function-name"</span>: <span><span>"</span>my-linux-x64-scale-up<span>"</span></span>,
    <span>"runner"</span>: {
        <span>"type"</span>: <span><span>"</span>Repo<span>"</span></span>,
        <span>"owner"</span>: <span><span>"</span>test-runners/multi-runner<span>"</span></span>
    },
    <span>"github"</span>: {
        <span>"event"</span>: <span><span>"</span>workflow_job<span>"</span></span>,
        <span>"workflow_job_id"</span>: <span><span>"</span>1234<span>"</span></span>
    }
}</pre></div>
<h2 tabindex="-1" dir="auto">Tracing</h2>
<p dir="auto">The distributed architecture of this application can make it difficult to troubleshoot.  We support the option to enable tracing for all the lambda functions created by this application. To enable tracing, you can provide the <code>tracing_config</code> option inside the root module or inner modules.</p>
<p dir="auto">This tracing config generates timelines for following events:</p>
<ul dir="auto">
<li>Basic lifecycle of lambda function</li>
<li>Traces for Github API calls (can be configured by capture_http_requests).</li>
<li>Traces for all AWS SDK calls</li>
</ul>
<p dir="auto">This feature has been disabled by default.</p>
<h2 tabindex="-1" dir="auto">Debugging</h2>
<p dir="auto">In case the setup does not work as intended, trace the events through this sequence:</p>
<ul dir="auto">
<li>In the GitHub App configuration, the Advanced page displays all webhook events that were sent.</li>
<li>In AWS CloudWatch, every lambda has a log group. Look at the logs of the <code>webhook</code> and <code>scale-up</code> lambdas.</li>
<li>In AWS SQS you can see messages available or in flight.</li>
<li>Once an EC2 instance is running, you can connect to it in the EC2 user interface using Session Manager (use <code>enable_ssm_on_runners = true</code>). Check the user data script using <code>cat /var/log/user-data.log</code>. By default several log files of the instances are streamed to AWS CloudWatch, look for a log group named <code>&lt;environment&gt;/runners</code>. In the log group you should see at least the log streams for the user data installation and runner agent.</li>
<li>Registered instances should show up in the Settings - Actions page of the repository or organization (depending on the installation mode).</li>
</ul>
<h2 tabindex="-1" dir="auto">Security Considerations</h2>
<p dir="auto">This module creates resources in your AWS infrastructure, and EC2 instances for hosting the self-hosted runners on-demand. IAM permissions are set to a minimal level, and could be further limited by using permission boundaries. Instances permissions are limited to retrieve and delete the registration token, access the instance's own tags, and terminate the instance itself. By nature, instances are short-lived, and we strongly suggest using ephemeral runners to ensure a safe build environment for each workflow job execution.</p>
<p dir="auto">Ephemeral runners use the JIT configuration, which can be used only once to activate a runner. For non-ephemeral runners this option is not provided by GitHub, so instead a registration token is passed via SSM. After using the token, the token is deleted. But the token remains valid and is potential available in memory on the runner. For ephemeral runners this problem is avoid by using just-in-time tokens.</p>
<p dir="auto">The examples are using standard AMI's for different operation systems. Instances are not hardened, and sudo operation are not blocked. To provide an out of the box working experience by default the module installs and configures the runner. However secrets are not hard coded, they finally end up in the memory of the instances. You can harden the instance by providing your own AMI and overwriting the cloud-init script.</p>
<p dir="auto">We welcome any improvement to the standard module to make the default as secure as possible. But in the end it remains your responsibility to keep your environment secure.</p>

<h2 tabindex="-1" dir="auto">Requirements</h2>
<table>
<thead>
<tr>
<th>Name</th>
<th>Version</th>
</tr>
</thead>
<tbody>
<tr>
<td><a name="user-content-requirement_terraform"></a> <a href="#requirement_terraform">terraform</a></td>
<td>&gt;= 1.3.0</td>
</tr>
<tr>
<td><a name="user-content-requirement_aws"></a> <a href="#requirement_aws">aws</a></td>
<td>~&gt; 5.2</td>
</tr>
<tr>
<td><a name="user-content-requirement_random"></a> <a href="#requirement_random">random</a></td>
<td>~&gt; 3.0</td>
</tr>
</tbody>
</table>
<h2 tabindex="-1" dir="auto">Providers</h2>
<table>
<thead>
<tr>
<th>Name</th>
<th>Version</th>
</tr>
</thead>
<tbody>
<tr>
<td><a name="user-content-provider_aws"></a> <a href="#provider_aws">aws</a></td>
<td>~&gt; 5.2</td>
</tr>
<tr>
<td><a name="user-content-provider_random"></a> <a href="#provider_random">random</a></td>
<td>~&gt; 3.0</td>
</tr>
</tbody>
</table>
<h2 tabindex="-1" dir="auto">Modules</h2>
<table>
<thead>
<tr>
<th>Name</th>
<th>Source</th>
<th>Version</th>
</tr>
</thead>
<tbody>
<tr>
<td><a name="user-content-module_ami_housekeeper"></a> <a href="#module_ami_housekeeper">ami_housekeeper</a></td>
<td>./modules/ami-housekeeper</td>
<td>n/a</td>
</tr>
<tr>
<td><a name="user-content-module_runner_binaries"></a> <a href="#module_runner_binaries">runner_binaries</a></td>
<td>./modules/runner-binaries-syncer</td>
<td>n/a</td>
</tr>
<tr>
<td><a name="user-content-module_runners"></a> <a href="#module_runners">runners</a></td>
<td>./modules/runners</td>
<td>n/a</td>
</tr>
<tr>
<td><a name="user-content-module_ssm"></a> <a href="#module_ssm">ssm</a></td>
<td>./modules/ssm</td>
<td>n/a</td>
</tr>
<tr>
<td><a name="user-content-module_webhook"></a> <a href="#module_webhook">webhook</a></td>
<td>./modules/webhook</td>
<td>n/a</td>
</tr>
</tbody>
</table>
<h2 tabindex="-1" dir="auto">Resources</h2>
<table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue" rel="nofollow">aws_sqs_queue.queued_builds</a></td>
<td>resource</td>
</tr>
<tr>
<td><a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue" rel="nofollow">aws_sqs_queue.queued_builds_dlq</a></td>
<td>resource</td>
</tr>
<tr>
<td><a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue" rel="nofollow">aws_sqs_queue.webhook_events_workflow_job_queue</a></td>
<td>resource</td>
</tr>
<tr>
<td><a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy" rel="nofollow">aws_sqs_queue_policy.build_queue_dlq_policy</a></td>
<td>resource</td>
</tr>
<tr>
<td><a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy" rel="nofollow">aws_sqs_queue_policy.build_queue_policy</a></td>
<td>resource</td>
</tr>
<tr>
<td><a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy" rel="nofollow">aws_sqs_queue_policy.webhook_events_workflow_job_queue_policy</a></td>
<td>resource</td>
</tr>
<tr>
<td><a href="https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/string" rel="nofollow">random_string.random</a></td>
<td>resource</td>
</tr>
<tr>
<td><a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document" rel="nofollow">aws_iam_policy_document.deny_unsecure_transport</a></td>
<td>data source</td>
</tr>
</tbody>
</table>
<h2 tabindex="-1" dir="auto">Inputs</h2>
<table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
<th>Type</th>
<th>Default</th>
<th>Required</th>
</tr>
</thead>
<tbody>
<tr>
<td><a name="user-content-input_ami_filter"></a> <a href="#input_ami_filter">ami_filter</a></td>
<td>Map of lists used to create the AMI filter for the action runner AMI.</td>
<td><code>map(list(string))</code></td>
<td><pre>{<br>  "state": [<br>    "available"<br>  ]<br>}</pre></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_ami_housekeeper_cleanup_config"></a> <a href="#input_ami_housekeeper_cleanup_config">ami_housekeeper_cleanup_config</a></td>
<td>Configuration for AMI cleanup.<p>    <code>amiFilters</code> - Filters to use when searching for AMIs to cleanup. Default filter for images owned by the account and that are available.<br>    <code>dryRun</code> - If true, no AMIs will be deregistered. Default false.<br>    <code>launchTemplateNames</code> - Launch template names to use when searching for AMIs to cleanup. Default no launch templates.<br>    <code>maxItems</code> - The maximum numer of AMI's tha will be queried for cleanup. Default no maximum.<br>    <code>minimumDaysOld</code> - Minimum number of days old an AMI must be to be considered for cleanup. Default 30.<br>    <code>ssmParameterNames</code> - SSM parameter names to use when searching for AMIs to cleanup. This parameter should be set when using SSM to configure the AMI to use. Default no SSM parameters.</p></td>
<td><pre>object({<br>    amiFilters = optional(list(object({<br>      Name   = string<br>      Values = list(string)<br>      })),<br>      [{<br>        Name : "state",<br>        Values : ["available"],<br>        },<br>        {<br>          Name : "image-type",<br>          Values : ["machine"],<br>      }]<br>    )<br>    dryRun              = optional(bool, false)<br>    launchTemplateNames = optional(list(string))<br>    maxItems            = optional(number)<br>    minimumDaysOld      = optional(number, 30)<br>    ssmParameterNames   = optional(list(string))<br>  })</pre></td>
<td><code>{}</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_ami_housekeeper_lambda_s3_key"></a> <a href="#input_ami_housekeeper_lambda_s3_key">ami_housekeeper_lambda_s3_key</a></td>
<td>S3 key for syncer lambda function. Required if using S3 bucket to specify lambdas.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_ami_housekeeper_lambda_s3_object_version"></a> <a href="#input_ami_housekeeper_lambda_s3_object_version">ami_housekeeper_lambda_s3_object_version</a></td>
<td>S3 object version for syncer lambda function. Useful if S3 versioning is enabled on source bucket.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_ami_housekeeper_lambda_schedule_expression"></a> <a href="#input_ami_housekeeper_lambda_schedule_expression">ami_housekeeper_lambda_schedule_expression</a></td>
<td>Scheduler expression for action runner binary syncer.</td>
<td><code>string</code></td>
<td><code>"rate(1 day)"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_ami_housekeeper_lambda_timeout"></a> <a href="#input_ami_housekeeper_lambda_timeout">ami_housekeeper_lambda_timeout</a></td>
<td>Time out of the lambda in seconds.</td>
<td><code>number</code></td>
<td><code>300</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_ami_housekeeper_lambda_zip"></a> <a href="#input_ami_housekeeper_lambda_zip">ami_housekeeper_lambda_zip</a></td>
<td>File location of the lambda zip file.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_ami_id_ssm_parameter_name"></a> <a href="#input_ami_id_ssm_parameter_name">ami_id_ssm_parameter_name</a></td>
<td>Externally managed SSM parameter (of data type aws:ec2:image) that contains the AMI ID to launch runner instances from. Overrides ami_filter</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_ami_kms_key_arn"></a> <a href="#input_ami_kms_key_arn">ami_kms_key_arn</a></td>
<td>Optional CMK Key ARN to be used to launch an instance from a shared encrypted AMI</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_ami_owners"></a> <a href="#input_ami_owners">ami_owners</a></td>
<td>The list of owners used to select the AMI of action runner instances.</td>
<td><code>list(string)</code></td>
<td><pre>[<br>  "amazon"<br>]</pre></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_associate_public_ipv4_address"></a> <a href="#input_associate_public_ipv4_address">associate_public_ipv4_address</a></td>
<td>Associate public IPv4 with the runner. Only tested with IPv4</td>
<td><code>bool</code></td>
<td><code>false</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_aws_partition"></a> <a href="#input_aws_partition">aws_partition</a></td>
<td>(optiona) partition in the arn namespace to use if not 'aws'</td>
<td><code>string</code></td>
<td><code>"aws"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_aws_region"></a> <a href="#input_aws_region">aws_region</a></td>
<td>AWS region.</td>
<td><code>string</code></td>
<td>n/a</td>
<td>yes</td>
</tr>
<tr>
<td><a name="user-content-input_block_device_mappings"></a> <a href="#input_block_device_mappings">block_device_mappings</a></td>
<td>The EC2 instance block device configuration. Takes the following keys: <code>device_name</code>, <code>delete_on_termination</code>, <code>volume_type</code>, <code>volume_size</code>, <code>encrypted</code>, <code>iops</code>, <code>throughput</code>, <code>kms_key_id</code>, <code>snapshot_id</code>.</td>
<td><pre>list(object({<br>    delete_on_termination = optional(bool, true)<br>    device_name           = optional(string, "/dev/xvda")<br>    encrypted             = optional(bool, true)<br>    iops                  = optional(number)<br>    kms_key_id            = optional(string)<br>    snapshot_id           = optional(string)<br>    throughput            = optional(number)<br>    volume_size           = number<br>    volume_type           = optional(string, "gp3")<br>  }))</pre></td>
<td><pre>[<br>  {<br>    "volume_size": 30<br>  }<br>]</pre></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_cloudwatch_config"></a> <a href="#input_cloudwatch_config">cloudwatch_config</a></td>
<td>(optional) Replaces the module's default cloudwatch log config. See <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Agent-Configuration-File-Details.html" rel="nofollow">https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Agent-Configuration-File-Details.html</a> for details.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_create_service_linked_role_spot"></a> <a href="#input_create_service_linked_role_spot">create_service_linked_role_spot</a></td>
<td>(optional) create the service linked role for spot instances that is required by the scale-up lambda.</td>
<td><code>bool</code></td>
<td><code>false</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_delay_webhook_event"></a> <a href="#input_delay_webhook_event">delay_webhook_event</a></td>
<td>The number of seconds the event accepted by the webhook is invisible on the queue before the scale up lambda will receive the event.</td>
<td><code>number</code></td>
<td><code>30</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_disable_runner_autoupdate"></a> <a href="#input_disable_runner_autoupdate">disable_runner_autoupdate</a></td>
<td>Disable the auto update of the github runner agent. Be aware there is a grace period of 30 days, see also the <a href="https://github.blog/changelog/2022-02-01-github-actions-self-hosted-runners-can-now-disable-automatic-updates/" rel="nofollow">GitHub article</a></td>
<td><code>bool</code></td>
<td><code>false</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_ami_housekeeper"></a> <a href="#input_enable_ami_housekeeper">enable_ami_housekeeper</a></td>
<td>Option to disable the lambda to clean up old AMIs.</td>
<td><code>bool</code></td>
<td><code>false</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_cloudwatch_agent"></a> <a href="#input_enable_cloudwatch_agent">enable_cloudwatch_agent</a></td>
<td>Enables the cloudwatch agent on the ec2 runner instances. The runner uses a default config that can be overridden via <code>cloudwatch_config</code>.</td>
<td><code>bool</code></td>
<td><code>true</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_ephemeral_runners"></a> <a href="#input_enable_ephemeral_runners">enable_ephemeral_runners</a></td>
<td>Enable ephemeral runners, runners will only be used once.</td>
<td><code>bool</code></td>
<td><code>false</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_event_rule_binaries_syncer"></a> <a href="#input_enable_event_rule_binaries_syncer">enable_event_rule_binaries_syncer</a></td>
<td>Option to disable EventBridge Lambda trigger for the binary syncer, useful to stop automatic updates of binary distribution.</td>
<td><code>bool</code></td>
<td><code>true</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_fifo_build_queue"></a> <a href="#input_enable_fifo_build_queue">enable_fifo_build_queue</a></td>
<td>Enable a FIFO queue to keep the order of events received by the webhook. Recommended for repo level runners.</td>
<td><code>bool</code></td>
<td><code>false</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_jit_config"></a> <a href="#input_enable_jit_config">enable_jit_config</a></td>
<td>Overwrite the default behavior for JIT configuration. By default JIT configuration is enabled for ephemeral runners and disabled for non-ephemeral runners. In case of GHES check first if the JIT config API is avaialbe. In case you upgradeing from 3.x to 4.x you can set <code>enable_jit_config</code> to <code>false</code> to avoid a breaking change when having your own AMI.</td>
<td><code>bool</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_job_queued_check"></a> <a href="#input_enable_job_queued_check">enable_job_queued_check</a></td>
<td>Only scale if the job event received by the scale up lambda is in the queued state. By default enabled for non ephemeral runners and disabled for ephemeral. Set this variable to overwrite the default behavior.</td>
<td><code>bool</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_managed_runner_security_group"></a> <a href="#input_enable_managed_runner_security_group">enable_managed_runner_security_group</a></td>
<td>Enables creation of the default managed security group. Unmanaged security groups can be specified via <code>runner_additional_security_group_ids</code>.</td>
<td><code>bool</code></td>
<td><code>true</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_organization_runners"></a> <a href="#input_enable_organization_runners">enable_organization_runners</a></td>
<td>Register runners to organization, instead of repo level</td>
<td><code>bool</code></td>
<td><code>false</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_runner_binaries_syncer"></a> <a href="#input_enable_runner_binaries_syncer">enable_runner_binaries_syncer</a></td>
<td>Option to disable the lambda to sync GitHub runner distribution, useful when using a pre-build AMI.</td>
<td><code>bool</code></td>
<td><code>true</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_runner_detailed_monitoring"></a> <a href="#input_enable_runner_detailed_monitoring">enable_runner_detailed_monitoring</a></td>
<td>Should detailed monitoring be enabled for the runner. Set this to true if you want to use detailed monitoring. See <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html" rel="nofollow">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html</a> for details.</td>
<td><code>bool</code></td>
<td><code>false</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_runner_on_demand_failover_for_errors"></a> <a href="#input_enable_runner_on_demand_failover_for_errors">enable_runner_on_demand_failover_for_errors</a></td>
<td>Enable on-demand failover. For example to fall back to on demand when no spot capacity is available the variable can be set to <code>InsufficientInstanceCapacity</code>. When not defined the default behavior is to retry later.</td>
<td><code>list(string)</code></td>
<td><code>[]</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_runner_workflow_job_labels_check_all"></a> <a href="#input_enable_runner_workflow_job_labels_check_all">enable_runner_workflow_job_labels_check_all</a></td>
<td>If set to true all labels in the workflow job must match the GitHub labels (os, architecture and <code>self-hosted</code>). When false if <strong>any</strong> label matches it will trigger the webhook.</td>
<td><code>bool</code></td>
<td><code>true</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_ssm_on_runners"></a> <a href="#input_enable_ssm_on_runners">enable_ssm_on_runners</a></td>
<td>Enable to allow access to the runner instances for debugging purposes via SSM. Note that this adds additional permissions to the runner instances.</td>
<td><code>bool</code></td>
<td><code>false</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_user_data_debug_logging_runner"></a> <a href="#input_enable_user_data_debug_logging_runner">enable_user_data_debug_logging_runner</a></td>
<td>Option to enable debug logging for user-data, this logs all secrets as well.</td>
<td><code>bool</code></td>
<td><code>false</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_userdata"></a> <a href="#input_enable_userdata">enable_userdata</a></td>
<td>Should the userdata script be enabled for the runner. Set this to false if you are using your own prebuilt AMI.</td>
<td><code>bool</code></td>
<td><code>true</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_enable_workflow_job_events_queue"></a> <a href="#input_enable_workflow_job_events_queue">enable_workflow_job_events_queue</a></td>
<td>Enabling this experimental feature will create a secondory sqs queue to which a copy of the workflow_job event will be delivered.</td>
<td><code>bool</code></td>
<td><code>false</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_ghes_ssl_verify"></a> <a href="#input_ghes_ssl_verify">ghes_ssl_verify</a></td>
<td>GitHub Enterprise SSL verification. Set to 'false' when custom certificate (chains) is used for GitHub Enterprise Server (insecure).</td>
<td><code>bool</code></td>
<td><code>true</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_ghes_url"></a> <a href="#input_ghes_url">ghes_url</a></td>
<td>GitHub Enterprise Server URL. Example: <a href="https://github.internal.co/" rel="nofollow">https://github.internal.co</a> - DO NOT SET IF USING PUBLIC GITHUB</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_github_app"></a> <a href="#input_github_app">github_app</a></td>
<td>GitHub app parameters, see your github app. Ensure the key is the base64-encoded <code>.pem</code> file (the output of <code>base64 app.private-key.pem</code>, not the content of <code>private-key.pem</code>).</td>
<td><pre>object({<br>    key_base64     = string<br>    id             = string<br>    webhook_secret = string<br>  })</pre></td>
<td>n/a</td>
<td>yes</td>
</tr>
<tr>
<td><a name="user-content-input_idle_config"></a> <a href="#input_idle_config">idle_config</a></td>
<td>List of time periods, defined as a cron expression, to keep a minimum amount of runners active instead of scaling down to 0. By defining this list you can ensure that in time periods that match the cron expression within 5 seconds a runner is kept idle.</td>
<td><pre>list(object({<br>    cron             = string<br>    timeZone         = string<br>    idleCount        = number<br>    evictionStrategy = optional(string, "oldest_first")<br>  }))</pre></td>
<td><code>[]</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_instance_allocation_strategy"></a> <a href="#input_instance_allocation_strategy">instance_allocation_strategy</a></td>
<td>The allocation strategy for spot instances. AWS recommends using <code>price-capacity-optimized</code> however the AWS default is <code>lowest-price</code>.</td>
<td><code>string</code></td>
<td><code>"lowest-price"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_instance_max_spot_price"></a> <a href="#input_instance_max_spot_price">instance_max_spot_price</a></td>
<td>Max price price for spot instances per hour. This variable will be passed to the create fleet as max spot price for the fleet.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_instance_profile_path"></a> <a href="#input_instance_profile_path">instance_profile_path</a></td>
<td>The path that will be added to the instance_profile, if not set the environment name will be used.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_instance_target_capacity_type"></a> <a href="#input_instance_target_capacity_type">instance_target_capacity_type</a></td>
<td>Default lifecycle used for runner instances, can be either <code>spot</code> or <code>on-demand</code>.</td>
<td><code>string</code></td>
<td><code>"spot"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_instance_types"></a> <a href="#input_instance_types">instance_types</a></td>
<td>List of instance types for the action runner. Defaults are based on runner_os (al2023 for linux and Windows Server Core for win).</td>
<td><code>list(string)</code></td>
<td><pre>[<br>  "m5.large",<br>  "c5.large"<br>]</pre></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_job_queue_retention_in_seconds"></a> <a href="#input_job_queue_retention_in_seconds">job_queue_retention_in_seconds</a></td>
<td>The number of seconds the job is held in the queue before it is purged.</td>
<td><code>number</code></td>
<td><code>86400</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_key_name"></a> <a href="#input_key_name">key_name</a></td>
<td>Key pair name</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_kms_key_arn"></a> <a href="#input_kms_key_arn">kms_key_arn</a></td>
<td>Optional CMK Key ARN to be used for Parameter Store. This key must be in the current account.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_lambda_architecture"></a> <a href="#input_lambda_architecture">lambda_architecture</a></td>
<td>AWS Lambda architecture. Lambda functions using Graviton processors ('arm64') tend to have better price/performance than 'x86_64' functions.</td>
<td><code>string</code></td>
<td><code>"arm64"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_lambda_principals"></a> <a href="#input_lambda_principals">lambda_principals</a></td>
<td>(Optional) add extra principals to the role created for execution of the lambda, e.g. for local testing.</td>
<td><pre>list(object({<br>    type        = string<br>    identifiers = list(string)<br>  }))</pre></td>
<td><code>[]</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_lambda_runtime"></a> <a href="#input_lambda_runtime">lambda_runtime</a></td>
<td>AWS Lambda runtime.</td>
<td><code>string</code></td>
<td><code>"nodejs18.x"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_lambda_s3_bucket"></a> <a href="#input_lambda_s3_bucket">lambda_s3_bucket</a></td>
<td>S3 bucket from which to specify lambda functions. This is an alternative to providing local files directly.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_lambda_security_group_ids"></a> <a href="#input_lambda_security_group_ids">lambda_security_group_ids</a></td>
<td>List of security group IDs associated with the Lambda function.</td>
<td><code>list(string)</code></td>
<td><code>[]</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_lambda_subnet_ids"></a> <a href="#input_lambda_subnet_ids">lambda_subnet_ids</a></td>
<td>List of subnets in which the action runners will be launched, the subnets needs to be subnets in the <code>vpc_id</code>.</td>
<td><code>list(string)</code></td>
<td><code>[]</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_lambda_tracing_mode"></a> <a href="#input_lambda_tracing_mode">lambda_tracing_mode</a></td>
<td>DEPRECATED: Replaced by <code>tracing_config</code>.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_log_level"></a> <a href="#input_log_level">log_level</a></td>
<td>Logging level for lambda logging. Valid values are  'silly', 'trace', 'debug', 'info', 'warn', 'error', 'fatal'.</td>
<td><code>string</code></td>
<td><code>"info"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_logging_kms_key_id"></a> <a href="#input_logging_kms_key_id">logging_kms_key_id</a></td>
<td>Specifies the kms key id to encrypt the logs with.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_logging_retention_in_days"></a> <a href="#input_logging_retention_in_days">logging_retention_in_days</a></td>
<td>Specifies the number of days you want to retain log events for the lambda log group. Possible values are: 0, 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653.</td>
<td><code>number</code></td>
<td><code>180</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_minimum_running_time_in_minutes"></a> <a href="#input_minimum_running_time_in_minutes">minimum_running_time_in_minutes</a></td>
<td>The time an ec2 action runner should be running at minimum before terminated, if not busy.</td>
<td><code>number</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_pool_config"></a> <a href="#input_pool_config">pool_config</a></td>
<td>The configuration for updating the pool. The <code>pool_size</code> to adjust to by the events triggered by the <code>schedule_expression</code>. For example you can configure a cron expression for weekdays to adjust the pool to 10 and another expression for the weekend to adjust the pool to 1.</td>
<td><pre>list(object({<br>    schedule_expression = string<br>    size                = number<br>  }))</pre></td>
<td><code>[]</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_pool_lambda_reserved_concurrent_executions"></a> <a href="#input_pool_lambda_reserved_concurrent_executions">pool_lambda_reserved_concurrent_executions</a></td>
<td>Amount of reserved concurrent executions for the scale-up lambda function. A value of 0 disables lambda from being triggered and -1 removes any concurrency limitations.</td>
<td><code>number</code></td>
<td><code>1</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_pool_lambda_timeout"></a> <a href="#input_pool_lambda_timeout">pool_lambda_timeout</a></td>
<td>Time out for the pool lambda in seconds.</td>
<td><code>number</code></td>
<td><code>60</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_pool_runner_owner"></a> <a href="#input_pool_runner_owner">pool_runner_owner</a></td>
<td>The pool will deploy runners to the GitHub org ID, set this value to the org to which you want the runners deployed. Repo level is not supported.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_prefix"></a> <a href="#input_prefix">prefix</a></td>
<td>The prefix used for naming resources</td>
<td><code>string</code></td>
<td><code>"github-actions"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_queue_encryption"></a> <a href="#input_queue_encryption">queue_encryption</a></td>
<td>Configure how data on queues managed by the modules in ecrypted at REST. Options are encryped via SSE, non encrypted and via KMSS. By default encryptes via SSE is enabled. See for more details the Terraform <code>aws_sqs_queue</code> resource <a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue" rel="nofollow">https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue</a>.</td>
<td><pre>object({<br>    kms_data_key_reuse_period_seconds = number<br>    kms_master_key_id                 = string<br>    sqs_managed_sse_enabled           = bool<br>  })</pre></td>
<td><pre>{<br>  "kms_data_key_reuse_period_seconds": null,<br>  "kms_master_key_id": null,<br>  "sqs_managed_sse_enabled": true<br>}</pre></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_redrive_build_queue"></a> <a href="#input_redrive_build_queue">redrive_build_queue</a></td>
<td>Set options to attach (optional) a dead letter queue to the build queue, the queue between the webhook and the scale up lambda. You have the following options. 1. Disable by setting <code>enabled</code> to false. 2. Enable by setting <code>enabled</code> to <code>true</code>, <code>maxReceiveCount</code> to a number of max retries.</td>
<td><pre>object({<br>    enabled         = bool<br>    maxReceiveCount = number<br>  })</pre></td>
<td><pre>{<br>  "enabled": false,<br>  "maxReceiveCount": null<br>}</pre></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_repository_white_list"></a> <a href="#input_repository_white_list">repository_white_list</a></td>
<td>List of github repository full names (owner/repo_name) that will be allowed to use the github app. Leave empty for no filtering.</td>
<td><code>list(string)</code></td>
<td><code>[]</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_role_path"></a> <a href="#input_role_path">role_path</a></td>
<td>The path that will be added to role path for created roles, if not set the environment name will be used.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_role_permissions_boundary"></a> <a href="#input_role_permissions_boundary">role_permissions_boundary</a></td>
<td>Permissions boundary that will be added to the created roles.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_additional_security_group_ids"></a> <a href="#input_runner_additional_security_group_ids">runner_additional_security_group_ids</a></td>
<td>(optional) List of additional security groups IDs to apply to the runner.</td>
<td><code>list(string)</code></td>
<td><code>[]</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_architecture"></a> <a href="#input_runner_architecture">runner_architecture</a></td>
<td>The platform architecture of the runner instance_type.</td>
<td><code>string</code></td>
<td><code>"x64"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_as_root"></a> <a href="#input_runner_as_root">runner_as_root</a></td>
<td>Run the action runner under the root user. Variable <code>runner_run_as</code> will be ignored.</td>
<td><code>bool</code></td>
<td><code>false</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_binaries_s3_logging_bucket"></a> <a href="#input_runner_binaries_s3_logging_bucket">runner_binaries_s3_logging_bucket</a></td>
<td>Bucket for action runner distribution bucket access logging.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_binaries_s3_logging_bucket_prefix"></a> <a href="#input_runner_binaries_s3_logging_bucket_prefix">runner_binaries_s3_logging_bucket_prefix</a></td>
<td>Bucket prefix for action runner distribution bucket access logging.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_binaries_s3_sse_configuration"></a> <a href="#input_runner_binaries_s3_sse_configuration">runner_binaries_s3_sse_configuration</a></td>
<td>Map containing server-side encryption configuration for runner-binaries S3 bucket.</td>
<td><code>any</code></td>
<td><pre>{<br>  "rule": {<br>    "apply_server_side_encryption_by_default": {<br>      "sse_algorithm": "AES256"<br>    }<br>  }<br>}</pre></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_binaries_s3_versioning"></a> <a href="#input_runner_binaries_s3_versioning">runner_binaries_s3_versioning</a></td>
<td>Status of S3 versioning for runner-binaries S3 bucket. Once set to Enabled the change cannot be reverted via Terraform!</td>
<td><code>string</code></td>
<td><code>"Disabled"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_binaries_syncer_lambda_timeout"></a> <a href="#input_runner_binaries_syncer_lambda_timeout">runner_binaries_syncer_lambda_timeout</a></td>
<td>Time out of the binaries sync lambda in seconds.</td>
<td><code>number</code></td>
<td><code>300</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_binaries_syncer_lambda_zip"></a> <a href="#input_runner_binaries_syncer_lambda_zip">runner_binaries_syncer_lambda_zip</a></td>
<td>File location of the binaries sync lambda zip file.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_boot_time_in_minutes"></a> <a href="#input_runner_boot_time_in_minutes">runner_boot_time_in_minutes</a></td>
<td>The minimum time for an EC2 runner to boot and register as a runner.</td>
<td><code>number</code></td>
<td><code>5</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_credit_specification"></a> <a href="#input_runner_credit_specification">runner_credit_specification</a></td>
<td>The credit option for CPU usage of a T instance. Can be unset, "standard" or "unlimited".</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_ec2_tags"></a> <a href="#input_runner_ec2_tags">runner_ec2_tags</a></td>
<td>Map of tags that will be added to the launch template instance tag specifications.</td>
<td><code>map(string)</code></td>
<td><code>{}</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_egress_rules"></a> <a href="#input_runner_egress_rules">runner_egress_rules</a></td>
<td>List of egress rules for the GitHub runner instances.</td>
<td><pre>list(object({<br>    cidr_blocks      = list(string)<br>    ipv6_cidr_blocks = list(string)<br>    prefix_list_ids  = list(string)<br>    from_port        = number<br>    protocol         = string<br>    security_groups  = list(string)<br>    self             = bool<br>    to_port          = number<br>    description      = string<br>  }))</pre></td>
<td><pre>[<br>  {<br>    "cidr_blocks": [<br>      "0.0.0.0/0"<br>    ],<br>    "description": null,<br>    "from_port": 0,<br>    "ipv6_cidr_blocks": [<br>      "::/0"<br>    ],<br>    "prefix_list_ids": null,<br>    "protocol": "-1",<br>    "security_groups": null,<br>    "self": null,<br>    "to_port": 0<br>  }<br>]</pre></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_extra_labels"></a> <a href="#input_runner_extra_labels">runner_extra_labels</a></td>
<td>Extra (custom) labels for the runners (GitHub). Labels checks on the webhook can be enforced by setting <code>enable_workflow_job_labels_check</code>. GitHub read-only labels should not be provided.</td>
<td><code>list(string)</code></td>
<td><code>[]</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_group_name"></a> <a href="#input_runner_group_name">runner_group_name</a></td>
<td>Name of the runner group.</td>
<td><code>string</code></td>
<td><code>"Default"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_iam_role_managed_policy_arns"></a> <a href="#input_runner_iam_role_managed_policy_arns">runner_iam_role_managed_policy_arns</a></td>
<td>Attach AWS or customer-managed IAM policies (by ARN) to the runner IAM role</td>
<td><code>list(string)</code></td>
<td><code>[]</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_log_files"></a> <a href="#input_runner_log_files">runner_log_files</a></td>
<td>(optional) Replaces the module default cloudwatch log config. See <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Agent-Configuration-File-Details.html" rel="nofollow">https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Agent-Configuration-File-Details.html</a> for details.</td>
<td><pre>list(object({<br>    log_group_name   = string<br>    prefix_log_group = bool<br>    file_path        = string<br>    log_stream_name  = string<br>  }))</pre></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_metadata_options"></a> <a href="#input_runner_metadata_options">runner_metadata_options</a></td>
<td>Metadata options for the ec2 runner instances. By default, the module uses metadata tags for bootstrapping the runner, only disable <code>instance_metadata_tags</code> when using custom scripts for starting the runner.</td>
<td><code>map(any)</code></td>
<td><pre>{<br>  "http_endpoint": "enabled",<br>  "http_put_response_hop_limit": 1,<br>  "http_tokens": "required",<br>  "instance_metadata_tags": "enabled"<br>}</pre></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_name_prefix"></a> <a href="#input_runner_name_prefix">runner_name_prefix</a></td>
<td>The prefix used for the GitHub runner name. The prefix will be used in the default start script to prefix the instance name when register the runner in GitHub. The value is availabe via an EC2 tag 'ghr:runner_name_prefix'.</td>
<td><code>string</code></td>
<td><code>""</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_os"></a> <a href="#input_runner_os">runner_os</a></td>
<td>The EC2 Operating System type to use for action runner instances (linux,windows).</td>
<td><code>string</code></td>
<td><code>"linux"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runner_run_as"></a> <a href="#input_runner_run_as">runner_run_as</a></td>
<td>Run the GitHub actions agent as user.</td>
<td><code>string</code></td>
<td><code>"ec2-user"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runners_lambda_s3_key"></a> <a href="#input_runners_lambda_s3_key">runners_lambda_s3_key</a></td>
<td>S3 key for runners lambda function. Required if using S3 bucket to specify lambdas.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runners_lambda_s3_object_version"></a> <a href="#input_runners_lambda_s3_object_version">runners_lambda_s3_object_version</a></td>
<td>S3 object version for runners lambda function. Useful if S3 versioning is enabled on source bucket.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runners_lambda_zip"></a> <a href="#input_runners_lambda_zip">runners_lambda_zip</a></td>
<td>File location of the lambda zip file for scaling runners.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runners_maximum_count"></a> <a href="#input_runners_maximum_count">runners_maximum_count</a></td>
<td>The maximum number of runners that will be created.</td>
<td><code>number</code></td>
<td><code>3</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runners_scale_down_lambda_timeout"></a> <a href="#input_runners_scale_down_lambda_timeout">runners_scale_down_lambda_timeout</a></td>
<td>Time out for the scale down lambda in seconds.</td>
<td><code>number</code></td>
<td><code>60</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runners_scale_up_lambda_timeout"></a> <a href="#input_runners_scale_up_lambda_timeout">runners_scale_up_lambda_timeout</a></td>
<td>Time out for the scale up lambda in seconds.</td>
<td><code>number</code></td>
<td><code>30</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_runners_ssm_housekeeper"></a> <a href="#input_runners_ssm_housekeeper">runners_ssm_housekeeper</a></td>
<td>Configuration for the SSM housekeeper lambda. This lambda deletes token / JIT config from SSM.<p>  <code>schedule_expression</code>: is used to configure the schedule for the lambda.<br>  <code>enabled</code>: enable or disable the lambda trigger via the EventBridge.<br>  <code>lambda_timeout</code>: timeout for the lambda in seconds.<br>  <code>config</code>: configuration for the lambda function. Token path will be read by default from the module.</p></td>
<td><pre>object({<br>    schedule_expression = optional(string, "rate(1 day)")<br>    enabled             = optional(bool, true)<br>    lambda_timeout      = optional(number, 60)<br>    config = object({<br>      tokenPath      = optional(string)<br>      minimumDaysOld = optional(number, 1)<br>      dryRun         = optional(bool, false)<br>    })<br>  })</pre></td>
<td><pre>{<br>  "config": {}<br>}</pre></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_scale_down_schedule_expression"></a> <a href="#input_scale_down_schedule_expression">scale_down_schedule_expression</a></td>
<td>Scheduler expression to check every x for scale down.</td>
<td><code>string</code></td>
<td><code>"cron(*/5 * * * ? *)"</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_scale_up_reserved_concurrent_executions"></a> <a href="#input_scale_up_reserved_concurrent_executions">scale_up_reserved_concurrent_executions</a></td>
<td>Amount of reserved concurrent executions for the scale-up lambda function. A value of 0 disables lambda from being triggered and -1 removes any concurrency limitations.</td>
<td><code>number</code></td>
<td><code>1</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_ssm_paths"></a> <a href="#input_ssm_paths">ssm_paths</a></td>
<td>The root path used in SSM to store configuration and secrets.</td>
<td><pre>object({<br>    root       = optional(string, "github-action-runners")<br>    app        = optional(string, "app")<br>    runners    = optional(string, "runners")<br>    use_prefix = optional(bool, true)<br>  })</pre></td>
<td><code>{}</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_subnet_ids"></a> <a href="#input_subnet_ids">subnet_ids</a></td>
<td>List of subnets in which the action runner instances will be launched. The subnets need to exist in the configured VPC (<code>vpc_id</code>), and must reside in different availability zones (see <a data-error-text="Failed to load title" data-id="1551859415" data-permission-text="Title is private" data-url="https://github.com/philips-labs/terraform-aws-github-runner/issues/2904" data-hovercard-type="issue" data-hovercard-url="/philips-labs/terraform-aws-github-runner/issues/2904/hovercard" href="https://github.com/philips-labs/terraform-aws-github-runner/issues/2904">#2904</a>)</td>
<td><code>list(string)</code></td>
<td>n/a</td>
<td>yes</td>
</tr>
<tr>
<td><a name="user-content-input_syncer_lambda_s3_key"></a> <a href="#input_syncer_lambda_s3_key">syncer_lambda_s3_key</a></td>
<td>S3 key for syncer lambda function. Required if using an S3 bucket to specify lambdas.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_syncer_lambda_s3_object_version"></a> <a href="#input_syncer_lambda_s3_object_version">syncer_lambda_s3_object_version</a></td>
<td>S3 object version for syncer lambda function. Useful if S3 versioning is enabled on source bucket.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_tags"></a> <a href="#input_tags">tags</a></td>
<td>Map of tags that will be added to created resources. By default resources will be tagged with name and environment.</td>
<td><code>map(string)</code></td>
<td><code>{}</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_tracing_config"></a> <a href="#input_tracing_config">tracing_config</a></td>
<td>Configuration for lambda tracing.</td>
<td><pre>object({<br>    mode                  = optional(string, null)<br>    capture_http_requests = optional(bool, false)<br>    capture_error         = optional(bool, false)<br>  })</pre></td>
<td><code>{}</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_userdata_post_install"></a> <a href="#input_userdata_post_install">userdata_post_install</a></td>
<td>Script to be ran after the GitHub Actions runner is installed on the EC2 instances</td>
<td><code>string</code></td>
<td><code>""</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_userdata_pre_install"></a> <a href="#input_userdata_pre_install">userdata_pre_install</a></td>
<td>Script to be ran before the GitHub Actions runner is installed on the EC2 instances</td>
<td><code>string</code></td>
<td><code>""</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_userdata_template"></a> <a href="#input_userdata_template">userdata_template</a></td>
<td>Alternative user-data template, replacing the default template. By providing your own user_data you have to take care of installing all required software, including the action runner. Variables userdata_pre/post_install are ignored.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_vpc_id"></a> <a href="#input_vpc_id">vpc_id</a></td>
<td>The VPC for security groups of the action runners.</td>
<td><code>string</code></td>
<td>n/a</td>
<td>yes</td>
</tr>
<tr>
<td><a name="user-content-input_webhook_lambda_apigateway_access_log_settings"></a> <a href="#input_webhook_lambda_apigateway_access_log_settings">webhook_lambda_apigateway_access_log_settings</a></td>
<td>Access log settings for webhook API gateway.</td>
<td><pre>object({<br>    destination_arn = string<br>    format          = string<br>  })</pre></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_webhook_lambda_s3_key"></a> <a href="#input_webhook_lambda_s3_key">webhook_lambda_s3_key</a></td>
<td>S3 key for webhook lambda function. Required if using S3 bucket to specify lambdas.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_webhook_lambda_s3_object_version"></a> <a href="#input_webhook_lambda_s3_object_version">webhook_lambda_s3_object_version</a></td>
<td>S3 object version for webhook lambda function. Useful if S3 versioning is enabled on source bucket.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_webhook_lambda_timeout"></a> <a href="#input_webhook_lambda_timeout">webhook_lambda_timeout</a></td>
<td>Time out of the webhook lambda in seconds.</td>
<td><code>number</code></td>
<td><code>10</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_webhook_lambda_zip"></a> <a href="#input_webhook_lambda_zip">webhook_lambda_zip</a></td>
<td>File location of the webhook lambda zip file.</td>
<td><code>string</code></td>
<td><code>null</code></td>
<td>no</td>
</tr>
<tr>
<td><a name="user-content-input_workflow_job_queue_configuration"></a> <a href="#input_workflow_job_queue_configuration">workflow_job_queue_configuration</a></td>
<td>Configuration options for workflow job queue which is only applicable if the flag enable_workflow_job_events_queue is set to true.</td>
<td><pre>object({<br>    delay_seconds              = number<br>    visibility_timeout_seconds = number<br>    message_retention_seconds  = number<br>  })</pre></td>
<td><pre>{<br>  "delay_seconds": null,<br>  "message_retention_seconds": null,<br>  "visibility_timeout_seconds": null<br>}</pre></td>
<td>no</td>
</tr>
</tbody>
</table>
<h2 tabindex="-1" dir="auto">Outputs</h2>
<table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a name="user-content-output_binaries_syncer"></a> <a href="#output_binaries_syncer">binaries_syncer</a></td>
<td>n/a</td>
</tr>
<tr>
<td><a name="user-content-output_queues"></a> <a href="#output_queues">queues</a></td>
<td>SQS queues.</td>
</tr>
<tr>
<td><a name="user-content-output_runners"></a> <a href="#output_runners">runners</a></td>
<td>n/a</td>
</tr>
<tr>
<td><a name="user-content-output_ssm_parameters"></a> <a href="#output_ssm_parameters">ssm_parameters</a></td>
<td>n/a</td>
</tr>
<tr>
<td><a name="user-content-output_webhook"></a> <a href="#output_webhook">webhook</a></td>
<td>n/a</td>
</tr>
</tbody>
</table>

<h2 tabindex="-1" dir="auto">Contributing</h2>
<p dir="auto">We welcome contributions, please check out the <a href="https://github.com/philips-labs/terraform-aws-github-runner/blob/main/CONTRIBUTING.md">contribution guide</a>. Be aware we use <a href="https://pre-commit.com/" rel="nofollow">pre commit hooks</a> to update the docs.</p>
<h2 tabindex="-1" dir="auto">Philips Forest</h2>
<p dir="auto">This module is part of the Philips Forest.</p>
<div data-snippet-clipboard-copy-content="                                                     ___                   _
                                                    / __\__  _ __ ___  ___| |_
                                                   / _\/ _ \| '__/ _ \/ __| __|
                                                  / / | (_) | | |  __/\__ \ |_
                                                  \/   \___/|_|  \___||___/\__|

                                                                 Infrastructure"><pre lang="plain"><code>                                                     ___                   _
                                                    / __\__  _ __ ___  ___| |_
                                                   / _\/ _ \| '__/ _ \/ __| __|
                                                  / / | (_) | | |  __/\__ \ |_
                                                  \/   \___/|_|  \___||___/\__|

                                                                 Infrastructure
</code></pre></div>
<p dir="auto">Talk to the forestkeepers in the <code>runners-channel</code> on Slack.</p>
<p dir="auto"><a href="https://join.slack.com/t/philips-software/shared_invite/zt-xecw65v5-i1531hGP~mdVwgxLFx7ckg" rel="nofollow"><img src="https://camo.githubusercontent.com/870d2945e15dde83583f64ea1f3f4471702e45bf30fa884412da74cb7731ae42/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c61636b2d3441313534423f7374796c653d666f722d7468652d6261646765266c6f676f3d736c61636b266c6f676f436f6c6f723d7768697465" alt="Slack" data-canonical-src="https://img.shields.io/badge/Slack-4A154B?style=for-the-badge&amp;logo=slack&amp;logoColor=white"></a></p>
</article>
          </div></div>]]></description>
        </item>
    </channel>
</rss>