<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 24 Jan 2025 14:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[UI is hell: four-function calculators (145 pts)]]></title>
            <link>https://lcamtuf.substack.com/p/ui-is-hell-four-function-calculators</link>
            <guid>42810300</guid>
            <pubDate>Fri, 24 Jan 2025 03:46:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lcamtuf.substack.com/p/ui-is-hell-four-function-calculators">https://lcamtuf.substack.com/p/ui-is-hell-four-function-calculators</a>, See on <a href="https://news.ycombinator.com/item?id=42810300">Hacker News</a></p>
Couldn't get https://lcamtuf.substack.com/p/ui-is-hell-four-function-calculators: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[The State of Vim (225 pts)]]></title>
            <link>https://lwn.net/Articles/1002342/</link>
            <guid>42810176</guid>
            <pubDate>Fri, 24 Jan 2025 03:22:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lwn.net/Articles/1002342/">https://lwn.net/Articles/1002342/</a>, See on <a href="https://news.ycombinator.com/item?id=42810176">Hacker News</a></p>
Couldn't get https://lwn.net/Articles/1002342/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Weierstrass's Monster (129 pts)]]></title>
            <link>https://www.quantamagazine.org/the-jagged-monstrous-function-that-broke-calculus-20250123/</link>
            <guid>42810103</guid>
            <pubDate>Fri, 24 Jan 2025 03:02:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.quantamagazine.org/the-jagged-monstrous-function-that-broke-calculus-20250123/">https://www.quantamagazine.org/the-jagged-monstrous-function-that-broke-calculus-20250123/</a>, See on <a href="https://news.ycombinator.com/item?id=42810103">Hacker News</a></p>
Couldn't get https://www.quantamagazine.org/the-jagged-monstrous-function-that-broke-calculus-20250123/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[A QR code that sends you to a different destination - lenticular and adversarial (448 pts)]]></title>
            <link>https://mstdn.social/@isziaui/113874436953157913</link>
            <guid>42809268</guid>
            <pubDate>Thu, 23 Jan 2025 23:55:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mstdn.social/@isziaui/113874436953157913">https://mstdn.social/@isziaui/113874436953157913</a>, See on <a href="https://news.ycombinator.com/item?id=42809268">Hacker News</a></p>
Couldn't get https://mstdn.social/@isziaui/113874436953157913: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Surface-Stable Fractal Dithering (154 pts)]]></title>
            <link>https://github.com/runevision/Dither3D</link>
            <guid>42808889</guid>
            <pubDate>Thu, 23 Jan 2025 22:50:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/runevision/Dither3D">https://github.com/runevision/Dither3D</a>, See on <a href="https://news.ycombinator.com/item?id=42808889">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Surface-Stable Fractal Dithering</h2><a id="user-content-surface-stable-fractal-dithering" aria-label="Permalink: Surface-Stable Fractal Dithering" href="#surface-stable-fractal-dithering"></a></p>
<p dir="auto">Surface-Stable Fractal Dithering is a novel form of dithering invented by Rune Skovbo Johansen for use on surfaces in 3D scenes.</p>
<p dir="auto">What's unique about it is that the dots in the dither patterns stick to surfaces, and yet the dot sizes and spacing remain approximately constant on the screen, even as surfaces move closer by or further away. This is achieved by dynamically adding or removing dots as needed.</p>
<p dir="auto">Here's a video explaining how it works:</p>
<p dir="auto"><a href="https://www.youtube.com/watch?v=HPqGaIMVuLs" rel="nofollow"><img src="https://camo.githubusercontent.com/04eac3aac9b70b4b4f9c240b2a2358bc22455d2cc88f0bde74697fe84eebd249/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f4850714761494d56754c732f302e6a7067" alt="Surface-Stable Fractal Dithering video on YouTube" data-canonical-src="https://img.youtube.com/vi/HPqGaIMVuLs/0.jpg"></a></p>
<p dir="auto">This repository contains the shader and texture source files, and a Unity example project demonstrating their use. The example project is made with Unity 2019.4 and is also tested in Unity 2022.3.</p>
<p dir="auto">The core implementation is located in the folder <code>Assets/Dither3D</code>. The remaining files relate to the Unity example project.</p>
<p dir="auto">The original version of this repository can be found at:<br>
<a href="https://github.com/runevision/Dither3D">https://github.com/runevision/Dither3D</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Dither Properties</h2><a id="user-content-dither-properties" aria-label="Permalink: Dither Properties" href="#dither-properties"></a></p>
<p dir="auto">Each material that uses the dithering has the following dither-specific number properties:</p>
<p dir="auto"><strong>Dither Input Brightness</strong></p>
<ul dir="auto">
<li><code>Exposure</code><br>
Exposure to apply to input brightness (default 1).</li>
<li><code>Offset</code><br>
Offset to apply to input brightness (default 0).</li>
</ul>
<p dir="auto"><strong>Dither Settings</strong></p>
<ul dir="auto">
<li><code>Dot Scale</code><br>
Value that exponentially scales the dots.</li>
<li><code>Dot Size Variability</code><br>
0 = shading controls dot count "Bayer style" (default);<br>
1 = shading controls dot sizes "half-tone style".</li>
<li><code>Dot Contrast</code><br>
A value of 1 produces perfect anti-aliasing (default 1).</li>
<li><code>Stretch Smoothness</code><br>
How much to smooth anisotropic dots (default 1).</li>
</ul>
<p dir="auto"><strong>Global Options</strong></p>
<p dir="auto">Furthermore, the following global toggle properties can be set via the <code>Dither3DGlobalProperties</code> component:</p>
<ul dir="auto">
<li><code>Radial Compensation</code><br>
When using a perspective camera, dots must be larger towards the edge of the screen in order to be stable under camera rotation. The Radial Compensation feature can be enabled to achieve this.</li>
<li><code>Quantize Layers</code><br>
When disabled, dots may grow or shrink in size when they appear or disappear, respectively. Even when enabled, dots may still be partially cut off, but that's a separate and unavoidable effect.</li>
<li><code>Debug Fractal</code><br>
Displays an overlay effect showing the pattern size, when enabled.</li>
</ul>
<p dir="auto">The <code>Dither3DGlobalProperties</code> component can also be used to override the non-global properties of all dither materials at once.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Files</h2><a id="user-content-files" aria-label="Permalink: Files" href="#files"></a></p>
<p dir="auto">A brief overview of the files in the <code>Assets/Dither3D</code> folder:</p>
<p dir="auto">The central shader include file with the dithering implementation:</p>
<ul dir="auto">
<li><code>Dither3DInclude.cginc</code></li>
</ul>
<p dir="auto">Included shader files that use the dithering implementation:</p>
<ul dir="auto">
<li><code>Dither3DOpaque.shader</code></li>
<li><code>Dither3DCutout.shader</code></li>
<li><code>Dither3DParticleAdd.shader</code></li>
<li><code>Dither3DSkybox.shader</code></li>
</ul>
<p dir="auto">The dither shaders rely on a 3D texture with dither patterns. These come in several versions with different amounts of dots. In the materials using the dither shaders, you can freely switch between these 3D textures.</p>
<ul dir="auto">
<li><code>Dither3D_1x1.asset</code></li>
<li><code>Dither3D_2x2.asset</code></li>
<li><code>Dither3D_4x4.asset</code></li>
<li><code>Dither3D_8x8.asset</code></li>
</ul>
<p dir="auto">Although the 3D textures are available in the repository, a script is also included which can generate them from scratch. You can do this by using the menu items under the grouping <code>Assets/Create/Dither 3D Texture/...</code>.</p>
<ul dir="auto">
<li><code>Dither3DTextureMaker.cs</code></li>
</ul>
<p dir="auto">The script also generates PNG image files, where the different layers are laid out bottom to top. These PNG files are not used for anything and can be safely deleted, but they are easier to inspect and study than the native 3D textures. Note that later versions of Unity can in principle import 3D textures from such 2D images, but due to an inconsistency between Unity's 3D texture API and their 3D texture importer, the layers will appear in reverse order if this is attempted, and this will cause the fractal dithering effect to not work.</p>
<ul dir="auto">
<li><code>Dither3D_1x1.png</code></li>
<li><code>Dither3D_2x2.png</code></li>
<li><code>Dither3D_4x4.png</code></li>
<li><code>Dither3D_8x8.png</code></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">This Surface-Stable Fractal Dithering implementation is licensed under the <a href="https://mozilla.org/MPL/2.0/" rel="nofollow">Mozilla Public License, v. 2.0</a>.</p>
<p dir="auto">You can read a summary <a href="https://choosealicense.com/licenses/mpl-2.0/" rel="nofollow">here</a>. In short: If you make changes/improvements to this Surface-Stable Fractal Dithering implementation, you must share those for free with the community. But the rest of the source code for your game or application is not subject to this license, so there's nothing preventing you from creating proprietary and commercial games that use this Surface-Stable Fractal Dithering implementation.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Susctl CVE-2024-54507: A particularly 'sus' sysctl in the XNU kernel (133 pts)]]></title>
            <link>https://jprx.io/cve-2024-54507/</link>
            <guid>42808801</guid>
            <pubDate>Thu, 23 Jan 2025 22:37:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jprx.io/cve-2024-54507/">https://jprx.io/cve-2024-54507/</a>, See on <a href="https://news.ycombinator.com/item?id=42808801">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
      <p><a href="https://jprx.io/">&lt; Home</a>
      <a id="modeswitch" href="#" onclick="SwitchMode();">Light Mode</a></p><center>

<h2>SUSCTL (CVE-2024-54507)</h2>

<h3>A particularly 'sus' sysctl in the XNU Kernel</h3>

<pre>The kernel might just be an impostor.
</pre>

</center>

<p><a href="https://github.com/jprx/CVE-2024-54507">TLDR: here is a PoC</a>.</p>

<p>Every time Apple releases a new version of XNU, I run a custom suite of tests under an address sanitizer to see if I can spot any regressions, or even possibly new bugs.
When I was messing around with macOS 15.0, I was shocked to see a very simple command was causing the sanitizer to report an invalid load.</p>

<p>If you run <code>sysctl -a</code> on macOS 15.0 running with KASAN, you'll see a crash like the following:</p>

<pre>panic(cpu 0): KASan: invalid 4-byte load [PARTIAL2]
 @kasan-report.c:114
Panicked task 0xffffff86aa0fc800: 1 threads: pid 602: sysctl
Backtrace (CPU 0), panicked thread: 0xffffff869afa90d0, Frame : Return Address
0xffffffff011ff450 : 0xffffff801849b53b mach_kernel : _handle_debugger_trap + 0x4bb
0xffffffff011ff4b0 : 0xffffff8018a0313a mach_kernel : _kdp_i386_trap + 0x15a
0xffffffff011ff4f0 : 0xffffff80189e9c13 mach_kernel : _kernel_trap + 0xe23
0xffffffff011ff680 : 0xffffff8018a0d051 mach_kernel : trap_from_kernel + 0x26
0xffffffff011ff6a0 : 0xffffff801849ab1a mach_kernel : _DebuggerTrapWithState + 0x9a
0xffffffff011ff7d0 : 0xffffff801849bbff mach_kernel : _panic_trap_to_debugger + 0x2af
0xffffffff011ff840 : 0xffffff801a130ec4 mach_kernel : _panic + 0x8a
0xffffffff011ff930 : 0xffffff801a15e783 mach_kernel : _kasan_report_internal.cold.1 + 0x23
0xffffffff011ff940 : 0xffffff801a1257a9 mach_kernel : _kasan_report_internal + 0x279
0xffffffff011ff9b0 : 0xffffff801a12528b mach_kernel : _kasan_crash_report + 0x2b
0xffffffff011ff9e0 : 0xffffff801a125995 mach_kernel : ___asan_report_load4 + 0x15
0xffffffff011ff9f0 : 0xffffff80192e23e4 mach_kernel : _sysctl_udp_log_port + 0x244
0xffffffff011ffad0 : 0xffffff801970b81c mach_kernel : _sysctl_root + 0xf4c
0xffffffff011ffc80 : 0xffffff801970c197 mach_kernel : _sysctl + 0x577
0xffffffff011ffed0 : 0xffffff8019c143b2 mach_kernel : _unix_syscall64 + 0x492
0xffffffff011fffa0 : 0xffffff8018a0d496 mach_kernel : _hndl_unix_scall64 + 0x16

Process name corresponding to current thread: sysctl
</pre>

<p>In case you aren't familiar with sysctl's, they are basically a set of runtime-controllable kernel variables that you can adjust from userspace.
A lot of the time, the underlying resource of a given sysctl is literally just an integer in the kernel somewhere (like <a href="https://github.com/apple-oss-distributions/xnu/blob/xnu-11215.1.10/bsd/netinet/udp_log.c#L56">this</a>).
They're commonly used in kernel programming as a quick way to adjust parameters, and are used all over XNU.</p>

<p>Running <code>sysctl -a</code> will enumerate all sysctl's in the system.
Somehow, doing this causes an invalid load.</p>

<p>There are a variety of ways to declare a sysctl using macros from <a href="https://github.com/apple-oss-distributions/xnu/blob/xnu-11215.1.10/bsd/sys/sysctl.h#L318"><code>sysctl.h</code></a> with support for many common types, such as <code>int</code>'s or <code>struct</code>'s.
These handle all the boilerplate for you of copying in values from userspace / copying kernel values out, and provide some security flags as well.</p>

<p>The more interesting kind of sysctl is <a href="https://github.com/apple-oss-distributions/xnu/blob/xnu-11215.1.10/bsd/sys/sysctl.h#L525"><code>SYSCTL_PROC</code></a>, where a custom handler is used to service the sysctl instead of the kernel-supplied boilerplate.
When writing a <code>SYSCTL_PROC</code>, you are responsible for validating user requests, updating the kernel state, and returning values to userspace.</p>

<p>You can read more about writing implementing sysctl's <a href="https://freebsdfoundation.org/wp-content/uploads/2014/01/Implementing-System-Control-Nodes-sysctl.pdf">here</a> [1].</p>

<h2>The Bug</h2>

<p>That brings us to our bug.
<a href="https://github.com/apple-oss-distributions/xnu/blob/xnu-11215.1.10/bsd/netinet/udp_log.c#L435"><code>sysctl_udp_log_port</code></a> is one of those <code>SYSCTL_PROC</code> handlers, and is also the function in our backtrace causing a PARTIAL2 KASAN load violation.
This handler is shared by four unique sysctl's:</p>

<ul>
<li><code>net.inet.udp.log.local_port_included</code></li>
<li><code>net.inet.udp.log.remote_port_included</code></li>
<li><code>net.inet.udp.log.local_port_excluded</code></li>
<li><code>net.inet.udp.log.remote_port_excluded</code></li>
</ul>

<p>Each of these sysctl's maps to a 2-byte <code>uint16_t</code> in the kernel defined in <a href="https://github.com/apple-oss-distributions/xnu/blob/xnu-11215.1.10/bsd/netinet/udp_log.c#L73"><code>udp_log.c</code></a>.
The relationship between the user-visible sysctl name and the kernel variable is established using the <code>SYSCTL_PROC</code> macro.</p>

<p>When the user tries to read from or write to one of these four sysctl's, the handler method (where the bug is) is called.
Let's take a look at the source of this handler function.
According to the address sanitizer, we are loading 2 bytes too many- can you see why?</p>

<pre>static int
sysctl_udp_log_port SYSCTL_HANDLER_ARGS
{
#pragma unused(arg1, arg2)
    int error;
    int new_value = *(int *)oidp-&gt;oid_arg1;

    error = sysctl_handle_int(oidp, &amp;new_value, 0, req);
    if (error != 0) {
        return error;
    }
    if (new_value &lt; 0 || new_value &gt; UINT16_MAX) {
        return EINVAL;
    }
    *(uint16_t *)oidp-&gt;oid_arg1 = (uint16_t)new_value;

    return 0;
}
</pre>

<p>When <code>sysctl_udp_log_port</code> is invoked, <code>oidp-&gt;oid_arg1</code> will point to one of the four <code>uint16_t</code>'s from above, depending on which sysctl was requested.
This function mostly just wraps <code>sysctl_handle_int</code>, which both validates the user requested new value for the sysctl (writing it into <code>new_value</code>), and simultaneously copies out the current value of the sysctl to userspace.</p>

<p>Before storing the new value back into the underlying <code>uint16_t</code> variable, the kernel checks if we are about to cause an overflow (returning <code>EINVAL</code> if so).
If <code>new_value</code> is less than 0 or more than <code>UINT16_MAX</code>, we return <code>EINVAL</code> and do not update <code>oid_arg1</code>.
Otherwise, we write <code>new_value</code> to <code>oid_arg1</code>, treating it as a properly sized <code>uint16_t</code>.
This check is sufficient to prevent overwrites, but an overread has already occurred...</p>

<h2>Integer Type Confusion</h2>

<p>The bug is that when we load <code>oidp-&gt;oid_arg1</code> into <code>new_value</code>, we treat it as an integer pointer (4 bytes), rather than a <code>uint16_t</code> pointer (2 bytes).
That's why we observed 2 bytes of out-of-bounds data being read when we ran <code>sysctl -a</code>.</p>

<pre>int new_value = *(int *)oidp-&gt;oid_arg1; // Out-of-bounds read because oid_arg1 is a u16, not i32
</pre>

<p>Then, when we call <code>sysctl_handle_int</code>, we pass the OOB read data back to userspace.
Even though we detect the overflow and return <code>EINVAL</code>, the OOB read has already occurred, and is visible from userspace!</p>

<h2>Leaking (2 bytes of) Kernel Memory</h2>

<p>We can leak two bytes of kernel memory by simply reading from the last sysctl in memory (<code>remote_port_excluded</code>).
This sysctl can be read without root.</p>

<pre>void leak() {
    uint64_t val = 0;
    size_t len = sizeof(val);
    sysctlbyname("net.inet.udp.log.remote_port_excluded", &amp;val, &amp;len, NULL, 0);
    printf("leaked: 0x%X 0x%X\n", (val &gt;&gt; 16) &amp; 0x0FF, (val &gt;&gt; 24) &amp; 0x0FF);
}
</pre>

<p>I tried this on an <code>xnu-11215.1.10</code> VMAPPLE ARM64 release flavor kernel that I <a href="https://github.com/blacktop/darwin-xnu-build">compiled locally</a>.
In the kernel that I compiled I observed <code>net.inet.udp.log_in_vain</code>, some random other sysctl, placed directly after <code>remote_port_excluded</code>.
As ARM64 is little-endian, we can leak the two least significant bytes of this variable.</p>

<pre>% sysctl net.inet.udp.log_in_vain
net.inet.udp.log_in_vain: 0
% ./leak
leaked: 0x0 0x0
% sudo sysctl net.inet.udp.log_in_vain=0x1234
net.inet.udp.log_in_vain: 0 -&gt; 4660
% ./leak
leaked: 0x34 0x12
</pre>

<p>Let's take a look at this in a debugger.
I attached a debugger and used it to set the two bytes after <code>udp_log_remote_port_excluded</code> (at <code>0xfffffe002cbf9e8c</code>) to <code>0xABCD</code>.
We should not be able to read these from userspace.</p>

<pre>(lldb) p &amp;udp_log_remote_port_excluded
(uint16_t *) 0xfffffe002cbf9e8a
(lldb) x/4bx 0xfffffe002cbf9e8a
0xfffffe002cbf9e8a: 0x00 0x00 0x00 0x00
(lldb) memory write 0xfffffe002cbf9e8c -s 2 0xABCD
(lldb) x/4bx 0xfffffe002cbf9e8a
0xfffffe002cbf9e8a: 0x00 0x00 0xcd 0xab
                    ────┬──── ────┬────
     udp log remote ────┘         └──── leak
     port excluded                      this
</pre>

<p>Then, I ran <code>leak()</code> and observed the leakage of data beyond the end of <code>udp_log_remote_port_excluded</code>:</p>

<pre>% ./leak
leaked: 0xCD 0xAB
</pre>

<h2>What can we leak?</h2>

<p>"It depends(TM)".</p>

<p><code>udp_log.o</code>'s common section only has four things in it- those four <code>uint16_t</code>'s.
For each of them, we can leak 2 extra bytes.
As they are all laid out sequentially in memory, the first 3 <code>uint16_t</code>'s only give us the next successive variable, which we can already read.
However, the last one (<code>remote_port_excluded</code>) leaks 2 bytes of whatever the linker decides to put after <code>udp_log.o</code>.</p>

<p>Here is what this looks like in memory:</p>

<pre>udp_log.o's __common section:
┌──────────────────────┐
│  local_port_included │+0
├──────────────────────┤
│ remote_port_included │+2
├──────────────────────┤
│  local_port_excluded │+4
├──────────────────────┤
│ remote_port_excluded │+6
├──────────────────────┤ &lt;- udp_log.o ends here
│         ???          │+8 &lt;- We leak this
└──────────────────────┘
</pre>

<p>So, it's totally up to the linker what will be contained by those two bytes.
On the kernel I built myself, this was some other sysctl, but on the kernel from the KDK I found that unused padding bytes were put there instead.</p>

<p>The linker's behavior is highly sensitive to build configurations and platform differences, so different XNU platforms will probably have different things placed there.</p>

<p>Bottom line is you get the two bytes after <code>udp_log_remote_port_excluded</code>, whatever they may be.</p>

<h2>Fix Patch</h2>

<p>At the time of writing, the source code for <code>xnu-11215.61.5</code> (the version with the fix) is not out yet.
When I reported this bug to Apple, I provided the following suggested fix.</p>

<pre>@@ -436,7 +436,7 @@ sysctl_udp_log_port SYSCTL_HANDLER_ARGS
 {
 #pragma unused(arg1, arg2)
    int error;
<span>-   int new_value = *(int *)oidp-&gt;oid_arg1;</span>
<span>+   int new_value = *(uint16_t *)oidp-&gt;oid_arg1;</span>

    error = sysctl_handle_int(oidp, &amp;new_value, 0, req);
    if (error != 0) {
</pre>

<h2>Timeline</h2>

<ul>
<li><strong>September 16, 2024</strong>: macOS 15.0 Sequoia was released with <code>xnu-11215.1.10</code>, the first public kernel release with this bug.</li>
<li><strong>Fall 2024</strong>: I reported this bug to Apple.</li>
<li><strong>December 11, 2024</strong>: macOS 15.2 and iOS 18.2 were released, fixing this bug, and assigning <code>CVE-2024-54507</code> to this issue.</li>
</ul>

<h2>Takeaways</h2>

<p>You can find a proof of concept <a href="https://github.com/jprx/CVE-2024-54507">here</a>.</p>

<p>This bug is a neat example of how difficult kernel programming can be.
Even the most seemingly innocuous loads can be deadly.
Even though the authors were careful to prevent integer overflows, information leakage was still possible due to the initial 4-byte load.</p>

<p>Specifically, I thought this was a neat case study demonstrating BSD sysctl's, and is a good cautionary tale to any would-be sysctl authors to be careful of the consequences of every memory access.</p>

<p>There are many kernel variants for all the different XNU platforms, some of which might leak some interesting data (I didn't check them all).
If anyone finds a cool way to use this bug, let me know!
Find me on X <a href="https://x.com/0xjprx">@0xjprx</a>.</p>

<h2>References</h2>

<p>[1] John Baldwin. "Implementing System Control Nodes (sysctl)". <a href="https://freebsdfoundation.org/wp-content/uploads/2014/01/Implementing-System-Control-Nodes-sysctl.pdf"><em>In: FreeBSD Journal (2014)</em></a>.</p>

<p>-ravi</p>

<p>January 23, 2025</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Morse Code in Tubular Bells (2021) (102 pts)]]></title>
            <link>https://madpsy.uk/link-between-the-soundtrack-of-the-exorcist-and-amateur-radio/</link>
            <guid>42807653</guid>
            <pubDate>Thu, 23 Jan 2025 20:19:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://madpsy.uk/link-between-the-soundtrack-of-the-exorcist-and-amateur-radio/">https://madpsy.uk/link-between-the-soundtrack-of-the-exorcist-and-amateur-radio/</a>, See on <a href="https://news.ycombinator.com/item?id=42807653">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        
<p>The link between The Exorcist, Amateur Radio and Alan Turing.</p>



<p>A quick look at how the movie The Exorcist from 1973 has links to the late great Alan Turing via Mike Oldfield’s album Tubular Bells, Scotland and Amateur Radio. It’s Halloween so figured why not throw some horror in the mix.</p>



<figure>
<figure><img fetchpriority="high" decoding="async" width="861" height="314" data-id="1318" src="https://madpsy.uk/wp-content/uploads/2022/05/logo_hidden_morse.png" alt="" srcset="https://madpsy.uk/wp-content/uploads/2022/05/logo_hidden_morse.png 861w, https://madpsy.uk/wp-content/uploads/2022/05/logo_hidden_morse-300x109.png 300w, https://madpsy.uk/wp-content/uploads/2022/05/logo_hidden_morse-768x280.png 768w" sizes="(max-width: 861px) 100vw, 861px"></figure>
</figure>



<p>When Mike Oldfield recorded Tubular Bells in 1973 he had no idea his first album on Virgin Records would be chosen as the soundtrack to The Exorcist later that year. Neither did he know that recording with Virgin Records would have an unintended consequence of hiding a secret message which dates back to 1926, shortly after World War One.</p>



<p>Tubular Bells was famously recorded at The Manor Studio which was owned by Richard Branson and used as a recording studio for Virgin Records. The building is located in Shipton-on-Cherwell, England. Mike was given one week to record the album, on which he played almost all the instruments himself.</p>



<p>The album initially struggled to sell.  Then, later the same year, it was chosen as the soundtrack for the movie <em>The Exorcist</em>. It then experienced massive success and has since sold over 15 million copies worldwide.</p>


<div>
<figure><img decoding="async" src="https://madpsy.uk/wp-content/uploads/2021/11/The_Manor_Recording_Studio-1024x658.png" alt="" width="614" height="394" srcset="https://madpsy.uk/wp-content/uploads/2021/11/The_Manor_Recording_Studio-1024x658.png 1024w, https://madpsy.uk/wp-content/uploads/2021/11/The_Manor_Recording_Studio-300x193.png 300w, https://madpsy.uk/wp-content/uploads/2021/11/The_Manor_Recording_Studio-768x494.png 768w, https://madpsy.uk/wp-content/uploads/2021/11/The_Manor_Recording_Studio.png 1254w" sizes="(max-width: 614px) 100vw, 614px"><figcaption><em>The Manor Studio from the front</em></figcaption></figure></div>

<div>
<figure><img decoding="async" src="https://madpsy.uk/wp-content/uploads/2021/11/The_Manor_Studios_Control_Room-1024x662.jpg" alt="" width="635" height="410" srcset="https://madpsy.uk/wp-content/uploads/2021/11/The_Manor_Studios_Control_Room-1024x662.jpg 1024w, https://madpsy.uk/wp-content/uploads/2021/11/The_Manor_Studios_Control_Room-300x194.jpg 300w, https://madpsy.uk/wp-content/uploads/2021/11/The_Manor_Studios_Control_Room-768x496.jpg 768w, https://madpsy.uk/wp-content/uploads/2021/11/The_Manor_Studios_Control_Room.jpg 1280w" sizes="(max-width: 635px) 100vw, 635px"><figcaption><em>The Manor Studio control room</em></figcaption></figure></div>






<p>It was in this very studio, completely unknown to the engineers at the time, they would inadvertently capture a radio signal from a nearby transmitter and store it forever on the Tubular Bells album.</p>



<p>Around 37 miles north of the studio near Rugby, in a small suburb called Hillmorton, a very large radio transmitter had been built after the end of World War One to link Great Britain with other parts of the British Empire. It was originally used to transmit telegraph messages to the Commonwealth as part of the Imperial Wireless Chain. After the 1950s this transmitter was used for transmitting messages to submerged submarines and so operated on Very Low Frequencies (VLF). In 1927 a second transmitter was added in order to create the first transatlantic commercial telephone service between England and the USA. </p>


<div>
<figure><img loading="lazy" decoding="async" src="https://madpsy.uk/wp-content/uploads/2021/11/Transatlantic-Radio-Network-1024x644.png" alt="" width="651" height="409" srcset="https://madpsy.uk/wp-content/uploads/2021/11/Transatlantic-Radio-Network-1024x644.png 1024w, https://madpsy.uk/wp-content/uploads/2021/11/Transatlantic-Radio-Network-300x189.png 300w, https://madpsy.uk/wp-content/uploads/2021/11/Transatlantic-Radio-Network-768x483.png 768w, https://madpsy.uk/wp-content/uploads/2021/11/Transatlantic-Radio-Network.png 1286w" sizes="auto, (max-width: 651px) 100vw, 651px"><figcaption><em>Diagram of the transatlantic radio network</em></figcaption></figure></div>

<div>
<figure><img loading="lazy" decoding="async" src="https://madpsy.uk/wp-content/uploads/2021/11/rugby_radio_transmitter-1-1024x459.png" alt="" width="783" height="350" srcset="https://madpsy.uk/wp-content/uploads/2021/11/rugby_radio_transmitter-1-1024x459.png 1024w, https://madpsy.uk/wp-content/uploads/2021/11/rugby_radio_transmitter-1-300x134.png 300w, https://madpsy.uk/wp-content/uploads/2021/11/rugby_radio_transmitter-1-768x344.png 768w, https://madpsy.uk/wp-content/uploads/2021/11/rugby_radio_transmitter-1.png 1056w" sizes="auto, (max-width: 783px) 100vw, 783px"><figcaption><em>GBT Telephony Transmitter at Rugby Radio Station (source: BT)</em></figcaption></figure></div>


<p>The first transmitter at Rugby operated at very high power on 16 KHz, which as far as the radio spectrum goes is extremetly low frequency. So low in fact that it falls within the 20 Hz – 20 KHz range of human hearing. Now, let’s be very clear here – electromagnetic radio waves and sound pressure waves are entirely different. The human ear cannot detect electromagnetic waves at any frequency, however, electronics intended for audio can also detect radio waves as all they are sensitive to is voltage and don’t care what created the voltage.</p>



<p>In the case of a microphone (audio) that is the electrical energy generated by the moving diaphragm which is sent down the cable. In the case of an antenna (electromagnetic wave) the radio signal’s electrical component induces a voltage in the conductor. In both scenarios the electronic equipment at the end of the wire just sees a voltage. So long as it is sensitive at the frequency of the signal it makes no difference where said signal originated.</p>



<p>I’m quite sure the technically astute amougst you will see where this is going. First, let’s take a look at where there two places are on the map.</p>


<div>
<figure><img loading="lazy" decoding="async" src="https://madpsy.uk/wp-content/uploads/2021/11/Transmitter-to-Studio-Map-1024x836.png" alt="" width="595" height="485" srcset="https://madpsy.uk/wp-content/uploads/2021/11/Transmitter-to-Studio-Map-1024x836.png 1024w, https://madpsy.uk/wp-content/uploads/2021/11/Transmitter-to-Studio-Map-300x245.png 300w, https://madpsy.uk/wp-content/uploads/2021/11/Transmitter-to-Studio-Map-768x627.png 768w, https://madpsy.uk/wp-content/uploads/2021/11/Transmitter-to-Studio-Map.png 1089w" sizes="auto, (max-width: 595px) 100vw, 595px"></figure></div>


<p>As the crow flies these two locations are 37 miles from each other. That might sound quite far but let’s take a look at the scale of the transmitting station we’re talking about.</p>



<p>I couldn’t find details on the power output of this station (in fact it was made up of 57 transmitters in total)  but based on a similar transmitter (<a href="https://en.wikipedia.org/wiki/Anthorn_Radio_Station" target="_blank" rel="noreferrer noopener">Anthorn Radio Station</a>) it is safe to assume the 16 KHz transmitter would have been tens if not hundreds of killowatts. Given how narrow bandwidth the CW signals were, compared to say something like TV, that amount of power is very considerable indeed.</p>


<div>
<figure><img loading="lazy" decoding="async" src="https://madpsy.uk/wp-content/uploads/2021/11/Hillmorton_radio_masts_Rugby_Radio_Station1-777x1024.jpg" alt="" width="512" height="675" srcset="https://madpsy.uk/wp-content/uploads/2021/11/Hillmorton_radio_masts_Rugby_Radio_Station1-777x1024.jpg 777w, https://madpsy.uk/wp-content/uploads/2021/11/Hillmorton_radio_masts_Rugby_Radio_Station1-228x300.jpg 228w, https://madpsy.uk/wp-content/uploads/2021/11/Hillmorton_radio_masts_Rugby_Radio_Station1-768x1011.jpg 768w, https://madpsy.uk/wp-content/uploads/2021/11/Hillmorton_radio_masts_Rugby_Radio_Station1-rotated.jpg 1167w" sizes="auto, (max-width: 512px) 100vw, 512px"><figcaption><em>Rugby Radio Station’s tallest masts (2005)</em></figcaption></figure></div>






<p>That’s enough background, now let’s take a look at what happened.</p>



<p>The Rugby Radio station transmitter would constantly announce its ID (callsign) via Morse Code. This would have been an automated process which ran 24/7 unless a particular message needed to be to be sent, in which case the constant ID transmission would temporarily pause and the message would be sent instead.</p>



<p>Because of the relative close proximity of the Manor Studio to this massive transmitter and the fact it was transmitting within the frequency range of an audio recording, the signal was picked up by some piece of equipment in the studio. As mentioned, although the human ear cannot detect electromagnetic waves, electronic equipment – even those intended for audio – most certainly can. This is akin to placing your mobile phone near a speaker and hearing the random beeps of interference it can cause. The video at the foot of this page demonstrates how one can use a standard computer audio interface to recieve VLF radio signals. Something in the studio was sensitive enough to record the morse code being transmitted and it is forever stored on the Tubular Bells album. Nobody knows exactly what picked it up – possibly a microphone or guitar pickup – though given how regular it appears througout the album it’s quite possible it was a mixer or the recording equipment itself, probably via unshielded cables acting as antennas.</p>



<p>This was originally discoverd by a chap from Austria named Gerhard Kircher. He was testing a spectrum analyzer and noticed a strange signature at 16 KHz. We can take a look a look at this using the spectrogram feature of Audacity.</p>


<div>
<figure><img loading="lazy" decoding="async" width="1024" height="157" src="https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code-Spectrogram-1024x157.png" alt="" srcset="https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code-Spectrogram-1024x157.png 1024w, https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code-Spectrogram-300x46.png 300w, https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code-Spectrogram-768x118.png 768w, https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code-Spectrogram-1536x235.png 1536w, https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code-Spectrogram.png 1895w" sizes="auto, (max-width: 1024px) 100vw, 1024px"><figcaption><em>Audacity Spectrogram of Tubular Bells</em></figcaption></figure></div>


<p>You should be able to see a faint horizonal line at exactly 16 KHz which runs across the entire track. This is of course the ‘unknown signal’ which clearly looks out of place.</p>



<p>I used a lossless FLAC copy of the CD album from 2003 to see this. It’s quite possible a lot of this would be missing from lossy copies, such as MP3s, though I haven’t tested that.</p>



<p>In order to actually hear this signal we need to run it through other software to center the frequency, demodulate and apply a narrow band filter. By setting the center frequency to that of the transmitter (16 KHz) we will be able to demodulate the CW carrier. To do this I used SDR# (prounounced sharp). If we load the file into this software we can clearly see the Morse Code signal.</p>



<figure><img loading="lazy" decoding="async" src="https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code-1024x583.png" alt="" width="769" height="438" srcset="https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code-1024x583.png 1024w, https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code-300x171.png 300w, https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code-768x437.png 768w, https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code.png 1302w" sizes="auto, (max-width: 769px) 100vw, 769px"><figcaption><em>SDR# extracting Tubular Bells Morse Code</em></figcaption></figure>



<p>What we have here is the wave file loaded and two important settings chosen. First set the center frequency to exactly 16.0 KHz and second set the modulation to CW (essentially single side band) with a bandwidth of 300 Hz. If you adjust the frequency you’ll hear the tone of the morse beeps go up and down.</p>



<p>The yellow line, which has clear gaps in it, is the Morse Code being transmitted by the Rugby Radio Station. The first question you might be thinking is – but how do you know?</p>



<p>Here is a recording of the output from SDR# (<a href="https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code-boosted.mp3">direct link to file</a>)</p>



<figure><audio controls="" src="https://madpsy.uk/wp-content/uploads/2021/11/Tubular-Bells-Morse-Code-boosted.mp3"></audio></figure>



<p>Although amateur radio is a hobby of mine I don’t know morse code off by heart. Sure, I could just look it up but thankfully there’s software which can help us. Let’s run this output, using a virtual audio cable from SDR#, through FLDigi and see if it can decode the signal.</p>


<div>
<figure><img loading="lazy" decoding="async" src="https://madpsy.uk/wp-content/uploads/2021/11/Morse_Decode_FLDIGI-1024x720.png" alt="" width="753" height="529" srcset="https://madpsy.uk/wp-content/uploads/2021/11/Morse_Decode_FLDIGI-1024x720.png 1024w, https://madpsy.uk/wp-content/uploads/2021/11/Morse_Decode_FLDIGI-300x211.png 300w, https://madpsy.uk/wp-content/uploads/2021/11/Morse_Decode_FLDIGI-768x540.png 768w, https://madpsy.uk/wp-content/uploads/2021/11/Morse_Decode_FLDIGI.png 1146w" sizes="auto, (max-width: 753px) 100vw, 753px"><figcaption><em>FLDigi Decoding Morse Code</em></figcaption></figure></div>


<p>Interesting – it’s decoded ‘MVV GBR’ at around 1 KHz. Now let’s see what Rugby Radio Station’s callsign was. From the Wikipedia page:</p>


<div>
<figure><img loading="lazy" decoding="async" width="833" height="332" src="https://madpsy.uk/wp-content/uploads/2021/11/GBR.png" alt="" srcset="https://madpsy.uk/wp-content/uploads/2021/11/GBR.png 833w, https://madpsy.uk/wp-content/uploads/2021/11/GBR-300x120.png 300w, https://madpsy.uk/wp-content/uploads/2021/11/GBR-768x306.png 768w" sizes="auto, (max-width: 833px) 100vw, 833px"></figure></div>


<p>Cool! We know this station was active as ‘GBR’ at the time Tubular Bells was being recorded and it just so happens to be at the exact same frequency. I would say that is pretty damn conclusive.</p>



<p>The decoded morse is actually slightly wrong – rather than ‘MVV’ at the start it should be ‘VVV’ but that’s down to FLDigi not being 100% accurate. Anyone who knows morse can confirm what you actually hear is ‘VVV GBR’.</p>



<p>We can infer “VVV” was a generic prefix of some kind and and “GBR” was an acronym for “Great Britain Rugby”.</p>



<p>The GBR transmitter was shut down on 1st April 2003 and replaced with a new site known as Skelton transmitting station. The old building was <a href="https://www.coventrytelegraph.net/news/local-news/new-school-opens-first-ever-21525123" target="_blank" rel="noreferrer noopener">turned into a school</a>.</p>



<p>Depending on which piece of equipment picked up the transmission there may well be more albums which have this signal recorded on them. Here is a <a href="https://en.wikipedia.org/wiki/The_Manor_Studio#Partial_list_of_albums_recorded_at_The_Manor" target="_blank" rel="noreferrer noopener">partial list of albums</a> recorded at The Manor Studio. I suspect it was something specific to this album but would love to be proved wrong.</p>



<p>If you scroll back up and look at the old map of the Transatlanic Radio Network you will see that Rugby was one of three stations in the UK along with London and Cupar. The Cuper station was responsible for recieving the signals from Rocky Point in the states, some 3200 miles away.</p>


<div>
<figure><img loading="lazy" decoding="async" src="https://madpsy.uk/wp-content/uploads/2021/11/Kemback.jpg" alt="" width="647" height="431" srcset="https://madpsy.uk/wp-content/uploads/2021/11/Kemback.jpg 640w, https://madpsy.uk/wp-content/uploads/2021/11/Kemback-300x200.jpg 300w" sizes="auto, (max-width: 647px) 100vw, 647px"><figcaption><em>Kembeck, near Cupar, Fife, Scotland</em></figcaption></figure></div>


<p>The station at Cupar (Fife) in Scotland also formed part of what was known as “Y” service. This was part of an effort to both intercept and direction find enemy radio transmissions during World War One and Two, including encrypted Enigma messages, which as we all know was ultimately cracked by Alan Turing. The Cupar station was officially known as G.P.O. Transatlantic Radiophone Station Kembeck (a small village just outside Cupar). Recievers such as the The <em>National HRO</em> communication receiver were common in such stations.</p>


<div>
<figure><img loading="lazy" decoding="async" width="522" height="273" src="https://madpsy.uk/wp-content/uploads/2021/11/National_HRO_shortwave_communications_receiver.png" alt="" srcset="https://madpsy.uk/wp-content/uploads/2021/11/National_HRO_shortwave_communications_receiver.png 522w, https://madpsy.uk/wp-content/uploads/2021/11/National_HRO_shortwave_communications_receiver-300x157.png 300w" sizes="auto, (max-width: 522px) 100vw, 522px"><figcaption> The <em>National HRO</em> communication receiver  </figcaption></figure></div>

<div>
<figure><img loading="lazy" decoding="async" src="https://madpsy.uk/wp-content/uploads/2021/11/enigmamachine-701206.jpg" alt="" width="658" height="436" srcset="https://madpsy.uk/wp-content/uploads/2021/11/enigmamachine-701206.jpg 774w, https://madpsy.uk/wp-content/uploads/2021/11/enigmamachine-701206-300x199.jpg 300w, https://madpsy.uk/wp-content/uploads/2021/11/enigmamachine-701206-768x509.jpg 768w" sizes="auto, (max-width: 658px) 100vw, 658px"><figcaption><em>Enigma Encryption Machine</em></figcaption></figure></div>

<div>
<figure><img loading="lazy" decoding="async" src="https://madpsy.uk/wp-content/uploads/2021/11/alan-turing-3.jpg" alt="" width="561" height="468" srcset="https://madpsy.uk/wp-content/uploads/2021/11/alan-turing-3.jpg 900w, https://madpsy.uk/wp-content/uploads/2021/11/alan-turing-3-300x250.jpg 300w, https://madpsy.uk/wp-content/uploads/2021/11/alan-turing-3-768x640.jpg 768w" sizes="auto, (max-width: 561px) 100vw, 561px"><figcaption><em>Alan Turing (23 June 1912 – 7 June 1954)</em></figcaption></figure></div>


<p>During World War Two many Amateur Radio operators were enlisted as “Voluntary Interceptors” to help with the effort as they often possess the neccessary skills to both operate the equipment and knowledge of radio communications in general.</p>



<p>The skills of all the radio operators including many hundreds of women and men helped gather enough encrypted messages for Turing’s amazing machine to crack the code. Apart from the legacy of cracking the Enigma code, the computer scientist also left us with the concept of Turing Completeness. This is when a computer system is able to recognise or decide other data-manipulation rule sets. Turing completeness is used as a way to express the power of such a data-manipulation rule set. Virtually all programming languages today are Turing-complete.</p>



<p>So there we have it – a somewhat tenuous yet hopefully intriguing link between The Exorcist, Tubular Bells, Scotland, Amateur Radio and the great Alan Turing.</p>



<p>References:</p>



<p><a href="https://en.wikipedia.org/wiki/Tubular_Bells" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/Tubular_Bells</a></p>



<p><a href="https://en.wikipedia.org/wiki/Y_service" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/Y_service</a></p>



<p><a href="https://en.wikipedia.org/wiki/Rugby_Radio_Station">https://en.wikipedia.org/wiki/Rugby_Radio_Station</a></p>



<p><a href="https://en.wikipedia.org/wiki/Anthorn_Radio_Station">https://en.wikipedia.org/wiki/Anthorn_Radio_Station</a></p>



<p><a href="https://en.wikipedia.org/wiki/The_Manor_Studio" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/The_Manor_Studio</a></p>



<p><a href="https://en.wikipedia.org/wiki/Kemback">https://en.wikipedia.org/wiki/Kemback</a></p>



<p><a href="https://en.wikipedia.org/wiki/Turing_completeness">https://en.wikipedia.org/wiki/Turing_completeness</a></p>



<p><a href="http://rugbyradiostation.co.uk/articles/1927-article/related-stories/the-long-wave-telephony-transmitter/" target="_blank" rel="noreferrer noopener">http://rugbyradiostation.co.uk/articles/1927-article/related-stories/the-long-wave-telephony-transmitter/</a></p>



<p><a href="https://www.coventrytelegraph.net/lifestyle/nostalgia/classic-album-hidden-code-3109812">https://www.coventrytelegraph.net/lifestyle/nostalgia/classic-album-hidden-code-3109812</a></p>







<p>The following YouTube video was the initial inspiration for this blog post (sent to me by Brian – GM8PKL) and has lots of information around using a standard sound card as a VLF reciever. It demonstrates how a device intended for audio can in fact recieve RF.</p>



<figure><p>
<iframe loading="lazy" title="Using a PC sound card to receive VLF radio signals" width="500" height="281" src="https://www.youtube.com/embed/L2W1x6Rb9hI?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
</p></figure>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Citations on the Anthropic API (157 pts)]]></title>
            <link>https://www.anthropic.com/news/introducing-citations-api</link>
            <guid>42807173</guid>
            <pubDate>Thu, 23 Jan 2025 19:29:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.anthropic.com/news/introducing-citations-api">https://www.anthropic.com/news/introducing-citations-api</a>, See on <a href="https://news.ycombinator.com/item?id=42807173">Hacker News</a></p>
Couldn't get https://www.anthropic.com/news/introducing-citations-api: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Open-source AI video editor (230 pts)]]></title>
            <link>https://github.com/fal-ai-community/video-starter-kit</link>
            <guid>42806616</guid>
            <pubDate>Thu, 23 Jan 2025 18:34:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/fal-ai-community/video-starter-kit">https://github.com/fal-ai-community/video-starter-kit</a>, See on <a href="https://news.ycombinator.com/item?id=42806616">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">AI Video Starting Kit</h2><a id="user-content-ai-video-starting-kit" aria-label="Permalink: AI Video Starting Kit" href="#ai-video-starting-kit"></a></p>
<p dir="auto"><a href="https://opensource.org/licenses/MIT" rel="nofollow"><img src="https://camo.githubusercontent.com/6cd0120cc4c5ac11d28b2c60f76033b52db98dac641de3b2644bb054b449d60c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" alt="License: MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-yellow.svg"></a>
<a href="https://fal.ai/" rel="nofollow"><img src="https://camo.githubusercontent.com/b783c35806d9bbf904dfcce10c10d6d0635659c2cefe7f01eb47932b1cb875c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f66616c2e61692d6c61746573742d707572706c65" alt="fal.ai" data-canonical-src="https://img.shields.io/badge/fal.ai-latest-purple"></a>
<a href="https://nextjs.org/" rel="nofollow"><img src="https://camo.githubusercontent.com/27c598fefc96a57ed389c44b2da3c724e7815b6e1cefb4b84e3cc3bdb50d3707/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4e6578742e6a732d31342d626c61636b" alt="Next.js" data-canonical-src="https://img.shields.io/badge/Next.js-14-black"></a>
<a href="https://remotion.dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/f7a437f62bacb59a0a66299e4b5c7b02f2dd802d915544dda684b4069f31f70e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52656d6f74696f6e2d6c61746573742d626c7565" alt="Remotion" data-canonical-src="https://img.shields.io/badge/Remotion-latest-blue"></a></p>
<p dir="auto">A powerful starting kit for building AI-powered video applications. Built with Next.js, Remotion, and fal.ai, this toolkit simplifies the complexities of working with AI video models in the browser.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/fal-ai-community/video-starter-kit/blob/main/src/app/opengraph-image.png?raw=true"><img src="https://github.com/fal-ai-community/video-starter-kit/raw/main/src/app/opengraph-image.png?raw=true" alt="AI Video Starting Kit"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>🎬 <strong>Browser-Native Video Processing</strong>: Seamless video handling and composition in the browser</li>
<li>🤖 <strong>AI Model Integration</strong>: Direct access to state-of-the-art video models through fal.ai
<ul dir="auto">
<li>Minimax for video generation</li>
<li>Hunyuan for visual synthesis</li>
<li>LTX for video manipulation</li>
</ul>
</li>
<li>🎵 <strong>Advanced Media Capabilities</strong>:
<ul dir="auto">
<li>Multi-clip video composition</li>
<li>Audio track integration</li>
<li>Voiceover support</li>
<li>Extended video duration handling</li>
</ul>
</li>
<li>🛠️ <strong>Developer Utilities</strong>:
<ul dir="auto">
<li>Metadata encoding</li>
<li>Video processing pipeline</li>
<li>Ready-to-use UI components</li>
<li>TypeScript support</li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Tech Stack</h2><a id="user-content-tech-stack" aria-label="Permalink: Tech Stack" href="#tech-stack"></a></p>
<ul dir="auto">
<li><a href="https://fal.ai/" rel="nofollow">fal.ai</a> - AI model infrastructure</li>
<li><a href="https://nextjs.org/" rel="nofollow">Next.js</a> - React framework</li>
<li><a href="https://remotion.dev/" rel="nofollow">Remotion</a> - Video processing</li>
<li><a href="https://developer.mozilla.org/docs/Web/API/IndexedDB_API" rel="nofollow">IndexedDB</a> - Browser-based storage (no cloud database required)</li>
<li><a href="https://vercel.com/" rel="nofollow">Vercel</a> - Deployment platform</li>
<li><a href="https://uploadthing.com/" rel="nofollow">UploadThing</a> - File upload</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Quick Start</h2><a id="user-content-quick-start" aria-label="Permalink: Quick Start" href="#quick-start"></a></p>
<ol dir="auto">
<li>Clone the repository:</li>
</ol>
<div dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/fal-ai-community/video-starter-kit
cd video-starter-kit"><pre>git clone https://github.com/fal-ai-community/video-starter-kit
<span>cd</span> video-starter-kit</pre></div>
<ol start="2" dir="auto">
<li>Install dependencies:</li>
</ol>
<div dir="auto" data-snippet-clipboard-copy-content="npm install
# or
yarn install
# or
pnpm install"><pre>npm install
<span><span>#</span> or</span>
yarn install
<span><span>#</span> or</span>
pnpm install</pre></div>
<ol start="3" dir="auto">
<li>Set up your environment variables:</li>
</ol>
<div dir="auto" data-snippet-clipboard-copy-content="cp .env.example .env.local"><pre>cp .env.example .env.local</pre></div>
<ol start="4" dir="auto">
<li>Start the development server:</li>
</ol>
<div dir="auto" data-snippet-clipboard-copy-content="npm run dev
# or
yarn dev
# or
pnpm dev"><pre>npm run dev
<span><span>#</span> or</span>
yarn dev
<span><span>#</span> or</span>
pnpm dev</pre></div>
<p dir="auto">Open <a href="http://localhost:3000/" rel="nofollow">http://localhost:3000</a> to see the application.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">We welcome contributions! See our <a href="https://github.com/fal-ai-community/video-starter-kit/blob/main/CONTRIBUTING.md">Contributing Guide</a> for more information.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Community</h2><a id="user-content-community" aria-label="Permalink: Community" href="#community"></a></p>
<ul dir="auto">
<li><a href="https://discord.gg/fal-ai" rel="nofollow">Discord</a> - Join our community</li>
<li><a href="https://github.com/fal-ai-community/video-starter-kit/discussions">GitHub Discussions</a> - For questions and discussions</li>
<li><a href="https://twitter.com/fal" rel="nofollow">Twitter</a> - Follow us for updates</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">This project is licensed under the MIT License - see the <a href="https://github.com/fal-ai-community/video-starter-kit/blob/main/LICENSE">LICENSE</a> file for details.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Deployment</h2><a id="user-content-deployment" aria-label="Permalink: Deployment" href="#deployment"></a></p>
<p dir="auto">The easiest way to deploy your application is through <a href="https://vercel.com/new?utm_source=fal-ai&amp;utm_medium=default-template&amp;utm_campaign=video-starter-kit" rel="nofollow">Vercel</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Building a Medieval Castle from Scratch (265 pts)]]></title>
            <link>https://www.guedelon.fr/en/</link>
            <guid>42806486</guid>
            <pubDate>Thu, 23 Jan 2025 18:24:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.guedelon.fr/en/">https://www.guedelon.fr/en/</a>, See on <a href="https://news.ycombinator.com/item?id=42806486">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Llama.vim – Local LLM-assisted text completion (455 pts)]]></title>
            <link>https://github.com/ggml-org/llama.vim</link>
            <guid>42806328</guid>
            <pubDate>Thu, 23 Jan 2025 18:06:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ggml-org/llama.vim">https://github.com/ggml-org/llama.vim</a>, See on <a href="https://news.ycombinator.com/item?id=42806328">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">llama.vim</h2><a id="user-content-llamavim" aria-label="Permalink: llama.vim" href="#llamavim"></a></p>
<p dir="auto">Local LLM-assisted text completion.</p>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/1991296/380711734-a950e38c-3b3f-4c46-94fe-0d6e0f790fc6.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzc2NjQ1MDEsIm5iZiI6MTczNzY2NDIwMSwicGF0aCI6Ii8xOTkxMjk2LzM4MDcxMTczNC1hOTUwZTM4Yy0zYjNmLTRjNDYtOTRmZS0wZDZlMGY3OTBmYzYucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEyMyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMjNUMjAzMDAxWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NWZkNzM3YWIxNzUzOTlmOTc5OTM2MTYxOTk4MTRiYzdhZTJlMWU2ODlkNTkwMmQzYWFhNjkxODM5MjlkZjBlNyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.3BrhynzoIi5IUYEUzyB15H7lGYhzKrgQ6g_sk-Djjpg"><img width="485" alt="image" src="https://private-user-images.githubusercontent.com/1991296/380711734-a950e38c-3b3f-4c46-94fe-0d6e0f790fc6.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzc2NjQ1MDEsIm5iZiI6MTczNzY2NDIwMSwicGF0aCI6Ii8xOTkxMjk2LzM4MDcxMTczNC1hOTUwZTM4Yy0zYjNmLTRjNDYtOTRmZS0wZDZlMGY3OTBmYzYucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEyMyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMjNUMjAzMDAxWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NWZkNzM3YWIxNzUzOTlmOTc5OTM2MTYxOTk4MTRiYzdhZTJlMWU2ODlkNTkwMmQzYWFhNjkxODM5MjlkZjBlNyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.3BrhynzoIi5IUYEUzyB15H7lGYhzKrgQ6g_sk-Djjpg"></a>
<hr>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/1991296/381658578-206c8399-ff73-495d-ba67-65725138c021.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzc2NjQ1MDEsIm5iZiI6MTczNzY2NDIwMSwicGF0aCI6Ii8xOTkxMjk2LzM4MTY1ODU3OC0yMDZjODM5OS1mZjczLTQ5NWQtYmE2Ny02NTcyNTEzOGMwMjEuZ2lmP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEyMyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMjNUMjAzMDAxWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MTA5OWRiZDEzODZkYjVmZDVjZGY0NzE4N2ZjOTMyMjgzYzcyMjJiNTc0NTRiNGY0NzZjYTllOGVkOTJiNmQ2YyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.y3IJfaRsfNeNXQZMRGQ-hyrevj09ryqt3eJU750Jfes"><img src="https://private-user-images.githubusercontent.com/1991296/381658578-206c8399-ff73-495d-ba67-65725138c021.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzc2NjQ1MDEsIm5iZiI6MTczNzY2NDIwMSwicGF0aCI6Ii8xOTkxMjk2LzM4MTY1ODU3OC0yMDZjODM5OS1mZjczLTQ5NWQtYmE2Ny02NTcyNTEzOGMwMjEuZ2lmP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEyMyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMjNUMjAzMDAxWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MTA5OWRiZDEzODZkYjVmZDVjZGY0NzE4N2ZjOTMyMjgzYzcyMjJiNTc0NTRiNGY0NzZjYTllOGVkOTJiNmQ2YyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.y3IJfaRsfNeNXQZMRGQ-hyrevj09ryqt3eJU750Jfes" alt="llama vim-swift" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>Auto-suggest on cursor movement in <code>Insert</code> mode</li>
<li>Toggle the suggestion manually by pressing <code>Ctrl+F</code></li>
<li>Accept a suggestion with <code>Tab</code></li>
<li>Accept the first line of a suggestion with <code>Shift+Tab</code></li>
<li>Control max text generation time</li>
<li>Configure scope of context around the cursor</li>
<li>Ring context with chunks from open and edited files and yanked text</li>
<li><a href="https://github.com/ggerganov/llama.cpp/pull/9787" data-hovercard-type="pull_request" data-hovercard-url="/ggerganov/llama.cpp/pull/9787/hovercard">Supports very large contexts even on low-end hardware via smart context reuse</a></li>
<li>Display performance stats</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Plugin setup</h3><a id="user-content-plugin-setup" aria-label="Permalink: Plugin setup" href="#plugin-setup"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">vim-plug</h4><a id="user-content-vim-plug" aria-label="Permalink: vim-plug" href="#vim-plug"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="Plug 'ggml-org/llama.vim'"><pre>Plug <span><span>'</span>ggml-org/llama.vim<span>'</span></span></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Vundle</h4><a id="user-content-vundle" aria-label="Permalink: Vundle" href="#vundle"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="cd ~/.vim/bundle
git clone https://github.com/ggml-org/llama.vim"><pre><span>cd</span> <span>~</span>/.vim/bundle
git clone https://github.com/ggml-org/llama.vim</pre></div>
<p dir="auto">Then add <code>Plugin 'llama.vim'</code> to your <em>.vimrc</em> in the <code>vundle#begin()</code> section.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">llama.cpp setup</h3><a id="user-content-llamacpp-setup" aria-label="Permalink: llama.cpp setup" href="#llamacpp-setup"></a></p>
<p dir="auto">The plugin requires a <a href="https://github.com/ggerganov/llama.cpp">llama.cpp</a> server instance to be running at <a href="https://github.com/ggml-org/llama.vim/blob/7d3359077adbad4c05872653973c3ceb09f18ad9/autoload/llama.vim#L34-L36"><code>g:llama_config.endpoint</code></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Mac OS</h4><a id="user-content-mac-os" aria-label="Permalink: Mac OS" href="#mac-os"></a></p>

<p dir="auto"><h4 tabindex="-1" dir="auto">Any other OS</h4><a id="user-content-any-other-os" aria-label="Permalink: Any other OS" href="#any-other-os"></a></p>
<p dir="auto">Either build from source or use the latest binaries: <a href="https://github.com/ggerganov/llama.cpp/releases">https://github.com/ggerganov/llama.cpp/releases</a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">llama.cpp settings</h3><a id="user-content-llamacpp-settings" aria-label="Permalink: llama.cpp settings" href="#llamacpp-settings"></a></p>
<p dir="auto">Here are recommended settings, depending on the amount of VRAM that you have:</p>
<ul dir="auto">
<li>
<p dir="auto">More than 16GB VRAM:</p>
<div dir="auto" data-snippet-clipboard-copy-content="llama-server \
    -hf ggml-org/Qwen2.5-Coder-7B-Q8_0-GGUF \
    --port 8012 -ngl 99 -fa -ub 1024 -b 1024 -dt 0.1 \
    --ctx-size 0 --cache-reuse 256"><pre>llama-server \
    -hf ggml-org/Qwen2.5-Coder-7B-Q8_0-GGUF \
    --port 8012 -ngl 99 -fa -ub 1024 -b 1024 -dt 0.1 \
    --ctx-size 0 --cache-reuse 256</pre></div>
</li>
<li>
<p dir="auto">Less than 16GB VRAM:</p>
<div dir="auto" data-snippet-clipboard-copy-content="llama-server \
    -hf ggml-org/Qwen2.5-Coder-3B-Q8_0-GGUF \
    --port 8012 -ngl 99 -fa -ub 1024 -b 1024 -dt 0.1 \
    --ctx-size 0 --cache-reuse 256"><pre>llama-server \
    -hf ggml-org/Qwen2.5-Coder-3B-Q8_0-GGUF \
    --port 8012 -ngl 99 -fa -ub 1024 -b 1024 -dt 0.1 \
    --ctx-size 0 --cache-reuse 256</pre></div>
</li>
<li>
<p dir="auto">Less than 8GB VRAM:</p>
<div dir="auto" data-snippet-clipboard-copy-content="llama-server \
    -hf ggml-org/Qwen2.5-Coder-1.5B-Q8_0-GGUF \
    --port 8012 -ngl 99 -fa -ub 1024 -b 1024 -dt 0.1 \
    --ctx-size 0 --cache-reuse 256"><pre>llama-server \
    -hf ggml-org/Qwen2.5-Coder-1.5B-Q8_0-GGUF \
    --port 8012 -ngl 99 -fa -ub 1024 -b 1024 -dt 0.1 \
    --ctx-size 0 --cache-reuse 256</pre></div>
</li>
</ul>
<p dir="auto">Use <code>:help llama</code> for more details.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Recommended LLMs</h3><a id="user-content-recommended-llms" aria-label="Permalink: Recommended LLMs" href="#recommended-llms"></a></p>
<p dir="auto">The plugin requires FIM-compatible models: <a href="https://huggingface.co/collections/ggml-org/llamavim-6720fece33898ac10544ecf9" rel="nofollow">HF collection</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Examples</h2><a id="user-content-examples" aria-label="Permalink: Examples" href="#examples"></a></p>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/1991296/376671627-8f5748b3-183a-4b7f-90e1-9148f0a58883.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzc2NjQ1MDEsIm5iZiI6MTczNzY2NDIwMSwicGF0aCI6Ii8xOTkxMjk2LzM3NjY3MTYyNy04ZjU3NDhiMy0xODNhLTRiN2YtOTBlMS05MTQ4ZjBhNTg4ODMucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEyMyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMjNUMjAzMDAxWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9YmQ2YTFlYTM2OTU3MzZiN2RjYWNmNzg3MDE2YmFhNmZhOGQ3YmJiNjE5YjQzOWU1Yzc0MzA5MzE4OTgxYzAwNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.LL9G5atnNJwgjoyvXJbRPIiSegUGy9E7zDyVNmr_3bk"><img width="1758" alt="image" src="https://private-user-images.githubusercontent.com/1991296/376671627-8f5748b3-183a-4b7f-90e1-9148f0a58883.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzc2NjQ1MDEsIm5iZiI6MTczNzY2NDIwMSwicGF0aCI6Ii8xOTkxMjk2LzM3NjY3MTYyNy04ZjU3NDhiMy0xODNhLTRiN2YtOTBlMS05MTQ4ZjBhNTg4ODMucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEyMyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMjNUMjAzMDAxWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9YmQ2YTFlYTM2OTU3MzZiN2RjYWNmNzg3MDE2YmFhNmZhOGQ3YmJiNjE5YjQzOWU1Yzc0MzA5MzE4OTgxYzAwNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.LL9G5atnNJwgjoyvXJbRPIiSegUGy9E7zDyVNmr_3bk"></a>
<p dir="auto"><h3 tabindex="-1" dir="auto">Using <code>llama.vim</code> on M1 Pro (2021) with <code>Qwen2.5-Coder 1.5B Q8_0</code>:</h3><a id="user-content-using-llamavim-on-m1-pro-2021-with-qwen25-coder-15b-q8_0" aria-label="Permalink: Using llama.vim on M1 Pro (2021) with Qwen2.5-Coder 1.5B Q8_0:" href="#using-llamavim-on-m1-pro-2021-with-qwen25-coder-15b-q8_0"></a></p>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/1991296/378362882-0ccb93c6-c5c5-4376-a5a3-cc99fafc5eef.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzc2NjQ1MDEsIm5iZiI6MTczNzY2NDIwMSwicGF0aCI6Ii8xOTkxMjk2LzM3ODM2Mjg4Mi0wY2NiOTNjNi1jNWM1LTQzNzYtYTVhMy1jYzk5ZmFmYzVlZWYucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEyMyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMjNUMjAzMDAxWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9OGQ0NjBhYzE5NjAzNmViNWQ2NGQ4NGQ0ZjE0YWUxZjRmYmU3NDE4OGZlYzhiYzJhOWI4YWYzZWMwNTAwMjRjYyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.Am5fULorO4AKdbTMEr_vmJh_GpXcly4rwUHolt-j64Y"><img width="1512" alt="image" src="https://private-user-images.githubusercontent.com/1991296/378362882-0ccb93c6-c5c5-4376-a5a3-cc99fafc5eef.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzc2NjQ1MDEsIm5iZiI6MTczNzY2NDIwMSwicGF0aCI6Ii8xOTkxMjk2LzM3ODM2Mjg4Mi0wY2NiOTNjNi1jNWM1LTQzNzYtYTVhMy1jYzk5ZmFmYzVlZWYucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEyMyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMjNUMjAzMDAxWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9OGQ0NjBhYzE5NjAzNmViNWQ2NGQ4NGQ0ZjE0YWUxZjRmYmU3NDE4OGZlYzhiYzJhOWI4YWYzZWMwNTAwMjRjYyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.Am5fULorO4AKdbTMEr_vmJh_GpXcly4rwUHolt-j64Y"></a>
<p dir="auto">The orange text is the generated suggestion. The green text contains performance stats for the FIM request: the currently used context is <code>15186</code> tokens and the maximum is <code>32768</code>. There are <code>30</code> chunks in the ring buffer with extra context (out of <code>64</code>). So far, <code>1</code> chunk has been evicted in the current session and there are <code>0</code> chunks in queue. The newly computed prompt tokens for this request were <code>260</code> and the generated tokens were <code>25</code>. It took <code>1245 ms</code> to generate this suggestion after entering the letter <code>c</code> on the current line.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Using <code>llama.vim</code> on M2 Ultra with <code>Qwen2.5-Coder 7B Q8_0</code>:</h3><a id="user-content-using-llamavim-on-m2-ultra-with-qwen25-coder-7b-q8_0" aria-label="Permalink: Using llama.vim on M2 Ultra with Qwen2.5-Coder 7B Q8_0:" href="#using-llamavim-on-m2-ultra-with-qwen25-coder-7b-q8_0"></a></p>
<details open="">
  <summary>
    
    <span aria-label="Video description llama.vim-0-lq.mp4">llama.vim-0-lq.mp4</span>
    <span></span>
  </summary>

  <video src="https://private-user-images.githubusercontent.com/1991296/378408916-1f1eb408-8ac2-4bd2-b2cf-6ab7d6816754.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzc2NjQ1MDEsIm5iZiI6MTczNzY2NDIwMSwicGF0aCI6Ii8xOTkxMjk2LzM3ODQwODkxNi0xZjFlYjQwOC04YWMyLTRiZDItYjJjZi02YWI3ZDY4MTY3NTQubXA0P1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEyMyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMjNUMjAzMDAxWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9OGMyNDg4ZjMwNWFkZDUxNjQ0NWY5MzMyMGIwN2MzMGRjOTc0MjUyMTYxMzA4YWFhNWM0ZTNkNDdjZTliMjQzMyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.p6vprBzvNKeb0oarkhMgR226yijs0H15bw8IVZ9rRSA" data-canonical-src="https://private-user-images.githubusercontent.com/1991296/378408916-1f1eb408-8ac2-4bd2-b2cf-6ab7d6816754.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzc2NjQ1MDEsIm5iZiI6MTczNzY2NDIwMSwicGF0aCI6Ii8xOTkxMjk2LzM3ODQwODkxNi0xZjFlYjQwOC04YWMyLTRiZDItYjJjZi02YWI3ZDY4MTY3NTQubXA0P1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEyMyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMjNUMjAzMDAxWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9OGMyNDg4ZjMwNWFkZDUxNjQ0NWY5MzMyMGIwN2MzMGRjOTc0MjUyMTYxMzA4YWFhNWM0ZTNkNDdjZTliMjQzMyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.p6vprBzvNKeb0oarkhMgR226yijs0H15bw8IVZ9rRSA" controls="controls" muted="muted">

  </video>
</details>

<p dir="auto">Demonstrates that the global context is accumulated and maintained across different files and showcases the overall latency when working in a large codebase.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Implementation details</h2><a id="user-content-implementation-details" aria-label="Permalink: Implementation details" href="#implementation-details"></a></p>
<p dir="auto">The plugin aims to be very simple and lightweight and at the same time to provide high-quality and performant local FIM completions, even on consumer-grade hardware. Read more on how this is achieved in the following links:</p>
<ul dir="auto">
<li>Initial implementation and techincal description: <a data-error-text="Failed to load title" data-id="2572915687" data-permission-text="Title is private" data-url="https://github.com/ggerganov/llama.cpp/issues/9787" data-hovercard-type="pull_request" data-hovercard-url="/ggerganov/llama.cpp/pull/9787/hovercard" href="https://github.com/ggerganov/llama.cpp/pull/9787">ggerganov/llama.cpp#9787</a></li>
<li>Classic Vim support: <a data-error-text="Failed to load title" data-id="2604384087" data-permission-text="Title is private" data-url="https://github.com/ggerganov/llama.cpp/issues/9995" data-hovercard-type="pull_request" data-hovercard-url="/ggerganov/llama.cpp/pull/9995/hovercard" href="https://github.com/ggerganov/llama.cpp/pull/9995">ggerganov/llama.cpp#9995</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Other IDEs</h2><a id="user-content-other-ides" aria-label="Permalink: Other IDEs" href="#other-ides"></a></p>
<ul dir="auto">
<li>VS Code: <a href="https://github.com/ggml-org/llama.vscode">https://github.com/ggml-org/llama.vscode</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Introducing Operator (393 pts)]]></title>
            <link>https://openai.com/index/introducing-operator/</link>
            <guid>42806301</guid>
            <pubDate>Thu, 23 Jan 2025 18:03:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openai.com/index/introducing-operator/">https://openai.com/index/introducing-operator/</a>, See on <a href="https://news.ycombinator.com/item?id=42806301">Hacker News</a></p>
Couldn't get https://openai.com/index/introducing-operator/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Thank HN: My bootstrapped startup got acquired today (1871 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=42806247</link>
            <guid>42806247</guid>
            <pubDate>Thu, 23 Jan 2025 17:58:05 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=42806247">Hacker News</a></p>
Couldn't get https://news.ycombinator.com/item?id=42806247: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Working with Files Is Hard (2019) (181 pts)]]></title>
            <link>https://danluu.com/deconstruct-files/</link>
            <guid>42805425</guid>
            <pubDate>Thu, 23 Jan 2025 16:28:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://danluu.com/deconstruct-files/">https://danluu.com/deconstruct-files/</a>, See on <a href="https://news.ycombinator.com/item?id=42805425">Hacker News</a></p>
Couldn't get https://danluu.com/deconstruct-files/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Bunster: Compile bash scripts to self contained executables (184 pts)]]></title>
            <link>https://github.com/yassinebenaid/bunster</link>
            <guid>42804835</guid>
            <pubDate>Thu, 23 Jan 2025 15:17:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/yassinebenaid/bunster">https://github.com/yassinebenaid/bunster</a>, See on <a href="https://news.ycombinator.com/item?id=42804835">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><div dir="auto">
    <p><a target="_blank" rel="noopener noreferrer" href="https://github.com/yassinebenaid/bunster/blob/master/docs/public/logo.png"><img width="200" src="https://github.com/yassinebenaid/bunster/raw/master/docs/public/logo.png"></a></p><p dir="auto"><h2 tabindex="-1" dir="auto">Bunster</h2><a id="user-content-bunster" aria-label="Permalink: Bunster" href="#bunster"></a></p>
</div>
<p dir="auto"><a href="https://github.com/yassinebenaid/bunster/actions/workflows/ci.yml"><img src="https://github.com/yassinebenaid/bunster/actions/workflows/ci.yml/badge.svg" alt="CI"></a>
<a href="https://bunster.netlify.app/" rel="nofollow"><img src="https://camo.githubusercontent.com/da911fbb06835e8a82d88c1d9af0ed80e3481c7e2c1984d2efec4ea739837a0c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f63756d656e746174696f6e2d6535373838343f6c6f676f3d426f6f6b537461636b266c6f676f436f6c6f723d396332653563" alt="Documentation" data-canonical-src="https://img.shields.io/badge/Documentation-e57884?logo=BookStack&amp;logoColor=9c2e5c"></a></p>
<p dir="auto">Have you ever wished your shell scripts could be faster, more portable, and secure ? <strong>Bunster</strong> brings this to life by transforming your shell scripts into efficient, standalone binaries that are easy to distribute and deploy across platforms <em>(only unix is supported at the moment)</em>.</p>
<p dir="auto">Unlike other tools, <strong>Bunster</strong> doesn’t just wrap your scripts in a binary—it compiles them down to efficient native machine code, leveraging the powerful Go toolchain. This ensures performance, portability, and robustness.</p>
<p dir="auto">Technically speaking, <strong>Bunster</strong> in fact is a <code>shell-to-Go</code> <a href="https://en.wikipedia.org/wiki/Source-to-source_compiler" rel="nofollow">Transplier</a> that generates <a href="https://go.dev/" rel="nofollow">Go</a> source out of your scripts. Then, optionally uses the <a href="https://go.dev/dl" rel="nofollow">Go Toolchain</a> to compile the code to an executable program.</p>
<p dir="auto"><strong>Bunster</strong> targets <code>bash</code> scripts in particular. The current syntax and features are all inherited from <code>bash</code>. additional shells will be supported as soon as we relase v1.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
 <p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/yassinebenaid/bunster/blob/master/docs/public/bunster.gif"><img src="https://github.com/yassinebenaid/bunster/raw/master/docs/public/bunster.gif" data-animated-image=""></a></p>
<p dir="auto"><a href="https://bunster.netlify.app/" rel="nofollow">Learn more about the usage of bunster.</a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Goals</h3><a id="user-content-goals" aria-label="Permalink: Goals" href="#goals"></a></p>
<p dir="auto">In addition to the shell features, We aim to add several custom features to make shell scripts feel like any modern programming language. These features are either supported or are planned to be implemented in future. (<em>consider contributing to help us speed up the develpment cycle</em>)</p>
<ul dir="auto">
<li><strong>Different Shells support</strong>: Bunster currently aims to be compatible with <code>bash</code> as a starting move. Then additional shells in future.</li>
<li><strong>Modules</strong>: Something shell scripts lack is a module system, we aim to introduce a module system that allow you to publish and consume scripts as libraries.</li>
<li><strong>Static Asset Embedding</strong>: This feature allows you to embed a file's content to a variable at build time. (<a href="https://pkg.go.dev/embed" rel="nofollow">Go has one already</a>)</li>
<li><strong>Password and Expiration Lock</strong>: Surprisingly, some people have asked for this feature. Basically, It allows you to choose an expirity date at build time. the generated program will not work after that date. Also you can choose to lock the script using a password. whenever you try to run it, it prompts for the password.</li>
<li><strong>Standard library</strong>: we aim to add first-class support for a variety of frequently used/needed commands as builtins. you no longer need external programs to use them.</li>
</ul>
<div dir="auto"><p dir="auto">Warning</p><p dir="auto">This project is in its early stages of development, and is not yet ready for production. Not all features are implemented yet. But, plenty of them are. <a href="https://bunster.netlify.app/supported-features.html" rel="nofollow">see what features are implemented so far</a>.</p>
</div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Versionning</h3><a id="user-content-versionning" aria-label="Permalink: Versionning" href="#versionning"></a></p>
<p dir="auto">Bunster follows <a href="https://semver.org/" rel="nofollow">SemVer</a> system for release versionning. On each minor release <code>v0.x.0</code>, You should expect adding new features. Code optimization and build improvements. On each patch release <code>v0.N.x</code>, you should expect bug fixes and/or other minor enhancements.</p>
<p dir="auto">Once we reach the stable release <code>v1.0.0</code>, you must expect your bash scripts to be fully compatible with Bunster (<em>there might be some caveats</em>). All features mentioned above to be implemeted unless the comunity agreed on skipping some of them.</p>
<p dir="auto">Adding support for additional shells is not planned until our first stable release <code>v1</code>. All regarding contributions will remain open until then.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Installation</h3><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto">Checkout the <a href="https://bunster.netlify.app/installation" rel="nofollow">documentation</a> for different ways of installation.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Contributing</h3><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">Thank you for considering contributing to the Bunster project! The contribution guide can be found in the <a href="https://bunster.netlify.app/contributing" rel="nofollow">documentation</a>.</p>
<p dir="auto">This project is developed and maintained by the public community, which includes you. Anything in this repository is subject to criticism. Including features, the implementation, the code style, the way we manage code reviews, The documentation and anything else in this regard.</p>
<p dir="auto">Hence, if you think that we're doing something wrong, or have a suggestion that can make this project better. Please consider openning an issue.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Code Of Conduct</h3><a id="user-content-code-of-conduct" aria-label="Permalink: Code Of Conduct" href="#code-of-conduct"></a></p>
<p dir="auto">In order to ensure that the Bunster community is welcoming to all, please review and abide by the <a href="https://github.com/yassinebenaid/bunster/tree/master/CODE_OF_CONDUCT.md">Code of Conduct</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Security</h3><a id="user-content-security" aria-label="Permalink: Security" href="#security"></a></p>
<p dir="auto">If you discover a security vulnerability within Bunster, please send an e-mail to Yassine Benaid via <a href="mailto:yassinebenaide3@gmail.com">yassinebenaide3@gmail.com</a>. All security vulnerabilities will be promptly addressed.</p>
<p dir="auto">Plase check out our <a href="https://github.com/yassinebenaid/bunster/tree/master/SECURITY.md">Security Policy</a> for more details.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Licence</h3><a id="user-content-licence" aria-label="Permalink: Licence" href="#licence"></a></p>
<p dir="auto">The Bunster project is open-sourced software licensed under <a href="https://opensource.org/license/bsd-3-clause" rel="nofollow">The 3-Clause BSD License</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Psychedelic Graphics: An Introduction (278 pts)]]></title>
            <link>https://benpence.com/blog/post/psychedelic-graphics-0</link>
            <guid>42804566</guid>
            <pubDate>Thu, 23 Jan 2025 14:49:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://benpence.com/blog/post/psychedelic-graphics-0">https://benpence.com/blog/post/psychedelic-graphics-0</a>, See on <a href="https://news.ycombinator.com/item?id=42804566">Hacker News</a></p>
Couldn't get https://benpence.com/blog/post/psychedelic-graphics-0: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Turn any bicycle electric (322 pts)]]></title>
            <link>https://dhruvvidyut.co.in/</link>
            <guid>42804434</guid>
            <pubDate>Thu, 23 Jan 2025 14:38:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dhruvvidyut.co.in/">https://dhruvvidyut.co.in/</a>, See on <a href="https://news.ycombinator.com/item?id=42804434">Hacker News</a></p>
Couldn't get https://dhruvvidyut.co.in/: Error: timeout of 10000ms exceeded]]></description>
        </item>
    </channel>
</rss>