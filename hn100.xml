<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 16 Aug 2024 19:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Good programmers worry about data structures and their relationships (107 pts)]]></title>
            <link>https://read.engineerscodex.com/p/good-programmers-worry-about-data</link>
            <guid>41268803</guid>
            <pubDate>Fri, 16 Aug 2024 18:09:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://read.engineerscodex.com/p/good-programmers-worry-about-data">https://read.engineerscodex.com/p/good-programmers-worry-about-data</a>, See on <a href="https://news.ycombinator.com/item?id=41268803">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p><em>Engineer’s Codex is a publication about real-world software engineering.</em></p><p>I recently came across a quote by Linus Torvalds (creator of Linux and Git) that  succinctly described a problem I’ve been working on recently:</p><blockquote><p><em>"Bad programmers worry about the code. Good programmers worry about data structures and their relationships."</em></p></blockquote><p><span>Right before the above quote, Linus said:</span><br></p><blockquote><p><em>git actually has a simple design, with stable and reasonably well-documented data structures. In fact, I'm a huge proponent of designing your code around the data, rather than the other way around, and I think it's one of the reasons git has been fairly successful […] I will, in fact, claim that the difference between a bad programmer and a good one is whether he considers his code or his data structures more important.</em></p></blockquote><p>Good data structures make code easier to design and maintain. It makes software more reliable, systems more understandable, and code more readable. When designing any software, application logic often follows the data model. Treating the data model as an afterthought results in more work down the line. The inverse is true also - having a well-thought out data model makes migrations and building on top of complex systems easier down the line.</p><p>When I read this quote, I actually was able to recognize countless examples in the past of this. I once worked on a project where we spent quite a while optimizing complex algorithms, only to realize that by restructuring our data, we could eliminate entire classes of problems. We replaced a 500-line function with a 50-line function and a well-designed data structure. Not only was the new code faster, but it was also much easier to understand and maintain.&nbsp;(Of course, then the problem also shifted “down the stack” to where the majority of toil was in restructuring existing data.)</p><p><span>Another relevant quote here is in </span><em>The Art of Unix Programming</em><span>:&nbsp;</span></p><blockquote><p>Rule of Representation: Fold knowledge into data so program logic can be stupid and robust.</p><p>Even the simplest procedural logic is hard for humans to verify, but quite complex data structures are fairly easy to model and reason about. To see this, compare the expressiveness and explanatory power of a diagram of (say) a fifty-node pointer tree with a flowchart of a fifty-line program. Or, compare an array initializer expressing a conversion table with an equivalent switch statement. The difference in transparency and clarity is dramatic. See Rob Pike's Rule 5.</p><p><strong>Data is more tractable than program logic. It follows that where you see a choice between complexity in data structures and complexity in code, choose the former. More: in evolving a design, you should actively seek ways to shift complexity from code to data.</strong></p><p>The Unix community did not originate this insight, but a lot of Unix code displays its influence. The C language's facility at manipulating pointers, in particular, has encouraged the use of dynamically-modified reference structures at all levels of coding from the kernel upward. Simple pointer chases in such structures frequently do duties that implementations in other languages would instead have to embody in more elaborate procedures.</p></blockquote><p><span>The </span><strong>actionable tip here is to start with the data. </strong><span>Try to reduce code complexity through stricter types on your interfaces or databases. Spend extra time thinking through the data structures ahead of time. </span></p><p><span>That’s not to say the </span><em>code isn’t important</em><span>. Obviously, everything is important - but it’s useful to have a strong high-level approach of how data will flow and how different components interact before going deeper into code-related details.&nbsp;</span></p><p><span>It’s why one of the </span><em>Senior Engineer (L5)</em><span> requirements (at least for FAANG) generally involves writing higher-level design docs for more complex systems (which includes driving team planning and building good roadmaps for medium-to-large features). </span></p><p><span> from </span></p><p><span> wrote a great piece on the higher level of influence L5s generally have here:</span></p><p><span> from </span></p><p><span> also wrote a great piece about getting to Senior Engineer: </span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FUTO (102 pts)]]></title>
            <link>https://www.futo.org/</link>
            <guid>41268245</guid>
            <pubDate>Fri, 16 Aug 2024 17:07:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.futo.org/">https://www.futo.org/</a>, See on <a href="https://news.ycombinator.com/item?id=41268245">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    <p>GrayJay</p>
                    <p>A universal video app for following creators, not platforms</p>
                  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Crafting a 13KB Game: The Story of Space Huggers (116 pts)]]></title>
            <link>https://frankforce.com/space-huggers-how-i-made-a-game-in-13-kilobytes/</link>
            <guid>41264270</guid>
            <pubDate>Fri, 16 Aug 2024 08:10:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://frankforce.com/space-huggers-how-i-made-a-game-in-13-kilobytes/">https://frankforce.com/space-huggers-how-i-made-a-game-in-13-kilobytes/</a>, See on <a href="https://news.ycombinator.com/item?id=41264270">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
						<div>
<figure><img decoding="async" width="151" height="151" src="https://frankforce.com/wp-content/uploads/2024/08/logo-3.png" alt="JS13KGames Logo"></figure></div>


<p>One of my favorite game jams is the legendary <a href="https://en.wikipedia.org/wiki/Js13kGames" target="_blank" rel="noreferrer noopener">Js13kGames competition</a>, where participants have one month to make a web browser game that fits in a 13 kilobyte zip file. To put that into perspective, a floppy disk from the before times could hold 1.44 MB, enough to fit over 100 JS13K games!</p>



<p>In 2021 the contest celebrated its 10th annual event. The theme was “Space” and there were an impressive 223 games submitted. It was my third year participating in the contest. That was a few years ago and I am back now to share with you the story of how my entry was made. Better late then never!</p>


<div>
<figure><img decoding="async" width="240" height="160" src="https://frankforce.com/wp-content/uploads/2024/08/screenshot3a.png" alt="Space Huggers logo"></figure></div>


<p>My game, “Space Huggers” is a run and gun roguelike platformer with procedurally generated environments and a pixel art style. I was inspired by games like Broforce, Metal Slug, and Contra. The engine was written from scratch in pure JavaScript and has since been open sourced under the name <a href="https://github.com/KilledByAPixel/LittleJS" data-type="URL" data-id="https://github.com/KilledByAPixel/LittleJS" target="_blank" rel="noreferrer noopener">LittleJS.</a> It’s a great little engine with many nice features packed into a tiny footprint with clean well documented code.</p>



<p>In this post I will explain how my game works and the design process I went through while developing it. We will not go into detail about the code here, but <a href="https://github.com/KilledByAPixel/SpaceHuggers">it’s all available on GitHub</a> for you to check out. Also, there is now an improved version on Newgrounds with some bonus features like medals, a final boss fight, and even support for mobile devices.</p>



<ul>
<li><a href="https://js13kgames.com/entries/space-huggers" data-type="URL" data-id="https://js13kgames.com/entries/space-huggers" target="_blank" rel="noreferrer noopener">Space Huggers – JS13K entry</a></li>



<li><a href="https://www.newgrounds.com/portal/view/819609" target="_blank" rel="noreferrer noopener">Space Huggers – Enhanced Version</a></li>
</ul>



<figure><p>
<iframe loading="lazy" title="Run and gun roguelike in only 13 Kilobytes - Space Huggers" width="640" height="360" src="https://www.youtube.com/embed/6VXrnk18Z4s?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
</p></figure>



<h2>Making Tiny Games</h2>


<div>
<figure><img loading="lazy" decoding="async" width="281" height="635" src="https://frankforce.com/wp-content/uploads/2019/03/screen-1.png" alt="my tiny ski game" srcset="https://frankforce.com/wp-content/uploads/2019/03/screen-1.png 281w, https://frankforce.com/wp-content/uploads/2019/03/screen-1-133x300.png 133w" sizes="(max-width: 281px) 100vw, 281px"></figure></div>


<p>For several years I’ve been studying the strange art of writing tiny programs. Back in 2019, after a long career in mainstream games, I found myself somewhat burnt out from working with giant code bases. I wanted to get back to basics and try something radically different. So on a whim I decided to make <a href="https://frankforce.com/im-only-making-small-game-now/" target="_blank" rel="noreferrer noopener">a tiny ski game in C++</a> and found it to be one of the most fun experiences of my career.</p>



<p>Thirsty for more I stumbled across the <a href="https://js1k.com/">JS1k competition</a> which happened to already be in progress. I knew immediately that I needed to participate, so learned JavaScript on the fly. <a href="https://frankforce.com/i-made-7-demos-in-2-weeks-for-js1k/" target="_blank" rel="noreferrer noopener">After 2 weeks and a few all-nighters, I submitted 6 demos to the contest.</a> It was clear, I was hooked on writing tiny code!</p>



<p>Over the next the few years I honed my JavaScript skills by making games, tools, art, and other experiments. On a website called Dwitter I released over a thousand tiny programs that push the boundaries of a 140 character limitation. I also released a few longform generative art projects using only vanilla JavaScript. All this was drastically different from what I had been doing for the past 20 years while programming in C++ at major game studios, but it fees like I finally discovered my true calling.</p>



<h2>Enter JS13K</h2>


<div>
<figure><img loading="lazy" decoding="async" width="160" height="160" src="https://frankforce.com/wp-content/uploads/2019/09/screen2.png" alt="bounce back logo" srcset="https://frankforce.com/wp-content/uploads/2019/09/screen2.png 160w, https://frankforce.com/wp-content/uploads/2019/09/screen2-150x150.png 150w" sizes="(max-width: 160px) 100vw, 160px"></figure></div>


<p>In subsequent years I’ve entered <a href="https://js13kgames.com/" target="_blank" rel="noreferrer noopener">JS13K </a>several times. The first time <a href="https://js13kgames.com/entries/bounce-back" target="_blank" rel="noreferrer noopener">I received 2nd place with a Bounce Back</a>, my Link’s Awakening homage, which also has <a href="https://frankforce.com/bounce-back-postmortem/" target="_blank" rel="noreferrer noopener">a lengthy writeup.</a> The next year <a href="https://js13kgames.com/entries/notecraft" target="_blank" rel="noreferrer noopener">NoteCraft</a>, my cellular automata music creator, won both the Audio and Innovation categories. That same year I released <a href="https://killedbyapixel.github.io/OS13k/" target="_blank" rel="noreferrer noopener">OS13k</a>, a tiny JavaScript operating system that won the Super Special award given by the organizer of the contest. <a href="https://github.com/KilledByAPixel/OS13k">I open sourced OS13k on GitHub</a> and have continuing adding apps to it. My most recent entry to JS13k was in 2022 when I submitted <a href="https://js13kgames.com/entries/egg-time-rewind" target="_blank" rel="noreferrer noopener">Egg Time Rewind.</a></p>



<p>This time I wanted to take things to the next level, by building a new game engine suitable for high quality low size games. There are already some tools of this sort available, like <a href="https://straker.github.io/kontra/" target="_blank" rel="noreferrer noopener">Kontra </a>and <a href="https://github.com/bitnenfer/tiny-canvas" target="_blank" rel="noreferrer noopener">Tiny-Canvas</a>, but none with extensive feature set I required. So when the contest started on August 13th, my first step was to make the engine before I could begin working on a game.</p>



<h2>Building The Engine</h2>


<div>
<figure><img loading="lazy" decoding="async" width="150" height="150" src="https://frankforce.com/wp-content/uploads/2024/08/2b-150x150.png" alt="LittleJS Logo"></figure></div>


<p>This primary goal of this engine is to be as small as possible while delivering the most powerful features. Using what I learned from making Bounce Back, I reworked everything to create even tighter and cleaner code. I eventually released the engine on GitHub as <a href="https://github.com/KilledByAPixel/LittleJS">LittleJS</a> with an open source license and still continue to improve it.</p>



<p>At its core, the engine uses an object oriented architecture that’s easy to build games with. For graphics it uses WebGL to render a massive amount of sprites at 60 FPS. The audio system uses <a href="https://killedbyapixel.github.io/ZzFX/">ZzFX </a>to procedurally create stereo sound effects. The input system handles keyboard, mouse, touch, and analog gamepads. I even wrote a small 2D physics system and collision solver.</p>



<p><a href="https://youtu.be/_dXKU0WgAj8?si=fPfn4YgHINchWZVu">I have talked a lot about LittleJS before</a> so we won’t go into details here but it took a long time to get all that working. About half the contest had flown by before I was ready to move on to any real game design or art.</p>



<h2>Game Design</h2>



<p>The run-and-gun genera doesn’t get as much love now as it did when I was growing up. I’m not sure why games like Contra and Metal Slug have declined in popularity. Maybe because first person shooters and metroidvania style games overtook the genre. Still, occasionally there are a few gems that get the formula right. One of my favorites is <a href="https://en.wikipedia.org/wiki/Broforce" target="_blank" rel="noreferrer noopener">Broforce by Free Lives.</a></p>



<figure><img loading="lazy" decoding="async" width="600" height="337" src="https://frankforce.com/wp-content/uploads/2021/11/002798s008.jpg" alt="broforce screenshot" srcset="https://frankforce.com/wp-content/uploads/2021/11/002798s008.jpg 600w, https://frankforce.com/wp-content/uploads/2021/11/002798s008-300x169.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"><figcaption>Broforce by Free Lives</figcaption></figure>



<p>The original Broforce came out in 2015 and has since seen many updates and ports to consoles, I highly recommend giving it a go. You may not know that the original Broforce prototype was made in only one weekend for the <a href="https://en.wikipedia.org/wiki/Ludum_Dare">Ludum Dare game jam</a> under the title <a href="https://broforce.fandom.com/wiki/Rambros" target="_blank" rel="noreferrer noopener">Rambros</a>. To gather research for my game I spent a few hours playing both Broforce and the original demo while taking copious notes.</p>



<p>I would need to distill this concept down to its core in order to pack as much gameplay as possible into the size limit. I decided to use procedurally generated levels to save space and add replay value. Instead of adding a lot of extra content, I focused on creating fun and polished core gameplay. To give myself an extra challenge, I wanted this game to support up to 4 player cooperative play, a first for JS13K!</p>



<h2>Art and Animation</h2>



<p>Because space is so limited, designing the art requires careful thought and planning. With most modern games, the art takes up a significant portion of the storage space. For this game I wanted to mimic the look of classic 16-bit games, so it uses a pixel art style sprite sheet.</p>



<p>Most tiles are 16×16 pixels in size with a few smaller 8×8 tiles. Some of the tiles are gray so color can be applied at run time. Limiting the number of colors also allows the image to be compressed better. The entire sprite sheet is only a 16 color 128×48 image as seen here…</p>


<div>
<figure><img loading="lazy" decoding="async" width="538" height="222" src="https://frankforce.com/wp-content/uploads/2024/08/tiles1.png" alt="tile sheet used by Space Huggers" srcset="https://frankforce.com/wp-content/uploads/2024/08/tiles1.png 538w, https://frankforce.com/wp-content/uploads/2024/08/tiles1-300x124.png 300w" sizes="(max-width: 538px) 100vw, 538px"></figure></div>


<p>When designing the sprites for my game I looked at the sprite sheet for Broforce as a guide to help understand the character art. Broforce actually has a ton of sprites and animation frames, but I was able to distill it down to just two frames of animation for everything! This includes standing, running, jumping, climbing ladders, flipping, rolling, and dying. For some of those actions like rolling the sprite is rotated to animate it without requiring any extra art.</p>


<div>
<figure><img loading="lazy" decoding="async" width="150" height="150" src="https://frankforce.com/wp-content/uploads/2021/10/brospritecompare.png" alt="sprite comparison between Space Huggers and Broforce"><figcaption>Sprite comparison</figcaption></figure></div>


<p>In my sprite sheet the heads are separate from the body. That allows the characters to have procedural animation with the body bobbing up and down during the run cycle.</p>



<p>The player’s eyes are also animated procedurally and will randomly blink to make the character seem more alive. When the player dies the sprite closes its eyes and rolls over sideways. It’s kind of dramatic!</p>



<p>The level art is also created using tiles from the sprite sheet with random coloring applied. This includes both the outside ground and enemy bases interiors. Outlines around the level geometry are added procedurally to make the edges stand out and give a more polished look. By combining all these elements together, it is possible to do a lot with a little!</p>



<figure><img loading="lazy" decoding="async" width="589" height="394" src="https://frankforce.com/wp-content/uploads/2024/08/image-3-e1723240352650.png" alt="space huggers screenshot showing enemy base structure" srcset="https://frankforce.com/wp-content/uploads/2024/08/image-3-e1723240352650.png 589w, https://frankforce.com/wp-content/uploads/2024/08/image-3-e1723240352650-300x201.png 300w" sizes="(max-width: 589px) 100vw, 589px"></figure>



<h2>Player Design</h2>



<p>For the look of the player character I wanted something alien but humanoid. The colors were chosen to contrast with each other and pop out from the background so the sprite is visible as possible. I always try to make gender neutral player characters so it’s easier for more people to identify with. After experimenting with different concepts I settled on a design only slightly inspired by Greedo from Star Wars. I was surprised how many people called me out on it!</p>


<div>
<figure><img loading="lazy" decoding="async" width="400" height="350" src="https://frankforce.com/wp-content/uploads/2021/10/greedo.png" alt="comparison of player with greedo" srcset="https://frankforce.com/wp-content/uploads/2021/10/greedo.png 400w, https://frankforce.com/wp-content/uploads/2021/10/greedo-300x263.png 300w" sizes="(max-width: 400px) 100vw, 400px"></figure></div>


<p>The game design for the player was informed by retro platformers like Mario, Contra, and some modern indies like Broforce. Something I love is how these games have single hit kills but also abundant extra lives, it makes for really exciting gameplay. Because my game is essentially an action roguelike, I made sure to supply the player with a variety of abilities to get out of any situation they find themselves stuck in.</p>


<div>
<figure><a href="https://frankforce.com/wp-content/uploads/2024/08/WkwuVRP.gif"><img loading="lazy" decoding="async" width="256" height="256" src="https://frankforce.com/wp-content/uploads/2024/08/WkwuVRP.gif" alt=""></a><figcaption>Squaresville for Sifteo Cubes</figcaption></figure></div>


<p>The player has a classic platformer movement package including the ability to break blocks and climb walls by jumping. All of the physics code was written from scratch for this game. I used a similar physics solution to <a href="https://youtu.be/nbZyXP7SCEg?si=wpEQrSUgR6VAoeSk">the system I developed in 2013 for Sifteo Cubes.</a> One of the toughest things to implement was the way ladders are interacted with. After the end of the contest I had to submit an emergency fix because of a glitch allowing the player to pass into collision by jumping into a ladder from the wrong angle!</p>



<p>The player also has a multi functional roll ability that provides a boost of speed and brief window of invulnerability. It has many uses including dodging bullets, double jumping, putting out fires, and knocking out enemies. This roll recharges after only a few seconds with a little flash so the player notices that it’s available again.</p>



<p>The primary weapon is a gun that not only kills most enemies in one hit but also destroys objects and level geometry. It has limited range so players will need to get in close to hit anything. For a little extra fun players also has 3 grenades that denotate with a large explosion destroying, pushing away, and lighting everything on fire. It’s a fun way to soften up a room!</p>



<h2>Enemy Design</h2>


<div>
<figure><img loading="lazy" decoding="async" width="150" height="225" src="https://frankforce.com/wp-content/uploads/2024/08/08c3af3c6f09112b192408d028bf9649.png" alt="halo game cover"></figure></div>


<p>The enemies all use the same base code as the player, so their AI works more like a bot then a typical videogame enemy. At a high level they send control inputs to the shared character class the same way as the player. This approach allows for interesting and complex combat encounters while reducing how much code is needed.</p>



<p>The pixel art for the enemies was inspired by the Spartans in the Halo series. I thought it would be fun to subvert the concept space marines by making it about aliens fighting to defend their home planets against a military invasion. All of the enemy types use the same sprite but with a different tint and visor color to differentiate them.</p>



<p>There are 5 enemy types, from easiest to most difficult…</p>



<ul>
<li>Recruit (Green) – A bit shorter then normal, hesitant to attack, dies in one hit.</li>



<li>Soldier (Blue) – Average height and ability, takes 2 hits to kill.</li>



<li>Captain (Red) – Can climb walls and jumps more often, takes 3 hits.</li>



<li>Specialist (White) – Jumps and rolls often like ninjas, takes 4 hits.</li>



<li>Demolitions Expert (Purple) – Throws grenades and can’t catch on fire, takes 5 hits!</li>
</ul>


<div>
<figure><img loading="lazy" decoding="async" width="541" height="211" src="https://frankforce.com/wp-content/uploads/2021/10/2021-09-18-20_14_38-Space-Huggers2.png" alt="all enemies in space huggers" srcset="https://frankforce.com/wp-content/uploads/2021/10/2021-09-18-20_14_38-Space-Huggers2.png 541w, https://frankforce.com/wp-content/uploads/2021/10/2021-09-18-20_14_38-Space-Huggers2-300x117.png 300w" sizes="(max-width: 541px) 100vw, 541px"></figure></div>


<p>There is also a small chance of any enemy type being spawned as heavy weapons variation. These mini boss enemies are larger with double health and shoot in fully automatic mode.</p>



<p>The enemy AI uses a pretty complex state machine since they can do all the same actions as the player. In addition to patrol and search behaviors, they will also engage in some surprisingly varied combat maneuvers. Giving each enemy type a unique theme helped inform me about how to design their AI. I love making enemies that can keep the player on their toes!</p>



<h2>Object Design</h2>


<div>
<figure><img loading="lazy" decoding="async" width="210" height="300" src="https://frankforce.com/wp-content/uploads/2024/08/Front-Cover-Psi-Ops-The-Mindgate-Conspiracy-UK-PC-210x300.webp" alt="psi-ops cover" srcset="https://frankforce.com/wp-content/uploads/2024/08/Front-Cover-Psi-Ops-The-Mindgate-Conspiracy-UK-PC-210x300.webp 210w, https://frankforce.com/wp-content/uploads/2024/08/Front-Cover-Psi-Ops-The-Mindgate-Conspiracy-UK-PC-716x1024.webp 716w, https://frankforce.com/wp-content/uploads/2024/08/Front-Cover-Psi-Ops-The-Mindgate-Conspiracy-UK-PC-768x1098.webp 768w, https://frankforce.com/wp-content/uploads/2024/08/Front-Cover-Psi-Ops-The-Mindgate-Conspiracy-UK-PC.webp 800w" sizes="(max-width: 210px) 100vw, 210px"></figure></div>


<p>One of my favorite things about playing games is causing unexpected chain reactions. This kind of emergent behavior is often facilitated by a fire propagation system, something I’ve implemented in many games before like Psi-Ops which I worked on at Midway Games.</p>



<p>This time I streamlined the design to use only a few objects that combine to create complex behaviors and fun scenarios. Some of these objects are able to catch on fire, and send heat events to nearby objects, eventually catching them on fire. Other objects are able to explode which damages and pushes away nearby objects while also setting more things on fire. There’s even a water barrel that can put out fires!</p>



<p>All of these objects use only 3 sprites: a crate, a barrel, and a rock. By using different tints and additive colors it’s possible to represent many different types of objects…</p>



<ul>
<li>Wooden Crate (Brown) – Burns easily and breaks when fully burnt.</li>



<li>Metal Crate &amp; Barrel (Gray) – Hard to destroy and can’t burn.</li>



<li>Explosive Crate &amp; Barrel (Green) – Burns and explodes after a few seconds.</li>



<li>High Explosive Barrel (Red) – Explodes quicker with a larger radius than normal explosives.</li>



<li>Water Barrel (Blue) – Puts out fires and pushes away objects.</li>



<li>Rock (Grayish) – Heavy and very hard to destroy, can’t burn, and crush enemies.</li>



<li>Lava Rock (Glowing Orange) – Anything it touches is lit on fire!</li>
</ul>


<div>
<figure><img loading="lazy" decoding="async" width="524" height="285" src="https://frankforce.com/wp-content/uploads/2024/08/s123.png" alt="all objects in space huggers" srcset="https://frankforce.com/wp-content/uploads/2024/08/s123.png 524w, https://frankforce.com/wp-content/uploads/2024/08/s123-300x163.png 300w" sizes="(max-width: 524px) 100vw, 524px"></figure></div>


<h2>Extra Game Design</h2>



<p>The only other game object that the player interacts with are checkpoint flags that can be activated just by touching them. This system allows players to respawn closer to the action when they die. The flag also has a special function in co-op multiplayer mode because when a player dies, the remaining players need to get to a checkpoint to respawn their buddies.</p>


<div>
<figure><img loading="lazy" decoding="async" width="568" height="366" src="https://frankforce.com/wp-content/uploads/2024/08/2024-08-08-11_34_08-Window.png" alt="check points in space huggers" srcset="https://frankforce.com/wp-content/uploads/2024/08/2024-08-08-11_34_08-Window.png 568w, https://frankforce.com/wp-content/uploads/2024/08/2024-08-08-11_34_08-Window-300x193.png 300w" sizes="(max-width: 568px) 100vw, 568px"></figure></div>


<p>The final thing I squeezed into this game was a radar system that appears along the bottom of the screen. It’s a simple but effective way to show where all the enemies are in relation to the player. I added it after experiencing some frustration while tracking down the last few enemies!</p>



<h2>Level Design</h2>



<p>The levels are procedurally generated so they are different for every playthrough. This can be a great way to cut down on file size for JS13K while also giving players an unlimited amount of content to explore. The real trick is generating levels that are interesting and fun for players.</p>



<p>To give structure to the level design, there are enemy bases composed of different rooms that follow a specific set of rules. This includes both the level geometry as well as placement of enemies and objects. It is probably the most complex part of the game and I was very proud of the result with some super interesting procedurally generated levels. This is definitely something I want to experiment more with in the future.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="640" src="https://frankforce.com/wp-content/uploads/2022/05/E_QhwaUX0AI38uL-1024x640.jpg" alt="enemy base" srcset="https://frankforce.com/wp-content/uploads/2022/05/E_QhwaUX0AI38uL-1024x640.jpg 1024w, https://frankforce.com/wp-content/uploads/2022/05/E_QhwaUX0AI38uL-300x188.jpg 300w, https://frankforce.com/wp-content/uploads/2022/05/E_QhwaUX0AI38uL-768x480.jpg 768w, https://frankforce.com/wp-content/uploads/2022/05/E_QhwaUX0AI38uL-1536x960.jpg 1536w, https://frankforce.com/wp-content/uploads/2022/05/E_QhwaUX0AI38uL.jpg 1920w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>The bases include some special things like partially transparent windows that allow the background to show through and energy doors that can be shot to break them open. To create extra variation the bases are sometimes made to look like caves and underground mines.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="640" src="https://frankforce.com/wp-content/uploads/2022/05/E_Qh1E-WQAgml31-1024x640.jpg" alt="large enemy base" srcset="https://frankforce.com/wp-content/uploads/2022/05/E_Qh1E-WQAgml31-1024x640.jpg 1024w, https://frankforce.com/wp-content/uploads/2022/05/E_Qh1E-WQAgml31-300x188.jpg 300w, https://frankforce.com/wp-content/uploads/2022/05/E_Qh1E-WQAgml31-768x480.jpg 768w, https://frankforce.com/wp-content/uploads/2022/05/E_Qh1E-WQAgml31-1536x960.jpg 1536w, https://frankforce.com/wp-content/uploads/2022/05/E_Qh1E-WQAgml31.jpg 1920w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>The ground around the bases uses a random noise algorithm. A few deep chasms are also created that allow enemies or the player to fall to their doom. Checkpoints are placed across the map at roughly regular intervals.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="576" src="https://frankforce.com/wp-content/uploads/2022/05/screenshot-2021-09-28T123449.993-1024x576.png" alt="very large enemy base" srcset="https://frankforce.com/wp-content/uploads/2022/05/screenshot-2021-09-28T123449.993-1024x576.png 1024w, https://frankforce.com/wp-content/uploads/2022/05/screenshot-2021-09-28T123449.993-300x169.png 300w, https://frankforce.com/wp-content/uploads/2022/05/screenshot-2021-09-28T123449.993-768x432.png 768w, https://frankforce.com/wp-content/uploads/2022/05/screenshot-2021-09-28T123449.993.png 1536w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<h2>Background Effects</h2>



<p>In the background there’s a layered sky system. The parallax mountainscapes are generated using an algorithm I’ve been working on that creates interesting looking landscapes with just a tiny bit of code. Behind that is a gradient with stars and suns that move in the sky to help emphasize the otherworldly feeling of being on another planet.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="546" src="https://frankforce.com/wp-content/uploads/2022/05/LittleJS-35-1024x546.png" alt="background sky effect" srcset="https://frankforce.com/wp-content/uploads/2022/05/LittleJS-35-1024x546.png 1024w, https://frankforce.com/wp-content/uploads/2022/05/LittleJS-35-300x160.png 300w, https://frankforce.com/wp-content/uploads/2022/05/LittleJS-35-768x409.png 768w, https://frankforce.com/wp-content/uploads/2022/05/LittleJS-35-1536x818.png 1536w, https://frankforce.com/wp-content/uploads/2022/05/LittleJS-35.png 1920w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>Some levels even have precipitation effects like rain and snow. This is a great way to demonstrate the particle system and collision physics. More importantly it adds a layer of atmosphere to the game that helps each level feel like a more unique and interesting place.</p>



<h2>Sound Design</h2>



<p>All of the audio is played using <a href="https://killedbyapixel.github.io/ZzFX/">my open source sound effect tool ZzFX.</a> It’s a tiny self contained sound effect player that generates audio samples from a set of 20 parameters. I was happy to see that many other JS13K games <a href="https://x.com/KilledByAPixel/status/1445455434542845963">used ZzFX that year including 5 of the top 10 games!</a></p>



<p>In total Space Huggers uses 11 different sound effects and it took a lot of tweaking to get those sounding right. My favorite sound in the game is the footstep sound used by the player.</p>



<p>To achieve an atmospheric sound when there is wind or rain, a quiet noisy effect plays every few seconds, overlapping itself with some randomness. I was inspired to give this a shot after hearing it done in another great JS13K game, <a href="https://js13kgames.com/entries/the-wandering-wraith">The Wandering Wraith by Mateusz Tomczyk.</a></p>



<figure><img loading="lazy" decoding="async" width="800" height="665" src="https://frankforce.com/wp-content/uploads/2024/08/screenshot-4.png" alt="zzfx editor" srcset="https://frankforce.com/wp-content/uploads/2024/08/screenshot-4.png 800w, https://frankforce.com/wp-content/uploads/2024/08/screenshot-4-300x249.png 300w, https://frankforce.com/wp-content/uploads/2024/08/screenshot-4-768x638.png 768w" sizes="(max-width: 800px) 100vw, 800px"></figure>



<h2>Making a Build System</h2>



<p>This is the first year that I fully automated my build process and it was well worth the effort. Previously there were too many manual steps necessary to build the final zipped project. This was especially a problem towards the end of the jam, when the size gets near the limit and it becomes necessary to build more often to check the final size.</p>



<p>My build system is nothing fancy. I just made a windows bat file, but in the click of a button it does the everything I need…</p>



<ul>
<li>Combines all js files together.</li>



<li>Runs <a href="https://developers.google.com/closure">Google Closure</a>, Uglify, and <a href="https://github.com/lifthrasiir/roadroller" target="_blank" rel="noreferrer noopener">Roadroller </a>on the code.</li>



<li>Combines the minified code into a single html file.</li>



<li>Zips the html with <a href="https://github.com/fhanau/Efficient-Compression-Tool" target="_blank" rel="noreferrer noopener">ECT</a>.</li>
</ul>



<p>For projects of this size I don’t do a lot of hand minification but instead rely on tools like Google Closure so the source code can remain clean and easy to work with. Though I’ve found Closure to be the best first pass minifier, running Terser or Uglify seemed to squeeze out a few more bytes. Overall I’ve been very impressed at how good Closure is at removing dead code while minifying everything else.</p>



<p>That same year <a href="https://twitter.com/senokay">Kang Seonghoon</a> introduced a new tool called Roadroller that was a total game changer. It uses a neural network to pack JavaScript code significantly better into a zip file, enough to fit several more kilobytes of code! At first it doesn’t seem possible, but I can assure you, it works like magic. People started joking that JS13K has now become JS15K. This kind of thing really makes me wonder what else will be possible in future years of the contest.</p>



<p>This was my first time using Efficient Compression Tool (ECT) to zip a project. After experimenting with various other options I found it to be the most efficient at both zipping files and compressing images. You’d be surprised how many extra bytes of cruft are in an average zip! For large files it probably doesn’t matter much but for small files like this it can make a huge difference.</p>



<h2>Areas for Improvement</h2>



<p>After submitting the game I already knew there were some things that could have been done better. In general my game was just very thin on content and lacked an overall sense of progression. There was no end to the game or even a proper beginning. While what I had was very fun, it was also super minimal and felt more like a tech demo then a complete game.</p>



<p>One of the biggest features I would have cut is 4 player cooperative gameplay and probably all gamepad support as well. While multiplayer can be a lot of fun, almost no one actually gave it a try which means all that code was just wasted space.</p>


<div>
<figure><img loading="lazy" decoding="async" width="651" height="298" src="https://frankforce.com/wp-content/uploads/2024/08/image-1.png" alt="Space huggers 4 player mode" srcset="https://frankforce.com/wp-content/uploads/2024/08/image-1.png 651w, https://frankforce.com/wp-content/uploads/2024/08/image-1-300x137.png 300w" sizes="(max-width: 651px) 100vw, 651px"></figure></div>


<p>I wanted to fit in a variety of weapons and upgrades for the player which would have added a lot of fun and variety to the gameplay. These could also have been used by enemies to create more diverse combat scenarios. I chose to cut this not only for space limitations but also because keeping things simple allowed me to polish everything before the deadline.</p>



<p>Unfortunately I was also not able to fit any music, things were just so tight. This is a huge missed opportunity to inject another layer of immersion and I definitely plan to have some kind of soundtrack in my next JS13K game!</p>



<h2>The Results</h2>



<p>Space Huggers did not win JS13K but it did pretty well, placing 8th out of 223 games in total. It also received 2nd place in fun and gameplay categories!</p>



<p><a href="https://medium.com/js13kgames/js13kgames-2021-winners-top-in-criteria-and-expert-picks-cf4a0544fd45">Additionally Space Huggers was picked by 2 experts as their favorite JS13K game!</a> Thanks so much Lee and Christer. Here’s what they had to say…</p>



<blockquote>
<p>“As someone who’s sunk hours into Broforce and loves retro games, Space Huggers checked all the boxes for me. Procedurally generated levels that I can play in my browser?!? SHUT UP AND TAKE MY MONEY!” – Lee Reilly</p>
</blockquote>



<blockquote>
<p>“It is an impressive game engine AND an extremely fun game! Most things are one or the other.” – Christer Kaitila</p>
</blockquote>



<p>Possibly the most amazing thing of all is that we got a half page writeup in Linux Format magazine! It’s beyond awesome to see my game showing up in print media.</p>


<div>
<figure><img loading="lazy" decoding="async" width="1024" height="768" src="https://frankforce.com/wp-content/uploads/2024/02/linux_magazine-1024x768.jpg" alt="article in linux format magazine" srcset="https://frankforce.com/wp-content/uploads/2024/02/linux_magazine-1024x768.jpg 1024w, https://frankforce.com/wp-content/uploads/2024/02/linux_magazine-300x225.jpg 300w, https://frankforce.com/wp-content/uploads/2024/02/linux_magazine-768x576.jpg 768w, https://frankforce.com/wp-content/uploads/2024/02/linux_magazine-1536x1152.jpg 1536w, https://frankforce.com/wp-content/uploads/2024/02/linux_magazine-2048x1536.jpg 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></figure></div>


<h2>Newgrounds Enhanced Edition</h2>



<p>After JS13K I took some time to polish up the game a little more and <a href="https://www.newgrounds.com/portal/view/819609">released it on Newgrounds.</a> I also reworked the length of the game so it can beaten in around 10 minutes. Here are some of the new features I added to this enhanced version…</p>



<ul>
<li>Limited game to 5 levels with the final level being the smallest but most dense.</li>



<li>Final boss that can crash through walls and throws objects at the player.</li>



<li>Intro screen with a music track I composed using FL Studio.</li>



<li>Mobile support with a virtual on screen touch gamepad.</li>



<li>Medals and Scoreboard with the fastest times.</li>



<li>Many other small tweaks and improvements.</li>
</ul>



<p>I am proud to say that the game now has over 100K plays on Newgrounds and maintains a solid 4/5 score with over 600 votes! Also, there are 26 pages of comments from people that have reviewed the game. This feedback was a great way for me to continue improving gameplay while chasing down any remaining bugs.</p>



<p>I want to give a special shoutout to a few amazing players. The first is lewdev who was an early supporter of Space Huggers and is also one of the best players, <a href="https://www.youtube.com/watch?v=nomaLYOo9QA">holding the world record speedrun for a long while.</a> I’d also like to congratulate KyRzYg on Newgrounds for having the current fastest speed run at a lightning fast 7 minutes 29 seconds!</p>



<p>Also a big thank you to <a href="https://wowdotstudios.newgrounds.com/" target="_blank" rel="noreferrer noopener">WOWdotStudios</a> for sending me the first piece of fan art I’ve ever received, this super cool high resolution art of the player from Space Huggers. You might also recognize it as my profile image on Newgrounds!</p>


<div>
<figure><img loading="lazy" decoding="async" width="485" height="630" src="https://frankforce.com/wp-content/uploads/2023/05/wowdotstudios.jpg" alt="fan art" srcset="https://frankforce.com/wp-content/uploads/2023/05/wowdotstudios.jpg 485w, https://frankforce.com/wp-content/uploads/2023/05/wowdotstudios-231x300.jpg 231w" sizes="(max-width: 485px) 100vw, 485px"><figcaption>Space Huggers fan art by WOWdotStudios </figcaption></figure></div>


<h2>Wrap Up</h2>



<p>That’s the story of Space Huggers… for now. Thank you for reading! I hope you learned something from my crazy programming adventures. <a href="https://twitter.com/KilledByAPixel" target="_blank" rel="noreferrer noopener">Follow me on twitter for all the latest updates on my experiments!</a> </p>



<p>The next JS13K competition is just about to begin and if you’re interested you can use the same engine I used to make Space Huggers as a starting point! <a href="https://github.com/KilledByAPixel/LittleJS">That game engine is now called LittleJS</a> and there is special example project for JS13K that builds to a 7KB zip leaving tons of room to pack with your art and gameplay. I can’t wait to see what you make with it!</p>



<p>I’ll leave you with this video from a 4 player co-op game of Space Huggers I played with a few friends and it was a blast. Let me know if you give it a shot at your next game night!</p>



<figure></figure>

											</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pixel smartphones delivered with secret but inactive remote maintenance (119 pts)]]></title>
            <link>https://www.heise.de/en/news/Pixel-smartphones-delivered-with-secret-but-inactive-remote-maintenance-9836887.html</link>
            <guid>41264070</guid>
            <pubDate>Fri, 16 Aug 2024 07:39:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.heise.de/en/news/Pixel-smartphones-delivered-with-secret-but-inactive-remote-maintenance-9836887.html">https://www.heise.de/en/news/Pixel-smartphones-delivered-with-secret-but-inactive-remote-maintenance-9836887.html</a>, See on <a href="https://news.ycombinator.com/item?id=41264070">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

        <div>
  <p><em>This article was originally published in
    
      <a href="https://www.heise.de/news/Pixel-Smartphones-mit-heimlicher-aber-inaktiver-Fernwartung-ausgeliefert-9836726.html">German</a>
    
    and has been automatically translated.</em>
  </p>
</div>


<p>Millions of Pixel phones have been shipped with remote maintenance software that makes them vulnerable to spyware – but only if the perpetrator has physical access to the device, enters the user's password and knows how to activate the normally invisible and inactive software, according to Google. Under these conditions, an attacker could also install any other software. The remote maintenance software is said to have been installed at Verizon's request since <a href="https://www.heise.de/news/Google-Pixel-und-Pixel-XL-Android-Smartphones-mit-AI-und-der-besten-Kamera-3340555.html?from-en=1">the Pixel phones were launched in 2017</a>. The US mobile operator used the program for a while to demonstrate Pixel phones in its sales outlets.</p>

    
  

  <!-- RSPEAK_STOP -->
  
  <a-paternoster height="360" media="(min-width: 320px) and (max-width: 767px)">
    

  
    
    
  

  </a-paternoster>
  <!-- RSPEAK_START -->



<p>Whether Android phones other than Pixel are also affected is still unclear. Active exploitation is not known. The vulnerability was discovered by the "Endpoint Detection and Response" scanner (EDR) <a href="https://iverify.io/blog/iverify-discovers-android-vulnerability-impacting-millions-of-pixel-devices-around-the-world">von iVerify</a> on a customer's cell phone. iVerify, together with the affected customer Palantir and the security company Trail of Bits, was able to trace this back to a hidden Android software package. Even though the software is no longer used, it is still present in the images of Pixel smartphones, <a href="https://x.com/dguido/status/1824120241829355571" rel="external noopener" target="_blank">as Trail of Bits CEO Dan Guido notes on X.</a></p>

<p>In fact, firmware images for the Pixel devices can still be downloaded from Google's official servers, which contain the priv-app directory with the aforementioned Showcase.pkg in product.img, as heise online was able to verify using the <a href="https://dl.google.com/dl/android/aosp/akita-ud2a.231203.054-factory-b3a902d4.zip?hl=de" rel="external noopener" target="_blank">Android 14.0 image for the Pixel 8a</a>.</p>

  





<p>According to iVerify, once activated, the application downloads a configuration file via an insecure connection, which can result in system-level code being executed. The configuration file is retrieved from a domain hosted by AWS over unsecured HTTP, which leaves the configuration and the device vulnerable to malicious code, spyware and data wiping.</p>
<h3 id="nav_patch_not_yet__0">Patch not yet available</h3>
<p>The affected package is pre-installed in the firmware of Pixel devices. By default, the application is not active; however, as it is part of the firmware image, millions of phones could be running this app at system level. Users cannot uninstall Showcase.apk themselves. An update that removes the inactive software is in the works, according to Verizon, and will be made available to "all affected OEM manufacturers". This raises the suspicion that phones other than Pixel phones are also equipped with the insecure application.</p>



<p>According to media reports, Showcase.apk comes from Smith Micro, a company that provides software for remote access, parental control and data erasure. "This is neither an Android platform nor a Pixel vulnerability," <a href="https://www.forbes.com/sites/zakdoffman/2024/08/15/new-pixel-warning-as-pixel-9-pixel-9-pro-pixel-9-pro-fold-release/" rel="external noopener" target="_blank">Google told Forbes</a>. The app was developed for a demo function for stores of the US mobile phone provider Verizon, but is no longer in use. Both physical access to the device and the user's password are required to activate the app.</p>
<p>The function is no longer used by Verizon, nor by consumers, a company spokesperson told Forbes. Neither iVerify nor Verizon have found any evidence of the vulnerability being exploited. As a precautionary measure, the demo function will be removed from all devices.</p>
<p>The discovery of Showcase.apk and similar incidents show the need for greater transparency and discussion around third-party apps that are part of the operating system. Incidentally, the problem is not new - nor is it limited to Pixel smartphones: back in 2016, <a href="https://community.verizon.com/t5/Samsung/Note-5-and-Verizon-Store-Demo-Mode/m-p/992275#1454014" rel="external noopener" target="_blank">a person complained to Verizon</a> that a "Verizon store demo mode app" was on his Samsung Galaxy Note 5.</p>
<p>

<!-- RSPEAK_STOP -->
<span>(<a href="mailto:mack@heise.de" title="Marie-Claire Koch">mack</a>)</span>
<!-- RSPEAK_START -->
</p>

        
        

        
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Aristotle – How to live a good life (202 pts)]]></title>
            <link>https://ralphammer.com/aristotle-how-to-live-a-good-life/</link>
            <guid>41263951</guid>
            <pubDate>Fri, 16 Aug 2024 07:20:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ralphammer.com/aristotle-how-to-live-a-good-life/">https://ralphammer.com/aristotle-how-to-live-a-good-life/</a>, See on <a href="https://news.ycombinator.com/item?id=41263951">Hacker News</a></p>
<div id="readability-page-1" class="page"><p><span><span>Publish Date</span><time datetime="2024-02-28T15:34:50+00:00">28. February 2024</time></span><span>9947 Views</span>			</p><div>
				
<p>2400 years ago Aristotle found out how to be <strong>happy</strong>.</p>



<p>His <em>Nicomachean Ethics</em> is an operating manual for a <strong>good life</strong>:</p>



<h2><strong>What is good?</strong></h2>



<p>First of all, what makes a thing a <strong>good</strong> thing?&nbsp;A good thing <strong>fulfils</strong> its <strong>unique function</strong>.</p>



<p>A <strong>good knife</strong> is a knife that is good at <strong>cutting</strong>.</p>


<div>
<figure><img fetchpriority="high" decoding="async" width="307" height="173" data-attachment-id="4584" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/01_knife/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/01_Knife.gif" data-orig-size="307,173" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="01_Knife" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/01_Knife-300x169.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/01_Knife.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/01_Knife.gif" alt="Knife"></figure></div>


<p>A <strong>good eye</strong> is an eye that is good at <strong>seeing</strong>.</p>


<div>
<figure><img decoding="async" width="184" height="90" data-attachment-id="4585" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/02_eye/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/02_Eye.gif" data-orig-size="184,90" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="02_Eye" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/02_Eye.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/02_Eye.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/02_Eye.gif" alt="Eye"></figure></div>


<p>Now, what makes a <strong>good human</strong>?&nbsp;To know what a human should be good at, we need to look at <strong>what is unique</strong> about humans: We have a <strong>soul</strong> that <strong>thinks</strong> and <strong>feels</strong>.</p>


<div>
<figure><img loading="lazy" decoding="async" width="307" height="160" data-attachment-id="4586" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/03_thoughtsfeelings/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/03_ThoughtsFeelings.gif" data-orig-size="307,160" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="03_ThoughtsFeelings" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/03_ThoughtsFeelings-300x156.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/03_ThoughtsFeelings.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/03_ThoughtsFeelings.gif" alt="Thoughts and feelings"></figure></div>


<p>So for us to live a <strong>good life</strong> means to have an <strong>excellent soul</strong>. And this excellence reveals itself in a <strong>clear intellect</strong> and a <strong>noble character</strong>.</p>


<div>
<figure><img loading="lazy" decoding="async" width="213" height="206" data-attachment-id="4587" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/04_mindcharakter/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/04_MindCharakter.gif" data-orig-size="213,206" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="04_MindCharakter" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/04_MindCharakter.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/04_MindCharakter.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/04_MindCharakter.gif" alt="Clear intellect and noble character"></figure></div>


<p>Let’s have a closer look at both and how we can achieve them:</p>



<h2><strong>1. The virtues of a clear intellect</strong></h2>



<p>Today, we often reduce all our mental abilities to “intelligence”. Aristotle went a bit deeper and identified multiple <strong>theoretical virtues</strong>:</p>



<p><strong>Art</strong> (techne) is the ability to <strong>make things</strong>.</p>



<figure><img loading="lazy" decoding="async" width="243" height="118" data-attachment-id="4589" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/05_techne-1/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/05_Techne-1.gif" data-orig-size="243,118" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="05_Techne-1" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/05_Techne-1.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/05_Techne-1.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/05_Techne-1.gif" alt="Art"></figure>



<p><strong>Intelligence</strong> (nous) is&nbsp;<strong>intuitive insight </strong>into underlying truths of our world.</p>



<figure><img loading="lazy" decoding="async" width="240" height="173" data-attachment-id="4590" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/06_nous/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/06_Nous.gif" data-orig-size="240,173" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="06_Nous" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/06_Nous.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/06_Nous.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/06_Nous.gif" alt="Intelligence"></figure>



<p><strong>Scientific knowledge</strong> (episteme) is our <strong>logical reasoning</strong> about the world.</p>



<figure><img loading="lazy" decoding="async" width="240" height="173" data-attachment-id="4591" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/07_episteme/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/07_Episteme.gif" data-orig-size="240,173" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="07_Episteme" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/07_Episteme.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/07_Episteme.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/07_Episteme.gif" alt="Scientific knowledge"></figure>



<p><strong>Prudence</strong> (phronesis) is our ability to make <strong>practical (moral) decisions</strong>.</p>



<figure><img loading="lazy" decoding="async" width="271" height="157" data-attachment-id="4592" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/08_phronesis/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/08_Phronesis.gif" data-orig-size="271,157" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="08_Phronesis" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/08_Phronesis.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/08_Phronesis.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/08_Phronesis.gif" alt="Prudence"></figure>



<p><strong>Wisdom</strong> (sophia) is a comprehensive <strong>understanding of deeper truths</strong>.</p>



<figure><img loading="lazy" decoding="async" width="288" height="173" data-attachment-id="4593" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/09_sophia/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/09_Sophia.gif" data-orig-size="288,173" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="09_Sophia" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/09_Sophia.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/09_Sophia.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/09_Sophia.gif" alt="Wisdom"></figure>



<p>These theoretical virtues help us understand what is <strong>true</strong> and <strong>possible</strong>.&nbsp;</p>



<p>And as important as they are, for Aristotle something else is just as vital for a good life: <strong>our character</strong>.</p>



<h2><strong>2. The virtues of a noble character</strong></h2>



<p>A <strong>good character</strong> can <strong>handle emotions</strong> properly.</p>


<div>
<figure><img loading="lazy" decoding="async" width="120" height="81" data-attachment-id="4594" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/10_emotion/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/10_Emotion.gif" data-orig-size="120,81" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="10_Emotion" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/10_Emotion.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/10_Emotion.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/10_Emotion.gif" alt="Emotions"></figure></div>


<p>We do that by finding the <strong>right mean</strong> between <strong>two extremes</strong>:</p>



<p><strong>Courage</strong> is the right mean between cowardice and recklessness.</p>



<figure><img loading="lazy" decoding="async" width="288" height="173" data-attachment-id="4595" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/11_courage/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/11_Courage.gif" data-orig-size="288,173" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="11_Courage" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/11_Courage.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/11_Courage.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/11_Courage.gif" alt="Courage"></figure>



<p><strong>Temperance</strong> is the right mean between gluttony and abstinence.</p>



<figure><img loading="lazy" decoding="async" width="288" height="173" data-attachment-id="4596" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/12_temperance/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/12_Temperance.gif" data-orig-size="288,173" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="12_Temperance" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/12_Temperance.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/12_Temperance.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/12_Temperance.gif" alt="Temperance"></figure>



<p>This right mean depends on the <strong>person</strong>.&nbsp;</p>



<figure><img loading="lazy" decoding="async" width="381" height="157" data-attachment-id="4597" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/13_persons/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/13_Persons.gif" data-orig-size="381,157" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="13_Persons" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/13_Persons-300x124.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/13_Persons.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/13_Persons.gif" alt="Persons"></figure>



<p>An athlete might need more food than an office worker.</p>



<p>It also depends on the <strong>situation</strong>.</p>



<figure><img loading="lazy" decoding="async" width="381" height="134" data-attachment-id="4598" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/14_situations/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/14_Situations.gif" data-orig-size="381,134" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="14_Situations" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/14_Situations-300x106.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/14_Situations.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/14_Situations.gif" alt="Situations"></figure>



<p>Sometimes it is better to avoid conflict, at other times it is worth it to stand our ground.</p>


<div>
<figure><img loading="lazy" decoding="async" width="288" height="144" data-attachment-id="4607" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/15_character-1/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/15_Character-1.gif" data-orig-size="288,144" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="15_Character-1" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/15_Character-1.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/15_Character-1.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/15_Character-1.gif" alt="Character"></figure></div>


<p>We cannot study rules for proper behaviour. Instead,<strong> we must train our character</strong> through <strong>habituation</strong> to find the right mean appropriate to the circumstances.</p>



<h2><strong>Action!</strong></h2>



<p>In a<strong> successful life</strong>, the human soul fulfils its purpose through <strong>virtuous actions</strong>.&nbsp;</p>



<p>Are we born with those virtues?</p>



<p>No. Aristotle says that humans have a <strong>capacity</strong> to be good, but it is up to us to develop our character. This is best achieved through <strong>study</strong> and <strong>habit</strong>.&nbsp;</p>


<div>
<figure><img loading="lazy" decoding="async" width="347" height="191" data-attachment-id="4600" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/16_studyhabit/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/16_StudyHabit.gif" data-orig-size="347,191" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="16_StudyHabit" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/16_StudyHabit-300x165.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/16_StudyHabit.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/16_StudyHabit.gif" alt="Study and habit"></figure></div>


<p>Excellence is not something you are, but something you <strong>do</strong>!</p>



<h2><strong>A good life…</strong></h2>



<p>For Aristotle happiness is achieved through a lifetime of <strong>virtuous activity</strong> of the soul, involving both <strong>intellect</strong> and <strong>character</strong>.</p>


<div>
<figure><img loading="lazy" decoding="async" width="476" height="406" data-attachment-id="4601" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/17_overview/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/17_Overview.gif" data-orig-size="476,406" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="17_Overview" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/17_Overview-300x256.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/17_Overview.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/17_Overview.gif" alt="Good life"></figure></div>


<p>So far so good, you might say—but isn’t happiness about <strong>feeling good</strong>?</p>



<h2><strong>… is a happy life</strong></h2>



<p>Aristotle does not deny that pleasure is fun. Money, fame and food are great and contribute to our happiness!</p>


<div>
<figure><img loading="lazy" decoding="async" width="323" height="168" data-attachment-id="4605" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/18_virtue-2/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/18_Virtue-2.gif" data-orig-size="323,168" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="18_Virtue-2" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/18_Virtue-2-300x156.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/18_Virtue-2.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/18_Virtue-2.gif" alt="Virtue and circumstances"></figure></div>


<p>But these things are <strong>not</strong> essential to a good life.&nbsp;</p>



<p>One might even suffer greatly and still live a virtuous—that is: a good—life. When Aristotle speaks of a “happy” life, he means a <strong>fulfilled</strong> or <strong>flourishing</strong> life rather than a pleasurable one.&nbsp;</p>



<p>Such a virtuous life helps us find our place in the world. It is good simply because it suits our nature. Everything we do should ultimately serve the best we can be: a human soul with a clear intellect and a noble character.</p>


<div>
<figure><img loading="lazy" decoding="async" width="544" height="464" data-attachment-id="4603" data-permalink="https://ralphammer.com/aristotle-how-to-live-a-good-life/19_highestgoal/" data-orig-file="https://ralphammer.com/wp-content/uploads/2024/02/19_HighestGoal.gif" data-orig-size="544,464" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="19_HighestGoal" data-image-description="" data-image-caption="" data-medium-file="https://ralphammer.com/wp-content/uploads/2024/02/19_HighestGoal-300x256.gif" data-large-file="https://ralphammer.com/wp-content/uploads/2024/02/19_HighestGoal.gif" tabindex="0" role="button" src="https://ralphammer.com/wp-content/uploads/2024/02/19_HighestGoal.gif" alt="Highest goal"></figure></div>


<p>Happiness is not a feeling of pleasure. <strong>Happiness is the pursuit of excellence</strong>.</p>



<h2><strong> If you want to dig deeper</strong></h2>



<ul>
<li><a href="https://amzn.to/48xu902">Aristotle, <em>Nicomachean Ethics</em></a></li>
</ul>



<h3>Before you go</h3>



<p>If you enjoyed this article, then <strong>subscribe to my mailing list&nbsp;</strong>to receive more animated stories!</p>





				</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[PyScript: An open source platform for Python in the browser (196 pts)]]></title>
            <link>https://pyscript.net/</link>
            <guid>41263843</guid>
            <pubDate>Fri, 16 Aug 2024 07:01:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pyscript.net/">https://pyscript.net/</a>, See on <a href="https://news.ycombinator.com/item?id=41263843">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>

                <!-- begin terminal window -->
                

                <div id="old-terminal">

                            <pre id="typewriter">                            Wouldn't it be cool...
                            to run Python...
                            in your browser?
                            </pre>

                            <p>&lt;html&gt;<span>|</span></p>
                            <p>&nbsp;&nbsp;...<span>|</span></p>
                            <p>&nbsp;&nbsp;&lt;script type="py"&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span><span>print</span>(<span>'You can!'</span>)</span><br>&nbsp;&nbsp;&lt;/script&gt;<span>|</span></p>
                            <p>&lt;/html&gt;<span>|</span></p>

                            <p><span>|</span></p>

                        </div>
                <!-- end terminal window -->

                

                <!-- begin dialog content -->
                
                <!-- end dialog content -->

                

                <!-- begin readme content -->
                <div>
                    <h2 id="pyscript">Say Hello to PyScript 👋</h2>

                    <p><strong>PyScript</strong> is an <a href="https://github.com/pyscript/pyscript">open source</a> platform for <a href="https://python.org/" target="_blank">Python</a> in the
<a href="https://en.wikipedia.org/wiki/Web_browser" target="_blank">browser</a>.</p>

                    <p>PyScript brings together two of the most vibrant technical ecosystems on the
planet. If <a href="https://en.wikipedia.org/wiki/World_Wide_Web" target="_blank">the web</a> and Python
had a baby, you'd get PyScript.</p>

                    <p>At the core of PyScript is a <em>philosophy of digital empowerment</em>. The web is
the world's most ubiquitous computing platform, mature and familiar to billions
of people. Python is one of the
<a href="https://spectrum.ieee.org/the-top-programming-languages-2023" target="_blank">world's most popular programming languages</a>.</p>
                    <p>With PyScript, <em>Python runs anywhere there's a
                    browser (<u>which is everywhere</u>)</em>.</p>

                    
                    <ul>
                      <li><strong>Easy</strong>: your apps run in the browser with no complicated installation
                        required.</li>
                      <li><strong>Expressive</strong>: create apps with a powerful, popular and easy to learn
                        language like Python.</li>
                      <li><strong>Scalable</strong>: no need for expensive infrastructure ~ your code runs in
                        your user's browser.</li>
                      <li><strong>Shareable</strong>: applications are just a URL on the web. That's it!</li>
                      <li><strong>Universal</strong>: your code runs anywhere a browser runs... which is
                        <em>everywhere</em>!</li>
                      <li><strong>Secure</strong>: PyScript runs in the world's most battle-tested computing
                        platform, the browser!</li>
                      <li><strong>Powerful</strong>: the best of the web and Python, together at last.</li>
</ul>

                </div>
                <!-- end readme content -->

                

            </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Former Google CEO Eric Schmidt's Leaked Stanford Talk (307 pts)]]></title>
            <link>https://github.com/ociubotaru/transcripts/blob/main/Stanford_ECON295%E2%A7%B8CS323_I_2024_I_The_Age_of_AI%2C_Eric_Schmidt.txt</link>
            <guid>41263143</guid>
            <pubDate>Fri, 16 Aug 2024 04:21:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ociubotaru/transcripts/blob/main/Stanford_ECON295%E2%A7%B8CS323_I_2024_I_The_Age_of_AI%2C_Eric_Schmidt.txt">https://github.com/ociubotaru/transcripts/blob/main/Stanford_ECON295%E2%A7%B8CS323_I_2024_I_The_Age_of_AI%2C_Eric_Schmidt.txt</a>, See on <a href="https://news.ycombinator.com/item?id=41263143">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;actions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;actions_link_product_navbar&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;packages&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;packages_link_product_navbar&quot;}" href="https://github.com/features/packages">
      
      <div>
        <p>Packages</p><p>
        Host and manage packages
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;security&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;security_link_product_navbar&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;codespaces&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;codespaces_link_product_navbar&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_copilot&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_copilot_link_product_navbar&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>GitHub Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_review&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_review_link_product_navbar&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;issues&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;issues_link_product_navbar&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;discussions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;discussions_link_product_navbar&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>

                  <li>
      
      
</li>

                  <li>
      
      <div>
                <p><span id="resources-explore-heading">Explore</span></p><ul aria-labelledby="resources-explore-heading">
                <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;learning_pathways&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;learning_pathways_link_resources_navbar&quot;}" href="https://resources.github.com/learn/pathways">
      Learning Pathways

    
</a></li>

                <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;white_papers_ebooks_webinars&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;white_papers_ebooks_webinars_link_resources_navbar&quot;}" href="https://resources.github.com/">
      White papers, Ebooks, Webinars

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;customer_stories&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;customer_stories_link_resources_navbar&quot;}" href="https://github.com/customer-stories">
      Customer Stories

    
</a></li>

                <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;partners&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;partners_link_resources_navbar&quot;}" href="https://partner.github.com/">
      Partners

    
</a></li>

            </ul>
          </div>
</li>


                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_sponsors&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_sponsors_link_open_source_navbar&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;the_readme_project&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;the_readme_project_link_open_source_navbar&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

            </ul>
          </div>
          
      </div>
</li>


                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;enterprise_platform&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;enterprise_platform_link_enterprise_navbar&quot;}" href="https://github.com/enterprise">
      
      <div>
        <p>Enterprise platform</p><p>
        AI-powered developer platform
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>


                <li>
    <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;pricing&quot;,&quot;context&quot;:&quot;global&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;pricing_link_global_navbar&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:ociubotaru/transcripts" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="m-cBS8mmYxcO1qu7ET5ZLJNwkUhvCPE2dQeVZYy59qVu4CMT3TKgCCq2FgOFoMq24Z64WF1ejTKOLO25FjWNZQ" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="ociubotaru/transcripts" data-current-org="" data-current-owner="ociubotaru" data-logged-in="false" data-copilot-chat-enabled="false" data-nl-search-enabled="false" data-retain-scroll-position="true">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
        
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>

            

              <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&amp;source=header-repo&amp;source_repo=ociubotaru%2Ftranscripts" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/ociubotaru/transcripts/blob/main/Stanford_ECON295%E2%A7%B8CS323_I_2024_I_The_Age_of_AI%2C_Eric_Schmidt.txt&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="1bf00d5193bb7a1f77e707a67a7be2224c17599bf8596cfea6fe6ecc85bca499" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>/blob/show;ref_cta:Sign up;ref_loc:header logged out&quot;}">
                Sign up
              </a>
          
        </p></div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[CSS Grid Areas (309 pts)]]></title>
            <link>https://ishadeed.com/article/css-grid-area/</link>
            <guid>41262691</guid>
            <pubDate>Fri, 16 Aug 2024 02:49:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ishadeed.com/article/css-grid-area/">https://ishadeed.com/article/css-grid-area/</a>, See on <a href="https://news.ycombinator.com/item?id=41262691">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <p>CSS Grid support has been widely available since March 2017 in all major browsers. Yet, here we are in 2024, and I still see few people using the grid template areas feature.</p>
<p>It’s no surprise that many avoid template areas as making sense of the grid is challenging enough. In this interactive article, I aim to shed light on this feature and, hopefully, convince you to use it more often. Once you see the simplicity and power of template areas, you may reach for them much more frequently.</p>
<h2 id="introduction">Introduction</h2>
<p>In the following example, we have a grid layout with three columns.</p>
<pre><code is:raw=""><span>.page</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr 1fr<span>;</span>
  <span>gap</span><span>:</span> 1rem<span>;</span>
<span>}</span></code></pre>
<p>If I need to position child items within the grid, I need to specify the line number for each item by using <code>grid-column</code>.</p>
<pre><code is:raw=""><span>.item-1</span> <span>{</span>
  <span>grid-column</span><span>:</span> 1 / 3<span>;</span>
<span>}</span>

<span>.item-2</span> <span>{</span>
  <span>grid-column</span><span>:</span> 3 / 4<span>;</span>
<span>}</span></code></pre>
<p>Here is the result.</p>
<astro-island uid="g5GxF" prefix="r1" component-url="/_astro/Basic.CKihaAnq.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Basic$5&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>At first glance, it seems fine and works as expected. But have you thought about how I came up with the line numbers? I don’t always like to open the DevTools and turn on the line numbers so I can place the items where I need them.</p>
<p>The line numbers look something like this:</p>
<astro-island uid="ZSQifk" prefix="r2" component-url="/_astro/Basic.CKihaAnq.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;lineNumbers&quot;:[0,true],&quot;itemsHidden&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Basic$5&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>You can’t see the line numbers until you inspect the element in the browser DevTools. Let’s take a quick quiz.</p>
<p>Consider the following CSS grid:</p>
<pre><code is:raw=""><span>.page</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr 1fr 1fr 1fr<span>;</span>
  <span>gap</span><span>:</span> 1rem<span>;</span>
<span>}</span></code></pre>
<p>Write the line numbers needed to place the <strong>second item in the last three columns</strong>.</p>
<p>⚠️ <strong>Don’t open the DevTools, guess it yourself.</strong></p>
<astro-island uid="Z1lCa6I" prefix="r3" component-url="/_astro/BasicQuiz.CFfQJB6l.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;lineNumbers&quot;:[0,false],&quot;quiz&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Basic$4&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>If you guessed it from the first time, it’s great. However, for me, I sometimes miss the correct line number and have to open the DevTools to get it right.</p>
<p>See the below example with the line numbers activated.</p>
<astro-island uid="1YF90B" prefix="r4" component-url="/_astro/BasicQuiz.CFfQJB6l.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;lineNumbers&quot;:[0,true],&quot;quiz&quot;:[0,true],&quot;controls&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Basic$4&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>Looking at the line numbers, it sounds easier, right? I agree too. This can become more challenging if we need to place both the columns and rows.</p>
<p>Let’s take it further.</p>
<p>In the following demo, we have a layout with 5 columns and 2 rows.</p>
<pre><code is:raw=""><span>.page</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr 1fr 1fr 1fr<span>;</span>
  <span>grid-template-rows</span><span>:</span> 1fr 1fr<span>;</span>
  <span>gap</span><span>:</span> 1rem<span>;</span>
<span>}</span></code></pre>
<p>Can you guess what’s the correct line numbers to place “Item 1” in the first three columns?</p>
<astro-island uid="Z9CIOx" prefix="r5" component-url="/_astro/BasicQuiz2.DaDDwMpV.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;items&quot;:[0,&quot;item1&quot;],&quot;actions&quot;:[0,true],&quot;lineNumbers&quot;:[0,false]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Basic$3&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>Cool, the next step is to position the second item in the last 3 columns. Try to guess the line numbers value.</p>
<astro-island uid="ZAinHB" prefix="r6" component-url="/_astro/BasicQuiz2.DaDDwMpV.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;items&quot;:[0,&quot;all&quot;],&quot;actions&quot;:[0,true],&quot;lineNumbers&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Basic$3&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>Good work! For me, dealing with line numbers is possible only if the DevTools are active. Oftentimes, my brain is handling lots of details while building a layout and “imagining” the line numbers isn’t one of them.</p>
<h2 id="css-named-grid-areas">CSS named grid areas</h2>
<p>In CSS grid, we can name each grid area and reference it throughout the CSS. Let’s take the following basic example.</p>
<h3 id="example-1-basic-problem">Example 1: Basic problem</h3>
<p>We have a two-column grid. I used <code>grid-template-areas</code> to define an area for each item I have.</p>
<pre><code is:raw=""><span>.page</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr<span>;</span>
  <span>grid-template-areas</span><span>:</span> <span>"item1 item2"</span><span>;</span>
  <span>gap</span><span>:</span> 1rem<span>;</span>
<span>}</span></code></pre>
<p>Then, I can map the names of each item, respectively:</p>
<pre><code is:raw=""><span>.item-1</span> <span>{</span>
  <span>grid-area</span><span>:</span> item1<span>;</span>
<span>}</span>

<span>.item-2</span> <span>{</span>
  <span>grid-area</span><span>:</span> item2<span>;</span>
<span>}</span></code></pre>
<p>By using a <code>grid-area</code>, it’s like mapping each element in the grid to its designated area. In the following example, see how each column is mapped to a grid area name.</p>
<picture> <source srcset="https://ishadeed.com/_astro/grid-area-mapping.CzqJmd_C_Bpty8.webp" type="image/webp"> <img src="https://ishadeed.com/_astro/grid-area-mapping.CzqJmd_C_1Jp2ST.png" alt="" width="1152" height="826" loading="lazy" decoding="async"> </picture>
<p>Don’t worry if it’s still not clear, I will explain it in more detail in the following examples.</p>
<h3 id="example-2-card-layout">Example 2: Card layout</h3>
<p>In the following example, we have a grid of 3 columns.</p>
<pre><code is:raw=""><span>.wrapper</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr 1fr<span>;</span>
  <span>grid-template-areas</span><span>:</span> <span>"featured featured article"</span><span>;</span>
  <span>gap</span><span>:</span> 1rem<span>;</span>
<span>}</span></code></pre>
<p>I mapped the named grid lines in a way that gives:</p>
<ul>
<li>2 columns for the featured article</li>
<li>1 column for the normal article</li>
</ul>
<p>Let’s suppose that we have a card component. We can place the card either in the “featured” or the “article” grid areas.</p>
<p>See the following demo and try to play with the toggles in the <code>grid-area</code>.</p>
<astro-island uid="15sMe" prefix="r7" component-url="/_astro/BasicQuiz3.Bmdsp7ve.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;items&quot;:[0,&quot;all&quot;],&quot;actions&quot;:[0,true],&quot;lineNumbers&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Basic$2&quot;,&quot;value&quot;:true}" await-children=""><div><p><span>featured</span><span>article</span></p><div><p>Grid template areas</p><p>Ahmad Shadeed</p></div></div><!--astro:end--></astro-island>
<p>Notice how the card changes its position and size? We are changing the line numbers by using the named <code>grid-area</code> only.</p>
<p>In the following sections, I will explain the grid area syntax in detail and then walk you through different examples and use cases.</p>
<h2 id="grid-template-area-rules">Grid template area rules</h2>
<h3 id="the-defined-area-should-be-like-a-rectangle">The defined area should be like a rectangle</h3>
<p>A defined area must have a rectangle-like shape in the code.</p>
<pre><code is:raw=""><span>/* This is invalid */</span>
<span>.layout</span> <span>{</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"header header"</span>
    <span>"sidebar main"</span>
    <span>"header footer"</span><span>;</span>
<span>}</span>

<span>/* This is valid */</span>
<span>.layout</span> <span>{</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"header header"</span>
    <span>"sidebar main"</span>
    <span>"sidebar footer"</span><span>;</span>
<span>}</span></code></pre>
<p>See the following figure:</p>
<picture> <source srcset="https://ishadeed.com/_astro/grid-areas-shape.DKYasFas_162HQ7.webp" type="image/webp"> <img src="https://ishadeed.com/_astro/grid-areas-shape.DKYasFas_27iOAR.png" alt="" width="1152" height="784" loading="lazy" decoding="async"> </picture>
<h3 id="all-areas-must-be-defined">All areas must be defined</h3>
<p>When using <code>grid-template-areas</code>, all areas must be defined even if you won’t need them all.</p>
<pre><code is:raw=""><span>/* This is invalid */</span>
<span>.layout</span> <span>{</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"header header"</span>
    <span>"sidebar main"</span>
    <span>"header"</span><span>;</span>
<span>}</span>

<span>/* This is valid */</span>
<span>.layout</span> <span>{</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"header header"</span>
    <span>"sidebar main"</span>
    <span>"sidebar footer"</span><span>;</span>
<span>}</span></code></pre>
<h2 id="grid-template-syntax">Grid template syntax</h2>
<p>To use CSS grid template areas, we need to define the grid areas via <code>grid-template-areas</code> property. The main things you need to know for now:</p>
<ul>
<li>It can take multiple area strings</li>
<li>One string means having a one-dimentional layout (column only)</li>
<li>Multiple area strings means having a multi-dimentional layout (column and rows)</li>
</ul>
<p>What I like about grid areas is that they provide us with a visualization of the grid in CSS.</p>
<h3 id="grid-area-syntax-example-1">Grid area syntax, example 1</h3>
<p>In this example, we have one-dimensional grid with two columns. The first one is fixed and the other is fluid to the available space.</p>
<pre><code is:raw=""><span>.element</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 200px 1fr<span>;</span>
  <span>grid-template-areas</span><span>:</span> <span>"aside main"</span><span>;</span>
  <span>gap</span><span>:</span> <span>var</span><span>(</span>--gutter-1<span>)</span><span>;</span>
<span>}</span></code></pre>
<p>See the following figure:</p>
<picture> <source srcset="https://ishadeed.com/_astro/grid-area-mapping-2.CSBgyYJV_Z2lfgb4.webp" type="image/webp"> <img src="https://ishadeed.com/_astro/grid-area-mapping-2.CSBgyYJV_1prVFl.png" alt="" width="1152" height="786" loading="lazy" decoding="async"> </picture>
<p>Once the template areas are defined, we can reference them in CSS and assign each named area to its designated element by using the <code>grid-area</code> property,</p>
<pre><code is:raw=""><span>.aside</span> <span>{</span>
  <span>grid-area</span><span>:</span> aside<span>;</span>
<span>}</span>

<span>.main</span> <span>{</span>
  <span>grid-area</span><span>:</span> main<span>;</span>
<span>}</span></code></pre>
<p>The above is a basic example that lays the foundation for the article. Keep reading to discover why named areas are powerful in the following examples.</p>
<h3 id="grid-area-syntax-example-2">Grid area syntax, example 2</h3>
<p>Building on the previous example, I need to add a footer to the grid layout. What should we do?</p>
<p>We can add another area string to the <code>grid-template-areas</code>.</p>
<blockquote><svg xmlns="http://www.w3.org/2000/svg" width="32" height="33" fill="none" viewBox="0 0 32 33"><g><rect width="32" height="32" y="0.527" fill="#D9BAF7" rx="16"></rect><g stroke="#7D45A7" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M16.25 9.527c-3.5 0-5.25 2.75-5.25 5.25 0 4 3 4.5 3 6v2.25a1 1 0 001 1h2.5a1 1 0 001-1v-2.25c0-1.5 3-2 3-6 0-2.5-1.75-5.25-5.25-5.25z"></path><path d="M14.25 21.527h4"></path></g></g></svg><p>When we define multiple area string values for grid template areas, implicit grid rows are created automatically.</p></blockquote>
<pre><code is:raw=""><span>.element</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 200px 1fr<span>;</span>
  <span>grid-template-areas</span><span>:</span> <span>"aside main"</span> <span>"footer footer"</span><span>;</span>
  <span>gap</span><span>:</span> <span>var</span><span>(</span>--gutter-1<span>)</span><span>;</span>
<span>}</span></code></pre>
<p>Try to visualize the grid based on the defined areas above. Can you guess it?</p>
<astro-island uid="ZTCBXH" prefix="r8" component-url="/_astro/Syntax1.CyKtt4on.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;items&quot;:[0,&quot;item1&quot;],&quot;actions&quot;:[0,true],&quot;lineNumbers&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Syntax1$1&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>When we add multiple area strings in <code>grid-template-areas</code>, it’s a good practice to stack them into multiple lines as it will help us to visualize them better.</p>
<pre><code is:raw=""><span>.element</span> <span>{</span>
  <span>/* other styles */</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"aside main"</span>
    <span>"footer footer"</span><span>;</span>
<span>}</span></code></pre>
<p>Each area string represents a row in the grid. Imagine it like a table.</p>
<h3 id="grid-area-syntax-example-3">Grid area syntax, example 3</h3>
<p>We can change the layout by just changing the <code>grid-template-areas</code> for the main wrapper. The following CSS is constant, we just need to change the grid area string.</p>
<pre><code is:raw=""><span>.aside</span> <span>{</span>
  <span>grid-area</span><span>:</span> aside<span>;</span>
<span>}</span>

<span>.main</span> <span>{</span>
  <span>grid-area</span><span>:</span> main<span>;</span>
<span>}</span>

<span>.footer</span> <span>{</span>
  <span>grid-area</span><span>:</span> footer<span>;</span>
<span>}</span></code></pre>
<p>See the following demo and try to change the layout.</p>
<astro-island uid="2kfTeB" prefix="r9" component-url="/_astro/Syntax2.B5LNLt7D.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;items&quot;:[0,&quot;item1&quot;],&quot;actions&quot;:[0,true],&quot;lineNumbers&quot;:[0,false]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Syntax1&quot;,&quot;value&quot;:true}" await-children=""><div><pre><p><span>.page</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>grid-template-areas</span><span>:</span><span> </span></p><p><span>      </span><span>"aside main"</span><span></span></p><p><span>      </span><span>"footer footer"</span><span>;</span><span></span></p><p><span></span><span>}</span></p></pre></div><!--astro:end--></astro-island>
<p>By changing the <code>grid-template-areas</code> string, the whole layout updates automatically, using the same unique <code>grid-area</code> names (aside, main, footer). <strong>This centralizes layout control, making adjustments easy and efficient</strong>.</p>
<p>In the following example, we can change the UI elements layout by just updating the <code>grid-template-areas</code> string(s).</p>
<p>Try to change the dropdown value and see what happens. Notice how it looks like a mapping for the layout.</p>
<astro-island uid="1Jsk4B" prefix="r10" component-url="/_astro/Syntax3.4Ut3QkxP.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Syntax3$1&quot;,&quot;value&quot;:true}" await-children=""><div><div><p>grid-template-areas:</p><p><span>"aside main"</span><span>"footer "</span></p></div><svg width="70" height="16" viewBox="0 0 70 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M69.7071 8.7071C70.0976 8.31658 70.0976 7.68341 69.7071 7.29289L63.3431 0.928927C62.9526 0.538402 62.3195 0.538402 61.9289 0.928927C61.5384 1.31945 61.5384 1.95262 61.9289 2.34314L67.5858 7.99999L61.9289 13.6568C61.5384 14.0474 61.5384 14.6805 61.9289 15.0711C62.3195 15.4616 62.9526 15.4616 63.3431 15.0711L69.7071 8.7071ZM8.74228e-08 9L69 8.99999L69 6.99999L-8.74228e-08 7L8.74228e-08 9Z" fill="black"></path></svg></div><!--astro:end--></astro-island>
<h3 id="empty-grid-cells">Empty grid cells</h3>
<p>We can define an empty cell by adding <strong>one or multiple dots</strong>. For example:</p>
<pre><code is:raw=""><span>.element</span> <span>{</span>
  <span>/* other styles */</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"aside main"</span>
    <span>"... footer"</span><span>;</span>
<span>}</span></code></pre>
<p>The dots ”…” here represent an empty grid cell. Let’s see that in action:</p>
<astro-island uid="1OoJVP" prefix="r11" component-url="/_astro/Syntax3.4Ut3QkxP.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;emptyCell&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Syntax3$1&quot;,&quot;value&quot;:true}" await-children=""><div><p>An example showing an empty grid cell</p><div><div><p>grid-template-areas:</p><p><span>"aside main"</span><span>"footer "</span></p></div><svg width="70" height="16" viewBox="0 0 70 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M69.7071 8.7071C70.0976 8.31658 70.0976 7.68341 69.7071 7.29289L63.3431 0.928927C62.9526 0.538402 62.3195 0.538402 61.9289 0.928927C61.5384 1.31945 61.5384 1.95262 61.9289 2.34314L67.5858 7.99999L61.9289 13.6568C61.5384 14.0474 61.5384 14.6805 61.9289 15.0711C62.3195 15.4616 62.9526 15.4616 63.3431 15.0711L69.7071 8.7071ZM8.74228e-08 9L69 8.99999L69 6.99999L-8.74228e-08 7L8.74228e-08 9Z" fill="black"></path></svg></div></div><!--astro:end--></astro-island>
<h2 id="css-grid-named-grid-lines">CSS grid named grid lines</h2>
<h3 id="intro">Intro</h3>
<p>When I first learned about named grid lines, I saw things like the following:</p>

<pre><code is:raw=""><span>.layout</span> <span>{</span>
  <span>grid-template-columns</span><span>:</span>  [full-start] 1fr
                          [content-start] 2fr
                          [content-end] 1fr [full-end]<span>;</span>
<span>}</span></code></pre>

<p>I didn’t understand if the <code>*-start</code> or <code>*-end</code> were custom names by the author, or maybe the browser generated them. Generally speaking, this syntax is confusing but it is helpful in some use-cases. I will try to explain it clearly in this section.</p>
<p>In the following example, we have a grid with three columns.</p>
<pre><code is:raw=""><span>.layout</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 2fr 1fr<span>;</span>
  <span>gap</span><span>:</span> 1rem<span>;</span>
<span>}</span></code></pre>
<p>In grid, the number of lines is equal to the columns plus one. If we have 3 columns, then we will have 4 grid lines.</p>
<p>See the following example:</p>
<astro-island uid="1Mw7C6" prefix="r12" component-url="/_astro/NamedLines.CyV1uxW7.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;lineNumbers&quot;:[0,true],&quot;itemsHiddenFull&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;NamedLines$1&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>Say that we want to position an item from <strong>line 2 to line 3</strong>. We can do that:</p>
<pre><code is:raw=""><span>.item</span> <span>{</span>
  <span>grid-column</span><span>:</span> 2 / 3<span>;</span>
<span>}</span></code></pre>
<astro-island uid="Z1fjRYm" prefix="r13" component-url="/_astro/NamedLines.CyV1uxW7.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;lineNumbers&quot;:[0,true],&quot;v1&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;NamedLines$1&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>With named grid lines, the idea is that <strong>we can name each grid line with a unique name</strong> instead of the default line numbers.</p>

<pre><code is:raw=""><span>.layout</span> <span>{</span>
  <span>/* Before */</span>
  <span>grid-template-columns</span><span>:</span>  1fr
                          2fr
                          1fr<span>;</span>

  <span>/* After */</span>
  <span>grid-template-columns</span><span>:</span>  [full-start] 1fr
                          [content-start] 2fr
                          [content-end] 1fr [full-end]<span>;</span>
<span>}</span></code></pre>

<astro-island uid="2rUT0D" prefix="r14" component-url="/_astro/NamedLines.CyV1uxW7.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;lineNames&quot;:[0,true],&quot;itemsHiddenFull&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;NamedLines$1&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<blockquote><svg xmlns="http://www.w3.org/2000/svg" width="32" height="33" fill="none" viewBox="0 0 32 33"><g><rect width="32" height="32" y="0.527" fill="#D9BAF7" rx="16"></rect><g stroke="#7D45A7" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M16.25 9.527c-3.5 0-5.25 2.75-5.25 5.25 0 4 3 4.5 3 6v2.25a1 1 0 001 1h2.5a1 1 0 001-1v-2.25c0-1.5 3-2 3-6 0-2.5-1.75-5.25-5.25-5.25z"></path><path d="M14.25 21.527h4"></path></g></g></svg><p>It's important to keep in mind that the line numbers are still there for you to use. Naming the lines doesn't replace the line numbers.</p></blockquote>
<p>Say that we want to position the item the same as we did in the previous demo, but with named grid lines.</p>
<pre><code is:raw=""><span>.item</span> <span>{</span>
  <span>grid-column</span><span>:</span> content-start / content-end<span>;</span>
<span>}</span></code></pre>
<p>Sounds clearer, right?</p>
<astro-island uid="2uETbu" prefix="r15" component-url="/_astro/NamedLines.CyV1uxW7.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;lineNames&quot;:[0,true],&quot;v2&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;NamedLines$1&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>Maybe we want to place it on one of the sides.</p>
<pre><code is:raw=""><span>.item</span> <span>{</span>
  <span>grid-column</span><span>:</span> full-start / content-end<span>;</span>
<span>}</span></code></pre>
<p>In the following demo, you can toggle the line numbers on and off. Try it yourself and see what happens.</p>
<astro-island uid="1EMr4k" prefix="r16" component-url="/_astro/NamedLines.CyV1uxW7.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;lineNames&quot;:[0,true],&quot;v3&quot;:[0,true],&quot;switchLines&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;NamedLines$1&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>If it’s still not clear yet, don’t worry. I will explain the concept below in another way.</p>
<h3 id="grid-tracks">Grid tracks</h3>
<p>In CSS grid, we have a term called “track size”, which represents the size of the column or row. See the following example:</p>
<pre><code is:raw=""><span>.layout</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr<span>;</span>
<span>}</span></code></pre>
<p>The <code>1fr</code> and <code>1fr</code> are track sizes. <strong>With named grid lines, we care about naming the lines around those tracks</strong>.</p>
<blockquote><svg xmlns="http://www.w3.org/2000/svg" width="32" height="33" fill="none" viewBox="0 0 32 33"><g><rect width="32" height="32" y="0.527" fill="#D9BAF7" rx="16"></rect><g stroke="#7D45A7" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M16.25 9.527c-3.5 0-5.25 2.75-5.25 5.25 0 4 3 4.5 3 6v2.25a1 1 0 001 1h2.5a1 1 0 001-1v-2.25c0-1.5 3-2 3-6 0-2.5-1.75-5.25-5.25-5.25z"></path><path d="M14.25 21.527h4"></path></g></g></svg><p>Remember that we are naming grid lines.</p></blockquote>
<p>See the following figure:</p>
<picture> <source srcset="https://ishadeed.com/_astro/named-grid-lines-tracks-1.BgbxLpfM_1cO1tG.png" type="image/png"> <img src="https://ishadeed.com/_astro/named-grid-lines-tracks-1.BgbxLpfM_1cO1tG.png" alt="" width="1152" height="758" loading="lazy" decoding="async"> </picture>
<p>Notice how the line numbers are around the tracks. We have two tracks, so we have three lines.</p>
<p>In this example, we have an aside and a main section.</p>

<pre><code is:raw=""><span>.layout</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span>
          [aside-start] 200px [aside-end main-start] 1fr [main-end]<span>;</span>
<span>}</span></code></pre>

<p>See the following figure:</p>
<picture> <source srcset="https://ishadeed.com/_astro/named-grid-lines-tracks-2.CcBJqr7g_1fjc3j.png" type="image/png"> <img src="https://ishadeed.com/_astro/named-grid-lines-tracks-2.CcBJqr7g_1fjc3j.png" alt="" width="1152" height="758" loading="lazy" decoding="async"> </picture>
<p>The line name must be written before the track size. Notice that the values between the brackets can share multiple line names. In our example below, the line <code>aside-end</code> is the same as the <code>main-start</code>.</p>
<astro-island uid="Z1eVqms" prefix="r17" component-url="/_astro/NamedLines2.Cve_-f7R.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;lineNames&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;NamedLines&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>What’s great about using named lines like this is that we can position the items like this:</p>
<pre><code is:raw=""><span>.aside</span> <span>{</span>
  <span>grid-column</span><span>:</span> aside-start / aside-end<span>;</span>
<span>}</span></code></pre>
<p>or this:</p>
<pre><code is:raw=""><span>.aside</span> <span>{</span>
  <span>grid-column</span><span>:</span> aside<span>;</span>
<span>}</span></code></pre>
<p>When defining the start and end of a line like <code>aside-start</code> and <code>aside-end</code>, this is called implicit line naming. The browser will take them and allow us to use the area (e.g: <code>grid-column: aside</code>);</p>
<p>Also, we can take this further and have two rows instead of one.</p>

<pre><code is:raw=""><span>.layout</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span>
          [aside-start] 200px [aside-end main-start] 1fr [main-end]<span>;</span>
  <span>grid-template-rows</span><span>:</span>
          [aside-start main-start] auto [aside-end main-end footer-start]
          40px [footer-end]<span>;</span>
<span>}</span></code></pre>

<picture> <source srcset="https://ishadeed.com/_astro/named-grid-lines-tracks-3.ClT-4BSJ_2fn0rs.png" type="image/png"> <img src="https://ishadeed.com/_astro/named-grid-lines-tracks-3.ClT-4BSJ_2fn0rs.png" alt="" width="1518" height="852" loading="lazy" decoding="async"> </picture>
<blockquote><svg xmlns="http://www.w3.org/2000/svg" width="32" height="33" fill="none" viewBox="0 0 32 33"><g><rect width="32" height="32" y="0.527" fill="#D9BAF7" rx="16"></rect><g stroke="#7D45A7" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M16.25 9.527c-3.5 0-5.25 2.75-5.25 5.25 0 4 3 4.5 3 6v2.25a1 1 0 001 1h2.5a1 1 0 001-1v-2.25c0-1.5 3-2 3-6 0-2.5-1.75-5.25-5.25-5.25z"></path><path d="M14.25 21.527h4"></path></g></g></svg><p>Defining the *-start / *-end names for lines will generate an implicit grid areas.</p></blockquote>
<p>As a result, when using the custom indents (<code>[*-start]</code> or <code>[*-end]</code>), it’s the same as the following CSS:</p>

<pre><code is:raw=""><span>.layout</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 200px 1fr<span>;</span>
  <span>grid-template-rows</span><span>:</span> auto 40px<span>;</span>
  <span>grid-template-areas</span><span>:</span> <span>"aside main"</span>
                      <span>"footer footer"</span>
<span>}</span></code></pre>

<p>Using <code>grid-template-areas</code> is easier for me, but we might need to use line names in some use cases (I will show examples in the use cases section).</p>
<h3 id="named-grid-lines-are-optional">Named grid lines are optional</h3>
<p>It’s not mandatory to name all lines. We can name only the lines we care about the most in our layout.</p>
<p>In this example, I named only the lines for the second column.</p>

<pre><code is:raw=""><span>.layout</span> <span>{</span>
  <span>grid-template-columns</span><span>:</span>  1fr
                          [content-start] 2fr
                          [content-end] 1fr<span>;</span>
<span>}</span></code></pre>

<p>Here is an example that shows it in action:</p>
<astro-island uid="Zwln7c" prefix="r18" component-url="/_astro/NamedLines.CyV1uxW7.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;lineNames&quot;:[0,true],&quot;v2&quot;:[0,true],&quot;switchLines&quot;:[0,true],&quot;optionalLines&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;NamedLines$1&quot;,&quot;value&quot;:true}" await-children=""><div><p>The dimmed line numbers are named.</p></div><!--astro:end--></astro-island>
<h3 id="mixing-line-numbers-and-names">Mixing line numbers and names</h3>
<p>We can mix line numbers and names when placing a grid item. In the following example, I placed the item from line 1 to the line “content-end”.</p>
<pre><code is:raw=""><span>.item</span> <span>{</span>
  <span>grid-column</span><span>:</span> 1 / content-end<span>;</span>
<span>}</span></code></pre>
<p>See it in action:</p>
<astro-island uid="1yQ42X" prefix="r19" component-url="/_astro/NamedLines.CyV1uxW7.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;lineNames&quot;:[0,true],&quot;v4&quot;:[0,true],&quot;switchLines&quot;:[0,true],&quot;optionalLines&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;NamedLines$1&quot;,&quot;value&quot;:true}" await-children=""><div><p>The dimmed line numbers are named.</p></div><!--astro:end--></astro-island>
<p>I like this flexibility in CSS grid. Being able to choose whatever the solution or way of working that suits you is a blessing.</p>
<h2 id="use-cases-for-grid-template-areas">Use cases for grid template areas</h2>
<h3 id="reversing-grid-direction">Reversing Grid Direction</h3>
<p>Say that we have a card component and we want to flip the direction of the layout. In flexbox, this is fairly easy as we just need to use <code>flex-direction: row-reverse</code>.</p>
<p>In CSS grid, we need to change each item’s placement in the grid.</p>
<p>Consider the following example.</p>
<pre><code is:raw=""><span>.card</span> <span>{</span>
  <span>--cols</span><span>:</span> 150px 1fr<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> <span>var</span><span>(</span>--cols<span>)</span><span>;</span>
<span>}</span>

<span>.card__thumb</span> <span>{</span>
  <span>grid-column</span><span>:</span> 1 / 2<span>;</span>
<span>}</span>

<span>.card__content</span> <span>{</span>
  <span>grid-column</span><span>:</span> 2 / 3<span>;</span>
<span>}</span></code></pre>
<p>It looks like this:</p>
<astro-island uid="1KjY9l" prefix="r20" component-url="/_astro/FlipCard.DA1KbYIv.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;FlipCard$1&quot;,&quot;value&quot;:true}" await-children=""><div><p><img src="https://ishadeed.com/assets/grid-named-areas/shawarma.jpg" alt=""></p><div><h3>Wandering in nature. Life is cool</h3><p>A bit of desc</p></div></div><!--astro:end--></astro-island>
<p>If we want to flip the layout, we will need to:</p>
<ul>
<li>Change the columns definition.</li>
<li>Change the <code>grid-column</code> for each child element.</li>
</ul>
<pre><code is:raw=""><span>.card--flip</span> <span>{</span>
  <span>--cols</span><span>:</span> 1fr 150px<span>;</span>
<span>}</span>

<span>.card__thumb</span> <span>{</span>
  <span>grid-column</span><span>:</span> 2 / 3<span>;</span>
<span>}</span>

<span>.card__content</span> <span>{</span>
  <span>grid-column</span><span>:</span> 1 / 2<span>;</span>
  <span>grid-row</span><span>:</span> 1<span>;</span>
<span>}</span></code></pre>
<p>And here is the result:</p>
<div><p><img src="https://ishadeed.com/assets/grid-named-areas/shawarma.jpg" alt=""></p><div><h3>Wandering in nature. Life is cool</h3><p>A bit of desc</p></div></div>
<p>We can do better with by using named grid areas. In the current solution, we have to change the <code>grid-column</code> start and end numbers for each child item.</p>
<pre><code is:raw=""><span>.card</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 150px 1fr<span>;</span>
  <span>grid-template-areas</span><span>:</span> <span>"thumb content"</span><span>;</span>
<span>}</span>

<span>.card__thumb</span> <span>{</span>
  <span>grid-area</span><span>:</span> thumb<span>;</span>
<span>}</span>

<span>.card__content</span> <span>{</span>
  <span>grid-area</span><span>:</span> content<span>;</span>
<span>}</span></code></pre>
<p>To flip the layout, all we need to do is:</p>
<pre><code is:raw=""><span>.card--flip</span> <span>{</span>
  <span>grid-template-columns</span><span>:</span> 1fr 150px<span>;</span>
  <span>grid-template-areas</span><span>:</span> <span>"content thumb"</span><span>;</span>
<span>}</span></code></pre>
<p><strong>We don’t have to think about the line numbers</strong>. This is an easier naming for the web designer who is building the layout.</p>
<p>Try the following demo:</p>
<astro-island uid="Z1lHivo" prefix="r22" component-url="/_astro/FlipCard.DA1KbYIv.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;gridArea&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;FlipCard$1&quot;,&quot;value&quot;:true}" await-children=""><div><div><p><img src="https://ishadeed.com/assets/grid-named-areas/shawarma.jpg" alt=""></p><div><h3>Wandering in nature. Life is cool</h3><p>A bit of desc</p></div></div><div><pre><p><span>.card</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>grid-template-columns</span><span>:</span><span> </span><span>150</span><span>px</span><span> </span><span>1</span><span>fr</span><span>;</span><span> </span></p><p><span>  </span><span>grid-template-areas</span><span>:</span><span> </span><span>"image content"</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p><p><span></span><span>.card-image</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>grid-area</span><span>:</span><span> image</span><span>;</span><span></span></p><p><span></span><span>}</span><span></span></p><p><span></span><span>.card-content</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>grid-area</span><span>:</span><span> content</span><span>;</span><span></span></p><p><span></span><span>}</span></p></pre></div></div><!--astro:end--></astro-island>
<p>We only change the columns and named areas order. Which is easier to edit, using named areas or line numbers?</p>
<p>Even better, we can use the <code>grid-template</code> shorthand property, too.</p>
<pre><code is:raw=""><span>.card--flip</span> <span>{</span>
  <span>grid-template</span><span>:</span> <span>"content image"</span> / 1fr 150px<span>;</span>
<span>}</span></code></pre>
<p>It’s up to you on using the shorthand or not, but I prefer the longhand version as it’s more clear to scan.</p>

<p>In a header layout, we can use grid areas to define the layout.</p>
<p>In the following design,</p>
<picture> <source srcset="https://ishadeed.com/_astro/header-layout-1.C0A_BFo3_Z1MpCvQ.webp" type="image/webp"> <img src="https://ishadeed.com/_astro/header-layout-1.C0A_BFo3_Z7lbPE.png" alt="" width="1152" height="580" loading="lazy" decoding="async"> </picture>
<p>In CSS, I created a grid with three equal-size columns.</p>
<pre><code is:raw=""><span>.header</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr 1fr<span>;</span>
<span>}</span></code></pre>
<p>If we want to place them using line numbers, it will be like this:</p>
<pre><code is:raw=""><span>.logo</span> <span>{</span>
  <span>grid-column</span><span>:</span> 1 / 2<span>;</span>
<span>}</span>

<span>.nav</span> <span>{</span>
  <span>grid-column</span><span>:</span> 2 / 3<span>;</span>
<span>}</span>

<span>.actions</span> <span>{</span>
  <span>grid-column</span><span>:</span> 3 / 4<span>;</span>
<span>}</span></code></pre>
<p>Here is the result:</p>
<astro-island uid="2YFzx" prefix="r23" component-url="/_astro/Header.j8aAMTsK.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;resizing&quot;:[0,false],&quot;options&quot;:[0,false],&quot;activeOption&quot;:[0,&quot;option1&quot;]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Header$2&quot;,&quot;value&quot;:true}" await-children=""><div><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio placeat, ipsum suscipit reprehenderit nobis iusto omnis vero tempore officia accusantium minima repellendus. Blanditiis voluptatum accusantium ut et architecto ab dolorum.</p><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis nesciunt perspiciatis ratione sapiente est sunt pariatur hic? Accusantium asperiores quam nihil dicta tempora ipsa cum, non cumque a minus facere.</p></div><!--astro:end--></astro-island>
<p>This works fine. Can we explore how to make it responsive by just using grid areas? First, I need to define each grid area for the child items.</p>
<pre><code is:raw=""><span>.header</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr 1fr<span>;</span>
  <span>grid-template-areas</span><span>:</span> <span>"logo nav actions"</span><span>;</span>
<span>}</span>

<span>.logo</span> <span>{</span>
  <span>grid-area</span><span>:</span> logo<span>;</span>
<span>}</span>

<span>.nav</span> <span>{</span>
  <span>grid-area</span><span>:</span> nav<span>;</span>
<span>}</span>

<span>.actions</span> <span>{</span>
  <span>grid-area</span><span>:</span> actions<span>;</span>
<span>}</span></code></pre>
<p>Here is the result. It looks the same.</p>
<astro-island uid="18E7Wf" prefix="r24" component-url="/_astro/Header.j8aAMTsK.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;resizing&quot;:[0,false],&quot;options&quot;:[0,false],&quot;activeOption&quot;:[0,&quot;option1Rwd&quot;]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Header$2&quot;,&quot;value&quot;:true}" await-children=""><div><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio placeat, ipsum suscipit reprehenderit nobis iusto omnis vero tempore officia accusantium minima repellendus. Blanditiis voluptatum accusantium ut et architecto ab dolorum.</p><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis nesciunt perspiciatis ratione sapiente est sunt pariatur hic? Accusantium asperiores quam nihil dicta tempora ipsa cum, non cumque a minus facere.</p></div><!--astro:end--></astro-island>
<p>We can make it responsive by changing the <code>grid-templare-areas</code> value. Let’s start with the smallest size.</p>
<pre><code is:raw=""><span>/* Default layout */</span>
<span>.header</span> <span>{</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"logo logo actions"</span>
    <span>"nav nav nav"</span><span>;</span>
<span>}</span></code></pre>
<astro-island uid="rb6lV" prefix="r25" component-url="/_astro/Header.j8aAMTsK.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;options&quot;:[0,false],&quot;activeOption&quot;:[0,&quot;option1Rwd&quot;],&quot;size&quot;:[0,&quot;small&quot;]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Header$2&quot;,&quot;value&quot;:true}" await-children=""><div><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio placeat, ipsum suscipit reprehenderit nobis iusto omnis vero tempore officia accusantium minima repellendus. Blanditiis voluptatum accusantium ut et architecto ab dolorum.</p><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis nesciunt perspiciatis ratione sapiente est sunt pariatur hic? Accusantium asperiores quam nihil dicta tempora ipsa cum, non cumque a minus facere.</p></div><!--astro:end--></astro-island>
<p>And the medium size:</p>
<pre><code is:raw=""><span><span>@media</span> <span>(</span><span>min-width</span><span>:</span> 380px<span>)</span></span> <span>{</span>
  <span>.header</span> <span>{</span>
    <span>grid-template-areas</span><span>:</span>
      <span>"logo nav nav"</span>
      <span>"logo actions actions"</span><span>;</span>
  <span>}</span>

  <span>.nav</span> <span>{</span>
    <span>justify-self</span><span>:</span> end<span>;</span>
  <span>}</span>
<span>}</span></code></pre>
<astro-island uid="Z2iWln3" prefix="r26" component-url="/_astro/Header.j8aAMTsK.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;options&quot;:[0,false],&quot;activeOption&quot;:[0,&quot;option1Rwd&quot;],&quot;size&quot;:[0,&quot;medium&quot;]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Header$2&quot;,&quot;value&quot;:true}" await-children=""><div><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio placeat, ipsum suscipit reprehenderit nobis iusto omnis vero tempore officia accusantium minima repellendus. Blanditiis voluptatum accusantium ut et architecto ab dolorum.</p><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis nesciunt perspiciatis ratione sapiente est sunt pariatur hic? Accusantium asperiores quam nihil dicta tempora ipsa cum, non cumque a minus facere.</p></div><!--astro:end--></astro-island>
<p>The largest size:</p>
<pre><code is:raw=""><span><span>@media</span> <span>(</span><span>min-width</span><span>:</span> 900px<span>)</span></span> <span>{</span>
  <span>.header</span> <span>{</span>
    <span>grid-template-areas</span><span>:</span> <span>"logo nav actions"</span><span>;</span>
  <span>}</span>
<span>}</span></code></pre>
<p>Have you noticed how clear it is to use grid area? It’s like a mapping of the UI right in the CSS code.</p>
<astro-island uid="mxS9L" prefix="r27" component-url="/_astro/Header.j8aAMTsK.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;options&quot;:[0,false],&quot;activeOption&quot;:[0,&quot;option1Rwd&quot;],&quot;size&quot;:[0,&quot;large&quot;]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Header$2&quot;,&quot;value&quot;:true}" await-children=""><div><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio placeat, ipsum suscipit reprehenderit nobis iusto omnis vero tempore officia accusantium minima repellendus. Blanditiis voluptatum accusantium ut et architecto ab dolorum.</p><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis nesciunt perspiciatis ratione sapiente est sunt pariatur hic? Accusantium asperiores quam nihil dicta tempora ipsa cum, non cumque a minus facere.</p></div><!--astro:end--></astro-island>
<p>In the following demo, I highlighted the <strong>currently active grid area</strong>. Try to resize and see how the layout changes.</p>
<astro-island uid="og7wi" prefix="r28" component-url="/_astro/Header.j8aAMTsK.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;options&quot;:[0,false],&quot;activeOption&quot;:[0,&quot;option1Rwd&quot;],&quot;showAreas&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Header$2&quot;,&quot;value&quot;:true}" await-children=""><div><div><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio placeat, ipsum suscipit reprehenderit nobis iusto omnis vero tempore officia accusantium minima repellendus. Blanditiis voluptatum accusantium ut et architecto ab dolorum.</p><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis nesciunt perspiciatis ratione sapiente est sunt pariatur hic? Accusantium asperiores quam nihil dicta tempora ipsa cum, non cumque a minus facere.</p></div><div><div><pre><p><span>grid-template-areas</span><span>:</span><span> </span></p><p><span>    </span><span>"logo logo actions"</span><span></span></p><p><span>    </span><span>"nav nav nav"</span><span>;</span></p></pre></div><div><pre><p><span>grid-template-areas</span><span>:</span><span> </span></p><p><span>    </span><span>"logo nav nav"</span><span></span></p><p><span>    </span><span>"logo actions action"</span><span>;</span></p></pre></div><div><pre><p><span>grid-template-areas</span><span>:</span><span> </span></p><p><span>    </span><span>"logo nav actions"</span><span>;</span></p></pre></div></div></div><!--astro:end--></astro-island>
<astro-island uid="og7wi" prefix="r29" component-url="/_astro/Header.j8aAMTsK.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;options&quot;:[0,false],&quot;activeOption&quot;:[0,&quot;option1Rwd&quot;],&quot;showAreas&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Header$2&quot;,&quot;value&quot;:true}" await-children=""><div><div><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio placeat, ipsum suscipit reprehenderit nobis iusto omnis vero tempore officia accusantium minima repellendus. Blanditiis voluptatum accusantium ut et architecto ab dolorum.</p><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis nesciunt perspiciatis ratione sapiente est sunt pariatur hic? Accusantium asperiores quam nihil dicta tempora ipsa cum, non cumque a minus facere.</p></div><div><div><pre><p><span>grid-template-areas</span><span>:</span><span> </span></p><p><span>    </span><span>"logo logo actions"</span><span></span></p><p><span>    </span><span>"nav nav nav"</span><span>;</span></p></pre></div><div><pre><p><span>grid-template-areas</span><span>:</span><span> </span></p><p><span>    </span><span>"logo nav nav"</span><span></span></p><p><span>    </span><span>"logo actions action"</span><span>;</span></p></pre></div><div><pre><p><span>grid-template-areas</span><span>:</span><span> </span></p><p><span>    </span><span>"logo nav actions"</span><span>;</span></p></pre></div></div></div><!--astro:end--></astro-island>
<p>As a bonus, here is a demo with 5 different options for the layout. All I need to change is the <code>grid-template-areas</code> definition and the rest will just work.</p>
<p>Change the active option to see it yourself.</p>
<p><strong>Note: this only works on large viewports.</strong></p>
<astro-island uid="ZHCEeV" prefix="r30" component-url="/_astro/Header.j8aAMTsK.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;options&quot;:[0,true],&quot;activeOption&quot;:[0,&quot;option1&quot;],&quot;showAreas&quot;:[0,false],&quot;resizing&quot;:[0,false]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Header$2&quot;,&quot;value&quot;:true}" await-children=""><div><div><p><label for=":r30R5:">Option 1</label></p><p><label for=":r30R9:">Option 2</label></p><p><label for=":r30Rd:">Option 3</label></p><p><label for=":r30Rh:">Option 4</label></p><p><label for=":r30Rl:">Option 5</label></p></div><div><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio placeat, ipsum suscipit reprehenderit nobis iusto omnis vero tempore officia accusantium minima repellendus. Blanditiis voluptatum accusantium ut et architecto ab dolorum.</p><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis nesciunt perspiciatis ratione sapiente est sunt pariatur hic? Accusantium asperiores quam nihil dicta tempora ipsa cum, non cumque a minus facere.</p></div></div><!--astro:end--></astro-island>
<p>Cool, right?</p>
<h3 id="editorial-layout-example-1">Editorial layout: example 1</h3>
<p>In this example, we have a layout that contains different types of content like a title, text, and an image.</p>
<p>By using CSS grid and <code>grid-areas</code> we can easily define the layout and change it across different viewport sizes.</p>
<p>In this variation, I defined the columns and rows by just using <code>grid-template-areas</code> and the browser will do the rest.</p>
<pre><code is:raw=""><span>.section</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-areas</span><span>:</span>
    <span>". title title"</span>
    <span>"thumb content content"</span><span>;</span>
  <span>gap</span><span>:</span> 1rem<span>;</span>
<span>}</span></code></pre>
<p>Notice how the “dot” represents an empty space on the left side of the title. That “dot” is called a <strong>null cell token</strong> and is part of the CSS grid spec.</p>
<astro-island uid="QWpog" prefix="r31" component-url="/_astro/PageLayout.CFWA-gwc.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;PageLayout$1&quot;,&quot;value&quot;:true}" await-children=""><div><p>Shawarma Wrap with Homemade Bread</p><div><p>Enjoy the delightful flavors of Middle Eastern cuisine with our step-by-step recipe for Shawarma Wrap with Homemade Bread. Whether you're craving a hearty meal or planning a gathering with friends, this dish is sure to impress. </p><p>The combination of tender, marinated meat wrapped in soft homemade bread, complemented by fresh vegetables and a tangy sauce</p></div><p><img width="180" height="137" loading="lazy" src="https://ishadeed.com/assets/grid-named-areas/shawarma.jpg" alt=""></p></div><!--astro:end--></astro-island>
<h3 id="editorial-layout-example-2">Editorial layout: example 2</h3>
<p>In this example, I took a look at time.com and found out that they are using CSS grid areas to handle the section layout. I will try to explain it in this section with a few modifications.</p>
<p>See the following figure.</p>
<picture> <source srcset="https://ishadeed.com/_astro/editorial-2-1.Gl1dO1cd_1vmb8L.webp" type="image/webp"> <img src="https://ishadeed.com/_astro/editorial-2-1.Gl1dO1cd_Vhrb9.png" alt="" width="1176" height="660" loading="lazy" decoding="async"> </picture>
<pre><code is:raw=""><span>.featured-section</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-areas</span><span>:</span>
    <span>". feature most-read ."</span>
    <span>". secondary most-read ."</span><span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr <span>minmax</span><span>(</span>auto<span>,</span> 57.313rem<span>)</span> <span>minmax</span><span>(</span>12rem<span>,</span> 18.75rem<span>)</span> 1fr<span>;</span>
  <span>grid-template-rows</span><span>:</span> <span>minmax</span><span>(</span>auto<span>,</span> 25rem<span>)</span> 1fr<span>;</span>
<span>}</span></code></pre>
<p>To focus on the main layout implementation, the following demos will only include the main layout and I won’t explain about coding the inner components as they are out of the scope of the article.</p>
<p>A few things to keep an eye on:</p>
<ul>
<li>There is an empty column on the start and end of the grid, mainly to work as a gap on both sides.</li>
<li>Not sure of the usage of <code>minmax()</code> for both the column and rows. The layout switches to the mobile design very early but I’ll keep them for now.</li>
<li>There is no need for <code>grid-template-rows</code> as we can define them in the grid areas definition.</li>
</ul>
<p>Let’s build the grid skeleton with grid areas!</p>
<astro-island uid="1Q7KHK" prefix="r32" component-url="/_astro/PageLayout2.D0tZEFVm.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;PageLayout&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>Now that we have the skeleton, let’s see how to make the section responsive by changing the columns and areas definition.</p>

<pre><code is:raw=""><span>.featured-section </span><span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 32px 1fr 32px<span>;</span>
  <span>grid-template-areas</span><span>:</span>
    <span>". feature ."</span>
    <span>". secondary ."</span>
    <span>". most-read ."</span><span>;</span>
  <span>gap</span><span>:</span> 1rem<span>;</span>

  <span><span>@media</span> <span>(</span><span>min-width</span><span>:</span> 500px<span>)</span></span> <span>{</span>
    <span>grid-template-columns</span><span>:</span> 32px <span>minmax</span><span>(</span>auto<span>,</span> 57.313rem<span>)</span> <span>minmax</span><span>(</span>90px<span>,</span> 130px<span>)</span> 32px<span>;</span>

    <span>grid-template-areas</span><span>:</span>
      <span>". feature feature ."</span>
      <span>". secondary most-read ."</span><span>;</span>
  <span>}</span>

  <span><span>@media</span> <span>(</span><span>min-width</span><span>:</span> 900px<span>)</span></span> <span>{</span>
    <span>grid-template-areas</span><span>:</span>
      <span>". feature most-read ."</span>
      <span>". secondary most-read ."</span><span>;</span>
  <span>}</span>
<span>}</span></code></pre>

<p>See the demo below and try to resize the window:</p>
<astro-island uid="Z21VEdI" prefix="r33" component-url="/_astro/PageLayout2.D0tZEFVm.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;responsive&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;PageLayout&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<h3 id="threads-app-post">Threads app post</h3>
<p>While reviewing how the CSS is written on <a href="https://ishadeed.com/article/threads-app-css/">Threads app by Meta</a>, I noticed an interesting use of CSS grid.</p>
<pre><code is:raw=""><span>.post</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 48px <span>minmax</span><span>(</span>0<span>,</span> 1fr<span>)</span><span>;</span>
  <span>grid-template-rows</span><span>:</span> 21px 19px max-content max-content<span>;</span>
<span>}</span></code></pre>
<astro-island uid="Z1tgAMR" prefix="r34" component-url="/_astro/ThreadsPost.DdZx2VIR.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;FlipCard&quot;,&quot;value&quot;:true}" await-children=""><div><p><img src="https://ishadeed.com/assets/shadeed.jpg" alt=""></p><div><p>This is my first time trying Threads. It's cool!</p></div></div><!--astro:end--></astro-island>
<p>To place a grid item, the team used line numbers. Here is an example:</p>
<pre><code is:raw=""><span>.postBody</span> <span>{</span>
  <span>grid-column-start</span><span>:</span> 2<span>;</span>
  <span>grid-row-start</span><span>:</span> 2<span>;</span>
  <span>grid-row-end</span><span>:</span> span 3<span>;</span>
<span>}</span></code></pre>
<p>The post component has multiple variations. We can use <code>grid-template-areas</code> to define each one. For me, this is easier.</p>
<p>Here is how to do it in CSS:</p>
<pre><code is:raw=""><span>.post</span> <span>{</span>
  <span>/* Other styles */</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"avatar header"</span>
    <span>"avatar body"</span>
    <span>". body"</span>
    <span>". footer"</span><span>;</span>
<span>}</span>

<span>.post--reply</span> <span>{</span>
  <span>grid-template-rows</span><span>:</span> 40px max-content max-content<span>;</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"avatar header"</span>
    <span>"body body"</span>
    <span>"body body"</span>
    <span>"footer footer"</span><span>;</span>
<span>}</span>

<span>.post--nested</span> <span>{</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"avatar header"</span>
    <span>"avatar body"</span>
    <span>"line body"</span>
    <span>"footer footer"</span><span>;</span>
<span>}</span></code></pre>
<p>Play with the variations in the following interactive demo.</p>
<astro-island uid="Z9qw41" prefix="r35" component-url="/_astro/ThreadsPost.DdZx2VIR.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;options&quot;:[0,true],&quot;mock&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;FlipCard&quot;,&quot;value&quot;:true}" await-children=""><div><div><p><img src="https://ishadeed.com/assets/shadeed.jpg" alt=""></p><div><p>This is my first time trying Threads. It's cool!</p></div></div><svg width="16" height="32" viewBox="0 0 16 32" fill="none" xmlns="http://www.w3.org/2000/svg" style="opacity:0;transform:scale(0.5)"><path d="M7.29289 31.7071C7.68342 32.0976 8.31658 32.0976 8.70711 31.7071L15.0711 25.3431C15.4616 24.9526 15.4616 24.3195 15.0711 23.9289C14.6805 23.5384 14.0474 23.5384 13.6569 23.9289L8 29.5858L2.34314 23.9289C1.95262 23.5384 1.31946 23.5384 0.928931 23.9289C0.538407 24.3195 0.538407 24.9526 0.928931 25.3431L7.29289 31.7071ZM7 -4.37114e-08L7 31L9 31L9 4.37114e-08L7 -4.37114e-08Z" fill="black"></path></svg><div><p>This is my first time trying Threads. It's cool!</p></div></div><!--astro:end--></astro-island>
<h3 id="overlapping-items-with-grid-areas">Overlapping items with grid areas</h3>
<p>When using <code>grid-template-areas</code>, we can place items in rectangular shapes. Consider the following example:</p>
<pre><code is:raw=""><span>.layout</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr fr<span>;</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"card tag tag"</span>
    <span>"title title card"</span><span>;</span>
<span>}</span></code></pre>
<p>In the example, I used <code>card</code> two times. <strong>This is invalid</strong> and will break the grid. The value must be similar to a rectangular shape.</p>
<p>Here is a visual that shows what I mean by a <strong>rectangular shape</strong>.</p>
<picture> <source srcset="https://ishadeed.com/_astro/grid-areas-shape.DKYasFas_162HQ7.webp" type="image/webp"> <img src="https://ishadeed.com/_astro/grid-areas-shape.DKYasFas_27iOAR.png" alt="" width="1152" height="784" loading="lazy" decoding="async"> </picture>
<p>What to do then? Well, we can define a new area name and use it to place both the column and row for the item we need.</p>
<p>See the following example where we have a card component.</p>
<astro-island uid="Z2lX4lE" prefix="r36" component-url="/_astro/Overlapping.BBBEvm0a.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;ArticleLayout2&quot;,&quot;value&quot;:true}" await-children=""><div><p><img src="https://ishadeed.com/assets/grid-named-areas/bread.jpg" alt=""></p><p><span>Baking</span></p><p><span>Thyme Bread with Cheese and Olives</span></p></div><!--astro:end--></astro-island>
<pre><code is:raw=""><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>card<span>"</span></span><span>&gt;</span></span>
  <span><span><span>&lt;</span>img</span> <span>class</span><span><span>=</span><span>"</span>thumb<span>"</span></span> <span>src</span><span><span>=</span><span>"</span>thumb.jpg<span>"</span></span> <span>alt</span><span><span>=</span><span>"</span><span>"</span></span> <span>/&gt;</span></span>
  <span><span><span>&lt;</span>h3</span> <span>class</span><span><span>=</span><span>"</span>title<span>"</span></span><span>&gt;</span></span>Thyme Bread with Cheese and Olives<span><span><span>&lt;</span>h3</span><span>/&gt;</span></span>
  <span><span><span>&lt;</span>p</span> <span>class</span><span><span>=</span><span>"</span>tag<span>"</span></span><span>&gt;</span></span>Baking<span><span><span>&lt;</span>p</span><span>/&gt;</span></span>
<span><span><span>&lt;/</span>div</span><span>&gt;</span></span></code></pre>
<p>We can stack the title and the tag over the image by using <code>grid-template-areas</code> as in the following example.</p>
<pre><code is:raw=""><span>.card</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> auto auto 1fr<span>;</span>
  <span>grid-template-rows</span><span>:</span> auto auto<span>;</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"thumb-1 tag"</span>
    <span>"title thumb-2"</span><span>;</span>
<span>}</span></code></pre>
<p>Notice how I defined <code>thumb-1</code> and <code>thumb-2</code>. I can use them with <code>grid-area</code>.</p>
<pre><code is:raw=""><span>.thumb</span> <span>{</span>
  <span>grid-column</span><span>:</span> thumb-1 / thumb-2<span>;</span>
  <span>grid-row</span><span>:</span> thumb-1 / thumb-2<span>;</span>
<span>}</span></code></pre>
<p>And I placed both the title and tag in their areas plus made sure they were aligned correctly.</p>
<pre><code is:raw=""><span>.tag</span> <span>{</span>
  <span>grid-area</span><span>:</span> tag<span>;</span>
  <span>align-self</span><span>:</span> start<span>;</span>
  <span>justify-self</span><span>:</span> end<span>;</span>
<span>}</span>

<span>.title</span> <span>{</span>
  <span>grid-area</span><span>:</span> title<span>;</span>
  <span>align-self</span><span>:</span> end<span>;</span>
<span>}</span></code></pre>
<p>Please keep in mind that you will need to manage the stacking order of the child items (if needed). In my case, I didn’t need that as the source order already solved it for me.</p>
<p>Here is the final demo:</p>
<astro-island uid="Z1sMX8x" prefix="r37" component-url="/_astro/Overlapping.BBBEvm0a.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;overlap&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;ArticleLayout2&quot;,&quot;value&quot;:true}" await-children=""><div><p><img src="https://ishadeed.com/assets/grid-named-areas/bread.jpg" alt=""></p><p><span>Baking</span></p><p><span>Thyme Bread with Cheese and Olives</span></p></div><!--astro:end--></astro-island>
<p>The previous examples were inspired by <a href="https://www.oddbird.net/workshops/cascading-layouts/">Oddbird’s Cascading Layouts</a> page.</p>
<h2 id="conditional-layouts-with-css-has">Conditional layouts with CSS :has()</h2>
<p>We can take grid areas to the next level by combining it with CSS <code>:has()</code> selector. For example, we can change a layout based on the presence of an element.</p>
<p>In this example, I’m changing the layout of a <code>&lt;figure&gt;</code> element based on having a figcaption or not.</p>
<p>Here is the basic CSS:</p>
<pre><code is:raw=""><span>figure</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr 1fr<span>;</span>
  <span>grid-template-areas</span><span>:</span> <span>"img img img"</span><span>;</span>
  <span>gap</span><span>:</span> 0.5rem<span>;</span>
<span>}</span>

<span>img</span> <span>{</span>
  <span>grid-area</span><span>:</span> img<span>;</span>
<span>}</span>

<span>figcaption</span> <span>{</span>
  <span>grid-area</span><span>:</span> caption<span>;</span>
<span>}</span></code></pre>
<astro-island uid="r3imf" prefix="r38" component-url="/_astro/Conditional.D_NQx__K.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{&quot;gridArea&quot;:[0,true]}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Conditional&quot;,&quot;value&quot;:true}" await-children=""><div><div><p>Thyme Bread with Cheese and Olives</p><p>Learn how to make this awesome home made bread with just a few steps. Perfect for dipping or sandwiches.</p><figure><img src="https://ishadeed.com/assets/grid-named-areas/bread.jpg" alt="test"><figcaption>A photo showing the best bread in town. Taken by Ahmad Shadeed.</figcaption></figure></div><div><pre><p><span>.card</span><span>:has</span><span>(</span><span>figcaption</span><span>)</span><span> </span><span>{</span><span></span></p><p><span>  </span><span>grid-template-areas</span><span>:</span><span>  </span></p><p><span>        </span><span>"img img caption"</span><span></span></p><p><span>        </span><span>"img img ."</span><span>;</span><span></span></p><p><span></span><span>}</span></p></pre></div></div><!--astro:end--></astro-island>
<p>Do you want to learn more? I <a href="https://ishadeed.com/article/css-has-guide/">wrote a complete interactive guide on CSS :has</a>. Also, you can check my <a href="https://ishadeed.com/article/conditional-css-has-nth-last-child/">Conditional CSS with :has and :nth-last-child</a> article.</p>
<h2 id="multilingual-support-ltrrtl">Multilingual support (LTR/RTL)</h2>
<p>It’s worth mentioning that CSS Grid will adjust the layout based on the page direction (LTR or RTL). This means the named grid areas will also follow the page direction.</p>
<p>Toggle the “RTL” checkbox in the demo to see how the layout will flip.</p>
<astro-island uid="WBtiy" prefix="r39" component-url="/_astro/Syntax4.boyQkRFb.js" component-export="default" renderer-url="/_astro/client.B2vAWYSt.js" props="{}" ssr="" client="visible" opts="{&quot;name&quot;:&quot;Syntax3&quot;,&quot;value&quot;:true}" await-children=""><!--astro:end--></astro-island>
<p>To learn more about writing CSS for RTL layouts, I <a href="https://rtlstyling.com/posts/rtl-styling">wrote a complete guide</a> on that topic called RTL Styling 101.</p>

<p>All the major browsers have good tooling for grid areas (Chrome, Safari, and Firefox). Here is a preview of each browser:</p>
<h3 id="chrome">Chrome</h3>
<ul>
<li>I don’t particularly appreciate that it places the area name at the top left corner. It makes areas overlap.</li>
<li>Not sure about the color overlay. It changed how my design looks like.</li>
</ul>
<picture> <source srcset="https://ishadeed.com/_astro/devtools-chrome.CFnyGMhy_ZTYIMa.webp" type="image/webp"> <img src="https://ishadeed.com/_astro/devtools-chrome.CFnyGMhy_K4GS2.png" alt="" width="1510" height="886" loading="lazy" decoding="async"> </picture>
<h3 id="safari">Safari</h3>
<ul>
<li>The pink outlines help to outline the items clearly.</li>
<li>I like how Safari allows us to see the line names.</li>
</ul>
<picture> <source srcset="https://ishadeed.com/_astro/devtools-safari.aJEvlZm7_LCDwy.webp" type="image/webp"> <img src="https://ishadeed.com/_astro/devtools-safari.aJEvlZm7_2rH5cK.png" alt="" width="1518" height="828" loading="lazy" decoding="async"> </picture>
<p>Here is how Safari shows the line names.</p>
<picture> <source srcset="https://ishadeed.com/_astro/safari-line-names.58Jkc5Rv_14P1Lm.webp" type="image/webp"> <img src="https://ishadeed.com/_astro/safari-line-names.58Jkc5Rv_2cOA78.png" alt="" width="2236" height="744" loading="lazy" decoding="async"> </picture>
<p>While this is useful, the layout might need some enhancements (e.g.: stack the lines instead of showing them next to each other).</p>
<h3 id="firefox">Firefox</h3>
<ul>
<li>The area names are clearer than Chrome and Safari.</li>
<li>I like that it provides an autocomplete list when typing an area name with the custom indents (<code>*-start</code> or <code>*-end</code>).</li>
</ul>
<picture> <source srcset="https://ishadeed.com/_astro/devtools-firefox.ByluX823_1Doedi.webp" type="image/webp"> <img src="https://ishadeed.com/_astro/devtools-firefox.ByluX823_Z2pwMPS.png" alt="" width="1528" height="862" loading="lazy" decoding="async"> </picture>
<p>When editing the <code>grid-area</code> for a child item, Firefox provides a list of all the possible line names.</p>
<picture> <source srcset="https://ishadeed.com/_astro/firefox-hints.D5xlHt5Y_1pCnqC.webp" type="image/webp"> <img src="https://ishadeed.com/_astro/firefox-hints.D5xlHt5Y_PxDt0.png" alt="" width="1275" height="786" loading="lazy" decoding="async"> </picture>
<p>This is great feature that I appreciate in Firefox.</p>
<h2 id="outro">Outro</h2>
<p>Using grid areas is a great way to have a visual of the grid layout in CSS. I can see it helpful for team members who might need to change a layout. I hope that this article was useful to you.</p>
<h3 id="resources">Resources</h3>
<ul>
<li><a href="https://drafts.csswg.org/css-grid/#named-lines">CSS Grid Layout Module Level 2</a>: I used this a reference, though the named grid lines explaination wasn’t that helpful.</li>
<li><a href="https://mastery.games/post/naming-css-grid-lines/">Naming Your CSS Grid Lines</a>:I found this article helpful as I struggled to understand how named lines work.</li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thanks to <a href="https://x.com/samwhoo">Sam Rose</a>, <a href="https://mastodon.social/@dutchcelt">Egor Kloos</a> and <a href="https://indieweb.social/@arpit">Arpit Agrawal</a> for proof reading the article and providing useful feedback.</p> <div> <h2>Subscribe to my newsletter</h2> <p>
A place where I share all the awesome CSS articles,
                demos, and updates that I like.
</p> </div> <div> <p>
Enjoyed the read? If you'd like to support my work,
              consider buying me a coffee. Each article takes about 15
              cups to create. Thanks a latte!
</p> <p><a href="https://ko-fi.com/ahmadshadeed" target="_blank"><img src="https://ishadeed.com/assets/kofi_button_stroke.png" alt="Support me on Ko-fi" width="220" height="34" loading="lazy" decoding="async"></a> </p></div> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ditch banks – Go with money market funds and treasuries (118 pts)]]></title>
            <link>https://thefinancebuff.com/goodbye-banks-credit-unions.html</link>
            <guid>41262439</guid>
            <pubDate>Fri, 16 Aug 2024 02:03:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thefinancebuff.com/goodbye-banks-credit-unions.html">https://thefinancebuff.com/goodbye-banks-credit-unions.html</a>, See on <a href="https://news.ycombinator.com/item?id=41262439">Hacker News</a></p>
Couldn't get https://thefinancebuff.com/goodbye-banks-credit-unions.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[CEOs Are Running Companies from Afar Even as Workers Return to Office (364 pts)]]></title>
            <link>https://www.bloomberg.com/news/articles/2024-08-15/starbucks-victoria-s-secret-are-part-of-broader-trend-of-remote-ceos</link>
            <guid>41261986</guid>
            <pubDate>Fri, 16 Aug 2024 00:41:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bloomberg.com/news/articles/2024-08-15/starbucks-victoria-s-secret-are-part-of-broader-trend-of-remote-ceos">https://www.bloomberg.com/news/articles/2024-08-15/starbucks-victoria-s-secret-are-part-of-broader-trend-of-remote-ceos</a>, See on <a href="https://news.ycombinator.com/item?id=41261986">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
    <section>
        <h3>Why did this happen?</h3>
        <p>Please make sure your browser supports JavaScript and cookies and that you are not
            blocking them from loading.
            For more information you can review our <a href="https://www.bloomberg.com/notices/tos">Terms of
                Service</a> and <a href="https://www.bloomberg.com/notices/tos">Cookie Policy</a>.</p>
    </section>
    <section>
        <h3>Need Help?</h3>
        <p>For inquiries related to this message please <a href="https://www.bloomberg.com/feedback">contact
            our support team</a> and provide the reference ID below.</p>
        <p>Block reference ID:</p>
    </section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[ImRAD is a GUI builder for the ImGui library (194 pts)]]></title>
            <link>https://github.com/tpecholt/imrad</link>
            <guid>41261426</guid>
            <pubDate>Thu, 15 Aug 2024 23:06:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/tpecholt/imrad">https://github.com/tpecholt/imrad</a>, See on <a href="https://news.ycombinator.com/item?id=41261426">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/tpecholt/imrad/actions/workflows/cmake.yml/badge.svg"><img src="https://github.com/tpecholt/imrad/actions/workflows/cmake.yml/badge.svg" alt="img"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">ImRAD</h2><a id="user-content-imrad" aria-label="Permalink: ImRAD" href="#imrad"></a></p>
<p dir="auto">ImRAD is a GUI builder for the ImGui library. It generates and parses C++ code which can be directly used in your application.</p>
<p dir="auto">ImRAD runs on Windows, Linux and MacOS.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<p dir="auto">ImRAD is under active development but these are the main features:</p>
<ul dir="auto">
<li>
<p dir="auto">supports designing all kinds of windows</p>
<ul dir="auto">
<li>Floating windows, popups and modal popups. These are ImGui backend independent</li>
<li>MainWindow with GLFW integration. ImRAD generates GLFW calls which will synchronize ImGui window with its OS window (title bar, resizability flags, autosize etc.)</li>
<li>Activity. This is a undecorated window which fills the entire viewport area. Only one activity can be shown at the time. Used mainly for Android apps</li>
<li>contains a GLFW template for generating generic <code>main.cpp</code></li>
<li>contains an android template for generating generic <code>MainActivity.java</code>+<code>manifest</code>+<code>main.cpp</code></li>
</ul>
</li>
<li>
<p dir="auto">supports wide range of widgets</p>
<ul dir="auto">
<li>basic widgets like <code>Text</code>, <code>Checkbox</code>, <code>Combo</code>, <code>Button</code>, <code>Slider</code>, <code>ColorEdit</code> etc.</li>
<li>container widgets like <code>Child</code>, <code>Table</code>, <code>CollapsingHeader</code>, <code>TreeNode</code>, <code>TabBar</code>,</li>
<li>more exotic widgets such as <code>Splitter</code></li>
<li><code>MenuBar</code> and context menu editing</li>
<li><code>CustomWidget</code> (a placeholder to user code)</li>
</ul>
</li>
<li>
<p dir="auto">generates layout using <code>SameLine</code>/<code>Spacing</code>/<code>NextColumn</code> instead of absolute positioning</p>
<ul dir="auto">
<li>this ensures widgets respect item spacing and frame padding in a consistent way</li>
<li>there is a clear relationship between parent - child widget as well as children ordering which is important for container widgets like Table</li>
<li>overlay widgets can be placed on top using relative position to the nearest window corner</li>
</ul>
</li>
<li>
<p dir="auto">supports box layout</p>
<ul dir="auto">
<li>powerful and simple to use layout mechanism implemented on top of ImGui functionality</li>
<li>stretch any sizeable widget in horizontal or vertical direction</li>
<li>insert spacers to achieve alignment</li>
<li>alternatively you can use Table Layout Helper to generate horizontal layout using invisible Table</li>
</ul>
</li>
<li>
<p dir="auto">supports property binding</p>
<ul dir="auto">
<li>class variables can be managed through simple class wizard or from binding dialog</li>
<li>property binding is important because ImGui is immediate mode GUI library so widget states like input text or combobox items must be set at the time of drawing from within the generated code.</li>
<li>using property binding generated UI becomes dynamic and yet it can still be designed at the same time</li>
</ul>
</li>
<li>
<p dir="auto">supports generating event handlers and other support code</p>
<ul dir="auto">
<li>for example modal dialog will generate <code>OpenPopup</code> member function with a lambda callback called when dialog is closed</li>
<li>event handlers allow event handling user code to be separated from the generated part so the designer still works</li>
</ul>
</li>
<li>
<p dir="auto">generated code is delimited by comment markers and user is free to add additional code around and continue to use ImRAD at the same time</p>
<ul dir="auto">
<li>this can be used to call dependent popup Draw calls or to calculate some variables</li>
<li>it is also possible to use <code>CustomWidget</code> which will just call to a user code callback</li>
</ul>
</li>
<li>
<p dir="auto">target window style is fully configurable</p>
<ul dir="auto">
<li>apart from default styles provided by ImGui user can define new style and save it as an INI file under the <code>style</code> folder. Colors, style variables and used fonts can all be configured.</li>
<li>ImRAD will follow style settings when designing your UI</li>
<li>stored style can be loaded in your app by using simple <code>imrad.h</code> function</li>
</ul>
</li>
<li>
<p dir="auto">generated code is ready to use in your project and depends only on ImGui library and one accompanying header file (imrad.h)</p>
<ul dir="auto">
<li>some features such as MainWindow or Image widget require GLFW dependency. Compile your code with <code>IMRAD_WITH_GLFW</code> to activate it</li>
<li>currently Image widget requires stb library as well. Compile your code with <code>IMRAD_WITH_STB</code> or supply your own <code>LoadTextureFromFile()</code></li>
<li>optional support for the popular <code>fmt</code> library can be activated by defining <code>IMRAD_WITH_FMT</code>. This will allow you to use formating flags throughout all string properties</li>
</ul>
</li>
<li>
<p dir="auto">ImRAD tracks changes to the opened files so files can be designed in ImRAD and edited in your IDE of choice at the same time</p>
<ul dir="auto">
<li>maybe the auto-save feature would be useful to have</li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<ul dir="auto">
<li>ImRAD source code is licensed under the GPL license</li>
<li>Any code generated by the tool is excluded from GPL and can be included in any project either open-source or commercial and it's up to the user to decide the license for it.</li>
<li>Additionally since <code>imrad.h</code> is used by the generated code it is also excluded from the GPL license</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Download binaries</h2><a id="user-content-download-binaries" aria-label="Permalink: Download binaries" href="#download-binaries"></a></p>
<p dir="auto">for up-to date version clone &amp; build the repository using CMake. Don't forget to fetch submodules in the 3rdparty directory too.</p>
<p dir="auto">Somewhat older version can be downloaded from <a href="https://github.com/tpecholt/imrad/releases">Releases</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to build</h2><a id="user-content-how-to-build" aria-label="Permalink: How to build" href="#how-to-build"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Windows</h2><a id="user-content-windows" aria-label="Permalink: Windows" href="#windows"></a></p>
<ol dir="auto">
<li>Use CMake GUI to configure and generate sln file</li>
<li>Open the generated sln file in Visual Studio 2017 or newer (you can use Express or Community editions which are downloadable for free)</li>
<li>Build the INSTALL project in Release mode. It may require running VS with admin rights</li>
<li>If you didn't alter CMAKE_INSTALL_PREFIX variable ImRAD will be installed into <em>C:\Program Files\imrad\latest</em></li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Linux</h2><a id="user-content-linux" aria-label="Permalink: Linux" href="#linux"></a></p>
<ol dir="auto">
<li>
<p dir="auto">Due to the GTK FileOpen dialog you need to <code>apt install</code> these packages first (exact list depends on your OS):</p>
<p dir="auto"><code>pkg-config gtk-3-dev libsystemd-dev libwebp-dev libzstd-dev</code></p>
</li>
<li>
<p dir="auto">Run the provided installation script (script parameter is the ImRAD version you want to name the folder)</p>
<p dir="auto"><code>sudo ./release-linux 0.7</code></p>
</li>
<li>
<p dir="auto">ImRAD will be installed into <em>./install/imrad-0.7</em></p>
</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to debug</h2><a id="user-content-how-to-debug" aria-label="Permalink: How to debug" href="#how-to-debug"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Windows</h2><a id="user-content-windows-1" aria-label="Permalink: Windows" href="#windows-1"></a></p>
<ol dir="auto">
<li>Build the INSTALL target in VS as described above</li>
<li>Set imrad as startup project, set its working directory to the installed folder</li>
<li>Debug &amp; Run</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Screenshots</h2><a id="user-content-screenshots" aria-label="Permalink: Screenshots" href="#screenshots"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/tpecholt/imrad/blob/main/doc/screen1.png"><img src="https://github.com/tpecholt/imrad/raw/main/doc/screen1.png" alt="screen1"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">More information</h2><a id="user-content-more-information" aria-label="Permalink: More information" href="#more-information"></a></p>
<p dir="auto">Please check <a href="https://github.com/tpecholt/imrad/wiki">wiki</a> for tutorials and more detailed content</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Credits</h2><a id="user-content-credits" aria-label="Permalink: Credits" href="#credits"></a></p>
<p dir="auto">Design and implementation - <a href="https://github.com/tpecholt">Tomas Pecholt</a></p>
<p dir="auto">Thanks to <a href="https://github.com/ocornut/imgui">Omar Cornut for Dear ImGui</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[RP2350 PicoDVI Preview (181 pts)]]></title>
            <link>https://github.com/Wren6991/PicoDVI/commit/ca941baf37e3f04738b8e641896d85feb3430385</link>
            <guid>41260679</guid>
            <pubDate>Thu, 15 Aug 2024 21:42:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Wren6991/PicoDVI/commit/ca941baf37e3f04738b8e641896d85feb3430385">https://github.com/Wren6991/PicoDVI/commit/ca941baf37e3f04738b8e641896d85feb3430385</a>, See on <a href="https://news.ycombinator.com/item?id=41260679">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                      
      <tr data-position="0">
    <td colspan="2">
          <a href="#diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" id="expand-up-link-0-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" aria-label="Expand Up" data-url="/Wren6991/PicoDVI/blob_excerpt/7442dc74a2468bd951ca4657473822606b0515c5?diff=unified&amp;direction=up&amp;in_wiki_context=&amp;last_left=&amp;last_right=&amp;left=7&amp;left_hunk_size=11&amp;mode=100644&amp;path=software%2Fapps%2Fvista%2Fmain.c&amp;right=7&amp;right_hunk_size=17" data-left-range="1-6" data-right-range="1-6">
            
          </a>
          <tool-tip id="tooltip-6e095a04-f820-44ad-9e1f-65b4fdcf13fa" for="expand-up-link-0-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" popover="manual" data-direction="ne" data-type="label" data-view-component="true">Expand Up</tool-tip>
    </td>
    <td>@@ -7,11 +7,17 @@</td>
  </tr>

    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L7" data-line-number="7"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R7" data-line-number="7"></td>

  <td>
    <span data-code-marker=" "><span>#include</span> <span>"hardware/pll.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L8" data-line-number="8"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R8" data-line-number="8"></td>

  <td>
    <span data-code-marker=" "><span>#include</span> <span>"hardware/sync.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L9" data-line-number="9"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R9" data-line-number="9"></td>

  <td>
    <span data-code-marker=" "><span>#include</span> <span>"hardware/structs/bus_ctrl.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L10" data-line-number="10"></td>

    <td></td>

  <td>
    <span data-code-marker="-"><span>#include</span> <span>"hardware/structs/ssi.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L11" data-line-number="11"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R10" data-line-number="10"></td>

  <td>
    <span data-code-marker=" "><span>#include</span> <span>"hardware/vreg.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L12" data-line-number="12"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R11" data-line-number="11"></td>

  <td>
    <span data-code-marker=" "><span>#include</span> <span>"pico/multicore.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L13" data-line-number="13"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R12" data-line-number="12"></td>

  <td>
    <span data-code-marker=" "><span>#include</span> <span>"pico/sem.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L14" data-line-number="14"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R13" data-line-number="13"></td>

  <td>
    <span data-code-marker=" "><span>#include</span> <span>"pico/stdlib.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R14" data-line-number="14"></td>

  <td>
    <span data-code-marker="+"><span>#if</span> <span>PICO_RP2040</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R15" data-line-number="15"></td>

  <td>
    <span data-code-marker="+"><span>#include</span> <span>"hardware/structs/ssi.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R16" data-line-number="16"></td>

  <td>
    <span data-code-marker="+"><span>#else</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R17" data-line-number="17"></td>

  <td>
    <span data-code-marker="+"><span>#include</span> <span>"hardware/structs/xip_ctrl.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R18" data-line-number="18"></td>

  <td>
    <span data-code-marker="+"><span>#include</span> <span>"hardware/structs/xip_aux.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R19" data-line-number="19"></td>

  <td>
    <span data-code-marker="+"><span>#include</span> <span>"hardware/structs/qmi.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R20" data-line-number="20"></td>

  <td>
    <span data-code-marker="+"><span>#endif</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L15" data-line-number="15"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R21" data-line-number="21"></td>

  <td>
    <span data-code-marker=" "><br></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L16" data-line-number="16"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R22" data-line-number="22"></td>

  <td>
    <span data-code-marker=" "><span>#include</span> <span>"tmds_encode.h"</span></span></td>
</tr>




    <tr data-hunk="00cae5e2b97ba6d9501df6cf7377462c12d17324280f25fdf7c5adf1f0e63d90">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L17" data-line-number="17"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R23" data-line-number="23"></td>

  <td>
    <span data-code-marker=" "><br></span></td>
</tr>




      <tr data-position="19">
    <td colspan="2">
          <a href="#diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" id="expand-down-link-19-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" aria-label="Expand Down" data-url="/Wren6991/PicoDVI/blob_excerpt/7442dc74a2468bd951ca4657473822606b0515c5?diff=unified&amp;direction=down&amp;in_wiki_context=&amp;last_left=17&amp;last_right=23&amp;left=45&amp;left_hunk_size=27&amp;mode=100644&amp;path=software%2Fapps%2Fvista%2Fmain.c&amp;right=51&amp;right_hunk_size=40" data-left-range="18-30" data-right-range="24-36">
            
          </a>
          <tool-tip id="tooltip-88d604e0-079e-4a45-b9e5-47aca08ced97" for="expand-down-link-19-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" popover="manual" data-direction="ne" data-type="label" data-view-component="true">Expand Down</tool-tip>
          <a href="#diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" id="expand-up-link-19-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" aria-label="Expand Up" data-url="/Wren6991/PicoDVI/blob_excerpt/7442dc74a2468bd951ca4657473822606b0515c5?diff=unified&amp;direction=up&amp;in_wiki_context=&amp;last_left=17&amp;last_right=23&amp;left=45&amp;left_hunk_size=27&amp;mode=100644&amp;path=software%2Fapps%2Fvista%2Fmain.c&amp;right=51&amp;right_hunk_size=40" data-left-range="31-44" data-right-range="37-50">
            
          </a>
          <tool-tip id="tooltip-f23a004c-9990-4555-9f73-b8d6b08c9d39" for="expand-up-link-19-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" popover="manual" data-direction="ne" data-type="label" data-view-component="true">Expand Up</tool-tip>
    </td>
    <td>@@ -45,27 +51,40 @@ static inline void prepare_scanline(const uint32_t *colourbuf, uint32_t *tmdsbuf</td>
  </tr>

    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L45" data-line-number="45"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R51" data-line-number="51"></td>

  <td>
    <span data-code-marker=" ">	<span>tmds_encode_data_channel_fullres_16bpp</span>(<span>colourbuf</span>, <span>tmdsbuf</span> <span>+</span> <span>2</span> <span>*</span> <span>pixwidth</span>, <span>pixwidth</span>, <span>15</span>, <span>11</span>);</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L46" data-line-number="46"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R52" data-line-number="52"></td>

  <td>
    <span data-code-marker=" ">}</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L47" data-line-number="47"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R53" data-line-number="53"></td>

  <td>
    <span data-code-marker=" "><br></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L48" data-line-number="48"></td>

    <td></td>

  <td>
    <span data-code-marker="-"><span>void</span> <span>__no_inline_not_in_flash_func</span>(<span>flash_bulk_dma_start</span>)(<span>uint32_t</span> <span>*</span><span>rxbuf</span>, <span>uint32_t</span> <span>flash_offs</span>, <span>size_t</span> <span>len</span>, <span>uint</span> <span>dma_chan</span>)</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L49" data-line-number="49"></td>

    <td></td>

  <td>
    <span data-code-marker="-">{</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R54" data-line-number="54"></td>

  <td>
    <span data-code-marker="+"><span>void</span> <span>__no_inline_not_in_flash_func</span>(<span>flash_bulk_dma_start</span>)(<span>uint32_t</span> <span>*</span><span>rxbuf</span>, <span>uint32_t</span> <span>flash_offs</span>, <span>size_t</span> <span>len</span>, <span>uint</span> <span>dma_chan</span>) {</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R55" data-line-number="55"></td>

  <td>
    <span data-code-marker="+"><span>#if</span> <span>PICO_RP2040</span></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R56" data-line-number="56"></td>

  <td>
    <span data-code-marker="+">	<span>// On RP2040, program the SSI to clock the correct amount of data without stopping</span></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L50" data-line-number="50"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R57" data-line-number="57"></td>

  <td>
    <span data-code-marker=" ">	<span>ssi_hw</span><span>-&gt;</span><span>ssienr</span> <span>=</span> <span>0</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L51" data-line-number="51"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R58" data-line-number="58"></td>

  <td>
    <span data-code-marker=" ">	<span>ssi_hw</span><span>-&gt;</span><span>ctrlr1</span> <span>=</span> <span>len</span> <span>-</span> <span>1</span>; <span>// NDF, number of data frames</span></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L52" data-line-number="52"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R59" data-line-number="59"></td>

  <td>
    <span data-code-marker=" ">	<span>ssi_hw</span><span>-&gt;</span><span>dmacr</span> <span>=</span> <span>SSI_DMACR_TDMAE_BITS</span> | <span>SSI_DMACR_RDMAE_BITS</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L53" data-line-number="53"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R60" data-line-number="60"></td>

  <td>
    <span data-code-marker=" ">	<span>ssi_hw</span><span>-&gt;</span><span>ssienr</span> <span>=</span> <span>1</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L54" data-line-number="54"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R61" data-line-number="61"></td>

  <td>
    <span data-code-marker=" ">	<span>// Other than NDF, the SSI configuration used for XIP is suitable for a bulk read too.</span></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L55" data-line-number="55"></td>

    <td></td>

  <td>
    <span data-code-marker="-"><br></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L56" data-line-number="56"></td>

    <td></td>

  <td>
    <span data-code-marker="-">	<span>dma_hw</span><span>-&gt;</span><span>ch</span>[<span>dma_chan</span>].<span>read_addr</span> <span>=</span> (<span>uint32_t</span>)<span>&amp;</span><span>ssi_hw</span><span>-&gt;</span><span>dr0</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R62" data-line-number="62"></td>

  <td>
    <span data-code-marker="+">	<span>const</span> <span>uintptr_t</span> <span>read_addr</span> <span>=</span> (<span>uintptr_t</span>)<span>&amp;</span><span>ssi_hw</span><span>-&gt;</span><span>dr0</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R63" data-line-number="63"></td>

  <td>
    <span data-code-marker="+">	<span>const</span> <span>uint</span> <span>dreq</span> <span>=</span> <span>DREQ_XIP_SSIRX</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R64" data-line-number="64"></td>

  <td>
    <span data-code-marker="+">	<span>const</span> <span>bool</span> <span>bswap</span> <span>=</span> true;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R65" data-line-number="65"></td>

  <td>
    <span data-code-marker="+"><span>#else</span></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R66" data-line-number="66"></td>

  <td>
    <span data-code-marker="+">	<span>// On RP2350, SSI is gone, but XIP streaming is fast enough to keep up with this demo</span></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R67" data-line-number="67"></td>

  <td>
    <span data-code-marker="+">	<span>// (you can still DMA to the DIRECT_MODE FIFOs if you really need 100%)</span></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R68" data-line-number="68"></td>

  <td>
    <span data-code-marker="+">	<span>xip_ctrl_hw</span><span>-&gt;</span><span>stream_addr</span> <span>=</span> <span>flash_offs</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R69" data-line-number="69"></td>

  <td>
    <span data-code-marker="+">	<span>xip_ctrl_hw</span><span>-&gt;</span><span>stream_ctr</span> <span>=</span> <span>len</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R70" data-line-number="70"></td>

  <td>
    <span data-code-marker="+">	<span>const</span> <span>uintptr_t</span> <span>read_addr</span> <span>=</span> (<span>uintptr_t</span>)<span>&amp;</span><span>xip_aux_hw</span><span>-&gt;</span><span>stream</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R71" data-line-number="71"></td>

  <td>
    <span data-code-marker="+">	<span>const</span> <span>uint</span> <span>dreq</span> <span>=</span> <span>DREQ_XIP_STREAM</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R72" data-line-number="72"></td>

  <td>
    <span data-code-marker="+">	<span>const</span> <span>bool</span> <span>bswap</span> <span>=</span> false;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R73" data-line-number="73"></td>

  <td>
    <span data-code-marker="+"><span>#endif</span></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R74" data-line-number="74"></td>

  <td>
    <span data-code-marker="+">	<span>dma_hw</span><span>-&gt;</span><span>ch</span>[<span>dma_chan</span>].<span>read_addr</span> <span>=</span> <span>read_addr</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L57" data-line-number="57"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R75" data-line-number="75"></td>

  <td>
    <span data-code-marker=" ">	<span>dma_hw</span><span>-&gt;</span><span>ch</span>[<span>dma_chan</span>].<span>write_addr</span> <span>=</span> (<span>uint32_t</span>)<span>rxbuf</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L58" data-line-number="58"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R76" data-line-number="76"></td>

  <td>
    <span data-code-marker=" ">	<span>dma_hw</span><span>-&gt;</span><span>ch</span>[<span>dma_chan</span>].<span>transfer_count</span> <span>=</span> <span>len</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L59" data-line-number="59"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R77" data-line-number="77"></td>

  <td>
    <span data-code-marker=" ">	<span>dma_hw</span><span>-&gt;</span><span>ch</span>[<span>dma_chan</span>].<span>ctrl_trig</span> <span>=</span></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L60" data-line-number="60"></td>

    <td></td>

  <td>
    <span data-code-marker="-">		<span>DMA_CH0_CTRL_TRIG_BSWAP_BITS</span> |</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L61" data-line-number="61"></td>

    <td></td>

  <td>
    <span data-code-marker="-">		<span>DREQ_XIP_SSIRX</span> &lt;&lt; <span>DMA_CH0_CTRL_TRIG_TREQ_SEL_LSB</span> |</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R78" data-line-number="78"></td>

  <td>
    <span data-code-marker="+">		<span>(</span><span>uint</span><span>)</span><span>bswap</span><span> &lt;&lt; </span><span>DMA_CH0_CTRL_TRIG_BSWAP_LSB</span> |</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R79" data-line-number="79"></td>

  <td>
    <span data-code-marker="+">		<span>dreq</span> &lt;&lt; <span>DMA_CH0_CTRL_TRIG_TREQ_SEL_LSB</span> |</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L62" data-line-number="62"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R80" data-line-number="80"></td>

  <td>
    <span data-code-marker=" ">		<span>dma_chan</span> &lt;&lt; <span>DMA_CH0_CTRL_TRIG_CHAIN_TO_LSB</span> |</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L63" data-line-number="63"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R81" data-line-number="81"></td>

  <td>
    <span data-code-marker=" ">		<span>DMA_CH0_CTRL_TRIG_INCR_WRITE_BITS</span> |</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L64" data-line-number="64"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R82" data-line-number="82"></td>

  <td>
    <span data-code-marker=" ">		<span>DMA_CH0_CTRL_TRIG_DATA_SIZE_VALUE_SIZE_WORD</span> &lt;&lt; <span>DMA_CH0_CTRL_TRIG_DATA_SIZE_LSB</span> |</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L65" data-line-number="65"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R83" data-line-number="83"></td>

  <td>
    <span data-code-marker=" ">		<span>DMA_CH0_CTRL_TRIG_EN_BITS</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L66" data-line-number="66"></td>

    <td></td>

  <td>
    <span data-code-marker="-"><br></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R84" data-line-number="84"></td>

  <td>
    <span data-code-marker="+"><span>#if</span><span> </span><span>PICO_RP2040</span></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L67" data-line-number="67"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R85" data-line-number="85"></td>

  <td>
    <span data-code-marker=" ">	<span>// Now DMA is waiting, kick off the SSI transfer (mode continuation bits in LSBs)</span></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L68" data-line-number="68"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R86" data-line-number="86"></td>

  <td>
    <span data-code-marker=" ">	<span>ssi_hw</span><span>-&gt;</span><span>dr0</span> <span>=</span> (<span>flash_offs</span> &lt;&lt; <span>8</span>) | <span>0xa0</span>;</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R87" data-line-number="87"></td>

  <td>
    <span data-code-marker="+"><span>#endif</span></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L69" data-line-number="69"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R88" data-line-number="88"></td>

  <td>
    <span data-code-marker=" ">}</span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L70" data-line-number="70"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R89" data-line-number="89"></td>

  <td>
    <span data-code-marker=" "><br></span></td>
</tr>




    <tr data-hunk="6cbc275c060dc4315da1ecf9dde9b6715a50da67de56f230ec694e625f1289e7">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L71" data-line-number="71"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R90" data-line-number="90"></td>

  <td>
    <span data-code-marker=" "><span>// Core 1 handles DMA IRQs and runs TMDS encode on scanline buffers it</span></span></td>
</tr>




      <tr data-position="67">
    <td colspan="2">
        <a href="#diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" id="expand-link-67-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" aria-label="Expand All" data-url="/Wren6991/PicoDVI/blob_excerpt/7442dc74a2468bd951ca4657473822606b0515c5?diff=unified&amp;in_wiki_context=&amp;last_left=71&amp;last_right=90&amp;left=91&amp;left_hunk_size=6&amp;mode=100644&amp;path=software%2Fapps%2Fvista%2Fmain.c&amp;right=110&amp;right_hunk_size=15" data-left-range="72-80" data-right-range="91-99">
          
        </a>
        <tool-tip id="tooltip-643d76cf-0255-4959-85f1-7616d42e2cb8" for="expand-link-67-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" popover="manual" data-direction="ne" data-type="label" data-view-component="true">Expand All</tool-tip>
    </td>
    <td>@@ -91,6 +110,15 @@ int __not_in_flash("main") main() {</td>
  </tr>

    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L91" data-line-number="91"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R110" data-line-number="110"></td>

  <td>
    <span data-code-marker=" ">	<span>sleep_ms</span>(<span>10</span>);</span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L92" data-line-number="92"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R111" data-line-number="111"></td>

  <td>
    <span data-code-marker=" ">	<span>set_sys_clock_khz</span>(<span>DVI_TIMING</span>.<span>bit_clk_khz</span>, true);</span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L93" data-line-number="93"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R112" data-line-number="112"></td>

  <td>
    <span data-code-marker=" "><br></span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R113" data-line-number="113"></td>

  <td>
    <span data-code-marker="+">	<span>// A0 SDK won't pick up on the PICO_EMBED_XIP_SETUP flag, so just to make sure:</span></span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R114" data-line-number="114"></td>

  <td>
    <span data-code-marker="+"><span>#if</span> <span>PICO_RP2350</span></span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R115" data-line-number="115"></td>

  <td>
    <span data-code-marker="+">	<span>hw_write_masked</span>(</span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R116" data-line-number="116"></td>

  <td>
    <span data-code-marker="+">		<span>&amp;</span><span>qmi_hw</span><span>-&gt;</span><span>m</span>[<span>0</span>].<span>timing</span>,</span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R117" data-line-number="117"></td>

  <td>
    <span data-code-marker="+">		<span>3</span> &lt;&lt; <span>QMI_M0_TIMING_RXDELAY_LSB</span> | <span>2</span> &lt;&lt; <span>QMI_M0_TIMING_CLKDIV_LSB</span>,</span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R118" data-line-number="118"></td>

  <td>
    <span data-code-marker="+">		<span>QMI_M0_TIMING_RXDELAY_BITS</span> | <span>QMI_M0_TIMING_CLKDIV_BITS</span></span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R119" data-line-number="119"></td>

  <td>
    <span data-code-marker="+">	);</span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R120" data-line-number="120"></td>

  <td>
    <span data-code-marker="+"><span>#endif</span></span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R121" data-line-number="121"></td>

  <td>
    <span data-code-marker="+"><br></span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L94" data-line-number="94"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R122" data-line-number="122"></td>

  <td>
    <span data-code-marker=" ">	<span>setup_default_uart</span>();</span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L95" data-line-number="95"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R123" data-line-number="123"></td>

  <td>
    <span data-code-marker=" "><br></span></td>
</tr>




    <tr data-hunk="1af40bcf12ab2e0340ca83ad9fd659f59ea95ec69f6dbe57fa15964e6061e27b">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L96" data-line-number="96"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R124" data-line-number="124"></td>

  <td>
    <span data-code-marker=" ">	<span>gpio_init</span>(<span>LED_PIN</span>);</span></td>
</tr>




      <tr data-position="83">
    <td colspan="2">
          <a href="#diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" id="expand-down-link-83-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" aria-label="Expand Down" data-url="/Wren6991/PicoDVI/blob_excerpt/7442dc74a2468bd951ca4657473822606b0515c5?diff=unified&amp;direction=down&amp;in_wiki_context=&amp;last_left=96&amp;last_right=124&amp;left=131&amp;left_hunk_size=21&amp;mode=100644&amp;path=software%2Fapps%2Fvista%2Fmain.c&amp;right=159&amp;right_hunk_size=25" data-left-range="97-112" data-right-range="125-140">
            
          </a>
          <tool-tip id="tooltip-a6373ba8-72d4-415e-b64e-772d1c1a2c10" for="expand-down-link-83-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" popover="manual" data-direction="ne" data-type="label" data-view-component="true">Expand Down</tool-tip>
          <a href="#diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" id="expand-up-link-83-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" aria-label="Expand Up" data-url="/Wren6991/PicoDVI/blob_excerpt/7442dc74a2468bd951ca4657473822606b0515c5?diff=unified&amp;direction=up&amp;in_wiki_context=&amp;last_left=96&amp;last_right=124&amp;left=131&amp;left_hunk_size=21&amp;mode=100644&amp;path=software%2Fapps%2Fvista%2Fmain.c&amp;right=159&amp;right_hunk_size=25" data-left-range="113-130" data-right-range="141-158">
            
          </a>
          <tool-tip id="tooltip-8885905c-5408-471c-846b-6a35a47a2953" for="expand-up-link-83-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" popover="manual" data-direction="ne" data-type="label" data-view-component="true">Expand Up</tool-tip>
    </td>
    <td>@@ -131,21 +159,25 @@ int __not_in_flash("main") main() {</td>
  </tr>

    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L131" data-line-number="131"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R159" data-line-number="159"></td>

  <td>
    <span data-code-marker=" ">		}</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L132" data-line-number="132"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R160" data-line-number="160"></td>

  <td>
    <span data-code-marker=" ">		<span>for</span> (<span>int</span> <span>y</span> <span>=</span> <span>0</span>; <span>y</span> <span>&lt;</span> <span>2</span> <span>*</span> <span>FRAME_HEIGHT</span>; <span>y</span> <span>+=</span> <span>2</span>) {</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L133" data-line-number="133"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R161" data-line-number="161"></td>

  <td>
    <span data-code-marker=" ">			<span>// Start DMA to back buffer before starting to encode the front buffer (each buffer is two scanlines)</span></span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R162" data-line-number="162"></td>

  <td>
    <span data-code-marker="+"><span>#if</span> !<span>PICO_RP2040</span></span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R163" data-line-number="163"></td>

  <td>
    <span data-code-marker="+">			<span>// On RP2040 we could never reach this point early, because of the slow encode!</span></span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R164" data-line-number="164"></td>

  <td>
    <span data-code-marker="+">			<span>dma_channel_wait_for_finish_blocking</span>(<span>img_dma_chan</span>);</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R165" data-line-number="165"></td>

  <td>
    <span data-code-marker="+"><span>#endif</span></span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L134" data-line-number="134"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R166" data-line-number="166"></td>

  <td>
    <span data-code-marker=" ">			<span>flash_bulk_dma_start</span>(</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L135" data-line-number="135"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R167" data-line-number="167"></td>

  <td>
    <span data-code-marker=" ">				(<span>uint32_t</span><span>*</span>)<span>img_buf</span>[<span>img_buf_back</span>],</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L136" data-line-number="136"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R168" data-line-number="168"></td>

  <td>
    <span data-code-marker=" ">				<span>current_image_base</span> <span>+</span> ((<span>y</span> <span>+</span> <span>2</span>) % (<span>2</span> <span>*</span> <span>FRAME_HEIGHT</span>)) <span>*</span> <span>IMAGE_SCANLINE_SIZE</span>,</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L137" data-line-number="137"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R169" data-line-number="169"></td>

  <td>
    <span data-code-marker=" ">				<span>IMAGE_SCANLINE_SIZE</span> <span>*</span> <span>2</span> / <span>sizeof</span>(<span>uint32_t</span>),</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L138" data-line-number="138"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R170" data-line-number="170"></td>

  <td>
    <span data-code-marker=" ">				<span>img_dma_chan</span></span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L139" data-line-number="139"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R171" data-line-number="171"></td>

  <td>
    <span data-code-marker=" ">			);</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L140" data-line-number="140"></td>

    <td></td>

  <td>
    <span data-code-marker="-">			<span>const</span> <span>uint16_t</span> <span>*</span><span>img</span> <span>=</span> (<span>const</span> <span>uint16_t</span><span>*</span>)<span>img_buf</span>[<span>img_buf_front</span>];<span>			</span></span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R172" data-line-number="172"></td>

  <td>
    <span data-code-marker="+">			<span>const</span> <span>uint16_t</span> <span>*</span><span>img</span> <span>=</span> (<span>const</span> <span>uint16_t</span><span>*</span>)<span>img_buf</span>[<span>img_buf_front</span>];</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L141" data-line-number="141"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R173" data-line-number="173"></td>

  <td>
    <span data-code-marker=" ">			<span>uint32_t</span> <span>*</span><span>our_tmds_buf</span>, <span>*</span><span>their_tmds_buf</span>;</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L142" data-line-number="142"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R174" data-line-number="174"></td>

  <td>
    <span data-code-marker=" ">			<span>queue_remove_blocking_u32</span>(<span>&amp;</span><span>dvi0</span>.<span>q_tmds_free</span>, <span>&amp;</span><span>their_tmds_buf</span>);</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L143" data-line-number="143"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R175" data-line-number="175"></td>

  <td>
    <span data-code-marker=" ">			<span>multicore_fifo_push_blocking</span>((<span>uint32_t</span>)(<span>img</span>));</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L144" data-line-number="144"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R176" data-line-number="176"></td>

  <td>
    <span data-code-marker=" ">			<span>multicore_fifo_push_blocking</span>((<span>uint32_t</span>)<span>their_tmds_buf</span>);</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L145" data-line-number="145"></td>

    <td></td>

  <td>
    <span data-code-marker="-"><span>	</span></span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R177" data-line-number="177"></td>

  <td>
    <span data-code-marker="+"><br></span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L146" data-line-number="146"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R178" data-line-number="178"></td>

  <td>
    <span data-code-marker=" ">			<span>queue_remove_blocking_u32</span>(<span>&amp;</span><span>dvi0</span>.<span>q_tmds_free</span>, <span>&amp;</span><span>our_tmds_buf</span>);</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L147" data-line-number="147"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R179" data-line-number="179"></td>

  <td>
    <span data-code-marker=" ">			<span>prepare_scanline</span>((<span>const</span> <span>uint32_t</span><span>*</span>)(<span>img</span> <span>+</span> <span>FRAME_WIDTH</span> <span>*</span> <span>2</span>), <span>our_tmds_buf</span>);</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L148" data-line-number="148"></td>

    <td></td>

  <td>
    <span data-code-marker="-"><span>			</span></span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R180" data-line-number="180"></td>

  <td>
    <span data-code-marker="+"><br></span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L149" data-line-number="149"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R181" data-line-number="181"></td>

  <td>
    <span data-code-marker=" ">			<span>multicore_fifo_pop_blocking</span>();</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L150" data-line-number="150"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R182" data-line-number="182"></td>

  <td>
    <span data-code-marker=" ">			<span>queue_add_blocking_u32</span>(<span>&amp;</span><span>dvi0</span>.<span>q_tmds_valid</span>, <span>&amp;</span><span>their_tmds_buf</span>);</span></td>
</tr>




    <tr data-hunk="de0dd9b8512409c864e7b4519a128eda28be2ea170a06e7f0e04b08c045b7ac9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L151" data-line-number="151"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R183" data-line-number="183"></td>

  <td>
    <span data-code-marker=" ">			<span>queue_add_blocking_u32</span>(<span>&amp;</span><span>dvi0</span>.<span>q_tmds_valid</span>, <span>&amp;</span><span>our_tmds_buf</span>);</span></td>
</tr>




      <tr data-position="112">
    <td colspan="2">
        <a href="#diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" id="expand-link-112-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" aria-label="Expand All" data-url="/Wren6991/PicoDVI/blob_excerpt/7442dc74a2468bd951ca4657473822606b0515c5?diff=unified&amp;in_wiki_context=&amp;last_left=151&amp;last_right=183&amp;left=156&amp;left_hunk_size=4&amp;mode=100644&amp;path=software%2Fapps%2Fvista%2Fmain.c&amp;right=188&amp;right_hunk_size=3" data-left-range="152-152" data-right-range="184-184">
          
        </a>
        <tool-tip id="tooltip-98846ce3-8080-4b8d-b494-8552cad348d0" for="expand-link-112-diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277" popover="manual" data-direction="ne" data-type="label" data-view-component="true">Expand All</tool-tip>
    </td>
    <td>@@ -156,4 +188,3 @@ int __not_in_flash("main") main() {</td>
  </tr>

    <tr data-hunk="99ed380a280fb2c8f1c57445c1ae4dbeb9c33b4e39fa102510e2458cf6ae63a9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L156" data-line-number="156"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R188" data-line-number="188"></td>

  <td>
    <span data-code-marker=" ">	}</span></td>
</tr>




    <tr data-hunk="99ed380a280fb2c8f1c57445c1ae4dbeb9c33b4e39fa102510e2458cf6ae63a9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L157" data-line-number="157"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R189" data-line-number="189"></td>

  <td>
    <span data-code-marker=" ">	<span>__builtin_unreachable</span>();</span></td>
</tr>




    <tr data-hunk="99ed380a280fb2c8f1c57445c1ae4dbeb9c33b4e39fa102510e2458cf6ae63a9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L158" data-line-number="158"></td>

    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277R190" data-line-number="190"></td>

  <td>
    <span data-code-marker=" ">}</span></td>
</tr>




    <tr data-hunk="99ed380a280fb2c8f1c57445c1ae4dbeb9c33b4e39fa102510e2458cf6ae63a9">
    <td id="diff-65f8b348a1c59c83c650cf607ac2998e5a23186964c1564489716fc01a6ee277L159" data-line-number="159"></td>

    <td></td>

  <td>
    <span data-code-marker="-"><br></span></td>
</tr>






                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Slow is smooth, smooth is fast: Navy SEALs' efficiency secret (130 pts)]]></title>
            <link>https://www.navyseal.com/slow-is-smooth-smooth-is-fast/</link>
            <guid>41260603</guid>
            <pubDate>Thu, 15 Aug 2024 21:34:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.navyseal.com/slow-is-smooth-smooth-is-fast/">https://www.navyseal.com/slow-is-smooth-smooth-is-fast/</a>, See on <a href="https://news.ycombinator.com/item?id=41260603">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>Have you ever heard the saying, "Slow is smooth, smooth is fast?" It's a mantra deeply ingrained in <a data-ail="4340" target="_blank" href="https://www.navyseal.com/new-report-reveals-seals-sought-kidnappers-of-us-contractor-in-afghanistan/" title="Navy Seals">Navy SEALs</a> operations. A counterintuitive concept that flips our usual understanding of speed and efficiency on its head.</p>
<p><em>Picture this:</em> you're part of an elite team executing high-stakes missions under extreme pressure. There's no room for error, but there’s also urgency – every second counts. You feel the urge to rush. But what if running only leads to mistakes?</p>
<p>This phrase isn't just about being slow or fast; it's about finding a rhythm that balances precision and pace, ultimately leading to swifter progress. The SEALs swear by it... but how can we apply it beyond military contexts?</p>
<p>I got your attention, didn't I? Let's dive deeper into the roots of this idea and understand why taking it slow can be critical.</p>
<h2 id="main-toc">Table Of Contents:</h2>
<ul id="6518306b01c69_121791">
<li><a id="theoriginandapplicationofslowissmoothsmoothisfastinnavyseals-toc" href="#theoriginandapplicationofslowissmoothsmoothisfastinnavyseals">The Origin and Application of "Slow is Smooth, Smooth is Fast" in Navy SEALs</a>
<ul id="6518306b01c6b_121791">
<li><a id="understandingthemantrasmeaning-toc" href="#understandingthemantrasmeaning">Understanding the Mantra's Meaning</a></li>
<li><a id="instancesofmantraapplicationinsealoperations-toc" href="#instancesofmantraapplicationinsealoperations">Instances of Mantra Application in SEAL Operations</a></li>
<li><a id="theimportanceofslowingdowninchaoticsituations-toc" href="#theimportanceofslowingdowninchaoticsituations">The Importance of Slowing Down in Chaotic Situations</a></li>
</ul>
</li>
<li><a id="theimportanceofslowingdowninchaoticsituations1-toc" href="#theimportanceofslowingdowninchaoticsituations1">The Importance of Slowing Down in Chaotic Situations</a>
<ul id="6518306b01c6b_121791">
<li><a id="consequencesofrushingincomplexoperations-toc" href="#consequencesofrushingincomplexoperations">Consequences of Rushing in Complex Operations</a></li>
<li><a id="theroleofcoordinationandplanning-toc" href="#theroleofcoordinationandplanning">The Role of Coordination and Planning</a></li>
</ul>
</li>
<li><a id="applyingslowissmoothsmoothisfastbeyondmilitarycontexts-toc" href="#applyingslowissmoothsmoothisfastbeyondmilitarycontexts">Applying "Slow is Smooth, Smooth is Fast" Beyond Military Contexts</a>
<ul id="6518306b01c6b_121791">
<li><a id="incorporatingthemantraintobusinesspractices-toc" href="#incorporatingthemantraintobusinesspractices">Incorporating the Mantra into Business Practices</a></li>
<li><a id="usingthemantraforprojectmanagement-toc" href="#usingthemantraforprojectmanagement">Using the Mantra for Project Management</a></li>
</ul>
</li>
<li><a id="applyingslowissmoothsmoothisfastbeyondmilitarycontexts1-toc" href="#applyingslowissmoothsmoothisfastbeyondmilitarycontexts1">Applying "Slow is Smooth, Smooth is Fast" Beyond Military Contexts</a>
<ul id="6518306b01c6b_121791">
<li><a id="incorporatingthemantraintobusinesspractices1-toc" href="#incorporatingthemantraintobusinesspractices1">Incorporating the Mantra into Business Practices</a></li>
<li><a id="usingthemantraforprojectmanagement1-toc" href="#usingthemantraforprojectmanagement1">Using the Mantra for Project Management</a></li>
</ul>
</li>
<li><a id="theroleofslowissmoothsmoothisfastinteamdynamics-toc" href="#theroleofslowissmoothsmoothisfastinteamdynamics">The Role of "Slow is Smooth, Smooth is Fast" in Team Dynamics</a>
<ul id="6518306b01c6b_121791">
<li><a id="promotingsmoothnessinteamoperations-toc" href="#promotingsmoothnessinteamoperations">Promoting Smoothness in Team Operations</a></li>
<li><a id="themantrasimpactonteamefficiency-toc" href="#themantrasimpactonteamefficiency">The Mantra's Impact on Team Efficiency</a></li>
</ul>
</li>
<li><a id="overcomingtheurgetorushthroughtasks-toc" href="#overcomingtheurgetorushthroughtasks">Overcoming the Urge to Rush Through Tasks</a>
<ul id="6518306b01c6b_121791">
<li><a id="strategiesforslowingdown-toc" href="#strategiesforslowingdown">Strategies for Slowing Down</a></li>
<li><a id="mistakesfrommovingtooquickly-toc" href="#mistakesfrommovingtooquickly">Mistakes from Moving Too Quickly</a></li>
<li><a id="thenavysealapproachtoslowingdown-toc" href="#thenavysealapproachtoslowingdown">The Navy SEAL Approach to Slowing Down</a></li>
</ul>
</li>
<li><a id="faqswithslowissmoothsmoothisfastnavyseals-toc" href="#faqswithslowissmoothsmoothisfastnavyseals">FAQs with Slow is Smooth Smooth is Fast Navy Seals</a>
<ul id="6518306b01c6b_121791">
<li><a id="whatisthenavysealmottoslowissmoothsmoothisfast-toc" href="#whatisthenavysealmottoslowissmoothsmoothisfast">What is the Navy SEAL motto: slow is smooth smooth is fast?</a></li>
<li><a id="whatisthenavysealmotto-toc" href="#whatisthenavysealmotto">What is the Navy SEAL motto?</a></li>
<li><a id="whatisthemantraofthenavyseals-toc" href="#whatisthemantraofthenavyseals">What is the mantra of the Navy SEALs?</a></li>
<li><a id="whofirstsaidslowissmoothsmoothasfast-toc" href="#whofirstsaidslowissmoothsmoothasfast">Who first said slow is smooth smooth as fast?</a></li>
</ul>
</li>
<li><a id="conclusion-toc" href="#conclusion">Conclusion</a></li>
</ul>
<p><iframe title="YouTube video player" src="https://www.youtube.com/embed/b7dC0jxDeF4" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"></iframe></p>
<h2 id="theoriginandapplicationofslowissmoothsmoothisfastinnavyseals">The Origin and Application of "Slow is Smooth, Smooth is Fast" in Navy SEALs</h2>
<p>This mantra, known well within the special operations world, resonates with <a data-ail="4340" target="_blank" href="https://www.navyseal.com/navy-seal-interview/" title="Navy Seal">Navy SEAL</a> teams. It encapsulates a principle that guides their actions in high-stakes situations.</p>
<h3 id="understandingthemantrasmeaning">Understanding the Mantra's Meaning</h3>
<p>"Slow is smooth, smooth is fast." At first glance, this saying seems counterintuitive. Rather than hastily striving to keep up, this mantra reminds Navy SEALs that accuracy should be prioritized over speed. But rushing can lead to fatal mistakes for Navy SEALs who operate under intense pressure and tight timelines.</p>
<p>This phrase urges them instead to prioritize precision over speed. The theory goes: moving deliberately (slowly) ensures each action is performed correctly (smoothly). When actions are done smoothly without error or need for correction – they inevitably become faster overall.</p>
<h3 id="instancesofmantraapplicationinsealoperations">Instances of Mantra Application in SEAL Operations</h3>
<p>Navy SEALS applies this philosophy during complex operations where quick thinking and decisive action are paramount. One such example was Operation Neptune Spear - the mission which led to Osama Bin Laden's demise. Despite facing unexpected challenges like a crashed helicopter, the team remained composed, prioritizing careful movement over hasty reaction, an embodiment of "slow is smooth...". This calculated approach helped them complete their mission successfully.</p>
<p>In training, too - whether it’s shooting drills or tactical maneuvers - recruits learn early on that attempting tasks too quickly often leads to mistakes, and those errors slow down overall progress. It’s a lesson hard-won but never forgotten.</p>
<h3 id="theimportanceofslowingdowninchaoticsituations">The Importance of Slowing Down in Chaotic Situations</h3>
<p>Why is slowing down crucial? The slightest mistake can have catastrophic consequences in high-stakes operations where SEALs operate. Rushing increases chances for error, which could jeopardize missions or even cost lives.</p>
<p>This mantra underscores that taking an extra second now is better than losing several minutes (or worse) later fixing avoidable blunders. Whether defusing a bomb or conducting stealthy surveillance, moving with deliberate precision trumps speed alone.</p>
<div>
<p><strong>Key Takeaway:&nbsp;</strong></p>

<p>The mantra "Slow is smooth, smooth is fast", cherished by Navy SEALs, underscores the value of accuracy over haste in high-pressure situations. Actions become more streamlined and ultimately quicker by being mindful and sidestepping hasty blunders. This golden rule was a game-changer during operations such as Operation Neptune Spear and continues to be a pivotal teaching point in training drills. In tumultuous circumstances where mistakes can be costly,</p>
</div>
<h2 id="theimportanceofslowingdowninchaoticsituations1">The Importance of Slowing Down in Chaotic Situations</h2>
<p>In high-stakes environments like military operations, slowing down is more than a suggestion. It's the cornerstone of effective decision-making and efficient execution.</p>
<h3 id="consequencesofrushingincomplexoperations">Consequences of Rushing in Complex Operations</h3>
<p>Rushing can cause slip-ups that would have been prevented if one had taken more time and consideration. For instance, if you're disarming an explosive device or conducting surveillance on enemy territory, moving too fast can result in missed details or mistakes that jeopardize the mission and put lives at risk.</p>
<p>This concept isn't unique to military situations either. Think about when you rush through your morning routine because you overslept; chances are you'll forget something essential or leave your home looking less than presentable.</p>
<h3 id="theroleofcoordinationandplanning">The Role of Coordination and Planning</h3>
<p>A pause for planning may seem counterintuitive during chaos. But it’s crucial for preventing errors and enhancing efficiency - especially within teams where coordination is critical.</p>
<p>Navy SEALs, renowned worldwide for their exceptional skills, use this principle effectively by emphasizing slow-and-smooth movements over rushed ones – leading us back to our mantra: "Slow is smooth, smooth is fast."</p>
<h2 id="applyingslowissmoothsmoothisfastbeyondmilitarycontexts">Applying "Slow is Smooth, Smooth is Fast" Beyond Military Contexts</h2>
<p>Moving beyond battlefields and covert missions - this mantra holds value even in everyday life scenarios such as business practices or project management.</p>
<h3 id="incorporatingthemantraintobusinesspractices">Incorporating the Mantra into Business Practices</h3>
<p>For businesses, rushing to launch a new product or service can lead to overlooked details and subpar customer experiences. However, slowing down the process allows for more thorough testing, feedback collection, and refinement - ensuring a smoother (and often faster) route to success.</p>
<p>Harvard Business Review discusses this balance between speed and quality in their article on strategy vs purpose – reinforcing that slowing down can be the quickest way forward.</p>
<h3 id="usingthemantraforprojectmanagement">Using the Mantra for Project Management</h3>
<p>In project management, too, hasty decisions might seem productive initially but usually result in more rework later.</p>
<div>
<p><strong>Key Takeaway:&nbsp;</strong></p>

<p>In high-stakes situations, slow and steady wins the race. Whether it's disarming explosives or launching a new product, rushing can lead to mistakes that put success at risk. So take a page from Navy SEALs: "Slow is smooth, smooth is fast." This principle isn't just for military ops - it works in business and project management too.</p>
</div>
<h2 id="applyingslowissmoothsmoothisfastbeyondmilitarycontexts1">Applying "Slow is Smooth, Smooth is Fast" Beyond Military Contexts</h2>
<p>While deeply rooted in Navy SEAL operations, the concept of "slow is smooth, and smooth is fast" has potential applications far beyond the battlefield. This mantra encourages mindfulness and precision over haste - a principle that can be harnessed greatly in other spheres of life.</p>
<h3 id="incorporatingthemantraintobusinesspractices1">Incorporating the Mantra into Business Practices</h3>
<p>In the quick-paced corporate world, it may appear that hurrying through tasks is a successful way to stay on top of things. But as any seasoned entrepreneur knows, rushed work often leads to errors that slow progress.</p>
<p>This mantra advises businesses to focus on speed, accuracy, and efficiency. By slowing down processes initially and focusing more intently on getting them right from the outset—essentially smoothing out wrinkles—you eventually increase your pace without compromising quality.</p>
<h3 id="usingthemantraforprojectmanagement1">Using the Mantra for Project Management</h3>
<p>The same wisdom applies effectively within project management practices too. A project manager might feel compelled under tight deadlines or budget constraints to hurry things along; however, this often leads to overlooking key details, which later come back as costly issues needing rectification. The Project Management Institute (PMI) echoes similar sentiments about thorough planning and coordination being crucial factors in achieving faster outcomes.</p>
<table>
<thead>
<tr>
<th>Tips For Applying The Mantra In Various Spheres Of Life:</th>
</tr>
</thead>
<tbody>
<tr>
<td>- Be deliberate: Whether it’s a military operation or preparing a business report – take time upfront rather than rushing blindly into action.</td>
</tr>
<tr>
<td>- Prioritize quality over speed: Fast doesn’t always mean efficient. Take the time to get it right.</td>
</tr>
<tr>
<td>- Keep refining: The more you smooth out your processes, the faster they will become in the long run.</td>
</tr>
</tbody>
</table>
<p>By embracing the "slow is smooth, and smooth is fast" approach, we boost results and dial down stress. This principle champions mindful action over quick judgments. It nudges us to hit pause, hatch a plan, and synchronize our moves – basically taking a 'chill pill' before diving in.</p>
<div>
<p><strong>Key Takeaway:&nbsp;</strong></p>

<p>Remember, "slow is smooth, and smooth is fast", a wisdom from the Navy SEALs. It's not just for military operations - it can also supercharge your everyday life. Whether you're steering a business or leading a project, taking things slow at first to focus on getting them right helps avoid mistakes and ramps up speed without cutting corners on quality. The same idea nudges us towards mindfulness: planning thoroughly before diving in.</p>
</div>
<h2 id="theroleofslowissmoothsmoothisfastinteamdynamics">The Role of "Slow is Smooth, Smooth is Fast" in Team Dynamics</h2>
<p>Regarding team dynamics within Navy SEAL teams, the mantra "slow is smooth, smooth is fast" plays a significant role. It's not just about speediness or productivity; it's also concerning collaboration and avoiding mistakes.</p>
<h3 id="promotingsmoothnessinteamoperations">Promoting Smoothness in Team Operations</h3>
<p>In high-pressure situations where every second counts, one might think faster action equals better results. But this isn't always true.</p>
<p>This <a href="https://www.navyseal.com/" target="_blank" rel="noopener">Navy SEAL principle</a> suggests otherwise - slow down to go smoothly, and by doing so, you'll move faster overall. Akin to precision machinery operating at peak performance when well-oiled and maintained.</p>
<h3 id="themantrasimpactonteamefficiency">The Mantra's Impact on Team Efficiency</h3>
<p>Aiming for quick wins can sometimes lead us astray due to hasty decisions or poorly executed actions, causing errors that require correction time – slowing progress instead of speeding it up.</p>
<p>The philosophy behind "slow is smooth, smooth is fast" emphasizes taking the time necessary for each task—no matter how small—to ensure flawless execution with minimal mistakes.</p>
<p>This approach helps enhance team efficiency because members don't constantly have to backtrack or redo tasks because they were rushed initially.</p>
<p>Applying this mantra to team operations promotes a smoother workflow, ultimately leading to faster overall progress.</p>
<p>Furthermore, this method prevents panic-induced errors while fostering calmness under pressure – critical elements in enhancing operational effectiveness among Navy Seals.</p>
<p>Whether defusing explosives or planning covert operations, these professionals understand the value of meticulous attention to detail and precision.</p>
<p>Their effectiveness in high-stakes situations is a testament to this mantra's validity.</p>
<p>Interestingly, though rooted in military training, its applicability extends far beyond. Many industries have adopted this principle, understanding that speed often comes at the cost of accuracy.</p>
<p>Wrapping it up,</p>
<div>
<p><strong>Key Takeaway:&nbsp;</strong></p>

<p>The Navy SEAL mantra "slow is smooth, smooth is fast" enhances team efficiency by emphasizing meticulousness over speed. By slowing down and ensuring flawless execution of tasks, teams can prevent errors that would otherwise require time to correct, leading to faster overall progress. This approach also fosters calm under pressure - which is crucial in high-stakes situations.</p>
</div>
<h2 id="overcomingtheurgetorushthroughtasks">Overcoming the Urge to Rush Through Tasks</h2>
<p>We often rush through tasks to get them done as quickly as possible. While understandable in our fast-paced world, this tendency can lead to errors and inefficiencies. The mantra "slow is smooth, smooth is fast" used by Navy SEALs offers a solution.</p>
<h3 id="strategiesforslowingdown">Strategies for Slowing Down</h3>
<p>The first step towards slowing down is recognizing when we're speeding up unnecessarily. Notice when you're going over the speed limit in a car and back off on the gas.</p>
<p>A practical strategy here involves mindfulness practices. Awareness of your actions and intentionally slowing down can significantly affect task performance.</p>
<p>Beyond awareness lies planning – plotting steps before diving into execution mode can save time later. Effective planning, similar to what military units do before operations or businesses before launching products, helps ensure smoother progression with fewer hiccups along the way.</p>
<h3 id="mistakesfrommovingtooquickly">Mistakes from Moving Too Quickly</h3>
<p>Rushing often leads us astray; studies show that moving too swiftly during complex procedures increases error rates. Errors reduce quality and demand additional time for correction—ultimately negating any perceived benefits from hurrying.</p>
<p>In contrast, approaching tasks unhurriedly allows room for better precision and accuracy, resulting in superior outcomes—a philosophy that Navy SEALs and their rigorous training programs embrace.</p>
<h3 id="thenavysealapproachtoslowingdown">The Navy SEAL Approach to Slowing Down</h3>
<p>Navy SEALs are famous for pulling off challenging tasks even when the pressure is sky-high. They make this happen by sticking to one key principle.</p>

<h2 id="faqswithslowissmoothsmoothisfastnavyseals">FAQs with Slow is Smooth Smooth is Fast Navy Seals</h2>
<h3 id="whatisthenavysealmottoslowissmoothsmoothisfast">What is the Navy SEAL motto: slow is smooth smooth is fast?</h3>
<p>"Slow is smooth smooth is fast" implies taking time to move efficiently reduces errors and ultimately quickens operations.</p>
<h3 id="whatisthenavysealmotto">What is the Navy SEAL motto?</h3>
<p>The official Navy SEAL motto, "<a data-ail="4340" target="_blank" href="https://www.navyseal.com/the-only-easy-day-was-yesterday/" title="The Only Easy Day Was Yesterday">The Only Easy Day Was Yesterday</a>," reflects their resilience and determination. This motto was created by <a data-ail="4340" target="_blank" href="https://www.navyseal.com/buds-s/" title="Bud/s">BUD/S</a> Class 89.</p>

<h3 id="whatisthemantraofthenavyseals">What is the mantra of the Navy SEALs?</h3>
<p>A common mantra among Navy SEALS includes "slow is smooth, smooth is fast," emphasizing efficient movement in high-stakes situations.</p>
<h3 id="whofirstsaidslowissmoothsmoothasfast">Who first said slow is smooth smooth as fast?</h3>
<p>This saying has military roots, but its original speaker remains unclear. It's heavily used within special forces communities like the SEAL teams.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Remember, slow is smooth, and smooth is fast. That's the secret sauce behind Navy SEALs' efficiency in high-stakes situations.</p>
<p>Slowing down isn't about dragging your feet but precise movements that avoid costly mistakes. It's counterintuitive, sure, but essential to thriving in chaos.</p>
<p>Beyond military operations, this mantra has practical applications, too - from businesses striving for flawless execution to project managers juggling complex tasks.</p>
<p>And don't forget its role in team dynamics. Encouraging coordinated movements leads to smoother operations and faster overall progress.</p>
<p>In a world where we often feel rushed, adopting the "slow is smooth, smooth is fast" mindset could be just what we need!</p>
 
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[One man's quest to restore the first-ever Air Force One (224 pts)]]></title>
            <link>https://www.atlasobscura.com/articles/first-air-force-one</link>
            <guid>41260345</guid>
            <pubDate>Thu, 15 Aug 2024 21:04:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.atlasobscura.com/articles/first-air-force-one">https://www.atlasobscura.com/articles/first-air-force-one</a>, See on <a href="https://news.ycombinator.com/item?id=41260345">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="article-body">
<p><span>It was 1953 and U.S. </span>President-elect Dwight D. Eisenhower sat at a big mahogany desk working on a plan to end the Korean War. A small team of elite Washington staffers lounged nearby on mid-century leather sofas or in custom bucket chairs, smoking over hand-carved wood tables.</p>
<p>Eisenhower and his team weren’t at the White House, though, or even in D.C.: At that exact moment, they were soaring high over the Pacific Ocean in an overhauled 1948 Lockheed C-121 Constellation aircraft, the first-ever Air Force One.</p>
<p>The 100-foot-long and 132-foot-wide, four-propeller plane could hold about 16 passengers, was piloted by a crew of five, and staffed with two or three attendants. Its elegantly tapered fuselage was shaped like a bottlenose dolphin and had thousands of mirror-polished aluminum panels in addition to the hand-painted word “Columbine” arched above a blossoming blue and white flower.</p>
<p>“The Constellation was the most iconic of the 1950s airliners, and this one took things to a new level,” says military historian and writer Nicholas A. Veronico. “It was the first plane to go by the call sign, Air Force One, and was heralded as the star of the skies.”</p>
<p>Yet, 60 years later, the plane, known as Columbine II, lay neglected and rusting <a href="https://airmuseumnetwork.com/1st-air-force-one-plane-decaying-in-ariz-field/">in a field at a rural Arizona airport</a>. That is until aeronautical entrepreneur and aviation history buff Karl Stoltzfus discovered its pedigree and took it upon himself to restore the first Air Force One.</p>
<figure><img src="https://img.atlasobscura.com/AJBRAjHimzZR5Y7ps0hqWYs1vSfEOgvA7nEeDIlxKfI/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy8yMzQwN2Q0MDBi/YWRkNDI0YTNfYWly/IGZvcmNlIG9uZS5w/bmc.png" alt="President Dwight D. Eisenhower's plane, <em>Columbine II</em>, was the first to use the Air Force One call sign." width="auto" data-kind="article-image" id="article-image-102815" data-src="https://img.atlasobscura.com/AJBRAjHimzZR5Y7ps0hqWYs1vSfEOgvA7nEeDIlxKfI/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy8yMzQwN2Q0MDBi/YWRkNDI0YTNfYWly/IGZvcmNlIG9uZS5w/bmc.png"><figcaption>President Dwight D. Eisenhower’s plane, <em>Columbine II</em>, was the first to use the Air Force One call sign. <span>Dynamic Aviation</span></figcaption></figure>
<p>Columbine II spent the first five years of its life as a military-issue V.I.P. transport before Eisenhower ordered comprehensive upgrades, named it after the flower of his wife’s home state of <a href="https://www.atlasobscura.com/things-to-do/colorado">Colorado</a>, and made it his presidential plane in 1953. The Federal Aviation Administration adopted the tagline Air Force One a year later after a near-catastrophic incident over Richmond International Airport. The plane’s numerical, military tagline 8610 was identical to that of a commercial airliner seeking to land and confusion among air traffic controllers nearly caused a midair collision. From then on, presidential planes were known as Air Force One.</p>
<p>But Columbine II’s significance goes beyond being the first Air Force One: Eisenhower used the plane to usher in a new era of presidential diplomacy.</p>
<p>While Franklin D. Roosevelt was the first president to have an official plane, he <a href="https://www.airandspaceforces.com/article/potus-flies/#:~:text=Although%20the%20Army%20and%20Navy,Independence%2C%20named%20after%20his%20hometown">used it just three times</a>. His successor, Harry Truman, was similarly avoidant. However, <a href="https://www.atlasobscura.com/articles/in-1919-dwight-d-eisenhower-suffered-through-historys-worst-cross-country-road-trip">Eisenhower was a seasoned pilot and relied heavily on air travel</a> to manage Allied campaigns during World War II.</p>
<p>“He saw the potential of a presidential plane as a powerful tool for international and domestic relations,” says Veronico, author of <a href="https://www.amazon.com/Air-Force-One-Aircraft-Presidency/dp/0760357994"><em>Air Force One: The Aircraft of the Modern U.S. Presidency</em></a>. Eisenhower traveled across the U.S. and the world to meet with leaders, logging more than 63,000 miles in the first two years of his presidency. He used Columbine II to end the Korean War and wrote his famed “<a href="https://ahf.nuclearmuseum.org/ahf/key-documents/eisenhowers-atoms-peace-speech/?gad_source=1&amp;gclid=CjwKCAjw74e1BhBnEiwAbqOAjAQFUEFikubX1N-oJFGJ8OTPlI-Nz9MYHjqdVnEt_70F4GKStg606BoCxD4QAvD_BwE">Atoms for Peace</a>” speech onboard. It helped Eisenhower “lay the foundation for how modern presidents conduct foreign diplomacy,” says Veronico.</p>
<figure><img src="https://img.atlasobscura.com/mELdHyO41X6oREkz7ON7yeRsuI3M8QjXV2hhvfOV_8U/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9hNGE1MDRmYzhh/MmFlMTc0YjFfRHdp/Z2h0IEQgRWlzZW5o/b3dlciBhbmQgd2lm/ZSBib2FyZCBBaXIg/Rm9yY2UgT25lIHRv/IEhhd2FpaSBlbmhh/bmNlZC5wbmc.png" alt="President Dwight D. Eisenhower, his son Major John Eisenhower, and his wife Barbara Eisenhower wave goodbye as they board Air Force One to Hawaii in 1960." width="auto" data-kind="article-image" id="article-image-102817" data-src="https://img.atlasobscura.com/mELdHyO41X6oREkz7ON7yeRsuI3M8QjXV2hhvfOV_8U/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9hNGE1MDRmYzhh/MmFlMTc0YjFfRHdp/Z2h0IEQgRWlzZW5o/b3dlciBhbmQgd2lm/ZSBib2FyZCBBaXIg/Rm9yY2UgT25lIHRv/IEhhd2FpaSBlbmhh/bmNlZC5wbmc.png"><figcaption>President Dwight D. Eisenhower, his son Major John Eisenhower, and his wife Barbara Eisenhower wave goodbye as they board Air Force One to Hawaii in 1960. <a target="_blank" href="https://www.loc.gov/pictures/resource/ppmsca.83216/">Library of Congress/LC-DIG-ppmsca-83216</a></figcaption></figure>
<p>Columbine II was later repurposed as a V.I.P. transport for Vice President <a href="https://www.atlasobscura.com/places/richard-nixons-resignation-helicopter">Richard Nixon</a> and visiting dignitaries such as Queen Elizabeth, and Eisenhower converted a newer, larger Lockheed Super Constellation into his next Air Force One in November 1954. Eisenhower flew on Columbine II for the last time in 1959. Then, after a brief stint as a commercial airliner, the plane was retired to an Arizona Air Force storage facility in 1968.</p>
<p>How did Columbine II wind up abandoned in the desert? “The short answer is, it got lost,” says Veronico. By 1968, the plane’s presidential paint job and lux accouterments were long gone. That combined with what was likely a clerical error during inventory obscured its predigious pedigree.</p>
<p>At a 1970 surplus auction, crop duster and fire bomber Mel Christler bought the former Air Force One in a package of five decommissioned C-121s.</p>
<figure>

</figure>
<p>“At that time very few people were thinking about the historical significance of these aircraft, much less how to preserve them,” says Veronico. Columbine II had slipped through the cracks: “By then it was just another number.”</p>
<p>Christler pulled parts from the former Air Force One to service his fleet of Constellations until they were retired from use in 1978. He was about to scrap Columbine II when a Smithsonian researcher called with recently unearthed news of its presidential past. Christler—a former WWII pilot and flight instructor—spent the next decade struggling to restore the plane on a shoestring budget.</p>
<p>“When you find out [a plane] was Eisenhower’s, now you’re stuck with it,” Christler’s son and business successor, Lockie Christler, <a href="https://www.airmanmagazine.af.mil/Features/Display/Article/2592502/original-air-force-one/">told <em>Airman Magazine</em> in 2016</a>. “You have a presidential plane you can’t melt up because people wouldn’t think very highly of you.”</p>
<p>Mel Christler got Columbine II back to basic flying condition, hoping the progress would attract a private collector or nonprofit to buy the plane and take over the project. But that didn’t happen. It was parked in an open field at Arizona’s Marana Regional Airport in 2003. Christler died two years later.</p>
<figure><img src="https://img.atlasobscura.com/YfJfECQZNoYE5KtDOZasG9geF6bUEGPDnYphGTIGIKw/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9jNWM1MDZiNTg3/NDBjNmViZGFfYWly/IGZvcmNlIG9uZSAx/OTc4IG5lZ2xlY3Rl/ZCBwbGFuZS5wbmc.png" alt="For years, the first Air Force One sat neglected and forgotten in an open field at Arizona’s Marana Regional Airport." width="auto" data-kind="article-image" id="article-image-102820" data-src="https://img.atlasobscura.com/YfJfECQZNoYE5KtDOZasG9geF6bUEGPDnYphGTIGIKw/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9jNWM1MDZiNTg3/NDBjNmViZGFfYWly/IGZvcmNlIG9uZSAx/OTc4IG5lZ2xlY3Rl/ZCBwbGFuZS5wbmc.png"><figcaption>For years, the first Air Force One sat neglected and forgotten in an open field at Arizona’s Marana Regional Airport. <span>Dynamic Aviation</span></figcaption></figure>
<p>That’s where Karl Stoltzfus, then C.E.O. of the aircraft maintenance company Dynamic Aviation, found the plane 11 years later. He decided to track it down after reading a local news story on a layover at <a href="https://www.atlasobscura.com/things-to-do/tucson-arizona">Tucson</a> International Airport.</p>
<p>“Storage fees were adding up and the owner threatened to scrap it,” says Stoltzfus. “It was unbearable to think that a priceless piece of American history might be turned into beer cans.”</p>
<p>Columbine II was in a sorry state when he and lead mechanic Brian Miklos arrived in 2014 to look at the plane. The plane’s aluminum paneling was totally oxidized. Engine hoses and gaskets had corroded to dust. And the fuselage was infested with rodents, birds, and scorpions.</p>
<p>The scope of repairs was so staggering, Miklos took one look and thought, “This is a lost cause, where the heck would you even start?” Then Stoltzfus asked if he could ready it for a cross-country flight to Dynamic’s Bridgewater, <a href="https://www.atlasobscura.com/things-to-do/virginia">Virginia</a>, headquarters. “And I honestly thought he’d gone insane,” says Miklos.</p>
<p>But Stoltzfus was dead serious. He bought Columbine II for <a href="https://www.dnronline.com/news/first-class-tour-eisenhower-s-granddaughter-recalls-flying-in-first-air-force-one/article_56887be2-ea95-11e6-a12d-732e6645c247.html#:~:text=Dynamic%20founder%20and%20board%20Chairman,parts%20before%20realizing%20its%20heritage">about $1.5 million</a> in early 2015 and appointed Miklos to lead an onsite repair team in partnership with the Mid America Flight Museum. It took a year and 8,000 hours to get the first Air Force One flight worthy. The herculean effort included tearing down and rebuilding all the engines, replacing thousands of yards of electrical wiring, swapping out every rubber hose and gasket on the entire plane, replacing landing gear, and much more.</p>
<p>Columbine II finally made what Miklos describes as a “somewhat scary and extremely precarious” 2,000-plus-mile journey to Bridgewater in 2016, where it would enter the next phase of restoration. It touched down to a crowd of more than 1,000 cheering spectators.</p>
<figure><img src="https://img.atlasobscura.com/JsbD0eUjHBquEE3MunGMkg7G3VOwT4JkyYIJ_17nX-M/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9jNzBlYWUyOTVk/MTExYzVhYmVfYWly/IGZvcmNlIG9uZSBs/YW5kcyBpbiBicmlk/Z2V3YXRlci5qcGc.jpg" alt="In 2016, the plane made a “somewhat scary and extremely precarious” 2,000-plus-mile journey to Bridgewater, Virginia, to undergo a complete restoration." width="auto" data-kind="article-image" id="article-image-102822" data-src="https://img.atlasobscura.com/JsbD0eUjHBquEE3MunGMkg7G3VOwT4JkyYIJ_17nX-M/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9jNzBlYWUyOTVk/MTExYzVhYmVfYWly/IGZvcmNlIG9uZSBs/YW5kcyBpbiBicmlk/Z2V3YXRlci5qcGc.jpg"><figcaption>In 2016, the plane made a “somewhat scary and extremely precarious” 2,000-plus-mile journey to Bridgewater, Virginia, to undergo a complete restoration. <span>Dynamic Aviation</span></figcaption></figure>
<p>“I admit it was an unconventional—if not impractical—approach,” said Stoltzfus, who flew behind Columbine II in a vintage chase plane. “But when a champion boxer loses a fight, which is more dignified: Getting carried out on a stretcher, or walking away on your own two legs?”</p>
<p>Today, Columbine II sits in a cavernous hangar alongside other historic military aircraft in various stages of repair. A small team of dedicated volunteers and staffers has worked steadily on the restoration since 2016. Dynamic spends about $500,000 a year on the project—and created the nonprofit <a href="https://www.firstairforceone.org/">First Air Force One</a> in 2022 to oversee its completion.</p>
<p>“This is complicated, costly, and time-consuming work that requires tremendous expertise and ingenuity,” says First Air Force One executive director Phil Douglas, an aerospace engineer who inherited the project after Stoltzfus passed away unexpectedly in December 2020.</p>
<p>A research team collected rare reference photographs, schematic drawings, and blueprints replete with color codes and information about original materials. Still, Lockheed built just 332 models of the C-121s and the plane is nearly 80 years old. Salvaged units are virtually nonexistent and there are no catalogs for ordering even basic parts. That means workers have to fabricate or modify new or salvaged components to look like originals.</p>
<p>“It’s forced us to really think outside-the-box and get creative,” says the project’s lead mechanic Bill Borchers, who’s spent more than 15,000 hours on the plane so far. “I can tell you there’s a lot of custom machining going on around here.”</p>
<figure><img src="https://img.atlasobscura.com/fePK0xstelxRJgl722uqHb9fgyxX67tCetmvXMQn4kk/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9lZGU5ZGI2OTg2/ZGI0YTdmOWVfZmly/c3QgYWlyIGZvcmNl/IG9uZSByZXN0b3Jh/dGlvbi5qcGc.jpg" alt="Since 2016, a dedicated team of volunteers and staff have worked steadily on Columbine II's restoration." width="auto" data-kind="article-image" id="article-image-102823" data-src="https://img.atlasobscura.com/fePK0xstelxRJgl722uqHb9fgyxX67tCetmvXMQn4kk/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9lZGU5ZGI2OTg2/ZGI0YTdmOWVfZmly/c3QgYWlyIGZvcmNl/IG9uZSByZXN0b3Jh/dGlvbi5qcGc.jpg"><figcaption>Since 2016, a dedicated team of volunteers and staff have worked steadily on Columbine II’s restoration. <span>Dynamic Aviation</span></figcaption></figure>
<p>Then there were the safety upgrades. Every inch of the interior had to be dismantled to replace a skeleton of rotted wood paneling. Miles of old electrical wire were stripped out and upgraded. A hidden panel of contemporary flight gauges was added to the cockpit and an array of sensors was installed in the engines.</p>
<p>Aesthetics were equally demanding. Thousands of oxidized aluminum panels were laboriously polished with special chemicals until they shined like mirrors. Borchers found new-old-stock paint for an artist to touch up hand-painted exterior art and lettering. Smaller than standard, wood-backed swivel chairs were sourced from a Dassault Falcon jet—and are slated to be reshaped and upholstered with vintage leather by a master craftsman. The latter will also build authentic replica furniture like side, buffet, and coffee tables, cabin molding, mid-century couches, fold-out beds, and Ike’s mahogany desk.</p>
<p>“At this point, we’re close to moving out of the nuts-and-bolts phase and into the more exciting decorative stuff,” says Douglas, who estimates the project will cost another $12 million and, assuming that funding is secured, take about three years to complete. “When it’s all said and done, Columbine II will look exactly as it did during Eisenhower’s presidency.”</p>
<p>Douglas hopes to partner with a major corporate sponsor to expedite completion and eventually fund appearances at air shows around the country and globe, where the plane will be open for public tours.</p>
<p>“Karl believed Columbine II could serve as a powerful symbol that reached across generations and reminded us of where we came from and what we stand for,” says Douglas. “It was his dream to bring this plane back to life and we’re determined to make that happen.”</p>
<figure><img src="https://img.atlasobscura.com/j_KadXKz1-eX3OFWCR3AdBx4WQ8zo1iK5cbTiHS4vmw/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy8wYTgzMTJhZWI4/YjI1MTU3NzBfZmly/c3QgYWlyIGZvcmNl/IG9uZS5qcGc.jpg" alt="Slowly but surely, the plane is starting to look like itself again." width="auto" data-kind="article-image" id="article-image-102824" data-src="https://img.atlasobscura.com/j_KadXKz1-eX3OFWCR3AdBx4WQ8zo1iK5cbTiHS4vmw/rt:fill/w:1200/el:1/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy8wYTgzMTJhZWI4/YjI1MTU3NzBfZmly/c3QgYWlyIGZvcmNl/IG9uZS5qcGc.jpg"><figcaption>Slowly but surely, the plane is starting to look like itself again. <span>Dynamic Aviation</span></figcaption></figure>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Mermaid: Diagramming and Charting Tool (108 pts)]]></title>
            <link>https://mermaid.js.org/</link>
            <guid>41260127</guid>
            <pubDate>Thu, 15 Aug 2024 20:40:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mermaid.js.org/">https://mermaid.js.org/</a>, See on <a href="https://news.ycombinator.com/item?id=41260127">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-v-91209e09=""><!--[--><!--]--><!--[--><p data-v-91209e09="">Diagramming and charting tool</p><p data-v-91209e09="">JavaScript based diagramming and charting tool that renders Markdown-inspired text definitions to create and modify diagrams dynamically.</p><!--]--><!--[--><!--]--><div data-v-91209e09=""><!--[--><div data-v-91209e09=""><p><a href="https://mermaid.js.org/intro/" data-v-91209e09="" data-v-41d7036d="">Get Started</a></p></div><div data-v-91209e09=""><p><a href="https://github.com/mermaid-js/mermaid" target="_blank" rel="noreferrer" data-v-91209e09="" data-v-41d7036d="">View on GitHub</a></p></div><!--]--></div><!--[--><!--]--></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[We survived 10k requests/second: Switching to signed asset URLs in an emergency (139 pts)]]></title>
            <link>https://hardcover.app/blog/how-we-survived-10k-requests-second-switching-to-signed-urls</link>
            <guid>41260098</guid>
            <pubDate>Thu, 15 Aug 2024 20:36:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hardcover.app/blog/how-we-survived-10k-requests-second-switching-to-signed-urls">https://hardcover.app/blog/how-we-survived-10k-requests-second-switching-to-signed-urls</a>, See on <a href="https://news.ycombinator.com/item?id=41260098">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<figure><img loading="lazy" decoding="async" width="1024" height="683" src="https://wp.hardcover.app/wp-content/uploads/2024/08/library_safe-1024x683.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2024/08/library_safe-1024x683.png 1024w, https://wp.hardcover.app/wp-content/uploads/2024/08/library_safe-300x200.png 300w, https://wp.hardcover.app/wp-content/uploads/2024/08/library_safe-768x512.png 768w, https://wp.hardcover.app/wp-content/uploads/2024/08/library_safe-1200x800.png 1200w, https://wp.hardcover.app/wp-content/uploads/2024/08/library_safe.png 1344w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>Yesterday I woke up to a ping on my Apple Watch of unusual spending on my Hardcover debit card. It’s not unusual to get a ping about an expense, but this was a new one. Google Cloud had charged me a round $100 – an unusual amount to spend.</p>



<p>The previous day I was experimenting with Google Cloud Run, trying to migrate our Next.js staging environment from Vercel to there to save some money. I assumed I misconfigured that service and turned it off and went about my day.</p>



<p>A few hours later I got another expense alert: this time for $200 (!). Now I was worried. It didn’t help that I was working from a coffee shop, it was about to rain and my laptop battery was almost dead. 😅</p>



<p>After speed walking the trip home while listening to <a href="https://hardcover.app/books/bride-2024">Bride</a> (I’m making my way through the <a href="https://hardcover.app/trending/recent">Trending Books</a>), I got to work tracking down what was happening.</p>



<h2>What’s the Issue?</h2>



<p>My first stop was to Google Cloud Billing. That should narrow the issue down. The new expense was there – I wasn’t crazy. It seemed to level off, which was a good sign.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="512" src="https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.09.23%E2%80%AFPM-1024x512.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.09.23 https://hardcover.app/blog/PM-1024x512.png 1024w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.09.23 https://hardcover.app/blog/PM-300x150.png 300w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.09.23 https://hardcover.app/blog/PM-768x384.png 768w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.09.23 https://hardcover.app/blog/PM-1536x768.png 1536w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.09.23 https://hardcover.app/blog/PM-1200x600.png 1200w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.09.23 https://hardcover.app/blog/PM-1980x990.png 1980w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.09.23 https://hardcover.app/blog/PM.png 2012w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>This confirmed there was something costly happening, but what?</p>



<p>I clicked over to the breakdown by service and it was clear: Cloud Storage expenses were up 2,098% 😅</p>



<figure><img loading="lazy" decoding="async" width="1024" height="800" src="https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.12.57%E2%80%AFPM-1024x800.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.12.57 https://hardcover.app/blog/PM-1024x800.png 1024w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.12.57 https://hardcover.app/blog/PM-300x234.png 300w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.12.57 https://hardcover.app/blog/PM-768x600.png 768w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.12.57 https://hardcover.app/blog/PM-1536x1200.png 1536w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.12.57 https://hardcover.app/blog/PM-1200x938.png 1200w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.12.57 https://hardcover.app/blog/PM.png 1802w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>Whelp, I wondered if this day would come. Let me back up and mention what services we’re using real quick.</p>



<h2>What Google Cloud Services Does Hardcover Use?</h2>



<p>Not much. In fact only 3. The rest of our services are hosted elsewhere.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="599" src="https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-1024x599.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-1024x599.png 1024w, https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-300x175.png 300w, https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-768x449.png 768w, https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-1536x898.png 1536w, https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-2048x1198.png 2048w, https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-1200x702.png 1200w, https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-1980x1158.png 1980w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p><strong>Google Cloud Storage</strong> – We store all cover images, author avatars, user avatars, and various static images in Google Cloud Storage. I’ve previously used S3 for this, but <a href="https://hardcover.app/blog/why" data-type="post" data-id="194">we’re anti-amazon</a>. </p>



<p><strong>Google Cloud Run</strong> – We have exactly one process in Cloud Run, our <a href="https://hardcover.app/blog/how-we-reduced-a-1000-month-imgix-bill-to-1-using-google-cloud" data-type="post" data-id="851">Image Resize Service</a> (Imaginary) I wrote about last year. It cut our $1,000 bill down to $50/month or less with no loss in functionality. If you’re using Imgix or Cloudinary, it’s  kind of amazing.</p>



<p><strong>Google CDN</strong> – The Image Resize Service doesn’t do any caching, so we throw a CDN in front of it that aggressively caches images. </p>



<p>Cloud Run and the Google CDN have worked absolutely perfectly. I haven’t even touched them in 11 months. Not once. I hadn’t touched Google Cloud Storage either, but that was the problem. 😅</p>



<p>When I initially setup Google Cloud Storage, I made the bucket (the storage container per-environment) public with optional private files. This allowed user avatars, cover images and other images we show on the site to be publicly accessed, but save user uploaded CSVs privately in the same place.</p>



<p>For their part, Google adds a lot of alert messages when a bucket has public access. It’s almost like they know something I don’t. Turns out the Internet is a <a href="https://hardcover.app/books/the-dark-forest">Dark Forest</a> (I just re-read The Three Body Problem after the Netflix series and will use any chance I can to drop it into conversation 😂). </p>



<p>My decision to keep our Google Cloud Storage public was the culprit.</p>



<h2>So, What Actually Happened?</h2>



<p>We’re still working that out and looking for ways to improve, but here’s the theory.</p>



<p>Someone has been hitting our API pretty hard recently. They likely downloaded a large amount of data from it – including every edition with URLs for covers.</p>



<p>Those cover images are direct URLs to Google Cloud Storage. For example:</p>



<div>
<p>Example URL</p>


<pre aria-describedby="shcb-language-1" data-shcb-language-name="JavaScript" data-shcb-language-slug="javascript"><span><code>https:<span>//storage.googleapis.com/hardcover/external_data/ 36306160/04fdf2f73287526f8326413f4d3d7ec77999b832.jpeg</span></code></span><small id="shcb-language-1"><span>Code language:</span> <span>JavaScript</span> <span>(</span><span>javascript</span><span>)</span></small></pre></div>



<p>These are the images that were public.</p>



<p>Downloading a few images from here wouldn’t have shown up on my radar. In this case, someone decided to download up to 10k images/second… for close to 7 hours.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="271" src="https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.23.55%E2%80%AFPM-1024x271.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.23.55 https://hardcover.app/blog/PM-1024x271.png 1024w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.23.55 https://hardcover.app/blog/PM-300x79.png 300w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.23.55 https://hardcover.app/blog/PM-768x203.png 768w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.23.55 https://hardcover.app/blog/PM-1536x407.png 1536w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.23.55 https://hardcover.app/blog/PM-2048x542.png 2048w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.23.55 https://hardcover.app/blog/PM-1200x318.png 1200w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.23.55 https://hardcover.app/blog/PM-1980x524.png 1980w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>This is equivalent to about 650 mb/second for that time period. That’s about 16 TB of data. We don’t even have that much in our bucket! They must’ve downloaded many things multiple times.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="365" src="https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.24.01%E2%80%AFPM-1024x365.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.24.01 https://hardcover.app/blog/PM-1024x365.png 1024w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.24.01 https://hardcover.app/blog/PM-300x107.png 300w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.24.01 https://hardcover.app/blog/PM-768x274.png 768w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.24.01 https://hardcover.app/blog/PM-1200x427.png 1200w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-12.24.01 https://hardcover.app/blog/PM.png 1432w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>For most people in our Discord they’re using our API to create fun things based on their history. It turns out we need more protections in place to stop bulk access.</p>



<h2>An Easy Solution With Issues</h2>



<p>The solution for this technically difficult, but it’s a pain: making this bucket private. Doing that immediately would cause the site to no longer show images, and would prevent anyone using the API from getting images. We needed a plan to make it private and generate signed URLs for all images that expire after a set period of time.</p>



<p>Signed URLs are a variant of the original URL with additional parameters. I think of it like sending an address (the URL) and a combination (the additional parameters).</p>



<p>You can generate a signed URL using the Google Cloud Storage API, hitting it with a specific file and a duration. That URL will look something like this:</p>



<div>
<p>Example URL</p>


<pre aria-describedby="shcb-language-2" data-shcb-language-name="JavaScript" data-shcb-language-slug="javascript"><span><code>https:<span>//storage.googleapis.com/hardcover/external_data/36306160/04fdf2f73287526f8326413f4d3d7ec77999b832.jpeg?GoogleAccessId=hardcover-production%40hardcover-313100.iam.gserviceaccount.com&amp;Expires=1723846732&amp;Signature=gQ81vjCntrus3j5xbr2r7XEQ30DCTye4ikwdrAQvhwlGGeUJuJ760n9f2o%2B70zjM91%2Bng3C4pWgZzp2DFWdXH2%2BAZMFv1pYMzk%2F20x66NKnZ2dX%2BbQuVu6BgDsIw%2BvmLzEnsMbN6RGm0Dlq0V8e8JoEWrohR5UkN1n5YscnOBywZgsSxIQ8KrL079GeCvWvdE%2B%2BAldLuHT0JhFyo76hJE%2Ba7tCUBuL8drPQSKaHguLrbMjrtuW8%2FfuKRSOnY8wMgI%2FQcFVZPDuA5uVXchi67zVu26RFraBO93MxfhwuIpFHVft6ViRxLF0irLp%2FGDTzDPwpR5vBSLlMPk58ByxxTeg%3D%3D</span></code></span><small id="shcb-language-2"><span>Code language:</span> <span>JavaScript</span> <span>(</span><span>javascript</span><span>)</span></small></pre></div>



<p>This URL contains a few specific parameters that Google Cloud Storage can use to authenticate this URL including <code>GoogleAccessId</code>, <code>Expires</code> and the <code>Signature</code>. Unless all 3 of these are correct you’ll get an Access Denied error from Google Cloud Storage.</p>



<p>On the walk home from the coffee shop I started brainstorming how to add these to Hardcover. If you’re ever wondering if a walk will help you think: the answer is most likely yes. 😂</p>



<h3>Failed Solution #1: Change the URLs in our Database</h3>



<p>I know what I didn’t want to do: rewrite all images in our database. Even if we make them private, those image URLs are correct. Also, since signed URLs expire after a set period of time, if we went this route, we’d need to regenerate 5 million signed URLs over that time period.</p>



<p>This did get me thinking about how long we should allow URLs to be used for. <strong>I landed on one day</strong>. We can’t regenerate 5 million signed URLs everyday – nor do we need to. This option was out.</p>



<h3>Failed Solution #2: Update the API to return Signed URLs</h3>



<p>Our API (Hasura) connects straight to our database. If someone requests 100 books with covers, what they’re getting back is straight from our database. Ruby and Rails aren’t involved.</p>



<p>In other words, we have no way to override the static value from that column in the database. Nor should we. That endpoint to get data about editions and books should be allowed to be accessed at a much higher rate. If we were to generate signed URLs at that step it would slow down the entire system which relies on book data.</p>



<p>Having our API return signed URLs in bulk was out.</p>



<h3>Failed Solution #3: Generate Signed URLs in Next.js</h3>



<p>Next.js is responsible for presenting all information to visitors of this site. It seemed like this might be a valid solution. Before we show a URL for any image we could generate a signed URL, cache it in Redis for 24 hours then use that.</p>



<p>There are two major problems with this. First off, generating the signed URL would need to happen on the server. Unfortunately, we use cover images that have been downloaded client side. It’d be unrealistic to fetch information about a book on the Next.js client side, send it to the server to get the URL, then use that. Not impossible, but not great.</p>



<p>The other problem was bigger: API users wouldn’t have access to this! We’d effectively taken away the ability to download images.</p>



<h2>Actual Solution: Just use Ruby on Rails</h2>



<p>I’m a huge fan of Ruby on Rails. I’ve been using it since before version 1.0 back in 2005. All of Hardcover’s backend business logic is in Rails.</p>



<p>Back when I worked at Code School, we served a lot of videos. At one point our video host went down and we scurried to get a backup solution in place. We landed on using an intermediary service that would redirect to the actual host. I thought this would work for Hardcover too. </p>



<h3>Updating the Website to Support Signed URLs</h3>



<p>Here’s how that works in practice.</p>



<p>Rather including the image from Google Cloud Storage directly, we’d change this to proxy through our Ruby on Rails site. For example:</p>



<div>
<p>Example URL</p>


<pre aria-describedby="shcb-language-3" data-shcb-language-name="JavaScript" data-shcb-language-slug="javascript"><span><code>https:<span>//projector.hardcover.app/signed/images/crop?url=https://storage.googleapis.com/hardcover/…jpeg&amp;width=100&amp;height=100</span></code></span><small id="shcb-language-3"><span>Code language:</span> <span>JavaScript</span> <span>(</span><span>javascript</span><span>)</span></small></pre></div>



<p>That URL is doing a lot. Let’s break it down.</p>



<p>First, it’s hitting an endpoint in Rails, in this case it’s a route in our Ruby on Rails application.</p>



<div>
<p>rails/config/routes.rb</p>


<pre aria-describedby="shcb-language-4" data-shcb-language-name="Ruby" data-shcb-language-slug="ruby"><span><code>namespace <span>:signed_assets</span>, <span>path:</span> <span>:signed</span> <span>do</span>
  resource <span>:images</span> <span>do</span>
    get <span>:crop</span>
    get <span>:enlarge</span>
  <span>end</span>
<span>end</span></code></span><small id="shcb-language-4"><span>Code language:</span> <span>Ruby</span> <span>(</span><span>ruby</span><span>)</span></small></pre></div>



<p>This tells Rails to create a two new routes at <code>/signed/images/crop</code> and <code>/signed/images/enlarge</code>. These will go to the controller which needs two methods for <code>enlarge</code> and <code>crop</code>.</p>



<p>Those actions need to do a two things: generate a signed URL for the passed in URL and redirect to that URL.</p>



<p>It should also cache this generated URL. We don’t need to regenerate it every time someone looks at cover. I decided to cache these for 1 day.</p>



<div>
<p>rails/controllers/signed_assets/images_controller.rb</p>


<pre aria-describedby="shcb-language-5" data-shcb-language-name="Ruby" data-shcb-language-slug="ruby"><span><code><span><span>module</span> <span>SignedAssets</span></span>
  <span><span>class</span> <span>ImagesController</span> &lt; ApplicationController</span>

    <span># GET /signed/images/enlarge</span>
    <span><span>def</span> <span>enlarge</span></span>
      redirect_to_signed_url(<span>"enlarge"</span>)
    <span>end</span>

    <span># GET /signed/images/crop</span>
    <span><span>def</span> <span>crop</span></span>
      redirect_to_signed_url(<span>"crop"</span>)
    <span>end</span>

    private

    <span><span>def</span> <span>signed_params</span></span>
      @enlarge_params <span>||</span>= params.permit(<span>:url</span>, <span>:width</span>, <span>:height</span>, <span>:type</span>)
    <span>end</span>

    <span><span>def</span> <span>url</span></span>
      @url <span>||</span>= Rails.cache.fetch(<span>"/signed/images/signed/<span>#{signed_params[<span>:url</span>]}</span>"</span>, <span>expires_in:</span> <span>24</span>.hours) <span>do</span>
        ExternalStorage::Google::Cloud.sign(signed_params[<span>:url</span>])
      <span>end</span>
    <span>end</span>

    <span><span>def</span> <span>redirect_to_signed_url</span> <span>action</span></span>
      <span>if</span> url.<span>nil</span>?
        head <span>:unprocessable_entity</span>
      <span>else</span>
        redirect_to <span>"https://cdn.hardcover.app/<span>#{action}</span>?url=<span>#{CGI.escape(url)}</span>&amp;width=<span>#{signed_params[<span>:width</span>]}</span>&amp;height=<span>#{signed_params[<span>:height</span>]}</span>&amp;type=<span>#{signed_params[<span>:type</span>]}</span>"</span>
      <span>end</span>
    <span>end</span>
  <span>end</span>
<span>end</span></code></span><small id="shcb-language-5"><span>Code language:</span> <span>Ruby</span> <span>(</span><span>ruby</span><span>)</span></small></pre></div>



<p>This is a mostly standard Ruby on Rails Controller. The public actions are URL endpoints we set in the routes file. The private methods help with code reuse and organization.</p>



<p>The bulk of the work happens in the <code>url</code> method. </p>



<p>First, we check if the given URL is in the cache (we’re using Redis). If something with those contents exist in Redis, we return it any never run the contents of the block that comes after.</p>



<p>If a signed URL isn’t in the cache, we call <code>ExternalStorage::Google::Cloud.sign</code> to generate a signed URL.</p>



<p>I’m not going to get into generating a signed URL. We’re using the <a href="https://rubygems.org/gems/google-cloud-storage/versions/1.52.0">google-cloud-storage</a> Ruby gem which handles everything, including the line that actually hits the Google API:</p>



<div>
<p>ExternalStorage::Google::Cloud.sign</p>


<pre aria-describedby="shcb-language-6" data-shcb-language-name="Ruby" data-shcb-language-slug="ruby"><span><code>signed_url = file.signed_url <span>method:</span> <span>"GET"</span>, <span>expires:</span> <span>3600</span>*<span>25</span> <span># expires daily</span></code></span><small id="shcb-language-6"><span>Code language:</span> <span>Ruby</span> <span>(</span><span>ruby</span><span>)</span></small></pre></div>



<p>These URL endpoints need to be FAST. Loading a page with 100 covers means this endpoint will be hit 100 times. My first iteration didn’t have caching, which led to a 250 ms wait PER IMAGE. With caching it’s 250 ms for the <em>first request</em>, then less than 1 ms after that.</p>



<p>The generated URL will be the same, which also means that the image will be cached on the CDN. If a user refreshes a page, they’ll still hit Rails to generate URLs for all images, but they’ll use the images cached by their browser. (<em>side note: I’d like to improve this even more. Any recommendations?</em>)</p>



<h3>Updating the API to Support Signed URLs</h3>



<p>Things are working for our website visitors, but we need to do one more step for API users: create a new endpoint for generating signed URLs.</p>



<p>Hardcover has an API that registered users can use for accessing their book and reading data. If you’re building something with it, you’ll have our existing Google Cloud Storage URLs already.</p>



<p>I ended up creating a single new endpoint, <code>image_url_signed</code>. It takes in a URL (which could be a cover, avatar or anything) and we return a signed URL.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="270" src="https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.14.46%E2%80%AFPM-1024x270.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.14.46 https://hardcover.app/blog/PM-1024x270.png 1024w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.14.46 https://hardcover.app/blog/PM-300x79.png 300w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.14.46 https://hardcover.app/blog/PM-768x202.png 768w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.14.46 https://hardcover.app/blog/PM-1536x404.png 1536w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.14.46 https://hardcover.app/blog/PM-2048x539.png 2048w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.14.46 https://hardcover.app/blog/PM-1200x316.png 1200w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.14.46 https://hardcover.app/blog/PM-1980x521.png 1980w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>Behind the scenes this Hasura API endpoint will hit another Rails controller with a single endpoint for generating a signed URL. It’s pretty much the same as the other controller.</p>



<div>
<p>rails/app/controllers/hasura/signed_assets_controller.rb</p>


<pre aria-describedby="shcb-language-7" data-shcb-language-name="Ruby" data-shcb-language-slug="ruby"><span><code><span><span>module</span> <span>Hasura</span></span>
  <span><span>class</span> <span>SignedAssetsController</span> &lt; Hasura::BaseController</span>
    skip_before_action <span>:set_paper_trail_whodunnit</span>

    <span># Returns a signed asset URL for the given url</span>
    <span># GET /hasura/signed_assets</span>
    <span><span>def</span> <span>index</span></span>
      url = Rails.cache.fetch(<span>"/signed/images/signed/<span>#{input_url}</span>"</span>, <span>expires_in:</span> <span>24</span>.hours) <span>do</span>
        ExternalStorage::Google::Cloud.sign(input_url)
      <span>end</span>
      render <span>json:</span> {
        <span>url:</span> url
      } 
    <span>rescue</span> ExternalStorage::Google::Cloud::AccessDenied
      head <span>:forbidden</span>
    <span>end</span>

    private

    <span><span>def</span> <span>input_url</span></span>
      @input_url <span>||</span>= params.<span>require</span>(<span>:url</span>)
    <span>end</span>
  <span>end</span>
<span>end</span>
</code></span><small id="shcb-language-7"><span>Code language:</span> <span>Ruby</span> <span>(</span><span>ruby</span><span>)</span></small></pre></div>



<p>It even uses the same cache as for website users! 🙌</p>



<h3>Last Step: Throttling API Use</h3>



<p>With this setup everything <em>works</em>, but we haven’t fully fixed the problem. Someone could still hit our new API endpoints repeatedly and bypass our newfound security.</p>



<p>Hasura has an option that could help here: <strong>API Rate limits</strong>.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="984" src="https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.21.13%E2%80%AFPM-1024x984.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.21.13 https://hardcover.app/blog/PM-1024x984.png 1024w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.21.13 https://hardcover.app/blog/PM-300x288.png 300w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.21.13 https://hardcover.app/blog/PM-768x738.png 768w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.21.13 https://hardcover.app/blog/PM-1536x1476.png 1536w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.21.13 https://hardcover.app/blog/PM-2048x1968.png 2048w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.21.13 https://hardcover.app/blog/PM-1200x1153.png 1200w, https://wp.hardcover.app/wp-content/uploads/2024/08/Screenshot-2024-08-14-at-3.21.13 https://hardcover.app/blog/PM-1980x1903.png 1980w" sizes="(max-width: 1024px) 100vw, 1024px"></figure>



<p>Unfortunately, this is a Hasura Enterprise feature, and we’re mere peasants on the free version. It can even rate limit by user id from a JWT – which is exactly how we determine the owner of a request.</p>



<p>I’m considering moving back to enterprise once we can afford it, but that’s out for now.</p>



<p>Fortunately this endpoint is in Rails. We can lock it down on that side instead. After a little Googling, I found the beautiful <a href="https://github.com/rack/rack-attack">rack-attack gem</a> that does exactly what I was looking for.</p>



<p>If you’re not from the Ruby world, you might not have heard of <a href="https://github.com/rack/rack">Rack</a>. Think of Rack is the base layer that most Ruby web frameworks are built on (Ruby on Rails, Sinatra, Hanami and others). It handles the low level request/response cycle.</p>



<p>The rack-attack gem builds on that with features for IP allowing, blocking and throttling.</p>



<p>In our case we wanted to throttle the API endpoint with at 60 requests a minute, but the website endpoint at 500 a minute – equal to browsing at a steady pace.</p>



<p>This ended up being so much easier than I thought. It only needs a new initializer.</p>



<div>
<p>rails/config/initializers/rack-attack.rb</p>


<pre aria-describedby="shcb-language-8" data-shcb-language-name="Ruby" data-shcb-language-slug="ruby"><span><code><span><span>class</span> <span>Rack::Attack</span></span>
  Rack::Attack.cache.store = ActiveSupport::Cache::RedisCacheStore.new(<span>url:</span> ENV[<span>"REDIS_URL"</span>]) 

  throttle(<span>"hasura/signed_assets"</span>, <span>limit:</span> <span>60</span>, <span>period:</span> <span>1</span>.minute) <span>do</span> <span>|req|</span>
    req.params[<span>"user_id"</span>] <span>if</span> req.path == <span>"/hasura/signed_assets"</span>
  <span>end</span>

  throttle(<span>"/signed/images/enlarge"</span>, <span>limit:</span> <span>500</span>, <span>period:</span> <span>1</span>.minute) <span>do</span> <span>|req|</span>
    req.ip <span>if</span> req.path == <span>"/signed/images/enlarge"</span> <span>||</span> req.path == <span>"/signed/images/crop"</span>
  <span>end</span>
<span>end</span></code></span><small id="shcb-language-8"><span>Code language:</span> <span>Ruby</span> <span>(</span><span>ruby</span><span>)</span></small></pre></div>



<p>This also uses Redis and will generate a key for each endpoint using the value returned from the block.</p>



<p>This allows us to throttle the API endpoint to 60 requests/minute based on <code>user_id</code>, while the public endpoint used by the website has a limit of 500 requests/minute based on IP address.</p>



<p>What’s great about this setup is that this run before Rails has even handled the request – that’s the beauty of middleware. This will return a <strong>429 Too Many Requests</strong> header after they’ve reached their limit.</p>



<h2>Limiting the API More?</h2>



<p>One of the reasons I started Hardcover in the first place was because <a href="https://hardcover.app/blog/manifesto" data-type="post" data-id="126">Goodreads discontinued their API</a>. I’ve never run a public API before, but want to make sure we’re being good stewards of book data by the community as well as everyones personal book data.</p>



<p>I have a few other takeaways from this experience that we’ll put into place in the near future: mostly for rate limiting, reporting, limiting API access to areas that you don’t need access to and expanding on our API terms of service.</p>



<p>What will always be true is that you’ll be able to get any data about books, editions, authors, series, publishers, characters, your library and whatever people that follow you have decided to share. 📚</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cleaning up the aging brain: Scientists restore brain's trash disposal system (185 pts)]]></title>
            <link>https://www.sciencedaily.com/releases/2024/08/240815124156.htm</link>
            <guid>41260050</guid>
            <pubDate>Thu, 15 Aug 2024 20:31:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sciencedaily.com/releases/2024/08/240815124156.htm">https://www.sciencedaily.com/releases/2024/08/240815124156.htm</a>, See on <a href="https://news.ycombinator.com/item?id=41260050">Hacker News</a></p>
Couldn't get https://www.sciencedaily.com/releases/2024/08/240815124156.htm: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Hermes 3: The First Fine-Tuned Llama 3.1 405B Model (137 pts)]]></title>
            <link>https://lambdalabs.com/blog/unveiling-hermes-3-the-first-fine-tuned-llama-3.1-405b-model-is-on-lambdas-cloud</link>
            <guid>41260040</guid>
            <pubDate>Thu, 15 Aug 2024 20:30:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lambdalabs.com/blog/unveiling-hermes-3-the-first-fine-tuned-llama-3.1-405b-model-is-on-lambdas-cloud">https://lambdalabs.com/blog/unveiling-hermes-3-the-first-fine-tuned-llama-3.1-405b-model-is-on-lambdas-cloud</a>, See on <a href="https://news.ycombinator.com/item?id=41260040">Hacker News</a></p>
<div id="readability-page-1" class="page"><p><span id="hs_cos_wrapper_post_body" data-hs-cos-general-type="meta_field" data-hs-cos-type="rich_text"><h2><span><strong>Try Hermes 3 for free with the New Lambda Chat Completions API and Lambda Chat.</strong></span></h2>

<h2><strong>Introducing Hermes 3: A new era for Llama fine-tuning</strong></h2>
<div><p>We are thrilled to announce our partner Nous Research’s launch of Hermes 3 —<span>the first full-parameter fine-tune of Meta's groundbreaking Llama 3.1 405B model</span>, trained on Lambda’s 1-Click Cluster. Designed for the open-source community, Hermes 3 is a neutrally-aligned generalist model with exceptional reasoning capabilities, now available for free through the new <a href="http://api.lambdalabs.com/docs" rel="noopener" target="_blank">Lambda Chat Completions API</a> and <a href="https://lambda.chat/" rel="noopener" target="_blank">Lambda Chat</a> interface.</p><p>Powered by an 8-node Lambda <a href="https://lambdalabs.com/service/gpu-cloud/1-click-clusters" rel="noopener" target="_blank">1-Click Cluster</a>, <a href="https://nousresearch.com/hermes3/" rel="noopener" target="_blank">Nous Research</a> achieved outstanding results in just a few short weeks. Hermes 3 meets or exceeds Llama 3.1 Instruct on Open Source LLM benchmarks (see table below).&nbsp;</p></div>
<!--more-->
<blockquote>
<p><em>"Lambda’s 1-Click Clusters make the experience of renting and using a multi-node cluster as simple and easy as renting and using a single node,"&nbsp;</em></p>
</blockquote>
<p>-Jeffrey Quesnelle, co-founder of Nous Research</p>

<h2><strong>Hermes 3: A uniquely unlocked, uncensored, and steerable model</strong></h2>
<p>Hermes 3 is the latest advancement in Nous Research's series of models, which have been downloaded over 33 million times. This instruct-tuned model is specifically designed to be flexible and adept at following instructions. It excels in complex role-playing and creative writing, offering users more immersive character portrayals, deeper simulations, and unexpected fictional experiences.</p>
<p><img src="https://lambdalabs.com/hs-fs/hubfs/2024-08-14_20-03-11.png?width=1240&amp;height=1170&amp;name=2024-08-14_20-03-11.png" width="1240" height="1170" loading="lazy" alt="Hermes 3 benchmarks" srcset="https://lambdalabs.com/hs-fs/hubfs/2024-08-14_20-03-11.png?width=620&amp;height=585&amp;name=2024-08-14_20-03-11.png 620w, https://lambdalabs.com/hs-fs/hubfs/2024-08-14_20-03-11.png?width=1240&amp;height=1170&amp;name=2024-08-14_20-03-11.png 1240w, https://lambdalabs.com/hs-fs/hubfs/2024-08-14_20-03-11.png?width=1860&amp;height=1755&amp;name=2024-08-14_20-03-11.png 1860w, https://lambdalabs.com/hs-fs/hubfs/2024-08-14_20-03-11.png?width=2480&amp;height=2340&amp;name=2024-08-14_20-03-11.png 2480w, https://lambdalabs.com/hs-fs/hubfs/2024-08-14_20-03-11.png?width=3100&amp;height=2925&amp;name=2024-08-14_20-03-11.png 3100w, https://lambdalabs.com/hs-fs/hubfs/2024-08-14_20-03-11.png?width=3720&amp;height=3510&amp;name=2024-08-14_20-03-11.png 3720w" sizes="(max-width: 1240px) 100vw, 1240px"></p>
<p>In addition to its creative capabilities, Hermes 3 is an invaluable tool for professionals requiring advanced reasoning and decision-making abilities. Its strategic planning and operational decision-making features include function-calling, step-labeled reasoning, and more.</p>

<h2><strong>Optimized for efficiency</strong></h2>
<p><span>Hermes 3 was meticulously trained using synthesized data and supervised fine-tuning on Meta’s Llama 3.1 405B base model. This was followed by reinforcement learning from human feedback (RLHF) and finally, quantization using Neural Magic’s FP8 method.<p><span>This optimization effectively reduces the model's VRAM and disk requirements by approximately 50%, allowing it to run on a single node.</span></p></span></p>
<blockquote>
<p><span><em>“Since the start of my journey in AI I wanted to bring about the realization of an open source frontier level model that aligns to you, the user - not some corporation or higher authority before the user. Today, with Hermes 3 405B, we've achieved that goal, a model that is frontier level, but truly aligned to you.&nbsp;</em><p><em>Thanks to our hard work on data synthesis and post training research, we were able to make a dataset that is fully synthetic over almost a year in the making to train Hermes 3 - and will be releasing much more to come.”</em></p></span></p>
</blockquote>
<p><span>-Teknium, cofounder of Nous Research</span></p>
<p><span>For those seeking dedicated access and flexibility, Hermes 3 can run on a single node (available on-demand on <a href="https://lambdalabs.com/service/gpu-cloud" rel="noopener" target="_blank">Lambda’s Cloud</a>), or quickly scale to a multi-node 1-Click Cluster for further fine-tuning using Lambda's scalable cluster infrastructure.&nbsp;</span></p>

<h2><strong>T</strong><strong>ry Hermes 3 for free - for a limited time!</strong></h2>
<div><p>We’re excited to offer the AI/ML community free access to Hermes 3 through Lambda’s new Chat Completions API, fully compatible with the OpenAI API. It provides endpoints for creating completions, chat completions and listing models.</p><p>No complex setup is required—simply generate a Cloud API key from Lambda’s dashboard (<a href="https://cloud.lambdalabs.com/sign-up" rel="noopener" target="_blank">sign-up</a>) and start exploring with our <a href="http://api.lambdalabs.com/docs" rel="noopener" target="_blank">documentation</a>’s help.&nbsp;</p><p>For a more interactive experience, we’re also providing a simple chat interface: try your prompts in <a href="https://lambda.chat/" rel="noopener" target="_blank">Lambda Chat</a>!<a href="https://lambda.chat/" rel="noopener" target="_blank"></a></p></div></span>
      </p></div>]]></description>
        </item>
    </channel>
</rss>