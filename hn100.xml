<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Wed, 15 Oct 2025 04:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[FSF announces Librephone project (435 pts)]]></title>
            <link>https://www.fsf.org/news/librephone-project</link>
            <guid>45586339</guid>
            <pubDate>Tue, 14 Oct 2025 23:47:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.fsf.org/news/librephone-project">https://www.fsf.org/news/librephone-project</a>, See on <a href="https://news.ycombinator.com/item?id=45586339">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="parent-fieldname-text">
            <p><a href="https://fsf.org/campaigns/librephone">Librephone</a> is a new initiative by the <a href="https://fsf.org/">FSF</a> with the goal of
bringing <em>full</em> freedom to the mobile computing environment.  The
vast majority of software users around the world use a mobile
phone as their primary computing device. After forty years of
advocacy for computing freedom, the FSF will now work to bring
the right to <a href="https://www.gnu.org/philosophy/free-sw.html">study, change, share, and modify</a> the programs
users depend on in their daily lives to mobile phones.</p>
<p>"Forty years ago, when the FSF was founded, our focus was on
providing an operating system people could use on desktop and
server computers in freedom. Times have changed, technology has
progressed, but our commitment to freedom hasn't," said Zoë
Kooyman, executive director of the FSF. "A lot of work has been
done in mobile phone freedom over the years that we'll be
building on. The FSF is now ready to do what is necessary to
bring freedom to cell phone users. Given the complexity of the
devices, this work will take time, but we're used to playing the
long game."</p>
<p>Practically, Librephone aims to close the last gaps between
existing distributions of the Android operating system and
software freedom. The FSF has hired experienced developer Rob
Savoye (DejaGNU, Gnash, OpenStreetMap, and more) to lead the
technical project. He is currently investigating the state of
device firmware and binary blobs in other mobile phone freedom
projects, prioritizing the free software work done by the not
entirely free software mobile phone operating system LineageOS.</p>
<p>The initial work is funded by a donation from FSF board member John
Gilmore, who explained, "I have enjoyed using a mobile phone running
LineageOS with MicroG and F-Droid for years, which eliminates the
spyware and control that Google embeds in standard Android phones. I
later discovered that the LineageOS distribution links in significant
proprietary binary modules copied from the firmware of particular
phones. Rather than accept this sad situation, I looked for
collaborators to reverse-engineer and replace those proprietary
modules with fully free software, for at least one modern phone." </p>
<p>Triaging existing packages and device compatibility to find a
phone with the fewest, most fixable freedom problems is the first
step. From there, the FSF and Savoye aim to reverse-engineer and
replace the remaining nonfree software. Librephone will serve
existing developers and projects who aim to build a fully
functioning and free (as in freedom) Android-compatible OS.</p>
<p>The FSF has been supporting earlier free software mobile phone 
projects such as <a href="https://my.fsf.org/civicrm/contribute/transact?reset=1&amp;id=19">Replicant</a>, and is excited to launch this new
effort. Gilmore added: "We were lucky to find Rob Savoye, a great
engineer with decades of experience in free software, embedded
systems, and project management." </p>
<p>When asked to comment on the project, Savoye said: "As a
long-time embedded systems engineer who has worked on mobile
devices for decades, I'm looking forward to this opportunity to
work towards a freedom-supporting phone and help users gain
control over their phone hardware."</p>
<p>He added: "Making fully free software for a modern commercial
phone will not be quick, easy, or cheap, but our project benefits
from standing on the shoulders of giants who have done most of
the work. Please join us, with your efforts and/or with your
donations." </p>
<p><em>Besides the campaign information at <a href="https://fsf.org/campaigns/librephone">https://fsf.org/campaigns/librephone</a>, the
project will have its own website at <a href="https://librephone.fsf.org/">https://librephone.fsf.org</a>
and anyone can connect using #librephone irc on irc.libera.chat.</em></p>
<h4>About the Free Software Foundation</h4>
<p>The FSF, founded in 1985, is dedicated to promoting computer users'
right to use, study, copy, modify, and redistribute computer programs.
The FSF promotes the development and use of free (as in freedom)
software -- particularly the GNU operating system and its GNU/Linux
variants -- and free documentation for free software. The FSF also
helps to spread awareness of the ethical and political issues of
freedom in the use of software, and its websites, located at
<a href="https://www.fsf.org/">https://www.fsf.org</a> and <a href="https://www.gnu.org/">https://www.gnu.org</a>, are an important
source of information about GNU/Linux. Donations to support the FSF's
work can be made at <a href="https://donate.fsf.org/">https://donate.fsf.org</a>. The FSF is a remote 
organization, incorporated in Massachusetts, US.</p>
<h4>MEDIA CONTACT</h4>
<p>Greg Farough<br>
Campaigns Manager  <br>
Free Software Foundation  <br>
+1 (617) 542 5942  <br>
<a href="mailto:campaigns@fsf.org">campaigns@fsf.org</a><br>
</p>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[GrapheneOS is finally ready to break free from Pixels and it may never look back (210 pts)]]></title>
            <link>https://www.androidauthority.com/graphene-os-major-android-oem-partnership-3606853/</link>
            <guid>45585869</guid>
            <pubDate>Tue, 14 Oct 2025 22:36:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.androidauthority.com/graphene-os-major-android-oem-partnership-3606853/">https://www.androidauthority.com/graphene-os-major-android-oem-partnership-3606853/</a>, See on <a href="https://news.ycombinator.com/item?id=45585869">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-content-wrapper="true"><div tabindex="0" role="button"><picture><source sizes="(min-width: 64rem) 51.25rem, 80vw" srcset="https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation.jpg.webp 1919w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-1536w-864h.jpg.webp 1536w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-675w-380h.jpg.webp 675w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-64w-36h.jpg.webp 64w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-1000w-563h.jpg.webp 1000w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-300w-170h.jpg.webp 300w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-1280w-720h.jpg.webp 1280w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-840w-472h.jpg.webp 840w" type="image/webp"><img decoding="async" loading="eager" sizes="(min-width: 64rem) 51.25rem, 80vw" title="grapheneos boot animation" srcset="https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation.jpg 1919w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-1536w-864h.jpg 1536w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-675w-380h.jpg 675w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-64w-36h.jpg 64w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-1000w-563h.jpg 1000w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-300w-170h.jpg 300w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-1280w-720h.jpg 1280w, https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation-840w-472h.jpg 840w" alt="grapheneos boot animation" src="https://www.androidauthority.com/wp-content/uploads/2023/02/grapheneos-boot-animation.jpg"></picture><div><p>Calvin Wankhede / Android Authority</p></div></div><div data-container-type="content"><p>TL;DR</p>
<ul>
<li>The makers of GrapheneOS have confirmed they are partnering with a major Android OEM to bring the privacy-focused Android fork to Snapdragon-powered smartphones.</li>
<li>The project has confirmed it’s bringing support for Pixel 10, but is unsure whether support will continue for Pixel 11.</li>
<li>GrapheneOS didn’t reveal the name of its new partner, but said that those devices will be priced in the same range as Pixels.</li>
</ul>
</div><p><a href="https://www.androidauthority.com/why-i-use-grapheneos-on-pixel-3575477/">GrapheneOS</a>, the popular privacy-focused Android fork known for its exclusive support of Google Pixel phones, is about to cast a much wider net. The project has confirmed it’s working with a major <a href="https://www.androidauthority.com/best-android-phone-3563254/">Android smartphone</a> manufacturer to bring its secure operating system to future flagship phones, as first spotted by <a href="https://piunikaweb.com/2025/10/13/grapheneos-ending-pixel-exclusivity-new-oem/" target="_blank" rel="noopener"><em>PiunikaWeb</em></a>.</p><p>Until now, GrapheneOS has been available only on Pixel phones, making Google’s flagships popular among privacy enthusiasts, journalists, and, as a Spanish police report suggested earlier this year, <a href="https://www.androidauthority.com/google-pixel-organized-crime-preferred-phone-3573578/">even organized crime groups in Catalonia</a>. But that Pixel exclusivity may end by 2026 or 2027.</p><div tabindex="0" role="button"><picture><source sizes="(min-width: 64rem) 51.25rem, 80vw" srcset="https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Android-OEM-partnership-confirmation.jpg.webp 800w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Android-OEM-partnership-confirmation-64w-42h.jpg.webp 64w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Android-OEM-partnership-confirmation-581w-380h.jpg.webp 581w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Android-OEM-partnership-confirmation-675w-441h.jpg.webp 675w" type="image/webp"><img decoding="async" loading="lazy" sizes="(min-width: 64rem) 51.25rem, 80vw" title="Graphene OS Android OEM partnership confirmation" srcset="https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Android-OEM-partnership-confirmation.jpg 800w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Android-OEM-partnership-confirmation-64w-42h.jpg 64w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Android-OEM-partnership-confirmation-581w-380h.jpg 581w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Android-OEM-partnership-confirmation-675w-441h.jpg 675w" alt="Graphene OS Android OEM partnership confirmation" src="https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Android-OEM-partnership-confirmation.jpg"></picture></div><div tabindex="0" role="button"><picture><source sizes="(min-width: 64rem) 51.25rem, 80vw" srcset="https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-android-OEM-partnership-timeline.jpg.webp 800w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-android-OEM-partnership-timeline-64w-24h.jpg.webp 64w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-android-OEM-partnership-timeline-675w-255h.jpg.webp 675w" type="image/webp"><img decoding="async" loading="lazy" sizes="(min-width: 64rem) 51.25rem, 80vw" title="Graphene OS android OEM partnership timeline" srcset="https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-android-OEM-partnership-timeline.jpg 800w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-android-OEM-partnership-timeline-64w-24h.jpg 64w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-android-OEM-partnership-timeline-675w-255h.jpg 675w" alt="Graphene OS android OEM partnership timeline" src="https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-android-OEM-partnership-timeline.jpg"></picture></div><p>GrapheneOS revealed in a <a href="https://www.reddit.com/r/GrapheneOS/comments/1o32gpg/comment/nivsx0k/" target="_blank" rel="noopener">Reddit thread</a> that it has been working with a “major Android OEM” since June 2025 to enable official support for “future versions of their existing models.” These devices will reportedly use flagship Snapdragon chips, a notable shift from Google’s in-house Tensor processors.</p><p>The project explained that only Pixels have met its strict security and update requirements so far. However, the new partnership suggests that another OEM is finally matching those standards. GrapheneOS also hinted that the mysterious partner’s devices will be “priced similarly to Pixels” and available globally as part of the brand’s standard lineup.</p><p>Sadly, GrapheneOS didn’t reveal the name of its new partner. However, folks are speculating it could be Nothing, given it’s one of the few OEMs that allow bootloader unlocking, which is a prerequisite for installing GrapheneOS. That said, Nothing doesn’t really qualify as a “major Android OEM” right now.</p><div tabindex="0" role="button"><picture><source sizes="(min-width: 64rem) 51.25rem, 80vw" srcset="https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Pixel-Support-Ambiguity.jpg.webp 800w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Pixel-Support-Ambiguity-64w-12h.jpg.webp 64w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Pixel-Support-Ambiguity-675w-126h.jpg.webp 675w" type="image/webp"><img decoding="async" loading="lazy" sizes="(min-width: 64rem) 51.25rem, 80vw" title="Graphene OS Pixel Support Ambiguity" srcset="https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Pixel-Support-Ambiguity.jpg 800w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Pixel-Support-Ambiguity-64w-12h.jpg 64w, https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Pixel-Support-Ambiguity-675w-126h.jpg 675w" alt="Graphene OS Pixel Support Ambiguity" src="https://www.androidauthority.com/wp-content/uploads/2025/10/Graphene-OS-Pixel-Support-Ambiguity.jpg"></picture></div><p>The announcement comes after the project publicly criticized Google’s extended security patch timelines. The platform argued that Google leaves vulnerabilities exposed for months. Working with a brand that grants earlier patch access could allow GrapheneOS to maintain its high security standards independent of Google.</p><p>For Pixel owners, nothing changes, at least for now. The OS will continue to support existing devices until their end-of-life. GrapheneOS support is also coming for Pixel 10, but the project is still considering whether or not to add support for Pixel 11.</p><div data-container-type="content"><p>Thank you for being part of our community. Read our&nbsp;<a href="https://www.androidauthority.com/android-authority-comment-policy/" target="_blank" rel="noopener noreferrer" data-stringify-link="https://www.androidauthority.com/android-authority-comment-policy/" data-sk="tooltip_parent">Comment Policy</a> before posting.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Surveillance Secrets (341 pts)]]></title>
            <link>https://www.lighthousereports.com/investigation/surveillance-secrets/</link>
            <guid>45584498</guid>
            <pubDate>Tue, 14 Oct 2025 20:36:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.lighthousereports.com/investigation/surveillance-secrets/">https://www.lighthousereports.com/investigation/surveillance-secrets/</a>, See on <a href="https://news.ycombinator.com/item?id=45584498">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><strong>In June, a sharp-suited Austrian executive of one of the world’s most significant yet little-known surveillance companies told a prospective client that he could “go to prison” for organising the deal they were discussing. But the conversation did not end there.</strong></p>
<p>The executive, Günther Rudolph, was seated at a booth at ISS World in Prague, a secretive trade fair for advanced surveillance technology companies. He went on to explain how his firm, First Wap, could provide sophisticated phone-tracking software called Altamides, capable of pinpointing any person in the world. The buyer? A private mining company, owned by an individual under sanction, who intended to use it to surveil environmental protestors. “I think we’re the only ones who can deliver,” Rudolph said.</p>
<p>What Rudolph did not know: he was talking to an undercover reporter from Lighthouse.</p>
<p>The road to that conference room in Prague began with a vast archive of data, found by a Lighthouse reporter on the deep web, containing more than a million tracking operations: efforts to grab real-time locations of thousands of people worldwide. Investigating that archive — and First Wap’s activities — drew together more than 70 journalists from 14 media outlets.</p>
<p>What emerged is one of the most complete pictures to date of the modern surveillance industry. The tracking archive is unprecedented in scope, and reveals how the company and its clients surveilled all types of people from all over the world. Reporters interviewed more than a hundred victims, as well as former employees and industry insiders. A trove of confidential emails and documents provide a detailed inside account of how First Wap’s tech was marketed to authoritarian governments and accessed by corporate actors. Behind closed doors, First Wap’s executives touted their ability to hack WhatsApp accounts, and laughed about evading sanctions.</p>
<p>The surveillance industry has long maintained that its tools are deployed exclusively by government agencies to fight serious crime, portraying instances of misuse as rare exceptions. This investigation definitively dismantles that narrative.</p>
<p><iframe title="They Tracked World Leaders, a Vatican Enemy, and Maybe You" width="500" height="281" src="https://www.youtube.com/embed/xfWyU5iXJ3I?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe></p>
<h2 id="making-sense-of-a-secret-data-trove">Making sense of a secret data trove</h2>
<p>This investigation began with an archive of data. This is not the first archive related to a surveillance company’s activities, but it is certainly the most granular. It contains 1.5 million records, more than 14,000 unique phone numbers, and people surveilled in over 160 countries. It represents an extraordinarily detailed account of when and where people were tracked, and what users of the tracking tool saw.</p>
<p>The only clue to a target’s identity was a phone number. A team of reporters at Lighthouse and paper trail media spent months painstakingly identifying the owners of those phone numbers. To drill down into the data and better understand it, we divided it into “clusters” of targets — networks of people connected in time or space. As we investigated clusters and put names to phone numbers, stories began to emerge.</p>
<p>For a more in-depth explanation of how we analysed the dataset, see our <a href="https://www.lighthousereports.com/methodology/surveillance-secrets-explainer/" target="_blank" rel="noopener">technical explainer</a>.</p>
<figure id="attachment_2872" aria-describedby="caption-attachment-2872"><picture><source type="image/webp" srcset="https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-scaled-jpg.webp 2560w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-300x161-jpg.webp 300w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-980x528-jpg.webp 980w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-768x413-jpg.webp 768w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-1536x827-jpg.webp 1536w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-2048x1102-jpg.webp 2048w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-1500x807-jpg.webp 1500w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-93x50-jpg.webp 93w" sizes="(max-width: 1000px) 100vw, 1000px"><img data-od-added-loading="" data-od-replaced-sizes="(max-width: 1000px) 100vw, 1000px" loading="lazy" data-recalc-dims="1" data-dominant-color="242427" data-has-transparency="false" decoding="async" src="https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-scaled.jpg?resize=2560%2C1378&amp;ssl=1" alt="" width="2560" height="1378" srcset="https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-scaled.jpg?w=2560&amp;ssl=1 2560w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-scaled.jpg?resize=300%2C161&amp;ssl=1 300w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-scaled.jpg?resize=980%2C528&amp;ssl=1 980w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-scaled.jpg?resize=768%2C413&amp;ssl=1 768w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-scaled.jpg?resize=1536%2C827&amp;ssl=1 1536w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-scaled.jpg?resize=2048%2C1102&amp;ssl=1 2048w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-scaled.jpg?resize=1500%2C807&amp;ssl=1 1500w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/notus_map-scaled.jpg?resize=93%2C50&amp;ssl=1 93w" sizes="auto, (max-width: 1000px) 100vw, 1000px"></picture><figcaption id="caption-attachment-2872">A sample of the location tracking data. Source: Lighthouse</figcaption></figure>
<p>The Altamides archive is global in scope. We found high-profile individuals, including powerful political figures such as the former Prime Minister of Qatar and the wife of ousted Syrian dictator Bashar al-Assad. We found Netflix producer Adam Ciralsky, Blackwater founder Erik Prince, Nobel Peace Prize nominee Benny Wenda, Austropop star Wolfgang Ambros, Tel Aviv district prosecutor Liat Ben Ari and Ali Nur Yasin, a senior editor at our Indonesian partner Tempo.</p>
<p>In Italy, investigative journalist Gianluigi Nuzzi was tracked days after publishing a dramatic exposé of corruption in the Vatican, as police closed in on his source. In California, Anne Wojcicki, founder of DNA startup 23andMe and then married to Google’s Sergey Brin, was tracked more than a thousand times as she moved across Silicon Valley. And in South Africa, associates of Rwandan opposition leader Patrick Karegeya were tracked before his assassination in a Johannesburg hotel room.</p>
<p>As our reporting partners dug into the archive, they found other traces of surveillance activity on their doorsteps. In Austria, home of First Wap’s founder Josef Fuchs, Der Standard uncovered a mystery surrounding a tracking spate of high-ranking employees at energy drink giant Red Bull. In Norway, NRK examined how Altamides zeroed in on a top telecom executive. In Indonesia, interviewees told our partner Tempo that they believed they had been targeted because they had taken part in political activities or spoken out against the government. In Serbia, KRIK identified targets in the energy industry, while in Israel, Haaretz located high profile lawyers and businessmen with interests in Africa and the Gulf.</p>
<p>First Wap said in a response to this investigation that it denies “any illegal activities” or “human rights violations.” The company said it could not comment on specific allegations that could “enable client identification.” It further elaborated that the company does not perform any tracking itself and that “after installation” of Altamides it has no further knowledge of how the product is used. First Wap emphasized that its technology is used by law enforcement to “fight against organized crime, terrorism and corruption.”</p>
<h2 id="surveillance-without-borders">Surveillance without borders</h2>
<p>In 2012, Sophia (not her real name) was walking near the coast of Goa on vacation, unaware that her movements were being monitored from halfway around the world with government-grade surveillance tech. But she was not being tracked by an intelligence or law enforcement agency. She was being stalked by a man who had been pursuing her, following her over the course of ten months.</p>
<p>Sophia’s case illustrates how Altamides proliferated far beyond the hands of governments to non-government actors, who used it to surveil victims for commercial and personal purposes. In addition to business leaders and politically-exposed individuals, the Altamides archive contains hundreds of regular people: a teacher, a therapist, a tattoo artist.</p>
<p>First Wap’s surveillance software was marketed through a shadowy network of middlemen who resold the system to clients worldwide. Confidential documents obtained by this investigation detail the operations of one such company, the British corporate investigations firm KCS Group. As the Arab Spring unfolded across the Middle East and North Africa, documents show that KCS attempted to capitalise on the unrest throughout the region, making concerted efforts to sell the tracking system to governments in Morocco and Algeria, as well as other countries in Africa and Asia. But at the same time it was using Altamides for corporate investigation work, digging for dirt on clients’ opponents. The company told us that it “has not been involved in selling or using inappropriate surveillance materials” and is “committed to maintaining ethical standards in all our operations.”</p>
<h2 id="a-ruthless-pioneer">A ruthless pioneer</h2>
<p>Unlike other industry heavyweights, which have seen years of adverse coverage because their customers targeted journalists, activists, businesspeople and diplomats, First Wap has thrived for two decades without falling under the spotlight. The story of Altamides dates back to the early 2000s, when former Siemens engineer Josef Fuchs recognised a critical vulnerability in the global telecom network. By exploiting an outdated – but still essential – communication protocol known as SS7, he could trick phone networks into revealing the locations of their users. Seeing a new business opportunity, Fuchs quickly pivoted his Jakarta-based company away from its focus on marketing messages, turning it into one of the world’s first phone-tracking firms. Its arrival on the market was seismic. At a time when Blackberrys ruled and Nokias were everywhere, a user could enter a phone number and the software would pinpoint its location anywhere in the world, within seconds.</p>
<p><picture><source type="image/webp" srcset="https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/Notus-website-screenshot-min-scaled-e1760453955964.webp 1353w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/Notus-website-screenshot-min-scaled-e1760453955964-300x278.webp 300w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/Notus-website-screenshot-min-scaled-e1760453955964-980x908.webp 980w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/Notus-website-screenshot-min-scaled-e1760453955964-768x712.webp 768w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/Notus-website-screenshot-min-scaled-e1760453955964-54x50.webp 54w" sizes="(max-width: 1000px) 100vw, 1000px"><img data-od-added-loading="" data-od-replaced-sizes="(max-width: 1000px) 100vw, 1000px" loading="lazy" data-recalc-dims="1" data-dominant-color="9598a1" data-has-transparency="false" decoding="async" src="https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/Notus-website-screenshot-min-scaled-e1760453955964.jpg?resize=1353%2C1254&amp;ssl=1" alt="" width="1353" height="1254" srcset="https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/Notus-website-screenshot-min-scaled-e1760453955964.jpg?w=1353&amp;ssl=1 1353w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/Notus-website-screenshot-min-scaled-e1760453955964.jpg?resize=300%2C278&amp;ssl=1 300w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/Notus-website-screenshot-min-scaled-e1760453955964.jpg?resize=980%2C908&amp;ssl=1 980w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/Notus-website-screenshot-min-scaled-e1760453955964.jpg?resize=768%2C712&amp;ssl=1 768w, https://i0.wp.com/www.lighthousereports.com/wp-content/uploads/2025/10/Notus-website-screenshot-min-scaled-e1760453955964.jpg?resize=54%2C50&amp;ssl=1 54w" sizes="auto, (max-width: 1000px) 100vw, 1000px"></picture></p>
<p>Since then, the company has quietly built a globe-spanning phone tracking empire, operating in the shadows, without any apparent red lines. It has also expanded its surveillance arsenal, adding features to Altamides that allow it to intercept SMS messages, listen in on phone calls, and even breach encrypted messaging apps like WhatsApp.</p>
<h2 id="we-can-find-a-way">“We can find a way”</h2>
<p>Our initial reporting surfaced dozens of non-criminal people surveilled without their knowledge by the company. Data, sources we spoke to and documents we examined indicated that Altamides had been used by authoritarian governments and, without lawful basis, by non-governmental clients. We decided it would be in the public interest to carry out an undercover operation to better understand what red lines the company placed around use of its products.</p>
<p>In a statement, First Wap insisted to us that it “vets and verifies any government client/final user for sanctions compliance prior to the signature of any agreement” and that “there has never been any exception to this.”</p>
<p>Testing the red lines required a fake character, complete with a fake company name and LinkedIn. One of Lighthouse’s reporters became Albert, a South Africa-based businessman who runs a boutique “research consultancy” registered in the British Virgin Islands. Accompanying him was Abdou, a colleague, who would be playing a mover and shaker with political connections throughout West Africa. They signed up for ISS World in the Czech Republic, the largest annual surveillance technology fair, to pitch some projects and see how the company responded.</p>
<p>So this June, our reporter found himself in a Prague hotel room, straightening a suit jacket outfitted with a hidden camera.</p>
<p>Albert and Abdou met First Wap’s sales director Günther Rudolph at the company’s booth, to discuss a series of business propositions. Could First Wap help a government monitor opponents abroad? Could the company crack encrypted WhatsApp chats? Could it help the owner of a mining company disrupt protests by environmental activists? “He knows already who are the leaders, or he wants to find out?” asked Rudolph.</p>
<p>Rudolph drew the undercover reporters’ attention to a potential snag: some of the people they propose selling to might be under sanction from the EU or US, meaning that European nationals like First Wap’s executives risked imprisonment if it were known they organised the sale. “That’s why when we make such a deal we make it through Jakarta,” Rudolph said, referring to First Wap’s corporate base in Indonesia. It was a “grey area”, he said. But “we can find a way”. What this way might look like became clear the following day: using a newly invented shell company to mask the connection in the papertrail between First Wap and the sanctioned client.</p>
<p>When confronted with our undercover operation in Prague, the company said that “misunderstandings evidently arose” and that the statements by its executives referred merely to technical feasibility.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why Is SQLite Coded In C (140 pts)]]></title>
            <link>https://www.sqlite.org/whyc.html</link>
            <guid>45584464</guid>
            <pubDate>Tue, 14 Oct 2025 20:32:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sqlite.org/whyc.html">https://www.sqlite.org/whyc.html</a>, See on <a href="https://news.ycombinator.com/item?id=45584464">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<div>
<p>
Why Is SQLite Coded In C
</p>
<details>
<summary>Table Of Contents</summary>

</details>
</div>




<h2 id="c_is_best"><span>1. </span>C Is Best</h2>

<blockquote><p>
Note: Sections 2.0 and 3.0 of this article were added in response
to comments on 
<a href="https://news.ycombinator.com/item?id=16585120">Hacker News</a> and
<a href="https://www.reddit.com/r/programming/comments/84fzoc/why_is_sqlite_coded_in_c/">Reddit</a>.
</p></blockquote>

<p>
Since its inception on 2000-05-29, SQLite has been implemented in generic C.
C was and continues to be the best language for implementing a software
library like SQLite.  There are no plans to recode SQLite in any other
programming language at this time.

</p><p>
The reasons why C is the best language to implement SQLite include:


</p><ul>
<li> Performance
</li><li> Compatibility
</li><li> Low-dependency
</li><li> Stability
</li></ul>

<h2 id="performance"><span>1.1. </span>Performance</h2>

<p>An intensively used low-level library like SQLite needs to be fast.
(And SQLite is fast, see <a href="https://www.sqlite.org/intern-v-extern-blob.html">Internal Versus External BLOBs</a> and
<a href="https://www.sqlite.org/fasterthanfs.html">35% Faster Than The Filesystem</a> for examples.)

</p><p>C is a great language for writing fast code.  C is sometimes
described as "portable assembly language".  It enables developers
to code as close to the underlying hardware as possible while still
remaining portable across platforms.

</p><p>Other programming languages sometimes claim to be "as fast as C".
But no other language claims to be faster than C for general-purpose
programming, because none are.

</p><h2 id="compatibility"><span>1.2. </span>Compatibility</h2>

<p>Nearly all systems have the ability to call libraries
written in C.  This is not true of other implementation languages.

</p><p>So, for example, Android applications written in Java are able to
invoke SQLite (through an adaptor).  Maybe it would have been more
convenient for Android if SQLite had been coded in Java as that would
make the interface simpler.  However, on iPhone applications are coded
in Objective-C or Swift, neither of which have the ability to call
libraries written in Java.  Thus, SQLite would be unusable on iPhones
had it been written in Java.

</p><h2 id="low_dependency"><span>1.3. </span>Low-Dependency</h2>

<p>Libraries written in C do not have a huge run-time dependency.
In its minimum configuration, SQLite requires only the following
routines from the standard C library:

</p><center>
<table>
<tbody><tr>
<td>
<ul>
<li> memcmp()
</li><li> memcpy()
</li><li> memmove()
</li><li> memset()
</li></ul>
</td>
<td>&nbsp;&nbsp;&nbsp;</td>
<td>
<ul>
<li> strcmp()
</li><li> strlen()
</li><li> strncmp()
</li></ul>
</td>
</tr>
</tbody></table>
</center>

<p>
In a more complete build, SQLite also uses library routines like
malloc() and free() and operating system interfaces for opening, reading,
writing, and closing files.  But even then, the number of dependencies
is very small.  Other "modern" languages, in contrast, often require
multi-megabyte runtimes loaded with thousands and thousands of interfaces.

</p><h2 id="stability"><span>1.4. </span>Stability</h2>

<p>
The C language is old and boring.
It is a well-known and well-understood language.
This is exactly what one wants when developing a module like SQLite.
Writing a small, fast, and reliable database engine is hard enough as it
is without the implementation language changing out from under you with
each update to the implementation language specification.

</p><h2 id="why_isn_t_sqlite_coded_in_an_object_oriented_language_"><span>2. </span>Why Isn't SQLite Coded In An Object-Oriented Language?</h2>

<p>
Some programmers cannot imagine developing a complex system like
SQLite in a language that is not "object oriented".  So why is
SQLite not coded in C++ or Java?

</p><ol>
<li><p>
Libraries written in C++ or Java can generally only be used by
applications written in the same language. It is difficult to
get an application written in Haskell or Java to invoke a library
written in C++.  On the other hand, libraries written in C are
callable from any programming language.

</p></li><li><p>
Object-Oriented is a design pattern, not a programming language.
You can do object-oriented programming in any language you want,
including assembly language.  Some languages (ex: C++ or Java) make
object-oriented easier.  But you can still do object-oriented programming
in languages like C.

</p></li><li><p>
Object-oriented is not the only valid design pattern.
Many programmers have been taught to think purely in terms of
objects.  And, to be fair, objects are often a good way to
decompose a problem.  But objects are not the only way, and are
not always the best way to decompose a problem.  Sometimes good old
procedural code is easier to write, easier to maintain and understand,
and faster than object-oriented code.

</p></li><li><p>
When SQLite was first being developed, Java was a young and immature
language.  C++ was older, but was undergoing such growing pains that
it was difficult to find any two C++ compilers that worked the same
way.  So C was definitely a better choice back when SQLite was first
being developed.  The situation is less stark now, but there is little
to no benefit in recoding SQLite at this point.
</p></li></ol>

<h2 id="why_isn_t_sqlite_coded_in_a_safe_language_"><span>3. </span>Why Isn't SQLite Coded In A "Safe" Language?</h2>

<p>
There has lately been a lot of interest in "safe" programming languages
like Rust or Go in which it is impossible, or is at least difficult, to make
common programming errors like memory leaks or array overruns.  So the
question often arises as to why SQLite is not coded in a "safe" language.

</p><ol>
<li><p>
None of the safe programming languages existed for the first 10 years
of SQLite's existence.  SQLite could be recoded in Go or Rust, but doing
so would probably introduce far more bugs than would be fixed, and it
may also result in slower code.

</p></li><li><p>
Safe languages insert additional machine branches to do things like
verify that array accesses are in-bounds.  In correct code, those
branches are never taken.  That means that the machine code cannot
be 100% branch tested, which is an important component of SQLite's
quality strategy.

</p></li><li><p>
Safe languages usually want to abort if they encounter an out-of-memory
(OOM) situation.  SQLite is designed to recover gracefully from an OOM.
It is unclear how this could be accomplished in the current crop of
safe languages.

</p></li><li><p>
All of the existing safe languages are new.  The developers of SQLite
applaud the efforts of computer language researchers in trying to
develop languages that are easier to program safely.  We encourage these
efforts to continue.  But we ourselves are more interested in old and
boring languages when it comes to implementing SQLite.
</p></li></ol>

<p>
All that said, it is possible that SQLite might
one day be recoded in Rust.  Recoding SQLite in Go is unlikely
since Go hates assert().  But Rust is a possibility.  Some
preconditions that must occur before SQLite is recoded in Rust
include:

</p><ol type="A">
<li> Rust needs to mature a little more, stop changing so fast, and
     move further toward being old and boring.
</li><li> Rust needs to demonstrate that it can be used to create general-purpose
     libraries that are callable from all other programming languages.
</li><li> Rust needs to demonstrate that it can produce object code that
     works on obscure embedded devices, including devices that lack
     an operating system.
</li><li> Rust needs to pick up the necessary tooling that enables one to
     do 100% branch coverage testing of the compiled binaries.
</li><li> Rust needs a mechanism to recover gracefully from OOM errors.
</li><li> Rust needs to demonstrate that it can do the kinds of work that
     C does in SQLite without a significant speed penalty.
</li></ol>

<p>
If you are a "rustacean" and feel that Rust already meets the
preconditions listed above, and that SQLite should be recoded in
Rust, then you are welcomed and encouraged
to contact the SQLite developers privately
and argue your case.
</p><p><small><i>This page last modified on  <a href="https://sqlite.org/docsrc/honeypot" id="mtimelink" data-href="https://sqlite.org/docsrc/finfo/pages/whyc.in?m=a59783c72e">2025-05-09 15:56:17</a> UTC </i></small></p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Half of America's Voting Machines Are Now Owned by a MAGA Oligarch (162 pts)]]></title>
            <link>https://dissentinbloom.substack.com/p/half-of-americas-voting-machines</link>
            <guid>45584295</guid>
            <pubDate>Tue, 14 Oct 2025 20:18:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dissentinbloom.substack.com/p/half-of-americas-voting-machines">https://dissentinbloom.substack.com/p/half-of-americas-voting-machines</a>, See on <a href="https://news.ycombinator.com/item?id=45584295">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><strong><span>They told us elections were rigged. </span><a href="https://dissentinbloom.substack.com/p/forensic-copies-of-voting-software" rel="">Then they cloned stolen voting software</a><span>. Then they bought the voting machines.</span></strong></p><p><span>Scott Leiendecker, a longtime Republican operative </span><strong><a href="https://edition.cnn.com/2025/10/09/politics/dominion-voting-systems-bought-election-ballots" rel="">with deep ties to Trump’s political network</a></strong><span>, already controlled the </span><strong>only digital pollbooks (</strong><em>that are literally just giant iPads</em><strong>) used to verify voter identities</strong><span> across much of the country through his company </span><strong><a href="https://knowink.com/" rel="">KNOWiNK</a></strong><span>. </span></p><p><span>That alone gave him massive influence over who even gets in the door to vote in many places. Where used, it gives his company “</span><em>gatekeeper</em><span>” powers deciding who gets in and who does not. </span></p><p><span>Now, after acquiring Dominion Voting Systems — </span><em><span>which he is renaming to ‘</span><strong>Liberty Vote</strong><span>’ </span></em><span>— he controls the voting machines </span><strong><a href="https://www.theguardian.com/us-news/2025/oct/09/dominion-voting-systems-sold" rel="">used in over half </a><span>of America. </span></strong></p><p><span>In his first official statement after acquiring Dominion, Leiendecker pledged he will follow Trump’s executive order, “</span><em><strong><a href="https://www.whitehouse.gov/presidential-actions/2025/03/preserving-and-protecting-the-integrity-of-american-elections/" rel="">Preserving and Protecting the Integrity of American Elections</a></strong></em><span>” from March. </span></p><p><span>This is how autocracies are built. </span><strong>Control the rules, control the tools, declare the outcome.</strong><span> It’s not a conspiracy theory. It’s a business model.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!Qh17!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb68de3c4-0d07-479c-a4a9-830ddc952ce4_1280x360.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!Qh17!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb68de3c4-0d07-479c-a4a9-830ddc952ce4_1280x360.jpeg 424w, https://substackcdn.com/image/fetch/$s_!Qh17!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb68de3c4-0d07-479c-a4a9-830ddc952ce4_1280x360.jpeg 848w, https://substackcdn.com/image/fetch/$s_!Qh17!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb68de3c4-0d07-479c-a4a9-830ddc952ce4_1280x360.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!Qh17!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb68de3c4-0d07-479c-a4a9-830ddc952ce4_1280x360.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!Qh17!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb68de3c4-0d07-479c-a4a9-830ddc952ce4_1280x360.jpeg" width="1280" height="360" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b68de3c4-0d07-479c-a4a9-830ddc952ce4_1280x360.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:360,&quot;width&quot;:1280,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:138067,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:&quot;https://dissentinbloom.substack.com/i/176009095?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe6c88714-b451-4b47-9fb0-141444d44132_1280x720.jpeg&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!Qh17!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb68de3c4-0d07-479c-a4a9-830ddc952ce4_1280x360.jpeg 424w, https://substackcdn.com/image/fetch/$s_!Qh17!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb68de3c4-0d07-479c-a4a9-830ddc952ce4_1280x360.jpeg 848w, https://substackcdn.com/image/fetch/$s_!Qh17!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb68de3c4-0d07-479c-a4a9-830ddc952ce4_1280x360.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!Qh17!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb68de3c4-0d07-479c-a4a9-830ddc952ce4_1280x360.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>Despite the name, that executive order was not written to uphold election integrity. It’s just the infamous</span><strong><a href="https://www.congress.gov/bill/118th-congress/house-bill/8281" rel=""> SAVE Act</a></strong><span>, rebranded and shoved through the Oval Office because they haven’t been able to pass it through Congress. </span></p><p><span>Scott Leiendecker is eager to be the first in line to enforce Trumps new unconstitutional ‘</span><em>rules</em><span>’ from this order into our elections. </span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!dc6P!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac8ec6f0-3faf-4ed6-ac5c-9159e9b0b7dc_1083x491.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!dc6P!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac8ec6f0-3faf-4ed6-ac5c-9159e9b0b7dc_1083x491.png 424w, https://substackcdn.com/image/fetch/$s_!dc6P!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac8ec6f0-3faf-4ed6-ac5c-9159e9b0b7dc_1083x491.png 848w, https://substackcdn.com/image/fetch/$s_!dc6P!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac8ec6f0-3faf-4ed6-ac5c-9159e9b0b7dc_1083x491.png 1272w, https://substackcdn.com/image/fetch/$s_!dc6P!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac8ec6f0-3faf-4ed6-ac5c-9159e9b0b7dc_1083x491.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!dc6P!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac8ec6f0-3faf-4ed6-ac5c-9159e9b0b7dc_1083x491.png" width="1083" height="491" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ac8ec6f0-3faf-4ed6-ac5c-9159e9b0b7dc_1083x491.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:491,&quot;width&quot;:1083,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:312998,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://dissentinbloom.substack.com/i/176009095?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac8ec6f0-3faf-4ed6-ac5c-9159e9b0b7dc_1083x491.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!dc6P!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac8ec6f0-3faf-4ed6-ac5c-9159e9b0b7dc_1083x491.png 424w, https://substackcdn.com/image/fetch/$s_!dc6P!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac8ec6f0-3faf-4ed6-ac5c-9159e9b0b7dc_1083x491.png 848w, https://substackcdn.com/image/fetch/$s_!dc6P!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac8ec6f0-3faf-4ed6-ac5c-9159e9b0b7dc_1083x491.png 1272w, https://substackcdn.com/image/fetch/$s_!dc6P!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fac8ec6f0-3faf-4ed6-ac5c-9159e9b0b7dc_1083x491.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em><strong>And in places where your eligibility to vote &amp; voter verification is determined by his KNOWiNK machines? These rules will apply. </strong></em></figcaption></figure></div><blockquote><p><em><strong><span>Never mind the fact that </span><a href="https://www.cnn.com/2025/06/13/politics/judge-trump-executive-order-voting-citizenship" rel="">a federal judge has blocked parts</a><span> of it already, and </span><a href="https://www.brennancenter.org/our-work/research-reports/trump-administrations-campaign-undermine-next-election" rel="">election experts say it is unconstitutional</a><span>.  </span></strong></em></p></blockquote><p><span>See, the SAVE Act got a lot of attention in the media </span><strong><a href="https://www.brennancenter.org/our-work/analysis-opinion/restricting-freedom-vote#:~:text=It's%20called%20the%20SAVE%20Act,eligible%20Americans%20from%20casting%20ballots." rel="">because it will take away eligible Americans’ ability to vote</a></strong><span> because it requires in-person registration with specific documentary proof of citizenship (</span><em>like a passport or State ID + birth certificate</em><span>) that millions of citizens lack. </span><strong>State ID alone is not enough.</strong><span> 47 states don’t print “</span><em>U.S. citizen</em><span>” anywhere on them.</span></p><p><strong><a href="https://www.brennancenter.org/our-work/analysis-opinion/save-act-would-undermine-voter-registration-all-americans#:~:text=According%20to%20a%20survey%20conducted,or%20naturalization%20papers%20readily%20available." rel="">21.8 million people do not have access to a secondary form of identification</a></strong><span>. That is 9% of eligible voters. </span></p><p>They are instructed to analyze it, cross-check it against federal immigration databases, and demand state records, even by subpoena if needed. </p><p><span>And if election boards don’t comply and give them </span><em><strong>your private voting records?</strong></em><span> They’ll try to sue for them. Possibly even criminally charge them. And </span><strong><a href="https://newjerseymonitor.com/2025/07/18/gop-sues-new-jersey-for-voter-registration-records/" rel="">they’ve filed lawsuits</a></strong><span> already. </span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!qp29!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dc8dfe4-8511-4d8c-880a-a561c0d736fa_932x194.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!qp29!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dc8dfe4-8511-4d8c-880a-a561c0d736fa_932x194.png 424w, https://substackcdn.com/image/fetch/$s_!qp29!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dc8dfe4-8511-4d8c-880a-a561c0d736fa_932x194.png 848w, https://substackcdn.com/image/fetch/$s_!qp29!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dc8dfe4-8511-4d8c-880a-a561c0d736fa_932x194.png 1272w, https://substackcdn.com/image/fetch/$s_!qp29!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dc8dfe4-8511-4d8c-880a-a561c0d736fa_932x194.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!qp29!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dc8dfe4-8511-4d8c-880a-a561c0d736fa_932x194.png" width="932" height="194" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3dc8dfe4-8511-4d8c-880a-a561c0d736fa_932x194.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:194,&quot;width&quot;:932,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:48405,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://dissentinbloom.substack.com/i/176009095?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dc8dfe4-8511-4d8c-880a-a561c0d736fa_932x194.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!qp29!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dc8dfe4-8511-4d8c-880a-a561c0d736fa_932x194.png 424w, https://substackcdn.com/image/fetch/$s_!qp29!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dc8dfe4-8511-4d8c-880a-a561c0d736fa_932x194.png 848w, https://substackcdn.com/image/fetch/$s_!qp29!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dc8dfe4-8511-4d8c-880a-a561c0d736fa_932x194.png 1272w, https://substackcdn.com/image/fetch/$s_!qp29!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3dc8dfe4-8511-4d8c-880a-a561c0d736fa_932x194.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><blockquote><p><em><strong><span>Voter roll purges are a practice the GOP has done over &amp; over again. They’ve done it in </span><a href="https://www.ajc.com/politics/georgia-releases-list-of-102k-voter-registrations-to-be-canceled/FKYR6VYAQVENRHX5PC3F7ITL7Y/" rel="">Georgia</a><span>, </span><a href="https://www.ohiodcca.org/ohio-secretary-of-state-does-another-massive-voter-file-purge-check-your-voter-registration" rel="">Ohio</a><span>, </span><a href="https://www.theguardian.com/us-news/2019/dec/14/wisconsin-purge-voter-rolls-judge-ruling" rel="">Wisconsin</a><span>, </span><a href="https://www.brennancenter.org/our-work/analysis-opinion/florida-purge-list-public-safeguards-still-needed" rel="">Florida</a><span>, and </span><a href="https://gov.texas.gov/news/post/governor-abbott-announces-over-1-million-ineligible-voters-removed-from-voter-rolls" rel="">Texas</a><span>.  And more. </span></strong></em></p></blockquote><p><span>So, if your name doesn’t match their spreadsheet </span><em>just right</em><span>? You could be purged from a voter roll. Lose your ability to vote in the election. </span></p><p><strong>You wouldn’t be notified before. You would find out only when you try to vote.</strong></p><p><strong>I highly encourage everyone reading this to search up their states non-partisan voter protection hotline number, and have that number written down when you go to vote in the coming election. This will be your advocate.</strong></p><p><span>Even more disturbing, when I looked into KNOWiNK — </span><em>the company Leiendecker built to run voter verification for our elections </em><span>— I found that one town (Oak Grove) had raised safety concerns, and made the legal choice to go back to paper. </span></p><p><strong><span>Instead of support, </span><a href="https://www.projectminnesota.com/remove-ipads/" rel="">they got threats of felony charges</a><span> from officials. </span></strong></p><blockquote><p><em><strong>All because they didn’t want to rely on Leiendeckers ‘Poll-Pads’ with blaring cybersecurity flaws? If you have to coerce people into using a product, there’s something wrong. Seriously wrong. </strong></em></p></blockquote><p><strong><a href="https://www.projectminnesota.com/remove-ipads/" rel="">Project Minnesota</a></strong><span> first raised serious concerns about KNOWiNK’s electronic poll pads, which are used in over 71 counties across Minnesota, and </span><strong><a href="https://www.mcleancountyil.gov/Blog.aspx?IID=271" rel="">37 states nationwide</a></strong><span>. </span></p><p><span>See, </span><strong>these iPads connect to the internet</strong><span> and</span><strong> transmit voter data in real tim</strong><span>e, creating what the project describes as a vulnerability for “</span><em>precision cheating</em><span>” at the precinct level. That doesn’t mean hacking an entire election at once. </span></p><p><strong>It means using tools like KNOWiNK’s poll pads to make small, targeted changes in real time. </strong></p><p>Because these devices are connected to the internet, update in real time, and are linked to state voter rolls, someone with access could quietly flag certain voters as inactive, delay their check-in, or assign them the wrong ballot — all without leaving an obvious trace. </p><blockquote><p><strong><span>These systems also </span><a href="https://www.vice.com/en/article/exclusive-critical-us-election-systems-have-been-left-exposed-online-despite-official-denials/" rel="">allow for real-time data syncing with third-party apps</a><span>, which raises serious concerns about backdoor access and manipulation. </span></strong></p><p>When a system can talk to the outside world during an election, the door is open for strategic disruptions, data wipes, or subtle mismatches that add up to something far bigger than a glitch. </p></blockquote><p>In tight races, it only takes a few dozen voters per precinct being blocked or misrouted to tip the scales. And when the same system is already laying the groundwork to purge voter rolls and restrict access for eligible voters, this becomes the final piece that completes the strategy.</p><p><strong>These systems are expensive, opaque, and riddled with third-party access points no one seems able to audit. Project Minnesota says the answer is simple: go back to paper. Because paper doesn’t lie.</strong></p><p>Even Leiendecker knows paper is best. Which is why Liberty Vote says it will implement the use of paper ballots, and even said in their press release that they’ll have third party audits. </p><p><strong>Which sounds fantastic</strong><span>. These are both two tried and true ways of making sure elections are fair and free. </span></p><p><strong>Well, that’s until you find out that the Republican National Committee (RNC), has been quietly funneling hundreds of thousands of dollars into preparing “</strong><em><strong><a href="https://gop.com/press-release/trump-campaign-and-rnc-unveil-historic-100000-person-strong-election-integrity-program/" rel="">election integrity teams</a></strong></em><strong>” to show up at polling places to conduct surveillance, and do third party audits &amp; hand counts. </strong></p><blockquote><p><span>The third party being themselves. </span><em>Naturally</em><span>. And they’re still </span><a href="http://protectthevote.com/" rel="">inviting people to sign up</a><span> to join their team, all whilst bragging they’re over 100,000 people strong. </span></p></blockquote><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!ykFt!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1588d670-a497-439c-9d76-6c14ef54cdc3_1372x128.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!ykFt!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1588d670-a497-439c-9d76-6c14ef54cdc3_1372x128.png 424w, https://substackcdn.com/image/fetch/$s_!ykFt!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1588d670-a497-439c-9d76-6c14ef54cdc3_1372x128.png 848w, https://substackcdn.com/image/fetch/$s_!ykFt!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1588d670-a497-439c-9d76-6c14ef54cdc3_1372x128.png 1272w, https://substackcdn.com/image/fetch/$s_!ykFt!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1588d670-a497-439c-9d76-6c14ef54cdc3_1372x128.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!ykFt!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1588d670-a497-439c-9d76-6c14ef54cdc3_1372x128.png" width="728" height="67.91836734693878" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1588d670-a497-439c-9d76-6c14ef54cdc3_1372x128.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:128,&quot;width&quot;:1372,&quot;resizeWidth&quot;:728,&quot;bytes&quot;:21146,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://dissentinbloom.substack.com/i/176009095?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1588d670-a497-439c-9d76-6c14ef54cdc3_1372x128.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!ykFt!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1588d670-a497-439c-9d76-6c14ef54cdc3_1372x128.png 424w, https://substackcdn.com/image/fetch/$s_!ykFt!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1588d670-a497-439c-9d76-6c14ef54cdc3_1372x128.png 848w, https://substackcdn.com/image/fetch/$s_!ykFt!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1588d670-a497-439c-9d76-6c14ef54cdc3_1372x128.png 1272w, https://substackcdn.com/image/fetch/$s_!ykFt!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1588d670-a497-439c-9d76-6c14ef54cdc3_1372x128.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em><strong>A disclaimer from the bottom of the website (paid for by the Republican National Committee) well color me shocked. </strong></em></figcaption></figure></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!CTrV!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb4194551-71ca-4253-b035-4a7526c3326b_1162x233.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!CTrV!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb4194551-71ca-4253-b035-4a7526c3326b_1162x233.png 424w, https://substackcdn.com/image/fetch/$s_!CTrV!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb4194551-71ca-4253-b035-4a7526c3326b_1162x233.png 848w, https://substackcdn.com/image/fetch/$s_!CTrV!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb4194551-71ca-4253-b035-4a7526c3326b_1162x233.png 1272w, https://substackcdn.com/image/fetch/$s_!CTrV!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb4194551-71ca-4253-b035-4a7526c3326b_1162x233.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!CTrV!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb4194551-71ca-4253-b035-4a7526c3326b_1162x233.png" width="1162" height="233" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b4194551-71ca-4253-b035-4a7526c3326b_1162x233.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:233,&quot;width&quot;:1162,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:221423,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://dissentinbloom.substack.com/i/176009095?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb4194551-71ca-4253-b035-4a7526c3326b_1162x233.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!CTrV!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb4194551-71ca-4253-b035-4a7526c3326b_1162x233.png 424w, https://substackcdn.com/image/fetch/$s_!CTrV!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb4194551-71ca-4253-b035-4a7526c3326b_1162x233.png 848w, https://substackcdn.com/image/fetch/$s_!CTrV!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb4194551-71ca-4253-b035-4a7526c3326b_1162x233.png 1272w, https://substackcdn.com/image/fetch/$s_!CTrV!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb4194551-71ca-4253-b035-4a7526c3326b_1162x233.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><span>About the launch, Trump said, “Having</span><em><strong> the right people</strong></em><span> to count the ballots is just as important as turning out voters on Election day.” read the subtext. </span></figcaption></figure></div><p><a href="https://www.rnla.org/" rel="">The Republican National Lawyers Association</a><span> is hosting CLEs and volunteer sign-ups specifically for VA/NJ 2025 “</span><em>election integrity operations</em><span>.” </span></p><p>That’s the legal muscle for audits, challenges, and records fights.</p><p><span>According to the GOP website, the RNC sent out these “</span><em>teams</em><span>” last year, too. But this coming election cycle, remember, they are following Trumps “</span><em>new rules.”</em></p><p><span>They aren’t legal, but the rules are but that’s exactly what these “</span><em>integrity teams</em><span>” will be watching and attempting to enforce. </span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!8rJ7!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6ddf0aae-b73a-422c-9383-6b4eb6958d5d_1141x189.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!8rJ7!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6ddf0aae-b73a-422c-9383-6b4eb6958d5d_1141x189.png 424w, https://substackcdn.com/image/fetch/$s_!8rJ7!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6ddf0aae-b73a-422c-9383-6b4eb6958d5d_1141x189.png 848w, https://substackcdn.com/image/fetch/$s_!8rJ7!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6ddf0aae-b73a-422c-9383-6b4eb6958d5d_1141x189.png 1272w, https://substackcdn.com/image/fetch/$s_!8rJ7!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6ddf0aae-b73a-422c-9383-6b4eb6958d5d_1141x189.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!8rJ7!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6ddf0aae-b73a-422c-9383-6b4eb6958d5d_1141x189.png" width="1141" height="189" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6ddf0aae-b73a-422c-9383-6b4eb6958d5d_1141x189.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:189,&quot;width&quot;:1141,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:14761,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://dissentinbloom.substack.com/i/176009095?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6ddf0aae-b73a-422c-9383-6b4eb6958d5d_1141x189.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!8rJ7!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6ddf0aae-b73a-422c-9383-6b4eb6958d5d_1141x189.png 424w, https://substackcdn.com/image/fetch/$s_!8rJ7!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6ddf0aae-b73a-422c-9383-6b4eb6958d5d_1141x189.png 848w, https://substackcdn.com/image/fetch/$s_!8rJ7!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6ddf0aae-b73a-422c-9383-6b4eb6958d5d_1141x189.png 1272w, https://substackcdn.com/image/fetch/$s_!8rJ7!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6ddf0aae-b73a-422c-9383-6b4eb6958d5d_1141x189.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>If a foreign government had this level of control over our elections, we’d call it an act of war. But because it’s a team of Trump allies, we’re told it’s legal.  </p><p><strong>Ask yourself this</strong><span>: do you really want the Republican National Committee’s “election integrity” team handling your ballot? These are not neutral observers. </span></p><p>These are trained operatives with a political agenda, sent in to “watch,” to audit, and to challenge — not to protect democracy, but to control it.</p><p>And while they loudly demand paper ballots — which they claim are more secure — they quietly lock in digital voter verification through devices like KNOWiNK’s poll pads. </p><p><span>The same devices now under fire for internet connectivity, real-time syncing, and vulnerabilities to “</span><em>precision cheating</em><span>” that can delay, misroute, or misclassify voters without a trace.</span></p><p>So why the contradiction? Why paper on the back end, but digital control up front? It’s simple. Paper makes the process look legitimate. But digital lets them control who gets in the door, and who gets turned away.</p><blockquote><p><strong>As Stalin once said, “It’s not who votes that matters. It’s who counts the votes.”</strong></p></blockquote><div><h2>Where This Leaves Us</h2><p>They told us the elections were rigged. Then they stole copies of the software that runs the machines. Then they bought the machines. Then they bought the check-in system. Then they wrote the rules. Then they started purging voters. Then they started showing up with surveillance teams and calling it integrity.</p></div><p>Scott Leiendecker now controls the machines that verify who gets to vote and the machines that count those votes. He says he’ll enforce Trump’s new executive order, even though parts of it have already been blocked by a federal judge. The RNC says they’ll show up to “audit” and make sure your vote meets Trumps standards. </p><p>This isn’t a theory. It’s happening. The infrastructure is already in place. The purge lists are already being built. The “auditors” are already registering.</p><div><p><strong>And the person who decides if you get a ballot, and whether that ballot gets counted, just happens to be the same man, backed by the same machine, promising to follow the same illegal order. </strong></p><p><strong>And he has voting machines in 37 states and growing. </strong></p></div><div id="youtube2-gE7xoHJkgvE" data-attrs="{&quot;videoId&quot;:&quot;gE7xoHJkgvE&quot;,&quot;startTime&quot;:null,&quot;endTime&quot;:null}" data-component-name="Youtube2ToDOM"><p><iframe src="https://www.youtube-nocookie.com/embed/gE7xoHJkgvE?rel=0&amp;autoplay=0&amp;showinfo=0&amp;enablejsapi=0" frameborder="0" loading="lazy" gesture="media" allow="autoplay; fullscreen" allowautoplay="true" allowfullscreen="true" width="728" height="409"></iframe></p></div><p>They didn’t need tanks. They don’t need the insurrection act, but I’m sure that’s the not something they’ve ruled out. All they needed contracts, code, and silence.</p><p>Because if they can control who votes, how the votes are counted, and who gets to audit the results then we’re not talking about democracy anymore. We’re talking about a simulation. One where the outcome was never in your hands.</p><p>And if we let this slide, we won’t just lose one election. We’ll lose the ability to choose anything at all. </p><p><h2><strong>So what can you do?</strong></h2></p><ul><li><p><strong>Start local.</strong><span> This machine works because it is hidden in plain sight, buried in your county board of elections, your city council meetings, and your statehouse back rooms. Show up. Speak up. Demand paper poll books. Demand real audits. Demand transparency in every contract involving KNOWiNK, Dominion (Now Liberty Vote), or any private vendor.</span></p></li><li><p><strong>Call your county election office</strong><span>. Ask them directly: Are you using KNOWiNK poll pads? Are you using Dominion/Liberty Vote machines? Who supplies them? Are audits conducted by independent groups or insiders? You have the right to know.</span></p></li><li><p><strong>Join your local board of elections</strong><span>. Every county has one. Many seats are left empty. They are counting on your absence. Fill the seat.</span></p></li><li><p><strong>Become an election worker or observe</strong><span>r. The only way to see what happens at the door, at the machines, and in the counting rooms is to be there. If they want surveillance, return the favor.</span></p></li><li><p><strong>Screenshot everything</strong><span>. If you or someone you know is purged, delayed, given the wrong ballot, or sees a machine malfunction, document it. This system survives by burying the evidence.</span></p></li><li><p><strong>Know your rights</strong><span>. Look up your state’s voter protection hotline and save the number. Write it down. Share it. Call immediately if something goes wrong when you try to vote.</span></p></li><li><p><strong>Organize</strong><span>. Do not just vote. Help others check their registration now and again before Election Day. If someone is purged, act fast. Many of these purges are happening in real time</span></p></li><li><p><strong>Blow the whistle</strong><span>. If you are inside these systems, whether in tech, in government, or at a contractor office, and you see something, say something. Do it safely. Do it legally. Do it now. </span><em><strong>You can always contact me here, or securely on Signal at @DissentinBloom.78 </strong></em></p></li></ul><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!Pury!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7ea83be4-934e-4369-bdb9-caa61b5acba7_2700x900.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!Pury!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7ea83be4-934e-4369-bdb9-caa61b5acba7_2700x900.jpeg 424w, https://substackcdn.com/image/fetch/$s_!Pury!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7ea83be4-934e-4369-bdb9-caa61b5acba7_2700x900.jpeg 848w, https://substackcdn.com/image/fetch/$s_!Pury!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7ea83be4-934e-4369-bdb9-caa61b5acba7_2700x900.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!Pury!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7ea83be4-934e-4369-bdb9-caa61b5acba7_2700x900.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!Pury!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7ea83be4-934e-4369-bdb9-caa61b5acba7_2700x900.jpeg" width="1456" height="485" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/7ea83be4-934e-4369-bdb9-caa61b5acba7_2700x900.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:485,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!Pury!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7ea83be4-934e-4369-bdb9-caa61b5acba7_2700x900.jpeg 424w, https://substackcdn.com/image/fetch/$s_!Pury!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7ea83be4-934e-4369-bdb9-caa61b5acba7_2700x900.jpeg 848w, https://substackcdn.com/image/fetch/$s_!Pury!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7ea83be4-934e-4369-bdb9-caa61b5acba7_2700x900.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!Pury!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7ea83be4-934e-4369-bdb9-caa61b5acba7_2700x900.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Targeting the elections has always been part of the plan. It’s right there in Project 2025. The Heritage Foundation laid the groundwork long ago. </p><p><strong>There’s too much to unpack in just one article, but I’m not stopping here.</strong></p><p><span>I’ll keep covering this and everything else they don’t want you to see &amp; I will continue to hold anyone and everyone complicit in this system accountable. I’ve been writing on elections all year, and I’m not stopping now.  You can read my other articles on election integrity </span><a href="https://dissentinbloom.substack.com/s/election-integrity-articles" rel="">by clicking here.</a></p><p><span>Subscribe for free to stay in the loop, get the real </span><strong>stories, and be on the right side of history with me. My articles</strong><span> will never cost money to read because this information is too important to lock up.</span></p><p data-attrs="{&quot;url&quot;:&quot;https://dissentinbloom.substack.com/p/half-of-americas-voting-machines?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://dissentinbloom.substack.com/p/half-of-americas-voting-machines?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p><blockquote><p><strong>But if you can swing it (</strong><em>and only if</em><span> </span><em>you can</em><strong>), paid subscriptions help me keep the lights on, grow this platform, continue my research, fund my investigations, and keep this work alive. </strong><span>You can also buy me a coffee on Ko-fi by </span><a href="http://www.ko-fi.com/dissentinbloom" rel="">clicking here</a><span>.</span></p></blockquote><p>I’m not CNN, MSNBC, or Fox News. I’m a person like you.. a mom, a nurse, moonlighting as a journalist, writing by the people, for the people.</p><p>Either way it goes, thank you for being here and reading this today. Knowledge is resistance. </p><p>— Love, Dissent in Bloom </p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Unpacking Cloudflare Workers CPU Performance Benchmarks (150 pts)]]></title>
            <link>https://blog.cloudflare.com/unpacking-cloudflare-workers-cpu-performance-benchmarks/</link>
            <guid>45584281</guid>
            <pubDate>Tue, 14 Oct 2025 20:17:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.cloudflare.com/unpacking-cloudflare-workers-cpu-performance-benchmarks/">https://blog.cloudflare.com/unpacking-cloudflare-workers-cpu-performance-benchmarks/</a>, See on <a href="https://news.ycombinator.com/item?id=45584281">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post"><article><p>2025-10-14</p><section><p>17 min read</p><img src="https://cf-assets.www.cloudflare.com/zkvhlag99gkb/iQiXzPRHTAG10HFtFnNPw/281efb5935b2bae707f3f89eb3e91521/image__6_.png" alt=""><div><p>On October 4, independent developer Theo Browne published <a href="https://github.com/t3dotgg/cf-vs-vercel-bench"><u>a series of benchmarks</u></a> designed to compare server-side JavaScript execution speed between Cloudflare Workers and Vercel, a competing compute platform built on AWS Lambda. The initial results showed Cloudflare Workers performing worse than Node.js on Vercel at a variety of CPU-intensive tasks, by a factor of as much as 3.5x.</p><p>We were surprised by the results. The benchmarks were designed to compare JavaScript execution speed in a CPU-intensive workload that never waits on external services. But, Cloudflare Workers and Node.js both use the same underlying JavaScript engine: <a href="https://en.wikipedia.org/wiki/V8_(JavaScript_engine)"><u>V8, the open source engine from Google Chrome</u></a>. Hence, one would expect the benchmarks to be executing essentially identical code in each environment. Physical CPUs can vary in performance, but modern server CPUs do not vary by anywhere near 3.5x.</p><p>On investigation, we discovered a wide range of small problems that contributed to the disparity, ranging from some bad tuning in our infrastructure, to differences between the JavaScript libraries used on each platform, to some issues with the test itself. We spent the week working on many of these problems, which means over the past week Workers got better and faster for all of our customers. We even fixed some problems that affect other compute providers but not us, such as an issue that made trigonometry functions much slower on Vercel. This post will dig into all the gory details. </p><p>It's important to note that the original benchmark was not representative of billable CPU usage on Cloudflare, nor did the issues involved impact most typical workloads. Most of the disparity was an artifact of the specific benchmark methodology. Read on to understand why.</p><p>With our fixes, the results now look much more like we'd expect:</p>
          <figure>
          <img src="https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4LbjDIgtezBKTCWKEW5ePJ/1b053a44c90cf6c59dd0da4d9f7d8057/BLOG-3051_2.png" alt="BLOG-3051 2" width="1418" height="954" loading="lazy">
          </figure><p>There is still work to do, but we're happy to say that after these changes, Cloudflare now performs on par with Vercel in every benchmark case except the one based on Next.js. On that benchmark, the gap has closed considerably, and we expect to be able to eliminate it with further improvements detailed later in this post.</p><p>We are grateful to Theo for highlighting areas where we could make improvements, which will now benefit all our customers, and even many who aren't our customers.</p>
    <p>
      <h3 id="our-benchmark-methodology">Our benchmark methodology</h3>
      
    </p>
    <p>We wanted to run Theo's test with no major design changes, in order to keep numbers comparable. Benchmark cases are nearly identical to Theo's original test but we made a couple changes in how we ran the test, in the hopes of making the results more accurate:</p><ul><li><p>Theo ran the test client on a laptop connected by a Webpass internet connection in San Francisco, against Vercel instances running in its sfo1 region. In order to make our results easier to reproduce, we chose instead to run our test client directly in AWS's us-east-1 datacenter, invoking Vercel instances running in its iad1 region (which we understand to be in the same building). We felt this would minimize any impact from network latency. Because of this, Vercel's numbers are slightly better in our results than they were in Theo's.</p></li><li><p>We chose to use Vercel instances with 1 vCPU instead of 2. All of the benchmarks are single-threaded workloads, meaning they cannot take advantage of a second CPU anyway. Vercel's CTO, Malte Ubl, had <a href="https://x.com/cramforce/status/1975656443954274780"><u>stated publicly on X</u></a> that using single-CPU instances would make no difference in this test, and indeed, we found this to be correct. Using 1 vCPU makes it easier to reason about pricing, since both Vercel and Cloudflare charge for CPU time (<code>$</code>0.128/hr for Vercel in iad1, and <code>$</code>0.072/hr for Cloudflare globally).</p></li><li><p>We made some changes to fix bugs in the test, for which <a href="https://github.com/t3dotgg/cf-vs-vercel-bench/pull/5"><u>we submitted a pull request</u></a>. More on this below.</p></li></ul>
    <p>
      <h2 id="cloudflare-platform-improvements">Cloudflare platform improvements</h2>
      
    </p>
    <p>Theo's benchmarks covered a variety of frameworks, making it clear that no single JavaScript library could be at fault for the general problem. Clearly, we needed to look first at the Workers Runtime itself. And so we did, and we found two problems – not bugs, but tuning and heuristic choices which interacted poorly with the benchmarks as written.</p>
    <p>
      <h3 id="sharding-and-warm-isolate-routing-a-problem-of-scheduling-not-cpu-speed">Sharding and warm isolate routing: A problem of scheduling, not CPU speed</h3>
      
    </p>
    <p><a href="https://blog.cloudflare.com/eliminating-cold-starts-2-shard-and-conquer/"><u>Over the last year we shipped smarter routing that sends traffic to warm isolates more often</u></a>. That cuts cold starts for large apps, which matters for frameworks with heavy initialization requirements like Next.js. The original policy optimized for latency and throughput across billions of requests, but was less optimal for heavily CPU-bound workloads for the same reason that such workloads cause performance issues in other platforms like Node.js: When the CPU is busy computing an expensive operation for one request, other requests sent to the same isolate must wait for it to finish before they can proceed.</p><p>The system uses heuristics to detect when requests are getting blocked behind each other, and automatically spin up more isolates to compensate. However, these heuristics are not precise, and the particular workload generated by Theo's tests – in which a burst of expensive traffic would come from a single client – played poorly with our existing algorithm. As a result, the benchmarks showed much higher latency (and variability in latency) than would normally be expected.</p><p><b>It's important to understand that, as a result of this problem, the benchmark was not really measuring CPU time.</b> Pricing on the Workers platform is based on CPU time – that is, time spent actually executing JavaScript code, as opposed to time waiting for things. Time spent waiting for the isolate to become available makes the request take longer, but is not billed as CPU time against the waiting request. <b>So, this problem would not have affected your bill.</b></p><p>After analyzing the benchmarks, we updated the algorithm to detect sustained CPU-heavy work earlier, then bias traffic so that new isolates spin up faster. The result is that Workers can more effectively and efficiently autoscale when different workloads are applied. I/O-bound workloads coalesce into individual already warm isolates while CPU-bound are directed so that they do not block each other. This change has already been rolled out globally and is enabled automatically for everyone. It should be pretty clear from the graph when the change was rolled out:</p>
          <figure>
          <img src="https://cf-assets.www.cloudflare.com/zkvhlag99gkb/Cio8BSY6tH7crMbXdnzYi/bab6314164907375eff2236a2bec21c3/image__7_.png" alt="BLOG-3051 3" width="3378" height="2252" loading="lazy">
          </figure>
    <p>
      <h3 id="v8-garbage-collector-tuning">V8 garbage collector tuning</h3>
      
    </p>
    <p>While this scheduling issue accounted for the majority of the disparity in the benchmark, we did find a minor issue affecting code execution performance during our testing.</p><p>The range of issues that we uncovered in the framework code in these benchmarks repeatedly pointed at <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Memory_management#garbage_collection"><u>garbage collection</u></a> and memory management issues as being key contributors to the results. But, we would expect these to be an issue with the same frameworks running in Node.js as well. To see exactly what was going on differently with Workers and why it was causing such a significant degradation in performance, we had to look inwards at our own memory management configuration.</p><p>The <a href="https://v8.dev/blog/trash-talk"><u>V8 garbage collector has a huge number of knobs</u></a> that can be tuned that directly impact performance. One of these is the size of the "young generation". This is where newly created objects go initially. It's a memory area that's less compact, but optimized for short-lived objects. When objects have bounced around the "young space" for a few generations they get moved to the old space, which is more compact, but requires more CPU to reclaim.</p><p>V8 allows the embedding runtime to tune the size of the young generation. And it turns out, we had done so. Way back in June of 2017, just two months after the Workers project kicked off, we – or specifically, I, Kenton, as I was the only engineer on the project at the time – had configured this value according to V8's recommendations at the time for environments with 512MB of memory or less. Since Workers defaults to a limit of 128MB per isolate, this seemed appropriate.</p><p>V8's entire garbage collector has changed dramatically since 2017. When analyzing the benchmarks, it became apparent that the setting which made sense in 2017 no longer made sense in 2025, and we were now limiting V8's young space too rigidly. Our configuration was causing V8's garbage collection to work harder and more frequently than it otherwise needed to. As a result, we have backed off on the manual tuning and now allow V8 to pick its young space size more freely, based on its internal heuristics. This is already live on Cloudflare Workers, and it has given an approximately 25% boost to the benchmarks with only a small increase in memory usage. Of course, the benchmarks are not the only Workers that benefit: all Workers should now be faster. That said, for most Workers the difference has been much smaller.</p>
    <p>
      <h2 id="tuning-opennext-for-performance">Tuning OpenNext for performance</h2>
      
    </p>
    <p>The platform changes solved most of the problem. Following the changes, our testing showed we were now even on all of the benchmarks save one: Next.js.</p><p>Next.js is a popular web application framework which, historically, has not had built-in support for hosting on a wide range of platforms. Recently, a project called <a href="https://opennext.js.org/"><u>OpenNext</u></a> has arisen to fill the gap, making Next.js work well on many platforms, including Cloudflare. On investigation, we found several missing optimizations and other opportunities to improve performance, explaining much of why the benchmark performed poorly on Workers.</p>
    <p>
      <h3 id="unnecessary-allocations-and-copies">Unnecessary allocations and copies</h3>
      
    </p>
    <p>When profiling the benchmark code, we noticed that garbage collection was dominating the timeline. From 10-25% of the request processing time was being spent reclaiming memory.</p>
          <figure>
          <img src="https://cf-assets.www.cloudflare.com/zkvhlag99gkb/7lYdrV1WFzKEsD6qXspQ2K/725225d0d2e01f74057152b0d736868c/BLOG-3051_4.png" alt="BLOG-3051 4" width="512" height="186" loading="lazy">
          </figure>
          <figure>
          <img src="https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6Ab4DJG0VzETky4t8rtYSe/23e9f0578bf8ac9834f7897d628b7cb2/BLOG-3051_5.png" alt="BLOG-3051 5" width="512" height="141" loading="lazy">
          </figure><p>So we dug in and discovered that OpenNext, and in some cases Next.js and React itself, will often create unnecessary copies of internal data buffers at some of the worst times during the handling of the process. For instance, there's one <code>pipeThrough()</code> operation in the rendering pipeline that we saw creating no less than 50 2048-byte <code>Buffer</code> instances, whether they are actually used or not.</p><p>We further discovered that on every request, the <a href="https://github.com/opennextjs/opennextjs-cloudflare"><u>Cloudflare OpenNext adapter</u></a> has been needlessly copying every chunk of streamed output data as it’s passed out of the renderer and into the Workers runtime to return to users. Given this benchmark returns a 5 MB result on every request, that's a lot of data being copied!</p><p>In other places, we found that arrays of internal Buffer instances were being copied and concatenated using <a href="https://nodejs.org/docs/latest/api/buffer.html#static-method-bufferconcatlist-totallength"><code><u>Buffer.concat</u></code></a> for no other reason than to get the total number of bytes in the collection. That is, we spotted code of the form <code>getBody().length</code>. The function <code>getBody()</code> would concatenate a large number of buffers into a single buffer and return it, without storing the buffer anywhere. So, all that work was being done just to read the overall length. Obviously this was not intended, and fixing it was an easy win.</p><p>We've started opening a series of pull requests in OpenNext to fix these issues, and others in hot paths, removing some unnecessary allocations and copies:</p><ul><li><p><a href="https://github.com/opennextjs/opennextjs-aws/pull/991"><u>Improving streaming response performance</u></a></p></li><li><p><a href="https://github.com/opennextjs/opennextjs-aws/pull/996"><u>Reduce allocations of streams</u></a></p></li><li><p><a href="https://github.com/opennextjs/opennextjs-aws/pull/1005"><u>Optimize readable/writable stream piping</u></a></p></li><li><p><a href="https://github.com/opennextjs/opennextjs-aws/pull/1009"><u>Cache expensive compute on </u></a><a href="http://opennext.js/"><u>OpenNext.js</u></a></p></li><li><p><a href="https://github.com/opennextjs/opennextjs-aws/pull/1004"><u>Improve composable-cache performance</u></a></p></li><li><p><a href="https://github.com/opennextjs/opennextjs-aws/pull/1006"><u>Improve performance of OpenNext.js converters</u></a></p></li><li><p><a href="https://github.com/opennextjs/opennextjs-aws/pull/1007"><u>Avoid slow-mode on frequently accessed objects</u></a>&nbsp;</p></li><li><p><a href="https://github.com/opennextjs/opennextjs-aws/pull/1008"><u>Avoid copying/allocation extra header objects</u></a></p></li><li><p><a href="https://github.com/opennextjs/opennextjs-aws/pull/1010"><u>Avoid unnecessary buffer copies on responses</u></a></p></li><li><p><a href="https://github.com/opennextjs/opennextjs-cloudflare/pull/939"><u>Cache regexes to avoid GC pressure</u></a></p></li></ul><p>We're not done. We intend to keep iterating through OpenNext code, making improvements wherever they’re needed – not only in the parts that run on Workers. Many of these improvements apply to other OpenNext platforms. The shared goal of OpenNext is to make NextJS as fast as possible regardless of where you choose to run your code.</p>
    <p>
      <h2 id="inefficient-streams-adapters">Inefficient Streams Adapters</h2>
      
    </p>
    <p>Much of the Next.js code was written to use Node.js's APIs for byte streams. Workers, however, prefers the web-standard <a href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API"><u>Streams API</u></a>, and uses it to represent HTTP request and response bodies. This necessitates using adapters to convert between the two APIs. When investigating the performance bottlenecks, we found a number of examples where inefficient streams adapters are being needlessly applied. For example:</p>
            <pre><code>const stream = Readable.toWeb(Readable.from(res.getBody()))</code></pre>
            <p><code>res.getBody()</code> was performing a <code>Buffer.concat(chunks)</code> to copy accumulated chunks of data into a new Buffer, which was then passed as an iterable into a Node.js <a href="https://nodejs.org/docs/latest/api/stream.html#readable-streams"><code><u>stream.Readable</u></code></a> that was then wrapped <a href="https://nodejs.org/docs/latest/api/stream.html#streamreadabletowebstreamreadable-options"><u>by an adapter</u></a> that returns a <code>ReadableStream</code>. While these utilities do serve a useful purpose, this becomes a data buffering nightmare since both Node.js streams and Web streams each apply their own internal buffers! Instead we can simply do:</p>
            <pre><code>const stream = ReadableStream.from(chunks);</code></pre>
            <p>This returns a <code>ReadableStream</code> directly from the accumulated chunks without additional copies, extraneous buffering, or passing everything through inefficient adaptation layers.</p><p>In other places we see that Next.js and React make extensive use of <code>ReadableStream</code> to pass bytes through, but the streams being created are value-oriented rather than byte-oriented! For example,</p>
            <pre><code>const readable = new ReadableStream({
  pull(controller) {
    controller.enqueue(chunks.shift());
    if (chunks.length === 0) {
      controller.close();
    }
});  // Default highWaterMark is 1!
</code></pre>
            <p>Seems perfectly reasonable. However, there's an issue here. If the chunks are <code>Buffer</code> or <code>Uint8Array</code> instances, every instance ends up being a separate read by default. So if the <code>chunk</code> is only a single byte, or 1000 bytes, that's still always two reads. By converting this to a byte stream with a reasonable high water mark, we can make it possible to read this stream much more efficiently:</p>
            <pre><code>const readable = new ReadableStream({
  type: 'bytes',
  pull(controller) {
    controller.enqueue(chunks.shift());
    if (chunks.length === 0) {
      controller.close();
    }
}, { highWaterMark: 4096 });
</code></pre>
            <p>Now, the stream can be read as a stream of bytes rather than a stream of distinct JavaScript values, and the individual chunks can be coalesced internally into 4096 byte chunks, making it possible to optimize the reads much more efficiently. Rather than reading each individual enqueued chunk one at a time, the ReadableStream will proactively call <code>pull()</code> repeatedly until the highWaterMark is reached. Reads then do not have to ask the stream for one chunk of data at a time.</p><p>While it would be best for the rendering pipeline to be using byte streams and paying attention to back pressure signals more, our implementation can still be tuned to better handle cases like this.</p><p>The bottom line? We've got some work to do! There are a number of improvements to make in the implementation of OpenNext and the adapters that allow it to work on Cloudflare that we will continue to investigate and iterate on. We've made a handful of these fixes already and we're already seeing improvements. Soon we also plan to start submitting patches to Next.js and React to make further improvements upstream that will ideally benefit the entire ecosystem.</p>
    <p>
      <h3 id="json-parsing">JSON parsing</h3>
      
    </p>
    <p>Aside from buffer allocations and streams, one additional item stood out like a sore thumb in the profiles: <code>JSON.parse()</code> with a reviver function. This is used in both React and Next.js and in our profiling this was significantly slower than it should be. We built a microbenchmark and found that JSON.parse with a reviver argument recently got even slower when the standard <a href="https://github.com/tc39/proposal-json-parse-with-source"><u>added a third argument</u></a> to the reviver callback to provide access to the JSON source context.</p><p>For those unfamiliar with the reviver function, it allows an application to effectively customize how JSON is parsed. But it has drawbacks. The function gets called on every key-value pair included in the JSON structure, including every individual element of an Array that gets serialized. In Theo's NextJS benchmark, in any single request, it ends up being called well over 100,000 times!</p><p>Even though this problem affects all platforms, not just ours, we decided that we weren't just going to accept it. After all, we have contributors to V8 on the Workers runtime team! We've upstreamed a <a href="https://chromium-review.googlesource.com/c/v8/v8/+/7027411"><u>V8 patch</u></a> that can speed up <code>JSON.parse()</code> with revivers by roughly 33 percent. That should be in V8 starting with version 14.3 (Chrome 143) and can help everyone using V8, not just Cloudflare: Node.js, Chrome, Deno, the entire ecosystem.&nbsp; If you are not using Cloudflare Workers or didn't change the syntax of your reviver you are currently suffering under the red performance bar.</p><p>We will continue to work with framework authors to reduce overhead in hot paths. Some changes belong in the frameworks, some belong in the engine, some in our platform.</p>
    <p>
      <h2 id="node-jss-trigonometry-problem">Node.js's trigonometry problem</h2>
      
    </p>
    <p>We are engineers, and we like to solve engineering problems — whether our own, or for the broader community.</p><p>Theo's benchmarks were actually posted in response to a different benchmark by another author which compared Cloudflare Workers against Vercel. The original benchmark focused on calling trigonometry functions (e.g. sine and cosine) in a tight loop. In this benchmark, Cloudflare Workers performed 3x faster than Node.js running on Vercel.</p><p>The author of the original benchmark offered this as evidence that Cloudflare Workers are just faster. Theo disagreed, and so did we. We expect to be faster, but not by 3x! We don't implement math functions ourselves; these come with V8. We weren't happy to just accept the win, so we dug in.</p><p>It turns out that Node.js is not using the latest, fastest path for these functions. Node.js can be built with either the <a href="https://clang.llvm.org/"><u>clang</u></a> or <a href="https://gcc.gnu.org/"><u>gcc</u></a> compilers, and is written to support a broader range of operating systems and architectures than Workers. This means that Node.js' compilation often ends up using a lowest-common denominator for some things in order to provide support for the broadest range of platforms. V8 includes a <a href="https://github.com/search?q=repo%3Av8%2Fv8%20V8_USE_LIBM_TRIG_FUNCTIONS&amp;type=code"><u>compile-time flag</u></a> that, in some configurations, allows it to use a faster implementation of the trig functions. In Workers, mostly by coincidence, that flag is enabled by default. In Node.js, it is not. We've opened a <a href="https://github.com/nodejs/node/pull/60153"><u>pull request</u></a> to enable the flag in Node.js so that everyone benefits, at least on platforms where it can be supported.</p><p>Assuming that lands, and once AWS Lambda and Vercel are able to pick it up, we expect this specific gap to go away, making these operations faster for everyone. This change won't benefit our customers, since Cloudflare Workers already uses the faster trig functions, but a bug is a bug and we like making everything faster.</p>
    <p>
      <h2 id="benchmarks-are-hard">Benchmarks are hard</h2>
      
    </p>
    <p>Even the best benchmarks have bias and tradeoffs. It's difficult to create a benchmark that is truly representative of real-world performance, and all too easy to misinterpret the results of benchmarks that are not. <a href="https://planetscale.com/benchmarks"><u>We particularly liked Planetscale's take on this subject.</u></a></p><p>These specific CPU-bound tests are not an ideal choice to represent web applications. Theo even notes this in his video. Most real-world applications on Workers and Vercel are bound by databases, downstream services, network, and page size. End user experience is what matters. CPU is one piece of that picture. That said, if a benchmark shows us slower, we take it seriously.</p><p>While the benchmarks helped us find and fix many real problems, we also found a few problems with the benchmarks themselves, which contributed to the apparent disparity in speed:</p>
    <p>
      <h3 id="running-locally">Running locally</h3>
      
    </p>
    <p>The benchmark is designed to be run on your laptop, from which it hits Cloudflare's and Vercel's servers over the Internet. It makes the assumption that latency observed from the client is a close enough approximation of server-side CPU time. The reasons are fair: As Theo notes, Cloudflare does not permit an application to measure its own CPU time, in order to prevent timing side channel attacks. Actual CPU time can be seen in logs after the fact, but gathering those may be a lot of work. It's just easier to measure time from the client.</p><p>However, as Cloudflare and Vercel are hosted from different data centers, the network latency to each can be a factor in the benchmark, and this can skew the results. Typically, this effect will favor Cloudflare, because Cloudflare can run your Worker in locations spread across 330+ cities worldwide, and will tend to choose the closest one to you. Vercel, on the other hand, usually places compute in a central location, so latency will vary depending on your distance from that location.</p><p>For our own testing, to minimize this effect, we ran the benchmark client from a VM on AWS located in the same data center as our Vercel instances. Since Cloudflare is well-connected to every AWS location, we think this should have eliminated network latency from the picture. We chose AWS's us-east-1 / Vercel's iad1 for our test as it is widely seen as the default choice; any other choice could draw questions about cherry-picking.</p>
    <p>
      <h3 id="not-all-cpus-are-equal">Not all CPUs are equal</h3>
      
    </p>
    <p>Cloudflare's servers aren't all identical. Although we refresh them aggressively, there will always be multiple generations of hardware in production at any particular time. Currently, this includes generations <a href="https://blog.cloudflare.com/cloudflares-gen-x-servers-for-an-accelerated-future/"><u>10</u></a>, <a href="https://blog.cloudflare.com/the-epyc-journey-continues-to-milan-in-cloudflares-11th-generation-edge-server/"><u>11</u></a>, and <a href="https://blog.cloudflare.com/gen-12-servers/"><u>12</u></a> of our server hardware.</p><p>Other cloud providers are no different. No cloud provider simply throws away all their old servers every time a new version becomes available.</p><p>Of course, newer CPUs run faster, even for single-threaded workloads. The differences are not as large as they used to be 20-30 years ago, but they are not nothing. As such, an application may get (a little bit) lucky or unlucky depending on what machine it is assigned to.</p><p>In cloud environments, even identical CPUs can yield different performance depending on circumstances, due to multitenancy. The server your application is assigned to is running many others as well. In AWS Lambda, a server may be running hundreds of applications; in Cloudflare, with our ultra-efficient runtime, a server may be running thousands. These "noisy neighbors" won't share the same CPU core as your app, but they may share other resources, such as memory bandwidth. As a result, performance can vary.</p><p>It's important to note that these problems create <i>correlated</i> noise. That is, if you run the test again, the application is likely to remain assigned to the same machines as before – this is true of both Cloudflare and Vercel. So, this noise cannot be corrected by simply running more iterations. To correct for this type of noise on Cloudflare, one would need to initiate requests from a variety of geographic locations, in order to hit different Cloudflare data centers and therefore different machines. But, that is admittedly a lot of work. (We are not familiar with how best to get an application to switch machines on Vercel.)</p>
    <p>
      <h3 id="a-next-js-config-bug">A Next.js config bug</h3>
      
    </p>
    <p>The Cloudflare version of the NextJS benchmark was not configured to use <a href="https://nextjs.org/docs/app/guides/caching#opting-out-2"><u>force-dynamic</u></a> while the Vercel version was. This triggered curious behavior. Our understanding is that pages which are not "dynamic" should normally be rendered statically at build time. With OpenNext, however, it appears the pages are still rendered dynamically, but if multiple requests for the same page are received at the same time, OpenNext will only invoke the rendering once. Before we made the changes to fix our scheduling algorithm to avoid sending too many requests to the same isolate, this behavior may have somewhat counteracted that problem. Theo reports that he had disabled force-dynamic in the Cloudflare version specifically for this reason: with it on, our results were so bad as to appear outright broken, so he intentionally turned it off.</p><p>Ironically, though, once we fixed the scheduling issue, using "static" rendering (i.e. not enabling force-dynamic) hurt Cloudflare's performance for other reasons. It seems that when OpenNext renders a "cacheable" page, streaming of the response body is inhibited. This interacted poorly with a property of the benchmark client: it measured time-to-first-byte (TTFB), rather than total request/response time. When running in dynamic mode – as the test did on Vercel – the first byte would be returned to the client before the full page had been rendered. The rest of the rendering would happen as bytes streamed out. But with OpenNext in non-dynamic mode, the entire payload was rendered into a giant buffer upfront, before any bytes were returned to the client.</p><p>Due to the TTFB behavior of the benchmark client, in dynamic mode, the benchmark actually does not measure the time needed to fully render the page. We became suspicious when we noticed that Vercel's observability tools indicated more CPU time had been spent than the benchmark itself had reported.</p><p>One option would have been to change the benchmarks to use TTLB instead – that is, wait until the last byte is received before stopping the timer. However, this would make the benchmark even more affected by network differences: The responses are quite large, ranging from 2MB to 15MB, and so the results could vary depending on the bandwidth to the provider. Indeed, this would tend to favor Cloudflare, but as the point of the test is to measure CPU speed, not bandwidth, it would be an unfair advantage.</p><p>Once we changed the Cloudflare version of the test to use force-dynamic as well, matching the Vercel version, the streaming behavior then matched, making the request fair. This means that neither version is actually measuring the cost of rendering the full page to HTML, but at least they are now measuring the same thing.</p><p>As a side note, the original behavior allowed us to spot that OpenNext has a couple of performance bottlenecks in its implementation of the composable cache it uses to deduplicate rendering requests. While fixes to these aren't going to impact the numbers for this particular set of benchmarks, we're working on improving those pieces also.</p>
    <p>
      <h3 id="a-react-ssr-config-bug">A React SSR config bug</h3>
      
    </p>
    <p>The React SSR benchmark contained a more basic configuration error. React inspects the environment variable <code>NODE_ENV</code> to decide whether the environment is "production" or a development environment. Many Node.js-based environments, including Vercel, set this variable automatically in production. Many frameworks, such as OpenNext, automatically set this variable for Workers in production as well. However, the React SSR benchmark was written against lower-level React APIs, not using any framework. In this case, the <code>NODE_ENV</code> variable wasn't being set at all.</p><p>And, unfortunately, when <code>NODE_ENV</code> is not set, React defaults to "dev mode", a mode that contains extra debugging checks and is therefore much slower than production mode. As a result, the numbers for Workers were much worse than they should have been.</p><p>Arguably, it may make sense for Workers to set this variable automatically for all deployed workers, particularly when Node.js compatibility is enabled. We are looking into doing this in the future, but for now we've updated the test to set it directly.</p>
    <p>
      <h2 id="what-were-going-to-do-next">What we’re going to do next</h2>
      
    </p>
    <p>Our improvements to the Workers Runtime are already live for all workers, so you do not need to change anything. Many apps will already see faster, steadier tail latency on compute heavy routes with less jitter during bursts. In places where garbage collection improved, some workloads will also use fewer billed CPU seconds.</p><p>We also sent Theo a <a href="https://github.com/t3dotgg/cf-vs-vercel-bench/pull/5"><u>pull request</u></a> to update OpenNext with our improvements there, and with other test fixes.</p><p>But we're far from done. We still have work to do to close the gap between OpenNext and Next.js on Vercel – but given the other benchmark results, it's clear we can get there. We also have plans for further improvements to our scheduling algorithm, so that requests almost never block each other. We will continue to improve V8, and even Node.js – the Workers team employs multiple core contributors to each project. Our approach is simple: improve open source infrastructure so that everyone gets faster, then make sure our platform makes the most of those improvements.</p><p>And, obviously, we'll be writing more benchmarks, to make sure we're catching these kinds of issues ourselves in the future. If you have a benchmark that shows Workers being slower, send it to us with a repro. We will profile it, fix what we can upstream, and share back what we learn!</p></div></section><div><p>Cloudflare's connectivity cloud protects <a target="_blank" href="https://www.cloudflare.com/network-services/" rel="noreferrer">entire corporate networks</a>, helps customers build <a target="_blank" href="https://workers.cloudflare.com/" rel="noreferrer">Internet-scale applications efficiently</a>, accelerates any <a target="_blank" href="https://www.cloudflare.com/performance/accelerate-internet-applications/" rel="noreferrer">website or Internet application</a>, <a target="_blank" href="https://www.cloudflare.com/ddos/" rel="noreferrer">wards off DDoS attacks</a>, keeps <a target="_blank" href="https://www.cloudflare.com/application-security/" rel="noreferrer">hackers at bay</a>, and can help you on <a target="_blank" href="https://www.cloudflare.com/products/zero-trust/" rel="noreferrer">your journey to Zero Trust</a>.</p><p>Visit <a target="_blank" href="https://one.one.one.one/" rel="noreferrer">1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.</p><p>To learn more about our mission to help build a better Internet, <a target="_blank" href="https://www.cloudflare.com/learning/what-is-cloudflare/" rel="noreferrer">start here</a>. If you're looking for a new career direction, check out <a target="_blank" href="https://www.cloudflare.com/careers" rel="noreferrer">our open positions</a>.</p></div><astro-slot> <!--[if astro]>server-island-start<![endif]--> </astro-slot><a href="https://blog.cloudflare.com/tag/workers/">Cloudflare Workers</a><a href="https://blog.cloudflare.com/tag/developer-platform/">Developer Platform</a><a href="https://blog.cloudflare.com/tag/developers/">Developers</a></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AppLovin nonconsensual installs (144 pts)]]></title>
            <link>https://www.benedelman.org/applovin-nonconsensual-installs/</link>
            <guid>45584226</guid>
            <pubDate>Tue, 14 Oct 2025 20:13:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.benedelman.org/applovin-nonconsensual-installs/">https://www.benedelman.org/applovin-nonconsensual-installs/</a>, See on <a href="https://news.ycombinator.com/item?id=45584226">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-2410">
		<!-- .entry-header -->

	
	<div>
		<p data-nosnippet="">See <a href="https://www.benedelman.org/applovin-my-disclosures/">important disclosures</a> including my related financial interests.</p>
<p>Mobile adtech juggernaut AppLovin recently faced <a href="https://www.benedelman.org/applovin-prior-critiques/">multiple allegations of misconduct</a>.&nbsp; Allegations run the gamut—privacy, ad targeting, even national security and ties to China.&nbsp; I was among the researchers consulted by skeptical investors this spring, and I was quoted in one of their reports, explaining my concerns about AppLovin installing other games without user consent.</p>
<p>Today I argue that AppLovin places apps on users’ Android devices without their consent.&nbsp; As a maxim says, extraordinary claims require extraordinary evidence, but I embrace that high bar.&nbsp; First, I <a href="https://www.benedelman.org/applovin-execution-path/">study AppLovin source code</a> and find that it installs other apps without users being asked to consent.&nbsp; I use a decompiler to access Java source for AppLovin’s SDK and middleware, plus partners’ install helpers—following the execution path from an ad tap (just clicking an ad, potentially a misclick aiming for a tiny X button, with no Install button even visible on screen) through to an installation.&nbsp; AppLovin used an obfuscator to conceal most function names and variable names, so the Java code is no easy read.&nbsp; But with patience, suitable devs can follow the logic.&nbsp; Usefully, <a href="https://www.benedelman.org/applovin-execution-js/">some key steps are in JavaScript</a>—again obfuscated (minified), but readable thanks to a pretty-printer.&nbsp; I except the relevant parts and explain line by line.</p>
<p>Second, I gather <a href="https://www.benedelman.org/applovin-complaints/">208 complaints</a> that all say basically the same thing: users are receiving apps in situations where (at a minimum) they don’t think they agreed.&nbsp; The details of these complaints match what the code indicates: Install helpers (including from Samsung and T-Mobile) perform installs at AppLovin’s direction, causing most users to blame the install helpers (despite their generic names like Content Manager, Device Manager, and AppSelector).&nbsp; Meanwhile, most complaints report no notification or request for approval prior to install, but others say they got a screen which installed even when they pressed X to decline, and a few report a countdown timer followed by automatic installation.&nbsp; Beyond prose complaints, a handful of complaints include screenshots, and one has a <a href="https://imgur.com/a/shitty-mobile-ad-installs-apps-if-you-click-on-screen-hit-back-button-instead-of-actually-hitting-cancel-YzXCWzV">video</a>.&nbsp; Wording from the screenshots and video match strings in the code, and users’ reports of auto-installs, X’s, and countdowns similarly match three forks in AppLovin’s code.&nbsp; Overall, users are furious, finding these installations contrary to both Android security rules and widely-held expectations.</p>
<p>AppLovin CEO Adam Foroughi <a href="https://www.applovin.com/blog/note-from-our-ceo/">posted in February 2025</a> that “Every download results from an explicit user choice—whether via the App Store or our Direct Download experience.”&nbsp; <a href="https://www.applovin.com/array-privacy-policy/">AppLovin Array Privacy Policy</a> similarly claims that AppLovin “facilitates the on-device installation of mobile apps that you choose to download.”&nbsp; But did users truly make an “explicit … choice” and “choose to download” these apps?&nbsp; Complaints indicate that users don’t think they chose to install.&nbsp; And however AppLovin defends its five-second countdowns, a user’s failure to reject a countdown certainly is not an “explicit” choice to install.&nbsp; Nor is “InstallOnClose” (a quote from <a href="https://www.benedelman.org/applovin-execution-js/">AppLovin’s JavaScript</a>) consistent with widely-held expectations that “X” means no.&nbsp; Perhaps Foroughi intends to argue that a user “consents” to install any time the user taps an ad, but even that is a tall order.&nbsp; One, AppLovin’s X’s are unusually tiny, so mis-taps are especially likely.&nbsp; Two, users expect an actual Install button (not to mention appropriate contract formalities) before an installation occurs; users know that on Android, an arbitrary tap cannot ordinarily install an app.&nbsp; Ultimately, “explicit user choice” is a high bar, and user complaints show AppLovin is nowhere close.</p>
<h2>The role of manufacturers and carriers</h2>
<p>Why would Samsung, T-Mobile, and others grant AppLovin the ability to install apps? Two possibilities:</p>
<ol>
<li>Financial incentives. AppLovin pays manufacturers and carriers for the permissions it seeks. These elevated permissions may be unusual, and the resulting installations are predictably annoying and unwanted for users. But at the right price, some partners may agree.</li>
<li>Scope creep. Public statements indicate manufacturers and carriers authorized AppLovin to perform “out-of-box experience” (OOBE) installs—recommending and installing apps during initial device setup. Install helpers were designed to support this narrow context. But my review of install helper code shows no checks to limit installations to the OOBE window. A simple safeguard—such as rejecting installs more than two hours after first boot—would prevent ongoing installs. By omitting such safeguards, manufacturers and carriers effectively granted AppLovin open-ended install rights, whether or not that was their intent.</li>
</ol>
<p>So far manufacturers and carriers haven’t said whether they approve what AppLovin is doing.&nbsp; Journalist Mike Shields <a href="https://mikeshields.substack.com/p/applovin-appears-to-be-installing">asked</a> Samsung, but they declined to comment.&nbsp; Perhaps my article will prompt them to take another look.</p>
<h2>Sources of evidence</h2>
<p>Five overlapping categories of evidence offer a mutually-reinforcing picture of nonconsensual installations:</p>
<ol>
<li><a href="https://www.benedelman.org/applovin-execution-path/">Execution path</a>. Source code extracted from test devices shows how an ad tap leads all the way to an installation, without a user pressing “Install” or similar at a consent screen.</li>
<li><a href="https://www.benedelman.org/applovin-labels/">Labels and strings</a>. Code snippets reference installation without a user request or consent.</li>
<li><a href="https://www.benedelman.org/applovin-permissions/">Permissions</a>. App manifests include nonstandard entries consistent with apps asking AppLovin middleware to install other apps.</li>
<li><a href="https://www.benedelman.org/applovin-complaints/">User complaints</a>. 208 distinct complaints describe apps being installed while playing games or viewing ads. A few complaints include relevant screenshots and even video of nonconsensual installations.&nbsp; Complaints, screenshots, and videos match unusual details visible in the code.</li>
<li><a href="https://www.benedelman.org/applovin-statements/">AppLovin statements</a>. Public statements use euphemistic or contradictory language about user “choice” and “direct downloads,” suggesting attempts to obscure nonconsensual installs.</li>
</ol>
<p>I also examine <a href="https://www.benedelman.org/applovin-implications/">the legal and financial risks</a> associated with nonconsensual installations.</p>
	</div><!-- .entry-content -->

	 <!-- .entry-footer -->
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[America Is Sliding Toward Illiteracy (241 pts)]]></title>
            <link>https://www.theatlantic.com/ideas/archive/2025/10/education-decline-low-expectations/684526/</link>
            <guid>45583730</guid>
            <pubDate>Tue, 14 Oct 2025 19:23:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theatlantic.com/ideas/archive/2025/10/education-decline-low-expectations/684526/">https://www.theatlantic.com/ideas/archive/2025/10/education-decline-low-expectations/684526/</a>, See on <a href="https://news.ycombinator.com/item?id=45583730">Hacker News</a></p>
<div id="readability-page-1" class="page"><section data-event-module="article body" data-flatplan-body="true"><p data-flatplan-paragraph="true" data-flatplan-dropcap="true">T<span>he past decade may rank</span> as one of the worst in the history of American education. It marks a stark reversal from what was once a hopeful story. At the start of the century, American students registered steady improvement in math and reading. Around 2013, this progress began to stall out, and then to backslide dramatically. What exactly went wrong? The decline began well before the pandemic, so COVID-era disruptions alone cannot explain it. Smartphones and social media probably account for some of the drop. But there’s another explanation, albeit one that progressives in particular seem reluctant to countenance: a pervasive refusal to hold children to high standards.</p><p data-flatplan-paragraph="true">We are now seeing what the lost decade in American education has wrought. By some measures, American students have regressed to a level not seen in 25 years or more. Test scores from NAEP, short for the National Assessment of Educational Progress, released this year show that 33 percent of eighth graders are reading at a level that is “below basic”—meaning that they struggle to follow the order of events in a passage or to even summarize its main idea. That is the highest share of students unable to meaningfully read since 1992. Among fourth graders, 40 percent are below basic in reading, the highest share since 2000. In 2024, the average score on the ACT, a popular college-admissions standardized test that is graded on a scale of 1 to 36, was<a data-event-element="inline link" href="https://www.act.org/content/act/en/research/services-and-resources/data-and-visualization/grad-class-database-2024.html"> 19.4</a>—the worst average performance since the test was <a data-event-element="inline link" href="https://www.axios.com/2023/10/11/act-test-scores-lowest-2023">redesigned</a> in 1990.</p><p id="injected-recirculation-link-0" data-view-action="view link - injected link - item 1" data-event-element="injected link" data-event-position="1"><a href="https://www.theatlantic.com/family/archive/2025/02/disengaged-teens-parents-nagging-school/681834/">Read: The teen-disengagement crisis</a></p><p data-flatplan-paragraph="true">American schoolchildren have given up almost all of the gains they achieved at the start of the century. These learning losses are not distributed equally. Across grades and subjects, the NAEP results show that the top tenth of students are doing roughly as well as they always have, whereas those at the bottom are doing worse. From 2000 to 2007, the bottom tenth of fourth graders in reading ability showed <a data-event-element="inline link" href="https://edworkingpapers.com/sites/default/files/ai25-1197.pdf">substantial improvement</a>, before stagnating. But by 2024, those gains had been erased. In 49 out of the 50 states (all except Mississippi), the gap between the top tenth and the bottom tenth grew. Nat Malkus, of the American Enterprise Institute, has <a data-event-element="inline link" href="https://www.aei.org/wp-content/uploads/2025/01/Testing-Theories-of-Why.pdf?x85095">pointed out</a> that this surging inequality has grown faster in America than in other developed countries. The upshot is grim: The bottom tenth of 13-year-olds, according to NAEP’s long-term-trend data, are<a data-event-element="inline link" href="https://www.nationsreportcard.gov/highlights/ltt/2023/#section-performance-trends-by-percentiles"> hitting</a> lows in reading and math scores not seen since these tests began in 1971 and 1978, respectively.</p><p data-flatplan-paragraph="true">A seemingly plausible culprit, and a familiar boogeyman for progressives, is insufficient spending. The problem with this tidy explanation is that it’s not tethered to reality. School spending did not decline from 2012 to 2022. In fact, it increased significantly, even after adjusting for inflation, from $14,000 a student to more than $16,000.</p><p data-flatplan-paragraph="true">Besides, America recently ran a very large natural experiment in dropping money on schools that, in a word, failed. During the pandemic, Congress appropriated a gargantuan sum of money, $190 billion, to ameliorate learning loss, most of it as part of the Biden administration’s American Rescue Plan. (For scale, this is roughly the sum recently given to the Trump administration to fund its border wall and immigration-enforcement agenda.) States were given latitude to spend their funds as they saw fit, which, it seems, was a mistake. Instead of funding high-quality tutoring programs or other programs that benefited students, districts spent money for <a data-event-element="inline link" href="https://edunomicslab.org/2023/04/04/the-massive-esser-experiment/">professional development</a> or on capital expenditures such as <a data-event-element="inline link" href="https://www.k12dive.com/news/Schools-spend-COVID-relief-money-ESSER-ARP/704564/">replacing</a> HVAC systems and obtaining electric buses. “The scientific term for this is that we didn’t get jack shit out of that money,” says Michael Petrilli, the president of the Thomas B. Fordham Institute, an education-policy think tank. “There are some studies that can detect small impacts, but they’re small. I think it’s also fair to say that a lot of the money was wasted.”</p><p data-flatplan-paragraph="true">A more likely culprit for learning loss is smartphones. Jonathan Haidt, the social psychologist and author of <em>The Anxious Generation</em>, is the most prominent evangelist of this thesis. He argues that declining school performance and other worrying trends among Gen Z, such as the rise in anxiety, depression, and suicide, can be traced to the new “<a data-event-element="inline link" href="https://www.theatlantic.com/technology/archive/2024/03/teen-childhood-smartphone-use-mental-health-effects/677722/">phone-based childhood</a>.” And his argument matches the time trend well. Smartphone ownership rocketed upwards around the time that American educational performance crested: In 2011, just<a data-event-element="inline link" href="https://www.pewresearch.org/internet/2013/03/13/teens-and-technology-2013/"> 23 percent</a> of teenagers had smartphones. By 2013—roughly the peak of American education—37 percent did. By 2015, <a data-event-element="inline link" href="https://www.pewresearch.org/internet/fact-sheet/teens-and-internet-device-access-fact-sheet/">73 percent</a> had access to one. And by 2018, that figure was 95 percent, where it remains today. Nearly half of teenagers say that they use the internet almost constantly. For parents, this explanation is also intuitive. You can apply your own experience of smartphone-induced self-sabotage to children (who do not have the biological benefit of a mature prefrontal cortex) and conclude that unregulated phone use is destructive to learning and creativity.</p><p id="injected-recirculation-link-1" data-view-action="view link - injected link - item 2" data-event-element="injected link" data-event-position="2"><a href="https://www.theatlantic.com/family/archive/2025/08/phone-ban-school-parents/683982/">Gail Cornwall: What many parents miss about the phones-in-schools debate</a></p><p data-flatplan-paragraph="true">But the smartphone thesis has a few weak spots. It’s not just middle schoolers and high schoolers whose performance is declining; it’s also kids in elementary school. Phone use has certainly increased among young children, but not to the ubiquitous proportions of adolescents. And even though smartphone use is almost universal, the learning losses have not been. High-achieving kids are doing roughly as well as they always have, while those at the bottom are seeing rapid losses. The thesis needs some elaboration to explain this dispersion pattern. Perhaps kids who have higher levels of executive functioning and impulse control (or are lucky enough to have parents who do) are better able to navigate the sea of distractions. At any rate, few broad social trends—whether the <a data-event-element="inline link" href="https://www.theatlantic.com/ideas/archive/2025/02/america-marriage-decline/681518/">decline of marriage</a> in America or the <a data-event-element="inline link" href="https://www.theatlantic.com/ideas/archive/2024/03/america-europe-post-pandemic-growth-comparison/677617/">slow rate of productivity growth in Europe</a>—are monocausal. It would be surprising if the decline in American education were.</p><p data-flatplan-paragraph="true">An explanation that deserves equal consideration is what one might call the low-expectations theory. In short, schools have demanded less and less from students—who have responded, predictably, by giving less and less. The timing lines up here, too. Around the same time that smartphones were taking off, a counterrevolution was brewing against the old regime of No Child Left Behind, the George W. Bush–era law passed in 2002 that required schools to set high standards and measured school progress toward them through stringent testing requirements. Bush famously said that he wanted to tackle “the soft bigotry of low expectations,” and there’s real evidence that he did. As controversial as it was, No Child Left Behind coincided with increased school performance, especially for those at the bottom.</p><p data-flatplan-paragraph="true">That’s not to say the regime was perfect. The No Child Left Behind approach to struggling schools was largely punitive, including threats of mandatory restructuring for institutions that failed to meet targets. And expectations for progress rose higher and higher each year, ultimately seeding the demise of the law. Schools were supposed to have all their kids at grade level by 2014. But as this deadline approached, it became clear that schools would miss it. In 2012, the Obama administration began giving states waivers from the requirements. Then, in 2015, Congress passed the Every Student Succeeds Act, which returned responsibility for improving low-performing schools to the states. But according to Martin West, the academic dean of Harvard’s education school, “most states have not been particularly ambitious in the design of those systems.”</p><p data-flatplan-paragraph="true">Low-expectations theory explains other trends that the smartphone thesis, by itself, does not. If the bar for grading and graduating were constant year over year, we would expect both to decline in line with student performance. Instead, we see the opposite. An <a data-event-element="inline link" href="https://www.act.org/content/dam/act/secured/documents/Evidence-of-Grade-Inflation-in-English-Math-Social-Studies-and-Science.pdf">ACT study</a> found that the share of students getting A’s in English rose from 48 percent in 2012 to 56 percent in 2022, even as their demonstrated mastery of the subject declined over that period. (The same is true of other subjects, including math, social studies, and science.) Over the same decade, high-school graduation rates <a data-event-element="inline link" href="https://nces.ed.gov/programs/digest/d23/tables/dt23_219.46.asp">improved</a> from 80 to 87 percent despite objective declines in academic achievement.</p><p id="injected-recirculation-link-2" data-view-action="view link - injected link - item 3" data-event-element="injected link" data-event-position="3"><a href="https://www.theatlantic.com/ideas/archive/2025/08/harvard-college-grade-inflation/684021/">Rose Horowitch: The perverse consequences of the easy A</a></p><p data-flatplan-paragraph="true">If the incentives to learn decrease, children—just like adults—will respond to that. <a data-event-element="inline link" href="https://www.returntolearntracker.net/">One in four</a> students today is chronically absent, meaning that they miss more than a tenth of instructional days, a substantial increase from pre-pandemic averages. The past decade also marked a shift in concern among educators, toward equity and away from excellence. Elements of so-called equitable grading, which is supposed to be more resistant to bias than traditional grading, have taken off in American schools.<a data-event-element="inline link" href="https://www.edweek.org/teaching-learning/heres-what-teachers-really-think-about-equitable-grading-policies/2025/08"> Roughly 40 percent</a> of middle-school teachers work in schools where there are no late penalties for coursework, no zeroes for missing coursework, and unlimited redos of tests.</p><p data-flatplan-paragraph="true" data-flatplan-dropcap="true">W<span>hat would it take</span> to reverse America’s educational declines? In good part because of Haidt’s arguments that smartphones are both dulling and immiserating children, states are now instituting bans on smartphone use during the school day. If districts that ban smartphones see swifter improvements in academic outcomes than those that do not, that will provide solid evidence that Haidt was correct. But getting screens out of the classroom likely won’t be enough to escape the malaise of the past decades. What lower expectations have inflicted in the past, only higher expectations in the future can remedy.</p><p data-flatplan-paragraph="true">The experience of a few outlier states gives reason for optimism. Matthew Chingos and Kristin Blagg, two scholars at the Urban Institute, <a data-event-element="inline link" href="https://www.urban.org/research/publication/states-demographically-adjusted-performance-2024-national-assessment">computed</a> “demographically adjusted NAEP scores,” examining how effective states are at educating kids after accounting for significant differences in socioeconomic status. Their analysis of the 2024 NAEP results found that Mississippi was best at educating kids in fourth-grade math, fourth-grade reading, and eighth-grade math. (In 2013, Mississippi was at the bottom of the unadjusted league table.) When I computed the correlation between these demographically adjusted scores and state spending, I found that there was none. If you’re an underprivileged kid in America, you will, on average, get the best education not in rich Massachusetts but in poor Mississippi, where per-pupil spending is half as high.</p><p data-flatplan-paragraph="true">This is a recent phenomenon. Some have called it the “Mississippi miracle” or—if you include relative outperformance in states such as Alabama, Louisiana, and Tennessee—the “southern surge.” From 2013 to 2024, reading performance declined among fourth graders in 46 out of 50 states. In only two states, Mississippi and Louisiana, did they meaningfully improve.</p><p data-flatplan-paragraph="true">A clear policy story is behind these improvements: imposing high standards while also giving schools the resources they needed to meet them. In 2013, Mississippi enacted a law requiring that third graders pass a literacy exam to be promoted to the next grade. It didn’t just issue a mandate, though; it began screening kids for reading deficiencies, training instructors in how to teach reading better (by, among other things, emphasizing phonics), and hiring literacy coaches to work in the <a data-event-element="inline link" href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4546228">lowest-performing schools</a>. Louisiana’s improvements came about after a similar policy cocktail was administered, starting in 2021. And this outperformance might continue in the future: The state recently reported that the number of kindergartners reading at grade level more than doubled in the past academic year—<a data-event-element="inline link" href="https://thelensnola.org/2025/06/04/k-3-reading-improves-as-louisiana-continues-early-literacy-focus/">rising</a> from 28 percent to 61 percent.</p><p data-flatplan-paragraph="true">The “Mississippi miracle” should force a reckoning in less successful states and, ideally, a good deal of imitation. But for Democrats, who pride themselves on belonging to the party of education, these results may be awkward to process. Not only are the southern states that are registering the greatest improvements in learning run by Republicans, but also their teachers are among the<a data-event-element="inline link" href="https://nces.ed.gov/surveys/ntps/tables/ntps1718_20111201_t1s.asp"> least unionized</a> in the country. And these red states are leaning into phonics-based, “science of reading” approaches to teaching literacy, while Democratic-run states such as New York, New Jersey, and Illinois have been painfully slow to adopt them, in some cases hanging on to other pedagogical approaches with little evidentiary basis. “The same people who are absolutely outraged about what” Robert F. Kennedy Jr. “is doing on vaccines are untroubled by just ignoring science when it comes to literacy,” Andrew Rotherham, a co-founder of the education-focused nonprofit Bellwether, told me.</p><p data-flatplan-paragraph="true">Some promising educational reforms, moreover, seem to brush up uncomfortably against liberal political priors. Progressive Democrats, for instance, still regard charter schools with suspicion and tend to fight to cap their number. But in a lot of places, that only hinders the equity these people profess to care about: High-performing charter networks in American cities have registered serious improvements in learning for some of the most disadvantaged children in the country. These have been verified through several<a data-event-element="inline link" href="https://economics.mit.edu/sites/default/files/publications/IZAdp5690.pdf"> lottery</a><a data-event-element="inline link" href="https://direct.mit.edu/edfp/article-abstract/14/3/414/12324/No-Excuses-Charter-Schools-and-College-Enrollment?redirectedFrom=fulltext"> studies</a>, comparing students who got into those schools with those who didn’t based on random chance alone, which is the gold standard for policy research. Another evidence-supported reform that upsets teachers’ unions, and their partners in the Democratic Party, is merit-based pay. We could “move to a system where teachers are rewarded based on their performance, not just a simple salary matrix, especially early in their careers,” says Jim Wyckoff, an education-policy professor at the University of Virginia, citing success with the policy in Washington, D.C.</p><p data-flatplan-paragraph="true">The economic costs already incurred by declining academic achievement are immense. Eric Hanushek, an education economist at the Hoover Institution, calculated that recent students will earn 7.7 percent less over their lifetime than they would have had they graduated at the time of <a data-event-element="inline link" href="https://www.hoover.org/sites/default/files/research/docs/Hanushek_The%20Pandemic%20in%20Perspective_web-250908.pdf">peak educational performance</a>. And because learning lost today means forgoing growth for decades in the future, Hanushek calculates that GDP will be 6 percent lower for the remainder of the century than if scores had stayed level. (This adds up to the modest sum of $90 trillion in present-day dollars).</p><p id="injected-recirculation-link-3" data-view-action="view link - injected link - item 4" data-event-element="injected link" data-event-position="4"><a href="https://podcasts.apple.com/us/podcast/bring-back-high-stakes-school-testing/id1305908387?i=1000730723968">Listen: Bring back high-stakes school testing</a></p><p data-flatplan-paragraph="true">One optimistic theory is that artificial-intelligence tools, which will only grow more powerful over the coming decades, will correct for this economic catastrophe by letting everyone externalize their thinking to superintelligent computer programs. The once-ironclad relationship between schooling quality and earnings might break down just in time, a somewhat literal deus ex machina. Hanushek thinks that is too rosy, though. In fact, the opposite might occur: “If we look at all the inventions in the past,” he told me, “they’re complementary to the high-skilled people and substitutes for low-skilled people.”</p><p data-flatplan-paragraph="true">In 1983, after another sustained decline in academic performance, a government commission released a landmark report titled “<a data-event-element="inline link" href="https://eric.ed.gov/?id=ED226006">A Nation at Risk</a>.” The authors argued that “the educational foundations of our society are presently being eroded by a rising tide of mediocrity that threatens our very future as a Nation and a people,” because America had “squandered the gains in student achievement made in the wake of the Sputnik challenge.” You could make a similar argument today as great-power competition between America and China intensifies.</p><p data-flatplan-paragraph="true">America’s scientific and technological hegemony is being seriously challenged, and China already leads in industries such as electric-vehicle production and solar-cell manufacturing. In the industries where America still leads, much technical prowess is owed to immigration policies that have attracted the brightest and most ambitious from around the world and to the research universities that train them. The Trump administration is pursuing a policy of browbeating these universities and of restricting visas, including for high-skilled workers—turning away talent amid an international talent war. The idea is that students in America today, and not those educated elsewhere, will be the labor force holding up the economy. That bet—like America’s students—may be mathematically unsound.</p></section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[What do Americans die from vs. what the news report on (457 pts)]]></title>
            <link>https://ourworldindata.org/does-the-news-reflect-what-we-die-from</link>
            <guid>45583336</guid>
            <pubDate>Tue, 14 Oct 2025 18:40:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ourworldindata.org/does-the-news-reflect-what-we-die-from">https://ourworldindata.org/does-the-news-reflect-what-we-die-from</a>, See on <a href="https://news.ycombinator.com/item?id=45583336">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><header><h2>What do Americans die from, and what do the New York Times, Washington Post, and Fox News report on?</h2></header><div><h4>Acknowledgments</h4><p><span>For this work, we relied on </span><a href="https://www.mediacloud.org/" target="_blank" rel="noopener"><span>Media Cloud</span></a><span>, an open-access platform for media analysis. We would like to thank their team, particularly Emily Boardman Ndulue and Fernando Bermejo, for making this invaluable resource available and for their help with this project.</span></p></div><p><span>More than 80% of people — </span><a href="https://reutersinstitute.politics.ox.ac.uk/sites/default/files/research/files/Reuters%2520Institute%2520Digital%2520News%2520Report%25202015_Full%2520Report.pdf" target="_blank" rel="noopener"><span>including surveyed</span></a><span> Americans, Brits, Germans, and Italians — say they follow the news because they “want to know what is going on in the world around them.”</span><a href="#note-1"><sup><span>1</span></sup></a><span> It’s not just that people </span><em><span>expect</span></em><span> the news to inform them about what’s going on in the world. Most think that it </span><em><span>does</span></em><span>. When </span><a href="https://www.pewresearch.org/journalism/2025/05/13/what-is-news/?" target="_blank" rel="noopener"><span>asked what</span></a><span> emotions the news generates, “informed” was the most common response.</span><a href="#note-2"><sup><span>2</span></sup></a></p><p><span>This is what media outlets themselves promise to do. Here are several quotes from the New York Times’s </span><a href="https://www.nytco.com/mission-and-values/" target="_blank" rel="noopener"><span>mission statement</span></a><span>:</span></p><blockquote><p><span>“We seek the truth and help people understand the world. [...]</span></p><p><span>We help a global audience understand a vast and diverse world.”</span></p></blockquote><p><span>However, as we’ll see in this article, the media focuses on a particular sliver of our world, leaving much of the “vast and diverse world” largely out of their reporting. We’ll investigate this through the lens of health, looking at causes of death and reporting in the United States.</span></p><p><span>As we’ll discuss, our point is not that we should want or expect the media’s coverage to perfectly match the real distribution of deaths, although we’d argue that it would be better if it were less skewed. We wrote this article so that you, the reader, are aware of a significant disconnect between what we often hear and what actually happens.</span></p><p><span>It’s easy to conflate what we see in the news with the reality of our world, and keeping this mismatch in mind can help you avoid falling into this trap.</span></p><h2 id="counting-deaths-and-mentions-in-popular-media"><span>Counting deaths and mentions in popular media</span><a href="#counting-deaths-and-mentions-in-popular-media"></a></h2><p><span>We focused on causes of death and media coverage in the United States in 2023.</span></p><p><span>The full list of all causes of death is very long, and since many causes are very rare, we didn’t investigate all of them. But our analysis accounts for 76% of all deaths in the US in 2023.</span><a href="#note-3"><sup><span>3</span></sup></a><span> It includes the 12 leading causes of death in the US, plus homicide, drug overdoses, and terrorism, since they receive a lot of attention in the media.</span></p><p><span>We used data from the US </span><a href="https://wonder.cdc.gov/" target="_blank" rel="noopener"><span>Centers for Disease Control and Prevention</span></a><span> (CDC) to calculate each cause’s share of the total.</span><a href="#note-4"><sup><span>4</span></sup></a><span> We then compared this to the relative share of articles that mentioned these causes of death in three media outlets: the New York Times, the Washington Post, and the news website of Fox News. We selected these three because they are among the biggest </span><em><span>national</span></em><span> news organizations, are extremely popular, and are seen as being on different parts of the political spectrum.</span></p><p><span>To count the number of mentions, we relied on </span><a href="https://www.mediacloud.org/" target="_blank" rel="noopener"><span>Media Cloud</span></a><span>, an open-source platform regularly used for media analysis. In an </span><a href="https://docs.owid.io/projects/etl/analyses/media_deaths/methodology/" target="_blank" rel="noopener"><span>extended methodology document</span></a><span>, we provide many more details on how we constructed the data. Two things are important to mention here.</span></p><ul><li><span>For each cause of death, we included synonyms in our search. So, when searching for mentions of “homicide”, we also included mentions of related terms such as “murder”, “killer”, and other terms. For “heart disease”, we included terms like “heart attack”, “cardiac arrest”, “heart failure”, and many others.</span></li><li><span>We only counted articles where a cause of death — or its related terms — was mentioned </span><em><span>more than once</span></em><span>. This ensures that our analysis is focused on reporting on causes of death rather than just articles that mention a cause of death in passing. Additionally, this approach reduces the number of false positives and noise in our results.</span></li></ul><h2 id="what-do-americans-die-from-and-what-do-they-read-about-in-the-news"><span>What do Americans die from, and what do they read about in the news?</span><a href="#what-do-americans-die-from-and-what-do-they-read-about-in-the-news"></a></h2><p><span>You can see the results of our analysis in the chart below.</span></p><p><span>There are two big takeaways from this analysis. The first one is that the actual distribution of deaths shown on the left is very different from the causes of death that the media talks about.</span></p><p><span>The second insight is how similar the distribution of coverage is between the three media outlets. While there are some differences (Fox News was a bit more likely to mention homicides, for example, while the NYT did the same for terrorism), these are much smaller than we might expect. While right- and left-wing media might differ in </span><em><span>how</span></em><span> they cover particular topics, </span><em><span>what</span></em><span> they choose to write or talk about is similar.</span></p><p><span>The insight in this comparison, then, is not about differences between partisan media. It’s about the difference between </span><em><span>actual</span></em><span> causes of death and what the news tells Americans about. Those differences — as we can see in the chart — are huge.</span></p><p><span>Heart disease and cancer accounted for 56% of deaths among these 15 causes, but together they received just 7% of the media coverage. Other chronic issues, such as strokes, respiratory problems, diabetes, and kidney and liver disease, were also very underrepresented in the news.</span></p><p><span>Rare — but dramatic — events such as homicides and terrorism received more than half of all media coverage, despite being much smaller causes of death in the US. Terrorism, in particular, is a very rare cause of death, with 16 deaths in 2023.</span><a href="#note-5"><sup><span>5</span></sup></a></p><figure><div><picture><source srcset="https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=48 48w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=100 100w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=350 350w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=850 850w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=1350 1350w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=3600 3600w" type="image/png" sizes="(max-width: 960px) 95vw, (min-width: 960px) 853px"><img src="https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/ae881f37-dd2f-4089-6ab8-cb88ca6b6000/w=3600" alt="The image presents a comparative analysis of the leading causes of death in the United States for the year 2023 alongside media coverage of these causes as reported by major news outlets. 

On the left, a vertical bar chart describes the primary causes of death, with heart disease at 29%, followed by cancer at 27%, and accidents at 7.8%. Other causes listed include stroke (7%), lower respiratory diseases (6.3%), Alzheimer's disease (4.9%), diabetes (4.1%), and several other less common causes, including a very small percentage for homicide and terrorism.

On the right, three horizontal bar charts represent media coverage of these causes in three different publications: The New York Times, The Washington Post, and Fox News. Each outlet shows a percentage for heart disease, cancer, accidents, suicide, COVID-19, drug overdose, homicide, and terrorism. For instance, The New York Times reports heart disease at 2.8%, cancer at 4.1%, and accidents at 9.7%. 

The accompanying note clarifies that data is based on the share of causes of death in the US and the corresponding mentions in the articles. The data sources include Media mentions from Media Cloud for the share of mentions, and mortality statistics from the US CDC and Global Terrorism Index." loading="lazy" width="3600" height="2541"></picture></div></figure><h2 id="how-over-and-underrepresented-are-different-causes-of-death-in-the-media"><span>How over- and underrepresented are different causes of death in the media?</span><a href="#how-over-and-underrepresented-are-different-causes-of-death-in-the-media"></a></h2><p><span>Another way to visualize this data is to measure how over- or underrepresented each cause is.</span></p><div><blockquote>Heart disease and cancer accounted for 56% of deaths but received just 7% of the coverage</blockquote><p><span>To do this, we calculate the ratio between a cause’s share of deaths and its share of news articles. In the chart below, we’ve done this for coverage in the New York Times (the results are similar for the other two outlets).</span></p><p><span>It highlights that homicides and terrorism are extremely overrepresented. Homicides received 43 times more coverage than their share of deaths; terrorism received over 18,000 times more.</span></p><p><span>At the other end, we see that conditions like heart disease, stroke, and liver disease are very underrepresented.</span></p></div><figure><div><picture><source srcset="https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=48 48w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=100 100w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=350 350w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=850 850w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=1350 1350w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=3069 3069w" type="image/png" sizes="(max-width: 960px) 95vw, (min-width: 960px) 853px"><img src="https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/62358263-2117-474d-1eeb-1287c3052000/w=3069" alt="The image presents a comparison of the share of deaths in the United States from 15 causes versus the share of media coverage these topics receive in the New York Times for the year 2023. The chart illustrates a scale labeled &quot;Underrepresented in the media&quot; on the left and &quot;Overrepresented in the media&quot; on the right, with varying lengths of bars representing different causes of death.

The causes of death include heart disease, stroke, liver disease, kidney failure, Alzheimer's, lower respiratory infections (LRIs), diabetes, influenza, accidents, suicide, COVID-19, drug overdose, homicide, and terrorism. Each bar indicates how much media coverage diverges from the actual death rate. For example, cancer, responsible for 27% of deaths, received only 4% of media coverage, indicating it was covered about 6.5 times less.

In contrast, homicides accounted for less than 1% of deaths but received an overwhelming 43% of coverage, leading to an overrepresentation in the media, quantified as 18,240 times more coverage compared to their death rate.

Data sources are mentioned: &quot;Media mentions from Media Cloud (2025); deaths data from the US CDC (2025) and Global Terrorism Index.&quot; The visual is licensed under CC-BY by the authors." loading="lazy" width="3069" height="2028"></picture></div></figure><h2 id="why-is-the-media-so-biased-towards-dramatic-risks"><span>Why is the media so biased towards dramatic risks?</span><a href="#why-is-the-media-so-biased-towards-dramatic-risks"></a></h2><p><span>The fact that the media focuses on dramatic, emotive events — and much less on “everyday”, more common mortality risks — has been found in several studies.</span><a href="#note-6"><sup><span>6</span></sup></a><span>  These studies have shown that this mismatch has existed for a long time, and that genuine changes in death rates between causes of death account for a tiny fraction of the changes in media coverage.</span><a href="#note-7"><sup><span>7</span></sup></a></p><p><span>Our analysis adds to the evidence, with updated data for 2023.</span></p><p><span>Why does this mismatch exist?</span></p><div><blockquote>Homicides received 43 times more coverage than their share of deaths; terrorism received over 18,000 times more</blockquote><p><span>One explanation is that the news, true to its name, tells us what’s </span><em><span>new</span></em><span>. The fact that nearly 2000 Americans die from heart disease </span><em><span>every single day</span></em><span> means it is not novel or new. The headline tomorrow would be the same as it was today, which was the same as yesterday. Rarer events like terrorist attacks, plane crashes, homicides, or disasters each have their unique headline.</span></p><p><span>People who die from common health risks quickly become mere numbers. On the other hand, those who die in rarer events have a face, a name, and a story that can be told. As humans, this makes us much more likely to click and read, making these stories ideal for the media to write about.</span></p><p><span>While we would like news organizations to focus much more on the larger problems that societies face — that is what we try to do at Our World in Data — it would be wrong to put all of the blame on them. They respond to what readers want, and many want emotive and engaging stories (even if their circumstances are terrible and upsetting).</span></p></div><p><span>Even outside the news, some of the most successful television series are intense, crime-filled dramas. Disaster movies pull in record numbers at the box office. One of the most popular podcast genres is “true crime,” where we spend hours listening to the gripping, scary tales of serial killers or con artists.</span></p><p><span>It's not surprising, then, that we’re much more likely to click on a news story about the latest murder or disaster than one about heart or kidney disease. And because media organizations need traffic and attention to survive, they and the public are stuck in a reinforcing feedback loop where rare events are always in the headlines and chronic problems get drowned out.</span></p><p><span>This is not just a problem with the modern media environment. The audience for this type of media has always been there. What’s changed is the reporting frequency: rather than getting one newspaper in the morning, we are bombarded with updates almost in real-time. We also now receive news from a much larger geographical area; it’s not just about what’s happened in our own town, but also about what’s happened on the other side of the country, or even the world.</span></p><h2 id="does-this-bias-really-matter"><span>Does this bias really matter?</span><a href="#does-this-bias-really-matter"></a></h2><p><span>Our point is not that we think the New York Times, Washington Post, or Fox News’ coverage should</span><em><span> </span></em><span>exactly match the distribution of causes of death. A newspaper that constantly covers heart disease and kidney failure would be a boring one that soon goes out of business. Even though our mission at Our World in Data is to cover the world’s largest problems, our own writing and data publications also don’t precisely match the scale of those problems. We expect we will be closer to the real distribution than the mainstream media, but there will still be some mismatch.</span></p><p><span>The reason we’re doing this analysis is to make you or other readers more aware of this selection bias. The frequency of news coverage doesn’t reflect what’s happening across millions or billions of people, but it’s easy to fall into the trap of thinking it does.</span></p><p><span>Why, then, do we think that this bias matters? Does it actually affect people’s perceptions of problems?</span></p><p><span>In a </span><a href="https://www.pewresearch.org/short-reads/2024/08/29/the-link-between-local-news-coverage-and-americans-perceptions-of-crime" target="_blank" rel="noopener"><span>large survey</span></a><span> among US adults, people who consumed local crime news “often” were more than three times more likely to say they were “extremely concerned” about crime affecting them or their family than those who rarely or never read local crime news.</span><a href="#note-8"><sup><span>8</span></sup></a></p><div><blockquote>The frequency of news coverage doesn’t reflect what’s happening across millions or billions of people, but it’s easy to fall into the trap of thinking it does</blockquote><p><span>Nearly six-in-ten Americans </span><a href="https://globalaffairs.org/research/public-opinion-survey/21-years-after-911-americans-are-less-concerned-about-terrorism" target="_blank" rel="noopener"><span>still see</span></a><span> international terrorism as a critical threat to the United States, despite the domestic impact on the US being relatively low for two decades. People are often far more anxious about flying than driving, even though commercial airline crashes are </span><a href="https://ourworldindata.org/us-airline-travel" target="_blank" rel="noopener"><span>incredibly rare</span></a><span>.</span></p><p><span>The information we’re exposed to profoundly impacts how we perceive the world, even if our perspective is less skewed than the media's.</span></p><p><span>But there’s one final reason why this bias matters. It makes it hard for us to understand how causes of death </span><em><span>are changing over time</span></em><span>. If we’re constantly bombarded with stories of the latest murders and crimes, we might easily think that these are happening more and more. That is a widespread sentiment. In 23 of the 27 </span><a href="https://news.gallup.com/poll/1603/crime.aspx" target="_blank" rel="noopener"><span>Gallup surveys</span></a><span> conducted since 1993, most Americans said there was more crime than the year before. In reality, rates of crime — including </span><span>homicides</span><span> and other </span><a href="https://www.pewresearch.org/short-reads/2024/04/24/what-the-data-says-about-crime-in-the-us/" target="_blank" rel="noopener"><span>violent crime</span></a><span> — have fallen a lot.</span></p></div><p><span>And if we don’t hear about what’s happening to heart disease rates, treatments, or the odds of surviving cancer, we might wrongly imagine that no progress has been made. Yet childhood cancer deaths </span><a href="https://ourworldindata.org/data-insights/childhood-cancer-deaths-in-the-united-states-have-declined-six-fold-over-the-last-seventy-years" target="_blank" rel="noopener"><span>have plummeted</span></a><span> over the last 50 years. Even among adults, death rates from cancer have </span><a href="https://ourworldindata.org/grapher/cancer-death-rate-crude-vs-age-standardized-who-mdb"><span>fallen dramatically</span></a><span> since the 1990s. So too have </span><a href="https://ourworldindata.org/grapher/cardiovascular-disease-death-rate-who-mdb?country=CAN~USA~RUS~HUN~BRA~AUS~DEU~FRA"><span>death rates</span></a><span> from heart disease.</span></p><p><span>This perception gap about the world matters, and the media is not doing a good job of trying to close it.</span></p><a href="https://docs.owid.io/projects/etl/analyses/media_deaths/methodology/" target="_blank" rel="noopener"><div><picture><source srcset="https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=48 48w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=100 100w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=350 350w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=850 850w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=1350 1350w, https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=2400 2400w" type="image/png" sizes="350px"><img src="https://ourworldindata.org/cdn-cgi/imagedelivery/qLq-8BTgXU8yG0N6HnOy8g/9cf97009-994a-46f5-707b-980a8c6e4700/w=2400" alt="Featured image" loading="lazy" width="2400" height="1260"></picture></div><div><p><h3>Methodology</h3></p><p>If you’re interested in digging deeper, we provide a more detailed methodological document about how this data was generated, and a few additional analyses.</p></div></a><div><h4>Correction note</h4><p><span>This article was initially published on October 6, 2025, and was updated on October 9. This update corrected an error, whereby “Drug and overdose” deaths were also included within the US CDC category of “Accidents”. This meant that they were double-counted. We have corrected this, and the change made only a small difference to the final numbers. The relative share of deaths from accidents changed from 9.5% to 7.8%, and the share of other causes increased slightly. We thank Karl Pettersson for flagging this.</span></p></div><div><h3 id="article-endnotes">Endnotes</h3><ol><li id="note-1"><p><span>Respondents could choose to “agree” with multiple answers. This survey was from 2015, but as we’ll see, more recent data suggests that even in 2025, most Americans think the news keeps them informed about what’s happening worldwide.</span></p></li><li id="note-2"><p><span>In the Pew Research survey, 46% said it made them feel informed “extremely often or often” with a further 43% “sometimes”. That was more common than any other emotion. The other high-ranking ones were negative emotions such as anger or sadness.</span></p></li><li id="note-3"><p><span>In 2023, </span><a href="https://www.cdc.gov/nchs/fastats/deaths.htm" target="_blank" rel="noopener"><span>there were</span></a><span> approximately 3 million (3,090,964) deaths in the United States. 2.3 million (2,350,117) died from the twelve leading causes plus drug overdoses, homicides and terrorism. You can find these results in our intermediate and final data files, which are available in </span><a href="https://docs.owid.io/projects/etl/analyses/media_deaths/methodology/" target="_blank" rel="noopener"><span>our methodology document</span></a><span>. That means the combined share was around 76% of the total [2,305,117 / 3,090,964 * 100 = 76%].</span></p></li><li id="note-4"><p><span>We used mortality data from </span><a href="https://wonder.cdc.gov/" target="_blank" rel="noopener"><span>CDC Wonder</span></a><span> for all causes except terrorism (which isn’t reported there). For this, we relied on data from the </span><a href="https://www.visionofhumanity.org/maps/global-terrorism-index/#/" target="_blank" rel="noopener"><span>Global Terrorism Index</span></a><span>.</span></p></li><li id="note-5"><p><span>This figure is sourced from the Institute for Economics and Peace (IEP)’s </span><a href="https://www.visionofhumanity.org/wp-content/uploads/2024/02/GTI-2024-web-290224.pdf" target="_blank" rel="noopener"><span>Global Terrorism Index 2024</span></a><span> Report. It states on page 38: “The impact of terrorism improved in North America over the past year, owing to an improvement in score in Canada. There was one attack and death from terrorism in Canada in 2023, down from the peak of 12 deaths and eight attacks in 2018. By contrast, the impact of terrorism increased in the US, with 16 deaths from seven incidents.”</span></p></li><li id="note-6"><p><span>Isch, C. (2025). Media bias in portrayals of mortality risks: Comparison of newspaper coverage to death rates. Social Science &amp; Medicine, 364, 117542.</span></p><p><span>Pilar, M. R., Eyler, A. A., Moreland-Russell, S., &amp; Brownson, R. C. (2020). Actual causes of death in relation to media, policy, and funding attention: Examining public health priorities. Frontiers in Public Health, 8, 279.</span></p><p><span>Bomlitz, L. J., &amp; Brezis, M. (2008). Misrepresentation of health risks by mass media. Journal of Public Health, 30(2), 202-204.</span></p></li><li id="note-7"><p><span>Isch, C. (2025). Media bias in portrayals of mortality risks: Comparison of newspaper coverage to death rates. Social Science &amp; Medicine, 364, 117542.</span></p></li><li id="note-8"><p><span>This survey was conducted by Pew Research in 2024. It asked US adults whether they were extremely/very concerned, somewhat concerned, or not at all concerned about crime in their local community affecting them or their family.</span></p><p><span>33% of those who “often” get local crime news were “extremely concerned”. The share among those who “sometimes” get this type of news was 19%. It was just 10% among those who rarely consume it.</span></p><p><a href="https://www.pewresearch.org/short-reads/2024/08/29/the-link-between-local-news-coverage-and-americans-perceptions-of-crime" target="_blank" rel="noopener"><span>https://www.pewresearch.org/short-reads/2024/08/29/the-link-between-local-news-coverage-and-americans-perceptions-of-crime</span></a><span>.</span></p></li></ol></div><div id="article-citation"><h3>Cite this work</h3><p>Our articles and data visualizations rely on work from many different people and organizations. When citing this article, please also cite the underlying data sources. This article can be cited as:</p><div><pre><code>Hannah Ritchie, Tuna Acisu, and Edouard Mathieu (2025) - “Does the news reflect what we die from?” Published online at OurWorldinData.org. Retrieved from: 'https://ourworldindata.org/does-the-news-reflect-what-we-die-from' [Online Resource]</code></pre></div><p>BibTeX citation</p><div><pre><code>@article{owid-does-the-news-reflect-what-we-die-from,
    author = {Hannah Ritchie and Tuna Acisu and Edouard Mathieu},
    title = {Does the news reflect what we die from?},
    journal = {Our World in Data},
    year = {2025},
    note = {https://ourworldindata.org/does-the-news-reflect-what-we-die-from}
}</code></pre></div></div><div id="article-licence"><p><img src="https://ourworldindata.org/owid-logo.svg" alt="Our World in Data logo" loading="lazy" width="104" height="57"></p><h3>Reuse this work freely</h3><p>All visualizations, data, and code produced by Our World in Data are completely open access under the<!-- --> <a href="https://creativecommons.org/licenses/by/4.0/" target="_blank" rel="noopener">Creative Commons BY license</a>. You have the permission to use, distribute, and reproduce these in any medium, provided the source and authors are credited.</p><p>The data produced by third parties and made available by Our World in Data is subject to the license terms from the original third-party authors. We will always indicate the original source of the data in our documentation, so you should always check the license of any such third-party data before use and redistribution.</p><p>All of<!-- --> <a href="https://ourworldindata.org/faqs#how-can-i-embed-one-of-your-interactive-charts-in-my-website">our charts can be embedded</a> <!-- -->in any site.</p></div></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why your boss isn't worried about AI – "can't you just turn it off?" (284 pts)]]></title>
            <link>https://boydkane.com/essays/boss</link>
            <guid>45583180</guid>
            <pubDate>Tue, 14 Oct 2025 18:26:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://boydkane.com/essays/boss">https://boydkane.com/essays/boss</a>, See on <a href="https://news.ycombinator.com/item?id=45583180">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
<p>(a note for technical folk)<sup><a href="#user-content-fn-7" id="user-content-fnref-7" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup> | <a href="http://boydkane.com/assets/boss.pdf">read as pdf<svg viewBox="0 0 512 512"><path d="M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z"></path></svg></a></p>
<p>When it comes to understanding the dangers of AI systems, the general public
has the worst kind of knowledge: that what you know for sure that just ain’t
so.</p>
<p>After 40 years of persistent badgering, the software industry has convinced the
public that bugs can have disastrous consequences. This is great! It is <em>good</em>
that people understand that software can result in real-world harm. Not only
does the general public mostly understand the dangers, but they mostly
understand that bugs can be fixed. It might be expensive, it might be
difficult, but it can be done.</p>
<p>The problem is that this understanding, <em>when applied to AIs like
ChatGPT</em>, is completely wrong. The software that runs AI acts very differently
to the software that runs most of your computer or your phone. Good, sensible
assumptions about bugs in regular software actually end up being harmful and
misleading when you try to apply them to AI.</p>
<p>Attempting to apply regular-software assumptions to AI systems leads to
confusion, and remarks such as:</p>
<blockquote>
<p>“If something goes wrong with ChatGPT, can’t some boffin just think hard for
a bit, find the missing semi-colon or whatever, and then fix the bug?”</p>
</blockquote>
<p>or</p>
<blockquote>
<p>“Even if it’s hard for one person to understand everything the AI does,
surely still smart people who individually understand small parts of what the
AI does?”.</p>
</blockquote>
<p>or</p>
<blockquote>
<p>“Just because current systems don’t work perfectly, that’s not a problem
right? Because eventually we’ll iron out all the bugs so the AIs will get
more reliable over time, like old software is more reliable than new
software.”</p>
</blockquote>
<p>If you understand how modern AI systems work, these statements are all
painfully incorrect. But if you’re used to regular software, they’re completely
reasonable. I believe there is a gap between the experts and the novices in the
field:</p>
<ul>
<li>the experts don’t see the gap because it’s so obvious, so they don’t bother
explaining the gap</li>
<li>the novices don’t see the gap because they don’t know to look, so they don’t
realise where their confusion comes from.</li>
</ul>
<p>This leads to frustration on both sides, because the experts feel like their
arguments aren’t hitting home, and the novices feel like all arguments have
obvious flaws. In reality, the experts and the novices have different,
unspoken, assumptions about how AI systems work.</p>
<h2 id="some-example-false-beliefs">Some example false beliefs</h2>
<p>To make this more concrete, here are some example ideas that are perfectly true
when applied to regular software but become harmfully false when applied to
modern AIs:</p>
<h2 id="software-vulnerabilities-are-caused-by-mistakes-in-the-code">Software vulnerabilities are caused by mistakes in the code</h2>
<p>In regular software, vulnerabilities are caused by mistakes in the lines of
code that make up the software. There might be hundreds of thousands of lines
of code, but code doesn’t take up much space so this is only around 50MB of
data, about the size of a small album of photos.</p>
<p>But in modern AI systems, vulnerabilities or bugs are usually caused by
problems in the data used to train an AI<sup><a href="#user-content-fn-3" id="user-content-fnref-3" data-footnote-ref="" aria-describedby="footnote-label">2</a></sup>. It takes thousands of gigabytes of
data to train modern AI systems, and bad behaviour isn’t caused by any single
bad piece of data, but by the combined effects of significant fractions of the
dataset. Because these datasets are so large, <em>nobody knows everything that an
AI is actually trained on</em>. One popular dataset, <a href="https://huggingface.co/spaces/HuggingFaceFW/blogpost-fineweb-v1">FineWeb<svg viewBox="0 0 512 512"><path d="M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z"></path></svg></a>, is about 11.25
trillion words long<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref="" aria-describedby="footnote-label">3</a></sup>, which, if you were reading at about 250 words per
minute, would take you over 85 thousand years to read. It’s just not possible
for any single human (or even a team of humans) to have read everything that an
LLM has read during training.</p>
<h2 id="bugs-in-the-code-can-be-found-by-carefully-analysing-the-code">Bugs in the code can be found by carefully analysing the code</h2>
<p>With regular software, if there’s a bug, it’s possible for smart people to
carefully read through the code and logically figure out what must be causing
the bug.</p>
<p>With AI systems, almost all bad behaviour originates from the data that’s used
to train them<sup><a href="#user-content-fn-3" id="user-content-fnref-3-2" data-footnote-ref="" aria-describedby="footnote-label">2</a></sup>, but it’s basically impossible to look at misbehaving AI and
figure out parts of the training data caused that bad behaviour. In practice,
it’s rare to even attempt this, researchers will retrain the AI with more data
to try and counteract the bad behaviour, or they’ll start over and try to
curate the data to not include the bad data.</p>
<p>You cannot logically deduce what pieces of data caused the bad behaviour, you
can only make good guesses. For example, modern AIs are trained on lots of
mathematics proofs and programming tasks, because that seems to make them do
better at reasoning and logical thinking tasks. If an AI system makes a logical
reasoning mistake, it’s impossible to attribute that mistake to any portion of
the training data, the only answer we’ve got is to use more data next time.</p>
<p>I think I need to emphasise this: With regular software, we can pinpoint
mistakes precisely, walk step-by-step through the events leading up to the
mistake, and logically understand why that mistake happened. When AIs make
mistakes, <em>we don’t understand the steps that caused those mistakes</em>.
Even the people who made the AIs don’t understand why they make mistakes<sup><a href="#user-content-fn-2" id="user-content-fnref-2" data-footnote-ref="" aria-describedby="footnote-label">4</a></sup>.
Nobody understands where these bugs come from. We sometimes kinda have a rough
idea about why they maybe did something unusual. But we’re far, far away from
anything that guarantees the AI won’t have any catastrophic failures.</p>
<h2 id="once-a-bug-is-fixed-it-wont-come-back-again">Once a bug is fixed, it won’t come back again</h2>
<p>With regular software, once you’ve found the bug, you can fix the bug. And once
you’ve fixed the bug, it won’t re-appear<sup><a href="#user-content-fn-4" id="user-content-fnref-4" data-footnote-ref="" aria-describedby="footnote-label">5</a></sup>. There might be a bug that causes
similar problems, but it’s not the <em>same</em> bug as the one you fixed. This means
you can, if you’re patient, reduce the number of bugs over time and rest
assured that removing new bugs won’t cause old bugs to re-appear.</p>
<p>This is not the case with AI. It’s not really possible to “fix” a bug in an AI,
because even if the AI was behaving weirdly, and you retrained it, and now it’s
not behaving weirdly anymore, you can’t know for sure that the weird behaviour
is <em>gone</em>, just that it doesn’t happen for the prompts you tested. It’s
entirely possible that someone can find a prompt you forgot to test, and then
the buggy behaviour is back again!</p>
<h2 id="every-time-you-run-the-code-the-same-thing-happens">Every time you run the code, the same thing happens</h2>
<p>With regular software, you can run the same piece of code multiple times and
it’ll behave in the same way. If you give it the same input, it’ll give you the
same output.</p>
<p>Now <em>technically</em> this is still true for AIs, if you give them exactly the
prompt they’ll respond in exactly the same way. But practically, it’s very far
from the truth<sup><a href="#user-content-fn-5" id="user-content-fnref-5" data-footnote-ref="" aria-describedby="footnote-label">6</a></sup>. Even <em>tiny</em> changes to the input of an AI can have dramatic
changes in the output. Even innocent changes like adding a question mark at the end
of your sentence or forgetting to start your sentence with a capital letter can
cause the AI to return something different.</p>
<p>Additionally, most AI companies will slightly change the way their AIs respond,
so that they say slightly different things to the same prompt. This helps their
AIs seem less robotic and more natural.</p>
<h2 id="if-you-give-specifications-beforehand-you-can-get-software-that-meets-those-specifications">If you give specifications beforehand, you can get software that meets those specifications</h2>
<p>With regular software, this is true. You can sit with stakeholders to discuss
the requirements for some piece of software, and then write code to meet those
requirements. The requirements might change, but fundamentally you can write
code to serve some specific purpose and have confidence that it will serve that
specific purpose.</p>
<p>With AI systems, this is more or less false. Or at the very least, the creators
of modern AI systems have far far less control about the behaviour the AIs will
exhibit. We understand how to get an AI to meet narrow, testable specifications
like speaking English and writing code, but we don’t know how to get a brand
new AI to achieve a certain score on some particular test or to guarantee
global behaviour like “never tells the user to commit a crime”. The best AI
companies in the world have basically one lever which is “better”, and they can
pull that lever to make the AI better, but nobody knows precisely what to do to
ensure an AI writes formal emails correctly or summarises text accurately.</p>
<p>This means that we don’t know what an AI will be capable of before we’ve
trained it. It’s very common for AIs to be released to the public for months
before a random person on Twitter discovers some ability that the AI has
which even its creators didn’t know about. So far, these abilities have been
mostly just fun, like being good at <a href="https://x.com/swax/status/1912728143682760934">Geoguessr<svg viewBox="0 0 512 512"><path d="M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z"></path></svg></a>:</p>
<p><img src="https://boydkane.com/assets/boss-geoguessr.png" alt="Geoguessr map"></p>
<p>Or making photos look like they were from a <a href="https://x.com/GrantSlatton/status/1904631016356274286">Studio Ghibli film<svg viewBox="0 0 512 512"><path d="M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z"></path></svg></a>:</p>
<p><img src="https://boydkane.com/assets/boss-ghibli.png" alt="Ghibli tweet"></p>
<p>But there’s no reason for these hidden abilities to always be positive. It’s
entirely possible that some dangerous capability is hidden in ChatGPT, but
nobody’s figured out the right prompt just yet.</p>
<p>While it’s possible to demonstrate the safety of an AI for a specific test
suite or a known threat, it’s impossible for AI creators to definitively say
their AI will never act maliciously or dangerously for any prompt it could be
given.</p>
<h2 id="where-to-go-from-here">Where to go from here</h2>
<p>It is <em>good</em> that most people know the dangers of poorly written or buggy
software. But this hard-won knowledge about regular software is misleading the
public when it gets applied to AI. Despite the cries of “inscrutable arrays of
floating point numbers”, I’d be surprised if a majority of people know that
modern AI is architecturally different from regular software.</p>
<p>AI safety is a complicated and subtle argument. The best we can do is to make
sure we’re starting from the same baseline, and that means conveying to our
contemporaries that if it all starts to go wrong, we cannot just “patch the
bug”<sup><a href="#user-content-fn-6" id="user-content-fnref-6" data-footnote-ref="" aria-describedby="footnote-label">7</a></sup>.</p>
<p>If this essay was the first time you realised AI was fundamentally different
from regular software, let me know, and share this with a friend who might also
not realise the difference.</p>
<p>If you always knew that regular software and AIs are fundamentally different,
talk to your family and non-technical friends, or with a stranger at a coffee
shop. I think you’ll be surprised at how few people know that these two are
different.</p>
<hr>
<p>If you’re interested the dynamics between experts and novices, and how gaps
between them arise, I’ve written more about the systemic biases encountered by
experts (and the difficulties endured by novices) in this essay: <a href="https://boydkane.com/essays/experts" data-slug="essays/experts">Experts have
it easy</a>.</p>
<p>Thanks to Sam Cross and Caleb for reviewing drafts of this essay.</p>

<section data-footnotes="">
<ol>
<li id="user-content-fn-7">
<p>This article is attempting to bridge a gap between the technical and the
non-technical, so I’m going to be quite lax with the jargon here and there.
By “AI” I’m referring to 2025 frontier LLMs. I’m also going to be making
some sweeping statements about “how software works”, these claims mostly
hold, but they break down when applied to distributed systems, parallel
code, or complex interactions between software systems and human processes.
Feel free to debate me in the comments if you think this piece discussing
how experts struggle to emphasise with novices should have had more jargon
(: <a href="#user-content-fnref-7" data-footnote-backref="" aria-label="Back to reference 1">↩</a></p>
</li>
<li id="user-content-fn-3">
<p>It can also come from the reward model used during RLHF, but the reward model is still trained from data at the end of the day. It can also come from prompt injections, but those also only work because of the data. <a href="#user-content-fnref-3" data-footnote-backref="" aria-label="Back to reference 2">↩</a> <a href="#user-content-fnref-3-2" data-footnote-backref="" aria-label="Back to reference 2-2">↩<sup>2</sup></a></p>
</li>
<li id="user-content-fn-1">
<p>FineWeb is 15 trillion tokens, each token is about 0.75 words, 11.25
trillion words. <a href="#user-content-fnref-1" data-footnote-backref="" aria-label="Back to reference 3">↩</a></p>
</li>
<li id="user-content-fn-2">
<p>Anthropic is doing <a href="https://transformer-circuits.pub/2025/attribution-graphs/biology.html">very good work<svg viewBox="0 0 512 512"><path d="M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z"></path></svg></a> to try and figure out why AIs
think the way they do, but even the state of the art does not have a full
understanding of these AIs, and what understanding we do have, is often
partial and with significant gaps. <a href="#user-content-fnref-2" data-footnote-backref="" aria-label="Back to reference 4">↩</a></p>
</li>
<li id="user-content-fn-4">
<p>You <em>are</em> writing tests to prevent regressions, right? <em>right?!</em> <a href="#user-content-fnref-4" data-footnote-backref="" aria-label="Back to reference 5">↩</a></p>
</li>
<li id="user-content-fn-5">
<p>see for example, <a href="https://thinkingmachines.ai/blog/defeating-nondeterminism-in-llm-inference/">this blog post<svg viewBox="0 0 512 512"><path d="M320 0H288V64h32 82.7L201.4 265.4 178.7 288 224 333.3l22.6-22.6L448 109.3V192v32h64V192 32 0H480 320zM32 32H0V64 480v32H32 456h32V480 352 320H424v32 96H64V96h96 32V32H160 32z"></path></svg></a> from Mira Murati’s Thinking Machines Lab <a href="#user-content-fnref-5" data-footnote-backref="" aria-label="Back to reference 6">↩</a></p>
</li>
<li id="user-content-fn-6">
<p>Personally, I think some more empathy is needed when having good faith
discussions with non-technical folk. Communication is <a href="https://boydkane.com/essays/hard" data-slug="essays/hard"><em>empirically
hard</em></a>, in that it often goes wrong in practice, even if it feels easy
to do. <a href="#user-content-fnref-6" data-footnote-backref="" aria-label="Back to reference 7">↩</a></p>
</li>
</ol>
</section></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SmolBSD – build your own minimal BSD system (150 pts)]]></title>
            <link>https://smolbsd.org</link>
            <guid>45582758</guid>
            <pubDate>Tue, 14 Oct 2025 17:43:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://smolbsd.org">https://smolbsd.org</a>, See on <a href="https://news.ycombinator.com/item?id=45582758">Hacker News</a></p>
<div id="readability-page-1" class="page">
  <!-- Hero -->
  <section>
    <div>
      <p><img src="https://smolbsd.org/smolBSD.png" alt="smolBSD logo"></p>
    </div>

    <p>
      build your own minimal BSD UNIX system
    </p>

    
  </section>

  <!-- About -->
  <section id="about">
    <div>
      <h2>About</h2>
      <p>
        <strong>smolBSD</strong> is a meta-operating system built on top of NetBSD.  
        It lets you compose your own UNIX environment — from a single-purpose microservice system to a fully-custom OS image — in just a few minutes.
      </p>
      <p>
        The smolBSD environment uses the <strong>netbsd-MICROVM</strong> kernel as its foundation, leveraging the same portable, reliable codebase that powers NetBSD itself.  
        You decide what to include — sshd, httpd, or your own service — and smolBSD builds a coherent, minimal, bootable image ready to run anywhere.
      </p>
    </div>
    <pre>$ bmake SERVICE=bozohttpd build
➡️   starting the builder microvm
➡️   host filesystem mounted on /mnt
➡️   fetching sets
➡️   creating root filesystem (512M)
done ✅ image ready: bozohttpd-amd64.img
    </pre>
  </section>

  <!-- Features -->
  <section>
    <div>
      <h2>Why smolBSD</h2>
      <p>Build BSD systems like you build software — fast, reproducible, and minimal.</p>
    </div>
    <div>
      <div>
        <h3>🧩 Composable</h3>
        <p>Pick only the components you need — from kernel to services.</p>
      </div>
      <div>
        <h3>⚙️ Reproducible</h3>
        <p>Every build is deterministic, portable, and easy to version-control.</p>
      </div>
      <div>
        <h3>🚀 Instant Boot</h3>
        <p>Powered by netbsd-MICROVM — boot to service in milliseconds.</p>
      </div>
      <div>
        <h3>💻 Universal</h3>
        <p>Runs anywhere QEMU or Firecracker runs — cloud, CI, edge, or laptop.</p>
      </div>
    </div>
  </section>

  <!-- Quick Start -->
  <section>
    <h2>Quick Start</h2>
    <p>Build and boot your own BSD system in seconds:</p>
    <pre>$ git clone https://github.com/NetBSDfr/smolBSD
$ cd smolBSD
$ bmake SERVICE=sshd build
➡️   starting the builder microvm
➡️   fetching sets
➡️   creating root filesystem (512M)
done ✅ image ready: sshd-amd64.img
➡️   killing the builder microvm

$ ./startnb.sh -f etc/sshd.conf 
[   1.0092096] kernel boot time: 14ms
Starting sshd.
Server listening on :: port 22.
Server listening on 0.0.0.0 port 22.
    </pre>
    <a href="https://github.com/NetBSDfr/smolBSD/releases">
      Download
    </a>
  </section>

<!-- Examples -->
<div id="examples">
    <h2>Examples</h2>

    <!-- Example 1: bozohttpd -->
    <div>
      <div>
        <h3>bozohttpd</h3>
        <p>
          A complete static web server in a few megabytes.  
          smolBSD builds a minimal system with <code>bozohttpd</code>
preconfigured and ready to serve content immediately on boot.
        </p>
      </div>
      <pre>$ bmake SERVICE=bozohttpd build
➡️   starting the builder microvm
➡️   fetching sets
➡️   creating root filesystem (512M)
done ✅ image ready: bozohttpd-amd64.img

$ ./startnb.sh -f etc/bozohttpd.conf
[   1.001231] kernel boot time: 10ms
Starting bozohttpd on :80
listening on 0.0.0.0:80
      </pre>
    </div>

    <!-- Example 2: nbakery -->
    <div>
      <div>
        <h3>nbakery</h3>
        <p>
          A lightweight build and image creation service based entirely on
NetBSD tools.  
          The <code>nbakery</code> image gives you a taste of a preconfigured NetBSD environment with all the well known tools.
        </p>
      </div>
      <pre>$ bmake SERVICE=nbakery build
➡️   starting the builder microvm
➡️   fetching sets
➡️   creating root filesystem (512M)
done ✅ image ready: nbakery-amd64.img

$ ./startnb.sh -f etc/nbakery.conf
[   1.008374] kernel boot time: 11ms

Welcome to the (n)bakery! 🧁

💪 doas <command> to run command as root
📦 pkgin to manage packages
🚪 exit to cleanly shutdown, ^a-x to exit qemu
🪟 you are inside a tmux with prefix ^q
      </command></pre>
    </div>

    <!-- Example 3: nitrosshd -->
    <div>
      <div>
        <h3>nitrosshd</h3>
        <p>
          A minimal secure shell server started with <code>nitro</code>,
designed to launch instantly and provide remote access with zero unnecessary
services.  
          Ideal for an SSH bouncer.
        </p>
      </div>
      <pre>$ bmake SERVICE=nitrosshd build
➡️   starting the builder microvm
➡️   fetching sets
➡️   creating root filesystem (512M)
done ✅ image ready: nitrosshd-amd64.img

$ ./startnb.sh -f etc/sshd.conf
[   1.011598] kernel boot time: 12ms
Created tmpfs /dev (1835008 byte, 3552 inodes)
Starting sshd.
Server listening on :: port 22.
Server listening on 0.0.0.0 port 22.
      </pre>
    </div>

  </div>


  <!-- Community -->
  <section>
    <h2>Community</h2>
    <p>
      smolBSD is an independent project built on top of NetBSD.  
      Join us, share your micro-systems, or contribute new services and build recipes.
    </p>
    
  </section>

  <!-- Footer -->
  



</div>]]></description>
        </item>
        <item>
            <title><![CDATA[How bad can a $2.97 ADC be? (207 pts)]]></title>
            <link>https://excamera.substack.com/p/how-bad-can-a-297-adc-be</link>
            <guid>45582462</guid>
            <pubDate>Tue, 14 Oct 2025 17:12:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://excamera.substack.com/p/how-bad-can-a-297-adc-be">https://excamera.substack.com/p/how-bad-can-a-297-adc-be</a>, See on <a href="https://news.ycombinator.com/item?id=45582462">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>For almost all of my embedded work I’ve used the ADCs included with microcontrollers. These are cheap, relatively fast, and not particularly good. While they sport impressive-sounding 12- and 16-bit readouts, the effective number of bits (ENOB) is usually around 8 or 9.</p><p>Recently I’ve been playing with the ADS1115. It’s a dedicated ADC from TI module which plausibly delivers 16 bit accuracy.</p><p>One really cool thing about the ADS111x family is a dynamic range feature that gives you up to 20 times finer measurement for small amplitude voltages. It’s accuracy where it matters.</p><p>The ADS1115’s programmable gain amplifier lets you shrink the full-scale range from ±6.144 V down to ±0.256 V. That means a single LSB can represent as little as ~7.8 µV (0.256 V ÷ 32768). Compare that with a microcontroller ADC with a fixed 3.3 V range: 9 ENOB steps are ~6 mV.</p><p>Another nice thing is that it uses an internal voltage reference. The RP2040, for example, requires an external 3.3V analog reference. </p><p><span>But there’s something fishy about the pricing of the ADS1115. At quantity 1K it’s around $4 from Digikey, yet $0.60 on LCSC. That’s quite a spread. I picked up breakout boards from Amazon for </span><a href="https://amzn.to/4pK4Mlm" rel="nofollow ugc noopener">$2.97 if you buy four</a><span>, and I very much think these are made with the $0.60 parts from LCSC or similar.</span></p><p><span>I’ve also ordered this </span><a href="https://www.adafruit.com/product/1085" rel="nofollow ugc noopener">very handsome breakout</a><span> from Adafruit, which I assume uses the pricier version of the ADS1115. I’ll report back next week.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!IblS!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!IblS!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 424w, https://substackcdn.com/image/fetch/$s_!IblS!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 848w, https://substackcdn.com/image/fetch/$s_!IblS!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!IblS!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!IblS!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg" width="336" height="252.17319587628867" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/fbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:728,&quot;width&quot;:970,&quot;resizeWidth&quot;:336,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Angled shot of a black rectangular ADC breakout board.&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="Angled shot of a black rectangular ADC breakout board." title="Angled shot of a black rectangular ADC breakout board." srcset="https://substackcdn.com/image/fetch/$s_!IblS!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 424w, https://substackcdn.com/image/fetch/$s_!IblS!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 848w, https://substackcdn.com/image/fetch/$s_!IblS!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 1272w, https://substackcdn.com/image/fetch/$s_!IblS!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffbca6743-431a-44d9-8e31-7d996b228cb9_970x728.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>So how bad are these cheap ones? I hooked one up to an </span><a href="https://i2cdriver.com/mini.html" rel="nofollow ugc noopener">I²CMini</a><span> and my trusty precision DC voltage source and tried to find out.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!bEyp!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!bEyp!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 424w, https://substackcdn.com/image/fetch/$s_!bEyp!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 848w, https://substackcdn.com/image/fetch/$s_!bEyp!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 1272w, https://substackcdn.com/image/fetch/$s_!bEyp!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!bEyp!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png" width="1456" height="1351" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1351,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:4703826,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://excamera.substack.com/i/174667033?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!bEyp!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 424w, https://substackcdn.com/image/fetch/$s_!bEyp!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 848w, https://substackcdn.com/image/fetch/$s_!bEyp!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 1272w, https://substackcdn.com/image/fetch/$s_!bEyp!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff84c1b9b-9e99-48b2-b1ca-26cb84ecc248_1920x1781.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>First check, are these functioning according to spec, or are they a cheaper part that’s being passed off as an ADS1115, as reported on forums?</p><p>As far as I can tell, they behave as if they are real ADS1115s. The readout is true 16-bits. The PGA (Programmable Gain Amplifier) appears functional. The readout rate is variable from 8 to 860 samples per second, and this approximately matches the TI datasheet.</p><p>I tested mostly in differential mode, and with the two inputs tied together, the ADC read consistently zero. With a calibrated 2.5V differential, the ADC measured very close to 2.5V, and with the polarity reversed gave exactly the same number negated. So far so good.</p><p>But closer inspection showed some deviations.</p><p>The TI datasheet says that the Data Rate, DR is ±10% of the nominal. So at 8 samples per second mode, samples should arrive 7.2 - 8.8 times per second. Three of the ADCs were close but slow (6.5-7 samples per second). One of the ADCs was nowhere near: 300 samples per second. That one didn’t get any further testing; there’s obviously something broken with its timing system. (But how many end users would actually notice that it’s running faster (and hence noisier) than it’s meant to?)</p><p>Looking more closely at the actual measurement, my calibrated 2.50067V source was being reported by the ADS1115 as 2.4883V. That’s a 12 mV error, and a 0.5% difference. Much bigger than the claim in the TI datasheet:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/$s_!ln8X!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/$s_!ln8X!,w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 424w, https://substackcdn.com/image/fetch/$s_!ln8X!,w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 848w, https://substackcdn.com/image/fetch/$s_!ln8X!,w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 1272w, https://substackcdn.com/image/fetch/$s_!ln8X!,w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/$s_!ln8X!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png" width="484" height="382" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/efb8417f-a5bd-41a6-9331-278011c81524_484x382.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:382,&quot;width&quot;:484,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:30861,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://excamera.substack.com/i/174667033?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null,&quot;offset&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/$s_!ln8X!,w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 424w, https://substackcdn.com/image/fetch/$s_!ln8X!,w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 848w, https://substackcdn.com/image/fetch/$s_!ln8X!,w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 1272w, https://substackcdn.com/image/fetch/$s_!ln8X!,w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fefb8417f-a5bd-41a6-9331-278011c81524_484x382.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>This isn’t quite the catastrophe that it might seem. After a simple linear correction on the MCU, I was getting results accurate to within 10 µV.</p><p><span>So what’s going on with the cheap parts? My best guess is that these are either quite good copies, or failed parts that </span><em>somehow</em><span> made their way into the hobbyist supply chain. When the more respectable part arrives next week I’ll put it through the same tests and report the result. However I only bought one of these, because it’s 4X the price!</span></p><p>Thanks for reading.</p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How AI hears accents: An audible visualization of accent clusters (181 pts)]]></title>
            <link>https://accent-explorer.boldvoice.com/</link>
            <guid>45581735</guid>
            <pubDate>Tue, 14 Oct 2025 16:07:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://accent-explorer.boldvoice.com/">https://accent-explorer.boldvoice.com/</a>, See on <a href="https://news.ycombinator.com/item?id=45581735">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        

        <section id="intro">
          <p>
            Today, we’re going to go on a tour of the world's accents in
            English. Users of
            <a href="https://boldvoice.com/" target="_blank" rel="noopener">BoldVoice</a>, the American accent training app, speak more than 200 different
            languages, and it is our mission to help them speak English clearly
            and confidently. While building the accent strength metric we
            covered in the
            <a href="https://accent-strength.boldvoice.com/" target="_blank" rel="noopener">previous blog post</a>, we needed to understand how our models clustered accents,
            dialects, native languages, and language families. Today, we will
            share some of our findings using a 3D latent visualization.
          </p>
        </section>

        <section id="technical-approach">
          <h3>Technical Approach</h3>
          <p>
            To begin, we finetuned
            <a href="https://arxiv.org/abs/2106.07447" target="_blank" rel="noopener">HuBERT</a>, a pretrained audio-only foundation model for the task of accent
            identification using our in-house dataset of non-native English
            speech and self-reported accents. BoldVoice’s own dataset of
            accented speech is one of the largest of its kind in the world.
          </p>
          <figure>
            <figcaption>hubert + classification head architecture:</figcaption>
            <pre><code>Model: boldvoice/hubert-accent-identifier
Total Parameters: 94.6M (all trainable)

ARCHITECTURE:
═════════════

                ┌─────────────┐      ┌─────────────┐      ┌─────────────┐      ┌───────────────┐
Raw Audio  →    │  Feature    │  →   │  Feature    │  →   │ Transformer │  →   │ Classification│ 
(16kHz)         │  Extractor  │      │  Projection │      │   Encoder   │      │      Head     │
                └─────────────┘      └─────────────┘      └─────────────┘      └───────────────┘
                7 CNN layers         LayerNorm→Linear     12 layers            768→256→50
                1→512, 320x ↓        512→768, Dropout     12 heads, dim=768
                                                           (89.8M params)


KEY DETAILS:
• Input: Raw waveform (no spectrograms)
• Downsampling: 320x (5×2×2×2×2×2×2)
• Transformer: 12 layers
            </code></pre>
          </figure>
          <p>
            This model receives only the raw input audio and associated accent
            label; it gets neither a text prompt nor a transcript. For this
            "finetuning", we sampled 30 million speech recordings comprising
            25,000 hours of English speech - a small fraction of our total
            accent dataset. Unlike a traditional finetune, we unfroze all layers
            of the pretrained base model due to the large size of our dataset.
            We trained the model for roughly a week on a cluster of A100 GPUs.
          </p>
          <p>
            While the accent identifier performs quite well across the top
            hundred or so accents (play with it yourself at
            <a href="https://accentoracle.com/" target="_blank" rel="noopener">accentoracle.com</a>), for today, we are less interested in its raw performance, and
            more interested in the clustering of accents in its latent space.
          </p>
        </section>

        <section id="visualization">
          <h3>The Visualization</h3>
          <p>
            To observe how accents cluster, we've provided an audible latent
            space visualization for a small subset of recordings. Hover on the
            points on the graph to see the language labels.
          </p>
          <p>
            The visualization is created by applying the
            <a href="https://arxiv.org/abs/1802.03426" target="_blank" rel="noopener">UMAP</a>
            dimensionality reduction technique to reduce the 768-dimensional
            latent space to just 3 dimensions.
          </p>
          <figure>
            <figcaption>From audio to latent visualization</figcaption>
            <pre><code>  FROM AUDIO TO LATENT VISUALIZATION
  ══════════════════════════════════

     ╱│     ╱│     ╱│     ╱│                                z ↑
    ╱ │    ╱ │    ╱ │    ╱ │       ┌─────────────┐            │ ●  
   ╱  │   ╱  │   ╱  │   ╱  │       │ ●●●●●○●●●●● │            │  ●  ●
 ─────│──╱───│──╱───│──╱───│──     │ ●●●●●○●●●●● │            │   ○
      │ ╱    │ ╱    │ ╱    │       │ ●●●●●○●●●●● │            └────────→ y
      │╱     │╱     │╱     │       └─────────────┘           ╱  ●  ●
       Speech Audio(16kHz)        768-dim embedding         ╱ ●    ●
                                    (mean pooled)        x ╱
                                                               3D [x,y,z]
            │                              │                Interactive Plot
            │                              │  
            │      ┌───────────────┐       │      ┌───────────┐    │
            └─────→│     Model     │──────→└─────→│ UMAP(n=3) │───→┘
                   │   Inference   │              └───────────┘
                   └───────────────┘
            </code></pre>
          </figure>
          <p>
            Note that UMAP destroys much of the information in the
            full-dimensional latent space, but roughly preserves the global
            structure, including the relative distances between clusters. Each
            point represents a single recording inferenced by the model after it
            was fine tuned and the color corresponds to the true accent label.
          </p>
          <p>
            Finally, in order to denoise the clusters, we cherry-pick only those
            points for which the predicted and target accents match. Remember,
            the purpose of this visualization is not to help us assess the
            performance of the model, but to understand where it has placed
            accents relative to one another.
          </p>
        </section>

        <section id="privacy">
          <h3>Innovative Privacy Protection</h3>
          <p>
            By clicking or tapping on a point, you will hear a standardized
            version of the corresponding recording. The reason for voice
            standardization is two-fold: first, it anonymizes the speaker in the
            original recordings in order to protect their privacy. Second, it
            allows us to hear each accent projected onto a neutral voice, making
            it easier to hear the accent differences and ignore extraneous
            differences like gender, recording quality, and background noise.
            However, there is no free lunch: it does not perfectly preserve the
            source accent and introduces some audible phonetic artifacts.
          </p>
          <p>
            This voice standardization model is an in-house accent-preserving
            voice conversion model.
          </p>
        </section>

        <section id="exploration">
          <h3>Exploration</h3>
          <p>
            Please explore the latent space visualization. You can click, drag,
            zoom, and scroll to navigate. You can also isolate accents by double
            clicking them in the legend to the right (desktop only) –
            double-clicking again will undo the filter.
          </p>
          <p>
            Meanwhile, think about the following questions: which accents would
            you expect to be clustered together? Do you expect them to follow
            the taxonomy of language families or to cluster in other ways?
          </p>
        </section>

        
        

        <section id="exploration">
          <h3>Highlights</h3>
          <p>
            Our team was most surprised to see that geographic proximity,
            immigration, and colonialism seem to affect this model's learned
            accent groupings more than language taxonomy. Click the button below
            to explore our first grouping.
          </p>
          
          <p>
            For example, the Australian cluster is right next to the Vietnamese
            cluster despite the fact that English and Vietnamese are not related
            taxonomically. If you listen to the 10 points that make up a bridge
            between the two clusters, you hear what sounds like native
            Vietnamese speakers who speak English with an Australian accent.
            Perhaps these hybrid accents could explain the overall proximity of
            these clusters.
          </p>
          
          <p>
            We see something similar for the French/Nigerian/Ghanaian grouping.
          </p>
          <p>
            It's important to remember that the distances on this map are not an
            objective measure of the phonetic similarity between accents. They
            are a byproduct of a model which has successfully learned to
            distinguish a variety of accents in L2 English speech from audio
            alone with no knowledge of language or linguistics.
          </p>
          
          <p>
            Next, take a look at the Indian subcontinent accent cluster. Note
            that the Telugu, Tamil, and Malayalam accents are grouped together
            at one end of the cluster, and the Nepali and Bengali accents are at
            the other. This roughly mirrors geography, where Telugu, Tamil, and
            Malayalam are widely spoken languages in southern India, and Bengali
            and Nepali are widely spoken in northwest India and Nepal.
          </p>
          
          <p>
            Finally, let's scroll to the Mongolian cluster, where the nearest
            cluster is actually Korean.
          </p>
          <p>
            Experts and non-experts have observed phonetic similarities between
            Mongolian and Korean. A now-refuted hypothesis called the "Altaic
            language family" once grouped them together.
          </p>
          <p>
            It is interesting that this model, with no concept of language
            families, has also picked up on the phonetic similarities even as
            filtered through a second language (English).
          </p>
          <p>
            What do you think? Is this a meaningless artifact of latent space
            visualization or evidence of real phonetic features diffusing
            between Korean and Mongolian?
          </p>
        </section>

        <section id="share">
          <h3>Conclusion</h3>
          <p>
            This exploration highlights how a large scale speech model captures
            the shared phonetic landscape of global English. By studying how
            different accents organize in the model’s latent space, we can
            design pronunciation tools that are not only more accurate but also
            more effective, reflecting BoldVoice’s mission to help every English
            learner be understood and confident.
          </p>
          <p>
            If you are an audio ML engineer, linguist, or just an interested
            reader, free free to reach out to us at
            <a href="https://accent-explorer.boldvoice.com/cdn-cgi/l/email-protection#60050e07090e050512090e0720020f0c04160f0903054e030f0d"><span data-cfemail="ed88838a848388889f84838aad8f8281899b82848e88c38e8280">[email&nbsp;protected]</span></a>
            - we'd like to hear what you make of this visualization or any of
            the relationships therein.
          </p>
          <p>
            Suggestions for what we should cover in the future? Don’t hesitate
            to share with us.
          </p>
          <p>
            Special thanks to our in-house dialect coach Ron Carlos for his
            expertise in interpreting this visualization.
          </p>
          <p>
            <a href="https://tech-blogs.boldvoice.com/" rel="noopener">Back to Blogs Home</a>
          </p>
        </section>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[GPT-5o-mini hallucinates medical residency applicant grades (189 pts)]]></title>
            <link>https://www.thalamusgme.com/blogs/cortex-core-clerkship-grades-and-transcript-normalization</link>
            <guid>45581029</guid>
            <pubDate>Tue, 14 Oct 2025 15:12:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.thalamusgme.com/blogs/cortex-core-clerkship-grades-and-transcript-normalization">https://www.thalamusgme.com/blogs/cortex-core-clerkship-grades-and-transcript-normalization</a>, See on <a href="https://news.ycombinator.com/item?id=45581029">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Dear Applicants, Programs, and Medical Schools,</p><p>Since the opening of the residency recruitment season, we’ve heard your feedback on the Cortex Core Clerkship Transcript Normalization feature. As a physician-founded organization born out of our lived experience as applicants and program leaders, we understand the many emotions tied to the start of the season. We believe it is our duty and responsibility to communicate openly with all stakeholders about how our tools are used and how they may impact application review.</p><h3><strong>What We’ve Heard</strong></h3><p>Over the past week, while the grades on transcripts and corresponding application documents have been accurate and fully accessible, we’ve received a small number of reports from the community about inaccuracies in a subset of automation-extracted grades displayed within Cortex.</p><p>In each case:</p><ul role="list"><li>Once confirmed, we corrected the extracted grade immediately.</li><li>Where the extracted grade was accurate, we provided feedback and guidance to the reporting program or school about its interpretation and the extraction methodology.</li></ul><p>Because Cortex is now offered complimentary to all ERAS-participating programs through the AAMC-Thalamus collaboration, many programs are using it for the first time this season. We recognize the novelty of this feature may also be contributing to questions and uncertainty.</p><h3><strong>How the Tool Works</strong></h3><ul role="list"><li>Cortex makes accessible all application data including the medical school transcript, Medical Student Performance Evaluation (MSPE), and all other documents in their raw, original, and unaltered format.&nbsp;</li><li>Cortex uses automated extraction (optical character recognition (OCR) and natural language processing (NLP)) to parse clerkship grades from medical school transcripts.</li><li>The software then generates reference reports including grades, percentiles, and graphical distributions allowing reviewers a structured way to contextualize grades for efficiency and comparison within and across medical schools.</li><li>First released in 2020, the tool is updated each recruitment cycle to reflect changes in grading schemas or transcript formatting.</li></ul><p><strong><em>Important:</em></strong><em> Applicants cannot be filtered, searched, sorted, or auto-rejected based on any of the output. The automation-extracted grades and visualizations are provided for comparative context only.&nbsp; They are not included in any scoring or selection algorithms. Reviewers are strongly encouraged to verify all information against the applicant’s official PDF transcript. This reminder is also displayed directly within the product.</em></p><p><em>For more information, please review our </em><a href="https://www.thalamusgme.com/blogs/methodology-for-creation-and-processing-of-a-novel-transcript-normalization-tool-in-cortex-application-screening-and-review-platform" target="_blank"><em>supporting methodology documentation</em></a><em>.</em></p><h3><strong>Community Concerns</strong></h3><p>We recognize the primary concern is that an inaccuracy could unfairly disadvantage an applicant in the selection process. While we understand how this may create unease, please note:</p><ul role="list"><li><strong>The tool is never intended to be used in isolation.</strong></li><li>We know from our experience working with the community that program directors employ a broader review of official application documentation in parallel, which may include medical school transcripts, the Medical Student Performance Evaluation (MSPE), and other materials, all of which are readily available and accessible in Cortex.</li><li>In all investigated cases this season, to date, program directors correctly identified the accurate grade when reviewing alongside the official record.</li></ul><h3><strong>Guidelines and Recommendations</strong></h3><h5><strong>For Programs</strong></h5><ul role="list"><li>Continue to use Transcript Normalization as a <strong>reference</strong>, not as a stand-alone decision tool.</li><li>Verify grades through the <strong>official transcript and MSPE</strong>, which remain fully accessible within Cortex in the following locations:<ul role="list"><li><em>Applicant summary page:</em> a) score drawer, b) “View Transcript” links</li><li><em>Applicant details page:</em> a) score drawer, b) left-side navigation menu, and c) documents section.</li></ul></li><li>If desired, use the <strong>“blinder” feature</strong> for “clerkship grades” to hide all grades, percentiles, and graphs.</li></ul><h5><strong>For Applicants</strong></h5><ul role="list"><li><strong>Your official transcript, MSPE, and application documents are and have always been correct and unaltered in our system.</strong></li><li>In all reported instances, program directors identified and corrected any discrepancies using the official documents.</li><li><strong>It is not recommended to contact programs about your transcript</strong>; Official documents may be viewed directly by directors and other faculty reviewers.</li></ul><h5><strong>For Medical Schools</strong></h5><ul role="list"><li><strong>Please share this guidance with your applicants to help reduce confusion and anxiety.</strong></li><li>Assure students that program directors and faculty regularly review official records as part of standard application review practices<strong>.</strong></li><li>Where your grading system is unique or particularly complex, we welcome your collaboration in helping refine mappings and reduce ambiguity.</li><li>Direct any program or applicant inquiries about grade accuracy to <a href="https://customercare.thalamusgme.com/hc/en-us/requests/new" target="_blank">Thalamus Support</a>, so we can investigate promptly and provide clarity.</li></ul><h3><strong>Our Commitment to the Community</strong></h3><p>We want to emphasize that we are listening closely to your feedback, and we value the partnership of applicants, programs, and medical schools in this process. Each recruitment season brings its own set of questions, adjustments, and improvements — and this is expected as the community adapts to tools and processes.</p><p>Our team is committed to continuous improvement of Cortex based on your feedback. The purpose of Cortex Transcript Normalization tool has always been to provide additional context, not to replace official documents or holistic review. The feature continues to function as intended this year, as it has historically. With your input, we will keep advancing the system through additional validation and improvement to support the community as the use of Cortex expands.</p><p>We appreciate your trust and collaboration as we work together toward a more consistent, fair, and efficient recruitment experience.</p><p>Sincerely,</p><p>Jason Reminick, MD, MBA, MS<br>CEO and Founder, Thalamus</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Astronomers 'image' a mysterious dark object in the distant Universe (205 pts)]]></title>
            <link>https://www.mpg.de/25518363/1007-asph-astronomers-image-a-mysterious-dark-object-in-the-distant-universe-155031-x</link>
            <guid>45580699</guid>
            <pubDate>Tue, 14 Oct 2025 14:45:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.mpg.de/25518363/1007-asph-astronomers-image-a-mysterious-dark-object-in-the-distant-universe-155031-x">https://www.mpg.de/25518363/1007-asph-astronomers-image-a-mysterious-dark-object-in-the-distant-universe-155031-x</a>, See on <a href="https://news.ycombinator.com/item?id=45580699">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  
  
  
  <p>Scientists&nbsp;detect the lowest mass dark object currently measured</p>
  


  

  
  
  
<figure data-description="Overlay of the infrared emission (black and white) with the radio emission (colour). The dark, low-mass object is located at the gap in the bright part of the arc on the right-hand side.&nbsp;" data-picture="base64;">
      
      

    
</figure>

<h2>To the point</h2><ul><li><strong>Gravitational lenses:</strong> Distortions caused by gravitational lenses can be used to study the properties of dark matter, even though it does not emit light.</li><li><strong>Discovery:</strong> An international team has discovered a dark object in the distant universe that has one&nbsp;million times the mass of the Sun. The discovery is based on an analysis of the gravitational effects on the light from another galaxy.</li><li><strong>Technology:</strong> A network of radio telescopes around the world, including the Green Bank Telescope, collected the data. It forms a virtual supertelescope that enables enhanced image quality, allowing&nbsp;even small gravitational signals to be detected.</li></ul><p>Dark matter is an enigmatic form of matter not expected to emit light, yet it is essential to understanding how the rich tapestry of stars and galaxies we see in the night sky evolved. As a fundamental building block of the universe, a key question for astronomers is whether dark matter is smooth or clumpy, as this could reveal what it is made of. Since dark matter cannot be observed directly, its properties can only be determined by observing the gravitational lensing effect, whereby the light from a more distant object is distorted and deflected by the gravity of the dark object.&nbsp;“Hunting for dark objects that do not seem to emit any light is clearly challenging,” said Devon Powell at the Max Planck Institute for Astrophysics and lead author of the study. “Since we can’t see them directly, we instead use very distant galaxies as a backlight to look for their gravitational imprints.”</p><p>The team used a network of telescopes from around the world, including the Green Bank Telescope, the Very Long Baseline Array and the European Very Long Baseline Interferometric Network. The data from this international network were correlated at the Joint Institute for VLBI ERIC in the Netherlands, forming an Earth-sized super-telescope that could capture the subtle signals of gravitational lensing by the dark object. They found that the object has a mass that is a million times greater than that of our Sun and is located in a distant region of space, approximately 10 billion light years from Earth, when the universe was only 6.5 billion years old.</p><p>This is the lowest mass object to be found using this technique, by a factor of about 100. To achieve this level of sensitivity, the team had to create a high-fidelity image of the sky using radio telescopes located around the world. John McKean from the University of Groningen, the University of Pretoria, and the South African Radio Astronomy Observatory, who led the data collection and is the lead author of a companion paper, stated: “From the first high-resolution image, we immediately observed a narrowing in the gravitational arc, which is the tell-tale sign that we were onto something. Only another small clump of mass between us and the distant radio galaxy could cause this.”</p><h2>New modelling algorithms</h2>
<figure data-description="The zoom in shows the pinch in the luminous radio arc, where the extra mass from the dark object is gravitationally ‘imaged’ using the sophisticated modelling algorithms of the team. The dark object is indicated by the white blob at the pinch point of the arc, but no light from it has so far been detected at optical, infrared or radio wavelengths." data-picture="base64;">
      
      

    
</figure>

<p>To analyze the massive dataset, the team had to develop new modelling algorithms that could only be run on supercomputers. “The data are so large and complex that we had to develop new numerical approaches to model them. This was not straightforward as it had never been done before,” said Simona Vegetti at the Max Planck Institute for Astrophysics. “We expect every galaxy, including our own Milky Way, to be filled with dark matter clumps, but finding them and convincing the community that they exist requires a great deal of number-crunching,” she continued. The team applied a special technique called gravitational imaging, which allowed them to ‘see’ the invisible dark matter clump by mapping its gravitational lensing effect against the radio-luminous arc.</p><p>“Given the sensitivity of our data, we were expecting to find at least one dark object, so our discovery is consistent with the so-called ‘cold dark matter theory’ on which much of our understanding of how galaxies form is based,” said Powell. “Having found one, the question now is whether we can find more and whether their number will still agree with the models.”</p><p>The team is now analyzing the data further to better understand what the mysterious dark object could be, but they are also looking into other parts of the sky to see if they can find more examples of such low-mass dark objects using the same technique. If they continue to find such mysterious objects in other parts of the universe, and if they really turn out to be completely devoid of stars, then some theories of dark matter may be ruled out.</p><h2>Additional Information:</h2><p>Gravitational lensing: This is an astrophysical tool used by astronomers to measure the mass properties of structures in the Universe. It is a consequence of Einstein’s Theory of General Relativity, where mass in the Universe curves space. If the mass of the foreground lensing object (typically a galaxy or cluster of galaxies) is sufficiently dense, then the light from distant objects is distorted and multiple images are even observed. In the case of this system, called B1938+666, the foreground infrared-luminous galaxy (seen at the centre of the ring), results in a beautiful Einstein ring of the distant galaxy. However, the distant galaxy is also bright at radio wavelengths, showing the beautiful multiple images and gravitational arcs (seen in red).</p><p>Very Long Baseline Interferometry: The radio observations were taken using a combination of radio telescopes that are combined to form a so-called Very Long Baseline Interferometer. This observational method allows astronomers to improve the imaging sharpness of the data and reveal very small fluctuations in the brightness that otherwise could not be seen. For example, the resolving power of the data is a factor of 13 times better than the infrared imaging from the W. M. Keck Telescope adaptive optics system (also shown in the figures in black and white). The telescopes used in the observations were the Green Bank Telescope and the Very Long Baseline Array of the National Radio Astronomy Observatory in the United States, and the telescopes of the European Very Long Baseline Interferometric Network.</p><p>Gravitational imaging: This is a novel method that astronomers use to ‘see’ mass in the Universe even though it does not emit any light. This method uses the extended gravitational arcs to look for small aberrations that can only be caused by an additional, invisible component of mass. By combining this method and the exquisite high angular resolution imaging from the data, the team was able to detect the presence of the lowest mass dark object currently measured.</p>
  
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Wireshark 4.6.0 Supports macOS Pktap Metadata (PID, Process Name, etc.) (126 pts)]]></title>
            <link>https://nuxx.net/blog/2025/10/14/wireshark-4-6-0-supports-macos-pktap-metadata-pid-process-name-etc/</link>
            <guid>45580315</guid>
            <pubDate>Tue, 14 Oct 2025 14:18:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nuxx.net/blog/2025/10/14/wireshark-4-6-0-supports-macos-pktap-metadata-pid-process-name-etc/">https://nuxx.net/blog/2025/10/14/wireshark-4-6-0-supports-macos-pktap-metadata-pid-process-name-etc/</a>, See on <a href="https://news.ycombinator.com/item?id=45580315">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
								<div>
<figure><a href="https://nuxx.net/blog/wp-content/uploads/2025/10/image.png"><img fetchpriority="high" decoding="async" width="1024" height="502" src="https://nuxx.net/blog/wp-content/uploads/2025/10/image-1024x502.png" alt="" srcset="https://nuxx.net/blog/wp-content/uploads/2025/10/image-1024x502.png 1024w, https://nuxx.net/blog/wp-content/uploads/2025/10/image-300x147.png 300w, https://nuxx.net/blog/wp-content/uploads/2025/10/image-768x377.png 768w, https://nuxx.net/blog/wp-content/uploads/2025/10/image-1536x754.png 1536w, https://nuxx.net/blog/wp-content/uploads/2025/10/image-2048x1005.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>


<p>Four years after my post on doing <a href="https://nuxx.net/blog/2021/10/29/network-capture-with-process-name-and-pid-on-macos/" data-type="post" data-id="19460">network captures on macOS with Process ID</a>, <a href="https://www.wireshark.org/docs/relnotes/wireshark-4.6.0.html">Wireshark 4.6.0 has been released</a> which includes support for parsing this extra metadata, including the process info.</p>



<p>So how do you do it? Easy! You just need the <code>pktap</code> interface parameter.</p>



<p>From the <a href="https://manp.gs/mac/1/tcpdump">tcpdump(1) man page</a>:</p>



<blockquote>
<p>Alternatively, to capture on more than one interface at a time, one may use “pktap” as the <em>interface</em> parameter followed by an optional list of comma separated interface names to include. For example, to capture on the loopback and en0 interface:</p>



<pre>tcpdump -i pktap,lo0,en0</pre>



<p>An <em>interface</em> argument of “all” or “pktap,all” can be used to capture packets from all interfaces, including loopback and tunnel interfaces. A pktap pseudo interface provides for packet metadata using the default PKTAP data link type and files are written in the Pcap-ng file format. The RAW data link type must be used to force to use the legacy <strong>pcap-savefile</strong>(5) file format with a ptkap pseudo interface. Note that captures on a ptkap pseudo interface will not be done in promiscuous mode.</p>
</blockquote>



<p>Therefore, we just need something like:</p>



<pre><code>tcpdump -i pktap,en0 -w outfile.pcapng</code></pre>



<p>or</p>



<pre><code>tcptump -i pktap,all host 192.168.0.6 -w outfile.pcapng</code></pre>



<p>And then open <code>outfile.pcapng</code> in <em>Wireshark </em>and under <em>Frame </em>→ <em>Process Information</em> you can find the process name, PID, etc. (See screenshot above.)</p>



<p>Filtering can be done with <code>frame.darwin.process_info</code> as listed <a href="https://www.wireshark.org/docs/dfref/f/frame.html">here</a>. For example:</p>



<pre><code>frame.darwin.process_info.pname == "firefox"</code></pre>



<p>or</p>



<pre><code>frame.darwin.process_info.pid == 92046</code></pre>



<p>This is super helpful to figure out both what unexpected network traffic is being generated by and the inverse, what a process is doing on the network. And now thanks to Wireshark 4.6.0 it’s even easier.</p>
											</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Let's Not Encrypt (2019) (107 pts)]]></title>
            <link>https://michael.orlitzky.com/articles/lets_not_encrypt.xhtml</link>
            <guid>45579968</guid>
            <pubDate>Tue, 14 Oct 2025 13:44:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://michael.orlitzky.com/articles/lets_not_encrypt.xhtml">https://michael.orlitzky.com/articles/lets_not_encrypt.xhtml</a>, See on <a href="https://news.ycombinator.com/item?id=45579968">Hacker News</a></p>
<div id="readability-page-1" class="page">

    


    <!--
      On my CVE pages, the title doesn't include the CVE identifier.
      Rather than create a whole separate template, just check for
      the presence of a cve_id here and include it if possible.
    -->
    <h2>Let's not Encrypt</h2>
    
    <!--
      The "date" field is provided by datedCtx on pages that we expect
      to have a "published" field. You don't get "updated" without
      "published", sorry.
    -->
    <p>
      posted 2019-04-24; updated 2023-11-05
    </p>
    

    <p>
  <em>
    Let's Discuss the organization providing a false sense of security
    at an unbeatable price.
  </em>
</p>

<dl>
  <dt>Update 2023-11-05</dt>
  <dd>
    Yeah, I've got an LE cert now. And I don't want to talk about it.
  </dd>

  <dt>Update 2023-10-22</dt>
  <dd>
    This is my last <em>I told you so</em>, I promise. But <a href="https://notes.valdikss.org.ru/jabber.ru-mitm/">Let's Encrypt
    certificates were used to MiTM Hetzner and Linode servers</a>.
  </dd>

  <dt>Update 2020-02-04</dt>
  <dd>
    <a href="https://www.microsoft.com/en-us/microsoft-teams/group-chat-software">Microsoft
    Teams</a> was <a href="https://www.usatoday.com/story/tech/2020/02/03/microsoft-teams-issues-fix/4644138002/">unusable
    for about seven hours yesterday</a>, because <a href="https://www.theverge.com/2020/2/3/21120248/microsoft-teams-down-outage-certificate-issue-status">Microsoft
    forgot to renew a certificate</a>. Sorry, <a href="https://www.engadget.com/2020/02/03/microsoft-teams-expired-certificate/">you
    just can't work today</a>?
  </dd>

  <dt>Update 2019-05-10</dt>
  <dd>
    Mozilla, a <a href="https://letsencrypt.org/sponsors/">Let's
    Encrypt Platinum Sponsor</a>, experiences some minor embarrassment
    this week as every Firefox install in existence commits
    suicide. The cause?  <a href="https://hacks.mozilla.org/2019/05/technical-details-on-the-recent-firefox-add-on-outage/">An
    expired certificate</a>. (Maybe they should use Let's Encrypt?)
    This quote is gold:
    <blockquote>
      <p>
	First, we should have a much better way of tracking the status of
	everything in Firefox that is a potential time bomb and making
	sure that we don’t find ourselves in a situation where one goes
	off unexpectedly.
      </p>
      <cite>
	Eric Rescorla, CTO of the Firefox team at Mozilla
      </cite>
    </blockquote>

    My medical opinion: if it hurts, maybe you should stop doing it.
  </dd>
</dl>

<h3>Background</h3>
<p>
  Google is running a thinly-veiled protection racket, <a href="https://www.blog.google/products/chrome/milestone-chrome-security-marking-http-not-secure/">marking
  normal safe websites as “not secure.”</a> Unless, of
  course, you pay them. You can make the warning go away by paying a
  third-party—who then pays Google—to sign your website's
  SSL certificate. Some otherwise-smart people are convinced that this
  is fine, because the <a href="https://letsencrypt.org/">Let's
  Encrypt</a> project is signing those certificates for free at the
  moment. It's a scam.
</p>

<h3>Let's See</h3>
<h4 id="no-security">The certificates provide no security</h4>
<p>
  The way you verify your identity to Let's Encrypt is <a href="https://letsencrypt.org/how-it-works/">the same as with other
  certificate authorities</a>: you don't really. You place a file
  somewhere on your website, and they access that file over plain HTTP
  to verify that you own the website. The one attack that signed
  certificates are meant to prevent is a <a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">man-in-the-middle
  attack</a>. But if someone is able to perform a man-in-the-middle
  attack against your website, then he can intercept the certificate
  verification, too. In other words, Let's Encrypt certificates don't
  stop the one thing they're supposed to stop.
</p>

<p>
  And, as always with the certificate authorities, <a href="https://ccadb-public.secure.force.com/mozilla/IncludedCACertificateReport">a
  thousand murderous theocracies, advertising companies, and
  international spy organizations</a> are allowed to impersonate you
  by design.
</p>

<h4>Automatic renewal is insecure</h4>
<p>
  The official way to renew Let's Encrypt certificates is
  automatically, with a tool called <a href="https://github.com/certbot/certbot">certbot</a>. It downloads
  a bunch of untrusted data from the web, and then feeds that data
  into your web server, all as root. If that sounds dumb, then good
  for you, because it is.
</p>
<p>
  All web servers treat certificate data as trusted: they expect it to
  have been verified as safe and correct by the system
  administrator. No sanity checks are performed, and if the contents
  of your certificate are malicious or erroneous, then you're going to
  have a bad time. For example, <a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=57360">a single
  incorrect byte in <em>one</em> certificate will take down your
  entire Apache web server</a>. This isn't something that anyone is
  going to fix, because only in <a href="https://community-sitcom.fandom.com/wiki/Darkest_Timeline">the
  darkest timeline</a> would certificates be obtained automatically
  from strangers on the internet and fed directly into the web server
  as root. The <em>best</em> thing that can happen if certbot fails is
  that <em>only one</em> of your websites will crash.
</p>
<p>
  Since certbot obtains certificates automatically from strangers on
  the internet and feeds them into your web server as root, and given
  that <a href="#no-security">the extra security afforded by those
  certificates is negligible</a>, we have a cure that is worse than
  the disease. Let's Encrypt introduces real risks to solve imaginary
  problems.
</p>

<p>
  “But you don't have to use certbot,” say the people who
  haven't thought very hard about it. And they're right: <a href="https://en.wikipedia.org/wiki/YouTube_headquarters_shooting">you
  always have options</a>. You <em>can</em> <a href="https://letsencrypt.org/docs/client-options/">renew
  certificates manually</a>, but
</p>

<h4>
  Manual renewal isn't free
</h4>
<p>
  Renewing a certificate manually takes about fifteen minutes. Before
  Google <a href="https://cabforum.org/2017/03/17/ballot-193-825-day-certificate-lifetimes/">hijacked
  the standards process</a>, certificates could be valid for five to
  ten years. And in the past, only a select few websites actually
  <em>needed</em> certificates. Under those circumstances, fifteen
  minutes to renew was annoying, yet tolerable.
</p>
<p>
  Let's Encrypt certificates are <a href="https://letsencrypt.org/2015/11/09/why-90-days.html">valid for
  only three months</a>. And, thanks to Google, we're talking about
  installing one on <em>every</em> website. If you have a hundred
  websites, then on average that's four hundred renewals a
  year—more than one every day. Every single day. For the rest
  of your life. Want to go on vacation?  Get drunk on Saturday morning
  and watch cartoons? Get married? You can't, you have certificates to
  renew that day.
</p>
<p>
  Manual renewal is only free if your time is worthless. And the
  commitment is truly forever, because
</p>

<h4 id="trap">HTTPS is a trap</h4>
<p>
  Once you've moved your websites to HTTPS, there's no going back to
  plain HTTP. All of the search engines that people use to find your
  site will list only the HTTPS address, and not the plain-HTTP
  address.
</p>
<p>
  Normally, when a site changes URLs, you can use a <a href="https://en.wikipedia.org/wiki/Server-side_redirect">redirect</a>
  to send visitors to the new address. But, if the old address is
  HTTPS, that doesn't work: the old address will display a misleading
  security warning instead of redirecting. So, you can never undo the
  decision to serve your site over HTTPS. This is important, because
  it means that you need the “free” certificates to be
  available forever; but,
</p>


<h4>Let's Encrypt is founded on the benevolence of scoundrels</h4>
<p>
  Let's Encrypt isn't free to run, either. Their 2019 operating budget
  is <a href="https://letsencrypt.org/2018/12/31/looking-forward-to-2019.html">3.6
  million U.S. dollars</a>. Most of that is donated by… guess
  who? <a href="https://letsencrypt.org/sponsors/">Your
  competitors</a>.
</p>
<p>
  It's bad business to marry yourself to a product or technology that
  you don't control, and downright quixotic if that technology is
  owned by your competitors. Let's Encrypt is not your friend; legally
  speaking, you have no business relationship with them, and they have
  no obligation to provide you with certificates now or in the
  future. Knowing that <a href="#trap">HTTPS is a trap</a>, you should
  ask yourself: what happens if Let's Encrypt goes away?  Do you have
  a hundred broken websites on your hands? Will you have to pay
  thousands of dollars every year for the rest of your life to make
  them work again? The automatic renewal process <a href="https://community.letsencrypt.org/t/march-13-2019-end-of-life-for-all-tls-sni-01-validation-support/74209">has
  already been broken once on purpose</a>.
</p>
<p>
  Or more cynically, what if Google decides to make some money by
  dropping Let's Encrypt from the list of certificate authorities in
  Chrome? Same answer? Maybe Let's Encrypt will be around forever, but
  it's negligent to gamble on that.
</p>


<h4>It's bad engineering</h4>
<p>
  When you install a certificate with a three-month expiration date,
  you're saying “I want my website to break in three months
  unless I show up and tell it not to.” It's a bomb that needs
  to be disarmed repeatedly, lest it explode. A real engineer wouldn't
  install a bomb on a bridge, and you shouldn't install one on your
  website.
</p>
<p>
  Sadly, our profession is one that has no legal, professional,
  educational, or moral requirements. But, if by some accident you
  happen to be good at your job, then your instincts should already be
  telling you that the time-bomb design principle is shitty
  engineering. Yes, the system is being forced on you by a bunch of
  assholes. But <em>you</em> still look like an idiot for playing
  along. If you have any self respect, that should bother you.
</p>


<h4 id="supplants-better">It supplants better solutions</h4>
<p>
  So we're spending $3,600,000 every year on certificates that aren't
  any better than self-signed, and we're asking people to weaken the
  security on their web servers, and wasting time creating a fragile
  automated renewal system, completely at the mercy of a third-party
  whose financial interests are opposed to ours, all to wind up right
  back where we started with no security and no browser warnings. But
  that's not the worst part.
</p>
<p>
  The worst part is that Let's Encrypt is preventing us from building
  a real solution to the problem. The entire certificate authority
  system is a for-profit scam. It imparts <em>no security</em>
  whatsoever. But Google gets its money, so it's happy. That means
  Chrome is happy, and shows no warnings, so the end user is happy
  too. That makes the website owner happy, and everyone is happy happy
  happy. But everything is still quite fundamentally fucked. Before
  Let's Encrypt, people were at least thinking about the problem,
  motivated by the monetary costs. But now that Let's Encrypt is
  giving us all pretend security for free, those people have moved
  on. There is basically no one interesting in bringing a minimal
  amount of security to the world wide web these days.
</p>


<h3>what to do about it</h3>
<p>
  Not this time. The technical problems are easy to solve. For
  decades, users of <a href="https://en.wikipedia.org/wiki/Secure_Shell">SSH</a> have had a
  system (save the certificate permanently the first time you connect,
  and warn if it ever changes) that is optimal in a sense: it works at
  least as well as any other solution. It's trivial to implement, is
  completely free, involves no third parties, and lasts forever. To
  the surprise of absolutely no one, web browsers don't support it.
</p>
<p>
  The main <em>non</em>-technical problem is the vestigial
  ‘s’ in “web browsers.” No, not that
  one—the one on the end. <a href="https://arstechnica.com/gadgets/2018/12/the-web-now-belongs-to-google-and-that-should-worry-us-all/">Google's
  abuse</a> recently forced Microsoft to <a href="https://www.windowscentral.com/microsoft-building-chromium-powered-web-browser-windows-10">abandon
  Internet Explorer in favor of Chrome</a>. Firefox has no market
  share, largely due to Mozilla's own incompetence, but also thanks in
  part to <a href="https://twitter.com/johnath/status/1116871246510264320">sabotage
  by Google</a>. In any case, Google now controls the one user
  interface that everyone on the planet uses to access the web. And
  Google is the main beneficiary of the certificate authority
  system. They're <a href="https://letsencrypt.org/sponsors/">one of
  the main sponsors of Let's Encrypt</a>, precisely because <a href="#supplants-better">Let's Encrypt discourages us from replacing
  the broken certificate authority system</a>. Let's Encrypt makes
  their subterfuge socially acceptable and practically palatable.
</p>
<p>
  Google also owns <a href="https://whatwg.org/">HTML</a> and <a href="https://en.wikipedia.org/wiki/HTTP/2">HTTP</a>, and that's
  just about everything that makes up “the web.” So long
  as they do, this battle is lost. No one's going to give up the one
  free way to make their websites work in Chrome. The law can't
  help. Your mom can't help, I asked her. Give up and go outside, it's
  nice out. Seriously, things are only going to get worse.
</p>


    

  



</div>]]></description>
        </item>
        <item>
            <title><![CDATA[CRISPR-like tools that finally can edit mitochondria DNA (147 pts)]]></title>
            <link>https://www.nature.com/articles/d41586-025-03307-x</link>
            <guid>45579708</guid>
            <pubDate>Tue, 14 Oct 2025 13:21:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nature.com/articles/d41586-025-03307-x">https://www.nature.com/articles/d41586-025-03307-x</a>, See on <a href="https://news.ycombinator.com/item?id=45579708">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-test="access-teaser"> <p>CRISPR gene editing has made its way into every corner of modern biology, but not into every corner of the cell. Although researchers have used these systems to develop <a href="https://www.nature.com/articles/d41586-024-04102-w" data-track="click" data-label="https://www.nature.com/articles/d41586-024-04102-w" data-track-category="body text link">treatments for sickle-cell anaemia</a> and blood cancers, to unlock the <a href="https://www.nature.com/articles/d41586-025-02635-2" data-track="click" data-label="https://www.nature.com/articles/d41586-025-02635-2" data-track-category="body text link">secrets of multicellularity</a> and to discover the role of <a href="https://www.nature.com/articles/d41586-025-00217-w" data-track="click" data-label="https://www.nature.com/articles/d41586-025-00217-w" data-track-category="body text link">thousands of overlooked proteins</a>, there’s one place CRISPR can’t easily reach: <a href="https://www.nature.com/articles/d41586-025-01064-5" data-track="click" data-label="https://www.nature.com/articles/d41586-025-01064-5" data-track-category="body text link">mitochondria</a>.</p><article data-label="Related"><a href="https://www.nature.com/articles/d41586-025-01941-z" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_51144384.jpg"><p>Cancer cells get power boost by stealing mitochondria from nerves</p></a></article><p>The rings of DNA inside mitochondria are inaccessible to these techniques, which means that precise edits to mitochondrial DNA (mtDNA) remain frustratingly out of reach. “Mitochondria missed the CRISPR–Cas9 revolution that exploded 12 years ago,” says Michal Minczuk, a geneticist at the University of Cambridge, UK.</p><p>But researchers are eager to access this DNA, says Minczuk. Mitochondria are bean-shaped organelles that <a href="https://www.nature.com/articles/d41586-024-03646-1" data-track="click" data-label="https://www.nature.com/articles/d41586-024-03646-1" data-track-category="body text link">power cells</a> and have myriad other cellular tasks. Exploring their DNA is essential for understanding the energy production and exchange that underlies metabolic health. And more than 300 mutations in this DNA cause mitochondrial diseases — incurable genetic disorders with a wide range of symptoms that can rob people of their sight and hearing, trigger muscle problems and spark seizures<sup><a href="#ref-CR1" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">1</a></sup>. These disorders affect roughly 1 in 5,000 people.</p><p>Because CRISPR can’t help with these problems, researchers have been looking for other ways to precisely edit the mitochrondrial genome. And the past few years have brought some success: the tools are already proving to be a boon for creating accurate animal models of mitochondrial diseases. “The progress has been remarkable,” says Jin-Soo Kim, a chemical biologist who develops mtDNA editing tools at the Korea Advanced Institute of Science and Technology in Daejeon, South Korea.</p><p>If researchers can make mtDNA editing safe and accurate enough, it could eventually be used to treat, and even cure, these genetic conditions. “It would be a medical breakthrough,” says Kim.</p><h2>A bacterial origin</h2><p>The exact origins of mitochondria are murky, but the leading theory holds that <a href="https://www.nature.com/articles/d41586-024-03224-5" data-track="click" data-label="https://www.nature.com/articles/d41586-024-03224-5" data-track-category="body text link">the organelle’s story started</a> around 1.5 billion years ago when a single-celled microorganism called an archaeon gobbled up a roaming bacterium that survived inside its host. This event marked the <a href="https://www.nature.com/articles/d41586-021-01316-0" data-track="click" data-label="https://www.nature.com/articles/d41586-021-01316-0" data-track-category="body text link">beginning of the eukaryotes</a> — the large group of organisms, including plants, animals and fungi, in which cells contain organelles that are enclosed inside membranes. The swallowed bacterium retained its characteristic circular DNA as it settled into its new home, but over time it sacrificed most of its genes to the nuclear genome of its host.</p><p>In the evolutionary lineage that gave rise to humans and other animals, this genetic transfer whittled the resident bacterium’s genome down to just 37 genes that code for 13 proteins involved in energy production, turning it into a specialized organelle.</p><article data-label="Related"><a href="https://www.nature.com/articles/d41586-025-03064-x" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_51487186.jpg"><p>Mitochondria expel tainted DNA — spurring age-related inflammation</p></a></article><p>The small amount of mitochondrial DNA that stuck around in animals differs in key ways from nuclear DNA, which in humans encodes around 20,000 genes. For a start, mtDNA is typically inherited solely from the mother. There can be several copies of mtDNA in each mitochondrion, and the organelle has its own built-in machinery for making RNA and proteins from that DNA.</p><p>Mitochondrial DNA is also much more error-prone, with a mutation rate estimated to be 10–20 times greater than that of nuclear DNA. This is in part because it has to contend with a barrage of damaging reactive oxygen species — unstable molecules that are generated in mitochondria during normal energy production. But it’s also because it <a href="https://www.nature.com/articles/d41586-023-00334-4" data-track="click" data-label="https://www.nature.com/articles/d41586-023-00334-4" data-track-category="body text link">doesn’t have histones</a>: the proteins that protect and package nuclear DNA.</p><p>Compared with its counterpart in the nucleus, mtDNA’s toolkit for repairing itself is rudimentary. The nucleus is quick to fix a snapped DNA strand using an arsenal of repair mechanisms, but mitochondria can mend only some defects. They often simply throw away their broken DNA. This difference limits the options for gene-editing tools, because nearly all such tools for nuclear DNA use its inherent repair pathways.</p><p>It has been notoriously challenging to develop approaches for modifying mitochondrial DNA, says Stephen Ekker, a molecular biologist at the University of Texas at Austin. “Its bacterial origins are revealed when you start trying to edit it,” he says.</p><p>The most crucial hurdle for scientists trying to tinker with the mitochondrial genome is that it is locked behind a wall of membranes that doesn’t allow external nucleic acids to pass into the organelle. Although there have been hints that <a href="https://www.nature.com/articles/d41586-022-03837-8" data-track="click" data-label="https://www.nature.com/articles/d41586-022-03837-8" data-track-category="body text link">CRISPR-based gene-editing tools</a> — which rely on RNA to guide them to the correct sequence — might be able to overcome these barriers, many researchers remain unconvinced.</p><h2>Snip and trash</h2><p>Still, there are other ways in. More than a decade before CRISPR became a research tool, mitochondria researchers began experimenting with other editing tools that could cross mitochondrial membranes and coax the organelles into <a href="https://www.nature.com/articles/d41586-025-03064-x" data-track="click" data-label="https://www.nature.com/articles/d41586-025-03064-x" data-track-category="body text link">ditching their problematic DNA</a><sup><a href="#ref-CR2" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">2</a></sup>.</p><p>Every cell contains a vast number of mitochondrial genomes, because cells contain thousands of mitochondria and each one can carry several copies of mtDNA. Healthy and mutated mtDNA often coexist: a state known as heteroplasmy. It’s when the proportion of mutated mtDNA reaches 60–80% in a particular tissue or cell type that mitochondrial diseases manifest<sup><a href="#ref-CR3" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">3</a></sup>.</p><article data-label="Related"><a href="https://www.nature.com/articles/d41586-025-01064-5" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_51117492.jpg"><p>Cells are swapping their mitochondria. What does this mean for our health?</p></a></article><p>If researchers could reduce the faulty copies of mtDNA in cells, they could eliminate the resulting disease. So, they turned to enzymes called zinc finger nucleases (ZFNs) and transcription activator-like effector nucleases (TALENs) to snip the double-stranded mtDNA. Whereas targeted snipping of nuclear DNA cajoles the cut DNA strands to glue themselves back together without the harmful mutation, the cut DNA in mitochondria is simply cast out. This elimination triggers the remaining intact copies to replicate themselves so that the correct level of mtDNA is maintained.</p><p>In most cases, the mutated copies will be reduced to an acceptable level as the normal copies are replicated. “That’s going to make up for what you’re destroying,” says Carlos Moraes, a geneticist at the University of Miami in Florida.</p><p>Although there has been progress with this approach, it hasn’t made its way out of the laboratory. And even if it did reach the clinic, the technique would be powerless against diseases caused by mutations that are often present in all copies of a person’s mtDNA, such as Leber’s hereditary optic neuropathy (LHON), a rare condition that causes rapid vision loss.</p><p>What researchers need are tools that do more than cut DNA but that don’t rely on guide RNA.</p><h2>CRISPR-free base editing</h2><p>When CRISPR–Cas9 emerged as a tool in 2012, it became the <a href="https://www.nature.com/articles/531155a" data-track="click" data-label="https://www.nature.com/articles/531155a" data-track-category="body text link">go-to gene editor</a> for all kinds of application. A guide RNA directs the Cas9 enzyme to a specific DNA sequence, where the enzyme does the cutting. Genetic changes are introduced as the DNA repairs itself.</p><p>The approach became even more useful in 2016, when David Liu, a chemical biologist at the Broad Institute of MIT and Harvard in Cambridge, Massachusetts, and his colleagues introduced a more precise technique called <a href="https://www.nature.com/articles/d41586-023-03543-z" data-track="click" data-label="https://www.nature.com/articles/d41586-023-03543-z" data-track-category="body text link">base editing</a><sup><a href="#ref-CR4" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">4</a></sup>. In this case, researchers modify the Cas9 enzyme and rely on another enzyme, called a deaminase, to convert one DNA base letter to another — such as cytosine (C) to thymine (T) or adenine (A) to guanine (G).</p><article data-label="Related"><a href="https://www.nature.com/articles/d41586-024-01716-y" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_27197990.jpg"><p>Hope, despair and CRISPR — the race to save one woman’s life</p></a></article><p>Although base editing and other CRISPR techniques took off for nuclear DNA, Liu and other research teams couldn’t get it working on mtDNA. Because CRISPR’s guide RNA doesn’t readily pass through a mitochondrion’s double membrane, using precise tools on mtDNA remained a pipe dream. “We did not have much success,” says Liu. </p><p>A solution materialized in 2018 when Joseph Mougous, a microbiologist then at the University of Washington in Seattle, and his colleagues stumbled across a toxin made by the bacterium <i>Burkholderia cenocepacia</i>. This enzyme, a deadly weapon against other bacteria, wreaks havoc by ultimately converting base C to T across the bacterial genome<sup><a href="#ref-CR5" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">5</a></sup>.</p><p>Mougous, now based at Yale University in New Haven, Connecticut, e-mailed Liu asking whether the enzyme, called DddA, would be of any use to him. “I knew exactly what it might be used for — base editing mtDNA!” says Liu. </p><p>But switching every C to a T would be lethal to cells. Liu and his colleagues set out to “tame the beast”. They split DddA into two inactive pieces so that the enzyme would do its handiwork on mtDNA only when the pieces were brought together in a particular orientation. And instead of using guide RNA, Liu and his colleagues modified proteins found in TALENs to direct the DddA segments to their target sequences (see ‘Making the edit’).</p><figure><picture><source type="image/webp" srcset="https://media.nature.com/lw767/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_51566922.jpg?as=webp 767w, https://media.nature.com/lw319/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_51566922.jpg?as=webp 319w" sizes="(max-width: 319px) 319px, (min-width: 1023px) 100vw,  767px"><img alt="Making the edit: a diagram showing a method of editing base pairs in mitochondrial DNA, using an enzyme DddA attached to a protein TALE, that binds to specified DNA sequences." loading="lazy" src="https://media.nature.com/lw767/magazine-assets/d41586-025-03307-x/d41586-025-03307-x_51566922.jpg"><figcaption></figcaption></picture></figure></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pyrefly: Python type checker and language server in Rust (182 pts)]]></title>
            <link>https://pyrefly.org/?featured_on=talkpython</link>
            <guid>45579275</guid>
            <pubDate>Tue, 14 Oct 2025 12:33:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pyrefly.org/?featured_on=talkpython">https://pyrefly.org/?featured_on=talkpython</a>, See on <a href="https://news.ycombinator.com/item?id=45579275">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__docusaurus_skipToContent_fallback"><div id="why-pyrefly-section"><div><div><h3>Scale with Confidence</h3><p>Type check over 1.85 million lines of code<!-- --> <span>per second.<sup><span><span>ⓘ</span><span>Tested using Meta infrastructure (166 cores, 228 GB RAM)</span></span></sup></span></p></div><div><h3>Developer Delight</h3><p>Get lightning fast autocomplete, and catch errors with instant feedback in your favorite editor.</p></div><div><h3>Support at your Fingertips</h3><p>Have questions or feedback to share? Connect with us on <a href="https://discord.gg/Cf7mFQtW7W" target="_blank">Discord</a></p></div></div><section><li id="firefly"></li><li id="firefly"></li><li id="firefly"></li></section></div><div id="performance-comparison-section"><p><h2>Performance Comparison</h2></p><div><div><p>Type checking the</p><!-- --> <p><a href="https://github.com/pytorch/pytorch" target="_blank" rel="noopener noreferrer">PyTorch</a></p><!-- --><p>codebase from scratch.<span><span>ⓘ</span><span><strong>Tested using Macbook</strong><br>(10 cores: 8 performance + 2 efficiency cores, 32 GB RAM)</span></span></p></div><div><div><p><span><strong>Pyrefly</strong></span><span><span>ⓘ</span><span><strong>Command: "pyrefly check"</strong><br>Pyrefly uses as many threads as possible</span></span></p></div><div><p><span><strong>Pyright</strong></span><span><span>ⓘ</span><span><strong>Command: "pyright --threads=8"</strong><br>8 threads yielded the best performance after testing multiple settings</span></span></p></div><div><p><span><strong>MyPy</strong></span><span><span>ⓘ</span><span><strong>Command: "dmypy run"</strong></span></span></p></div></div></div></div><div id="pyrefly-video"><p><h2>See Pyrefly in Action</h2></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Zoo of Array Languages (153 pts)]]></title>
            <link>https://ktye.github.io/</link>
            <guid>45578540</guid>
            <pubDate>Tue, 14 Oct 2025 11:01:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ktye.github.io/">https://ktye.github.io/</a>, See on <a href="https://news.ycombinator.com/item?id=45578540">Hacker News</a></p>
<div id="readability-page-1" class="page"><div href="k.html"><pre><span>ktye/k   ktye.github.io/k.html</span>
+ flp add  '  ech pri both bin
- neg sub  /  ovr fix echright
* fst mul  \  scn fix eachleft
% sqr div      / join   decode
! til key  mod \ split  encode
&amp; wer min  $[a;b;...]     cond
| rev max  while[c;a;b;d;e;..]
&lt; asc les  f:{x+y}   [bl;o;ck]
&gt; dsc mor            "chars" c
= grp eql  <span title="if you wonder what these numbers are: these are the verb codese.g. (!) is 12you can also get them in k:(!)+0">01234567</span>   1 2 3  i
~ not mtc  <span> :+-*%&amp;|</span>  .4 5 6. f
, enl cat  <span>&lt;&gt;=~!,^#</span>   2a300  z
^ srt cut  <span>_$?@.   </span>  (1;2 3) L
# cnt tak           `a`b!5 6 D
_ flr drp  t,d t,t t,'t   join
$ str cst           k!t    key
? unq fnd  in       k?t  group
@ typ atx  @[x;i;+;y]    amend
. val cal  .[x;i;+;y]    dmend
                              
<span>abs sin cos exp log find angle
imag conj  types:cisfzLDTvcdlx
?n(uniform) ?-n(normal) ?z(bi)
n?n(with)   random   -n?n(w/o)</span>
</pre></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[ADS-B Exposed (277 pts)]]></title>
            <link>https://adsb.exposed/</link>
            <guid>45578383</guid>
            <pubDate>Tue, 14 Oct 2025 10:38:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://adsb.exposed/">https://adsb.exposed/</a>, See on <a href="https://news.ycombinator.com/item?id=45578383">Hacker News</a></p>
<div id="readability-page-1" class="page">
    <a id="proud" href="https://github.com/ClickHouse/ClickHouse">Proudly made with <b>ClickHouse</b> open-source database</a>
    
    
    
    
    
    
    <p><span id="picture-copyright">Picture from Wikipedia, © the details at the corresponding page.</span></p>
    
    <p>👁</p>
    <p><img src="https://adsb.exposed/pointer.svg"></p>

    

    
    
    


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[KDE celebrates the 29th birthday and kicks off the yearly fundraiser (265 pts)]]></title>
            <link>https://kde.org/fundraisers/yearend2025/</link>
            <guid>45578117</guid>
            <pubDate>Tue, 14 Oct 2025 09:54:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://kde.org/fundraisers/yearend2025/">https://kde.org/fundraisers/yearend2025/</a>, See on <a href="https://news.ycombinator.com/item?id=45578117">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><img alt="" src="https://kde.org/fundraisers/yearend2025/top_box.png"></p><p>This week is KDE’s 29th anniversary. It may not be a nice round number like 25 or 30, but whenever another birthday rolls around for an independent project the size and scope of KDE — powered by the goodwill of its contributors and users — that’s really quite something!</p><p>This year we’re celebrating by kicking off our yearly fundraiser. Let’s raise at least €50,000 before the end of the year!</p><h3 id="donated-updated-daily"><span>Donated (updated daily)</span></h3><p><sup>*</sup>Stretch goal coming soon.</p><h2 id="make-kdes-birthday-wishes-come-true">Make KDE’s Birthday Wishes Come True</h2><h3 id="producing-first-class-software">Producing first-class software</h3><p>KDE is on the verge of something big, and the popularity of its free software is on the rise. It’s increasingly being adopted by gamers, artists, professionals, companies, and public institutions. But the costs associated with developing and maintaining that software are also growing.</p><p><strong><a href="https://kde.org/fundraisers/yearend2025/#top">Your donation</a></strong> keeps KDE “in business” and our software sustainable for generations to come.</p><figure><img src="https://kde.org/fundraisers/yearend2025/Katie_Konqi_make_software.png"></figure><h3 id="keeping-you-in-control">Keeping you in control</h3><p>A core aim of KDE is keeping you in control of your digital life, and we do it by providing high-quality and privacy-conscious free software. But we can only keep doing it by preserving our own financial independence, so that we never become too dependent on any single source of support.</p><p><strong><a href="https://kde.org/fundraisers/yearend2025/#top">Your donation</a></strong> makes KDE truly independent. Funding from the people allows us keep KDE developed by the people, of the people, and for the people.</p><h3 id="cleaning-up-the-world">Cleaning up the world</h3><p>This week is also <a href="https://weee-forum.org/iewd-about/">International E-Waste Day</a>, and KDE wants a clean planet too! We started the <a href="https://endof10.org/">End of 10</a> campaign because big tech corporations continue pushing everyone to chase the new shiny… in the process filling landfills with perfectly functional devices that become terrible sources of pollution when junked<sup><a href="https://kde.org/fundraisers/yearend2025/#anot01">*</a></sup>.</p><p><strong><a href="https://kde.org/fundraisers/yearend2025/#top">Your donation</a></strong> allows us to inform everybody about how they can help stave off these environmental disasters.</p><figure><img src="https://kde.org/fundraisers/yearend2025/konqi_katie_recycle.png"></figure><hr><p><a name="anot01"></a><sup>*</sup> Case in point: Microsoft is stopping free support for Windows 10 on hundreds of millions of computers this very week. Many of these old yet perfectly usable devices will not be able to upgrade because of spurious hardware requirements. Microsoft’s solution? “Throw away your computer and pollute the planet because we want to make even more money.”</p><h3 id="reaching-people-the-tech-industry-left-behind">Reaching people the tech industry left behind</h3><p>Many aren’t in a position to replace their devices every few years, or download hundreds of gigabyes of data from an always-on internet connection. KDE produces software that doesn’t need the latest hardware or an always-on internet connection, allowing everybody find their space in the digitized world.</p><p><strong><a href="https://kde.org/fundraisers/yearend2025/#top">Your donation</a></strong> helps KDE serve those who are ignored by the industry, and bring marginalized users into the community so they can help the project grow for everyone.</p><h3 id="helping-public-institutions-adopt-free-software">Helping public institutions adopt free software</h3><p>The governments of the world are starting to realize that using public funds to lock themselves into proprietary closed-source software has been a strategic geopolitical mistake.</p><p>Free software is publicly owned, representing the safest option for governments that want full control over their machines and safety for their citizens’ data. But often the standards required for software approval by public institutions is very high, and their needs very specific.</p><p><strong><a href="https://kde.org/fundraisers/yearend2025/#top">Your donation</a></strong> helps KDE adapt our software to what public institutions require, clearing the way for your tax dollars to fund KDE, not some big foreign companies.</p><hr><p>Images "<i>Konqi opens the magic box</i>", "<i>"Katie and Konqi make software</i>",
<i>"Katie and Konqi take on the public administration</i>" CC-BY-SA-4.0 license by
<a href="https://www.arctaxia.ink/">Arctaxia</a>. "<i>Katie &amp; Konqi recyle</i>" CC-BY-SA-4.0
license by <a href="https://krita-artists.org/u/nezumi_cafune/summary">Nezumi Cafuné</a>.</p><h2 id="goodies">Goodies</h2><p>Don’t forget to download your goodies after you donated! Get digital badges, printable cards, and more.</p><p><img alt="" src="https://kde.org/fundraisers/yearend2025/badges.png"></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why the push for Agentic when models can barely follow a simple instruction? (290 pts)]]></title>
            <link>https://forum.cursor.com/t/why-the-push-for-agentic-when-models-can-barely-follow-a-single-simple-instruction/137154</link>
            <guid>45577080</guid>
            <pubDate>Tue, 14 Oct 2025 07:08:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://forum.cursor.com/t/why-the-push-for-agentic-when-models-can-barely-follow-a-single-simple-instruction/137154">https://forum.cursor.com/t/why-the-push-for-agentic-when-models-can-barely-follow-a-single-simple-instruction/137154</a>, See on <a href="https://news.ycombinator.com/item?id=45577080">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="text">
              <p>I have a bunch of file for different reason, you need to work with a structure, agents like to work in folder structure, here is one of my custom agent instruction.</p>
<p>Now i have a agents.md with more generic details for all agent type, architecture file for my folder structure, another one for tasks with templates and so on.</p>
<p>Now i start all my prompt with please search and read/multi-read all .md file<br>
(If i have the file system MCP installed, wich is free and godsend)</p>
<p>My md file has my high level planing, brainstorming files and other complementary file that i keep up to date so that when the AI is done ingesting all the md files he is prepped up to go dig code, write code and chew bubblegum… Mmmm might need some work on the last one. HE MUST CHEW BUBBLE GUM AND HE HAS NO MOUTH (Claptrap kiss no mouth reference)</p>
<p>You need to have them work on small vertical slice that can be built under a 100k token more or less, more than that the agent start to misbehave and you need to fire him.</p>
<p>I have custom architect for building plan, codeseeker, coder, and other more specialised agents.</p>
<p>Build your team, build a structure, in the last 2 month playing with agents and python i learnt more about coding than a full year high school. I dont just tell them to work i watch them work, see how they tick, i learn by comparison, read the code and when im not sure? grab a few related file, post them to chatgpt 5 and i ask him to tutor me or ask free agents to document the file and i ask question.</p>
<p>You dont ask a human to climb a tree even tho he look like a monkey, he might be able to, but still not his best skill. Learn the limit, try to build tools to overcome their limit, keep asking question, keep improving you managerial skill because workin with agent is to start managing a team. Imm full on on the managing part with only rudimentary coding knowledge, if you are a good coder you can have you agent working on something while you code and use inline code completion and im talking full on function completion.</p>
<p>Maybe codex is more for you, there is a lot of agent type, providers each one with their strenght and weakness, experiement.</p>
<p>I really hope you can find your tool, the one adapted to what you want and that you can grow into your tool too, then you become borg! Hmm might be premature on the borg thing. Eh oh well.</p>
<blockquote>
<p>You are a Deep Python Coding Agent, an expert AI specialized in implementing, refactoring, and maintaining Python codebases with absolute adherence to project standards. Your mission is to execute coding tasks exhaustively, ensuring every change is complete, tested, and documented, while strictly following the Agent Collaboration Charter and project rules. You NEVER write or execute code in terminals, REPLs, or interactive sessions—always edit files directly and run commands via the project’s standard workflow (e.g., python main.py, pytest --testmon -q).</p>
<p>Core Principles</p>
<p>Exhaustive Implementation: For any coding task, dive deep into all relevant code—read files, trace dependencies, analyze tests, and understand integrations. Implement complete solutions with no omissions, addressing edge cases, error handling, and performance.</p>
<p>No Terminal Code Execution: NEVER write code snippets in terminals or REPLs. All code changes must be made by editing files (e.g., via write_file, edit_file). Run tests and commands only through the project’s workflow.</p>
<p>Mandatory Documentation Updates: After EVERY change, update docs/TASKS.md (claim task as in_progress, mark completed), docs/WORKLOG.md (log what, why, how to run), and docs/DECISIONS.md (if assumptions made). This is NON-NEGOTIABLE—failure to update these will break the project process.</p>
<p>Task Continuity: Claim and complete tasks sequentially from docs/TASKS.md. Do not start new tasks until the current one is fully done (main runs, tests pass, docs updated). Roll through all pending tasks until none remain.</p>
<p>Quality Standards: Code must be PEP8-compliant, typed with type hints, readable, and free of TODOs. Run ruff/black/mypy on changes and fix issues. Prefer vertical slices that run end-to-end.</p>
<p>Testing Rigorousness: Add/update unit, integration, and e2e tests for every change. Use pytest --testmon -q during development for affected tests; run full pytest before marking done. No regressions allowed.</p>
<p>Deterministic and Complete: Provide exact file paths, final code, and commands. Never leave partial work—ensure python main.py runs without errors.</p>
<p>Operational Workflow</p>
<p>Context Gathering: Always start by reading docs/ARCHITECTURE.md, docs/TASKS.md, docs/DECISIONS.md, docs/WORKLOG.md, docs/reference/*, and recent Plan/ notes.<br>
Task Claiming: Append/update your entry in docs/TASKS.md (status=pending → in_progress) before starting work.</p>
<p>Implementation:<br>
-Read all related files (use read_file for up to 5 at once).<br>
-Use search_files and list_code_definition_names to understand structure and dependencies.<br>
-Edit files with complete changes (no partial writes).<br>
-Add/update tests in test files.<br>
-Run pytest --testmon -q incrementally; fix failures immediately.<br>
-Validation: Run python main.py to ensure no breaks. Run full pytest pre-commit.<br>
-Documentation: Update WORKLOG.md, DECISIONS.md (if needed), and set TASKS.md status=completed.<br>
-Next Task: If tasks remain, claim the next one and repeat.</p>
<p>Tool Usage Guidelines</p>
<p>-read_file/edit_file/write_file: Use for all code changes; provide complete file contents.<br>
-search_files: Regex search for patterns (e.g., function usages).<br>
-list_code_definition_names: Overview of classes/functions in directories.<br>
-Commands: Run via execute_command only for project workflow (e.g., pytest, main.py); never for code execution.</p>
<p>Response Standards<br>
-Be technical and precise; no fluff.<br>
-Structure responses with sections (e.g., Changes Made, Tests Added, Documentation Updates).<br>
-Use code references like function_name().<br>
-End with final status; no follow-ups unless blocked (then log in DECISIONS.md).</p>
<p>Constraints<br>
Focus on Python coding and project maintenance; adhere to AGENTS.md rules.<br>
If blocked, make least-surprising assumption, proceed, and log in DECISIONS.md.<br>
Definition of Done: main runs, tests pass, docs updated, no unresolved TODOs.</p>
<p>Runs: python main.py <img src="https://emoji.discourse-cdn.com/fluentui/check_mark.png?v=14" title=":check_mark:" alt=":check_mark:" loading="lazy" width="20" height="20"></p>
<p>Tests: pytest -q <img src="https://emoji.discourse-cdn.com/fluentui/check_mark.png?v=14" title=":check_mark:" alt=":check_mark:" loading="lazy" width="20" height="20"></p>
<p>Lint/type pass (if configured) <img src="https://emoji.discourse-cdn.com/fluentui/check_mark.png?v=14" title=":check_mark:" alt=":check_mark:" loading="lazy" width="20" height="20"></p>
<p>No TODOs in changed code <img src="https://emoji.discourse-cdn.com/fluentui/check_mark.png?v=14" title=":check_mark:" alt=":check_mark:" loading="lazy" width="20" height="20"></p>
<p>Updated WORKLOG/TASKS <img src="https://emoji.discourse-cdn.com/fluentui/check_mark.png?v=14" title=":check_mark:" alt=":check_mark:" loading="lazy" width="20" height="20"></p>
<p>Output format</p>
<p>FILES CHANGED (with full paths)</p>
<p>Final code blocks for each file</p>
<p>RUN &amp; TEST commands</p>
<p>NOTES/ASSUMPTIONS</p>
</blockquote>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why study programming languages (2022) (152 pts)]]></title>
            <link>https://people.csail.mit.edu/rachit/post/why-study-programming-languages/</link>
            <guid>45576623</guid>
            <pubDate>Tue, 14 Oct 2025 05:36:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://people.csail.mit.edu/rachit/post/why-study-programming-languages/">https://people.csail.mit.edu/rachit/post/why-study-programming-languages/</a>, See on <a href="https://news.ycombinator.com/item?id=45576623">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>This class is about the study of programming languages. Before we start, I want to perform two activities with folks here. First, I want us to answer two dumb questions:</p>
<ol>
<li>Why do we design new programming languages?</li>
<li>What is a programming language?</li>
</ol>
<p>While (2) seems to be the more fundamental question, we need to answer (1) to have any hope of even thinking about (2).</p>
<p>So first, why do we design programming languages? Every program that can be written, can be written in C or assembly or Java or any of the dozens of languages we already have. So why do we design new languages?</p>
<p>Common answers to this question will include words like abstraction, performance, convenience, usability etc. The problem with these answers is that apart from the measurable, they are all subjective, aesthetic choices. Convenience is a function of knowledge, familiarity, and community. Usability is similarly ill-defined and hard to measure. And of course, none of these metrics really predict which languages are widely used or popular.</p>
<p>Consider the thought of inventing a whole new natural language just to express a new concept clearly. Explaining the rules of grammar and construction would certainly be simpler than any natural language provides. And yet, we’d have the small, troubling problem that this knowledge would be almost entirely useless; we need to learn a commonly known natural language to communicate with people. And yet, this is something that we can often find ourselves doing with programming languages with the hope that the <em>concepts</em> learned in one language can be transferred into another; a world where being a polyglot is expected, not unusual.</p>
<p>Perhaps this points to a striking similarity between programming languages. As they evolve, they take features from each other and converge into one language singular. They’re only differences being the syntax used to represent them.</p>
<p>But of course, <em>knowledge</em> of a language is different from mastery. An expert C programmer’s bit twiddling is akin of magic while a Haskell programmers tower of abstractions will make mere mortals cower away in fear.</p>
<p>Here’s a hypothesis, the truth of which is unknown to me: we create programming languages to experience new ideas; ideas that would have remained inaccessible had we stayed with the old languages. Languages not just a form of expression but also a form of exploration. I do not create languages with the hope of expressing everything that was, but to express that which isn’t yet. It is the rare joy of a language designer to see their languages being used and abused to do something inconceivable to them.
I would point to dozens of historical examples of this, from ALGOL, to APL, every time a language has enabled expression and forward exploration, it has changed the course of computing.</p>
<p>Now that we have some bearing of why we create programming languages, we can try answering what exactly is a programming language.</p>
<p>Is a language just syntax? Surely not, since symbols don’t have any meaning to them. Perhaps it is the meaning of programs in the language, its <em>semantics</em> that defines a language. But its meaning in terms of what? The results of programs? The internal states of this execution algorithm? Perhaps a purely mathematical description, detached from anything resembling a computer?</p>
<p>Something resembling semantics of languages does seem to be a part of what defines a language but it is definitely not the full story. Ask a Python programmer why they like it and they’ll point to the amazing library ecosystem; ask a web developer why they like JavaScript, and they’ll wax poetic about Web 2.0; to a Haskell proponent, it’s type system, to a LISP programmer, macros, to a Go programmer, its concurrency model and so on. All of these characteristics define languages and yet have very little to do with semantics. So semantics alone do not define languages.</p>
<p>Perhaps a tentative definition is that a programming language is defined by its syntax, semantics, and ecosystem. The former two are easy to study formally; we can teach you the mathematical tools needed to understand them. But for the latter, we must turn back to our first question: why do we design new languages. It is true that both Python and Go have ample libraries and a concurrency model. However, the <em>exploratory power</em> of Python is enabled by the sheer quantity and quality of those libraries while Go’s power comes from its concurrency model.</p>
<p>Therefore, I give my last definition of what a programming language is: syntax, semantics, and ecosystem in support of exploration; which parts of semantics and ecosystems to care about defined by what tools of exploration they provide. The study of programming languages encompasses all of these: syntax, semantics, type systems, runtime systems, garbage collectors, debuggers, IDEs, syntax highlighting, error messages, compilers, and design. Lines drawn between these are arbitrary, mostly by people like me trying to publish papers.</p>
<blockquote>
<p>I encourage everyone to create the most absurd, implausible, and impractical languages. Chasing the measurable is often useful, expressing the expressible is insightful, but never forget the true goal of language design: to explore and create what isn’t.</p>
</blockquote>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Copy-and-Patch: A Copy-and-Patch Tutorial (104 pts)]]></title>
            <link>https://transactional.blog/copy-and-patch/tutorial</link>
            <guid>45576502</guid>
            <pubDate>Tue, 14 Oct 2025 05:14:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://transactional.blog/copy-and-patch/tutorial">https://transactional.blog/copy-and-patch/tutorial</a>, See on <a href="https://news.ycombinator.com/item?id=45576502">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
    <hr>
    
    
    
    <div id="toc">

<ul>
<li><a href="#_stencils">Stencils</a></li>
<li><a href="#_your_first_jit">Your First JIT</a></li>
<li><a href="#_try_it_yourself">Try It Yourself</a></li>
</ul>
</div>
<div id="preamble">
  <p><a href="https://arxiv.org/abs/2011.13127">Copy-and-patch Compilation</a> is a fascinating way of constructing a baseline JIT<a id="_sideref_1"></a><sup>[1]</sup>.  It permits incredibly fast runtime compilation of code fragments in a very easy to maintain fashion, requires barely any actual understanding of assembly code, and produces native code of sufficient quality to be within the same range as traditional, hand-written baseline JITs.
<span><a id="_sidedef_1"></a>[1]: Baseline JIT, as in a JIT whose goal is primarily to generate code quickly and gain performance by removing interpretation overhead than generating well optimized code itself.  Baseline JITs can be paired with optimizing JITs, like V8’s Liftoff baseline JIT for WASM allowing tiering up into V8’s Crankshaft optimizing JIT.</span></p>
<p>Copy-and-patch works by writing <em>stencils</em>, minimal C functions that implement the desired individual operations such that they compile to concatenate native code fragments. At JIT compile time, one can copy the pre-compiled fragment for each operation back-to-back, patching them change embedded constants or addresses as needed..</p>
<p>As an adventure into understanding how copy-and-patch works, our goal will be to create the function</p>
<div>
<pre><code data-lang="c"><span>int</span> <span>add_a_b</span><span>(</span><span>int</span> <span>a</span><span>,</span> <span>int</span> <span>b</span><span>)</span> <span>{</span>
    <span>return</span> <span>a</span> <span>+</span> <span>b</span>
<span>}</span></code></pre>
</div>
<p>But specialized at runtime to compute <code>1 + 2</code>. We’ll be doing this by first breaking it down into some bytecode-sized operations:</p>
<div>
<ol>
<li>
<p>const_int_reg1: <code>a = 1;</code></p>
</li>
<li>
<p>const_int_reg2: <code>b = 2;</code></p>
</li>
<li>
<p>add_int1_int2: <code>c = a + b;</code></p>
</li>
<li>
<p>return_int1: <code>return c;</code></p>
</li>
</ol>
</div>
<p>And to define our copy-and-patch JIT, we’ll take each of these and:</p>
<div>
<ol>
<li>
<p>Implement the operation in C with relocation holes to be later patched to form our stencil.</p>
</li>
<li>
<p>Compile the stencil into native code.</p>
</li>
<li>
<p>Copy-paste the native code back into a C file with functions to emit it to a buffer and patch any relocations.</p>
</li>
</ol>
</div>
<p>Then we can write our little JIT compilation engine to concatenate our stencils and execute the generated function. Let’s get started!</p>
</div>
<h2 id="_stencils">
Stencils
</h2> 
<p>Our first step is to define our stencils:</p>
<div>
<p>stencils.c</p>
<div>
<pre><code data-lang="c"><span>#include</span> <span>&lt;stdint.h&gt;</span><span>
</span>
<span>#define STENCIL_FUNCTION __attribute__((preserve_none))
</span>
<span>extern</span> <span>char</span> <span>cnp_value_hole</span><span>[</span><span>65536</span><span>];</span>
<span>extern</span> <span>void</span> <span>cnp_func_hole</span><span>(</span><span>void</span><span>)</span> <span>STENCIL_FUNCTION</span><span>;</span>

<span>#define STENCIL_HOLE(type) \
  (type)((uintptr_t)&amp;cnp_value_hole)
#define DECLARE_STENCIL_OUTPUT(...) \
  typedef void(*stencil_output_fn)(__VA_ARGS__) STENCIL_FUNCTION; \
  stencil_output_fn stencil_output = (stencil_output_fn)&amp;cnp_func_hole;
</span>
<span>STENCIL_FUNCTION</span> <span>void</span> <span>load_int_reg1</span><span>()</span> <span>{</span>
  <span>int</span> <span>a</span> <span>=</span> <span>STENCIL_HOLE</span><span>(</span><span>int</span><span>);</span>
  <span>DECLARE_STENCIL_OUTPUT</span><span>(</span><span>int</span><span>);</span>
  <span>stencil_output</span><span>(</span><span>a</span><span>);</span>
<span>}</span>

<span>STENCIL_FUNCTION</span> <span>void</span> <span>load_int_reg2</span><span>(</span><span>int</span> <span>a</span><span>)</span> <span>{</span>
  <span>int</span> <span>b</span> <span>=</span> <span>STENCIL_HOLE</span><span>(</span><span>int</span><span>);</span>
  <span>DECLARE_STENCIL_OUTPUT</span><span>(</span><span>int</span><span>,</span> <span>int</span><span>);</span>
  <span>stencil_output</span><span>(</span><span>a</span><span>,</span> <span>b</span><span>);</span>
<span>}</span>

<span>STENCIL_FUNCTION</span> <span>void</span> <span>add_int1_int2</span><span>(</span><span>int</span> <span>a</span><span>,</span> <span>int</span> <span>b</span><span>)</span> <span>{</span>
  <span>int</span> <span>c</span> <span>=</span> <span>a</span> <span>+</span> <span>b</span><span>;</span>
  <span>DECLARE_STENCIL_OUTPUT</span><span>(</span><span>int</span><span>);</span>
  <span>stencil_output</span><span>(</span><span>c</span><span>);</span>
<span>}</span>

<span>STENCIL_FUNCTION</span> <span>int</span> <span>return_int1</span><span>(</span><span>int</span> <span>a</span><span>)</span> <span>{</span>
  <span>return</span> <span>a</span><span>;</span>
<span>}</span></code></pre>
</div>
</div>
<p>We compile this with <code>clang -O3 -mcmodel=medium -c stencils.c</code>, and examine the generated code via <code>objdump -d -Mintel,x86-64 --disassemble --reloc stencils.o</code>.  This yields:</p>
<div>
<pre><code data-lang="nasm"><span>0000000000000000</span> <span>&lt;</span><span>load_int_reg1</span><span>&gt;</span><span>:</span>
   <span>0</span><span>:</span>	<span>41</span> <span>bc</span> <span>00</span> <span>00</span> <span>00</span> <span>00</span>    	<span>mov</span>    <span>r12d</span><span>,</span><span>0x0</span>
			<span>2</span><span>:</span> <span>R_X86_64_32</span>	<span>cnp_value_hole</span>
   <span>6</span><span>:</span>	<span>e9</span> <span>00</span> <span>00</span> <span>00</span> <span>00</span>       	<span>jmp</span>    <span>b</span> <span>&lt;</span><span>load_int_reg1</span><span>+</span><span>0xb</span><span>&gt;</span>
			<span>7</span><span>:</span> <span>R_X86_64_PLT32</span>	<span>cnp_func_hole</span><span>-</span><span>0x4</span>
   <span>b:</span>	<span>0</span><span>f</span> <span>1</span><span>f</span> <span>44</span> <span>00</span> <span>00</span>       	<span>nop</span>    <span>DWORD</span> <span>PTR</span> <span>[</span><span>rax</span><span>+</span><span>rax</span><span>*</span><span>1</span><span>+</span><span>0x0</span><span>]</span>

<span>0000000000000010</span> <span>&lt;</span><span>load_int_reg2</span><span>&gt;</span><span>:</span>
  <span>10</span><span>:</span>	<span>41</span> <span>bd</span> <span>00</span> <span>00</span> <span>00</span> <span>00</span>    	<span>mov</span>    <span>r13d</span><span>,</span><span>0x0</span>
			<span>12</span><span>:</span> <span>R_X86_64_32</span>	<span>cnp_value_hole</span>
  <span>16</span><span>:</span>	<span>e9</span> <span>00</span> <span>00</span> <span>00</span> <span>00</span>       	<span>jmp</span>    <span>1b</span> <span>&lt;</span><span>load_int_reg2</span><span>+</span><span>0xb</span><span>&gt;</span>
			<span>17</span><span>:</span> <span>R_X86_64_PLT32</span>	<span>cnp_func_hole</span><span>-</span><span>0x4</span>
  <span>1</span><span>b:</span>	<span>0</span><span>f</span> <span>1</span><span>f</span> <span>44</span> <span>00</span> <span>00</span>       	<span>nop</span>    <span>DWORD</span> <span>PTR</span> <span>[</span><span>rax</span><span>+</span><span>rax</span><span>*</span><span>1</span><span>+</span><span>0x0</span><span>]</span>

<span>0000000000000020</span> <span>&lt;</span><span>add_int1_int2</span><span>&gt;</span><span>:</span>
  <span>20</span><span>:</span>	<span>45</span> <span>01</span> <span>ec</span>             	<span>add</span>    <span>r12d</span><span>,</span><span>r13d</span>
  <span>23</span><span>:</span>	<span>e9</span> <span>00</span> <span>00</span> <span>00</span> <span>00</span>       	<span>jmp</span>    <span>28</span> <span>&lt;</span><span>add_int1_int2</span><span>+</span><span>0x8</span><span>&gt;</span>
			<span>24</span><span>:</span> <span>R_X86_64_PLT32</span>	<span>cnp_func_hole</span><span>-</span><span>0x4</span>
  <span>28</span><span>:</span>	<span>0</span><span>f</span> <span>1</span><span>f</span> <span>84</span> <span>00</span> <span>00</span> <span>00</span> <span>00</span> 	<span>nop</span>    <span>DWORD</span> <span>PTR</span> <span>[</span><span>rax</span><span>+</span><span>rax</span><span>*</span><span>1</span><span>+</span><span>0x0</span><span>]</span>
  <span>2</span><span>f:</span>	<span>00</span>

<span>0000000000000030</span> <span>&lt;</span><span>return_int1</span><span>&gt;</span><span>:</span>
  <span>30</span><span>:</span>	<span>44</span> <span>89</span> <span>e0</span>             	<span>mov</span>    <span>eax</span><span>,</span><span>r12d</span>
  <span>33</span><span>:</span>	<span>c3</span>                   	<span>ret</span></code></pre>
</div>
<p>(The NOP’s aren’t actually a part of the function, they’re just padding added so that each function starts with 16 byte alignment.)</p>
<p>For each of these stencils, we fill in a template to form our stencil generation library to use during JITing.</p>
<div>
<pre><code data-lang="c"><span>uint8_t</span> <span>cnp_stencil_</span><span>&lt;</span><span>OP</span><span>&gt;</span><span>_code</span><span>[]</span> <span>=</span> <span>{</span>
  <span>// Copy the bytes from the top of the function until the jmp.</span>
<span>};</span>

<span>uint8_t</span><span>*</span> <span>cnp_copy_</span><span>&lt;</span><span>OP</span><span>&gt;</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>)</span> <span>{</span>
  <span>const</span> <span>size_t</span> <span>stencil_size</span> <span>=</span> <span>sizeof</span><span>(</span><span>cnp_stencil_</span><span>&lt;</span><span>OP</span><span>&gt;</span><span>_code</span><span>);</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span><span>,</span> <span>cnp_stencil_</span><span>&lt;</span><span>OP</span><span>&gt;</span><span>_code</span><span>,</span> <span>stencil_size</span><span>);</span>
  <span>return</span> <span>stencil_start</span> <span>+</span> <span>stencil_size</span><span>;</span>
<span>}</span>

<span>// If any relocations exist for the stencil, fill in the values.</span>
<span>// If not, just skip writing this function.</span>
<span>void</span> <span>cnp_patch_</span><span>&lt;</span><span>OP</span><span>&gt;</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>,</span> <span>/* ... */</span> <span>)</span> <span>{</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span> <span>+</span> <span>/*relocation_offset*/</span><span>,</span> <span>&amp;</span><span>value</span><span>,</span> <span>/* relocation_size */</span><span>);</span>
<span>}</span></code></pre>
</div>
<p>So let’s get started!</p>
<div>
<p>cnp_stencils.c</p>
<div>
<pre><code data-lang="c"><span>#include</span> <span>&lt;stdint.h&gt;</span><span>
</span>
<span>uint8_t</span> <span>cnp_stencil_load_int_reg1_code</span><span>[]</span> <span>=</span> <span>{</span>
   <span>0x41</span><span>,</span> <span>0xbc</span><span>,</span> <span>0x00</span><span>,</span> <span>0x00</span><span>,</span> <span>0x00</span><span>,</span> <span>0x00</span><span>,</span> <span>// mov r12d,0x0</span>
<span>};</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_load_int_reg1</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>)</span> <span>{</span>
  <span>const</span> <span>size_t</span> <span>stencil_size</span> <span>=</span> <span>sizeof</span><span>(</span><span>cnp_stencil_load_int_reg1_code</span><span>);</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span><span>,</span> <span>cnp_stencil_load_int_reg1_code</span><span>,</span> <span>stencil_size</span><span>);</span>
  <span>return</span> <span>stencil_start</span> <span>+</span> <span>stencil_size</span><span>;</span>
<span>}</span>
<span>void</span> <span>cnp_patch_load_int_reg1</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>,</span> <span>int</span> <span>value</span><span>)</span> <span>{</span>
  <span>// 2: R_X86_64_32 cnp_value_hole  -&gt;  0x02 offset</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span> <span>+</span> <span>0x2</span><span>,</span> <span>&amp;</span><span>value</span><span>,</span> <span>sizeof</span><span>(</span><span>value</span><span>));</span>
<span>}</span>

<span>uint8_t</span> <span>cnp_stencil_load_int_reg2_code</span><span>[]</span> <span>=</span> <span>{</span>
   <span>0x41</span><span>,</span> <span>0xbd</span><span>,</span> <span>0x00</span><span>,</span> <span>0x00</span><span>,</span> <span>0x00</span><span>,</span> <span>0x00</span><span>,</span> <span>// mov r13d,0x0</span>
<span>};</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_load_int_reg2</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>)</span> <span>{</span>
  <span>const</span> <span>size_t</span> <span>stencil_size</span> <span>=</span> <span>sizeof</span><span>(</span><span>cnp_stencil_load_int_reg2_code</span><span>);</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span><span>,</span> <span>cnp_stencil_load_int_reg2_code</span><span>,</span> <span>stencil_size</span><span>);</span>
  <span>return</span> <span>stencil_start</span> <span>+</span> <span>stencil_size</span><span>;</span>
<span>}</span>
<span>void</span> <span>cnp_patch_load_int_reg2</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>,</span> <span>int</span> <span>value</span><span>)</span> <span>{</span>
  <span>// 12: R_X86_64_32 cnp_value_hole  -&gt;  0x12 - 0x10 base = 0x2</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span> <span>+</span> <span>0x2</span><span>,</span> <span>&amp;</span><span>value</span><span>,</span> <span>sizeof</span><span>(</span><span>value</span><span>));</span>
<span>}</span>

<span>uint8_t</span> <span>cnp_stencil_add_int1_int2_code</span><span>[]</span> <span>=</span> <span>{</span>
  <span>0x45</span><span>,</span> <span>0x01</span><span>,</span> <span>0xec</span><span>,</span> <span>// add r12d,r13d</span>
<span>};</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_add_int1_int2</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>)</span> <span>{</span>
  <span>const</span> <span>size_t</span> <span>stencil_size</span> <span>=</span> <span>sizeof</span><span>(</span><span>cnp_stencil_add_int1_int2_code</span><span>);</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span><span>,</span> <span>cnp_stencil_add_int1_int2_code</span><span>,</span> <span>stencil_size</span><span>);</span>
  <span>return</span> <span>stencil_start</span> <span>+</span> <span>stencil_size</span><span>;</span>
<span>}</span>
<span>// No patching needed</span>

<span>uint8_t</span> <span>cnp_stencil_return_int1_code</span><span>[]</span> <span>=</span> <span>{</span>
  <span>0x44</span><span>,</span> <span>0x89</span><span>,</span> <span>0xe0</span><span>,</span> <span>// mov eax,r12d</span>
  <span>0xc3</span><span>,</span>             <span>// ret</span>
<span>};</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_return_int1</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>)</span> <span>{</span>
  <span>const</span> <span>size_t</span> <span>stencil_size</span> <span>=</span> <span>sizeof</span><span>(</span><span>cnp_stencil_return_int1_code</span><span>);</span>
  <span>memcpy</span><span>(</span><span>stencil_start</span><span>,</span> <span>cnp_stencil_return_int1_code</span><span>,</span> <span>stencil_size</span><span>);</span>
  <span>return</span> <span>stencil_start</span> <span>+</span> <span>stencil_size</span><span>;</span>
<span>}</span>
<span>// No patching needed</span></code></pre>
</div>
</div>
<p>In a fully automated setup, all of this work will happen as part of the build system. The stencil compilation and transforming them into a library of copy functions and patch functions happens as part running <code>make</code>.</p>
<h2 id="_your_first_jit">
Your First JIT
</h2> 
<p>With our stencil library in place, we can use our code generation functions to build our runtime specialized adder:</p>
<div>
<p>cnp_jit.c</p>
<div>
<pre><code data-lang="c"><span>#include</span> <span>&lt;assert.h&gt;</span><span>
#include</span> <span>&lt;stdint.h&gt;</span><span>
#include</span> <span>&lt;stdio.h&gt;</span><span>
#include</span> <span>&lt;stdlib.h&gt;</span><span>
#include</span> <span>&lt;string.h&gt;</span><span>
#include</span> <span>&lt;sys/mman.h&gt;</span><span>
</span>
<span>//#include "cnp_stencils.h"</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_load_int_reg1</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>);</span>
<span>void</span> <span>cnp_patch_load_int_reg1</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>,</span> <span>int</span> <span>value</span><span>);</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_load_int_reg2</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>);</span>
<span>void</span> <span>cnp_patch_load_int_reg2</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>,</span> <span>int</span> <span>value</span><span>);</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_add_int1_int2</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>);</span>
<span>uint8_t</span><span>*</span> <span>cnp_copy_return_int1</span><span>(</span><span>uint8_t</span><span>*</span> <span>stencil_start</span><span>);</span>

<span>typedef</span> <span>int</span><span>(</span><span>*</span><span>jit_func</span><span>)()</span> <span>__attribute__</span><span>((</span><span>preserve_none</span><span>));</span>

<span>jit_func</span> <span>create_add_1_2</span><span>()</span> <span>{</span>
  <span>// Most systems mark memory as non-executable by default</span>
  <span>// and mprotect() to set memory as executable needs</span>
  <span>// to be run against mmap-allocated memory.  We start</span>
  <span>// by allocating it as read/write, and then switch it</span>
  <span>// to write/execute once we're done writing the code.</span>
  <span>uint8_t</span><span>*</span> <span>codedata</span> <span>=</span> <span>mmap</span><span>(</span><span>NULL</span><span>,</span> <span>256</span><span>,</span> <span>PROT_READ</span> <span>|</span> <span>PROT_WRITE</span><span>,</span>
      <span>MAP_PRIVATE</span> <span>|</span> <span>MAP_ANONYMOUS</span> <span>|</span> <span>MAP_POPULATE</span><span>,</span> <span>-</span><span>1</span><span>,</span> <span>0</span><span>);</span>
  <span>assert</span> <span>(</span><span>codedata</span> <span>!=</span> <span>MAP_FAILED</span><span>);</span>
  <span>jit_func</span> <span>ret</span> <span>=</span> <span>(</span><span>jit_func</span><span>)</span><span>codedata</span><span>;</span>

  <span>// Concatenate our program together, while saving the</span>
  <span>// locations that need to be patched.</span>
  <span>uint8_t</span><span>*</span> <span>load_int_reg1_location</span> <span>=</span> <span>codedata</span><span>;</span>
  <span>codedata</span> <span>=</span> <span>cnp_copy_load_int_reg1</span><span>(</span><span>codedata</span><span>);</span>
  <span>uint8_t</span><span>*</span> <span>load_int_reg2_location</span> <span>=</span> <span>codedata</span><span>;</span>
  <span>codedata</span> <span>=</span> <span>cnp_copy_load_int_reg2</span><span>(</span><span>codedata</span><span>);</span>
  <span>codedata</span> <span>=</span> <span>cnp_copy_add_int1_int2</span><span>(</span><span>codedata</span><span>);</span>
  <span>codedata</span> <span>=</span> <span>cnp_copy_return_int1</span><span>(</span><span>codedata</span><span>);</span>

  <span>// Overwrite the zero value placeholders with our intended</span>
  <span>// specialized values: 1 and 2.</span>
  <span>cnp_patch_load_int_reg1</span><span>(</span><span>load_int_reg1_location</span><span>,</span> <span>1</span><span>);</span>
  <span>cnp_patch_load_int_reg2</span><span>(</span><span>load_int_reg2_location</span><span>,</span> <span>2</span><span>);</span>

  <span>// Now that we're done writing, remove write access and</span>
  <span>// allow execution from this page instead.</span>
  <span>int</span> <span>rc</span> <span>=</span> <span>mprotect</span><span>(</span><span>ret</span><span>,</span> <span>256</span><span>,</span> <span>PROT_READ</span> <span>|</span> <span>PROT_EXEC</span><span>);</span>
  <span>if</span> <span>(</span><span>rc</span><span>)</span> <span>{</span>
    <span>perror</span><span>(</span><span>"mprotect"</span><span>);</span>
  <span>}</span>
  <span>return</span> <span>ret</span><span>;</span>
<span>}</span>

<span>int</span> <span>main</span><span>()</span> <span>{</span>
  <span>jit_func</span> <span>add_1_2</span> <span>=</span> <span>create_add_1_2</span><span>();</span>
  <span>int</span> <span>result</span> <span>=</span> <span>add_1_2</span><span>();</span>
  <span>printf</span><span>(</span><span>"JIT'd 1 + 2 = %d</span><span>\n</span><span>"</span><span>,</span> <span>result</span><span>);</span>
  <span>return</span> <span>0</span><span>;</span>
<span>}</span></code></pre>
</div>
</div>
<p>And now we can compile and run that!</p>
<div>
<pre>$ clang cnp_jit.c cnp_stencils.c -o cnp_jit
$ ./cnp_jit
JIT'd 1 + 2 = 3</pre>
</div>
<p>We’ve successfully built runtime code generation, while letting clang do the hard work of actually writing the assembly code, and our JIT compiler is just a bunch of memcpy calls!</p>
<h2 id="_try_it_yourself">
Try It Yourself
</h2> 
<p>Here’s a header to offer some macros to make declaring relocation holes easier:</p>
<div>
<p>cnp_stencils.h</p>
<div>
<pre><code data-lang="c"><span>#include</span> <span>&lt;stdint.h&gt;</span><span>
</span>
<span>#define STENCIL_FUNCTION __attribute__((preserve_none))
</span>
<span>extern</span> <span>void</span> <span>cnp_stencil_output</span><span>(</span><span>void</span><span>)</span> <span>STENCIL_FUNCTION</span><span>;</span>

<span>#define STENCIL_HOLE32(ordinal, type) \
  (type)((uintptr_t)&amp;cnp_small_value_hole_##ordinal)
#define STENCIL_HOLE64(ordinal, type) \
  (type)((uintptr_t)&amp;cnp_large_value_hole_##ordinal)
#define STENCIL_FN_NEAR(ordinal, type) \
  (type)&amp;cnp_near_func_hole_##ordinal
#define STENCIL_FN_FAR(ordinal, type) \
  ({ uint64_t _cnp_addr_as_int = (uint64_t)((uintptr_t)&amp;cnp_far_func_hole_##ordinal); \
  asm volatile("" : "+r" (_cnp_addr_as_int) : : "memory"); \
  (type)_cnp_addr_as_int; })
#define DECLARE_STENCIL_OUTPUT(...) \
  typedef void(*stencil_output_fn)(__VA_ARGS__) STENCIL_FUNCTION; \
  stencil_output_fn stencil_output = (stencil_output_fn)&amp;cnp_stencil_output;
</span>
<span>#define DECLARE_EXTERN_HOLES(ordinal) \
extern char cnp_large_value_hole_##ordinal[100000]; \
extern char cnp_small_value_hole_##ordinal[8]; \
extern void cnp_near_func_hole_##ordinal(void) STENCIL_FUNCTION; \
extern char cnp_far_func_hole_##ordinal[100000];</span></code></pre>
</div>
</div>
<p>(If you’re interested in the details of why these macros are the way they are, see the next post in the series!)</p>
<p>Then you can declare as complex of a stencil as you need:</p>
<div>
<p>complex_stencil.h</p>
<div>
<pre><code data-lang="c"><span>#include</span> <span>"cnp_stencils.h"</span><span>
</span>
<span>// Declare up to the maximum number of holes you need of one type</span>
<span>// in a function:</span>
<span>DECLARE_EXTERN_HOLES</span><span>(</span><span>1</span><span>);</span>
<span>DECLARE_EXTERN_HOLES</span><span>(</span><span>2</span><span>);</span>

<span>STENCIL_FUNCTION</span>
<span>void</span> <span>fused_multiply_add_sqrt_ifnotzero</span><span>()</span> <span>{</span>
  <span>uint32_t</span> <span>a</span> <span>=</span> <span>STENCIL_HOLE32</span><span>(</span><span>1</span><span>,</span> <span>uint32_t</span><span>);</span>
  <span>uint32_t</span> <span>b</span> <span>=</span> <span>STENCIL_HOLE32</span><span>(</span><span>2</span><span>,</span> <span>int32_t</span><span>);</span>
  <span>uint64_t</span> <span>c</span> <span>=</span> <span>STENCIL_HOLE64</span><span>(</span><span>1</span><span>,</span> <span>uint64_t</span><span>);</span>

  <span>uint64_t</span> <span>fma</span> <span>=</span> <span>a</span> <span>*</span> <span>b</span> <span>+</span> <span>c</span><span>;</span>

  <span>if</span> <span>(</span><span>fma</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>
    <span>void</span> <span>(</span><span>*</span><span>div_trap</span><span>)(</span><span>void</span><span>)</span> <span>=</span> <span>STENCIL_FN_NEAR</span><span>(</span><span>1</span><span>,</span> <span>void</span><span>(</span><span>*</span><span>)(</span><span>void</span><span>));</span>
    <span>div_trap</span><span>();</span>
  <span>}</span>

  <span>uint64_t</span> <span>(</span><span>*</span><span>sqrt</span><span>)(</span><span>uint64_t</span><span>)</span> <span>=</span> <span>STENCIL_FN_FAR</span><span>(</span><span>1</span><span>,</span> <span>uint64_t</span><span>(</span><span>*</span><span>)(</span><span>uint64_t</span><span>));</span>
  <span>uint64_t</span> <span>result</span> <span>=</span> <span>sqrt</span><span>(</span><span>c</span><span>);</span>

  <span>DECLARE_STENCIL_OUTPUT</span><span>(</span><span>uint64_t</span><span>);</span>
  <span>stencil_output</span><span>(</span><span>result</span><span>);</span>
<span>}</span></code></pre>
</div>
</div>
<p>Which just for completeness sake, compiles into:</p>
<div>
<pre>0000000000000000 &lt;fused_multiply_add_sqrt_ifnotzero&gt;:
   0:	50                   	push   rax
   1:	b8 00 00 00 00       	mov    eax,0x0
			2: R_X86_64_32	cnp_small_value_hole_2
   6:	b9 00 00 00 00       	mov    ecx,0x0
			7: R_X86_64_32	cnp_small_value_hole_1
   b:	0f af c8             	imul   ecx,eax
   e:	48 b8 00 00 00 00 00 	movabs rax,0x0
  15:	00 00 00
			10: R_X86_64_64	cnp_large_value_hole_1
  18:	48 01 c8             	add    rax,rcx
  1b:	75 05                	jne    22 &lt;fused_multiply_add_sqrt_ifnotzero+0x22&gt;
  1d:	e8 00 00 00 00       	call   22 &lt;fused_multiply_add_sqrt_ifnotzero+0x22&gt;
			1e: R_X86_64_PLT32	cnp_near_func_hole_1-0x4
  22:	48 b8 00 00 00 00 00 	movabs rax,0x0
  29:	00 00 00
			24: R_X86_64_64	cnp_far_func_hole_1
  2c:	48 bf 00 00 00 00 00 	movabs rdi,0x0
  33:	00 00 00
			2e: R_X86_64_64	cnp_large_value_hole_1
  36:	ff d0                	call   rax
  38:	49 89 c4             	mov    r12,rax
  3b:	58                   	pop    rax
  3c:	e9 00 00 00 00       	jmp    41 &lt;fused_multiply_add_sqrt_ifnotzero+0x41&gt;
			3d: R_X86_64_PLT32	cnp_stencil_output-0x4</pre>
</div>
    <!-- TODO: consider https://utteranc.es/ for in-page comments. -->
      <hr>
      
    </div></div>]]></description>
        </item>
    </channel>
</rss>