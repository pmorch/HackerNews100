<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 02 Mar 2025 14:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Mozilla flamed by Firefox fans after reneging on promises to not sell their data (133 pts)]]></title>
            <link>https://www.theregister.com/2025/03/02/mozilla_introduces_terms_of_use/</link>
            <guid>43229668</guid>
            <pubDate>Sun, 02 Mar 2025 12:13:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2025/03/02/mozilla_introduces_terms_of_use/">https://www.theregister.com/2025/03/02/mozilla_introduces_terms_of_use/</a>, See on <a href="https://news.ycombinator.com/item?id=43229668">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p>Mozilla this week asked Firefox users to abide by new Terms of Use, and updated its Privacy Notice as well as an FAQ – only to quickly issue a clarification that it isn’t actually claiming ownership of user data.</p>
<p>Mind you, the language of the <a target="_blank" rel="nofollow" href="https://www.mozilla.org/about/legal/terms/firefox/">Terms of Use</a> document <a target="_blank" rel="nofollow" href="https://web.archive.org/web/20250226211527/https://www.mozilla.org/en-US/about/legal/terms/firefox/">initially suggested</a> as much:</p>

<p>But Mozilla subsequently removed those terms, and insisted it was just necessary boilerplate.</p>
<p>“On Wednesday we shared that we’re introducing a new Terms of Use (TOU) and Privacy Notice for Firefox,” said Ajit Varma, veep of Firefox Product, on Friday in <a target="_blank" rel="nofollow" href="https://blog.mozilla.org/en/products/firefox/update-on-terms-of-use/#:~:text=TL%3BDR%20Mozilla%20doesn't,would%20usually%20understand%20that%20word.">an update</a> to the open source browser maker's initial <a target="_blank" rel="nofollow" href="https://blog.mozilla.org/en/products/firefox/firefox-terms-of-use/">announcement</a> of the new terms.</p>
<blockquote>

<p>Our intent was just to be as clear as possible about how we make Firefox work</p>
</blockquote>
<p>“Since then, we’ve been listening to some of our community’s concerns with parts of the TOU, specifically about licensing. Our intent was just to be as clear as possible about how we make Firefox work, but in doing so we also created some confusion and concern.”</p>
<p>Varma said its contractual language has been updated in an effort to assuage concerns. For one thing, it now states "this does not give Mozilla any ownership" of the data you put into Firefox to use it.</p>
<p>While much of the confusion can be written off as an unforced error in communication – legalese is often misunderstood – the developer's privacy commitment has changed, in its wording at least. The answer to "what is Firefox?" on Mozilla's FAQ page about its browser <a target="_blank" rel="nofollow" href="https://web.archive.org/web/20250130092351/https://www.mozilla.org/en-US/firefox/faq/">used to read</a>:</p>

<p>Now it <a target="_blank" rel="nofollow" href="https://www.mozilla.org/en-US/firefox/faq/">just says</a>:</p>

<p>In other words, Mozilla is no longer willing to commit to not selling your personal data to advertisers.</p>
<p>A related change was also <a href="https://connect.mozilla.org/t5/discussions/information-about-the-new-terms-of-use-and-updated-privacy/m-p/87949/highlight/true#M33725" rel="nofollow">highlighted</a> by mozilla.org commenter jkaelin, who linked direct to the <a target="_blank" rel="nofollow" href="https://github.com/mozilla/bedrock/blob/main/bedrock/firefox/templates/firefox/faq.html">source code</a> for that FAQ page. To answer the question, "is Firefox free?" Moz used to say:</p>

<p>Now it simply reads:</p>

<p>Again, a pledge to not sell people's data has disappeared. Varma insisted this is the result of the fluid definition of “sell” in the context of data sharing and privacy.</p>
<p>“Mozilla doesn’t sell data about you (in the way that most people think about ‘selling data’), and we don’t buy data about you,” he said. “We changed our language because some jurisdictions define ‘sell’ more broadly than most people would usually understand that word.”</p>
<ul>

<li><a href="https://www.theregister.com/2024/11/13/mozillas_firefox_browser/">Mozilla's Firefox browser turns 20. Does it still matter?</a></li>

<li><a href="https://www.theregister.com/2024/09/25/mozilla_noyb_privacy_complaint/">Campaigners claim 'Privacy Preserving Attribution' in Firefox does the opposite</a></li>

<li><a href="https://www.theregister.com/2024/06/21/firefox_127_private_window/">Privacy features lose their way in latest Firefox update</a></li>

<li><a href="https://www.theregister.com/2024/12/12/firefox_do_not_track/">Firefox ditches Do Not Track because nobody was listening anyway</a></li>

<li><a href="https://www.theregister.com/2024/09/02/zen_firefox_fork_alpha/">Zen Browser is a no-Google zone that offers tiling nirvana</a></li>
</ul>
<p>Though the TOU – and its connected <a target="_blank" rel="nofollow" href="https://www.mozilla.org/en-US/privacy/firefox/">privacy policy</a> and <a target="_blank" rel="nofollow" href="https://www.mozilla.org/en-US/about/legal/acceptable-use/">acceptable use rules</a> – are written in clear, plain English, are short and readable, and in our opinion contain no huge surprises, Mozilla's earlier choice of wording sparked a backlash on <a href="https://connect.mozilla.org/t5/discussions/information-about-the-new-terms-of-use-and-updated-privacy/m-p/87735#M33600" rel="nofollow">its own</a> forums, as well as <a href="https://www.reddit.com/r/firefox/comments/1iyuvjf/introducing_a_terms_of_use_and_updated_privacy/" rel="nofollow">on Reddit</a> and other places.</p>
<p>Following that outcry, Varma's announcement on Wednesday about the new fine print was updated to include this disclaimer:</p>

<p>One might argue the new terms are the result of a December management shakeup. That month it was <a href="https://blog.mozilla.org/en/mozilla/new-executives/" rel="nofollow">announced</a> three executives were joining Mozilla, including Varma, the author of the above announcements, as a Firefox veep after previously looking after WhatsApp for Meta, and before that, Gmail, and its related tools for Google. The other two were Anthony Enzor-DeMeo, senior veep of Firefox, who previously held top roles at Wayfair, Better, and Roofstock; and Girish Rao, SVP of infrastructure, who was previously at Warner Bros Discovery, EA, Cisco, and Equinix.</p>
<p>Then in early February, Mozilla <a target="_blank" rel="nofollow" href="https://blog.mozilla.org/en/mozilla/leadership/peter-rojas-svp-new-products/">gained</a> Peter Rojas as a senior veep of new products; he has an interesting history spanning from co-founding Engadget to holding senior roles at Meta and AOL to investing in AI model warehouse Hugging Face and others.</p>

    

<p>These high-level appointments were announced by Laura Chambers, who <a href="https://www.theregister.com/2024/02/09/mozilla_ceo_mitchell_baker_departs/">hopped aboard</a> as CEO a year ago; the hiring came the month after <a href="https://www.theregister.com/2024/11/06/mozilla_foundation_layoffs/">deep staffing cuts</a> at the Mozilla Foundation – the non-profit that overseas the Mozilla Corporation that develops Firefox and other things.</p>
<h3>Competition</h3>
<p>Sadly, it looks like the <a href="https://www.jwz.org/blog/2024/10/mozillas-ceo-doubles-down-on-them-being-an-advertising-company-now/" rel="nofollow">assessment</a> of Moz by former Netscape coder Jamie Zawinski was not far off the mark. He also links to his own earlier criticisms, none of which we can really fault.</p>
<p>This seems like a good time to remind readers that there are other browsers out there based on the Firefox codebase, including <a href="https://www.theregister.com/2021/11/04/waterfox_firefox_fork/">our own go-to Waterfox</a>, as well as the <a href="https://www.theregister.com/2024/09/02/zen_firefox_fork_alpha/">tiling Zen browser</a> which has now reached beta.</p>

        

<p>Others that happen not to press our buttons quite so much, but may appeal more to you, include the security-centric <a href="https://librewolf.net/" rel="nofollow">LibreWolf</a> and the customization-heavy <a href="https://floorp.app/en" rel="nofollow">Floorp</a>. Other projects showing less recent activity are <a href="https://pulsebrowser.app/" rel="nofollow">Pulse</a> and <a href="https://thorium.rocks/mercury" rel="nofollow">Mercury</a>. Still in active development, but based on older versions of the Firefox codebase, are <a href="https://www.palemoon.org/" rel="nofollow">PaleMoon</a> and <a href="https://www.basilisk-browser.org/" rel="nofollow">Basilisk</a>.</p>
<p>Most venerable of all is the continuing fork of the original all-in-one Netscape suite, <a href="https://www.seamonkey-project.org/" rel="nofollow">Seamonkey</a>. We're sad to note that its release engineer William Andrew Gianopoulos <a href="https://www.chesmorefuneralhome.com/obituaries/william-andrew-gianopoulos/20284/" rel="nofollow">died</a> in January.</p>

        

<p>Whether or not one agrees with the outrage over the TOU changes, the fact remains that <a target="_blank" href="https://www.theregister.com/2024/06/18/mozilla_buys_anonym_betting_privacy/">Mozilla is now</a> in the <a target="_blank" rel="nofollow" href="https://www.anonymco.com/">advertising business</a>. Use that information as you wish. ®</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[NIH.gov DNS servers down, making PubMed, BLAST, etc. unreachable (335 pts)]]></title>
            <link>https://www.nslookup.io/domains/www.nih.gov/dns-records/#authoritative</link>
            <guid>43229201</guid>
            <pubDate>Sun, 02 Mar 2025 10:50:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nslookup.io/domains/www.nih.gov/dns-records/#authoritative">https://www.nslookup.io/domains/www.nih.gov/dns-records/#authoritative</a>, See on <a href="https://news.ycombinator.com/item?id=43229201">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Crossing the uncanny valley of conversational voice (299 pts)]]></title>
            <link>https://www.sesame.com/research/crossing_the_uncanny_valley_of_voice</link>
            <guid>43227881</guid>
            <pubDate>Sun, 02 Mar 2025 06:13:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sesame.com/research/crossing_the_uncanny_valley_of_voice">https://www.sesame.com/research/crossing_the_uncanny_valley_of_voice</a>, See on <a href="https://news.ycombinator.com/item?id=43227881">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><h2><span>Crossing the<!-- --> </span><span>uncanny valley of</span><span>conversational voice</span></h2><div><p>February 27, 2025</p><p><span>Brendan Iribe</span>,<!-- --> <span>Ankit Kumar</span>, and the Sesame team</p></div></div><div><p><span>How do we know when someone truly understands us? It is rarely just our words—it is in the subtleties of voice: the rising excitement, the thoughtful pause, the warm reassurance.<p>Voice is our most intimate medium as humans, carrying layers of meaning through countless variations in tone, pitch, rhythm, and emotion.</p><p>Today’s digital voice assistants lack essential qualities to make them truly useful. Without unlocking the full power of voice, they cannot hope to effectively collaborate with us. A personal assistant who speaks only in a neutral tone has difficulty finding a permanent place in our daily lives after the initial novelty wears off.</p><p>Over time this emotional flatness becomes more than just disappointing—it becomes exhausting.</p></span></p><div><h3>Achieving voice presence</h3><p><span>At Sesame, our goal is to achieve “voice presence”—the magical quality that makes spoken interactions feel real, understood, and valued. We are creating conversational partners that do not just process requests; they engage in genuine dialogue that builds confidence and trust over time. In doing so, we hope to realize the untapped potential of voice as the ultimate interface for instruction and understanding.</span></p></div><div><h3>Key components</h3><div><ul><li>Emotional intelligence: reading and responding to emotional contexts.</li><li>Conversational dynamics: natural timing, pauses, interruptions and emphasis.</li><li>Contextual awareness: adjusting tone and style to match the situation.</li><li>Consistent personality: maintaining a coherent, reliable and appropriate presence.</li></ul></div></div></div><div><div><h3>We’re not there yet </h3><p><span>Building a digital companion with voice presence is not easy, but we are making steady progress on multiple fronts, including personality, memory, expressivity and appropriateness. This demo is a showcase of some of our work in conversational speech generation. The companions shown here have been optimized for friendliness and expressivity to illustrate the potential of our approach.</span></p></div><div><h3>Conversational voice demo</h3><p>1. Microphone permission is required. 2. Calls are recorded for quality review but not used for ML training and are deleted within 30 days. 3. By using this demo, you are agreeing to our<!-- --> <a data-sentry-element="NextLink" data-sentry-source-file="Link.tsx" data-sentry-component="Link" href="https://www.sesame.com/terms">Terms of Use<!-- --> </a> <!-- -->and<!-- --> <a data-sentry-element="NextLink" data-sentry-source-file="Link.tsx" data-sentry-component="Link" href="https://www.sesame.com/privacy">Privacy Policy</a>. 4. We recommend using Chrome (Audio quality may be degraded in iOS/Safari 17.5).</p></div></div><div><p>Technical post</p><h2><span>Conversational</span><span> speech generation</span></h2><div><p>Authors</p><p><span>Johan Schalkwyk</span>,<!-- --> <span>Ankit Kumar</span>,<!-- --> <span>Dan Lyth</span>,<!-- --> <span>Sefik Emre Eskimez</span>, <span>Zack Hodari</span>,<!-- --> <span>Cinjon Resnick</span>,<!-- --> <span>Ramon Sanabria</span>,<!-- --> <span>Raven Jiang</span></p></div><div><p>To create AI companions that feel genuinely interactive, speech generation must go beyond producing high-quality audio—it must understand and adapt to context in real time. Traditional text-to-speech (TTS) models generate spoken output directly from text but lack the contextual awareness needed for natural conversations. Even though recent models produce highly human-like speech, they struggle with the one-to-many problem: there are countless valid ways to speak a sentence, but only some fit a given setting. Without additional context—including tone, rhythm, and history of the conversation—models lack the information to choose the best option. Capturing these nuances requires reasoning across multiple aspects of language and prosody.</p><p>To address this, we introduce the Conversational Speech Model (CSM), which frames the problem as an end-to-end multimodal learning task using transformers. It leverages the history of the conversation to produce more natural and coherent speech. There are two key takeaways from our work. The first is that CSM operates as a</p><!-- --> <p><span>single-stage model</span>, thereby improving efficiency and expressivity. The second is our</p><!-- --> <p><span>evaluation suite</span>, which is necessary for evaluating progress on contextual capabilities and addresses the fact that common public evaluations are saturated.</p></div></div><div><h3>Background</h3><p>One approach to modeling audio with transformers is to convert continuous waveforms into discrete audio token sequences using tokenizers. Most contemporary approaches (<a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://arxiv.org/abs/2306.12925">[1]</a>,<!-- --> <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://arxiv.org/abs/2107.03312">[2]</a>) rely on two types of audio tokens:</p><ol><li><span>Semantic tokens</span>: Compact speaker-invariant representations of semantic and phonetic features. Their compressed nature enables them to capture key speech characteristics at the cost of high-fidelity representation.</li><li><span>Acoustic tokens</span>: Encodings of fine-grained acoustic details that enable high-fidelity audio reconstruction. These tokens are often generated using Residual Vector Quantization (RVQ)<!-- --> <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://arxiv.org/abs/2107.03312">[2]</a>. In contrast to semantic tokens, acoustic tokens retain natural speech characteristics like speaker-specific identity and timbre.</li></ol><p>A common strategy first models semantic tokens and then generates audio using RVQ or diffusion-based methods. Decoupling these steps allows for a more structured approach to speech synthesis—the semantic tokens provide a compact, speaker-invariant representation that captures high-level linguistic and prosodic information, while the second-stage reconstructs the fine-grained acoustic details needed for high-fidelity speech. However, this approach has a critical limitation; semantic tokens are a bottleneck that must fully capture prosody, but ensuring this during training is challenging.</p><p>RVQ-based methods introduce their own set of challenges. Models must account for the sequential dependency between codebooks in a frame. One method, the delay pattern (figure below)<!-- --> <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://arxiv.org/abs/2309.08804">[3]</a>, shifts higher codebooks progressively to condition predictions on lower codebooks within the same frame. A key limitation of this approach is that the time-to-first-audio scales poorly because an RVQ tokenizer with N codebooks requires N backbone steps before decoding the first audio chunk. While suitable for offline applications like audiobooks, this delay is problematic in a real-time scenario.</p><p>Example of delayed pattern generation in an RVQ tokenizer with 4 codebooks</p></div><div><h3>Conversational Speech Model</h3><p>CSM is a multimodal, text and speech model that operates directly on RVQ tokens. Inspired by the RQ-Transformer<!-- --> <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://arxiv.org/abs/2203.01941">[4]</a>, we use two autoregressive transformers. Different from the approach in<!-- --> <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://arxiv.org/abs/2410.00037">[5]</a>, we split the transformers at the zeroth codebook. The first<span> multimodal backbone</span> processes interleaved text and audio to model the zeroth codebook. The second <span>audio decoder</span> uses a distinct linear head for each codebook and models the remaining N&nbsp;–&nbsp;1 codebooks to reconstruct speech from the backbone’s representations. The decoder is significantly smaller than the backbone, enabling low-latency generation while keeping the model end-to-end.</p><p>CSM model inference process. Text (T) and audio (A) tokens are interleaved and fed sequentially into the Backbone, which predicts the zeroth level of the codebook. The Decoder then samples levels 1 through N&nbsp;–&nbsp;1 conditioned on the predicted zeroth level. The reconstructed audio token (A) is then autoregressively fed back into the Backbone for the next step, continuing until the audio EOT symbol is emitted. This process begins again on the next inference request, with the interim audio (such as a user utterance) being represented by interleaved audio and text transcription tokens.</p><p>Both transformers are variants of the Llama architecture. Text tokens are generated via a Llama tokenizer<!-- --> <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://arxiv.org/abs/2407.21783">[6]</a>, while audio is processed using Mimi, a split-RVQ tokenizer, producing one semantic codebook and N&nbsp;–&nbsp;1 acoustic codebooks per frame at 12.5&nbsp;Hz.<!-- --> <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://arxiv.org/abs/2410.00037">[5]</a> <!-- -->Training samples are structured as alternating interleaved patterns of text and audio, with speaker identity encoded directly in the text representation.</p></div><div><h3>Compute amortization</h3><p>This design introduces significant infrastructure challenges during training. The audio decoder processes an effective batch size of B&nbsp;×&nbsp;S and N codebooks autoregressively, where B is the original batch size, S is the sequence length, and N is the number of RVQ codebook levels. This high memory burden even with a small model slows down training, limits model scaling, and hinders rapid experimentation, all of which are crucial for performance.</p><p>To address these challenges, we use a compute amortization scheme that alleviates the memory bottleneck while preserving the fidelity of the full RVQ codebooks. The audio decoder is trained on only a random 1/16 subset of the audio frames, while the zeroth codebook is trained on every frame. We observe no perceivable difference in audio decoder losses during training when using this approach.</p><p>Amortized training process. The backbone transformer models the zeroth level across all frames (highlighted in blue), while the decoder predicts the remaining N&nbsp;–&nbsp;31 levels, but only for a random 1/16th of the frames (highlighted in green). The top section highlights the specific frames modeled by the decoder for which it receives loss.</p></div><div><h3>Experiments</h3><p><span>Dataset</span>: We use a large dataset of publicly available audio, which we transcribe, diarize, and segment. After filtering, the dataset consists of approximately one million hours of predominantly English audio.</p><p><span>Model Sizes</span>: We trained three model sizes, delineated by the backbone and decoder sizes:</p><ul><li><span>Tiny</span>: 1B backbone, 100M decoder</li><li><span>Small</span>: 3B backbone, 250M decoder</li><li><span>Medium</span>: 8B backbone, 300M decoder</li></ul><p>Each model was trained with a 2048 sequence length (~2 minutes of audio) over five epochs.</p></div><div><h3>Samples</h3><p>Paralinguistics</p><p>Sentences from<!-- --> <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://arxiv.org/abs/2402.08093">Base TTS</a></p><p>Foreign words</p><p>Sentences from<!-- --> <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://arxiv.org/abs/2402.08093">Base TTS</a></p><p>Contextual expressivity</p><p>Samples from Expresso, continuation after chime</p><p>Pronunciation correction</p><p>Pronunciation correction sentence is a recording, all other audio is generated.</p><p>Conversations with multiple speakers</p><p>Single generation using audio prompts from two speakers</p></div><div><h3>Evaluation</h3><p>Our evaluation suite measures model performance across four key aspects: faithfulness to text, context utilization, prosody, and latency. We report both objective and subjective metrics—objective benchmarks include word error rate and novel tests like homograph disambiguation, while subjective evaluation relies on a Comparative Mean Opinion Score (CMOS) human study using the <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://arxiv.org/abs/2308.05725">Expresso</a> <!-- -->dataset.</p></div><div><h3>Objective metrics</h3><p>Traditional benchmarks, such as word error rate (WER) and speaker similarity (SIM), have become saturated—modern models, including CSM, now achieve near-human performance on these metrics.</p><p>Objective metric results for Word Error Rate (top) and Speaker Similarity (bottom) tests, showing the metrics are saturated (matching human performance).</p><p>To better assess pronunciation and contextual understanding, we introduce a new set of phonetic transcription-based benchmarks.</p><ul><li><span>Text understanding through Homograph Disambiguation:</span> <!-- -->Evaluates whether the model correctly pronounced different words with the same orthography (e.g., “lead” /lɛd/ as in “metal” vs. “lead” /liːd/ as in “to guide”).</li><li><span>Audio understanding through Pronunciation Continuation Consistency:</span> <!-- -->Evaluates whether the model maintains pronunciation consistency of a specific word with multiple pronunciation variants in multi-turn speech. One example is “route” (/raʊt/ or /ruːt/), which can vary based on region of the speaker and context.</li></ul><p>Objective metric results for Homograph Disambiguation (left) and Pronunciation Consistency (right) tests, showing the accuracy percentage for each model’s correct pronunciation. Play.ht, Elevenlabs, and OpenAI generations were made with default settings and voices from their respective API documentation.</p><p>The graph above compares objective metric results across three model sizes. For Homograph accuracy we generated 200 speech samples covering 5 distinct homographs—lead, bass, tear, wound, row—with 2 variants for each and evaluated pronunciation consistency using<!-- --> <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://huggingface.co/facebook/wav2vec2-lv-60-espeak-cv-ft">wav2vec2-lv-60-espeak-cv-ft</a>. For Pronunciation Consistency we generated 200 speech samples covering 10 distinct words that have common pronunciation variants—aunt, data, envelope, mobile, route, vase, either, adult, often, caramel.</p><p>In general, we observe that performance improves with larger models, supporting our hypothesis that scaling enhances the synthesis of more realistic speech.</p></div><div><h3>Subjective metrics</h3><p>We conducted two Comparative Mean Opinion Score (CMOS) studies using the<!-- --> <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://arxiv.org/abs/2308.05725">Expresso</a> <!-- -->dataset to assess the naturalness and prosodic appropriateness of generated speech for CSM-Medium. Human evaluators were presented with pairs of audio samples—one generated by the model and the other a ground-truth human recording. Listeners rated the generated sample on a 7-point preference scale relative to the reference. Expresso’s diverse expressive TTS samples, including emotional and prosodic variations, make it a strong benchmark for evaluating appropriateness to context.</p><p>In the first CMOS study we presented the generated and human audio samples with no context and asked listeners to<!-- --> <span>“choose which rendition feels more like human speech.”</span> In the second CMOS study we also provide the previous 90 seconds of audio and text context, and ask the listeners to<!-- --> <span>“choose which rendition feels like a more appropriate continuation of the conversation.”</span> Eighty people were paid to participate in the evaluation and rated on average 15 examples each.</p><p>Subjective evaluation results on the Expresso dataset. No context: listeners chose<!-- --> <span>“which rendition feels more like human speech”</span> <!-- -->without knowledge of the context. Context: listeners chose<!-- --> <span>“which rendition feels like a more appropriate continuation of the conversation”</span> <!-- -->with audio and text context. 50:50 win–loss ratio suggests that listeners have no clear preference.</p><p>The graph above shows the win-rate of ground-truth human recordings vs CSM-generated speech samples for both studies. Without conversational context (top), human evaluators show no clear preference between generated and real speech, suggesting that naturalness is saturated. However, when context is included (bottom), evaluators consistently favor the original recordings. These findings suggest a noticeable gap remains between generated and human prosody in conversational speech generation.</p></div><div><h3>Open-sourcing our work</h3><p>We believe that advancing conversational AI should be a collaborative effort. To that end, we’re committed to open-sourcing key components of our research, enabling the community to experiment, build upon, and improve our approach. Our models will be available under an Apache 2.0 license.</p></div><div><h3>Limitations and future work</h3><p>CSM is currently trained on primarily English data; some multilingual ability emerges due to dataset contamination, but it does not perform well yet. It also does not take advantage of the information present in the weights of pre-trained language models.</p><p>In the coming months, we intend to scale up model size, increase dataset volume, and expand language support to over 20 languages. We also plan to explore ways to utilize pre-trained language models, working towards large multimodal models that have deep knowledge of both speech and text.</p><p>Ultimately, while CSM generates high quality conversational prosody, it can only model the text and speech content in a conversation—not the structure of the conversation itself. Human conversations are a complex process involving turn taking, pauses, pacing, and more. We believe the future of AI conversations lies in fully duplex models that can implicitly learn these dynamics from data. These models will require fundamental changes across the stack, from data curation to post-training methodologies, and we’re excited to push in these directions.</p></div><div><h3>Join us</h3><p>If you’re excited about building the most natural, delightful, and inspirational voice interfaces out there, reach out—we’re hiring. Check our<!-- --> <a target="_blank" rel="noopener noreferrer" data-sentry-element="NextLink" data-sentry-source-file="crossing_the_uncanny_valley_of_voice.tsx" href="https://jobs.ashbyhq.com/sesame">open roles</a>.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The NIH is being slashed and burned, not "reformed" (176 pts)]]></title>
            <link>https://www.sensible-med.com/p/the-nih-is-being-slashed-and-burned</link>
            <guid>43227180</guid>
            <pubDate>Sun, 02 Mar 2025 04:09:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sensible-med.com/p/the-nih-is-being-slashed-and-burned">https://www.sensible-med.com/p/the-nih-is-being-slashed-and-burned</a>, See on <a href="https://news.ycombinator.com/item?id=43227180">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><em><strong><span>Sensible Medicine continues to encourage criticism of our viewpoints. Vinay Prasad wrote recently that cutting </span><a href="https://www.sensible-med.com/p/cutting-nih-indirects-is-sensible" rel="">NIH funding was Sensible Medicine</a><span>. Dr. Leslie Bienen offers this rebuttal. It is an excellent read. JMM</span></strong></em></p><p>By Leslie Bienen </p><p><span>Since the NIH </span><a href="https://grants.nih.gov/grants/guide/notice-files/NOT-OD-25-068.html" rel="">order</a><span> on February 7</span><sup>th</sup><span> capping indirect funds to grantees at 15%, the “outrage machine” that is X is filled with mostly fact-free criticisms of the NIH and academic research. I explain here why I think the criticisms are flawed, and why a blanket 15% cap is a terrible idea.</span></p><p><strong>Any cap should be blocked because only Congress can legally change NIH funding formulas.</strong></p><p><span>On February 21</span><sup>st</sup><span> a federal judge </span><a href="https://www.nytimes.com/2025/02/21/us/politics/judge-nih-medical-research-cuts-universities.html?smid=em-share" rel="">extended a temporary stay </a><span>of the February 7</span><sup>th</sup><span> policy, as she should have. Many have debated the “right” number for capping indirect rates and whether it is 15, 25% or some other number. But few mention that the current cap is illegal. In 2017 Trump similarly tried and failed to impose a 10% cap on NIH indirect rates, and Congress responded with several appropriations bills specifying that only Congress can change formulas for determining indirect costs. S</span><a href="https://www.acenet.edu/Documents/AAU-ACE-APLU-Complaint-NIH-Funding.pdf" rel="">everal lawsuits</a><span> detail why NIH can’t change indirects itself, including that “Congress exercised its constitutional power of the purse and forbade the executive from expending appropriated funds” and that “the Guidance does not even acknowledge the statutes that expressly prohibit NIH from taking this step.” If Congress wants to change the cap, let them do it legally.</span></p><p><strong>Claims that 1) NIH funds mostly weak research, 2) cutting budgets will reduce the amount of weak research funded, or 3) NIH spends lots of money on DEI trainings are unsupported by evidence.</strong></p><ol><li><p>Finding a weak NIH-funded study and tweeting it does not prove that NIH funds mostly bad research. I can cite thousands of examples of excellent research funded by NIH—which would also be cherry picking. We do not have robust analyses of quality of NIH-funded studies or reliable metrics to assess strength of a funded study. In short, no one knows how much of NIH-funded research is weak.</p></li><li><p><span>There is no evidence that changing the </span><em>amount</em><span> of money dispensed will magically change how good the funded research is. We could end up with little research funded, all of it weak. To improve quality of funded research requires changing criteria or creating mechanisms that prioritize innovation, or replicability, or creating more randomized trial mechanisms.</span></p></li><li><p><span>The NIH data book shows exactly what the agency spends its </span><a href="https://report.nih.gov/nihdatabook/" rel="">47B budget</a><span> on: ~ 60,000 research grants plus intramural research and R and D awards and research centers. In 2023 approximately 3.3B went to “other” or “trainings”, or ~7% of the total. About 22% went to running the NIH (study sessions, salaries, etcetera).</span></p></li></ol><p><strong>The idea that universities are not “accountable” to the NIH for how they spend money is incorrect.</strong></p><p>Universities cannot spend indirect funds on anything they choose; the list of expenses is approved by the government and is renegotiated every few years. I have written thousands of pages of budget reports to NIH and in my experience, money, including salary money, is extremely closely accounted for. In addition, universities already prohibit luxury expenditures such as flying first class, as does the NIH, which requires medical waivers to fly Economy Plus.</p><p><strong>If Congress places an overall cap, it should be higher than 15%.</strong></p><p><span>In 1994, the Federal government capped administrative rates at 26%. That cap is still in effect. What fluctuates per university is the rate that goes to facilities. If universities spend more of their </span><em>own budget</em><span> on facilities devoted to research, then their facilities rate rises, in order to incentivize university spending on research building and equipment. This is why large wealthy research universities (somewhat counterintuitively) tend to have higher indirect rates than state universities that build fewer labs, e.g., or buy less new equipment.</span></p><p><span>To understand why 15% will result in major reductions in research, take Harvard’s rate of 69% as an example. Their facilities rate is 43% and the administrative rate is 26%, equaling 69%. The new 15% cap </span><em>would include both those numbers</em><span>. Thus, Harvard would now have 21% of the money for research they had with a 69% cap. Jeffrey Flier, former Dean of Harvard Medical School,</span><a href="https://www.sensible-med.com/p/a-conversation-with-professor-jeffrey" rel=""> estimated</a><span> this as a loss of ~$70 million at Harvard’s current level of NIH support. For many universities, even wealthy ones, this size budget hole is unfillable without significantly reducing research.</span></p><p><strong>Lower-endowment state universities will suffer disproportionately.</strong></p><p>Big state universities such as UCSF, Univ. of California, Berkeley, University of Illinois, and UCLA will be the hardest hit by lowering indirect rates so steeply. Smart policy reforms at NIH should protect state university research programs because they allow lower-income students access and exposure to careers and top scientists. Many of these universities are located in the South and Midwest and are vital to local economies and bring clinical trials and high-tech research labs which provide cutting edge health-care in places that would otherwise not have it.</p><p><strong>These cuts will undermine the US’s position as the dominant world leader in biomedical innovation.</strong></p><p><span>The USA is a global leader in biomedical research, partly because the NIH is the largest biomedical research funder in the world and a substantial percentage of biomedical innovations emerge from academic research. A </span><a href="https://pmc.ncbi.nlm.nih.gov/articles/PMC8552459/#:~:text=Overall%2C%20academic%20inventors%20or%20founders,50%25%20of%20prostate%20cancer%20medicines." rel="">2020 analysis </a><span>found that academic researchers contributed to 37% of cancer medicines discovered from 2010-2019 and 29% of antiviral drugs such as for HIV and hepatic cancers. The National Science Board </span><a href="https://www.nsf.gov/nsb/news/news_summ.jsp?cntn_id=303449" rel="">reported</a><span> that half of basic research in the USA is done in universities. A </span><a href="https://www.bio.org/press-release/licensing-academic-patents-contributed-19-trillion-us-economy-supported-65-million" rel="">2022 report</a><span> from the Biotechnology Innovation Organization noted </span><em>academic patents alone</em><span> contributed $1.9 trillion and 6.5 million jobs to the US economy. The NIH </span><a href="https://www.nih.gov/about-nih/what-we-do/impact-nih-research/serving-society/direct-economic-contributions#:~:text=With%20an%20annual%20budget%20of,%2492.89%20billion%20in%20economic%20activity." rel="">estimates</a><span> its 47B budget generates 97B to the US economy. Claims that this number could be higher are not supported by evidence and do not negate that 97B is a lot of money.</span></p><p><span>There is evidence, however, that the US is slipping as a leader in biomedical research. China now leads the world in new patents for pharmaceuticals. American scientists have been awarded </span><a href="https://www.statista.com/statistics/262896/nobel-prize-laureates-in-medicine-by-nationality/" rel="">106 of the total 229</a><span> Nobel Prizes in Medicine or Physiology since the prize’s founding in 1901 but the UK now leads the world (31 total) after correcting for population. We should be shoring up our position not cheering as it plummets.</span></p><p><strong>Arguments that these chaotic and destructive changes will lead to a future better NIH are unconvincing given how changes were accomplished.</strong></p><p><span>It would be possible to improve the NIH, and research quality, without gutting academic research or laying off </span><a href="https://nymag.com/intelligencer/article/how-many-federal-employees-fired-jobs-cut-trump-doge.html" rel="">1800 people</a><span> solely because they were recently hired or promoted. Instead, the last few weeks’ chaos will make future meaningful reform </span><em>more</em><span> difficult as Dr. Jay Bhattacharya, whom I have </span><a href="https://www.norfolkgroup.org/" rel="">worked with</a><span> and greatly respect, will now inherit a demoralized and haphazardly reduced workforce. The recent layoffs are also penny wise and pound foolish as mostly younger and healthier people, the cheapest to employ and insure, are now gone.</span></p><p>It is hard not to conclude that these changes were a slash and burn operation or, more aptly, an operation to remove a nose to spite a face. Sadly, the face that is being spited is the American public’s and, to the extent that American innovation drives global biomedical research, the world’s.</p><p><em><strong><span>Leslie Bienen is a veterinarian, writer, and editor who researches and writes about disease, health policy, and topics that catch her fancy. She has published in The Atlantic, The NYT, Slate, USA Today, UnHerd, City Journal, Persuasion, WSJ, and elsewhere. Here is a </span><a href="https://lesliebienen.substack.com/" rel="">link to her Substack</a><span>. </span></strong></em></p><p><strong>She reports working with academic scientists across many disciplines on grants to federal agencies and philanthropic organizations.</strong></p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Mozilla site down due to "overdue hosting payments" (146 pts)]]></title>
            <link>https://linuxmom.net/@vkc/114089626244932902</link>
            <guid>43226089</guid>
            <pubDate>Sun, 02 Mar 2025 01:20:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://linuxmom.net/@vkc/114089626244932902">https://linuxmom.net/@vkc/114089626244932902</a>, See on <a href="https://news.ycombinator.com/item?id=43226089">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[I'm done with coding (140 pts)]]></title>
            <link>https://www.neelc.org/2025/03/01/im-done-with-coding/</link>
            <guid>43225901</guid>
            <pubDate>Sun, 02 Mar 2025 00:49:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.neelc.org/2025/03/01/im-done-with-coding/">https://www.neelc.org/2025/03/01/im-done-with-coding/</a>, See on <a href="https://news.ycombinator.com/item?id=43225901">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>In my high school days, I was a huge server and networking person. My homelab was basically my identity, and not even a good one: consumer-level networking gear running Tomato and a then-7-year-old homebuilt desktop PC running FreeBSD.</p>



<p>Then I joined <a href="https://engineering.nyu.edu/">NYU’s Tandon School of Engineering</a> for Computer Science. It was a full 180 into software engineering. I didn’t just code for assignments, I started with <a href="https://github.com/neelchauhan/TorNova">toy</a> <a href="https://github.com/neelchauhan/OnionLauncher">projects</a> and went to <a href="https://gitlab.torproject.org/tpo/core/tor/-/commits/main?author=Neel%20Chauhan">major Tor contributions</a> writing very complex patches, had two internships and ultimately a job at Microsoft.</p>



<p>Primarily due to “Big Data” experience at NYU CUSP, Microsoft placed me on the <em><a href="https://www.microsoft.com/en-us/microsoft-viva/insights">Viva Insights</a></em> team. I’ve always hated the product, feeling it was unnecessary surveillance. I wanted out.</p>



<p>In fact, the disdain of Viva Insights was big enough to make me lose passion for coding and get into obsessive browsing and shopping because facing the music of working on a surveillance product would bother me even more. Open source work outside of package maintenance went to zero.</p>



<p>I’ve tried to discuss this with my mom, and she kept telling me how “lucky” I am for working at Microsoft saying “it’s big tech” and “you’re neurodivergent” and “you won’t survive at a smaller company.” She even bought into the marketing material telling me how it’s “not surveillance.”</p>



<p>I’ve decided that in the shitty job market, it’s not worth being a software engineer even if I make much less. Part of it is being “specialized” in over-glorified surveillance so even if I change employers, what’s the guarantee I won’t be working on another surveillance product. Assuming I can even get another job.</p>



<p>In fact, I’ll just live off dividend income and try to get my new IT startup <a href="https://www.fourplex.net/">Fourplex</a> off the ground. Sure, I won’t be able to buy shiny homelab equipment as often as I did in the past, but I at least have the guarantee I’m not working on an unethical product.</p>



<p>While six figures is certainly <em>nice</em>, it’s only nice if it’s ethically done. I’d much rather flip burgers or bag groceries than work on surveillance for six figures. After all, Edward Snowden had a “stable” federal government job (not so stable now thanks to “DOGE”) and he gave it up to stand up for the right to privacy.</p>



<p>And I care more for my values than the name or salary. It’s not like I use Windows at home, I haven’t since 2012. I kept self-hosting email <em>despite</em> having worked at Microsoft 365 and <a href="https://bgp.he.net/dns/neelc.org">still do even now</a>. And I sacrificed job performance for my values of strong privacy.</p>



<p>Little did I know that my father (who was previously a big Big Data and AI advocate) would come out to hate Viva Insights. He says it’s “bullshit” and nobody uses it. Even when I worked at Microsoft I <em>never</em> used it. Not even once. It’s bloatware. Microsoft is 100% better off porting Office apps to Linux (despite me using a Mac now) or beefing up cybersecurity.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The early days of Linux (2023) (335 pts)]]></title>
            <link>https://lwn.net/Articles/928581/</link>
            <guid>43225686</guid>
            <pubDate>Sun, 02 Mar 2025 00:18:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lwn.net/Articles/928581/">https://lwn.net/Articles/928581/</a>, See on <a href="https://news.ycombinator.com/item?id=43225686">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<blockquote>
<b>LWN.net needs you!</b>
<p>
Without subscribers, LWN would simply not exist.  Please consider
       <a href="https://lwn.net/Promo/nst-nag2/subscribe">signing up for a subscription</a> and helping
       to keep LWN publishing.
</p></blockquote>

<p>
My name is Lars Wirzenius, and I was there when Linux started.  Linux
is now a global success, but its beginnings were rather more humble.
These are my memories of the earliest days of Linux, its creation, and the
start of its path to where it is today.
</p>

<p>
I
started my <a href="https://www.helsinki.fi/en/faculty-science/faculty/computer-science">computer science studies at the University
of Helsinki</a> in the fall of&nbsp;1988, and met Linus Torvalds, who was the
other new Swedish speaking student in computer science that year. Toward
the end of that first year, we had gotten access to a Unix server, and I
accidentally found <a href="https://en.wikipedia.org/wiki/Usenet">Usenet</a>, the discussion 
system, by mistyping <tt>rm</tt> as <tt>rn</tt>, the Usenet reader. I told
Linus about it and we spent way too much time exploring this.
</p>

<p>After the first year, we both went away to do the mandatory military
service, though in different places. We returned to our university
studies in the fall of&nbsp;1990, and both took the course on C and Unix
programming, which included a fair bit of theory of the Unix kernel
architecture as well. This led to us reading about other operating
system kernels, such as <a href="https://en.wikipedia.org/wiki/QNX">QNX</a> and
<a href="https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs">Plan&nbsp;9</a>. Linus
and I discussed with some enthusiasm how an operating system
should be built correctly. We had all the overconfidence of
20-year-old second-year university students. Everyone is better off
that this wasn't recorded for posterity.
</p>

<p>In January&nbsp;1991, Linus bought his first <a href="https://en.wikipedia.org/wiki/IBM_PC_compatible">PC</a> from a local
shop 
that assembled computers from parts. The PC had a&nbsp;386 CPU, which was
relatively 
fancy at that time, because
Linus wanted to explore multitasking. Also, since he came from a
<a href="https://en.wikipedia.org/wiki/Sinclair_QL">Sinclair QL</a>
with a&nbsp;32-bit Motorola&nbsp;68008 CPU, he wanted a&nbsp;32-bit CPU, and did
not want to step down to a&nbsp;16-bit one, so a&nbsp;286 was not an option.
Linus's first PC had a whopping&nbsp;4 megabytes of RAM and a hard drive.
</p>

<p>He got a copy of the game Prince of Persia, which occupied most
of his spare time for the next couple of months. He later also bought
a copy of <a href="https://en.wikipedia.org/wiki/Minix">MINIX</a>, because after
using Unix at the university, he wanted something like that at home as
well.
</p>

<h4>As and Bs</h4>

<p>After finishing the game, Linus started learning Intel assembly
language. One day he showed me a program that did multitasking. One
task or thread would write a stream of the letter "A" on the screen, the
other "B"; the context switches were visually obvious when the stream
of As became Bs. This was the first version of what would later become
known as the Linux kernel.
</p>

<p>Linus would later expand the program, and write most of it in C.
During this time, late spring of&nbsp;1991, I wrote an implementation of the C
<a href="https://linux.die.net/man/3/sprintf"><tt>sprintf()</tt></a> function
for him, as he hadn't yet learned how to write functions with variable
argument lists. I wanted to spare him the pain of having a different
function for every type of value to write out. The core of this code is
still in the kernel, <a href="https://elixir.bootlin.com/linux/v6.3-rc6/source/lib/vsprintf.c#L2911">as
<tt>snprintf()</tt></a>. 
</p>

<p>As time went on, Linus made his fledgling kernel better and kept
implementing new things. After a while, he had drivers for the keyboard and
the serial port, emulation of <a href="https://en.wikipedia.org/wiki/VT100">VT100</a> terminal escape sequences
for the screen, and could use it to dial via a modem to the university to
read Usenet from home. Science fiction!
One day, Linus accidentally attempted to use his hard drive to dial the
university, resulting in his master boot sector starting with
<a href="https://en.wikipedia.org/wiki/Hayes_AT_command_set">"ATDT"</a> and the
university modem-pool phone number. After recovering from this, he
implemented file permissions in his kernel.
</p>

<p>In August&nbsp;1991, Linus mentioned his new kernel in <a href="https://en.wikipedia.org/wiki/History_of_Linux#The_creation_of_Linux">public
for the first time</a>, in the <tt>comp.os.minix</tt> newsgroup. This
included the phrase "<q>I'm doing a (free) operating system (just a hobby,
won't be big and professional like gnu)</q>". Such humility.
The system was initially called Freax. A few weeks later, 
Linus asked Ari Lemmke, one of
the administrators of <tt>ftp.funet.fi</tt>, to do an upload of the first
tar archive. Ari chose the name Linux.  The initial
version still contains the original name embedded in <a href="https://elixir.bootlin.com/linux/0.01/source/kernel/Makefile">one of the
source files</a>.
</p>

<p>During this time, people were interested in trying out this new
thing, so Linus needed to provide an installation method and
instructions. Since he only had one PC, he came to visit to
install it on mine. Since his computer had been used to develop Linux,
which had simply
grown on top of his Minix installation, it had never actually been
installed before. Thus, mine was the first PC
where Linux was ever installed. While this was happening, I was taking
a nap, and I recommend this method of installing Linux: napping, while
Linus does the hard work.
</p>

<p>The first releases of Linux used a license that forbade commercial
use. Some of the early contributors suggested a change to a free-software
license. In the fall of&nbsp;1991, Richard Stallman visited 
Finland and I took Linus to a talk given by Stallman. This, the
pressure from contributors, and my nagging eventually convinced Linus
to choose the GNU GPL license instead, in early&nbsp;1992.
</p>

<p>Over the Christmas break, Linus implemented virtual memory in Linux.
This made Linux a much more practical operating system on cheap
machines with little memory.
</p>

<h4>1992</h4>

<p>The year&nbsp;1992 started with the famous <a href="https://en.wikipedia.org/wiki/Tanenbaum%E2%80%93Torvalds_debate">debate with Andrew
Tanenbaum</a>, who is a university professor and the author of MINIX. He had
some opinions about Linux and its architecture. Linus had opinions on
MINIX. The debate has been described as a flame war, but was actually
rather civil in hindsight.
</p>

<p>More importantly for the future success of Linux was that the X11
system was ported to it, making&nbsp;1992 the year of the Linux desktop.
</p>

<p>I had chosen to contribute on the community side, rather than to the
kernel directly, and helped answer questions, write documentation, and
such. I also ran a short-lived newsletter about Linux, which is mainly
interesting for publishing the <a href="https://liw.fi/linux-news/issue03/">first ever interview with
Linus</a>. The newsletter was effectively replaced by the
<tt>comp.os.linux.announce</tt> newsgroup.
</p>

<p>The first Linux distribution was also started in&nbsp;1992: 
<a href="https://en.wikipedia.org/wiki/Softlanding_Linux_System">Softlanding
Linux System</a> or SLS. The next year, SLS morphed into Slackware, which
inspired Ian Murdock to start Debian in&nbsp;1993, in order to explore a
more community-based development structure. A few other distributions would
follow in the 
years to come.
</p>

<p>In&nbsp;1993, both Linus and I got hired as teaching assistants at the
university. We got to share an office. That room had a PC, which Linus
took over, and used for Linux development. I was happy with a DEC
terminal for Usenet access.
</p>

<p>One day, Linus was bored and the PC at work felt slow. He spent the
day rewriting the Linux kernel command-line parser in assembly
language, for speed. (That was, of course, quite pointless, and the
parser would later be rewritten again in C, for portability. Its speed
does not matter.) A couple of years later, he spent days playing
Quake, ostensibly to stress-test kernel memory management, although
that was with a newer PC. Much fun was had in that room, and there were no
pranks 
whatsoever. None at all.
</p>

<p>At some point, Linux gained support for Ethernet and TCP/IP. That meant
one could read Usenet without having to use a modem. Alas, early Linux
networking code was occasionally a little rough, having been written
from scratch. At one point, Linux would send some broken packets that
took down all of the Sun machines on the network. As it was difficult to get
the Sun kernel fixed, Linux was banned from the university network
until its bug was fixed. Not having Usenet access from one's desk is a
great motivator.
</p>

<h4>1.0</h4>

<p>In the spring of&nbsp;1994 we felt that Linux was done. Finished. Nothing
more to add. One could use Linux to compile itself, to read Usenet, and
run many copies of the <tt>xeyes</tt> program at once.  We
decided to release version&nbsp;1.0 and arranged a <a href="https://www.youtube.com/watch?v=qaDpjlFpbfo">release event</a>. The
Finnish computer press was invited, and a TV station even sent a crew. Most
of the event consisted of ceremonially compiling Linux&nbsp;1.0 in the
background, while Linus and others spoke about what Linux was and what it
was good for. Linus explained that commercial Unix for a PC was so
expensive that it was easier to write your own.
</p>

<p>In&nbsp;1995 Linus and I did a software engineering course at the university,
which mostly consisted of a large practical project. This was built on top
of Linux, of course. I insisted that a version-control system be used. I
had witnessed students in earlier courses do the shouting kind of version
control: the students shared a source tree over NFS and shouted "I'm
editing this file" when they were changing something.  This did not seem
like an effective method to me, so I insisted on <a href="https://en.wikipedia.org/wiki/Concurrent_Versions_System">CVS</a>,
which I'd just learned about. This experience is why Linus dislikes CVS and
for years refused to use any version control beyond uploading tar balls to
FTP sites.
</p>

<p>That year was also when Linux was first ported to a new architecture
by Linus. He'd been given a DEC Alpha machine. I would later get the
machine to use as a terminal for reading Usenet. Other people ported
Linux to other architectures, but that did not result in me getting any
more machines to read Usenet on.
</p>

<p>In&nbsp;1997 Linus graduated and moved to the US to take a job at
<a href="https://en.wikipedia.org/wiki/Transmeta">Transmeta</a>. I took a
job at a different university in the Helsinki area.
</p>

<p>In the following years, many things happened. It turned out that there
were still a few missing features from Linux, so people worked on
those. The term "open source" was coined and IBM invested a ton of money in
Linux development. Netscape published a version of its web browser as
open source. Skipping a few details and many years, open source basically
took over the world. LWN was started and covered much of this history on a
week-by-week basis.
</p>

<p>In&nbsp;1991, Linus wrote that Linux "<q>won't be big and professional
like gnu</q>". 
In&nbsp;2023. Linux is running on every continent, on every ocean, on billions
of devices, in orbit, and on Mars. Not bad for what started as two threads,
writing streams of As and Bs on the screen.
</p><br clear="all"><table>
           <tbody><tr><th colspan="2">Index entries for this article</th></tr>
           <tr><td><a href="https://lwn.net/Archives/GuestIndex/">GuestArticles</a></td><td><a href="https://lwn.net/Archives/GuestIndex/#Wirzenius_Lars">Wirzenius, Lars</a></td></tr>
            </tbody></table><br clear="all">
<hr>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How Flash games shaped the video game industry (2020) (175 pts)]]></title>
            <link>https://www.flashgamehistory.com/</link>
            <guid>43225560</guid>
            <pubDate>Sun, 02 Mar 2025 00:05:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.flashgamehistory.com/">https://www.flashgamehistory.com/</a>, See on <a href="https://news.ycombinator.com/item?id=43225560">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>
        There were many more Flash games. Millions more.
    </p><p>
        Played billions of times on thousands of different gaming websites.
    </p><p>
        It was creative chaos.
        <br>
        <span id="explosiveEmoji">🤯</span>
    </p><div id="story1">


            <p>
            

            Flash games were the gateway for many developers in the games industry, and served as an experimental
            playground
            for distilling games down to their most pure and engaging elements. The end-of-life of Flash in December
            2020 marks the end of one of the most creative periods in the history of gaming.

            </p><p>
            
            It all started in 1996, when the Flash player was first released. Originally it was intended for Web
            graphics
            and animations, but when it got its own programming language in 2000, developers started to use
            it to make games.
            </p><p>
            
            That was the same year we saw the rise of the first automated Flash games website, Newgrounds.
            Anyone could upload their games and they were published immediately.
            </p></div><div id="svgContainer">
        


        <div>

            <br>
            <!--
            <div style="font-size:calc(25px + 0.5vw);color:#999999">
                Flash games on Newgrounds
            </div>
            -->
            <p>
                The following graph shows the 2000 most popular Flash games on Newgrounds in chronological order.


                Each bubble represents a game and the area of the bubble corresponds to the number of times that game
                was
                played on Newgrounds.
            </p>
            </div>
        <svg>
        </svg>

        <p><span>Everything by everyone</span>
            <br>
            Websites like Newgrounds made it possible for anyone to publish their games without a studio
            or a publisher. Developers uploaded experimental games, artistic games, brutally violent games, funny games
            and
            activist games. It was the wild west of gaming and the creativity that came out of that environment was
            amazing.
            People made games just because they wanted to make games, not to turn a profit.
        </p>


        <div>
            <p><span>The Flash workflow</span>
            <br>
            Flash had a designer centric workflow that brought together art, animation, and coding.
            People that wouldn't have written code otherwise could gradually make their animations into games. An
            example is
            the game <span>Xiao Xiao</span>, which started as a simple stick figure animation
            that evolved into a fighting game.
            </p><p>
            
            Developers also didn't have to worry about the technical details of cross-platform support. A game written
            in Flash 20 years ago is still playable today, while games written for iOS or Android require regular
            updates to keep them working on new phones.
        </p></div>


        <p><span>Accessibility</span>
            <br>
            Anyone could play Flash games by just clicking a link. Playing and sharing games today is still not as easy
            as it was 20 years ago.
        </p>


        <p><span>Decentralization</span>
            <br>
            The <span>Fancy Pants Adventures</span> game was played a few million times on
            Newgrounds, but across all websites, it
            was played more than 300 million times. Most Flash games were featured on thousands of different websites.
            If a game
            didn't connect with the audience
            of one site, it could still reach many others. The Internet was a more decentralized place back then.
            Nowadays, games like the <span>McDonald's Videogame</span>, where you corrupt
            politicians and destroy the rainforest to make
            fast food, would most likely be banned from the App Store, cutting it off from a large percentage of
            players.
        </p>


        <p><span>Rapid iteration</span>
            <br>
            The culture around Flash games promoted original ideas and made it acceptable to fail.
            Most games were made in less than a few months, some even in just a few days.
            If your game didn't do well, you could just make another one. Game design evolved at a rapid pace.
        </p>

        <p><span>The beginning of the end for Flash</span><br>
            In 2010, two years after the release of the iPhone, Steve Jobs wrote an open letter explaining why Flash
            wouldn't be allowed on Apple's platform. Flash had security issues, drained
            the
            battery, and was built for desktop computers, not mobile devices with touch interfaces.
            <br>
            <a href="https://web.archive.org/web/20200104081626/https://www.apple.com/hotnews/thoughts-on-flash/" target="_blank">Read the letter</a>


        </p>


        <div>
            <p><span>Flash exodus</span><br>

            By 2012, the number of players on Flash game websites was declining and fewer and fewer games were being
            made in Flash.
            Many developers jumped ship to make mobile or console games, and former Flash game animators started Youtube
            channels.
            </p><p>
            
            It was not just the rise of the iPhone that was responsible for the decline of Flash. Ultimately, the
            Internet became a different place that had to support a wide variety of different devices.
        </p></div>


        
    </div><div id="quotes">
        

        <br>


        <div><p>

            “Being a creator of and steward for Flash as a platform was a privilege. I felt that we were building a
            pencil
            and it was the community of creators that was responsible for the creation of Flash as a creative form. Our
            job
            as stewards was to anticipate needs, listen and make sure it worked. The core idea of having an accessible
            system for creating interactive media content that works across a range of devices is still a powerful one.
            Just
            like pencil and paper is a powerful tool. I hope it will happen again. Many years ago, I had the idea of
            Flash
            Forever. How can we treat what is created in Flash as valuable information like a book? Sadly, the need to
            drive
            business growth by adding features and capabilities, trumped the need for permanence. It’s great that Flash
            still lives in the skills and experiences of the community of people who learned and grew with it.”
            </p><p>
                Jonathan Gay
                <br>
                Creator of Flash
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Flash_logo.png" width="140" height="140">
            </p>
        </div>


        <div><p>
            “Over the years, my companies have made a number of software tools, but Flash was by far the most
            impactful. For me, the most gratifying thing has been having Flash animators thank me for giving them a
            career. Not just a tool, but a career. But the person that really is the one to be thanked is Jonathan Gay,
            the visionary behind Flash from day one and all the way until Adobe acquired it. Jonathan is an amazing man,
            and I was lucky to start working with him from the time he was a 17-year old in high school.”


            </p><p>
                Charlie Jackson
                <br>
                Co-Founder of FutureWave Software
                <br>
                <a href="https://www.s-beach.com/blog" target="_blank">Blog</a>
                <a href="https://twitter.com/wiredcoach" target="_blank">Twitter</a>

            </p>
            <p><img src="https://www.flashgamehistory.com/img/FutureWave_logo.png" width="250" height="104">
            </p>
        </div>
        <div><p>

            “Having grown up tinkering with animation software while programming text-based games, Flash was the first
            program that merged art and code in a way that I always hoped could be possible. Even better, anything you
            made could be played instantly on any computer via the web.
            </p><p>
            
            It was a magical time of experimentation and a lot of goofing off with friends found over the Internet. The
            moment was especially ideal for newcomers and outsiders, who now had a low barrier to entry and no industry
            gatekeeping. The joy of that era embodies what Newgrounds seeks to achieve to this very day; a place where
            people with no experience can learn, create and share wonderful things together.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Newgrounds_logo.png" width="140" height="140">
            </p>
        </div>
        <div><p>
            “Flash made the online game industry evolve, flourish and then explode. We played a small part, but it was a
            huge part of my life. I saw our games being played close to 3 billion times, with some including Bowman
            being played hundreds of millions of times. It is with great sadness I am witness to the death of Flash.
            Flash games made me, my business and altered my life. They allowed me to connect with the world and feel
            slightly less alone.”


            </p><p>
                Frank Valzano
                <br>
                Creator of Bowman and FreeWorldGroup.com
                <br>
                <a href="http://www.freeworldgroup.com/games4/gameindex/bowman2.htm" target="_blank">Play
                    game</a>
                <a href="http://www.freeworldgroup.com/" target="_blank">Website</a>
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Bowman.png" width="250" height="167">
            </p>
        </div>
        <div><p>
            “I owe my success as a game developer to Flash. My Rebuild series and my husband's Fantastic Contraption
            both
            started as Flash games played by millions of people freely in their browsers. That ease of sharing was so
            revolutionary - we went from buying games at the mall to just clicking a link! Flash gave all these small
            experimental games an instant audience, and gave rise to indie games as we know them today including my
            own.”

            </p>
            <p><img src="https://www.flashgamehistory.com/img/Rebuild.png" width="250" height="167">
            </p>
        </div>
        <div><p>
            “For me, Flash was an integral part of my game dev journey - a wonderful, eccentric piece of tech that I
            will always hold dear. I'd been making games using various tools and languages since I was a kid but when
            Flash arrived on the scene it was a 'lightbulb moment', because I was a little bit of an artist, a little
            bit of a coder and this bridged that gap perfectly.
            <br>

            There just weren't any tools that I know of that allowed animators to make creations and coders to bring
            them to life. The fact that it compiled into this one tiny SWF file that could be distributed everywhere,
            (fonts, sounds, graphics and all!) just meant games could go viral in an instant and reach millions of
            players - which is exactly what happened when I launched the first Swords and Sandals game way back in 2007.
            <br>

            It's funny, I still find myself defending Flash against the lumbering and dreary HTML5 pipeline that
            proclaimed itself successor - even now, HTML5 gaming struggles to hold a candle to what Flash could do a
            decade ago with a lack of decent vector animation and inconsistent performance across browers.
            </p><p>
            

            Ten years after Steve Jobs declared it dead tech I still have a bunch of games on Steam made with AIR ( a
            sort of desktop 'successor' to Flash ) that have sold well enough to allow me to build an indie games
            business and given me the freedom to continue the Swords and Sandals story - I owe Flash a huge debt, thanks
            for saving the universe (for me at least!)”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/SwordsAndSandals.png" width="250" height="167">
            </p>
        </div>

        <div><p>
            “The old Flash scene was an incredible place to learn gamedev: it was a lively and fun community, and the
            content was free to access, but devs could still get paid for "pretty much any project" through the
            (honestly, kind of insane) sponsorship market - which also ended up handling distribution and marketing for
            you. These combined into a perfect storm of weird and unrestrained experimentation in all directions. I
            didn't realize until it was already over, but it was a tech bubble for strange art!”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/CompanyOfMyself.png" width="250" height="167">
            </p>
        </div>

        <div><p>
            “I was coming out of art school right when Flash was becoming popular and for me it was a way to create
            something and put it out in the world with no mediation — a Flash website was accessible to anyone with a
            web-browser. I would get emails from people at libraries enjoying my work! And I didn’t really think of the
            things I was making as games — it seemed that a browser window could have absolutely anything inside of it,
            and it didn’t need to be explained as long as it was compelling. To me, that element of surprise (or
            sometimes, confusion) is really magical. It probably had as much to do with the time as the technology, but
            it’s a feeling I’ve tried to keep alive in my work ever since.”
            </p>

            <p><img src="https://www.flashgamehistory.com/img/Windosill.png" width="250" height="167">
            </p>
        </div>


        <div><p>
            “My background is in visual arts and design so Flash was the perfect gateway drug to game making. It allowed
            me
            to start from simple animations, and gradually add more complex gameplays release after release.
            I still miss its timeline-based logic, its IDE, and its sharp vector rendering.
            Flash's streamlined workflow and huge ecosystem meant that I could make a game responding to an urgent issue
            in
            a matter of days and immediately make it accessible to an audience of millions.
            Tools and communities change all the time but certain kinds of Flash games are almost impossible to make
            with
            other tools, and the exuberant, fast and dirty world of online games has been only partially replaced by
            platforms like http://itch.io.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/TheMcDonaldsVideogame.png" width="250" height="167">
            </p>
        </div>


        <div><p>
            “Flash as a platform gave "outsiders" an accessible tool to make games, but this wasn't the most important
            aspect: it was reach. It was mindblowing to put my game on Kongregate and have *thousands* of people play it
            overnight. This combo "runs in browser + access to player community" put a beginner, unknown, south american
            developer in the spotlight and allowed me to have a career in game development. It was just sad that Flash
            was in the hands of Adobe, who didn't know what to do with it and let it wither. HTML5 is still no
            replacement because it lacks the toolchain, it was a calamity when it died.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/IWishIWereTheMoon.png" width="250" height="167">
            </p>
        </div>


        <div><p>
            “Flash games at their best had such a raw, personal connection to their creators. When playing them you
            could feel artist’s hand, and the passion they poured into their work. Flash games and animations felt
            accessible, they had a way of making you think, ‘Hey, I could do that!' The effect was immediate and
            intoxicating. The first shape on your canvas, no matter how crude, had the potential to be given life.
            </p><p>
            
            For someone who made videos, stop motion animations, built contraptions, and generally felt the urge to just
            making something, Flash just felt like exactly what I needed. I’ve heard ‘I didn’t know Flash could do that’
            a few times in regards to The Fancy Pants Adventures, but in reality, the series was shaped heavily by
            Flash’s unique vector based, animation-centric workflow. I was able to build something that I felt was
            distinctly mine, while working around and also embracing my own strengths and weaknesses.
            </p><p>
            
            The insane reach, the community, the crazy creatives, nothing else comes close, and most people just have no
            clue how absolutely massive Flash was.
            </p><p>
            
            It’s still almost impossible for me to wrap my head around the fact that I was able to create something that
            had an impact in the world, and Flash made that possible.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/FancyPants.png" width="250" height="167">
            </p>
        </div>


        <div><p>
            “Flash had a huge influence on me as a game developer and designer. Relatively accessible code and very easy
            online sharing made game making a social activity, even when I didn't know a lot of other designers in
            person.
            Folks I met through making Flash games starting almost 15 years ago are still people I count as my very best
            friends. I have no idea what my life or career would look like without Flash. I also feel very honored and
            privileged to have had a hand in thousands of Flash games over the years by sharing my Flash game engine
            Flixel
            with other developers. Flash ruled and I miss it a lot.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Canabalt.png" width="250" height="167">
            </p>
        </div>


        <div><p>
            “Flash gave me the opportunity to be creative and ambitious with what I was making while I was still
            learning
            to use it. It taught me how I could make games with the most basic of coding ability, and then taught me
            something new with every little project I made. Once I started making games professionally, it gave me the
            tools to make something new and fresh on an almost monthly basis without ever feeling particularly
            restricted by the platform.
            </p><p>
            
            Unfortunately as technology advanced, Adobe either dragged or dug in their heels and refused to adapt.
            Casual gamers and our target audience moved to mobile platforms which we simply were not provided any
            meaningful tools to properly cater to until it was years too late and there were other engines and
            technologies better suited to it.
            </p><p>
            
            It became harder to make just a simple game and have it run well, and I found myself recommending to others
            to stay away or choose a different path.
            </p><p>
            
            What didn't change though, was the experience of making so many games in an industry that was just beginning
            to find its feet, and I find it influencing so many decisions I make now that I work as a designer at SEGA.
            </p><p>
            
            Making Flash games for Armor Games was one of the best experiences of my life, even if the fast pace
            sometimes did feel crushing, there was nothing more thrilling than releasing a game out to Armor, Newgrounds
            and Kongregate and seeing the mostly positive reviews roll in. I met some amazing people, and got the chance
            to do amazing things. I miss Flash, and the ease of prototyping something so quickly and easily and just
            having it work everywhere. I also miss all the players of the games I had, it was incredible seeing people
            react to something I'd created and I still every so often hear from people who played one of my games and
            it's the best feeling in the world.
            </p><p>
            
            I've heard from people that Apple helped kill of Flash by not supporting it on iPhone, but Adobe had years
            and years to adapt and constantly let the community down, and I wonder what the world of casual games would
            be like now if Flash was still a viable platform for developers to use. I have a suspicion that the
            democratisation of platform and development that was seen in the early flash days on web portals would mean
            a less stale corporate run culture around small free to play games these days.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/SHIFT.png" width="250" height="167">
            </p>
        </div>

        <div><p>
            “Flash was an incredible force in the democratization of game development and the initial spark of what was
            to become a thriving ecosystem of indie game developers. It provided access to a market of unprecedented
            scale where you could reach anybody with a web browser by giving them nothing but a hyperlink and a way for
            games to spread virally with less friction than ever before. For XGen this meant the ability to reach tens
            of millions of players with our games, to build lasting direct relationships with our fans and to share in
            their experiences.
            </p><p>
            
            The creativity and experimentation enabled by Flash as a platform and the distribution that it enabled
            brought the industry countless new ideas, fresh perspectives on what games can be, and even whole new
            genres. Massive worldwide sensations like Minecraft and so many others can trace their ancestral lineage
            back to concepts and experiments that originated in the world of Flash games. It's clear that we owe a lot
            of the game industry's brightest stars to these funny little games that brought us all so much joy and
            delight.”
            </p><p>
                Jordan Dubuc
                <br>
                Director of Operations at XGen Studios
                <br>
                XGen Studios created Motherload
                <br>
                <a href="http://www.xgenstudios.com/play/motherload" target="_blank">Play game</a>
                <a href="https://twitter.com/XGenStudios" target="_blank">Twitter</a>
                <a href="http://www.xgenstudios.com/" target="_blank">Website</a>
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Motherload.png" width="250" height="167">
            </p>

        </div>

        <div><p>
            “Flash was a remarkable technology: an accessible programming tool that created games that you could play
            from almost any computer connected to the internet. Where Steam and Apple are often credited with
            democratising development, an incredible number of developers entering the industry around that time had
            already learned that anyone could make games that could become 'a hit' via Flash and the many Flash games
            portals around.
            </p><p>
            

            Each technology shapes the work created in it, through the things that are easy to achieve in it, the
            opportunities of what is possible in it, and the challenges from what is not possible in it. Flash was an
            incredibly fast 2D animation tool, and the limitations of the internet in the Flash era limited the filesize
            you could expect players to wait for. This gave Flash a primary aesthetic of fast, 2D action games - and
            seeking to stand out within that space, a huge amount of experimentation and iteration followed. As the
            community found tricks and shortcuts, new possibilities would open up, and new experiments would follow. The
            community turned into a self-growing organism, ever seeking the ever-expanding possibilities of the space -
            some excelled in animation, others in design, others in creation speed, others in humor, and again others in
            technology. Whatever your focus, there were others chasing that same dream, appreciating your efforts - and
            that felt exciting.
            </p><p>
            

            It wouldn't be an exaggeration that Vlambeer, and with it games as Super Crate Box, Ridiculous Fishing,
            LUFTRAUSERS, and Nuclear Throne, would not have existed without Flash. We made our first dollar via Flash,
            and earned the money we needed to keep the studio afloat for the first few years via Flash. I know for a
            fact that we're not the only one. Many people I would consider indie legends today would not have been able
            to create their defining works, or sustain their passion projects without messing around in Flash.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/RadicalFishing.png" width="250" height="167">
            </p>
        </div>


        <div><p>
            “I was doing a PhD in BioChemistry back in 2008. I was conducting experiements where I needed to press a
            button every 5 minutes for over 6 hours. I started playing flash games to pass the time. They were so
            simple, accessible and fun that after a while I was drawn to making one.<br>
            I followed some tutorials and code examples (thanks Keith Peters!) and made a couple of games. They were
            played hundreds of thousands of times and I was instantly hooked. I never finished the PhD. I could no
            longer motivate myself to spend years writing something that will be read by 1 or 2 people if I’m lucky when
            instead I could spend a week making something silly and fun that 100k+ people would play. I’ve been making
            web games for over a decade now and they’ve been played around a billion times. I will never forget the
            start of my journey. Thinking up a bonkers new game idea, throwing it together then putting it on Kongregate
            and Newgrounds to see what people think. It was the golden age of indie game development in my opinion. The
            most creative and fun ideas got the most attention no matter who made them. No need for a marketing budget
            and definitely no in-app purchases etc. I’ve closed my flash site now (TheGameHomepage.com) to focus on my
            new(er) HTML5 game site FreeGames.org. I’ve had a few hiatuses and a job in between but I’m still making web
            games 12 years later!”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/RedRemover.png" width="250" height="167">
            </p>
        </div>


        <div><p>
            “A lot of new indie studios were popping up all across Indonesia in 2010. The main driving factor was Flash
            games. Flash games and its sponsorship business model had opened doors for Indonesians to create games and
            earn
            a decent living from web-based games. For Indonesians, making Flash games were the closest thing to being a
            “real” game developer. There were no big AAA studios nor schools with game development courses in Indonesia
            back
            then, even now access to game development knowledge is still very limited. And to make things even harder,
            games
            are still considered “bad” and not a legit career path in the eyes of parents, teachers, and government
            officials in Indonesia.
            </p><p>
            
            Many Indonesians who dreamt of working in the games industry or wanted to create their own games turned to
            Flash
            games and started forming studios or teams, I was one of them. The best thing was, you don’t need a lot of
            capital to start making Flash games and you can earn a pretty decent living in Indonesia. To put things into
            perspective, a simple Flash game that a single developer worked on for less than a month could get US$500 -
            US$1000 in sponsorships and ads, while the standard salary for a university fresh graduate in Jakarta was
            about
            Rp 3,000,000/month (US$200/month in today’s currency), even less if you live outside of Jakarta. The higher
            quality Flash game could even earn US$20K and more.
            </p><p>
            
            In this era, Indonesian game developers released many notable games and hits, such as the Epic War series
            from
            Artlogic games, Infectonator and Necronator series from Toge Productions, Valthirian Arc series from Agate,
            and
            many more. These games were being played by millions of people worldwide and their success helped the growth
            of
            Indonesian games industry.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Infectonator.png" width="250" height="167">
            </p>
        </div>


        <div><p>
            “I started making Flash games when I was 18. It was just a hobby, because I loved video games, was a
            computer science student and always wanted to make my own game. Flash was the easiest tool to do it, and it
            also had a huge community which could actually play the game and provide some feedback.
            </p><p>
            
            And the feedback from players became the most valuable thing for me. It inspired me to move further, make
            bigger, better and more detailed games. For example, Feudalism III had an AI system equal to Final Fantasy
            XII or Dragon Age: Origins, with unique settings for every one of 184 types of units.
            The feedback also really helped to improve my English ;)
            </p><p>
            
            I’ve been making Flash games fulltime for 10 years (2004 – 2014), and it was the best part of my life. In
            2014, when the flash started slowly dying, I’ve accidentally found an opening in big company making AAA
            games. I’ve decided to give it a try – mostly because I was curious if my skills would interest them.
            Surprisingly, they did! Since then I was even promoted to a lead UI programmer. So, I’m still a game
            developer, but currently as a part of big team.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Feudalism.png" width="250" height="167">
            </p>
        </div>
        <div><p>
            “I basically grew up on Newgrounds and developed an interest in making my own games very early on. I begged
            my parents to buy Flash (I believe the first version I got was Macromedia Flash MX 2004) and they were very
            skeptical of the cost, a few hundred dollars IIRC, but they got it for me for my 13th birthday.
            </p><p>
            

            I made a few low quality games which are lost to the ether, and then I started releasing some slightly
            better games under the name IcyLime. I made Multitask in 2009 when I was 15. Actually it only took about 10
            days to make, and I figured it would get maybe a few hundred, or maybe even a thousand views.
            </p><p>
            

            Multitask ended up getting over 10 million views across different sites like Kongregate, Newgrounds,
            ArmorGames, and others. I was overwhelmed and had NO idea how to properly monetize it at the time so I gave
            away licenses for less than market value, but since then it has still made around $15,000. I then made a few
            other games including Multitask 2 before life took over, and I never had time to return.
            I credit Flash for guiding me to my career path as a software developer, although I no longer have as much
            of an interest in making games specifically.”
            </p><p>
                Creed Gallagher
                <br>
                Creator of Multitask
                <br>
                <a href="https://www.newgrounds.com/portal/view/506546" target="_blank">Play game</a>
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Multitask.png" width="250" height="167">
            </p>
        </div>


        <div><p>
            “Long before Mario Maker was a thing, N by Metanet Software offered a level editor, and I submitted a couple
            hundred of my own designs to nmaps.net, where the community would play them and give feedback. My college
            offered a quality game design program, but I unironically learned more from this one little community of
            players and designers.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Run.png" width="250" height="167">
            </p>
        </div>

        <div><p>
            “I was basically a kid during the Flash-era, and I feel like I grew up alongside it. I would always frequent
            Newgrounds as I was enthralled by all the amazing content people were uploading and the community around it
            all. I would mess-around on the computers at school slowly teaching myself both animation and scripting with
            dreams of also uploading my own content one-day.
            </p><p>
            
            The first 'game' I ever made was entirely based off someone else's scripts they had uploaded for public use.
            I kept tweaking the code and drawing art, learning as much as I could but honestly just having fun; the
            concept of being a real game developer just didn't exist in my mind. Eventually I released my first serious
            game and people loved it, and that blew me away. So I kept doing it. A decade later and I've since changed
            careers to pursuing game development professionally, still learning and still honestly just having fun.
            Flash made that possible.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/ColourMyWorld.png" width="250" height="167">
            </p>
        </div>

        <div><p>
            “Nitrome would not have existed without flash. It may on the surface only seem like a tool to make games but
            at the time we started there were few realistic options for small indies. The low barrier to entry was two
            fold in that the application was easy to learn to a standard that you could make a game and as a platform
            there has never been an easier way to get your game out there. We even made decent money from it for a
            while.
            </p><p>
            
            In total Nitrome made over 130 games in flash. Making that many games was a great learning tool for us. Some
            of the games were better than others but that was part of the process and making lots of game quickly meant
            we got better quickly too.
            </p><p>
            
            The demise of flash led Nitrome to stop making flash games and led to our future games finding homes on
            mobile console and PC. Though the tools we use is now Unity and the stores are different the main spirit of
            the games we make is still firmly rooted in what we learnt making flash games.
            </p><p>
            
            Nitrome recently began converting our entire catalogue of Flash games to be playable in HTML5. The player
            may soon be gone but the games themselves will live on we hope for a long time to come.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Nitrome_logo.png" width="250" height="167">
            </p>
        </div>


        <div><p>
            “Bob and I started making Flash games in early 2001. It was as much fun to make the games as it was to play
            them. However, we all knew the dark side of Flash games was how the games would be pirated to multiple
            sites. It wasn't until 2005 that we developed the concepts for MochiBot and MochiAds. Thus, Mochi Media was
            born.
            </p><p>
            
            Working so closely with the Flash games community was such an inspiration to us all. We saw how
            life-changing these games could be for people around the world. I've built lifelong friendships through the
            community and I miss the camaraderie we had in the forums.”
            </p><p>
                Jameson Hsu
                <br>
                Co-Founder of Mochi Media
                <br>
                <a href="https://twitter.com/jamesonh" target="_blank">Twitter</a>
            </p>
            <p><img src="https://www.flashgamehistory.com/img/MochiMedia_logo.png" width="232" height="186">
            </p>
        </div>


        <div><p>
            “Nowadays the internet is synonymous with posting your own stuff, but in 2004 there was no Twitter,
            Facebook, Youtube or SoundCloud. NewGrounds (and DeviantArt) was years ahead of the curve letting you not
            just upload home-made games, cartoons and music, but also letting users watch, vote on, review, give
            feedback, follow creators, download and share the stuff they liked, then learn how to make their own games
            and meet musicians or artists to collaborate with. This was in 2002, when most people thought "the internet"
            was a thing you installed from an AOL disc.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/NoTimeToExplain.png" width="250" height="167">
            </p>
        </div>
        <div><p>
            “I think its amazing to see the sort of things that came out of a misfit tool like Flash, if you think
            beyond the game / cartoon creation aspect of it, there was a brief period where websites were being built in
            Flash. Pretty elaborate ones in its hay day. So to me (I'm a designer, by profession) it directly
            intertwined with my career for a brief moment. I hope that something down the road, whatever that road ends
            up being, has a scrappy tool like Flash that can allow quick iteration and collaboration. It makes me
            sad to think that the next generation of edgy teens wont have the outlet that we old heads had back then.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/CastleCrashingTheBeard.png" width="250" height="167">
            </p>

        </div>

        <div><p>
            “I'd like to think I would have found a path into games no matter what, but flash was the first thing that
            made
            it possible for me. Its ease of use combined with sites like Newgrounds meant that a kid at home could make
            silly games and reach thousands of players with them. Luckily I was able to gain traction with some of my
            early
            games and start to earn revenue from them. Unfortunately Flash as a tool wasn't really built to keep up with
            market shifts like mobile development and the acceptance of indie devs onto console platforms. Since then
            I've
            made the move to Unity and I still continue to make games as my full-time job today. Kids now can just start
            with an engine like Unity or Unreal of course, but my time with flash gave me a huge leg up when jumping
            into
            these modern tools.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/ANEscapeSeries.png" width="250" height="167">
            </p>
        </div>


        <div><p>
            “I first got into Flash because I watched some badly animated Counter Strike parody cartoons on Newgrounds.
            It was so entertaining but also so scrappy that it inspired me to download the program and play around with
            it myself. From then on, it was just a cycle of playing and being inspired by things coming out of the
            portal, working on my own stuff, begging for help on the forums, and submitting my own scrappy work.
            </p><p>
            
            The influence on my career was massive. I essentially learned how to program and make digital art from
            Flash, and these are the skills that have shaped my career since. I've stopped working on games for the past
            few years now. I jumped into visual machine learning research for a while, and now I am a software engineer
            at AWS. I still hold game development dearly to my heart. It is very fun and fulfilling work.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Sonny.png" width="250" height="167">
            </p>
        </div>

        <div><p>
            “I think that the Flash game scene circa 2006-2010 was a LOT more friendly to newcomers. The current mobile
            market is too noisy and everything goes through one gatekeeper. If mobile stores worked more like the Flash
            portals of that era, I think there would be a much more interesting and vibrant indie ecosystem on mobile.”
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Filler.png" width="250" height="169">
            </p>
        </div>


        <div><p>
            “We can keep records of the games, the animations, and the sheer level of work that was put into making
            media with its tech. That's what I've been working on for over two years. But the microcosm of intense
            creativity, easy to access software, notable but not crippling limitations, almost universal compatibility
            across the entire technological space of its time, widespread adoption by encouraging free consumption and
            sharing in an age where 'going viral' actually meant something, all combining to influence the entire
            entertainment industry with one strike after another? That's something that we'll never be able to recreate,
            only remember fondly. All driven by a bunch of guys sitting in their bedrooms who watched a bit too much
            Xiao Xiao. Flash wasn't just a massive platform for games, it's a bite-sized model of our industry - the
            talent, the drive, the creativity - and I couldn't be happier it happened. There will never be anything like
            it again, and that's the most depressing thing about it going away.”
            </p><p>
                Ben Latimore
                <br>
                Creator of Flashpoint: The webgame preservation project
                <br>
                <a href="https://twitter.com/BlueMaxima" target="_blank">Twitter</a>
                <a href="https://bluemaxima.org/flashpoint" target="_blank">Website</a>
            </p>
            <p><img src="https://www.flashgamehistory.com/img/Flashpoint_logo.png" width="130" height="130">
            </p>
        </div>


    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Letter to the American People (950 pts)]]></title>
            <link>https://18f.org/</link>
            <guid>43224350</guid>
            <pubDate>Sat, 01 Mar 2025 22:22:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://18f.org/">https://18f.org/</a>, See on <a href="https://news.ycombinator.com/item?id=43224350">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main-content">
        <p>March 1, 2025</p>
<h2 id="a-letter-to-the-american-people" tabindex="-1"><strong>A letter to the American People:</strong></h2>
<p>For over 11 years, 18F has been proudly serving you to make government technology work better. We are non-partisan civil servants. 18F has worked on hundreds of projects, all designed to make government technology not just efficient but effective, and to save money for American taxpayers.</p>
<p>However, all employees at 18F – a group that the Trump Administration GSA Technology Transformation Services Director called "the gold standard" of civic tech – were terminated today at midnight ET.</p>
<h2 id="18f-was-doing-exactly-the-type-of-work-that-doge-claims-to-want-yet-we-were-eliminated" tabindex="-1">18F was doing exactly the type of work that DOGE claims to want – yet we were eliminated.</h2>
<p>When former Tesla engineer Thomas Shedd took the position of TTS director and met with TTS including 18F on February 3, 2025, he acknowledged that the group is <strong>the “gold standard” of civic technologists</strong> and that “you guys have been doing this far longer than I’ve been even aware that your group exists.” He repeatedly emphasized the importance of the work, and the value of the talent that the teams bring to government.</p>
<h2 id="despite-that-skill-and-knowledge-at-midnight-et-on-march-1-the-entirety-of-18f-received-notice-that-our-positions-had-been-eliminated" tabindex="-1">Despite that skill and knowledge, at midnight ET on March 1, the entirety of 18F received notice that our positions had been eliminated.</h2>
<p>The letter said that 18F "has been identified as part of this phase of GSA’s Reduction in Force (RIF) as non-critical”.</p>
<p>"This decision was made with explicit direction from the top levels of leadership within both the Administration and GSA," Shedd said in an email shortly after we were given notice.</p>
<p>This was a surprise to all 18F staff and our agency partners. Just yesterday we were working on important projects, including improving access to weather data with NOAA, making it easier and faster to get a passport with the Department of State, supporting free tax filing with the IRS, and other critical projects with organizations at the federal and state levels.</p>
<p>All of that work has now abruptly come to a halt. Since the entire staff was also placed on administrative leave, we have been locked out of our computers, and have no chance to assist in an orderly transition in our work. We don’t even have access to our personal employment data. We’re supposed to return our equipment, but can’t use our email to find out how or where.</p>
<h2 id="dismantling-18f-follows-the-gutting-of-the-original-us-digital-service-these-cuts-are-just-the-most-recent-in-a-series-of-a-sledgehammer-approach-to-the-critical-us-teams-supporting-it-infrastructure" tabindex="-1">Dismantling 18F follows the gutting of the original US Digital Service. These cuts are just the most recent in a series of a sledgehammer approach to the critical US teams supporting IT infrastructure.</h2>
<p>Before today’s RIF, DOGE members and GSA political appointees demanded and took access to IT systems that hold sensitive information. They ignored security precautions. Some who pushed back on this questionable behavior resigned rather than grant access. Others were met with reprisals like being booted from work communication channels.</p>

<p>We’re still absorbing what has happened. We’re wrestling with what it will mean for ourselves and our families, as well as the impact on our partners and the American people.</p>
<p>But we came to the government to fix things. And we’re not done with this work yet.</p>
<p>More to come.</p>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Firefly Blue Ghost Mission 1 Lunar Landing (131 pts)]]></title>
            <link>https://plus.nasa.gov/scheduled-video/firefly-blue-ghost-mission-1-lunar-landing/</link>
            <guid>43224107</guid>
            <pubDate>Sat, 01 Mar 2025 21:53:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://plus.nasa.gov/scheduled-video/firefly-blue-ghost-mission-1-lunar-landing/">https://plus.nasa.gov/scheduled-video/firefly-blue-ghost-mission-1-lunar-landing/</a>, See on <a href="https://news.ycombinator.com/item?id=43224107">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">

	<main id="primary">
		    <div id="fullscreen-player" aria-labelledby="modal-2-heading" aria-describedby="modal-2-description">
        <video id="main-video" controls="" preload="auto" width="auto" height="auto" poster="https://plus.nasa.gov/wp-content/uploads/2025/02/clps-blue-ghost-1-landing-key-art-r4-horizontal-program-tile-16-9-without-title.jpg?w=1024" title="Firefly Blue Ghost Mission 1 Lunar Landing">
            <source src="https://ntv1.akamaized.net/hls/live/2110242/landing030225/master.m3u8" type="application/x-mpegURL">
            <p> To view this video please enable JavaScript, and consider upgrading to a web browser that
                <a href="https://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
            </p>
        </video>
        <div>
                
                
                <p>With a suite of NASA science and technology on board, Firefly Aerospace is targeting no earlier than 3:34 a.m. EST Sunday, March 2, to land their Blue Ghost lunar lander […]</p>
            </div>
    </div>
<section>
	<article id="post-6417" data-start-time="1740900000" data-end-time="1740906660">
		<header>
			<figure>
				<img width="1024" height="576" src="https://plus.nasa.gov/wp-content/uploads/2025/02/clps-blue-ghost-1-landing-key-art-r4-horizontal-program-tile-16-9-without-title.jpg?w=1024" alt="Firefly Blue Ghost Mission 1 Lunar Landing">				<div id="countdown-container">
    <div id="countdownclock">
        <div>
            <p><span>00</span></p><p>Days</p>
        </div>
        <div>
            <p><span>00</span></p><p>Hours</p>
        </div>
        <div>
            <p><span>00</span></p><p>Min</p>
        </div>
        <div>
            <p><span>00</span></p><p>Sec</p>
        </div>
    </div>
    
    <div id="pastblock">  
        <p>This event has already occurred</p>
    </div>
</div>			</figure>
			<a href="#fullscreen-player" aria-controls="fullscreen-player" title="Open video player" data-open-modal=""><span>Open Video Player</span></a>
		</header>

		<div>
				<div>
					<p><span>Today</span> <span>2:20 am</span></p>
					<h2>Firefly Blue Ghost Mission 1 Lunar Landing</h2>
					<div>
						<ul>
															<li>
									<a href="#fullscreen-player" aria-controls="fullscreen-player" title="Open video player" data-open-modal="">Watch Livestream</a>
								</li>
														<li>
															
							</li>
							<li>
																
							</li>
						</ul>
					</div>
					<p>With a suite of NASA science and technology on board, Firefly Aerospace is targeting no earlier than 3:34 a.m. EST Sunday, March 2, to land their Blue Ghost lunar lander on the Moon. Blue Ghost is slated to touch down near Mare Crisium, in the northeast quadrant on the near side of the Moon, as part of NASA’s CLPS (Commercial Lunar Payload Services) initiative and Artemis campaign to establish a long-term lunar presence. Live coverage of the landing, jointly hosted by NASA and Firefly, will air on NASA+ starting at 2:20 a.m. EST, approximately 75 minutes before touch down on the Moon’s surface.</p><!-- .entry-content -->
				</div>
				<div>

					<table data-event-timestamp="1740900000">
						<thead>
							<tr>
								<th scope="row">Details</th>
							</tr>
						</thead><tbody>
							<tr>
								<th scope="row">Date</th>
								<td><span>Today</span></td>
							</tr>
							<tr>
								<th scope="row">Time</th>
								<td><span>2:20 am</span></td>
							</tr>
							<tr>
								<th scope="row">Timezone</th>
								<td><span><div><form><label for="city-location">Select Your Location or Timezone</label></form></div></span></td>
							</tr>
																				</tbody>
					</table>
				</div>

			</div>
	</article><!-- #post-6417 -->
</section>

	</main><!-- #main -->
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why can't we screenshot frames from DRM-protected video on Apple devices? (148 pts)]]></title>
            <link>https://daringfireball.net/2025/03/why_cant_we_screenshot_frames_from_drm-protected_video</link>
            <guid>43223985</guid>
            <pubDate>Sat, 01 Mar 2025 21:42:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://daringfireball.net/2025/03/why_cant_we_screenshot_frames_from_drm-protected_video">https://daringfireball.net/2025/03/why_cant_we_screenshot_frames_from_drm-protected_video</a>, See on <a href="https://news.ycombinator.com/item?id=43223985">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="Box">



<p>Nora Deligter, writing for Screen Slate in June 2023, “<a href="https://www.screenslate.com/articles/elegy-screenshot">Elegy for the Screenshot</a>”:</p>

<blockquote>
  <p>About five years ago, Catherine Pearson started taking screenshots
of every bouquet featured on <em>The Nanny</em> (1993–1999), the
six-season CBS sitcom that was then streaming on Netflix. She was
just becoming a florist, and she found the arrangements — ornate,
colorful, and distinctly tropical — inspirational. She now keeps
them in a folder on her desktop, alongside screenshots of flower
arrangements featured on <em>Poirot</em> (1989–2013), the British
detective drama. A few months ago, however, Pearson suddenly found
that when her fingers danced instinctively toward Command-Shift-3,
she was greeted by a black box where her flowers used to be, a
censored version of what she had meant to capture.</p>

<p>It was around this time when streaming platforms like Netflix, HBO
Max, Amazon Prime, and the Criterion Channel imposed a quiet
embargo on the screenshot. At first, there were workarounds: users
could continue to screenshot by using the browser Brave or by
downloading extensions or third-party tools like Fireshot. But
gradually, the digital-rights-management tech adapted and became
more sophisticated. Today, it is nearly impossible to take a
screenshot from the most popular streaming services, at least not
on a Macintosh computer. [...]</p>

<p>For PC users, this story takes a different, and happier, turn.
With the use of Snipping Tool — a utility exclusive to Microsoft
Windows, users are free to screen grab content from all streaming
platforms. This seems like a pointed oversight, a choice on the
part of streamers to exclude Mac users (though they make up a tiny
fraction of the market) because of their assumed cultural class.
This assumption isn’t unreasonable. Out of everyone interviewed
for this article, only one of them was a PC user.</p>
</blockquote>

<p>Deligter’s essay has been sitting in my long (and ever-growing) list of things to link to ever since she published it back in 2023. I referenced it in <a href="https://daringfireball.net/linked/2025/03/01/green-imessage-disappearing-messages">my post earlier today</a> re: <a href="https://blog.cryptographyengineering.com/2025/03/01/dear-apple-add-disappearing-messages-to-imessage-right-now/">Matthew Green’s entreaty to Apple</a> to add “disappearing messages” to iMessage, and re-reading it made me annoyed enough to finally write about it.</p>

<p>I’m not entirely sure what the technical answer to this is, but on MacOS, it seemingly involves the GPU and video decoding hardware. These DRM blackouts happen at such a low level that no high-level software — any sort of utility you might install — can route around them. I think Windows still offers easy screenshotting of frames from DRM video not because the streaming services somehow don’t care about what Windows users do (which, when you think about it, would be a weird thing <em>not</em> to care about, given Windows’s market share), but because Windows uses a less sophisticated imaging pipeline. Or perhaps rather than less <em>sophisticated</em>, it’s more accurate to say less <em>integrated</em>. These DRM blackouts on Apple devices (you can’t capture screenshots from DRM video on iPhones or iPads either) are enabled through the deep integration between the OS and the hardware, thus enabling the blackouts to be imposed at the hardware level. And I don’t think the streaming services opt into this screenshot prohibition other than by “protecting” their video with DRM in the first place. If a video is DRM-protected, you can’t screenshot it; if it’s not, you can.</p>

<p>On the Mac, it used to be the case that DRM video was blacked-out from screen capture in Safari, but not in Chrome (or the dozens of various Chromium-derived browsers). But at some point a few years back, you stopped being able to capture screenshots from DRM videos in Chrome, too — <em>by default</em>. But in Chrome’s Settings page, under System, if you disable “Use graphics acceleration when available” and relaunch Chrome, boom, you can screenshot everything in a Chrome window, including DRM video. You can go to the magic URL <code>chrome://gpu/</code> before and after toggling this setting to see a full report on the differences — as you’d expect, it turns off all hardware acceleration for video encoding/decoding, compositing, and more. You wouldn’t want to browse like this all the time (certainly not on battery power), but it’s a great trick to know for capturing stills from videos.</p>

<p>What I don’t understand is why Apple bothered supporting this in the first place for hardware-accelerated video (which is all video on iOS platforms — there is no workaround like using Chrome with hardware acceleration disabled on iPhone or iPad). No one is going to create bootleg copies of DRM-protected video one screenshotted still frame at a time — and even if they tried, they’d be capturing only the images, not the sound. And it’s not like this “feature” in MacOS and iOS has put an end to bootlegging DRM-protected video content. This “feature” accomplishes nothing of value for anyone, including the streaming services, but imposes a massive (and for most people, confusing and frustrating) hindrance on honest people simply trying to easily capture high-quality (as opposed to, say, using their damn phone to take a photograph of their reflective laptop display) screenshots of the shows and movies they’re watching.</p>



 <!-- PreviousNext -->
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Berlin Swapfest – Electronics flea market (265 pts)]]></title>
            <link>https://www.swapfest.berlin/</link>
            <guid>43223718</guid>
            <pubDate>Sat, 01 Mar 2025 21:11:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.swapfest.berlin/">https://www.swapfest.berlin/</a>, See on <a href="https://news.ycombinator.com/item?id=43223718">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-astro-cid-rurh3fhj=""> <p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p><p><span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj=""> <span data-astro-cid-rurh3fhj="">BERLIN SWAPFEST</span> <span data-astro-cid-rurh3fhj="">April 19th @ c-base</span> </span> </span> </p> <p><img src="https://www.swapfest.berlin/_astro/tear-outline.CiVzhoHJ.png" alt="tear" data-astro-cid-rurh3fhj=""> </p></div><div> <p>
In association with Berlin's long-time hacker space <a href="https://c-base.org/">c-base</a> we're hosting the first of a quarterly Swapfest at their space in Kreuzberg.
      This is a place to buy, sell, and swap electronics, computer equipment, and
      tools.
</p> <p>
In tune with the spirit of right-to-repair as well as re-use; the goal of
      the Berlin Swapfest is for people to bring electronics, equipment, and
      tools they no longer use, but want to bring to a good home. If you've been
      trying to find the perfect equipment to build your home-lab or looking for
      new electronic components or tools, this should be the place for you.
</p> <h2> <span>F</span><span>A</span><span>Q</span> </h2>  <div> <p>
Being a seller will always be free. Depending on the size of the item
        you're bringing you may be asked for a deposit to handle disposal of
        your items should you not bring it back home with you.
</p> <p>
However, we highly encourage you to only bring items you're comfortable
        bringing back home with you.
</p> </div>  <di> <p>
Yes, c-base will provide space and tables for sellers. Space will be
        allocated based on registration information. If you forgot to register
        as a seller, it may be possible to sell items at a table
        space-permitting.
</p> </di>  <p>
We have no requirements with how to exchange goods; if you choose to use
        PayPal, Cryptocurrency, or cash, it is entirely up to you. Any disputes
        must be taken up with the seller. Only in the case of a breach of c-base
        rules will a team member step in.
</p>  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Euclid finds complete Einstein Ring in NGC galaxy (132 pts)]]></title>
            <link>https://www.euclid-ec.org/einstein-ring-in-ngc-6505/</link>
            <guid>43223596</guid>
            <pubDate>Sat, 01 Mar 2025 20:56:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.euclid-ec.org/einstein-ring-in-ngc-6505/">https://www.euclid-ec.org/einstein-ring-in-ngc-6505/</a>, See on <a href="https://news.ycombinator.com/item?id=43223596">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-5156" itemtype="https://schema.org/CreativeWork" itemscope="itemscope">

	
	
<div data-ast-blocks-layout="true" itemprop="text">

		
		
<p>Gravitational lenses are rare in the sky – galaxies bending the light-paths of light from other galaxies behind them to form distorted or even multiple images. Even rarer is a perfect alignment of the two galaxies with us, the obervers, with the light being bent into a so-called Einstein Ring. And the rarest case was now observed by Euclid: this happening in an extremely nearby NGC galaxy.</p>



<p>Gravitational lensing is the effect of mass bending space and light following along this bent space. If the masses are high enough, as for a galaxy, then this can lead to an image of an object behind a galaxy to be distorted or even split up into several images: a strong gravitational lens. If vary rare cases – for a perfect alignment of source, galaxy, and observer on a line – the image gets bent into a ring. These so-called Einstein Rings have been found before, but in all configurations only approximately 1000 gravitational galaxy–galaxy lenses are currently known across the sky.</p>



<figure><a href="https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic.png"><img fetchpriority="high" decoding="async" width="1024" height="576" src="https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic-1024x576.png" data-src="https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic-1024x576.png" alt="" data-srcset="https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic-1024x576.png 1024w, https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic-300x169.png 300w, https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic-768x432.png 768w, https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic-1536x864.png 1536w, https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic-2048x1152.png 2048w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic-1024x576.png 1024w, https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic-300x169.png 300w, https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic-768x432.png 768w, https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic-1536x864.png 1536w, https://www.euclid-ec.org/wp-content/uploads/EinsteinRING_infographic-2048x1152.png 2048w"></a><figcaption><em>Principle behind formation of an Einstein Ring image. Credit: ESA</em></figcaption></figure>



<p>The phenomenon of strong gravitational lensing has been first discussed already in the late 1700s, in the case of Newtonian gravity. But only Albert Einstein was able to calculate the correct angle of light-bending, using his General Theory of Relativity in 1915. In the years after, expeditions to properly measure the lensing effect for the mass of the sun during a solar eclipse then actually confirmed General Relativity based on the lensing effect. This was for the sun.</p>



<p>Coming back much more massive galaxies, the realisation that they could act as lenses – and image sources in the background – took until 1937 when Fritz Zwicky used the new knowledge about galaxies being really distant collections of stars like our own Milky Way. And in the 1960s it was realized that quasars, very bright, point-like active centers of galaxies, would make the perfect sources for lensing. And so it took until 1979, when the first “twin” quasar was found and identified as two images of the same background source – the first observed gravitational lens.</p>



<p>To dive deeper, the chance of a galaxy – or galaxy cluster – acting as a gravitational lens is highest for some intermediate distance from us observers, and for the source galaxy to be quite a bit further away. Most gravitational lens galaxies are therefore several billions of light-years away. So it’s extremely rare for lensing galaxies to be very close to us. A galaxy has to be very massive to have enough impact to create multiple lensed images, so what we would call “in our neighbourhood”, within a distance of 700 million light years, only 2400 galaxies exist that would be massive enough. Then, given the background distribution of available sources, of these nearby galaxies only 1 in 2000 has a statistical chance of actually creating a bright lensed system, with an increasing chance for fainter and fainter sources being lensed.</p>



<div><figure><a href="https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed.jpg"><img decoding="async" width="1024" height="1024" src="https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-1024x1024.jpg" data-src="https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-1024x1024.jpg" alt="" data-srcset="https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-1024x1024.jpg 1024w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-300x300.jpg 300w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-150x150.jpg 150w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-768x768.jpg 768w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-1536x1536.jpg 1536w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-2048x2048.jpg 2048w" data-sizes="(max-width: 1024px) 100vw, 1024px" srcset="https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-1024x1024.jpg 1024w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-300x300.jpg 300w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-150x150.jpg 150w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-768x768.jpg 768w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-1536x1536.jpg 1536w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing_embargoed-2048x2048.jpg 2048w"></a></figure><div>
<p><em>Euclid colour image of the full NGC 6505, composited using data from Euclid’s VIS high-resolution imager (structure), and the NISP near-infrared instrument (colours). The Einstein Ring is visible in around the very center of the galaxy. Credit: ESA/Euclid/Euclid Consortium/NASA, image processing by J.-C. Cuillandre, T. Li&nbsp; </em></p>



<p>(Click to enlarge)</p>
</div></div>



<p>So when ESA and Euclid Consortium scientists looked through the first science data, it did not come as a surprise that they spotted a first first gravitational lens – overall Euclid is expected to 100-fold the number of known lenses and find 100,000 during its 6-year mission. However it is beyond astonishing that the first lens is very nearby, actually located in an NGC galaxy – from the New General Catalogue of nearby galaxies – and that it shows a perfect Einstein Ring of the source galaxy. The lens galaxy is NGC 6505, located at redshift z=0.042, corresponding to a distance of only 590 million light-years. Only five similarly nearby other gravitational lenses are known so far, but none in such a prominent galaxy. NGC 6505 has been known since the year 1884, but no-one up to now was able to take an image as clear as Euclid has done. Follow-up spectroscopy with the Keck telescope on Hawaii and its KCWI integral-field spectrograph showed the source galaxy to lie at redshift z=0.406, or about 4.5 billion light-years distance from us.</p>



<p>While the image of NGC 6505 itself is already stunning, with many other galaxies around it and thousand’s more in the background, the surprise came with the first look into its very center: Is that a ring? And why did it look so peculiar? Galaxies can in fact have rings of stars near their centers that can form from motions of gas and stars – but normally only for rotating spiral galaxies, when at a certain distance from the center no net forces exist to move material further in or out. But this is not expected for a spheroidal galaxy as NGC 6505. With the peculiar structure of the right it was quickly clear that this must be the case of strong gravitational lensing, and the ring was actually not part of NGC 6505 but the distorted image of a background galaxy. A more close inspection and modelling extracted an almost too-good-to-be true Einstein Ring.</p>



<div><figure><img decoding="async" width="400" height="400" src="https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing-Zoom_embargoed.jpg" data-src="https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing-Zoom_embargoed.jpg" alt="" data-srcset="https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing-Zoom_embargoed.jpg 400w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing-Zoom_embargoed-300x300.jpg 300w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing-Zoom_embargoed-150x150.jpg 150w" data-sizes="(max-width: 400px) 100vw, 400px" srcset="https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing-Zoom_embargoed.jpg 400w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing-Zoom_embargoed-300x300.jpg 300w, https://www.euclid-ec.org/wp-content/uploads/Euclid-EWS-NGC6505-EinsteinRing-Zoom_embargoed-150x150.jpg 150w"></figure><p><em>The lensed image of the background galaxy, in the very center of NGC 6505, as seen by Euclid’s VIS instrument. The background of NGC 6505’s light has been suppressed for clarity. The ring is made up of the stretched image of the background source galaxy. The bright center is the center of NGC 6505 itself. Credit: ESA/Euclid/Euclid Consortium/NASA, image processing by J.-C. Cuillandre, T. Li</em></p></div>



<p>But this is understandable: never before has an Einstein Ring be found in an NGC galaxy, and never has such an exquisite telescope looked at this galaxy so long. Euclid visited NGC 6505 and the region around it in its initial “Performance Verification” phase in late 2023. Euclid observed this region multiple times, with a total integration time of more than 11 hours with VIS and almost 2 hours with NISP, about 50x longer than most fields in Euclid ongoing Wide Survey. So this image and the whole field have an exceptional signal, low noise, and this allowed an unprecendented modelling of the lens system.</p>



<p>The science analysis was able to extract information about the amount of dark matter in the center of NGC 6505 (11.1% of the total central mass), as well as make very precise statements about the composition of low- and high-mass stars in the central region. Simulation show that the chance for finding a lens at this distance with the brighness that is seen in NGC 6505 was computed 1 in 2000 – and between 4 and 20 further nearby lenses are predicted to still be found in Euclid’s Wide Survey over the next years. However, the fact that this lens in NGC 6505 indeed exists and was observed by Euclid and recognised so quickly, was sheer coincidence – and attention to the data.</p>



<p>More lenses at larger distances <a href="https://www.euclid-ec.org/space-warps-euclid/" target="_blank" rel="noreferrer noopener">are currently being searched for</a> and first results for Euclid’s Q1 Data Release will be presented on the 19th of March 2025.</p>



<p>Further reading:</p>



<ul>
<li><a href="https://www.esa.int/Science_Exploration/Space_Science/Euclid/Euclid_discovers_a_stunning_Einstein_ring" target="_blank" rel="noreferrer noopener">Press release by ESA</a> on the NGC 6505 lens and full-resolution images</li>



<li>Original paper: <em>“Euclid: A complete Einstein ring in NGC 6500”</em>, O’Riordan et al. (2025), published by Astronomy &amp; Astrophysics, <a href="https://www.aanda.org/10.1051/0004-6361/202453014">https://www.aanda.org/10.1051/0004-6361/202453014</a></li>
</ul>

		
		
			</div>

	
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Xcode constantly phones home (175 pts)]]></title>
            <link>https://lapcatsoftware.com/articles/2025/2/5.html?__readwiseLocation=</link>
            <guid>43223075</guid>
            <pubDate>Sat, 01 Mar 2025 20:03:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lapcatsoftware.com/articles/2025/2/5.html?__readwiseLocation=">https://lapcatsoftware.com/articles/2025/2/5.html?__readwiseLocation=</a>, See on <a href="https://news.ycombinator.com/item?id=43223075">Hacker News</a></p>
<div id="readability-page-1" class="page">
<nav>
Previous: <a href="https://lapcatsoftware.com/articles/2025/2/4.html">Inaccessible .bnnsir files on macOS Sequoia</a>
<br><a href="https://lapcatsoftware.com/articles/index.html" title="The Desolation of Blog">Articles index</a></nav>
<header><a href="https://lapcatsoftware.com/">Jeff Johnson</a> (<a href="https://underpassapp.com/">My apps</a>, <a href="https://www.paypal.me/JeffJohnsonWI">PayPal.Me</a>, <a href="https://mastodon.social/@lapcatsoftware" title="@lapcatsoftware@mastodon.social">Mastodon</a>)</header>

<h3>February 24 2025</h3>

<p>Building <a href="https://underpassapp.com/StopTheMadness/">StopTheMadness Pro</a> in Xcode is usually very fast, because my project doesn't use any Swift. It's a combination of Objective-C, which compiles much more quickly than Swift, and JavaScript, which doesn't need to be compiled. However, sometimes the builds were very slow for some strange reason. Checking the Xcode build transcripts, I found that the delay was in the "Gather provisioning inputs" build phase.</p>
<p><img src="https://lapcatsoftware.com/articles/2025/2/5.png" width="425" height="145" alt="Xcode build messages"></p>
<p>This one phase took 50.6 seconds when the entire build was 56.8 seconds!</p>
<p>I tested with my internet disabled, and the slow builds did not occur. Obviously, though, it's impractical to disable my internet every time I want to build and run. After all, my project is a Safari extension! I do use <a href="https://www.obdev.at/products/littlesnitch/">Little Snitch</a>, but I had previously allowed all connections from Xcode to <code>apple.com</code>, because that's required to upload builds to App Store Connect. When I scrutinized the individual Xcode connections with Little Snitch, I saw that <code>developerservices2.apple.com</code> was responsible for the slow "Gathering provisioning inputs" build phase. When I denied those connections with Little Snitch, my builds were always fast. And successful. The build phase is <em>mostly</em> unnecessary.</p>
<p>I found a <a href="https://developer.apple.com/forums/thread/756120">thread in the Apple Developer Forums</a> that discusses the problem, mentioning the <code>-allowProvisioningUpdates</code> option of the command-line <code>xcodebuild</code> tool. From the <code>man</code> page:</p>
<blockquote>Allow xcodebuild to communicate with the Apple Developer website.
           For automatically signed targets, xcodebuild will create and update
           profiles, app IDs, and certificates. For manually signed targets,
           xcodebuild will download missing or updated provisioning profiles.
           Requires a developer account to have been added in Xcode's Accounts
           preference pane.</blockquote>
<p>Connecting to <code>developerservices2.apple.com</code>, and to some other domains, is required in order to upload a build to App Store Connect. For most local builds, on the other hand, the "Gathering provisioning inputs" build phase is unnecessary and can slow down the build considerably. Thus, I've now denied Xcode connections to <code>developerservices2.apple.com</code> by default in Little Snitch and disable the rule only when uploading to App Store Connect.</p>
<p>During my investigation of slow builds, I noticed some other frequent Xcode connections. For example, Xcode connects to <code>devimages-cdn.apple.com</code> every time it launches. According to Apple's support document <a href="https://support.apple.com/101555">Use Apple products on enterprise networks</a>, that domain is used for "Xcode downloadable components". I assume this refers to platform support in the Components pane of Xcode Settings. (Note that the document doesn't mention <code>developerservices2.apple.com</code>.) Again, though, it's unnecessary to check for updates on every launch. I'd rather not tell Apple whenever I launch Xcode, or whenever I make a local build of my app. It certainly doesn't align with Apple's claim that they believe privacy is a fundamental human right. Or perhaps Apple believes that developers are subhuman…</p>
<p>I've saved the worst for last. For some reason, Xcode phones home to <code>appstoreconnect.apple.com</code> every time I open an Xcode project. This also appears to be unnecessary, and I experience no problems after denying the connections in Little Snitch, so I do! I assume that the connections send identifying information about the Xcode project to Apple, otherwise why even make the connections when opening a project? And all of these connections from Xcode, to every domain, require login to your Apple Developer account, so Apple is definitely receiving identifying information about you in any case.</p>
<p>In effect, Xcode is a developer analytics collection mechanism, whether you like it or not, which I don't.</p>

<header><a href="https://lapcatsoftware.com/">Jeff Johnson</a> (<a href="https://underpassapp.com/">My apps</a>, <a href="https://www.paypal.me/JeffJohnsonWI">PayPal.Me</a>, <a href="https://mastodon.social/@lapcatsoftware" title="@lapcatsoftware@mastodon.social">Mastodon</a>)</header>
<nav><a href="https://lapcatsoftware.com/articles/index.html" title="The Desolation of Blog">Articles index</a><br>
Previous: <a href="https://lapcatsoftware.com/articles/2025/2/4.html">Inaccessible .bnnsir files on macOS Sequoia</a>
</nav>


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[18F GitHub Repositories (104 pts)]]></title>
            <link>https://github.com/18f</link>
            <guid>43222842</guid>
            <pubDate>Sat, 01 Mar 2025 19:39:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/18f">https://github.com/18f</a>, See on <a href="https://news.ycombinator.com/item?id=43222842">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-turbo-body="">
      


    <div>
      <p><a href="#start-of-content" data-skip-target-assigned="false">Skip to content</a>

      <span data-view-component="true">
    <span data-view-component="true"></span>
</span></p>

<react-partial partial-name="keyboard-shortcuts-dialog" data-ssr="false" data-attempted-ssr="false">
  
  
  
</react-partial>




      

          

              


<header role="banner" data-is-top="true" data-color-mode="light" data-light-theme="light" data-dark-theme="dark">
  <h2>Navigation Menu</h2>

  

  <div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_copilot&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_copilot_link_product_navbar&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>GitHub Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;security&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;security_link_product_navbar&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;actions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;actions_link_product_navbar&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;codespaces&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;codespaces_link_product_navbar&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;issues&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;issues_link_product_navbar&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_review&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_review_link_product_navbar&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code Review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;discussions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;discussions_link_product_navbar&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_search&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_search_link_product_navbar&quot;}" href="https://github.com/features/code-search">
      
      <div>
        <p>Code Search</p><p>
        Find more, search less
      </p></div>

    
</a></li>

                </ul>
              </div>
</li>

                  <li>
      
      
</li>

                    <li>
      
      <div>
                    <p><span id="resources-explore-heading">Explore</span></p><ul aria-labelledby="resources-explore-heading">
                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;learning_pathways&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;learning_pathways_link_resources_navbar&quot;}" href="https://resources.github.com/learn/pathways">
      Learning Pathways

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;events_amp_webinars&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;events_amp_webinars_link_resources_navbar&quot;}" href="https://resources.github.com/">
      Events &amp; Webinars

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;ebooks_amp_whitepapers&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;ebooks_amp_whitepapers_link_resources_navbar&quot;}" href="https://github.com/resources/whitepapers">
      Ebooks &amp; Whitepapers

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;customer_stories&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;customer_stories_link_resources_navbar&quot;}" href="https://github.com/customer-stories">
      Customer Stories

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;partners&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;partners_link_resources_navbar&quot;}" href="https://partner.github.com/">
      Partners

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;executive_insights&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;executive_insights_link_resources_navbar&quot;}" href="https://github.com/solutions/executive-insights">
      Executive Insights

    
</a></li>

                </ul>
              </div>
</li>


                <li>
      
      <div>
              <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_sponsors&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_sponsors_link_open_source_navbar&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

                </ul>
              </div>
              <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;the_readme_project&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;the_readme_project_link_open_source_navbar&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

                </ul>
              </div>
              
          </div>
</li>


                <li>
      
      <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;enterprise_platform&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;enterprise_platform_link_enterprise_navbar&quot;}" href="https://github.com/enterprise">
      
      <div>
        <p>Enterprise platform</p><p>
        AI-powered developer platform
      </p></div>

    
</a></li>

                </ul>
              </div>
</li>


                <li>
    <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;pricing&quot;,&quot;context&quot;:&quot;global&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;pricing_link_global_navbar&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="org:18F" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="2xnCZgBDRPSYj-0wFXfwBwt-DSa8p8aUoWsVI4frJGskZKEtVyvb0O6wG3S37bx80mo6ZWGbMLDlMAXrZ788IQ" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="" data-current-org="18F" data-current-owner="" data-logged-in="false" data-copilot-chat-enabled="false" data-nl-search-enabled="false" data-retain-scroll-position="true">
  
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
        
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>


            

              <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Corg-login%3E&amp;source=header" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/18f&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="fc1bbca36bd8909464ac313fa73da6474b4092b65d59ea375a1a715ffb972ec4" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<org-login>;ref_cta:Sign up;ref_loc:header logged out&quot;}">
                Sign up
              </a>
          
        </p></div>
      </div>
</header>

      
    </div>

  








    


    






  <div data-commit-hovercards-enabled="" data-discussion-hovercards-enabled="" data-issue-and-pr-hovercards-enabled="" data-project-hovercards-enabled="">
      <main>
        

















<div itemscope="" itemtype="http://schema.org/Organization">
  


<header>
  <div>
        <p><img itemprop="image" src="https://avatars.githubusercontent.com/u/6233994?s=200&amp;v=4" width="100" height="100" alt="@18F">
        </p>
      <div>
        

          <div><p>18F builds effective, user-centric digital services focused on the interaction between government &amp; the people it serves. Provided by GSA.</p></div>

        <ul>

          <li>
          </li>

        </ul>

        
      </div>

      

    </div>

  <div>
  <nav data-url="/users/18F/tab_counts" aria-label="Organization">
    <div>
      <ul>
          <li data-tab-item="org-header-overview-tab">
  <a href="https://github.com/18F">
    
    Overview
  </a>
</li>

          <li data-tab-item="org-header-repositories-tab">
  <a href="https://github.com/orgs/18F/repositories">
    
    Repositories
      <span title="Not available" data-view-component="true"></span>
  </a>
</li>

          
          <li data-tab-item="org-header-projects-tab">
  <a href="https://github.com/orgs/18F/projects" data-hotkey="g b">
    
    Projects
      <span title="Not available" data-view-component="true"></span>
  </a>
</li>

          <li data-tab-item="org-header-packages-tab">
  <a href="https://github.com/orgs/18F/packages">
    
    Packages
  </a>
</li>

          
          <li data-tab-item="org-header-people-tab">
  <a href="https://github.com/orgs/18F/people">
    
    People
      <span title="Not available" data-view-component="true"></span>
  </a>
</li>

          
          
          
          
      </ul>

      
    </div>
  </nav>
</div>


    
</header>


  <div data-view-component="true">

  <div data-hpc="" data-view-component="true">
  

  
  
  

    <div>

  <h2>
        Pinned

    <span data-view-component="true">
      <span>Loading</span>
</span>
    <span role="status" aria-live="polite" data-error-text="Something went wrong." data-success-text="Order updated."></span>
  </h2>

      <ol>
      <li>
  <div>
      


      <p>
        Lightweight analytics reporting and publishing tool for Digital Analytics Program's Google Analytics 360 data.
      </p>

      <p>
          <span>
  <span></span>
  <span itemprop="programmingLanguage">JavaScript</span>
</span>

          <a href="https://github.com/18F/analytics-reporter/stargazers">
            <svg aria-label="stars" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z"></path>
</svg>
            642
          </a>
          <a href="https://github.com/18F/analytics-reporter/forks">
            <svg aria-label="forks" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>
            174
          </a>
      </p>
    </div>
</li>

      <li>
  <div>
      


      <p>
        A lightweight pipeline, locally or in Lambda, for scanning things like HTTPS, third party service use, and web accessibility.
      </p>

      <p>
          <span>
  <span></span>
  <span itemprop="programmingLanguage">Python</span>
</span>

          <a href="https://github.com/18F/domain-scan/stargazers">
            <svg aria-label="stars" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z"></path>
</svg>
            377
          </a>
          <a href="https://github.com/18F/domain-scan/forks">
            <svg aria-label="forks" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>
            150
          </a>
      </p>
    </div>
</li>

      <li>
  
</li>

</ol>

</div>


    <div id="org-profile-repositories">
      <h3>
        
        Repositories
      </h3>
      <div>
          <!-- '"` --><!-- </textarea></xmp> --><form data-autosearch-results-container="org-repositories" role="search" data-turbo="false" action="/18F" accept-charset="UTF-8" method="get">
            <div>
                <details id="type-options">
                    <summary aria-haspopup="true" data-view-component="true">    <span>Type</span>
                    <span></span>
</summary>                  <details-menu>
                    <div>
                      <header>
                        <span>Select type</span>
                        
                      </header>
                      <p><label role="menuitemradio" aria-checked="true" tabindex="0">
                            
                            
                            <span data-menu-button-text="">All</span>
                          </label>
                          <label role="menuitemradio" aria-checked="false" tabindex="0">
                            
                            
                            <span data-menu-button-text="">Public</span>
                          </label>
                          <label role="menuitemradio" aria-checked="false" tabindex="0">
                            
                            
                            <span data-menu-button-text="">Sources</span>
                          </label>
                          <label role="menuitemradio" aria-checked="false" tabindex="0">
                            
                            
                            <span data-menu-button-text="">Forks</span>
                          </label>
                          <label role="menuitemradio" aria-checked="false" tabindex="0">
                            
                            
                            <span data-menu-button-text="">Archived</span>
                          </label>
                          <label role="menuitemradio" aria-checked="false" tabindex="0">
                            
                            
                            <span data-menu-button-text="">Mirrors</span>
                          </label>
                          <label role="menuitemradio" aria-checked="false" tabindex="0">
                            
                            
                            <span data-menu-button-text="">Templates</span>
                          </label>
                      </p>
                    </div>
                  </details-menu>
                </details>

                  <details id="language-options">
                      <summary aria-haspopup="true" data-view-component="true">    <span>Language</span>
                      <span></span>
</summary>                    <details-menu>
                      <div>
                        <header>
                          <span>Select language</span>
                          
                        </header>
                        <p><label role="menuitemradio" aria-checked="true" tabindex="0">
                            
                            
                            <span data-menu-button-text="">All</span>
                          </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">C</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">C#</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">CoffeeScript</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">CSS</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Dart</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Dockerfile</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">EJS</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Elixir</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Emacs Lisp</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Gherkin</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Go</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">HCL</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">HTML</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Java</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">JavaScript</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Jupyter Notebook</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Liquid</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Makefile</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Mermaid</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Nginx</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Objective-C</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">OpenSCAD</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">PHP</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">PLpgSQL</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">PowerShell</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Protocol Buffer</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Python</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Ruby</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">SCSS</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Shell</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">Swift</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">TypeScript</span>
                            </label>
                            <label role="menuitemradio" aria-checked="false" tabindex="0">
                              
                              
                              <span data-menu-button-text="">XSLT</span>
                            </label>
                        </p>
                      </div>
                    </details-menu>
                  </details>

                <details id="sort-options">
                    <summary aria-haspopup="true" data-view-component="true">    <span>Sort</span>
                    <span></span>
</summary>                  <details-menu>
                    <div>
                      <header>
                        <span>Select order</span>
                        
                      </header>
                      <p><label role="menuitemradio" aria-checked="true" tabindex="0">
                          
                          
                          <span data-menu-button-text="">Last updated</span>
                        </label>
                        <label role="menuitemradio" aria-checked="false" tabindex="0">
                          
                          
                          <span data-menu-button-text="">Name</span>
                        </label>
                        <label role="menuitemradio" aria-checked="false" tabindex="0">
                          
                          
                          <span data-menu-button-text="">Stars</span>
                        </label>
                      </p>
                    </div>
                  </details-menu>
                </details>
                
              </div>
</form>
        </div>
      <div id="org-repositories" data-delay-results="">
    <p><span data-autosearch-results="">Showing 10 of 1210 repositories</span></p><div data-view-component="true">
  
  
    <ul data-view-component="true">
        <li data-view-component="true">          <div itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope" data-view-component="true">
  
    <div data-view-component="true">
      <div data-view-component="true">
        <p><a itemprop="name codeRepository" data-hovercard-type="repository" data-hovercard-url="/18F/fedramp-data/hovercard" data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:repo_nwo&quot;}" href="https://github.com/18F/fedramp-data" data-view-component="true">fedramp-data</a>
        <span title="Label: Public" data-view-component="true">
          Public
</span></p><p itemprop="description" data-view-component="true">
            A repository for the data underlying the FedRamp Dashboard
</p></div>
      <p><span data-view-component="true"><a id="commit-activity-link-51036998" href="https://github.com/18F/fedramp-data/graphs/commit-activity" data-view-component="true"></a>  <tool-tip id="tooltip-e77e37f1-e34a-4f36-9d90-3d3b90c23ff3" for="commit-activity-link-51036998" popover="manual" data-direction="s" data-type="label" data-view-component="true">18F/fedramp-data’s past year of commit activity</tool-tip></span>
</p></div>
    <div data-view-component="true">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">JavaScript</span>
</span></p><a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:stars&quot;}" aria-label="31 stars" href="https://github.com/18F/fedramp-data/stargazers" data-view-component="true">
          31</a>

        <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:forks&quot;}" aria-label="34 forks" href="https://github.com/18F/fedramp-data/forks" data-view-component="true">
          34</a>
      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:issues&quot;}" aria-label="0 issues" href="https://github.com/18F/fedramp-data/issues" data-view-component="true">
        0</a>

      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:pull_requests&quot;}" aria-label="3 pull requests" href="https://github.com/18F/fedramp-data/pulls" data-view-component="true">
        3</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2025-03-02T05:41:05Z">Mar 2, 2025</relative-time>
</span></p></div></div>
</li>
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">
      
      <p><span data-view-component="true"><a id="commit-activity-link-28643936" href="https://github.com/18F/analytics.usa.gov/graphs/commit-activity" data-view-component="true"></a>  <tool-tip id="tooltip-c460ecfc-7e4b-4547-a196-6bfa622e1ef4" for="commit-activity-link-28643936" popover="manual" data-direction="s" data-type="label" data-view-component="true">18F/analytics.usa.gov’s past year of commit activity</tool-tip></span>
</p></div>
</li>
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">
      <div data-view-component="true">
        <p><a itemprop="name codeRepository" data-hovercard-type="repository" data-hovercard-url="/18F/identity-idp/hovercard" data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:repo_nwo&quot;}" href="https://github.com/18F/identity-idp" data-view-component="true">identity-idp</a>
        <span title="Label: Public" data-view-component="true">
          Public
</span></p><p itemprop="description" data-view-component="true">
            Login.gov Core App: Identity Provider (IdP)
</p></div>
      <p><span data-view-component="true"><a id="commit-activity-link-50386243" href="https://github.com/18F/identity-idp/graphs/commit-activity" data-view-component="true"></a>  <tool-tip id="tooltip-4b922402-e177-4fa1-b536-a3020090cdd3" for="commit-activity-link-50386243" popover="manual" data-direction="s" data-type="label" data-view-component="true">18F/identity-idp’s past year of commit activity</tool-tip></span>
</p></div>
</li>
        <li data-view-component="true">          <div itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope" data-view-component="true">
  
    <div data-view-component="true">
      
      <p><span data-view-component="true"><a id="commit-activity-link-58409260" href="https://github.com/18F/identity-dashboard/graphs/commit-activity" data-view-component="true"></a>  <tool-tip id="tooltip-a6da7520-b4f3-46c0-8ce3-999a482c11cb" for="commit-activity-link-58409260" popover="manual" data-direction="s" data-type="label" data-view-component="true">18F/identity-dashboard’s past year of commit activity</tool-tip></span>
</p></div>
    <div data-view-component="true">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">Ruby</span>
</span></p><a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:stars&quot;}" aria-label="24 stars" href="https://github.com/18F/identity-dashboard/stargazers" data-view-component="true">
          24</a>

        <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:forks&quot;}" aria-label="27 forks" href="https://github.com/18F/identity-dashboard/forks" data-view-component="true">
          27</a>
      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:issues&quot;}" aria-label="3 issues" href="https://github.com/18F/identity-dashboard/issues" data-view-component="true">
        3</a>

      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:pull_requests&quot;}" aria-label="0 pull requests" href="https://github.com/18F/identity-dashboard/pulls" data-view-component="true">
        0</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2025-02-28T19:30:56Z">Feb 28, 2025</relative-time>
</span></p></div></div>
</li>
        <li data-view-component="true">          <div itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope" data-view-component="true">
  
    <div data-view-component="true">
      
      <p><span data-view-component="true"><a id="commit-activity-link-249787907" href="https://github.com/18F/identity-loadtest/graphs/commit-activity" data-view-component="true"></a>  <tool-tip id="tooltip-90df7cec-9060-415c-9bdd-ed72004bc339" for="commit-activity-link-249787907" popover="manual" data-direction="s" data-type="label" data-view-component="true">18F/identity-loadtest’s past year of commit activity</tool-tip></span>
</p></div>
    <div data-view-component="true">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">Python</span>
</span></p><a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:stars&quot;}" aria-label="3 stars" href="https://github.com/18F/identity-loadtest/stargazers" data-view-component="true">
          3</a>
        <p><span data-view-component="true">
          CC0-1.0
</span></p><a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:forks&quot;}" aria-label="18 forks" href="https://github.com/18F/identity-loadtest/forks" data-view-component="true">
          18</a>
      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:issues&quot;}" aria-label="4 issues" href="https://github.com/18F/identity-loadtest/issues" data-view-component="true">
        4</a>

      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:pull_requests&quot;}" aria-label="0 pull requests" href="https://github.com/18F/identity-loadtest/pulls" data-view-component="true">
        0</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2025-02-28T15:12:45Z">Feb 28, 2025</relative-time>
</span></p></div></div>
</li>
        <li data-view-component="true">          <div itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope" data-view-component="true">
  
    <div data-view-component="true">
      <div data-view-component="true">
        <p><a itemprop="name codeRepository" data-hovercard-type="repository" data-hovercard-url="/18F/dns/hovercard" data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:repo_nwo&quot;}" href="https://github.com/18F/dns" data-view-component="true">dns</a>
        <span title="Label: Public" data-view-component="true">
          Public
</span></p><p itemprop="description" data-view-component="true">
            DNS configuration for domains managed by GSA TTS
</p></div>
      <p><span data-view-component="true"><a id="commit-activity-link-62665500" href="https://github.com/18F/dns/graphs/commit-activity" data-view-component="true"></a>  <tool-tip id="tooltip-b8dafafb-bf59-4312-ac26-c25417fc02ce" for="commit-activity-link-62665500" popover="manual" data-direction="s" data-type="label" data-view-component="true">18F/dns’s past year of commit activity</tool-tip></span>
</p></div>
    <div data-view-component="true">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">HCL</span>
</span></p><a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:stars&quot;}" aria-label="45 stars" href="https://github.com/18F/dns/stargazers" data-view-component="true">
          45</a>

        <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:forks&quot;}" aria-label="70 forks" href="https://github.com/18F/dns/forks" data-view-component="true">
          70</a>
      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:issues&quot;}" aria-label="7 issues" href="https://github.com/18F/dns/issues" data-view-component="true">
        7</a>

      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:pull_requests&quot;}" aria-label="0 pull requests" href="https://github.com/18F/dns/pulls" data-view-component="true">
        0</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2025-02-27T21:02:20Z">Feb 27, 2025</relative-time>
</span></p></div></div>
</li>
        <li data-view-component="true">          <div data-view-component="true" itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope">
      <div data-view-component="true">
        <p><a itemprop="name codeRepository" data-hovercard-type="repository" data-hovercard-url="/18F/handbook/hovercard" data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:repo_nwo&quot;}" href="https://github.com/18F/handbook" data-view-component="true">handbook</a>
        <span title="Label: Public" data-view-component="true">
          Public
</span></p><p itemprop="description" data-view-component="true">
            The home of policies and guidelines that make up TTS.
</p></div>
      <p><span data-view-component="true"><a id="commit-activity-link-69692928" href="https://github.com/18F/handbook/graphs/commit-activity" data-view-component="true"></a>  <tool-tip id="tooltip-91edd215-3a85-4e4a-b537-5e592276cadf" for="commit-activity-link-69692928" popover="manual" data-direction="s" data-type="label" data-view-component="true">18F/handbook’s past year of commit activity</tool-tip></span>
</p></div>
</li>
        <li data-view-component="true">          <div itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope" data-view-component="true">
  
    <div data-view-component="true">
      
      <p><span data-view-component="true"><a id="commit-activity-link-81472081" href="https://github.com/18F/identity-oidc-sinatra/graphs/commit-activity" data-view-component="true"></a>  <tool-tip id="tooltip-21c947e1-aa4b-45dd-9bb0-6f2606d9fa2b" for="commit-activity-link-81472081" popover="manual" data-direction="s" data-type="label" data-view-component="true">18F/identity-oidc-sinatra’s past year of commit activity</tool-tip></span>
</p></div>
    <div data-view-component="true">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">Ruby</span>
</span></p><a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:stars&quot;}" aria-label="32 stars" href="https://github.com/18F/identity-oidc-sinatra/stargazers" data-view-component="true">
          32</a>

        <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:forks&quot;}" aria-label="30 forks" href="https://github.com/18F/identity-oidc-sinatra/forks" data-view-component="true">
          30</a>
      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:issues&quot;}" aria-label="4 issues" href="https://github.com/18F/identity-oidc-sinatra/issues" data-view-component="true">
        4</a>

      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:pull_requests&quot;}" aria-label="4 pull requests" href="https://github.com/18F/identity-oidc-sinatra/pulls" data-view-component="true">
        4</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2025-02-27T15:18:31Z">Feb 27, 2025</relative-time>
</span></p></div></div>
</li>
        <li data-view-component="true">          <div itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope" data-view-component="true">
  
    <div data-view-component="true">
      
      <p><span data-view-component="true"><a id="commit-activity-link-56879790" href="https://github.com/18F/identity-saml-sinatra/graphs/commit-activity" data-view-component="true"></a>  <tool-tip id="tooltip-e5d59c5b-0a11-4ef7-a45f-5b2ba7173612" for="commit-activity-link-56879790" popover="manual" data-direction="s" data-type="label" data-view-component="true">18F/identity-saml-sinatra’s past year of commit activity</tool-tip></span>
</p></div>
    <div data-view-component="true">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">CSS</span>
</span></p><a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:stars&quot;}" aria-label="22 stars" href="https://github.com/18F/identity-saml-sinatra/stargazers" data-view-component="true">
          22</a>

        <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:forks&quot;}" aria-label="19 forks" href="https://github.com/18F/identity-saml-sinatra/forks" data-view-component="true">
          19</a>
      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:issues&quot;}" aria-label="0 issues" href="https://github.com/18F/identity-saml-sinatra/issues" data-view-component="true">
        0</a>

      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:pull_requests&quot;}" aria-label="28 pull requests" href="https://github.com/18F/identity-saml-sinatra/pulls" data-view-component="true">
        28</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2025-02-27T15:12:54Z">Feb 27, 2025</relative-time>
</span></p></div></div>
</li>
        <li data-view-component="true">          <div itemprop="owns" itemtype="http://schema.org/Code" itemscope="itemscope" data-view-component="true">
  
    <div data-view-component="true">
      <div data-view-component="true">
        <p><a itemprop="name codeRepository" data-hovercard-type="repository" data-hovercard-url="/18F/analytics-reporter/hovercard" data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:repo_nwo&quot;}" href="https://github.com/18F/analytics-reporter" data-view-component="true">analytics-reporter</a>
        <span title="Label: Public" data-view-component="true">
          Public
</span></p><p itemprop="description" data-view-component="true">
            Lightweight analytics reporting and publishing tool for Digital Analytics Program's Google Analytics 360 data.
</p></div>
      <p><span data-view-component="true"><a id="commit-activity-link-27411729" href="https://github.com/18F/analytics-reporter/graphs/commit-activity" data-view-component="true"></a>  <tool-tip id="tooltip-62a556ff-7c39-417d-b2d5-f2375cbb9a14" for="commit-activity-link-27411729" popover="manual" data-direction="s" data-type="label" data-view-component="true">18F/analytics-reporter’s past year of commit activity</tool-tip></span>
</p></div>
    <div data-view-component="true">

        <p><span>
  <span></span>
  <span itemprop="programmingLanguage">JavaScript</span>
</span></p><a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:stars&quot;}" aria-label="642 stars" href="https://github.com/18F/analytics-reporter/stargazers" data-view-component="true">
          642</a>

        <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:forks&quot;}" aria-label="172 forks" href="https://github.com/18F/analytics-reporter/forks" data-view-component="true">
          172</a>
      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:issues&quot;}" aria-label="2 issues" href="https://github.com/18F/analytics-reporter/issues" data-view-component="true">
        2</a>

      <a data-analytics-event="{&quot;category&quot;:&quot;profiles:org_repos_list_item&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;target:pull_requests&quot;}" aria-label="6 pull requests" href="https://github.com/18F/analytics-reporter/pulls" data-view-component="true">
        6</a>
      <p><span data-view-component="true">
          Updated <relative-time datetime="2025-02-26T22:11:03Z">Feb 26, 2025</relative-time>
</span></p></div></div>
</li>
</ul>  
</div></div>
  </div>
</div>

    <div data-view-component="true">
            





<div id="org-members">
    <a href="https://github.com/orgs/18F/people" data-ga-click="Orgs, go to people, location:profile people module; text:People">
      <h4>People</h4>
    </a>
    <p>
      This organization has no public members. You must be a member to see who’s a part of this organization.
    </p>
  </div>

  


    


    <div>
        <p>
          <h4>Most used topics</h4>
        </p>
        
      </div>



        </div>
</div>
</div>

      </main>
  </div>

          



    <ghcc-consent id="ghcc" data-initial-cookie-consent-allowed="" data-cookie-consent-required="true"></ghcc-consent>



  

    <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm" open="">
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog="">
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

    

    <template id="snippet-clipboard-copy-button">
  <div class="zeroclipboard-container position-absolute right-0 top-0">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn js-clipboard-copy m-2 p-0" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon m-2">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>
<template id="snippet-clipboard-copy-button-unpositioned">
  <div class="zeroclipboard-container">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 d-flex flex-justify-center flex-items-center" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>




    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The $100T Disruption: The Unforeseen Economic Earthquake (355 pts)]]></title>
            <link>https://wildfirelabs.substack.com/p/the-100-trillion-disruption-the-unforeseen</link>
            <guid>43222791</guid>
            <pubDate>Sat, 01 Mar 2025 19:33:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://wildfirelabs.substack.com/p/the-100-trillion-disruption-the-unforeseen">https://wildfirelabs.substack.com/p/the-100-trillion-disruption-the-unforeseen</a>, See on <a href="https://news.ycombinator.com/item?id=43222791">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg" width="1024" height="768" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:768,&quot;width&quot;:1024,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:192858,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb2d387b0-fa14-4a81-91b5-6114f1142067_1024x768.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>In 2021, Lisa Chen, a software engineer, started a new weight-loss medication. Then, something interesting happened at her local coffee shop, her employer's healthcare costs, and the global economy.</p><p>In six months, Lisa stopped buying her daily morning muffin, causing the coffee shop to lose $600 in annual revenue from one customer. Within a year, she canceled her beer-of-the-month subscription and stopped ordering late-night DoorDash. By 2023, her grocery bill dropped 40%, alcohol spending fell 85%, and impulse Amazon purchases plunged 60%.</p><p>Lisa is one person. Her story will become the story of hundreds of millions. That's where this becomes intriguing.</p><p>Economic revolutions rarely come from expected sources. Despite the AI hype, the biggest transformation of our lifetime might come from diabetes drugs.</p><p>Let me explain why this is more important than you realize.</p><p>If you told someone in 1850 that air conditioning would reshape the global economy, they'd think you were crazy. But it made the American South habitable year-round, revolutionized manufacturing in hot climates, and enabled computing by keeping servers cool. The most significant changes arise from the most surprising sources.</p><p>GLP-1 drugs are our air conditioner moment.</p><p>We're not just talking about weight loss. We're discussing the first medication that effectively regulates human impulse control. Think about that.</p><p>Our economy is built on impulses. These include midnight snacks, impulse purchases, extra drinks, and the "treat yourself" mentality driving trillion-dollar industries.</p><p>What happens when a weekly injection regulates those impulses?</p><p>Here's where the numbers become astonishing.</p><p>Analysts predict that by 2030, 30% of American adults will be on these medications, changing consumption patterns for 78 million people. But those projections, impressive as they seem, fail to capture the full picture like 1995 internet forecasts.</p><p>They're focusing on the first-order effects: weight loss, healthcare savings, reduced food consumption.</p><p>The significant economic impact occurs in the second and third-order effects.</p><p>Consider this: When alcohol consumption drops 40% (as it does for many people on these medications), we're not just talking about lower beer sales. We're talking about:</p><p>- 45% reduction in DUIs</p><p>- A 28% drop in violent crime</p><p>- A fundamental restructuring of the social economy</p><p>- A transformation of dating apps and social media engagement</p><p>- A reimagining of every restaurant's business model</p><p>When companies like Google see their healthcare costs drop by $12,000 per employee annually and productivity increase by 25%, we observe a restructuring of corporate America that makes remote work a minor adjustment.</p><p>The real economic impact occurs in the second and third-order effects. In complex systems, the most interesting changes occur at the edges.</p><p>Let me show you what I mean.</p><p>A movie theater chain recently analyzed their user data and discovered that 72% of their profits came from concessions, primarily from impulse purchases made by people who swore they "wouldn't buy anything."</p><p>Imagine a world where those impulses are chemically regulated.</p><p>AMC Theaters is testing "micro-portion" concessions and "experience-focused" premium seating. But they're missing the bigger picture: When human impulse control changes, the entire entertainment venue business model must change.</p><p>The NFL understands this better than most. They're redesigning stadiums for 2026, converting 40% of their concession space into "experience zones." They know that in five years, selling $14 beers and $8 hot dogs won't pay the bills. The future is about selling experiences that don't rely on impulse purchases.</p><p>But here's where it gets interesting.</p><p>Consider your struggling local mall. About 40% of its remaining retail tenants rely on impulse purchases for profitability. When those impulses disappear, so does the traditional retail model.</p><p>America's largest mall operator, Simon Property Group, is converting anchor stores into medical centers and wellness spaces. They're doing this because they recognize the writing on the wall.</p><p>The advertising industry is the most fascinating case study.</p><p>For decades, the advertising model was simple: Trigger an emotional response, create an impulse, convert it into a purchase. This foundation supports the $400 billion global advertising industry.</p><p>What happens when those emotional triggers stop working?</p><p>Early consumer data on GLP-1s shows:</p><p>- 65% reduction in response to food advertising</p><p>- 40% lower click-through rates on impulse products</p><p>- 85% decrease in late-night online shopping</p><p>Madison Avenue is quietly panicking. One major agency (which asked not to be named) estimates that 50% of their current advertising strategies will be obsolete by 2027. They are right to worry.</p><p>Here's the plot twist: A new marketing economy is emerging while traditional advertising declines.</p><p>Companies that understand this are adapting:</p><p>- Whole Foods is shifting from endcap promotions to subscription services.</p><p>- Nike is shifting from "Just Do It" impulse messaging to long-term wellness partnerships.</p><p>- American Express is restructuring rewards from dining cashback to health incentives.</p><p>The real estate market is undergoing a transformation.</p><p>A commercial real estate firm modeled the impact of 30% of restaurants reducing their footprint by 40% (current 2028 projection). The result? About 95 million square feet of retail space will need repurposing.</p><p>That's equivalent to 57 Mall of Americas.</p><p>The interesting part isn't the empty space. It's what's filling it: Medical clinics, wellness centers, experience venues, and micro-fulfillment centers for the new economy.</p><p>The pattern here isn't just about decline; it's about transformation.</p><p>Industries built on immediate gratification must answer an uncomfortable question: What's your business model when humans can regulate their impulses?</p><p>Some industries are finding fascinating answers:</p><p>- Movie theaters becoming "social experience centers"</p><p>- Retail spaces becoming venues to "try before you subscribe"</p><p>- Restaurants becoming "social nutrition centers"</p><p>- Shopping malls converting to "wellness districts"</p><p>The smartest players aren't fighting the change. They're surfing the wave.</p><p>Look at Las Vegas. Five major casinos are redesigning their floor plans, shrinking restaurant and bar space by 35% and expanding wellness spas and medical tourism facilities. Vegas, the city built on impulse spending, is investing in the post-impulse economy.</p><p>But here's where it gets darker, and why this story is more significant than the raw numbers suggest.</p><p>Throughout history, every major advancement in human capability has created winners and losers. The industrial revolution created unprecedented wealth while displacing millions. The internet democratized information while decimating traditional industries.</p><p>These drugs create the biggest capability gap between humans since literacy.</p><p>Imagine two employees. One can afford these medications, the other cannot. One has regulated impulses, higher energy, better focus, and lower healthcare costs. The other doesn't. In a few years, data shows the first is three times more likely to be promoted.</p><p>Scale that across society.</p><p>We expect by 2030:</p><p>- 80% coverage in the top income quintile</p><p>- 5% coverage in the bottom quintile</p><p>- An 8:1 access ratio between urban and rural areas</p><p>- A 35% productivity gap between users and non-users</p><p>This isn't just about economics anymore. It's about the society we're creating.</p><p>The optimist in me sees the potential: A healthier, more productive society with lower healthcare costs, less crime, and higher economic output. The $612 billion annual savings could transform American society.</p><p>The realist in me sees the challenges: 8.5 million jobs at risk, widening inequality, and a two-tier society divided not by education or wealth, but by behavioral control.</p><p>The historian in me knows every major economic transformation has been messy, complicated, and unstoppable.</p><p>Here's what I keep returning to: In 1903, the Wright brothers flew their first plane. By 1914, we conducted aerial warfare. By 1969, we were on the moon. The gap between invention and transformation is shrinking with each technological leap.</p><p>We're at the beginning of something similar. This time, we're not transforming transportation, information, or manufacturing. We're transforming human behavior.</p><p>The $100 trillion figure in the title isn't hyperbole; it's conservative. When you change how hundreds of millions of people make decisions, the economic impact is incalculable.</p><p>Ask Lisa's coffee shop.</p><p>The question isn't whether this transformation is coming, but whether we're ready for it and can manage it better than previous economic revolutions.</p><p>History suggests we won't get it right. Trying to stop it would be like halting the internet in 1995.</p><p>The future is coming, one injection at a time. The only question is whether we will shape it or let it shape us.</p><p>______</p><p>Did this post resonate with you? If you found value in these insights, let us know! Hit the 'like' button or share your thoughts in the comments. Your feedback not only motivates us but also helps shape future content. Together, we can build a community that empowers entrepreneurs to thrive. What was your biggest takeaway? We'd love to hear from you!</p><p><em>If you're a software founder looking to turn your idea into a successful startup, Wildfire Labs can help you get there in just 6 months. Check out our program at&nbsp;https://wildfirelabs.io&nbsp;to learn more about our proven process, expert mentors, and the development resources we provide to help you build and scale your company. If you have any questions or need assistance with your startup, don't hesitate to reach out to us at&nbsp;info@wildfirelabs.io.</em></p></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Abusing C to implement JSON parsing with struct methods (101 pts)]]></title>
            <link>https://xnacly.me/posts/2025/json-parser-in-c-with-methods/</link>
            <guid>43222344</guid>
            <pubDate>Sat, 01 Mar 2025 18:53:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://xnacly.me/posts/2025/json-parser-in-c-with-methods/">https://xnacly.me/posts/2025/json-parser-in-c-with-methods/</a>, See on <a href="https://news.ycombinator.com/item?id=43222344">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2 id="idea">Idea</h2><ol><li>Build a JSON parser in c</li><li>Instead of using by itself functions: attach functions to a struct and use
these as methods</li><li>make it C issue family free (segfaults, leaks, stack overflows, etc…)</li><li>provide an ergonomic API</li></ol><h3 id="usage">Usage</h3><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>#include</span> <span>"json.h"</span><span>
</span></span></span><span><span> 2</span><span><span>#include</span> <span>&lt;stdlib.h&gt;</span><span>
</span></span></span><span><span> 3</span><span><span></span>
</span></span><span><span> 4</span><span><span>int</span> <span>main</span>(<span>void</span>) {
</span></span><span><span> 5</span><span>  <span>struct</span> json json <span>=</span> <span>json_new</span>(<span>JSON</span>({
</span></span><span><span> 6</span><span>    <span>"object"</span> <span>:</span> {},
</span></span><span><span> 7</span><span>    <span>"array"</span> <span>:</span> [[]],
</span></span><span><span> 8</span><span>    <span>"atoms"</span> <span>:</span> [ <span>"string"</span>, <span>0.1</span>, <span>true</span>, <span>false</span>, null ]
</span></span><span><span> 9</span><span>  }));
</span></span><span><span>10</span><span>  <span>struct</span> json_value json_value <span>=</span> json.<span>parse</span>(<span>&amp;</span>json);
</span></span><span><span>11</span><span>  <span>json_print_value</span>(<span>&amp;</span>json_value);
</span></span><span><span>12</span><span>  <span>puts</span>(<span>""</span>);
</span></span><span><span>13</span><span>  <span>json_free_value</span>(<span>&amp;</span>json_value);
</span></span><span><span>14</span><span>  <span>return</span> EXIT_SUCCESS;
</span></span><span><span>15</span><span>}</span></span></code></pre></div><div id="callout"><h3>Tip - Compiling C projects the easy way</h3><blockquote><p>Don’t take this as a guide for using make, in my projects I just use it as a
command runner.</p></blockquote><h4 id="compiler-flags">Compiler flags</h4><blockquote><p>These flags can be specific to <code>gcc</code>, I use <code>gcc (GCC) 14.2.1 20250207</code>, so
take this with a grain of salt.</p></blockquote><p>I use these flags in almost every c project I ever started.</p><p><span>SH</span></p><div><pre tabindex="0"><code data-lang="sh"><span><span> 1</span><span>gcc -std<span>=</span>c23 <span>\
</span></span></span><span><span> 2</span><span><span></span>	-O2 <span>\
</span></span></span><span><span> 3</span><span><span></span>	-Wall <span>\
</span></span></span><span><span> 4</span><span><span></span>	-Wextra <span>\
</span></span></span><span><span> 5</span><span><span></span>	-Werror <span>\
</span></span></span><span><span> 6</span><span><span></span>	-fdiagnostics-color<span>=</span>always <span>\
</span></span></span><span><span> 7</span><span><span></span>	-fsanitize<span>=</span>address,undefined <span>\
</span></span></span><span><span> 8</span><span><span></span>	-fno-common <span>\
</span></span></span><span><span> 9</span><span><span></span>	-Winit-self <span>\
</span></span></span><span><span>10</span><span><span></span>	-Wfloat-equal <span>\
</span></span></span><span><span>11</span><span><span></span>	-Wundef <span>\
</span></span></span><span><span>12</span><span><span></span>	-Wshadow <span>\
</span></span></span><span><span>13</span><span><span></span>	-Wpointer-arith <span>\
</span></span></span><span><span>14</span><span><span></span>	-Wcast-align <span>\
</span></span></span><span><span>15</span><span><span></span>	-Wstrict-prototypes <span>\
</span></span></span><span><span>16</span><span><span></span>	-Wstrict-overflow<span>=</span><span>5</span> <span>\
</span></span></span><span><span>17</span><span><span></span>	-Wwrite-strings <span>\
</span></span></span><span><span>18</span><span><span></span>	-Waggregate-return <span>\
</span></span></span><span><span>19</span><span><span></span>	-Wswitch-default <span>\
</span></span></span><span><span>20</span><span><span></span>	-Wno-discarded-qualifiers <span>\
</span></span></span><span><span>21</span><span><span></span>	-Wno-aggregate-return <span>\
</span></span></span><span><span>22</span><span><span></span>    main.c</span></span></code></pre></div><table><thead><tr><th>Flag</th><th>Description</th></tr></thead><tbody><tr><td><code>-std=c23</code></td><td>set lang standard, i use ISO C23</td></tr><tr><td><code>-O2</code></td><td>optimize more than <code>-O1</code></td></tr><tr><td><code>-Wall</code></td><td>enable a list of warnings</td></tr><tr><td><code>-Wextra</code></td><td>enable more warnings than -Wall</td></tr><tr><td><code>-Werror</code></td><td>convert all warnings to errors</td></tr><tr><td><code>-fdiagnostics-color=always</code></td><td>use color in diagnostics</td></tr><tr><td><code>-fsanitize=address,undefined</code></td><td>enable AddressSanitizer and UndefinedBehaviorSanitizer</td></tr><tr><td><code>-fno-common</code></td><td>place uninitialized global variables in the BSS section</td></tr><tr><td><code>-Winit-self</code></td><td>warn about uninitialized variables</td></tr><tr><td><code>-Wfloat-equal</code></td><td>warn if floating-point values are used in equality comparisons.</td></tr><tr><td><code>-Wundef</code></td><td>warn if an undefined identifier is evaluated</td></tr><tr><td><code>-Wshadow</code></td><td>warn whenever a local variable or type declaration shadows another variable, parameter, type</td></tr><tr><td><code>-Wpointer-arith</code></td><td>warn about anything that depends on the “size of” a function type or of void</td></tr><tr><td><code>-Wcast-align</code></td><td>warn whenever a pointer is cast such that the required alignment of the target is increased.</td></tr><tr><td><code>-Wstrict-prototypes</code></td><td>warn if a function is declared or defined without specifying the argument types</td></tr><tr><td><code>-Wstrict-overflow=5</code></td><td>warns about cases where the compiler optimizes based on the assumption that signed overflow does not occu</td></tr><tr><td><code>-Wwrite-strings</code></td><td>give string constants the type <code>const char[length]</code>, warns on copy into non const char*</td></tr><tr><td><code>-Wswitch-default</code></td><td>warn whenever a switch statement does not have a default case</td></tr><tr><td><code>-Wno-discarded-qualifiers</code></td><td>do not warn if type qualifiers on pointers are being discarded.</td></tr><tr><td><code>-Wno-aggregate-return</code></td><td>do not warn if any functions that return structures or unions are defined or called.</td></tr></tbody></table><h4 id="sourcing-source-files">Sourcing source files</h4><p>I generally keep my header and source files in the same directory as the
makefile, so i use <code>find</code> to find them:</p><p><span>SHELL</span></p><div><pre tabindex="0"><code data-lang="shell"><span><span>1</span><span>shell find . -name <span>"*.c"</span></span></span></code></pre></div><h4 id="make-and-makefiles">Make and Makefiles</h4><blockquote><p>I don’t define the <code>build</code> target as <code>.PHONY</code> because i generally never have
a <code>build</code> directory.</p></blockquote><p>Putting it all together as a makefile:</p><p><span>MAKE</span></p><div><pre tabindex="0"><code data-lang="make"><span><span> 1</span><span><span>CFLAGS</span> <span>:=</span> -std<span>=</span>c23 <span>\
</span></span></span><span><span> 2</span><span><span></span>	-O2 <span>\
</span></span></span><span><span> 3</span><span><span></span>	-Wall <span>\
</span></span></span><span><span> 4</span><span><span></span>	-Wextra <span>\
</span></span></span><span><span> 5</span><span><span></span>	-Werror <span>\
</span></span></span><span><span> 6</span><span><span></span>	-fdiagnostics-color<span>=</span>always <span>\
</span></span></span><span><span> 7</span><span><span></span>	-fsanitize<span>=</span>address,undefined <span>\
</span></span></span><span><span> 8</span><span><span></span>	-fno-common <span>\
</span></span></span><span><span> 9</span><span><span></span>	-Winit-self <span>\
</span></span></span><span><span>10</span><span><span></span>	-Wfloat-equal <span>\
</span></span></span><span><span>11</span><span><span></span>	-Wundef <span>\
</span></span></span><span><span>12</span><span><span></span>	-Wshadow <span>\
</span></span></span><span><span>13</span><span><span></span>	-Wpointer-arith <span>\
</span></span></span><span><span>14</span><span><span></span>	-Wcast-align <span>\
</span></span></span><span><span>15</span><span><span></span>	-Wstrict-prototypes <span>\
</span></span></span><span><span>16</span><span><span></span>	-Wstrict-overflow<span>=</span><span>5</span> <span>\
</span></span></span><span><span>17</span><span><span></span>	-Wwrite-strings <span>\
</span></span></span><span><span>18</span><span><span></span>	-Waggregate-return <span>\
</span></span></span><span><span>19</span><span><span></span>	-Wcast-qual <span>\
</span></span></span><span><span>20</span><span><span></span>	-Wswitch-default <span>\
</span></span></span><span><span>21</span><span><span></span>	-Wno-discarded-qualifiers <span>\
</span></span></span><span><span>22</span><span><span></span>	-Wno-aggregate-return
</span></span><span><span>23</span><span>
</span></span><span><span>24</span><span><span>FILES</span> <span>:=</span> <span>$(</span>shell find . -name <span>"*.c"</span><span>)</span>
</span></span><span><span>25</span><span>
</span></span><span><span>26</span><span><span>build</span><span>:</span>
</span></span><span><span>27</span><span>	<span>$(</span>CC<span>)</span> <span>$(</span>CFLAGS<span>)</span> <span>$(</span>FILES<span>)</span> -o jsoninc
</span></span></code></pre></div></div><h2 id="variadic-macros-to-write-inline-raw-json">Variadic macros to write inline raw JSON</h2><p>This doesn’t really deserve its own section, but I use <code>#&lt;expression&gt;</code> to
stringify C expressions in conjunction with <code>__VA_ARGS__</code>:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span>1</span><span><span>#define JSON(...) #__VA_ARGS__</span></span></span></code></pre></div><p>To enable:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span>1</span><span><span>char</span> <span>*</span>raw_json <span>=</span> <span>JSON</span>({ <span>"array"</span> <span>:</span> [ [], {}] });</span></span></code></pre></div><p>Inlines to:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span>1</span><span><span>char</span> <span>*</span>raw_json <span>=</span> <span>"{ </span><span>\"</span><span>array</span><span>\"</span><span> : [[]], }"</span>;</span></span></code></pre></div><h2 id="representing-json-values-in-memory">Representing JSON values in memory</h2><p>I need a structure to hold a parsed JSON value, their types and their values.</p><h3 id="types-of-json-values">Types of JSON values</h3><p>JSON can be either one of:</p><ol><li>null</li><li>true</li><li>false</li><li>number</li><li>string</li><li>array</li><li>object</li></ol><p>In C i use an enum to represent this:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>// json.h
</span></span></span><span><span> 2</span><span><span></span><span>enum</span> json_type {
</span></span><span><span> 3</span><span>  json_number,
</span></span><span><span> 4</span><span>  json_string,
</span></span><span><span> 5</span><span>  json_boolean,
</span></span><span><span> 6</span><span>  json_null,
</span></span><span><span> 7</span><span>  json_object,
</span></span><span><span> 8</span><span>  json_array,
</span></span><span><span> 9</span><span>};
</span></span><span><span>10</span><span>
</span></span><span><span>11</span><span><span>extern</span> <span>char</span> <span>*</span>json_type_map[];</span></span></code></pre></div><p>And i use <code>json_type_map</code> to map all <code>json_type</code> values to their <code>char*</code> representation:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span>1</span><span><span>char</span> <span>*</span>json_type_map[] <span>=</span> {
</span></span><span><span>2</span><span>    [json_number] <span>=</span> <span>"json_number"</span>,   [json_string] <span>=</span> <span>"json_string"</span>,
</span></span><span><span>3</span><span>    [json_boolean] <span>=</span> <span>"json_boolean"</span>, [json_null] <span>=</span> <span>"json_null"</span>,
</span></span><span><span>4</span><span>    [json_object] <span>=</span> <span>"json_object"</span>,   [json_array] <span>=</span> <span>"json_array"</span>,
</span></span><span><span>5</span><span>};</span></span></code></pre></div><h3 id="json_value--unions-for-atoms-array-elements-or-object-values-and-object-keys">json_value &amp; unions for atoms, array elements or object values and object keys</h3><p>The <code>json_value</code> struct holds the type, as defined above, a union sharing
memory space for either a boolean, a string or a number, a list of <code>json_value</code>
structures as array children or object values, a list of strings that are
object keys and the length for the three aforementioned fields.</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>struct</span> json_value {
</span></span><span><span> 2</span><span>  <span>enum</span> json_type type;
</span></span><span><span> 3</span><span>  <span>union</span> {
</span></span><span><span> 4</span><span>    <span>bool</span> boolean;
</span></span><span><span> 5</span><span>    <span>char</span> <span>*</span>string;
</span></span><span><span> 6</span><span>    <span>double</span> number;
</span></span><span><span> 7</span><span>  } value;
</span></span><span><span> 8</span><span>  <span>struct</span> json_value <span>*</span>values;
</span></span><span><span> 9</span><span>  <span>char</span> <span>**</span>object_keys;
</span></span><span><span>10</span><span>  <span>size_t</span> length;
</span></span><span><span>11</span><span>};</span></span></code></pre></div><h3 id="tearing-values-down">Tearing values down</h3><p>Since some of the fields in <code>json_value</code> are heap allocated, we have to destroy
/ free the structure upon either no longer using it or exiting the process.
<code>json_free_value</code> does exactly this:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>void</span> <span>json_free_value</span>(<span>struct</span> json_value <span>*</span>json_value) {
</span></span><span><span> 2</span><span>  <span>switch</span> (json_value<span>-&gt;</span>type) {
</span></span><span><span> 3</span><span>  <span>case</span> <span>json_string</span>:
</span></span><span><span> 4</span><span>    <span>free</span>(json_value<span>-&gt;</span>value.string);
</span></span><span><span> 5</span><span>    <span>break</span>;
</span></span><span><span> 6</span><span>  <span>case</span> <span>json_object</span>:
</span></span><span><span> 7</span><span>    <span>for</span> (<span>size_t</span> i <span>=</span> <span>0</span>; i <span>&lt;</span> json_value<span>-&gt;</span>length; i<span>++</span>) {
</span></span><span><span> 8</span><span>      <span>free</span>(json_value<span>-&gt;</span>object_keys[i]);
</span></span><span><span> 9</span><span>      <span>json_free_value</span>(<span>&amp;</span>json_value<span>-&gt;</span>values[i]);
</span></span><span><span>10</span><span>    }
</span></span><span><span>11</span><span>    <span>if</span> (json_value<span>-&gt;</span>object_keys <span>!=</span> <span>NULL</span>) {
</span></span><span><span>12</span><span>      <span>free</span>(json_value<span>-&gt;</span>object_keys);
</span></span><span><span>13</span><span>      json_value<span>-&gt;</span>object_keys <span>=</span> <span>NULL</span>;
</span></span><span><span>14</span><span>    }
</span></span><span><span>15</span><span>    <span>if</span> (json_value<span>-&gt;</span>values <span>!=</span> <span>NULL</span>) {
</span></span><span><span>16</span><span>      <span>free</span>(json_value<span>-&gt;</span>values);
</span></span><span><span>17</span><span>      json_value<span>-&gt;</span>values <span>=</span> <span>NULL</span>;
</span></span><span><span>18</span><span>    }
</span></span><span><span>19</span><span>    <span>break</span>;
</span></span><span><span>20</span><span>  <span>case</span> <span>json_array</span>:
</span></span><span><span>21</span><span>    <span>for</span> (<span>size_t</span> i <span>=</span> <span>0</span>; i <span>&lt;</span> json_value<span>-&gt;</span>length; i<span>++</span>) {
</span></span><span><span>22</span><span>      <span>json_free_value</span>(<span>&amp;</span>json_value<span>-&gt;</span>values[i]);
</span></span><span><span>23</span><span>    }
</span></span><span><span>24</span><span>    <span>if</span> (json_value<span>-&gt;</span>values <span>!=</span> <span>NULL</span>) {
</span></span><span><span>25</span><span>      <span>free</span>(json_value<span>-&gt;</span>values);
</span></span><span><span>26</span><span>      json_value<span>-&gt;</span>values <span>=</span> <span>NULL</span>;
</span></span><span><span>27</span><span>    }
</span></span><span><span>28</span><span>    <span>break</span>;
</span></span><span><span>29</span><span>  <span>case</span> <span>json_number</span>:
</span></span><span><span>30</span><span>  <span>case</span> <span>json_boolean</span>:
</span></span><span><span>31</span><span>  <span>case</span> <span>json_null</span>:
</span></span><span><span>32</span><span>  <span>default</span><span>:</span>
</span></span><span><span>33</span><span>    <span>break</span>;
</span></span><span><span>34</span><span>  }
</span></span><span><span>35</span><span>  json_value<span>-&gt;</span>type <span>=</span> json_null;
</span></span><span><span>36</span><span>}</span></span></code></pre></div><p>As simple as that, we ignore stack allocated JSON value variants, such as
<code>json_number</code>, <code>json_boolean</code> and <code>json_null</code>, while freeing allocated memory
space for <code>json_string</code>, each <code>json_array</code> child and <code>json_object</code> keys and
values.</p><h3 id="printing-json_values">Printing json_values</h3><p>Only a memory representation and no way to inspect it has no value to us, thus
I dumped <code>print_json_value</code> into <code>main.c</code>:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>void</span> <span>print_json_value</span>(<span>struct</span> json_value <span>*</span>json_value) {
</span></span><span><span> 2</span><span>  <span>switch</span> (json_value<span>-&gt;</span>type) {
</span></span><span><span> 3</span><span>  <span>case</span> <span>json_null</span>:
</span></span><span><span> 4</span><span>    <span>printf</span>(<span>"null"</span>);
</span></span><span><span> 5</span><span>    <span>break</span>;
</span></span><span><span> 6</span><span>  <span>case</span> <span>json_number</span>:
</span></span><span><span> 7</span><span>    <span>printf</span>(<span>"%f"</span>, json_value<span>-&gt;</span>value.number);
</span></span><span><span> 8</span><span>    <span>break</span>;
</span></span><span><span> 9</span><span>  <span>case</span> <span>json_string</span>:
</span></span><span><span>10</span><span>    <span>printf</span>(<span>"</span><span>\"</span><span>%s</span><span>\"</span><span>"</span>, json_value<span>-&gt;</span>value.string);
</span></span><span><span>11</span><span>    <span>break</span>;
</span></span><span><span>12</span><span>  <span>case</span> <span>json_boolean</span>:
</span></span><span><span>13</span><span>    <span>printf</span>(json_value<span>-&gt;</span>value.boolean <span>?</span> <span>"true"</span> <span>:</span> <span>"false"</span>);
</span></span><span><span>14</span><span>    <span>break</span>;
</span></span><span><span>15</span><span>  <span>case</span> <span>json_object</span>:
</span></span><span><span>16</span><span>    <span>printf</span>(<span>"{"</span>);
</span></span><span><span>17</span><span>    <span>for</span> (<span>size_t</span> i <span>=</span> <span>0</span>; i <span>&lt;</span> json_value<span>-&gt;</span>length; i<span>++</span>) {
</span></span><span><span>18</span><span>      <span>printf</span>(<span>"</span><span>\"</span><span>%s</span><span>\"</span><span>: "</span>, json_value<span>-&gt;</span>object_keys[i]);
</span></span><span><span>19</span><span>      <span>print_json_value</span>(<span>&amp;</span>json_value<span>-&gt;</span>values[i]);
</span></span><span><span>20</span><span>      <span>if</span> (i <span>&lt;</span> json_value<span>-&gt;</span>length <span>-</span> <span>1</span>) {
</span></span><span><span>21</span><span>        <span>printf</span>(<span>", "</span>);
</span></span><span><span>22</span><span>      }
</span></span><span><span>23</span><span>    }
</span></span><span><span>24</span><span>    <span>printf</span>(<span>"}"</span>);
</span></span><span><span>25</span><span>    <span>break</span>;
</span></span><span><span>26</span><span>  <span>case</span> <span>json_array</span>:
</span></span><span><span>27</span><span>    <span>printf</span>(<span>"["</span>);
</span></span><span><span>28</span><span>    <span>for</span> (<span>size_t</span> i <span>=</span> <span>0</span>; i <span>&lt;</span> json_value<span>-&gt;</span>length; i<span>++</span>) {
</span></span><span><span>29</span><span>      <span>print_json_value</span>(<span>&amp;</span>json_value<span>-&gt;</span>values[i]);
</span></span><span><span>30</span><span>      <span>if</span> (i <span>&lt;</span> json_value<span>-&gt;</span>length <span>-</span> <span>1</span>) {
</span></span><span><span>31</span><span>        <span>printf</span>(<span>", "</span>);
</span></span><span><span>32</span><span>      }
</span></span><span><span>33</span><span>    }
</span></span><span><span>34</span><span>    <span>printf</span>(<span>"]"</span>);
</span></span><span><span>35</span><span>    <span>break</span>;
</span></span><span><span>36</span><span>  <span>default</span><span>:</span>
</span></span><span><span>37</span><span>    <span>ASSERT</span>(<span>0</span>, <span>"Unimplemented json_value case"</span>);
</span></span><span><span>38</span><span>    <span>break</span>;
</span></span><span><span>39</span><span>  }
</span></span><span><span>40</span><span>}</span></span></code></pre></div><p>Calling this function:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>int</span> <span>main</span>(<span>void</span>) {
</span></span><span><span> 2</span><span>  <span>struct</span> json_value json_value <span>=</span> {
</span></span><span><span> 3</span><span>      .type <span>=</span> json_array,
</span></span><span><span> 4</span><span>      .length <span>=</span> <span>4</span>,
</span></span><span><span> 5</span><span>      .values <span>=</span>
</span></span><span><span> 6</span><span>          (<span>struct</span> json_value[]){
</span></span><span><span> 7</span><span>              (<span>struct</span> json_value){.type <span>=</span> json_string, .value.string <span>=</span> <span>"hi"</span>},
</span></span><span><span> 8</span><span>              (<span>struct</span> json_value){.type <span>=</span> json_number, .value.number <span>=</span> <span>161</span>},
</span></span><span><span> 9</span><span>              (<span>struct</span> json_value){
</span></span><span><span>10</span><span>                  .type <span>=</span> json_object,
</span></span><span><span>11</span><span>                  .length <span>=</span> <span>1</span>,
</span></span><span><span>12</span><span>                  .object_keys <span>=</span>
</span></span><span><span>13</span><span>                      (<span>char</span> <span>*</span>[]){
</span></span><span><span>14</span><span>                          <span>"key"</span>,
</span></span><span><span>15</span><span>                      },
</span></span><span><span>16</span><span>                  .values <span>=</span>
</span></span><span><span>17</span><span>                      (<span>struct</span> json_value[]){
</span></span><span><span>18</span><span>                          (<span>struct</span> json_value){.type <span>=</span> json_string,
</span></span><span><span>19</span><span>                                              .value.string <span>=</span> <span>"value"</span>},
</span></span><span><span>20</span><span>                      },
</span></span><span><span>21</span><span>              },
</span></span><span><span>22</span><span>              (<span>struct</span> json_value){.type <span>=</span> json_null},
</span></span><span><span>23</span><span>          },
</span></span><span><span>24</span><span>  };
</span></span><span><span>25</span><span>  <span>json_print_value</span>(<span>&amp;</span>json_value);
</span></span><span><span>26</span><span>  <span>puts</span>(<span>""</span>);
</span></span><span><span>27</span><span>  <span>return</span> EXIT_SUCCESS;
</span></span><span><span>28</span><span>}</span></span></code></pre></div><p>Results in:</p><p><span>TEXT</span></p><div><pre tabindex="0"><code data-lang="text"><span><span>1</span><span>["hi", 161.000000, {"key": "value"}, null]</span></span></code></pre></div><h3 id="json-parser-struct-function-pointers-and-how-to-use-them-they-suck"><code>json</code> Parser struct, Function pointers and how to use them (they suck)</h3><p>As contrary as it sounds, one can attach functions to structures in c very
easily, just define a field of a struct as a function pointer, assign a
function to it and you got a method, as you would in Go or Rust.</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>struct</span> json {
</span></span><span><span> 2</span><span>  <span>char</span> <span>*</span>input;
</span></span><span><span> 3</span><span>  <span>size_t</span> pos;
</span></span><span><span> 4</span><span>  <span>size_t</span> length;
</span></span><span><span> 5</span><span>  <span>char</span> (<span>*</span>cur)(<span>struct</span> json <span>*</span>json);
</span></span><span><span> 6</span><span>  <span>bool</span> (<span>*</span>is_eof)(<span>struct</span> json <span>*</span>json);
</span></span><span><span> 7</span><span>  <span>void</span> (<span>*</span>advance)(<span>struct</span> json <span>*</span>json);
</span></span><span><span> 8</span><span>  <span>struct</span> <span>json_value</span> (<span>*</span>atom)(<span>struct</span> json <span>*</span>json);
</span></span><span><span> 9</span><span>  <span>struct</span> <span>json_value</span> (<span>*</span>array)(<span>struct</span> json <span>*</span>json);
</span></span><span><span>10</span><span>  <span>struct</span> <span>json_value</span> (<span>*</span>object)(<span>struct</span> json <span>*</span>json);
</span></span><span><span>11</span><span>  <span>struct</span> <span>json_value</span> (<span>*</span>parse)(<span>struct</span> json <span>*</span>json);
</span></span><span><span>12</span><span>};</span></span></code></pre></div><p>Of course you have to define a function the c way (<code>&lt;return type&gt; &lt;name&gt;(&lt;list of params&gt;);</code>) and assign it to your method field - but I is not that
complicated:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>struct</span> json <span>json_new</span>(<span>char</span> <span>*</span>input) {
</span></span><span><span> 2</span><span>  <span>ASSERT</span>(input <span>!=</span> <span>NULL</span>, <span>"corrupted input"</span>);
</span></span><span><span> 3</span><span>  <span>struct</span> json j <span>=</span> (<span>struct</span> json){
</span></span><span><span> 4</span><span>      .input <span>=</span> input,
</span></span><span><span> 5</span><span>      .length <span>=</span> <span>strlen</span>(input) <span>-</span> <span>1</span>,
</span></span><span><span> 6</span><span>  };
</span></span><span><span> 7</span><span>
</span></span><span><span> 8</span><span>  j.cur <span>=</span> cur;
</span></span><span><span> 9</span><span>  j.is_eof <span>=</span> is_eof;
</span></span><span><span>10</span><span>  j.advance <span>=</span> advance;
</span></span><span><span>11</span><span>  j.parse <span>=</span> parse;
</span></span><span><span>12</span><span>  j.object <span>=</span> object;
</span></span><span><span>13</span><span>  j.array <span>=</span> array;
</span></span><span><span>14</span><span>  j.atom <span>=</span> atom;
</span></span><span><span>15</span><span>
</span></span><span><span>16</span><span>  <span>return</span> j;
</span></span><span><span>17</span><span>}</span></span></code></pre></div><p><code>cur</code>, <code>is_eof</code> and <code>advance</code> are small helper functions:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>static</span> <span>char</span> <span>cur</span>(<span>struct</span> json <span>*</span>json) {
</span></span><span><span> 2</span><span>  <span>ASSERT</span>(json <span>!=</span> <span>NULL</span>, <span>"corrupted internal state"</span>);
</span></span><span><span> 3</span><span>  <span>return</span> json<span>-&gt;</span><span>is_eof</span>(json) <span>?</span> <span>-</span><span>1</span> <span>:</span> json<span>-&gt;</span>input[json<span>-&gt;</span>pos];
</span></span><span><span> 4</span><span>}
</span></span><span><span> 5</span><span>
</span></span><span><span> 6</span><span><span>static</span> <span>bool</span> <span>is_eof</span>(<span>struct</span> json <span>*</span>json) {
</span></span><span><span> 7</span><span>  <span>ASSERT</span>(json <span>!=</span> <span>NULL</span>, <span>"corrupted internal state"</span>);
</span></span><span><span> 8</span><span>  <span>return</span> json<span>-&gt;</span>pos <span>&gt;</span> json<span>-&gt;</span>length;
</span></span><span><span> 9</span><span>}
</span></span><span><span>10</span><span>
</span></span><span><span>11</span><span><span>static</span> <span>void</span> <span>advance</span>(<span>struct</span> json <span>*</span>json) {
</span></span><span><span>12</span><span>  <span>ASSERT</span>(json <span>!=</span> <span>NULL</span>, <span>"corrupted internal state"</span>);
</span></span><span><span>13</span><span>  json<span>-&gt;</span>pos<span>++</span>;
</span></span><span><span>14</span><span>  <span>skip_whitespace</span>(json);
</span></span><span><span>15</span><span>}</span></span></code></pre></div><p><code>ASSERT</code> is a simple assertion macro:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span>1</span><span><span>#define ASSERT(EXP, context)                                                   \
</span></span></span><span><span>2</span><span><span>  if (!(EXP)) {                                                                \
</span></span></span><span><span>3</span><span><span>    fprintf(stderr,                                                            \
</span></span></span><span><span>4</span><span><span>            "jsoninc: ASSERT(" #EXP "): `" context                             \
</span></span></span><span><span>5</span><span><span>            "` failed at %s, line %d\n",                                       \
</span></span></span><span><span>6</span><span><span>            __FILE__, __LINE__);                                               \
</span></span></span><span><span>7</span><span><span>    exit(EXIT_FAILURE);                                                        \
</span></span></span><span><span>8</span><span><span>  }</span></span></span></code></pre></div><p>Failing for instance if the argument to the <code>json_new</code> function is a null pointer:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span>1</span><span><span>int</span> <span>main</span>(<span>void</span>) {
</span></span><span><span>2</span><span>  <span>struct</span> json json <span>=</span> <span>json_new</span>(<span>NULL</span>);
</span></span><span><span>3</span><span>  <span>return</span> EXIT_SUCCESS;
</span></span><span><span>4</span><span>}</span></span></code></pre></div><p>Even with a descriptive comment:</p><p><span>TEXT</span></p><div><pre tabindex="0"><code data-lang="text"><span><span>1</span><span>jsoninc: ASSERT(input != NULL): `corrupted input` failed at ./json.c, line 16</span></span></code></pre></div><h2 id="parsing-json-with-methods">Parsing JSON with methods</h2><p>Since we now have the whole setup out of the way, we can start with the crux of
the project: parsing JSON. Normally I would have done a lexer and parser, but
for the sake of simplicity - I combined these passes into a single parser
architecture.</p><h3 id="ignoring-whitespace">Ignoring Whitespace</h3><p>As far as we are concerned, JSON does not say anything about whitespace - so we
just use the <code>skip_whitespace</code> function to ignore all and any whitespace:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span>1</span><span><span>static</span> <span>void</span> <span>skip_whitespace</span>(<span>struct</span> json <span>*</span>json) {
</span></span><span><span>2</span><span>  <span>while</span> (<span>!</span>json<span>-&gt;</span><span>is_eof</span>(json) <span>&amp;&amp;</span>
</span></span><span><span>3</span><span>         (json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>' '</span> <span>||</span> json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'\t'</span> <span>||</span>
</span></span><span><span>4</span><span>          json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'\n'</span>)) {
</span></span><span><span>5</span><span>    json<span>-&gt;</span>pos<span>++</span>;
</span></span><span><span>6</span><span>  }
</span></span><span><span>7</span><span>}</span></span></code></pre></div><h3 id="parsing-atoms">Parsing Atoms</h3><p>Since JSON has five kinds of an atom, we need to parse them into our
<code>json_value</code> struct using the <code>json-&gt;atom</code> method:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>static</span> <span>struct</span> json_value <span>atom</span>(<span>struct</span> json <span>*</span>json) {
</span></span><span><span> 2</span><span>    <span>ASSERT</span>(json <span>!=</span> <span>NULL</span>, <span>"corrupted internal state"</span>);
</span></span><span><span> 3</span><span>
</span></span><span><span> 4</span><span>    <span>skip_whitespace</span>(json);
</span></span><span><span> 5</span><span>
</span></span><span><span> 6</span><span>    <span>char</span> cc <span>=</span> json<span>-&gt;</span><span>cur</span>(json);
</span></span><span><span> 7</span><span>    <span>if</span> ((cc <span>&gt;=</span> <span>'0'</span> <span>&amp;&amp;</span> cc <span>&lt;=</span> <span>'9'</span>) <span>||</span> cc <span>==</span> <span>'.'</span> <span>||</span> cc <span>==</span> <span>'-'</span>) {
</span></span><span><span> 8</span><span>        <span>return</span> <span>number</span>(json);
</span></span><span><span> 9</span><span>    }
</span></span><span><span>10</span><span>
</span></span><span><span>11</span><span>    <span>switch</span> (cc) {
</span></span><span><span>12</span><span>        <span>// ... all of the atoms ...
</span></span></span><span><span>13</span><span><span></span>    <span>default</span><span>:</span>
</span></span><span><span>14</span><span>        <span>printf</span>(<span>"unknown character '%c' at pos %zu</span><span>\n</span><span>"</span>, json<span>-&gt;</span><span>cur</span>(json), json<span>-&gt;</span>pos);
</span></span><span><span>15</span><span>        <span>ASSERT</span>(<span>false</span>, <span>"unknown character"</span>);
</span></span><span><span>16</span><span>        <span>return</span> (<span>struct</span> json_value){.type <span>=</span> json_null};
</span></span><span><span>17</span><span>    }
</span></span><span><span>18</span><span>}</span></span></code></pre></div><h4 id="numbers">numbers</h4><div id="callout"><h3>Info</h3><p>Technically numbers in JSON should include scientific notation and other fun
stuff, but lets just remember the projects simplicity and my sanity, see
<a href="https://xnacly.me/posts/2025/json-parser-in-c-with-methods/www.json.org/">json.org</a>.</p></div><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>static</span> <span>struct</span> json_value <span>number</span>(<span>struct</span> json <span>*</span>json) {
</span></span><span><span> 2</span><span>  <span>ASSERT</span>(json <span>!=</span> <span>NULL</span>, <span>"corrupted internal state"</span>);
</span></span><span><span> 3</span><span>  <span>size_t</span> start <span>=</span> json<span>-&gt;</span>pos;
</span></span><span><span> 4</span><span>  <span>// i don't give a fuck about scientific notation &lt;3
</span></span></span><span><span> 5</span><span><span></span>  <span>for</span> (<span>char</span> cc <span>=</span> json<span>-&gt;</span><span>cur</span>(json);
</span></span><span><span> 6</span><span>       ((cc <span>&gt;=</span> <span>'0'</span> <span>&amp;&amp;</span> cc <span>&lt;=</span> <span>'9'</span>) <span>||</span> cc <span>==</span> <span>'_'</span> <span>||</span> cc <span>==</span> <span>'.'</span> <span>||</span> cc <span>==</span> <span>'-'</span>);
</span></span><span><span> 7</span><span>       json<span>-&gt;</span><span>advance</span>(json), cc <span>=</span> json<span>-&gt;</span><span>cur</span>(json))
</span></span><span><span> 8</span><span>    ;
</span></span><span><span> 9</span><span>
</span></span><span><span>10</span><span>  <span>char</span> <span>*</span>slice <span>=</span> <span>malloc</span>(<span>sizeof</span>(<span>char</span>) <span>*</span> json<span>-&gt;</span>pos <span>-</span> start <span>+</span> <span>1</span>);
</span></span><span><span>11</span><span>  <span>ASSERT</span>(slice <span>!=</span> <span>NULL</span>, <span>"failed to allocate slice for number parsing"</span>)
</span></span><span><span>12</span><span>  <span>memcpy</span>(slice, json<span>-&gt;</span>input <span>+</span> start, json<span>-&gt;</span>pos <span>-</span> start);
</span></span><span><span>13</span><span>  slice[json<span>-&gt;</span>pos <span>-</span> start] <span>=</span> <span>0</span>;
</span></span><span><span>14</span><span>  <span>double</span> number <span>=</span> <span>strtod</span>(slice, <span>NULL</span>);
</span></span><span><span>15</span><span>  <span>free</span>(slice);
</span></span><span><span>16</span><span>
</span></span><span><span>17</span><span>  <span>return</span> (<span>struct</span> json_value){.type <span>=</span> json_number, .value <span>=</span> {.number <span>=</span> number}};
</span></span><span><span>18</span><span>}</span></span></code></pre></div><p>We keep track of the start of the number, advance as far as the number is still
considered a number (any of <code>0-9 | _ | . | -</code>). Once we hit the end we allocate
a temporary string, copy the chars containing the number from the input string
and terminate the string with <code>\0</code>. <code>strtod</code> is used to convert this string to
a double. Once that is done we free the slice and return the result as a
<code>json_value</code>.</p><h4 id="null-true-and-false">null, true and false</h4><p><code>null</code>, <code>true</code> and <code>false</code> are unique atoms and easy to reason about, regarding
constant size and characters, as such we can just assert their characters:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>static</span> <span>struct</span> json_value <span>atom</span>(<span>struct</span> json <span>*</span>json) {
</span></span><span><span> 2</span><span>  <span>ASSERT</span>(json <span>!=</span> <span>NULL</span>, <span>"corrupted internal state"</span>);
</span></span><span><span> 3</span><span>
</span></span><span><span> 4</span><span>  <span>skip_whitespace</span>(json);
</span></span><span><span> 5</span><span>
</span></span><span><span> 6</span><span>  <span>char</span> cc <span>=</span> json<span>-&gt;</span><span>cur</span>(json);
</span></span><span><span> 7</span><span>  <span>if</span> ((cc <span>&gt;=</span> <span>'0'</span> <span>&amp;&amp;</span> cc <span>&lt;=</span> <span>'9'</span>) <span>||</span> cc <span>==</span> <span>'.'</span> <span>||</span> cc <span>==</span> <span>'-'</span>) {
</span></span><span><span> 8</span><span>    <span>return</span> <span>number</span>(json);
</span></span><span><span> 9</span><span>  }
</span></span><span><span>10</span><span>
</span></span><span><span>11</span><span>  <span>switch</span> (cc) {
</span></span><span><span>12</span><span>  <span>case</span> <span>'n'</span><span>:</span> <span>// null
</span></span></span><span><span>13</span><span><span></span>    json<span>-&gt;</span>pos<span>++</span>;
</span></span><span><span>14</span><span>    <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'u'</span>, <span>"unknown atom 'n', wanted 'null'"</span>)
</span></span><span><span>15</span><span>    json<span>-&gt;</span>pos<span>++</span>;
</span></span><span><span>16</span><span>    <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'l'</span>, <span>"unknown atom 'nu', wanted 'null'"</span>)
</span></span><span><span>17</span><span>    json<span>-&gt;</span>pos<span>++</span>;
</span></span><span><span>18</span><span>    <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'l'</span>, <span>"unknown atom 'nul', wanted 'null'"</span>)
</span></span><span><span>19</span><span>    json<span>-&gt;</span><span>advance</span>(json);
</span></span><span><span>20</span><span>    <span>return</span> (<span>struct</span> json_value){.type <span>=</span> json_null};
</span></span><span><span>21</span><span>  <span>case</span> <span>'t'</span><span>:</span> <span>// true
</span></span></span><span><span>22</span><span><span></span>    json<span>-&gt;</span>pos<span>++</span>;
</span></span><span><span>23</span><span>    <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'r'</span>, <span>"unknown atom 't', wanted 'true'"</span>)
</span></span><span><span>24</span><span>    json<span>-&gt;</span>pos<span>++</span>;
</span></span><span><span>25</span><span>    <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'u'</span>, <span>"unknown atom 'tr', wanted 'true'"</span>)
</span></span><span><span>26</span><span>    json<span>-&gt;</span>pos<span>++</span>;
</span></span><span><span>27</span><span>    <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'e'</span>, <span>"unknown atom 'tru', wanted 'true'"</span>)
</span></span><span><span>28</span><span>    json<span>-&gt;</span><span>advance</span>(json);
</span></span><span><span>29</span><span>    <span>return</span> (<span>struct</span> json_value){.type <span>=</span> json_boolean,
</span></span><span><span>30</span><span>                               .value <span>=</span> {.boolean <span>=</span> <span>true</span>}};
</span></span><span><span>31</span><span>  <span>case</span> <span>'f'</span><span>:</span> <span>// false
</span></span></span><span><span>32</span><span><span></span>    json<span>-&gt;</span>pos<span>++</span>;
</span></span><span><span>33</span><span>    <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'a'</span>, <span>"invalid atom 'f', wanted 'false'"</span>)
</span></span><span><span>34</span><span>    json<span>-&gt;</span>pos<span>++</span>;
</span></span><span><span>35</span><span>    <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'l'</span>, <span>"invalid atom 'fa', wanted 'false'"</span>)
</span></span><span><span>36</span><span>    json<span>-&gt;</span>pos<span>++</span>;
</span></span><span><span>37</span><span>    <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'s'</span>, <span>"invalid atom 'fal', wanted 'false'"</span>)
</span></span><span><span>38</span><span>    json<span>-&gt;</span>pos<span>++</span>;
</span></span><span><span>39</span><span>    <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'e'</span>, <span>"invalid atom 'fals', wanted 'false'"</span>)
</span></span><span><span>40</span><span>    json<span>-&gt;</span><span>advance</span>(json);
</span></span><span><span>41</span><span>    <span>return</span> (<span>struct</span> json_value){.type <span>=</span> json_boolean,
</span></span><span><span>42</span><span>                               .value <span>=</span> {.boolean <span>=</span> <span>false</span>}};
</span></span><span><span>43</span><span>  <span>// ... strings ...
</span></span></span><span><span>44</span><span><span></span>  <span>default</span><span>:</span>
</span></span><span><span>45</span><span>    <span>printf</span>(<span>"unknown character '%c' at pos %zu</span><span>\n</span><span>"</span>, json<span>-&gt;</span><span>cur</span>(json), json<span>-&gt;</span>pos);
</span></span><span><span>46</span><span>    <span>ASSERT</span>(<span>false</span>, <span>"unknown character"</span>);
</span></span><span><span>47</span><span>    <span>return</span> (<span>struct</span> json_value){.type <span>=</span> json_null};
</span></span><span><span>48</span><span>  }
</span></span><span><span>49</span><span>}</span></span></code></pre></div><h4 id="strings">strings</h4><div id="callout"><h3>Info</h3><p>Again, similarly to JSON numbers, JSON strings should include escapes for
quotation marks and other fun stuff, but lets again just remember the projects
simplicity and my sanity, see <a href="https://xnacly.me/posts/2025/json-parser-in-c-with-methods/www.json.org/">json.org</a>.</p></div><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>static</span> <span>char</span> <span>*</span><span>string</span>(<span>struct</span> json <span>*</span>json) {
</span></span><span><span> 2</span><span>  json<span>-&gt;</span><span>advance</span>(json);
</span></span><span><span> 3</span><span>  <span>size_t</span> start <span>=</span> json<span>-&gt;</span>pos;
</span></span><span><span> 4</span><span>  <span>for</span> (<span>char</span> cc <span>=</span> json<span>-&gt;</span><span>cur</span>(json); cc <span>!=</span> <span>'\n'</span> <span>&amp;&amp;</span> cc <span>!=</span> <span>'"'</span>;
</span></span><span><span> 5</span><span>       json<span>-&gt;</span><span>advance</span>(json), cc <span>=</span> json<span>-&gt;</span><span>cur</span>(json))
</span></span><span><span> 6</span><span>    ;
</span></span><span><span> 7</span><span>
</span></span><span><span> 8</span><span>  <span>char</span> <span>*</span>slice <span>=</span> <span>malloc</span>(<span>sizeof</span>(<span>char</span>) <span>*</span> json<span>-&gt;</span>pos <span>-</span> start <span>+</span> <span>1</span>);
</span></span><span><span> 9</span><span>  <span>ASSERT</span>(slice <span>!=</span> <span>NULL</span>, <span>"failed to allocate slice for a string"</span>)
</span></span><span><span>10</span><span>
</span></span><span><span>11</span><span>  <span>memcpy</span>(slice, json<span>-&gt;</span>input <span>+</span> start, json<span>-&gt;</span>pos <span>-</span> start);
</span></span><span><span>12</span><span>  slice[json<span>-&gt;</span>pos <span>-</span> start] <span>=</span> <span>0</span>;
</span></span><span><span>13</span><span>
</span></span><span><span>14</span><span>  <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'"'</span>, <span>"unterminated string"</span>);
</span></span><span><span>15</span><span>  json<span>-&gt;</span><span>advance</span>(json);
</span></span><span><span>16</span><span>  <span>return</span> slice;
</span></span><span><span>17</span><span>}</span></span></code></pre></div><p>Pretty easy stuff, as long as we are inside of the string (before <code>\"</code>,<code>\n</code> and
<code>EOF</code>) we advance, after that we copy it into a new slice and return that slice
(this function is especially useful for object keys - that’s why it is a
function).</p><h3 id="parsing-arrays">Parsing Arrays</h3><p>Since arrays a any amount of JSON values between <code>[]</code> and separated via <code>,</code> -
this one is not that hard to implement too:</p><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>struct</span> json_value <span>array</span>(<span>struct</span> json <span>*</span>json) {
</span></span><span><span> 2</span><span>  <span>ASSERT</span>(json <span>!=</span> <span>NULL</span>, <span>"corrupted internal state"</span>);
</span></span><span><span> 3</span><span>  <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'['</span>, <span>"invalid array start"</span>);
</span></span><span><span> 4</span><span>  json<span>-&gt;</span><span>advance</span>(json);
</span></span><span><span> 5</span><span>
</span></span><span><span> 6</span><span>  <span>struct</span> json_value json_value <span>=</span> {.type <span>=</span> json_array};
</span></span><span><span> 7</span><span>  json_value.values <span>=</span> <span>malloc</span>(<span>sizeof</span>(<span>struct</span> json_value));
</span></span><span><span> 8</span><span>
</span></span><span><span> 9</span><span>  <span>while</span> (<span>!</span>json<span>-&gt;</span><span>is_eof</span>(json) <span>&amp;&amp;</span> json<span>-&gt;</span><span>cur</span>(json) <span>!=</span> <span>']'</span>) {
</span></span><span><span>10</span><span>    <span>if</span> (json_value.length <span>&gt;</span> <span>0</span>) {
</span></span><span><span>11</span><span>      <span>if</span> (json<span>-&gt;</span><span>cur</span>(json) <span>!=</span> <span>','</span>) {
</span></span><span><span>12</span><span>        <span>json_free_value</span>(<span>&amp;</span>json_value);
</span></span><span><span>13</span><span>      }
</span></span><span><span>14</span><span>      <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>','</span>,
</span></span><span><span>15</span><span>             <span>"expected , as the separator between array members"</span>);
</span></span><span><span>16</span><span>      json<span>-&gt;</span><span>advance</span>(json);
</span></span><span><span>17</span><span>    }
</span></span><span><span>18</span><span>    <span>struct</span> json_value member <span>=</span> json<span>-&gt;</span><span>parse</span>(json);
</span></span><span><span>19</span><span>    json_value.values <span>=</span> <span>realloc</span>(json_value.values,
</span></span><span><span>20</span><span>                                <span>sizeof</span>(json_value) <span>*</span> (json_value.length <span>+</span> <span>1</span>));
</span></span><span><span>21</span><span>    json_value.values[json_value.length<span>++</span>] <span>=</span> member;
</span></span><span><span>22</span><span>  }
</span></span><span><span>23</span><span>
</span></span><span><span>24</span><span>  <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>']'</span>, <span>"missing array end"</span>);
</span></span><span><span>25</span><span>  json<span>-&gt;</span><span>advance</span>(json);
</span></span><span><span>26</span><span>  <span>return</span> json_value;
</span></span><span><span>27</span><span>}</span></span></code></pre></div><p>We start with a array length of one and reallocate for every new child we find.
We also check for the <code>,</code> between each child.</p><blockquote><p>A growing array would probably be better to minimize allocations, but here we
are, writing unoptimized C code - still, it works :)</p></blockquote><h3 id="parsing-objects">Parsing Objects</h3><p><span>C</span></p><div><pre tabindex="0"><code data-lang="c"><span><span> 1</span><span><span>struct</span> json_value <span>object</span>(<span>struct</span> json <span>*</span>json) {
</span></span><span><span> 2</span><span>  <span>ASSERT</span>(json <span>!=</span> <span>NULL</span>, <span>"corrupted internal state"</span>);
</span></span><span><span> 3</span><span>  <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'{'</span>, <span>"invalid object start"</span>);
</span></span><span><span> 4</span><span>  json<span>-&gt;</span><span>advance</span>(json);
</span></span><span><span> 5</span><span>
</span></span><span><span> 6</span><span>  <span>struct</span> json_value json_value <span>=</span> {.type <span>=</span> json_object};
</span></span><span><span> 7</span><span>  json_value.object_keys <span>=</span> <span>malloc</span>(<span>sizeof</span>(<span>char</span> <span>*</span>));
</span></span><span><span> 8</span><span>  json_value.values <span>=</span> <span>malloc</span>(<span>sizeof</span>(<span>struct</span> json_value));
</span></span><span><span> 9</span><span>
</span></span><span><span>10</span><span>  <span>while</span> (<span>!</span>json<span>-&gt;</span><span>is_eof</span>(json) <span>&amp;&amp;</span> json<span>-&gt;</span><span>cur</span>(json) <span>!=</span> <span>'}'</span>) {
</span></span><span><span>11</span><span>    <span>if</span> (json_value.length <span>&gt;</span> <span>0</span>) {
</span></span><span><span>12</span><span>      <span>if</span> (json<span>-&gt;</span><span>cur</span>(json) <span>!=</span> <span>','</span>) {
</span></span><span><span>13</span><span>        <span>json_free_value</span>(<span>&amp;</span>json_value);
</span></span><span><span>14</span><span>      }
</span></span><span><span>15</span><span>      <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>','</span>,
</span></span><span><span>16</span><span>             <span>"expected , as separator between object key value pairs"</span>);
</span></span><span><span>17</span><span>      json<span>-&gt;</span><span>advance</span>(json);
</span></span><span><span>18</span><span>    }
</span></span><span><span>19</span><span>    <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'"'</span>,
</span></span><span><span>20</span><span>           <span>"expected a string as the object key, did not get that"</span>)
</span></span><span><span>21</span><span>    <span>char</span> <span>*</span>key <span>=</span> <span>string</span>(json);
</span></span><span><span>22</span><span>    <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>':'</span>, <span>"expected object key and value separator"</span>);
</span></span><span><span>23</span><span>    json<span>-&gt;</span><span>advance</span>(json);
</span></span><span><span>24</span><span>
</span></span><span><span>25</span><span>    <span>struct</span> json_value member <span>=</span> json<span>-&gt;</span><span>parse</span>(json);
</span></span><span><span>26</span><span>    json_value.values <span>=</span> <span>realloc</span>(json_value.values, <span>sizeof</span>(<span>struct</span> json_value) <span>*</span>
</span></span><span><span>27</span><span>                                                       (json_value.length <span>+</span> <span>1</span>));
</span></span><span><span>28</span><span>    json_value.values[json_value.length] <span>=</span> member;
</span></span><span><span>29</span><span>    json_value.object_keys <span>=</span> <span>realloc</span>(json_value.object_keys,
</span></span><span><span>30</span><span>                                     <span>sizeof</span>(<span>char</span> <span>**</span>) <span>*</span> (json_value.length <span>+</span> <span>1</span>));
</span></span><span><span>31</span><span>    json_value.object_keys[json_value.length] <span>=</span> key;
</span></span><span><span>32</span><span>    json_value.length<span>++</span>;
</span></span><span><span>33</span><span>  }
</span></span><span><span>34</span><span>
</span></span><span><span>35</span><span>  <span>ASSERT</span>(json<span>-&gt;</span><span>cur</span>(json) <span>==</span> <span>'}'</span>, <span>"missing object end"</span>);
</span></span><span><span>36</span><span>  json<span>-&gt;</span><span>advance</span>(json);
</span></span><span><span>37</span><span>  <span>return</span> json_value;
</span></span><span><span>38</span><span>}</span></span></code></pre></div><p>Same as arrays, only instead of a single atom we have a string as the key, <code>:</code>
as a separator and a <code>json_value</code> as the value. Each pair is separated with
<code>,</code>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Efabless – Shutdown Notice (134 pts)]]></title>
            <link>https://efabless.com/notice</link>
            <guid>43222168</guid>
            <pubDate>Sat, 01 Mar 2025 18:37:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://efabless.com/notice">https://efabless.com/notice</a>, See on <a href="https://news.ycombinator.com/item?id=43222168">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="titles"><h2>Shutdown Notice</h2><p>Due to funding challenges, Efabless has shut down operations until further notice.<br>We regret any inconvenience and will provide updates as available.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Making o1, o3, and Sonnet 3.7 Hallucinate for Everyone (247 pts)]]></title>
            <link>https://bengarcia.dev/making-o1-o3-and-sonnet-3-7-hallucinate-for-everyone</link>
            <guid>43222027</guid>
            <pubDate>Sat, 01 Mar 2025 18:24:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bengarcia.dev/making-o1-o3-and-sonnet-3-7-hallucinate-for-everyone">https://bengarcia.dev/making-o1-o3-and-sonnet-3-7-hallucinate-for-everyone</a>, See on <a href="https://news.ycombinator.com/item?id=43222027">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <p>A quick-fun story.</p><p>My (ops-but-sometimes-writes-scripts-to-help-out) coworker just tapped on my shoulder and asked me to look at his code that wasn't working. It was a bit something like this:</p><pre><code>User.includes(investments: -&gt; { where(state: :draft) })...</code></pre><p>This is <em>not</em> a feature of <code>ActiveRecord</code> or any libraries that I'm aware of. I asked him why he thought this was valid syntax, and he pulled up his ChatGPT history. It looked something like this:</p><blockquote><p>Ask: How can I dynamically preload an association with conditions in rails? (Potentially followed up with - no custom has_many associations, no preloader object, don't filter the base query, etc.)</p></blockquote><p>Sometimes, you're routed to the correct answer. Which is to add the filter you want on the associated record as a standard where clause, and also add a <code>.references(:association)</code> to the query chain. Like so:</p><pre><code>User.includes(:investments).where(investments: { state: :draft }).references(:investments) </code></pre><p>However, with just a few tests, you're usually routed to that bizarre, non-existent syntax of including a lambda as a keyword argument value to the association you want it applied to. I recreated this a few times below:</p><div><action-text-attachment sgid="eyJfcmFpbHMiOnsiZGF0YSI6ImdpZDovL2hhaGFoYWNvcm4vQWN0aXZlU3RvcmFnZTo6QmxvYi8xP2V4cGlyZXNfaW4iLCJwdXIiOiJhdHRhY2hhYmxlIn19--7e4233327ddf1c739bdd5ab7ddce6b63c9eeeb55" content-type="image/jpeg" url="https://bengarcia.dev/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MSwicHVyIjoiYmxvYl9pZCJ9fQ==--f8e927e75208ce1a199268fe64cb81eb97003c7e/o3-mini.jpg" filename="o3-mini.jpg" filesize="100324" width="1548" height="518" previewable="true" presentation="gallery" caption="o3-mini"><figure>
    <img src="https://bengarcia.dev/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MSwicHVyIjoiYmxvYl9pZCJ9fQ==--f8e927e75208ce1a199268fe64cb81eb97003c7e/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJyZXNpemVfdG9fbGltaXQiOlsxMDI0LDc2OF19LCJwdXIiOiJ2YXJpYXRpb24ifX0=--8f2f652f3630a1960185340282e991e2a041c2da/o3-mini.jpg">

  <figcaption>
      o3-mini
  </figcaption>
</figure></action-text-attachment></div><action-text-attachment sgid="eyJfcmFpbHMiOnsiZGF0YSI6ImdpZDovL2hhaGFoYWNvcm4vQWN0aXZlU3RvcmFnZTo6QmxvYi8yP2V4cGlyZXNfaW4iLCJwdXIiOiJhdHRhY2hhYmxlIn19--6f2624587962f3c454b294e435fffff427dc2984" content-type="image/jpeg" url="https://bengarcia.dev/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MiwicHVyIjoiYmxvYl9pZCJ9fQ==--56cc79033b36aaf720b6da8b2d466d44bbe33468/image-20250226163600269.jpeg" filename="image-20250226163600269.jpeg" filesize="150561" width="1434" height="538" previewable="true" presentation="gallery" caption="Sonnet 3.7"><figure>
    <img src="https://bengarcia.dev/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MiwicHVyIjoiYmxvYl9pZCJ9fQ==--56cc79033b36aaf720b6da8b2d466d44bbe33468/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGVnIiwicmVzaXplX3RvX2xpbWl0IjpbMTAyNCw3NjhdfSwicHVyIjoidmFyaWF0aW9uIn19--0b561c821874124cce936ade814b8e868982a6d2/image-20250226163600269.jpeg">

  <figcaption>
      Sonnet 3.7
  </figcaption>
</figure></action-text-attachment><div><action-text-attachment sgid="eyJfcmFpbHMiOnsiZGF0YSI6ImdpZDovL2hhaGFoYWNvcm4vQWN0aXZlU3RvcmFnZTo6QmxvYi8zP2V4cGlyZXNfaW4iLCJwdXIiOiJhdHRhY2hhYmxlIn19--51d64b906fe14db7db6f052a9853974fe7e72b09" content-type="image/jpeg" url="https://bengarcia.dev/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MywicHVyIjoiYmxvYl9pZCJ9fQ==--969d92ec93fc9db314fb76aaf1c3dec99009438b/image-20250226163728528.jpeg" filename="image-20250226163728528.jpeg" filesize="100125" width="1422" height="652" previewable="true" presentation="gallery" caption="Sonnet 3.5"><figure>
    <img src="https://bengarcia.dev/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6MywicHVyIjoiYmxvYl9pZCJ9fQ==--969d92ec93fc9db314fb76aaf1c3dec99009438b/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGVnIiwicmVzaXplX3RvX2xpbWl0IjpbMTAyNCw3NjhdfSwicHVyIjoidmFyaWF0aW9uIn19--0b561c821874124cce936ade814b8e868982a6d2/image-20250226163728528.jpeg">

  <figcaption>
      Sonnet 3.5
  </figcaption>
</figure></action-text-attachment></div><p>I was confused why the syntax "felt" familiar though, until my coworker pointed out <a href="https://discuss.rubyonrails.org/t/how-can-i-preload-an-association-with-conditions-of-a-collection/82230">I invented it while asking a question on the Rails forum two years ago.</a></p><div><action-text-attachment sgid="eyJfcmFpbHMiOnsiZGF0YSI6ImdpZDovL2hhaGFoYWNvcm4vQWN0aXZlU3RvcmFnZTo6QmxvYi85P2V4cGlyZXNfaW4iLCJwdXIiOiJhdHRhY2hhYmxlIn19--0848f5157b21d8014bb9fec7d6991947ceb6e342" content-type="image/jpeg" url="https://bengarcia.dev/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsiZGF0YSI6OSwicHVyIjoiYmxvYl9pZCJ9fQ==--44db8342395a592a4f04d2ce2d709be6b185f91b/image-20250226165412919.jpeg" filename="image-20250226165412919.jpeg" filesize="137232" width="1424" height="528" previewable="true" presentation="gallery" caption="Exploring APIs"><figure>
    <img src="https://bengarcia.dev/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6OSwicHVyIjoiYmxvYl9pZCJ9fQ==--44db8342395a592a4f04d2ce2d709be6b185f91b/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGVnIiwicmVzaXplX3RvX2xpbWl0IjpbMTAyNCw3NjhdfSwicHVyIjoidmFyaWF0aW9uIn19--0b561c821874124cce936ade814b8e868982a6d2/image-20250226165412919.jpeg">

  <figcaption>
      Exploring APIs
  </figcaption>
</figure></action-text-attachment></div><p>Funny enough, my other "idea" in that thread is the other solution most LLMs hallucinate - accessing the Preloader object directly.</p><div><action-text-attachment sgid="eyJfcmFpbHMiOnsiZGF0YSI6ImdpZDovL2hhaGFoYWNvcm4vQWN0aXZlU3RvcmFnZTo6QmxvYi80P2V4cGlyZXNfaW4iLCJwdXIiOiJhdHRhY2hhYmxlIn19--cb51fe1dc317f39b97b4189ac31558dbeceb6b60" content-type="image/jpeg" url="https://bengarcia.dev/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NCwicHVyIjoiYmxvYl9pZCJ9fQ==--e5a51f1123ff0480e96d3924d6711ed8d02fabf6/image-20250226165546302.jpg" filename="image-20250226165546302.jpg" filesize="167421" width="1346" height="1000" previewable="true" presentation="gallery" caption="This don't work either"><figure>
    <img src="https://bengarcia.dev/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsiZGF0YSI6NCwicHVyIjoiYmxvYl9pZCJ9fQ==--e5a51f1123ff0480e96d3924d6711ed8d02fabf6/eyJfcmFpbHMiOnsiZGF0YSI6eyJmb3JtYXQiOiJqcGciLCJyZXNpemVfdG9fbGltaXQiOlsxMDI0LDc2OF19LCJwdXIiOiJ2YXJpYXRpb24ifX0=--8f2f652f3630a1960185340282e991e2a041c2da/image-20250226165546302.jpg">

  <figcaption>
      This don't work either
  </figcaption>
</figure></action-text-attachment></div><p>I didn't realize this when posting originally, but this still requires you to loop through the posts and load the query returned by the preloader into each posts association target. I didn't include that, and LLMs seem to be confused too.</p><p>As far as I'm aware, that forum post is the only place that you'll find that specific syntax exploration. As my comment above denotes, it would not work <em>anyway</em>. Why I included it in the first place is beyond me - I'm working on making my writing more concise (which is why I carved out a section to explain that, and then this, and now this explanation of that....)</p><h3><strong>Conclusion</strong></h3><p>LLMs are really smart most of the time. But, once it reaches niche topics and doesn't have sufficient context, it begins to resemble myself early in my career. Open StackOverflow, Ctrl+C, Ctrl+V, Leeroy Jenkins style. I can't help but find it endearing.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The most unhinged video wall, made out of Chromebooks (483 pts)]]></title>
            <link>https://varun.ch/posts/videowall/</link>
            <guid>43221697</guid>
            <pubDate>Sat, 01 Mar 2025 17:54:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://varun.ch/posts/videowall/">https://varun.ch/posts/videowall/</a>, See on <a href="https://news.ycombinator.com/item?id=43221697">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			


<ul>
	<li><time datetime="2025-03-01">Saturday, March 1, 2025</time></li>
	<li><a href="https://varun.ch/tags/writeups/">#writeups</a></li>
</ul>

<p>This is the story of our three year long journey to turn a fleet of laptops into what can only be described as the world’s most unhinged video wall.</p>
<p>This project was a collaboration with my friend <a href="https://akselsalmi.com/">Aksel Salmi</a>. I was responsible for the software, and he designed the incredible hardware, see <a href="https://akselsalmi.com/blog/videowall">his blog</a> to learn about the unexpectedly complex hardware needed to mount these dismantled computers<a href="#common-app-note" id="common-app-ref" aria-describedby="footnotes-label" role="doc-noteref">[1]</a>.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/videowall-crop.avif 2048w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/videowall-crop.webp 2048w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/videowall-crop.jpeg" alt="A cropped photo of the final video wall, 10 wall mounted laptop displays in sync" width="2048" height="382"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/barebones.avif 1280w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/barebones.webp 1280w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/barebones.jpeg" alt="Two displays plugged into two mounted motherboards making up a part of the video wall" width="1280" height="720"></picture></p>
<hr>
<p>About three years ago, my Design teacher (The amazing Mr. Bush) came to us with an idea - our school was about to dispose of its fleet of Chromebooks, and he was wondering if we could build anything with them.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/fleet.avif 766w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/fleet.webp 766w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/fleet.png" alt="Tons of Chromebooks" width="766" height="536"></picture></p>
<h2 id="meet-the-lenovo-thinkpad-11e" tabindex="-1">Meet the Lenovo ThinkPad 11e <a href="#meet-the-lenovo-thinkpad-11e">#</a></h2>
<p>The Lenovo ThinkPad 11e could very well be the world’s worst laptop. It is also the standard-issue school laptop that reinforced eight-year-old me’s interest in computers.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/5th-grade.avif 1280w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/5th-grade.webp 1280w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/5th-grade.jpeg" alt="Picture of me using a ThinkPad 11e in 5th grade" width="1280" height="853"></picture>
<em>We used this school-issued laptop through primary and the start of middle school. This is me in 5th grade using a school laptop while working on my PYP Exhibition project (a game on Scratch)<a href="#scratch-note" id="scratch-ref" aria-describedby="footnotes-label" role="doc-noteref">[2]</a>.</em></p>
<p>Despite my emotional connection to them, today these devices are, for all intents and purposes, junk. And for that reason, my school began the process of replacing them (with marginally less junky laptops)</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/thinkpad-product-image.avif 1500w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/thinkpad-product-image.webp 1500w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/thinkpad-product-image.png" alt="Product photo of Lenovo ThinkPad 11e Chromebook" width="1500" height="1500"></picture></p>
<p>These things don’t receive software updates from Google anymore, they struggle loading most webpages and to top it off, they’re tied to some long forgotten Enterprise Enrolment system, so they can’t even be used without a school Google account.</p>
<h2 id="what-is-a-video-wall" tabindex="-1">What is a video wall? <a href="#what-is-a-video-wall">#</a></h2>
<p>A video wall is a large display made up of multiple screens arranged together to create a single, seamless display across all the screens. In the case of our project, we decided to try reusing the laptop screens to build a video wall.</p>
<h2 id="can-we-drive-the-screens-using-separate-hardware" tabindex="-1">Can we drive the screens using separate hardware? <a href="#can-we-drive-the-screens-using-separate-hardware">#</a></h2>
<p>Our first idea was to harvest just the laptop display panels and somehow drive them using a powerful computer that could power the 10 screens simultaneously. We did not go this route (due to the fact that we had no idea what we were doing, and a quick estimate of the time and costs involved scared us away).</p>
<h2 id="okay-before-we-try-anything-else-let-s-just-try-synchronising-a-video-across-two-devices" tabindex="-1">Okay, before we try anything else, let’s just try synchronising a video across two devices <a href="#okay-before-we-try-anything-else-let-s-just-try-synchronising-a-video-across-two-devices">#</a></h2>
<p>Since the screens were attached to perfectly functional laptops, it was quickly apparent that we’d probably be better off letting each screen be driven independently by their own laptop motherboards.</p>
<p>At this point, there were still many questions (eg. how were we going to do that on <em>Chromebooks</em>), so we put aside that challenge to focus on the new issue this brings up: Can we synchronise a single video across multiple computers?</p>
<p>Our experiments brought us to the school’s computer lab, where we experimented with VLC’s streaming abilities to get a stream synchronised across devices on a single network, but this posed two challenges: This system is not designed for videos being <em>perfectly</em> in sync, nor was it designed for two clients to receive different video inputs (because the whole point of the video wall is to display one loooooong video across the screens, not 10 repeat copies of the same video).</p>
<p>We were stuck here until my ““breakthrough””.</p>
<p>For context, the story is currently in 2022. Two years earlier, I had been locked up in my room due to the COVID lockdown, and in this time, I had loads of fun building random realtime web apps, like a chat app and multiplayer drawing game. These apps worked thanks to <code>socket.io</code>, a (primarily) WebSocket based library that allows for low-latency, bi-directional communication.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/chat-site.avif 1920w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/chat-site.webp 1920w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/chat-site.png" alt="Screenshot of socket.io based chat site" width="1920" height="968"></picture>
<em>Screenshot of a chat site I made to pass the time during the 2020 lockdown</em></p>
<p>I realised that my best bet to get videos synchronised would be by using a web page that used <code>socket.io</code> to sync the video playback across clients. Yes, there are better approaches, but simply doing something like this worked unreasonably well, all things considered.</p>
<pre tabindex="0"><code><span><span><span>&lt;</span>video</span> <span>src</span><span><span>=</span><span>"</span>...<span>"</span></span> <span>id</span><span><span>=</span><span>"</span>video<span>"</span></span><span>&gt;</span></span>
	  Your browser does not support the video tag.
<span><span><span>&lt;/</span>video</span><span>&gt;</span></span></code></pre>
<pre tabindex="0"><code><span>const</span> socket <span>=</span> <span>io</span><span>(</span><span>)</span><span>;</span>

<span>// ...</span>

socket<span>.</span><span>on</span><span>(</span><span>"play"</span><span>,</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
	<span>const</span> videoElement <span>=</span> document<span>.</span><span>getElementById</span><span>(</span><span>"video"</span><span>)</span><span>;</span>
	videoElement<span>.</span><span>play</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre>
<p>I named this ExpressJS server/client system <code>c-sync</code><a href="#c-sync-note" id="c-sync-ref" aria-describedby="footnotes-label" role="doc-noteref">[3]</a>.</p>
<p>Thanks to c-sync (and tons of tinkering), after some time we had decently synchronised videos across computer screens through a webpage (or at least it seemed like it, testing on these desktop computers)</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/3-screen-sync.avif 1280w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/3-screen-sync.webp 1280w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/3-screen-sync.jpeg" alt="" width="1280" height="720"></picture></p>
<p>As it turns out, in reality, the Chromebooks are too slow for this to be a reliable approach to synchronising playback, and tiny discrepancies in loading times + latency + system clocks etc. lead to videos not being synchronised.</p>
<p>Now, I’m not entirely sure <em>why</em> this works so well, but I came up with a ridiculous solution by accident. When videos reach the end of playback, each client emits the start event.</p>
<pre tabindex="0"><code>video<span>.</span><span>onended</span> <span>=</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
	socket<span>.</span><span>emit</span><span>(</span><span>"start"</span><span>)</span><span>;</span>
	<span>// yes seriously, this is all I needed</span>
<span>}</span><span>;</span></code></pre>
<p>This means that the slowest computers hold back the fastest computers, and get the chance to load the videos. This also means looping can be a very slightly jittery process (with each screen receiving 10 ‘start’ events), but as long as the first couple frames of the video are identical, nobody would even notice.</p>
<details>
<summary>
Sidenote: why not schedule with timestamps
</summary>
Modern computers have clocks you can rely on to be extremely precise. This plus regular NTP synchronisations means a reasonable person might just try to ensure the full video is cached, then just send a 'start' event to each client that schedules the client to start playback at a given timestamp. Unfortunately, these Chromebooks could not reliably keep track of time within milliseconds of each other, so this method didn't work for us.
</details>
<p>Using this method, we have nearly perfectly synchronised video playback, and can play any video on any screen (meaning we can split a wide video into 10 segments, and each computer displays its respective part, all in sync with eachother)</p>
<h2 id="putting-it-together" tabindex="-1">Putting it together <a href="#putting-it-together">#</a></h2>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/chromebook-parts.avif 1016w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/chromebook-parts.webp 1016w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/chromebook-parts.jpeg" alt="Bare laptop motherboard, keyboard and screen" width="1016" height="1280"></picture>
<em>A disassembled Chromebook open to a test video</em></p>
<p>We reached this stage within a month or two. Believe it or not, this project still had three years of work ahead of us. The biggest issue was Chromebook software. At this point, we had a website that we could manually open on each laptop to display a fullscreen synchronised video.</p>
<p>Ideally, we would want this to be entirely automated, so that as soon as a Chromebook receives power, it boots up automagically to the c-sync client page. Unfortunately, right now, booting the Chromebook would just take you to a Google login page (and one that was locked to our school domain <em>to boot</em>).</p>
<p>Also, just to add insult to injury, when batteries are removed, the laptops don’t turn themselves on when they receive power (you have to hold down the power button)</p>
<p>This meant that our next step would have to be to replace ChromeOS with something else.</p>
<p>The <a href="https://docs.mrchromebox.tech/docs/fwscript.html#overview">‘ChromeOS Firmware Recovery Script’</a> is a magical piece of technology that somehow supports many different Chromebook motherboards. Ours was called ‘GLIMMER’. We just had to enter the built-in ‘Recovery Mode’, enable ‘Developer Mode’ and use the ChromeOS Shell to run the script.</p>
<p>Now we’re basically on the home stretch. All we needed to do was pick up some stable Linux distro, write a hacky startup script that loads up Chromium and simulates the keystrokes to fullscreen the video and we’re done!</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/xfce-chromebooks.avif 1280w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/xfce-chromebooks.webp 1280w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/xfce-chromebooks.jpeg" alt="" width="1280" height="960"></picture></p>
<p>We ran in to two main issues: Some Chromebooks (roughly half of our working laptops) would refuse to enter developer mode due to the enterprise enrolment, and while we were able to get the other half onto a Linux distro, video playback would consistently freeze after some time (actually they would lock up entirely).</p>
<p>It took us several months of on-and-off experimentation to figure out what to do. Essentially, the solution was to overwrite the entire default firmware with <code>coreboot</code> (which is also possible using MrChromebox’s script). We just needed to remove the ‘Write Protection’ screw from each laptop motherboard, and this seemed to bypass the enrolment too.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/write-protection-diagram.avif 1155w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/write-protection-diagram.webp 1155w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/write-protection-diagram.png" alt="Write protection screw diagram" width="1155" height="833"></picture>
<em>Lenovo’s handy Write Protection screw diagram</em></p>
<p>Doing this for 20+ computers was slow and tedious. We only really needed the WiFi, motherboard and screen in working condition, but we decided to be (mostly) gentle and keep the laptops looking like laptops so that we had a keyboard and mouse for the rest of the installation steps.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/remove-write-protection-screw-with-this-easy-trick.avif 1536w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/remove-write-protection-screw-with-this-easy-trick.webp 1536w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/remove-write-protection-screw-with-this-easy-trick.jpeg" alt="Efficiently removing write protection screw by bending plastic enclsoure" width="1536" height="2048"></picture>
<em>By the end, we got quite efficient at removing the write protection screw</em></p>
<p>After ‘corebooting’ the Chromebooks, we were also pleasantly surprised to find out that ‘Wake on AC’ was a feature of the firmware, and that video playback no longer randomly breaks. By this point we had enough non-bricked Chromebooks left over for a line of 10 screens and a handful of spares.</p>
<h2 id="the-final-stretch" tabindex="-1">The Final Stretch <a href="#the-final-stretch">#</a></h2>
<p>Now we’re really on the final stretch. Aksel worked on the mounting hardware, which you can <a href="https://akselsalmi.com/blog/videowall">read about on his blog</a>, while I worked on figuring out a less flaky way to ‘boot to a webpage’ than the keystroke simulation and startup script I bodged together.</p>
<p>I previously used <a href="https://github.com/guysoft/FullPageOS">the aptly named ‘FullPageOS’</a> for a different project (which I briefly mention in <a href="https://youtu.be/gzc1p_QlO2I?t=457">my TED talk, which you should watch</a>), but it doesn’t run on x86 hardware.</p>
<p>I landed on using ‘Porteus Kiosk’, which is just a minimal Linux distro that opens a fullscreen Chromium browser with all the correct flags for hands-off usage (eg. allowing video playback without user interaction)</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/porteus.avif 768w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/porteus.webp 768w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/porteus.jpeg" alt="Dismantled laptop with Porteus installer" width="768" height="1024"></picture></p>
<p>This honestly worked totally fine, but left me unsatisfied for two reasons. Firstly, I didn’t like how we couldn’t customise the splash screen, so our project would be forever stamped with the Porteus logo on every startup (which would be every morning). And secondly, in search of a better issue to justify the extra work, I realised we can’t remotely do anything to the installations (eg. changing the page URL) without re-doing them, which would be definitely a problem once these get mounted on the wall.</p>
<p>For those good reasons, I embarked on the journey of building ‘my own distro’ that we could install on the laptops. The system should start with something minimal (no desktop environment), and have an elegant script to autostart a kiosk mode Chromium instance.</p>
<p>I first tried NixOS before quickly realising there was no way it would work with the tiny amount of storage on these Chromebooks (and it failed to install with every single attempt).</p>
<p>Then I gave up, started with a Debian minimal install and just wrote a script that would provision a client (generate a ‘KIOSK_ID’, set its hostname to <code>csync-client-$KIOSK_ID</code>, connect to the school’s WiFi, create users/permissions and set up <code>openbox</code> to autostart a fullscreen kiosk mode Chromium).</p>
<p>Then after attempting to repeat this on a second machine, I realised I would be wasting so much time (installing Debian is very ‘hands-on’ - you need to press lots of buttons), and I discovered ‘FAI - Fully Automatic Installation’ and the web <a href="https://fai-project.org/FAIme/">FAI.me</a> tool. To cut a long story short<a href="#fai-note" id="fai-ref" aria-describedby="footnotes-label" role="doc-noteref">[4]</a>, after redoing everything for the millionth time, I had a single USB that I can plug in to any ‘corebooted’ Chromebook which provisions it as a c-sync client. Woohoo!</p>
<p>I also built out a ‘controller’ for c-sync which lets us manage connected clients and assign them videos.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/c-sync-admin-tool.avif 1284w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/c-sync-admin-tool.webp 1284w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/c-sync-admin-tool.png" alt="Screenshot of admin tool for c-sync showcasing connected clients" width="1284" height="2778"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/c-sync-admin-tool-2.avif 1284w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/c-sync-admin-tool-2.webp 1284w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/c-sync-admin-tool-2.png" alt="Screenshot of admin tool for c-sync showcasing config options" width="1284" height="2778"></picture></p>
<p>After a successful three day stress test where the playback remained butter-smooth (and I sacrificed my ability to sleep for the greater good of testing with the backlight on), we were ready to mount these laptops on the wall.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/stress-test-no-sleep.avif 1536w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/stress-test-no-sleep.webp 1536w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/stress-test-no-sleep.jpeg" alt="Stress testing laptop video playback at night" width="1536" height="1417"></picture></p>
<h2 id="mounting" tabindex="-1">Mounting <a href="#mounting">#</a></h2>
<p>The mounting is mostly Aksel’s thing, so <a href="https://akselsalmi.com/blog/videowall">I implore you to read his blog</a>, but here are some cool photos from the process. (also aren’t our cable splices so pretty and not terrifying?? 😁❤️)</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/laser-cut.avif 2048w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/laser-cut.webp 2048w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/laser-cut.jpeg" alt="A laser cut acrylic backplate" width="2048" height="1536"></picture>
<em>An early iteration of the mounting backplate using a laser cut acrylic piece</em></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/artistic-mounting-hardware.avif 2048w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/artistic-mounting-hardware.webp 2048w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/artistic-mounting-hardware.jpeg" alt="" width="2048" height="1536"></picture>
<em>Aksel designed a pretty awesome looking backplate to mount the motherboard, which hangs on cleats on the walls. The displays are then held in place with clampy things. This is black magic to me.</em></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/mounting-hardware.avif 1586w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/mounting-hardware.webp 1586w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/mounting-hardware.jpeg" alt="Scattered mounting hardware" width="1586" height="900"></picture>
<em>Everything laid out</em></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/installations.avif 1280w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/installations.webp 1280w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/installations.jpeg" alt="Scattered computer components in the workshop" width="1280" height="960"></picture>
<em>Preparing some displays and motherboards</em></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/splice.avif 2048w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/splice.webp 2048w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/splice.jpeg" alt="Soldering cable splices" width="2048" height="1536"></picture>
<em>We decided to splice together power cables so that each power supply could power two computers. Send any complaints to <a href="https://varun.ch/contact">the pager on my contact page</a></em></p>
<!-- We went through over 17 iterations of the mounting hardware to land on the design that we ended up using.

![Wall mounted display of design iterations we tested](iterations.jpeg)
*Part of a display about our project* -->
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/drill.avif 1006w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/drill.webp 1006w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/drill.png" alt="Drilling into the wall." width="1006" height="651"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/cable-routing.avif 1280w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/cable-routing.webp 1280w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/cable-routing.jpeg" alt="Cable routed through backplate" width="1280" height="960"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/on-wall.avif 2048w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/on-wall.webp 2048w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/on-wall.jpeg" alt="Mounting hardware on wall" width="2048" height="1536"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/screen-clamps.avif 1750w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/screen-clamps.webp 1750w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/screen-clamps.jpeg" alt="Clamps for screens" width="1750" height="1080"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/mid-mount.avif 1750w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/mid-mount.webp 1750w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/mid-mount.jpeg" alt="" width="1750" height="1080"></picture></p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/nearly-done.avif 2048w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/nearly-done.webp 2048w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/nearly-done.jpeg" alt="All screens mounted" width="2048" height="1536"></picture>
<em>Nearly there!</em></p>
<h2 id="one-last-thing" tabindex="-1">One last thing… <a href="#one-last-thing">#</a></h2>
<p>After we painstakingly mounted everything, I realised something sort-of important. Computers generate heat. Somewhere along the way of wiping away the firmwares, the laptop fans stopped spinning, which meant things get quite hot quite quickly. I had to figure out a way to get those working again before we could comfortably leave this up 24/7 (well, actually 12/7).</p>
<h3 id="embedded-controllers" tabindex="-1">Embedded Controllers <a href="#embedded-controllers">#</a></h3>
<p>You can apparently interface with the <a href="https://chromeos.dev/en/posts/embedded-controller">‘ChromeOS Embedded Controller’</a> using a tool called <code>ectool</code>, which should allow you to manually set fan speeds (among other things). The online documentation for this is lacking, and there’s apparently a slightly different <code>ectool</code> from <code>coreboot</code> and from Google directly. None of this made much sense at all to me, and no built <code>ectool</code> binary I could find would work. At some point, I found a dead link, but <a href="https://web.archive.org/web/*/https://tree123.org/files/utils/ectool">thanks to the magic of the Wayback Machine</a>, I was able to get my hands on something that wouldn’t immediately crash.</p>
<p>By some miracle, this version of the tool actually works perfectly fine at setting fan speeds, and after some testing, I found some goldilocks values that balance noise and temperature.</p>
<h2 id="aside-making-videos-for-the-thing" tabindex="-1">Aside: Making Videos for the Thing <a href="#aside-making-videos-for-the-thing">#</a></h2>
<p>As it turns out, making such a wide video is actually not easy. Each display has a resolution of 1366× 768, and very few pieces of software will let you edit a 13660 × 768 video. Final Cut Pro and Blender are the only programs we were able to do anything this wide in.</p>
<p><picture><source type="image/avif" srcset="https://varun.ch/posts/videowall/blender.avif 2032w"><source type="image/webp" srcset="https://varun.ch/posts/videowall/blender.webp 2032w"><img loading="lazy" decoding="async" src="https://varun.ch/posts/videowall/blender.png" alt="Screenshot of Blender" width="2032" height="1167"></picture>
<em>Blender is one of the greatest pieces of software ever created (alongside c-sync)</em></p>
<p>Then it’s just a matter of rendering the wide video and splitting it into 10 segments.</p>
<pre tabindex="0"><code><span>#!/bin/bash</span>

<span># incase anyone ever has this insane use case again</span>

<span>input_video</span><span>=</span><span>"input.mp4"</span>
<span>prefix</span><span>=</span><span>"v8"</span>

<span>width</span><span>=</span><span>1366</span>
<span>height</span><span>=</span><span>768</span>

<span>segments</span><span>=</span><span>10</span>

<span>for</span> <span><span>((</span>i<span>=</span><span>1</span><span>;</span> i<span>&lt;=</span>segments<span>;</span> i<span>++</span><span>))</span></span><span>;</span> <span>do</span>
    <span>x_offset</span><span>=</span><span><span>$((</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>*</span> width<span>))</span></span>
    <span>output_file</span><span>=</span><span>"<span>${prefix}</span>-<span>${i}</span>.mp4"</span>

    ffmpeg <span>-i</span> <span>"<span>$input_video</span>"</span> <span>-vf</span> <span>"crop=<span>$width</span>:<span>$height</span>:<span>$x_offset</span>:0"</span> <span>-c:a</span> copy <span>"<span>$output_file</span>"</span>
<span>done</span>

<span>echo</span> <span>"Splitting complete!"</span></code></pre>
<h2 id="in-all-its-glory" tabindex="-1">In all its glory <a href="#in-all-its-glory">#</a></h2>
<h3 id="boot-sequence-and-self-calibration" tabindex="-1">Boot Sequence and ‘Self Calibration’ <a href="#boot-sequence-and-self-calibration">#</a></h3>



<h3 id="synced-videos" tabindex="-1">Synced videos! <a href="#synced-videos">#</a></h3>

<h3 id="now-there-s-an-enclosure-and-cable-routing" tabindex="-1">Now there’s an enclosure and cable routing! <a href="#now-there-s-an-enclosure-and-cable-routing">#</a></h3>

<h2 id="yes-it-s-imperfect" tabindex="-1">Yes, it’s imperfect <a href="#yes-it-s-imperfect">#</a></h2>
<p>Our video wall is imperfect. TN panel viewing angles suck, and the screens vary in colours and stuff. Yes, the synchronisation isn’t <em>perfect</em>, and yes, I’m sure there were better alternatives for nearly every decision we made along the way.</p>
<p>Yet I love our video wall, despite how absurdly weird it is. It’s a perfect representation of the iterative design process and a true testament to teamwork and collaboration. We turned E-Waste into something interesting. And maybe, just maybe, the real video wall was the friends we made along the way.</p>
<hr>
<p>This project was made possible by the incredible work of so many people. Aside from my collaborator Aksel Salmi, our Design teacher Daniel Bush played a huge role in guiding us through the project.</p>
<p>Additionally, I wanted to thank the <a href="https://coreboot.org/">coreboot project</a> and Matt ‘MrChromebox’ DeVillier for hacking together <a href="https://docs.mrchromebox.tech/">the firmware and tools</a> that allowed any of this to work. I would also like to thank Thomas Lange of the <a href="https://fai-project.org/">FAI project</a> for his help in building the FAI.me based automated installer that saved us so many many many hours, as well as his support over email.</p>
<p>As silly as it sounds, this project was a backbone in my high-school experience. We hacked away at it over years, and grew up along the way too.</p>



		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[GSA Eliminates 18F (485 pts)]]></title>
            <link>https://www.nextgov.com/people/2025/03/gsa-eliminates-18f/403400/</link>
            <guid>43221549</guid>
            <pubDate>Sat, 01 Mar 2025 17:38:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nextgov.com/people/2025/03/gsa-eliminates-18f/403400/">https://www.nextgov.com/people/2025/03/gsa-eliminates-18f/403400/</a>, See on <a href="https://news.ycombinator.com/item?id=43221549">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Copilot for Everything: Training your AI replacement one keystroke at a time (131 pts)]]></title>
            <link>https://substack.com/home/post/p-158101095</link>
            <guid>43220938</guid>
            <pubDate>Sat, 01 Mar 2025 16:33:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://substack.com/home/post/p-158101095">https://substack.com/home/post/p-158101095</a>, See on <a href="https://news.ycombinator.com/item?id=43220938">Hacker News</a></p>
<div id="readability-page-1" class="page"><div tab="[object Object]"><p><h3 translated="">The app for independent voices</h3></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Servo – Open Collective (153 pts)]]></title>
            <link>https://github.com/sponsors/servo</link>
            <guid>43219865</guid>
            <pubDate>Sat, 01 Mar 2025 15:01:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/sponsors/servo">https://github.com/sponsors/servo</a>, See on <a href="https://news.ycombinator.com/item?id=43219865">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p>Servo aims to empower developers with a lightweight, high-performance alternative for embedding web technologies in applications. Servo is a web browser rendering engine written in Rust, with WebGL and WebGPU support, and adaptable to desktop, mobile, and embedded applications.</p>
<p>Created by Mozilla Research in 2012, the Servo project is a research and development effort. It is written in <a href="https://www.rust-lang.org/">Rust</a>, taking advantage of the memory safety properties and concurrency features of the language. Work on Servo has helped contribute to W3C and WHATWG web standards, reporting specification issues and submitting new cross-browser automated tests, and core team members have co-edited new standards that have been adopted by other browsers. As a novel engine without origins in Gecko or WebKit, the Servo project helps drive the entire web platform forward.</p>
<p>In 2020, Mozilla Research handed stewardship over to the <a href="https://www.linuxfoundation.org/">Linux Foundation</a>.  In 2023, thanks to some external funding and investment of their own, <a href="https://thenewstack.io/igalia-the-open-source-powerhouse-youve-never-heard-of/">Igalia</a> got involved and the project moved to <a href="https://linuxfoundation.eu/">Linux Foundation Europe</a>.</p>
<p>Funds from this collective will be used first to cover infrastructure costs that keep engine releases available, integrated with Web Platform Tests, and so on. Once those needs are met, extra available funds can be applied toward sponsoring more infra costs related to improvements or development.</p>
<p>Once those needs are met, extra available funds can be applied toward sponsoring more infra costs related to improvements or development. The Servo Technical Steering Committee will collectively discuss how to prioritize the spending of available funds in the <a href="https://github.com/servo/project/blob/main/governance/tsc/README.md">public monthly calls</a>.</p>
      </div></div>]]></description>
        </item>
    </channel>
</rss>