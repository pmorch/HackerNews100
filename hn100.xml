<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 03 Feb 2024 11:00:07 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Goodbye Non-Kiss Appliances (132 pts)]]></title>
            <link>https://willbush.dev/blog/complex-appliances/</link>
            <guid>39238010</guid>
            <pubDate>Sat, 03 Feb 2024 06:24:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://willbush.dev/blog/complex-appliances/">https://willbush.dev/blog/complex-appliances/</a>, See on <a href="https://news.ycombinator.com/item?id=39238010">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article data-backlink-icon="<svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;20&quot; height=&quot;20&quot;><path d=&quot;M9.41421 8L18.0208 16.6066L16.6066 18.0208L8 9.41421V17H6V6H17V8H9.41421Z&quot; fill=&quot;currentColor&quot;></path></svg>"><p>Yesterday, we gave away our ~6-year-old GE French-door refrigerator after a never-ending slog of repairs. At least the guy and his mother who came to pick it up have a side-hustle of repairing and reselling appliances. There's hope it won't end up in a landfill. He offered to sell me a 4-door Samsung. No Thanks! I'm done with over-complicated appliances. Refrigerator repair is not a skill I'm looking to hone any further.</p><span id="continue-reading"></span><h2 id="survivorship-bias">Survivorship bias</h2><p>I have a refrigerator in my garage that's a side-by-side style Kenmore (Model# 25354362402). The sticker on the inside indicates a manufacture date of <code>06-04</code>. It was bought as a scratch-and-dent model from Sears Outlet. At some point, over a decade ago, the relay on the compressor went out. The fix was cheap and easy. Later, we started having problems with the ice maker / dispenser. Instead of fixing it, we decided to get a new one and use the side-by-side as a second refrigerator in the garage. Since then, it's out-lived two French-door refrigerators we have had in the intervening time.</p><h2 id="the-french-door-woes-begin">The French-door woes begin</h2><p>For the replacement, we went with a French-door style Kenmore (Model# 79572053110) because, you know, all that space in the fridge, and again scratch / dent sale.</p><p>I don't even remember all the problems we had with it, and this was before I started keeping better records. I have the notes from the last repair receipt:</p><blockquote><p>cked unit ice build up around ice fan motor fines removed heater good no problem found.</p></blockquote><p>After about the second repair of the same issue, I was surprised they let me buy an extended warranty on it. Fast-forward past 6-10 (I forget) repairs / replacements of the same part and much hassle, they gave me store credit as though I bought it new without dents. The amount, I forget, but ended up being a curse because we felt compelled to use it all on an even fancier French-door refrigerator this time brand new.</p><p>I wish I could go back in time and slap myself in the face for deciding to buy another French-door refrigerator. I even remember thinking about the <a rel="nofollow noreferrer" href="https://en.wikipedia.org/wiki/KISS_principle">KISS principle</a> at the time, but somehow thought switching brands and spending 3x the amount would save us from the complexity.</p><h2 id="enter-the-ge-cafe">Enter the GE Café</h2><p>This refrigerator (model# CFE28TSHESS) sports all these <em>wonderful</em> features:</p><ul><li>touch screen LCD</li><li>ice, water, and hot water dispenser</li><li>RFID chipped water filters to lock-in customers to buy their $50 filters</li></ul><p>I keep notes and <code>TODO</code> tasks using <a rel="nofollow noreferrer" href="https://orgmode.org/">org-mode</a>, and I was just gathering my notes on this refrigerator and found I have written ~1300 words on it, not counting this blog post. The following is a summary.</p><p>The first annoyance was having to employ <a href="https://www.youtube.com/watch?v=ellbAY9IvgU" rel="nofollow noreferrer">a hack</a> to get around GE water filter lock-in.</p><p>I've had the evaporator fan fail on me twice. Once in 2020 and its replacement failed in 2022. When that happens, the fridge compartment doesn't cool well. A <a href="https://www.youtube.com/watch?v=IeG4CVkAFgs&amp;t=58s" rel="nofollow noreferrer">video on how to replace it</a> for context.</p><p>Ice builds up in the bottom of the freezer if the drain to the evaporation pan gets clogged. Cleaning the rubber hose and dust off the condenser is a yearly chore at least. It becomes the reason to take all the food out and fully clean everything. Otherwise, get ready to spend hours defrosting. One hack we found to speed it up was to pour nearly boiling water down the drain to defrost the ice build up.</p><p>Once the freezer stopped cooling, and we noticed the case was hot to the touch on the side between the freezer and fridge compartments. This ended up being due to a failed condenser fan. A real PITA to replace, by-the-way.</p><p>Around that time I found the technical service manual online and realized one can view error codes and run all sorts of tests via the LCD touch screen. Then I found out that the touch screen wasn't working. Since a new touch screen LCD assembly is over $300, so I ordered one off ebay instead.</p><p>We had a problem with the "new" LCD assembly intermittently pressing the hot water button on its own. Basically, the person I got the part from on ebay lied saying that it was brand new. It was refurbished. We could tell because there had been some soldering work done to the board. Instead of uninstalling it and returning it, we realized that button pressing over and over wasn't affecting any functionality (we don't use its hot water dispenser anyway). We just turned the sound off to stop the annoying repeated chiming noise.</p><p>From running fan tests in service mode, I could tell the odor remover fan also died, but I never cared to replace it. Fans are expensive!</p><p>Recently, it stopped working again. With the power of YouTube and a multi-meter I was able to test the capacitor on the relay was good, but the relay was bad. Replaced the relay, but the compressor still is not starting. Tested that it is getting 120VAC.</p><p>Here's my notes from my before replacing the relay:</p><pre><code><span>- Note taken on [2023-12-05 Tue 20:09] \\
</span><span>  WR07X10131 it was the relay that plugs into the compressor. It rattles when
</span><span>  shaken, and it doesn't have continuity between the two main pins.
</span><span>
</span><span>  | Fault Code Definition                              | code | count | days ago |
</span><span>  |----------------------------------------------------+------+-------+----------|
</span><span>  | Cold Water Cup Switch input missing                |  709 |    14 |        2 |
</span><span>  | Condenser Fan cannot reach target RPM              |  105 |     2 |        0 |
</span><span>  | FF Temp Exceeded 75°F                              |  303 |     1 |        0 |
</span><span>  | FZ Temp Exceeded 72.5°                             |  304 |     1 |        1 |
</span><span>  | Condenser Fan cannot reach target RPM              |  105 |     2 |        0 |
</span><span>  | N/A ????                                           |  800 |    63 |        0 |
</span><span>  | 5 consecutive FF abnormal defrosts.                |  203 |   244 |        1 |
</span><span>  | N/A ????                                           |  803 |   204 |        0 |
</span><span>  | N/A ????                                           |  600 |     2 |       13 |
</span><span>  | Deli Pan Fan Feedback Missing when fan is running. |  112 |   120 |        0 |
</span><span>  | FF Defrost Heater on for max time.                 |  201 |   217 |        0 |
</span></code></pre><p>Note the <code>Condenser Fan cannot reach target RPM</code> despite it being recently cleaned out with an air compressor and replaced on <code>2021-06-05</code>, the $74 fan can't reach RPM? It was working and has nothing to do with the compressor not running, but it's hard to justify spending more money to fix this thing with the non-stop fan issues.</p><p>At the limit of my refrigerator repair skills and wits' end, we decided to give away the GE refrigerator.</p><h2 id="keep-it-simple-stupid">Keep it simple, stupid!</h2><p>Based on <a href="https://www.youtube.com/watch?v=rKJgYVhZ6-w" rel="nofollow noreferrer">this video</a>, We are upgrading to simplicity. Top freezer refrigerator. <del>I'll get an ice maker add-on</del> (no dispenser) and a water pitcher for filtered water. After using ice trays for a few weeks, we decided it's actually not that bad and returned the ice maker.</p><p>We haven't decided on brand / model yet. I understand that the long-lasting refrigerator in my garage is probably a coincidence.</p><p>I'll admit engineering effort can tame complexity. For example, the combustion engine and hybrid cars are surprisingly reliable. And perhaps, for the right price, there are brands that have pulled it off with complex refrigerators. There's just not enough value added by any of the fancy features to warrant the potential headache.</p><h2 id="other-appliance-anecdotes">Other appliance anecdotes</h2><p>We're at the end of a long year of remodeling. There are lot of stories I could tell, but I feel like it's worth a mention to how painless it is to live without a garbage disposal. Another thing in my life I don't have to worry about.</p><p>Old-school top load washing machine has been serving us well for the most part (Maytag MVWP575GW). The shift actuator assembly did go bad once. It was about $60, but wasn't too hard to replace.</p><p>We have a Whirlpool dryer since about 2004 too. I replaced the heating element once a few years ago. Obviously, no extraneous features to worry about there.</p></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Over the Edge: The Use of Design Tactics to Undermine Browser Choice (158 pts)]]></title>
            <link>https://research.mozilla.org/browser-competition/over-the-edge-the-use-of-design-tactics-to-undermine-browser-choice/</link>
            <guid>39237567</guid>
            <pubDate>Sat, 03 Feb 2024 04:35:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://research.mozilla.org/browser-competition/over-the-edge-the-use-of-design-tactics-to-undermine-browser-choice/">https://research.mozilla.org/browser-competition/over-the-edge-the-use-of-design-tactics-to-undermine-browser-choice/</a>, See on <a href="https://news.ycombinator.com/item?id=39237567">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
  
<article id="post-656" class="page">
  

  <div>
    <p>In order to be able to choose their own browser, people must be free to download it, easily set it to default and to continue using it – all without interference from the operating system. Windows users do not currently enjoy this freedom of choice.</p>
<p>To investigate Microsoft’s tactics and the impact on consumers, Mozilla commissioned Harry Brignull and Cennydd Bowles, independent researchers and experts in harmful design. Today, the researchers have published a report detailing how Microsoft prevents effective browser choice on Windows. In the report, they document how Microsoft places its own browser — Edge — at the center of its operating system and weaponizes Windows’ user interface design to undermine people selecting rival browsers.</p>
<p>In some cases, the use of harmful design tactics is contrary to Microsoft’s own design guidelines. In many cases, it can lead to (and exacerbate) consumer harm and undermine competition from rival browsers. This kind of behavior is particularly concerning for an independent browser like Firefox, which is reliant on the operating systems provided by companies who are also rival browser vendors.</p>
<p>Self-preferencing from operating system/browser providers is an area Mozilla has previously highlighted, for example, in the <a href="https://research.mozilla.org/browser-competition/5wg/">Five Walled Gardens report</a>. Recently, details of many issues Mozilla experiences competing on major operating systems were published on the <a href="https://blog.mozilla.org/netpolicy/2024/01/19/platform-tilt/">Platform Tilt dashboard</a>.</p>
<p>Now, with the implementation of the Digital Markets Act in the European Union marking the start of a wave of global competition regulation, we hoped that the barriers to browser competition would be dismantled. However, even where there is movement in the right direction, improvements have been incomplete and are grudgingly offered only in markets where regulators have forced platform owners to make changes to respect browser choice. For example, Apple’s decision to allow alternative browser engines is only effective in the EU.</p>
<p>Similarly, Microsoft recently <a href="https://blogs.microsoft.com/eupolicy/2023/11/22/windows-updates-comply-dma-edge/">pledged</a> to stop some of the actions it takes to force Edge on users who have selected other browsers. Unfortunately, these changes only address a small number of the tactics outlined in this report. And, to make matters worse, they will only be deployed to users in the EEA.</p>
<p>Windows users everywhere, especially in the rest of the world, continue to have their choices inhibited, overridden and undermined by Microsoft’s use of harmful design. Regulatory action around the world is needed to restore browser choice and competition across all of the major platforms.</p>
<p><a href="https://research.mozilla.org/files/2024/01/Over-the-Edge-Report-January-2024.pdf"><strong>Download the full report (PDF, 5MB)</strong></a></p>
      </div>

  
</article><!-- #post -->
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Designer News is dead (108 pts)]]></title>
            <link>https://solomon.io/designer-news-is-dead/</link>
            <guid>39236777</guid>
            <pubDate>Sat, 03 Feb 2024 01:31:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://solomon.io/designer-news-is-dead/">https://solomon.io/designer-news-is-dead/</a>, See on <a href="https://news.ycombinator.com/item?id=39236777">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>Designer News, once a daily destination for product designers, is dead. For many years, it was the best place on the internet to discuss designing and building software.</p>



<p>The community was recently sold to a job board called WeWorkRemotely. Since then, there has been a modal that states Designer News will no longer be supported. Today appears to be the day that it finally shuts down.</p>



<figure><img decoding="async" width="1644" height="1090" data-attachment-id="8306" data-permalink="https://solomon.io/designer-news-is-dead/designer-news-farewell-modal/" data-orig-file="https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?fit=1644%2C1090&amp;ssl=1" data-orig-size="1644,1090" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Designer-News-Farewell-Modal" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?fit=640%2C424&amp;ssl=1" data-large-file="https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?fit=1644%2C1090&amp;ssl=1" src="https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?resize=1644%2C1090&amp;ssl=1" alt="It’s been a great run! 👾

Designer News is transforming and joining the We Work Remotely family. Soon Designer News will no longer be available but we have great news, with the power of We Work Remotely, we’ll still help you find and list the best remote jobs. ✨
At We Work Remotely, you’ll find a community of remote companies and remote enthusiasts who are passionate about meaningful, flexible work.
This way, we’ll keep supporting amazing companies and creatives in their search.
If you’re a creative looking for work, you can start your journey here.
If you’re a company looking for creatives, you can learn more about We Work Remotely here.

Thanks for your support through the years and join us in the next part of this adventure! 🧭

The Designer News team" srcset="https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?w=1644&amp;ssl=1 1644w, https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?resize=640%2C424&amp;ssl=1 640w, https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?resize=768%2C509&amp;ssl=1 768w, https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?resize=1536%2C1018&amp;ssl=1 1536w, https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?resize=1200%2C796&amp;ssl=1 1200w" sizes="(max-width: 1000px) 100vw, 1000px" data-recalc-dims="1"><figcaption>The shut down notification posted on Designer News. As you can see there was some quality front page content in it’s last hours—links to crypto posts on Pinterest and spam about sports betting apps.</figcaption></figure>



<p>What made Designer News unique was its focus on text-based discussions. In the design world, almost all online communities are dominated by aesthetics—think Dribbble or Behance. Designer News offered a space to delve into the more nuanced aspects of product design—discussions on functionality, implementation, accessibility, and team building. These types of discussions were completely absent in the more visually-oriented forums.</p>



<p>I was an early member of Designer News—number 484. For several years, I was a top contributor and was even invited to host the community podcast, <a href="https://solomon.io/tag/dn-fm/" data-type="link" data-id="https://solomon.io/tag/dn-fm/">DN FM</a>. The first few years, from 2013 to 2016, were filled with quality discussions with incredibly knowledgeable people. I’m grateful to those early members who taught me a ton.</p>



<p>Looking back, the early years were so good. DN’s invite-only policy kept discussion and post quality high. The site was available for everyone to see, but an invitation from another member was required to contribute. This made moderation easy.</p>



<p>At some point—I think around 2016—the site was set to open registration, allowing anyone to join and contribute. That’s fine, but an open community requires additional features to assist with moderation and moderators to do it. At that point, Designer News had neither. The following year, post quality started to decline, and by 2018, the site was mostly filled with spam.</p>



<p>Community moderator Catalin Cimpanu summed up the general sentiment in a 2020 <a href="https://web.archive.org/web/20230331094219/http://www.designernews.co/stories/104981-designernews-is-almost-dead" target="_blank" rel="noreferrer noopener">discussion about Designer News</a>.</p>



<blockquote>
<p>While this was a gated community, this place was just awesome. Now… listicles, how-to’s, ugly Dribbble shots, “trends” posts, endless UX hot takes, and run-of-the-mill “show site” submissions are the norm.</p>
</blockquote>



<p>Designer News was created by a company called Layervault, which had built a version control system for design files—essentially, Git for designers. At a time when design and engineering were coming closer together, the product made a lot of sense. </p>



<p>They were the ones that coined the term “flat design” with their post <a href="https://layervault.tumblr.com/post/32267022219/flat-interface-design" data-type="link" data-id="https://layervault.tumblr.com/post/32267022219/flat-interface-design" target="_blank" rel="noreferrer noopener">The Flat Design Era</a>. The team viewed the move away from skeumorphism as a more honest approach to design. I had the privilege to interview LayerVault’s co-founder and CEO, <a href="https://solomon.io/kelly-sutton-creator-of-designer-news-ceo-of-layervault/" data-type="post" data-id="4535">Kelly Sutton</a>, back in 2014. Unfortunately, the business couldn’t establish a solid foundation and ceased operations in 2015.</p>



<p><a href="https://www.metalab.com/" data-type="link" data-id="https://www.metalab.com/" target="_blank" rel="noreferrer noopener">Metalab</a> (or maybe <a href="https://www.tiny.com/" data-type="link" data-id="https://www.tiny.com/">Tiny</a>?) acquired Designer News that year. For a while, they were good stewards of the community, investing resources and organizing events for community members.</p>



<p>At one of those events in Atlanta, I had the opportunity to spend time with Max, one of the community organizers. Max was familiar with my interviews and asked if I’d be interested in hosting the Designer News podcast—what would become DN FM. Unlike with <a href="https://solomon.io/tag/signal-tower/" data-type="link" data-id="https://solomon.io/tag/signal-tower/">Signal Tower</a>, I had a producer and someone scheduling guests. I just had to show up and have a chat—well, that and put in hours of research. But it was a pretty good gig while it lasted.</p>



<p>Anyways, I’m not sure if anyone cares. I haven’t seen other posts about it. There’s no goodbye page. It’s kind of sad—so I felt compelled to write something.</p>



<p>The truth is Designer News is dead and has been dead for a long time. First, contributors like myself contributed less and less, then the regulars started visiting less frequently. Slowly, and then all of a sudden, the community turned into a ghost town.</p>



<p>If you’re a product designer or were a regular on Designer News, where do you have product discussions online? I’d love to find a replacement.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A decoder-only foundation model for time-series forecasting (120 pts)]]></title>
            <link>https://blog.research.google/2024/02/a-decoder-only-foundation-model-for.html</link>
            <guid>39235983</guid>
            <pubDate>Fri, 02 Feb 2024 23:34:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.research.google/2024/02/a-decoder-only-foundation-model-for.html">https://blog.research.google/2024/02/a-decoder-only-foundation-model-for.html</a>, See on <a href="https://news.ycombinator.com/item?id=39235983">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-6956767920612914706">
<p><span>Posted by Rajat Sen and Yichen Zhou, Google Research</span>


</p><p>
<a href="https://en.wikipedia.org/wiki/Time_series">Time-series</a> forecasting is ubiquitous in various domains, such as retail, finance, manufacturing, healthcare and natural sciences. In retail use cases, for example, it has been observed that <a href="https://www.mckinsey.com/featured-insights/artificial-intelligence/notes-from-the-ai-frontier-applications-and-value-of-deep-learning">improving demand forecasting accuracy</a> can meaningfully reduce inventory costs and increase revenue. Deep learning (DL) models have emerged as a popular approach for forecasting rich, multivariate, time-series data because they have proven to perform well in a variety of settings (e.g., DL models dominated the <a href="https://www.sciencedirect.com/science/article/pii/S0169207021001874">M5 competition leaderboard</a>).
</p>
<p>
At the same time, there has been rapid progress in large foundation language models used for natural language processing (NLP) tasks, such as <a href="https://en.wikipedia.org/wiki/Machine_translation">translation</a>, <a href="https://www.analyticsvidhya.com/blog/2023/09/retrieval-augmented-generation-rag-in-ai/">retrieval-augmented generation</a>, and <a href="https://en.wikipedia.org/wiki/Intelligent_code_completion">code completion</a>. These models are trained on massive amounts of <em>textual </em>data derived from a variety of sources like <a href="https://commoncrawl.org/">common crawl</a> and open-source code that allows them to identify patterns in languages. This makes them very powerful <a href="https://en.wikipedia.org/wiki/Zero-shot_learning">zero-shot</a> tools; for instance, <a href="https://blog.google/products/bard/google-bard-try-gemini-ai/">when paired with retrieval</a>, they can answer questions about and summarize current events.
</p>

<p>
Despite DL-based forecasters largely <a href="https://arxiv.org/abs/1704.04110">outperforming</a> traditional methods and progress being made in <a href="https://cloud.google.com/blog/products/ai-machine-learning/vertex-ai-forecasting">reducing training and inference costs</a>, they face challenges: most DL architectures require <a href="https://cloud.google.com/blog/products/ai-machine-learning/vertex-ai-forecasting">long and involved training and validation cycles</a> before a customer can test the model on a new time-series. A foundation model for time-series forecasting, in contrast, can provide decent out-of-the-box forecasts on unseen time-series data with no additional training, enabling users to focus on refining forecasts for the actual downstream task like <a href="https://en.wikipedia.org/wiki/Customer_demand_planning">retail demand planning</a>.
</p>

<p>
To that end, in “<a href="https://arxiv.org/pdf/2310.10688.pdf">A decoder-only foundation model for time-series forecasting</a>”, we introduce TimesFM, a single forecasting model pre-trained on a large time-series corpus of 100 billion real world time-points. Compared to the latest large language models (LLMs), TimesFM is much smaller (200M parameters), yet we show that even at such scales, its zero-shot performance on a variety of unseen datasets of different domains and temporal granularities come close to the state-of-the-art supervised approaches trained explicitly on these datasets. Later this year we plan to make this model available for external customers in <a href="https://cloud.google.com/vertex-ai/docs/tabular-data/forecasting/train-model#aiplatform_create_training_pipeline_tabular_forecasting_sample-python">Google Cloud Vertex AI</a>.
</p>


<h2>A decoder-only foundation model for time-series forecasting</h2>


<p>
LLMs are usually trained in a <a href="https://arxiv.org/pdf/1801.10198.pdf">decoder-only</a> fashion that involves three steps. First, text is broken down into subwords called tokens. Then, the tokens are fed into stacked causal <a href="https://arxiv.org/abs/1706.03762">transformer</a> layers that produce an output corresponding to each input token (it cannot attend to future tokens). Finally, the output corresponding to the <em>i</em>-th token summarizes all the information from previous tokens and predicts the (<em>i</em>+1)-th token. During inference, the LLM generates the output one token at a time. For example, when prompted with “What is the capital of France?”, it might generate the token “The”, then condition on “What is the capital of France? The” to generate the next token “capital” and so on until it generates the complete answer: “The capital of France is Paris”.
</p>

<p>
A foundation model for time-series forecasting should adapt to variable context (what we observe) and horizon (what we query the model to forecast) lengths, while having enough capacity to encode all patterns from a large pretraining dataset. Similar to LLMs, we use stacked transformer layers (self-attention and <a href="https://en.wikipedia.org/wiki/Feedforward_neural_network">feedforward</a> layers) as the main building blocks for the TimesFM model. In the context of time-series forecasting, we treat a patch (a group of contiguous time-points) as a token that was popularized by a recent <a href="https://arxiv.org/abs/2211.14730">long-horizon forecasting work</a>. The task then is to forecast the (<em>i</em>+1)-th patch of time-points given the <em>i</em>-th output at the end of the stacked transformer layers. 
</p>

<p>
However, there are several key differences from language models. Firstly, we need a <a href="https://en.wikipedia.org/wiki/Multilayer_perceptron">multilayer perceptron</a> block with residual connections to convert a patch of time-series into a token that can be input to the transformer layers along with <a href="https://machinelearningmastery.com/a-gentle-introduction-to-positional-encoding-in-transformer-models-part-1/">positional encodings</a> (PE). For that, we use a residual block similar to our prior work in <a href="https://arxiv.org/abs/2304.08424">long-horizon forecasting</a>. Secondly, at the other end, an output token from the stacked transformer can be used to predict a longer length of subsequent time-points than the input patch length, i.e., the output patch length can be larger than the input patch length.  
</p>

<p>
Consider a time-series of length 512 time-points being used to train a TimesFM model with input patch length 32 and output patch length 128. During training, the model is simultaneously trained to use the first 32 time-points to forecast the next 128 time-points, the first 64 time-points to forecast time-points 65 to 192, the first 96 time-points to forecast time-points 97 to 224 and so on. During inference, suppose the model is given a new time-series of length 256 and tasked with forecasting the next 256 time-points into the future. The model will first generate the future predictions for time-points 257 to 384, then condition on the initial 256 length input plus the generated output to generate time-points 385 to 512. On the other hand, if in our model the output patch length was equal to the input patch length of 32 then for the same task we would have to go through eight generation steps instead of just the two above. This increases the chances of more errors accumulating and therefore, in practice, we see that a longer output patch length yields better performance for long-horizon forecasting
</p>


<table><tbody><tr><td><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj4G0lBOLUqlPIXJ3R68kjS984MBIKBPDBrCWtgmjVVTyQRqY6-rn3aHJjgxCbG-8csyBLsp0POILdeJ2VcsRy8lrip0k5DWsUpuL9LU1qOPXLW99mraNdd6HVU791NYqJeTyY7LjuMnOIo6RGmkxBQqqaPrSsC0dELrwy21QUs1Jgwxr8flmdNkDV2tZsT/s1084/image3.jpg"><img data-original-height="674" data-original-width="1084" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj4G0lBOLUqlPIXJ3R68kjS984MBIKBPDBrCWtgmjVVTyQRqY6-rn3aHJjgxCbG-8csyBLsp0POILdeJ2VcsRy8lrip0k5DWsUpuL9LU1qOPXLW99mraNdd6HVU791NYqJeTyY7LjuMnOIo6RGmkxBQqqaPrSsC0dELrwy21QUs1Jgwxr8flmdNkDV2tZsT/s16000/image3.jpg"></a></td></tr><tr><td>TimesFM architecture.</td></tr></tbody></table>

<br>


<h2>Pretraining data</h2>


<p>
Just like LLMs get better with more tokens, TimesFM requires a large volume of legitimate time series data to learn and improve. We have spent a great amount of time creating and assessing our training datasets, and the following is what we have found works best:
</p>




<p>

    <strong>Synthetic data helps with the basics.</strong> Meaningful synthetic time-series data can be generated using statistical models or physical simulations. These basic temporal patterns can teach the model the grammar of time series forecasting.
</p>
  
<p>  
    <strong>Real-world data adds real-world flavor.</strong> We comb through available public time series datasets, and selectively put together a large corpus of 100 billion time-points. Among these datasets there are <a href="https://trends.google.com/trends/">Google Trends</a> and <a href="https://meta.wikimedia.org/wiki/Research:Page_view">Wikipedia Pageviews</a>, which track what people are interested in, and that nicely mirrors trends and patterns in many other real-world time series. This helps TimesFM understand the bigger picture and generalize better when provided with domain-specific contexts not seen during training.
</p>


<h2>Zero-shot evaluation results</h2>


<p>
We evaluate TimesFM zero-shot on data not seen during training using popular time-series benchmarks. We observe that TimesFM performs better than most statistical methods like <a href="https://en.wikipedia.org/wiki/Autoregressive_integrated_moving_average">ARIMA</a>, <a href="https://en.wikipedia.org/wiki/Exponential_smoothing">ETS</a> and can match or outperform powerful DL models like <a href="https://arxiv.org/abs/1704.04110">DeepAR</a>, <a href="https://arxiv.org/abs/2211.14730">PatchTST</a> that have been <em>explicitly trained</em> on the target time-series.
</p>

<p>
We used the <a href="https://huggingface.co/datasets/monash_tsf">Monash Forecasting Archive</a> to evaluate TimesFM’s out-of-the-box performance. This archive contains tens of thousands of time-series from various domains like traffic, weather, and demand forecasting covering frequencies ranging from few minutes to yearly data. Following existing literature, we inspect the <a href="https://en.wikipedia.org/wiki/Mean_absolute_error">mean absolute error</a> (MAE) <a href="https://arxiv.org/abs/2310.07820">appropriately scaled</a> so that it can be averaged across the datasets. We see that zero-shot (ZS) TimesFM is better than most supervised approaches, including recent deep learning models. We also compare TimesFM to <a href="https://platform.openai.com/docs/models/gpt-3-5">GPT-3.5</a> for forecasting using a specific prompting technique proposed by <a href="https://arxiv.org/abs/2310.07820">llmtime(ZS)</a>. We demonstrate that TimesFM performs better than llmtime(ZS) despite being orders of magnitude smaller.
</p>


<table><tbody><tr><td><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhIeNF6GcmbUvVvYpKxNSvwlm_swz6M3G7nTDl0INa2zq8AlvjTBCVuvwOw0dx48JCk4H3S0aBUcsvqj2BypV3340cblqgD6yktoLBXzpxA2fwoM4n_KU8m0TfaESjihc3nx29RYVTpO4g09RCK-rucPulH3gqEOU9jO7EZ_VbDcFnfB_RHXmdpuZO_T_-g/s1476/image2.png"><img data-original-height="876" data-original-width="1476" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhIeNF6GcmbUvVvYpKxNSvwlm_swz6M3G7nTDl0INa2zq8AlvjTBCVuvwOw0dx48JCk4H3S0aBUcsvqj2BypV3340cblqgD6yktoLBXzpxA2fwoM4n_KU8m0TfaESjihc3nx29RYVTpO4g09RCK-rucPulH3gqEOU9jO7EZ_VbDcFnfB_RHXmdpuZO_T_-g/s16000/image2.png"></a></td></tr><tr><td>Scaled MAE (the lower the better) of TimesFM(ZS) against other supervised and zero-shot approaches on Monash datasets.</td></tr></tbody></table>




<p>
Most of the Monash datasets are short or medium horizon, i.e., the prediction length is not too long. We also test TimesFM on popular benchmarks for long horizon forecasting against a recent state-of-the-art baseline <a href="https://arxiv.org/abs/2211.14730">PatchTST</a> (and other long-horizon forecasting baselines). In the next figure, we plot the MAE on <a href="https://paperswithcode.com/dataset/ett">ETT</a> datasets for the task of predicting 96 and 192 time-points into the future. The metric has been calculated on the last test window of each dataset (as done by the <a href="https://arxiv.org/abs/2310.07820">llmtime</a> paper). We see that TimesFM not only surpasses the performance of llmtime(ZS) but also matches that of the supervised PatchTST model explicitly trained on the respective datasets. 
</p>





<table><tbody><tr><td><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj0DDM32GPO6zkmnIrObEP2OA92g45b-zSMHgCf-uNoj6Ed0M0zVsN7vmFmfgXT6Sh5p-W0xI1qj6YwXcqi3T6aD5hI9ZOJqT8Sobp43FGrtSsLUkI2poHnGml7Za4BMObSd6nEKUVL8wj7nHJDFYHbWaQOXOcfxvqXUcMxUZ3WVQW8Z5sabfFsi7M85_7I/s735/image1.png"><img data-original-height="433" data-original-width="735" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj0DDM32GPO6zkmnIrObEP2OA92g45b-zSMHgCf-uNoj6Ed0M0zVsN7vmFmfgXT6Sh5p-W0xI1qj6YwXcqi3T6aD5hI9ZOJqT8Sobp43FGrtSsLUkI2poHnGml7Za4BMObSd6nEKUVL8wj7nHJDFYHbWaQOXOcfxvqXUcMxUZ3WVQW8Z5sabfFsi7M85_7I/s16000/image1.png"></a></td></tr><tr><td>Last window MAE (the lower the better) of TimesFM(ZS) against llmtime(ZS) and long-horizon forecasting baselines on ETT datasets.</td></tr></tbody></table>

<br>


<h2>Conclusion</h2>


<p>
We train a decoder-only foundation model for time-series forecasting using a large pretraining corpus of 100B real world time-points, the majority of which was search interest time-series data derived from Google Trends and pageviews from Wikipedia. We show that even a relatively small 200M parameter pretrained model that uses our TimesFM architecture displays impressive zero-shot performance on a variety of public benchmarks from different domains and granularities. 
</p>


<h2>Acknowledgements</h2>


<p>
<em>This work is the result of a collaboration between several individuals across Google Research and Google Cloud, including (in alphabetical order): Abhimanyu Das, Weihao Kong, Andrew Leach, Mike Lawrence, Alex Martin, Rajat Sen, Yang Yang and Yichen Zhou.</em>
</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SeaweedFS fast distributed storage system for blobs, objects, files and datalake (243 pts)]]></title>
            <link>https://github.com/seaweedfs/seaweedfs</link>
            <guid>39235593</guid>
            <pubDate>Fri, 02 Feb 2024 22:57:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/seaweedfs/seaweedfs">https://github.com/seaweedfs/seaweedfs</a>, See on <a href="https://news.ycombinator.com/item?id=39235593">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="responsive-meta-container" data-turbo-replace="">
      <p>
        SeaweedFS is a fast distributed storage system for blobs, objects, files, and data lake, for billions of files! Blob store has O(1) disk seek, cloud tiering. Filer supports Cloud Drive, cross-DC active-active replication, Kubernetes, POSIX FUSE mount, S3 API, S3 Gateway, Hadoop, WebDAV, encryption, Erasure Coding.
      </p>

    <h3>License</h3>
  <p>
    <a href="https://github.com/seaweedfs/seaweedfs/blob/master/LICENSE" data-analytics-event="{&quot;category&quot;:&quot;Repository Overview&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;location:sidebar;file:license&quot;}">
      
     Apache-2.0 license
    </a>
  </p>


    <p>
        <a href="https://github.com/seaweedfs/seaweedfs/stargazers">
          
          <span>19.4k</span>
          stars
</a>        <a href="https://github.com/seaweedfs/seaweedfs/forks">
          
          <span>2.1k</span>
          forks
</a>          <a href="https://github.com/seaweedfs/seaweedfs/branches">
            
            <span>Branches</span>
</a>          <a href="https://github.com/seaweedfs/seaweedfs/tags">
            
            <span>Tags</span>
</a>        <a href="https://github.com/seaweedfs/seaweedfs/activity">
          
          <span>Activity</span>
</a>    </p>

      <div>
        <div data-view-component="true">
        <a href="https://github.com/login?return_to=%2Fseaweedfs%2Fseaweedfs" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:21827146,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/seaweedfs/seaweedfs&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="61d1ceb22294278bd66fa0be334cad85e51ec66dea39e31d2dcccff5ad68310c" aria-label="You must be signed in to star a repository" data-view-component="true">    <span data-view-component="true">
          Star
</span>
</a>        </div>
        <p>
                <a href="https://github.com/login?return_to=%2Fseaweedfs%2Fseaweedfs" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/seaweedfs/seaweedfs&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="594b3e8b34a138503950ffd4f2d74337d2a10759bcc63aae2970688e416da16c" aria-label="You must be signed in to change notification settings" data-view-component="true">    Notifications
</a>
        </p>
          </div>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Carl Weathers has died (309 pts)]]></title>
            <link>https://www.bbc.co.uk/news/world-us-canada-68188746</link>
            <guid>39235336</guid>
            <pubDate>Fri, 02 Feb 2024 22:30:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bbc.co.uk/news/world-us-canada-68188746">https://www.bbc.co.uk/news/world-us-canada-68188746</a>, See on <a href="https://news.ycombinator.com/item?id=39235336">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main id="main-content" data-testid="main-content"><article><header></header><div data-component="image-block"><figure><p><span><picture><source srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/C795/production/_132539015_carl.jpg.webp 240w, https://ichef.bbci.co.uk/news/320/cpsprodpb/C795/production/_132539015_carl.jpg.webp 320w, https://ichef.bbci.co.uk/news/480/cpsprodpb/C795/production/_132539015_carl.jpg.webp 480w, https://ichef.bbci.co.uk/news/624/cpsprodpb/C795/production/_132539015_carl.jpg.webp 624w, https://ichef.bbci.co.uk/news/800/cpsprodpb/C795/production/_132539015_carl.jpg.webp 800w, https://ichef.bbci.co.uk/news/976/cpsprodpb/C795/production/_132539015_carl.jpg.webp 976w" type="image/webp"><img alt="Carl Weathers" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/C795/production/_132539015_carl.jpg 240w, https://ichef.bbci.co.uk/news/320/cpsprodpb/C795/production/_132539015_carl.jpg 320w, https://ichef.bbci.co.uk/news/480/cpsprodpb/C795/production/_132539015_carl.jpg 480w, https://ichef.bbci.co.uk/news/624/cpsprodpb/C795/production/_132539015_carl.jpg 624w, https://ichef.bbci.co.uk/news/800/cpsprodpb/C795/production/_132539015_carl.jpg 800w, https://ichef.bbci.co.uk/news/976/cpsprodpb/C795/production/_132539015_carl.jpg 976w" src="https://ichef.bbci.co.uk/news/976/cpsprodpb/C795/production/_132539015_carl.jpg" width="976" height="549" loading="eager"></picture></span><span role="text"><span>Image source, </span>Getty Images</span></p></figure></div><div data-component="text-block"><p><b>US actor Carl Weathers has died at the age of 76, according to his family.</b></p></div><div data-component="text-block"><p>Weathers, who starred as Apollo Creed in the first four Rocky films, "died peacefully in his sleep", according to a statement released by his family.</p></div><div data-component="text-block"><p>His other film credits include Predator, with Arnold Schwarzenegger, and Adam Sandler's Happy Gilmore.</p></div><div data-component="text-block"><p>Weathers, who began his career as an NFL linebacker, "was an exceptional human being who lived an extraordinary life", his family's statement added.</p></div><div data-component="text-block"><p>"Through his contributions to film, television, the arts and sports, he has left an indelible mark and is recognized worldwide and across generations," said the family. </p></div><div data-component="text-block"><p>"He was a beloved brother, father, grandfather, partner, and friend."</p></div><div data-component="text-block"><p>The athlete-turned-actor was comfortable starring in action and comedy, in appearances ranging from Arrested Development to The Mandalorian, where he featured in all three seasons of the Disney+ hit series. </p></div><div data-component="text-block"><p>His one-time co-star, the former California governor and superhero action star Schwarzenegger, praised Weathers on X, formerly Twitter: "Carl Weathers will always be a legend. An extraordinary athlete, a fantastic actor, and a great person. </p></div><div data-component="text-block"><p>"We couldn't have made Predator without him. And we certainly wouldn't have had such a wonderful time making it."</p></div><div data-component="text-block"><p>Born in 1948 in New Orleans, Weathers began his career playing football at San Diego State University, where he studied theatre acting, before joining the Oakland Raiders in 1970.</p></div><div data-component="text-block"><p>During his over 50-year career in Hollywood, he appeared in more than 75 films and TV shows, according to Deadline. </p></div><div data-component="text-block"><p>In 2021 he was nominated for an Emmy for his role in The Mandalorian. He directed two episodes of the Star Wars series, as well as episodes of Law &amp; Order and Chicago Med.</p></div><div data-component="text-block"><p>He was also known for Action Jackson, Close Encounters of the Third Kind, Eight Crazy Nights, Little Nicky and the Toy Story franchise.</p></div><div data-component="text-block"><p>Adam Sandler paid tribute on social media, writing: "A true great man. Great dad. Great actor. Great athlete."</p></div><div data-component="text-block"><p>"What a guy!! Everyone loved him," he wrote. "Love to his entire family and Carl will always be known as a true legend."</p></div><div data-component="text-block"><p>Breaking Bad actor Giancarlo Esposito said: "I will sorely miss my dear friend &amp; brother Carl Weathers. You are truly one of the most wonderful human beings I have had the honor &amp; pleasure of spending time with!"</p></div><div data-component="text-block"><p>In an interview with the Detroit News last year, Weathers called himself a "lucky guy".</p></div><div data-component="text-block"><p>There are so many people that came before me who I admired and whose success I wanted to emulate, and just kind of hit the benchmarks they hit in terms of success, who created a pathway that I've been able to walk and find success as a result," he said. "And hopefully I can inspire someone else to do good work as well." </p></div><div data-component="text-block"><p>"I guess I'm just a lucky guy."</p></div><section data-component="links-block"><p><h2>More on this story</h2></p></section></article></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why Isn't the <html> Element 100% Supported on CanIUse.com? (262 pts)]]></title>
            <link>https://anderegg.ca/2024/02/02/why-isnt-the-html-element-100-supported</link>
            <guid>39235001</guid>
            <pubDate>Fri, 02 Feb 2024 21:56:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://anderegg.ca/2024/02/02/why-isnt-the-html-element-100-supported">https://anderegg.ca/2024/02/02/why-isnt-the-html-element-100-supported</a>, See on <a href="https://news.ycombinator.com/item?id=39235001">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
				<article>
					
					<h3>February 02, 2024</h3>
					<p>I saw a <a href="https://mastodon.gamedev.place/@Ronflaix/111862153259345050">Mastodon post</a> that made me laugh this morning. It seemed sort of crazy that the <code>html</code> element <a href="https://caniuse.com/mdn-html_elements_html">wouldn’t have 100% support</a> on CanIUse.com. Heck, I’ve been using it since 1994 and it worked just fine back then! This led me down a bit of a rabbit hole.</p>

<p>A bit of background, first. <a href="https://caniuse.com/">Can I Use…</a> is a site that helps web developers track the adoption rate of web technologies. It estimates browser usage, measures feature compatibility, and spits out a number that tries to reflect how available a feature is. It’s a site I’ve been using almost since <a href="https://web.archive.org/web/20100430032738/http://caniuse.com/">it launched in 2010</a> and I’ve always found it really useful.</p>

<p>So why is it currently saying the <code>html</code> element only has 97.34% support? That’s less than the current support percentage for the <a href="https://caniuse.com/audio"><code>audio</code> element</a>! It also looks like the same is true for the <a href="https://caniuse.com/mdn-html_elements_a"><code>a</code></a> and <a href="https://caniuse.com/mdn-html_elements_p"><code>p</code></a> elements with exactly the same 97.34% support number.</p>

<p>One thing I learned when looking into this is that a lot of the data on the site actually comes from <a href="https://developer.mozilla.org/en-US/">MDN</a> <sup id="fnref:1" role="doc-noteref"><a href="#fn:1" rel="footnote">1</a></sup>. MDN is another resource I use and trust, so this seems reasonable to me. It also often has stats about feature uptake, so it makes sense for CanIUse.com to piggyback on that.</p>

<p>Looking at the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html">MDN page for the <code>html</code> element</a>, it has a <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html#browser_compatibility">browser compatibility section</a>. In that are two rows with a lot of red Xs. The first is for the optional <code>manifest</code> attribute on the <code>html</code> element. This is deprecated and was never standardized. The second is the related “<a href="https://w3c.github.io/webappsec-secure-contexts/">secure context required</a>”, which is an <a href="https://www.w3.org/standards/types/#x2-3-editor-s-draft">Editor’s Draft</a> —&nbsp;that is, not something currently on the standardization track. I don’t know how this was previously related to the <code>html</code> element, but that use was also <a href="https://caniuse.com/mdn-html_elements_html_manifest_secure_context_required">never standardized and is deprecated</a>.</p>

<p>So, there are two features listed here that almost all browsers <em>correctly</em> do not support. But still, it doesn’t look like this is the reason for the missing 2.66%. There are some browsers that are listed as “Support Unknown”. Adding up all the current usage for these browsers comes to 1.27%. There’s also an entry for Android Browser versions 2.1–4.3 which is listed as not supporting the <code>html</code> element — which I find highly dubious — but it’s listed as having a usage share of 0%. I suppose there might be some rounding errors here that would bump the 1.27% to 2.66%? But I still find this very unclear. Also, I feel very confident that those older browsers supported the <code>html</code> element!</p>

<p>So yeah, I don’t have a great answer for this. If you do, <a href="https://mastodon.social/@gavinanderegg">please let me know</a>! I’ve always taken the numbers from CanIUse.com with a few grains of salt, but I’ll be adding a few more going forward. I still think it’s a great resource.</p>

<hr>

<p><strong>UPDATE:</strong> <a href="https://cliff.social/@rezonant">rezonant</a> on Mastodon poked me to let me know that he posted a <a href="https://news.ycombinator.com/item?id=39236148">comment on Hacker News</a> that has a possible explanation. The short version: if you switch to “% of all tracked” in the top right beside “usage”, and then add up the “support unknown” browser number, you get 99.98%. It’s a lot easier to see how rounding errors could make this the correct number. Still, I think the way older browsers are handled here is confusing. It doesn’t affect the overall number too much, but in the case of base level elements like <code>html</code>, it seems odd.</p>

<hr>



				</article>
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenBSD System-Call Pinning (114 pts)]]></title>
            <link>https://lwn.net/SubscriberLink/959562/0578b8e463f790c1/</link>
            <guid>39233943</guid>
            <pubDate>Fri, 02 Feb 2024 20:33:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lwn.net/SubscriberLink/959562/0578b8e463f790c1/">https://lwn.net/SubscriberLink/959562/0578b8e463f790c1/</a>, See on <a href="https://news.ycombinator.com/item?id=39233943">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<!-- $Id: slink-trial,v 1.1 2005-11-04 21:27:01 corbet Exp $ -->
<center>
<table>
<tbody><tr><td>
<h3>Welcome to LWN.net</h3>
<p>
The following subscription-only content has been made available to you 
by an LWN subscriber.  Thousands of subscribers depend on LWN for the 
best news from the Linux and free software communities.  If you enjoy this 
article, please consider accepting the trial offer on the right.  Thank you
for visiting LWN.net!
</p></td><td>
<div>
<h3>Free trial subscription</h3>
           <p>
           Try LWN for free for 1 month: no payment
           or credit card required.  <a href="https://lwn.net/Promo/slink-trial2-3/claim">Activate
           your trial subscription now</a> and see why thousands of
           readers subscribe to LWN.net.
           
</p></div>
</td>
</tr>

</tbody></table>
</center>

<p>
<a href="https://en.wikipedia.org/wiki/Return-oriented_programming">
Return-oriented programming</a> (ROP) attacks are hard to defend against.
Partial mitigations such as address-space layout randomization, stack
canaries, and other techniques are commonly deployed to try and frustrate
ROP attacks. Now, OpenBSD is experimenting with a new
mitigation that makes it harder for attackers to make system
calls, although some security researchers have expressed doubt that it will
prove effective at stopping real-world attacks.
In his
announcement message, Theo de Raadt said that this work
"<q>makes some specific low-level attack
methods unfeasable on OpenBSD, which will force the use of other methods.</q>"
</p>

<p>
Return-oriented programming is one of a family of techniques that use
indirect jumps to call
bits of code that already exist in a process's address space in an
attacker-controlled order. The original attack involved overwriting the stack
with carefully chosen addresses so that a function would "return" to a new
location. Since the original discovery, other related attacks that use jumps
through function pointers, signals, and other indirect jumps have been developed.
</p>

<p>
In December, De Raadt sent a <a href="https://lwn.net/Articles/959664/">patch</a> to the
OpenBSD mailing list expanding OpenBSD's restrictions on the locations from
which a process can make system calls.
<a href="https://github.com/openbsd/src/commit/83762a71f74848f4d09174ce350838b4204957c5">
A previous commit</a> added code that declares a new ELF section which
specifies where particular system calls are located within a program, so that the
kernel can detect when a program tries to call a system call from the wrong
location. Since OpenBSD does not have a stable system-call interface (instead
suggesting that programs go through the C library for a stable interface), the
new sections will not need to be explicitly added to most binary programs.
Now that patch has <a href="https://lwn.net/Articles/959883/">been merged</a>,
finishing a process which De Raadt said has taken five years.
</p>

<h4>Background</h4>

<p>
OpenBSD <a href="https://lwn.net/Articles/806776/">already restricted</a> where programs can make
system calls. In 2019, De Raadt added code to ensure that system calls could only be
made from four locations: in the text of a static binary (that links the C
library statically, and so doesn't have a separate section at runtime), in the
signal trampoline (where a system call is required to return from a signal
handler), in the text of <tt>ld.so</tt> (the dynamic linker, that needs to make
system calls to set up the process's address space), and in the text of
<tt>libc.so</tt> (where the OpenBSD system call stubs live).
</p>

<p>
This code relied on a new
<a href="https://man.openbsd.org/msyscall"><tt>msyscall()</tt></a>
system call to let the linker inform the
kernel of where <tt>libc.so</tt>
(the shared object for the system's C library)
is mapped within the address space. In February
2023, De Raadt <a href="https://lwn.net/Articles/959668/">extended</a> these protections with the
introduction of
<a href="https://man.openbsd.org/OpenBSD-7.4/pinsyscall"><tt>pinsyscall()</tt></a>,
which is used to say where in the binary
a process is allowed to call
<a href="https://man.openbsd.org/execve.2"><tt>execve()</tt></a>. Both of these
system calls can only be invoked once by a given process, which is done by the
dynamic linker.
</p>

<pre>    int msyscall(void *addr, size_t len);
    int pinsyscall(int syscall, void *start, size_t len);
</pre>

<p>
Despite its more generic signature, <tt>pinsyscall()</tt> only supports
specifying a location for <tt>execve()</tt> calls.
</p>

<p>
These mechanisms were also intended to make it harder for ROP
attacks to gain a foothold. Requiring the address from which a system
call is made to be within the <tt>msyscall()</tt> block ensures that an
attack cannot make use of any ROP gadgets ending in a system call that may be
present outside of the specially designated areas.
Requiring that <tt>execve()</tt> calls come from one
specific location is also intended to make it harder for an attack to figure out
where to make a call from, since calling <tt>execve()</tt> to execute an
attacker-controlled program is a common stepping stone in an attack.
</p>
<p>
The new work obsoletes both of
these mechanisms, with De Raadt <a href="https://lwn.net/Articles/959666">suggesting</a> that
once the new code had been adopted for a release or two, they could
"<q>turn msyscall() and the less powerful pinsyscall(2) into NOPs, and
eventually remove them</q>".
</p>

<h4>The patch</h4>

<p>
The new work adds a new
<a href="https://man.openbsd.org/pinsyscalls.2"><tt>pinsyscalls()</tt></a>
system call:
</p>

<pre>    int pinsyscalls(void *start, size_t len, u_int *pintable, int npins);
</pre>

<p>
<tt>pinsyscalls()</tt> sends a "pintable" specifying from where in the process's
address space each possible system call is expected to be made.
The kernel uses the information in the table to check on entry
to the kernel whether it is being invoked from a specified location. This check
is intended to prevent a ROP attack from setting the system call number and then
jumping directly to a system-call CPU instruction corresponding to a different
system call. For example, an attack wishing to make an <tt>execve()</tt> call
would need to jump to the specific instruction in the C library that has been
added to the allowlist for that call, not another stub or
the middle of an unrelated instruction which simply happens to decode as a
system call instruction.
</p>

<p>
When setting up a new process, the dynamic linker uses <tt>pinsyscalls()</tt> to
inform the kernel about from where the process expects to make system calls.
The new work adds an "openbsd.syscalls" ELF section to
select programs: <tt>ld.so</tt>,
<tt>libc.so</tt>, and <tt>libc.a</tt>.
The new ELF section
contains an array of program offsets and system call numbers, indicating which
system call is expected at each location. This section is read by the dynamic
linker and used to provide a suitable pintable to the kernel.
Programs that link against the C library
can therefore benefit from the new protection immediately, without requiring
changes to their build process. Unlike Linux, OpenBSD
develops the kernel and user-space together, so the user-space components of this
work are already in place.
</p>

<p>
Security researchers have expressed doubt about how useful this check is at preventing
compromises. One researcher, "stein",
<a href="https://isopenbsdsecu.re/mitigations/pinsyscall/">
noted</a> that "<q>an attacker able to perform ROP can simply use the libc stub,
instead of issuing raw syscalls</q>", referring to the possibility of an attack
jumping directly to the instruction which has been added to the allowlist for a particular system call.
Another researcher, Saagar Jha, <a href="https://federated.saagarjha.com/notice/AcmzyfPcwc8KDVlOqm">
commented</a> on the new patch, saying
"<q>if you take this to its logical conclusion it's just 'applications should
specify which system calls they use' which is literally just what pledge does
and it’s enforced by the kernel and not in some weird ad-hoc IP to syscall
number lookup scheme</q>".
</p>

<p>
OpenBSD does have existing mitigations designed to make it difficult for ROP
attacks to determine the location of the C library system call stubs. One such
protection is
<a href="https://en.wikipedia.org/wiki/Address_space_layout_randomization">
address-space layout randomization</a> (ASLR), which has been standard
in many operating systems for a long time. OpenBSD takes randomization of a
program's address space a step farther by also re-linking the sections of the C
library in a random order on boot, meaning that an attack must determine not
only the offset of the C library in memory, but also the offset of the specific
code to which the attack wishes to jump within the library.
Unfortunately, dynamically linked programs have to have this information in the
symbol relocation table in order to allow for calls to the shared object.
Therefore attacks that can construct a way to read memory can frequently leak
enough offset information to circumvent these protections. De Raadt gave
<a href="https://twitter.com/i/broadcasts/1kvJpmkYkaZxE">a talk</a>
(with <a href="https://www.openbsd.org/papers/csw2023.pdf">slides</a>)
about ROP mitigations in OpenBSD at CanSecWest in 2023, including several other
protections designed to make leaking information about the contents of a program
harder.
</p>

<p>
Unlike <tt>pledge()</tt>, this patch has the advantage of securing an application even if
the developer does not make any special effort. However, this protection is most
useful to programs that statically link OpenBSD's C library; programs that use
dynamic linking will still have all of the system calls used by the C library in
their address space. <tt>pledge()</tt> also permits dropping unnecessary permissions after
startup, which allows applications to use a more restrictive set of permissions
than a static defense like <tt>pinsyscalls()</tt> can permit.
</p>

<p>
This work was difficult to bring to completion. One of the largest obstacles
were programs written in Go. In his announcement that the new work had been
merged, De Raadt said: "<q>The direct-syscalls-inside-the-binary model used by
go (and only go, noone
else in the history of the unix software does this) provided the biggest
resistance against this effort</q>". He thanked Joel Sing specifically for his
work to make the Go ecosystem compatible with the changes.
</p>

<p>
Since Linux permits programs to make system calls directly, without going
through a wrapper from a blessed C library, and is unlikely to change this
policy, additional steps would be needed to incorporate a similar mechanism
there. Some Linux programs make system calls directly in order to avoid
depending on a specific C library, but others make system calls directly in
order to use new features which have not yet been wrapped by the system's C
library; OpenBSD doesn't have this problem since its C library and kernel are
developed in lockstep.
</p>

<h4>Conclusion</h4>

<p>
OpenBSD has a long history of adding novel mitigations, some of which are
adopted by other projects and some of which are not. This work seems unlikely to
be adopted elsewhere, given the doubts around the practical benefit and the
costs of adding additional complexity to how system calls are performed.
This work does add another barrier to constructing a ROP
attack on OpenBSD, however, and seems especially beneficial for
statically linked programs that use only a few system calls and have not yet made
use of pledge.
</p><br clear="all">
               <br clear="all">
               <blockquote>
<p>
<b>Did you like this article?</b>  Please accept our 
<a href="https://lwn.net/Promo/slink-trial2-3/claim">trial subscription offer</a> to be
able to see more content like it and to participate in the discussion.
</p>
</blockquote>
<hr><p>
           (<a href="https://lwn.net/Login/?target=/Articles/959562/">Log in</a> to post comments)
           </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Limitarianism: The Case Against Extreme Wealth (137 pts)]]></title>
            <link>https://www.hive.co.uk/Product/Ingrid-Robeyns/Limitarianism--The-Case-Against-Extreme-Wealth/28866492</link>
            <guid>39233239</guid>
            <pubDate>Fri, 02 Feb 2024 19:46:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.hive.co.uk/Product/Ingrid-Robeyns/Limitarianism--The-Case-Against-Extreme-Wealth/28866492">https://www.hive.co.uk/Product/Ingrid-Robeyns/Limitarianism--The-Case-Against-Extreme-Wealth/28866492</a>, See on <a href="https://news.ycombinator.com/item?id=39233239">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="description"><p>â€˜The best case I've read for putting an upper limit on the accumulation of wealthâ€™ Richard WilkinsonNo-one deserves to be a millionaire.</p><p>Not even you. We all notice when the poor get poorer: when there are more rough sleepers and food bank queues start to grow.</p><p>But if the rich become richer, there is nothing much to see in public and, for most of us, daily life doesn't change. Or at least, not immediately.   In this astonishing, eye-opening intervention, world-leading philosopher and economist Ingrid Robeyns exposes the true extent of our wealth problem, which has spent the past fifty years silently spiralling out of control.</p><p>In moral, political, economic, social, environmental and psychological terms, she shows, extreme wealth is not only unjustifiable but harmful to us all - the rich included.   In place of our current system, Robeyns offers a breathtakingly clear alternative: limitarianism.</p><p>The answer to so many of the problems posed by neoliberal capitalism - and the opportunity for a vastly better world - lies in placing a hard limit on the wealth that any one person can accumulate. Because nobody deserves to be a millionaire. Not even you.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[New Super Secret Surveillance Court Covering Old Super Secret Surveillance Court (139 pts)]]></title>
            <link>https://www.techdirt.com/2024/02/02/we-shouldnt-allow-a-new-super-secret-surveillance-court-cover-up-the-civil-liberties-problems-of-the-old-super-secret-surveillance-court/</link>
            <guid>39233080</guid>
            <pubDate>Fri, 02 Feb 2024 19:32:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.techdirt.com/2024/02/02/we-shouldnt-allow-a-new-super-secret-surveillance-court-cover-up-the-civil-liberties-problems-of-the-old-super-secret-surveillance-court/">https://www.techdirt.com/2024/02/02/we-shouldnt-allow-a-new-super-secret-surveillance-court-cover-up-the-civil-liberties-problems-of-the-old-super-secret-surveillance-court/</a>, See on <a href="https://news.ycombinator.com/item?id=39233080">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="storywrap-430653">


<h3>from the <i>not-fixing-the-problem</i> dept</h3>

<p>For years now we’ve been covering the big ongoing fights between the US and the EU regarding the transfer of user data across the Atlantic. The main issue was that due to somewhat different data protection/privacy laws between the EU and the US, the two keep trying to work out a “deal” that allows (mostly) US companies to stores data from EU users on servers in the US. This transatlantic data flow agreement is important. It would be difficult for many US companies to offer services to EU citizens without it.</p>
<p>But it’s been a fucking mess for over a decade. Almost entirely because of US surveillance programs.</p>
<p>The agreements to handle this have gone by various names, starting with the <a target="_blank" rel="noreferrer noopener" href="https://www.techdirt.com/2015/10/06/nsa-screws-up-another-thing-eu-court-justice-throws-internet-loop-ending-safe-harbor/">EU/US Privacy “safe harbor,”</a> and then later the <a target="_blank" rel="noreferrer noopener" href="https://www.techdirt.com/2022/03/29/eu-us-say-theyve-agreed-to-a-new-privacy-shield-that-doesnt-seem-to-deal-with-any-of-the-problems-of-the-old-one/">“Privacy Shield.”</a> In both cases, those agreements were eventually <a target="_blank" rel="noreferrer noopener" href="https://www.techdirt.com/2020/07/16/as-expected-us-surveillance-social-media-leads-to-eu-court-justice-rejecting-eu-us-privacy-shield/">rejected by the EU Court of Justice</a>, almost entirely because of the very big problem of the US’s surveillance activities, mostly overseen by the secretive FISA Court. (As a side note, EU government surveillance is in many ways worse than the US’s similar surveillance efforts, but somehow that never comes up in any of these discussions… but, I digress…).</p>
<p>Back in the fall of 2022, the EU and the US excitedly announced a new agreement to replace the old rejected agreements. Yet, as we pointed out at the time, unless they agreed to stop NSA surveillance on basically all electronic communications outside of the US, it wasn’t clear how it would actually fix the underlying reason these agreements keep getting thrown out.</p>
<p>As Politico recently detailed, the way the US has “fixed” this in the new privacy agreement… is to set up <a target="_blank" rel="noreferrer noopener" href="https://www.politico.com/news/2024/01/17/inside-bidens-secret-surveillance-court-00136175">an entirely new, entirely secretive surveillance court</a>. What could go wrong?</p>
<blockquote>
<p><em>Officially known as the Data Protection Review Court, it was authorized in an October 2022 executive order to fix a collision of European and American law that had been blocking the lucrative flow of consumer data between American and European companies for three years.</em></p>
<p><em>The court’s </em><a target="_blank" rel="noreferrer noopener" href="https://www.politico.com/news/2023/11/14/data-protection-review-court-judges-00127154"><em>eight judges were named last November</em></a><em>, including former U.S. Attorney General Eric Holder. Its existence has allowed companies to resume the lucrative transatlantic data trade with the blessing of EU officials.</em></p>
<p><em>The details get blurry after that.</em></p>
<p><em>The court’s location is a secret, and the Department of Justice will not say if it has taken a case yet, or when it will. Though the court has a clear mandate — ensuring Europeans their privacy rights under U.S. law — its decisions will also be kept a secret, from both the EU residents petitioning the court and the federal agencies tasked with following the law. Plaintiffs are not allowed to appear in person and are represented by a special advocate, appointed by the U.S. attorney general.</em></p>
</blockquote>
<p>That doesn’t seem that great.</p>
<p>Also, this new quasi-court has some other oddities, including that it is open to Europeans, but not Americans.</p>
<blockquote>
<p><em>U.S. residents who suspect they are under improper surveillance cannot go to the Data Protection Review Court. Under U.S. law, they can go to a federal court — but only if they can show a concrete wrong or harm that gives them legal standing, which presents a Catch-22, since they can’t prove what they don’t know.</em></p>
<p><em>Adam Klein, former chair of the Privacy and Civil Liberties Oversight Board, an independent agency within the Executive Branch, pointed to former Trump campaign adviser Carter Page as the type of individual who could have benefited from a mechanism like the DPRC. Page was surveilled by the FBI during the 2016 presidential election as part of a probe into Russian influence in U.S. politics — and Justice Department inspector general investigation later found a swath of errors and material omissions in the documents used to seek the surveillance warrant. An FBI lawyer ultimately pleaded guilty to altering a document used for that warrant.</em></p>
<p><em>But Page himself had little recourse. He filed a lawsuit in 2020 seeking $75 million from the government and several current and former FBI and DOJ officials for violating his constitutional rights. A </em><a target="_blank" rel="noreferrer noopener" href="https://www.politico.com/news/2022/09/01/trump-russia-fbi-doj-00054593"><em>federal judge called</em></a><em> the FBI’s conduct “troubling,” but ultimately found the law bars Page from pursuing a civil lawsuit. An appeal is pending.</em></p>
<p><em>Now, with the DPRC in place, “We’re in an odd place when non-residents have easier access to a place to raise their concerns about U.S. government surveillance than Americans do,” said Klein.</em></p>
</blockquote>
<p>But even Europeans have no clear path to using this court that is so secretive no one’s even entirely sure if it’s actually opened for business.</p>
<blockquote>
<p><em>According to the executive order, getting before the DPRC starts with a long preliminary process: a citizen complaint first has to shuttle between an EU data protection official and the U.S.’ Office of the Director of National Intelligence, which decides whether there was a civil rights violation from the data collection.</em></p>
<p><em>Regardless of the results, the response to the initial complaint will neither confirm or deny that the EU resident was under U.S. surveillance. The response will say there either was no violation found, or that there was a violation found and that the U.S. government took appropriate steps to resolve it. It won’t specify which one.</em></p>
<p><em>The EU resident can then appeal directly to the DPRC in America, — with the assistance of a court-appointed special advocate. That advocate will have the details from the underlying ODNI decision — although that decision remains off-limits to the person making the appeal.</em></p>
<p><em>“What are you going to write in the appeal? Nothing, because you don’t know what the answer is,” Schrems said. “As a lawyer, it’s really hard that you’ll ever win a case by saying ‘I appeal’ without saying what your problem is with the decision.”</em></p>
</blockquote>
<p>While this seems to be a setup designed to make bureaucrats on either side of the Atlantic pretend they’re doing something useful, it’s hard to see how it will actually solve the underlying problems. Which, again, are because of NSA surveillance rubber stamped by the other secretive court, the FISA Court.</p>
<p>Stacking up more secretive courts does not seem like a real solution. Fixing overly broad, mass surveillance is.</p>
<p>But apparently that’s off the table.</p>
<p>
Filed Under: <a href="https://www.techdirt.com/tag/data-protection-review-court/" rel="tag">data protection review court</a>, <a href="https://www.techdirt.com/tag/eu/" rel="tag">eu</a>, <a href="https://www.techdirt.com/tag/nsa/" rel="tag">nsa</a>, <a href="https://www.techdirt.com/tag/privacy-shield/" rel="tag">privacy shield</a>, <a href="https://www.techdirt.com/tag/secrecy/" rel="tag">secrecy</a>, <a href="https://www.techdirt.com/tag/surveillance/" rel="tag">surveillance</a>, <a href="https://www.techdirt.com/tag/transatlantic-data-flows/" rel="tag">transatlantic data flows</a>
<br>
</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pkl, a Programming Language for Configuration (104 pts)]]></title>
            <link>https://pkl-lang.org/blog/introducing-pkl.html</link>
            <guid>39232976</guid>
            <pubDate>Fri, 02 Feb 2024 19:22:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pkl-lang.org/blog/introducing-pkl.html">https://pkl-lang.org/blog/introducing-pkl.html</a>, See on <a href="https://news.ycombinator.com/item?id=39232976">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="preamble">

<p>We are delighted to announce the open source first release of Pkl (pronounced <em>Pickle</em>), a programming language for producing configuration.</p>
<p>When thinking about configuration, it is common to think of static languages like JSON, YAML, or Property Lists.
While these languages have their own merits, they tend to fall short when configuration grows in complexity.
For example, their lack of expressivity means that code often gets repeated.
Additionally, it can be easy to make configuration errors, because these formats do not provide any validation of their own.</p>
<p>To address these shortcomings, sometimes formats get enhanced by ancillary tools that add special logic.
For example, perhaps there’s a need to make code more <a href="https://en.wikipedia.org/wiki/Don%E2%80%99t_repeat_yourself"><abbr title="Don't Repeat Yourself">DRY</abbr></a>, so a special property is introduced that understands how to resolve references, and merge objects together.
Alternatively, there’s a need to guard against validation errors, so some new way is created to validate a configuration value against an expected type.
Before long, these formats almost become programming languages, but ones that are hard to understand and hard to write.</p>
<p>On the other end of the spectrum, a general-purpose language might be used instead.
Languages like Kotlin, Ruby, or JavaScript become the basis for <a href="https://en.wikipedia.org/wiki/Domain-specific_language"><abbr title="Domain-specific language">DSL</abbr></a>s that generate configuration data.
While these languages are tremendously powerful, they can be awkward to use for describing configuration, because they are not oriented around defining and validating data.
Additionally, these DSLs tend to be tied to their own ecosystems.
It is a hard sell to use a Kotlin DSL as the configuration layer for an application written in Go.</p>
<p>We created Pkl because we think that configuration is best expressed as a blend between a static language and a general-purpose programming language.
We want to take the best of both worlds; to provide a language that is declarative and simple to read and write, but enhanced with capabilities borrowed from general-purpose languages.
When writing Pkl, you are able to use the language features you’d expect, like classes, functions, conditionals, and loops.
You can build abstraction layers, and share code by creating packages and publishing them.
Most importantly, you can use Pkl to meet many different types of configuration needs.
It can be used to produce static configuration files in any format, or be embedded as a library into another application runtime.</p>
<p>We designed Pkl with three overarching goals:</p>
<div>
<ul>
<li>
<p>To provide safety by catching validation errors before deployment.</p>
</li>
<li>
<p>To scale from simple to complex use-cases.</p>
</li>
<li>
<p>To be a joy to write, with our best-in-class IDE integrations.</p>
</li>
</ul>
</div>
</div><div>
<h2 id="a-quick-tour-of-pkl"><a href="#a-quick-tour-of-pkl"></a><a href="#a-quick-tour-of-pkl">A Quick Tour of Pkl</a></h2>
<div>
<p>We created Pkl to have a familiar syntax to developers, and to be easy to learn. That is why we’ve included features like classes, functions, loops, and type annotations.</p>
<p>For example, here is a Pkl file (module) that defines a configuration schema for an imaginary web application.</p>
<div>
<table>
<tbody><tr>
<td>
<i title="Note"></i>
</td>
<td>
This file defines types, and not data. This is a common pattern in Pkl, and we call this a <em>template</em>.
</td>
</tr>
</tbody></table>
</div>
<div id="application-pkl">
<p>Application.pkl</p>
<div>
<pre><code data-lang="pkl"><span>module</span> <span>Application</span>

<span>/// The hostname that this server responds to.</span>
<span>hostname</span><span>:</span> <span>String</span>

<span>/// The port to listen on.</span>
<span>port</span><span>:</span> <span>UInt16</span>

<span>/// The environment to deploy to.</span>
<span>environment</span><span>:</span> <span>Environment</span>

<span>/// The database connection for this application</span>
<span>database</span><span>:</span> <span>Database</span>

<span>class</span> <span>Database</span> <span>{</span>
  <span>/// The username for this database.</span>
  <span>username</span><span>:</span> <span>String</span>

  <span>/// The password for this database.</span>
  <span>password</span><span>:</span> <span>String</span>

  <span>/// The remote host for this database.</span>
  <span>host</span><span>:</span> <span>String</span>

  <span>/// The remote port for this database.</span>
  <span>port</span><span>:</span> <span>UInt16</span>

  <span>/// The name of the database.</span>
  <span>dbName</span><span>:</span> <span>String</span>
<span>}</span>

<span>typealias</span> <span>Environment</span> <span>=</span> <span>"dev"</span><span>|</span><span>"qa"</span><span>|</span><span>"prod"</span></code></pre>
</div>
</div>
<p>And here is how configuration data might be defined:</p>
<div>
<p>localhost.pkl</p>
<div>
<pre><code data-lang="pkl"><span>amends</span> <span>"Application.pkl"</span>

<span>hostname</span> <span>=</span> <span>"localhost"</span>

<span>port</span> <span>=</span> <span>3599</span>

<span>environment</span> <span>=</span> <span>"dev"</span>

<span>database</span> <span>{</span>
  <span>host</span> <span>=</span> <span>"localhost"</span>
  <span>port</span> <span>=</span> <span>5786</span>
  <span>username</span> <span>=</span> <span>"admin"</span>
  <span>password</span> <span>=</span> <span>read</span><span>(</span><span>"env:DATABASE_PASSWORD"</span><span>)</span> <i data-value="1"></i><b>(1)</b>
  <span>dbName</span> <span>=</span> <span>"myapp"</span>
<span>}</span></code></pre>
</div>
</div>

<p>It is easy to create variations of the same base data by <a href="https://pkl-lang.org/main/current/language-reference/index.html#amending-objects" class="page">amending</a>.
For example, let’s imagine that we want to run four databases locally, as sidecars.
This uses a <a href="https://pkl-lang.org/main/current/language-reference/index.html#for-generators" class="page">for generator</a> to produce four variations, each of which amends the base <code>db</code> and specifies a different port.</p>
<div>
<p>sidecars.pkl</p>
<div>
<pre><code data-lang="pkl"><span>import</span> <span>"Application.pkl"</span>

<span>hidden</span> <span>db</span><span>:</span> <span>Application</span><span>.</span><span>Database</span> <span>=</span> <span>new</span> <span>{</span>
  <span>host</span> <span>=</span> <span>"localhost"</span>
  <span>username</span> <span>=</span> <span>"admin"</span>
  <span>password</span> <span>=</span> <span>read</span><span>(</span><span>"env:DATABASE_PASSWORD"</span><span>)</span>
  <span>dbName</span> <span>=</span> <span>"myapp"</span>
<span>}</span>

<span>sidecars</span> <span>{</span>
  <span>for</span> <span>(</span><span>offset</span> <span>in</span> <span>List</span><span>(</span><span>0</span><span>,</span> <span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>)</span><span>)</span> <span>{</span>
    <span>(</span><span>db</span><span>)</span> <span>{</span>
      <span>port</span> <span>=</span> <span>6000</span> <span>+</span> <span>offset</span>
    <span>}</span>
  <span>}</span>
<span>}</span></code></pre>
</div>
</div>
<p>Pkl programs can be easily rendered to common formats.</p>
<div id="tabs-1">
<div>
<ul>
<li id="tabs-1-yaml">
<p>YAML</p>
</li>
<li id="tabs-1-json">
<p>JSON</p>
</li>
<li id="tabs-1-xml">
<p>XML</p>
</li>
</ul>
</div>
<div id="tabs-1-yaml--panel" aria-labelledby="tabs-1-yaml">
<div>
<pre><code data-lang="text">$ export DATABASE_PASSWORD=hunter2
$ pkl eval --format yaml sidecars.pkl</code></pre>
</div>
<div>
<pre><code data-lang="yaml">sidecars:
- username: admin
  password: hunter2
  host: localhost
  port: 6000
  dbName: myapp
- username: admin
  password: hunter2
  host: localhost
  port: 6001
  dbName: myapp
- username: admin
  password: hunter2
  host: localhost
  port: 6002
  dbName: myapp
- username: admin
  password: hunter2
  host: localhost
  port: 6003
  dbName: myapp</code></pre>
</div>
</div>
<div id="tabs-1-json--panel" aria-labelledby="tabs-1-json">
<div>
<pre><code data-lang="text">$ export DATABASE_PASSWORD=hunter2
$ pkl eval --format json sidecars.pkl</code></pre>
</div>
<div>
<pre><code data-lang="json">{
  "sidecars": [
    {
      "username": "admin",
      "password": "hunter2",
      "host": "localhost",
      "port": 6000,
      "dbName": "myapp"
    },
    {
      "username": "admin",
      "password": "hunter2",
      "host": "localhost",
      "port": 6001,
      "dbName": "myapp"
    },
    {
      "username": "admin",
      "password": "hunter2",
      "host": "localhost",
      "port": 6002,
      "dbName": "myapp"
    },
    {
      "username": "admin",
      "password": "hunter2",
      "host": "localhost",
      "port": 6003,
      "dbName": "myapp"
    }
  ]
}</code></pre>
</div>
</div>
<div id="tabs-1-xml--panel" aria-labelledby="tabs-1-xml">
<div>
<pre><code data-lang="text">$ export DATABASE_PASSWORD=hunter2
$ pkl eval --format xml sidecars.pkl</code></pre>
</div>
<div>
<pre><code data-lang="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;root&gt;
  &lt;sidecars&gt;
    &lt;Database&gt;
      &lt;username&gt;admin&lt;/username&gt;
      &lt;password&gt;hunter2&lt;/password&gt;
      &lt;host&gt;localhost&lt;/host&gt;
      &lt;port&gt;6000&lt;/port&gt;
      &lt;dbName&gt;myapp&lt;/dbName&gt;
    &lt;/Database&gt;
    &lt;Database&gt;
      &lt;username&gt;admin&lt;/username&gt;
      &lt;password&gt;hunter2&lt;/password&gt;
      &lt;host&gt;localhost&lt;/host&gt;
      &lt;port&gt;6001&lt;/port&gt;
      &lt;dbName&gt;myapp&lt;/dbName&gt;
    &lt;/Database&gt;
    &lt;Database&gt;
      &lt;username&gt;admin&lt;/username&gt;
      &lt;password&gt;hunter2&lt;/password&gt;
      &lt;host&gt;localhost&lt;/host&gt;
      &lt;port&gt;6002&lt;/port&gt;
      &lt;dbName&gt;myapp&lt;/dbName&gt;
    &lt;/Database&gt;
    &lt;Database&gt;
      &lt;username&gt;admin&lt;/username&gt;
      &lt;password&gt;hunter2&lt;/password&gt;
      &lt;host&gt;localhost&lt;/host&gt;
      &lt;port&gt;6003&lt;/port&gt;
      &lt;dbName&gt;myapp&lt;/dbName&gt;
    &lt;/Database&gt;
  &lt;/sidecars&gt;
&lt;/root&gt;</code></pre>
</div>
</div>
</div>
<div>
<h3 id="built-in-validation"><a href="#built-in-validation"></a><a href="#built-in-validation">Built-in Validation</a></h3>
<p>Configuration is about data. And data needs to be valid.</p>
<p>In Pkl, validation is achieved using type annotations.
And, type annotations can optionally have constraints defined on them.</p>
<p>Here is an example, that defines the following constraints:</p>
<div>
<ul>
<li>
<p><code>age</code> must be between 0 and 130.</p>
</li>
<li>
<p><code>name</code> to not be empty.</p>
</li>
<li>
<p><code>zipCode</code> must be a string with five digits.</p>
</li>
</ul>
</div>
<div>
<p>Person.pkl</p>
<div>
<pre><code data-lang="pkl"><span>module</span> <span>Person</span>

<span>name</span><span>:</span> <span>String</span><span>(</span><span>!</span><span>isEmpty</span><span>)</span>

<span>age</span><span>:</span> <span>Int</span><span>(</span><span>isBetween</span><span>(</span><span>0</span><span>,</span> <span>130</span><span>)</span><span>)</span>

<span>zipCode</span><span>:</span> <span>String</span><span>(</span><span>matches</span><span>(</span><span>Regex</span><span>(</span><span>"<span>\\</span>d{5}"</span><span>)</span><span>)</span><span>)</span></code></pre>
</div>
</div>
<p>A failing constraint causes an evaluation error.</p>
<div>
<p>alessandra.pkl</p>
<div>
<pre><code data-lang="pkl"><span>amends</span> <span>"Person.pkl"</span>

<span>name</span> <span>=</span> <span>"Alessandra"</span>

<span>age</span> <span>=</span> <span>-</span><span>5</span>

<span>zipCode</span> <span>=</span> <span>"90210"</span></code></pre>
</div>
</div>
<p>Evaluating this module fails:</p>
<div>
<pre><code data-lang="text">$ pkl eval alessandra.pkl
–– Pkl Error ––
Type constraint `isBetween(0, 130)` violated.
Value: -5

5 | age: Int(isBetween(0, 130))
             ^^^^^^^^^^^^^^^^^
at Person#age (file:///Person.pkl)

5 | age = -5
          ^^
at alessandra#age (file:///alessandra.pkl)

106 | text = renderer.renderDocument(value)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
at pkl.base#Module.output.text (https://github.com/apple/pkl/blob/0.25.0/stdlib/base.pkl#L106)</code></pre>
</div>
<p>Constraints are arbitrary expressions.
This allows you to author types that can express any type of check that can be expressed in Pkl.
Here is a sample type that must be a string with an odd length, and whose first letter matches the last letter.</p>
<div>
<pre><code data-lang="pkl"><span>name</span><span>:</span> <span>String</span><span>(</span><span>length</span><span>.</span><span>isOdd</span><span>,</span> <span>chars</span><span>.</span><span>first</span> <span>==</span> <span>chars</span><span>.</span><span>last</span><span>)</span></code></pre>
</div>
</div>
<div>
<h3 id="sharing-packages"><a href="#sharing-packages"></a><a href="#sharing-packages">Sharing Packages</a></h3>
<p>Pkl provides the ability to publish <em>packages</em>, and to import them as dependencies in a project.
This provides an easy way to share Pkl code that can be used in other projects.</p>
<p>It is easy to create your own package and publish them as GitHub releases, or to upload them anywhere you wish.</p>
<p>Packages can be imported via the absolute URI:</p>
<div>
<pre><code data-lang="{pkl">import "package://pkg.pkl-lang.org/pkl-pantry/pkl.toml@1.0.0#/toml.pkl"

output {
  renderer = new toml.Renderer {}
}</code></pre>
</div>
<p>Alternatively, they can be managed as dependencies of a <a href="https://pkl-lang.org/main/current/language-reference/index.html#projects" class="page">project</a>.
Using a project allows Pkl to resolve version conflicts between different versions of the same dependency within a dependency graph.
It also means that you can import packages by a simpler name.</p>
<div>
<p>PklProject</p>
<div>
<pre><code data-lang="pkl"><span>amends</span> <span>"pkl:Project"</span>

<span>dependencies</span> <span>{</span>
  [<span>"toml"</span><span>]</span> <span>{</span> <span>uri</span> <span>=</span> <span>"package://pkg.pkl-lang.org/pkl-pantry/pkl.toml@1.0.0"</span> <span>}</span>
<span>}</span></code></pre>
</div>
</div>
<div>
<p>myconfig.pkl</p>
<div>
<pre><code data-lang="pkl"><span>import</span> <span>"@toml/toml.pkl"</span>

<span>output</span> <span>{</span>
  <span>renderer</span> <span>=</span> <span>new</span> <span>toml</span><span>.</span><span>Renderer</span> <span>{</span><span>}</span>
<span>}</span></code></pre>
</div>
</div>
<p>A set of packages are maintained by us, the Pkl team. These include:</p>
<div>
<ul>
<li>
<p><a href="https://github.com/apple/pkl-pantry" target="_blank" rel="noopener">pkl-pantry</a> — a monorepo that publishes many different packages.</p>
</li>
<li>
<p><a href="https://github.com/apple/pkl-k8s" target="_blank" rel="noopener">pkl-k8s</a> — templates for defining Kubernetes descriptors.</p>
</li>
</ul>
</div>
</div>
</div>
</div><div>
<h2 id="language-bindings"><a href="#language-bindings"></a><a href="#language-bindings">Language Bindings</a></h2>
<div>
<p>Pkl can produce configuration as textual output, and it can also be embedded as a library into other languages via our language bindings.</p>
<p>When binding to a language, Pkl schema can be generated as classes/structs in the target language.
For example, the <a href="#application-pkl">Application.pkl</a> example from above can be generated into Swift, Go, Java, and Kotlin.
Pkl even includes documentation comments in the target language.</p>
<div id="tabs-2">
<div>
<ul>
<li id="tabs-2-swift">
<p>Swift</p>
</li>
<li id="tabs-2-go">
<p>Go</p>
</li>
<li id="tabs-2-java">
<p>Java</p>
</li>
<li id="tabs-2-kotlin">
<p>Kotlin</p>
</li>
</ul>
</div>
<div id="tabs-2-swift--panel" aria-labelledby="tabs-2-swift">
<pre><code data-lang="swift">import PklSwift

public enum Application {}

extension Application {
    public enum Environment: String, CaseIterable, Decodable, Hashable {
        case dev = "dev"
        case qa = "qa"
        case prod = "prod"
    }

    public struct Module: PklRegisteredType, Decodable, Hashable {
        public static var registeredIdentifier: String = "Application"

        /// The hostname that this server responds to.
        public var hostname: String

        /// The port to listen on.
        public var port: UInt16

        /// The environment to deploy to.
        public var environment: Environment

        /// The database connection for this application
        public var database: Database

        public init(hostname: String, port: UInt16, environment: Environment, database: Database) {
            self.hostname = hostname
            self.port = port
            self.environment = environment
            self.database = database
        }
    }

    public struct Database: PklRegisteredType, Decodable, Hashable {
        public static var registeredIdentifier: String = "Application#Database"

        /// The username for this database.
        public var username: String

        /// The password for this database.
        public var password: String

        /// The remote host for this database.
        public var host: String

        /// The remote port for this database.
        public var port: UInt16

        /// The name of the database.
        public var dbName: String

        public init(username: String, password: String, host: String, port: UInt16, dbName: String) {
            self.username = username
            self.password = password
            self.host = host
            self.port = port
            self.dbName = dbName
        }
    }
}</code></pre>
</div>
<div id="tabs-2-go--panel" aria-labelledby="tabs-2-go">
<div>
<p>Application.pkl.go</p>
<div>
<pre><code data-lang="go">package application

type Application struct {
	// The hostname that this server responds to.
	Hostname string `pkl:"hostname"`

	// The port to listen on.
	Port uint16 `pkl:"port"`

	// The environment to deploy to.
	Environment Environment.Environment `pkl:"environment"`

	// The database connection for this application
	Database *Database `pkl:"database"`
}</code></pre>
</div>
</div>
<div>
<p>Database.pkl.go</p>
<div>
<pre><code data-lang="go">// Code generated from Pkl module `Application`. DO NOT EDIT.
package application

type Database struct {
	// The username for this database.
	Username string `pkl:"username"`

	// The password for this database.
	Password string `pkl:"password"`

	// The remote host for this database.
	Host string `pkl:"host"`

	// The remote port for this database.
	Port uint16 `pkl:"port"`

	// The name of the database.
	DbName string `pkl:"dbName"`
}</code></pre>
</div>
</div>
<div>
<p>environment/Environment.pkl.go</p>
<div>
<pre><code data-lang="go">// Code generated from Pkl module `Application`. DO NOT EDIT.
package Environment

import (
	"encoding"
	"fmt"
)

type Environment string

const (
	Dev  Environment = "dev"
	Qa   Environment = "qa"
	Prod Environment = "prod"
)

// String returns the string representation of Environment
func (rcv Environment) String() string {
	return string(rcv)
}</code></pre>
</div>
</div>
</div>
<div id="tabs-2-java--panel" aria-labelledby="tabs-2-java">
<pre><code data-lang="java">import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.Objects;
import org.pkl.config.java.mapper.Named;
import org.pkl.config.java.mapper.NonNull;

public final class Application {
  /**
   * The hostname that this server responds to.
   */
  public final @NonNull String hostname;

  /**
   * The port to listen on.
   */
  public final int port;

  /**
   * The environment to deploy to.
   */
  public final @NonNull Environment environment;

  /**
   * The database connection for this application
   */
  public final @NonNull Database database;

  public Application(@Named("hostname") @NonNull String hostname, @Named("port") int port,
      @Named("environment") @NonNull Environment environment,
      @Named("database") @NonNull Database database) {
    this.hostname = hostname;
    this.port = port;
    this.environment = environment;
    this.database = database;
  }

  public static final class Database {
    /**
     * The username for this database.
     */
    public final @NonNull String username;

    /**
     * The password for this database.
     */
    public final @NonNull String password;

    /**
     * The remote host for this database.
     */
    public final @NonNull String host;

    /**
     * The remote port for this database.
     */
    public final int port;

    /**
     * The name of the database.
     */
    public final @NonNull String dbName;

    public Database(@Named("username") @NonNull String username,
        @Named("password") @NonNull String password, @Named("host") @NonNull String host,
        @Named("port") long port, @Named("dbName") @NonNull String dbName) {
      this.username = username;
      this.password = password;
      this.host = host;
      this.port = port;
      this.dbName = dbName;
    }
  }

  public enum Environment {
    DEV("dev"),

    QA("qa"),

    PROD("prod");

    private String value;

    private Environment(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return this.value;
    }
  }
}</code></pre>
</div>
<div id="tabs-2-kotlin--panel" aria-labelledby="tabs-2-kotlin">
<pre><code data-lang="kotlin">import kotlin.Int
import kotlin.Long
import kotlin.String

data class Application(
  /**
   * The hostname that this server responds to.
   */
  val hostname: String,
  /**
   * The port to listen on.
   */
  val port: Int,
  /**
   * The environment to deploy to.
   */
  val environment: Environment,
  /**
   * The database connection for this application
   */
  val database: Database
) {
  data class Database(
    /**
     * The username for this database.
     */
    val username: String,
    /**
     * The password for this database.
     */
    val password: String,
    /**
     * The remote host for this database.
     */
    val host: String,
    /**
     * The remote port for this database.
     */
    val port: Int,
    /**
     * The name of the database.
     */
    val dbName: String
  )

  enum class Environment(
    val value: String
  ) {
    DEV("dev"),

    QA("qa"),

    PROD("prod");

    override fun toString() = value
  }
}</code></pre>
</div>
</div>
<p>Using code generation is just one of the many ways to embed Pkl within an application.
Our language bindings also provide evaluator APIs to control Pkl evaluation at a low level, and users are free to interact with Pkl at the abstraction level that makes the most sense for their application.</p>
</div>
</div><div>
<h2 id="editor-support"><a href="#editor-support"></a><a href="#editor-support">Editor Support</a></h2>
<div>
<p>We believe that a programming language is only as good as the experience of writing it.
That is why we aim to provide best-in-class editor support.
When writing Pkl in an editor, users are guided through the process of filling in configuration data from a given template.
Additionally, the editors provide instant feedback if any values are invalid, and documentation is immediately available when called upon.</p>
<p>We are also releasing our <a href="https://pkl-lang.org/intellij/current/index.html" class="page">IntelliJ plugin</a>, which provides rich support for JetBrains editors, including IntelliJ, Webstorm, GoLand, and PyCharm. These plugins are able to analyze a Pkl program and provide features like autocompletion, go-to-definition, and refactoring support.</p>
<p>Here are some of the features that are available:</p>
<div id="tabs-3">
<div>
<ul>
<li id="tabs-3-autocompletion">
<p>Autocompletion</p>
</li>
<li id="tabs-3-navigation">
<p>Navigation</p>
</li>
<li id="tabs-3-validation">
<p>Validation</p>
</li>
</ul>
</div>
<div id="tabs-3-autocompletion--panel" aria-labelledby="tabs-3-autocompletion">
<p><img src="https://pkl-lang.org/blog/_images/introducing-pkl/intellij-autocomplete.gif" alt="Autocomplete in IntelliJ">
</p>
</div>
<div id="tabs-3-navigation--panel" aria-labelledby="tabs-3-navigation">
<p><img src="https://pkl-lang.org/blog/_images/introducing-pkl/intellij-navigation.gif" alt="Navigation in IntelliJ">
</p>
</div>
<div id="tabs-3-validation--panel" aria-labelledby="tabs-3-validation">
<p><img src="https://pkl-lang.org/blog/_images/introducing-pkl/intellij-validation.gif" alt="Validation in IntelliJ">
</p>
</div>
</div>
<p>In addition, we are also planning on supporting the <a href="https://microsoft.github.io/language-server-protocol/">Language Server Protocol</a>, which will provide a similar level of integration in other editors.</p>
<div>
<table>
<tbody><tr>
<td>
<i title="Note"></i>
</td>
<td>
We are also releasing two other plugins: our <a href="https://pkl-lang.org/vscode/current/index.html" class="page">VS Code</a> plugin, and our <a href="https://pkl-lang.org/neovim/current/index.html" class="page">neovim</a> plugin. Today, these plugins only provide basic editing features like syntax highlighting and code folding.
</td>
</tr>
</tbody></table>
</div>
</div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Over 2 percent of the US's electricity generation now goes to Bitcoin (148 pts)]]></title>
            <link>https://arstechnica.com/science/2024/02/over-2-percent-of-the-uss-electricity-generation-now-goes-to-bitcoin/</link>
            <guid>39232838</guid>
            <pubDate>Fri, 02 Feb 2024 19:09:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/science/2024/02/over-2-percent-of-the-uss-electricity-generation-now-goes-to-bitcoin/">https://arstechnica.com/science/2024/02/over-2-percent-of-the-uss-electricity-generation-now-goes-to-bitcoin/</a>, See on <a href="https://news.ycombinator.com/item?id=39232838">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <h4>
      Mining stakes    —
</h4>
            
            <h2 itemprop="description">US government tracking the energy implications of booming bitcoin mining in US.</h2>
                    </div><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2024/02/GettyImages-1305523746-800x560.jpg" alt="Digital generated image of golden helium balloon in shape of bitcoin sign inflated with air pump and moving up against purple background.">
      <figcaption><p><a href="https://cdn.arstechnica.net/wp-content/uploads/2024/02/GettyImages-1305523746.jpg" data-height="1449" data-width="2070">Enlarge</a> <span>/</span> It takes a lot of energy to keep pumping out more bitcoins.</p></figcaption>  </figure>

  




<!-- cache hit 265:single/related:c7edd0a16981d46bb6aabcd738c3c786 --><!-- empty -->
<p>What exactly is bitcoin mining doing to the electric grid? In the last few years, the US has seen a boom in cryptocurrency mining, and the government is now trying to track exactly what that means for the consumption of electricity. While its analysis is preliminary, the Energy Information Agency (EIA) estimates that large-scale cryptocurrency operations are now <a href="https://www.eia.gov/todayinenergy/detail.php?id=61364">consuming over 2 percent of the US's electricity</a>. That's roughly the equivalent of having added an additional state to the grid over just the last three years.</p>
<h2>Follow the megawatts</h2>
<p>While there is some small-scale mining that goes on with personal computers and small rigs, most cryptocurrency mining has moved to large collections of specialized hardware. While this hardware can be pricy compared to personal computers, the main cost for these operations is electricity use, so the miners will tend to move to places with low electricity rates. The EIA report notes that, in the wake of a crackdown on cryptocurrency in China, a lot of that movement has involved relocation to the US, where keeping electricity prices low has generally been a policy priority.</p>
<p>One independent estimate made by the <a href="https://ccaf.io/cbnsi/cbeci">Cambridge Centre for Alternative Finance</a> had the US as the home of just over 3 percent of the global bitcoin mining at the start of 2020. By the start of 2022, that figure was nearly 38 percent.</p>
<p>The Cambridge Center also estimates the global electricity use of all bitcoin mining, so it's possible to multiply that by the US's percentage and come up with an estimate for the amount of electricity that boom has consumed. Because of the uncertainties in these estimates, the number could be anywhere from 25 to 91 Terawatt-hours. Even the low end of that range would mean bitcoin mining is now using the equivalent of Utah's electricity consumption (the high end is roughly Washington's), which has significant implications for the electric grid as a whole.</p>
<p>So, the EIA decided it needed a better grip on what was going on. To get that, it went through trade publications, financial reports, news articles, and congressional investigation reports to identify as many bitcoin mining operations as it could. With 137 facilities identified, it then inquired about the power supply needed to operate them at full capacity, receiving answers for 101 of those facilities.</p>                                            
                                                        
<p>If running all-out, those 101 facilities would consume 2.3 percent of the US's average power demand. That places them on the high side of the Cambridge Center estimates.</p>
<h2>Finding power-ups</h2>
<p>The mining operations fall in two major clusters: one in Texas, and one extending from western New York down the Appalachians to southern Georgia. While there are additional ones scattered throughout the US, these are the major sites.</p>
<p>The EIA has also found some instances where the operations moved in near underutilized power plants and sent generation soaring again. Tracking the history of five of these plants showed that generation had fallen steadily from 2015 to 2020, reaching a low where they collectively produced just half a Terawatt-hour. Miners moving in nearby tripled production in just a year and has seen it rise to over 2 Terawatt-hours in 2022.</p>
<figure><a href="https://cdn.arstechnica.net/wp-content/uploads/2024/02/Screenshot-2024-02-02-at-1.31.33%E2%80%AFPM.png" data-height="535" data-width="1123" alt="Power plants near bitcoin mining operations have seen generation surge over the last two years."><img alt="Power plants near bitcoin mining operations have seen generation surge over the last two years." src="https://cdn.arstechnica.net/wp-content/uploads/2024/02/Screenshot-2024-02-02-at-1.31.33%E2%80%AFPM-980x467.png" width="980" height="467"></a><figcaption><p><a href="https://cdn.arstechnica.net/wp-content/uploads/2024/02/Screenshot-2024-02-02-at-1.31.33%E2%80%AFPM.png" data-height="535" data-width="1123">Enlarge</a> <span>/</span> Power plants near bitcoin mining operations have seen generation surge over the last two years.</p></figcaption></figure>
<p>These are almost certainly fossil fuel plants that might be reasonable candidates for retirement if it weren't for their use to supply bitcoin miners. So, these miners are contributing to all of the health and climate problems associated with the continued use of fossil fuels.</p>
<p>The EIA also found a number of strategies that miners used to keep their power costs low. In one case, they moved into a former aluminum smelting facility in Texas to take advantage of its capacious connections to the grid. In another, they put a facility next to a nuclear plant in Pennsylvania and set up a direct connection to the plant. The EIA also found cases where miners moved near natural gas fields that produced waste methane that would otherwise have been burned off.</p>
<p>Since bitcoin mining is the antithesis of an essential activity, several mining operations have signed up for demand-response programs, where they agree to take their operations offline if electricity demand is likely to exceed generating capacity in return for compensation by the grid operator. It has been widely reported that one facility in Texas—the one at the former aluminum smelter site—<a href="https://www.tpr.org/technology-entrepreneurship/2023-09-06/texas-paid-a-bitcoin-miner-more-than-30-million-to-power-down-during-heat-wave">earned over $30 million</a> by shutting down during a heat wave in 2023.</p>
<p>To better understand the implications of this major new drain on the US electric grid, the EIA will be performing monthly analyses of bitcoin operations during the first half of 2024. But based on these initial numbers, it's clear that the relocation of so many mining operations to the US will significantly hinder efforts to bring the US's electric grid to carbon neutrality.</p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: The classic Minesweeper on an irregular grid (247 pts)]]></title>
            <link>https://polyreplay.com/minesweepertwist</link>
            <guid>39232572</guid>
            <pubDate>Fri, 02 Feb 2024 18:48:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://polyreplay.com/minesweepertwist">https://polyreplay.com/minesweepertwist</a>, See on <a href="https://news.ycombinator.com/item?id=39232572">Hacker News</a></p>
<div id="readability-page-1" class="page">
    


<div id="loader">
					<p><span id="loader-percent-label">0%</span>
					</p>
					
					
				</div>




	


  

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[jj init – getting serious about replacing Git with Jujutsu (119 pts)]]></title>
            <link>https://v5.chriskrycho.com/essays/jj-init/</link>
            <guid>39232456</guid>
            <pubDate>Fri, 02 Feb 2024 18:40:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://v5.chriskrycho.com/essays/jj-init/">https://v5.chriskrycho.com/essays/jj-init/</a>, See on <a href="https://news.ycombinator.com/item?id=39232456">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      


<p>
      <b><a href="https://v4.chriskrycho.com/2018/assumed-audiences.html">Assumed audience</a>:</b>
      People who have worked with Git or other modern version control systems like Mercurial, Darcs, Pijul, Bazaar, etc., and have at least a basic idea of how they work.

   </p><p><a href="https://github.com/martinvonz/jj#command-line-completion">Jujutsu</a> is a new version control system from a software engineer at Google, where it is on track to replace Google’s existing  with Perforce, Piper, and Mercurial. I find it interesting both for the approach it takes and for its careful design choices in terms of both implementation details and user interface. It offers one possible answer to a question I first started asking <a href="https://v4.chriskrycho.com/2014/next-gen-vcs.html">most of a decade ago</a>: <em>What might a next-gen version control system look like — one which actually learned from the best parts of all of this generation’s systems, including Mercurial, Git, Darcs, Fossil, etc.?</em></p>
<p>To answer that question, it is important to have a sense of what those lessons are. This is trickier than it might seem. Git has substantially the most<span></span> <span>“</span>mind-share” in the current generation; most software developers learn it and use it not because they have done any investigation of the tool and its alternatives but because it is a <em>de facto</em> standard: a situation which arose in no small part because of its<span></span> <span>“</span>killer app” in the form of GitHub. Developers who have been around for more than a decade or so have likely seen more than one version control system — but there are many, <em>many</em> developers for whom Git was their first and, so far, last <abbr title="version control system">VCS</abbr>.</p>
<p>The problems with Git are many, though. Most of all, its infamously terrible command line interface results in a terrible user experience. In my experience, very few working  developers have a good mental model for Git. Instead, they have a handful of commands they have learned over the years: enough to get by, and little more. The common rejoinder is that developers ought to learn how Git works internally — that everything will make more sense that way.</p>
<p>This is nonsense. Git’s internals are <em>interesting</em> on an implementation level, but frankly add up to an incoherent mess in terms of a user mental model. This is a classic mistake for software developers, and one I have fallen prey to myself any number of times. I do not blame the Git developers for it, exactly. No one should have to understand the internals of the system to use it well, though; that is a simple failure of software design. Moreover, even those internals do not particularly <em>cohere</em>. The index, the number of things labeled<span></span> <span>“</span>-ish” in the glossary, the way that a<span></span> <span>“</span>detached <code>HEAD</code><span></span><span>”</span> interacts with branches, the distinction between tags and branches, the important distinctions between commits, refs, and objects… It is not that any one of those things is bad in isolation, but as a set they do not amount to a mental model I can describe charitably. Put in programming language terms: One of the reasons the<span></span> <span>“</span>surface syntax” of Git is so hard is that its semantics are a bit confused, and that <em>inevitably</em> shows up in the interface to users.</p>
<p>Still, a change in a system so deeply embedded in the software development ecosystem is not cheap. Is it worth the cost of adoption?  Well, Jujutsu has a trick up its sleeve: there is no adoption cost. You just install it — <code>brew install jj</code> will do the trick on macOS — and run a single command in an existing Git repository, and… that’s it. (“There is no step 3.”) I expect that mode will always work, even though there will be a migration step at some point in the future, when Jujutsu’s own, non-Git backend becomes a viable — and ultimately the recommended — option. I am getting ahead of myself though. The first thing to understand is what Jujutsu is, and is not.</p>
<p>Jujutsu is two things:</p>
<ol>
<li>
<p><strong>It is a new front-end to Git.</strong> This is <em>by far</em> the less interesting of the two things, but in practice it is a substantial part of the experience of using the tool today. In this regard, it sits in the same notional space as something like <a href="https://github.com/Byron/gitoxide">gitoxide</a>. Jujutsu’s <code>jj</code> is far more usable for day to day work than gitoxide’s <code>gix</code> and <code>ein</code> so far, though, and it also has very different aims. That takes us to:</p>
</li>
<li>
<p><strong>It is a new design for distributed version control.</strong> This is by far the more interesting part. In particular, Jujutsu brings to the table a few key concepts — none of which are themselves novel, but the combination of which is <em>really</em> nice to use in practice:</p>
<ul>
<li><em>Changes</em> are distinct from <em>revisions</em>: an idea borrowed from Mercurial, but quite different from Git’s model.</li>
<li>Conflicts are first-class items: an idea borrowed from <a href="https://pijul.org/">Pijul</a> and <a href="https://darcs.net/">Darcs</a>.</li>
<li>The user interface is not only reasonable but actually <em>really good</em>: an idea borrowed from… literally every <abbr>VCS</abbr> other than Git.</li>
</ul>
</li>
</ol>
<p>The combo of those means that you can use it today in your existing Git repos, as I have been for the past six months, and that it is a <em>really good</em> experience using it that way. (Better than Git!) Moreover, given it is being actively developed at and by Google for use as a replacement for its current custom <abbr>VCS</abbr> setup, it seems like it has a good future ahead of it. Net: at a minimum you get a better experience for using Git with it. At a maximum, you get an incredibly smooth and shallow on-ramp to what I earnestly hope is the future of version control.</p>
<p>Jujutsu is <em>not</em> trying to do every interesting thing that other Git-alternative <abbr>DVCS</abbr> systems out there do. Unlike <a href="https://pijul.org/">Pijul</a>, for example, it does not work from a theory of patches such that the order changes are applied is irrelevant. However, as I noted above and show in detail below, jj <em>does</em> distinguish between <em>changes</em> and <em>revisions</em>, and has first-class support for conflicts, which means that many of the benefits of Pijul’s handling come along anyway. Unlike <a href="https://fossil-scm.org/home/doc/trunk/www/index.wiki">Fossil</a>, Jujutsu is also not trying to be an all-in-one tool. Accordingly: It does not come with a replacement for GitHub or other such<span></span> <span>“</span>forges”. It does not include bug tracking. It does not support chat or a forum or a wiki. Instead, it is currently aimed at just doing the base <abbr title="version control system">VCS</abbr> operations well.</p>
<p>Finally, there is a thing Jujutsu is not <em>yet</em>: a standalone <abbr>VCS</abbr> ready to use <em>without</em> Git. It supports its own,<span></span> <span>“</span>native” back end for the sake of keeping that door open for future capabilities, and the test suite exercises both the Git and the<span></span> <span>“</span>native” back end, but the<span></span> <span>“</span>native” one is not remotely ready for regular use. That said, this one I do expect to see change over time!</p>
<p>One of the really interesting bits about picking up Jujutsu is realizing just how weirdly Git has wired your brain, and re-learning how to think about how a version control system can work. It is one thing to believe — very strongly, in my case! — that Git’s <abbr title="user interface">UI</abbr> design is deeply janky (and its underlying model just so-so); it is something else to experience how much better a <abbr title="version control system">VCS</abbr> <abbr title="user interface">UI</abbr> can be (even without replacing the underlying model!).</p>
<p><img src="https://cdn.chriskrycho.com/images/unlearn.gif" alt="Yoda saying “You must unlearn what you have learned.”"></p><p>Time to become a Jedi Knight. Jujutsu Knight? Jujutsu Master? Jujutsu apprentice, at least. Let’s dig in!</p>
<details><summary>Outline</summary>
<ul>
<li><a href="#using-jujutsu">Using Jujutsu</a>
<ul>
<li><a href="#revisions-and-revsets">Revisions and revsets</a></li>
<li><a href="#changes">Changes</a></li>
<li><a href="#split">Split</a></li>
<li><a href="#first-class-conflicts">First-class conflicts</a></li>
<li><a href="#changing-changes">Changing changes</a></li>
<li><a href="#branches">Branches</a></li>
<li><a href="#git-interop">Git interop</a></li>
<li><a href="#is-it-ready">Is it ready?</a></li>
</ul>
</li>
<li><a href="#conclusion">Conclusion</a></li>
<li><a href="#appendix-kaleidoscope-setup-and-tips">Appendix: Kaleidoscope setup and tips</a></li>
</ul>
</details>
<h2 id="using-jujutsu" tabindex="-1"><a href="#using-jujutsu">Using Jujutsu</a></h2>
<p>That is all interesting enough philosophically, but for a tool that, if successful, will end up being one of a software developer’s most-used tools, there is an even more important question: <em>What is it actually like to use?</em></p>
<p>Setup is painless. Running <code>brew install jj</code> did everything I needed. As with most modern Rust-powered <abbr title="command line interface">CLI</abbr> tools,<sup><a href="#fn1" id="fnref1">1</a></sup> Jujutsu comes with great completions right out of the box. I did make one post-install tweak, since I am going to be using this on existing Git projects: I updated my <code>~/.gitignore_global</code> to ignore <code>.jj</code> directories anywhere on disk.<sup><a href="#fn2" id="fnref2">2</a></sup></p>
<p>Using Jujutsu in an existing Git project is also quite easy.<sup><a href="#fn3" id="fnref3">3</a></sup> You just run <code>jj init --git-repo &lt;path to repo&gt;</code>. That’s the entire flow. After that you can use <code>git</code> and <code>jj</code> commands alike on the repository, and everything Just Works™, right down to correctly handling <code>.gitignore</code> files. I have since run <code>jj init</code> in every Git repository I am actively working on, and have had no issues in many months. It is also possible to initialize a Jujutsu copy of a Git project <em>without</em> having an existing Git repo, using <code>jj git clone</code>, which I have also done, and which works well.</p>
<figure>

<figcaption>Cloning <a href="https://true-myth.js.org/">true-myth</a> and initializing it as a Jujutsu repo</figcaption>
</figure>
<p>Once a project is initialized, working on it is fairly straightforward, though there are some significant adjustments required if you have deep-seated habits from Git!</p>
<h3 id="revisions-and-revsets" tabindex="-1"><a href="#revisions-and-revsets">Revisions and revsets</a></h3>
<p>One of the first things to wrap your head around when first coming to Jujutsu is its approach to its <em>revisions</em> and <em>revsets</em>, i.e.<span></span> <span>“</span>sets of revision”. Revisions are the fundamental elements of changes in Jujutsu, not<span></span> <span>“</span>commits” as in Git. <a href="https://github.com/martinvonz/jj/blob/f3d6616057fb3db3f9227de3da930e319d29fcc7/docs/revsets.md">Revsets</a> are then expressions in a functional language for selecting a set of revisions. Both the idea and the terminology are borrowed directly from Mercurial, though the implementation is totally new. (Many things about Jujutsu borrow from Mercurial — a decision which makes me quite happy.) The vast majority of Jujutsu commands take a <code>--revision</code>/<code>-r</code> command to select a revision. So far that might not sound particularly different from Git’s notion of commits and commit ranges, and they are indeed similar at a surface level. However, the differences start showing up pretty quickly, both in terms of working with revisions and in terms of how revisions are a different notion of <em>change</em> than a Git commit.</p>
<p>The first place you are likely to experience how revisions and revsets are different — and neat! — is with the <code>log</code> command, since looking at the commit log is likely to be something you do pretty early in using  a new version control tool. (Certainly it was for me.) When you clone a repo and initialize Jujutsu in it and then run <code>jj log</code>, you will see something rather different from what <code>git log</code> would show you — indeed, rather different from anything I even know <em>how</em> to get <code>git log</code> to show you.  Per [the tutorial][tutorial]’s note on the <code>log</code> command specifically:</p>
<blockquote>
<p>By default, <code>jj log</code> lists your local commits, with some remote commits added for context. The <code>~</code> indicates that the commit has parents that are not included in the graph. We can use the <code>-r</code> flag to select a different set of revisions to list.</p>
</blockquote>
<p>What <code>jj log</code> <em>does</em> show by default was still a bit non-obvious to me, even after that. <em>Which</em> remote commits added for context, and why? The answer is in the <code>help</code> output for <code>jj log</code><span></span><span>’</span>s <code>-r</code>/<code>--revisions</code> option:</p>
<blockquote>
<p>Which revisions to show. Defaults to the <code>ui.default-revset</code> setting, or <code>@ | ancestors(immutable_heads().., 2) | heads(immutable_heads())</code> if it is not set</p>
</blockquote>
<p>I will come back to this revset in a moment to explain it in detail. First, though, this shows a couple other interesting features of Jujutsu’s approach to revsets and thus the <code>log</code> command. First, it treats some of these operations as <em>functions</em> (<code>tags()</code>, <code>branches()</code>, etc.). I don’t have a deep handle on this yet, but I plan to come back to it. (There is a whole list <a href="https://github.com/martinvonz/jj/blob/main/docs/revsets.md#functions">here</a>!) This is not a surprise if you think about what<span></span> <span>“</span>expressions in a functional language” implies… but it was a surprise to me because I had not yet read that bit of documentation. Second, it makes<span></span> <span>“</span>operators” <a href="https://github.com/martinvonz/jj/blob/main/docs/revsets.md#operators">a first-class idea</a>. Git <em>has</em> operators, but this goes a fair bit further:</p>
<ul>
<li>
<p>It includes <code>-</code> for the parent and <code>+</code> for a child, and these stack and compose, so writing <code>@-+-+</code> is the same as <code>@</code> as long as the history is linear. (<a href="https://github.com/martinvonz/jj/discussions/1905#discussioncomment-6533386">That is an important distinction!</a>)</p>
</li>
<li>
<p>It supports union <code>|</code>, intersection <code>&amp;</code>, and difference <code>~</code> operators.</p>
</li>
<li>
<p>A leading <code>::</code>, which means<span></span> <span>“</span>ancestors”. A trailing <code>::</code> means<span></span> <span>“</span>descendants”. Using <code>::</code> between commits gives a view of the directed acyclic graph range between two commits. Notably, <code>&lt;id1&gt;::&lt;id2&gt;</code> is just <code>&lt;id1&gt;:: &amp; ::&lt;id2&gt;</code>.</p>
</li>
<li>
<p>There is also a <code>..</code> operator, which also composes appropriately (and, smartly, is the same as <code>..</code> in Git when used between two commits, <code>&lt;id1&gt;..&lt;id2&gt;</code>). The trailing version, <code>&lt;id&gt;..</code>, is interesting: it is<span></span> <span>“</span>revisions that are not ancestors of <code>&lt;id&gt;</code><span></span><span>”</span>. Likewise, the leading version <code>..&lt;id&gt;</code> is all revisions which <em>are</em> ancestors of <code>&lt;id&gt;</code></p>
</li>
</ul>
<p>Now, I used <code>&lt;id&gt;</code> here, but throughout these actually operate on revsets, so you could use them with any revset. For example, <code>..tags()</code> will give you the ancestors of all tags. This strikes me as <em>extremely</em> interesting: I think it will dodge a lot of pain in dealing with Git histories, because it lets you ask questions about the history in a compositional way using normal set logic. To make that concrete: back in October, Jujutsu contributor @aseipp <a href="https://discord.com/channels/968932220549103686/969291218347524238/1169016692651864144">pointed out</a> how easy it is to use this to get a log which excludes <code>gh-pages</code>. (Anyone who has worked on a repo with a <code>gh-pages</code> branch knows how annoying it is to have it cluttering up your view of the rest of your Git history!) First, you define an alias for the revset that only includes the <code>gh-pages</code> branch: <code>'gh-pages' = 'remote_branches(exact:"gh-pages")'</code>. Then you can <em>exclude</em> it from other queries with the <code>~</code> negation operator: <code>jj log -r "all() ~ ancestors(gh-pages)"</code> would give you a log view for every revision with <code>all()</code> and then exclude every ancestor of the <code>gh-pages</code> branch.</p>
<p>Jujutsu also provides a really capable <a href="https://martinvonz.github.io/jj/v0.10.0/templates/">templating system</a>, which uses<span></span> <span>“</span>a functional language to customize output of commands”. That functional language is built on top of the functional language that the whole language uses for describing revisions (described in brief above!), so you can use the same kinds of operators in templates for output as you do for navigating and manipulating the repository. The template format is still evolving, but you can use it to customize the output today… while being aware that you may have to update it in the future. Keywords include things like <code>description</code> and <code>change_id</code>, and these can be customized in Jujutsu’s config. For example, I made this tweak to mine, overriding the built-in <code>format_short_id</code> alias:</p>
<pre><code><span>[template-aliases]</span>
<span>'format_short_id(id)'</span> = <span>'id.shortest()'</span>
</code></pre>
<p>This gives me super short names for changes and commits, which makes for a <em>much</em> nicer experience when reading and working with both in the log output: Jujutsu will give me the shortest unique identifier for a given change or commit, which I can then use with commands like <code>jj new</code>. Additionally, there are a number of built-in templates. For example, to see the equivalent of Git’s <code>log --pretty</code> you can use Jujutsu’s <code>log -T builtin_log_detailed</code> (<code>-T</code> for<span></span> <span>“</span>template”; you can also use the long from <code>--template</code>). You can define your own templates in a <code>[templates]</code> section, or add your own <code>[template-aliases]</code> block, using the template language and any combination of further functions you define yourself.</p>
<p>That’s all well and good, but even with reading the docs for the revset language and the templating language, it still took me a bit to actually quite make sense out of the default output, much less to get a handle on how to customize the output. Right now, the docs have a bit of a flavor of <i>explanations for people who already have a pretty good handle on version control systems</i>, and the description of what you get from <code>jj log</code> is a good example of that. As the project gains momentum, it will need other kinds of more-introductory material, but the current status is totally fair and reasonable for the stage the project is at. And, to be fair to Jujutsu, both the revset language and the templating language are <em>incredibly</em> easier to understand and work with than the corresponding Git materials.</p>
<p>Returning to the difference between the default output from <code>jj log</code> and <code>git log</code>, the key is that unless you pass <code>-r</code>, Jujutsu uses the <code>ui.default-revset</code> selector to provide a much more informative view than <code>git log</code> does. Again, the default is <code>@ | ancestors(immutable_heads().., 2) | heads(immutable_heads())</code>. Walking through that:</p>
<ul>
<li>The <code>@</code> operator selects the current head revision.</li>
<li>The <code>|</code> union operator says<span></span> <span>“</span>or this other revset”, so this will show <code>@</code> itself <em>and</em> the result of the other two queries.</li>
<li>The <code>immutable_heads()</code> function gets the list of head revisions which are, well, <a href="https://martinvonz.github.io/jj/v0.13.0/config/#set-of-immutable-commits">immutable</a>. By default, this is <code>trunk() | tags()</code>, so whatever the trunk branch is (most commonly <code>main</code> or <code>master</code>) and also any tags in the repository.</li>
<li>Adding <code>..</code> to the first <code>immutable_heads()</code> function selects revisions which are not ancestors of those immutable heads. This is basically asking for branches which are not the trunk and which do not end at a tag.</li>
<li>Then <code>ancestors(immutable_heads().., 2)</code> requests the ancestors of those branches, but only two deep.</li>
<li>Finally, <code>heads()</code> gets the tips of all branches which appear in the revset passed to it: a head is a commit with no children. Thus, <code>heads(immutable_heads())</code> gets <em>just</em> the branch tips for the list of revisions computed by <code>immutable_heads()</code>.<sup><a href="#fn4" id="fnref4">4</a></sup></li>
</ul>
<p>When you put those all together, your log view will always show your current head change, all the open branches which have not been merged into your trunk branch, and whatever you have configured to be immutable — out of the box, trunk and all tags. That is <em>vastly</em> more informative than <code>git log</code><span></span><span>’</span>s default output, even if it is a bit surprising the first time you see it. Nor is it particularly possible to get that in a single <code>git log</code> command. By contrast, getting the equivalent of <code>git log</code> is trivial.</p>
<p>To show the full revision history for a given commit, you can use  Since <code>jj log</code> always gives you the identifier for a revision, you can follow it up with <code>jj log --revision ::&lt;change id&gt;</code>, or <code>jj log -r ::&lt;change id&gt;</code> for short. For example, in one repo where I am trying this, the most recent commit identifier starts with <code>mwoq</code> (Jujutsu helpfully highlights the segment of the change identifier you need to use), so I could write <code>jj log -r ::mwoq</code>, and this will show all the ancestors of <code>mwoq</code>, or <code>jj log -r ..mwoq</code> to get all the ancestors of the commit except the root. (The root is uninteresting.) Net, the equivalent command for<span></span> <span>“</span>show me all the history for this commit” is:</p>
<pre><code>$ jj <span>log</span> -r ..@
</code></pre>
<p>Revsets are very powerful, very flexible, and yet much easier to use than Git’s operators. That is in part because of the language used to express them. It is also in part because revsets build on a fundamentally different view of the world than Git commits: Jujutsu’s idea of <em>changes</em>.</p>
<h3 id="changes" tabindex="-1"><a href="#changes">Changes</a></h3>
<p>In Git, as in Subversion and Mercurial and other version control systems before them, when you finish with a change, you <em>commit</em> it. In Jujutsu, there is no first-class notion of<span></span> <span>“</span>committing” code. This took me a fair bit to wrap my head around! Instead, Jujutsu has two discrete operations:  <code>describe</code> and <code>new</code>. <code>jj describe</code> lets you provide a descriptive message for any change. <code>jj new</code> starts a new change. You can think of <code>git commit --message "something I did"</code> as being equivalent to <code>jj describe --message "some I did" &amp;&amp; jj new</code>. This falls out of the fact that <code>jj describe</code> and <code>jj new</code> are orthogonal, and much more capable than <code>git commit</code> as a result.</p>
<p>The <code>describe</code> command works on <em>any</em> commit. It defaults to the commit that is the current working copy. If you want to rewrite a message earlier in your commit history, though, that is not a special operation like it is in Git, where you have to perform an interactive rebase to do it. You just call <code>jj describe</code> with a <code>--revision</code>  (or <code>-r</code> for short, as everywhere in Jujutsu) argument. For example:</p>
<pre><code><span># long version</span>
$ jj describe --revision abcd --message <span>"An updated message."</span>

<span># short version</span>
$ jj describe -r abcd -m <span>"An updated message."</span>
</code></pre>
<p>That’s it. How you choose to integrate that into your workflow is a matter for you and your team to decide, of course. Jujutsu understands that some branches should not have their history rewritten this way, though, and lets you specify what the<span></span> <span>“</span>immutable heads” revset should be accordingly. This actually makes it safer than Git, where the tool itself does not understand that kind of immutability and we rely on forges to protect certain branches from being targeted by a force push.</p>
<p>The <code>new</code> command is the core of creating any new change, and it does not require there to be only a single parent. You can create a new change with as many parents as is appropriate! Is a given change logically the child of four other changes, with identifiers <code>a</code>, <code>b</code>, <code>c</code>, and <code>d</code>? <code>jj new a b c d</code>. That’s it. One neat consequence that falls out of this: a merge in Jujutsu is just <code>jj new</code> with the requirement that it have at least two parents. (“At least two parents” because having multiple parents for a merge is not a special case as with Git’s<span></span> <span>“</span>octopus” merges.) Likewise, you do not need a <code>commit</code> command, because you can describe a given change at any time with <code>describe</code>, and you can create a new change at any time with <code>new</code>. If you already know the next thing you are going to do, you can even describe it by passing <code>-m</code>/<code>--message</code> to <code>new</code> when creating the new change!<sup><a href="#fn5" id="fnref5">5</a></sup></p>
<figure>

<figcaption>A demo of using <code>jj new</code> to create a three-parent merge</figcaption>
</figure>
<p>Most of the time with Git, I am doing one of two things when I go to commit a change:</p>
<ul>
<li>Committing everything that is in my working copy: <code>git commit --all</code><sup><a href="#fn6" id="fnref6">6</a></sup> is an <em>extremely</em> common operation for me.</li>
<li>Committing a subset of it, not by using Git’s <code>-p</code> to do it via that atrocious interface, but instead opening <a href="https://git-fork.com/">Fork</a> and doing it with Fork’s staging <abbr>UI</abbr>.</li>
</ul>
<p>In the first case, Jujutsu’s choice to skip Git’s<span></span> <span>“</span>index” looks like a very good one. In the second case, I was initially skeptical. Once I got the hang of working this way, though, I started to come around. My workflow with <a href="https://git-fork.com/">Fork</a> looks an <em>awful</em> lot like the workflow that Jujutsu pushes you toward with actually using a diff tool. With Jujutsu, though, <em>any</em> diff tool can work. Want to use Vim? <a href="https://gist.github.com/ilyagr/5d6339fb7dac5e7ab06fe1561ec62d45">Go for it.</a></p>
<p>What is more, Jujutsu’s approach to the working copy results in a <em>really</em> interesting shift. In every version control system I have worked with previously (including <a href="https://cvs.nongnu.org/"><abbr title="Concurrent Versions System">CVS</abbr></a>, <a href="https://en.wikipedia.org/wiki/PVCS"><abbr title="PVCS  Version Manager, originally Polytron Version Control System">PVCS</abbr></a>, <a href="https://subversion.apache.org/"><abbr title="Subversion">SVN</abbr></a>), the workflow has been some variation on:</p>
<ul>
<li>Make a bunch of changes.</li>
<li>Create a commit and write a message to describe it.</li>
</ul>
<p>With both Mercurial and Git, it also became possible to rewrite history in various ways. I use Git’s <code>rebase --interactive</code> command <em>extensively</em> when working on large sets of changes. (I did the same with Mercurial’s history rewriting when I was using it a decade ago.) That expanded the list of common operations to include two more:</p>
<ul>
<li>Possibly directly amend that set of changes and/or its description.</li>
<li>Possibly restructure history: breaking apart changes, reordering them, rewriting their message, changing what commit they land on top of, and more.</li>
</ul>
<p>Jujutsu flips all of that on its head. A <em>change</em>, not a <em>commit</em>, is the fundamental element of the mental and working model. That means that you can describe a change that is still<span></span> <span>“</span>in progress” as it were. I discovered this while working on a little example code for a blog post I plan to publish later this month: you can describe the change you are working on <em>and then keep working on it</em>. The act of describing the change is distinct from the act of<span></span> <span>“</span>committing” and thus starting a <em>new</em> change. This falls out naturally from the fact that the working copy state is something you can operate on directly: akin to Git’s index, but without its many pitfalls. (This simplification affects a lot of things, as I will discuss further below; but it is especially important for new learners. Getting my head around the index was one of those things I found quite challenging initially with Git a decade ago.)</p>
<p>When you are ready to start a new change, you use either <code>jj commit</code> to<span></span> <span>“</span>finalize” this commit with a message, or <code>jj new</code> to<span></span> <span>“</span>Create a new, empty change and edit it in the working copy”. Implied: <code>jj commit</code> is just a convenience for <code>jj describe</code> followed by <code>jj new</code>. And a bonus: this means that rewording a message earlier in history does not involve some kind of rebase operation; you just <code>jj describe --revision &lt;target&gt;</code>.</p>
<p>What is more, <code>jj new</code> lets you create a new commit anywhere in the history of your project, trivially:</p>
<pre><code>-A, --insert-after
      Insert the new change between the target commit(s) and their children

      [aliases: after]

-B, --insert-before
      Insert the new change between the target commit(s) and their parents

      [aliases: before]
</code></pre>
<p>You can do this using interactive rebasing with Git (or with history rewriting with Mercurial, though I am afraid my <code>hg</code> is rusty enough that I do not remember the details). What you cannot do in Git specifically is say<span></span> <span>“</span>Start a new change at point <em>x</em><span></span><span>”</span> unless you are in the middle of a rebase operation, which makes it inherently somewhat fragile. To be extra clear: Git allows you to check out make a new change at any point in your graph, but it creates a branch at that point, and none of the descendants of that original point in your commit graph will come along without explicitly rebasing. Moreover, even once you do an explicit rebase and cherry-pick in the commit, the original commit is still hanging out, so you likely need to delete that branch. With <code>jj new -A &lt;some change ID&gt;</code>, you just insert the change directly into the history. Jujutsu will rebase every child in the history, including any merges if necessary; it<span></span> <span>“</span>just works”. That does not guarantee you will not have conflicts, of course, but Jujutsu also handles conflicts better — way better — than Git. More on that below.</p>
<p>I never use <code>git reflog</code> so much as when doing interactive rebases. Once I got the hang of Jujutsu’s ability to <code>jj new</code> anywhere, it basically obviates most of the places I have needed Git’s interactive rebase mode, especially when combined with Jujutsu’s aforementioned support for<span></span> <span>“</span>first-class conflicts”. There <em>is</em> still an escape hatch for mistakes, though: <code>jj op log</code> shows all the operations you have performed on the repo — and frankly, is much more useful and powerful than <code>git reflog</code>, because it logs <em>all</em> the operations, including whenever Jujutsu updates its view of your working copy via <code>jj status</code>, when it fetches new revisions from a remote.</p>
<p>Additionally, Jujutsu allows you to see how any change has evolved over time. This handily solves multiple pain points in Git. For example, if you have made changes in your working copy, and would like to split it into multiple changes, Git only has a binary state to let you tease those apart: staged, or not. As a result, that kind of operation ranges in difficulty from merely painful to outright impossible. With its <code>obslog</code> command,<sup><a href="#fn7" id="fnref7">7</a></sup> Jujutsu allows you to see how a change has evolved over time. Since the working copy is just one more kind of<span></span> <span>“</span>change”, you can very easily <a href="https://github.com/martinvonz/jj/blob/3d0b3d57d82c5fe77527704d008256b7d995209c/docs/FAQ.md#i-accidentally-amended-the-working-copy-how-do-i-move-the-new-changes-into-its-own-commit">retrieve</a> earlier state — any time you did a <code>jj status</code> check, or any other command which snapshotted the state of the repository (which is most of them). That applies equally to earlier changes. If you just rebased, for example, and realize you moved some changes to code into the wrong revision, you can use the combination of <code>obslog</code> and <code>new</code> and <code>restore</code> (or <code>move</code>) to pull it back apart into the desired sequence of changes. (This one is hard to describe, so I may put up a video of it later!)</p>
<h3 id="split" tabindex="-1"><a href="#split">Split</a></h3>
<p>This also leads to another significant difference with Git: around breaking up your current set of changes on disk. As I noted above, Jujutsu treats the working copy itself as a commit instead of having an<span></span> <span>“</span>index” like Git. Git really <em>only</em> lets you break apart a set of changes with the index, using <code>git add --patch</code>. Jujutsu instead has a <code>split</code> command, which launches a diff editor and lets you select what you want to incorporate — rather like <code>git add --patch</code> does. As with all of its commands, though, <code>jj split</code> works exactly the same way on <em>any</em> commit; the working copy commit gets it<span></span> <span>“</span>for free”.</p>
<p>Philosophically, I really like this. Practically, though, it is a slightly bumpier experience for me than the Git approach at the moment. Recall that I do not use <code>git add --patch</code> directly. Instead, I always stage changes into the Git index using a graphical tool like <a href="https://git-fork.com/">Fork</a>. That workflow is slightly nicer than editing a diff — at least, as Jujutsu does it today. In Fork (and similar tools), you start with <em>no</em> changes and add what you want to the change set you want. By contrast, <code>jj split</code> launches a diff view with <em>all</em> the changes from a given commit present: splitting the commit involves <em>removing</em> changes from the right side of the diff so that it has only the changes you want to be present in the first of two new commits; whatever is <em>not</em> present in the final version of the right side when you close your diff editor ends up in the second commit.</p>
<p>If this sounds a little complicated, that is because it is — at least for today. That qualifier is important, because a lot of this is down to tooling, and we have about as much dedicated tooling for Jujutsu as Git had in 2007, which is to say: not much. Qualifier notwithstanding, and philosophical elegance notwithstanding, the complexity is still real here in early 2024. There are two big downsides as things stand. First, I find it comes with more cognitive load. It requires thinking in terms of negation rather than addition, and the<span></span> <span>“</span>second commit” becomes less and less visible over time as you remove it from the first commit. Second, it requires you to repeat the operation when breaking up something into more than two commits. I semi-regularly take a single bucket of changes on disk and chunk it up into <em>many</em> more than just 2 commits, though! That significantly multiplies the cognitive overhead.</p>
<p>Now, since I started working with Jujutsu, the team has switched the default view for working with these kinds of diffs to using <code>scm-diff-editor</code>, a <abbr title="textual user interface">TUI</abbr> which has a first-class notion of this kind of workflow.<sup><a href="#fn8" id="fnref8">8</a></sup> That <abbr>TUI</abbr> works reasonably well, but is much less pleasant to use than something like the nice <abbr>GUI</abbr>s of <a href="https://git-fork.com/">Fork</a>  or <a href="https://www.git-tower.com/mac">Tower</a>.</p>
<p>The net is: when I want to break apart changes, at least for the moment I find myself quite tempted to go back to Fork and Git’s index. I do not think this problem is intractable, and I think the <em>idea</em> of <code>jj split</code> is right. It just — “just”! — needs some careful design work. Preferably, the <code>split</code> command would make it straightforward to generate an arbitrary number of commits from one initial commit, and it would allow progressive creation of each commit from a<span></span> <span>“</span>vs. the previous commit” baseline. This is the upside of the index in Git: it does actually reflect the reality that there are three separate<span></span> <span>“</span>buckets” in view when splitting apart a change: the baseline before all changes, the set of all the changes, and the set you want to include in the commit. Existing diff tools do not really handle this — other than the integrated index-aware diff tools in Git clients, which then have their own oddities when interacting with Jujutsu, since it ignores the index.</p>
<h3 id="first-class-conflicts" tabindex="-1"><a href="#first-class-conflicts">First-class conflicts</a></h3>
<p>Another huge feature of Jujutsu is its support for <em>first-class conflicts</em>. Instead of a conflict resulting in a nightmare that has to be resolved before you can move on, Jujutsu can incorporate both the merge and its resolution (whether manual or automatic) directly into commit history. Just having the conflicts in history does not seem that weird.<span></span> <span>“</span>Okay, you committed the text conflict markers from git, neat.” But: having the conflict and its resolution in history, especially when Jujutsu figured out how to do that resolution for you, as part of a rebase operation? That is just plain <em>wild</em>.</p>
<p>A while back, I was working on a change to <a href="https://github.com/true-myth/true-myth">a library</a> I maintain<sup><a href="#fn9" id="fnref9">9</a></sup> and decided to flip the order in which I landed two changes to <code>package.json</code>. Unfortunately, those changes were adjacent to each other in the file and so flipping the order they would land in seemed likely to be painfully difficult. It was actually trivial. First of all, the flow itself was great: instead of launching an editor for interactive rebase, I just explicitly told Jujutsu to do the rebases: <code>jj rebase --revision &lt;source&gt; --destination &lt;target&gt;</code>. I did that for each of the items I wanted to reorder and I was done. (I could also have rebased a whole series of commits; I just did not need to in this case.) Literally, that was it: because Jujutsu had agreed with me that <abbr>JSON</abbr> is a terrible format for changes like this and committed a merge conflict, then <em>resolved</em> the merge conflict via the next rebase command, and simply carried on.</p>
<p>At a mechanical level, Jujutsu will add conflict markers to a file, not unlike those Git adds in merge conflicts. However, unlike Git, those are not just markers in a file. They are part of a system which understands what conflicts are semantically, and therefore also what <em>resolving</em> a conflict is semantically. This not only produces nice automatic outcomes like the one I described with my library above; it also means that you have more options for how to accomplish a resolution, and for how to treat a conflict. Git trains you to see a conflict between two branches as a problem. It requires you to solve that problem before moving on. Jujutsu <em>allows</em> you to treat a conflict as a problem which much be resolved, but it does not <em>require</em> it. Resolving conflicts in merges in Git is often quite messy. It is even worse when rebasing. I have spent an incredibly amount of time attempting merges only to give up and <code>git reset --hard &lt;before the merge&gt;</code>, and possibly even more time trying to resolve a conflicting in a rebase only to bail with <code>git rebase --abort</code>. Jujutsu allows you to create a merge, leave the conflict in place, and then introduce a resolution in the <em>next</em> commit, telling the whole story with your change history.</p>
<figure>

<figcaption>Conflict resolution with merges</figcaption>
</figure>
<p>Likewise with a rebase: depending on whether you require all your intermediate revisions to be able to be built or would rather show a history including conflicts, you could choose to rebase, leave all the intermediate changes conflicted, and resolve it only at the end.</p>
<figure>

<figcaption>Conflict resolution with rebases</figcaption>
</figure>
<p>Conflicts are inevitable when you have enough people working on a repository. Honestly: conflicts happen when I am working <em>alone</em> in a repository, as suggested by my anecdote above. Having this ability to keep working with the repository even in a conflicted state, as well as to resolve the conflicts in a more interactive and iterative way is something I now find difficult to live without.</p>
<h3 id="changing-changes" tabindex="-1"><a href="#changing-changes">Changing changes</a></h3>
<p>There are a few other niceties which fall out of Jujutsu’s distinction between changes and commits, especially when combined with first-class conflicts.</p>
<p>First up, <code>jj squash</code> takes all the changes in a given commit and, well, <em>squashes</em> them into the parent of that commit.<sup><a href="#fn10" id="fnref10">10</a></sup> Given a working copy with a bunch of changes, you can move them straight into the parent by just typing <code>jj squash</code>. If you want to squash some change besides the one you are currently editing, you just pass the <code>-r</code>/<code>--revision</code> flag, as with most Jujutsu commands: <code>jj squash -r abc</code> will squash the change identified by <code>abc</code> into its parent. You can also use the <code>--interactive</code> (<code>-i</code> for short) argument to move just a part of a change into its parent. Using that flag will pop up your configured diff editor just like <code>jj split</code> will and allow you to select which items you want to move into the parent and which you want to keep separate. Or, for an even faster option, if you have specific files to move while leaving others alone, and you do not need to handle subsections of those files, you can pass them as the final arguments to the command, like <code>jj squash ./path/a ./path/c</code>.</p>
<p>As it turns out, this ability to  move part of one change into a different change is a really useful thing to be able to do in general. I find it particularly handy when building up a set of changes where I want each one to be coherent — say, for the sake of having a commit history which is easy for others to review. You <em>could</em> do that by doing some combination of <code>jj split</code> and <code>jj new --after &lt;some change ID&gt;</code> and then doing <code>jj rebase</code> to move around the changes… but as usual, Jujutsu has a better way. The <code>squash</code> command is actually just a shortcut for Jujutsu’s <code>move</code> command with some arguments filled in. The <code>move</code> command has <code>--from</code> and <code>--to</code> arguments which let you specify which revisions you want to move between. When you run <code>jj squash</code> with no other arguments, that is the equivalent of <code>jj move --from @ --to @-</code>. When you run <code>jj squash -r abc</code>, that is the equivalent of <code>jj move --from abc --to abc-</code>. Since it takes those arguments explicitly, though, <code>move</code> lets you move changes around between <em>any</em> changes. They do not need to be anywhere near each other in history.</p>
<figure>

<figcaption>A demo of using <code>jj move</code></figcaption>
</figure>
<p>This eliminates another entire category of places I have historically had to reach for <code>git rebase --interactive</code>. While there are still a few times where I think Jujutsu could use something akin to Git’s interactive rebase mode, they are legitimately <em>few</em>, and mostly to do with wanting to be able to do batch reordering of commits. To be fair, though, I only want to do that perhaps a few times a year.</p>
<h3 id="branches" tabindex="-1"><a href="#branches">Branches</a></h3>
<p>Branches are another of the very significant differences between Jujutsu and Git — another place where Jujutsu acts a bit more like Mercurial, in fact. In Git, everything happens on named branches. You <em>can</em> operate on anonymous branches in Git, but it will yell at you constantly about being on a<span></span> <span>“</span>detached <code>HEAD</code><span></span><span>”</span>. Jujutsu inverts this. The normal working mode in Jujutsu is just to make a series of changes, which then naturally form<span></span> <span>“</span>branches” in the change graph, but which do not require a name out of the gate. You can give a branch a name any time, using <code>jj branch create</code>. That name is just a pointer to the change you pointed it at, though; it does not automatically<span></span> <span>“</span>follow” you as you do <code>jj new</code> to create new changes. (Readers familiar with Mercurial may recognize that this is very similar to its <a href="https://wiki.mercurial-scm.org/Bookmarks">bookmarks</a>), though without the notion of<span></span> <span>“</span>active” and<span></span> <span>“</span>inactive” bookmarks.)</p>
<p>To update what a branch name points to, you use the <code>branch set</code> command.  To completely get rid of a branch, including removing it from any remotes you have pushed the branch to, you use the <code>branch delete</code> command. Handily, if you want to forget all your <em>local</em> branch operations (though not the changes they apply to), you can use the <code>branch forget</code> command. That can come in useful when your local copy of a branch has diverged from what is on the remote and you don’t want to reconcile the changes and just want to get back to whatever is on the remote for that branch. No need for <code>git reset --hard origin/&lt;branch name&gt;</code>, just <code>jj branch forget &lt;branch name&gt;</code> and then the next time you pull from the remote, you will get back its view of the branch!</p>
<figure>

<figcaption>It’s not just me who wants this!</figcaption>
</figure>
<p>Jujutsu’s defaulting to anonymous branches took me a bit to get used to, after a decade of doing all of my work in Git and of necessity having to do my work on named branches. As with so many things about Jujutsu, though, I have very much come to appreciate this default. In particular,I find this approach makes really good sense for all the steps where I am not yet sharing a set of changes with others. Even once I <em>am</em> sharing the changes with others, Git’s requirement of a branch name can start to feel kind of silly at times. Especially for the case where I am making some small and self-contained change, the name of a given branch is often just some short, <a href="https://en.wikipedia.org/wiki/Snake_case">snake-case</a>-ified version of the commit message. The default log template shows me the current set of branches, and their commit messages are usually sufficiently informative that I do not need anything else.</p>
<p>However, there are some downsides to this approach in practice, at least given today’s ecosystem. First, the lack of a<span></span> <span>“</span>current branch”&nbsp;makes for some extra friction when working with tools like GitHub, GitLab, Gitea, and so on. The GitHub model (which other tools have copied) treats branches as the basis for all work. GitHub displays warning messages about commits which are not on a branch, and will not allow you to create a pull request from an anonymous branch. In many ways, this is simply because Git itself treats  branches as special and important. GitHub is just following Git’s example of loud warnings about being on a<span></span> <span>“</span>detached <code>HEAD</code><span></span><span>”</span> commit, after all.</p>
<p>What this means in practice, though, is that there is an extra operation required any time you want to push your changes to GitHub or a similar forge. With Git, you simply <code>git push</code> after making your changes. (More on Git interop below.) Since Git keeps the current branch pointing at the current <code>HEAD</code>, Git aliases <code>git push</code> with no arguments to <code>git push &lt;configured remote for current branch&gt; &lt;current branch&gt;</code>. Jujutsu does not do this, and given how its branching model works today, <em>cannot</em> do this, because named branches do not<span></span> <span>“</span>follow” your operations. Instead, you must first explicitly set the branch to the commit you want to push. In the most common case, where you are pushing your latest set of changes, that is just <code>jj branch set &lt;branch name&gt;</code>; it takes the current change automatically. Only then can you run <code>jj git push</code> to actually get an update. This is only a paper cut, but it is a paper cut. It is one extra command every single time you go to push a change to share with others, or even just to get it off of your machine.<sup><a href="#fn11" id="fnref11">11</a></sup> That might not seem like a lot, but it adds up.</p>
<p>There is a real tension in the design space here, though. On the one hand, the main time I use branches in Jujutsu at this point is for pushing to a Git forge like GitHub. I rarely feel the need for them for just working on a set of changes, where <code>jj log</code> and <code>jj new &lt;some revision&gt;</code> give me everything I need. In that sense, it seems like having the branch<span></span> <span>“</span>follow along” with my work would be natural: if I have gone to the trouble of creating a name for a branch and pushing it to some remote, then it is very likely I want to keep it up to date as I add changes to the branch I named. On the other hand, there is a big upside to not doing that automatically: pushing changes becomes an intentional act. I cannot count the number of times I have been working on what is essentially just an experiment in a Git repo, forgotten to change from the <code>foo-feature</code> to a new <code>foo-feature-experiment</code> branch, and then done a <code>git push</code>. Especially if I am collaborating with others on <code>foo-feature</code>, now I have to force push back to the previous to reset things, and let others know to wait for that, etc. That never happens with the Jujutsu model. Since updating a named branch is always an intentional act, you can experiment to your heart’s content, and know you will never <em>accidentally</em> push changes to a branch that way. I go back and forth: Maybe the little bit of extra friction when you <em>do</em> want to push a branch is worth it for all the times you do not have to consciously move a branch backwards to avoid pushing changes you are not yet ready to share.</p>
<p>(As you might expect, the default of anonymous branches has some knock-on effects for how it interacts with Git tooling in general; I say more on this below.)</p>
<p>Jujutsu also has a handy little feature for when you have done a bunch of work on an anonymous branch and are ready to push it to a Git forge. The <code>jj git push</code> subcommand takes an optional <code>--change</code>/<code>-c</code> flag, which creates a branch based on your current change ID. It works really well when you only have a single change you are going to push and then continually work on, or any time you are content that your current change will remain the tip of the branch. It works a little <em>less</em> well when you are going to add further changes later, because you need to then actually use the branch name with <code>jj branch set push/&lt;change ID&gt; -r &lt;revision&gt;</code>.</p>
<p>Taking a step back, though, working with branches in Jujutsu is <em>great</em> overall. The <code>branch</code> command is a particularly good lens for seeing what a well-designed <abbr title="command line interface">CLI</abbr> is like and how it can make your work easier. Notice that the various commands there are all of the form <code>jj branch &lt;do something&gt;</code>. There are a handful of other <code>branch</code> subcommands not mentioned so far: <code>list</code>, <code>rename</code>, <code>track</code>, and <code>untrack</code>. Git has slowly improved its design here over the past few years, but still lacks the straightforward coherence of Jujutsu’s design. For one thing, all of these are <em>subcommands</em> in Jujutsu, not like Git’s mishmash of flags which can be combined in some cases but not others, and have different meanings depending on where they are deployed. For another, as with the rest of Jujutsu’s <abbr title="command line interface">CLI</abbr> structure, they use the same options to mean the same things. If you want to list all the branches which point to a given set of revisions, you use the <code>-r</code>/<code>--revisions</code> flag, exactly like you do with any other command involving revisions in Jujutsu. In general, Jujutsu has a very strong and careful distinction between <em>commands</em> (including subcommands) and <em>options</em>. Git does not. The <code>track</code> and <code>untrack</code> subcommands are a perfect example. In Jujutsu, you track a remote branch by running a command like <code>jj branch track &lt;branch&gt;@&lt;remote&gt;</code>. The corresponding Git command is <code>git branch --set-upstream-to &lt;remote&gt;/&lt;branch&gt;</code>. But to <em>list and filter</em> branches in Git, you also pass flags, e.g. <code>git branch --all</code> is the equivalent of <code>jj branch list --all</code>. The Git one is shorter, but also notably less coherent; there is no way to build a mental model for it. With Jujutsu, the mental model is obvious and consistent: <code>jj &lt;command&gt; &lt;options&gt;</code> or <code>jj &lt;context&gt; &lt;command&gt; &lt;options&gt;</code>, where <code>&lt;context&gt;</code> is something like <code>branch</code> or <code>workspace</code> or <code>op</code> (for operation).</p>
<h3 id="git-interop" tabindex="-1"><a href="#git-interop">Git interop</a></h3>
<p>Jujutsu’s native back end exists, and every feature has to work with it, so it will some day be a real feature of the <abbr>VCS</abbr>. Today, though, the Git backend is the only one you should use. So much so that if you try to run <code>jj init</code> without passing <code>--git</code>, Jujutsu won’t let you by default:</p>
<pre><code>&gt; jj init
Error: The native backend is disallowed by default.
Hint: Did you mean to pass `--git`?
Set `ui.allow-init-native` to allow initializing a repo with the native backend.
</code></pre>
<p>In practice, you are going to be using the Git backend. In practice, I have been using the Git backend for the last seven months, full time, on every one of my personal repositories and all the open source projects I have contributed to. With the sole exception of someone watching me while we pair, no one has noticed, because the Git integration is that solid and robust.</p>
<p>Jujutsu’s Git integration currently runs on <code>libgit2</code>, so there is effectively no risk of breaking your repo because of a <dash-wrap>Jujutsu – Git</dash-wrap> interop issue. To be sure, there can be bugs in Jujutsu itself, and you can do things using Jujutsu that will leave you in a bit of a mess, but the same is true of <em>any</em> tool which works on your Git repository. The risk might be very slightly higher here than with your average <abbr>GUI</abbr> Git client, since Jujutsu is mapping different semantics onto the repository, but I have extremely high confidence in the project at this point, and I think you can too.</p>
<p><mark>TODO: finish section</mark></p>
<h3 id="is-it-ready" tabindex="-1"><a href="#is-it-ready">Is it ready?</a></h3>
<p>Unsurprisingly, given the scale of the problem domain, there are still some rough edges and gaps. For example: commit signing with <abbr title="GNU Privacy Guard">GPG</abbr> or <abbr title="secure shell">SSH</abbr> does not yet work. There is an open <abbr title="pull request">PR</abbr> for the basics of the feature with <abbr title="GNU Privacy Guard">GPG</abbr> support, and <abbr title="secure shell">SSH</abbr> support will be straightforward to add once the basics, but landed it has not.<sup><a href="#fn12" id="fnref12">12</a></sup> The list of actual gaps or missing features is getting short, though. When I started using Jujutsu back in July 2023, there was not yet any support for sparse checkouts or for workspaces (analogous to Git worktrees). Both of those landed in the interval, and there is consistent forward motion from both Google and non-Google contributors. In fact, the biggest gap I see as a regular user in Jujutsu itself is the lack of the kinds of capabilities that will hopefully come once work starts in earnest on the native back end.</p>
<p>The real gaps and rough edges at this point are down to the lack of an ecosystem of tools around Jujutsu, and the ways that existing Git tools interact with Jujutsu’s design for Git interop. The lack of tooling is obvious: no one has built the equivalent of <a href="https://git-fork.com/">Fork</a> or <a href="https://www.git-tower.com/mac">Tower</a>, and there is no native integration in <abbr title="integrated development environment">IDE</abbr>s like IntelliJ or Visual Studio or in editors like <abbr title="Visual Studio">VS</abbr> Code or Vim. Since Jujutsu currently works primarily in terms of Git, you will get <em>some</em> useful feedback. All of those tools expect to be working in terms of Git’s index and not in terms of a Jujutsu-style working copy, though. Moreover, most of them (unsurprisingly!) share Git’s own confusion about why you are working on a detached <code>HEAD</code> nearly all the time. On the upside, viewing the history of a repo generally works well, with the exception that some tools will not show anonymous branches/detached <code>HEAD</code>s other than one you have actively checked out. Detached heads also tend to confuse tools like GitHub’s <code>gh</code>; you will often need to do a bit of extra manual argument-passing to get them to work. (<code>gh pr create --web --head &lt;name&gt;</code> is has been showing up in my history a lot for exactly this reason.)</p>
<p>Some of Jujutsu’s very nice features also make other parts of working on mainstream Git forges a bit wonky. For example, notice what each of these operations has in common:</p>
<ul>
<li>Inserting changes at arbitrary points.</li>
<li>Rewording a change description.</li>
<li>Rebasing a series of changes.</li>
<li>Splitting apart commits.</li>
<li>Combining existing commits.</li>
</ul>
<p>They are all changes to history. If you have pushed a branch to a remote, doing any of these operations with changes on that branch and pushing to a remote again will be a <em>force push</em>. Most mainstream Git forges handle force pushing pretty badly. In particular, GitHub has some support for showing diffs between force pushes, but it is very basic and loses all conversational context. As a result, any workflow which makes heavy use of force pushes will be bumpy. Jujutsu is not to blame for the gaps in those tools, but it certainly does expose them.<sup><a href="#fn13" id="fnref13">13</a></sup> Nor do I not blame GitHub for the quirks in interop, though. It is not JujutsuLab after all, and Jujutsu is doing things which do not perfectly map onto the Git model. Since most open source software development happens on forges like GitHub and GitLab, though, these things do  regularly come up and cause some friction.</p>
<p>The biggest place I feel this today is in the lack of tools designed to work with Jujutsu around splitting, moving, and otherwise interactively editing changes. Other than <a href="https://github.com/arxanas">@arxanas</a><span></span><span>’</span> excellent <code>scm-diff-editor</code>, the <abbr title="text user interface">TUI</abbr>, which Jujutsu bundles for editing diffs on the command line, there are zero <em>good</em> tools for those operations. I mean it when I say <code>scm-diff-editor</code> is excellent, but I also do not love working in a <abbr title="text user interface">TUI</abbr> for this kind of thing, so  I have cajoled both <a href="https://kaleidoscope.app/">Kaleidoscope</a> and BBEdit into working to some degree. As I noted when describing how jj split` works, though, it is not a particularly good experience. These tools are simply not designed for this workflow. They understand an index, and they do not understand splitting apart changes. Net, we are going to want new tooling which actually understands Jujutsu.</p>
<p>There are opportunities here beyond implementing the same kinds of capabilities that <em>many</em> editors, <abbr title="integrated development environment">IDE</abbr>s, and dedicated <abbr title="version control system">VCS</abbr> viewers provide today for Git. Given a tool which makes rebasing, merging, re-describing changes, etc. are all normal and easy operations, <abbr title="graphical user interface">GUI</abbr> tools could make all of those much easier. Any number of the Git <abbr title="graphical user interface">GUI</abbr>s have tried, but Git’s underlying model simply makes it clunky. That does not have to be the case with Jujutsu. Likewise, surfacing things like Jujutsu’s operation and change evolution logs should be much easier than surfacing the Git reflog, and provide easier ways to recover lost work or simply to change one’s mind.</p>
<h2 id="conclusion" tabindex="-1"><a href="#conclusion">Conclusion</a></h2>
<p>Jujutsu has become my version control tool of choice since I picked it up over the summer. The rough edges and gaps I described throughout this write-up notwithstanding, I <em>much</em> prefer it to working with Git directly. I do not hesitate to recommend that you try it out on personal or open source projects. Indeed, I actively recommend it! I have used Jujutsu almost exclusively for the past seven months, and I am not sure what would make me go back to using Git other than Jujutsu being abandoned entirely. Given its apparently-bright future at Google, that seems unlikely.<sup><a href="#fn14" id="fnref14">14</a></sup> Moreover, because using it in existing Git repositories is transparent, there is no inherent reason individual developers or teams cannot use it today. (Your corporate security policy might have be a different story.)</p>
<p>Is Jujutsu ready for you to roll out at your Fortune 500 company? Probably not. While it is improving at a steady clip — most of the rough edges I hit in mid-2023 are long since fixed — it is still undergoing breaking changes in design here and there, and there is effectively no material out there about how to use it yet. (This essay exists, in part, as an attempt to change that!) Beyond Jujutsu itself, there is a lot of work to be done to build an ecosystem around it. Most of the remaining rough edges are squarely to do with the lack of understanding from other tools.  The project is marching steadily toward a 1.0 release… someday. As for when that might be, there are as far as I know no plans: there is still too much to do. Above all, I am very eager to see what a native Jujutsu backend would look like. Today, it is<span></span> <span>“</span>just” a much better model for working with Git repos. A world where the same level of smarts being applied to the front end goes into the back end too is a world well worth looking forward to.</p>
<section aria-role="note"><p>Thoughts, comments, or questions? Discuss:</p>
<ul>
<li><a href="https://news.ycombinator.com/item?id=39232456">Hacker News</a></li>
<li><a href="https://lobste.rs/s/pvvbhm/jj_init">lobste.rs</a></li>
<li><a href="https://www.linkedin.com/feed/update/urn:li:activity:6923287174180212736/">LinkedIn</a></li>
<li><a href="https://mastodon.social/@chriskrycho/111863369362392797">Mastodon</a></li>
<li><a href="https://www.threads.net/@chriskrycho/post/C22w19OgBJV">Threads</a></li>
<li><a href="https://bsky.app/profile/chriskrycho.com/post/3kkhe5pxuek27">Bluesky</a></li>
<li><a href="https://twitter.com/chriskrycho/status/1753489910600712246?s=20">Twitter/X</a></li>
</ul>
</section>
<h2 id="appendix-kaleidoscope-setup-and-tips" tabindex="-1"><a href="#appendix-kaleidoscope-setup-and-tips">Appendix: Kaleidoscope setup and tips</a></h2>
<p>As alluded to above, I have done my best to make it possible to use <a href="https://kaleidoscope.app/">Kaleidoscope</a>, my beloved diff-and-merge tool, with Jujutsu. I have had only mixed success. The appropriate setup that gives the best results so far:</p>
<ol>
<li>
<p>Add the following to your Jujutsu config (<code>jj config edit --user</code>) to configure Kaleidoscope for the various diff and merge operations:</p>
<pre><code><span>[ui]</span>
<span>diff-editor</span> = [<span>"ksdiff"</span>, <span>"--wait"</span>, <span>"$left"</span>, <span>"--no-snapshot"</span>, <span>"$right"</span>, <span>"--no-snapshot"</span>]
<span>merge-editor</span> = [<span>"ksdiff"</span>, <span>"--merge"</span>, <span>"--output"</span>, <span>"$output"</span>, <span>"--base"</span>, <span>"$base"</span>, <span>"--"</span>, <span>"$left"</span>, <span>"--snapshot"</span>, <span>"$right"</span>, <span>"--snapshot"</span>]
</code></pre>
<p>I will note, however, that I have still not been 100% successful using Kaleidoscope this way. In particular, <code>jj split</code> does not give me the desired results; it often ends up reporting<span></span> <span>“</span>Nothing changed” when I close Kaleidoscope.</p>
</li>
<li>
<p>When opening a <em>file</em> diff, you must <kbd>Option</kbd><kbd>⎇</kbd>-double-click, <em>not</em> do a normal double-click, so that it will preserve the <code>--no-snapshot</code> behavior. That <code>--no-snapshot</code> argument to <code>ksdiff</code> is what makes the resulting diff editable, which is what Jujutsu needs for its just-edit-a-diff workflow. I have been in touch with the Kaleidoscope folks about this, which is how I even know about this workaround; they are evaluating whether it is possible to make the normal double-click flow preserve the <code>--no-snapshot</code> in this case so you do not <em>have</em> to do the workaround.</p>
</li>
</ol>
<hr>
<section>
<ol>
<li id="fn1"><p>Yes, it is written in Rust, and it is pretty darn fast. But Git is written in C, and is <em>also</em> pretty darn fast. There are of course some safety upsides to using Rust here, but Rust is not particularly core to Jujutsu’s<span></span> <span>“</span>branding”. It was just a fairly obvious choice for a project like this at this point — which is exactly what I have long hoped Rust would become! <a href="#fnref1">↩︎</a></p>
</li>
<li id="fn2"><p>Pro tip for Mac users: add <code>.DS_Store</code> to your <code>~/.gitignore_global</code> and live a much less annoyed life — whether using Git or Jujutsu. <a href="#fnref2">↩︎</a></p>
</li>
<li id="fn3"><p>I did have <a href="https://github.com/martinvonz/jj/issues/1794">one odd hiccup</a> along the way due to a bug (already fixed, though not in a released version) in how Jujutsu handles a failure when initializing in a directory. While confusing, the problem was fixed in the next release… and this is what I expected of still-relatively-early software. <a href="#fnref3">↩︎</a></p>
</li>
<li id="fn4"><p>This is not quite the same as Git’s <code>HEAD</code> or as Mercurial’s<span></span> <span>“</span>tip” — there is only one of either of those, and they are not the same as each other! <a href="#fnref4">↩︎</a></p>
</li>
<li id="fn5"><p>If you look at the <code>jj help</code> output today, you will notice that Jujutsu has <code>checkout</code>, <code>merge</code>, and <code>commit</code> commands. Each is just an alias for a behavior using <code>new</code>, <code>describe</code>, or both, though:</p>
<ul>
<li><code>checkout</code> is just an alias for <code>new</code></li>
<li><code>commit</code> is just a shortcut for <code>jj describe -m "&lt;some message&gt;" &amp;&amp; jj new</code></li>
<li><code>merge</code> is just <code>jj new</code> with an implicit <code>@</code> as the first argument.</li>
</ul>
<p>All of these are going to go away in the medium term with both documentation and output from the <abbr title="command line interface">CLI</abbr> that teach people to use <code>new</code> instead. <a href="#fnref5">↩︎</a></p>
</li>
<li id="fn6"><p>Actually it is normally <code>git ci -am "&lt;message&gt;"</code> with <code>-a</code> for<span></span> <span>“</span>all” (<code>--all</code>) and <code>-m</code> for the message, and smashed together to avoid any  needless extra typing. <a href="#fnref6">↩︎</a></p>
</li>
<li id="fn7"><p>The name is from Mercurial’s <a href="https://www.mercurial-scm.org/doc/evolution/">evolution</a> feature, where it refers to changes which have become <em>obsolescent</em>, thus <code>obslog</code> is the<span></span> <span>“</span>obsolescent changes log”. I recently suggested to the Jujutsu maintainers that renaming this might be helpful, because it took me six months of daily use to discover this incredibly helpful tool. <a href="#fnref7">↩︎</a></p>
</li>
<li id="fn8"><p>They also enabled support for a three-pane view in <a href="https://meld.app/">Meld</a>, which allegedly makes it somewhat better. However, Meld is pretty janky on macOS (as <a href="https://www.gtk.org/">GTK</a> apps basically always are), and it has a <em>terrible</em> startup time for reasons that are unclear at this point, which means this was not a great experience in the first place… and Meld <a href="https://github.com/yousseb/meld/issues/147">crashes on launch</a> on the current version of macOS. <a href="#fnref8">↩︎</a></p>
</li>
<li id="fn9"><p>Yes, this is what I do for fun on my time off. At least: partially. <a href="#fnref9">↩︎</a></p>
</li>
<li id="fn10"><p>For people coming from Git, there is also an <code>amend</code> alias, so you can use <code>jj amend</code> instead, but it does the same thing as <code>squash</code> and in fact the help text for <code>jj amend</code> makes it clear that it just <em>is</em> <code>squash</code>. <a href="#fnref10">↩︎</a></p>
</li>
<li id="fn11"><p>If that sounds like paranoia, well, you only have to lose everything on your machine once due to someone spilling a whole cup of water on it at a coffee shop to learn to be a bit paranoid about having off-machine backups of everything. I <code>git push</code> all the time. <a href="#fnref11">↩︎</a></p>
</li>
<li id="fn12"><p>I care about about this feature and have some hopes of helping get it across the line myself here in February 2024, but we will see! <a href="#fnref12">↩︎</a></p>
</li>
<li id="fn13"><p>There are plenty of interesting arguments out there about the GitHub collaboration design, alternatives represented by the Phabricator or Gerrit review models, and so on. This piece is long enough without them! <a href="#fnref13">↩︎</a></p>
</li>
<li id="fn14"><p>Google is famous for killing <em>products</em>, but less so developer tools. <a href="#fnref14">↩︎</a></p>
</li>
</ol>
</section>

   </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[When should you give up on a project that doesn't work? (214 pts)]]></title>
            <link>https://www.preethamrn.com/posts/when-should-you-give-up</link>
            <guid>39232004</guid>
            <pubDate>Fri, 02 Feb 2024 18:07:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.preethamrn.com/posts/when-should-you-give-up">https://www.preethamrn.com/posts/when-should-you-give-up</a>, See on <a href="https://news.ycombinator.com/item?id=39232004">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><!--[-->I spent a lot of my free time after work over the last month working on a project and today I'm giving up.<!--]--></p><p><!--[-->The idea was based on a simple hypothesis. People enjoy surfing Wikipedia to find interesting articles by randomly clicking on links. What if there was a way to search for articles by clicking on locations? In fact, Wikipedia used to have this feature built into their apps (they still have it but now it's only a <a href="https://en.wikipedia.org/wiki/Special:Nearby" rel="nofollow" target="_blank"><!--[-->website<!--]--></a>). There are a few issues with Wikipedia's solution though:<!--]--></p><ol><!--[--><li><!--[-->They don't show the points on a map so you'd have to guess where the articles are in relation to each other (or plug the coordinates into a map separately)<!--]--></li><li><!--[-->They sort articles by distance and not by popularity or some other heuristic.<!--]--></li><!--]--></ol><p><!--[-->My hypothesis was that if you could drag around a map to search for articles nearby and sort them by pageviews it would be more fun and could potentially help with vacation planning. I was wrong and here's how I found out.<!--]--></p><h4 id="_1-initial-passion"><a href="#_1-initial-passion"></a><!--[-->1. Initial passion<!--]--></h4><p><!--[-->The first week of the project was great. Day 1, I was able to integrate OpenStreetMaps and the Wikipedia API to list all the articles in the area with their view counts.
<img src="https://www.preethamrn.com/_ipx/h_30&amp;w_30&amp;f_webp&amp;blur_1&amp;q_80/posts/when-should-you-give-up/day1.png" onerror="this.setAttribute('data-error', 1)" alt="Day 1 progress" loading="lazy" data-nuxt-img=""><!--]--></p><p><!--[-->By Day 3, I supported fetching articles progressively as you moved the map around, added a page view filter, and added popups which linked to the Wikipedia page.
<img src="https://www.preethamrn.com/_ipx/h_30&amp;w_30&amp;f_webp&amp;blur_1&amp;q_80/posts/when-should-you-give-up/day3.png" onerror="this.setAttribute('data-error', 1)" alt="Day 3 progress" loading="lazy" data-nuxt-img=""><!--]--></p><p><!--[-->By the end of the first week, I had finished most of the basic UI. The map takes up the full screen, it's possible to collapse the list of articles, and you can sort by views. By this point I had everything I needed to validate my hypothesis. Instead I decided to keep adding more random features without having a clear vision in mind until...
<img src="https://www.preethamrn.com/_ipx/h_30&amp;w_30&amp;f_webp&amp;blur_1&amp;q_80/posts/when-should-you-give-up/week1.png" onerror="this.setAttribute('data-error', 1)" alt="Week 1 progress" loading="lazy" data-nuxt-img=""><!--]--></p><h4 id="_2-excuses"><a href="#_2-excuses"></a><!--[-->2. Excuses<!--]--></h4><p><!--[-->After the first week, I ended up getting busier with various tasks at work while also having to travel around. I told myself I would try to get some work done on the project if I got free time but somehow that never ended up happening. At the time I figured I couldn't be so hard on myself because I did actually have other stuff to do, but in hindsight I think this is where my lack of motivation started to kick in. Was I subconsciously afraid that the project wasn't going to work out the way I thought it would?<!--]--></p><h4 id="_3-fake-productivity"><a href="#_3-fake-productivity"></a><!--[-->3. Fake productivity<!--]--></h4><p><!--[-->After one week of not getting much done, I decided to kick it into high gear and make a bunch of changes.<!--]--></p><ol><!--[--><li><!--[-->Changing UI libraries to naive-ui and again to Quasar<!--]--></li><li><!--[-->Changing the color of map markers based on how popular an article is<!--]--></li><li><!--[-->Using the Navigator.geolocation property to search for articles near the user's location<!--]--></li><li><!--[-->Loading more details when clicking a popup<!--]--></li><li><!--[-->Adding a crosshair to the center of the map so you know where you're loading from<!--]--></li><li><!--[-->A bunch of different CSS tweaks<!--]--></li><!--]--></ol><p><!--[-->A week passed and here's what I ended up with. It certainly looks a lot better, although what you don't see is the horrible lag that happens when you first load the page (and whenever you move around the map), the fact that the popups often don't load until all the page views are fetched (I'm assuming because of some rate limiting on Wikipedia's side), and how the table on the right breaks down and becomes practically useless after moving around the map for a while and accumulating thousands of articles in the list. Don't get me started on how it looks on a phone.
<img src="https://www.preethamrn.com/_ipx/h_30&amp;w_30&amp;f_webp&amp;blur_1&amp;q_80/posts/when-should-you-give-up/final-result.png" onerror="this.setAttribute('data-error', 1)" alt="Final result" loading="lazy" data-nuxt-img=""><!--]--></p><h4 id="_4-pushing-tasks-back-by-days"><a href="#_4-pushing-tasks-back-by-days"></a><!--[-->4. Pushing tasks back by days<!--]--></h4><p><!--[-->Once the low effort tasks dried up I wasn't sure what to do next. I started to realize that a lot of things would need to be built from the ground up and had to confront the fact that what I was doing just wasn't working.<!--]--></p><p><!--[-->The website was laggy, the most viewed articles were just the city pages (which aren't particularly interesting coordinates to visit on a vacation), and many of the prominent articles that showed up were things like <a href="https://en.wikipedia.org/wiki/YouTube_headquarters_shooting" rel="nofollow" target="_blank"><!--[-->YouTube headquarters shooting<!--]--></a>" and "<a href="https://en.wikipedia.org/wiki/Death_of_Jeffrey_Epstein" rel="nofollow" target="_blank"><!--[-->Death of Jeffrey Epstein<!--]--></a>" while more interesting places like "<a href="https://en.wikipedia.org/wiki/Pittock_Mansion" rel="nofollow" target="_blank"><!--[-->Pittock Mansion<!--]--></a>" and "<a href="https://en.wikipedia.org/wiki/Ghirardelli_Square" rel="nofollow" target="_blank"><!--[-->Ghirardelli Square<!--]--></a>" were hard to come by. I'm surprised the first two even had coordinates to begin with.<!--]--></p><p><!--[-->What I really needed to do was overhaul the algorithm that I used to sort and display articles to users, improve the map controls to be less laggy, make the page more responsive on first load, and set a better zoom level which helped highlight the articles that were loaded.<!--]--></p><p><!--[-->But still, I spent the next few days continuing to mess around with the CSS, add mobile UI support, and improve the popup and table displays. None of these solved the core problem and here's what I have today - <a href="https://wikimaps.vercel.app/" rel="nofollow" target="_blank"><!--[-->Wikimaps<!--]--></a>.<!--]--></p><h4 id="_5-giving-up"><a href="#_5-giving-up"></a><!--[-->5. Giving up<!--]--></h4><p><!--[-->The reason it was so hard to get to this stage was the fear that I was wrong with my hypothesis. I tricked myself into believing that if I just kept making these small incremental changes that I'd make it fun to use again. But in reality, I think I probably should have quit after week 1... or at least drastically changed how I approached things. Maybe I'll come back to this project some other day, but for now, it'll go back on the shelf.<!--]--></p><p><!--[-->Why am I writing this? Partially as a cautionary tale to myself and others so in the future I won't make the same mistake. Partially because I spent the last month making something and I didn't want that to go to waste. And partially in the hope that sharing this idea with others<sup><a aria-current="page" href="https://www.preethamrn.com/posts/when-should-you-give-up#user-content-fn-1" aria-describedby="footnote-label" data-footnote-ref="" id="user-content-fnref-1"><!--[-->1<!--]--></a></sup> might reignite some of that initial passion that I had.<!--]--></p><p><!--[-->I think the biggest takeaway from this is that if something is worth building, you'll know right away. A barely functional prototype from <a href="https://www.preethamrn.com/posts/2020-year-in-review#pokemon-dens"><!--[-->another project I worked on almost 4 years ago<!--]--></a> got over <a href="https://www.reddit.com/r/PokemonSwordAndShield/comments/eqn6h4/interactive_map_of_the_wild_area_with_list_of/" rel="nofollow" target="_blank"><!--[-->1000 upvotes on Reddit<!--]--></a> in a day just based off of a gif.<!--]--></p><p><!--[-->For now I'm on to bigger and brighter pastures. I have another project in the works and this time I'll make sure to test my hypothesis as early as possible.<!--]--></p><section data-footnotes=""><ol><!--[--><li id="user-content-fn-1"><!--[-->I already posted this on <a href="https://www.reddit.com/r/InternetIsBeautiful/comments/1af6odr/a_website_which_lists_popular_wikipedia_articles/" rel="nofollow" target="_blank"><!--[-->Reddit<!--]--></a> and got some interest. However most of the suggested changes were "fake productivity" things like supporting showing distance in meters, supporting non-English articles, and fixing minor bugs with geolocation so I probably won't get back to it <a aria-current="page" href="https://www.preethamrn.com/posts/when-should-you-give-up#user-content-fnref-1" aria-label="Back to reference 1" data-footnote-backref=""><!--[-->↩<!--]--></a><!--]--></li><!--]--></ol></section></div><p> Written by <a href="https://www.twitter.com/preethamrn">@preethamrn</a>: Software developer at Uber with a degree in CS. Go, Storage, Distributed Systems, Bouldering, Rubik's Cubes. <a href="https://www.github.com/preethamrn">Github</a></p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How is a binary executable organized? Let's explore it (424 pts)]]></title>
            <link>https://jvns.ca/blog/2014/09/06/how-to-read-an-executable/</link>
            <guid>39231663</guid>
            <pubDate>Fri, 02 Feb 2024 17:43:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jvns.ca/blog/2014/09/06/how-to-read-an-executable/">https://jvns.ca/blog/2014/09/06/how-to-read-an-executable/</a>, See on <a href="https://news.ycombinator.com/item?id=39231663">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
     <p>I used to think that executables were totally impenetrable. I’d
compile a C program, and then that was it! I had a Magical Binary
Executable that I could no longer read.</p>

<p>It is not so! Executable file formats are regular file formats that
you can understand. I’ll explain some simple tools to start! We’ll be
working on Linux, with ELF binaries. (binaries are kind of the
definition of platform-specific, so this is all platform-specific.)
We’ll be using C, but you could just as easily look at output from any
compiled language.</p>

<p>Let’s write a simple C program, <code>hello.c</code>:</p>

<pre><code>#include &lt;stdio.h&gt;

int main() {
    printf("Penguin!\n");
}
</code></pre>

<p>Then we compile it (<code>gcc -o hello hello.c</code>), and we have a binary called
<code>hello</code>. This originally seems impenetrable (how do we even binary?!),
but let’s see how we can investigate it! We’re going to learn what
<strong>symbols</strong>, <strong>sections</strong>, and <strong>segments</strong> are. At a high level:</p>

<ul>
<li><strong>symbols</strong> are like function names, and are used to answer “If I call
<code>printf</code> and it’s defined somewhere else, how do I find it?”</li>
<li>symbols are organized into <strong>sections</strong> – code lives in one section
(<code>.text</code>), and data in another (<code>.data</code>, <code>.rodata</code>)</li>
<li>sections are organized into <strong>segments</strong></li>
</ul>



<p>Throughout we’ll use a tool called <code>readelf</code> to look at these.</p>

<p>So, let’s dive into our binary!</p>

<h2 id="step-1-open-it-in-a-text-editor">Step 1: open it in a text editor!</h2>

<p>This is most naive possible way to view a binary. If run <code>cat hello</code>,
I get something like this:</p>

<pre>ELF&gt;@@H@8
@@@@@@��88@@@@�� ((`(`�
PP`P`��P�td@,,Q�tdR�td((`(`��/lib64/ld-linux-x86-64.so.2GNUGNUϨ�n��8�w�j7*oL�h��
__gmon_start__libc.so.6puts__libc_start_mainGLIBC_2.2.5ui
1```H��k����H���5 H�[]�fff.�H�=p
UH��t�H��]�H`��]Ð�UH����@�����]Ð�����������H�l$�L�d$�H�- L�%
L�l$�L�t$�L�|$�H�\$�H��8L)�A��I��H��I���s���H��t1@L��L��D��A��H��H9�u�H�\H�l$L�d$L�l$
L�t$(L�|$0H��8��Ð�������������UH��SH�H�
H���t�(`DH���H�H���u�H�[]Ð�H��o���H��Penguin!;,����H
</pre>

<p>There’s text here, though! This was not a total failure. In particular
it says “Penguin!” and “ELF”. ELF is the name of the binary format. So
that’s something! Then there are a bunch of unprintable symbols, which
isn’t a huge surprise because this is a binary.</p>

<h2 id="step-2-use-readelf-to-see-the-symbol-table">Step 2: use <code>readelf</code> to see the symbol table</h2>

<p>Throughout we’re going to use a tool called <code>readelf</code> to explore our
binary. Let’s start by running <code>readelf --symbols</code> on it. (another
popular tool to do this is <code>nm</code>)</p>

<pre><code>$ readelf --symbols hello 
   Num:    Value          Size Type    Bind   Vis      Ndx Name
    48: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@@GLIBC_2.2.5
    59: 0000000000400410     0 FUNC    GLOBAL DEFAULT   13 _start
    61: 00000000004004f4    16 FUNC    GLOBAL DEFAULT   13 main
</code></pre>

<p>(<a href="https://gist.github.com/jvns/0f82a7655d32bb6b331e">full output here</a>)</p>

<p>Here we see three <em>symbols</em>: <code>main</code> is the address of my <code>main()</code>
function. <code>puts</code> looks like a reference to the <code>printf</code> function I called
in it (which I guess the compiler changed to <code>puts</code> as an
optimization?). <code>_start</code> is pretty important.</p>

<p>When the program starts running, you might think it starts at <code>main</code>.
It doesn’t! It <em>actually</em> goes to <code>_start</code>. This does a bunch of Very
Important Things that I don’t understand very well, including calling
<code>main</code>. So I won’t explain them.</p>

<p>So, what’s a symbol?</p>

<h3 id="symbols">Symbols</h3>

<p>When you write a program, you might write a function called <code>hello</code>.
When you compile the program, the binary for that function is labelled
with a <strong>symbol</strong> called <code>hello</code>. If I call a function (like <code>printf</code>)
from a library, we need a way to look up the code for that function!
The process of looking up functions from libraries is called
<strong>linking</strong>. It can happen either just after we compile the program
(“static linking”) or when we run the program (“dynamic linking”).</p>

<p>So symbols are what allow linking to work! Let’s find the symbol for
printf! It’ll be in <code>libc</code>, where all the C standard library
functions are.</p>

<p>If I run <code>nm</code> on my copy of libc, it tells me “no symbols”. But the
internet tells me I can use <code>objdump -tT</code> instead! This works!
<code>objdump -tT /lib/x86_64-linux-gnu/libc-2.15.so</code> gives me
<a href="https://gist.github.com/jvns/13bae55c3d463cdad809">this output</a>.</p>

<p>If you look at it, you’ll see <code>sprintf</code>, <code>strlen</code>, <code>fork</code>, <code>exec</code>, and
everything you might expect libc to have. From here we can start to
imagine how dynamic linking works – we see that <code>hello</code> calls <code>puts</code>,
and then we can look up the location of <code>puts</code> in libc’s symbol table.</p>

<h2 id="step-3-use-objdump-to-see-the-binary-and-learn-about-sections">Step 3: use <code>objdump</code> to see the binary, and learn about sections!</h2>

<p>Opening our binary in a text editor was a bad way to open it.
<code>objdump</code> is a better way. Here’s an excerpt:</p>

<pre><code>$ objdump -s hello
Contents of section .text:
 400410 31ed4989 d15e4889 e24883e4 f0505449  1.I..^H..H...PTI
 400420 c7c0a005 400048c7 c1100540 0048c7c7  ....@.H....@.H..
 400430 f4044000 e8c7ffff fff49090 4883ec08  ..@.........H...
Contents of section .interp:
 400238 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 400248 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .rodata:
 4005f8 01000200 50656e67 75696e21 00        ....Penguin!.   
</code></pre>

<p>You can see that it shows us all the bytes in the file as hex on the
left, and a translation into ASCII on the right.</p>

<p>The are a whole bunch of <strong>sections</strong> here (see
<a href="https://gist.github.com/jvns/64aa2c85e083e0031609">this gist</a> for the
whole thing). This shows you all the bytes in your binary! Some
sections we care about:</p>

<ul>
<li><code>.text</code> is the program’s actual code (the assembly). <code>_start</code> and
<code>main</code> are both part of the <code>.text</code> section.</li>
<li><code>.rodata</code> is where some read-only data is stored (in this case, our
string “Penguin!”)</li>
<li><code>.interp</code> is the filename of the dynamic linker!</li>
</ul>

<p>The major difference between <em>sections</em> and <em>segments</em> is that
sections are used at link time (by <code>ld</code>) and segments are used at
execution time. <code>objdump</code> shows us the contents of the sections, which
is nice, but doesn’t give us as much metadata about the sections as
I’d like. Let’s try <code>readelf</code> instead:</p>

<pre><code>$ readelf --sections hello
Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [13] .text             PROGBITS         0000000000400410  00000410
       00000000000001d8  0000000000000000  AX       0     0     16
  [15] .rodata           PROGBITS         00000000004005f8  000005f8
       000000000000000b  0000000000000000   A       0     0     4
  [24] .data             PROGBITS         0000000000601010  00001010
       0000000000000010  0000000000000000  WA       0     0     8
  [25] .bss              NOBITS           0000000000601020  00001020
       0000000000000010  0000000000000000  WA       0     0     8
  [26] .comment          PROGBITS         0000000000000000  00001020
       000000000000002a  0000000000000001  MS       0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), l (large)
  I (info), L (link order), G (group), T (TLS), E (exclude), x (unknown)
  O (extra OS processing required) o (OS specific), p (processor specific)
</code></pre>

<p>(<a href="https://gist.github.com/jvns/37ce4ad26758b403f6b3">full output</a>)</p>

<p>Neat! We can see <code>.text</code> is executable and read-only, <code>.rodata</code> (“read
only data”) is read-only, and <code>.data</code> is read-write.</p>

<h2 id="step-4-look-at-some-assembly">Step 4: Look at some assembly!</h2>

<p>We mentioned briefly that <code>.text</code> contains assembly code. We can
actually look at what it is really easily. If we were magicians, we
would already be able to read and understand this:</p>

<pre><code>Contents of section .text:
 400410 31ed4989 d15e4889 e24883e4 f0505449  1.I..^H..H...PTI
 400420 c7c0a005 400048c7 c1100540 0048c7c7  ....@.H....@.H..
 400430 f4044000 e8c7ffff fff49090 4883ec08  ..@.........H...
</code></pre>

<p>It starts with <code>31ed4989</code>. Those are bytes that our CPU interprets as
code! And runs! However we are not magicians (I don’t know what <code>31
ed</code> means!) and so we will use a disassembler instead.</p>

<pre><code>$ objdump -d ./hello
Disassembly of section .text:

0000000000400410 &lt;_start&gt;:
  400410:       31 ed                   xor    %ebp,%ebp
  400412:       49 89 d1                mov    %rdx,%r9
  400415:       5e                      pop    %rsi
  400416:       48 89 e2                mov    %rsp,%rdx
  400419:       48 83 e4 f0             and    $0xfffffffffffffff0,%rsp
</code></pre>

<p><a href="https://gist.github.com/jvns/75298b0a5b6cde5de175">full output here</a></p>

<p>So we see that <code>31 ed</code> is xoring two things. Neat! That’s all the
assembly we’ll do for now.</p>

<h2 id="step-5-segments">Step 5: Segments!</h2>

<p>Finally, a program is organized into <strong>segments</strong> or <strong>program
headers</strong>. Let’s look at the segments for our program using <code>readelf
--segments hello</code>.</p>

<pre><code>Program Headers:
  [... removed ...]
  INTERP         0x0000000000000238 0x0000000000400238 0x0000000000400238
                 0x000000000000001c 0x000000000000001c  R      1
      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]
  LOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000
                 0x00000000000006d4 0x00000000000006d4  R E    200000
  LOAD           0x0000000000000e28 0x0000000000600e28 0x0000000000600e28
                 0x00000000000001f8 0x0000000000000208  RW     200000
  [... removed ...]

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02 .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym
       .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt
       .text .fini .rodata .eh_frame_hdr .eh_frame
   03     .ctors .dtors .jcr .dynamic .got .got.plt .data .bss 
   04     .dynamic 
   05     .note.ABI-tag .note.gnu.build-id 
   06     .eh_frame_hdr 
   07     
   08     .ctors .dtors .jcr .dynamic .got 

</code></pre>

<p>Segments are used to determine how to separate different parts of the
program into memory. The first <code>LOAD</code> segment is marked R E (read /
execute) and the second is <code>RW</code> (read/write). <code>.text</code> is in the first
segment (we want to read it but never write to it), and <code>.data</code>,
<code>.bss</code> are in the second (we need to write to them, but not execute
them).</p>

<h2 id="not-magic">Not magic!</h2>

<p>Executables aren’t magic. ELF is a file format like any other! You can
use <code>readelf</code>, <code>nm</code>, and <code>objdump</code> to inspect your Linux binaries. Try
it out! Have fun.</p>

<p>Other resources:</p>

<ul>
<li>I found
<a href="http://www.bottomupcs.com/elf.html">this introduction to ELF</a>
helpful for explaining sections and segments</li>
<li>There’s a wonderful
<a href="https://code.google.com/p/corkami/wiki/ELF101">graphic showing the structure of an ELF binary</a>.</li>
<li>For learning more about how linkers work, there’s a wonderful
<a href="http://lwn.net/Articles/276782/">20 part series about linkers</a>,
which I wrote about
<a href="http://jvns.ca/blog/2013/12/10/day-40-learning-about-linkers/">here</a>
and
<a href="http://jvns.ca/blog/2013/12/10/day-40-12-things-i-learned-today-about-linkers/">here</a>.</li>
<li>I haven’t talked much about assembly at all here! Read Dan Luu’s
<a href="http://danluu.com/edit-binary/">Editing Binaries: Easier than it sounds</a></li>
</ul>

<p><small> Thanks very much to the amazing
<a href="http://akaptur.github.io/">Allison Kaptur</a> and
<a href="http://danluu.com/">Dan Luu</a> for reading a draft of this.</small></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Stories removed from the Hacker News Front Page, updated in real time (631 pts)]]></title>
            <link>https://github.com/vitoplantamura/HackerNewsRemovals</link>
            <guid>39230513</guid>
            <pubDate>Fri, 02 Feb 2024 16:25:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/vitoplantamura/HackerNewsRemovals">https://github.com/vitoplantamura/HackerNewsRemovals</a>, See on <a href="https://news.ycombinator.com/item?id=39230513">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}" href="https://github.com/features/packages">
      
      <div>
        <p>Packages</p><p>
        Host and manage packages
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>


                <li>
      
      
</li>


                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

            </ul>
          </div>
          
      </div>
</li>


                <li>
    <a data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:vitoplantamura/HackerNewsRemovals" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="YYRic3dqs8VSa1bmuJhHAiRJ_WUiVbZlC-RdI9bIKsvQecA1vRJwQKhP7r3zXnmyCC24tKx4WhYgtyqDhraWcA" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="vitoplantamura/HackerNewsRemovals" data-current-org="" data-current-owner="vitoplantamura" data-logged-in="false" data-copilot-chat-enabled="false" data-blackbird-indexed-repo-csrf="<esi:include src=&quot;/_esi/rails_csrf_token_form_hidden?r=C33PGN2rXXZnXSmJIE6nsyy4z1MaJjkm9bfyV93cr5dG4TWuzk7qt8uaGVXBaltdPx%2BwE53A5Ze1diD6NkDqv112llfRUA1U96NU1HhkNUc00ke7N5e4sEGY8rs%2FQzoqR2xcbtl1oZyZmU3o9BsY%2BHGLUYiRo3UHCRBJdMa0rEunnbvX%2FOBARX4t2xjNusU3n6x9hYacmmqploeDe4pXG8W4%2BvGyjE2zjosLAQurcBFjfS%2F%2FFgufWiMqjmENT78eqoiROV3OzscqRsO6Oxk6gH8NyB%2FuO2VGz6jagcHMemRmiiIohzTU58Ur23VP8XZiJGkePG5A0%2B7DXo2xh8fmlvKwRBX2K5rs%2BR90Y47Y%2BLFdx3XW87GRRIAy37x%2B3Vq7aa0iwE8SXLrL4BY2kXD4UlF%2FDMofI2kdGTYzoDtS4417nHoWTRZJlI3e7kZ6hCCV8fhkMmTkiobDUmjL6yxe6AqYgK8z21AIpcdYmoUG4WqXOj29X7mUEQK%2Bx4wXTXYboSkkBuF8RbmxPt4N4KzvzCHtrOGiQiFl560m%2B49%2FwUMjNw%3D%3D--2xNYZZ1TZn%2FbLt%2F0--D3mvbRkarSFkq57PpPpjSw%3D%3D&quot; />">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>

            <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&amp;source=header-repo&amp;source_repo=vitoplantamura%2FHackerNewsRemovals" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/vitoplantamura/HackerNewsRemovals&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="030491a578ef5b24a6c972b903a1bc95a3a7d6be92cb0bc7c800073b35816b76" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>;ref_cta:Sign up;ref_loc:header logged out&quot;}">
              Sign up
            </a>
        </p></div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The EPA is proposing that 'forever chemicals' be considered hazardous substances (417 pts)]]></title>
            <link>https://www.npr.org/2024/02/02/1228540721/forever-chemicals-pfas-epa-hazardous</link>
            <guid>39230263</guid>
            <pubDate>Fri, 02 Feb 2024 16:09:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.npr.org/2024/02/02/1228540721/forever-chemicals-pfas-epa-hazardous">https://www.npr.org/2024/02/02/1228540721/forever-chemicals-pfas-epa-hazardous</a>, See on <a href="https://news.ycombinator.com/item?id=39230263">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="storytext">
      <div id="res1228541103">
            <div data-crop-type="">
        <picture>
            <source srcset="https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s400-c85.webp 400w,
https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s600-c85.webp 600w,
https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s800-c85.webp 800w,
https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s900-c85.webp 900w,
https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s1200-c85.webp 1200w,
https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s1600-c85.webp 1600w,
https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s1800-c85.webp 1800w" sizes="(min-width: 1300px) 763px, (min-width: 1025px) calc(100vw - 496px), (min-width: 768px) calc(100vw - 171px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s400-c85.jpg 400w,
https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s600-c85.jpg 600w,
https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s800-c85.jpg 800w,
https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s900-c85.jpg 900w,
https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s1200-c85.jpg 1200w,
https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s1600-c85.jpg 1600w,
https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s1800-c85.jpg 1800w" sizes="(min-width: 1300px) 763px, (min-width: 1025px) calc(100vw - 496px), (min-width: 768px) calc(100vw - 171px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s1100-c50.jpg" alt="" loading="lazy">
        </picture>
        
</div>
<div>
    <div>
        <p>
                Eva Stebel, water researcher, pours a water sample into a smaller glass container for experimentation as part of drinking water and PFAS research at the U.S. Environmental Protection Agency Center For Environmental Solutions and Emergency Response, Feb. 16, 2023, in Cincinnati.
                <b aria-label="Image credit">
                    
                    Joshua A. Bickel/AP
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Joshua A. Bickel/AP
        
    </span>
</p></div>
<div>
        <picture>
            <source data-original="https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s1200.webp" type="image/webp">
            <source data-original="https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s1200.jpg" type="image/jpeg">
            <img data-original="https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s1200.jpg" alt="" src="https://media.npr.org/assets/img/2024/02/02/ap23353824214238_custom-d289d6107ba630e1cb133cd5d877f6dabcdca82d-s1200.jpg">
        </picture>
    </div>
<div>
        <p>Eva Stebel, water researcher, pours a water sample into a smaller glass container for experimentation as part of drinking water and PFAS research at the U.S. Environmental Protection Agency Center For Environmental Solutions and Emergency Response, Feb. 16, 2023, in Cincinnati.</p>
        <p><span aria-label="Image credit">
            
            Joshua A. Bickel/AP
            
        </span>
    </p></div>
   </div>
   <p>The Environmental Protection Agency is proposing that nine PFAS, also known as "forever chemicals," be categorized as hazardous to human health.</p>   <p>The EPA signed a proposal Wednesday that would deem the chemicals "hazardous constituents" under the Resource Conservation and Recovery Act. </p>   <p>For the agency to consider a substance a hazardous constituent, it has to be toxic or cause cancer, genetic mutation or the malformations of an embryo. The full list of the nine substances can be found <a href="https://www.epa.gov/hw/proposal-list-nine-and-polyfluoroalkyl-compounds-resource-conservation-and-recovery-act">here.</a> </p>   
   
   
<!-- END ID="RES1228541144" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>The agency cited various studies in which forever chemicals were found to cause a litany of "toxic effects" in humans and animals, including, but not limited to cancer, a decreased response to vaccinations, high cholesterol, decrease in fertility in women, preeclampsia, thyroid disorders and asthma, the EPA said.</p>   <p>Short for "per-and polyfluoroalkyl substances," PFAS cover thousands of man-made chemicals. PFAS are often used for manufacturing purposes, such as in nonstick cookware, adhesives, firefighting foam, turf and more. </p>   <p>PFAS have been called "forever chemicals" because they break down very slowly and can accumulate in people, animals and the environment. Last summer, <a href="https://www.npr.org/2023/07/06/1186230007/drinking-water-forever-chemicals-pfas-study">a study by the U.S. Geological Survey </a>found that the man-made chemicals are present in nearly half the country's tap water supply. </p>   
   
<!-- END ID="RES1228541185" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>The survey tested for 32 types of PFAS, though there are more than 12,000, the USGS said, and they can pose a health threat even at very small amounts. </p>   <p>In June, the chemical manufacturer<a href="https://www.npr.org/2023/06/22/1183922303/3m-reaches-10-3-billion-settlement-over-contamination-of-water-systems"> 3M said it would pay about $10 billion</a> in lawsuit settlements to help detoxify water supplies across the country, after plaintiffs claimed the company's firefighting foam and other products were responsible for contaminating tap water with PFAS. </p>   <p>The proposed rule will be open for public comment once it is uploaded to the <a href="https://www.federalregister.gov/documents/search">Federal Register</a>, under docket number EPA-HQ-OLEM-2023-0278. </p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pinball Map: Crowd-sourced worldwide map of public pinball machines (250 pts)]]></title>
            <link>https://pinballmap.com/</link>
            <guid>39230244</guid>
            <pubDate>Fri, 02 Feb 2024 16:08:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pinballmap.com/">https://pinballmap.com/</a>, See on <a href="https://news.ycombinator.com/item?id=39230244">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="container">

<div>
<p>
<span>
<img alt="splash" src="https://pinballmap.com/assets/icon-color-noBGsvg-607e6533e568be3f6eb42a39d9172603655aa72317aec6920f33b2f7d253f990.svg">
</span>
Welcome to Pinball Map!
</p>
<p>
Founded in 2008, Pinball Map is an open source, crowdsourced worldwide map of public pinball machines.
</p>
<p>
<a href="https://pinballmap.com/map">Explore the Map</a>
</p>
<p>
<span>
9,879
</span>
locations and
<span>
40,060
</span>
machines
</p>
<p>
The map was last updated
7 minutes
ago
</p>
</div>

<div>
<p><img alt="machine" src="https://pinballmap.com/assets/purple-machine-ba216c053ebe494048576e22973c54c443641ae0b24e0a7bdf62dee2d829c5fb.png">
</p>
<div>
<p>
On the go? Use the award-winning
<a href="https://pinballmap.com/app">Pinball Map mobile app</a>
</p>
<p>
Available for both
<span>
Android
</span>
and
<span>
iOS.
</span>
It is FREE! No ads, no tracking. Just pinball!
</p>
</div>
</div>

<div>
<div>
<p>
This is a user-powered map. Create an account and then keep the map up to date by adding and removing machines, submitting new locations, and
<a href="https://pinballmap.com/flier">telling your friends</a>
about it!
</p>
<p>
The data is managed by over 100 administrators and thousands of active users.
</p>
<p>
Pinball Map is not monetized - no ads or premium membership. The
<a href="https://github.com/pinballmap/pbm">code is open source.</a>
</p>
<p>
<a href="https://pinballmap.com/portland/about">Contact us!</a>
</p>
</div>
<p><img alt="portland logo" src="https://pinballmap.com/assets/portland/app_logo-350-306e6cbf5ee1a58b137c7ea7dbfdeedcf9447727e96baa5fb8c3a4fedfb660cb.jpg">
</p>
</div>

<div>
<p><a target="_blank" href="https://pinballmap.com/store"><img alt="Pinball Map Store" src="https://pinballmap.com/assets/pbm-both-stickers-ee319d75cae9b694969ebd5bf17f568b6b5f1b6d6e22eac96a40e130e611fd58.png"></a>
</p>
<div>
<p>
We have
<span>
pink
</span>
and
<span>
black
</span>
stickers!
</p>
<p>
And also brushed gold with black ink ones.
</p>
<p>
Purchase them through the
<a href="https://pinballmap.com/store">Pinball Map store!</a>
</p>
</div>
</div>

<div>

<p><a target="_blank" href="https://patreon.com/pinballmap"><img alt="Become a Patron" src="https://pinballmap.com/assets/become_a_patron_button@2x-e2c5ae71483e201234705b935bcff2aa27f8c1e02fc2dfc8d1e7c9a9d049280c.png"></a>
</p>
</div>

<div>
<p><img alt="mapping logo" src="https://pinballmap.com/assets/mappin-logo-600.orig-62c74311c089426fce9700b37f61eb9fe949031917ea2faa59626f6c5509217d.png">
</p>

</div>

<div>
<div>
<p>
Not only is the Pinball Map website and app open source, but there is also
<a href="https://pinballmap.com/api/v1/docs">an API!</a>
With it, you can pull down map data and use it on your cool app.
</p>
<p>
<a target="_blank" href="https://sternpinball.com/pinball-locator/">Stern Pinball</a>
uses our data for their machine locator. Our API is also used by
<a target="_blank" href="https://matchplay.events/">Matchplay Events</a>
and
<a target="_blank" href="https://pindigo.app/">Pindigo</a>
and
<a target="_blank" href="https://scorbit.io/">Scorbit</a>
and
<a target="_blank" href="https://www.kineticist.co/">Kineticist</a>
and many others!
</p>
<p>
<span>If you use the data, please provide attribution!</span>
</p>
</div>
<p><img alt="cleo" src="https://pinballmap.com/assets/cleo-c857eaeaa9965c5fecd40309a07b467b255b7b3727bf2221391bcf67dedaae42.png">
</p>
</div>

<div>
<p>
Over the years we have created tools to help out operators. You can register your business in our system, tag all your locations, and receive email notifications when people leave comments on your machines.
</p>
<p>
If you want to quickly look up all your locations, try this special map!
</p>
<p>
<a href="https://pinballmap.com/operators">Operators Map</a>
</p>
<p>
To be added to our system, and to receive email notifications (please specify that you want this),
<a href="https://pinballmap.com/portland/about">Contact us!</a>
</p>
</div>

<div>
<p><a target="_blank" href="https://dokku.com/"><img alt="dokku logo" src="https://pinballmap.com/assets/stack-dokku-logo-e68edc751498cea49a21d5e143b5a764ccfb3dc7c7ad6784547f2c1c8e2a73ba.svg"></a>
<br>
<a target="_blank" href="https://expo.dev/"><img alt="expo logo" src="https://pinballmap.com/assets/stack-expo-logo-bb0004c25cf3f2c27bf23ebff91e641fe9694357b131ee39915ca79cf5b37ffd.png"></a>
<br>
<a target="_blank" href="https://scoutapm.com/"><img alt="scout APM logo" src="https://pinballmap.com/assets/stack-scout-logo-f2ab3019302500d22b77f24685298b91e8b1fd4778ba5f67368cde418476f513.png"></a>
</p>
<div>
<p>
The Pinball Map website, API, and app make extensive use of many free and/or open source services (as well as paid services). The website uses
<a target="_blank" href="https://rubyonrails.org/">Ruby on Rails</a>
along with open source gems. The app uses
<a target="_blank" href="https://reactnative.dev/">React Native</a>
and likewise is aided by many open source modules.
</p>
<p>
<a target="_blank" href="https://dokku.com/">Dokku.</a>
We use Dokku to build and deploy Pinball Map! It is a free service, though we support it with a monthly donation.
</p>
<p>
<a target="_blank" href="https://www.digitalocean.com/">DigitalOcean</a>
hosts our server and Postgresql database. This is fully paid for via our Patreon supporters.
</p>
<p>
<a target="_blank" href="https://www.mapbox.com/">Mapbox</a>
is used for map tiles.
</p>
<p>
<a target="_blank" href="https://expo.dev/">Expo</a>
manages, among many things, the app development and build processes.
</p>
<p>
<a target="_blank" href="https://scoutapm.com/">Scout APM</a>
tracks performance monitoring for the website and API.
</p>
<p>
<a target="_blank" href="https://sentry.io/">Sentry</a>
is used for crash reporting on the app!
</p>
<p>
<a target="_blank" href="https://developers.google.com/maps">Google Maps</a>
processes the geocoding requests. We also use the Places API for location submissions.
</p>
</div>
</div>

<div id="regions">
<p>
<a href="#regions">Regional Maps</a>
</p>
<p>
If the
<a href="https://pinballmap.com/map">big map</a>
isn’t cutting it for you, you can search for machines in one select area. Please pick a "regional" map below. Regions are predefined geographical areas - they can be a city, county, state, or even a country - that an administrator and the local users created (a long time ago!). Each regional map is curated by a local administrator, often with the support of a league.
</p>

</div>



</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[An alternative cause for the Great Stagnation: the cargo cult company (108 pts)]]></title>
            <link>https://www.shyamsankar.com/p/technology-is-the-problem</link>
            <guid>39229727</guid>
            <pubDate>Fri, 02 Feb 2024 15:31:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.shyamsankar.com/p/technology-is-the-problem">https://www.shyamsankar.com/p/technology-is-the-problem</a>, See on <a href="https://news.ycombinator.com/item?id=39229727">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><span>In 2011, Tyler Cowen argued that the developed world economies were in a </span><a href="https://www.amazon.com/Great-Stagnation-Low-Hanging-Eventually-eSpecial-ebook/dp/B004H0M8QS" rel="">Great Stagnation</a><span>. It had started in the late 1970s&nbsp;because all of the low hanging productivity fruits—machines and factories powered by fossil fuels and electricity—had been exhausted.&nbsp;</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba03660c-78c2-4d19-aedf-d8608362801a_320x231.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba03660c-78c2-4d19-aedf-d8608362801a_320x231.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba03660c-78c2-4d19-aedf-d8608362801a_320x231.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba03660c-78c2-4d19-aedf-d8608362801a_320x231.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba03660c-78c2-4d19-aedf-d8608362801a_320x231.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba03660c-78c2-4d19-aedf-d8608362801a_320x231.jpeg" width="320" height="231" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ba03660c-78c2-4d19-aedf-d8608362801a_320x231.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:231,&quot;width&quot;:320,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:19490,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba03660c-78c2-4d19-aedf-d8608362801a_320x231.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba03660c-78c2-4d19-aedf-d8608362801a_320x231.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba03660c-78c2-4d19-aedf-d8608362801a_320x231.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba03660c-78c2-4d19-aedf-d8608362801a_320x231.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>Technological improvements were happening at the margin. &nbsp;This same sentiment is captured in Founders Fund’s famous saying that “we wanted flying cars, instead we got 140 characters.” &nbsp;</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a10a66e-5021-4874-9a5b-f8389fde77c3_844x344.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a10a66e-5021-4874-9a5b-f8389fde77c3_844x344.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a10a66e-5021-4874-9a5b-f8389fde77c3_844x344.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a10a66e-5021-4874-9a5b-f8389fde77c3_844x344.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a10a66e-5021-4874-9a5b-f8389fde77c3_844x344.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a10a66e-5021-4874-9a5b-f8389fde77c3_844x344.png" width="844" height="344" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/7a10a66e-5021-4874-9a5b-f8389fde77c3_844x344.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:344,&quot;width&quot;:844,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:113535,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a10a66e-5021-4874-9a5b-f8389fde77c3_844x344.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a10a66e-5021-4874-9a5b-f8389fde77c3_844x344.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a10a66e-5021-4874-9a5b-f8389fde77c3_844x344.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7a10a66e-5021-4874-9a5b-f8389fde77c3_844x344.png 1456w" sizes="100vw"></picture></div></a></figure></div><p>And this tweet captures the perfect banality of most technology today. &nbsp;We entered a SaaS hole of darkness.</p><p><span>My colleague </span><a href="https://tedmabrey.substack.com/p/why-did-software-eat-the-world-but" rel="">Ted Mabrey wrote</a><span>&nbsp;that “Software companies are shipping more, institutions are consuming more and the result of all of that software consumption is productivity growth below the long term trend.”&nbsp;&nbsp;</span></p><p><span>Satya Nadella at Davos in January 2024 said; “</span><em><strong>&nbsp;</strong><span>...inflation adjusted, there is no economic growth in the world, I would say and that's a pretty disappointing state. In fact, the developed world may have negative economic growth...PCs were the last time, when actual, economic growth came about, right? So, the last time it showed up in productivity stats were when PCs became ubiquitous.”&nbsp;</span></em><span>Satya goes on to argue that AI has the potential to restore productivity growth.</span></p><p>While AI is very powerful, this argument is wrong.&nbsp; AI alone is insufficient because it fails to diagnose the underlying systemic drivers of the productivity dysfunction, let alone redress them: implementation for advantage.</p><p>I propose an alternative cause largely born out of 18 years of experience at the coalface of delivering productivity to governments and Fortune 500 institutions.&nbsp;The Great Stagnation is caused by technology and not despite it.&nbsp;Software in particular is suited to layers of abstraction turned obfuscation in a way hardware is not. AI only accelerates this trend. We are stuck in the era of the cargo cult company:</p><p><span>During WWII, the U.S. used islands in the Southwest Pacific as military bases. The indigenous Melanesians observed with awe as big metal birds carrying all sorts of supplies and cargo magically materialized whenever the soldiers were marching and signaling towards the sky. When the war ended, so did the appearance of the magic cargo. Local chiefs tried to </span><a href="https://www.sapiens.org/culture/cargo-cult-rituals/" rel="">summon the cargo</a><span> by engaging in the same rituals they believed caused the cargo to appear in the first place. They cleared the forest to look like a landing strip and made wooden replicas of airplanes and control towers. The Americans and their Coca-Cola did not reappear.&nbsp;</span></p><p>Today, “cargo cult programming” is well known among engineers to refer to ritualistic code practices divorced from cause and effect. It is symptomatic of an engineer who doesn’t understand the underlying problem and tries to pattern match to get at the solution.&nbsp;The analogy is not often extended to describe cargo cult management, but this is an even more pernicious problem. In&nbsp;cargo cult management, a company’s leadership uses the employment of a technology (frequently software) and the achievement of financial metrics as a proxy for actually solving the problem and obtaining ground truth.&nbsp;</p><p><span>There is an old saying in Silicon Valley, “There is the first 80% and the second 80%.” While it is really hard to create new technologies, it is also </span><em>really</em><span> hard to implement them for any measurable advantage.&nbsp; This has always been true:&nbsp;The steam engine didn’t matter until it was put into a ship and locomotive; the Wright brothers’ flight didn’t matter until it moved people; electricity needed to be delivered to the home; and telephony didn’t matter until there was a connection. However, the connection between invention and implementation used to be more obvious.&nbsp;</span></p><p>In the 1970s, complexity in technology reached a point that it wasn’t possible to move forward without abstractions.&nbsp;I was taught the beauty of abstractions as an electrical and computer engineer. Doped silicon where you are solving physics equations suddenly become transistors where you are dealing with 0s and 1s suddenly become chips where you are issuing instructions, then computers where you are writing code, and then user interfaces where you are clicking. It was a great way to deal with overwhelming complexity. The abstractions made it all manageable.&nbsp;</p><p>But now the abstractions are getting in the way.</p><p><span>We have converged on a world where the people who do the first 80% have no competency or interest in doing the second 80%. The SaaS industry is a frequent target of the Great Stagnation because it is chasing high margins rather than high value outcomes - which, to be fair, is a rational response to a punitive capital landscape that penalizes companies for deviating from a specific </span><a href="https://sacks.substack.com/p/the-saas-metrics-that-matter" rel="">set of metrics</a><span>. And it’s not just SaaS. The Defense Industrial Base underwent a financialization in the 1990s where the focus shifted to dividends and buybacks rather than innovation. I could go on. Lacking the incentives to allocate resources towards implementation, companies instead create an abstraction to define the “right” way to do something.&nbsp;</span></p><p><strong>But when the abstraction isn’t tethered to empirical results or anything measurable and falsifiable, the abstraction is just an obfuscation, a cargo cult ritual.</strong><span>&nbsp;You can’t prosecute the AI revolution without piercing the abstractions substantially to redesign the application, its code, and the chip (CPU→GPU) it runs on. SpaceX succeeded not because it invented a fundamentally new rocket or law of physics but because it didn’t rely on crusty abstractions that obfuscated what was actually physically possible.&nbsp;</span></p><p>When I look at the commercial world at large, despite years of investment in technology, it is completely broken. The cargo cult company’s latest billion dollar enterprise resource planning (ERP) implementation obfuscates the fact that employees on the factory floor are still running production in Excel. Similarly, the strongest indictment of the software-industrial-complex is COVID. The only technology that companies could point to as relevant to dealing with the disruptions of COVID to their supply chains and operations were videoconferencing software like Teams and Zoom. What about the 100s of billions of dollars invested in the modern data stack, cloud, ERP,&nbsp; data lakes, data warehouses, and CRMs?&nbsp;</p><p>The problem isn’t that enterprise software doesn’t work - it is that you didn’t make it work for you. The only measure that counts, hidden behind all those layers of abstraction, is the final outcome - decision advantage. &nbsp;This is often viewed as an implementation detail (the second 80%), and implementation is often outsourced to experts (COVID should have also taught us all something about “experts“). The industry of consultants who themselves have never run businesses but tell cargo cult companies how to execute implementation further obfuscates the lack of productivity gains.</p><p>Palantir was ridiculed endlessly for our Forward Deployed Engineering model. Investors would impugn Palantir as a services company simply because we didn’t believe that throwing our software over the wall for consultants to implement was the correct thing for our customers.&nbsp; In fairness, many of our buyers hated this because they subscribed to a world view where engaging in the correct rituals (e.g., buying expensive ERP) was the only thing that should matter. Like Department of Defense program management, the commercial world often believes implementation is best executed when managed to cost, schedule, and performance by fungible units of “independent” consultants.&nbsp;</p><p>Palantir never charged for our implementation services because we wanted to internalize the cost and the pain. &nbsp;The only way to make the software implementation better was to commit ourselves to solving the whole problem. &nbsp;SAP, Salesforce, Microsoft, Snowflake, and so many others are responding to what the market wants: high margin software revenue. They rely on a scaled ecosystem of integrators to do services, and that’s exactly why we are consuming more technology and none of it matters.&nbsp;</p><div><figure><a target="_blank" href="https://x.com/scottew/status/1751357591375208689?s=20" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5450949e-e3ff-43f9-9519-2f2b6123504c_844x892.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5450949e-e3ff-43f9-9519-2f2b6123504c_844x892.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5450949e-e3ff-43f9-9519-2f2b6123504c_844x892.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5450949e-e3ff-43f9-9519-2f2b6123504c_844x892.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5450949e-e3ff-43f9-9519-2f2b6123504c_844x892.png" width="844" height="892" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/5450949e-e3ff-43f9-9519-2f2b6123504c_844x892.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:892,&quot;width&quot;:844,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:794382,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:&quot;https://x.com/scottew/status/1751357591375208689?s=20&quot;,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5450949e-e3ff-43f9-9519-2f2b6123504c_844x892.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5450949e-e3ff-43f9-9519-2f2b6123504c_844x892.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5450949e-e3ff-43f9-9519-2f2b6123504c_844x892.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5450949e-e3ff-43f9-9519-2f2b6123504c_844x892.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><a href="https://www.amazon.com/Boyd-Fighter-Pilot-Who-Changed/dp/0316796883" rel="">John Boyd</a><span> would reframe this as being about the </span><a href="https://fs.blog/ooda-loop/" rel="">OODA loop</a><span>. Observe, Orient, Decide, Act. &nbsp;The technology that matters accelerates your OODA loop by helping you make decisions faster than the competition. &nbsp;And that compounds. &nbsp;Everything else is rearranging deck chairs. At best you are smarter, but you aren’t better. &nbsp;A lot has been written about the OODA loop already, but I think the best summary comes from JRock in his (brutally crass) anthem: </span><a href="https://www.youtube.com/watch?v=JrO46CJd9ns&amp;t=31s" rel="">Win</a><span>. &nbsp;Or more eloquently by former Chief of Staff of the Army McConville: </span><a href="https://www.army.mil/article/225605/40th_chief_of_staff_of_the_army_initial_message_to_the_army_team" rel="">Winning matters.</a></p><p>To say the quiet part out loud: the OODA loop is all about the human. &nbsp;Technology serves humans. &nbsp;Instead, we have cargo cult companies such that the mere acquisition of architecturally-ordained technology is perceived to be the solution. The cargo cultist treat the front line users as godless heathens standing in the way of adopting innovation. &nbsp;</p><p>More profoundly, even the purveyors in the software-industrial-complex&nbsp;really believe their technology is working (Satya proves to be the exception with a more&nbsp;clear-eyed understanding of what is actually going on).&nbsp;They too have subscribed to the cargo cult because they don’t go to the factory floor; they don’t own the burden&nbsp;of implementing their technology; and they aren’t accountable to delivering productivity. Management at the company won’t pierce the veil of abstraction to realize they fell for the Wizard of Oz.&nbsp;</p><p>We overcome these problems by recognizing that great leadership is more important, not less important, with greater technology. &nbsp;The more sophisticated and complex our technology become, the more important the greatest leader becomes. &nbsp;Intel’s road to ruin was when the CFO became the CEO and managed the business by the numbers and abstractions. Former Intel CTO and current CEO Pat Gelsinger might correct the course.&nbsp; In the meantime, technical founder and NVIDIA CEO Jensen Huang rewrote the stack around accelerated computing.</p><p>In this way, technology has largely had the opposite effect from all the effects anticipated. &nbsp;The world thought technology would be a great leveling force, but it has led to more winner-take-most, power law outcomes. Technology was supposed to enable the median human to do so much more, but it has actually made the very best much more valuable.&nbsp;The world thought technology would make geography less important, but it has made it only more important by concentrating the relevance, wealth, and share of innovations from a handful of places. &nbsp;Silicon Valley is more relevant, while Europe lags further behind in Tech. China still has zero global enterprise software companies. Tim Cook says that Apple makes things in China because they are the best, not because they are the cheapest — a consequence of a flawed industrial policy in the West.</p><p><span>Steve Jobs called the Macintosh a bicycle for the mind. Let’s abandon cargo cult “solutions.”. Recognize there is no </span><a href="https://www.shyamsankar.com/p/there-is-no-process-it-will-be-painful" rel="">process</a><span>, and it will be painful. Technology only works when it is an extension of the human mind and the humans who mind it. Exclusively work backwards from decision advantage.&nbsp;</span></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AWS charge for using IPv4 expected to bring $1B/year and speed up IPv6 adoption (197 pts)]]></title>
            <link>https://www.tomshardware.com/networking/amazons-aws-new-charge-for-using-ipv4-is-expected-to-rake-in-up-to-dollar1b-per-year-change-should-speed-ipv6-adoption</link>
            <guid>39229476</guid>
            <pubDate>Fri, 02 Feb 2024 15:12:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tomshardware.com/networking/amazons-aws-new-charge-for-using-ipv4-is-expected-to-rake-in-up-to-dollar1b-per-year-change-should-speed-ipv6-adoption">https://www.tomshardware.com/networking/amazons-aws-new-charge-for-using-ipv4-is-expected-to-rake-in-up-to-dollar1b-per-year-change-should-speed-ipv6-adoption</a>, See on <a href="https://news.ycombinator.com/item?id=39229476">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-widget-type="contentparsed" id="content">

<section>
<div itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
<div>
<picture><source type="image/webp" alt="AWS" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-1200-80.jpg.webp 1200w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-1920-80.jpg.webp 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ.jpg"><source type="image/jpeg" alt="AWS" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-1920-80.jpg 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ.jpg"><img src="https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-320-80.jpg" alt="AWS" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ-1920-80.jpg 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ.jpg"></picture>
</div>
<meta itemprop="url" content="https://cdn.mos.cms.futurecdn.net/34bSe6nSDn8FnHB532MJnJ.jpg">
<meta itemprop="height" content="600">
<meta itemprop="width" content="338">
<figcaption itemprop="caption description">
<span itemprop="copyrightHolder">(Image credit: Shutterstock)</span>
</figcaption>
</div>

<div id="article-body">
<p>On Thursday, <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tag/amazon" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.tomshardware.com/tag/amazon">Amazon</a> Web Services (AWS) introduced a new charge for customers with public IPv4 addresses. It had <a data-analytics-id="inline-link" href="https://go.redirectingat.com/?id=92X1584492&amp;xcust=tomshardware_us_1152953036682118700&amp;xs=1&amp;url=https%3A%2F%2Faws.amazon.com%2Fblogs%2Faws%2Fnew-aws-public-ipv4-address-charge-public-ip-insights%2F&amp;sref=https%3A%2F%2Fwww.tomshardware.com%2Fnetworking%2Famazons-aws-new-charge-for-using-ipv4-is-expected-to-rake-in-up-to-dollar1b-per-year-change-should-speed-ipv6-adoption" data-url="https://aws.amazon.com/blogs/aws/new-aws-public-ipv4-address-charge-public-ip-insights/" target="_blank" data-hl-processed="skimlinks" data-placeholder-url="https://go.redirectingat.com/?id=92X1584492&amp;xcust=hawk-custom-tracking&amp;xs=1&amp;url=https%3A%2F%2Faws.amazon.com%2Fblogs%2Faws%2Fnew-aws-public-ipv4-address-charge-public-ip-insights%2F&amp;sref=https%3A%2F%2Fwww.tomshardware.com%2Fnetworking%2Famazons-aws-new-charge-for-using-ipv4-is-expected-to-rake-in-up-to-dollar1b-per-year-change-should-speed-ipv6-adoption" rel="sponsored noopener" referrerpolicy="no-referrer-when-downgrade" data-google-interstitial="false" data-merchant-name="SkimLinks - amazon.com" data-merchant-id="undefined" data-merchant-url="undefined" data-merchant-network="undefined">warned</a> that a new pricing plan would be put into place six months ago, and we had a rough idea of the scale of charges that many customers would face. However, the <a data-analytics-id="inline-link" href="https://www.border0.com/blogs/ipv4-surcharge---your-aws-bill-is-going-up-this-february" data-url="https://www.border0.com/blogs/ipv4-surcharge---your-aws-bill-is-going-up-this-february">Border0 blog</a> has spotlighted some very interesting financial implications of the change, estimating that Amazon will make as much as an extra $1 billion from its stable of IPv4 addresses over the coming year.</p><p>Last summer, we reported on the impending AWS IPv4 pricing change. Amazon said that starting February 1, 2024, it would start charging customers $0.005 per IP per hour for all public IPv4 addresses, whether attached to a service or not. It reasoned that IPv4 addresses are increasingly scarce and difficult to manage and explained that “the cost to acquire a single public IPv4 address has risen more than 300% over the past five years.” At the same time, it encouraged users to accelerate the adoption of IPv6.</p><p>So, $0.005 per IPv4 per hour sounds like a tiny amount, right? Previously, we worked out that it would mean a new fee of $43.80 per year per IPv4 address on an AWS service bill. Border0 has dived deeper into the figures and what the service pricing change could mean to AWS's income. It picked through data in the “AWS IP JSON and the various whois (ARIN, RIPE, etc.) data entries” to determine that Amazon has nearly 132 Million IPv4 addresses. Remember, we are told these addresses are in high demand / scarce, so it is reasonable to assume many are used by customers.</p><p>Combining the 132 million IPv4 addresses managed by AWS with ipv4.global data showing that the average price for an IPv4 address is currently ~35 dollars, Border0 calculated the total value of AWS IPv4 stock to be worth $4.6 billion.&nbsp;</p><p>The firm also considered the potential yearly income from these IPv4 addresses. Using a conservative estimate that 30% of AWS IPv4 stock (79 million IPv4 addresses) is in use by paying customers, Amazon would be able to rake in over a billion dollars a year from this internet real estate (23.7 million x $43.80 = $1.04 billion). The best guess of Border0 was that AWS would be making between $400 million and $1 billion a year from the IPv4 charging change implemented yesterday.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" alt="AWS IP insights tool" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" data-normal="https://vanilla.futurecdn.net/tomshardware/media/img/missing-image.svg" data-srcset="https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-1200-80.jpg.webp 1200w" data-sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC.jpg"><source type="image/jpeg" alt="AWS IP insights tool" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" data-normal="https://vanilla.futurecdn.net/tomshardware/media/img/missing-image.svg" data-srcset="https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-1200-80.jpg 1200w" data-sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC.jpg"><img src="https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC.jpg" alt="AWS IP insights tool" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" data-normal="https://vanilla.futurecdn.net/tomshardware/media/img/missing-image.svg" data-srcset="https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-1200-80.jpg 1200w" data-sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC.jpg" srcset="https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/PGhDtvpJCGwhsx5AmBcaJC-1200-80.jpg 1200w"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: AWS)</span></figcaption></figure><h2 id="go-ipv6-if-you-can-3">Go IPv6 if you can?</h2><p>Why would Amazon want users to change to IPv6? IPv4 is a 32-bit addressing scheme and thus limited to 4.3 billion unique devices - not enough for the modern internet, IoT, and so on. IPv6 was created in 1998 and implements 128-bit addressing to provide approximately <a data-analytics-id="inline-link" href="https://www.cisco.com/c/en/us/solutions/ipv6/overview.html" data-url="https://www.cisco.com/c/en/us/solutions/ipv6/overview.html">340 undecillion addresses</a>. That <a data-analytics-id="inline-link" href="https://archive.nytimes.com/bits.blogs.nytimes.com/2008/03/25/did-bill-gates-really-say-that/" data-url="https://archive.nytimes.com/bits.blogs.nytimes.com/2008/03/25/did-bill-gates-really-say-that/">ought to be enough</a> for anybody (sorry for recycling that joke from last time, but it was irresistible). As mentioned above, the scarcity of IPv4 addresses in 2024 means that there is a lot more effort needed to acquire, recycle, and manage them - so we have the new AWS IP address charging plan. However, AWS is not leveraging hourly charges on IPv6 addresses, and it provides tools for users to <a data-analytics-id="inline-link" href="https://go.redirectingat.com/?id=92X1584492&amp;xcust=tomshardware_us_2744399679391483400&amp;xs=1&amp;url=https%3A%2F%2Fdocs.aws.amazon.com%2Fvpc%2Flatest%2Fipam%2Fview-public-ip-insights.html&amp;sref=https%3A%2F%2Fwww.tomshardware.com%2Fnetworking%2Famazons-aws-new-charge-for-using-ipv4-is-expected-to-rake-in-up-to-dollar1b-per-year-change-should-speed-ipv6-adoption" data-url="https://docs.aws.amazon.com/vpc/latest/ipam/view-public-ip-insights.html" target="_blank" data-hl-processed="skimlinks" data-placeholder-url="https://go.redirectingat.com/?id=92X1584492&amp;xcust=hawk-custom-tracking&amp;xs=1&amp;url=https%3A%2F%2Fdocs.aws.amazon.com%2Fvpc%2Flatest%2Fipam%2Fview-public-ip-insights.html&amp;sref=https%3A%2F%2Fwww.tomshardware.com%2Fnetworking%2Famazons-aws-new-charge-for-using-ipv4-is-expected-to-rake-in-up-to-dollar1b-per-year-change-should-speed-ipv6-adoption" rel="sponsored noopener" referrerpolicy="no-referrer-when-downgrade" data-google-interstitial="false" data-merchant-name="SkimLinks - amazon.com" data-merchant-id="undefined" data-merchant-url="undefined" data-merchant-network="undefined">audit their IPv4 addresses</a>, check where IPv6 addresses might be useful (several references), and release unused IPs.</p><p>Border0 also offers IP management solutions, including a free tier, which can potentially help you lower your AWS bill. If this charge structure change might affect you or your organization, you can read more about Border0’s services via their blog link in the intro.</p>
</div>
<div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent-6ZEGfexp2Qcwdw3ydHqVx4"><section><p>Join the experts who read Tom's Hardware for the inside track on enthusiast PC tech news — and have for over 25 years. We'll send breaking news and in-depth reviews of CPUs, GPUs, AI, maker hardware and more straight to your inbox.</p></section></div>
<div id="slice-container-authorBio-6ZEGfexp2Qcwdw3ydHqVx4"><p>Mark Tyson is a Freelance News Writer at Tom's Hardware US. He enjoys covering the full breadth of PC tech; from business and semiconductor design to products approaching the edge of reason.</p></div>



<!-- Drop in a standard article here maybe? -->



</section>





<div id="slice-container-relatedArticles"><p><h5>Most Popular</h5></p></div>









</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Japan to introduce six-month residency visa for 'digital nomads' (224 pts)]]></title>
            <link>https://asia.nikkei.com/Spotlight/Japan-immigration/Japan-to-introduce-six-month-residency-visa-for-digital-nomads</link>
            <guid>39229070</guid>
            <pubDate>Fri, 02 Feb 2024 14:43:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://asia.nikkei.com/Spotlight/Japan-immigration/Japan-to-introduce-six-month-residency-visa-for-digital-nomads">https://asia.nikkei.com/Spotlight/Japan-immigration/Japan-to-introduce-six-month-residency-visa-for-digital-nomads</a>, See on <a href="https://news.ycombinator.com/item?id=39229070">Hacker News</a></p>
<div id="readability-page-1" class="page"><p><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:serif="http://www.serif.com/" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:svg="http://www.w3.org/2000/svg" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/"><defs><symbol viewBox="0 0 136 40" id="ic-app-store"><g fill="none"><path fill="#A6A6A6" d="M110.135 0H9.535c-.367 0-.73 0-1.095.002-.306.002-.61.008-.919.013C6.85.023 6.18.082 5.517.19c-.661.113-1.302.324-1.9.627-.599.306-1.145.704-1.62 1.18-.477.473-.875 1.02-1.178 1.62-.304.6-.514 1.24-.625 1.903-.111.662-.17 1.332-.179 2.002-.01.307-.01.615-.015.921V31.56c.005.31.006.61.015.921.008.671.068 1.34.18 2.002.11.663.32 1.306.624 1.905.303.598.701 1.143 1.179 1.614.473.477 1.02.875 1.618 1.179.599.304 1.24.517 1.901.63.663.11 1.333.168 2.004.177.31.007.613.011.919.011.366.002.728.002 1.095.002h116.6c.36 0 .724 0 1.084-.002.304 0 .617-.004.922-.01.67-.01 1.338-.068 2-.178.663-.114 1.307-.327 1.908-.63.598-.304 1.144-.702 1.617-1.179.476-.473.875-1.018 1.182-1.614.302-.6.51-1.242.619-1.905.111-.661.173-1.33.185-2.002.004-.31.004-.61.004-.921.008-.364.008-.725.008-1.094V17 9.536c0-.366 0-.73-.008-1.092 0-.306 0-.614-.004-.92-.012-.672-.074-1.34-.185-2.003-.109-.662-.318-1.303-.62-1.903-.617-1.203-1.595-2.182-2.798-2.8-.601-.302-1.245-.514-1.908-.627-.661-.11-1.33-.169-2-.176-.305-.005-.618-.011-.922-.013-.36-.002-.725-.002-1.084-.002h-16z"></path><path fill="#000" d="M8.445 39.125c-.305 0-.602-.004-.904-.01-.627-.009-1.251-.063-1.87-.164-.576-.1-1.134-.284-1.656-.548-.517-.261-.99-.605-1.397-1.016-.414-.407-.76-.879-1.02-1.397-.265-.521-.449-1.08-.544-1.657-.103-.62-.158-1.247-.166-1.875-.007-.21-.015-.913-.015-.913v-23.1s.009-.692.015-.895c.007-.628.063-1.253.165-1.872.096-.579.279-1.14.544-1.662.26-.518.603-.99 1.015-1.398.41-.412.884-.757 1.402-1.023.52-.263 1.078-.446 1.653-.544C6.287.95 6.915.895 7.543.887l.902-.012h118.769l.913.013c.623.007 1.244.061 1.858.162.581.099 1.145.284 1.671.548 1.038.535 1.883 1.381 2.415 2.42.26.52.441 1.076.535 1.649.104.624.162 1.255.174 1.887.003.283.003.588.003.89.008.375.008.732.008 1.092v20.929c0 .363 0 .718-.008 1.075 0 .325 0 .623-.004.93-.011.62-.069 1.24-.17 1.853-.094.581-.276 1.145-.54 1.67-.264.513-.607.98-1.016 1.386-.409.414-.881.759-1.4 1.022-.525.266-1.087.452-1.668.55-.618.101-1.243.156-1.869.163-.293.007-.6.011-.897.011l-1.084.002-117.69-.002z"></path><g fill="#FFF"><path d="M15.769 12.3c.022-1.696.911-3.263 2.356-4.151-.915-1.308-2.395-2.108-3.99-2.158-1.68-.176-3.308 1.005-4.164 1.005-.872 0-2.19-.988-3.608-.958-1.867.06-3.565 1.096-4.473 2.727-1.934 3.349-.491 8.27 1.361 10.977.927 1.325 2.01 2.805 3.428 2.753 1.387-.058 1.905-.885 3.58-.885 1.658 0 2.144.885 3.59.852 1.489-.025 2.426-1.332 3.32-2.67.667-.944 1.18-1.988 1.52-3.092-1.769-.748-2.918-2.48-2.92-4.4zM13.037 4.21c.812-.973 1.212-2.225 1.115-3.49-1.24.13-2.385.723-3.208 1.66-.812.924-1.223 2.133-1.144 3.361 1.257.013 2.45-.55 3.237-1.53z" transform="translate(17 8)"></path><g><path d="M8.302 10.14H3.57l-1.137 3.356H.427L4.911 1.078h2.083l4.483 12.418H9.438L8.302 10.14zM4.06 8.59h3.752l-1.85-5.446H5.91L4.06 8.59zM21.16 8.97c0 2.813-1.506 4.62-3.779 4.62-1.174.062-2.28-.553-2.848-1.583h-.043v4.484H12.63V4.442h1.8v1.506h.033c.593-1.024 1.7-1.638 2.883-1.6 2.298 0 3.813 1.816 3.813 4.622zm-1.91 0c0-1.833-.948-3.038-2.393-3.038-1.42 0-2.375 1.23-2.375 3.038 0 1.824.955 3.046 2.375 3.046 1.445 0 2.393-1.197 2.393-3.046zM31.125 8.97c0 2.813-1.506 4.62-3.779 4.62-1.174.062-2.28-.553-2.848-1.583h-.043v4.484h-1.859V4.442h1.799v1.506h.034c.593-1.024 1.7-1.638 2.883-1.6 2.298 0 3.813 1.816 3.813 4.622zm-1.91 0c0-1.833-.948-3.038-2.393-3.038-1.42 0-2.375 1.23-2.375 3.038 0 1.824.955 3.046 2.375 3.046 1.445 0 2.392-1.197 2.392-3.046zM37.71 10.036c.138 1.232 1.334 2.04 2.97 2.04 1.566 0 2.693-.808 2.693-1.919 0-.964-.68-1.54-2.29-1.936l-1.609-.388c-2.28-.55-3.339-1.617-3.339-3.348 0-2.142 1.867-3.614 4.519-3.614 2.624 0 4.423 1.472 4.483 3.614h-1.876c-.112-1.239-1.136-1.987-2.634-1.987-1.497 0-2.521.757-2.521 1.858 0 .878.654 1.395 2.255 1.79l1.368.336c2.548.603 3.606 1.626 3.606 3.443 0 2.323-1.85 3.778-4.794 3.778-2.753 0-4.613-1.42-4.733-3.667h1.902zM49.346 2.3v2.142h1.722v1.472h-1.722v4.991c0 .776.345 1.137 1.102 1.137.204-.004.408-.018.611-.043v1.463c-.34.063-.686.092-1.032.086-1.833 0-2.548-.689-2.548-2.445V5.914h-1.316V4.442h1.316V2.3h1.867zM52.065 8.97c0-2.849 1.678-4.639 4.294-4.639 2.625 0 4.295 1.79 4.295 4.639 0 2.856-1.661 4.638-4.295 4.638-2.633 0-4.294-1.782-4.294-4.638zm6.695 0c0-1.954-.895-3.108-2.401-3.108-1.506 0-2.4 1.162-2.4 3.108 0 1.962.894 3.106 2.4 3.106 1.506 0 2.401-1.144 2.401-3.106zM62.186 4.442h1.773v1.541h.043c.247-.992 1.156-1.674 2.177-1.635.214-.001.428.022.637.069v1.738c-.27-.082-.552-.12-.835-.112-.546-.022-1.075.196-1.447.596-.373.4-.551.944-.49 1.487v5.37h-1.858V4.442zM75.384 10.837c-.25 1.643-1.85 2.771-3.898 2.771-2.634 0-4.269-1.764-4.269-4.595 0-2.84 1.644-4.682 4.19-4.682 2.506 0 4.08 1.72 4.08 4.466v.637h-6.394v.112c-.06.674.173 1.341.64 1.832.465.49 1.12.757 1.796.732.902.085 1.752-.433 2.09-1.273h1.765zm-6.282-2.702h4.526c.034-.606-.186-1.198-.608-1.634-.421-.437-1.006-.677-1.612-.664-.612-.004-1.199.237-1.632.668-.433.432-.676 1.019-.674 1.63z" transform="translate(17 8) translate(25 9)"></path></g></g><g fill="#FFF"><path d="M2.826.731c.79-.057 1.562.244 2.106.818.544.574.801 1.362.702 2.147 0 1.906-1.03 3.002-2.808 3.002H.671V.73h2.155zM1.598 5.854h1.125c.563.034 1.112-.188 1.494-.605.382-.416.556-.982.473-1.541.077-.556-.1-1.118-.48-1.53-.381-.414-.927-.635-1.487-.604H1.598v4.28zM6.68 4.444c-.077-.807.31-1.588 1-2.015.688-.428 1.56-.428 2.249 0 .689.427 1.076 1.208.999 2.015.078.808-.308 1.591-.998 2.02-.69.428-1.562.428-2.252 0-.69-.429-1.076-1.212-.997-2.02zm3.334 0c0-.976-.439-1.547-1.208-1.547-.773 0-1.207.571-1.207 1.547 0 .984.434 1.55 1.207 1.55.77 0 1.208-.57 1.208-1.55zM16.573 6.698L15.651 6.698 14.721 3.381 14.65 3.381 13.724 6.698 12.811 6.698 11.569 2.195 12.471 2.195 13.277 5.631 13.344 5.631 14.27 2.195 15.122 2.195 16.048 5.631 16.118 5.631 16.921 2.195 17.81 2.195zM18.854 2.195h.855v.715h.066c.231-.527.771-.849 1.344-.802.444-.033.879.137 1.182.463.303.325.442.771.377 1.212v2.915h-.889V4.006c0-.724-.314-1.084-.972-1.084-.3-.014-.593.104-.8.324-.206.22-.307.518-.275.817v2.635h-.888V2.195zM24.094.437L24.982.437 24.982 6.698 24.094 6.698zM26.218 4.444c-.077-.807.31-1.588.999-2.015.689-.428 1.56-.428 2.25 0 .688.427 1.076 1.208.998 2.015.079.808-.308 1.591-.997 2.02-.69.428-1.563.428-2.252 0-.69-.429-1.077-1.212-.998-2.02zm3.333 0c0-.976-.439-1.547-1.208-1.547-.773 0-1.207.571-1.207 1.547 0 .984.434 1.55 1.207 1.55.77 0 1.208-.57 1.208-1.55zM31.4 5.424c0-.81.604-1.278 1.676-1.344l1.22-.07V3.62c0-.475-.315-.744-.922-.744-.497 0-.84.182-.939.5h-.86c.09-.773.818-1.27 1.84-1.27 1.128 0 1.765.563 1.765 1.514v3.077h-.855v-.633h-.07c-.291.462-.808.732-1.353.707-.382.04-.764-.084-1.05-.34-.286-.258-.45-.623-.451-1.008zm2.895-.384v-.377l-1.1.07c-.62.042-.9.253-.9.65 0 .405.351.64.834.64.287.03.572-.059.792-.244.22-.186.355-.452.374-.74zM36.348 4.444c0-1.423.732-2.324 1.87-2.324.574-.026 1.112.281 1.38.79h.067V.437h.888v6.26h-.851v-.71h-.07c-.29.504-.834.806-1.415.785-1.145 0-1.869-.901-1.869-2.328zm.918 0c0 .955.45 1.53 1.203 1.53.75 0 1.212-.583 1.212-1.526 0-.938-.468-1.53-1.212-1.53-.748 0-1.203.58-1.203 1.526zM44.23 4.444c-.077-.807.31-1.588.999-2.015.689-.428 1.56-.428 2.25 0 .688.427 1.075 1.208.998 2.015.079.808-.308 1.591-.997 2.02-.69.428-1.563.428-2.252 0-.69-.429-1.077-1.212-.998-2.02zm3.333 0c0-.976-.438-1.547-1.208-1.547-.772 0-1.207.571-1.207 1.547 0 .984.435 1.55 1.207 1.55.77 0 1.208-.57 1.208-1.55zM49.67 2.195h.855v.715h.066c.231-.527.77-.849 1.344-.802.444-.033.879.137 1.182.463.303.325.442.771.377 1.212v2.915h-.889V4.006c0-.724-.314-1.084-.972-1.084-.3-.014-.593.104-.8.324-.206.22-.307.518-.275.817v2.635h-.889V2.195zM58.515 1.074v1.141h.976v.749h-.976v2.315c0 .472.194.679.637.679.113 0 .226-.008.339-.021v.74c-.16.029-.322.044-.484.046-.988 0-1.381-.348-1.381-1.216V2.964h-.715v-.749h.715V1.074h.89zM60.705.437h.88v2.481h.07c.243-.53.792-.853 1.374-.806.441-.024.87.15 1.17.474.3.325.44.767.38 1.205v2.907h-.889V4.01c0-.72-.335-1.084-.963-1.084-.31-.025-.614.087-.832.307-.219.22-.33.526-.302.835v2.63h-.888V.437zM69.761 5.482c-.249.85-1.07 1.398-1.95 1.303-.601.016-1.178-.233-1.579-.68-.4-.449-.584-1.05-.502-1.645-.08-.596.103-1.198.501-1.65.399-.45.973-.707 1.575-.702 1.253 0 2.009.856 2.009 2.27v.31h-3.18v.05c-.028.334.086.664.315.91.228.246.55.384.884.38.435.052.858-.164 1.072-.546h.855zM66.635 4.03h2.275c.022-.306-.085-.607-.296-.829-.211-.222-.506-.345-.813-.338-.31-.004-.61.118-.829.338-.22.22-.34.518-.337.829z" transform="translate(43 8)"></path></g></g></symbol><symbol viewBox="0 0 100 100" id="ic-asia-daily-briefing"><g fill="none" fill-rule="evenodd"><path stroke="#FFF" stroke-linejoin="round" stroke-width="4" d="M95 35.938L5 35.938"></path><path stroke="#FFF" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M13.438 13h73.124C91.222 13 95 16.778 95 21.438v65.124C95 91.222 91.222 95 86.562 95H13.439C8.777 95 5 91.222 5 86.562V21.439C5 16.777 8.778 13 13.438 13zM24 5L24 22.25M76 5L76 22.25"></path><path fill="#FFF" fill-rule="nonzero" d="M38.187 74.43l6.921-.716c.198 1.566.783 2.806 1.755 3.72.973.915 2.093 1.372 3.362 1.372 1.45 0 2.678-.589 3.683-1.767 1.006-1.179 1.508-2.954 1.508-5.327 0-2.225-.498-3.894-1.495-5.006-.997-1.112-2.295-1.668-3.894-1.668-1.994 0-3.782.881-5.364 2.644l-5.636-.815 3.56-18.861h18.366v6.501h-13.1l-1.088 6.155c1.549-.774 3.13-1.162 4.746-1.162 3.081 0 5.693 1.121 7.836 3.362 2.142 2.241 3.213 5.15 3.213 8.726 0 2.983-.865 5.644-2.595 7.984-2.357 3.197-5.628 4.796-9.814 4.796-3.345 0-6.073-.898-8.182-2.694-2.11-1.797-3.37-4.21-3.782-7.243z"></path></g></symbol><symbol viewBox="0 0 48 48" id="ic-book"><g fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"><g stroke="#000" stroke-width="2.043"><path d="M22.979 5.362L22.979 26.043M41.362 4.596L45.957 4.596 45.957 41.362 0 41.362 0 4.596 4.596 4.596" transform="translate(-332 -711) translate(20 536) translate(63 154) translate(190) translate(59 21) translate(1.021 3.574)"></path><path d="M22.979 5.362C17.809 1.468 10.979 0 4.596 0v31.404c6.382 0 13.213 1.469 18.383 5.362 5.17-3.893 12-5.362 18.383-5.362V0c-6.383 0-13.213 1.468-18.383 5.362z" transform="translate(-332 -711) translate(20 536) translate(63 154) translate(190) translate(59 21) translate(1.021 3.574)"></path></g></g></symbol><symbol viewBox="0 0 13 13" id="ic-clock-grey"><g fill="#333" fill-rule="nonzero"><path d="M6.5 0a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13zm0 1a5.5 5.5 0 1 0 0 11 5.5 5.5 0 0 0 0-11z"></path><path d="M7 3H6v4h4v-.976L7 6z"></path></g></symbol><symbol viewBox="0 0 13 13" id="ic-clock-red"><g fill="#ED1C24" fill-rule="nonzero"><path d="M6.5 0a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13zm0 1a5.5 5.5 0 1 0 0 11 5.5 5.5 0 0 0 0-11z"></path><path d="M7 3H6v4h4v-.976L7 6z"></path></g></symbol><symbol viewBox="0 0 13 13" id="ic-clock-white"><g fill="#FFFFFF" fill-rule="nonzero"><path d="M6.5 0a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13zm0 1a5.5 5.5 0 1 0 0 11 5.5 5.5 0 0 0 0-11z"></path><path d="M7 3H6v4h4v-.976L7 6z"></path></g></symbol><symbol viewBox="0 0 48 48" id="ic-cup"><g fill="none" fill-rule="evenodd"><g fill="#000" fill-rule="nonzero"><path d="M45.491 5.372h-6.838V.98c0-.541-.437-.98-.977-.98H10.324c-.54 0-.977.439-.977.98v4.392H2.509c-.54 0-.977.439-.977.98v4.902c.005 4.756 3.414 8.82 8.083 9.634 1.029 5.372 4.942 9.727 10.159 11.308l-1.391 5.591H15.83c-.798 0-1.747.896-2.044 1.64L11.44 45.31c-.24.604-.168 1.289.196 1.828.363.539.969.862 1.617.862h21.492c.648 0 1.254-.323 1.617-.862.364-.54.437-1.224.196-1.828l-2.345-5.883c-.297-.744-1.246-1.64-2.044-1.64h-2.553l-1.393-5.59c5.217-1.583 9.13-5.938 10.16-11.309 4.668-.813 8.079-4.878 8.084-9.634V6.352c0-.541-.437-.98-.977-.98zM9.347 18.85c-3.448-.899-5.857-4.02-5.861-7.597V7.333h5.86V18.85zm25.376 27.106H13.277l2.553-6.127h16.34l2.553 6.127zm-7.149-8.17h-7.148l1.255-5.16c.767.128 1.542.193 2.319.197.777-.004 1.552-.07 2.32-.196l1.254 5.16zM24 30.863c-7.01-.008-12.692-5.71-12.7-12.746V1.961h25.4v16.156c-.008 7.036-5.69 12.738-12.7 12.746zm20.514-19.609c-.004 3.576-2.413 6.698-5.86 7.597V7.333h5.86v3.921z" transform="translate(-522 -711) translate(20 536) translate(63 154) translate(380) translate(59 21)"></path></g></g></symbol><symbol viewBox="0 0 100 100" id="ic-editors-picks"><g fill="none" fill-rule="evenodd"><path stroke="#FFF" stroke-width="4" d="M54 21h34.71c2.922 0 5.29 2.363 5.29 5.279v63.475c0 2.915-2.368 5.278-5.29 5.278H19.29c-2.922 0-5.29-2.363-5.29-5.278v-41.9"></path><path stroke="#FFF" stroke-linejoin="round" stroke-width="4" d="M13.273 5h33.454C50.744 5 54 8.256 54 12.273v27.564c0 4.016-3.256 7.273-7.273 7.273H40.91h0L30 58 19.09 47.11h-5.817C9.256 47.11 6 43.853 6 39.837V12.273C6 8.256 9.256 5 13.273 5z"></path><rect width="44" height="4" x="38" y="63" fill="#FFF" rx="2"></rect><rect width="26" height="4" x="56" y="50" fill="#FFF" rx="2"></rect><rect width="58" height="4" x="24" y="76" fill="#FFF" rx="2"></rect><path fill="#FFF" d="M30 30.557L24.122 33.647 25.245 27.102 20.489 22.467 27.061 21.512 30 15.557 32.939 21.512 39.511 22.467 34.755 27.102 35.878 33.647z"></path></g></symbol><symbol viewBox="0 0 13 13" id="ic-globe-grey"><path fill="#333" fill-rule="nonzero" d="M6.691 0c-.019 0-.037.006-.056.007C6.59.006 6.546 0 6.5 0a6.5 6.5 0 1 0 0 13c.046 0 .09-.006.135-.007.02.001.037.007.056.007.045-.003.09-.008.134-.016a6.491 6.491 0 0 0 0-12.968A1.118 1.118 0 0 0 6.691 0zm5.525 6.118H9.36A10.35 10.35 0 0 0 8.113 1a5.74 5.74 0 0 1 4.103 5.118zm-5.567 6.11c-.731-.077-1.782-2.174-1.862-5.345h3.808c-.079 3.124-1.1 5.205-1.83 5.339-.038.002-.077.005-.116.006zm-1.862-6.11C4.867 2.946 5.917.848 6.65.772c.04.001.078.004.117.006.73.135 1.75 2.215 1.829 5.34H4.787zM5.35.88a10.056 10.056 0 0 0-1.328 5.237H.784A5.742 5.742 0 0 1 5.35.88zM.784 6.882h3.238A10.056 10.056 0 0 0 5.35 12.12 5.742 5.742 0 0 1 .784 6.882zM8.113 12A10.35 10.35 0 0 0 9.36 6.882h2.856A5.74 5.74 0 0 1 8.113 12z"></path></symbol><symbol viewBox="0 0 13 13" id="ic-globe-white"><path fill="#FFF" fill-rule="nonzero" d="M6.691 0c-.019 0-.037.006-.056.007C6.59.006 6.546 0 6.5 0a6.5 6.5 0 1 0 0 13c.046 0 .09-.006.135-.007.02.001.037.007.056.007.045-.003.09-.008.134-.016a6.491 6.491 0 0 0 0-12.968A1.118 1.118 0 0 0 6.691 0zm5.525 6.118H9.36A10.35 10.35 0 0 0 8.113 1a5.74 5.74 0 0 1 4.103 5.118zm-5.567 6.11c-.731-.077-1.782-2.174-1.862-5.345h3.808c-.079 3.124-1.1 5.205-1.83 5.339-.038.002-.077.005-.116.006zm-1.862-6.11C4.867 2.946 5.917.848 6.65.772c.04.001.078.004.117.006.73.135 1.75 2.215 1.829 5.34H4.787zM5.35.88a10.056 10.056 0 0 0-1.328 5.237H.784A5.742 5.742 0 0 1 5.35.88zM.784 6.882h3.238A10.056 10.056 0 0 0 5.35 12.12 5.742 5.742 0 0 1 .784 6.882zM8.113 12A10.35 10.35 0 0 0 9.36 6.882h2.856A5.74 5.74 0 0 1 8.113 12z"></path></symbol><symbol viewBox="0 0 135 40" id="ic-google-play"><defs></defs><g fill="none"><path fill="#000" d="M130 40H5c-2.75 0-5-2.25-5-5V5c0-2.75 2.25-5 5-5h125c2.75 0 5 2.25 5 5v30c0 2.75-2.25 5-5 5z"></path><path fill="#A6A6A6" d="M130 .8c2.32 0 4.2 1.88 4.2 4.2v30c0 2.32-1.88 4.2-4.2 4.2H5C2.68 39.2.8 37.32.8 35V5C.8 2.68 2.68.8 5 .8h125m0-.8H5C2.25 0 0 2.25 0 5v30c0 2.75 2.25 5 5 5h125c2.75 0 5-2.25 5-5V5c0-2.75-2.25-5-5-5z"></path><g fill="#FFF" stroke="#FFF" stroke-width=".2"><path d="M6.42 4.24c0 .84-.25 1.51-.75 2-.56.59-1.3.89-2.2.89-.87 0-1.6-.3-2.21-.9C.65 5.63.35 4.88.35 4c0-.89.3-1.63.91-2.23.61-.6 1.34-.9 2.21-.9.43 0 .84.08 1.23.25.39.17.7.39.94.67l-.53.53c-.4-.47-.94-.71-1.64-.71-.63 0-1.18.22-1.64.67-.46.44-.69 1.02-.69 1.73s.23 1.29.69 1.73c.46.44 1.01.67 1.64.67.67 0 1.23-.22 1.68-.67.29-.29.46-.7.5-1.22H3.47V3.8h2.91c.02.15.04.3.04.44zM11.03 1.74L8.3 1.74 8.3 3.64 10.76 3.64 10.76 4.36 8.3 4.36 8.3 6.26 11.03 6.26 11.03 7 7.53 7 7.53 1 11.03 1 11.03 1.74zM14.28 7L13.51 7 13.51 1.74 11.83 1.74 11.83 1 15.95 1 15.95 1.74 14.27 1.74 14.27 7zM18.94 7L18.94 1 19.71 1 19.71 7zM23.13 7L22.36 7 22.36 1.74 20.68 1.74 20.68 1 24.8 1 24.8 1.74 23.12 1.74 23.12 7zM32.61 6.22c-.59.61-1.32.91-2.2.91-.88 0-1.61-.3-2.2-.91-.59-.61-.88-1.35-.88-2.22 0-.87.29-1.62.88-2.22.59-.61 1.32-.91 2.2-.91.87 0 1.6.3 2.2.91.59.61.89 1.35.89 2.22-.01.88-.3 1.62-.89 2.22zm-3.83-.5c.44.45.99.67 1.63.67.64 0 1.19-.22 1.63-.67.44-.45.67-1.02.67-1.72s-.22-1.27-.67-1.72c-.44-.45-.99-.67-1.63-.67-.64 0-1.19.22-1.63.67-.44.45-.67 1.02-.67 1.72s.23 1.27.67 1.72zM34.58 7L34.58 1 35.52 1 38.44 5.67 38.47 5.67 38.44 4.51 38.44 1 39.21 1 39.21 7 38.41 7 35.36 2.11 35.33 2.11 35.36 3.27 35.36 7z" transform="translate(41 6)"></path></g><path fill="#FFF" d="M68.14 21.75c-2.35 0-4.27 1.79-4.27 4.25 0 2.45 1.92 4.25 4.27 4.25 2.35 0 4.27-1.8 4.27-4.25 0-2.46-1.92-4.25-4.27-4.25zm0 6.83c-1.29 0-2.4-1.06-2.4-2.58 0-1.53 1.11-2.58 2.4-2.58 1.29 0 2.4 1.05 2.4 2.58 0 1.52-1.12 2.58-2.4 2.58zm-9.32-6.83c-2.35 0-4.27 1.79-4.27 4.25 0 2.45 1.92 4.25 4.27 4.25 2.35 0 4.27-1.8 4.27-4.25 0-2.46-1.92-4.25-4.27-4.25zm0 6.83c-1.29 0-2.4-1.06-2.4-2.58 0-1.53 1.11-2.58 2.4-2.58 1.29 0 2.4 1.05 2.4 2.58 0 1.52-1.11 2.58-2.4 2.58zm-11.08-5.52v1.8h4.32c-.13 1.01-.47 1.76-.98 2.27-.63.63-1.61 1.32-3.33 1.32-2.66 0-4.74-2.14-4.74-4.8 0-2.66 2.08-4.8 4.74-4.8 1.43 0 2.48.56 3.25 1.29l1.27-1.27c-1.08-1.03-2.51-1.82-4.53-1.82-3.64 0-6.7 2.96-6.7 6.61 0 3.64 3.06 6.61 6.7 6.61 1.97 0 3.45-.64 4.61-1.85 1.19-1.19 1.56-2.87 1.56-4.22 0-.42-.03-.81-.1-1.13h-6.07v-.01zm45.31 1.4c-.35-.95-1.43-2.71-3.64-2.71-2.19 0-4.01 1.72-4.01 4.25 0 2.38 1.8 4.25 4.22 4.25 1.95 0 3.08-1.19 3.54-1.88l-1.45-.97c-.48.71-1.14 1.18-2.09 1.18s-1.63-.44-2.06-1.29l5.69-2.35-.2-.48zm-5.8 1.42c-.05-1.64 1.27-2.48 2.22-2.48.74 0 1.37.37 1.58.9l-3.8 1.58zM82.63 30h1.87V17.5h-1.87V30zm-3.06-7.3h-.07c-.42-.5-1.22-.95-2.24-.95-2.13 0-4.08 1.87-4.08 4.27 0 2.38 1.95 4.24 4.08 4.24 1.01 0 1.82-.45 2.24-.97h.06v.61c0 1.63-.87 2.5-2.27 2.5-1.14 0-1.85-.82-2.14-1.51l-1.63.68c.47 1.13 1.71 2.51 3.77 2.51 2.19 0 4.04-1.29 4.04-4.43v-7.64h-1.77v.69h.01zm-2.15 5.88c-1.29 0-2.37-1.08-2.37-2.56 0-1.5 1.08-2.59 2.37-2.59 1.27 0 2.27 1.1 2.27 2.59.01 1.48-.99 2.56-2.27 2.56zm24.39-11.08h-4.47V30h1.87v-4.74h2.61c2.07 0 4.1-1.5 4.1-3.88s-2.05-3.88-4.11-3.88zm.04 6.02H99.2v-4.29h2.65c1.4 0 2.19 1.16 2.19 2.14 0 .98-.79 2.15-2.19 2.15zm11.54-1.79c-1.35 0-2.75.6-3.33 1.91l1.66.69c.35-.69 1.01-.92 1.7-.92.96 0 1.95.58 1.96 1.61v.13c-.34-.19-1.06-.48-1.95-.48-1.79 0-3.6.98-3.6 2.81 0 1.67 1.46 2.75 3.1 2.75 1.25 0 1.95-.56 2.38-1.22h.06v.97h1.8v-4.79c.01-2.22-1.65-3.46-3.78-3.46zm-.23 6.85c-.61 0-1.46-.31-1.46-1.06 0-.96 1.06-1.33 1.98-1.33.82 0 1.21.18 1.7.42-.14 1.15-1.14 1.97-2.22 1.97zM123.74 22l-2.14 5.42h-.06L119.32 22h-2.01l3.33 7.58-1.9 4.21h1.95L125.82 22h-2.08zm-16.8 8h1.87V17.5h-1.87V30z"></path><g><path fill="url(#ic-google-play_prefix__a)" d="M1.44.54c-.29.31-.46.79-.46 1.4v22.12c0 .62.17 1.1.46 1.4l.07.07L13.9 13.15v-.3L1.51.47l-.07.07z" transform="translate(9 7)"></path><path fill="url(#ic-google-play_prefix__b)" d="M18.03 17.28l-4.13-4.13v-.3l4.13-4.13.09.05 4.89 2.78c1.4.79 1.4 2.09 0 2.89l-4.89 2.78-.09.06z" transform="translate(9 7)"></path><path fill="url(#ic-google-play_prefix__c)" d="M18.12 17.22L13.9 13 1.44 25.46c.46.49 1.22.55 2.08.06l14.6-8.3" transform="translate(9 7)"></path><path fill="url(#ic-google-play_prefix__d)" d="M18.12 8.78L3.51.48C2.65-.01 1.89.05 1.43.54L13.9 13l4.22-4.22z" transform="translate(9 7)"></path><g fill="#000"><path d="M18.03.13L3.51 8.38c-.81.46-1.54.43-2 .01l-.07.07.07.07c.47.42 1.19.45 2-.01L18.12.22l-.09-.09z" opacity=".2" transform="translate(9 7) translate(0 17)"></path><path d="M1.44 8.32c-.29-.31-.46-.79-.46-1.4v.15c0 .62.17 1.1.46 1.4l.07-.07-.07-.08z" opacity=".12" transform="translate(9 7) translate(0 17)"></path></g><path fill="#000" d="M23.01 14.3l-4.99 2.83.09.09L23 14.44c.7-.4 1.05-.92 1.05-1.44-.05.47-.4.94-1.04 1.3z" opacity=".12" transform="translate(9 7)"></path><path fill="#FFF" d="M3.51.62l19.5 11.08c.63.36.99.82 1.05 1.3 0-.52-.35-1.05-1.05-1.44L3.51.48C2.11-.31.97.35.97 1.95v.15C.97.49 2.12-.17 3.51.62z" opacity=".25" transform="translate(9 7)"></path></g></g></symbol><linearGradient id="ic-google-play_prefix__a" x1="61.027%" x2="26.5%" y1="4.947%" y2="71.916%"><stop offset="0%" stop-color="#00A0FF"></stop><stop offset=".657%" stop-color="#00A1FF"></stop><stop offset="26.01%" stop-color="#00BEFF"></stop><stop offset="51.22%" stop-color="#00D2FF"></stop><stop offset="76.04%" stop-color="#00DFFF"></stop><stop offset="100%" stop-color="#00E3FF"></stop></linearGradient><linearGradient id="ic-google-play_prefix__b" x1="107.622%" x2="-130.536%" y1="50.016%" y2="50.016%"><stop offset="0%" stop-color="#FFE000"></stop><stop offset="40.87%" stop-color="#FFBD00"></stop><stop offset="77.54%" stop-color="orange"></stop><stop offset="100%" stop-color="#FF9C00"></stop></linearGradient><linearGradient id="ic-google-play_prefix__c" x1="86.253%" x2="-50.188%" y1="30.897%" y2="136.081%"><stop offset="0%" stop-color="#FF3A44"></stop><stop offset="100%" stop-color="#C31162"></stop></linearGradient><linearGradient id="ic-google-play_prefix__d" x1="-18.77%" x2="42.12%" y1="-11.832%" y2="35.081%"><stop offset="0%" stop-color="#32A071"></stop><stop offset="6.85%" stop-color="#2DA771"></stop><stop offset="47.62%" stop-color="#15CF74"></stop><stop offset="80.09%" stop-color="#06E775"></stop><stop offset="100%" stop-color="#00F076"></stop></linearGradient><symbol viewBox="0 0 100 100" id="ic-japan-update"><g fill="none" fill-rule="evenodd" stroke="#FFF" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M50 61c4.4-2.872 8.8-7.18 13.2-12.923C67.6 42.333 70.533 37.307 72 33M98 61c-4.4-2.872-8.8-7.18-13.2-12.923C80.4 42.333 77.467 37.307 76 33"></path><path d="M37.956 22H6.044c-1.117 0-2.128.453-2.86 1.184C2.453 23.916 2 24.927 2 26.044v42.912c0 1.117.453 2.128 1.184 2.86.732.731 1.743 1.184 2.86 1.184h31.912c1.117 0 2.128-.453 2.86-1.184.731-.732 1.184-1.743 1.184-2.86V26.044c0-1.117-.453-2.128-1.184-2.86-.732-.731-1.743-1.184-2.86-1.184z"></path><path stroke-linecap="round" stroke-linejoin="round" d="M2 47L40 47M50 33L98 33M74 17L74 77M62 64L86 64"></path></g></symbol><symbol viewBox="0 0 100 100" id="ic-life-arts-monthly"><g fill="none" fill-rule="evenodd"><path fill="#FFF" d="M60 82h38c1.105 0 2 .895 2 2s-.895 2-2 2H60c-1.105 0-2-.895-2-2s.895-2 2-2zM76 69h22c1.105 0 2 .895 2 2s-.895 2-2 2H76c-1.105 0-2-.895-2-2s.895-2 2-2zM2 94h96c1.105 0 2 .895 2 2s-.895 2-2 2H2c-1.105 0-2-.895-2-2s.895-2 2-2z"></path><path stroke="#FFF" stroke-linecap="square" stroke-width="4" d="M32.857 25.676C48.197 10.322 87 4 87 4s-5.414 26.45-14.051 43.351L61.733 43.74l3.61 14.45c-17.79 17.805-38.416 5.935-38.416 5.935s-11.99-20.514 5.93-38.448zM41.501 49L5.349 85.848"></path></g></symbol><symbol viewBox="0 0 100 100" id="ic-nikkei-asian-preview"><g fill="none" fill-rule="evenodd"><circle cx="40" cy="44" r="2" fill="#FFF"></circle><circle cx="40" cy="31" r="2" fill="#FFF"></circle><circle cx="40" cy="57" r="2" fill="#FFF"></circle><circle cx="40" cy="70" r="2" fill="#FFF"></circle><path stroke="#FFF" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 93c-5.523 0-10-4.638-10-10.161V43h11M28 14v69h0c0 5.523-4.477 10-10 10h65.484C89.007 93 93 88.523 93 83V14c0-2.761-2.239-5-5-5H33c-2.761 0-5 2.239-5 5zM48 57L81 57M48 70L81 70M48 44L81 44M48 31L81 31"></path></g></symbol><symbol viewBox="0 0 100 100" id="ic-picks-of-opinion"><path fill="none" fill-rule="evenodd" stroke="#F2CFA8" stroke-width="4" d="M80.676 47.178c1.51-4.817 1.735-10.173.64-15.166-.878-4.009-2.607-7.784-5.021-11.095-2.415-3.311-5.514-6.16-9.123-8.316-3.608-2.157-7.724-3.623-11.92-4.249-4.193-.625-8.466-.411-12.538.592-3.071.757-6.028 1.963-8.731 3.567-2.703 1.605-5.152 3.607-7.236 5.91-2.762 3.053-4.885 6.634-6.194 10.527-1.309 3.892-1.805 8.096-1.433 12.172.374 4.077 1.615 8.028 3.595 11.597 1.98 3.57 4.697 6.758 8.014 9.32 4.132 3.19 9.194 5.408 14.336 6.277-.424 2.174-.997 4.32-1.72 6.44-1.448 4.237-3.444 8.22-5.99 11.946-1.273 1.863-2.662 3.63-4.165 5.3 5.508-1.582 10.839-3.82 15.807-6.64s9.574-6.222 13.69-10.106c4.115-3.885 7.74-8.252 10.769-12.98 3.03-4.73 5.463-9.82 7.22-15.096"></path></symbol><symbol viewBox="0 0 100 100" id="ic-tech-scroll-asia"><g fill="none" fill-rule="evenodd"><path stroke="#FFF" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 95c-5.523 0-10-4.638-10-10.161V45h20"></path><path stroke="#FFF" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M28 10v75h0c0 5.523-4.477 10-10 10h66c5.523 0 9-4.477 9-10V10c0-2.761-2.239-5-5-5H33c-2.761 0-5 2.239-5 5z"></path><path fill="#FFF" fill-rule="nonzero" d="M54.767 53.233l-4.452-4.453c.619-2.225-.34-4.587-2.335-5.751-1.994-1.164-4.523-.837-6.156.795-1.632 1.633-1.96 4.162-.795 6.156 1.164 1.995 3.526 2.954 5.751 2.335l3.72 3.72V62.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V55c0-.663-.264-1.299-.733-1.767z"></path><path fill="#FFF" fill-rule="nonzero" d="M73 30c.011-2.43-1.726-4.515-4.117-4.944-2.391-.43-4.744.923-5.579 3.204-.834 2.282.092 4.833 2.196 6.047v4.658l-5 5-5-5v-4.658c1.96-1.131 2.915-3.438 2.33-5.624-.586-2.186-2.567-3.706-4.83-3.706s-4.244 1.52-4.83 3.706c-.585 2.186.37 4.493 2.33 5.624V40c0 .663.264 1.299.733 1.767L58 48.535V62.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V48.535l6.767-6.767c.47-.47.733-1.105.733-1.768v-5.693c1.542-.886 2.495-2.528 2.5-4.307z"></path><path fill="#FFF" fill-rule="nonzero" d="M75.5 42.5c-1.558-.019-3.033.698-3.98 1.934-.948 1.236-1.258 2.847-.835 4.346l-4.453 4.453c-.468.468-.732 1.104-.732 1.767v7.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5v-6.465l3.72-3.72c1.885.527 3.905-.095 5.167-1.59 1.263-1.497 1.536-3.592.7-5.362-.837-1.77-2.63-2.889-4.587-2.863z"></path></g></symbol><symbol viewBox="0 0 60 60" id="ic-white-circle-tick"><g fill="none" fill-rule="evenodd"><circle cx="30" cy="30" r="30" fill="#FFF"></circle><path fill="#0076BF" d="M43.176 22.476L27.02 39.224c-.312.332-.832.353-1.17.048l-8.967-8.416c-.228-.2-.33-.505-.269-.801.062-.296.278-.536.567-.627.288-.092.603-.021.824.185l8.358 7.866 15.594-16.152c.206-.217.511-.31.803-.24.291.068.524.287.61.573.086.287.013.598-.192.816z"></path></g></symbol><symbol viewBox="0 0 48 48" id="ic-world"><g fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"><g stroke="#000" stroke-width="2.043"><g transform="translate(-142 -711) translate(20 536) translate(63 154) translate(59 21) translate(1.021 1.021)"><path d="M5.821 7.66c4.213 5.591 9.575 7.66 17.158 7.66 7.506 0 12.944-2.069 17.157-7.66M5.821 38.298c4.213-5.592 9.575-7.66 17.158-7.66 7.506 0 12.944 2.068 17.157 7.66"></path><path d="M22.979 45.957c8.119-3.906 12.255-12.714 12.255-22.978 0-10.264-4.136-19.073-12.255-22.979"></path><path d="M22.979 45.957c-8.12-3.906-12.256-12.714-12.256-22.978C10.723 12.715 14.86 3.906 22.98 0M22.979 45.957L22.979 43.915 22.979 2.043 22.979 0M0 22.979L45.957 22.979"></path><circle cx="22.979" cy="22.979" r="22.979"></circle></g></g></g></symbol><symbol viewBox="0 0 30 30" id="icon--arrow"><title>Arrow</title><g><polygon points="14.75058364868164,0 1,13.718574523925781 4.535178184509277,17.277755737304688 12.255751609802246,9.557186126708984 12.255751609802246,30 17.2434139251709,30 17.2434139251709,9.557186126708984 24.967988967895508,17.277755737304688 28.49916648864746,13.718574523925781 " id="icon--arrow_arrow-stem"></polygon></g></symbol><symbol viewBox="0 0 15 15" id="icon--arrow-up"><path fill-rule="evenodd" d="M1.913 11.288L7.5 5.701l5.587 5.587 1.326-1.326L7.5 3.125.587 9.962z"></path></symbol><symbol viewBox="0 0 370 81" id="icon--asia300-logo"><!-- Generator: Sketch 48.2 (47327) - http://www.bohemiancoding.com/sketch --><title>Artboard</title><desc>Created with Sketch.</desc><defs></defs><g id="icon--asia300-logo_Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="icon--asia300-logo_Artboard" fill-rule="nonzero"><g id="icon--asia300-logo_2018_A300logo_white"><g id="icon--asia300-logo_Shape" transform="translate(207.000000, 8.000000)" fill="#FFFFFF"><path d="M0.8,67.1 L0.8,58.2 L1.2,58 C7,62.1 12,64.5 20.5,64.5 C29.9,64.5 34.5,59.2 34.5,52.1 C34.5,44.8 30.4,39.2 19,39.2 L11.6,39.2 L11.6,31.2 L18.2,31.2 C29,31.2 32,25.6 32,19.5 C32,12.4 27.6,8.7 19.4,8.7 C11.8,8.7 8.4,10.3 2.8,13.8 L2.4,13.6 L2.4,5.3 C6.9,2.6 11.5,0.9 19.7,0.9 C31.3,0.9 40.8,6.5 40.8,19.4 C40.8,26.8 36.4,32.1 30,34.7 C38.1,37 43.5,42.4 43.5,51.5 C43.5,64.5 34.4,72.4 20.8,72.4 C10.8,72.5 5.2,69.7 0.8,67.1 Z"></path><path d="M49.7,36.5 C49.7,14.4 60.5,1 76.3,1 C92.1,1 102.8,14.4 102.8,36.5 C102.8,58.6 92.1,72.5 76.3,72.5 C60.5,72.5 49.7,58.5 49.7,36.5 Z M93.4,36.5 C93.4,17.6 86.6,8.9 76.4,8.9 C66.2,8.9 59.3,17.7 59.3,36.5 C59.3,55.3 66.3,64.6 76.4,64.6 C86.6,64.6 93.4,55.3 93.4,36.5 Z"></path><path d="M109.2,36.5 C109.2,14.4 120,1 135.8,1 C151.6,1 162.3,14.4 162.3,36.5 C162.3,58.6 151.6,72.5 135.8,72.5 C120,72.5 109.2,58.5 109.2,36.5 Z M152.9,36.5 C152.9,17.6 146.1,8.9 135.9,8.9 C125.7,8.9 118.8,17.7 118.8,36.5 C118.8,55.3 125.8,64.6 135.9,64.6 C146.1,64.6 152.9,55.3 152.9,36.5 Z"></path></g><path d="M82.9,39 C82.9,39 47.7,49.7 18.7,75.2 C16.4,77.3 16.2,77.5 14.2,79.5 L0,79.5 C0,78.7 0.3,78.4 0.8,77.9 C27.6,47.9 82.9,39 82.9,39 Z" id="icon--asia300-logo_Shape" fill="url(#icon--asia300-logo_linearGradient-1)"></path><polygon id="icon--asia300-logo_Shape" fill="#FFFFFF" points="38.9 0 35.1 0 0 78.8 0 79.5 14.2 79.5 37 29.8 58.5 79.5 73.9 79.5 73.9 78.8"></polygon><polygon id="icon--asia300-logo_Shape" fill="#FFFFFF" points="38.9 0 35.1 0 0 78.8 0 79.5 14.2 79.5 44.7 13"></polygon><path d="M80.1,76.1 L80.1,65 L80.6,64.8 C85.4,68.4 90.9,70.8 97.9,70.8 C104,70.8 107.1,68.5 107.1,64.6 C107.1,61 105.1,59.6 99.5,58.2 L94.2,56.8 C85.7,54.6 80,49.7 80,40.8 C80,30.6 88,24 100.3,24 C107.3,24 112.3,25.2 116.4,27.1 L116.4,37.4 L115.9,37.7 C111.8,35.6 106.3,34 100.4,34 C94.4,34 92.5,36.3 92.5,39.6 C92.5,42.7 94.4,44.4 98.6,45.5 L103.8,46.8 C114.7,49.7 120,53.3 120,63.1 C120,74.8 111,80.9 98.7,80.9 C89.7,80.9 84.2,78.9 80.1,76.1 Z" id="icon--asia300-logo_Shape" fill="#FFFFFF"></path><path d="M127,7 L140.7,7 L140.7,18.9 L127,18.9 L127,7 Z M127.1,25.5 L140.6,25.5 L140.6,79.9 L127.1,79.9 L127.1,25.5 Z" id="icon--asia300-logo_Shape" fill="#FFFFFF"></path><path d="M181.4,73.6 C178.7,77.5 174.1,81 166.2,81 C155.8,81 148,75.4 148,64.9 C148,53.7 156.6,49.8 169.8,47.9 L180.6,46.4 L180.6,46.2 C180.6,37.6 177,35 168.7,35 C161.8,35 157.5,36.5 152.7,39.1 L152.1,38.9 L152.1,28.3 C156.4,25.7 162.4,24 170.6,24 C185.5,24 194,30 194,45.7 L194,79.6 L182.3,79.6 L181.4,73.6 Z M180.6,66.1 L180.6,55.1 L172.7,56.3 C164.5,57.5 161.2,59.5 161.2,64.3 C161.2,68.6 163.8,71.4 169.5,71.4 C174.8,71.4 178.3,69.1 180.6,66.1 Z" id="icon--asia300-logo_Shape" fill="#FFFFFF"></path></g></g></g></symbol><linearGradient x1="23.8839806%" y1="50.051358%" x2="99.9764777%" y2="50.051358%" id="icon--asia300-logo_linearGradient-1"><stop stop-color="#FFFFFF" offset="0%"></stop><stop stop-color="#FFFFFF" offset="100%"></stop></linearGradient><symbol viewBox="0 0 370 82" id="icon--asia300-logo-red"><!-- Generator: Sketch 48.2 (47327) - http://www.bohemiancoding.com/sketch --><title>Artboard</title><desc>Created with Sketch.</desc><defs></defs><g id="icon--asia300-logo-red_Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="icon--asia300-logo-red_Artboard" fill-rule="nonzero"><g id="icon--asia300-logo-red_2018_A300logo_color" transform="translate(0.000000, -1.000000)"><g id="icon--asia300-logo-red_Shape" transform="translate(207.000000, 9.000000)" fill="#949494"><path d="M0.8,67.1 L0.8,58.2 L1.2,58 C7,62.1 12,64.5 20.5,64.5 C29.9,64.5 34.5,59.2 34.5,52.1 C34.5,44.8 30.4,39.2 19,39.2 L11.6,39.2 L11.6,31.2 L18.2,31.2 C29,31.2 32,25.6 32,19.5 C32,12.4 27.6,8.7 19.4,8.7 C11.8,8.7 8.4,10.3 2.8,13.8 L2.4,13.6 L2.4,5.3 C6.9,2.6 11.5,0.9 19.7,0.9 C31.3,0.9 40.8,6.5 40.8,19.4 C40.8,26.8 36.4,32.1 30,34.7 C38.1,37 43.5,42.4 43.5,51.5 C43.5,64.5 34.4,72.4 20.8,72.4 C10.8,72.5 5.2,69.7 0.8,67.1 Z"></path><path d="M49.7,36.5 C49.7,14.4 60.5,1 76.3,1 C92.1,1 102.8,14.4 102.8,36.5 C102.8,58.6 92.1,72.5 76.3,72.5 C60.5,72.5 49.7,58.5 49.7,36.5 Z M93.4,36.5 C93.4,17.6 86.6,8.9 76.4,8.9 C66.2,8.9 59.3,17.7 59.3,36.5 C59.3,55.3 66.3,64.6 76.4,64.6 C86.6,64.6 93.4,55.3 93.4,36.5 Z"></path><path d="M109.2,36.5 C109.2,14.4 120,1 135.8,1 C151.6,1 162.3,14.4 162.3,36.5 C162.3,58.6 151.6,72.5 135.8,72.5 C120,72.5 109.2,58.5 109.2,36.5 Z M152.9,36.5 C152.9,17.6 146.1,8.9 135.9,8.9 C125.7,8.9 118.8,17.7 118.8,36.5 C118.8,55.3 125.8,64.6 135.9,64.6 C146.1,64.6 152.9,55.3 152.9,36.5 Z"></path></g><path d="M83.4,39.7 C83.4,39.7 48.2,50.4 19.2,75.9 C16.9,78 16.7,78.2 14.7,80.2 L0.5,80.2 C0.5,79.4 0.8,79.1 1.3,78.6 C28.1,48.6 83.4,39.7 83.4,39.7 Z" id="icon--asia300-logo-red_Shape" fill="url(#icon--asia300-logo-red_linearGradient-1)"></path><polygon id="icon--asia300-logo-red_Shape" fill="url(#icon--asia300-logo-red_linearGradient-2)" points="39.4 0.7 35.6 0.7 0.5 79.5 0.5 80.2 14.7 80.2 37.5 30.5 59 80.2 74.4 80.2 74.4 79.5"></polygon><polygon id="icon--asia300-logo-red_Shape" fill="#EE2316" points="39.4 0.7 35.6 0.7 0.5 79.5 0.5 80.2 14.7 80.2 45.2 13.7"></polygon><path d="M79.9,76.6 L79.9,65.5 L80.4,65.3 C85.2,68.9 90.7,71.3 97.7,71.3 C103.8,71.3 106.9,69 106.9,65.1 C106.9,61.5 104.9,60.1 99.3,58.7 L94,57.3 C85.5,55.1 79.8,50.2 79.8,41.3 C79.8,31.1 87.8,24.5 100.1,24.5 C107.1,24.5 112.1,25.7 116.2,27.6 L116.2,37.9 L115.7,38.2 C111.6,36.1 106.1,34.5 100.2,34.5 C94.2,34.5 92.3,36.8 92.3,40.1 C92.3,43.2 94.2,44.9 98.4,46 L103.6,47.3 C114.5,50.2 119.8,53.8 119.8,63.6 C119.8,75.3 110.8,81.4 98.5,81.4 C89.5,81.4 84,79.4 79.9,76.6 Z" id="icon--asia300-logo-red_Shape" fill="#EE2316"></path><path d="M127.3,7.3 L141,7.3 L141,19.2 L127.3,19.2 L127.3,7.3 Z M127.4,25.8 L140.9,25.8 L140.9,80.2 L127.4,80.2 L127.4,25.8 Z" id="icon--asia300-logo-red_Shape" fill="#EE2316"></path><path d="M181.9,74.2 C179.2,78.1 174.6,81.6 166.7,81.6 C156.3,81.6 148.5,76 148.5,65.5 C148.5,54.3 157.1,50.4 170.3,48.5 L181.1,47 L181.1,46.8 C181.1,38.2 177.5,35.6 169.2,35.6 C162.3,35.6 158,37.1 153.2,39.7 L152.6,39.5 L152.6,28.9 C156.9,26.3 162.9,24.6 171.1,24.6 C186,24.6 194.5,30.6 194.5,46.3 L194.5,80.2 L182.8,80.2 L181.9,74.2 Z M181.1,66.7 L181.1,55.7 L173.2,56.9 C165,58.1 161.7,60.1 161.7,64.9 C161.7,69.2 164.3,72 170,72 C175.3,72 178.8,69.7 181.1,66.7 Z" id="icon--asia300-logo-red_Shape" fill="#EE2316"></path></g></g></g></symbol><linearGradient x1="0.0519903498%" y1="50.051358%" x2="99.9764777%" y2="50.051358%" id="icon--asia300-logo-red_linearGradient-1"><stop stop-color="#EE2316" offset="23.85%"></stop><stop stop-color="#FFFFFF" offset="100%"></stop></linearGradient><linearGradient x1="54.1699594%" y1="99.7963%" x2="5.36211096%" y2="12.4488733%" id="icon--asia300-logo-red_linearGradient-2"><stop stop-color="#EE2316" offset="23.85%"></stop><stop stop-color="#7F1D1F" offset="100%"></stop></linearGradient><symbol viewBox="0 0 32 32" id="icon--breadcrumb-chevron"><path fill="#FFF" fill-rule="evenodd" d="M25 16.118L10.18 0 7 2.626l7.634 13.492L7 29.611l3.18 2.625L25 16.118z"></path></symbol><symbol viewBox="0 0 180 180" id="icon--campaign-ends-sept-18"><defs></defs><g id="icon--campaign-ends-sept-18_Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="icon--campaign-ends-sept-18_ends" fill-rule="nonzero"><path d="M180,0 L180,180 L0,180 C39.9250798,162.725484 75.441051,138.534795 106.547913,107.427932 C137.654776,76.3210698 162.138805,40.511759 180,0 Z" id="icon--campaign-ends-sept-18_Triangle" fill="url(#icon--campaign-ends-sept-18_linearGradient-1)"></path><g id="icon--campaign-ends-sept-18_Group-4" transform="translate(99.000000, 125.000000)" fill="#FFFFFF"><path d="M0.86953125,30.0156719 L5.07851563,29.752 C5.16966191,30.4355972 5.35520693,30.9564253 5.63515625,31.3145 C6.0908877,31.89393 6.74192285,32.1836406 7.58828125,32.1836406 C8.21979482,32.1836406 8.7064436,32.0355301 9.04824219,31.7393047 C9.39004077,31.4430792 9.5609375,31.0996582 9.5609375,30.7090312 C9.5609375,30.3379356 9.39817871,30.0059077 9.07265625,29.7129375 C8.74713379,29.4199673 7.99193301,29.1432773 6.80703125,28.8828594 C4.86691738,28.4466593 3.48346768,27.867238 2.65664063,27.1445781 C1.82330313,26.4219183 1.40664063,25.5007035 1.40664063,24.3809062 C1.40664063,23.6452255 1.61985464,22.9502455 2.04628906,22.2959453 C2.47272349,21.6416452 3.11399312,21.1273274 3.97011719,20.7529766 C4.82624126,20.3786257 5.99973213,20.1914531 7.490625,20.1914531 C9.32006123,20.1914531 10.7149041,20.531619 11.6751953,21.2119609 C12.6354866,21.8923029 13.2067699,22.9746488 13.3890625,24.4590312 L9.21914063,24.7031719 C9.10846299,24.0586374 8.87571792,23.5898921 8.52089844,23.2969219 C8.16607896,23.0039517 7.676175,22.8574687 7.05117188,22.8574687 C6.53684639,22.8574687 6.14948047,22.9665171 5.8890625,23.1846172 C5.62864453,23.4027172 5.4984375,23.6680141 5.4984375,23.9805156 C5.4984375,24.2083813 5.6058583,24.4134574 5.82070313,24.59575 C6.0290375,24.784553 6.52382422,24.9603325 7.30507813,25.1230937 C9.23868154,25.5397625 10.6237588,25.9613078 11.4603516,26.3877422 C12.2969443,26.8141766 12.9056622,27.3431427 13.2865234,27.9746562 C13.6673847,28.6061698 13.8578125,29.312543 13.8578125,30.0937969 C13.8578125,31.0117702 13.6039088,31.8581159 13.0960938,32.6328594 C12.5882787,33.4076028 11.8786504,33.9951621 10.9671875,34.3955547 C10.0557246,34.7959473 8.90664756,34.9961406 7.51992188,34.9961406 C5.08501387,34.9961406 3.39883281,34.5273953 2.46132813,33.5898906 C1.52382344,32.6523859 0.993229785,31.4609916 0.86953125,30.0156719 Z M15.1277344,27.6035625 C15.1277344,25.2663112 15.7787695,23.446668 17.0808594,22.1445781 C18.3829492,20.8424883 20.1960821,20.1914531 22.5203125,20.1914531 C24.9031369,20.1914531 26.7390561,20.8310952 28.028125,22.1103984 C29.3171939,23.3897017 29.9617188,25.181676 29.9617188,27.486375 C29.9617188,29.1595604 29.680146,30.531617 29.1169922,31.6025859 C28.5538383,32.6735548 27.7400444,33.5068798 26.6755859,34.1025859 C25.6111275,34.698292 24.2846434,34.9961406 22.6960938,34.9961406 C21.0815023,34.9961406 19.7452527,34.7389817 18.6873047,34.2246562 C17.6293567,33.7103308 16.7716179,32.8965368 16.1140625,31.78325 C15.4565071,30.6699632 15.1277344,29.2767479 15.1277344,27.6035625 Z M19.5515625,27.6230937 C19.5515625,29.0684135 19.8201145,30.1068146 20.3572266,30.7383281 C20.8943386,31.3698417 21.6251256,31.6855937 22.5496094,31.6855937 C23.500135,31.6855937 24.2358047,31.3763521 24.7566406,30.7578594 C25.2774766,30.1393667 25.5378906,29.0293518 25.5378906,27.4277812 C25.5378906,26.0801183 25.2660834,25.0954276 24.7224609,24.4736797 C24.1788384,23.8519318 23.4415411,23.5410625 22.5105469,23.5410625 C21.6186153,23.5410625 20.9024767,23.8568146 20.3621094,24.4883281 C19.8217421,25.1198417 19.5515625,26.1647531 19.5515625,27.6230937 Z M31.3878906,27.6035625 C31.3878906,25.2663112 32.0389258,23.446668 33.3410156,22.1445781 C34.6431055,20.8424883 36.4562384,20.1914531 38.7804688,20.1914531 C41.1632932,20.1914531 42.9992123,20.8310952 44.2882813,22.1103984 C45.5773502,23.3897017 46.221875,25.181676 46.221875,27.486375 C46.221875,29.1595604 45.9403023,30.531617 45.3771484,31.6025859 C44.8139946,32.6735548 44.0002006,33.5068798 42.9357422,34.1025859 C41.8712837,34.698292 40.5447996,34.9961406 38.95625,34.9961406 C37.3416586,34.9961406 36.0054089,34.7389817 34.9474609,34.2246562 C33.8895129,33.7103308 33.0317741,32.8965368 32.3742188,31.78325 C31.7166634,30.6699632 31.3878906,29.2767479 31.3878906,27.6035625 Z M35.8117188,27.6230937 C35.8117188,29.0684135 36.0802708,30.1068146 36.6173828,30.7383281 C37.1544949,31.3698417 37.8852818,31.6855937 38.8097656,31.6855937 C39.7602912,31.6855937 40.4959609,31.3763521 41.0167969,30.7578594 C41.5376328,30.1393667 41.7980469,29.0293518 41.7980469,27.4277812 C41.7980469,26.0801183 41.5262397,25.0954276 40.9826172,24.4736797 C40.4389947,23.8519318 39.7016974,23.5410625 38.7707031,23.5410625 C37.8787716,23.5410625 37.1626329,23.8568146 36.6222656,24.4883281 C36.0818983,25.1198417 35.8117188,26.1647531 35.8117188,27.6230937 Z M48.2339844,20.4355937 L52.3648438,20.4355937 L57.7554688,28.3555156 L57.7554688,20.4355937 L61.9253906,20.4355937 L61.9253906,34.752 L57.7554688,34.752 L52.3941406,26.8906719 L52.3941406,34.752 L48.2339844,34.752 L48.2339844,20.4355937 Z" id="icon--campaign-ends-sept-18_SOON"></path><path d="M4.9515625,0.43559375 L16.8070312,0.43559375 L16.8070312,3.49223437 L9.38515625,3.49223437 L9.38515625,5.767625 L16.2699219,5.767625 L16.2699219,8.68754687 L9.38515625,8.68754687 L9.38515625,11.5098125 L17.021875,11.5098125 L17.021875,14.752 L4.9515625,14.752 L4.9515625,0.43559375 Z M19.0339844,0.43559375 L23.1648437,0.43559375 L28.5554687,8.35551562 L28.5554687,0.43559375 L32.7253906,0.43559375 L32.7253906,14.752 L28.5554687,14.752 L23.1941406,6.89067187 L23.1941406,14.752 L19.0339844,14.752 L19.0339844,0.43559375 Z M35.3234375,0.43559375 L41.8957031,0.43559375 C43.1912825,0.43559375 44.2378215,0.611373242 45.0353516,0.9629375 C45.8328816,1.31450176 46.4920547,1.819054 47.0128906,2.47660937 C47.5337266,3.13416475 47.911327,3.89913105 48.1457031,4.77153125 C48.3800793,5.64393145 48.4972656,6.56840137 48.4972656,7.54496875 C48.4972656,9.07492432 48.3231137,10.2614359 47.9748047,11.1045391 C47.6264957,11.9476422 47.1431021,12.6540154 46.5246094,13.2236797 C45.9061167,13.793344 45.2420608,14.172572 44.5324219,14.361375 C43.5623649,14.621793 42.6834675,14.752 41.8957031,14.752 L35.3234375,14.752 L35.3234375,0.43559375 Z M39.7472656,3.67778125 L39.7472656,11.5000469 L40.83125,11.5000469 C41.7557338,11.5000469 42.4132793,11.3975088 42.8039062,11.1924297 C43.1945332,10.9873505 43.5005197,10.6292812 43.721875,10.1182109 C43.9432303,9.60714067 44.0539062,8.77869844 44.0539062,7.63285937 C44.0539062,6.11592471 43.8065129,5.07752363 43.3117187,4.517625 C42.8169246,3.95772637 41.9966203,3.67778125 40.8507812,3.67778125 L39.7472656,3.67778125 Z M49.65,10.0156719 L53.8589844,9.752 C53.9501307,10.4355972 54.1356757,10.9564253 54.415625,11.3145 C54.8713564,11.89393 55.5223916,12.1836406 56.36875,12.1836406 C57.0002636,12.1836406 57.4869124,12.0355301 57.8287109,11.7393047 C58.1705095,11.4430792 58.3414062,11.0996582 58.3414062,10.7090312 C58.3414062,10.3379356 58.1786475,10.0059077 57.853125,9.7129375 C57.5276025,9.41996729 56.7724018,9.14327734 55.5875,8.88285937 C53.6473861,8.44665928 52.2639364,7.86723799 51.4371094,7.14457812 C50.6037719,6.42191826 50.1871094,5.50070352 50.1871094,4.38090625 C50.1871094,3.64522549 50.4003234,2.95024546 50.8267578,2.29594531 C51.2531922,1.64164517 51.8944619,1.12732739 52.7505859,0.752976562 C53.60671,0.378625732 54.7802009,0.191453125 56.2710937,0.191453125 C58.10053,0.191453125 59.4953728,0.531618994 60.4556641,1.21196094 C61.4159553,1.89230288 61.9872387,2.97464883 62.1695312,4.45903125 L57.9996094,4.70317187 C57.8889317,4.0586374 57.6561867,3.58989209 57.3013672,3.29692187 C56.9465477,3.00395166 56.4566437,2.85746875 55.8316406,2.85746875 C55.3173151,2.85746875 54.9299492,2.96651714 54.6695312,3.18461719 C54.4091133,3.40271724 54.2789063,3.66801406 54.2789062,3.98051562 C54.2789063,4.20838135 54.3863271,4.41345742 54.6011719,4.59575 C54.8095062,4.78455303 55.304293,4.96033252 56.0855469,5.12309375 C58.0191503,5.5397625 59.4042276,5.96130776 60.2408203,6.38774219 C61.077413,6.81417661 61.6861309,7.34314268 62.0669922,7.97465625 C62.4478535,8.60616982 62.6382812,9.31254297 62.6382812,10.0937969 C62.6382812,11.0117702 62.3843775,11.8581159 61.8765625,12.6328594 C61.3687475,13.4076028 60.6591191,13.9951621 59.7476562,14.3955547 C58.8361934,14.7959473 57.6871163,14.9961406 56.3003906,14.9961406 C53.8654826,14.9961406 52.1793016,14.5273953 51.2417969,13.5898906 C50.3042922,12.6523859 49.7736985,11.4609916 49.65,10.0156719 Z" id="icon--campaign-ends-sept-18_ENDS"></path></g></g></g></symbol><linearGradient x1="100%" y1="5.40443979%" x2="64.3025508%" y2="84.3159502%" id="icon--campaign-ends-sept-18_linearGradient-1"><stop stop-color="#359FE0" offset="0%"></stop><stop stop-color="#5CCDC0" offset="100%"></stop></linearGradient><symbol viewBox="0 0 180 180" id="icon--campaign-sept-18"><defs></defs><g fill="none" fill-rule="evenodd"><path d="M179.6 0v179.6H0c39.836-17.236 75.273-41.373 106.311-72.41C137.35 76.15 161.778 40.421 179.6 0z" fill="url(#icon--campaign-sept-18_a)" fill-rule="nonzero"></path><g fill="#FFF"><path d="M126.988 141.372c0 1.384-.368 2.61-1.105 3.676-.736 1.066-1.745 1.898-3.028 2.494 1.473.622 2.635 1.511 3.485 2.666.85 1.156 1.276 2.476 1.276 3.961 0 2.565-.87 4.536-2.609 5.913-1.739 1.378-4.011 2.066-6.817 2.066-2.818 0-5.1-.688-6.846-2.066-1.746-1.377-2.618-3.348-2.618-5.913 0-1.498.422-2.821 1.266-3.97.844-1.15 2.003-2.035 3.475-2.657-1.295-.596-2.304-1.428-3.028-2.494-.723-1.067-1.085-2.292-1.085-3.676 0-2.462.806-4.37 2.418-5.722 1.613-1.352 3.74-2.028 6.38-2.028 2.64 0 4.773.676 6.398 2.028 1.625 1.352 2.438 3.26 2.438 5.722zm-4.913 12.416c0-1.244-.365-2.24-1.095-2.99-.73-.748-1.673-1.123-2.828-1.123-1.155 0-2.089.375-2.8 1.124-.71.749-1.066 1.745-1.066 2.99 0 1.269.356 2.269 1.067 2.999.71.73 1.656 1.095 2.837 1.095 1.155 0 2.091-.368 2.809-1.105.717-.736 1.076-1.733 1.076-2.99zm-.648-12.168c0-1.117-.295-2.015-.885-2.695-.59-.679-1.387-1.018-2.39-1.018-1.016 0-1.806.333-2.371 1-.565.666-.847 1.57-.847 2.713 0 1.155.285 2.072.857 2.752.57.679 1.37 1.018 2.399 1.018 1.003 0 1.793-.34 2.37-1.018.578-.68.867-1.597.867-2.752zm14.511 3.904h3.123c1.32 0 2.298-.346 2.933-1.038.634-.692.952-1.654.952-2.885 0-1.117-.318-2.012-.952-2.685-.635-.673-1.556-1.01-2.762-1.01-1.04 0-1.917.305-2.628.915-.71.609-1.066 1.409-1.066 2.4h-5.39l-.037-.115c-.076-2.171.755-3.961 2.494-5.37 1.74-1.41 3.898-2.114 6.475-2.114 2.87 0 5.158.685 6.865 2.057 1.708 1.37 2.561 3.326 2.561 5.865 0 1.206-.38 2.352-1.142 3.437-.762 1.086-1.81 1.933-3.142 2.542 1.536.546 2.707 1.384 3.513 2.514s1.21 2.444 1.21 3.942c0 2.539-.924 4.535-2.771 5.989-1.848 1.454-4.212 2.18-7.094 2.18-2.577 0-4.79-.682-6.636-2.047-1.848-1.365-2.74-3.291-2.676-5.78l.038-.114h5.39c0 1.067.38 1.946 1.142 2.638.762.692 1.726 1.038 2.894 1.038 1.283 0 2.295-.356 3.038-1.067.742-.71 1.114-1.676 1.114-2.894 0-1.46-.365-2.53-1.095-3.209-.73-.68-1.806-1.019-3.228-1.019h-3.123v-4.17zm14.542 1.295c0-1.092.354-2.002 1.06-2.73.707-.728 1.691-1.092 2.952-1.092 1.278 0 2.268.362 2.97 1.086.703.724 1.055 1.635 1.055 2.736v.977c0 1.092-.352 1.998-1.054 2.717-.703.72-1.684 1.08-2.945 1.08-1.27 0-2.26-.36-2.971-1.08-.711-.72-1.067-1.625-1.067-2.717v-.977zm2.463.977c0 .491.136.904.407 1.238.27.334.66.502 1.168.502.49 0 .871-.168 1.142-.502.271-.334.406-.747.406-1.238v-.977c0-.491-.137-.908-.412-1.25-.275-.344-.662-.515-1.162-.515-.5 0-.882.171-1.149.514-.266.343-.4.76-.4 1.25v.978zm6.373 9.42c0-1.083.356-1.989 1.067-2.717.71-.727 1.697-1.091 2.958-1.091 1.27 0 2.257.361 2.964 1.085.707.724 1.06 1.631 1.06 2.723v.978c0 1.1-.351 2.01-1.053 2.73-.703.719-1.685 1.078-2.946 1.078-1.27 0-2.262-.362-2.977-1.085-.715-.724-1.073-1.631-1.073-2.723v-.978zm2.463.978c0 .482.146.895.438 1.238.292.342.675.514 1.15.514.55 0 .943-.159 1.18-.476.237-.318.355-.743.355-1.276v-.978c0-.482-.135-.895-.406-1.238-.27-.342-.656-.514-1.155-.514-.508 0-.895.172-1.162.514-.266.343-.4.756-.4 1.238v.978zm-6.208 2.17l-1.802-.952 9.026-14.447 1.803.952-9.027 14.448zM109.64 122.793l2.392-.233c.143.803.435 1.392.875 1.768.44.376 1.034.565 1.78.565.792 0 1.388-.168 1.79-.503.4-.334.601-.726.601-1.174 0-.288-.084-.533-.253-.735-.169-.202-.463-.377-.884-.527-.288-.1-.943-.277-1.967-.531-1.317-.327-2.241-.728-2.773-1.204-.747-.67-1.12-1.486-1.12-2.448 0-.62.176-1.2.527-1.74.351-.539.858-.95 1.519-1.232.661-.282 1.46-.423 2.395-.423 1.527 0 2.677.334 3.449 1.004.772.67 1.177 1.563 1.216 2.681l-2.457.108c-.105-.625-.33-1.075-.677-1.349-.346-.274-.864-.41-1.556-.41-.714 0-1.273.146-1.677.44a.886.886 0 0 0-.39.755c0 .287.122.534.365.738.31.26 1.063.532 2.258.814 1.195.282 2.08.574 2.652.876a3.418 3.418 0 0 1 1.345 1.236c.324.523.485 1.17.485 1.939 0 .697-.193 1.35-.58 1.959-.388.608-.936 1.06-1.644 1.357-.708.296-1.591.444-2.648.444-1.539 0-2.72-.356-3.545-1.067-.824-.71-1.317-1.747-1.477-3.108zm22.671 3.959h-2.672l-1.063-2.764h-4.864l-1.005 2.764h-2.606l4.74-12.169h2.598l4.872 12.169zm-4.524-4.814l-1.676-4.516-1.644 4.516h3.32zm7.406 4.814l-4.35-12.169h2.665l3.08 9.006 2.98-9.006h2.606l-4.358 12.169h-2.623zm7.97 0v-12.169h9.022v2.059h-6.565v2.697h6.109v2.05h-6.11v3.313h6.799v2.05h-9.255z"></path></g></g></symbol><linearGradient x1="100%" y1="5.404%" x2="64.303%" y2="84.316%" id="icon--campaign-sept-18_a"><stop stop-color="#359FE0" offset="0%"></stop><stop stop-color="#5CCDC0" offset="100%"></stop></linearGradient><symbol viewBox="0 0 331.743 609.686" id="icon--chevron"><title>Title Chevron</title><polygon points="331.743,304.843 331.743,304.843 331.743,304.843 58.625,0 0,49.658 140.697,304.843 140.697,304.843 0,560.028 58.625,609.686 331.743,304.843 331.743,304.843 "></polygon></symbol><symbol viewBox="0 0 331.743 609.686" id="icon--chevron-left"><title>Title Chevron</title><polygon transform="rotate(180 166 305)" points="331.743,304.843 331.743,304.843 331.743,304.843 58.625,0 0,49.658 140.697,304.843 140.697,304.843 0,560.028 58.625,609.686 331.743,304.843 331.743,304.843 "></polygon></symbol><symbol viewBox="0 0 26 26" id="icon--chevron-squared"><path fill="#FFF" fill-rule="evenodd" d="M8.528 26l-4.466-4.333L12.73 13 4.063 4.333 8.527 0l12.868 13z"></path></symbol><symbol viewBox="0 0 20 20" role="img" aria-labelledby="title" id="icon--cross"><path d="M9.5,6.8951713 L2.6048287,1.19015908e-13 L-1.59561253e-12,2.6048287 L6.8951713,9.5 L-1.59516844e-12,16.3951713 L2.6048287,19 L9.5,12.1048287 L16.3951713,19 L19,16.3951713 L12.1048287,9.5 L19,2.6048287 L16.3951713,1.19015908e-13 L9.5,6.8951713 Z" id="icon--cross_Combined-Shape"></path></symbol><symbol viewBox="0 0 12 24" id="icon--facebook"><defs></defs><g id="icon--facebook_Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="icon--facebook_Facebook-hover" fill="#FFFFFF" fill-rule="nonzero"><path d="M3,8 L0,8 L0,12 L3,12 L3,24 L8,24 L8,12 L11.642,12 L12,8 L8,8 L8,6.333 C8,5.378 8.192,5 9.115,5 L12,5 L12,0 L8.192,0 C4.596,0 3,1.583 3,4.615 L3,8 Z" id="icon--facebook_Shape"></path></g></g></symbol><symbol viewBox="0 0 34 34" id="icon--facebook-round"><g fill="none" fill-rule="evenodd"><circle cx="17" cy="17" r="17" fill="#0076BF"></circle><path fill="#FFF" fill-rule="nonzero" d="M15.023 25L15 18h-3v-3h3v-2c0-2.7 1.672-4 4.08-4 1.153 0 2.144.086 2.433.124v2.821h-1.67c-1.31 0-1.563.623-1.563 1.536V15H22l-1 3h-2.72v7h-3.257z"></path></g></symbol><symbol viewBox="0 0 18 18" id="icon--info"><path fill="#FFF" fill-rule="nonzero" d="M9 0C4.05 0 0 4.05 0 9s4.05 9 9 9 9-4.05 9-9-4.05-9-9-9zm1.125 13.5h-2.25V7.875h2.25V13.5zM9 6.75c-.675 0-1.125-.45-1.125-1.125S8.325 4.5 9 4.5s1.125.45 1.125 1.125S9.675 6.75 9 6.75z"></path></symbol><symbol viewBox="0 0 23 23" id="icon--instagram"><defs></defs><g id="icon--instagram_Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="icon--instagram_Instagram" fill="#F0F0F0" fill-rule="nonzero"><path d="M11.495,0 C8.373,0 7.982,0.013 6.755,0.07 C5.532,0.125 4.697,0.32 3.965,0.604 C3.19832571,0.892784611 2.50385604,1.345299 1.93,1.93 C1.34520271,2.50416611 0.892684717,3.19898258 0.604,3.966 C0.32,4.697 0.126,5.533 0.07,6.756 C0.013,7.983 -1.77635684e-15,8.374 -1.77635684e-15,11.496 C-1.77635684e-15,14.619 0.013,15.01 0.07,16.236 C0.125,17.46 0.32,18.296 0.603,19.026 C0.891555961,19.7933751 1.34408139,20.4885443 1.929,21.063 C2.569,21.703 3.209,22.095 3.965,22.389 C4.697,22.673 5.532,22.868 6.755,22.924 C7.982,22.98 8.373,22.993 11.495,22.993 C14.617,22.993 15.008,22.98 16.235,22.923 C17.458,22.868 18.293,22.673 19.025,22.389 C19.7920174,22.1003153 20.4868339,21.6477973 21.061,21.063 C21.6457723,20.4888134 22.0982865,19.7940028 22.387,19.027 C22.671,18.296 22.865,17.46 22.921,16.237 C22.977,15.01 22.99,14.619 22.99,11.497 C22.99,8.374 22.977,7.983 22.92,6.757 C22.865,5.533 22.67,4.697 22.387,3.966 C22.0979936,3.19890598 21.6451333,2.50408795 21.06,1.93 C20.4858544,1.34517771 19.791032,0.892655892 19.024,0.604 C18.292,0.319 17.457,0.125 16.234,0.069 C15.007,0.013 14.616,0 11.494,0 L11.495,0 Z M11.495,2.071 C14.565,2.071 14.928,2.083 16.14,2.138 C17.26,2.19 17.87,2.377 18.274,2.534 C18.811,2.743 19.194,2.992 19.596,3.394 C19.998,3.797 20.247,4.18 20.456,4.716 C20.613,5.121 20.801,5.73 20.852,6.851 C20.907,8.063 20.919,8.427 20.919,11.496 C20.919,14.566 20.907,14.93 20.852,16.142 C20.801,17.262 20.613,17.872 20.456,18.277 C20.247,18.813 19.998,19.197 19.596,19.598 C19.2251502,19.9798723 18.7734058,20.2737453 18.274,20.458 C17.869,20.616 17.261,20.803 16.14,20.854 C14.928,20.91 14.565,20.921 11.495,20.921 C8.425,20.921 8.062,20.91 6.85,20.854 C5.73,20.804 5.12,20.616 4.716,20.458 C4.21659416,20.2737453 3.76484975,19.9798723 3.394,19.598 C3.01227868,19.2274167 2.71841761,18.7760324 2.534,18.277 C2.377,17.872 2.189,17.263 2.138,16.142 C2.083,14.93 2.071,14.566 2.071,11.496 C2.071,8.426 2.083,8.063 2.138,6.851 C2.189,5.73 2.377,5.121 2.534,4.716 C2.743,4.18 2.992,3.796 3.394,3.394 C3.76484975,3.01212772 4.21659416,2.71825466 4.716,2.534 C5.121,2.377 5.729,2.19 6.85,2.138 C8.062,2.083 8.426,2.071 11.495,2.071 Z" id="icon--instagram_Shape"></path><path d="M11.505,15.236 C10.135601,15.2361787 8.87012878,14.5057781 8.18527456,13.319933 C7.50042034,12.134088 7.50022974,10.6729566 8.18477456,9.48693299 C8.86931938,8.30090933 10.134601,7.5701786 11.504,7.57 C13.6209074,7.56972386 15.3372239,9.28559255 15.3375,11.4025 C15.3377761,13.5194074 13.6219074,15.2357239 11.505,15.236 Z M11.505,5.5 C8.24444107,5.50055226 5.60163188,8.1441076 5.60200004,11.4046666 C5.6023682,14.6652255 8.2457743,17.308184 11.5063333,17.3079999 C14.7668922,17.3078158 17.41,14.664559 17.41,11.404 C17.41,9.83798857 16.787836,8.3361315 15.6804049,7.22888797 C14.5729738,6.12164444 13.0710114,5.49973475 11.505,5.5 Z M19.019,5.27 C19.0325091,5.77170353 18.7725724,6.24118769 18.3401962,6.49602043 C17.90782,6.75085317 17.37118,6.75085317 16.9388038,6.49602043 C16.5064276,6.24118769 16.2464909,5.77170353 16.26,5.27 C16.26,4.50784705 16.877847,3.89 17.64,3.89 C18.402153,3.89 19.02,4.50784705 19.02,5.27 L19.019,5.27 Z" id="icon--instagram_Shape"></path></g></g></symbol><symbol viewBox="0 0 34 34" id="icon--instagram-round"><g fill="none" fill-rule="evenodd"><circle cx="17" cy="17" r="17" fill="#0076BF"></circle><g fill="#FFF" fill-rule="nonzero" transform="translate(9 9)"><circle cx="12.145" cy="3.892" r="1"></circle><path d="M8 12c-2.206 0-4-1.794-4-4s1.794-4 4-4 4 1.794 4 4-1.794 4-4 4zm0-6c-1.103 0-2 .897-2 2s.897 2 2 2 2-.897 2-2-.897-2-2-2z"></path><path d="M12 16H4c-2.056 0-4-1.944-4-4V4c0-2.056 1.944-4 4-4h8c2.056 0 4 1.944 4 4v8c0 2.056-1.944 4-4 4zM4 2c-.935 0-2 1.065-2 2v8c0 .953 1.047 2 2 2h8c.935 0 2-1.065 2-2V4c0-.935-1.065-2-2-2H4z"></path></g></g></symbol><symbol viewBox="0 0 21 20" id="icon--linkedin"><defs></defs><g id="icon--linkedin_Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="icon--linkedin_Linkedin" fill="#F0F0F0" fill-rule="nonzero"><path d="M4.33,2.174 C4.33,3.374 3.365,4.348 2.174,4.348 C1.59963114,4.34588259 1.04964344,4.11561405 0.64509787,3.70788013 C0.240552297,3.3001462 0.0146084043,2.74836779 0.017,2.174 C0.017,0.974 0.983,0 2.174,0 C3.365,0 4.33,0.974 4.33,2.174 Z M4.348,6.087 L0,6.087 L0,20 L4.348,20 L4.348,6.087 Z M11.288,6.087 L6.968,6.087 L6.968,20 L11.29,20 L11.29,12.697 C11.29,8.636 16.532,8.303 16.532,12.697 L16.532,20 L20.87,20 L20.87,11.19 C20.87,4.338 13.111,4.588 11.289,7.96 L11.289,6.087 L11.288,6.087 Z" id="icon--linkedin_Shape"></path></g></g></symbol><symbol viewBox="0 0 34 34" id="icon--linkedin-round"><g fill="none" fill-rule="evenodd"><circle cx="17" cy="17" r="17" fill="#0076BF"></circle><path fill="#FFF" fill-rule="nonzero" d="M24.2 9H9.7c-.4 0-.7.3-.7.7v14.7c0 .3.3.6.7.6h14.6c.4 0 .7-.3.7-.7V9.7c-.1-.4-.4-.7-.8-.7zM13.7 22.6h-2.3V15h2.4v7.6h-.1zM12.6 14c-.8 0-1.4-.7-1.4-1.4 0-.8.6-1.4 1.4-1.4.8 0 1.4.6 1.4 1.4-.1.7-.7 1.4-1.4 1.4zm10 8.6h-2.4v-3.7c0-.9 0-2-1.2-2s-1.4 1-1.4 2v3.8h-2.4V15h2.3v1c.3-.6 1.1-1.2 2.2-1.2 2.4 0 2.8 1.6 2.8 3.6v4.2h.1z"></path></g></symbol><symbol viewBox="0 0 670 124" id="icon--logo-standard"><defs></defs><g id="icon--logo-standard_レイヤー_2" data-name="レイヤー 2"><g id="icon--logo-standard_レイヤー_3" data-name="レイヤー 3"><path d="M67.87,121.83l-57-65.34v65.34H0V33.59H3.88L60.73,98.8V33.59h10.9v88.24Z"></path><path d="M91.17,33.59h11.27v88.24H91.17Z"></path><path d="M144.76,77.64,133.24,90.16v31.67H122V33.59h11.27V76.77l38.57-43.18h12v.62L152.65,69.38l33.44,51.82v.63H173.44Z"></path><path d="M220.27,77.64,208.75,90.16v31.67H197.48V33.59h11.27V76.77l38.57-43.18h12v.62L228.16,69.38,261.6,121.2v.63H249Z"></path><path d="M273,33.59h46.83v9.76H284.27V71.26H315.2V80.9H284.27v31.16h35.56v9.77H273Z"></path><path d="M336.11,33.59h11.27v88.24H336.11Z"></path><path d="M447.81,97.58H404.86l-9.58,24.27H373V120.7L421.54,2.13h9.59L479.86,120.7v1.15H457.55ZM426.33,41.43l-14.7,39H441Z"></path><path d="M488,115.91V97.75l.83-.33A45,45,0,0,0,517,107.16c9.91,0,15-3.8,15-10.07,0-6-3.3-8.09-12.39-10.41l-8.59-2.31C497.2,80.74,488,72.82,488,58.28c0-16.67,13.05-27.4,33-27.4,11.4,0,19.5,2,26.27,5.11V52.84l-.83.49a55.92,55.92,0,0,0-25.27-6.11c-9.75,0-12.89,3.8-12.89,9.08,0,5.12,3.14,7.76,9.91,9.58L526.61,68C544.45,72.82,553,78.59,553,94.61c0,19-14.7,29.06-34.69,29.06C503.65,123.67,494.73,120.37,488,115.91Z"></path><path d="M562.79,0h22.3V19.32h-22.3ZM563,33.19h22v88.66H563Z"></path><path d="M649.35,112c-4.46,6.27-11.89,12-24.78,12-17,0-29.73-9.08-29.73-26.25,0-18.33,14-24.6,35.51-27.74L648,67.53V67.2c0-14-5.95-18.33-19.33-18.33a50.47,50.47,0,0,0-26.1,6.61l-1-.33v-17c6.94-4.29,16.85-6.93,30.23-6.93C656.12,31.21,670,41,670,66.54v55.31H651ZM648,99.73v-18l-12.89,2c-13.38,2-18.66,5.29-18.66,13.05,0,6.93,4.29,11.55,13.54,11.55C638.61,108.31,644.23,104.68,648,99.73Z"></path></g></g></symbol><symbol viewBox="15 15 18 18" id="icon--mail"><g id="icon--mail_Symbols"><g id="icon--mail_mail"><path d="M30.75,17 L17.25,17 C16.0073593,17 15,17.940202 15,19.1 L15,28.9 C15,30.059798 16.0073593,31 17.25,31 L30.75,31 C31.9926407,31 33,30.059798 33,28.9 L33,19.1 C33,17.940202 31.9926407,17 30.75,17 Z M30.525,20.36 L24.525,25.26 C24.361633,25.3385913 24.1831935,25.3861752 24,25.4 C23.8168065,25.3861752 23.638367,25.3385913 23.475,25.26 L17.475,20.36 C17.1643398,20.1087104 17.1307612,19.6699495 17.4,19.38 C17.6692388,19.0900505 18.1393398,19.0587104 18.45,19.31 L23.925,23.79 L29.4,19.31 C29.5473708,19.1855684 29.7427812,19.1226824 29.9410028,19.1358972 C30.1392244,19.149112 30.3230743,19.237282 30.45,19.38 C30.6182879,19.4886615 30.7246755,19.6627098 30.739255,19.8532163 C30.7538346,20.0437229 30.6750319,20.2301171 30.525,20.36 Z" id="icon--mail_Shape"></path></g></g></symbol><symbol viewBox="0 0 30 23" id="icon--mail-contact"><title>Icon Mail Contact</title><g><title>Path Layer</title><g id="icon--mail-contact_Group-244"><path id="icon--mail-contact_Shape" d="m0,0l0,22.5l30,0l0,-22.5l-30,0zm8.27875,9.91125l-5.77875,7.14l0,-11.8225l5.77875,4.6825zm-5.17625,-7.41125l23.79375,0l-11.89625,9.64125l-11.8975,-9.64125zm7.1175,8.985l4.78,3.87375l4.7875,-3.88l7.015,8.52125l-23.47375,0l6.89125,-8.515zm11.51,-1.58l5.77,-4.67625l0,11.685l-5.77,-7.00875z"></path></g></g></symbol><symbol viewBox="0 0 20 20" id="icon--more"><g id="icon--more_Symbols"><g id="icon--more_more"><path fill-rule="evenodd" clip-rule="evenodd" d="M3.25 12.25C4.49264 12.25 5.5 11.2426 5.5 10C5.5 8.75736 4.49264 7.75 3.25 7.75C2.00736 7.75 1 8.75736 1 10C1 11.2426 2.00736 12.25 3.25 12.25ZM10 12.25C11.2426 12.25 12.25 11.2426 12.25 10C12.25 8.75736 11.2426 7.75 10 7.75C8.75736 7.75 7.75 8.75736 7.75 10C7.75 11.2426 8.75736 12.25 10 12.25ZM19 10C19 11.2426 17.9926 12.25 16.75 12.25C15.5074 12.25 14.5 11.2426 14.5 10C14.5 8.75736 15.5074 7.75 16.75 7.75C17.9926 7.75 19 8.75736 19 10Z"></path></g></g></symbol><symbol viewBox="0 0 33 32" fill="none" id="icon--notification"><path d="M17.7794 29.8253C18.2985 29.6755 18.7699 29.4339 19.1595 29.1182C19.5492 28.8025 19.8473 28.4206 20.0322 28H13.0322C13.196 28.3724 13.4487 28.715 13.7759 29.0083C14.1031 29.3016 14.4984 29.5398 14.9392 29.7093C15.38 29.8788 15.8577 29.9763 16.3451 29.9962C16.8324 30.0161 17.3198 29.958 17.7794 29.8253Z" fill="#f0f0f0"></path><path d="M25.6416 16.7549C25.7372 19.3756 26.4993 21.9308 27.8587 24.1779C27.9689 24.3599 28.0287 24.5679 28.0321 24.7807C28.0354 24.9935 27.9822 25.2033 27.8778 25.3887C27.7734 25.5741 27.6216 25.7284 27.4379 25.8359C27.2543 25.9433 27.0454 25.9999 26.8326 26H5.23182C5.01907 25.9999 4.81018 25.9433 4.62653 25.8359C4.44288 25.7284 4.29108 25.5741 4.18667 25.3887C4.08227 25.2033 4.02902 24.9935 4.03238 24.7807C4.03573 24.5679 4.09558 24.3599 4.20578 24.1779C5.62934 21.8245 6.39791 19.1331 6.43186 16.3827V11.6029C6.43186 9.05604 7.44333 6.61351 9.24374 4.81262C11.0442 3.01173 13.4861 2 16.0322 2C17.6224 2 19.1719 2.39461 20.5498 3.12962C17.708 4.1187 15.6686 6.82118 15.6686 10C15.6686 14.0166 18.9247 17.2727 22.9413 17.2727C23.8955 17.2727 24.8067 17.089 25.6416 16.7549Z" fill="#f0f0f0"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M24.0322 6H22.0322V9L19.0322 9V11H22.0322V14H24.0322V11H27.0322V9L24.0322 9V6Z" fill="#F0F0F0"></path></symbol><symbol viewBox="0 0 23 17" id="icon--opinion-quote"><g id="icon--opinion-quote_Symbols" stroke="none" stroke-width="1" fill="#CB3700" fill-rule="evenodd"><g id="icon--opinion-quote_66"><path d="M22.7308828,0.969563588 C19.6153375,0.892015124 15.2306825,2.81434687 14.3081048,6.0434001 C15.2306825,5.58194834 16.1156195,5.31304541 17.1539355,5.31304541 C20.4227743,5.31304541 23,8.00412217 23,11.2330048 C23,14.5397771 20.3460422,17 17.0772034,17 C14.4613983,17 12.5774075,15.3465712 11.654147,13.0402508 L11.5767321,13.0402508 C10.923357,15.3082662 8.61524845,16.961695 6.23117601,17 C2.34634653,17 0,13.8475568 0,10.1569665 C0,4.35269001 5.19286006,-0.22232816 10.8849482,0.00835506135 L11.654147,0.969563588 C8.34604594,0.892015124 4.30792296,2.69943181 3.23136898,6.0434001 C4.07721453,5.62119179 5.00047501,5.31304541 5.9619735,5.31304541 C8.19266709,5.31304541 10.0767432,6.46654683 11.1925595,8.38879326 C12.4232605,3.42987181 16.4613835,0.00835506135 21.6150666,0.00835506135 L21.9618548,0.00835506135 L22.7308828,0.969563588 Z"></path></g></g></symbol><symbol viewBox="14 15 20 15" id="icon--permalink"><g id="icon--permalink_Symbols"><g id="icon--permalink_permalink"><path d="M15.818 32a.818.818 0 0 1-.578-1.397l5.727-5.727a.818.818 0 0 1 1.157 1.157l-5.727 5.727a.818.818 0 0 1-.579.24zM16.536 26.994l1.309-1.31-.023-.074c-.007-.02-.63-2.008.62-3.258l4.858-4.858c1.25-1.249 3.238-.626 3.273-.615l.06.018 1.308-1.309-.87-.267c-.12-.04-2.957-.956-4.93 1.017l-4.856 4.856c-1.97 1.971-1.056 4.809-1.022 4.91l.273.89z"></path><path d="M20.006 30.464l1.31-1.309.074.023c.02.007 2.008.63 3.258-.62l4.857-4.858c1.248-1.249.626-3.237.614-3.272l-.018-.06 1.31-1.308.266.87c.04.12.956 2.957-1.016 4.93l-4.858 4.856c-1.97 1.971-4.808 1.057-4.909 1.022l-.888-.274z"></path><path d="M26.455 21.364a.818.818 0 0 1-.579-1.397l5.727-5.727a.818.818 0 0 1 1.157 1.157l-5.727 5.727a.818.818 0 0 1-.578.24z"></path></g></g></symbol><symbol viewBox="0 0 28 28" fill="none" id="icon--podcast"><path d="M14 6c-4.411 0-8 3.589-8 8v5c0 1.654 1.346 3 3 3h1c.553 0 1-.448 1-1v-5c0-.552-.447-1-1-1H8v-1c0-3.309 2.691-6 6-6s6 2.691 6 6v1h-2c-.553 0-1 .448-1 1v5c0 .552.447 1 1 1h1c1.654 0 3-1.346 3-3v-5c0-4.411-3.589-8-8-8z" fill="#fff"></path><rect x="1" y="1" width="26" height="26" rx="4" stroke="#fff" stroke-width="2"></rect></symbol><symbol viewBox="0 0 8.9958334 8.9958334" id="icon--podcast-round"><sodipodi:namedview id="icon--podcast-round_namedview7" pagecolor="#ffffff" bordercolor="#666666" borderopacity="1.0" inkscape:pageshadow="2" inkscape:pageopacity="0.0" inkscape:pagecheckerboard="0" inkscape:document-units="mm" showgrid="false" fit-margin-top="0" fit-margin-left="0" fit-margin-right="0" fit-margin-bottom="0" showguides="true" inkscape:guide-bbox="true" inkscape:zoom="11.313709" inkscape:cx="20.417708" inkscape:cy="24.262601" inkscape:window-width="1471" inkscape:window-height="976" inkscape:window-x="26" inkscape:window-y="23" inkscape:window-maximized="0" inkscape:current-layer="layer1"></sodipodi:namedview><defs id="icon--podcast-round_defs2"></defs><g inkscape:label="Layer 1" inkscape:groupmode="layer" id="icon--podcast-round_layer1" transform="translate(-140.49096,-104.96662)"><circle cx="144.98888" cy="109.46454" r="4.4979167" fill="#0076bf" id="icon--podcast-round_circle824" style="fill-rule:evenodd;stroke-width:0.264583"></circle><path d="m 144.96939,107.14903 c -1.16708,0 -2.11667,0.94959 -2.11667,2.11667 v 1.32291 c 0,0.43762 0.35613,0.79375 0.79375,0.79375 h 0.26458 c 0.14632,0 0.26459,-0.11853 0.26459,-0.26458 v -1.32292 c 0,-0.14605 -0.11827,-0.26458 -0.26459,-0.26458 h -0.52916 v -0.26458 c 0,-0.87551 0.71199,-1.5875 1.5875,-1.5875 0.8755,0 1.5875,0.71199 1.5875,1.5875 v 0.26458 h -0.52917 c -0.14631,0 -0.26458,0.11853 -0.26458,0.26458 v 1.32292 c 0,0.14605 0.11827,0.26458 0.26458,0.26458 h 0.26458 c 0.43762,0 0.79375,-0.35613 0.79375,-0.79375 v -1.32291 c 0,-1.16708 -0.94959,-2.11667 -2.11666,-2.11667 z" fill="#ffffff" id="icon--podcast-round_path841" style="stroke-width:0.264583"></path></g></symbol><symbol viewBox="0 0 12.000000000000002 13" id="icon--positive-arrow"><title>Positive Arrow</title><g><path d="m5.958586,0l-5.958586,5.944715l1.531911,1.542315l3.345582,-3.345582l0,8.858553l2.161321,0l0,-8.858553l3.347315,3.345582l1.530177,-1.542315"></path></g></symbol><symbol viewBox="15 15 18 18" id="icon--print"><path d="M30,18 L28.5,18 L28.5,16.5 L19.5,16.5 L19.5,18 L18,18 L18,15.75 C18,15.3357864 18.3357864,15 18.75,15 L29.25,15 C29.6642136,15 30,15.3357864 30,15.75 L30,18 Z" id="icon--print_Path"></path><path d="M30.75,19.5 L17.25,19.5 C16.0073593,19.5 15,20.5073593 15,21.75 L15,28.5 C15,28.9142136 15.3357864,29.25 15.75,29.25 L18,29.25 L18,32.25 C18,32.6642136 18.3357864,33 18.75,33 L29.25,33 C29.6642136,33 30,32.6642136 30,32.25 L30,29.25 L32.25,29.25 C32.6642136,29.25 33,28.9142136 33,28.5 L33,21.75 C33,20.5073593 31.9926407,19.5 30.75,19.5 Z M28.5,31.5 L19.5,31.5 L19.5,24.75 L28.5,24.75 L28.5,31.5 Z" id="icon--print_Shape"></path></symbol><symbol viewBox="0 0 16 10" fill="none" id="icon--refine-arrow"><path d="M8.00081 0.399975L15.7008 8.09998L14.3008 9.59998L8.00081 3.29998L1.70081 9.59998L0.300806 8.09998L8.00081 0.399975Z" fill="black"></path></symbol><symbol viewBox="0 0 113 113" fill="none" id="icon--save-44"><path d="M113 0v113H0s37.5961-16.2668 66.8884-45.5591C96.1807 38.1486 113 0 113 0z" fill="url(#icon--save-44_paint0_linear)"></path><path d="M75.7383 98.6484h1.9336v2.2736h-1.9336v1.676l1.8164.351V105H70.5v-2.051l1.8281-.351v-1.676h-6.9609l-.1641-1.6759 7.0899-11.3086h3.4453v10.7109zm-7.336 0h3.9258v-6.1523l-.0703-.0234-.2812.4921-3.5743 5.6836zm20.8594 0h1.9336v2.2736h-1.9336v1.676l1.8164.351V105h-7.0547v-2.051l1.8282-.351v-1.676h-6.961l-.164-1.6759 7.0898-11.3086h3.4453v10.7109zm-7.3359 0h3.9258v-6.1523l-.0704-.0234-.2812.4921-3.5742 5.6836zm10.2851-2.8359c0-.6719.2162-1.2318.6485-1.6797.4375-.4479 1.0442-.6719 1.8203-.6719.7864 0 1.3958.224 1.8281.6719.4323.4427.6484 1.0026.6484 1.6797v.6016c0 .6718-.2161 1.2291-.6484 1.6718-.4323.4427-1.0364.6641-1.8125.6641-.7812 0-1.3906-.2214-1.8281-.6641s-.6563-1-.6563-1.6718v-.6016zm1.5157.6016c0 .302.0833.5573.25.7656.1666.2031.4062.3047.7187.3047.3021 0 .5365-.1016.7031-.3047.1667-.2083.25-.4636.25-.7656v-.6016c0-.3021-.0859-.5573-.2578-.7656-.1666-.2136-.4036-.3203-.7109-.3203-.3073 0-.5443.1067-.7109.3203-.1615.2083-.2422.4635-.2422.7656v.6016zm3.9218 5.7969c0-.667.2188-1.224.6563-1.672.4375-.448 1.0443-.6718 1.8203-.6718.781 0 1.388.2238 1.82.6718.438.443.657 1 .657 1.672v.601c0 .678-.217 1.237-.649 1.68-.432.443-1.036.664-1.812.664-.7816 0-1.3936-.221-1.8363-.664-.4375-.448-.6563-1.008-.6563-1.68v-.601zm1.5157.601c0 .297.0885.553.2656.766.1823.208.4193.313.7113.313.338 0 .58-.097.726-.289.146-.198.219-.461.219-.79v-.601c0-.297-.083-.55-.25-.758-.167-.213-.404-.32-.711-.32-.3125 0-.5521.107-.7188.32-.1614.208-.2421.461-.2421.758v.601zm-3.8203 1.336l-1.1094-.586 5.5547-8.8901 1.1089.5859-5.5542 8.8902zM67.3975 80.438l1.5468-.1504c.0931.5192.2811.9006.564 1.144.2865.2435.6714.3653 1.1548.3653.512 0 .897-.1074 1.1548-.3223.2614-.2184.3921-.4726.3921-.7627 0-.1862-.0555-.3437-.1665-.4726-.1075-.1325-.2972-.2471-.5694-.3438-.1862-.0644-.6105-.179-1.2729-.3437-.8522-.2113-1.4502-.4709-1.794-.7789-.4834-.4332-.7251-.9614-.7251-1.5844 0-.4011.1128-.7753.3384-1.1226.2292-.3509.5568-.6177.9829-.8003.4297-.1826.9471-.2739 1.5523-.2739.9882 0 1.7312.2166 2.229.6499.5013.4333.7645 1.0116.7895 1.7349l-1.5898.0698c-.0681-.4046-.2149-.6947-.4405-.8701-.222-.1791-.5568-.2686-1.0043-.2686-.462 0-.8236.0949-1.085.2847-.1683.1217-.2525.2847-.2525.4888 0 .1862.0788.3455.2364.478.2005.1683.6875.3437 1.4609.5263.7735.1827 1.3446.3724 1.7134.5694.3724.1933.6624.4601.8701.8003.2113.3366.3169.7537.3169 1.2514 0 .4512-.1253.8737-.376 1.2676-.2506.3939-.6051.6875-1.0634.8809-.4584.1898-1.0295.2846-1.7134.2846-.9955 0-1.76-.2291-2.2935-.6875-.5335-.4619-.8522-1.1333-.956-2.0141zM81.9732 83h-1.7295l-.6875-1.7886h-3.1475L75.7588 83h-1.6865l3.0669-7.874h1.6812L81.9732 83zm-2.9273-3.1152l-1.0849-2.9219-1.0635 2.9219h2.1484zM83.7496 83l-2.8144-7.874h1.7241l1.9927 5.8276 1.9282-5.8276h1.6865L85.4469 83h-1.6973zm5.0635 0v-7.874h5.8384v1.332H90.403v1.7456h3.9531v1.3267H90.403v2.143h4.3989V83h-5.9888z" fill="#fff"></path><defs></defs></symbol><linearGradient id="icon--save-44_paint0_linear" x1="68.415" y1="-14.062" x2="28.0769" y2="75.108" gradientUnits="userSpaceOnUse"><stop stop-color="#359FE0"></stop><stop offset="1" stop-color="#5CCDC0"></stop></linearGradient><symbol viewBox="0 0 113 113" fill="none" id="icon--save-54"><path d="M113 0v113H0s37.5961-16.2668 66.8884-45.5591C96.1807 38.1486 113 0 113 0z" fill="url(#icon--save-54_paint0_linear)"></path><path d="M75.2812 91.8281l-.3046-1.1484h-4.5938l-.4805 3.9375c.3204-.2344.7032-.4258 1.1485-.5742.4453-.1563.9375-.2383 1.4765-.2461 1.6407-.0235 2.9102.4726 3.8086 1.4883.8985 1.0156 1.3477 2.4296 1.3477 4.2421 0 1.6407-.4961 3.0037-1.4883 4.0897-.9844 1.086-2.4062 1.629-4.2656 1.629-1.5625 0-2.9024-.426-4.0195-1.277-1.1172-.86-1.6563-2.039-1.6172-3.539l.0234-.059 3.2813-.164c0 .758.2148 1.352.6445 1.781.4297.422.9922.633 1.6875.633.7969 0 1.3867-.285 1.7695-.855.3828-.571.5742-1.309.5742-2.2152 0-.9844-.2031-1.7735-.6093-2.3672-.4063-.5938-1.0118-.8906-1.8164-.8906-.6485 0-1.1485.1211-1.5.3632-.3438.2422-.5899.5704-.7383.9844l-3.0235-.1992.9844-9.5039h9.8203v3.8906h-2.1094zm13.9805 6.8203h1.9336v2.2736h-1.9336v1.676l1.8164.351V105h-7.0547v-2.051l1.8282-.351v-1.676h-6.961l-.164-1.6759 7.0898-11.3086h3.4453v10.7109zm-7.3359 0h3.9258v-6.1523l-.0704-.0234-.2812.4921-3.5742 5.6836zm10.2851-2.8359c0-.6719.2162-1.2318.6485-1.6797.4375-.4479 1.0442-.6719 1.8203-.6719.7864 0 1.3958.224 1.8281.6719.4323.4427.6484 1.0026.6484 1.6797v.6016c0 .6718-.2161 1.2291-.6484 1.6718-.4323.4427-1.0364.6641-1.8125.6641-.7812 0-1.3906-.2214-1.8281-.6641s-.6563-1-.6563-1.6718v-.6016zm1.5157.6016c0 .302.0833.5573.25.7656.1666.2031.4062.3047.7187.3047.3021 0 .5365-.1016.7031-.3047.1667-.2083.25-.4636.25-.7656v-.6016c0-.3021-.0859-.5573-.2578-.7656-.1666-.2136-.4036-.3203-.7109-.3203-.3073 0-.5443.1067-.7109.3203-.1615.2083-.2422.4635-.2422.7656v.6016zm3.9218 5.7969c0-.667.2188-1.224.6563-1.672.4375-.448 1.0443-.6718 1.8203-.6718.781 0 1.388.2238 1.82.6718.438.443.657 1 .657 1.672v.601c0 .678-.217 1.237-.649 1.68-.432.443-1.036.664-1.812.664-.7816 0-1.3936-.221-1.8363-.664-.4375-.448-.6563-1.008-.6563-1.68v-.601zm1.5157.601c0 .297.0885.553.2656.766.1823.208.4193.313.7113.313.338 0 .58-.097.726-.289.146-.198.219-.461.219-.79v-.601c0-.297-.083-.55-.25-.758-.167-.213-.404-.32-.711-.32-.3125 0-.5521.107-.7188.32-.1614.208-.2421.461-.2421.758v.601zm-3.8203 1.336l-1.1094-.586 5.5547-8.8901 1.1089.5859-5.5542 8.8902zM67.3975 80.438l1.5468-.1504c.0931.5192.2811.9006.564 1.144.2865.2435.6714.3653 1.1548.3653.512 0 .897-.1074 1.1548-.3223.2614-.2184.3921-.4726.3921-.7627 0-.1862-.0555-.3437-.1665-.4726-.1075-.1325-.2972-.2471-.5694-.3438-.1862-.0644-.6105-.179-1.2729-.3437-.8522-.2113-1.4502-.4709-1.794-.7789-.4834-.4332-.7251-.9614-.7251-1.5844 0-.4011.1128-.7753.3384-1.1226.2292-.3509.5568-.6177.9829-.8003.4297-.1826.9471-.2739 1.5523-.2739.9882 0 1.7312.2166 2.229.6499.5013.4333.7645 1.0116.7895 1.7349l-1.5898.0698c-.0681-.4046-.2149-.6947-.4405-.8701-.222-.1791-.5568-.2686-1.0043-.2686-.462 0-.8236.0949-1.085.2847-.1683.1217-.2525.2847-.2525.4888 0 .1862.0788.3455.2364.478.2005.1683.6875.3437 1.4609.5263.7735.1827 1.3446.3724 1.7134.5694.3724.1933.6624.4601.8701.8003.2113.3366.3169.7537.3169 1.2514 0 .4512-.1253.8737-.376 1.2676-.2506.3939-.6051.6875-1.0634.8809-.4584.1898-1.0295.2846-1.7134.2846-.9955 0-1.76-.2291-2.2935-.6875-.5335-.4619-.8522-1.1333-.956-2.0141zM81.9732 83h-1.7295l-.6875-1.7886h-3.1475L75.7588 83h-1.6865l3.0669-7.874h1.6812L81.9732 83zm-2.9273-3.1152l-1.0849-2.9219-1.0635 2.9219h2.1484zM83.7496 83l-2.8144-7.874h1.7241l1.9927 5.8276 1.9282-5.8276h1.6865L85.4469 83h-1.6973zm5.0635 0v-7.874h5.8384v1.332H90.403v1.7456h3.9531v1.3267H90.403v2.143h4.3989V83h-5.9888z" fill="#fff"></path><defs></defs></symbol><linearGradient id="icon--save-54_paint0_linear" x1="68.415" y1="-14.062" x2="28.0769" y2="75.108" gradientUnits="userSpaceOnUse"><stop stop-color="#359FE0"></stop><stop offset="1" stop-color="#5CCDC0"></stop></linearGradient><symbol viewBox="0 0 113 113" fill="none" id="icon--save-83"><path d="M113 0v113H0s37.5961-16.2668 66.8884-45.5591C96.1807 38.1486 113 0 113 0z" fill="url(#icon--save-83_paint0_linear)"></path><path d="M77.7422 92.4609c0 .8516-.2266 1.6055-.6797 2.2618-.4531.6562-1.0742 1.1679-1.8633 1.5351.9063.3828 1.6211.9297 2.1446 1.6406.5234.711.7851 1.5235.7851 2.4376 0 1.578-.5351 2.793-1.6055 3.644-1.0703.844-2.4687 1.266-4.1953 1.266-1.7343 0-3.1406-.422-4.2187-1.266-1.0703-.851-1.6055-2.066-1.6055-3.644 0-.9219.2578-1.7344.7734-2.4376.5235-.7109 1.2383-1.2578 2.1446-1.6406-.7969-.3672-1.418-.8789-1.8633-1.5351-.4453-.6563-.668-1.4102-.668-2.2618 0-1.5156.4961-2.6875 1.4883-3.5156.9922-.8359 2.3008-1.2539 3.9258-1.2539s2.9375.418 3.9375 1.2539c1 .8281 1.5 2 1.5 3.5156zm-3.0234 7.6411c0-.7661-.2266-1.3793-.6797-1.8403-.4453-.4609-1.0235-.6914-1.7344-.6914-.7109 0-1.2852.2305-1.7227.6914-.4375.461-.6562 1.0742-.6562 1.8403 0 .781.2187 1.398.6562 1.851.4375.445 1.0196.668 1.7461.668.711 0 1.2852-.226 1.7227-.68.4453-.453.668-1.066.668-1.839zm-.3985-7.4887c0-.6875-.1836-1.2383-.5508-1.6524-.3593-.4218-.8476-.6328-1.4648-.6328-.625 0-1.1133.2071-1.4649.6211-.3437.4063-.5156.961-.5156 1.6641 0 .7109.1758 1.2773.5274 1.6992.3515.4141.8437.6211 1.4765.6211.6172 0 1.1016-.207 1.4531-.6211.3594-.4219.5391-.9883.5391-1.6992zm8.9414 2.4023h1.9219c.8125 0 1.4141-.2109 1.8047-.6328.3906-.4297.5859-1.0234.5859-1.7812 0-.6875-.1953-1.2383-.5859-1.6524-.3906-.414-.9571-.6211-1.6992-.6211-.6407 0-1.1797.1875-1.6172.5625s-.6563.8672-.6563 1.4766h-3.3164l-.0234-.0703c-.0469-1.336.4648-2.4375 1.5351-3.3047s2.3985-1.3008 3.9844-1.3008c1.7656 0 3.1719.4219 4.2188 1.2656 1.0547.8438 1.582 2.0469 1.582 3.6094 0 .7422-.2344 1.4492-.7031 2.1211-.4688.6641-1.1133 1.1836-1.9336 1.5586.9453.3359 1.664.8516 2.1562 1.5469.5.6953.75 1.5039.75 2.426 0 1.562-.5703 2.793-1.7109 3.691-1.1328.891-2.5859 1.336-4.3594 1.336-1.5859 0-2.9492-.418-4.0898-1.254-1.1328-.844-1.6797-2.031-1.6407-3.562l.0235-.071h3.3164c0 .657.2344 1.2.7031 1.629.4688.422 1.0625.633 1.7813.633.789 0 1.4101-.219 1.8632-.656.461-.438.6915-1.031.6915-1.781 0-.8988-.2266-1.5551-.6797-1.9692-.4453-.4218-1.1055-.6328-1.9805-.6328h-1.9219v-2.5664zm8.9492.7969c0-.6719.2162-1.2318.6485-1.6797.4375-.4479 1.0442-.6719 1.8203-.6719.7864 0 1.3958.224 1.8281.6719.4323.4427.6484 1.0026.6484 1.6797v.6016c0 .6718-.2161 1.2291-.6484 1.6718-.4323.4427-1.0364.6641-1.8125.6641-.7812 0-1.3906-.2214-1.8281-.6641s-.6563-1-.6563-1.6718v-.6016zm1.5157.6016c0 .302.0833.5573.25.7656.1666.2031.4062.3047.7187.3047.3021 0 .5365-.1016.7031-.3047.1667-.2083.25-.4636.25-.7656v-.6016c0-.3021-.0859-.5573-.2578-.7656-.1666-.2136-.4036-.3203-.7109-.3203-.3073 0-.5443.1067-.7109.3203-.1615.2083-.2422.4635-.2422.7656v.6016zm3.9218 5.7969c0-.667.2188-1.224.6563-1.672.4375-.448 1.0443-.6718 1.8203-.6718.781 0 1.388.2238 1.82.6718.438.443.657 1 .657 1.672v.601c0 .678-.217 1.237-.649 1.68-.432.443-1.036.664-1.812.664-.7816 0-1.3936-.221-1.8363-.664-.4375-.448-.6563-1.008-.6563-1.68v-.601zm1.5157.601c0 .297.0885.553.2656.766.1823.208.4193.313.7113.313.338 0 .58-.097.726-.289.146-.198.219-.461.219-.79v-.601c0-.297-.083-.55-.25-.758-.167-.213-.404-.32-.711-.32-.3125 0-.5521.107-.7188.32-.1614.208-.2421.461-.2421.758v.601zm-3.8203 1.336l-1.1094-.586 5.5547-8.8901 1.1089.5859-5.5542 8.8902zM67.3975 80.438l1.5468-.1504c.0931.5192.2811.9006.564 1.144.2865.2435.6714.3653 1.1548.3653.512 0 .897-.1074 1.1548-.3223.2614-.2184.3921-.4726.3921-.7627 0-.1862-.0555-.3437-.1665-.4726-.1075-.1325-.2972-.2471-.5694-.3438-.1862-.0644-.6105-.179-1.2729-.3437-.8522-.2113-1.4502-.4709-1.794-.7789-.4834-.4332-.7251-.9614-.7251-1.5844 0-.4011.1128-.7753.3384-1.1226.2292-.3509.5568-.6177.9829-.8003.4297-.1826.9471-.2739 1.5523-.2739.9882 0 1.7312.2166 2.229.6499.5013.4333.7645 1.0116.7895 1.7349l-1.5898.0698c-.0681-.4046-.2149-.6947-.4405-.8701-.222-.1791-.5568-.2686-1.0043-.2686-.462 0-.8236.0949-1.085.2847-.1683.1217-.2525.2847-.2525.4888 0 .1862.0788.3455.2364.478.2005.1683.6875.3437 1.4609.5263.7735.1827 1.3446.3724 1.7134.5694.3724.1933.6624.4601.8701.8003.2113.3366.3169.7537.3169 1.2514 0 .4512-.1253.8737-.376 1.2676-.2506.3939-.6051.6875-1.0634.8809-.4584.1898-1.0295.2846-1.7134.2846-.9955 0-1.76-.2291-2.2935-.6875-.5335-.4619-.8522-1.1333-.956-2.0141zM81.9732 83h-1.7295l-.6875-1.7886h-3.1475L75.7588 83h-1.6865l3.0669-7.874h1.6812L81.9732 83zm-2.9273-3.1152l-1.0849-2.9219-1.0635 2.9219h2.1484zM83.7496 83l-2.8144-7.874h1.7241l1.9927 5.8276 1.9282-5.8276h1.6865L85.4469 83h-1.6973zm5.0635 0v-7.874h5.8384v1.332H90.403v1.7456h3.9531v1.3267H90.403v2.143h4.3989V83h-5.9888z" fill="#fff"></path><defs></defs></symbol><linearGradient id="icon--save-83_paint0_linear" x1="68.415" y1="-14.062" x2="28.0769" y2="75.108" gradientUnits="userSpaceOnUse"><stop stop-color="#359FE0"></stop><stop offset="1" stop-color="#5CCDC0"></stop></linearGradient><symbol viewBox="0 0 25 25" id="icon--search"><path fill="#FFF" fill-rule="evenodd" d="M19.256 17.143c1.294-1.714 2.013-3.714 2.013-6C21.269 5.57 16.813 1 11.206 1 5.6 1 1 5.571 1 11.143c0 5.571 4.6 10.143 10.206 10.143 2.3 0 4.457-.715 6.038-2l4.312 4.285c.288.286.719.429 1.006.429.288 0 .72-.143 1.007-.429.575-.571.575-1.428 0-2l-4.313-4.428zm-8.05 1.143c-4.025 0-7.331-3.143-7.331-7.143s3.306-7.286 7.331-7.286 7.332 3.286 7.332 7.286c0 4-3.307 7.143-7.332 7.143z"></path></symbol><symbol viewBox="0 0 24 24" fill="none" id="icon--search-paginate-left"><path d="M16 4.875L8.5 12L16 19.125" stroke="#606060" stroke-width="3" stroke-miterlimit="10" stroke-linecap="square"></path></symbol><symbol viewBox="0 0 24 24" fill="none" id="icon--search-paginate-right"><path d="M8.5 19.125L16 12L8.5 4.875" stroke="#606060" stroke-width="3" stroke-miterlimit="10" stroke-linecap="square"></path></symbol><symbol viewBox="4 0 24 24" fill="none" id="icon--telegram"><path d="M12.5 24C19.1274 24 24.5 18.6274 24.5 12C24.5 5.37258 19.1274 0 12.5 0C5.87258 0 0.5 5.37258 0.5 12C0.5 18.6274 5.87258 24 12.5 24Z" fill="#F5F5F5"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M5.93201 11.8735C9.43026 10.3494 11.763 9.34458 12.9301 8.85911C16.2627 7.473 16.9551 7.23222 17.4065 7.22427C17.5058 7.22252 17.7277 7.24712 17.8715 7.36378C17.9929 7.46229 18.0263 7.59536 18.0423 7.68876C18.0583 7.78215 18.0782 7.99491 18.0623 8.16116C17.8817 10.0586 17.1003 14.6633 16.7028 16.7886C16.5346 17.6878 16.2034 17.9893 15.8827 18.0188C15.1858 18.083 14.6567 17.5583 13.9817 17.1159C12.9256 16.4235 12.3289 15.9926 11.3037 15.317C10.119 14.5362 10.887 14.1071 11.5622 13.4058C11.7389 13.2223 14.8093 10.4295 14.8687 10.1762C14.8762 10.1445 14.8831 10.0264 14.8129 9.96403C14.7427 9.90167 14.6392 9.92299 14.5644 9.93995C14.4585 9.964 12.7713 11.0792 9.50276 13.2855C9.02385 13.6144 8.59007 13.7746 8.20141 13.7662C7.77295 13.757 6.94876 13.524 6.33606 13.3248C5.58456 13.0805 4.98728 12.9514 5.03929 12.5365C5.06638 12.3204 5.36395 12.0994 5.93201 11.8735Z" fill="black"></path></symbol><symbol viewBox="0 0 8.9958334 8.9958334" id="icon--telegram-round"><sodipodi:namedview id="icon--telegram-round_namedview7" pagecolor="#ffffff" bordercolor="#666666" borderopacity="1.0" inkscape:pageshadow="2" inkscape:pageopacity="0.0" inkscape:pagecheckerboard="0" inkscape:document-units="mm" showgrid="false" fit-margin-top="0" fit-margin-left="0" fit-margin-right="0" fit-margin-bottom="0" inkscape:zoom="2" inkscape:cx="-21.75" inkscape:cy="29" inkscape:window-width="1920" inkscape:window-height="1131" inkscape:window-x="0" inkscape:window-y="0" inkscape:window-maximized="1" inkscape:current-layer="layer1"></sodipodi:namedview><defs id="icon--telegram-round_defs2"></defs><g inkscape:label="Layer 1" inkscape:groupmode="layer" id="icon--telegram-round_layer1" transform="translate(-188.44676,-119.77868)"><g id="icon--telegram-round_layer1-6" transform="translate(115.96276,-23.561461)"><g fill="none" fill-rule="evenodd" id="icon--telegram-round_g13" transform="matrix(0.26458333,0,0,0.26458333,72.484004,143.34014)"><circle cx="17" cy="17" r="17" fill="#0076bf" id="icon--telegram-round_circle9"></circle></g><path fill-rule="evenodd" clip-rule="evenodd" d="m 75.07668,147.98236 c 1.118394,-0.48726 1.864175,-0.80851 2.237343,-0.96372 1.065424,-0.44313 1.286801,-0.52012 1.431105,-0.52266 0.03172,-5.6e-4 0.102685,0.007 0.148669,0.0446 0.03881,0.0315 0.04948,0.074 0.05458,0.10389 0.0051,0.0299 0.01148,0.0979 0.0064,0.15104 -0.05773,0.60664 -0.307552,2.07878 -0.434657,2.7582 -0.05379,0.2875 -0.159676,0.38391 -0.262176,0.39333 -0.222806,0.0205 -0.39198,-0.14724 -0.607774,-0.28869 -0.337635,-0.22132 -0.5284,-0.35911 -0.856166,-0.57509 -0.378777,-0.24961 -0.133217,-0.3868 0.08263,-0.61101 0.05651,-0.0587 1.038119,-0.95154 1.057116,-1.03253 0.0024,-0.0101 0.0046,-0.0479 -0.01783,-0.0678 -0.02244,-0.0199 -0.05556,-0.0131 -0.07945,-0.008 -0.03387,0.008 -0.573273,0.3642 -1.618218,1.06958 -0.153115,0.10515 -0.291807,0.15637 -0.41606,0.1537 -0.136983,-0.003 -0.400479,-0.0775 -0.596363,-0.14113 -0.240258,-0.0781 -0.43121,-0.11941 -0.414584,-0.25204 0.0087,-0.0691 0.103799,-0.13973 0.285409,-0.21196 z" fill="#000000" id="icon--telegram-round_path83" style="fill:#ffffff;stroke-width:0.264583"></path></g></g></symbol><clipPath id="icon--telegram-round_clip0_6125_607"><path fill="#ffffff" transform="translate(0,0.5)" d="M 0,0 H 29 V 29 H 0 Z" id="icon--telegram-round_path87"></path></clipPath><clipPath id="icon--telegram-round_clip0_6125_607-1"><path fill="#ffffff" transform="translate(0,0.5)" d="M 0,0 H 29 V 29 H 0 Z" id="icon--telegram-round_path1298"></path></clipPath><clipPath id="icon--telegram-round_clip0_6125_607-6"><path fill="#ffffff" transform="translate(0,0.5)" d="M 0,0 H 29 V 29 H 0 Z" id="icon--telegram-round_path87-0"></path></clipPath><symbol viewBox="0 0 30 30" id="icon--tick"><polygon transform="rotate(90.000000) translate(2,-25)" points="2.72241058 -1.75071398 1.75071318 -0.93622915 21.0827374 19.249286 18.7507132 23.4348012 19.7224106 24.249286 24.249286 19.249286"></polygon></symbol><symbol viewBox="0 0 24 20" id="icon--twitter"><defs></defs><g id="icon--twitter_Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="icon--twitter_Twitter" fill="#F0F0F0" fill-rule="nonzero"><path d="M11.9027 8.46876L19.3482 0.00012207H17.5838L11.119 7.35332L5.95547 0.00012207H0L7.8082 11.1195L0 20.0001H1.76443L8.59152 12.2349L14.0445 20.0001H20L11.9023 8.46876H11.9027ZM9.48608 11.2174L8.69495 10.1102L2.40018 1.2998H5.11025L10.1902 8.41006L10.9813 9.5173L17.5847 18.7596H14.8746L9.48608 11.2178V11.2174Z"></path></g></g></symbol><symbol viewBox="0 0 34 34" id="icon--twitter-round"><g fill="none" fill-rule="evenodd"><circle cx="17" cy="17" r="17" fill="#0076BF"></circle><path fill="#FFF" fill-rule="nonzero" id="icon--twitter-round_Vector" d="M18.5222 15.9331L24.4785 9.00928H23.0671L17.8952 15.0211L13.7644 9.00928H9L15.2466 18.1002L9 25.3609H10.4115L15.8732 19.0122L20.2356 25.3609H25L18.5218 15.9331H18.5222ZM16.5889 18.1803L15.956 17.2751L10.9201 10.0719H13.0882L17.1522 15.8851L17.7851 16.7903L23.0677 24.3466H20.8997L16.5889 18.1807V18.1803Z"></path></g></symbol><symbol viewBox="15 15 20 20" id="icon--whatsapp"><g id="icon--whatsapp_Symbols"><g id="icon--whatsapp_whatsapp"><path d="M30.3 17.587C28.612 15.9 26.475 15 24 15c-4.837 0-8.887 4.05-8.887 8.887 0 1.575.45 3.15 1.237 4.5L15 33l4.725-1.238c1.35.675 2.813 1.126 4.275 1.126 4.95 0 8.888-4.05 8.888-8.888.112-2.475-.9-4.725-2.588-6.413zm-1.913 9.563c-.224.563-1.125 1.013-1.462 1.013-.338.112-1.463 0-2.7-.563-2.25-1.013-3.713-3.263-3.825-3.375-.112-.113-.9-1.238-.9-2.25a2.76 2.76 0 0 1 .788-1.913c.45-.45 1.35-.337 1.575.113.112.45.562 1.575.675 1.688.112.112.112.562-.226.787-.112 0-.675.45-.45.788.113.225.563.9 1.238 1.575.9.787 1.575 1.012 1.8 1.124.225.113.338.113.45-.112.112-.112.563-.675.675-.9.113-.225.338-.225.45-.113.112.113 1.35.563 1.575.675.225.226.45.226.45.338.113.113.113.563-.113 1.125z"></path></g></g></symbol><symbol viewBox="0 0 27 20" id="icon--youtube"><defs></defs><g id="icon--youtube_Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="icon--youtube_Youtube" fill="#F0F0F0" fill-rule="nonzero"><path d="M21.794,0.205 C17.79,-0.069 8.871,-0.068 4.872,0.205 C0.542,0.5 0.032,3.115 0,10 C0.032,16.872 0.538,19.499 4.872,19.796 C8.872,20.068 17.79,20.069 21.794,19.796 C26.124,19.5 26.634,16.885 26.667,10 C26.634,3.128 26.129,0.501 21.794,0.205 Z M10,14.445 L10,5.555 L18.889,9.992 L10,14.445 Z" id="icon--youtube_Shape"></path></g></g></symbol><symbol viewBox="0 0 34 34" id="icon--youtube-round"><g fill="none" fill-rule="evenodd"><circle cx="17" cy="17" r="17" fill="#0076BF"></circle><path fill="#FFF" fill-rule="nonzero" d="M24.8 13.8c-.2-1.3-.8-2.2-2.2-2.4C20.4 11 17 11 17 11s-3.4 0-5.6.4c-1.4.2-2.1 1.1-2.2 2.4C9 15.1 9 17 9 17s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4 2.2.4 5.6.4 5.6.4s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM15 20v-6l5 3-5 3z"></path></g></symbol><symbol viewBox="0 0 497 144" id="logo-with-strapline"><g fill="none" fill-rule="evenodd"><g fill="#FFF" fill-rule="nonzero"><g><g><g><g><path d="M49.847 89.407L7.983 41.456 7.983 89.407 0 89.407 0 24.651 2.85 24.651 44.603 72.506 44.603 24.651 52.608 24.651 52.608 89.407zM66.96 24.651L75.237 24.651 75.237 89.407 66.96 89.407zM106.319 56.978L97.858 66.166 97.858 89.407 89.603 89.407 89.603 24.651 97.88 24.651 97.88 56.339 126.207 24.651 135.021 24.651 135.021 25.106 112.113 50.916 136.673 88.945 136.673 89.407 127.382 89.407zM161.777 56.978L153.316 66.166 153.316 89.407 145.039 89.407 145.039 24.651 153.316 24.651 153.316 56.339 181.643 24.651 190.457 24.651 190.457 25.106 167.571 50.916 192.131 88.945 192.131 89.407 182.877 89.407zM200.504 24.651L234.898 24.651 234.898 31.813 208.781 31.813 208.781 52.296 231.498 52.296 231.498 59.37 208.781 59.37 208.781 82.238 234.898 82.238 234.898 89.407 200.504 89.407zM246.855 24.651L255.132 24.651 255.132 89.407 246.855 89.407zM328.893 71.611h-31.545l-7.036 17.811H273.95v-.844l35.65-87.015h7.043l35.79 87.015v.844h-16.386l-7.153-17.81zm-15.776-41.207L302.32 59.025h21.571l-10.774-28.62zM358.41 85.063V71.736l.61-.242c5.883 4.662 13.18 7.183 20.69 7.148 7.277 0 11.016-2.79 11.016-7.39 0-4.404-2.424-5.937-9.1-7.64l-6.309-1.695c-10.15-2.664-16.907-8.477-16.907-19.147 0-12.234 9.585-20.108 24.237-20.108 8.373 0 14.322 1.468 19.294 3.75v12.366l-.61.36c-5.748-2.931-12.106-4.468-18.56-4.485-7.16 0-9.466 2.79-9.466 6.664 0 3.757 2.306 5.695 7.278 7.03l6.184 1.556c13.103 3.537 19.382 7.772 19.382 19.529 0 13.943-10.796 21.326-25.478 21.326-10.767 0-17.318-2.422-22.26-5.695zM413.34 0h16.378v14.178h-16.379V0zm.154 24.357h16.157v65.065h-16.157V24.357zM476.913 82.194c-3.275 4.6-8.732 8.806-18.2 8.806-12.485 0-21.835-6.664-21.835-19.264 0-13.452 10.283-18.053 26.08-20.358l12.964-1.82v-.242c0-10.274-4.37-13.452-14.197-13.452-6.712-.147-13.337 1.53-19.17 4.851l-.734-.242V27.997c5.097-3.148 12.376-5.086 22.203-5.086 17.861-.007 28.055 7.178 28.055 25.92v40.591h-13.954l-1.212-7.228zm-.991-9.005v-13.21l-9.467 1.468c-9.827 1.468-13.705 3.882-13.705 9.577 0 5.086 3.15 8.476 9.944 8.476 6.331-.014 10.459-2.678 13.228-6.311z" transform="translate(-480 -105) translate(474 105) translate(9.107)"></path></g></g><path d="M18.224 136.738V116.78h6.562v-4.012H6.63v4.012h6.596v19.958h4.998zm14.563 0v-13.702c1.156-.85 2.278-1.326 3.808-1.326 1.7 0 3.06.782 3.06 3.332v11.696h4.522v-12.512c0-4.182-2.21-6.154-5.814-6.154-2.55 0-4.25 1.156-5.576 2.448v-9.418l-4.522.918v24.718h4.522zm25.138.442c3.026 0 5.202-.782 6.392-1.462v-3.57l-.204-.102c-1.53.884-3.332 1.564-5.848 1.564-3.604 0-5.61-1.598-5.916-5.134h12.376c.646-7.378-2.924-10.404-7.888-10.404-5.304 0-8.908 3.842-8.908 9.452 0 5.984 3.502 9.656 9.996 9.656zm2.516-11.764h-7.956c.51-2.72 2.04-4.046 4.352-4.046 2.278 0 3.468 1.428 3.604 4.046zm25.284 11.56l7.99-18.258v-.238h-4.284l-4.522 10.676-4.522-10.676h-4.76v.238l8.16 18.258h1.938zm18.644.204c5.474 0 9.622-3.74 9.622-9.588 0-5.882-4.148-9.52-9.622-9.52-5.44 0-9.52 3.638-9.52 9.52 0 5.848 4.08 9.588 9.52 9.588zm0-3.502c-2.89 0-4.964-2.142-4.964-6.086 0-3.91 2.074-6.052 4.964-6.052 2.958 0 5.032 2.142 5.032 6.052 0 3.944-2.074 6.086-5.032 6.086zm18.099-18.054v-3.978h-4.59v3.978h4.59zm-.034 21.114V118.48h-4.522v18.258h4.522zm13.68.442c2.55 0 4.25-.714 5.303-1.496v-3.434l-.204-.068c-1.292.884-2.686 1.496-4.726 1.496-3.298 0-5.474-2.142-5.474-6.086 0-3.978 2.414-5.984 5.406-5.984 1.768 0 3.128.51 4.386 1.224l.17-.102v-3.536c-.952-.612-2.72-1.122-4.998-1.122-5.44 0-9.588 3.434-9.588 9.52 0 5.984 3.842 9.588 9.724 9.588zm18.065 0c3.026 0 5.202-.782 6.392-1.462v-3.57l-.204-.102c-1.53.884-3.332 1.564-5.848 1.564-3.604 0-5.61-1.598-5.916-5.134h12.376c.646-7.378-2.924-10.404-7.888-10.404-5.304 0-8.908 3.842-8.908 9.452 0 5.984 3.502 9.656 9.996 9.656zm2.516-11.764h-7.956c.51-2.72 2.04-4.046 4.352-4.046 2.278 0 3.468 1.428 3.604 4.046zm25.386 11.764c5.474 0 9.622-3.74 9.622-9.588 0-5.882-4.148-9.52-9.622-9.52-5.44 0-9.52 3.638-9.52 9.52 0 5.848 4.08 9.588 9.52 9.588zm0-3.502c-2.89 0-4.964-2.142-4.964-6.086 0-3.91 2.074-6.052 4.964-6.052 2.958 0 5.032 2.142 5.032 6.052 0 3.944-2.074 6.086-5.032 6.086zm18.644 3.06V121.88h3.944v-3.4h-3.944v-1.122c0-2.414 1.496-3.094 2.856-3.094 1.054 0 1.496.068 1.768.102v-3.128c-.374-.102-1.156-.238-2.55-.238-3.162 0-6.596 1.258-6.596 6.154v1.326h-2.244v3.4h2.244v14.858h4.522zm22.836.34c1.36 0 2.618-.204 3.4-.442v-3.264l-.204-.102c-.476.136-1.224.272-1.904.272-1.292 0-2.006-.476-2.006-1.768v-9.894h3.91v-3.4h-3.91v-3.842l-4.556.714v3.128h-2.176v3.4h2.176v10.642c0 3.502 2.414 4.556 5.27 4.556zm11.912-.34v-13.702c1.156-.85 2.278-1.326 3.808-1.326 1.7 0 3.06.782 3.06 3.332v11.696h4.522v-12.512c0-4.182-2.21-6.154-5.814-6.154-2.55 0-4.25 1.156-5.576 2.448v-9.418l-4.522.918v24.718h4.522zm25.137.442c3.026 0 5.202-.782 6.392-1.462v-3.57l-.204-.102c-1.53.884-3.332 1.564-5.848 1.564-3.604 0-5.61-1.598-5.916-5.134h12.376c.646-7.378-2.924-10.404-7.888-10.404-5.304 0-8.908 3.842-8.908 9.452 0 5.984 3.502 9.656 9.996 9.656zm2.516-11.764h-7.956c.51-2.72 2.04-4.046 4.352-4.046 2.278 0 3.468 1.428 3.604 4.046zm19.81 11.322l1.973-4.998h8.84l2.006 4.998h5.168v-.238l-10.234-24.004h-2.142l-10.2 24.004v.238h4.59zm9.419-8.534h-6.052l3.026-7.616 3.026 7.616zm17.215 8.908c4.114 0 7.14-2.074 7.14-5.984 0-3.298-1.768-4.488-5.44-5.474l-1.734-.442c-1.394-.374-2.04-.918-2.04-1.972 0-1.088.646-1.87 2.652-1.87 1.972 0 3.842.544 5.202 1.258l.17-.102v-3.468c-1.394-.646-3.06-1.054-5.406-1.054-4.114 0-6.8 2.21-6.8 5.644 0 2.992 1.904 4.624 4.76 5.372l1.768.476c1.87.476 2.55.918 2.55 2.142 0 1.292-1.054 2.074-3.094 2.074-2.346 0-4.216-.782-5.814-2.006l-.17.068v3.74c1.394.918 3.23 1.598 6.256 1.598zm15.617-21.488v-3.978h-4.59v3.978h4.59zm-.034 21.114V118.48h-4.522v18.258h4.522zm10.042.442c2.652 0 4.182-1.19 5.1-2.482l.34 2.04h3.91v-11.39c0-5.27-2.856-7.276-7.854-7.276-2.754 0-4.794.544-6.222 1.428v3.502l.204.068c1.598-.85 3.06-1.36 5.372-1.36 2.754 0 3.978.884 3.978 3.774v.068l-3.638.51c-4.42.646-7.31 1.938-7.31 5.712 0 3.536 2.618 5.406 6.12 5.406zm1.122-3.23c-1.904 0-2.788-.952-2.788-2.38 0-1.598 1.088-2.278 3.842-2.686l2.652-.408v3.706c-.782 1.02-1.938 1.768-3.706 1.768zm17.487 2.788v-13.702c1.156-.884 2.278-1.326 3.808-1.326 1.7 0 3.06.782 3.06 3.332v11.696h4.522v-12.512c0-4.182-2.346-6.154-5.882-6.154-2.686 0-4.386 1.258-5.746 2.584l-.306-2.176h-3.978v18.258h4.522zm33.547.442c2.55 0 4.25-.714 5.304-1.496v-3.434l-.204-.068c-1.292.884-2.686 1.496-4.726 1.496-3.298 0-5.474-2.142-5.474-6.086 0-3.978 2.414-5.984 5.406-5.984 1.768 0 3.128.51 4.386 1.224l.17-.102v-3.536c-.952-.612-2.72-1.122-4.998-1.122-5.44 0-9.588 3.434-9.588 9.52 0 5.984 3.842 9.588 9.724 9.588zm18.065 0c3.026 0 5.202-.782 6.392-1.462v-3.57l-.204-.102c-1.53.884-3.332 1.564-5.848 1.564-3.604 0-5.61-1.598-5.916-5.134h12.376c.646-7.378-2.924-10.404-7.888-10.404-5.304 0-8.908 3.842-8.908 9.452 0 5.984 3.502 9.656 9.996 9.656zm2.516-11.764h-7.956c.51-2.72 2.04-4.046 4.352-4.046 2.278 0 3.468 1.428 3.604 4.046zm12.727 11.322v-13.702c1.156-.884 2.278-1.326 3.808-1.326 1.7 0 3.06.782 3.06 3.332v11.696h4.522v-12.512c0-4.182-2.346-6.154-5.882-6.154-2.686 0-4.386 1.258-5.746 2.584l-.306-2.176h-3.978v18.258h4.522zm22.316.34c1.36 0 2.618-.204 3.4-.442v-3.264l-.204-.102c-.476.136-1.224.272-1.904.272-1.292 0-2.006-.476-2.006-1.768v-9.894h3.91v-3.4h-3.91v-3.842l-4.556.714v3.128h-2.176v3.4h2.176v10.642c0 3.502 2.414 4.556 5.27 4.556zm13.339.102c2.584 0 4.386-1.156 5.746-2.482l.306 2.04h3.978V118.48h-4.522v13.77c-1.19.884-2.414 1.258-3.944 1.258-1.734 0-3.162-.748-3.162-3.298v-11.73h-4.522v12.512c0 4.114 2.448 6.188 6.12 6.188zm19.425-.442v-12.41c1.088-1.36 2.414-1.836 4.59-1.836.51 0 1.088.068 1.462.17l.204-.102v-4.216c-.442-.102-.918-.136-1.462-.136-2.346 0-4.012 1.428-4.998 3.094l-.34-2.822h-3.978v18.258h4.522zm10.858 7.276c4.794-.306 7.038-1.768 8.5-5.678l7.378-19.618v-.238h-4.318l-4.352 12.172-4.454-12.172h-4.794v.238l6.766 17.17-.68 1.7c-.612 1.564-1.734 2.38-4.046 2.652v3.774z" transform="translate(-480 -105) translate(474 105)"></path></g></g></g></g></symbol><symbol viewBox="0 0 25 25" id="newsletter-signup"><path fill="#fff" fill-rule="nonzero" d="M22.5 5H17V1.5A1.5 1.5 0 0 0 15.5 0h-12A1.5 1.5 0 0 0 2 1.5v22A1.5 1.5 0 0 0 3.5 25h12a1.5 1.5 0 0 0 1.5-1.5V15h5.5a1.5 1.5 0 0 0 1.5-1.5v-7A1.5 1.5 0 0 0 22.5 5zm-.431 1L17.5 8.907 12.931 6h9.138zM16 23.5a.5.5 0 0 1-.5.5h-12a.5.5 0 0 1-.5-.5v-22a.5.5 0 0 1 .5-.5h12a.5.5 0 0 1 .5.5V5h-3.5A1.5 1.5 0 0 0 11 6.5v7a1.5 1.5 0 0 0 1.5 1.5H16v8.5zm7-10a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5V6.593l5.231 3.329a.5.5 0 0 0 .537 0L23 6.592V13.5zm-12 8a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1h2a.5.5 0 0 1 .5.5z"></path></symbol></defs></svg></p><div id="content"><div data-trackable="article" data-version="7" data-paywall-state="" data-access-type="0"><p><span><a data-trackable="primary-tag" href="https://asia.nikkei.com/Spotlight/Japan-immigration">Japan immigration</a></span></p><p data-trackable="subhead"><span>IT workers can work remotely while traveling around the country</span></p></div><div data-trackable="article" data-version="7" data-test="article"><div><p><img full="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F3%2F9%2F5%2F4%2F47224593-3-eng-GB%2FCropped-1706848357photo_SXM2024020100010829.png?source=nar-cms" src="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F3%2F9%2F5%2F4%2F47224593-3-eng-GB%2FCropped-1706848357photo_SXM2024020100010829.png?width=700&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms" onerror="this.src = '/bundles/app/images/placeholder.jpg?ez'; this.alt = '(placeholder image)'" alt="" loading="lazy"></p><p><span data-trackable="caption">    Japan hopes its new visa status will attract, among others, workers and owners of consulting companies abroad and YouTubers earning advertising fees from overseas companies.


</span></p><p><span data-trackable="timestamp" data-test="timestamp" data-time-utc="February 02, 2024 05:18 UTC" data-updated="false" data-show-full="true" datetime="February 02, 2024 05:18 UTC"><time>February 2, 2024 14:18 JST</time><span> | </span><a href="https://asia.nikkei.com/Location/East-Asia/Japan">Japan</a></span></p><div id="article-body-preview" data-article-body="" data-trackable="bodytext" data-paragraph-count="8" data-word-count="248" data-text-length="1532"><p>TOKYO -- Japan will establish a new visa status that will make it easier for IT engineers and other workers for&nbsp;overseas companies to reside in the country, the Immigration Services Agency said Friday.</p><p>The planned status will allow highly skilled workers to work in Japan on a teleworking basis for up to six months while enjoying sightseeing trips, the agency said.</p></div></div><div data-trackable="read-next-listing"><h2 data-trackable="listing-title">Read Next</h2><ul><div data-trackable="slot-1"><li data-trackable="teaser-splash"><p><a href="https://asia.nikkei.com/Business/Markets/Property/Japan-s-Mitsubishi-Estate-plans-10-000-homes-for-digital-nomads" title="Japan's Mitsubishi Estate plans 10,000 homes for 'digital nomads'" data-trackable="thumbnail"><img full="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F9%2F4%2F3%2F1%2F47061349-4-eng-GB%2FCropped-1703956977photo.JPG?source=nar-cms" src="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F9%2F4%2F3%2F1%2F47061349-4-eng-GB%2FCropped-1703956977photo.JPG?width=693&amp;height=390&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms" onerror="this.src = '/bundles/app/images/placeholder.jpg?ez'; this.alt = '(placeholder image)'" alt="" loading="lazy"></a></p></li></div><div data-trackable="slot-2"><li data-trackable="teaser-article"><p><a href="https://asia.nikkei.com/Spotlight/Japan-immigration/Japan-s-foreign-workers-surpass-2m-for-first-time-led-by-Vietnamese" title="Japan's foreign workers surpass 2m for first time, led by Vietnamese" data-trackable="thumbnail"><img full="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F6%2F3%2F5%2F0%2F47190536-4-eng-GB%2FCropped-1706299403photo_SXM2024012600006406.jpg?source=nar-cms" src="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F6%2F3%2F5%2F0%2F47190536-4-eng-GB%2FCropped-1706299403photo_SXM2024012600006406.jpg?width=240&amp;height=137&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms" onerror="this.src = '/bundles/app/images/placeholder.jpg?ez'; this.alt = '(placeholder image)'" alt="" loading="lazy"></a></p></li></div><div data-trackable="slot-3"><li data-trackable="teaser-article"><p><a href="https://asia.nikkei.com/Spotlight/Japan-immigration/Japan-s-Fukuoka-eases-residency-screening-for-foreign-IT-engineers" title="Japan's Fukuoka eases residency screening for foreign IT engineers" data-trackable="thumbnail"><img full="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F3%2F2%2F1%2F0%2F46840123-4-eng-GB%2FCropped-1700014351photo_SXM2023111200002744.jpg?source=nar-cms" src="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F3%2F2%2F1%2F0%2F46840123-4-eng-GB%2FCropped-1700014351photo_SXM2023111200002744.jpg?width=240&amp;height=137&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms" onerror="this.src = '/bundles/app/images/placeholder.jpg?ez'; this.alt = '(placeholder image)'" alt="" loading="lazy"></a></p></li></div><div data-trackable="slot-4"><li data-trackable="teaser-article"><p><a href="https://asia.nikkei.com/Editor-s-Picks/Tea-Leaves/Digital-nomads-push-Southeast-Asia-s-boundaries" title="Digital nomads push Southeast Asia's boundaries" data-trackable="thumbnail"><img full="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F2%2F1%2F9%2F5%2F43065912-3-eng-GB%2FCropped-1668388827GettyImages-1288029122.jpg?source=nar-cms" src="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F2%2F1%2F9%2F5%2F43065912-3-eng-GB%2FCropped-1668388827GettyImages-1288029122.jpg?width=240&amp;height=137&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms" onerror="this.src = '/bundles/app/images/placeholder.jpg?ez'; this.alt = '(placeholder image)'" alt="" loading="lazy"></a></p></li></div><div data-trackable="slot-5"><li data-trackable="teaser-article"><p><a href="https://asia.nikkei.com/Spotlight/Japan-immigration/Japan-greenlights-longer-stays-for-more-skilled-foreign-workers" title="Japan greenlights longer stays for more skilled foreign workers" data-trackable="thumbnail"><img full="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F8%2F5%2F3%2F1%2F46061358-5-eng-GB%2FCropped-1686321444N+Vietnamese+worker.jpg?source=nar-cms" src="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F8%2F5%2F3%2F1%2F46061358-5-eng-GB%2FCropped-1686321444N+Vietnamese+worker.jpg?width=240&amp;height=137&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms" onerror="this.src = '/bundles/app/images/placeholder.jpg?ez'; this.alt = '(placeholder image)'" alt="" loading="lazy"></a></p></li></div><div data-trackable="slot-6"><li data-trackable="teaser-article"><p><a href="https://asia.nikkei.com/Spotlight/Japan-immigration/Japan-eyes-adding-drivers-railway-workers-to-skilled-worker-visa" title="Japan eyes adding drivers, railway workers to skilled worker visa" data-trackable="thumbnail"><img full="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F8%2F0%2F5%2F9%2F47189508-4-eng-GB%2FCropped-1706279627photo_SXM2023121100010071.jpg?source=nar-cms" src="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F8%2F0%2F5%2F9%2F47189508-4-eng-GB%2FCropped-1706279627photo_SXM2023121100010071.jpg?width=240&amp;height=137&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms" onerror="this.src = '/bundles/app/images/placeholder.jpg?ez'; this.alt = '(placeholder image)'" alt="" loading="lazy"></a></p></li></div><div data-trackable="slot-7"><li data-trackable="teaser-article"><p><a href="https://asia.nikkei.com/Business/Travel-Leisure/Japan-sees-2.52m-visitors-in-October-topping-pre-COVID-levels" title="Japan sees 2.52m visitors in October, topping pre-COVID levels" data-trackable="thumbnail"><img full="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F7%2F6%2F8%2F1%2F46841867-3-eng-GB%2FCropped-170003516520231115+Narita+Airport.jpg?source=nar-cms" src="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F7%2F6%2F8%2F1%2F46841867-3-eng-GB%2FCropped-170003516520231115+Narita+Airport.jpg?width=240&amp;height=137&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms" onerror="this.src = '/bundles/app/images/placeholder.jpg?ez'; this.alt = '(placeholder image)'" alt="" loading="lazy"></a></p></li></div></ul></div><div data-trackable="latest-footer-listing" data-test="latest-footer-listing"><h2 data-trackable="listing-title">
            Latest On Japan immigration
        </h2><ul><div data-trackable="slot-1"><li data-trackable="teaser-article"><p><a href="https://asia.nikkei.com/Spotlight/Japan-immigration/Japan-s-foreign-workers-surpass-2m-for-first-time-led-by-Vietnamese" title="Japan's foreign workers surpass 2m for first time, led by Vietnamese" data-trackable="thumbnail"><img full="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F6%2F3%2F5%2F0%2F47190536-4-eng-GB%2FCropped-1706299403photo_SXM2024012600006406.jpg?source=nar-cms" src="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F6%2F3%2F5%2F0%2F47190536-4-eng-GB%2FCropped-1706299403photo_SXM2024012600006406.jpg?width=240&amp;height=137&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms" onerror="this.src = '/bundles/app/images/placeholder.jpg?ez'; this.alt = '(placeholder image)'" alt="" loading="lazy"></a></p></li></div><div data-trackable="slot-2"><li data-trackable="teaser-article"><p><a href="https://asia.nikkei.com/Spotlight/Japan-immigration/Japan-eyes-adding-drivers-railway-workers-to-skilled-worker-visa" title="Japan eyes adding drivers, railway workers to skilled worker visa" data-trackable="thumbnail"><img full="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F8%2F0%2F5%2F9%2F47189508-4-eng-GB%2FCropped-1706279627photo_SXM2023121100010071.jpg?source=nar-cms" src="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F8%2F0%2F5%2F9%2F47189508-4-eng-GB%2FCropped-1706279627photo_SXM2023121100010071.jpg?width=240&amp;height=137&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms" onerror="this.src = '/bundles/app/images/placeholder.jpg?ez'; this.alt = '(placeholder image)'" alt="" loading="lazy"></a></p></li></div><div data-trackable="slot-3"><li data-trackable="teaser-article"><p><a href="https://asia.nikkei.com/Spotlight/Japan-immigration/Surge-in-Nepalese-students-in-Japan-tests-multiculturalism" title="Surge in Nepalese students in Japan tests multiculturalism" data-trackable="thumbnail"><img full="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F1%2F2%2F4%2F8%2F47058421-3-eng-GB%2FCropped-1703832007photo_SXM2023091400006706.jpg?source=nar-cms" src="https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fcms-image-bucket-production-ap-northeast-1-a7d2.s3.ap-northeast-1.amazonaws.com%2Fimages%2F1%2F2%2F4%2F8%2F47058421-3-eng-GB%2FCropped-1703832007photo_SXM2023091400006706.jpg?width=240&amp;height=137&amp;fit=cover&amp;gravity=faces&amp;dpr=2&amp;quality=medium&amp;source=nar-cms" onerror="this.src = '/bundles/app/images/placeholder.jpg?ez'; this.alt = '(placeholder image)'" alt="" loading="lazy"></a></p></li></div></ul></div></div><div><h2>Sponsored Content</h2><h3>
            About Sponsored Content
            <span>This content was commissioned by Nikkei's Global Business Bureau.</span></h3></div></div><div><p>
        Nikkei Asian Review, now known as Nikkei Asia, will be the voice of the Asian Century.
    </p><h3>
        Celebrate our next chapter<br>
        Free access for everyone - Sep. 30
    </h3><p><a href="https://asia.nikkei.com/Nikkei-Asia-Launch" target="_blank">Find out more</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Partisan Solution to Partisan Gerrymandering: The Define–Combine Procedure (122 pts)]]></title>
            <link>https://www.cambridge.org/core/journals/political-analysis/article/partisan-solution-to-partisan-gerrymandering-the-definecombine-procedure/B0792DD0A49332944F2AF5FF6828E275</link>
            <guid>39228156</guid>
            <pubDate>Fri, 02 Feb 2024 13:15:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cambridge.org/core/journals/political-analysis/article/partisan-solution-to-partisan-gerrymandering-the-definecombine-procedure/B0792DD0A49332944F2AF5FF6828E275">https://www.cambridge.org/core/journals/political-analysis/article/partisan-solution-to-partisan-gerrymandering-the-definecombine-procedure/B0792DD0A49332944F2AF5FF6828E275</a>, See on <a href="https://news.ycombinator.com/item?id=39228156">Hacker News</a></p>
<div id="readability-page-1" class="page"><div lang="en" data-v-2fa8b348="" id="sec0" data-v-5248b1d6=""><h2>Abstract</h2>  <div><p>Redistricting reformers have proposed many solutions to the problem of partisan gerrymandering, but they all require either bipartisan consensus or the agreement of both parties on the legitimacy of a neutral third party to resolve disputes. In this paper, we propose a new method for drawing district maps, the Define–Combine Procedure, that substantially reduces partisan gerrymandering without requiring a neutral third party or bipartisan agreement. One party defines a map of <span><span><img data-mimesubtype="png" data-type="" src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline1.png"><span data-mathjax-type="texmath"><span>$2N$</span></span></span></span> equal-population contiguous districts. Then the second party combines pairs of contiguous districts to create the final map of <span>N</span> districts. Using real-world geographic and electoral data, we employ simulations and map-drawing algorithms to show that this procedure dramatically reduces the advantage conferred to the party controlling the redistricting process and leads to less-biased maps without requiring cooperation or non-partisan actors.</p></div> </div><div id="content-container" data-v-5248b1d6=""><div>
<div>
<div data-magellan-destination="sec1" id="sec1">
<h2><span>1</span> Introduction</h2>
<p> Following the 2020 Census, every state in the United States redrew their congressional and state legislative district boundaries (Warshaw, McGhee, and Migurski <a href="#r25"><span>Reference Warshaw, McGhee and Migurski</span>2022</a>). Many city councils, school boards, county commissions, and other representative bodies also drew new maps. Redistricting creates opportunities for political actors to benefit certain groups over others. In particular, partisan gerrymandering is used to advantage one political party, even enabling a party to win a majority of the seats in a legislative chamber without winning a majority of votes in the election. For example, in 2018, Republican candidates for the Wisconsin State Assembly won only 45% of the statewide vote but, due to partisan gerrymandering, won 63 of the 99 seats (64%).</p>
<p> Gerrymandering hinders democratic representation in several ways. First, when districts are drawn to amplify disproportionately some voices over others, public policy is less likely to reflect constituent preferences. Second, the public in a representative democracy expects “continued responsiveness of the government to the preferences of its citizens” (Dahl <a href="#r11"><span>Reference Dahl</span>1971</a>), a relationship fostered by electoral competition and the threat of removing from office lawmakers out of step with their constituents (Canes-Wrone, Brady, and Cogan <a href="#r6"><span>Reference Canes-Wrone, Brady and Cogan</span>2002</a>). Gerrymandering becomes a critical problem when parties undermine electoral competition by drawing districts that create, enhance, or lock in a partisan advantage and shield representatives from accountability.</p>
<p> Current reforms for partisan gerrymandering, including bipartisan or non-partisan commissions, require either bipartisan cooperation or a neutral third-party actor trusted by both political parties, such as a judge, special master, or independent arbiter, to select a fair map. However, in today’s hyper-partisan environment, there are few such actors considered able to fulfill this role fairly by both sides, and attempts at cooperation have generated acrimony. Intense controversies continue to surround redistricting, even in states that have enacted anti-gerrymandering reforms.</p>
<p> We propose a new method for drawing maps, the <em>Define–Combine Procedure</em> (DCP), which reduces partisan gerrymandering without a neutral third party or bipartisan cooperation. We develop a framework that allows each party to act in their own partisan self-interest but achieves a significantly fairer map than would be drawn by either party on its own. We divide the districting process into two stages. Suppose a state must be divided into <em>N</em> equal-population districts. One party—the “definer”—draws <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline2.png?pub-status=live" width="26" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline2.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline2.png">
<span data-mathjax-type="texmath"><span>
$2N$
</span></span>
</span>
</span> contiguous, equal-population districts. Then, the second party—the “combiner”—selects contiguous pairs of districts from the set defined by the first party to create the final districts. This method produces <em>N</em> equally populated, contiguous districts. By dividing the responsibility of drawing districts into two separate stages, in which each party retains complete autonomy in their own stage, the parties counteract each other’s partisan ambitions while maintaining considerable flexibility to achieve other objectives, including maintaining compactness and communities of interest. Using simulations based on real-world geographic and electoral data, we assess DCP’s performance in all states where congressional redistricting occurs, and we find that DCP produces maps with large reductions in partisan bias, as well as improvements according to several other commonly used redistricting metrics. Compared to adopted plans from the most recent redistricting cycle, our simulations suggest that DCP would likely perform dramatically better than maps originating from state legislatures and politician commissions and at least as well as maps produced by independent commissions and special masters.</p>
<p> To the best of our knowledge, this represents the first effort to date demonstrating through simulations how a new map-drawing procedure could lead to tangible improvements across such a wide variety of geographic and electoral contexts.</p>
</div>
<div data-magellan-destination="sec2" id="sec2">
<h2><span>2</span> Limitations of Current Partisan Gerrymandering Fixes</h2>
<p> Reformers have sought to reduce partisan gerrymandering by shifting redistricting authority from partisan legislatures to nonpartisan independent redistricting commissions. State legislatures draw districts in over half of the U.S. states, with the remainder relying on commissions (see <a href="https://doi.org/10.1017/pan.2023.39">Table&nbsp;A.1</a> in the Supplementary Material). Independent commissions should insulate the redistricting process from the most extreme maps sought by partisans; however, political scientists have not yet reached a full consensus on the success of independent commissions. On the one hand, some recent research has found that independent commissions in the 2020 redistricting cycle tended to produce maps with less partisan bias (Best <em>et al.</em> <a href="#r3"><span>Reference Best, Lem, Magleby and McDonald</span>2022</a>; Kenny <em>et al.</em> <a href="#r16"><span>Reference Kenny, McCartan, Simko, Kuriwaki and Imai</span>2023</a>; Warshaw <em>et al.</em> <a href="#r25"><span>Reference Warshaw, McGhee and Migurski</span>2022</a>); on the other hand, other work has argued that the effectiveness of commissions can be undermined by partisan members of a commission and by tiebreaking procedures that typically benefit one party over the other, reducing incentives for bipartisan mapmaking (Brennan Center for Justice <a href="#r5">2018</a>; McDonald <a href="#r19"><span>Reference McDonald</span>2004</a>; Miller and Grofman <a href="#r20"><span>Reference Miller and Grofman</span>2013</a>).</p>
<p> In line with this mixed account, the 2020 cycle revealed some notable successes along with some important challenges in states with independent redistricting commissions. In Colorado, independent commissions comprised partially of qualified, randomly selected citizens constructed maps that registered minimal biases.<a href="#fn1"><span>Footnote </span>
<sup>1</sup>
</a> Maps produced by Michigan’s independent commission registered similarly low levels of bias.<a href="#fn2"><span>Footnote </span>
<sup>2</sup>
</a> Media accounts of the redistricting cycle have referred to these states’ commissions, independent from legislative interference, as bright spots for selecting fair maps (Wines <a href="#r26"><span>Reference Wines</span>2022</a>).</p>
<p> The promise of commissions ran up against partisan realities in several other states. In New York, the independent commission failed to produce maps, and the state legislature passed a map that the state’s Supreme Court later determined was a partisan gerrymander. A popular initiative passed in 2018 in Utah establishing an independent commission was altered by Republican state legislators in 2020, allowing them to bypass the commission’s proposed districts. In Virginia, the independent commission had an equal number of Democratic and Republican members and failed to agree upon a map.</p>
<p> While commission-based redistricting appears promising, several structural challenges remain. For one, a majority of commission-based states are not fully independent from interference by a state legislature. Second, and more importantly, states without an initiative process appear unlikely to implement commission-based redistricting. <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;A.1</a> of the Supplementary Material further details challenges presented by redistricting in legislatures, commissions, and through litigation.</p>
<p> Academic researchers have drawn inspiration from the cake-cutting problem to propose processes for fairer redistricting. While this logic has inspired several redistricting proposals (Alexeev and Mixon <a href="#r1"><span>Reference Alexeev and Mixon</span>2019</a>; Benadè, Procaccia, and Tucker-Foltz <a href="#r2"><span>Reference Benadè, Procaccia and Tucker-Foltz</span>2023</a>; Brams <a href="#r4"><span>Reference Brams</span>2020</a>; Ely <a href="#r13"><span>Reference Ely</span>2019</a>; Landau, Reid, and Yershov <a href="#r17"><span>Reference Landau, Reid and Yershov</span>2009</a>; Pegden, Procaccia, and Yu <a href="#r23"><span>Reference Pegden, Procaccia and Yu</span>2017</a>), none has addressed implementation across the full range of U.S. states and electoral contexts using real-world data. The complexity of previous proposals also precludes real-world applications or even simulation using modern computing techniques.</p>
<p> DCP contrasts with existing proposals in several ways. First, <em>it does not require either forging bipartisan support between parties or appointing a third-party arbiter to resolve points of difference.</em> A procedure sidestepping these common stumbling blocks could reduce the political disputes that accompany decennial redistricting. Second, <em>DCP is a process-based solution; it does not require courts to define an empirical standard for partisan gerrymandering.</em> State courts could resolve redistricting disputes by ordering parties to use DCP to draw remedial maps, without adjudicating between various measures of bias. Third, <em>DCP is simple and could be implemented efficiently</em>. Several other proposed solutions have appealing game-theoretic properties but in practice require multiple rounds of bargaining and cannot be solved computationally; in contrast, DCP’s two-stage process produces valid districting plans and can be simulated using existing software and processing power, allowing map makers to use it even on short deadlines. Furthermore, state legislatures could implement DCP to guide negotiations, or independent commissions could use DCP as a starting point for a proposal. Process-based solutions that do not require ceding full control of map drawing may be more likely to appeal to partisans within the legislature and represent a pathway toward reform.</p>
</div>
<div data-magellan-destination="sec3" id="sec3">
<h2><span>3</span> The Define–Combine Procedure</h2>
<p> Suppose a state needs to be divided into <em>N</em> contiguous, equally populated, single-member districts. Elections in the state are contested by two parties: <em>A</em> and <em>B</em>. We assume for simplicity that all people in the state vote in all elections, and their voting decision is based on personal partisan preference.</p>
<p> Let <em>P</em> be the total number of voters in a state, let <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline3.png?pub-status=live" width="17" height="12" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline3.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline3.png">
<span data-mathjax-type="texmath"><span>
$v_A$
</span></span>
</span>
</span> be the number of votes in the state for Party A, and let <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline4.png?pub-status=live" width="85" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline4.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline4.png">
<span data-mathjax-type="texmath"><span>
$v_B=P-v_A$
</span></span>
</span>
</span> be the number of votes for Party B. For each district <em>d</em>, let <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline5.png?pub-status=live" width="24" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline5.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline5.png">
<span data-mathjax-type="texmath"><span>
$v_{dA}$
</span></span>
</span>
</span> and <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline6.png?pub-status=live" width="24" height="14" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline6.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline6.png">
<span data-mathjax-type="texmath"><span>
$v_{dB}$
</span></span>
</span>
</span> be the number of votes in the district for each party. A districting map <em>M</em> is a set of <em>N</em> districts, and each district is itself a set of
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline7.png?pub-status=live" width="24" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline7.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline7.png">
specific voters. Let <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline8.png?pub-status=live" width="18" height="11" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline8.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline8.png">
<span data-mathjax-type="texmath"><span>
$\tau _A$
</span></span>
</span>
</span> be the percentage of the statewide votes received by party A, </p><p><span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_eqnu1.png?pub-status=live" width="176" height="55" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_eqnu1.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_eqnu1.png">
<span data-mathjax-type="texmath"><span>
$$ \begin{align*} \tau_A=\frac{\sum_d^N \nu_{dA}}{\sum_d^N \nu_{dA} + \sum_d^N \nu_{dB}} \end{align*} $$
</span></span>
</span>
</p><p>and <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline9.png?pub-status=live" width="84" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline9.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline9.png">
<span data-mathjax-type="texmath"><span>
$\tau _B=1-\tau _A$
</span></span>
</span>
</span>. For any map, both parties can foresee the number of votes they will receive in each district and the number of districts that they will win.</p>
<p> We assume that both parties are seat-maximizers; their goal is to win as many of the <em>N</em> seats as possible in the next election. For any given map <em>M</em>, the utility of Party <em>A</em> is </p><p><span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_eqnu2.png?pub-status=live" width="148" height="47" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_eqnu2.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_eqnu2.png">
<span data-mathjax-type="texmath"><span>
$$ \begin{align*}U_A(M) = \frac{\sum_{d=1}^N s_{d}}{N},\end{align*} $$
</span></span>
</span>
</p><p>where </p><div data-magellan-destination="eqnU3" id="eqnU3">
<p><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_eqnu3.png?pub-status=live" width="188" height="82" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_eqnu3.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_eqnu3.png"></p>
</div><p>and the utility of Party B is <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline10.png?pub-status=live" width="166" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline10.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline10.png">
<span data-mathjax-type="texmath"><span>
$U_B(M)=1-U_A(M)$
</span></span>
</span>
</span>. Both parties are risk-neutral; they are indifferent between winning one district and tying in two districts (with a 50% chance of winning the election in each). <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline11.png?pub-status=live" width="17" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline11.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline11.png">
<span data-mathjax-type="texmath"><span>
$U_i$
</span></span>
</span>
</span> is equivalent to the percentage of seats won by party <em>i</em>.<a href="#fn3"><span>Footnote </span>
<sup>3</sup>
</a></p>
<div data-magellan-destination="sec4" id="sec4">
<h3><span>3.1</span> The Unilateral Redistricting Process</h3>
<p> We consider two methods of drawing district maps. First, one party has unilateral control of the process. Given a set of potential valid maps <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline12.png?pub-status=live" width="24" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline12.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline12.png">
<span data-mathjax-type="texmath"><span>
$\mathcal {M}$
</span></span>
</span>
</span>, when party <em>i</em> draws the maps, it will select a map <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline13.png?pub-status=live" width="64" height="22" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline13.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline13.png">
<span data-mathjax-type="texmath"><span>
$\widetilde {M_i}\in \mathcal {M}$
</span></span>
</span>
</span> that maximizes <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline14.png?pub-status=live" width="16" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline14.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline14.png">
<span data-mathjax-type="texmath"><span>
$U_i$
</span></span>
</span>
</span>.<a href="#fn4"><span>Footnote </span>
<sup>4</sup>
</a> Under this method of redistricting, party <em>i</em> will maximize partisan advantage relative to party <em>j</em> by strategically cracking and packing party <em>j</em>’s voters to minimize the seats won by party <em>j</em>. In many cases, party <em>i</em> will win a substantially larger share of the seats than its statewide vote share, sometimes even translating a minority of statewide votes into a majority of legislative seats.</p>
<p> This method, which we call the “unilateral redistricting process” (URP), approximates the redistricting process in states where one party controls redistricting. While other factors, such as incumbency or vote margins in close seats, factor into districting decisions, gerrymandering for partisan gain is a primary objective for the party in power. When independent experts have used map-drawing software to simulate thousands of possible maps in a state, the observed maps in states with unilateral redistricting appear to be among the most partisan possible.<a href="#fn5"><span>Footnote </span>
<sup>5</sup>
</a></p>
</div>
<div data-magellan-destination="sec5" id="sec5">
<h3><span>3.2</span> The Define–Combine Procedure</h3>
<p> The second method we consider is our own innovation, the two-stage DCP. In this model, the power to draw the map is divided between the two parties, but in each stage of the process, one party acts unilaterally.</p>
<p> Suppose Party A acts in the first stage as the “Definer,” and Party B acts in the second stage as the “Combiner.” The game proceeds as follows: </p><ol>
<li>
<p><span>1.</span> Party A defines a set of <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline15.png?pub-status=live" width="25" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline15.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline15.png">
<span data-mathjax-type="texmath"><span>
$2N$
</span></span>
</span>
</span> contiguous, equally populated districts. To avoid confusion with the following stage, we refer to these districts as <em>subdistricts</em>.</p>
</li>
<li>
<p><span>2.</span> Party B creates the final map of <em>N</em> districts by combining pairs of contiguous subdistricts.</p>
</li>
</ol>
<p> Party A moves first and has a strategy profile consisting of a selection of a map <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline16.png?pub-status=live" width="70" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline16.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline16.png">
<span data-mathjax-type="texmath"><span>
$M_A \in \mathcal {M}$
</span></span>
</span>
</span>, the set of all maps with <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline17.png?pub-status=live" width="25" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline17.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline17.png">
<span data-mathjax-type="texmath"><span>
$2N$
</span></span>
</span>
</span> valid districts.<a href="#fn6"><span>Footnote </span>
<sup>6</sup>
</a> Party B combines subdistricts to create a map <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline18.png?pub-status=live" width="104" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline18.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline18.png">
<span data-mathjax-type="texmath"><span>
$M_B \in Q(M_A)$
</span></span>
</span>
</span>, where <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline19.png?pub-status=live" width="59" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline19.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline19.png">
<span data-mathjax-type="texmath"><span>
$Q(M_A)$
</span></span>
</span>
</span> is the set of valid groupings of the subdistricts in <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline20.png?pub-status=live" width="27" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline20.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline20.png">
<span data-mathjax-type="texmath"><span>
$M_A$
</span></span>
</span>
</span>.</p>
<p> Party B, the second mover, will select a best response to any proposed set of subdistricts. The strategy <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline21.png?pub-status=live" width="19" height="11" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline21.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline21.png">
<span data-mathjax-type="texmath"><span>
$\sigma _B$
</span></span>
</span>
</span> is a mapping from the set of valid groupings of subdistricts to a single map, <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline22.png?pub-status=live" width="26" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline22.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline22.png">
<span data-mathjax-type="texmath"><span>
$\widehat {M}_B$
</span></span>
</span>
</span>, such that </p><p><span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_eqnu4.png?pub-status=live" width="304" height="25" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_eqnu4.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_eqnu4.png">
<span data-mathjax-type="texmath"><span>
$$ \begin{align*}\widehat{M}_B \equiv \sigma_B (M_A) \in \text{argmax } U_B(Q(M_A)). \end{align*} $$
</span></span>
</span>
</p>
<p> Because voters themselves are indivisible and the districts in this setup consist of sets of voters, any game has a fixed number of possible districts. Also, the second mover knows what the first mover has chosen to do. In a finite extensive game with perfect information, such as DCP, there exists a subgame perfect equilibrium solvable using backward induction (Osborne <a href="#r21"><span>Reference Osborne</span>2004</a>, 173). For the map <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline23.png?pub-status=live" width="27" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline23.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline23.png">
<span data-mathjax-type="texmath"><span>
$M_A$
</span></span>
</span>
</span> selected by Party A, Party B will examine feasible maps, <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline24.png?pub-status=live" width="59" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline24.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline24.png">
<span data-mathjax-type="texmath"><span>
$Q(M_A)$
</span></span>
</span>
</span> and will select the map <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline25.png?pub-status=live" width="104" height="23" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline25.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline25.png">
<span data-mathjax-type="texmath"><span>
$\widehat {M}_B \in Q(M_A)$
</span></span>
</span>
</span> maximizing the percentage of seats won by Party B. For every possible map <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline26.png?pub-status=live" width="69" height="17" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline26.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline26.png">
<span data-mathjax-type="texmath"><span>
$M_A \in \mathcal {M}$
</span></span>
</span>
</span>, Party A can anticipate what map <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline27.png?pub-status=live" width="26" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline27.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline27.png">
<span data-mathjax-type="texmath"><span>
$M_B$
</span></span>
</span>
</span> Party B would ultimately draw. Therefore, it selects the map <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline28.png?pub-status=live" width="26" height="21" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline28.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline28.png">
<span data-mathjax-type="texmath"><span>
$\widehat {M}_A$
</span></span>
</span>
</span> maximizing the percentage of seats won by Party A subject to Party B’s best-response pairings, with payoff <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline29.png?pub-status=live" width="108" height="23" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline29.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline29.png">
<span data-mathjax-type="texmath"><span>
$ U_A(\sigma _B (\widehat {M}_A))$
</span></span>
</span>
</span>.</p>
</div>
<div data-magellan-destination="sec6" id="sec6">
<h3><span>3.3</span> A Simple Example: Iowa</h3>
<p> A simple example illustrates the DCP framework. Consider a (simplified) map of Iowa, as shown in Figure <a href="#fig1">1</a>, with 30 equally populated precincts and an overall statewide vote share of 50% for the Democrats and 50% for the Republicans.<a href="#fn7"><span>Footnote </span>
<sup>7</sup>
</a>
</p><div data-magellan-destination="fig1" id="fig1">
<p><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig1.png?pub-status=live" width="978" height="632" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig1.png" data-zoomable="true" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig1.png"></p>
<div><p><span>Figure 1</span> Simplified Iowa map. This figure displays a simplified map of Iowa with the state split into 30 equally populated precincts.</p>
</div></div>
<p> Suppose redistricting requires that the state must be divided into five equally populated contiguous districts. Given that each of the 30 precincts has the same population, the state must be divided into five districts of six precincts each. Under these assumptions, there are 27,250 possible maps.</p>
<p> If Democrats redraw the map unilaterally and maximize the number of seats won, they can construct a map where they win four seats and Republicans win one seat. Figure <a href="#fig2">2</a>a shows one such map (out of many equivalent possibilities) drawn by the Democrats unilaterally. Districts won by Democrats (Republicans) are denoted with a blue (red) outline. In this example, Republicans are packed into District 4, and Democrats win majorities in Districts 1–3 and 5. Conversely, as illustrated in Figure <a href="#fig2">2</a>b, when Republicans act unilaterally, the opposite result is possible; Republicans win four seats, and Democrats win one.</p><div data-magellan-destination="fig2" id="fig2">
<p><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig2.png?pub-status=live" width="1630" height="1502" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig2.png" data-zoomable="true" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig2.png"></p>
<div><p><span>Figure 2</span> Examples of final maps for Iowa under URP and under DCP. This figure displays example maps that could emerge from an illustrative Define–Combine Procedure applied to a simplified map of Iowa.</p>
</div></div>
<p> We now apply DCP to this simple example. In the first stage, the defining party will draw a map consisting of 10 contiguous subdistricts, each with three precincts. There are 7,713 valid divisions of this map of Iowa. In the second stage, the combining party selects contiguous pairs of subdistricts to create the final district map. The number of possible combinations in the second stage varies based on the subdistricts defined in the first stage. In this example, the number of combinations varies from 2 to 20 possibilities.</p>
<p> For any possible proposed map, the defining party analyzes the resulting combinations and determines the best response for the combining party. The defining party chooses the map that minimizes the combining party’s utility from the optimal pairing in the subgame. Given the distribution of voters in our running example, Figure <a href="#fig2">2</a> presents the results of DCP for this simple example if the Democrats go first, in panel (c), and if the Republicans go first, in panel (d). Multiple equilibria exist, and we present just one graphically. The defined subdistrict plan selected by the Democrats results in three seats for Democrats and two seats for Republicans. The Republicans cannot choose any other combination of these subdistricts to improve the outcome. Similarly, if the Republicans move first, then in equilibrium the Republicans win three seats and the Democrats win two seats. Thus, DCP reduces the advantage conferred to the map drawer. Under URP, there is a three-seat (of five total seats) difference in partisan outcomes depending on who controls the process, while under DCP there is only a one-seat difference depending on who draws the define-stage map. We denote this difference based on first-mover status as <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline30.png?pub-status=live" width="9" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline30.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline30.png">
<span data-mathjax-type="texmath"><span>
$\delta $
</span></span>
</span>
</span>: for URP, <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline31.png?pub-status=live" width="141" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline31.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline31.png">
<span data-mathjax-type="texmath"><span>
$\delta = 0.8 - 0.2 = 0.6$
</span></span>
</span>
</span>, and for DCP, <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline32.png?pub-status=live" width="141" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline32.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline32.png">
<span data-mathjax-type="texmath"><span>
$\delta = 0.6 - 0.4 = 0.2$
</span></span>
</span>
</span>.</p>
</div>
</div>
<div data-magellan-destination="sec7" id="sec7">
<h2><span>4</span> Evaluating the Define–Combine Procedure</h2>
<div data-magellan-destination="sec8" id="sec8">
<h3><span>4.1</span> Simulated State Congressional Maps</h3>
<p> We use map-drawing algorithms to simulate and compare both redistricting procedures. Unlike other studies of gerrymandering using simulation methods, we focus not on the <em>distribution</em> of possible outcomes in each state but rather on the limit—the most extreme possible map drawn by each party using each process. To identify these maps, we employ the “shortburst” algorithm (Cannon <em>et al.</em> <a href="#r7"><span>Reference Cannon, Goldbloom-Helzner, Gupta, Matthews and Suwal</span>2023</a>), which begins with a starting map and assigns it a numerical score, such as the number of seats won by a given party. Shortburst maximizes (or minimizes) any objective function defined over a geographic space, and we apply it specifically to the problem of extreme gerrymandering. The algorithm generates a set of <em>N</em> variations of the starting map in a “burst,” calculates a score for each using the same scoring function, and selects the map with the highest score. This burst process repeats until the score stabilizes. As Cannon <em>et al.</em> (<a href="#r7"><span>Reference Cannon, Goldbloom-Helzner, Gupta, Matthews and Suwal</span>2023</a>) shows, this approach finds more extreme outcomes than those identified by random walks and other distributional approaches.</p>
<p> While the shortburst algorithm is not guaranteed to find the most extreme gerrymander possible in a state, this approach often finds the most extreme known gerrymanders and in many cases achieves gerrymanders that would secure a party’s total victory (e.g., winning all seats in a state). Furthermore, the implementation of shortburst that we apply employs sequential Monte Carlo methods (McCartan and Imai <a href="#r18"><span>Reference McCartan and Imai</span>2023</a>) designed to explore the space of feasible redistricting plans better than previous Markov chain Monte Carlo methods. These efforts are important because the number of maps in real-world redistricting is large enough to make exhaustive searches of all maps computationally infeasible (see <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;I</a> of the Supplementary Material for a full discussion and calculations estimating the number of possible maps at each stage).</p>
<p> We first apply shortburst directly to maximize seats won for each party in order to solve for the real-world URP maps that a seat-maximizing redistricter would draw in each state. Second, we develop a custom two-stage algorithm to identify the maps resulting from DCP in each state. <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;C</a> of the Supplementary Material provides the full details of how we implement these simulations, including pseudocode of the algorithm. We offer condensed descriptions here.</p>
<p> To simulate maps drawn under unilateral redistricting (e.g., maximizing seats won for each party), we apply shortburst for each state and party, running 10 separate sets of simulations. We (1) generate a random starting map, (2) run the shortburst algorithm 2,000 times, generating 10 maps per burst, and (3) save the final map. The scoring function maximizes first the number of seats won by the party and second the party’s vote share in the next closest district.<a href="#fn8"><span>Footnote </span>
<sup>8</sup>
</a></p>
<p> To simulate DCP, we implement a “nested shortburst” algorithm. For each state and party, we run 20 separate sets of simulations. We (1) generate a random starting map of <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline33.png?pub-status=live" width="26" height="15" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline33.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline33.png">
<span data-mathjax-type="texmath"><span>
$2N$
</span></span>
</span>
</span> districts and (2) run the shortburst algorithm 100 times, with 20 maps generated per burst. However, we score each map using a <em>second iteration of the shortburst algorithm</em>, which finds the pairing of districts that maximizes seats for the second party.<a href="#fn9"><span>Footnote </span>
<sup>9</sup>
</a> This two-step approach directly incorporates both parties’ strategic behavior—maximizing their own seat advantage—at each stage of the game rather than just observing a random set of proposals from the second stage and then choosing the best option. Nonetheless, because the set of possible maps at each stage is large,<a href="#fn10"><span>Footnote </span>
<sup>10</sup>
</a> we also subsequently validate our key results describing equilibrium behaviors for DCP and URP with an analytical model (see <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;B</a> of the Supplementary Material) and with grid maps for which we can enumerate all district combinations (see <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;H.2</a> of the Supplementary Material).</p>
<p> Using election data from the Voting and Election Science Team (<a href="#r24">2022</a>) merged with 2020 census data from the ALARM Project (Kenny and McCartan <a href="#r14"><span>Reference Kenny and McCartan</span>2021</a>), we ran simulations for every state with at least two congressional districts. We measure partisanship using the 2020 presidential election results. For each simulation, we use a 1% population deviation constraint (using 2020 total population),<a href="#fn11"><span>Footnote </span>
<sup>11</sup>
</a> a simple compactness constraint,<a href="#fn12"><span>Footnote </span>
<sup>12</sup>
</a> and require all districts to be contiguous.</p>
<p> We compare the performance of DCP to two key benchmarks—simulated unilateral redistricting and actual, adopted plans—along a variety of different metrics. The metrics we examine include (1) the advantage, which we will term <em>definer’s advantage</em>, conferred to the map-drawing party by a redistricting procedure (equivalent to <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline34.png?pub-status=live" width="9" height="16" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline34.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline34.png">
<span data-mathjax-type="texmath"><span>
$\delta $
</span></span>
</span>
</span> from the Iowa example above); (2) deviation from proportionality; (3) deviation from a fairness target (accounting for geographic biases in a state that might advantage one party); (4) partisan bias induced by a redistricting procedure; and (5) the efficiency gap, which measures the difference in the share of wasted votes between the parties. For proportionality, we examine the difference between the two-party vote share and seat share. For a fairness target, we take the midpoint of the most extreme maps possible under each party’s simulated unilateral redistricting procedure (Benadè <em>et al.</em> <a href="#r2"><span>Reference Benadè, Procaccia and Tucker-Foltz</span>2023</a>). Partisan bias is the difference between seat share and vote share when votes are split evenly between the parties.<a href="#fn13"><span>Footnote </span>
<sup>13</sup>
</a> We are agnostic as to the best metric used to evaluate a given redistricting plan; our goal is to show the performance of DCP, and its benefits, across a variety of reasonable measures.</p>
<p> The simulation results reveal that DCP dramatically reduces the partisan advantage conferred to a map maker as compared to URP. Figure <a href="#fig3">3</a> presents four maps that compare seats won by each party under the four redistricting procedures. The top two maps show the results of the unilateral redistricting simulations, with Democrats redistricting on the left and Republicans redistricting on the right; the bottom two maps show the results of DCP.</p><div data-magellan-destination="fig3" id="fig3">
<p><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig3.png?pub-status=live" width="2070" height="1503" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig3.png" data-zoomable="true" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig3.png"></p>
<div><p><span>Figure 3</span> Maps of Simulation Results by Method and Party: These figures report the full set results for URP and DCP simulations. Hexagons labeled “D” indicate Democratic wins; Hexagons labeled “R” indicate Republican wins.</p>
</div></div>
<p> Of the 429 seats redistricted in the simulations, Democrats win 334 (77.9%) when they draw the maps unilaterally in every state. When Republicans draw all maps unilaterally, Democrats win 137 seats (31.9%). The simulations reveal a possible swing of 197 seats between parties through unilateral redistricting. These results represent a theoretical maximum for the shift in seats that could occur due to partisan gerrymandering. Our unilateral simulations are more extreme than those actually drawn in many states considered to be partisan gerrymanders because we impose limited constraints and maximize seats won with a strict vote cutoff of 50% (rather than creating a “toss-up” category). Importantly, these benchmarks are based on one snapshot of voter preferences (2020 Presidential Election vote), so subsequent shifts in voter preferences could produce real-world outcomes outside these bounds. For this reason, we compare the simulated results to actual performance using 2020 congressional election outcomes, so our measures of partisan preferences and election outcomes occur at the same time (November 2020).</p>
<p> DCP dramatically reduces the swing of seats between parties; in many states, the difference in seats won based on who defines and who combines falls to either zero or one. When Democrats draw the Define-stage map, they win 249 (58.0%) seats; when Republicans draw the Define-stage map, Democrats win 211 (49.2%) seats. When calculating the difference state by state (since some parties have a second- rather than first-mover advantage), the swing between parties based on first-mover versus second-mover status amounts to 46 seats, eliminating almost 80% of the swing in seats theoretically possible under unilateral partisan control of redistricting.<a href="#fn14"><span>Footnote </span>
<sup>14</sup>
</a> Figure <a href="#fig4">4</a> highlights the differences between the unilateral redistricting and DCP results. The comparison of light gray hexagons (districts that swing only under URP) to dark gray hexagons (districts that swing also under DCP) captures the reduction in seat swing due to a switch from URP to DCP.</p><div data-magellan-destination="fig4" id="fig4">
<p><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig4.png?pub-status=live" width="1602" height="1074" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig4.png" data-zoomable="true" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig4.png"></p>
<div><p><span>Figure 4</span> Map of differences in simulation results by party. This map shows how the partisan division of states differ under URP and DCP. Hexagons marked “D” or “R” are seats that are always won by Democrats and Republicans, respectively, in both methods regardless of which party controls the process. Hexagons marked “d”, “r”, or “x” could be won by either party if they controlled URP. Hexagons marked “x” could be won by either party under DCP. The hexagons marked “d” or “r” would be won by Democrats and Republicans, respectively, under DCP.</p>
</div></div>
<p> We also evaluate the performance of URP and DCP under alternative scenarios including (1) uniform statewide vote swings to a 50–50 vote split in each competitive state, (2) uniform nationwide swings to a 50–50 vote split nationwide, and (3) for a selection of state legislative, rather than congressional, district maps. <a href="https://doi.org/10.1017/pan.2023.39">Appendices&nbsp;E.2</a>–<a href="https://doi.org/10.1017/pan.2023.39">E.4</a> of the Supplementary Material report the results. In each case, DCP continues to dramatically reduce the advantage from unilateral redistricting, eliminating over 80% of the possible swing between parties. We also report outcomes when randomizing the first mover in <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;E.5</a> of the Supplementary Material.</p>
<p> Table <a href="#tab1">1</a> summarizes results for Definer’s Advantage, along with the other metrics we consider. (We do not report a quantity for Definer’s Advantage for adopted plans because we do not observe seat share under the counterfactual that the out-party controlled the redistricting process.) The next two metrics evaluate the redistricting procedures based on deviations from target outcomes, specifically proportionality and a geometric fairness target (the average of the worst- and best-case map for each party, as defined in Benadè <em>et al.</em> (<a href="#r2"><span>Reference Benadè, Procaccia and Tucker-Foltz</span>2023</a>)). We evaluate each of these metrics based on which party controlled the redistricting process in each state. For instance, for a simulated unilateral map for the party in power, we calculate the deviation in seat share from the (1) seat share proportional to a state’s vote share and (2) seat share based on the geometric fairness target. The first of these metrics illustrates how much proportional representation would improve based upon a state’s switch to DCP; the second illustrates how much closer to a geometric target (accounting for a map’s geographic biases) a switch to DCP would achieve. Smaller values in the table represent less-biased outcomes.</p><div data-magellan-destination="tab1" id="tab1">
<p><span>Table 1</span> DCP performance versus alternatives. This table reports the performance of DCP compared to unilateral redistricting and adopted plans. Definer’s Advantage for adopted plans is omitted since it would involve interpolating seat share under the scenario where the opposing party held control over the redistricting process. Partisan Bias is calculated only for states with 2020 Democratic Presidential Vote Share between 45% and 55%.</p>
<p><span>
<p><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_tab1.png?pub-status=live" width="760" height="159" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_tab1.png" data-zoomable="true" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_tab1.png"></p>
</span>
</p></div>
<p> For both metrics, DCP improves upon both the simulated outcomes from URP and adopted plans (rows 2 and 3 in Table <a href="#tab1">1</a>). We estimate, for example, that if every state drew their map according to a unilateral process controlled by the majority party of the lower house of the state legislature, and then switched to DCP with the same party serving as the definer, deviation from proportionality would be cut by over one third and deviation from the fairness target would be cut by three quarters. <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;F</a> of the Supplementary Material reports full results broken out by state redistricting procedure. We find that DCP achieves reduced deviations from proportionality compared to enacted maps in states with Legislature or Political redistricting procedures and has comparable or slightly greater deviations from proportionality compared to enacted maps in states with Independent Commissions and Courts or Special Masters. DCP improves upon or matches adopted plans regardless of redistricting procedure in terms of deviations from the geometric fairness target. Figure <a href="#fig5">5</a> summarizes these results graphically. For each state in the figure, we plot the actual seat share from the redistricting process and the estimated change under DCP (denoted by the line and arrow). All but two states would move closer to the fairness target after implementing DCP.</p><div data-magellan-destination="fig5" id="fig5">
<p><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig5.png?pub-status=live" width="1270" height="1189" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig5.png" data-zoomable="true" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig5.png"></p>
<div><p><span>Figure 5</span> Comparing DCP to actual outcomes. This figure displays the comparison between DCP and the actual outcome based on the state’s post-2020 redistricting process. The <em>x</em>-axis reports the midpoint between outcomes when each party acts as a URP. The <em>y</em>-axis reports the seat share. The point where each line originates denotes the projected outcome of the post-2020 redistricting. The point of each arrow denotes the DCP projected outcome. For reference, we also include a 45-degree line (proportional representation) and a line illustrating seat shares for an unbiased but majoritarian electoral system that follows the cube law. The sample includes states with four or more congressional districts and a URP midpoint between 0.3 and 0.7. First mover for DCP is determined based upon the party controlling redistricting or (where not applicable) the majority party in each state.</p>
</div></div>
<p> To determine partisan bias and efficiency gap for adopted plans, we gathered data on each metric from PlanScore.<a href="#fn15"><span>Footnote </span>
<sup>15</sup>
</a> We replicated the partisan bias and efficiency gap calculations for our simulated URP and DCP maps and compared these measures to the PlanScore estimates. DCP dramatically reduces partisan bias compared to URP. It modestly reduces partisan bias compared to enacted maps, with improvements primarily where legislatures controlled redistricting or political commissions. DCP dramatically reduces the efficiency gap compared to URP and achieves close to the same efficiency gap as for Adopted Plans. When comparing across states based on redistricting method as in <a href="https://doi.org/10.1017/pan.2023.39">Table&nbsp;F.1</a> in the Supplementary Material, the biggest improvements to efficiency gap occur in states with maps produced by a Legislature or Political Commissions and results are comparable to those in states with Independent Commissions.</p>
<p> Overall, DCP exhibits significant improvements compared to our benchmark procedures and actual maps across a range of different metrics. Importantly, the comparison to enacted maps is not one to one, since our DCP simulations necessarily assume fewer constraints than real-world redistricters face. Thus, the fact that we still observe similar or less extreme maps in our simulations illustrates the powerful tendency of DCP to temper extreme redistricting outcomes. In <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;B.5</a> of the Supplementary Material, we also calculate benchmark comparisons between DCP and URP based on an analytical model, and we find that DCP improves upon or matches the benchmark results from URP.</p>
</div>
<div data-magellan-destination="sec9" id="sec9">
<h3><span>4.2</span> Compliance with the Voting Rights Act</h3>
<p> One potential concern for adopting DCP is the ability to use it to draw maps while complying with the federal Voting Rights Act (VRA), in particular by preserving majority–minority districts. Importantly, the districts produced under DCP will face the same scrutiny as districts created through any other map-drawing process. Under DCP, the judiciary would of course continue to enforce Section 2 of the VRA, and plaintiffs might challenge redistricting plans in court. If a judge finds in favor of a plaintiff, the court may redraw the offending district or districts. As long as the federal judiciary continues to adjudicate claims about adherence to the VRA, resolution of disagreements about majority–minority districts will remain somewhat distinct from any state-level process for producing district maps. So realistically, the federal courts, not DCP or any other process, will ultimately resolve conflicts between the parties over the number of majority–minority districts required to satisfy the VRA.<a href="#fn16"><span>Footnote </span>
<sup>16</sup>
</a></p>
<p> Nonetheless, map drawers can adjust DCP explicitly to incorporate the creation of majority–minority districts, for instance, by determining the boundaries of majority–minority districts before implementing DCP for the remaining districts. When drawing a fixed number of majority–minority districts, will DCP continue to produce beneficial results if used for the remaining districts? To explore this question, we ran a series of simulations in Georgia, a state with several majority–minority districts and close to equal Democratic and Republican vote shares in the 2020 Presidential election, as follows: </p><ol>
<li>
<p><span>1.</span> Using 2020 census data and Voting Tabulation Districts, use the shortburst algorithm to generate four majority-Black districts.</p>
</li>
<li>
<p><span>2.</span> Freeze the four majority-Black districts in the map.</p>
</li>
<li>
<p><span>3.</span> Run the unilateral and DCP simulation algorithms to generate the boundaries of the remaining 10 congressional districts, and record the results from each algorithm.</p>
</li>
</ol>
<p> We ran the above procedure 10 times. In each simulation, the boundaries of the four majority-Black districts were different (but were all concentrated in the Atlanta Metro area). Figure <a href="#fig6">6</a> shows the results of the simulations. Across all 10 simulations, there are substantial gaps in the number of Democratic seats depending on the party controlling redistricting unilaterally (e.g., a 3–6 seat gap), but much smaller gaps under DCP. In seven of the simulations, both parties reached the same number of Democratic seats, and in three simulations, the parties had a one-seat difference.</p><div data-magellan-destination="fig6" id="fig6">
<p><img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig6.png?pub-status=live" width="1651" height="1252" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig6.png" data-zoomable="true" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_fig6.png"></p>
<div><p><span>Figure 6</span> Simulation results for VRA-compliant Georgia congressional districts. This figure illustrates the results of URP and DCP simulations in Georgia when we account for VRA-compliant districts by drawing and freezing four districts before initiating the URP and DCP map-drawing processes.</p>
</div></div>
<p> These results demonstrate that if majority–minority districts can be drawn and then frozen in place, DCP can still produce an equitable result that reduces partisan gerrymandering in the remainder of the state.</p>
</div>
</div>
<div data-magellan-destination="sec10" id="sec10">
<h2><span>5</span> Robustness of Results</h2>
<p> We evaluate two types of threats to the validity of our state-by-state simulation results: (1) generalizability concerns and (2) computation/simulation concerns. First, though DCP appears to perform well in the states we examine, this success might not extend to other settings. Second, due to the large number of possible maps to consider at both the Define and the Combine stages, one might fear that our simulations do not discover the most extreme maps and therefore overstate reductions in bias due to DCP.</p>
<p> To evaluate the generalizability of our results, we use grid maps allowing for variation in partisan composition, geographic clustering by party, and the parties’ objective functions. We find that DCP continues to reduce both the Definer’s advantage and the partisan bias from redistricting regardless of variation in these characteristics. <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;H</a> of the Supplementary Material provides a detailed account of our findings for each.</p>
<p> To validate our simulations, we (1) developed an analytical model and analyzed each party’s optimal strategy for the special case of redistricting without geographic constraints in <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;B</a> of the Supplementary Material and (2) compared key findings from real-world simulations to findings from fully solvable grid maps (e.g., obviating the need for short burst since all maps can be enumerated) in <a href="https://doi.org/10.1017/pan.2023.39">Appendices&nbsp;H.2</a> and <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;J</a> of the Supplementary Material.</p>
<p> Solving the analytical model illustrates the optimal behavior of each party, and reveals when DCP effectively reduces partisan gerrymandering with no geographic constraints: the clearest improvements under DCP compared to URP occur when a party with a minority of voters in a state controls the redistricting process.</p>
<p> Under unilateral redistricting, the minority party can secure a share of districts equal to double their population share by spreading their own voters evenly into as many districts as possible while maintaining a narrow majority. The unilateral redistricter will pack the remaining voters supporting the other party into the remaining districts. Thus, a minority party that redistricts unilaterally can win more than half the seats. In fact, a narrow minority can win a large majority of the seats in a state (e.g., a party with <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline35.png?pub-status=live" width="78" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline35.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline35.png">
<span data-mathjax-type="texmath"><span>
$V_A = 40\%$
</span></span>
</span>
</span> can win a seat share of <span data-mathjax-status="alt-graphic">
<span>
<img data-src="https://static.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline36.png?pub-status=live" width="34" height="18" data-original-image="/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline36.png" data-zoomable="false" src="https://www.cambridge.org/binary/version/id/urn:cambridge.org:id:binary:20231211134647824-0459:S1047198723000396:S1047198723000396_inline36.png">
<span data-mathjax-type="texmath"><span>
$80\%$
</span></span>
</span>
</span>).</p>
<p> DCP tempers the ability of the minority party as first mover (Definer) to gerrymander. In fact, when the majority party is the second mover (Combiner) under DCP, the majority party wins strictly more seats compared to the URP case. When the Combiner has a large majority of the vote, the optimal approach for the Definer is to “self-pack,” creating subdistricts consisting entirely of the minority party. In this case, both parties win seats proportional to their share of the vote. When the Combiner holds a narrower majority of vote share (specifically, between one third and one half of the statewide vote), the Definer instead adopts a “cracking” strategy and can win more seats than their proportional share of the vote but fewer than what they would win in the unilateral case. Thus, our analytical results illustrate how DCP helps ensure that the party with a majority of voters will be more likely to win a majority of seats, an intuitive fairness benchmark and a characteristic of partisan symmetry. <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;B</a> of the Supplementary Material provides the full analytical solutions, sketches proofs, and illustrates the seats-votes curves for each party. <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;B.5</a> of the Supplementary Material evaluates DCP and URP along key fairness metrics for the analytical model and shows that DCP performs better to or equal to URP along these benchmarks in all cases. Crucially, this analysis illustrates DCP’s advantages totally independent of computer simulations.</p>
<p> Yet the analytical model without geographic constraints does not capture all the ways in which DCP may improve upon URP precisely because it does not take geography into account. By combining the insights from the analytical model and the fully solved grid simulations, we also can illustrate how DCP interacts with <em>geographic constraints</em> to constrain gerrymandering further. The key insight is that, with geographic constraints in place, DCP requires the Definer to create smaller subdistricts than the final districts (e.g., half the size in population), constraining how freely parties can combine disparate populations to gerrymander. This additional constraint reduces the ability to gerrymander for the Definer regardless of statewide vote share. <a href="https://doi.org/10.1017/pan.2023.39">Appendix&nbsp;J</a> of the Supplementary Material provides a detailed account of this finding. Taken together, the fully solvable grid maps, the robustness to variation of map characteristics, and the insights from the analytical model all support the account that our real-world simulations accurately capture the performance of DCP as compared to URP.</p>
</div>
<div data-magellan-destination="sec11" id="sec11">
<h2><span>6</span> Conclusion</h2>
<p> DCP features simple rules, clear strategies for each party, and an efficient framework that can be implemented in every state. One obstacle to implementation for past theoretical approaches has been the difficulty for decision-makers in either party to predict outcomes in the real world. DCP, as we have demonstrated, can be applied to real-world geographic data, which allows analysts to predict outcomes and reduce uncertainty surrounding the redistricting process. Furthermore, DCP significantly reduces the advantages conferred to the redistricting party and results in maps more likely to reflect the will of voters. These advantages hold up (1) across a variety of different contexts reflecting the political and geographic heterogeneity of the states, (2) for a number of different measures of a map’s level of bias, and (3) when perturbing levels of statewide partisanship, the objective functions of redistricters, and geographic clustering.</p>
<p> There are many challenges in using automated algorithms to aid in the redistricting process (Cho and Cain <a href="#r9"><span>Reference Cho and Cain</span>2020</a>). In some cases, advances in computing power and the ability of politicians to consider a large range of maps exacerbate partisan gerrymandering, rather than alleviating it, as partisan mapmakers use map-drawing algorithms to devise increasingly gerrymandered maps. DCP provides an approach that utilizes advances in computing to produce less biased maps—ones where the process-based algorithm itself constrains partisan motives.</p>
<p> Political parties will almost always oppose ceding power, but this is doubly so when the choices they face require embracing significant uncertainty about future political outcomes. Because DCP is a two-stage game, solvable with existing computing resources, it represents a step toward providing an alternative mechanism to court-, legislature-, or commission-based redistricting that is feasible to implement. This framework offers parties the autonomy to respect communities of interest, geographic boundaries, and other political concerns—that is, to internalize the wide range of factors that play important roles in decisions about redistricting—while nonetheless tempering the partisan biases that emerge during redistricting. By involving both parties but setting them in opposition to each other, rather than requiring bipartisan cooperation or independent third-party mediators, DCP offers a partisan solution to the extraordinarily partisan process that is redistricting.</p>
</div>
</div>
<div>
<div>
<h2> Acknowledgments</h2>
<p> We would like to thank the three anonymous reviewers and the editor for their thoughtful comments and discussion. We would also like to thank Jowei Chen, Justin de Benedictis-Kessner, Katie Einstein, David Glick, Richard Engstrom, Gary King, Chris Kenny, Jonathan Rodden, Chris Warshaw, and audiences at the Midwest Political Science Association Conference, the MIT Election Data and Science Lab (MEDSL) Workshop, the Harvard Kennedy School Faculty Lunch Workshop, and the “Redistricting Algorithms, Law, and Policy” Exploratory Seminar hosted by the Harvard Radcliffe Institute for their feedback. We would also like to thank the staff at the Boston University Shared Computing Cluster for generous computational assistance.</p>
</div>
<div data-magellan-destination="sec12" id="sec12">
<h2> Funding</h2>
<p> This work was supported by the Hariri Institute for Computing at Boston University.</p>
</div>


</div>
</div>    <div id="references-list"><h2>References</h2> <div id="r1" aria-flowto="reference-1-content reference-1-button"><p><span><span>Alexeev</span>, <span>B.</span></span>, and <span><span>Mixon</span>, <span>D.</span></span>. <span>2019</span>. “<span>Partisan Gerrymandering with Geographically Compact Districts</span>.” <span>Journal of Applied Probability</span> <span>55</span> (<span>4</span>): <span>1046</span>–<span>1059</span>.<a target="_blank" aria-label="CrossRef link for Partisan Gerrymandering with Geographically Compact Districts" href="https://dx.doi.org/10.1017/jpr.2018.70">CrossRef</a><a target="_blank" aria-label="Google Scholar link for Partisan Gerrymandering with Geographically Compact Districts" href="https://scholar.google.com/scholar_lookup?title=Partisan+Gerrymandering+with+Geographically+Compact+Districts&amp;author=Alexeev+B.&amp;author=Mixon+D.&amp;publication+year=2019&amp;journal=Journal+of+Applied+Probability&amp;volume=55&amp;doi=10.1017%2Fjpr.2018.70&amp;pages=1046-1059">Google Scholar</a></p></div><div id="r2" aria-flowto="reference-2-content reference-2-button"><p><span><span>Benadè</span>, <span>G.</span></span>, <span><span>Procaccia</span>, <span>A.</span></span>, and <span><span>Tucker-Foltz</span>, <span>J.</span></span>. <span>2023</span>. “<span>You Can Have Your Cake and Redistrict It Too</span>.” <span>ACM Transactions on Economics and Computation</span>. In <em>Proceedings of the 24th ACM Conference on Economics and Computation</em>. Association for Computing Machinery, New York, NY, 270.<a target="_blank" aria-label="Google Scholar link for You Can Have Your Cake and Redistrict It Too" href="https://scholar.google.com/scholar_lookup?title=You+Can+Have+Your+Cake+and+Redistrict+It+Too&amp;author=Benad%C3%A8+G.&amp;author=Procaccia+A.&amp;author=Tucker-Foltz+J.&amp;publication+year=2023&amp;journal=ACM+Transactions+on+Economics+and+Computation">Google Scholar</a></p></div><div id="r3" aria-flowto="reference-3-content reference-3-button"><p><span><span>Best</span>, <span>R. E.</span></span>, <span><span>Lem</span>, <span>S. B.</span></span>, <span><span>Magleby</span>, <span>D. B.</span></span>, and <span><span>McDonald</span>, <span>M. D.</span></span>. <span>2022</span>. “<span>Do Redistricting Commissions Avoid Partisan Gerrymanders?</span>” <span>American Politics Research</span> <span>50</span> (<span>3</span>): <span>379</span>–<span>395</span>.<a target="_blank" aria-label="CrossRef link for Do Redistricting Commissions Avoid Partisan Gerrymanders?" href="https://dx.doi.org/10.1177/1532673X211053216">CrossRef</a><a target="_blank" aria-label="Google Scholar link for Do Redistricting Commissions Avoid Partisan Gerrymanders?" href="https://scholar.google.com/scholar_lookup?title=Do+Redistricting+Commissions+Avoid+Partisan+Gerrymanders%3F&amp;author=Best+R.+E.&amp;author=Lem+S.+B.&amp;author=Magleby+D.+B.&amp;author=McDonald+M.+D.&amp;publication+year=2022&amp;journal=American+Politics+Research&amp;volume=50&amp;doi=10.1177%2F1532673X211053216&amp;pages=379-395">Google Scholar</a></p></div><div id="r4" aria-flowto="reference-4-content reference-4-button"><p><span><span>Brams</span>, <span>S.</span></span> <span>2020</span>. “<span>Making Partisan Gerrymandering Fair: One Old and Two New Methods</span>.” <span>Social Science Quarterly</span> <span>101</span> (<span>1</span>): <span>68</span>–<span>72</span>.<a target="_blank" aria-label="CrossRef link for Making Partisan Gerrymandering Fair: One Old and Two New Methods" href="https://dx.doi.org/10.1111/ssqu.12741">CrossRef</a><a target="_blank" aria-label="Google Scholar link for Making Partisan Gerrymandering Fair: One Old and Two New Methods" href="https://scholar.google.com/scholar_lookup?title=Making+Partisan+Gerrymandering+Fair%3A+One+Old+and+Two+New+Methods&amp;author=Brams+S.&amp;publication+year=2020&amp;journal=Social+Science+Quarterly&amp;volume=101&amp;doi=10.1111%2Fssqu.12741&amp;pages=68-72">Google Scholar</a></p></div><div id="r5" aria-flowto="reference-5-content reference-5-button"><p><span>Brennan Center for Justice.</span> <span>2018</span>. “Redistricting Commissions: What Works.” Technical report, Brennan Center for Justice.<a target="_blank" aria-label="Google Scholar link for Brennan Center for Justice. 2018. “Redistricting Commissions: What Works.” Technical report, Brennan Center for Justice." href="https://scholar.google.com/scholar?q=Brennan+Center+for+Justice.+2018.+%E2%80%9CRedistricting+Commissions:+What+Works.%E2%80%9D+Technical+report,+Brennan+Center+for+Justice.">Google Scholar</a></p></div><div id="r6" aria-flowto="reference-6-content reference-6-button"><p><span><span>Canes-Wrone</span>, <span>B.</span></span>, <span><span>Brady</span>, <span>D. W.</span></span>, and <span><span>Cogan</span>, <span>J. F.</span></span>. <span>2002</span>. “<span>Out of Step, Out of Office: Electoral Accountability and House Members’ Voting</span>.” <span>American Political Science Review</span> <span>96</span> (<span>1</span>): <span>127</span>–<span>140</span>.<a target="_blank" aria-label="CrossRef link for Out of Step, Out of Office: Electoral Accountability and House Members’ Voting" href="https://dx.doi.org/10.1017/S0003055402004276">CrossRef</a><a target="_blank" aria-label="Google Scholar link for Out of Step, Out of Office: Electoral Accountability and House Members’ Voting" href="https://scholar.google.com/scholar_lookup?title=Out+of+Step%2C+Out+of+Office%3A+Electoral+Accountability+and+House+Members%E2%80%99+Voting&amp;author=Canes-Wrone+B.&amp;author=Brady+D.+W.&amp;author=Cogan+J.+F.&amp;publication+year=2002&amp;journal=American+Political+Science+Review&amp;volume=96&amp;doi=10.1017%2FS0003055402004276&amp;pages=127-140">Google Scholar</a></p></div><div id="r7" aria-flowto="reference-7-content reference-7-button"><p><span><span>Cannon</span>, <span>S.</span></span>, <span><span>Goldbloom-Helzner</span>, <span>A.</span></span>, <span><span>Gupta</span>, <span>V.</span></span>, <span><span>Matthews</span>, <span>J.</span></span>, and <span><span>Suwal</span>, <span>B.</span></span>. <span>2023</span>. “<span>Voting Rights, Markov Chains, and Optimization by Short Bursts</span>.” <span>Methodology and Computing in Applied Probability</span> <span>25</span> (<span>1</span>): <span>36</span>.<a target="_blank" aria-label="CrossRef link for Voting Rights, Markov Chains, and Optimization by Short Bursts" href="https://dx.doi.org/10.1007/s11009-023-09994-1">CrossRef</a><a target="_blank" aria-label="Google Scholar link for Voting Rights, Markov Chains, and Optimization by Short Bursts" href="https://scholar.google.com/scholar_lookup?title=Voting+Rights%2C+Markov+Chains%2C+and+Optimization+by+Short+Bursts&amp;author=Cannon+S.&amp;author=Goldbloom-Helzner+A.&amp;author=Gupta+V.&amp;author=Matthews+J.&amp;author=Suwal+B.&amp;publication+year=2023&amp;journal=Methodology+and+Computing+in+Applied+Probability&amp;volume=25&amp;doi=10.1007%2Fs11009-023-09994-1">Google Scholar</a></p></div><div id="r8" aria-flowto="reference-8-content reference-8-button"><p><span><span>Chen</span>, <span>J.</span></span>, and <span><span>Rodden</span>, <span>J.</span></span>. <span>2015</span>. “<span>Cutting through the Thicket: Redistricting Simulations and the Detection of Partisan Gerrymanders</span>.” <span>Election Law Journal</span> <span>14</span> (<span>4</span>): <span>331</span>–<span>345</span>.<a target="_blank" aria-label="CrossRef link for Cutting through the Thicket: Redistricting Simulations and the Detection of Partisan Gerrymanders" href="https://dx.doi.org/10.1089/elj.2015.0317">CrossRef</a><a target="_blank" aria-label="Google Scholar link for Cutting through the Thicket: Redistricting Simulations and the Detection of Partisan Gerrymanders" href="https://scholar.google.com/scholar_lookup?title=Cutting+through+the+Thicket%3A+Redistricting+Simulations+and+the+Detection+of+Partisan+Gerrymanders&amp;author=Chen+J.&amp;author=Rodden+J.&amp;publication+year=2015&amp;journal=Election+Law+Journal&amp;volume=14&amp;doi=10.1089%2Felj.2015.0317&amp;pages=331-345">Google Scholar</a></p></div><div id="r9" aria-flowto="reference-9-content reference-9-button"><p><span><span>Cho</span>, <span>W. T.</span></span>, and <span><span>Cain</span>, <span>B.</span></span>. <span>2020</span>. “<span>Human-Centered Redistricting Automation in the Age of AI</span>.” <span>Science</span> <span>369</span> (<span>6508</span>): <span>1179</span>–<span>1181</span>.<a target="_blank" aria-label="CrossRef link for Human-Centered Redistricting Automation in the Age of AI" href="https://dx.doi.org/10.1126/science.abd1879">CrossRef</a><a target="_blank" aria-label="Google Scholar link for Human-Centered Redistricting Automation in the Age of AI" href="https://scholar.google.com/scholar_lookup?title=Human-Centered+Redistricting+Automation+in+the+Age+of+AI&amp;author=Cho+W.+T.&amp;author=Cain+B.&amp;publication+year=2020&amp;journal=Science&amp;volume=369&amp;doi=10.1126%2Fscience.abd1879&amp;pages=1179-1181">Google Scholar</a><a target="_blank" aria-label="PubMed link for Human-Centered Redistricting Automation in the Age of AI" href="https://www.ncbi.nlm.nih.gov/pubmed/32883858">PubMed</a></p></div><div id="r10" aria-flowto="reference-10-content reference-10-button"><p><span><span>Cho</span>, <span>W. T.</span></span>, and <span><span>Liu</span>, <span>Y.</span></span>. <span>2016</span>. “<span>Toward a Talismanic Redistricting Tool: A Computational Method for Identifying Extreme Redistricting Plans</span>.” <span>Election Law Journal</span> <span>15</span> (<span>4</span>): <span>351</span>–<span>366</span>.<a target="_blank" aria-label="Google Scholar link for Toward a Talismanic Redistricting Tool: A Computational Method for Identifying Extreme Redistricting Plans" href="https://scholar.google.com/scholar_lookup?title=Toward+a+Talismanic+Redistricting+Tool%3A+A+Computational+Method+for+Identifying+Extreme+Redistricting+Plans&amp;author=Cho+W.+T.&amp;author=Liu+Y.&amp;publication+year=2016&amp;journal=Election+Law+Journal&amp;volume=15&amp;pages=351-366">Google Scholar</a></p></div><div id="r11" aria-flowto="reference-11-content reference-11-button"><p><span><span>Dahl</span>, <span>R. A.</span></span> <span>1971</span>. <span>Polyarchy: Participation and Opposition</span>. A Yale Paperbound, Vol. <span>254</span>. <span>New Haven</span>: <span>Yale University Press</span>.<a target="_blank" aria-label="Google Scholar link for Polyarchy: Participation and Opposition" href="https://scholar.google.com/scholar_lookup?title=Polyarchy%3A+Participation+and+Opposition&amp;author=Dahl+R.+A.&amp;publication+year=1971">Google Scholar</a></p></div><div id="r15" aria-flowto="reference-15-content reference-15-button"><p><span><span>Kenny</span>, <span>C. T.</span></span>, <span><span>Kuriwaki</span>, <span>S.</span></span>, <span><span>McCartan</span>, <span>C.</span></span>, <span><span>Rosenman</span>, <span>E. T.</span></span>, <span><span>Simko</span>, <span>T.</span></span>, and <span><span>Imai</span>, <span>K.</span></span>. <span>2021</span>. “<span>The Use of Differential Privacy for Census Data and Its Impact on Redistricting: The Case of the 2020 US Census</span>.” <span>Science Advances</span> <span>7</span> (<span>41</span>): <span>eabk3283</span>.<a target="_blank" aria-label="CrossRef link for The Use of Differential Privacy for Census Data and Its Impact on Redistricting: The Case of the 2020 US Census" href="https://dx.doi.org/10.1126/sciadv.abk3283">CrossRef</a><a target="_blank" aria-label="Google Scholar link for The Use of Differential Privacy for Census Data and Its Impact on Redistricting: The Case of the 2020 US Census" href="https://scholar.google.com/scholar_lookup?title=The+Use+of+Differential+Privacy+for+Census+Data+and+Its+Impact+on+Redistricting%3A+The+Case+of+the+2020+US+Census&amp;author=Kenny+C.+T.&amp;author=Kuriwaki+S.&amp;author=McCartan+C.&amp;author=Rosenman+E.+T.&amp;author=Simko+T.&amp;author=Imai+K.&amp;publication+year=2021&amp;journal=Science+Advances&amp;volume=7&amp;doi=10.1126%2Fsciadv.abk3283">Google Scholar</a></p></div><div id="r16" aria-flowto="reference-16-content reference-16-button"><p><span><span>Kenny</span>, <span>C. T.</span></span>, <span><span>McCartan</span>, <span>C.</span></span>, <span><span>Simko</span>, <span>T.</span></span>, <span><span>Kuriwaki</span>, <span>S.</span></span>, and <span><span>Imai</span>, <span>K.</span></span>. <span>2023</span>. “<span>Widespread Partisan Gerrymandering Mostly Cancels Nationally, but Reduces Electoral Competition</span>.” <span>Proceedings of the National Academy of Sciences</span> <span>120</span> (<span>25</span>): <span>e2217322120</span>.<a target="_blank" aria-label="CrossRef link for Widespread Partisan Gerrymandering Mostly Cancels Nationally, but Reduces Electoral Competition" href="https://dx.doi.org/10.1073/pnas.2217322120">CrossRef</a><a target="_blank" aria-label="Google Scholar link for Widespread Partisan Gerrymandering Mostly Cancels Nationally, but Reduces Electoral Competition" href="https://scholar.google.com/scholar_lookup?title=Widespread+Partisan+Gerrymandering+Mostly+Cancels+Nationally%2C+but+Reduces+Electoral+Competition&amp;author=Kenny+C.+T.&amp;author=McCartan+C.&amp;author=Simko+T.&amp;author=Kuriwaki+S.&amp;author=Imai+K.&amp;publication+year=2023&amp;journal=Proceedings+of+the+National+Academy+of+Sciences&amp;volume=120&amp;doi=10.1073%2Fpnas.2217322120">Google Scholar</a><a target="_blank" aria-label="PubMed link for Widespread Partisan Gerrymandering Mostly Cancels Nationally, but Reduces Electoral Competition" href="https://www.ncbi.nlm.nih.gov/pubmed/37310996">PubMed</a></p></div><div id="r17" aria-flowto="reference-17-content reference-17-button"><p><span><span>Landau</span>, <span>Z.</span></span>, <span><span>Reid</span>, <span>O.</span></span>, and <span><span>Yershov</span>, <span>I.</span></span>. <span>2009</span>. “<span>A Fair Division Solution to the Problem of Redistricting</span>.” <span>Social Choice and Welfare</span> <span>32</span> (<span>3</span>): <span>479</span>–<span>492</span>.<a target="_blank" aria-label="CrossRef link for A Fair Division Solution to the Problem of Redistricting" href="https://dx.doi.org/10.1007/s00355-008-0336-6">CrossRef</a><a target="_blank" aria-label="Google Scholar link for A Fair Division Solution to the Problem of Redistricting" href="https://scholar.google.com/scholar_lookup?title=A+Fair+Division+Solution+to+the+Problem+of+Redistricting&amp;author=Landau+Z.&amp;author=Reid+O.&amp;author=Yershov+I.&amp;publication+year=2009&amp;journal=Social+Choice+and+Welfare&amp;volume=32&amp;doi=10.1007%2Fs00355-008-0336-6&amp;pages=479-492">Google Scholar</a></p></div><div id="r18" aria-flowto="reference-18-content reference-18-button"><p><span><span>McCartan</span>, <span>C.</span></span>, and <span><span>Imai</span>, <span>K.</span></span>. <span>2023</span>. “<span>Sequential Monte Carlo for Sampling Balanced and Compact Redistricting Plans</span>.” <span>Annals of Applied Statistics</span> <span>17</span> (<span>4</span>): <span>3300</span>–<span>3323</span>.<a target="_blank" aria-label="CrossRef link for Sequential Monte Carlo for Sampling Balanced and Compact Redistricting Plans" href="https://dx.doi.org/10.1214/23-AOAS1763">CrossRef</a><a target="_blank" aria-label="Google Scholar link for Sequential Monte Carlo for Sampling Balanced and Compact Redistricting Plans" href="https://scholar.google.com/scholar_lookup?title=Sequential+Monte+Carlo+for+Sampling+Balanced+and+Compact+Redistricting+Plans&amp;author=McCartan+C.&amp;author=Imai+K.&amp;publication+year=2023&amp;journal=Annals+of+Applied+Statistics&amp;volume=17&amp;doi=10.1214%2F23-AOAS1763&amp;pages=3300-3323">Google Scholar</a></p></div><div id="r19" aria-flowto="reference-19-content reference-19-button"><p><span><span>McDonald</span>, <span>M. P.</span></span> <span>2004</span>. “<span>A Comparative Analysis of Redistricting Institutions in the United States, 2001–02</span>.” <span>State Politics and Policy Quarterly</span> <span>4</span> (<span>4</span>): <span>371</span>–<span>395</span>.<a target="_blank" aria-label="CrossRef link for A Comparative Analysis of Redistricting Institutions in the United States, 2001–02" href="https://dx.doi.org/10.1177/153244000400400402">CrossRef</a><a target="_blank" aria-label="Google Scholar link for A Comparative Analysis of Redistricting Institutions in the United States, 2001–02" href="https://scholar.google.com/scholar_lookup?title=A+Comparative+Analysis+of+Redistricting+Institutions+in+the+United+States%2C+2001%E2%80%9302&amp;author=McDonald+M.+P.&amp;publication+year=2004&amp;journal=State+Politics+and+Policy+Quarterly&amp;volume=4&amp;doi=10.1177%2F153244000400400402&amp;pages=371-395">Google Scholar</a></p></div><div id="r20" aria-flowto="reference-20-content reference-20-button"><p><span><span>Miller</span>, <span>P.</span></span>, and <span><span>Grofman</span>, <span>B.</span></span>. <span>2013</span>. “<span>Redistricting Commissions in the Western United States</span>.” <span>UC Irvine Law Review</span> <span>3</span> (<span>3</span>): <span>637</span>–<span>668</span>.<a target="_blank" aria-label="Google Scholar link for Redistricting Commissions in the Western United States" href="https://scholar.google.com/scholar_lookup?title=Redistricting+Commissions+in+the+Western+United+States&amp;author=Miller+P.&amp;author=Grofman+B.&amp;publication+year=2013&amp;journal=UC+Irvine+Law+Review&amp;volume=3&amp;pages=637-668">Google Scholar</a></p></div><div id="r21" aria-flowto="reference-21-content reference-21-button"><p><span><span>Osborne</span>, <span>M. J.</span></span> <span>2004</span>. <span>An Introduction to Game Theory</span>, Vol. <span>3</span>. <span>New York</span>: <span>Oxford University Press</span>.<a target="_blank" aria-label="Google Scholar link for An Introduction to Game Theory" href="https://scholar.google.com/scholar_lookup?title=An+Introduction+to+Game+Theory&amp;author=Osborne+M.+J.&amp;publication+year=2004">Google Scholar</a></p></div><div id="r22" aria-flowto="reference-22-content reference-22-button"><p><span><span>Palmer</span>, <span>M.</span></span>, <span><span>Schneer</span>, <span>B.</span></span>, and <span><span>DeLuca</span>, <span>K.</span></span> (<span>2023</span>). “Replication Data for: A Partisan Solution to Partisan Gerrymandering: The Define–Combine Procedure.” Harvard Dataverse, V1. <span href="#10.7910/DVN/XBYFE1">https://doi.org/10.7910/DVN/XBYFE1</span>
<a target="_blank" aria-label="CrossRef link for Palmer, M., Schneer, B., and DeLuca, K. (2023). “Replication Data for: A Partisan Solution to Partisan Gerrymandering: The Define–Combine Procedure.” Harvard Dataverse, V1. https://doi.org/10.7910/DVN/XBYFE1" href="https://dx.doi.org/10.7910/DVN/XBYFE1">CrossRef</a><a target="_blank" aria-label="Google Scholar link for Palmer, M., Schneer, B., and DeLuca, K. (2023). “Replication Data for: A Partisan Solution to Partisan Gerrymandering: The Define–Combine Procedure.” Harvard Dataverse, V1. https://doi.org/10.7910/DVN/XBYFE1" href="https://scholar.google.com/scholar?q=Palmer,+M.,+Schneer,+B.,+and+DeLuca,+K.+(2023).+%E2%80%9CReplication+Data+for:+A+Partisan+Solution+to+Partisan+Gerrymandering:+The+Define%E2%80%93Combine+Procedure.%E2%80%9D+Harvard+Dataverse,+V1.+https://doi.org/10.7910/DVN/XBYFE1">Google Scholar</a></p></div><div id="r25" aria-flowto="reference-25-content reference-25-button"><p><span><span>Warshaw</span>, <span>C.</span></span>, <span><span>McGhee</span>, <span>E.</span></span>, and <span><span>Migurski</span>, <span>M.</span></span>. <span>2022</span>. “<span>Districts for a New Decade—Partisan Outcomes and Racial Representation in the 2021–22 Redistricting Cycle</span>.” <span>Publius: The Journal of Federalism</span> <span>52</span> (<span>3</span>): <span>428</span>–<span>451</span>.<a target="_blank" aria-label="CrossRef link for Districts for a New Decade—Partisan Outcomes and Racial Representation in the 2021–22 Redistricting Cycle" href="https://dx.doi.org/10.1093/publius/pjac020">CrossRef</a><a target="_blank" aria-label="Google Scholar link for Districts for a New Decade—Partisan Outcomes and Racial Representation in the 2021–22 Redistricting Cycle" href="https://scholar.google.com/scholar_lookup?title=Districts+for+a+New+Decade%E2%80%94Partisan+Outcomes+and+Racial+Representation+in+the+2021%E2%80%9322+Redistricting+Cycle&amp;author=Warshaw+C.&amp;author=McGhee+E.&amp;author=Migurski+M.&amp;publication+year=2022&amp;journal=Publius%3A+The+Journal+of+Federalism&amp;volume=52&amp;doi=10.1093%2Fpublius%2Fpjac020&amp;pages=428-451">Google Scholar</a></p></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tailwind Color Palette Generator (464 pts)]]></title>
            <link>https://www.tints.dev/</link>
            <guid>39227831</guid>
            <pubDate>Fri, 02 Feb 2024 12:26:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tints.dev/">https://www.tints.dev/</a>, See on <a href="https://news.ycombinator.com/item?id=39227831">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p>Read the <a href="https://www.simeongriggs.dev/using-the-tailwind-css-palette-generator-and-api">launch blog post for full details</a> on how this works.</p><h2>Palette Creator</h2><p>Set the initial <strong>Value</strong> as a valid hexadecimal colour. By default this is stop 500, but it can be changed to any stop from 50-950.</p><p>For colours that have 100% <strong>Saturation</strong>, make the Palette more interesting by shifting the <strong>Hue</strong> up or down.</p><p>Palettes starting from a Base colour with little <strong>Saturation</strong> get more interesting by increasing <strong>Saturation</strong> at the extremes.</p><p>Shift the <strong>Minimum/Maximum</strong>&nbsp;<strong>Lightness/Luminance</strong> to spread out the rest of the colours to the extremes of white and black. Switch between Lightness and Luminance to produce a different spread of colours at the extremes.</p><p>These principles are inspired by the excellent <a href="https://refactoringui.com/book/">Refactoring UI</a> book by Adam Wathan &amp; Steve Schoger. The same book recommends against automated tools, just like this one!</p><p>This tool exists to fast-track the creation of new palettes.</p><h2>Palette API</h2><p>Any set of Palettes can be fetched via an API. You may find this useful for design tools that need to generate a 50-950 Palette from just a single Hex value.</p><p>Currently, the API will only return a Palette using the base hex value, with no options to have HSL tweaks.</p><h2>Credits</h2><p>Made by <a href="https://simeongriggs.dev/">Simeon Griggs</a></p><ul><li>Contributions by <a href="https://truefrontierapps.com/">kevnk</a></li><li>Designed with <a href="https://tailwindcss.com/">Tailwind CSS</a> (obvs) <ul><li>with a sprinkling of <a href="https://headlessui.dev/">Headless UI</a></li><li>and a dash of <a href="https://heroicons.com/">HeroIcons</a></li></ul></li><li>Built with <a href="https://remix.run/">Remix</a></li><li>Hosted on <a href="https://vercel.com/">Vercel</a></li><li>Content in <a href="https://www.sanity.io/">Sanity.io</a></li></ul></div><div><p>Paste this into your <code>tailwind.config.js</code></p><section id="output"><pre>{
  "colors": {
    "blue": {
      50: "#EBF3FE",
      100: "#D8E6FD",
      200: "#B1CEFB",
      300: "#8AB5FA",
      400: "#639CF8",
      500: "#3B82F6",
      600: "#0B60EA",
      700: "#0848B0",
      800: "#053075",
      900: "#03183B",
      950: "#010C1D"
    }
  }
}</pre></section></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[NASA Workmanship Guide for wire splicing (133 pts)]]></title>
            <link>https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/407%20Splices.html</link>
            <guid>39227727</guid>
            <pubDate>Fri, 02 Feb 2024 12:10:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/407%20Splices.html">https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/407%20Splices.html</a>, See on <a href="https://news.ycombinator.com/item?id=39227727">Hacker News</a></p>
<div id="readability-page-1" class="page"><div width="412.8" color="#000000">

<tbody><tr>
<td colspan="2">
<span face="arial" size="1"><b>CABLE AND HARNESS<br>SPLICES (cont.)</b></span></td></tr>

<tr>
<td>
<img src="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/graphics/407/407-06.gif" alt="end crimp splice"></td>
<td>
<img src="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/graphics/407/407-07.gif" alt="parallel crimp splice"></td>
</tr>

<tr>
<td>
<p>ACCEPTABLE</p>
<p>CRIMP SPLICE - END</p>

<p>Tubing is tight and symmetrical.  Overlaps meet minimum electrical spacing, while providing strain relief.  The termination is visible.  Conductor(s) exhibit proper bend radius and strain relief.</p>

<p>NASA-STD-8739.4 [19.6.1.c]</p></td>

<td>
<p>ACCEPTABLE</p>
<p>CRIMP SPLICE - PARALLEL</p>

<p>Tubing is tight and symmetrical.  Overlaps meet minimum electrical spacing, while providing strain relief.  The termination is visible.  Conductor(s) exhibit proper bend radius and strain relief.</p>

<p>NASA-STD-8739.4 [19.6.1.c]</p></td>
</tr>

<tr>
<td>
<img src="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/graphics/407/407-08.gif" alt="end lash splice"></td>
<td>
<img src="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/graphics/407/407-09.gif" alt="inline lash splice"></td>
</tr>

<tr>
<td>
<p>ACCEPTABLE</p>
<p>LASH SPLICE<br>END</p>

<p>The termination is fully wetted, smooth and shiny.  Conductor contours are discernable.  Tubing is tightly shrunk, with proper strain relief, overlap and no exposed conductive surfaces.</p>

<p>Best Workmanship Practice</p></td>

<td>
<p>ACCEPTABLE</p>
<p>LASH SPLICE<br>INLINE</p>

<p>The termination is fully wetted, smooth and shiny.  Conductor contours are discernable.  Tubing is tightly shrunk, with proper strain relief, overlap and no exposed conductive surfaces.</p>

<p>Best Workmanship Practice</p></td>
</tr>

<tr>
<td>
<img src="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/graphics/407/407-10.gif" alt="inline branch lash splice"></td>
<td>
<img src="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/graphics/407/407-11.gif" alt="shield termination inline lash splice"></td>
</tr>

<tr>
<td>
<p>ACCEPTABLE</p>
<p>LASH SPLICE<br>INLINE BRANCH</p>

<p>The termination is fully wetted, smooth and shiny.  Conductor contours are discernable.  Tubing is tightly shrunk, with proper strain relief, overlap and no exposed conductive surfaces.</p>

<p>Best Workmanship Practice</p></td>

<td>
<p>ACCEPTABLE</p>
<p>LASH SPLICE<br>SHIELD TERMINATION (INLINE/RUNNING)</p>

<p>The termination is fully wetted, smooth and shiny.  Conductor contours are discernable.  Tubing is tightly shrunk, with proper strain relief, overlap and no exposed conductive surfaces.</p>

<p>Best Workmanship Practice</p></td>
</tr>
</tbody></div><div width="412.8" color="#000000">

<tbody><tr>
<td colspan="2">
<span face="arial" size="1"><b>CABLE AND HARNESS<br>SPLICES (cont.)</b></span></td></tr>

<tr>
<td>
<img src="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/graphics/407/407-12.gif" alt="traditional shield termination lash splice"></td>
<td>
<img src="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/graphics/407/407-13.gif" alt="inline solder sleeve splice"></td>
</tr>

<tr>
<td>
<p>ACCEPTABLE</p>
<p>LASH SPLICE<br>SHIELD TERMINATION (TRADITIONAL)</p>

<p>The termionation is fully wetted, smooth and shiny.  Conductor contours are discernable.  Tubing is tightly shrunk with proper strain relief.</p>

<p>Best Workmanship Practice</p></td>

<td>
<p>ACCEPTABLE</p>
<p>SOLDER SLEEVE SPLICE<br>INLINE</p>

<p>The termination is fully wetted, smooth and shiny.  Conductor contours are discernable.  Tubing is tightly shrunk with proper strain relief, overlap and no exposed conductive surfaces.</p>

<p>Best Workmanship Practice</p></td>
</tr>

<tr>
<td>
<img src="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/graphics/407/407-14.gif" alt="inline branch solder sleeve splice"></td>
<td>
<img src="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/graphics/407/407-15.gif" alt="inline shield termination solder sleeve splice"></td>
</tr>

<tr>
<td>
<p>ACCEPTABLE</p>
<p>SOLDER SLEEVE SPLICE<br>INLINE BRANCH</p>

<p>The termination is fully wetted, smooth and shiny.  Conductor contours are discernable.  Tubing is tightly shrunk, with proper strain relief, overlap and no exposed conductive surfaces.</p>

<p>Best Workmanship Practice</p></td>

<td>
<p>ACCEPTABLE</p>
<p>SOLDER SLEEVE SPLICE<br>SHIELD TERMINATION (INLINE)</p>

<p>The termination is fully wetted, smooth and shiny.  Conductor contours are discernable.  Tubing is tightly shrunk, with proper strain relief, overlap and no exposed conductive surfaces.</p>

<p>NASA-STD-8739.4 [11.4], [19.6.1]</p></td>
</tr>

<tr>
<td>
<img src="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/graphics/407/407-16.gif" alt="traditional shield termination solder sleeve splice"></td>
<td>
<img src="https://workmanship.nasa.gov/lib/insp/2%20books/links/sections/graphics/407/407-17.gif" alt="western union splice"></td>
</tr>

<tr>
<td>
<p>ACCEPTABLE</p>
<p>SOLDER SLEEVE SPLICE<br>SHIELD TERMINATION (TRADITIONAL)</p>

<p>The termination is fully wetted, smooth and shiny.  Conductor contours are discernable.  Tubing is tightly shrunk, with proper strain relief, overlap and no exposed conductive surfaces.</p>

<p>NASA-STD-8739.4 [11.4], [19.6.1]</p></td>

<td>
<p>ACCEPTABLE</p>
<p>WESTERN UNION/LINEMAN SPLICE</p>

<p>The termination is fully wetted, smooth and shiny.  Tubing is tightly shrunk, with proper strain relief, overlap and no exposed conductive surfaces.  Western Union splices are used for solid conductors.</p>

<p>NASA-STD-8739.3 [13.6]</p></td>
</tr>
</tbody></div></div>]]></description>
        </item>
    </channel>
</rss>