<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 20 Oct 2024 21:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[WebGPU-Based WiFi Simulator (101 pts)]]></title>
            <link>https://wifi-solver.com</link>
            <guid>41897214</guid>
            <pubDate>Sun, 20 Oct 2024 18:01:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://wifi-solver.com">https://wifi-solver.com</a>, See on <a href="https://news.ycombinator.com/item?id=41897214">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Kurt Vonnegut's lost board game published (105 pts)]]></title>
            <link>https://www.polygon.com/board-games/467103/kurt-vonnegut-ghq-lost-board-game-publisher-interview</link>
            <guid>41896636</guid>
            <pubDate>Sun, 20 Oct 2024 16:44:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.polygon.com/board-games/467103/kurt-vonnegut-ghq-lost-board-game-publisher-interview">https://www.polygon.com/board-games/467103/kurt-vonnegut-ghq-lost-board-game-publisher-interview</a>, See on <a href="https://news.ycombinator.com/item?id=41896636">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="zephr-anchor"><p>Fans of literature most likely know Kurt Vonnegut for the novel <em><a rel="sponsored" href="https://www.amazon.com/Slaughterhouse-Five-Kurt-Vonnegut-audiobook/dp/B015EKZX2U/?tag=polygon05-20">Slaughterhouse-Five</a></em>. The staunchly anti-war book first resonated with readers during the Vietnam War era, later becoming a staple in high school curricula the world over. When Vonnegut died in 2007 at the age of 84, he was widely recognized as one of the greatest American novelists of all time. But would you believe that he was also an accomplished game designer?</p><p>In 1956, following the lukewarm reception of his first novel, <em>Player Piano</em>, Vonnegut was one of the 16 million other World War II veterans struggling to put food on the table. His moneymaking solution at the time was a board game called <em>GHQ</em>, which leveraged his understanding of modern combined arms warfare and distilled it into a simple game played on an eight-by-eight grid. Vonnegut pitched the game relentlessly to publishers all year long according to game designer and NYU faculty member <a href="https://gamecenter.nyu.edu/faculty/geoff-engelstein/">Geoff Engelstein</a>, who recently found those letters sitting in the archives at <a href="https://libraries.indiana.edu/lilly-library/kurt-vonnegut">Indiana University</a>. But the real treasure was an original set of typewritten rules, complete with Vonnegut’s own notes in the margins. </p><p>With the permission of the Vonnegut estate, Engelstein tells Polygon that he cleaned the original rules up just a little bit, buffed out the dents in <em>GHQ</em>’s endgame, and spun up some decent art and graphic design. Now you can purchase the final product, titled <em>Kurt Vonnegut’s GHQ: The Lost Board Game</em>, at your local Barnes &amp; Noble — nearly 70 years after it was created.</p><div><div><p><a href="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0,0,100,100" data-pswp-height="445" data-pswp-width="600" target="_blank" rel="noreferrer"><img alt="A render of GHQ set up on a table for play. The markers are large and colorful, shaped like arrows and blocks. " data-chromatic="ignore" loading="lazy" decoding="async" data-nimg="fill" sizes="(max-width: 639px) 100vw, (max-width: 1023px) 50vw, 700px" srcset="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=256 256w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=376 376w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=384 384w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=415 415w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=480 480w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=540 540w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=640 640w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=750 750w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=828 828w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1080 1080w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1200 1200w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1440 1440w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1920 1920w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2048 2048w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2400 2400w" src="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_laid_out.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2400"></a></p></div><p><cite>Image: Mars International</cite></p></div><p>In a recent interview with Polygon, Engelstein still seemed stunned to have stumbled over the game in the first place through his research. But what’s truly fascinating to him is how diametrically opposed to Vonnegut’s later work <em>GHQ </em>truly is.</p><p>“<em>Sirens of Titan</em> was written at the same time as he was working on this game,” Engelstein told Polygon. “In <em>Sirens of Titan</em>, there’s this army of Mars which is really a joke. No one in the army, [not] even the officers, are really in charge of what’s going on. They’re all mind controlled. Nobody has any real free will. They’re just set up as a pawn to be sacrificed, to make Earth come together, kind of <em>Watchmen</em>-style.” </p><div id=":R3irarr6:"><div><p><a href="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0,0,100,100" data-pswp-height="2000" data-pswp-width="3000" target="_blank" rel="noreferrer"><img alt="" data-chromatic="ignore" loading="lazy" decoding="async" data-nimg="fill" sizes="(max-width: 639px) 100vw, (max-width: 1023px) 50vw, 700px" srcset="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=256 256w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=376 376w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=384 384w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=415 415w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=480 480w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=540 540w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=640 640w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=750 750w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=828 828w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1080 1080w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1200 1200w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1440 1440w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1920 1920w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2048 2048w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2400 2400w" src="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_1.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2400"></a></p></div><div><p><a href="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0,0,100,100" data-pswp-height="2000" data-pswp-width="3000" target="_blank" rel="noreferrer"><img alt="" data-chromatic="ignore" loading="lazy" decoding="async" data-nimg="fill" sizes="(max-width: 639px) 100vw, (max-width: 1023px) 50vw, 700px" srcset="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=256 256w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=376 376w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=384 384w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=415 415w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=480 480w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=540 540w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=640 640w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=750 750w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=828 828w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1080 1080w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1200 1200w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1440 1440w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1920 1920w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2048 2048w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2400 2400w" src="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_compilation_2.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2400"></a></p></div></div><p>While <em><a rel="sponsored" href="https://www.amazon.com/The-Sirens-of-Titan-Kurt-Vonnegut-audiobook/dp/B001D1ILCO/?tag=polygon05-20">The Sirens of Titan</a></em> was a deeply cynical view of war, <em>GHQ </em>is deeply <em>un</em>cynical. In fact, his own pitch letters note that Vonnegut thought <em>GHQ</em> would be an excellent training aid for future military leaders, including cadets at West Point. How are modern audiences to reconcile those words from the same man who wrote <em><a rel="sponsored" href="https://www.amazon.com/Cats-Cradle-Kurt-Vonnegut-audiobook/dp/B000Z7FH9M/?tag=polygon05-20">Cat’s Cradle</a></em>?</p><p>“There’s no definitive answers [to those questions],” Engelstein said. “He didn’t write about it. Nobody asked him about it while he was alive, so we will never know.”</p><p>For fans of board gaming, the questions go in a slightly different direction: What if Vonnegut’s pitches from the 1950s had been successful? </p><p>Engelstein reasons that if Vonnegut was pitching the game in ’56, then it would have taken at least a few years for the game to be produced and finally published. That 1958-1959 window would have placed <em>GHQ</em> in rare company — 1958 was the year <em>Tactics 2</em> was published, a game that would go on to inspire the <a href="https://www.polygon.com/features/2013/1/29/3916154/turn-by-turn-battlefront-combat-mission">Squad Leader</a> series of map-and-token tactical wargames and, ultimately, video game genres like turn-based and real-time strategy. Just a year later and the industry would see the release of <em>Risk</em> and <em>Diplomacy</em>, the precursors of the modern 4X genre and, in and of themselves, two successful franchises that are popular to this day. </p><div><p><a href="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0,0,100,100" data-pswp-height="2000" data-pswp-width="3000" target="_blank" rel="noreferrer"><img alt="A letter pitching GHQ to the Sallfield Publishing Company in Ohio. Also a rejection letter from the same organization." data-chromatic="ignore" loading="lazy" decoding="async" data-nimg="fill" sizes="(max-width: 639px) 100vw, (max-width: 1023px) 50vw, 700px" srcset="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=256 256w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=376 376w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=384 384w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=415 415w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=480 480w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=540 540w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=640 640w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=750 750w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=828 828w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1080 1080w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1200 1200w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1440 1440w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=1920 1920w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2048 2048w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2400 2400w" src="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq_rejection_5a4312.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=2400"></a></p></div><p>“Three games that had tremendous influence, all war-related, coming out in that one-year, two-year period,” Engelstein mused. “So if <em>GHQ</em> also came out at the time period? There’s something in the air at that point, obviously.”</p><p>Of course, we’ll never know how those counterfactuals would have played out, but at least <em>GHQ</em> is finally available to the public. That’s great news for one of its original playtesters, Kurt Vonnegut’s son, Mark Vonnegut, who’s now 77. Engelstein said his input was invaluable in bringing the game to life.</p><p>“The success of <em>Slaughterhouse-Five</em> and the other novels is nice enough,” Vonnegut’s son recently wrote Engelstein in an email, “but I truly believe he’s watching somehow, someway, from somewhere and that the success of <em>GHQ</em> will be a greater and purely unadulterated pleasure. [...] He was discouraged about his writing at the time, but had unshakable faith that <em>GHQ</em> would succeed.”</p><p>You can find <em>Kurt Vonnegut’s GHQ: The Lost Board Game</em>, along with a special forward by <a href="https://www.polygon.com/24164196/expanse-james-s-a-corey-new-book-mercy-gods">author James S.A. Corey</a>, exclusively at Barnes &amp; Noble.</p><div data-product-filter=""><p><a href="https://go.skimresources.com/?id=1025X1701642&amp;xs=1&amp;url=https%3A%2F%2Fwww.barnesandnoble.com%2Fw%2Fkurt-vonneguts-ghq-the-lost-board-game-mars-international%2F1146300521" rel="nofollow noopener noreferrer" target="_blank"><img alt="" data-chromatic="ignore" loading="lazy" decoding="async" data-nimg="fill" sizes="(max-width: 768px) 100vw, 300px" srcset="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=376 376w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=384 384w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=415 415w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=480 480w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=540 540w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=640 640w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=750 750w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=828 828w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=1080 1080w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=1200 1200w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=1440 1440w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=1920 1920w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=2048 2048w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=2400 2400w" src="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=16.700150678051%2C0%2C66.599698643898%2C100&amp;w=2400"></a><a href="https://go.skimresources.com/?id=1025X1701642&amp;xs=1&amp;url=https%3A%2F%2Fwww.barnesandnoble.com%2Fw%2Fkurt-vonneguts-ghq-the-lost-board-game-mars-international%2F1146300521" rel="nofollow noopener noreferrer" target="_blank"><img alt="" data-chromatic="ignore" loading="lazy" decoding="async" data-nimg="fill" sizes="(max-width: 768px) 100vw, 600px" srcset="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=376 376w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=384 384w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=415 415w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=480 480w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=540 540w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=640 640w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=750 750w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=828 828w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=1080 1080w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=1200 1200w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=1440 1440w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=1920 1920w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=2048 2048w, https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=2400 2400w" src="https://platform.polygon.com/wp-content/uploads/sites/2/2024/10/ghq.jpg?quality=90&amp;strip=all&amp;crop=0.050226017076845%2C0%2C99.899547965846%2C100&amp;w=2400"></a></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Drasi: Microsoft's open source data processing platform for event-driven systems (144 pts)]]></title>
            <link>https://github.com/drasi-project/drasi-platform</link>
            <guid>41896297</guid>
            <pubDate>Sun, 20 Oct 2024 16:07:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/drasi-project/drasi-platform">https://github.com/drasi-project/drasi-platform</a>, See on <a href="https://news.ycombinator.com/item?id=41896297">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Drasi</h2><a id="user-content-drasi" aria-label="Permalink: Drasi" href="#drasi"></a></p>
<p dir="auto">Drasi is a data processing platform that simplifies detecting changes in data and taking immediate action. It is a comprehensive solution that provides built-in capabilities to track system logs and change feeds for specific events, evaluate them for relevance, and automatically initiate appropriate reactions. Visit our documentation site at <a href="https://drasi.io/" rel="nofollow">https://drasi.io</a> for detailed information.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Overview</h2><a id="user-content-overview" aria-label="Permalink: Overview" href="#overview"></a></p>
<p dir="auto">Drasi provides real-time actionable insights without the overhead of traditional data processing methods. It tracks system changes and events without the need to copy data to a central data lake or repeatedly query data sources. Drasi uses queries to continuously evaluate incoming data changes. When the changes match the criteria and conditions specified in these queries the result sets of these queries are updated. These updates then trigger context-aware reactions defined tuned to your specific requirements.</p>
<p dir="auto">Drasi operates through three components:</p>
<ul dir="auto">
<li><strong>Sources</strong> connect to data repositories within software systems to monitor logs and feeds to track changing data.</li>
<li><strong>Continuous Queries</strong> interpret monitored changes by applying criteria and conditions to identify significant changes. In Drasi, these Continuous Queries are written using the Cypher Query Language.</li>
<li><strong>Reactions</strong> trigger meaningful responses based on updates to the result sets of the Continuous Queries.<br></li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/drasi-project/community/blob/main/images/drasi_components.png"><img src="https://github.com/drasi-project/community/raw/main/images/drasi_components.png" alt="Alt text" width="800" height="300"></a></p>
<p dir="auto"><br>To illustrate how Drasi interprets events and triggers appropriate responses, consider a delivery system for an online ordering service. Orders are processed through an order management system, and delivery drivers need real-time notifications when orders are ready for pickup. Drasi automates this process by:<br></p>
<ul dir="auto">
<li>Configuring a Source to monitor the order management system for changes in order statuses and a second Source to detect when a driver becomes available for a delivery run.</li>
<li>Creating a Continuous Query that combines data from both Sources to match orders ready for pickup with available drivers.</li>
<li>Defining a Reaction to send alerts to drivers, notifying them to proceed to the pickup area.
This streamlined setup ensures drivers are promptly informed, optimizing the delivery process through real-time data integration and automated responses.<br></li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/drasi-project/community/blob/main/images/curbside_pickup_drasi.png"><img src="https://github.com/drasi-project/community/raw/main/images/curbside_pickup_drasi.png" alt="Alt text" width="800" height="300"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting Started</h2><a id="user-content-getting-started" aria-label="Permalink: Getting Started" href="#getting-started"></a></p>
<p dir="auto">Follow the <a href="https://drasi.io/getting-started/" rel="nofollow">Getting Started tutorial</a> and try out Drasi. The tutorial will lead you through:</p>
<ol dir="auto">
<li>Applying a Source representing the data source whose changes you want to observe.</li>
<li>Creating Continuous Queries to define the data to observe, conditions to assess changes, and the structure of the output.</li>
<li>Applying a Debug Reaction to view the output generated by one or more Continuous Queries.</li>
</ol>
<p dir="auto">Head over to our <a href="https://drasi.io/" rel="nofollow">documentation site</a> and visit the <a href="https://drasi.io/tutorials/" rel="nofollow">Tutorial</a> and <a href="https://drasi.io/how-to-guides/" rel="nofollow">How To</a> guides to learn more about Drasi.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Release Status</h2><a id="user-content-release-status" aria-label="Permalink: Release Status" href="#release-status"></a></p>
<p dir="auto">This is an early release of Drasi for the community learn about the platform and experiment with in Proofs Of Concept. Please share your thoughts on Drasi and create GitHub issues for any bugs you may find or if you have feature requests that will help improve Drasi.</p>
<p dir="auto">This repo contains everything you require to build a Drasi-based solution with Sources, Reactions, and tooling for development and testing.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Community</h2><a id="user-content-community" aria-label="Permalink: Community" href="#community"></a></p>
<p dir="auto">We hope you will join us and contribute to Drasi! Some of the ways to get started with contributing are participating in Issue discussions or joining us on our <a href="https://aka.ms/drasidiscord" rel="nofollow">Discord server</a>. Check out our <a href="https://github.com/drasi-project/community">Community repo</a> for more information on the community, and guidance on contributing and development.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing To Drasi</h2><a id="user-content-contributing-to-drasi" aria-label="Permalink: Contributing To Drasi" href="#contributing-to-drasi"></a></p>
<p dir="auto">Please see the <a href="https://github.com/drasi-project/drasi-platform/blob/main/CONTRIBUTING.md">Contribution guide</a> for information on contributing to Drasi.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Security</h2><a id="user-content-security" aria-label="Permalink: Security" href="#security"></a></p>
<p dir="auto">Please refer to our guide on <a href="https://github.com/drasi-project/drasi-platform/blob/main/SECURITY.md#reporting-security-issues">reporting security vulnerabilities</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Code of Conduct</h2><a id="user-content-code-of-conduct" aria-label="Permalink: Code of Conduct" href="#code-of-conduct"></a></p>
<p dir="auto">Please refer to Drasi's <a href="https://github.com/drasi-project/community/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">This project is licensed under the <strong>Apache 2.0 license</strong>. Please see the <a href="https://github.com/drasi-project/community/blob/main/LICENSE">LICENSE</a> file.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contact the Drasi Authors</h2><a id="user-content-contact-the-drasi-authors" aria-label="Permalink: Contact the Drasi Authors" href="#contact-the-drasi-authors"></a></p>
<p dir="auto">Please join us on Discord to contact us and we will get back to you as soon as possible. You can also email us at <a href="mailto:info@drasi.io">info@drasi.io</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Part of PostgreSQL We Hate the Most (2023) (148 pts)]]></title>
            <link>https://www.cs.cmu.edu/~pavlo/blog/2023/04/the-part-of-postgresql-we-hate-the-most.html</link>
            <guid>41895951</guid>
            <pubDate>Sun, 20 Oct 2024 15:30:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cs.cmu.edu/~pavlo/blog/2023/04/the-part-of-postgresql-we-hate-the-most.html">https://www.cs.cmu.edu/~pavlo/blog/2023/04/the-part-of-postgresql-we-hate-the-most.html</a>, See on <a href="https://news.ycombinator.com/item?id=41895951">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        
        <p>There are a lot of choices in databases (<a onclick="javascript:pageTracker._trackPageview('/outgoing/dbdb.io');" href="https://dbdb.io/" target="_blank">897</a> as of April 2023). With so many systems, it’s hard to know what to pick! But there is an interesting phenomenon where the Internet collectively decides on the default choice for new applications. In the 2000s, the conventional wisdom selected MySQL because rising tech stars like Google and Facebook were using it. Then in the 2010s, it was MongoDB because <a onclick="javascript:pageTracker._trackPageview('/outgoing/stackoverflow.com');" href="https://stackoverflow.com/a/3737121" target="_blank">non-durable writes</a> made it “<a onclick="javascript:pageTracker._trackPageview('/outgoing/youtu.be');" href="https://youtu.be/b2F-DItXtZs" target="_blank">webscale</a>“. In the last five years, PostgreSQL has become the Internet’s darling DBMS. And for good reasons! It’s dependable, feature-rich, extensible, and well-suited for most operational workloads.</p>
<p>But as much as we <a onclick="javascript:pageTracker._trackPageview('/downloads/papers/2017/p781-wu.pdf');" href="https://twitter.com/andy_pavlo/status/1534225032179814403" target="_blank">love PostgreSQL at OtterTune</a>, certain aspects of it are not great. So instead of writing yet another blog article like everyone else touting the awesomeness of everyone’s favorite elephant-themed DBMS, we want to discuss the one major thing that sucks: how PostgreSQL implements <a onclick="javascript:pageTracker._trackPageview('/outgoing/en.wikipedia.org');" href="https://en.wikipedia.org/wiki/Multiversion_concurrency_control" target="_blank">multi-version concurrency control</a> (MVCC). Our <a onclick="javascript:pageTracker._trackPageview('/downloads/papers/2017/p781-wu.pdf');" href="https://db.cs.cmu.edu/papers/2017/p781-wu.pdf" target="_blank">research</a> at Carnegie Mellon University and experience optimizing PostgreSQL database instances on Amazon RDS have shown that its MVCC implementation is the <u><b>worst</b></u> among the other widely used relational DBMSs, including MySQL, Oracle, and Microsoft SQL Server. And yes, Amazon’s PostgreSQL Aurora still has these problems.</p>
<p>In this article, we’ll dive into MVCC: what it is, how PostgreSQL does it, and why it is terrible. Our goal at OtterTune is to give you <i>fewer</i> things to worry about with your databases, so we’ve thought a lot about dealing with this problem. We’ll cover OtterTune’s solution for managing PostgreSQL’s MVCC issues automatically for RDS and Aurora databases in a follow-up article next week.</p>
<h2 id="what-is-mvcc">What is Multi-Version Concurrency Control?</h2>
<p>The goal of MVCC in a DBMS is to allow multiple queries to read and write to the database simultaneously without interfering with each other when possible. The basic idea of MVCC is that the DBMS never overwrites existing rows. Instead, for each (logical) row, the DBMS maintains multiple (physical) versions. When the application executes a query, the DBMS determines which version to retrieve to satisfy the request according to some version ordering (e.g., creation timestamp). The benefit of this approach is that multiple queries can read older versions of rows without getting blocked by another query updating it. Queries observe a snapshot of the database as it existed when the DBMS started that query’s transaction (snapshot isolation). This approach eliminates the need for explicit <a onclick="javascript:pageTracker._trackPageview('/outgoing/www.postgresql.org');" href="https://www.postgresql.org/docs/current/explicit-locking.html" target="_blank">record locks</a> that block readers from accessing data while writers modify the same item.</p>
<p>David Reed’s 1978 MIT Ph.D. dissertation, “<a onclick="javascript:pageTracker._trackPageview('/outgoing/dspace.mit.edu');" href="https://dspace.mit.edu/handle/1721.1/16279" target="_blank">Concurrency Control in Distributed Database Systems</a>,” was, we believe, the first publication to describe MVCC. The first commercial DBMS implementation of MVCC was <a onclick="javascript:pageTracker._trackPageview('/outgoing/en.wikipedia.org');" href="https://en.wikipedia.org/wiki/InterBase#History" target="_blank">InterBase</a> in the 1980s. Since then, nearly every new DBMS created in the last two decades that supports transactions implements MVCC.</p>
<p>A systems engineer has to make several design decisions when building a DBMS that supports MVCC. At a high level, it comes down to the following:</p>
<ol>
  <li aria-level="1">How to store updates to existing rows.</li>
  <li aria-level="1">How to find the correct version of a row for a query at runtime.</li>
  <li aria-level="1">How to remove expired versions that are no longer visible.</li>
</ol>

<p>These decisions are not mutually exclusive. In the case of PostgreSQL, it’s how they decided to handle the first question in the 1980s that caused problems with the other two that we still have to deal with today.</p>
<p>For our discussion, we will use the following example of a table containing movie information. Each row in the table includes the movie name, release year, director, and a unique ID serving as the primary key, with secondary indexes on the movie name and director. Here is the DDL command to create this table:</p>
<pre><code>CREATE TABLE movies (
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  name VARCHAR(256) NOT NULL,
  year SMALLINT NOT NULL,
  director VARCHAR(128)
);
CREATE INDEX idx_name ON movies (name);
CREATE INDEX idx_director ON movies (director);</code></pre>

<p>The table contains a primary index (<code>movies_pkey</code>) and two secondary B+Tree indexes (<code>idx_name</code>, <code>idx_director</code>).</p>
<h2 id="postgresql-mvcc">PostgreSQL’s Multi-Version Concurrency Control</h2>

<p>As discussed in Stonebraker’s <a onclick="javascript:pageTracker._trackPageview('/outgoing/apps.dtic.mil');" href="https://apps.dtic.mil/sti/citations/ADA187244" target="_blank">system design document from 1987</a>, PostgreSQL was designed from the beginning to support multi-versioning. The core idea of PostgreSQL’s MVCC scheme is seemingly straightforward: when a query updates an existing row in a table, the DBMS makes a copy of that row and applies the changes to this new version instead of overwriting the original row. We refer to this approach as the <b>append-only</b> version storage scheme. But as we now describe, this approach has several non-trivial implications in the rest of the system.</p>
<h3>Multi-Versioned Storage</h3>
<p>PostgreSQL stores all row versions in a table in the same storage space. To update an existing tuple, the DBMS first acquires an empty slot from the table for the new row version. It then copies the row content of the current version to the new version, and applies the modifications to the row in the newly allocated version slot. You can see this process in the example below when an application executes an update query on the movies database to change the release year of “<a onclick="javascript:pageTracker._trackPageview('/outgoing/en.wikipedia.org');" href="https://en.wikipedia.org/wiki/Shaolin_and_Wu_Tang" target="_blank">Shaolin and Wu Tang</a>” from 1985 to 1983:</p>
<figure>
  <a href="https://www.cs.cmu.edu/~pavlo/images/blog/020/ottertune-mvcc-example1.svg"><img decoding="async" src="https://www.cs.cmu.edu/~pavlo/images/blog/020/ottertune-mvcc-example1.svg"></a>
  <figcaption>When an UPDATE query changes a tuple in the table, PostgreSQL copies the original version of the tuple and then applies the change to the new version. In this example, there is no more space in Table Page #1, so PostgreSQL creates the new version in Table Page #2.</figcaption>
</figure>

<p>Now with two physical versions representing the same logical row, the DBMS needs to record the lineage of these versions so that it knows how to find them in the future. MVCC DBMSs achieve this by creating a <b>version chain</b> via a singly linked-list. The version chain only goes in one direction to reduce storage and maintenance overhead. This means that the DBMS has to decide what order to use: <i>newest-to-oldest</i> (N2O) order or <i>oldest-to-newest</i> (O2N). For the N2O order, each tuple version points to its previous version and the version chain’s head is always the latest version. For the O2N order, each tuple version points to its new version, and the head is the oldest tuple version. The O2N approach avoids the need for the DBMS to update indexes to point to a newer version of the tuple each time it’s modified. However, it may take longer for the DBMS to find the latest version during query processing, potentially traversing a long version chain. Most DBMSs, including Oracle and MySQL, implement N2O. But PostgreSQL stands alone in using O2N (except for Microsoft’s <a onclick="javascript:pageTracker._trackPageview('/outgoing/learn.microsoft.com');" href="https://learn.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/introduction-to-memory-optimized-tables?view=sql-server-ver16" target="_blank">In-Memory OLTP engine</a> for SQL Server).</p>
<p>The next issue is how PostgreSQL determines what to record for these version pointers. The header for each row in PostgreSQL contains a tuple id field ( <a onclick="javascript:pageTracker._trackPageview('/outgoing/www.postgresql.org');" href="https://www.postgresql.org/docs/current/storage-page-layout.html#STORAGE-TUPLE-LAYOUT" target="_blank">t_tcid</a>) of the next version (or its own tuple id if it is the latest version). Thus, as shown in this next example, when a query requests the latest version of a row, the DBMS traverses the index, lands on the oldest version, and then follows the pointer until it finds a version that it needs.</p>
<figure>
  <a href="https://www.cs.cmu.edu/~pavlo/images/blog/020/ottertune-mvcc-example3.svg"><img decoding="async" src="https://www.cs.cmu.edu/~pavlo/images/blog/020/ottertune-mvcc-example3.svg"> </a>
  <figcaption>The SELECT query traverses the index to find tuple with requested movie name. The index entry points to the oldest version of the tuple, which means PostgreSQL follows the version chain embedded in the original version to find the new version.</figcaption>
</figure>

<p>PostgreSQL developers realized early on that there are two problems with its MVCC scheme. First, making a new copy of an entire tuple every time it is updated is expensive. And second, traversing the entire version chain just to find the latest version (which is what most queries want) is wasteful. Of course there is also the problem of cleaning up old versions, but we’ll cover that below.</p>
<p>To avoid traversing the entire version chain, PostgreSQL adds an entry to a table’s indexes for each physical version of a row. That means if there are five physical versions of a logical row, there will be (at most) five entries for that tuple in the index! In the example below, we see that the <code>idx_name</code> index contains entries for each of the “Shaolin and Wu Tang” rows that are on separate pages. This enables direct access to the latest version of the tuple, without the need to traverse the long version chain.</p>
<figure>
  <a href="https://www.cs.cmu.edu/~pavlo/images/blog/020/ottertune-mvcc-example4.svg">
    <img decoding="async" src="https://www.cs.cmu.edu/~pavlo/images/blog/020/ottertune-mvcc-example4.svg">
    </a>
    <figcaption>In this example, the index contains multiple entries for the “Shaolin and Wu Tang” tuple (one for each version). Now PostgreSQL uses the index to find the latest version and then immediately retrieves it from Table Page #2 without having to traverse the version chain starting at Table Page #1.</figcaption>
</figure>

<p>PostgreSQL tries to avoid having to install multiple index entries and storing related versions over multiple pages by creating a new copy in the same disk page (block) as the old version to reduce disk I/O. This optimization is known as <a onclick="javascript:pageTracker._trackPageview('/outgoing/www.postgresql.org');" href="https://www.postgresql.org/docs/current/storage-hot.html" target="_blank">heap-only tuple (HOT)</a> updates. The DBMS uses the HOT approach if an update does not modify any columns referenced by a table’s indexes and the new version is stored on the same data page as the old version (if there is space in that page). Now in our example, after the update the index still points to the old version and queries retrieve the latest version by traversing the version chain. During normal operation, PostgreSQL further optimizes this process by removing old versions to prune the version chain.</p>
<h3>Version Vacuum</h3>
<p>We’ve established that PostgreSQL makes a copy of rows whenever an application updates them. The next question is how the system removes older versions (called “dead tuples”). The original version of PostgreSQL from the 1980s did not remove dead tuples. The idea was that keeping all the older versions allowed applications to execute “time-travel” queries to examine the database at a particular point in time (e.g., run a <code>SELECT</code> query on the state of the database as it existed at the end of last week). But never removing dead tuples means tables never shrink in size if the application deletes tuples. It also means long version chains for frequently updated tuples, which would slow down queries, except that PostgreSQL adds index entries that allow queries to quickly jump to the correct version instead of traversing the chain. But now, this means the indexes are larger, making them slower and adding additional memory pressure. Hopefully, you can understand now why all these issues are interconnected.</p>
<p>To overcome these problems, PostgreSQL uses a vacuum procedure to clean up dead tuples from tables. The vacuum performs a sequential scan on table pages modified since its last run and find expired versions. The DBMS considers a version “<b>expired</b>” if it is not visible to any active transaction. This means no current transaction is accessing that version, and future transactions will use the latest “<b>live</b>” version instead. Thus, removing the expired version and reclaiming the space for reuse is safe.</p>
<p>PostgreSQL automatically executes this vacuum procedure (autovacuum) at regular intervals based on its configuration settings. In addition to the global settings that affect the vacuum frequency for all tables, PostgreSQL provides the flexibility to configure autovacuum at the table level to fine-tune the process for specific tables. Users can also trigger the vacuum manually to optimize database performance via the <code>VACUUM</code> SQL command.</p>
<h2 id="why-postgresqls-mvcc-is-the-worst">Why PostgreSQL’s MVCC is the Worst</h2>
<p>We will be blunt: if someone is going to build a new MVCC DBMS today, they should <u> <b>not</b> </u> do it the way PostgreSQL does (e.g., append-only storage with autovacuum). In our <a onclick="javascript:pageTracker._trackPageview('/downloads/papers/2017/p781-wu.pdf');" href="https://db.cs.cmu.edu/papers/2017/p781-wu.pdf" target="_blank">2018 VLDB paper</a> (aka “ <a onclick="javascript:pageTracker._trackPageview('/outgoing/twitter.com');" href="https://twitter.com/andy_pavlo/status/902863242774634496" target="_blank">the best paper ever on MVCC</a>“), we did not find another DBMS doing MVCC the way PostgreSQL does it. Its design is a relic of the 1980s and before the proliferation of <a onclick="javascript:pageTracker._trackPageview('/outgoing/en.wikipedia.org');" href="https://en.wikipedia.org/wiki/Log-structured_merge-tree" target="_blank">log-structured</a> system patterns from the 1990s.</p>
<p>Let’s talk about four problems that arise with PostgreSQL’s MVCC. We will also talk about why other MVCC DBMSs like Oracle and MySQL avoid these problems.</p>
<h3>Problem #1: Version Copying</h3>
<p>With the append-only storage scheme in MVCC, if a query updates a tuple, the DBMS copies all its columns into the new version. This copying occurs no matter if the query updates a single or all of its columns. As you can imagine, append-only MVCC results in massive data duplication and increased storage requirements. This approach means that PostgreSQL requires more memory and disk storage to store a database than other DBMS, which means slower queries and higher cloud costs. Instead of copying an entire tuple for a new version, MySQL and Oracle store a compact delta between the new and current versions (think of it like a git diff). Using deltas means that if a query only updates a single column in a tuple for a table with 1000 columns, then the DBMS only stores a delta record with the change to that one column. On the other hand, PostgreSQL creates a new version with the one column that the query changed and the 999 other untouched columns. We will ignore TOAST attributes because PostgreSQL <a onclick="javascript:pageTracker._trackPageview('/outgoing/dba.stackexchange.com');" href="https://dba.stackexchange.com/a/308779" target="_blank">handles them differently</a>.</p>
<p>There was an attempt to modernize PostgreSQL’s version storage implementation. EnterpriseDB started the <a onclick="javascript:pageTracker._trackPageview('/outgoing/wiki.postgresql.org');" href="https://wiki.postgresql.org/wiki/Zheap" target="_blank">zheap project</a> in 2013 to replace the append-only storage engine to use delta versions. Unfortunately the <a onclick="javascript:pageTracker._trackPageview('/outgoing/www.cybertec-postgresql.com');" href="https://www.cybertec-postgresql.com/en/postgresql-zheap-current-status/" target="_blank">last official update was in 2021</a>, and to the best of our knowledge the effort has fizzled out.</p>
<h3>Problem #2: Table Bloat</h3>
<p>Expired versions in PostgreSQL (i.e., dead tuples) also occupy more space than delta versions. Although PostgreSQL’s autovacuum will eventually remove these dead tuples, write-heavy workloads can cause them to accumulate faster than the vacuum can catch up, resulting in continuous database growth. The DBMS has to load dead tuples into memory during query execution since the system intermingles dead tuples with live tuples in pages. Unfettered bloat slows query performance by causing the DBMS to incur more IOPS and consume more memory than necessary during table scans. Additionally, inaccurate optimizer statistics caused by dead tuples can lead to poor query plans.</p>
<p>Suppose our movies table has 10 million live and 40 million dead tuples, making 80% of the table obsolete data. Assume also that the table also has many more columns than what we are showing and that the average size of each tuple is 1KB. With this scenario, the live tuples occupy 10GB of storage space while the dead tuples occupy ~40GB of storage; the total size of the table is 50GB. When a query performs a full table scan on this table, PostgreSQL has to retrieve all 50GB from the disk and store it in memory, even if most of it is obsolete. Although Postgres has a <a onclick="javascript:pageTracker._trackPageview('/outgoing/madusudanan.com');" href="https://madusudanan.com/blog/understanding-postgres-caching-in-depth/#SeqScans" target="_blank">protection mechanism</a> to avoid polluting its buffer pool cache from sequential scans, it does not help prevent IO costs.</p>
<p>Even if you make sure that PostgreSQL’s autovacuum is running at regular intervals and able to keep up with your workload (which is not always easy to do, see below), the autovacuum cannot reclaim storage space. The autovacuum only removes dead tuples and relocates live tuples within each page, but it does not reclaim empty pages from the disk.</p>
<p>When the DBMS truncates the last page due to the absence of any tuple, other pages remain on disk. In our example above, even if PostgreSQL removed the 40GB of dead tuples from the movies table, it still retains the 50GB of allocated storage space from the operating system (or, in the case of RDS, from Amazon). To reclaim and return such unused space, one must use <a onclick="javascript:pageTracker._trackPageview('/outgoing/www.postgresql.org');" href="https://www.postgresql.org/docs/current/sql-vacuum.html#:~:text=VACUUM%20FULL%20rewrites%20the%20entire,while%20it%20is%20being%20processed." target="_blank"><code>VACUUM FULL</code></a> or the <a onclick="javascript:pageTracker._trackPageview('/outgoing/reorg.github.io');" href="https://reorg.github.io/pg_repack/" target="_blank">pg_repack</a> extension to rewrite the entire table to a new space with no wasted storage. Running either of these operations is not an easy endeavor that one should take without considering the performance implications for production databases; they are resource-intensive and time-consuming operations that will crush query performance. The following figure shows how <code>VACUUM</code> and <code>VACUUM FULL</code> work.</p>
<figure>
    <a href="https://www.cs.cmu.edu/~pavlo/images/blog/020/ottertune-mvcc-vacuum.svg"><img decoding="async" src="https://www.cs.cmu.edu/~pavlo/images/blog/020/ottertune-mvcc-vacuum.svg"> </a>
    <figcaption>With PostgreSQL’s regular VACUUM operation, the DBMS only removes dead tuples from each table page and reorganizes it to put all the live tuples at the end of the page. With VACUUM FULL, PostgreSQL removes the dead tuples from each page, coalesces and compacts the remaining live tuples to a new page (Table Page #3), and then deletes the unneeded pages (Table Pages #1 / #2).</figcaption>
</figure>

<h3>Problem #3: Secondary Index Maintenance</h3>
<p>A single update to a tuple requires PostgreSQL to update all the indexes for that table. Updating all the indexes is necessary because PostgreSQL uses the exact physical locations of a version in both primary and secondary indexes. Unless the DBMS stores the new version in the same page as the previous version (HOT update), the system does this for every update.</p>
<p>Returning to our <code>UPDATE</code> query example, PostgreSQL creates a new version by copying the original version into a new page just like before. But it also inserts entries pointing to the new version in table’s primary key index ( <code>movies_pkey</code>) and the two secondary indexes ( <code>idx_director</code>, <code>idx_name</code>).</p>
<figure>
  <a href="https://www.cs.cmu.edu/~pavlo/images/blog/020/ottertune-mvcc-example5.svg"><img decoding="async" src="https://www.cs.cmu.edu/~pavlo/images/blog/020/ottertune-mvcc-example5.svg"> </a>
  <figcaption>Example of PostgreSQL index maintenance operations with a non-HOT update. The DBMS creates the new version of the tuple in Table Page #2, and then inserts new entries that point to that version in all the table’s indexes.</figcaption>
</figure>

<p>The need for PostgreSQL to modify all of a table’s indexes for each update has several performance implications. Obviously, this makes update queries slower because the system has to do more work. The DBMS incurs additional I/O to traverse each index and insert the new entries. Accessing an index introduces lock/latch contention in both the index and the DBMS’s internal data structures (e.g., buffer pool’s page table). Again, PostgreSQL does this maintenance work for all a table’s indexes, even if queries are never going to use them (by the way, OtterTune <a onclick="javascript:pageTracker._trackPageview('/outgoing/docs.ottertune.com');" href="https://docs.ottertune.com/documentation/database-instance-dashboard-and-recommendations/recommendations/index-recommendations">automatically finds unused indexes in your database</a>). These extra reads and writes are problematic in DBMSs that charge users based on IOPS, like Amazon Aurora.</p>
<p>As described above, PostgreSQL avoids updating indexes each time if it can perform a HOT write where the new version is on the same page as the current version. Our analysis of OtterTune customers’ PostgreSQL databases shows that roughly 46% of updates use the HOT optimization on average. Although that’s an impressive number, it still means more than 50% of the updates are paying this penalty.</p>
<p>There are many examples of users struggling with this aspect of PostgreSQL’s MVCC implementation. The most famous testament of this is Uber’s 2016 blog article about why they <a onclick="javascript:pageTracker._trackPageview('/outgoing/www.uber.com');" href="https://www.uber.com/blog/postgres-to-mysql-migration/" target="_blank">switched from Postgres to MySQL</a>. Their write-heavy workload was experiencing significant performance problems on tables with many secondary indexes.</p>
<p>Oracle and MySQL do not have this problem in their MVCC implementation because their secondary indexes do not store the physical addresses of new versions. Instead, they store a logical identifier (e.g., tuple id, primary key) that the DBMS then uses to look up the current version’s physical address. Now this may make secondary index reads slower since the DBMS has to resolve a logical identifier, but these DBMS have other advantages in their MVCC implementation to reduce overhead.</p>


<h3>Problem #4: Vacuum Management</h3>
<p>PostgreSQL’s performance relies heavily on the effectiveness of the autovacuum to remove obsolete data and reclaim space (this is why OtterTune immediately checks the health status of the autovacuum when you first connect your database). It does not matter if you are running RDS, Aurora, or Aurora Serverless; all variants of PostgreSQL have the same autovacuum issues. But making sure that PostgreSQL’s autovacuum is running as best as possible is difficult due to its complexity. PostgreSQL’s default settings for tuning the autovacuum are not ideal for all tables, particularly for large ones. For example, the default setting for the configuration knob that controls what percentage of a table PostgreSQL has to update before the autovacuum kicks in (<a onclick="javascript:pageTracker._trackPageview('/outgoing/www.postgresql.org');" href="https://www.postgresql.org/docs/15/runtime-config-autovacuum.html#GUC-AUTOVACUUM-VACUUM-SCALE-FACTOR" target="_blank">autovacuum_vacuum_scale_factor</a>) is 20%. This threshold means that if a table has 100 million tuples, the DBMS does not trigger the autovacuum until queries update at least 20 million tuples. As such, PostgreSQL may unnecessarily keep around a lot of dead tuples in a table (thereby incurring IO and memory costs) for a long time.</p>
<p>Another problem with the autovacuum in PostgreSQL is that it may get blocked by long-running transactions, which can result in the accumulation of more dead tuples and stale statistics. Failing to clean expired versions in a timely manner leads to numerous performance problems, causing more long-running transactions that block the autovacuum process. It becomes a vicious cycle, requiring humans to intervene manually by killing long-running transactions. Consider the graph below that shows the number of dead tuples in an OtterTune customer’s database over two weeks:</p>
<figure>
  <a href="https://www.cs.cmu.edu/~pavlo/images/blog/020/ottertune-mvcc-deadtuples.svg"><img decoding="async" src="https://www.cs.cmu.edu/~pavlo/images/blog/020/ottertune-mvcc-deadtuples.svg"></a>
  <figcaption>The number of dead tuples over time in a PostgreSQL Amazon RDS database.</figcaption>
</figure>

<p>The sawtooth pattern in the chart shows that the autovacuum performs a major clean-up about once every day. For example, on February 14th, the DBMS cleaned up 3.2 million dead tuples. This graph is actually an example of an unhealthy PostgreSQL database. The chart clearly shows an upward trend in the number of dead tuples because the autovacuum cannot keep up.</p>
<p>At OtterTune, we see this problem often in our customers’ databases. One PostgreSQL RDS instance had a long-running query caused by stale statistics after bulk insertions. This query blocked the autovacuum from updating the statistics, resulting in more long-running queries. OtterTune’s automated health checks identified the problem, but the administrator still had to kill the query manually and run <a onclick="javascript:pageTracker._trackPageview('/outgoing/ottertune.com');" href="https://ottertune.com/blog/run-postgresql-analyze-to-fix-a-slowdow-in-db/">ANALYZE after bulk insertions</a>. The good news is that the long query’s execution time went from 52 minutes to just 34 seconds.</p>

<p>There are always hard design decisions one has to make when building a DBMS. And these decisions will cause any DBMS to perform differently on varying workloads. For Uber’s specific write-intensive workload, PostgreSQL’s index write amplification due to MVCC is why they switched to MySQL. But please don’t misunderstand our diatribe to mean that we don’t think you should ever use PostgreSQL. Although its MVCC implementation is the wrong way to do it, PostgreSQL is still our favorite DBMS. To love something is to be willing to work with its flaws (see Dan Savage’s <a onclick="javascript:pageTracker._trackPageview('/outgoing/youtu.be');" href="https://youtu.be/r1tCAXVsClw" target="_blank">“The Price of Admission”</a>).</p>
<p>So how does one work around PostgreSQL’s quirks? Well, you can spend an enormous amount of time and effort tuning it yourself. <a onclick="javascript:pageTracker._trackPageview('/outgoing/philbooth.me');" href="https://philbooth.me/blog/nine-ways-to-shoot-yourself-in-the-foot-with-postgresql" target="_blank">Good luck with that</a>.</p>
<p>We’ll cover more about what we can do in our next article.</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Internet Archive breached again through stolen access tokens (267 pts)]]></title>
            <link>https://www.bleepingcomputer.com/news/security/internet-archive-breached-again-through-stolen-access-tokens/</link>
            <guid>41895764</guid>
            <pubDate>Sun, 20 Oct 2024 15:00:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bleepingcomputer.com/news/security/internet-archive-breached-again-through-stolen-access-tokens/">https://www.bleepingcomputer.com/news/security/internet-archive-breached-again-through-stolen-access-tokens/</a>, See on <a href="https://news.ycombinator.com/item?id=41895764">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><img alt="The Internet Archive" height="900" src="https://www.bleepstatic.com/content/hl-images/2024/10/09/internet-archive.jpg" width="1600"></p>
<p>The Internet Archive was breached again, this time on their Zendesk email support platform after repeated warnings that threat actors stole exposed GitLab authentication tokens.</p>
<p>Since last night, BleepingComputer has received numerous messages from people who received replies to their old Internet Archive removal requests, warning that the organization has been breached as they did not correctly rotate their stolen authentication tokens.</p>
<p>"It's dispiriting to see that even after being made aware of the breach weeks ago, IA has still not done the due diligence of rotating many of the API keys that were exposed in their gitlab secrets," reads an email from the threat actor.</p>
<p>"As demonstrated by this message, this includes a Zendesk token with perms to access 800K+ support tickets sent to info@archive.org since 2018."</p>
<p>"Whether you were trying to ask a general question, or requesting the removal of your site from the Wayback Machine your data is now in the hands of some random guy. If not me, it'd be someone else."</p>
<div>
<figure><img alt="Internet Archive Zendesk emails sent by the threat actor" height="600" src="https://www.bleepstatic.com/images/news/security/attacks/i/internet-archive/gitlab-tokens/zendesk-emails.jpg" width="937"><figcaption><strong>Internet Archive Zendesk emails sent by the threat actor</strong><br><em>Source: BleepingComputer</em></figcaption></figure></div>
<p>The email headers in these emails also pass all DKIM, DMARC, and SPF authentication checks, proving they were sent by an authorized Zendesk server at&nbsp;192.161.151.10.</p>
<div>
<figure><img alt="Internet Archive Zendesk email headers" height="200" src="https://www.bleepstatic.com/images/news/security/attacks/i/internet-archive/gitlab-tokens/mail-headers.jpg" width="909"><figcaption><strong>Internet Archive Zendesk email headers</strong><br><em>Source: BleepingComputer</em></figcaption></figure></div>
<p>After publishing this story, BleepingComputer was told by a recipient of these emails that they had to upload personal identification when requesting a removal of a page from the Wayback Machine.</p>
<p>The threat actor may now also have access to these attachments depending on the API access they had to Zendesk and if they used it to <a href="https://developer.zendesk.com/api-reference/ticketing/tickets/ticket-attachments/#show-attachment" target="_blank" rel="nofollow noopener">download support tickets</a>.</p>
<p>These emails come after BleepingComputer repeatedly tried to warn the Internet Archive that their source code was stolen through a&nbsp;GitLab authentication token that was exposed online for almost two years.</p>
<h2>Exposed GitLab authentication tokens</h2>
<p>On October 9th, BleepingComputer reported that Internet&nbsp;Archive was <a href="https://www.bleepingcomputer.com/news/security/internet-archive-hacked-data-breach-impacts-31-million-users/" target="_blank">hit by two different attacks at once last week</a>—a data breach where the site's user data for 33 million users was stolen and a DDoS attack by a pro-Palestinian group named SN_BlackMeta.</p>
<p>While both attacks occurred over the same period, they were conducted by different threat actors. However, many outlets incorrectly reported that SN_BlackMeta was behind the breach rather than just the DDoS attacks.</p>
<div>
<figure><img alt="JavaScript alert on Internet Archive warning about the breach" height="300" width="665" data-src="https://www.bleepstatic.com/images/news/security/d/data-breaches/w/wayback-machine/js-alert.jpg" src="https://www.bleepstatic.com/images/news/security/d/data-breaches/w/wayback-machine/js-alert.jpg"><figcaption><strong>JavaScript alert on Internet Archive warning about the breach</strong><br><em>Source: BleepingComputer</em></figcaption></figure></div>
<p>This misreporting frustrated the threat actor behind the actual data breach, who contacted BleepingComputer through an intermediary to claim credit for the attack and explain how they breached the Internet Archive.</p>
<p>The threat actor told BleepingComputer that the initial breach of Internet Archive started with them finding an exposed GitLab configuration file on one of the organization's development servers, <em>services-hls.dev.archive.org</em>.</p>
<p>BleepingComputer was able to confirm that this token has been exposed since at least December 2022, with it rotating multiple times since then.</p>
<div>
<figure><img alt="Exposed Internet Archive GitLab authentication token" height="600" width="860" data-src="https://www.bleepstatic.com/images/news/security/attacks/i/internet-archive/gitlab-tokens/gitlab-token.jpg" src="https://www.bleepstatic.com/images/news/security/attacks/i/internet-archive/gitlab-tokens/gitlab-token.jpg"><figcaption><strong>Exposed Internet Archive GitLab authentication token</strong><br><em>Source: BleepingComputer</em></figcaption></figure></div>
<p>The threat actor says this GitLab configuration file contained an authentication token allowing them to download the Internet Archive source code.</p>
<p>The hacker say that this source code contained additional credentials and authentication tokens, including the credentials to Internet Archive's database management system. This allowed the threat actor to download the organization's user database, further source code, and modify the site.</p>
<p>The threat actor claimed to have stolen 7TB of data from the Internet Archive but would not share any samples as proof.</p>
<p>However, now we know that the stolen data also included the API access tokens for Internet Archive's Zendesk support system.</p>
<p>BleepingComputer attempted contact the Internet Archive numerous times, as recently as on Friday, offering to share what we knew about how the breach occurred and why it was done, but we never received a response.</p>
<h2>Breached for cyber street cred</h2>
<p>After the Internet Archive was breached, conspiracy theories abounded about why they were attacked.</p>
<p>Some said&nbsp;Israel did it,&nbsp;the United States government, or corporations in their ongoing battle with the Internet Archive over copyright infringement.</p>
<p>However, the Internet Archive was not breached for political or monetary reasons but simply because the threat actor could.</p>
<p>There is a large community of people who traffic in stolen data, whether they do it for money by extorting the victim, selling it to other threat actors, or simply because they are collectors of data breaches.</p>
<p>This data is often released for free to gain <em>cyber street cred</em><strong>,&nbsp;</strong>increasing their reputation among other threat actors in this community&nbsp;as they all compete for who has the most significant and most publicized attacks.</p>
<p>In the case of the Internet Archive, there was no money to be made by trying to extort the organization. However, as a well-known and extremely popular website, it definitely boosted a person's reputation amongst this community.</p>
<p>While no one has publicly claimed this breach, BleepingComputer was told it was done&nbsp;while the threat actor was in a group chat with others, with many receiving some of the stolen data.</p>
<p>This database is now likely being traded amongst other people in the data breach community, and we will likely see it leaked for free in the future on hacking forums like Breached.</p>
<p><em>Update 10/20/24: Added information about how some people had to upload personal IDs when requesting removal from Internet Archive.</em></p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Syncthing Android App Discontinued (276 pts)]]></title>
            <link>https://old.reddit.com/r/Syncthing/comments/1g7zpvm/syncthing_android_app_discontinued/</link>
            <guid>41895718</guid>
            <pubDate>Sun, 20 Oct 2024 14:51:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://old.reddit.com/r/Syncthing/comments/1g7zpvm/syncthing_android_app_discontinued/">https://old.reddit.com/r/Syncthing/comments/1g7zpvm/syncthing_android_app_discontinued/</a>, See on <a href="https://news.ycombinator.com/item?id=41895718">Hacker News</a></p>
Couldn't get https://old.reddit.com/r/Syncthing/comments/1g7zpvm/syncthing_android_app_discontinued/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Energy-based model explains how chronic stress transforms into disease over time (120 pts)]]></title>
            <link>https://www.sciencedirect.com/science/article/pii/S030645302200292X</link>
            <guid>41895609</guid>
            <pubDate>Sun, 20 Oct 2024 14:32:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sciencedirect.com/science/article/pii/S030645302200292X">https://www.sciencedirect.com/science/article/pii/S030645302200292X</a>, See on <a href="https://news.ycombinator.com/item?id=41895609">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="root" data-aa-name="root"><header id="gh-cnt"></header><div id="mathjax-container" role="main"><div role="region" aria-label="Download options and search"><ul aria-label="PDF Options"><li><a target="_blank" aria-label="View PDF. Opens in a new window."><svg focusable="false" viewBox="0 0 35 32" height="20"><path d="M7 .362h17.875l6.763 6.1V31.64H6.948V16z" stroke="#000" stroke-width=".703" fill="#fff"></path><path d="M.167 2.592H22.39V9.72H.166z" fill="#da0000"></path><path fill="#fff9f9" d="M5.97 3.638h1.62c1.053 0 1.483.677 1.488 1.564.008.96-.6 1.564-1.492 1.564h-.644v1.66h-.977V3.64m.977.897v1.34h.542c.27 0 .596-.068.596-.673-.002-.6-.32-.667-.596-.667h-.542m3.8.036v2.92h.35c.933 0 1.223-.448 1.228-1.462.008-1.06-.316-1.45-1.23-1.45h-.347m-.977-.94h1.03c1.68 0 2.523.586 2.534 2.39.01 1.688-.607 2.4-2.534 2.4h-1.03V3.64m4.305 0h2.63v.934h-1.657v.894H16.6V6.4h-1.56v2.026h-.97V3.638"></path><path d="M19.462 13.46c.348 4.274-6.59 16.72-8.508 15.792-1.82-.85 1.53-3.317 2.92-4.366-2.864.894-5.394 3.252-3.837 3.93 2.113.895 7.048-9.25 9.41-15.394zM14.32 24.874c4.767-1.526 14.735-2.974 15.152-1.407.824-3.157-13.72-.37-15.153 1.407zm5.28-5.043c2.31 3.237 9.816 7.498 9.788 3.82-.306 2.046-6.66-1.097-8.925-4.164-4.087-5.534-2.39-8.772-1.682-8.732.917.047 1.074 1.307.67 2.442-.173-1.406-.58-2.44-1.224-2.415-1.835.067-1.905 4.46 1.37 9.065z" fill="#f91d0a"></path></svg><span><span><span>View&nbsp;<strong>PDF</strong></span></span></span></a></li><li></li></ul></div><div><article lang="en"><div id="publication"><p><a href="https://www.sciencedirect.com/journal/psychoneuroendocrinology" title="Go to Psychoneuroendocrinology on ScienceDirect"><span><span><img src="https://sdfestaticassets-eu-west-1.sciencedirectassets.com/prod/17220c80f4e09945173d394db9fa2f4c6a17b614/image/elsevier-non-solus.png" alt="Elsevier"></span></span></a></p><p><a href="https://www.sciencedirect.com/journal/psychoneuroendocrinology/vol/146/suppl/C"><span><span><img src="https://ars.els-cdn.com/content/image/1-s2.0-S0306453022X00103-cov150h.gif" alt="Psychoneuroendocrinology"></span></span></a></p></div><div><p><span>Under a Creative Commons </span><a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noreferrer noopener"><span><span>license</span><svg focusable="false" viewBox="0 0 8 8" height="20" aria-label="Opens in new window"><path d="M1.12949 2.1072V1H7V6.85795H5.89111V2.90281L0.784057 8L0 7.21635L5.11902 2.1072H1.12949Z"></path></svg></span></a></p><p><span></span>open access</p></div><div id="abstracts"><div id="ab0015"><h2>Highlights</h2><div id="abs0015"><ul><li><span>•</span><span><p>Allostasis and allostatic load cost energy</p></span></li><li><span>•</span><span><p>The organism’s energy consumption capacity is biologically limited</p></span></li><li><span>•</span><span><p>The transition from allostasis to allostatic load is defined by an energetic tradeoff where allostasis and stress-related energy costs compete with growth, maintenance, and repair</p></span></li><li><span>•</span><span><p>The energetic model of allostatic load (EMAL) makes testable predictions requiring further research</p></span></li></ul></div></div><div id="ab0010"><h2>Abstract</h2><div id="abs0010"><p>Chronic psychosocial stress increases disease risk and mortality, but the underlying mechanisms remain largely unclear. Here we outline an energy-based model for the transduction of chronic stress into disease over time. The energetic model of allostatic load (EMAL) emphasizes the energetic cost of allostasis and allostatic load, where the “load” is the additional energetic burden required to support allostasis and stress-induced energy needs. Living organisms have a limited capacity to consume energy. Overconsumption of energy by allostatic brain-body processes leads to <em>hypermetabolism</em>, defined as excess energy expenditure above the organism’s optimum. In turn, hypermetabolism accelerates physiological decline in cells, laboratory animals, and humans, and may drive biological aging. Therefore, we propose that the transition from adaptive allostasis to maladaptive allostatic states, allostatic load, and allostatic overload arises when the added energetic cost of stress competes with longevity-promoting growth, maintenance, and repair. Mechanistically, the energetic restriction of growth, maintenance and repair processes leads to the progressive wear-and-tear of molecular and organ systems. The proposed model makes testable predictions around the physiological, cellular, and sub-cellular energetic mechanisms that transduce chronic stress into disease risk and mortality. We also highlight new avenues to quantify allostatic load and its link to health across the lifespan, via the integration of systemic and cellular energy expenditure measurements together with classic allostatic load biomarkers.</p></div></div></div><ul id="issue-navigation"><li></li><li></li></ul><div id="keys0005"><h2>Keywords</h2><p><span>Allostatic load</span></p><p><span>Energy</span></p><p><span>Hypermetabolism</span></p><p><span>Coping resources</span></p><p><span>Energetic model of allostatic load (EMAL)</span></p><p><span>Allostasis and stress-induced energy expenditure (ASEE)</span></p><p><span>Brain</span></p><p><span>Mitochondria</span></p></div><section aria-label="Cited by" id="section-cited-by"><header id="citing-articles-header"><h2>Cited by (0)</h2></header></section><p><span>© 2022 The Author(s). Published by Elsevier Ltd.</span></p></article></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to do distributed locking (2016) (147 pts)]]></title>
            <link>https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html</link>
            <guid>41894451</guid>
            <pubDate>Sun, 20 Oct 2024 10:38:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html">https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html</a>, See on <a href="https://news.ycombinator.com/item?id=41894451">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
                

                
                <p>Published by Martin Kleppmann on 08 Feb 2016.</p>
                

                <p>As part of the research for <a href="http://dataintensive.net/">my book</a>, I came across an algorithm called <a href="http://redis.io/topics/distlock">Redlock</a> on the
<a href="http://redis.io/">Redis</a> website. The algorithm claims to implement fault-tolerant distributed locks (or rather,
<a href="https://pdfs.semanticscholar.org/a25e/ee836dbd2a5ae680f835309a484c9f39ae4e.pdf" title="Cary G Gray and David R Cheriton. Leases: An Efficient Fault-Tolerant Mechanism for Distributed File Cache Consistency. SOSP 1989">leases</a>&nbsp;[1]) on top of Redis, and the page asks for feedback from people who are into
distributed systems. The algorithm instinctively set off some alarm bells in the back of my mind, so
I spent a bit of time thinking about it and writing up these notes.</p>

<p>Since there are already <a href="http://redis.io/topics/distlock">over 10 independent implementations of Redlock</a> and we don’t know
who is already relying on this algorithm, I thought it would be worth sharing my notes publicly.
I won’t go into other aspects of Redis, some of which have already been critiqued
<a href="https://aphyr.com/tags/Redis">elsewhere</a>.</p>

<p>Before I go into the details of Redlock, let me say that I quite like Redis, and I have successfully
used it in production in the past. I think it’s a good fit in situations where you want to share
some transient, approximate, fast-changing data between servers, and where it’s not a big deal if
you occasionally lose that data for whatever reason. For example, a good use case is maintaining
request counters per IP address (for rate limiting purposes) and sets of distinct IP addresses per
user ID (for abuse detection).</p>

<p>However, Redis has been gradually making inroads into areas of data management where there are
stronger consistency and durability expectations – which worries me, because this is not what Redis
is designed for. Arguably, distributed locking is one of those areas. Let’s examine it in some more
detail.</p>

<h2 id="what-are-you-using-that-lock-for">What are you using that lock for?</h2>

<p>The purpose of a lock is to ensure that among several nodes that might try to do the same piece of
work, only one actually does it (at least only one at a time). That work might be to write some data
to a shared storage system, to perform some computation, to call some external API, or suchlike. At
a high level, there are two reasons why you might want a lock in a distributed application:
<a href="https://research.google.com/archive/chubby.html" title="Mike Burrows. The Chubby lock service for loosely-coupled distributed systems. OSDI 2006">for efficiency or for correctness</a>&nbsp;[2]. To distinguish these cases, you can ask what
would happen if the lock failed:</p>

<ul>
  <li><strong>Efficiency:</strong> Taking a lock saves you from unnecessarily doing the same work twice (e.g. some
expensive computation). If the lock fails and two nodes end up doing the same piece of work, the
result is a minor increase in cost (you end up paying 5 cents more to AWS than you otherwise would
have) or a minor inconvenience (e.g. a user ends up getting the same email notification twice).</li>
  <li><strong>Correctness:</strong> Taking a lock prevents concurrent processes from stepping on each others’ toes
and messing up the state of your system. If the lock fails and two nodes concurrently work on the
same piece of data, the result is a corrupted file, data loss, permanent inconsistency, the wrong
dose of a drug administered to a patient, or some other serious problem.</li>
</ul>

<p>Both are valid cases for wanting a lock, but you need to be very clear about which one of the two
you are dealing with.</p>

<p>I will argue that if you are using locks merely for efficiency purposes, it is unnecessary to incur
the cost and complexity of Redlock, running 5 Redis servers and checking for a majority to acquire
your lock. You are better off just using a single Redis instance, perhaps with asynchronous
replication to a secondary instance in case the primary crashes.</p>

<p>If you use a single Redis instance, of course you will drop some locks if the power suddenly goes
out on your Redis node, or something else goes wrong. But if you’re only using the locks as an
efficiency optimization, and the crashes don’t happen too often, that’s no big deal. This “no big
deal” scenario is where Redis shines. At least if you’re relying on a single Redis instance, it is
clear to everyone who looks at the system that the locks are approximate, and only to be used for
non-critical purposes.</p>

<p>On the other hand, the Redlock algorithm, with its 5 replicas and majority voting, looks at first
glance as though it is suitable for situations in which your locking is important for <em>correctness</em>.
I will argue in the following sections that it is <em>not</em> suitable for that purpose. For the rest of
this article we will assume that your locks are important for correctness, and that it is a serious
bug if two different nodes concurrently believe that they are holding the same lock.</p>

<h2 id="protecting-a-resource-with-a-lock">Protecting a resource with a lock</h2>

<p>Let’s leave the particulars of Redlock aside for a moment, and discuss how a distributed lock is
used in general (independent of the particular locking algorithm used). It’s important to remember
that a lock in a distributed system is not like a mutex in a multi-threaded application. It’s a more
complicated beast, due to the problem that different nodes and the network can all fail
independently in various ways.</p>

<p>For example, say you have an application in which a client needs to update a file in shared storage
(e.g. HDFS or S3). A client first acquires the lock, then reads the file, makes some changes, writes
the modified file back, and finally releases the lock. The lock prevents two clients from performing
this read-modify-write cycle concurrently, which would result in lost updates. The code might look
something like this:</p>

<figure><pre><code data-lang="js"><span>// THIS CODE IS BROKEN</span>
<span>function</span> <span>writeData</span><span>(</span><span>filename</span><span>,</span> <span>data</span><span>)</span> <span>{</span>
    <span>var</span> <span>lock</span> <span>=</span> <span>lockService</span><span>.</span><span>acquireLock</span><span>(</span><span>filename</span><span>);</span>
    <span>if</span> <span>(</span><span>!</span><span>lock</span><span>)</span> <span>{</span>
        <span>throw</span> <span>'</span><span>Failed to acquire lock</span><span>'</span><span>;</span>
    <span>}</span>

    <span>try</span> <span>{</span>
        <span>var</span> <span>file</span> <span>=</span> <span>storage</span><span>.</span><span>readFile</span><span>(</span><span>filename</span><span>);</span>
        <span>var</span> <span>updated</span> <span>=</span> <span>updateContents</span><span>(</span><span>file</span><span>,</span> <span>data</span><span>);</span>
        <span>storage</span><span>.</span><span>writeFile</span><span>(</span><span>filename</span><span>,</span> <span>updated</span><span>);</span>
    <span>}</span> <span>finally</span> <span>{</span>
        <span>lock</span><span>.</span><span>release</span><span>();</span>
    <span>}</span>
<span>}</span></code></pre></figure>

<p>Unfortunately, even if you have a perfect lock service, the code above is broken. The following
diagram shows how you can end up with corrupted data:</p>

<p><img src="https://martin.kleppmann.com/2016/02/unsafe-lock.png" width="550" height="200" alt="Unsafe access to a resource protected by a distributed lock"></p>

<p>In this example, the client that acquired the lock is paused for an extended period of time while
holding the lock – for example because the garbage collector (GC) kicked in. The lock has a timeout
(i.e. it is a lease), which is always a good idea (otherwise a crashed client could end up holding
a lock forever and never releasing it). However, if the GC pause lasts longer than the lease expiry
period, and the client doesn’t realise that it has expired, it may go ahead and make some unsafe
change.</p>

<p>This bug is not theoretical: HBase used to <a href="http://www.slideshare.net/enissoz/hbase-and-hdfs-understanding-filesystem-usage" title="Enis Söztutar. HBase and HDFS: Understanding filesystem usage in HBase. HBaseCon 2013">have this problem</a>&nbsp;[3,4]. Normally,
GC pauses are quite short, but “stop-the-world” GC pauses have sometimes been known to last for
<a href="https://blog.cloudera.com/blog/2011/02/avoiding-full-gcs-in-hbase-with-memstore-local-allocation-buffers-part-1/" title="Todd Lipcon. Avoiding Full GCs in Apache HBase with MemStore-Local Allocation Buffers: Part 1. 2011">several minutes</a>&nbsp;[5] – certainly long enough for a lease to expire. Even so-called
“concurrent” garbage collectors like the HotSpot JVM’s CMS cannot fully run in parallel with the
application code – even they <a href="http://mechanical-sympathy.blogspot.co.uk/2013/07/java-garbage-collection-distilled.html" title="Martin Thompson. Java Garbage Collection Distilled. 2013">need to stop the world</a> from time to time&nbsp;[6].</p>

<p>You cannot fix this problem by inserting a check on the lock expiry just before writing back to
storage. Remember that GC can pause a running thread at <em>any point</em>, including the point that is
maximally inconvenient for you (between the last check and the write operation).</p>

<p>And if you’re feeling smug because your programming language runtime doesn’t have long GC pauses,
there are many other reasons why your process might get paused. Maybe your process tried to read an
address that is not yet loaded into memory, so it gets a page fault and is paused until the page is
loaded from disk. Maybe your disk is actually EBS, and so reading a variable unwittingly turned into
a synchronous network request over Amazon’s congested network. Maybe there are many other processes
contending for CPU, and you hit a <a href="https://twitter.com/aphyr/status/682077908953792512">black node in your scheduler tree</a>. Maybe someone
accidentally sent SIGSTOP to the process. Whatever. Your processes will get paused.</p>

<p>If you still don’t believe me about process pauses, then consider instead that the file-writing
request may get delayed in the network before reaching the storage service. Packet networks such as
Ethernet and IP may delay packets <em>arbitrarily</em>, and <a href="https://queue.acm.org/detail.cfm?id=2655736" title="P Bailis and K Kingsbury. The Network is Reliable. ACM Queue 12(7), 2014.">they do</a>&nbsp;[7]: in a famous
<a href="https://github.com/blog/1364-downtime-last-saturday" title="Mark Imbriaco. Downtime last Saturday. 2012">incident at GitHub</a>, packets were delayed in the network for approximately 90
seconds&nbsp;[8]. This means that an application process may send a write request, and it may reach
the storage server a minute later when the lease has already expired.</p>

<p>Even in well-managed networks, this kind of thing can happen. You simply cannot make any assumptions
about timing, which is why the code above is fundamentally unsafe, no matter what lock service you
use.</p>

<h2 id="making-the-lock-safe-with-fencing">Making the lock safe with fencing</h2>

<p>The fix for this problem is actually pretty simple: you need to include a <em>fencing token</em> with every
write request to the storage service. In this context, a fencing token is simply a number that
increases (e.g. incremented by the lock service) every time a client acquires the lock. This is
illustrated in the following diagram:</p>

<p><img src="https://martin.kleppmann.com/2016/02/fencing-tokens.png" width="550" height="200" alt="Using fencing tokens to make resource access safe"></p>

<p>Client 1 acquires the lease and gets a token of 33, but then it goes into a long pause and the lease
expires. Client 2 acquires the lease, gets a token of 34 (the number always increases), and then
sends its write to the storage service, including the token of 34. Later, client 1 comes back to
life and sends its write to the storage service, including its token value 33. However, the storage
server remembers that it has already processed a write with a higher token number (34), and so it
rejects the request with token 33.</p>

<p>Note this requires the storage server to take an active role in checking tokens, and rejecting any
writes on which the token has gone backwards. But this is not particularly hard, once you know the
trick. And provided that the lock service generates strictly monotonically increasing tokens, this
makes the lock safe. For example, if you are using ZooKeeper as lock service, you can use the <code>zxid</code>
or the znode version number as fencing token, and you’re in good shape&nbsp;[3].</p>

<p>However, this leads us to the first big problem with Redlock: <em>it does not have any facility for
generating fencing tokens</em>. The algorithm does not produce any number that is guaranteed to increase
every time a client acquires a lock. This means that even if the algorithm were otherwise perfect,
it would not be safe to use, because you cannot prevent the race condition between clients in the
case where one client is paused or its packets are delayed.</p>

<p>And it’s not obvious to me how one would change the Redlock algorithm to start generating fencing
tokens. The unique random value it uses does not provide the required monotonicity. Simply keeping
a counter on one Redis node would not be sufficient, because that node may fail. Keeping counters on
several nodes would mean they would go out of sync. It’s likely that you would need a consensus
algorithm just to generate the fencing tokens. (If only <a href="https://twitter.com/lindsey/status/575006945213485056">incrementing a counter</a> was
simple.)</p>

<h2 id="using-time-to-solve-consensus">Using time to solve consensus</h2>

<p>The fact that Redlock fails to generate fencing tokens should already be sufficient reason not to
use it in situations where correctness depends on the lock. But there are some further problems that
are worth discussing.</p>

<p>In the academic literature, the most practical system model for this kind of algorithm is the
<a href="http://courses.csail.mit.edu/6.852/08/papers/CT96-JACM.pdf" title="TD Chandra and S Toueg. Unreliable Failure Detectors for Reliable Distributed Systems. JACM 43(2):225–267, 1996">asynchronous model with unreliable failure detectors</a>&nbsp;[9]. In plain English,
this means that the algorithms make no assumptions about timing: processes may pause for arbitrary
lengths of time, packets may be arbitrarily delayed in the network, and clocks may be arbitrarily
wrong – and the algorithm is nevertheless expected to do the right thing. Given what we discussed
above, these are very reasonable assumptions.</p>

<p>The only purpose for which algorithms may use clocks is to generate timeouts, to avoid waiting
forever if a node is down. But timeouts do not have to be accurate: just because a request times
out, that doesn’t mean that the other node is definitely down – it could just as well be that there
is a large delay in the network, or that your local clock is wrong. When used as a failure detector,
timeouts are just a guess that something is wrong. (If they could, distributed algorithms would do
without clocks entirely, but then <a href="http://www.cs.princeton.edu/courses/archive/fall07/cos518/papers/flp.pdf" title="MJ Fischer, N Lynch, and MS Paterson. Impossibility of Distributed Consensus with One Faulty Process. JACM 32(2):374–382, 1985">consensus becomes impossible</a>&nbsp;[10]. Acquiring a lock is
like a compare-and-set operation, which <a href="https://cs.brown.edu/~mph/Herlihy91/p124-herlihy.pdf" title="Maurice Herlihy. Wait-Free Synchronization. TOPLAS 13(1):124–149, 1991">requires consensus</a>&nbsp;[11].)</p>

<p>Note that Redis <a href="https://github.com/antirez/redis/blob/edd4d555df57dc84265fdfb4ef59a4678832f6da/src/server.c#L390-L404">uses <code>gettimeofday</code></a>, not a <a href="http://linux.die.net/man/2/clock_gettime">monotonic clock</a>, to
determine the <a href="https://github.com/antirez/redis/blob/f0b168e8944af41c4161249040f01ece227cfc0c/src/db.c#L933-L959">expiry of keys</a>. The man page for <code>gettimeofday</code> <a href="http://linux.die.net/man/2/gettimeofday">explicitly
says</a> that the time it returns is subject to discontinuous jumps in system time –
that is, it might suddenly jump forwards by a few minutes, or even jump back in time (e.g. if the
clock is <a href="https://www.eecis.udel.edu/~mills/ntp/html/clock.html">stepped by NTP</a> because it differs from a NTP server by too much, or if the
clock is manually adjusted by an administrator). Thus, if the system clock is doing weird things, it
could easily happen that the expiry of a key in Redis is much faster or much slower than expected.</p>

<p>For algorithms in the asynchronous model this is not a big problem: these algorithms generally
ensure that their <em>safety</em> properties always hold, <a href="http://www.net.t-labs.tu-berlin.de/~petr/ADC-07/papers/DLS88.pdf" title="C Dwork, N Lynch, and L Stockmeyer. Consensus in the Presence of Partial Synchrony. JACM 35(2):288–323, 1988">without making any timing
assumptions</a>&nbsp;[12]. Only <em>liveness</em> properties depend on timeouts or some other failure
detector. In plain English, this means that even if the timings in the system are all over the place
(processes pausing, networks delaying, clocks jumping forwards and backwards), the performance of an
algorithm might go to hell, but the algorithm will never make an incorrect decision.</p>

<p>However, Redlock is not like this. Its safety depends on a lot of timing assumptions: it assumes
that all Redis nodes hold keys for approximately the right length of time before expiring; that the
network delay is small compared to the expiry duration; and that process pauses are much shorter
than the expiry duration.</p>

<h2 id="breaking-redlock-with-bad-timings">Breaking Redlock with bad timings</h2>

<p>Let’s look at some examples to demonstrate Redlock’s reliance on timing assumptions. Say the system
has five Redis nodes (A, B, C, D and E), and two clients (1 and 2). What happens if a clock on one
of the Redis nodes jumps forward?</p>

<ol>
  <li>Client 1 acquires lock on nodes A, B, C. Due to a network issue, D and E cannot be reached.</li>
  <li>The clock on node C jumps forward, causing the lock to expire.</li>
  <li>Client 2 acquires lock on nodes C, D, E. Due to a network issue, A and B cannot be reached.</li>
  <li>Clients 1 and 2 now both believe they hold the lock.</li>
</ol>

<p>A similar issue could happen if C crashes before persisting the lock to disk, and immediately
restarts. For this reason, the Redlock documentation <a href="http://redis.io/topics/distlock#performance-crash-recovery-and-fsync">recommends delaying restarts</a> of
crashed nodes for at least the time-to-live of the longest-lived lock. But this restart delay again
relies on a reasonably accurate measurement of time, and would fail if the clock jumps.</p>

<p>Okay, so maybe you think that a clock jump is unrealistic, because you’re very confident in having
correctly configured NTP to only ever slew the clock. In that case, let’s look at an example of how
a process pause may cause the algorithm to fail:</p>

<ol>
  <li>Client 1 requests lock on nodes A, B, C, D, E.</li>
  <li>While the responses to client 1 are in flight, client 1 goes into stop-the-world GC.</li>
  <li>Locks expire on all Redis nodes.</li>
  <li>Client 2 acquires lock on nodes A, B, C, D, E.</li>
  <li>Client 1 finishes GC, and receives the responses from Redis nodes indicating that it successfully
acquired the lock (they were held in client 1’s kernel network buffers while the process was
paused).</li>
  <li>Clients 1 and 2 now both believe they hold the lock.</li>
</ol>

<p>Note that even though Redis is written in C, and thus doesn’t have GC, that doesn’t help us here:
any system in which the <em>clients</em> may experience a GC pause has this problem. You can only make this
safe by preventing client 1 from performing any operations under the lock after client 2 has
acquired the lock, for example using the fencing approach above.</p>

<p>A long network delay can produce the same effect as the process pause. It perhaps depends on your
TCP user timeout – if you make the timeout significantly shorter than the Redis TTL, perhaps the
delayed network packets would be ignored, but we’d have to look in detail at the TCP implementation
to be sure. Also, with the timeout we’re back down to accuracy of time measurement again!</p>

<h2 id="the-synchrony-assumptions-of-redlock">The synchrony assumptions of Redlock</h2>

<p>These examples show that Redlock works correctly only if you assume a <em>synchronous</em> system model –
that is, a system with the following properties:</p>

<ul>
  <li>bounded network delay (you can guarantee that packets always arrive within some guaranteed maximum
delay),</li>
  <li>bounded process pauses (in other words, hard real-time constraints, which you typically only
find in car airbag systems and suchlike), and</li>
  <li>bounded clock error (cross your fingers that you don’t get your time from a <a href="http://xenia.media.mit.edu/~nelson/research/ntp-survey99/">bad NTP
server</a>).</li>
</ul>

<p>Note that a synchronous model does not mean exactly synchronised clocks: it means you are assuming
a <a href="http://www.net.t-labs.tu-berlin.de/~petr/ADC-07/papers/DLS88.pdf" title="C Dwork, N Lynch, and L Stockmeyer. Consensus in the Presence of Partial Synchrony. JACM 35(2):288–323, 1988"><em>known, fixed upper bound</em></a> on network delay, pauses and clock drift&nbsp;[12]. Redlock
assumes that delays, pauses and drift are all small relative to the time-to-live of a lock; if the
timing issues become as large as the time-to-live, the algorithm fails.</p>

<p>In a reasonably well-behaved datacenter environment, the timing assumptions will be satisfied <em>most</em>
of the time – this is known as a <a href="http://www.net.t-labs.tu-berlin.de/~petr/ADC-07/papers/DLS88.pdf" title="C Dwork, N Lynch, and L Stockmeyer. Consensus in the Presence of Partial Synchrony. JACM 35(2):288–323, 1988">partially synchronous system</a>&nbsp;[12]. But is that good
enough? As soon as those timing assumptions are broken, Redlock may violate its safety properties,
e.g. granting a lease to one client before another has expired. If you’re depending on your lock for
correctness, “most of the time” is not enough – you need it to <em>always</em> be correct.</p>

<p>There is plenty of evidence that it is not safe to assume a synchronous system model for most
practical system environments&nbsp;[7,8]. Keep reminding yourself of the GitHub incident with the
<a href="https://github.com/blog/1364-downtime-last-saturday" title="Mark Imbriaco. Downtime last Saturday. 2012">90-second packet delay</a>. It is unlikely that Redlock would survive a <a href="https://aphyr.com/tags/jepsen">Jepsen</a> test.</p>

<p>On the other hand, a consensus algorithm designed for a partially synchronous system model (or
asynchronous model with failure detector) actually has a chance of working. Raft, Viewstamped
Replication, Zab and Paxos all fall in this category. Such an algorithm must let go of all timing
assumptions. That’s hard: it’s so tempting to assume networks, processes and clocks are more
reliable than they really are. But in the messy reality of distributed systems, you have to be very
careful with your assumptions.</p>

<h2 id="conclusion">Conclusion</h2>

<p>I think the Redlock algorithm is a poor choice because it is “neither fish nor fowl”: it is
unnecessarily heavyweight and expensive for efficiency-optimization locks, but it is not
sufficiently safe for situations in which correctness depends on the lock.</p>

<p>In particular, the algorithm makes dangerous assumptions about timing and system clocks (essentially
assuming a synchronous system with bounded network delay and bounded execution time for operations),
and it violates safety properties if those assumptions are not met. Moreover, it lacks a facility
for generating fencing tokens (which protect a system against long delays in the network or in
paused processes).</p>

<p>If you need locks only on a best-effort basis (as an efficiency optimization, not for correctness),
I would recommend sticking with the <a href="http://redis.io/commands/set">straightforward single-node locking algorithm</a> for
Redis (conditional set-if-not-exists to obtain a lock, atomic delete-if-value-matches to release
a lock), and documenting very clearly in your code that the locks are only approximate and may
occasionally fail. Don’t bother with setting up a cluster of five Redis nodes.</p>

<p>On the other hand, if you need locks for correctness, please don’t use Redlock. Instead, please use
a proper consensus system such as <a href="https://zookeeper.apache.org/">ZooKeeper</a>, probably via one of the <a href="http://curator.apache.org/curator-recipes/index.html">Curator recipes</a>
that implements a lock. (At the very least, use a <a href="http://www.postgresql.org/">database with reasonable transactional
guarantees</a>.) And please enforce use of fencing tokens on all resource accesses under the
lock.</p>

<p>As I said at the beginning, Redis is an excellent tool if you use it correctly. None of the above
diminishes the usefulness of Redis for its intended purposes. <a href="http://antirez.com/">Salvatore</a> has been very
dedicated to the project for years, and its success is well deserved. But every tool has
limitations, and it is important to know them and to plan accordingly.</p>

<p>If you want to learn more, I explain this topic in greater detail in <a href="http://dataintensive.net/">chapters 8 and 9 of my
book</a>, now available in Early Release from O’Reilly. (The diagrams above are taken from my
book.) For learning how to use ZooKeeper, I recommend <a href="http://shop.oreilly.com/product/0636920028901.do" title="FP Junqueira and B Reed. ZooKeeper: Distributed Process Coordination. O'Reilly, 2013">Junqueira and Reed’s book</a>&nbsp;[3].
For a good introduction to the theory of distributed systems, I recommend <a href="http://www.distributedprogramming.net/" title="C Cachin, R Guerraoui, and L Rodrigues. Introduction to Reliable and Secure Distributed Programming, 2nd ed. Springer, 2011">Cachin, Guerraoui and
Rodrigues’ textbook</a>&nbsp;[13].</p>

<p><em>Thank you to <a href="https://aphyr.com/">Kyle Kingsbury</a>, <a href="https://twitter.com/skamille">Camille Fournier</a>, <a href="https://twitter.com/fpjunqueira">Flavio Junqueira</a>, and
<a href="http://antirez.com/">Salvatore Sanfilippo</a> for reviewing a draft of this article. Any errors are mine, of
course.</em></p>

<p><strong>Update 9 Feb 2016:</strong> <a href="http://antirez.com/">Salvatore</a>, the original author of Redlock, has
<a href="http://antirez.com/news/101">posted a rebuttal</a> to this article (see also
<a href="https://news.ycombinator.com/item?id=11065933">HN discussion</a>). He makes some good points, but
I stand by my conclusions. I may elaborate in a follow-up post if I have time, but please form your
own opinions – and please consult the references below, many of which have received rigorous
academic peer review (unlike either of our blog posts).</p>

<h2 id="references">References</h2>

<p>[1] Cary G Gray and David R Cheriton:
“<a href="https://pdfs.semanticscholar.org/a25e/ee836dbd2a5ae680f835309a484c9f39ae4e.pdf" title="Cary G Gray and David R Cheriton. Leases: An Efficient Fault-Tolerant Mechanism for Distributed File Cache Consistency. SOSP 1989">Leases: An Efficient Fault-Tolerant Mechanism for Distributed File Cache Consistency</a>,”
at <em>12th ACM Symposium on Operating Systems Principles</em> (SOSP), December 1989.
<a href="https://dx.doi.org/10.1145/74850.74870">doi:10.1145/74850.74870</a></p>

<p>[2] Mike Burrows:
“<a href="https://research.google.com/archive/chubby.html" title="Mike Burrows. The Chubby lock service for loosely-coupled distributed systems. OSDI 2006">The Chubby lock service for loosely-coupled distributed systems</a>,”
at <em>7th USENIX Symposium on Operating System Design and Implementation</em> (OSDI), November 2006.</p>

<p>[3] Flavio P Junqueira and Benjamin Reed:
<a href="http://shop.oreilly.com/product/0636920028901.do" title="FP Junqueira and B Reed. ZooKeeper: Distributed Process Coordination. O'Reilly, 2013"><em>ZooKeeper: Distributed Process Coordination</em></a>. O’Reilly Media, November 2013.
ISBN: 978-1-4493-6130-3</p>

<p>[4] Enis Söztutar:
“<a href="http://www.slideshare.net/enissoz/hbase-and-hdfs-understanding-filesystem-usage" title="Enis Söztutar. HBase and HDFS: Understanding filesystem usage in HBase. HBaseCon 2013">HBase and HDFS: Understanding filesystem usage in HBase</a>,” at <em>HBaseCon</em>, June 2013.</p>

<p>[5] Todd Lipcon:
“<a href="https://blog.cloudera.com/blog/2011/02/avoiding-full-gcs-in-hbase-with-memstore-local-allocation-buffers-part-1/" title="Todd Lipcon. Avoiding Full GCs in Apache HBase with MemStore-Local Allocation Buffers: Part 1. 2011">Avoiding Full GCs in Apache HBase with MemStore-Local Allocation Buffers: Part 1</a>,”
blog.cloudera.com, 24 February 2011.</p>

<p>[6] Martin Thompson: “<a href="http://mechanical-sympathy.blogspot.co.uk/2013/07/java-garbage-collection-distilled.html" title="Martin Thompson. Java Garbage Collection Distilled. 2013">Java Garbage Collection Distilled</a>,”
mechanical-sympathy.blogspot.co.uk, 16 July 2013.</p>

<p>[7] Peter Bailis and Kyle Kingsbury: “<a href="https://queue.acm.org/detail.cfm?id=2655736" title="P Bailis and K Kingsbury. The Network is Reliable. ACM Queue 12(7), 2014.">The Network is Reliable</a>,”
<em>ACM Queue</em>, volume 12, number 7, July 2014.
<a href="https://dx.doi.org/10.1145/2639988.2639988">doi:10.1145/2639988.2639988</a></p>

<p>[8] Mark Imbriaco: “<a href="https://github.com/blog/1364-downtime-last-saturday" title="Mark Imbriaco. Downtime last Saturday. 2012">Downtime last Saturday</a>,” github.com, 26 December 2012.</p>

<p>[9] Tushar Deepak Chandra and Sam Toueg:
“<a href="http://courses.csail.mit.edu/6.852/08/papers/CT96-JACM.pdf" title="TD Chandra and S Toueg. Unreliable Failure Detectors for Reliable Distributed Systems. JACM 43(2):225–267, 1996">Unreliable Failure Detectors for Reliable Distributed Systems</a>,”
<em>Journal of the ACM</em>, volume 43, number 2, pages 225–267, March 1996.
<a href="https://dx.doi.org/10.1145/226643.226647">doi:10.1145/226643.226647</a></p>

<p>[10] Michael J Fischer, Nancy Lynch, and Michael S Paterson:
“<a href="http://www.cs.princeton.edu/courses/archive/fall07/cos518/papers/flp.pdf" title="MJ Fischer, N Lynch, and MS Paterson. Impossibility of Distributed Consensus with One Faulty Process. JACM 32(2):374–382, 1985">Impossibility of Distributed Consensus with One Faulty Process</a>,”
<em>Journal of the ACM</em>, volume 32, number 2, pages 374–382, April 1985.
<a href="https://dx.doi.org/10.1145/3149.214121">doi:10.1145/3149.214121</a></p>

<p>[11] Maurice P Herlihy: “<a href="https://cs.brown.edu/~mph/Herlihy91/p124-herlihy.pdf" title="Maurice Herlihy. Wait-Free Synchronization. TOPLAS 13(1):124–149, 1991">Wait-Free Synchronization</a>,”
<em>ACM Transactions on Programming Languages and Systems</em>, volume 13, number 1, pages 124–149, January 1991.
<a href="https://dx.doi.org/10.1145/114005.102808">doi:10.1145/114005.102808</a></p>

<p>[12] Cynthia Dwork, Nancy Lynch, and Larry Stockmeyer:
“<a href="http://www.net.t-labs.tu-berlin.de/~petr/ADC-07/papers/DLS88.pdf" title="C Dwork, N Lynch, and L Stockmeyer. Consensus in the Presence of Partial Synchrony. JACM 35(2):288–323, 1988">Consensus in the Presence of Partial Synchrony</a>,”
<em>Journal of the ACM</em>, volume 35, number 2, pages 288–323, April 1988.
<a href="https://dx.doi.org/10.1145/42282.42283">doi:10.1145/42282.42283</a></p>

<p>[13] Christian Cachin, Rachid Guerraoui, and Luís Rodrigues:
<a href="http://www.distributedprogramming.net/" title="C Cachin, R Guerraoui, and L Rodrigues. Introduction to Reliable and Secure Distributed Programming, 2nd ed. Springer, 2011"><em>Introduction to Reliable and Secure Distributed Programming</em></a>,
Second Edition. Springer, February 2011. ISBN: 978-3-642-15259-7,
<a href="https://dx.doi.org/10.1007/978-3-642-15260-3">doi:10.1007/978-3-642-15260-3</a></p>



                <div>
                    <p>If you found this post useful, please
                    <a href="https://www.patreon.com/martinkl">support me on Patreon</a>
                    so that I can write more like it!</p>
                    <p>
                    To get notified when I write something new,
                    <a href="https://bsky.app/profile/martin.kleppmann.com">follow me on Bluesky</a> or
                    <a href="https://nondeterministic.computer/@martin">Mastodon</a>,
                    or enter your email address:
                    </p>

                    

                    <p>
                    I won't give your address to anyone else, won't send you any spam, and you can unsubscribe at any time.
                    </p>
                </div>

                
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Using Euro coins as weights (2004) (126 pts)]]></title>
            <link>https://www.rubinghscience.org/surv/euroweights1.html</link>
            <guid>41894359</guid>
            <pubDate>Sun, 20 Oct 2024 10:18:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.rubinghscience.org/surv/euroweights1.html">https://www.rubinghscience.org/surv/euroweights1.html</a>, See on <a href="https://news.ycombinator.com/item?id=41894359">Hacker News</a></p>
<div id="readability-page-1" class="page">
http://www.rubinghscience.org/surv/euroweights1.html<br>
Sep 2004
<br><hr><p><span size="5"><b>
Using Euro coins as standard weights
</b></span>
</p>


<p>
Here is a cheap way to obtain a set of standard weights, for measuring
weights up to about 100 gram, to an accuracy of about 0.5 gram :  Use
the coins of the currency of your country.  Thus one can make use of the
fact that these coins are fabricated in mass production, and because of
that have not only a constant shape and size, but also a constant and
accurately fixed weight.
</p><p>
Weights composed of these coins can be used to measure the weight of
small objects (e.g. letters).  The accuracy of the weight of the (Euro)
coins is good enough so that in measuring the weight of objects an
accuracy 0.5 gram is easily obtained in a cheap and quick way.(*)
</p><blockquote><span size="-1">
   (*) One cheap and quick way to construct things for weighing to 
   up to 0.5 gram accuracy with the Euro coins is as follows:<br> 
   &nbsp; &nbsp; &nbsp; 
   1. Use a very simple home-made scales, i.e. a balance, simply
   consisting of a straight rod suspended exactly in the middle, with
   hanging from each end a 'plate' (or 'pan') on which to place the
   object to be weighed and the standard weights.  A straight length of
   e.g. aluminium, two small identical pieces of board, and a small amount
   of supple thread suffice to construct a very serviceable scales.<br>
   &nbsp; &nbsp; &nbsp; 
   2. Create the weights by holding the combinations of Euro coins
   together with narrow paper bands glued around them.  The weight of the
   paper bands and the glue is much smaller than 0.5 g and is therefore
   negligible.  (A sheet of A4 copying paper weighs about 5 gram.)
</span></blockquote> 
<p>
In the rest of this text, I'll use the Euro coins, to illustrate the idea.
Also, I'll use the gram (abbreviated: 'g') as the unit of weight; that
is, I'll assume that the weight of the objects to be measured should be
determined in gram units.  The weight of the Euro coins is as follows:
</p><center>
<tt>
<table>
<tbody><tr>
	<td>Monetary<br>value of coin<br>[Euro]
	</td><td>Weight<br>[g]
</td></tr><tr>
	<td>0.01
	</td><td>2.30
</td></tr><tr>
	<td>0.02
	</td><td>3.06
</td></tr><tr>
	<td>0.05
	</td><td>3.92
</td></tr><tr>
	<td>0.10
	</td><td>4.10
</td></tr><tr>
	<td>0.20
	</td><td>5.74
</td></tr><tr>
	<td>0.50
	</td><td>7.80
</td></tr><tr>
	<td>1.00
	</td><td>7.50
</td></tr><tr>
	<td>2.00
	</td><td>8.50
</td></tr></tbody></table>
</tt>
<span size="-1"><b>
Table 1: Weights of the Euro coins<br>
<span size="-1">(Data obtained from: 
               http://www.euroswapper.com/euro_coins.html)</span>
</b></span>
</center>
<p>
Remarkably, the 1 Euro coin has a nice round weight of exactly 7.5 g;
but in general, the makers of the coins have obviously not used it as
a design criterion to give the coins a weight of a nice round number
of grams... &nbsp; These awkward numerical values of the weights of
the individual coins seems the biggest hurdle to easy use of coins as
standard weights (for weighing things cheaply and with a resolution of
better than 7.5 g).
</p><p>
However, it is easy (with the Euro coins at least) to combine small
numbers of coins together into combinations weighing a round number of
grams.  For example, the combination consisting of one 0.02 Euro coin
(3.06 g), two 0.05 Euro coins (3.92 g each), and one 0.10 Euro coin
(4,10 g), adds up to the round weight of exactly 15.00 g.  
</p><p>
It is possible (with the Euro coins) to compose in this way a
very satisfactory set of "standard weights", each consisting of a
combination of a small number of coins.  The following are the most
useful combinations:
</p><center>
<tt>
<table>
<tbody><tr>
	<td rowspan="2">Weight of<br>combination<br>[g]
	</td><td> 
	</td><td colspan="6">Number of coins of type
	</td><td> 
	</td><td rowspan="2">Cost of<br>combination<br>[Euro]
</td></tr><tr>
	<td>
	</td><td>0.01
	</td><td>0.02
	</td><td>0.05
	</td><td>0.10
	</td><td>0.20
	</td><td>0.50
	</td><td>
	</td><td>
</td></tr><tr>
	<td><p>9.96</p>
	</td><td>
	</td><td>3
	</td><td>1
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>
	</td><td>0.05
</td></tr><tr>
	<td><p>10.04</p>
	</td><td>
	</td><td>  &nbsp;
	</td><td>2
	</td><td>1
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>
	</td><td>0.09
</td></tr><tr>
	<td><p><b>15.00</b></p>
	</td><td>
	</td><td>  &nbsp;
	</td><td><b>1</b>
	</td><td><b>2</b>
	</td><td><b>1</b>
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>
	</td><td><b>0.22</b>
</td></tr><tr>
	<td><p>15.50</p>
	</td><td>
	</td><td>2
	</td><td>1
	</td><td>2
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>
	</td><td>0.14
</td></tr><tr>
	<td><p>16.00</p>
	</td><td>
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>2
	</td><td>  &nbsp;
	</td><td>1
	</td><td>
	</td><td>0.70
</td></tr><tr>
	<td><p>16.50</p>
	</td><td>
	</td><td>2
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>1
	</td><td>  &nbsp;
	</td><td>1
	</td><td>
	</td><td>0.62
</td></tr><tr>
	<td><p>17.00</p>
	</td><td>
	</td><td>  &nbsp;
	</td><td>1
	</td><td>  &nbsp;
	</td><td>2
	</td><td>1
	</td><td>  &nbsp;
	</td><td>
	</td><td>0.42
</td></tr><tr>
	<td><p><b>17.50</b></p>
	</td><td>
	</td><td><b>2</b>
	</td><td><b>1</b>
	</td><td>  &nbsp;
	</td><td><b>1</b>
	</td><td><b>1</b>
	</td><td>  &nbsp;
	</td><td>
	</td><td><b>0.34</b>
</td></tr><tr>
	<td><p><b>17.50</b></p>
	</td><td>
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td><b>3</b>
	</td><td>  &nbsp;
	</td><td><b>1</b>
	</td><td>  &nbsp;
	</td><td>
	</td><td><b>0.35</b>
</td></tr><tr>
	<td><p>18.00</p>
	</td><td>
	</td><td>4
	</td><td>1
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>1
	</td><td>  &nbsp;
	</td><td>
	</td><td>0.26
</td></tr><tr>
	<td><p><b>20.00</b></p>
	</td><td>
	</td><td><b>3</b>
	</td><td><b>3</b>
	</td><td><b>1</b>
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>  &nbsp;
	</td><td>
	</td><td><b>0.14</b>
</td></tr><tr>
	<td><p><b>25.00</b></p>
	</td><td>
	</td><td>  &nbsp;
	</td><td><b>3</b>
	</td><td><b>1</b>
	</td><td><b>1</b>
	</td><td>  &nbsp;
	</td><td><b>1</b>
	</td><td>
	</td><td><b>0.71</b>
</td></tr></tbody></table>
</tt>
<span size="-1"><b>
Table 2: The most useful combinations of Euro coins<br>
to obtain weights of a round number of grams.<br>
An empty cell means that the coin is not used in the combination.
</b></span>
</center>
<p>
The combinations of 9.96 g and 10.04 g included in Table 2 above are the
closest it is possible to get to a weight of 10.00 g.  
</p><p>
In Table 2, the 15 g and 20 g weights are the mainstay of the weight set.
With them, by placing them both at the left and at the right side in
the scales, one can measure to a resolution of 5 g.  The, relatively
expensive, 25 g weight is not really strictly necessary, but I've added
it for convenience.
</p><p>
By adding the 17.5 g weight to one's set of weights, the resolution is
improved to 2.5 g.  (The two possible coin combinations for the 17.5
g weight, both shown in the table, differ in cost only by 0.01 Euro.)
</p><p>
The remaining weights in Table 2 are included for those who want to 
improve their weight measuring resolution to 1.0 or 0.5 g.
</p><p>
In general, the larger the (desired) weight of the combination, the
larger is the number of ways in which the coins can be put together to
yield that given total weight.  Small weights (made up of only a few
coins) can only be composed in one or a very few ways; for large weights
(made up of larger numbers of coins) of any given desired weight,
in general a larger number of coin combinations exists that sum to
that weight.
</p><p>
For desired weights of &nbsp; <i>n</i> * 0.5 g (where <i>n</i>
= whole number) <br>
&nbsp; -- that is, weights of a whole number
of grams or a whole number of grams plus 0.5 g --<br>
it is, with the Euro coins, not possible to find combinations under a
total weight of 10.50 g.  The smallest possible combinations summing
to &nbsp; <i>n</i> * 0.5 g are:
</p><blockquote>
	10.50<br>
	11.00<br>
	11.50<br>
&nbsp; &nbsp;	15.00<br>
&nbsp; &nbsp;	15.50<br>
&nbsp; &nbsp;	16.00<br>
&nbsp; &nbsp;	16.50<br>
&nbsp; &nbsp;	17.00<br>
&nbsp; &nbsp;	17.50<br>
&nbsp; &nbsp;	18.00<br>
&nbsp; &nbsp; &nbsp; &nbsp;	20.00<br>
</blockquote>
From 20.00 g upwards, all combinations with a weight of &nbsp; <i>n</i>
* 0.5 g are possible.
<p>
To obtain weights of 30 g or larger with a weight of &nbsp; <i>n</i>
* 5 gram (<i>n</i> = whole number), that is, 30 g, 35 g, 40 g, 45 g,
50 g and so on, just put them together out of the combinations for 15
gram and for 20 gram (from Table 2).  For example,
</p><blockquote><pre> 50 g  =  (2 * 15 g) +      20 g        [ = 0.58 Euro ]
 75 g  =       15 g  + (3 * 20 g)       [ = 0.64 Euro ]
100 g  =                5 * 20 g        [ = 0.70 Euro ]
</pre></blockquote>
... and so on. 
<p>
Note (from Table 1), that the ratio of weight to monetary value of the
Euro coins drops uniformly with increasing monetary value of the coin.
That is, the smaller the coin, the more weight it gives you for the
smallest cost.  In order to keep things as cheap as possible, I have in
the above therefore preferably composed my weights from from the smaller
coins, as far as possible.  For the same reason, I've used none of the
coins of 1 Euro or more in my combinations.
</p><p>
When composing the larger &nbsp; <i>n</i> * 5 gram weights from the 15
g and 20 g combinations, note that the 20 g combination, composed in
relatively larger part from lower-value coins, is cheaper than the
15 g combination.  (The 20 g costing 0.14 Euro, and the 15 g costing
0.22 Euro.)
<!--
<div align=center>---</div>
-->
</p><hr>




</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bitwarden is no longer free software (165 pts)]]></title>
            <link>https://github.com/bitwarden/clients/issues/11611</link>
            <guid>41893994</guid>
            <pubDate>Sun, 20 Oct 2024 08:51:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/bitwarden/clients/issues/11611">https://github.com/bitwarden/clients/issues/11611</a>, See on <a href="https://news.ycombinator.com/item?id=41893994">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="">
      <div data-gid="I_kwDOAzDwU86atq_U" data-url="/bitwarden/clients/issues/11611/partials/body?issue=11611" data-channel="eyJjIjoiaXNzdWU6MjU5NTY2MzgyOCIsInQiOjE3Mjk0MzQ2MDF9--8d9c313d951f36b6eb23f09ad2280c2f047d08e528fe1835f7127776a825c69b">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/brjsp/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/brjsp"><img src="https://avatars.githubusercontent.com/u/25533179?s=80&amp;v=4" width="40" height="40" alt="@brjsp"></a>

</p>

  <div data-body-version="18f6c3df4a3359182c7ac598b6d414e875b6248912d5d6b9e2fc6f16547e525d" id="issue-2595663828">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">Pull request <a data-error-text="Failed to load title" data-id="2516713871" data-permission-text="Title is private" data-url="https://github.com/bitwarden/clients/issues/10974" data-hovercard-type="pull_request" data-hovercard-url="/bitwarden/clients/pull/10974/hovercard" href="https://github.com/bitwarden/clients/pull/10974">#10974</a> introduces the <code>@bitwarden/sdk-internal</code> dependency which is needed to build the desktop client. The dependency contains a licence statement which contains the following clause:</p>
<div data-snippet-clipboard-copy-content="You may not use this SDK to develop applications for use with software other
than Bitwarden (including non-compatible implementations of Bitwarden) or to
develop another SDK."><pre><code>You may not use this SDK to develop applications for use with software other
than Bitwarden (including non-compatible implementations of Bitwarden) or to
develop another SDK.
</code></pre></div>
<p dir="auto">This violates <a href="https://www.gnu.org/philosophy/free-sw.en.html" rel="nofollow">freedom 0</a>.</p>
<p dir="auto">It is not possible to build desktop-v2024.10.0 (or, likely, current master) without removing this dependency.</p>
      </div>
</task-lists>


        <div data-view-component="true">
  <!-- '"` --><!-- </textarea></xmp> --><form data-turbo="false" action="/bitwarden/clients/reactions" accept-charset="UTF-8" method="post">
    
      
    <div>
          <tool-tip id="tooltip-dd32c9b5-3bb9-4281-ab66-7c25324afb7d" for="reactions--reaction_button_component-330bdb" popover="manual" data-direction="n" data-type="description" data-view-component="true">Sporesirius, littleblack111, NineKain, lcheylus, Christophe999s, martabal, diogopjesus, mlec1, cbaconnier, pestanko, and 65 more reacted with thumbs up emoji</tool-tip>
          <tool-tip id="tooltip-4a698f39-fbee-4355-aab8-aff447d941af" for="reactions--reaction_button_component-bd4580" popover="manual" data-direction="n" data-type="description" data-view-component="true">mikelward, rmens, NameLessGO, neiios, itayporezky, connorhsm, PKizzle, LucaTheHacker, hserranome, pbering, and 4 more reacted with eyes emoji</tool-tip>
      
    </div>
</form></div>
      </div>

</div>


      <div>
    


      

      <div data-gid="IC_kwDOAzDwU86QRZSh" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QRZSh/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/bitwarden-bot/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/bitwarden-bot"><img src="https://avatars.githubusercontent.com/u/65035528?s=80&amp;u=dcb290eaf0b2928ab41f8c11117b786f684ecfad&amp;v=4" width="40" height="40" alt="@bitwarden-bot"></a>

</p>


  <div data-body-version="f20cf788c93350c330f9ffbeeb5fd6a5ddb3725c9abad5c6ee823e42038ac853" id="issuecomment-2420479137">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">Thank you for reporting this issue! We've added this to our internal tracking system.<br>
ID: PM-13815</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QRfgq" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QRfgq/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/brjsp/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/brjsp"><img src="https://avatars.githubusercontent.com/u/25533179?s=80&amp;v=4" width="40" height="40" alt="@brjsp"></a>

</p>


  <div data-body-version="503b673220f7ab2a78f661eead6135d6b99e22555a2755da2f506c5b0927f3ac" id="issuecomment-2420504618">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">Namely trying to build with <code>bitwarden_license</code> directory removed (like we have been always doing) and sanitized node_modules results in the following:</p>
<div data-snippet-clipboard-copy-content="[Prel] assets by status 30.6 KiB [cached] 1 asset
[Prel] orphan modules 28.2 KiB [orphan] 25 modules
[Prel] ./src/preload.ts + 25 modules 28.4 KiB [not cacheable] [built] [code generated]
[Prel]
[Prel] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/abstractions/sdk/sdk.service.ts
[Prel] 3:32-57
[Prel] [tsl] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/abstractions/sdk/sdk.service.ts(3,33)
[Prel]       TS2307: Cannot find module '@bitwarden/sdk-internal' or its corresponding type declarations.
[Prel]
[Prel] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/abstractions/sdk/sdk-client-factory.ts
[Prel] 1:37-62
[Prel] [tsl] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/abstractions/sdk/sdk-client-factory.ts(1,38)
[Prel]       TS2307: Cannot find module '@bitwarden/sdk-internal' or its corresponding type declarations.
[Prel]
[Prel] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/default-sdk.service.ts
[Prel] 3:54-79
[Prel] [tsl] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/default-sdk.service.ts(3,55)
[Prel]       TS2307: Cannot find module '@bitwarden/sdk-internal' or its corresponding type declarations.
[Prel]
[Prel] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/default-sdk-client-factory.ts
[Prel] 1:21-46
[Prel] [tsl] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/default-sdk-client-factory.ts(1,22)
[Prel]       TS2307: Cannot find module '@bitwarden/sdk-internal' or its corresponding type declarations.
[Prel]
[Prel] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/default-sdk-client-factory.ts
[Prel] 2:24-81
[Prel] [tsl] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/default-sdk-client-factory.ts(2,25)
[Prel]       TS2307: Cannot find module '@bitwarden/sdk-internal/bitwarden_wasm_internal_bg.wasm' or its corresponding type declarations.
[Prel]
[Prel] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/noop-sdk-client-factory.ts
[Prel] 1:37-62
[Prel] [tsl] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/noop-sdk-client-factory.ts(1,38)
[Prel]       TS2307: Cannot find module '@bitwarden/sdk-internal' or its corresponding type declarations.
[Prel]
[Prel] 6 errors have detailed information that is not shown.
[Prel] Use 'stats.errorDetails: true' resp. '--stats-error-details' to show it.
[Prel]
[Prel] webpack 5.94.0 compiled with 6 errors in 14233 ms
[Prel] npm error Lifecycle script `build:preload` failed with error:
[Prel] npm error code 1
[Prel] npm error path /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/apps/desktop
[Prel] npm error workspace @bitwarden/desktop@2024.10.0
[Prel] npm error location /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/apps/desktop
[Prel] npm error command failed
[Prel] npm error command sh -c cross-env NODE_ENV=production webpack --config webpack.preload.js
[Prel] npm run build:preload exited with code 1"><pre><code>[Prel] assets by status 30.6 KiB [cached] 1 asset
[Prel] orphan modules 28.2 KiB [orphan] 25 modules
[Prel] ./src/preload.ts + 25 modules 28.4 KiB [not cacheable] [built] [code generated]
[Prel]
[Prel] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/abstractions/sdk/sdk.service.ts
[Prel] 3:32-57
[Prel] [tsl] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/abstractions/sdk/sdk.service.ts(3,33)
[Prel]       TS2307: Cannot find module '@bitwarden/sdk-internal' or its corresponding type declarations.
[Prel]
[Prel] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/abstractions/sdk/sdk-client-factory.ts
[Prel] 1:37-62
[Prel] [tsl] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/abstractions/sdk/sdk-client-factory.ts(1,38)
[Prel]       TS2307: Cannot find module '@bitwarden/sdk-internal' or its corresponding type declarations.
[Prel]
[Prel] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/default-sdk.service.ts
[Prel] 3:54-79
[Prel] [tsl] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/default-sdk.service.ts(3,55)
[Prel]       TS2307: Cannot find module '@bitwarden/sdk-internal' or its corresponding type declarations.
[Prel]
[Prel] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/default-sdk-client-factory.ts
[Prel] 1:21-46
[Prel] [tsl] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/default-sdk-client-factory.ts(1,22)
[Prel]       TS2307: Cannot find module '@bitwarden/sdk-internal' or its corresponding type declarations.
[Prel]
[Prel] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/default-sdk-client-factory.ts
[Prel] 2:24-81
[Prel] [tsl] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/default-sdk-client-factory.ts(2,25)
[Prel]       TS2307: Cannot find module '@bitwarden/sdk-internal/bitwarden_wasm_internal_bg.wasm' or its corresponding type declarations.
[Prel]
[Prel] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/noop-sdk-client-factory.ts
[Prel] 1:37-62
[Prel] [tsl] ERROR in /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/libs/common/src/platform/services/sdk/noop-sdk-client-factory.ts(1,38)
[Prel]       TS2307: Cannot find module '@bitwarden/sdk-internal' or its corresponding type declarations.
[Prel]
[Prel] 6 errors have detailed information that is not shown.
[Prel] Use 'stats.errorDetails: true' resp. '--stats-error-details' to show it.
[Prel]
[Prel] webpack 5.94.0 compiled with 6 errors in 14233 ms
[Prel] npm error Lifecycle script `build:preload` failed with error:
[Prel] npm error code 1
[Prel] npm error path /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/apps/desktop
[Prel] npm error workspace @bitwarden/desktop@2024.10.0
[Prel] npm error location /home/abuild/rpmbuild/BUILD/bitwarden-2024.10.0/apps/desktop
[Prel] npm error command failed
[Prel] npm error command sh -c cross-env NODE_ENV=production webpack --config webpack.preload.js
[Prel] npm run build:preload exited with code 1
</code></pre></div>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="CRE_kwDOAmn6As5eMFss">
    <p><a data-hovercard-type="user" data-hovercard-url="/users/ulm/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ulm"><img src="https://avatars.githubusercontent.com/u/206311?s=40&amp;v=4" width="20" height="20" alt="@ulm"></a>
<a data-hovercard-type="user" data-hovercard-url="/users/ulm/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ulm">ulm</a>



    mentioned this issue
    </p><a href="#ref-pullrequest-2597404269">
      <relative-time datetime="2024-10-18T13:24:24Z">Oct 18, 2024</relative-time>
    </a>
</div>

      <div data-gid="IC_kwDOAzDwU86QeJja" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QeJja/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/xndc/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/xndc"><img src="https://avatars.githubusercontent.com/u/11667279?s=80&amp;v=4" width="40" height="40" alt="@xndc"></a>

</p>


  <div data-body-version="bfc2242a0e48109dae7556d92a1cf6df60c8edfb21a2d8f25cee89e7c0d9f6ea" id="issuecomment-2423822554">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">Also see <a data-error-text="Failed to load title" data-id="2403231331" data-permission-text="Title is private" data-url="https://github.com/bitwarden/sdk/issues/898" data-hovercard-type="issue" data-hovercard-url="/bitwarden/sdk/issues/898/hovercard" href="https://github.com/bitwarden/sdk/issues/898">bitwarden/sdk#898</a>. It looks like this is part of a deliberate campaign by Bitwarden, Inc. to fully transition Bitwarden to proprietary software, despite consistently advertising it as open source, without informing customers about this change.</p>
<p dir="auto">For whatever the opinion of one user is worth, I've switched away from Bitwarden due to this.</p>
      </div>
</task-lists>


        <div data-view-component="true">
  <!-- '"` --><!-- </textarea></xmp> --><form data-turbo="false" action="/bitwarden/clients/reactions" accept-charset="UTF-8" method="post">
    
      
    <div>
          <tool-tip id="tooltip-df23cbff-5040-4727-b6b8-e7d6daca4e1b" for="reactions--reaction_button_component-7507ca" popover="manual" data-direction="n" data-type="description" data-view-component="true">drjagan, impredicative, Sporesirius, NineKain, cbaconnier, mamgodev, KnudH, Malix-Labs, zjeffer, AMufInABox, and 31 more reacted with thumbs up emoji</tool-tip>
      
    </div>
</form></div>
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QhH_-" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QhH_-/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/aphedges/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/aphedges"><img src="https://avatars.githubusercontent.com/u/14283972?s=80&amp;u=a5d1cb3a27a324084bae51cf88e9302f2c84215b&amp;v=4" width="40" height="40" alt="@aphedges"></a>

</p>


  <div data-body-version="43b7c1adbffaf598edd33a757eaec36ace20cb851e6c5a9cdf486c5389fa33d0" id="issuecomment-2424602622">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">I noticed and reported a similar problem with the NPM releases of the CLI client (<a data-error-text="Failed to load title" data-id="2476985390" data-permission-text="Title is private" data-url="https://github.com/bitwarden/clients/issues/10648" data-hovercard-type="issue" data-hovercard-url="/bitwarden/clients/issues/10648/hovercard" href="https://github.com/bitwarden/clients/issues/10648">#10648</a>) two months ago, and I have yet to receive a response. Bitwarden definitely seems to be moving away from being open-source software without making any sort of announcement about it.</p>
      </div>
</task-lists>


        <div data-view-component="true">
  <!-- '"` --><!-- </textarea></xmp> --><form data-turbo="false" action="/bitwarden/clients/reactions" accept-charset="UTF-8" method="post">
    
      
    <div>
          <tool-tip id="tooltip-e2156ec1-6e90-4549-bd8e-08d66268901f" for="reactions--reaction_button_component-eae635" popover="manual" data-direction="n" data-type="description" data-view-component="true">drjagan, Sporesirius, NineKain, Zireael07, cbaconnier, mamgodev, KnudH, andaag, tesfabpel, NameLessGO, and 10 more reacted with thumbs up emoji</tool-tip>
      
    </div>
</form></div>
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QhsED" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QhsED/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/rafntor/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/rafntor"><img src="https://avatars.githubusercontent.com/u/44544090?s=80&amp;v=4" width="40" height="40" alt="@rafntor"></a>

</p>


  <div data-body-version="f4e847117fd1be65939875e1fb8360225775fecaac889aecd195e1d197f595d9" id="issuecomment-2424750339">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">what alternatives do you guys recommend?</p>
      </div>
</task-lists>


        <div data-view-component="true">
  <!-- '"` --><!-- </textarea></xmp> --><form data-turbo="false" action="/bitwarden/clients/reactions" accept-charset="UTF-8" method="post">
    
      
    <div>
          <tool-tip id="tooltip-e3ac0f13-c017-4118-bfbe-417b9ac69102" for="reactions--reaction_button_component-b1c430" popover="manual" data-direction="n" data-type="description" data-view-component="true">Malix-Labs, starvald, NameLessGO, servaasvdc, eenturk, xFELAx, rymiel, aronwk-aaron, reddec, 0verEngineer, and 2 more reacted with thumbs up emoji</tool-tip>
      
    </div>
</form></div>
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86Qh6VE" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86Qh6VE/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/iHarryPotter178/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/iHarryPotter178"><img src="https://avatars.githubusercontent.com/u/78410114?s=80&amp;u=f23bf8b3c1cb162e8dc83c3f6513ec640868965e&amp;v=4" width="40" height="40" alt="@iHarryPotter178"></a>

</p>


  <div data-body-version="b21cd5bd92f93d100ecf1f6e5dfb8957a89bd12213f392fd949801b799202a27" id="issuecomment-2424808772">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">Bitwarden was good to me.. Now it's time to switch to alternatives...</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86Qh-dP" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86Qh-dP/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/adrian-afl/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/adrian-afl"><img src="https://avatars.githubusercontent.com/u/4716150?s=80&amp;u=87fa5e32313db29b578343f8b72457ee698e8bd2&amp;v=4" width="40" height="40" alt="@adrian-afl"></a>

</p>


  <div data-body-version="717b6d66a9a54fe5aa6c5c1ea8bbd7c97e791bded87cc6404b9eeb2a160cea81" id="issuecomment-2424825679">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">Best alternative is to fork the version before this change!</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86Qh_BU" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86Qh_BU/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/LalOpen/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/LalOpen"><img src="https://avatars.githubusercontent.com/u/92826217?s=80&amp;v=4" width="40" height="40" alt="@LalOpen"></a>

</p>


  <div data-body-version="52db329b5dbbb35e78d0d1e4c0481c2d685b6061596f1610534d9d4ccc9d40a5" id="issuecomment-2424827988">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">Ohhh noooo... That's a shame. You're right: i'll go to a fork or to any alternative!</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86Qh_Sz" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86Qh_Sz/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/impredicative/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/impredicative"><img src="https://avatars.githubusercontent.com/u/566650?s=80&amp;u=ea5dc361b05a0fc8f7b7ec3bb4ab5b996ca800c5&amp;v=4" width="40" height="40" alt="@impredicative"></a>

</p>


  <div data-body-version="d7774ef98f0085ca91fe1bb28410c83e1548967f3ecb9caefe59536d62ef7c70" id="issuecomment-2424829107">

        <task-lists disabled="" sortable="">
<div>
          <blockquote>
<p dir="auto">i'll go to a fork or to any alternative!</p>
</blockquote>
<p dir="auto">I would be careful going to "any alternative". It's your passwords you're talking about.</p>
<p dir="auto">Also, a fork of the client still leaves the open issue of relying on the server service or software.</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86Qh_Zt" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86Qh_Zt/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/Gallocon/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Gallocon"><img src="https://avatars.githubusercontent.com/u/65094462?s=80&amp;v=4" width="40" height="40" alt="@Gallocon"></a>

</p>


  <div data-body-version="9924d1962e7b5debc574ef08d9fe91482b1b266b627417037c565fba170105c5" id="issuecomment-2424829549">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">This is... concerning to say the least. I'm a long term paid Bitwarden user, and it's making me reconsider that decision.</p>
      </div>
</task-lists>


        <div data-view-component="true">
  <!-- '"` --><!-- </textarea></xmp> --><form data-turbo="false" action="/bitwarden/clients/reactions" accept-charset="UTF-8" method="post">
    
      
    <div>
          <tool-tip id="tooltip-191c5c59-5236-42a8-90ba-df7506d757cd" for="reactions--reaction_button_component-b9536f" popover="manual" data-direction="n" data-type="description" data-view-component="true">Pavuucek, TECHNOFAB11, moonlitpath, vHanda, itayporezky, connorhsm, eenturk, xFELAx, aronwk-aaron, JordyEGNL, and 8 more reacted with thumbs up emoji</tool-tip>
      
    </div>
</form></div>
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86Qh_sr" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86Qh_sr/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/cat-pat/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cat-pat"><img src="https://avatars.githubusercontent.com/u/178615483?s=80&amp;u=ea41c50e8f0945f782a45ba81cce0552ab581b85&amp;v=4" width="40" height="40" alt="@cat-pat"></a>

</p>


  <div data-body-version="4b5ff39c88f99c8174f1a21d9c736ad5f4eccdd0c736dc8c9716830cedb78398" id="issuecomment-2424830763">

        <task-lists disabled="" sortable="">

</task-lists>


        <div data-view-component="true">
  <!-- '"` --><!-- </textarea></xmp> --><form data-turbo="false" action="/bitwarden/clients/reactions" accept-charset="UTF-8" method="post">
    
      
    <div>
          <tool-tip id="tooltip-91e9ca5e-d9ad-4882-b3ee-10b6e384e9b5" for="reactions--reaction_button_component-f5ab91" popover="manual" data-direction="n" data-type="description" data-view-component="true">impredicative, OdinGitDat, gazben, drobson03, xFELAx, dpurnam, JeanneD4RK, luolong, ctp-tCG, lostb1t, and 5 more reacted with thumbs up emoji</tool-tip>
      
    </div>
</form></div>
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86Qh_yc" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86Qh_yc/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/ludouzi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ludouzi"><img src="https://avatars.githubusercontent.com/u/45490980?s=80&amp;u=4d3c08f4735c2713e440397aa5034f259f5c2086&amp;v=4" width="40" height="40" alt="@ludouzi"></a>

</p>


  <div data-body-version="c1bd23072e8b4308740cdb073b429156693ac611759b2c6f08e7bc407a8b8874" id="issuecomment-2424831132">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">I'll be looking for an alternative after hearing this. Quietly moving away from open source raises serious concerns.</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86Qh_y5" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86Qh_y5/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/zarlo/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/zarlo"><img src="https://avatars.githubusercontent.com/u/2957727?s=80&amp;u=7a8a0fca51693afbc5ef221f169e43c69c004f21&amp;v=4" width="40" height="40" alt="@zarlo"></a>

</p>


  <div data-body-version="8f2ee76ff0e04b1bd2f78cb2a0c8d03980294f33e9c69a480be80f3ad3e81deb" id="issuecomment-2424831161">

        <task-lists disabled="" sortable="">
<div>
          <blockquote>
<p dir="auto">7.3 The Company may at any time, terminate the License Agreement with you if:<br>
........<br>
d) the Company decides to no longer provide the SDK or certain parts of the SDK<br>
to users in the country in which you are resident or from which you use the<br>
service, or the provision of the SDK or certain SDK services to you by the<br>
Company is, in the Company’'s sole discretion, no longer commercially viable or<br>
technically practicable.</p>
</blockquote>
<p dir="auto">well so it can be striped from us at any time?</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86Qh_0v" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86Qh_0v/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/impredicative/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/impredicative"><img src="https://avatars.githubusercontent.com/u/566650?s=80&amp;u=ea5dc361b05a0fc8f7b7ec3bb4ab5b996ca800c5&amp;v=4" width="40" height="40" alt="@impredicative"></a>

</p>


  

</div>


      <div data-gid="IC_kwDOAzDwU86QiBG5" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiBG5/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/stukinnear/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/stukinnear"><img src="https://avatars.githubusercontent.com/u/32877477?s=80&amp;v=4" width="40" height="40" alt="@stukinnear"></a>

</p>


  <div data-body-version="256084458503aed1932053ee4e70f5ccc93f9fe706c6176c4b8638ee7b51b123" id="issuecomment-2424836537">

        <task-lists disabled="" sortable="">
<div>
          <blockquote>
<p dir="auto">what alternatives do you guys recommend?</p>
</blockquote>
<p dir="auto">If it's for the home Vaultwarden.</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QiBnu" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiBnu/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/NikunjKhangwal/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/NikunjKhangwal"><img src="https://avatars.githubusercontent.com/u/99175083?s=80&amp;v=4" width="40" height="40" alt="@NikunjKhangwal"></a>

</p>


  <div data-body-version="8fb937ad87cc2f4ccd0468677af497841e964fba5d42bff35d7138c70d1e075e" id="issuecomment-2424838638">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">No no no, not Bitwarden please. A service i dearly loved and was satisfied with :(</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QiEgp" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiEgp/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/JeanneD4RK/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/JeanneD4RK"><img src="https://avatars.githubusercontent.com/u/61759320?s=80&amp;u=b6c470c8e0b04c73aa7e7eb19936039de8c98d8c&amp;v=4" width="40" height="40" alt="@JeanneD4RK"></a>

</p>


  <div data-body-version="067de635164970c0fe9f47d60355f46f9d067a7aa500ef542680b3a507fcefb0" id="issuecomment-2424850473">

        <task-lists disabled="" sortable="">
<div>
          <blockquote>
<blockquote>
<p dir="auto">what alternatives do you guys recommend?</p>
</blockquote>
<p dir="auto">If it's for the home Vaultwarden.</p>
</blockquote>
<p dir="auto">Why home use only ?</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QiFAG" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiFAG/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/Ollie1101/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Ollie1101"><img src="https://avatars.githubusercontent.com/u/46160541?s=80&amp;v=4" width="40" height="40" alt="@Ollie1101"></a>

</p>


  <div data-body-version="dc26d1b1e401afe7bfc43d0dd87573274988daf4115183db95ff80409f93a1ac" id="issuecomment-2424852486">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">enshitification is inevitable with these god forsaken companies</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QiFDr" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiFDr/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/GauthierPLM/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/GauthierPLM"><img src="https://avatars.githubusercontent.com/u/2579741?s=80&amp;u=1571f383289037384a7a68dca1e5f8fc9df9d49a&amp;v=4" width="40" height="40" alt="@GauthierPLM"></a>

</p>


  <div data-body-version="c74607a4a083982e7874882f8a7af64b019ca907d5a5538d6771f2dfdff149b3" id="issuecomment-2424852715">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">Note that the SDK is used (and enabled as a feature flag) not only in the release of desktop app, but also in the browser, CLI and web clients.</p>
<p dir="auto"><strong>This mean that all versions of BitWarden 2024.10.0 are using the SDK.</strong></p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QiFse" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiFse/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/Foosec/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Foosec"><img src="https://avatars.githubusercontent.com/u/31885466?s=80&amp;u=f74a1db15ae843f9d9727f0eca8f70a3148b2fdd&amp;v=4" width="40" height="40" alt="@Foosec"></a>

</p>


  <div data-body-version="e308542e22e315a176c7c5e234ebb8dce620f7ec2e3d291820101efb4db6b1ac" id="issuecomment-2424855326">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">How many times do we have to teach companies that try to rug pull this lesson, you want to end up like redis? This is how you end up like redis.</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QiFug" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiFug/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/Yaikava/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Yaikava"><img src="https://avatars.githubusercontent.com/u/83710104?s=80&amp;u=ee4cc2d6145b0d221b032df00402454660ffbedb&amp;v=4" width="40" height="40" alt="@Yaikava"></a>

</p>


  

</div>


      <div data-gid="IC_kwDOAzDwU86QiF50" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiF50/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/impredicative/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/impredicative"><img src="https://avatars.githubusercontent.com/u/566650?s=80&amp;u=ea5dc361b05a0fc8f7b7ec3bb4ab5b996ca800c5&amp;v=4" width="40" height="40" alt="@impredicative"></a>

</p>


  <div data-body-version="7ef333adf24594f5371f3400c1b89555810d65ee10061efc5b0e5a3079115f7b" id="issuecomment-2424856180">

        <task-lists disabled="" sortable="">
<div>
          <blockquote>
<p dir="auto">enshitification is inevitable with these god forsaken companies</p>
</blockquote>
<p dir="auto">It's practically a given with almost any VC (venture capital) or PE (private equity) backed company with worth between 10 million and 1 trillion USD. When outside of this range, they can do what they want.</p>
<p dir="auto">People keep getting surprised every time this happens, but it's so common as to be inevitable indeed.</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QiGXQ" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiGXQ/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/ssddanbrown/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ssddanbrown"><img src="https://avatars.githubusercontent.com/u/8343178?s=80&amp;u=0827017afd8f54d126d84a9dfea02e9f00d81934&amp;v=4" width="40" height="40" alt="@ssddanbrown"></a>

</p>


  <div data-body-version="91a9c60dc0a2835a1c0d6fcb96c991b9d0f17f67be80bfbb2131920ce66140a2" id="issuecomment-2424858064">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">Bitwarden has before released projects advertised as "open source" while not under a non-open restrictive license <a href="https://github.com/ssddanbrown/Open-Source-Confusion-Cases/blob/main/cases/bitwarden-passwordless.md">details</a>, <a href="https://github.com/bitwarden/passwordless-server/issues/37" data-hovercard-type="issue" data-hovercard-url="/bitwarden/passwordless-server/issues/37/hovercard">discussion</a>. This may now indicate a pattern or direction.</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QiGlp" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiGlp/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/ninjadev64/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ninjadev64"><img src="https://avatars.githubusercontent.com/u/63245705?s=80&amp;u=5501346037a284432bcc0ddce5fc7070f179ad86&amp;v=4" width="40" height="40" alt="@ninjadev64"></a>

</p>


  <div data-body-version="d7c882897bd4963cfa9e93d773cd4d77f539275ce8c992a9810d8e42293c9253" id="issuecomment-2424858985">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">This sucks. I am going to develop an alternative desktop app which wraps Vaultwarden's web interface using Tauri, if anyone is interested.</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QiHDK" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiHDK/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/Paddy-NI/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Paddy-NI"><img src="https://avatars.githubusercontent.com/u/716404?s=80&amp;v=4" width="40" height="40" alt="@Paddy-NI"></a>

</p>


  <div data-body-version="8bfc0cab636031698a7b518d2d7a03d6c8a76f293779e60cd3918002aeb08b59" id="issuecomment-2424860874">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">So I guess all my customers and myself of course will be moving to an alternative.</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QiHQr" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiHQr/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/ercoppa/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ercoppa"><img src="https://avatars.githubusercontent.com/u/6653252?s=80&amp;v=4" width="40" height="40" alt="@ercoppa"></a>

</p>


  <div data-body-version="cbcdcf137056b86de1a1db14e10e82729d3b2dc1fb4a4f26848927eabcce0d2d" id="issuecomment-2424861739">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">Removed the annual subscription (never used the extra features, I had it only to support the project) and moving away very soon to a truly free software solution. Very disappointed since I have pushed a lot of people toward Bitwarden.</p>
      </div>
</task-lists>


        
      </div>

</div>


      <div data-gid="IC_kwDOAzDwU86QiH-X" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiH-X/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/LalOpen/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/LalOpen"><img src="https://avatars.githubusercontent.com/u/92826217?s=80&amp;v=4" width="40" height="40" alt="@LalOpen"></a>

</p>


  <div data-body-version="d0afd84e1676eab8bd8c3b4c37488b151bb27cd022d29d34546ff86650621df2" id="issuecomment-2424864663">

        <task-lists disabled="" sortable="">
<div>
          <blockquote>
<p dir="auto">Very disappointed since I have pushed a lot of people toward Bitwarden.</p>
</blockquote>
<p dir="auto">Same to me. And I quite regret it now...</p>
      </div>
</task-lists>


        
      </div>

</div>




        <div data-gid="IC_kwDOAzDwU86QiIAO" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiIAO/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/russeg/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/russeg"><img src="https://avatars.githubusercontent.com/u/55029299?s=80&amp;v=4" width="40" height="40" alt="@russeg"></a>

</p>


  <div data-body-version="a72334f6203b8fdb2a026e47ed01a443a09bbe1de923761dbb2dcb992858ce62" id="issuecomment-2424864782">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">Spirit of open source died long time ago. Open source is now a business model.</p>
      </div>
</task-lists>


        
      </div>

</div>


        <div data-gid="IC_kwDOAzDwU86QiIHJ" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiIHJ/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/kspearrin/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/kspearrin"><img src="https://avatars.githubusercontent.com/u/1190944?s=80&amp;v=4" width="40" height="40" alt="@kspearrin"></a>

</p>


  <div data-body-version="ac58934bc7532099177bc2d06a6487d3d39c4732cb298fb56bc8c2506f6b5ad3" id="issuecomment-2424865225">

        <task-lists disabled="" sortable="">
<div>
          <p dir="auto">Hi <a data-hovercard-type="user" data-hovercard-url="/users/brjsp/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/brjsp">@brjsp</a>,<br>
Thanks for sharing your concerns here.&nbsp;We have been progressing use of our SDK in more use cases for our clients. However, our goal is to make sure that the SDK is used in a way that maintains GPL compatibility.<br>
&nbsp;</p>
<ol dir="auto">
<li>the SDK and the client are two separate programs</li>
<li>code for each program is in separate repositories</li>
<li>the fact that the two programs communicate using standard protocols does not mean they are one program for purposes of GPLv3</li>
</ol>
<p dir="auto">Being able to build the app as you are trying to do here is an issue we plan to resolve and is merely a bug.</p>
      </div>
</task-lists>


        
      </div>

</div>


        <div data-gid="IC_kwDOAzDwU86QiII0" data-url="/bitwarden/clients/comments/IC_kwDOAzDwU86QiII0/partials/timeline_issue_comment">

  <p><a data-hovercard-type="user" data-hovercard-url="/users/LalOpen/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/LalOpen"><img src="https://avatars.githubusercontent.com/u/92826217?s=80&amp;v=4" width="40" height="40" alt="@LalOpen"></a>

</p>


  <div data-body-version="8ff1cf8a4d042e10f4a2bb32aa5fcc5741b58848710f487597a0dfe0bf89618d" id="issuecomment-2424865332">

        <task-lists disabled="" sortable="">
<div>
          <blockquote>
<p dir="auto">Spirit of open source died long time ago. Open source is now a business model.</p>
</blockquote>
<p dir="auto">According to me, the spirit of open source still lives in free software philosophy.</p>
      </div>
</task-lists>


        
      </div>

</div>


        <div data-team-hovercards-enabled="" id="event-14749734051" data-gid="LOE_lADOAzDwU86atq_UzwAAAANvJxSj">

      

          <p><a data-hovercard-type="organization" data-hovercard-url="/orgs/bitwarden/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/bitwarden"><img src="https://avatars.githubusercontent.com/u/15990069?s=40&amp;v=4" width="20" height="20" alt="@bitwarden"></a>
<a data-hovercard-type="organization" data-hovercard-url="/orgs/bitwarden/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/bitwarden">bitwarden</a>




        locked and limited conversation to collaborators


      </p><a href="#event-14749734051"><relative-time datetime="2024-10-20T11:30:40Z">Oct 20, 2024</relative-time></a>

    </div>



  <!-- Rendered timeline since 2024-10-20 04:30:40 -->
  
</div>


  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Best Darn Grid Shader (Yet) (2023) (118 pts)]]></title>
            <link>https://bgolus.medium.com/the-best-darn-grid-shader-yet-727f9278b9d8</link>
            <guid>41893987</guid>
            <pubDate>Sun, 20 Oct 2024 08:50:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bgolus.medium.com/the-best-darn-grid-shader-yet-727f9278b9d8">https://bgolus.medium.com/the-best-darn-grid-shader-yet-727f9278b9d8</a>, See on <a href="https://news.ycombinator.com/item?id=41893987">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2 id="93b2">The Competition</h2><h2 id="fce6">Con-text-ure (Texture Based Grid)</h2><figure></figure><p id="8e79">This is using Rotated Grid Super Sampling from<a rel="noopener" href="https://bgolus.medium.com/sharper-mipmapping-using-shader-based-supersampling-ed7aadb47bec"> my article on Sharper Mipmapping</a>, along with 16x Anisotropic filtering. This is basically as good as a simple texture based grid can look while still being reasonably performant.</p><p id="8f1c">And it seems simple enough to write a grid shader. Making grid lines in a shader is one of those early things you see in shader tutorials. So why have I been obsessed with this for so long? Because it’s harder than it might look to get right, and I <em>know </em>a shader based solution could look even better. Really that’s it. I just wanted to understand the problem space better.</p><p id="e3d1">Lets look a little closer at the above texture based grid to see some of the problem areas that still show up.</p><figure></figure><p id="8d35">As you can see some of the thin lines still end up aliasing, in the far mid range there’s some aliasing and Moiré patterns, and in the far distance the lines end up getting fatter and then cutting off early as the anisotropic filtering runs out of steam. They’re also only stay sharp close up if you have a large enough texture, otherwise they start to get a little blurry.</p><figure><figcaption>RGSS Texture Grid blurring on extreme closeup</figcaption></figure><h2 id="2311">MyFirstGrid.shader (Common Grid Shaders)</h2><p id="3bff">So what about one of those tutorial grid shaders? Start with a repeating UV. Draw some lines using a <code>smoothstep()</code> and <code>fwidth()</code>. And we’re done!</p><p id="fac1">Right? <em>(Don’t worry, I’ll show the code later.)</em></p><figure></figure><p id="adfb">But there’s a catch. Most example grid shaders, like this one, use screen space width lines. That can be preferred over a texture based grid in a lot of use cases, and honestly probably what most people want. But it’s not what I’m trying to achieve. As the lines of that kind of grid go into the distance, eventually the each grid cell is less than a pixel wide, and thus the lines converge into a solid color that’s the same color as the lines.</p><p id="99e8">That’s not what happens with a texture based grid. With a texture based grid, the lines themselves have perspective and get thinner the further away they are. Eventually fading out once below pixel wide.</p><figure></figure><p id="3a6c">They both converge solid color, but the texture based grid converges to a color that’s relative to the line coverage of the grid cell area.</p><figure></figure><p id="4bc3">Not to mention the obvious Moiré patterns once the grid gets smaller than a pixel across.</p><p id="2ad9">Most of the example shaders I’ve seen in the past that do try to do lines that are constant world space or UV space width don’t really handle this properly. They usually use a UV space faded edge or no line anti-aliasing at all, both of which end up aliasing horribly in the distance. Or they cheat and fade out the lines at some arbitrary distance to hide the artifacts. And the ones that <em>don’t</em> fade the lines out just end up looking similar to constant pixel width line grids in the distance. Only with worse aliasing and more pronounced Moiré patterns.</p><figure></figure><p id="bc32">None of this matches what a texture based grid looks like. Though it does at least mostly match the perspective on the individual lines themselves.</p><figure></figure><h2 id="24f7">Choo Choo! (Filtered Pulsetrain)</h2><p id="2315">But there are some existing examples that look to solve it properly. One was pointed out to me recently, but has been around for far longer than I’ve been writing shaders. This technique was published in <a href="https://books.google.com/books?id=6_4VaJiOx7EC&amp;q=Pulsetrain#v=onepage&amp;q&amp;f=false" rel="noopener ugc nofollow" target="_blank">Apodaca, Anthony A., and Larry Gritz, eds. 1999. Advanced RenderMan: Creating CGI for Motion Pictures</a>. And later in <a href="https://web.archive.org/web/20220629212902/http://weber.itn.liu.se/~stegu/TNM084-2016/RenderMan_20/basicAntialiasing.html" rel="noopener ugc nofollow" target="_blank">RenderMan’s documentation</a>. The filtered pulsetrain.</p><figure></figure><p id="6909">This technique is intended to solve the exact issue I’ve been trying to. They analytically solved the integral for a convolved pulsetrain. Which, if you’re like me and didn’t finish their college level math courses, means absolutely nothing. I dropped out of art school, so it’s mostly over my head.</p><p id="bfa9">The short version is the function returns the ratio of line to not line within an arbitrary range. And it works <em>incredibly </em>well. Compared to the texture based grid it’s nearly a perfect match in terms of how it handles fading into the distance.</p><figure></figure><p id="f30b">At least at first glance. Closer inspection shows some issues.</p><figure></figure><p id="bebc">While it matches the perceptual brightness of a texture based grid, and there’s no aliasing in the foreground, the aliasing and Moiré in the mid to far distances are significantly worse. Essentially all visible line anti-aliasing disappears. It’s better than no anti-aliasing at all, and the Moiré patterns are less apparent than the pixel and UV width line grids. But this is still not as clean as I was expecting it to be.</p><p id="a8bd">Interestingly there’s this note in the book:</p><figure></figure><blockquote><p id="3c59">… the most egregious aliasing is gone.</p></blockquote><p id="6051">The most <em>egregious</em>, but not <em>all</em>. I have to assume the original authors knew it didn’t remove all aliasing, but were happy enough with the results to not go further with it. And subsequent people using it also didn’t care, or just didn’t look close enough to notice?</p><h2 id="0ae8">Hi IQ (Box Filtered Grid)</h2><p id="636c">There’s also the example from Inigo Quilez in his article on <a href="https://iquilezles.org/articles/filterableprocedurals/" rel="noopener ugc nofollow" target="_blank">filterable procedurals</a>, the box filtered grid.</p><figure></figure><p id="ebec">The box filtered grid function <em>does </em>solve some issues with the filtered pulsetrain, mainly the fact it is highly sensitive to precision and thus starts showing noise artifacts not far away from the origin. But they otherwise behave roughly the same. That includes the same aliasing problems in the mid to far distance.</p><figure></figure><p id="d44a">Though they are <em>slightly </em>different in the aliasing and Moiré patterns each show.</p><figure></figure><p id="a19a">Now while I understand from a high level how both shaders work, I’m simply not smart enough at mathing to understand how to modify them to get what I wanted.</p><h2 id="0b25">The Contender</h2><p id="fc1e">Actually, what <em>do </em>I want from a grid shader? I want:</p><ul><li id="e063">User configurable line widths.</li><li id="54b1">Lines that have perspective thickness, not just a constant pixel width.</li><li id="1d3f">No aliasing at all, at any distance or view orientation.</li><li id="346e">A line width of 0.0 or 1.0 should show completely hidden or filled.</li><li id="fe86">Limited Moiré interference patterns.</li><li id="16a0">Blends to the same value in the distance that texture based grids do.</li><li id="9184">Usable for real time rendering in place of alternative techniques.</li></ul><p id="d150">So, I went back to the shaders I <em>do </em>know well, the pixel and UV width line grids. And then decided to start poking at those to see what I could change to make it work how I wanted. Or rather, start with a single line and build up from there.</p><p id="9419">Lets do a very quick overview of what makes for a basic grid shader with user configurable line widths.</p><p id="9617">First we need to draw a single line.</p><h2 id="3e73">Line One, Begin(ner Line Shader)</h2><p id="aa09">The way I like to draw lines is using the <code>smoothstep()</code> function.</p><pre><span id="1054">float lineUV = abs(uv.x * 2.0);<br>float line = smoothstep(lineWidth + lineAA, lineWidth - lineAA, lineUV);</span></pre><p id="bd39">The UV is used as a gradient. I then use an <code>abs()</code> on the UV so the gradient is positive on both sides of 0.0, and thus the <code>smoothstep()</code> is applied to both sides and we get a line instead of just an edge. Why do I multiply the UV by 2? This is so the <code>lineWidth</code> and <code>lineAA</code> can be specified in total width instead of half widths, or needing to divide them by 2.</p><p id="7d3d">For now lets use the world position as the UV, and some arbitrary values for lineWidth and lineAA. And that gets us this:</p><figure><figcaption>basic line</figcaption></figure><p id="1b51">The problem with this is the anti-aliasing fails in the distance, and gets blurry in the foreground. Why? Because the width of the edge gradient needs to change depending on the angle and distance from the camera. To do that we can use one of my favorite tools, screen space partial derivatives. Something I’ve written about a <a rel="noopener" href="https://bgolus.medium.com/anti-aliased-alpha-test-the-esoteric-alpha-to-coverage-8b177335ae4f">few</a> <a rel="noopener" href="https://bgolus.medium.com/normal-mapping-for-a-triplanar-shader-10bf39dca05a">times</a> <a rel="noopener" href="https://bgolus.medium.com/sharper-mipmapping-using-shader-based-supersampling-ed7aadb47bec">in</a> <a rel="noopener" href="https://bgolus.medium.com/progressing-in-circles-13452434fdb9">my</a> <a rel="noopener" href="https://bgolus.medium.com/rendering-a-sphere-on-a-quad-13c92025570c">previous</a> <a rel="noopener" href="https://bgolus.medium.com/distinctive-derivative-differences-cce38d36797b">articles</a>. The short explanation is you can get how much a value changes between one pixel and the one next to it, either vertically or horizontally. And by getting the partial derivatives of the starting UV, we can know how wide the <code>smoothstep()</code> needs to be in UV space to appear 1 pixel wide.</p><pre><span id="268d">float lineAA = fwidth(uv.x); //<br>float lineUV = abs(uv.x * 2.0);<br>float line = smoothstep(lineWidth + lineAA, lineWidth - lineAA, lineUV); //</span></pre><figure><figcaption>anti-aliased line</figcaption></figure><p id="07ee">And now the line’s edges are nice and sharp. Note, I’m getting the derivatives of the UV <em>before</em> doing any modifications to them. This keeps them in the “full width” scale, and also avoids some issues in the next step.</p><p id="89cd">Lets make this a repeating line instead of just a single line.</p><pre><span id="018e">float lineAA = fwidth(uv.x);<br>float lineUV = 1.0 - abs(frac(uv.x) * 2.0 - 1.0); //<br>float line = smoothstep(lineWidth + lineAA, lineWidth - lineAA, lineUV);</span></pre><figure><figcaption>anti-aliased repeating line</figcaption></figure><p id="67d0">To explain that funky bit of code I’m doing to the UV, this is transforming a sawtooth wave into a triangle wave, and then making sure the zero points align with where they were before.</p><p id="b1f5">We’re starting with a <code>lineUV</code> like this:</p><figure><figcaption>abs(uv.x * 2.0)</figcaption></figure><p id="3529">Using <code>frac(uv.x)</code> instead gets you this:</p><figure><figcaption>frac(uv.x)</figcaption></figure><p id="81f3">Then the <code>abs(frac(uv.x) * 2.0 - 1.0)</code> gets you this:</p><figure><figcaption>abs(frac(uv.x) * 2.0–1.0)</figcaption></figure><p id="3185">But that has the “0.0" position starting at 1.0 instead of 0.0, so when we draw the lines they’ll be offset by half a period. So we add that <code>1.0 -</code> at the start to get this:</p><figure><figcaption>1.0-abs(frac(uv.x) * 2.0–1.0)</figcaption></figure><p id="55aa">And now when we draw the lines the “first” line’s position matches that single line we had before.</p><p id="8d78">Now, lets make it into a full grid. To do that we just need to do these steps to both axis of the UV, and combine the results.</p><pre><span id="1041">float2 lineAA = fwidth(uv);<br>float2 gridUV = 1.0 - abs(frac(uv) * 2.0 - 1.0);<br>float2 grid2 = smoothstep(lineWidth + lineAA, lineWidth - lineAA, gridUV);<br>float grid = lerp(grid2.x, 1.0, grid2.y); //</span></pre><p id="04cc">And that gets us a basic UV width line grid shader!</p><p id="5c3b">That <code>lerp(grid2.x, 1.0, grid2.y)</code> should probably get a little explaining. How to combine the two axis of repeating lines for a grid shader has something I was long confused about. I’d use <code>max(x, y)</code>, or <code>saturate(x + y)</code>, or a few other ways to combine them and they never quite felt right to me. It took me quite a while before I thought about it in terms of “how would I overlap two transparent things normally?” I’d use an alpha blend. In this case, that <code>lerp()</code> is equivalent to a premulitplied alpha blend, which you could also write like this:</p><pre><span id="0a53">float grid = grid2.x * (1.0 - grid2.y) + grid2.y;</span></pre><p id="b732">Alternatively, if you write the shader such that you have black lines on a white background, multiplying the axis together <em>also </em>produces the equivalent of a premultiplied blend. Note the + and - in the <code>smoothstep()</code> are swapped in the below example compared to the first one.</p><pre><span id="752a">float2 lineAA = fwidth(uv);<br>float2 gridUV = 1.0 - abs(frac(uv) * 2.0 - 1.0);<br>float2 grid2 = smoothstep(lineWidth - lineAA, lineWidth + lineAA, gridUV); //<br>float grid = 1.0 - grid2.x * grid2.y; //</span></pre><p id="fb0c">However I’ll be continuing to use the original code sample as they end up exactly the same in the end.</p><p id="5747">In retrospect using a premultiplied blend felt incredibly obvious, but it took over a decade for it to click for some reason. This is after I’ve written countless shaders that have done exactly this for other use cases. I even wrote an <a rel="noopener" href="https://bgolus.medium.com/the-team-color-problem-b70ec69d109f">entire article</a> on this exact topic.</p><p id="aadd">Anyhoo, with that bit of code, we get this:</p><figure><figcaption>anti-aliased grid</figcaption></figure><p id="1181">Looks pretty good, apart from the Moiré patterns. But we were expecting that. Now lets reduce the line widths down a bit to something closer to what one might actually use.</p><figure><figcaption>“anti-aliased” grid</figcaption></figure><p id="a79c">Uh oh. It looks good when the lines are close to the camera. But the lines start to alias pretty quickly. We saw these issues earlier in this article when I showed the constant UV width line grid before, but this looks <em>slightly</em> darker and more aliased than that original example. Why?</p><figure><figcaption>latest vs previous examples</figcaption></figure><p id="5092">Well, because there’s one minor difference between the code used between the two. I use a 1.5 pixel wide AA when using <code>smoothstep()</code>. The reason for this is is because <code>smoothstep()</code> sharpens the edge gradient being used for anti-aliasing such that a 1.5 pixel wide smoothstep has a roughly similar slope to a 1 pixel wide linear gradient.</p><figure><figcaption>linear slope vs 1.5 unit wide smoothstep</figcaption></figure><p id="1c60">A 1 pixel wide smoothstep can then be <em>too</em> sharp. The reason for using a smoothstep at all is because when using a 1.5 pixel wide smoothstep adds just a small bit of extra anti-aliasing without affecting the perceived sharpness of the line vs a 1 pixel wide linear gradient.</p><figure></figure><p id="0869">To be fair, this is an <em>increadibly </em>small difference. But HLSL’s<code>smoothstep()</code> is still nice because it additionally acts as an inverse lerp (aka remap) and clamping the value between 0.0 and 1.0. So it helps with simplifying the code. It also doesn’t entirely remove the perceived aliasing still, but we’ll come back to that.</p><p id="af72">In the end we have this shader code for our constant UV width grid:</p><pre><span id="2bbf">float2 uvDeriv = fwidth(uv); //<br>float2 lineAA = uvDeriv * 1.5; //<br>float2 gridUV = 1.0 - abs(frac(uv) * 2.0 - 1.0);<br>float2 grid2 = smoothstep(lineWidth + lineAA, lineWidth - lineAA, gridUV);<br>float grid = lerp(grid2.x, 1.0, grid2.y);</span></pre><figure></figure><p id="3df8">What about a constant <em>pixel</em> width line grid? Well, that’s a trivial change. Multiply the line width by the derivatives! (Just remember,<code>lineWidth</code> is now the number of pixels wide the line is and not a value between 0.0 and 1.0.)</p><pre><span id="b6b3">float2 uvDeriv = fwidth(uv);<br>float2 drawWidth = uvDeriv * lineWidth; //<br>float2 lineAA = uvDeriv * 1.5;<br>float2 gridUV = 1.0 - abs(frac(uv) * 2.0 - 1.0);<br>float2 grid2 = smoothstep(drawWidth + lineAA, drawWidth - lineAA, gridUV); //<br>float grid = lerp(grid2.x, 1.0, grid2.y)</span></pre><figure></figure><p id="dba0">Now we’re back to where we were earlier in the article. And have two shaders that fulfil at least two of my requirements. But we haven’t solved any of the problems we didn’t already know how to solve and one only has the perspective lines and the other solves most of the aliasing.</p><p id="d572">So lets focus on a single line for the moment instead of a whole grid. How can we make a single line have both the perspective thickness and no aliasing?</p><h2 id="e8a6">Phoning It In (Phone-wire AA)</h2><p id="5aa2">One of my favorite tricks for anti-aliasing lines comes from Emil Persson. Specifically his Phone-wire AA example.</p><p id="0929">The basic idea behind this technique is don’t let something get thinner than one pixel. Instead clamp the size of the thing so it stays at least one pixel wide and then fade it out. This ends up looking much better than just letting a line get thinner than one pixel as if you do that it will always end up aliasing. The two bits of magic are how you keep things one pixel wide, and more importantly how <em>much</em> you fade them out by.</p><p id="c634">In Emil Persson’s example, he uses knowledge about how wide the wire geometry is, the distance from the camera each vertex is, and camera’s projection matrix to keep the wires one pixel thick. But for this shader, we can use those partial derivatives again! We just need to limit how thin line gets in screen space. Basically, we combine the two shaders we already have, and take the max of the UV line width and UV derivatives.</p><pre><span id="3985">float uvDeriv = fwidth(uv.x);<br>float drawWidth = max(lineWidth, uvDeriv); //<br>float lineAA = uvDeriv * 1.5;<br>float lineUV = abs(uv.x * 2.0);<br>float line = smoothstep(drawWidth + lineAA, drawWidth - lineAA, lineUV);</span></pre><figure><figcaption>Pixel Width Limited Line</figcaption></figure><p id="01e5">That’s the first trick. But the second one is the big one. We fade out the line based on how thick we <em>wanted</em> them divided by how thick we’re <em>drawing</em> them.</p><pre><span id="b915">float uvDeriv = fwidth(uv.x);<br>float drawWidth = max(lineWidth, uvDeriv);<br>float lineAA = uvDeriv * 1.5;<br>float lineUV = abs(uv.x * 2.0);<br>float line = smoothstep(drawWidth + lineAA, drawWidth - lineAA, lineUV);<br>line *= saturate(lineWidth / drawWidth); //</span></pre><figure><figcaption>Phone-wire AA Line</figcaption></figure><p id="0e64">Looking good! You can actually see the perspective of that line even when it’s thin. And there’s no aliasing in the distance!</p><figure><figcaption>Phone-wire AA Line</figcaption></figure><p id="e121">Of note, this <em>also</em> solves the issue of having the line not fully disappear when the intended line width is zero! It’ll gracefully fade the line out the thinner and thinner it gets, just like it does as it recedes into the distance, eventually fading out entirely when it gets to zero.</p><p id="a61e">With that working, lets go back to a full grid again.</p><pre><span id="243e">float2 uvDeriv = fwidth(uv);<br>float2 drawWidth = max(lineWidth, uvDeriv); //<br>float2 lineAA = uvDeriv * 1.5;<br>float2 gridUV = 1.0 - abs(frac(uv) * 2.0 - 1.0);<br>float2 grid2 = smoothstep(drawWidth + lineAA, drawWidth - lineAA, gridUV);<br>grid2 *= saturate(lineWidth / drawWidth); //<br>float grid = lerp(grid2.x, 1.0, grid2.y);</span></pre><figure></figure><p id="0de2">Much better! … sort of. That doesn’t look quite right. It’s fading to black at the horizon! As a reminder, the texture based grid fades to a grey, <em>not </em>black.</p><figure></figure><p id="c072">The problem is in a grid a single line can only get so wide before it’s wider than an entire grid cell width. When it’s a single line by itself, this isn’t an issue. But when it’s drawn as a grid, in the areas it’s going black a single pixel is wider than multiple overlapping grid widths. But we’re still only drawing a single set of lines in each pixel, not multiple grid cells worth.</p><p id="1a60">Where I got stuck for a long time in writing these shaders is what to do next. And I focused far too long on trying to figure out how to properly calculate the value to fade the line by, but nothing really seemed to fix it properly. I’m sure this is solvable, but remember how I said I was an art school drop out? Yeah, I’m not the one who’s going to figure that out. I’m going down this path because I’m not mathy enough to do it the “right” way.</p><p id="36a1">The closest I got going down that path was trying to clamp the value I was dividing the line width by to a max of 1.0. My theory being if the line can’t be wider than one pixel, don’t divide by more than 1. And while this is <em>better</em>, it’s still not correct.</p><pre><span id="b4a9">grid2 *= saturate(lineWidth / max(1.0, drawWidth));</span></pre><figure></figure><p id="a15c">It’s very subtle, but this results in there being a bit of a dark “gutter” at the transition between the individually distinguishable lines and the mostly solid color at the horizon.</p><figure></figure><p id="b9a2">As shown before, the filtered pulsetrain and box filtered grid <em>do </em>solve this problem. Not by fading lines exactly, but by always calculating the total coverage of all possible lines within the current pixel’s coverage. But as I’ve shown, neither properly handle <em>anti-aliasing</em> of those lines! And again, art school drop out here. I don’t have the knowledge to do it the way they did.</p><p id="9941">So now what?</p><h2 id="31a7">Right At The Wrong Place</h2><p id="9fdf">After a few years of getting about this far and not really getting any further, I recently sat down and tried to think through it more. Why didn’t that code work? It <em>feels</em> like it should, so what was I missing?</p><p id="857d">Well, it turns out I was doing the right thing. I just in the wrong place in the code. If I limited the <em>actual</em> <code>drawWidth</code>, it works!</p><pre><span id="65f6">float2 uvDeriv = fwidth(uv);<br>float2 drawWidth = clamp(lineWidth, uvDeriv, 0.5); //<br>float2 lineAA = uvDeriv * 1.5;<br>float2 gridUV = 1.0 - abs(frac(uv) * 2.0 - 1.0);<br>float2 grid2 = smoothstep(drawWidth + lineAA, drawWidth - lineAA, gridUV);<br>grid2 *= saturate(lineWidth / drawWidth);<br>float grid = lerp(grid2.x, 1.0, grid2.y);</span></pre><figure></figure><p id="b067">Yes, the Moiré is a bit more pronounced, but the overall brightness is finally correct!</p><p id="b90e">A curious thing is I’m clamping the draw width to 0.5, <em>not</em> 1.0. If I use 1.0 it’s too dark on the horizon again.</p><pre><span id="8f7f">float2 drawWidth = clamp(lineWidth, uvDeriv, 1.0);</span></pre><figure></figure><p id="8c8c">If your thought is “well, maybe you just needed to use 0.5 in the previous attempt?” Nope, that’s too bright!</p><pre><span id="dd2c">grid2 *= saturate(lineWidth / max(0.5, drawWidth));</span></pre><figure></figure><p id="e387">Why is 0.5 the correct value to clamp the draw width? Well, it has to do with the way the line anti-aliasing works.</p><p id="2e5e">If we look at some width limited lines without any fading code. If the we manually override the <code>uvDeriv</code> used, we can see how the lines expand and smooth out as they would getting further from the camera.</p><figure></figure><p id="d4a6">When limited to a width of 0.5, like above, it means there’s an equal amount of area that’s above and below 0.5 (the red line). Meaning the average value across the whole vertical is 0.5 beyond a <code>uvDeriv</code> of 0.5.</p><p id="d7c1">This average of 0.5 means when we fade the line out, and also dividing by 0.5, that’s dividing by the same (average) intensity we know those pixels will be.</p><p id="3ac3">If limited to a width of 1.0, we get this instead.</p><figure></figure><p id="3039">Now anywhere past a <code>uvDeriv</code> of 1.0 is <em>above</em> an average of 0.5, with how much above depending on how large the <code>uvDeriv</code> is. But it’s also <em>not </em>an average of 1.0! This is important because the math fading it out assumes it is, resulting in it getting too dark, which is what we saw in the failed example 2.</p><p id="a855">If we <em>don’t </em>limit the line width, and only limit the value we divide by, the “0.5” point disappears entirely as it’s being cut off by the edge of the grid cell, meaning the average brightness is even <em>more</em> above 0.5, but also still not 1.0! And that means if we clamp only the value we divide by in the fade calculation to 0.5 it stays too bright, which is what we saw in the failed example 3.</p><p id="44e3">This is probably the hardest aspect of this whole thing to explain, so I apologize if it’s still confusing.</p><h2 id="1d80">It’s A Moiré (Interference Pattern Suppression)</h2><p id="490f">However we’re still left with those more pronounced Moiré patterns. This is because we still don’t handle when the grid cells are smaller than a single pixel. It correctly averages to the appropriate value, but that’s not really the only issue. And this is where I decided to cheat a little. Remember how one of my main goals is to limit Moiré patterns as much as possible? Well, this is one place where I want to diverge heavily from how a texture based grid, or even ground truth, would look. Those will always have some Moiré artifacts because that’s really what happens when viewing a fine grid.</p><p id="38f4">So instead of figuring out how to do all the math to calculate it the correctly, why not fade to a solid color? Yes, I know it was one of the things I lambasted about a lot of other implementations, but I’m not going to fade just based on some arbitrary distance. I’m going to fade out based on when I know those Moiré patterns are going to appear. And how do you do that? Easy! Using the same UV derivatives we’re already using for anti-aliasing!</p><pre><span id="8634">float2 uvDeriv = fwidth(uv);<br>float2 drawWidth = clamp(lineWidth, uvDeriv, 0.5);<br>float2 lineAA = uvDeriv * 1.5;<br>float2 gridUV = 1.0 - abs(frac(uv) * 2.0 - 1.0);<br>float2 grid2 = smoothstep(drawWidth + lineAA, drawWidth - lineAA, gridUV);<br>grid2 *= saturate(lineWidth / drawWidth);<br>grid2 = lerp(grid2, lineWidth, saturate(uvDeriv * 2.0 - 1.0)); //<br>float grid = lerp(grid2.x, 1.0, grid2.y);</span></pre><figure></figure><p id="8a89">The idea here is once the derivatives are greater than 1.0, the grid cells are smaller than a pixel, which is when the Moiré patterns start to appear more noticeably. So this starts to fade to a solid color when the derivatives are 0.5, which is when the anti-aliased lines start to merge. And finishes fading when the derivatives are 1.0.</p><p id="6501">And that’s it! All six of the items on my list for a “perfect” grid shader are satisfied! So we’re done, right?</p><h2 id="ee31">Flipping Out (Line Inversion)</h2><p id="752f">Well, sort of. What happens when you try to make the grid lines wider than 0.5? Nothing, because we clamped the line width to 0.5. This is obviously for a very niche use case, but technically I’ve only succeeded in half of the requirement of “0.0 or 1.0 should show completely hidden or filled”. A line width of 0.0 will hide that axis entirely, but a 1.0 will cap out at a width of 0.5. But if we let lines get wider than that, things go wonky with the above math.</p><p id="637e">The final trick is we never actually draw lines more than half a grid width wide. Instead if the line width is over 0.5, we flip a few things around and effectively draw black lines on white offset by half a grid width. This means most of the math doesn’t have to change.</p><pre><span id="ebba">float2 uvDeriv = fwidth(uv);<br>bool2 invertLine = lineWidth &gt; 0.5; //<br>float2 targetWidth = invertLine ? 1.0 - lineWidth : lineWidth; //<br>float2 drawWidth = clamp(targetWidth, uvDeriv, 0.5); //<br>float2 lineAA = uvDeriv * 1.5;<br>float2 gridUV = abs(frac(uv) * 2.0 - 1.0);<br>gridUV = invertLine ? gridUV : 1.0 - gridUV; //<br>float2 grid2 = smoothstep(drawWidth + lineAA, drawWidth - lineAA, gridUV);<br>grid2 *= saturate(targetWidth / drawWidth);<br>grid2 = lerp(grid2, targetWidth, saturate(uvDeriv * 2.0 - 1.0));<br>grid2 = invertLine ? 1.0 - grid2 : grid2; //<br>float grid = lerp(grid2.x, 1.0, grid2.y);</span></pre><figure></figure><h2 id="bba3">One More Thing (Partial Derivative Length)</h2><p id="b538">There’s one last very small tweak to this shader that I make use of. That is that I don’t use <code>fwidth()</code>. The <code>fwidth()</code> function is an approximation for getting the length of the derivatives. That function looks something like this:</p><pre><span id="7d9e">float fwidth(float a)<br>{<br>  return abs(ddx(a)) + abs(ddy(a));<br>}</span></pre><p id="8d52">That’s <em>not</em> how you calculate the length of something. It’s accurate enough when things align to the screen axis, but on diagonals they’re always going to be too wide. The <em>correct</em> way to calculate the length of the derivatives is like this:</p><pre><span id="0683">float ddLength(float a)<br>{<br>  return length(float2(ddx(a), ddy(a)));<br>}</span></pre><p id="d806">Or is it? Inigo Quilez’s article on <a href="https://iquilezles.org/articles/checkerfiltering/" rel="noopener ugc nofollow" target="_blank">checkerboard filtering</a> contends the correct way to do it is to get the absolute max of the derivatives.</p><pre><span id="bfff">float ddMax(float a)<br>{<br>  return max(abs(ddx(a), abs(ddy(a)));<br>}</span></pre><p id="2a7f">Well, lets compare them and see which one looks better. This is going to require zooming in real close because the differences are minimal.</p><figure><figcaption>comparison of the derivative length calculations</figcaption></figure><p id="902f">And here I would say the <code>length()</code> option is the correct one. It strikes the right balance of sharpness without aliasing compared to the other two. It should be noted that <code>fwidth()</code> was never meant to be correct, just a fast approximation. And it <em>is</em> faster, but for modern GPUs the difference is negligible. And the <code>max()</code> method isn’t “wrong” either, just wrong for this use case. The way Inigo Quilez’s filtered procedurals work is different than this shader, so it’s likely correct for <em>that</em> use case. Though his Shader Toy examples all use a slightly different calculation with an arbitrary fudge factor added, so maybe it’s not correct for that use case either?</p><p id="51f7">Ultimately, it’s mostly subjective as to which looks best, and the <code>max()</code> method is just as cheap as <code>fwidth()</code> while being a potentially slightly better approximation. And it’s always good to check your assumptions on things like this by actually trying them out and doing direct comparisons.</p><p id="afe8">But, with that last tweak, the code looks like this:</p><pre><span id="1de1"><br>float4 uvDDXY = float4(ddx(uv), ddy(uv)); //<br>float2 uvDeriv = float2(length(uvDDXY.xz), length(uvDDXY.yw)); //<br>bool2 invertLine = lineWidth &gt; 0.5;<br>float2 targetWidth = invertLine ? 1.0 - lineWidth : lineWidth;<br>float2 drawWidth = clamp(targetWidth, uvDeriv, 0.5);<br>float2 lineAA = uvDeriv * 1.5;<br>float2 gridUV = abs(frac(uv) * 2.0 - 1.0);<br>gridUV = invertLine ? gridUV : 1.0 - gridUV;<br>float2 grid2 = smoothstep(drawWidth + lineAA, drawWidth - lineAA, gridUV);<br>grid2 *= saturate(targetWidth / drawWidth);<br>grid2 = lerp(grid2, targetWidth, saturate(uvDeriv * 2.0 - 1.0));<br>grid2 = invertLine ? 1.0 - grid2 : grid2;<br>float grid = lerp(grid2.x, 1.0, grid2.y);</span></pre><figure></figure><p id="c190">And lets compare this to to the other best looking options, the texture based grid and box filtered grid.</p><figure></figure><figure></figure><figure></figure><h2 id="5ef5">Conclusion</h2><p id="0289">I hope you’ll agree that we finally have the smoothest, most alias free, least Moiré patterned, most <em>pristine</em> gird shader you could possibly have. And one that in my eyes visually beats both texture based grids, and the previously best in class options.</p></div><div><p id="1cfa">At least until Mr. Quilez writes a shader that beats this one.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Origin of 'Daemon' in Computing (188 pts)]]></title>
            <link>https://www.takeourword.com/TOW146/page4.html</link>
            <guid>41891953</guid>
            <pubDate>Sun, 20 Oct 2024 00:35:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.takeourword.com/TOW146/page4.html">https://www.takeourword.com/TOW146/page4.html</a>, See on <a href="https://news.ycombinator.com/item?id=41891953">Hacker News</a></p>
<div id="readability-page-1" class="page"><div width="100%">
  <tbody><tr>
    <td><span face="Comic Sans MS"><span size="3" color="#800000"><img src="https://www.takeourword.com/images/sezYou.gif" width="111" height="112"></span><a name="Sez You..."><span size="6" color="#008000" face="Comic Sans MS">Sez You...</span></a>
      </span>
    </td>
  </tr>
  <tr>
    <td>



    <span face="Comic Sans MS">

    <a name="adaemon"></a>

    We were copied on this interesting e-mail discussion.</span>
    <p><span face="Comic Sans MS">From Richard Steinberg/Mr. Smarty Pants (The Austin Chronicle):</span></p>
    <blockquote>
      <p><span face="Comic Sans MS" color="#354A2F">Professor Corbato</span></p>
      <p><span face="Comic Sans MS" color="#354A2F">I write a trivia column for a newspaper called The Austin Chronicle.&nbsp;
      Someone has asked me the origin of the word <i>daemon</i> as it applies to computing. Best I can tell based on my research, the word was first used by
      people on your team at Project MAC using the IBM 7094 in 1963. The first daemon (an abbreviation for Disk And Executive MONitor) was a program that
      automatically made tape backups of the file system.&nbsp; Does this sound about right? Any corrections or additions?&nbsp;
      Thank you for your time!</span></p>
    </blockquote>
    <p><span face="Comic Sans MS" color="#800000">From Fernando J. Corbato:</span></p>
    <blockquote>
      <p><span color="#354A2F" face="Comic Sans MS">Your explanation of the origin of the word
      <i> daemon</i> is correct in that
      my group began using the term around that time frame.  However the acronym explanation is a new one on me.  Our use of the word
      <i> daemon</i>
      was inspired by the Maxwell's daemon of physics and thermodynamics.  (My background is Physics.)  Maxwell's daemon was an
      imaginary agent which helped sort molecules of different speeds and worked tirelessly in the background.  We fancifully began to use the
      word <i> daemon</i> to describe background processes which worked tirelessly to perform system chores.  I found a very good explanation
      of all this online at:</span></p>
      <p><a href="http://www.takeourword.com/TOW129/page2.html"><span color="#354A2F" face="Comic Sans MS">http://www.takeourword.com/TOW129/page2.html</span></a><span color="#354A2F" face="Comic Sans MS"><br>
      (Search on "Maxwell" to locate the pertinent paragraph.)</span></p>
      <p><span color="#354A2F" face="Comic Sans MS">To save you the trouble, I will cut-and-paste it right here.  It comes
      from a web-column entitled "Take Our Word For It" run by Melanie and Mike Crowley, etymology enthusiasts!</span></p>
      <blockquote>
        <p><span face="Comic Sans MS"><span color="#354A2F">------------------------------------<br>
        </span><span color="#000000">From Jan Danilo:&nbsp;</span></span></p>
        <blockquote>
          <p><span color="#008000" face="Comic Sans MS">I am interested in the origin of the word <i>daemon</i>.  I work in
          information technology and I have always heard of system processes referred to as daemons.  I assumed that it is an older spelling of
          <i>demon</i>.  Can you shed some light on this point?</span></p>
        </blockquote>
        <p><span color="#000000" face="Comic Sans MS">Why certainly.  Someone give us some of those phosphorescent genes
        that have recently been spliced to mice DNA and we'll shed light like mad.
        <i>  Demon</i> and <i> daemon</i> were once used interchangeably.  The former
        came to English from medieval Latin, while the latter was from classical Latin.  The earliest use appears to have been in the phrase
        <i>daemon of Socrates</i>, which was his "attendant, ministering, or indwelling spirit; genius".  That was in the late 14th century.  It
        was a short time later that the term <i> demon</i> came to refer to "an evil
        spirit" by influence of its usage in various versions of the Bible. The Greek form was used to translate Hebrew words for "lords, idols"
        and "hairy ones (satyrs)".  Wyclif translated it from Greek to English <i>fiend</i> or
        <i>devil</i>.  This is how the evil connotation arose.  By the late 16th century, the general supernatural meaning was being distinguished
        with the spelling <i>daemon</i>, while the evil meaning remained with <i>demon</i>.
        Today <i> daemon</i> can mean "a supernatural being of a nature intermediate
        between that of gods and men" or "a guiding spirit".</span></p>
        <p><span color="#000000" face="Comic Sans MS">[Warning: This paragraph is about science so, if this topic causes you
        undue alarm, please close your eyes until you've finished reading it.] The 19th century scientist
        James Maxwell once daydreamed (the polite term is "thought experiment") about a problem in physics.  He imagined a
        closed container which was divided in half.  In the middle of the divider was a tiny gate, just large enough to admit one molecule of
        gas.  This gate, in Maxwell's imagination, was operated by a tiny daemon.  This daemon observed the speed (i.e. temperature) of the
        molecules heading for the gate and, depending on the speed, let them through.  If he let only slow molecules pass from side A to side B and
        only fast molecules pass from side B to side A, then A would get hot while B cooled.  Maxwell's daemon was only imaginary, of course, but
        as it seemed to evade the laws of thermodynamics it caused quite a stir.  Eventually, though, the theory of quantum mechanics showed why
        it wouldn't work.  [OK, you may open your eyes, now.]</span></p>
        <p><span face="Comic Sans MS"><span color="#000000">As you probably know, the "system processes" called
        <i> daemons</i> monitor other tasks and perform predetermined actions depending on their
        behavior.  This is so reminiscent of Maxwell's daemon watching his molecules that we can only assume that whoever dubbed these "system
        processes" had Maxwell's daemon in mind.  Unfortunately, we have found no hard evidence to support this.&nbsp;
        </span><span color="#800000">[Now, of course, we have!]</span></span></p>
        <p><span face="Comic Sans MS"><span color="#000000">We also assume that this is the meaning behind the
        daemon.co.uk, host to many United Kingdom web sites.<br>
        </span><span color="#354A2F">--------------------------------</span></span></p>
      </blockquote>
    </blockquote>
    <p><span color="#800000" face="Comic Sans MS">Professor Jerome H. Saltzer, who also worked on
    Project MAC, confirms the Maxwell's demon explanation.&nbsp; He is
    currently working on pinpointing the origin of the erroneous acronym
    etymology for <i>daemon</i> in this sense.&nbsp; [We have edited Issue 129
    to reflect this confirmation of our original assumption.&nbsp; Isn't it
    wonderful to be able to trace a word to its source so cleanly?]</span>
    </p></td>
  </tr>

  <tr>
    <td>
 <span color="#800000" face="Comic Sans MS"><a name="baujus"></a>From Brad Daniels:</span>
 <blockquote>
  <p><span face="Comic Sans MS" color="#354A2F">While <i>au jus</i> does mean literally "with juice", it is short for
  <i>sauce au
  jus [de beouf]</i>, meaning "sauce made with juice [of beef]", so, saying "with au jus", while admittedly awkward, is not as wrong as it seems at first
  glance.&nbsp; OK, so maybe I could be an anti-curmudgeon after all.  Is there some
  requirement out there that I be consistent?</span></p>
 </blockquote>
 <p><span color="#800000" face="Comic Sans MS">But do you say "with <i>a la
 mode</i>"?</span>
 </p><p><span color="#800000" face="Comic Sans MS">From Fred Wells:</span>
 </p><blockquote>
 <p><span color="#354A2F" face="Comic Sans MS">RE: "and etc." and Ken Williams' comment about "with au jus", close but no cigar.
 <i> Avec</i> is French for "with"; <i> au</i> is French for "in".&nbsp; But, silly me, I just learned that from a high
 school friend.</span>
 </p></blockquote>
 <p><span face="Comic Sans MS">Sorry, Fred, but in this case <i>au</i> is
 usually translated as "with".&nbsp; Look at <i>cafe au lait</i>.&nbsp;
 You don't say "coffee in milk", do you?&nbsp; Tell your high school
 friend to study a bit harder, and don't believe everything you hear (the
 cardinal rule of critical thinking).</span></p><p><span face="Comic Sans MS">From
 Richard Hershberger:</span>
 </p><blockquote>
  <p><span color="#354A2F" face="Comic Sans MS">In the <i> Sez You</i> page of issue 145,  Ken Williams
  comments on the waitress who asked if he wanted his roast beef sandwich "with au jus", to which you
  responded with "Aaargh!"  While the waitress clearly was not fluent in French, her English was impeccable.&nbsp;
  English syntax requires a preposition in that construction.  "Au jus" lacks an English preposition,
  so she provided the one.  The fact that there is a French preposition in the phrase is irrelevant, since
  the construction as a whole has been adopted into English and reanalyzed to fit English syntax.  This is
  a normal process which has occurred innumerable times in the past.  It only seems incongruous because it is
  recent and because some of us have enough knowledge of French to recognize the original syntactical
  structure.</span>
 </p></blockquote>
 <p><span face="Comic Sans MS">Again, Barb and Malcolm ask, do you say
 "apple pie with <i>a la mode</i>"?&nbsp; They don't agree that the
 presence of a French preposition is irrelevant.&nbsp; To be consistent with
 constructions like "apple pie <i>a la mode</i>", one should not add
 an English preposition.&nbsp; The phrase <i>au jus</i> should be treated as an
 adjective if it isn't going to be parsed as a prepositional phrase.</span>
 </p><p><span face="Comic Sans MS">From Jane Harrington:</span>
 </p><blockquote>
  <p><span color="#354A2F" face="Comic Sans MS">Slightly off topic regarding the discussion "and etc" and Ken Williams's
  comment about "with au juice" I would like to contribute these "Canadianisms" for your enjoyment.</span></p><p><span color="#354A2F" face="Comic Sans MS">In Canada all labels must be in both official languages. To save space,
  these labels often use one common word between a French and an English descriptive word. As a result I have heard people refer to  "The Jeux
  Canada Games"  (Jeux Canada being the French name for The Canada Games) Another more common one is "old fort cheese" which I admit to using. Old
  fort cheese has almost become legitimate now. It has been used on  the CBC national radio programme "This Morning" at least twice, and if the
  CBC sanctions it, it must be correct.&nbsp; Thanks for many amusing discussions.</span>
 </p></blockquote>
 <p><span face="Comic Sans MS"><span color="#800000">Thanks, Jane!&nbsp; All of
 these are examples of <a href="https://www.takeourword.com/glossary.html#macaronic" target="_blank">macaronic</a>
 phrases.&nbsp; (Clicking on <i>macaronic</i> will
 take you to the glossary section of <i>Take Our Word For It.</i>) </span></span>
    </p></td>
  </tr>

  <tr>
    <td>
 <span face="Comic Sans MS"><a name="cWelshrarebit"></a>From Jane Irish Nelson:</span>
 <blockquote>
  <p><span color="#354A2F" face="Comic Sans MS">In [last] week's <i> Words to the
  Wise</i>, you wrote that the Welsh word
  for rabbit is <i>cwningen</i>.  I was struck by the apparent resemblance to the Spanish word for rabbit:
  <i>conejo</i>.  Do you know
  it the two are related?&nbsp; Thank you!  I love words and look forward to visiting your site
  each week.</span></p>
 </blockquote>
 <p><span color="#800000" face="Comic Sans MS">Thanks for the kind words!&nbsp;
 Read on.</span></p>
 <p><span color="#800000" face="Comic Sans MS">From Jeff Lee:</span></p>
 <blockquote>
  <p><span color="#354A2F" face="Comic Sans MS">In Issue 135 of TOWFI, you write:</span></p>
  <blockquote>
    <p><span color="#000000" face="Comic Sans MS">Of course there are rabbits in Wales! The Welsh word is
    <i> cwningen</i> (feminine gender, plural is <i>cwningod</i>) but we don't expect many English rabbits would stop at the border just because they can't speak Welsh.</span></p>
  </blockquote>
  <p><span color="#354A2F" face="Comic Sans MS">This reminds me of an old joke (from
  <i>Wits Fittes &amp; Fancies</i>, by Anthony Copley, 1595) which runs:</span></p>
  <blockquote>
    <p><span color="#354A2F" face="Comic Sans MS">A manie Schollers went to steale Conies, and by the
     way they warn'd a nouice among them to make no noise
     for feare of skarring the Conies away : At last he
     espying some, said aloud in Latine: "Ecce cuniculi multi."  And with that the Conies ranne into their
     berries : Wherewith his fellowes offended, and
     chyding him therefore, hee sayd: "Who (the Deu'll)
     would haue thought that Conies vnderstood Latine".</span></p>
  </blockquote>
  <p><span color="#354A2F" face="Comic Sans MS">Out of curiosity, my dictionary indicates that
  <i>cony</i> derives ultimately from <i>cuniculus</i>.  Is the Welsh <i>cwningen</i> related, or is it just a coincidence that they sound so similar?</span></p>
 </blockquote>
 <p><span face="Comic Sans MS">Yes, all of these rabbit words are related.&nbsp;
 The English and Welsh forms come from the Latin, and it is thought that Latin
 borrowed it from an ancient Iberian language.&nbsp; Good joke, by the way!</span></p>
    </td>
  </tr>

  <tr>
    <td>
 <span color="#800000" face="Comic Sans MS"><a name="dacros"></a>From Brad Daniels:</span>
 <blockquote>
  <p><span color="#354A2F" face="Comic Sans MS">Your letters on "ATM machine", "PIN number", etc. reminding me of some more
  common acronym abuse:&nbsp;</span></p>
  <p><span color="#354A2F" face="Comic Sans MS">The other day, I received an invitation exhorting me to "please RSVP".
  "Please respond please?"  Now, I know <i>R�pondez S'il Vous Plait</i> isn't English, but surely people know
  <i> RSVP</i> means "please respond".  And what about
  "RAM memory"?  Surely, it's obvious that <i> RAM</i> is an acronym (unless there's some new ovine technology out there), and even if you don't know the "Random
  Access" part, the "M" pretty obviously stands for "Memory".&nbsp; Hmm... Maybe I wouldn't make a good anti-curmudgeon after
  all.</span></p>
 </blockquote>
 <p><span color="#800000" face="Comic Sans MS">See!</span>
    </p></td>
  </tr>

  <tr>
    <td>
 <span face="Comic Sans MS"><a name="egolf"></a>From Lt. Maj. Michael Talbert:</span>
 <blockquote>
  <p><span color="#354A2F" face="Comic Sans MS">I think you treated the one who offered this as the origin of the term
  <i>golf</i> very kindly... "In Scotland, a new game was invented. It was entitled Gentlemen Only Ladies
  Forbidden.... and thus               the word GOLF entered into the English language."&nbsp;
  ...but have you done so at your own expense?  I would have been impressed to hear you point out that none of the words "gentlemen", "only", "ladies", and
  "forbidden" existed with the familiar meanings at the time the game golf is thought to have been invented.&nbsp;</span></p>
 </blockquote>
 <p><span face="Comic Sans MS">We didn't think such explanations
 necessary.&nbsp; We already gave the etymology of <i> golf</i> and gave a link back to
 that <a href="https://www.takeourword.com/Issue055.html">discussion</a>.&nbsp; Going on about how the words
 that make up the acronym are anachronistic&nbsp; as far as the word's timeline
 go would be like beating a dead horse.&nbsp; Also, we believe that the reader
 who wrote with that etymology was aware that it was ridiculous and sent it
 because he knew we'd get a kick out of it.</span></p>
 <blockquote>
  <p><span face="Comic Sans MS"><span color="#354A2F">However, if the modern name
  <i>golf</i> was only given to the game (however long
  the game itself existed) in recent enough linguistic times to accommodate the acronym, then your reader may be on to something...&nbsp;</span>
  <span color="#354A2F">Got a final word on the subject? Love your stuff!</span></span></p>
 </blockquote>
 <p><span color="#800000" face="Comic Sans MS">Our final word: <i>golf</i> is
 not an acronym.&nbsp; Read our discussion of its etymology.&nbsp; A very
 important rule of etymology which we cannot repeat often enough: few English
 words derive from acronyms (<i>sonar</i>, <i>radar</i>, <i>scuba</i> are some
 examples); very few derive from acronyms before the 20th century (don't even
 try to suggest <i>posh</i>!.&nbsp; We don't count <i>okay</i> as an acronym: if
 it were one, it would be pronounced "ock"). Read our <a href="https://www.takeourword.com/Issue063.html#Spotlight">past
 discussion of acronyms.</a></span>
    </p></td>
  </tr>

  <tr>
    <td>
      <span size="3" color="#800000" face="Comic Sans MS"><a name="fmorepepper"></a>From Simon Rumble:</span>
      <blockquote>
        <p><span size="3" face="Comic Sans MS" color="#354A2F">My main experience with the term
        <i> Piri Piri</i> has been through the Nando's chain of Portuguese (the chain is actually South African) chicken shops.  This link also supports the Portuguese origin:
        <a href="http://www.kingpiripiri.com/">http://www.kingpiripiri.com/</a>.&nbsp;
        However as avid colonizers, it's likely that the origin of the term is not Portuguese but one of their colonial victims...
        er, hosts.</span></p>
      </blockquote>
      <p><span size="3" face="Comic Sans MS" color="#800000">From Alan Wachtel:</span></p>
      <blockquote>
        <p><span size="3" face="Comic Sans MS" color="#354A2F">Rich Bowen wrote in Issue 145:</span></p>
        <blockquote>
          <p><span size="3" face="Comic Sans MS" color="#000000">I grew up in Kenya, where there is a large Indian community, and a lot of hot food, which we call
          <i>pilli pilli</i> or <i>piri piri</i> depending on ethnic origin. I had long wondered about the origin of this term, and I can see that it is a mutation of
          pippali.</span></p>
        </blockquote>
        <p><span size="3" face="Comic Sans MS" color="#354A2F">The most widely spoken language in Kenya, other than English, is Swahili. It's been a long, long time since I learned Swahili in the Peace Corps, but I still remember that the word for "pepper" is
        <i>pilipili</i>. It's easy to see how that could become <i>piripiri</i>. However, the term does not seem to have originated in Kenya's Indian community.</span></p>
        <p><span size="3" face="Comic Sans MS" color="#354A2F">The grammar of Swahili is
        Bantu. Most of its vocabulary is also Bantu, but it borrows many words from Arabic, Persian, Portuguese, German, and English, reflecting the region's trading and colonial history. According to the Oxford "Standard Swahili-English Dictionary,"
        <i> pilipili</i> is derived from a Persian word that I transliterate (with some difficulty, because I don't know the alphabet, and initial, medial, and final forms of letters are different) as
        <i> plpl</i> (vowels are not shown). Persian is closely related to Sanskrit, and the similarity to Sanskrit
        <i> pippali</i> is clear.</span></p>
        <p><i><span size="3" face="Comic Sans MS" color="#354A2F">Plpl</span></i> <span size="3" face="Comic Sans MS" color="#354A2F"> immediately reminded me of Hebrew pilpul, a form of Talmudic disputation that involves close examination of minute distinctions. Sure enough,
        <i> pilpul</i> is the Aramaic word, and cognate to the Hebrew word, for "pepper," from, I'm guessing, either the finely divided nature of the ground spice or its fiery taste.&nbsp;</span></p>
      </blockquote>
    </td>
  </tr>

  <tr>
    <td>
      <span size="3" color="#800000" face="Comic Sans MS"><a name="ghuh?"></a>From Catherne [sic] Hackett:</span>
      <blockquote>
        <p><span color="#354A2F" face="Comic Sans MS">[<i>Etc</i>.] is of latin [sic] derivation meaning "and the rest."  I don't know why I
        returned to your site.  It's still hopelessly WRONG.</span></p>
      </blockquote>
      <p><span face="Comic Sans MS">Er... sure.</span>
    </p></td>
  </tr>

  <tr>
    <td>
      <p><span face="Comic Sans MS"><a href="https://www.takeourword.com/TOW146/page3.html"><span size="3" color="#800000">PREVIOUS</span></a><span size="3" color="#800000">&nbsp;&nbsp;|&nbsp;
      <a href="https://www.takeourword.com/TOW146/page5.html">NEXT</a></span></span>
    </p></td>
  </tr>
</tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Regarding our Cease and Desist letter to Automattic (147 pts)]]></title>
            <link>https://wpfusion.com/business/regarding-our-cease-and-desist-letter-to-automattic/</link>
            <guid>41891799</guid>
            <pubDate>Sun, 20 Oct 2024 00:00:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://wpfusion.com/business/regarding-our-cease-and-desist-letter-to-automattic/">https://wpfusion.com/business/regarding-our-cease-and-desist-letter-to-automattic/</a>, See on <a href="https://news.ycombinator.com/item?id=41891799">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-id="9a0d523" data-element_type="column" data-widget_type="theme-post-content.default">
<p>To start, if you haven’t heard about the <a href="https://x.com/search?q=%23wpdrama">#wpdrama</a> that’s taken over WordPress in the last month, congratulations 😊. I imagine you’ve had a comparatively stress-free October, and hopefully got to spend lots of time outdoors.</p>
<p>There are <a href="https://www.youtube.com/watch?v=XoTToRfM3iA&amp;t=1s">many</a>, <a href="https://ikius.com/blog/wordpress-drama">many</a>, <a href="https://bullenweg.com/">many</a> posts, videos, and commentaries about everything that’s happened. I won’t go into the full details, but <strong>here’s a condensed version</strong> for those of you who are new here.</p>
<p><a href="#how-this-affects-wp-fusion">Skip to the next section</a> if you know all of this already.</p>
<h3 id="the-players"><a href="#the-players">#</a>The players</h3>
<h4 id="wordpress"><a href="#wordpress">#</a>WordPress</h4>
<p><a href="https://wordpress.org/">WordPress</a> is an open-source software platform for building websites. It’s what this site is built with 🧡. <a href="https://wpfusion.com/documentation/faq/what-can-i-do-with-it/">WP Fusion</a> is a plugin (another piece of software) that runs on your WordPress website, and helps you connect your website with your email marketing software.</p>
<p>By some estimates WordPress powers 43% of websites, so it’s kind of a big deal.</p>
<p>WordPress was created in 2003, based on another older piece of blogging software, by two guys named Mike and <strong>Matt</strong>.</p>
<p>Matt <a href="https://make.wordpress.org/core/handbook/about/organization/">continues to oversee development of WordPress</a>. He chooses who is allowed to work on it, and what features are prioritized for development.</p>
<h4 id="the-wordpress-foundation"><a href="#the-wordpress-foundation">#</a>The WordPress Foundation</h4>
<p><a href="https://wordpressfoundation.org/">The WordPress Foundation</a> is a non-profit organization that was founded in 2010. Its main goal is to protect open-source software and ensure that WordPress remains freely available and developed by a global community.</p>
<p><strong>The foundation holds the trademarks</strong> to the WordPress logo <a href="https://wordpressfoundation.org/trademark-policy/">and the name “WordPress”</a>, as well as “<a href="https://central.wordcamp.org/">WordCamp</a>“. The stated goal of the Foundation is to maintain the open-source nature of WordPress, independent from commercial interests.</p>
<p>The Foundation is <a href="https://www.pluginvulnerabilities.com/2024/09/24/who-is-on-the-wordpress-foundation-board/">also run</a> by <strong>Matt</strong>.</p>
<h4 id="wordpress-org"><a href="#wordpress-org">#</a>WordPress.org</h4>
<figure><picture fetchpriority="high" decoding="async">
<source type="image/webp" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/image-3-1024x761.png.webp 1024w, https://wpfusion.com/wp-content/uploads/2024/10/image-3-300x223.png.webp 300w" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201024%20761'%3E%3C/svg%3E" data-lazy-sizes="(max-width: 1024px) 100vw, 1024px">
<img fetchpriority="high" decoding="async" width="1024" height="761" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201024%20761'%3E%3C/svg%3E" alt="image" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/image-3-1024x761.png 1024w, https://wpfusion.com/wp-content/uploads/2024/10/image-3-300x223.png 300w, https://wpfusion.com/wp-content/uploads/2024/10/image-3-1536x1142.png 1536w, https://wpfusion.com/wp-content/uploads/2024/10/image-3-2048x1522.png 2048w" data-lazy-sizes="(max-width: 1024px) 100vw, 1024px" data-lazy-src="https://wpfusion.com/wp-content/uploads/2024/10/image-3-1024x761.png">
</picture>
</figure>
<p><a href="https://wordpress.org/">WordPress.org</a> is the home of the free and open-source WordPress project. It’s where anyone can go to download WordPress for free. It’s also where development on WordPress is organized, and conversations around WordPress happen <a href="https://make.wordpress.org/chat/">in the official Slack channel</a>, tied to each user’s account on WordPress.org.</p>
<p>WordPress.org is also the home of the <a href="https://wordpress.org/plugins/">plugin repository</a>, which is a directory of over 60,000 free plugins that anyone can download and install on their WordPress website.</p>
<p>WordPress.org plays a critical role in <a href="https://developer.wordpress.org/plugins/wordpress-org/detailed-plugin-guidelines/">ensuring plugins are secure and follow the open-source principles of the WordPress project</a> (free to use, modify, and distribute).</p>
<p>When a plugin author releases an update to a plugin on WordPress.org (like we regularly do with <a href="https://wordpress.org/plugins/wp-fusion-lite/">the free WP Fusion Lite</a>), WordPress.org sends the update out to everybody else’s WordPress sites. It’s like the <em>App Store</em> of WordPress.</p>
<p>WordPress.org is <a href="https://www.theverge.com/2024/10/4/24262232/matt-mullenweg-wordpress-org-wp-engine">personally owned</a> by <strong>Matt</strong>.</p>
<h4 id="wordpress-com"><a href="#wordpress-com">#</a>WordPress.com</h4>
<figure><picture decoding="async">
<source type="image/webp" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/image-4-1024x644.png.webp 1024w, https://wpfusion.com/wp-content/uploads/2024/10/image-4-300x189.png.webp 300w" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201024%20644'%3E%3C/svg%3E" data-lazy-sizes="(max-width: 1024px) 100vw, 1024px">
<img decoding="async" width="1024" height="644" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201024%20644'%3E%3C/svg%3E" alt="image" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/image-4-1024x644.png 1024w, https://wpfusion.com/wp-content/uploads/2024/10/image-4-300x189.png 300w, https://wpfusion.com/wp-content/uploads/2024/10/image-4-1536x966.png 1536w, https://wpfusion.com/wp-content/uploads/2024/10/image-4-2048x1289.png 2048w" data-lazy-sizes="(max-width: 1024px) 100vw, 1024px" data-lazy-src="https://wpfusion.com/wp-content/uploads/2024/10/image-4-1024x644.png">
</picture>
</figure>
<p><a href="https://wordpress.com/">WordPress.com</a> is a commercial website-building platform. It uses the free WordPress software, but it’s a hosted service. That means you don’t need to worry about setting up your own hosting or downloading the software—everything is managed for you. <strong>WordPress.com is run by a for-profit company called Automattic. </strong></p>
<p>Automattic is widely considered the largest hosting company in the WordPress space. It also <a href="https://automattic.com/about/">owns popular brands</a> such as <a href="https://woocommerce.com/">WooCommerce</a>, <a href="https://jetpack.com/">Jetpack</a>, <a href="https://www.tumblr.com/">Tumblr</a>, and (I was surprised to learn) <a href="https://longreads.com/">Longreads</a>.</p>
<p>Automattic is a privately held company, and is <strong>backed by private equity firms</strong> such as&nbsp;<a href="https://www.tigerglobal.com/">Tiger Global Management</a>,&nbsp;<a href="https://salesforceventures.com/">Salesforce Ventures</a>,&nbsp;<a href="http://insightpartners.com/">Insight Venture Partners</a>, and <a href="https://automattic.com/press/">others</a>. They generate about US$700 million per year in revenue, and <strong>have been valued at US $7.5 billion</strong>.</p>
<p>The founder and CEO of Automattic is, <strong>you guessed it, Matt.</strong></p>
<h3 id="conflict-of-interest"><a href="#conflict-of-interest">#</a>Conflict of interest</h3>
<p>Some have raised concerns about the legality of this business arrangement. I won’t get into those here.</p>
<p><strong>I think it’s enough to point out the inherent conflict of interest</strong> in having the same person: a.) act as the public face of the WordPress community, b.) protect the WordPress trademarks, and b.) guide the development of the open-source WordPress project, all while c.) his majority stake in the for-profit Automattic has given him a net worth <a href="https://andsimple.co/cases/matt-mullenweg-net-worth/">close to US$400 million</a>.</p>
<p>Matt has styled himself as the <a href="https://en.wikipedia.org/wiki/Benevolent_dictator_for_life">Benevolent Dictator for Life</a>, and we’re expected to trust that his priorities are aligned with promoting open source, fostering community well-being, and ensuring a level playing field for independent companies to thrive—without the risk of preferential treatment for Automattic or any other affiliated entities.</p>
<p>The drama over the past month (<a href="https://www.reddit.com/r/Wordpress/comments/1frdo1m/why_gutenberg_was_added_to_the_wordpress_core/">some might say over the past six years</a>), basically comes down to this conflict of interest, and <strong>to what degree you trust Matt to do the right thing</strong>.</p>
<h3 id="how-this-affects-wp-fusion"><a href="#how-this-affects-wp-fusion">#</a>How this affects WP Fusion</h3>
<p>On October 12th, Matt <a href="https://www.advancedcustomfields.com/blog/acf-plugin-no-longer-available-on-wordpress-org/">shocked many people in the WordPress community</a> by forcibly taking over a popular plugin on the wordpress.org repository called Advanced Custom Fields, which was in use on over 2 million websites.</p>
<p>“ACF” is <a href="https://www.advancedcustomfields.com/">developed by WP Engine</a>, a <strong>competitor of Automattic</strong>.</p>
<p>The plugin was re-titled “<a href="https://wordpress.org/plugins/advanced-custom-fields/">Secure Custom Fields</a>“, but otherwise unchanged. The plugin code, URL, file names, <a href="https://wordpress.org/plugins/advanced-custom-fields/#reviews">thousands of reviews</a>, and even links to documentation still referenced Advanced Custom Fields, which is <a href="https://tsdr.uspto.gov/#caseNumber=98321164&amp;caseSearchType=US_APPLICATION&amp;caseType=DEFAULT&amp;searchType=statusSearch">trademarked by WP Engine</a>.</p>
<div>
<figure><picture decoding="async">
<source type="image/webp" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/image.png.webp 960w, https://wpfusion.com/wp-content/uploads/2024/10/image-300x106.png.webp 300w" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20960%20340'%3E%3C/svg%3E" data-lazy-sizes="(max-width: 960px) 100vw, 960px">
<img decoding="async" width="960" height="340" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20960%20340'%3E%3C/svg%3E" alt="image" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/image.png 960w, https://wpfusion.com/wp-content/uploads/2024/10/image-300x106.png 300w" data-lazy-sizes="(max-width: 960px) 100vw, 960px" data-lazy-src="https://wpfusion.com/wp-content/uploads/2024/10/image.png">
</picture>
</figure></div>
<p>WP Fusion also has a free plugin on wordpress.org, called <a href="https://wordpress.org/plugins/wp-fusion-lite/">WP Fusion Lite</a>. We also have a registered trademark for the name WP FUSION.</p>
<p><strong>We are committed to making this plugin free, forever</strong>, to anyone who wants to integrate their WordPress website with their CRM.</p>
<p>Seeing ACF forcibly taken from its rightful owners, in violation of community standards (and possibly trademark law), left us scrambling to make sure our intellectual property was properly protected.</p>
<div>
<figure><picture decoding="async">
<source type="image/webp" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-16.33.39@2x-1024x733.jpg.webp 1024w, https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-16.33.39@2x-300x215.jpg.webp 300w" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201024%20733'%3E%3C/svg%3E" data-lazy-sizes="(max-width: 1024px) 100vw, 1024px">
<img decoding="async" width="1024" height="733" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201024%20733'%3E%3C/svg%3E" alt="screenshot" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-16.33.39@2x-1024x733.jpg 1024w, https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-16.33.39@2x-300x215.jpg 300w, https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-16.33.39@2x-1536x1100.jpg 1536w, https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-16.33.39@2x-2048x1466.jpg 2048w" data-lazy-sizes="(max-width: 1024px) 100vw, 1024px" data-lazy-src="https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-16.33.39@2x-1024x733.jpg">
</picture>
<figcaption>A search for “Advanced Custom Fields” now brings up “Secure Custom Fields” as the second result, still using the trademarked URL slug.</figcaption></figure></div>
<h4 id="wait-arent-wordpress-plugins-open-source-and-free-to-modify"><a href="#wait-arent-wordpress-plugins-open-source-and-free-to-modify">#</a>Wait, aren’t WordPress plugins open source and free to modify?</h4>
<p><strong>Yes!</strong> The beautiful thing about WordPress, open source, and the <a href="https://www.gnu.org/licenses/gpl-3.0.html">GPL license</a> is that everything we create is free to read, modify, and redistribute as you see fit. </p>
<p>We borrow lots of code and ideas from other plugins, many other plugins <a href="https://fusewp.com/" rel="nofollow">borrow code and ideas from us</a>.</p>
<p>This fosters a vibrant and competitive marketplace, allowing anyone with a good idea to launch a new product without having to worry about being similar to something that is copyrighted by an established player.</p>
<p>However, while our code is free to copy, <strong>our trademark protects our business in <em>trade</em></strong>.</p>
<p>It’s how, when you purchase from us, you know you are getting the real WP Fusion from the original company who created, maintains, and supports it.</p>
<p>Somebody could take our code, rename it “Awesome CRM Connector”, create their own website and documentation, and <strong>this would be perfectly legal</strong> ✅</p>
<p>However, if someone built a website at https://<em>better</em>wpfusion.com/ and sold our plugin using our name and logo, this would be a trademark violation, as it has the potential to deceive customers as to who they are purchasing from.</p>
<p>Our code is free, but the trademark protects the many years we’ve spent establishing a brand identity and a reputation as creators of <a href="https://verygoodplugins.com/">Very Good Plugins</a> (our company name 🤓).</p>
<p>As <strong>Matt</strong> has stated repeatedly, <a href="https://www.lodhs.com/blog/defend-your-trademark-or-you-could-lose-it/">you have to protect your trademarks</a>.</p>
<h3 id="trademark-confusion-at-wordpress-com"><a href="#trademark-confusion-at-wordpress-com">#</a>Trademark confusion at WordPress.com</h3>
<p>In September 2023 it came to our attention that WordPress.com (the for-profit hosting service) had copied all of the free plugins from WordPress.org and was now displaying them in a private directory, exclusive to WordPress.com hosting customers.</p>
<p>These pages were made public, indexed by search engines, and <strong>in some cases ranked higher than the free versions on WordPress.org</strong>.</p>
<div>
<figure><picture decoding="async">
<source type="image/webp" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/image-1-1024x677.png.webp 1024w, https://wpfusion.com/wp-content/uploads/2024/10/image-1-300x198.png.webp 300w" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201024%20677'%3E%3C/svg%3E" data-lazy-sizes="(max-width: 1024px) 100vw, 1024px">
<img decoding="async" width="1024" height="677" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201024%20677'%3E%3C/svg%3E" alt="image" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/image-1-1024x677.png 1024w, https://wpfusion.com/wp-content/uploads/2024/10/image-1-300x198.png 300w, https://wpfusion.com/wp-content/uploads/2024/10/image-1-1536x1015.png 1536w, https://wpfusion.com/wp-content/uploads/2024/10/image-1-2048x1354.png 2048w" data-lazy-sizes="(max-width: 1024px) 100vw, 1024px" data-lazy-src="https://wpfusion.com/wp-content/uploads/2024/10/image-1-1024x677.png">
</picture>
<figcaption>WP Fusion Lite was copied onto wordpress.com without permission, and used to sell premium hosting plans.</figcaption></figure></div>
<p>Further, it was no longer clear that the plugins were free. The text next to each plugin reads, “<em>Free on Business plan</em>“, and clicking the link prompts you to create an account at WordPress.com <strong>and sign up for premium hosting</strong>.</p>
<p><strong>This created confusion</strong> among users who would contact our support (for paying customers), and expect priority responses or premium features because they had “paid” for the plugin, when they hadn’t paid us anything— they’d only paid WordPress.com for hosting.</p>
<p>While we knew about this for some time, I didn’t quite know <em>what to do about it</em>.</p>
<p>I didn’t want to start a legal dispute with Automattic and possibly damage our reputation.</p>
<p>And, generally, <strong>I trusted Matt</strong>. I assumed he had a competent legal team that had already reviewed the legality of copying our plugins, and that he was acting in the best interest of the community.</p>
<h3 id="the-cease-and-desist"><a href="#the-cease-and-desist">#</a>The cease and desist</h3>
<p>The events of the past month have made me realize a few things:</p>
<ol>
<li>I don’t trust Matt.</li>
<li>Matt doesn’t appear to be taking advice from legal counsel.</li>
<li>Always defend your trademarks.</li>
</ol>
<p>With those points in mind <a href="https://x.com/verygoodplugins/status/1845246925886353795">we sent a cease and desist letter to Automattic and WordPress.com</a> on October 12th, asking for WP Fusion Lite to be removed from WordPress.com due to the potential for confusion regarding the affiliation of the WP Fusion brand.</p>
<div>
<figure><picture decoding="async">
<source type="image/webp" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/image-2-821x1024.png.webp 821w, https://wpfusion.com/wp-content/uploads/2024/10/image-2-241x300.png.webp 241w, https://wpfusion.com/wp-content/uploads/2024/10/image-2.png.webp 1508w" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20821%201024'%3E%3C/svg%3E" data-lazy-sizes="(max-width: 821px) 100vw, 821px">
<img decoding="async" width="821" height="1024" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20821%201024'%3E%3C/svg%3E" alt="image" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/image-2-821x1024.png 821w, https://wpfusion.com/wp-content/uploads/2024/10/image-2-241x300.png 241w, https://wpfusion.com/wp-content/uploads/2024/10/image-2-1232x1536.png 1232w, https://wpfusion.com/wp-content/uploads/2024/10/image-2.png 1508w" data-lazy-sizes="(max-width: 821px) 100vw, 821px" data-lazy-src="https://wpfusion.com/wp-content/uploads/2024/10/image-2-821x1024.png">
</picture>
<figcaption>Our letter to Automattic</figcaption></figure></div>
<p>This was a difficult decision to make, as Matt has been known to use the resources of WordPress.org <a href="https://bullenweg.com/">to personally retaliate</a> against perceived threats to Automattic.</p>
<p>There was a very real chance we would be removed from the free .org repository as well, blocked from the Make WordPress Slack, and/or banned from sponsoring future WordCamps (we sponsored WCAsia in 2024 and look forward to sponsoring WCEU in 2025).</p>
<p>Thankfully <strong>WP Fusion Pro <em>does not</em> require the free version</strong> to function, and we have been delivering updates to our paying customers via our own servers for many years.</p>
<p>We had a plan in place to begin delivering Lite updates via our own servers if the worst came to pass.</p>
<h3 id="automattics-reply"><a href="#automattics-reply">#</a>Automattic’s reply</h3>
<p>Automattic’s General Counsel responded on October 18th.</p>
<div>
<figure><picture decoding="async">
<source type="image/webp" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-17.32.55@2x-773x1024.jpg.webp 773w, https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-17.32.55@2x-227x300.jpg.webp 227w, https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-17.32.55@2x.jpg.webp 1900w" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20773%201024'%3E%3C/svg%3E" data-lazy-sizes="(max-width: 773px) 100vw, 773px">
<img decoding="async" width="773" height="1024" src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20773%201024'%3E%3C/svg%3E" alt="screenshot" data-lazy-srcset="https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-17.32.55@2x-773x1024.jpg 773w, https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-17.32.55@2x-227x300.jpg 227w, https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-17.32.55@2x-1160x1536.jpg 1160w, https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-17.32.55@2x-1547x2048.jpg 1547w, https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-17.32.55@2x.jpg 1900w" data-lazy-sizes="(max-width: 773px) 100vw, 773px" data-lazy-src="https://wpfusion.com/wp-content/uploads/2024/10/CleanShot-2024-10-19-at-17.32.55@2x-773x1024.jpg">
</picture>
<figcaption>Automattic’s reply</figcaption></figure></div>
<p>They have agreed to take down the listing from wordpress.com, and it is no longer available at <a href="https://wordpress.com/plugins/wp-fusion-lite">https://wordpress.com/plugins/wp-fusion-lite</a>.</p>
<p>The top result in searches for “WP Fusion Lite” is again the WordPress.org listing, <strong>where anyone can download the plugin for free</strong>.</p>
<p>It’s been a stressful week, but I’m glad we were able to resolve the situation amicably, and clear up any potential confusion for our users.</p>
<h3 id="whats-next"><a href="#whats-next">#</a>What’s next?</h3>
<p>It seems like every week there is another unexpected move from Matt that throws the WordPress community into chaos.</p>
<p>I wish it were all over, but it doesn’t show any sign of ending soon.</p>
<p>I would like to imagine a future where Matt is either the CEO of Automattic, <em><span>or</span></em> the champion of the open source project.</p>
<p>I have nothing against him personally— I hear that he’s a great person to work for, and I’m appreciative of all the things he’s done for the open source movement. But as long as Matt’s motivations with WordPress are tied to his profits at Automattic, he can’t be trusted.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Accountability sinks (442 pts)]]></title>
            <link>https://aworkinglibrary.com/writing/accountability-sinks</link>
            <guid>41891694</guid>
            <pubDate>Sat, 19 Oct 2024 23:39:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://aworkinglibrary.com/writing/accountability-sinks">https://aworkinglibrary.com/writing/accountability-sinks</a>, See on <a href="https://news.ycombinator.com/item?id=41891694">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main">
      <article>
  <header>
    <time datetime="2024-10-16 13:57:00 -0400">2024-10-16</time>
    
    <h2>A Reading Note</h2>
  </header>

  

  <section>
    <p>In <em>The Unaccountability Machine,</em> Dan Davies argues that organizations form “accountability sinks,” structures that absorb or obscure the consequences of a decision such that no one can be held directly accountable for it. Here’s an example: a higher up at a hospitality company decides to reduce the size of its cleaning staff, because it improves the numbers on a balance sheet somewhere. Later, you are trying to check into a room, but it’s not ready and the clerk can’t tell you when it will be; they can offer a voucher, but what you need is a room. There’s no one to call to complain, no way to communicate back to that distant leader that they’ve scotched your plans. The accountability is swallowed up into a void, lost forever.</p>

<p>Davies proposes that:</p>

<blockquote>
  <p>For an accountability sink to function, it has to break a link; it has to prevent the feedback of the person affected by the decision from affecting the operation of the system.</p>
  <cite><a href="https://aworkinglibrary.com/reading/unaccountability-machine">Davies, <em>The Unaccountability Machine</em>, page 17</a></cite>
</blockquote>

<p>Once you start looking for accountability sinks, you see them all over the place. When your health insurance declines a procedure; when the airline cancels your flight; when a government agency declares that you are ineligible for a benefit; when an investor tells all their companies to shovel so-called AI into their apps. Everywhere, broken links between the people who face the consequences of the decision and the people making the decisions.</p>

<p>That’s assuming, of course, that a person <em>did</em> make a decision at all. Another mechanism of accountability sinks is the way in which decisions themselves cascade and lose any sense of their origins. Davies gives the example of the case of <a href="https://en.wikipedia.org/wiki/Dominion_Voting_Systems_v._Fox_News_Network">Dominion Systems vs Fox News</a>, in which Fox News repeatedly spread false stories about the election. No one at Fox seems to have explicitly made a decision to lie about voting machines; rather, there was an implicit understanding that they had to do whatever it took to keep their audience numbers up. At some point, someone had declared (or else strongly implied) that audience metrics were the only thing that mattered, and every subsequent decision followed out from that. But who can be accountable to a decision that wasn’t actually made?</p>

<p>It’s worth pausing for a moment to consider what we mean by “accountable.” Davies posits that:</p>

<blockquote>
  <p>The fundamental law of accountability: the extent to which you are able to change a decision is precisely the extent to which you can be accountable for it, and vice versa.</p>
  <cite><a href="https://aworkinglibrary.com/reading/unaccountability-machine">Davies, <em>The Unaccountability Machine</em>, page 17</a></cite>
</blockquote>

<p>Which is useful. I often refer back to <a href="https://aworkinglibrary.com/writing/on-accountability">Sidney Dekker’s definition of accountability</a>, where an account is <em>something that you tell.</em> How did something happen, what were the conditions that led to it happening, what made the decision seem like a good one at the time? Who were all of the people involved in the decision or event? (It almost never comes down to only one person.) All of those questions and more are necessary for understanding how a decision happened, which is a prerequisite for learning how to make better decisions going forward.</p>

<p>If you combine those two frameworks, you could conclude that to be accountable for something you must have the power to change it <em>and</em> understand what you are trying to accomplish when you do. You need both the power <em>and</em> the story of how that power gets used.</p>

<p>The comparisons to AI are obvious, inasmuch as delegating decisions to an algorithm is a convenient way to construct a sink. But organizations of any scale—whether corporations or governments or those that occupy the nebulous space between—are already quite good at forming such sinks. The accountability-washing that an AI provides isn’t a new service so much as an escalated and expanded one. Which doesn’t make it any less frightening, of course; but it does perhaps provide a useful clue. Any effort that’s tried and failed to hold a corporation to account isn’t likely to have more success against an algorithm. We need a new bag of tricks.<img width="10" height="10" alt="" src="https://aworkinglibrary.com/img/stop.gif"></p>

  </section>

</article>


  <h2>Related books</h2>
  
    
    <article>
  
  
  <p>Dan Davies hypothesizes that organizations form “accountability sinks”—structures that serve to obscure, deflect, or otherwise insulate decision makers from the consequences of their decisions.</p>

</article>

  
    
    <article>
  
  
  <p>Drawing from safety practices in transportation and medicine, Sidney Dekker outlines how to (and how not to) create a culture of trust, learning, and accountability.</p>

</article>

  



    </div></div>]]></description>
        </item>
    </channel>
</rss>