<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 01 Feb 2025 02:30:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Tesla Paid Zero Federal Income Tax in 2024, Despite $2.3B in Income (227 pts)]]></title>
            <link>https://truthout.org/articles/tesla-paid-zero-federal-income-tax-in-2024-despite-2-3-billion-in-income/</link>
            <guid>42893365</guid>
            <pubDate>Fri, 31 Jan 2025 22:57:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://truthout.org/articles/tesla-paid-zero-federal-income-tax-in-2024-despite-2-3-billion-in-income/">https://truthout.org/articles/tesla-paid-zero-federal-income-tax-in-2024-despite-2-3-billion-in-income/</a>, See on <a href="https://news.ycombinator.com/item?id=42893365">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
             <!--begin content-single -->

<article itemprop="mainEntity" itemscope="" itemtype="https://schema.org/ReportageNewsArticle">

  <header>

  
  
  
  
      
    
  

  

      <p>This brings Tesla’s average tax rate over the past three years to 0.4 percent.</p>
  
  

  
  
  
</header>

  <figure itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img width="1200" height="675" src="https://truthout.org/app/uploads/2025/01/2025_0130-tesla-1200x675.jpg" alt="The Tesla Inc. logo is pictured on a sign in Zrich, Switzerland, on November 13, 2023." itemprop="url" loading="eager" decoding="async" fetchpriority="high" srcset="https://truthout.org/app/uploads/2025/01/2025_0130-tesla-1200x675.jpg 1200w, https://truthout.org/app/uploads/2025/01/2025_0130-tesla-400x225.jpg 400w, https://truthout.org/app/uploads/2025/01/2025_0130-tesla-200x113.jpg 200w, https://truthout.org/app/uploads/2025/01/2025_0130-tesla-800x450.jpg 800w, https://truthout.org/app/uploads/2025/01/2025_0130-tesla-1536x864.jpg 1536w, https://truthout.org/app/uploads/2025/01/2025_0130-tesla-2048x1152.jpg 2048w, https://truthout.org/app/uploads/2025/01/2025_0130-tesla-2400x1350.jpg 2400w" sizes="(max-width: 1200px) 100vw, 1200px"><figcaption itemprop="caption">The Tesla Inc. logo is pictured on a sign in Zrich, Switzerland, on November 13, 2023. </figcaption><figcaption itemprop="author" itemscope="" itemtype="https://schema.org/Person"><span itemprop="name">Joan Cros / NurPhoto via Getty Images</span></figcaption></figure>
  
  
  <div id="articleContent">

    

    <!-- begin partial/series-card -->

    
    
    
<p>Elon Musk’s Tesla paid a total of $0 in federal income taxes in 2024, new tax reports show, despite the company having raked in billions of dollars in income and being the most valuable car company in the world.</p>



<p>Citing Tesla’s <a href="https://www.sec.gov/Archives/edgar/data/1318605/000162828025003063/tsla-20241231.htm">year-end financial report</a> released this week, the Institute on Taxation and Economic Policy (ITEP) <a href="https://itep.org/tesla-reported-zero-federal-income-tax-in-2024/">reports</a> that Tesla paid a 0 percent federal income tax rate last year, even as the company reported $2.3 billion in income.</p>



<p>In 2023, Tesla paid $48 million in taxes on $3.1 billion in income — a 1.5 percent rate. And, in 2022, when it reported $5.5 billion in income, Tesla also paid a 0 percent tax rate. </p>



<p>This brings Tesla’s average tax rate over the past three years to 0.4 percent, or 50 times less than the statutory corporate tax rate of 21 percent. </p>



<p>This is despite the fact that Tesla is valued at <a href="https://finance.yahoo.com/quote/TSLA/">over $1.2 trillion</a> and is owned by the richest man in the world, with <a href="https://www.forbes.com/profile/elon-musk/">a net worth of</a> over $400 billion and who was awarded <a href="https://www.aljazeera.com/economy/2024/12/3/musks-fifty-five-point-eight-bn-tesla-pay-package-rejected-by-us-judge">a $101 billion</a> pay package by Tesla shareholders last year — though this package has been rejected by a judge. </p>




<p>Due to the nature of the U.S. tax system, which heavily favors corporations and the wealthy and enables sophisticated tax dodging methods, Musk is also <a href="https://www.propublica.org/article/the-secret-irs-files-trove-of-never-before-seen-records-reveal-how-the-wealthiest-avoid-income-tax">one of the many</a> ultrarich Americans who pay a far lower tax rate than the average American. Advocates for fairer taxation <a href="https://americansfortaxfairness.org/musks-11-billion-tax-bill-big-news-just-10-wealth-increase-far-year/">have said</a> that, due to the way that tax law is written and enforced, it is essentially optional for Musk and other billionaires to follow tax guidelines, allowing them to hoard more and more wealth while the working class struggles to get by.</p>



<p>According to ITEP, Tesla was able to avoid paying $500 million in taxes by using accelerated depreciation, <a href="https://itep.org/corporate-tax-avoidance-under-the-tax-cuts-and-jobs-act/">a tax avoidance method</a> and incentive for businesses which allows companies to write off the costs of an asset faster than it would normally actually lose value. The company dodged another $300 million in its tax bill by claiming “unspecified ‘U.S. tax credits,’” ITEP said.</p>



<p>Companies’ ability to use accelerated depreciation as a tax avoidance method was expanded by Donald Trump and Republicans’ Tax Cuts and Jobs Act in 2017, which slashed the corporate tax rate from 35 to 21 percent and <a href="https://truthout.org/articles/us-billionaires-have-doubled-their-wealth-since-2017-trump-tax-overhaul/">has supercharged</a> the growth of the wealth gap in the U.S., creating an explosion of wealth for the richest Americans.</p>



<p>Trump and the GOP have pledged to be extremely friendly to corporations in Trump’s second term in office. The president campaigned on tax cuts across the board — but research has found that his tax plans would <a href="https://itep.org/kamala-harris-donald-trump-tax-plans/">actually raise taxes</a> for the working class while cutting taxes for the top 5 percent richest Americans.</p>



<p>Meanwhile, Republicans <a href="https://www.propublica.org/article/trump-tax-cuts-congress-republicans-plan-slash-benefits">are reportedly circulating</a> options to expand the already massive tax benefits given to corporations and the wealthy in the Tax Cuts and Jobs Act — options that include slashing benefits for working class Americans in order to cut the corporate tax rate to 15 percent. This could give massive corporations like Tesla yet more tax cuts.</p>



<p>ITEP points out that there are also bipartisan proposals to give corporations more tax dodging tools, like <a href="https://itep.org/impacts-of-tax-relief-for-american-families-and-workers-act/">a compromise bill</a> proposed in the Senate last year that would, among other things, retroactively give companies the ability to receive a tax break on supposed research — though the bill gives an extremely wide definition of what a company could qualify as research.</p>
<div id="truth-722685318" data-callout-id="325075" data-callout-theme="white" data-callout-placement="Post Content - After" data-callout-title="2025-01 Main Campaign (FRU) We’re not backing down in the face of Trump’s threats." data-truth-trackid="325075" data-truth-trackbid="1">
<h5>We’re not backing down in the face of Trump’s threats.</h5>
<p><span>As Donald Trump is inaugurated a second time, independent media organizations are faced with urgent mandates: Tell the truth more loudly than ever before. Do that work even as our standard modes of distribution (such as social media platforms) are being manipulated and curtailed by forces of fascist repression and ruthless capitalism. Do that work even as journalism and journalists face targeted attacks, including from the government itself. And do that work in community, never forgetting that we’re not shouting into a faceless void – we’re reaching out to real people amid a life-threatening political climate.</span></p>
<p><span><strong>Our task is formidable, and it requires us to ground ourselves in our principles, remind ourselves of our utility, dig in and commit.</strong></span></p>
<p><span>As a dizzying number of corporate news organizations – either through need or greed – rush to implement new ways to further monetize their content, and others acquiesce to Trump’s wishes, now is a time for movement media-makers to double down on community-first models.</span></p>
<p><span>At <em>Truthout</em>, we are reaffirming our commitments on this front: We won’t run ads or have a paywall because we believe that everyone should have access to information, and that access should exist without barriers and free of distractions from craven corporate interests. We recognize the implications for democracy when information-seekers click a link only to find the article trapped behind a paywall or buried on a page with dozens of invasive ads. The laws of capitalism dictate an unending increase in monetization, and much of the media simply follows those laws. <strong><em>Truthout</em> and many of our peers are dedicating ourselves to following other paths – a commitment which feels vital in a moment when corporations are evermore overtly embedded in government.</strong></span></p>
<p><span>Over 80 percent of<em> Truthout</em>‘s funding comes from small individual donations from our community of readers, and the remaining 20 percent comes from a handful of social justice-oriented foundations. Over a third of our total budget is supported by recurring monthly donors, many of whom give because they want to help us keep <em>Truthout</em> barrier-free for everyone.</span></p>
<p><span>You can help by giving today. Whether you can make a small monthly donation or a larger gift, <em>Truthout</em> only works with your support.</span></p>

</div>
    
    

    
    

    

  </div> 

  

  
  

      
  
      
  </article>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Musk aides lock government workers out of computer systems at US agency (119 pts)]]></title>
            <link>https://www.reuters.com/world/us/musk-aides-lock-government-workers-out-computer-systems-us-agency-sources-say-2025-01-31/</link>
            <guid>42892278</guid>
            <pubDate>Fri, 31 Jan 2025 21:26:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/world/us/musk-aides-lock-government-workers-out-computer-systems-us-agency-sources-say-2025-01-31/">https://www.reuters.com/world/us/musk-aides-lock-government-workers-out-computer-systems-us-agency-sources-say-2025-01-31/</a>, See on <a href="https://news.ycombinator.com/item?id=42892278">Hacker News</a></p>
Couldn't get https://www.reuters.com/world/us/musk-aides-lock-government-workers-out-computer-systems-us-agency-sources-say-2025-01-31/: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Add "fucking" to your Google searches to neutralize AI summaries (506 pts)]]></title>
            <link>https://gizmodo.com/add-fcking-to-your-google-searches-to-neutralize-ai-summaries-2000557710</link>
            <guid>42892191</guid>
            <pubDate>Fri, 31 Jan 2025 21:20:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gizmodo.com/add-fcking-to-your-google-searches-to-neutralize-ai-summaries-2000557710">https://gizmodo.com/add-fcking-to-your-google-searches-to-neutralize-ai-summaries-2000557710</a>, See on <a href="https://news.ycombinator.com/item?id=42892191">Hacker News</a></p>
Couldn't get https://gizmodo.com/add-fcking-to-your-google-searches-to-neutralize-ai-summaries-2000557710: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[GenAI Art Is the Least Imaginative Use of AI Imaginable (119 pts)]]></title>
            <link>https://hai.stanford.edu/news/ge-wang-genai-art-least-imaginative-use-ai-imaginable</link>
            <guid>42891821</guid>
            <pubDate>Fri, 31 Jan 2025 20:52:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hai.stanford.edu/news/ge-wang-genai-art-least-imaginative-use-ai-imaginable">https://hai.stanford.edu/news/ge-wang-genai-art-least-imaginative-use-ai-imaginable</a>, See on <a href="https://news.ycombinator.com/item?id=42891821">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><span>R</span>ecently, AI music company Suno’s CEO was <a href="https://www.404media.co/ceo-of-ai-music-company-says-people-dont-like-making-music/" rel="noopener ugc nofollow" target="_blank">quoted as saying “I think the majority of people don’t enjoy the majority of the time they spend making music”</a> in what sounds like yet another justification of Suno’s prompt-based (and very popular) generative AI music service. Like all good misleading statements, this one is partially based on truth: when we work at our favorite activities — cooking, gaming, hiking, music-making, writing (to name a few) — the process is often not easy or pleasant or smooth. Many musicians spend vastly more time in practice rooms than onstage; gamers willingly play punishingly difficult video games; hikers go up and down big mountains while dealing with blisters, mosquitos, and a host of inconveniences. All of these are arguably not “enjoyable” the majority of the time, and yet people still choose to undertake these activities. Why? Well, Suno quietly leaves out the part that the <em>process</em> (with its inherent challenges) is often what makes an activity ultimately meaningful and fulfilling. It’s like Suno telling hikers and mountaineers that clambering up a mountain is unpleasant business! Why not take a helicopter to the summit? Meanwhile, Suno is selling helicopter tickets.</p><p>Statements like Suno’s perfectly captures the prevailing public mindset about AI: that Artificial Intelligence is little more than a labor-saving optimization tool. This mindset tends to be good for #Capitalism, but betrays not only a lack of understanding of why people make music, but also a profound lack of imagination regarding how we could, or would want to live with our technologies in our lives. I, for one, would go as far as to say using generative AI for creative expression in this manner (“describe what you have in mind and AI will create it for you”) amounts to<em><strong> </strong></em>the least imaginative of use of AI that I can imagine. Such systems offer the promise of skipping the labor by bypassing the creative process and, yes, the difficulties, confusion, and frustration inherent in such endeavors, but…</p><p><em>What if the point of art is that we actually </em><strong>make</strong><em> it?</em></p><h2 id="2d7c"><strong>“What’s Your Story?”</strong></h2><p>I do not despise AI, per se, but I am forever wary of people who make and deploy technology in uncritical, culturally apathetic ways. I am pretty sure this makes me something of an Old Fart; or maybe I have always been that. But I do have some background in this topic. I am an <a href="https://ccrma.stanford.edu/~ge/" rel="noopener ugc nofollow" target="_blank">Associate Professor of Music and (by Courtesy) Computer Science</a> at Stanford University’s <a href="https://ccrma.stanford.edu/" rel="noopener ugc nofollow" target="_blank">Center for Computer Research in Music and Acoustics (CCRMA)</a>, where I teach “Music and AI” as a critical-making course, cross-listed in Music and Computer Science. I wrote the book <a href="https://artful.design/" rel="noopener ugc nofollow" target="_blank"><em>Artful Design: Technology in Search of the Sublime</em></a> as a photo-comic manifesto of why we ought to build tools playfully, artfully, in accordance not only with perceived needs, but also with the invisible values that underly the needs; it probes the question, “how do we want to live with our technologies?” I invent <a href="https://artful.design/ocarina/" rel="noopener ugc nofollow" target="_blank">things that nobody asked for and that solves no problems that quite exist</a>; I direct <a href="https://slork.stanford.edu/" rel="noopener ugc nofollow" target="_blank">laptop</a> and <a href="https://svork.stanford.edu/" rel="noopener ugc nofollow" target="_blank">VR orchestras</a>. Once upon a time, I co-founded a mobile music company called Smule. I am a Senior Fellow and a Faculty Associate Director of the <a href="https://hai.stanford.edu/" rel="noopener ugc nofollow" target="_blank">Stanford Institute for Human-Centered Artificial Intelligence</a> (Stanford HAI, for short). I sometimes <a href="https://artful.design/hai/" rel="noopener ugc nofollow" target="_blank">write about AI and art</a>, and <a href="https://www.nytimes.com/2023/12/30/technology/openai-artist-alexander-reben.html" rel="noopener ugc nofollow" target="_blank">offer my perspectives</a>, such as they are. My wife and I <a href="https://www.youtube.com/watch?v=WVqDJ34HnYE" rel="noopener ugc nofollow" target="_blank">backpack in the mountains</a>. We are parents to a one-year old baby daughter; I think a lot about her growing up in a future I can barely imagine.</p><figure><p><img src="https://hai.stanford.edu/sites/default/files/inline-images/Ge%20Wang%20iphone%20music.jpg" data-entity-uuid="e9675777-1ee7-4a88-bff8-57f4630e127b" data-entity-type="file" alt="Ge Wang plays Ocarina for the iPhone" width="1280" height="720" loading="lazy"></p><p><em>Making things that nobody asked for and that solves no problems that exists, Exhibit A: </em><a href="https://artful.design/ocarina/" rel="noopener ugc nofollow" target="_blank"><em>Ocarina</em></a><em> for the iPhone.</em></p></figure><p>Many years ago, I arrived at Princeton University to pursue my Ph.D. in Computer Science, with vague plans to build “the world’s most advanced algorithmic composition engine for music” (essentially GenAI for music, in today’s parlance). But before I even set foot on Princeton’s impeccably manicured campus, brimming with classic Gothic architecture, cherry blossom trees, and well-kept lawns — something, or rather someone, gave me pause on my aspirations.</p><p>On my drive up to New Jersey in that late summer of 2001, I stopped by a house party in Washington D.C. that featured a local cover band. The band was <em>tight</em>. After the performance, I went up to the guitarist and told him so.</p><p>“Thank you,” he said, “so, what’s <em>your</em> story?”</p><p>“I am going up to Princeton to start grad school in computer science.” I replied, “I want to build the world’s most advanced automated music composition machine.”</p><p>The guitarist studied me for a moment and asked, succinct and earnest, “What’s the point?”</p><p>It was a good question. No, it was a great question; maybe <em>the</em> question. It stopped me in my tracks and I did not give an answer. I did not have an answer. “I’ll let you know if I figure that out.” I grinned, as I pocketed the question for future rumination.</p><p>That brief exchange would domino into a “personal crisis of faith”, one that I would relish, for it would challenge my beliefs and continually beckon me to reflect on the role of technology for things that, like Music, <em>really</em> matter to us.</p><p>Over the next six years of graduate school, I worked on computer music with seriously playful characters like professors Perry Cook and Dan Truemen and fellow grad student Rebecca Fiebrink. I never did attempt to build “the world’s most advanced algorithmic composition engine” — because I never could answer the question “what is the point?” (without resorting to hand-wavy and frankly bullshit answers like “democratize music-making”). Instead, I built a <em>tool</em>, a <a href="https://chuck.stanford.edu/" rel="noopener ugc nofollow" target="_blank">domain-specific programming language for music</a>; thinking maybe I could create one more expressive tool with which people can make music and, if they wished, explore “what’s the point?” for themselves.</p><p>More than twenties years later, I am a tenured professor at a so-called “elite university” in the heart of Silicon Valley, ground zero of Big Tech. Meanwhile, my personal crisis of faith persists. I still ask, “what is the point?”. I still do not have an answer that satisfies, but I have come to profoundly appreciate the question, which I now help my students to ask in all that they do, especially in shaping technology. Ever the contrarian, I task my “Music and AI” students (many of them engineers) to build “useless things that are interesting to you” as a way to playfully work with technologies like AI, and to probe for both capacities and limits. They respond by by making things like<em> auto-rizz.ck</em>:</p><p><iframe width="853" height="505" src="https://www.youtube.com/embed/FYc6uXBUL6k?si=nKlo_6T8JExeY3aF" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe></p><p><em>auto-rizz.ck</em> uses AI — not “generative” but interactive. It detects “seductive” glances and plays cheesy saxophone music (yes, that is all it does). It’s whimsical. It’s absurd. It fit the assignment brilliantly. I always ask students to ask themselves <em>why</em> they chose to build what they did. Matt, the inventor of auto-rizz.ck, had this to say (excerpted from <a href="https://mattreed-75933.medium.com/how-i-got-a-girlfriend-from-1-chuck-program-ee59d76c136a" rel="noopener">his reflection</a>):</p><p><em>“I really enjoyed this assignment. I think its easy to adopt this toxic capitalistic mindset that everything you do or make has to be productive or “for” something. But when we follow that dogma, we forget to make beautiful things just because they’re beautiful, do funny things just because they’re funny, or make stupid projects just because they’re stupid. There’s so much beauty in doing things just because. It was nice to take a pause on life and make something just for the sake of making it (and for a grade, but that’s more of an afterthought).” — Matt</em></p><p>I ask my students to look for interesting questions in everything. I tell them that the power of a good question is not in the answer, but in the question’s capacity to regeneratively invite more questions, and to construct lenses for examining the world — and ourselves. It’s like the question, asked by the ancient Greeks more than two millennia ago, “What is the <em>good life</em>?” We are still asking ourselves this today.</p><h2 id="3110"><strong>A Labor-creating Machine?</strong></h2><p>Ruminating on AI and art and the point of it all, I am reminded of a John Cage sentiment:</p><p><em>“What we need is a computer that isn’t labor-saving, but which increases the work for us to do.” — John Cage (from “Diary: Audience 1966”)</em></p><p>I first learned of this quote through CCRMA Ph.D. candidate Nick Shaheed’s Qualifying Exam. Nick’s interpretation of its meaning in a world nearly 60 years later:</p><div><p><em>“So, why would I want to increase the work I need to do? Well, because it’s fun and it’s work I want to do! For me (and many many other artists), doing the work and the work itself are largely the same thing. Speaking personally, my creative practice is about as far from the idealized depiction of Mozart shown in (the film) Amadeus, a fully formed concept is not being put onto the page as the first draft. Beginning with just the most basic seed of an idea, and then the process of trying it out, realizing it, tweaking things, all these bits of effort are the bricks being laid that form the actual piece itself. Without the work being done to make the music, the end result would be very different (and probably, worse).” — Nick Shaheed (from “CCRMA Quals Exam 2024”)</em></p><p>I resonate with Nick’s position — that the process not only shapes the outcome invariably, but constitutes an unalienable part of what the outcome is. It is the idea that art is to be <em>made,</em> for it is during the making that we realize what we are truly trying to say, far beyond the initial inkling of a concept. It is the observation that process brings its own intrinsic rewards, not despite of but <em>because of</em> the inherent challenges in making things for ourselves. This is all to say, process is not an obstacle to be removed on the path of creative expression. It <em>is</em> the path.</p></div><p>Any process of creation is simultaneously a process of learning, beset by setbacks, confusion, and frustration. Yet, such frictions can, if one sticks with the process, ultimately give rise to something fulfilling: a deeper understanding of how a thing works and how to work with it, accompanied by the feeling that we have learned a bit more about ourselves and what we are capable of achieving. Skipping the process makes about as much sense as “playing” a difficult video game by asking someone else (robot or human) to take the controller and play it in your place, while you verbally offer general prompts about what to do and where to go from the couch. That would still be an experience, maybe even an enjoyable one, but it would be a fundamentally different experience from undertaking the process for yourself.</p><p>Reflecting on these ideas only makes me sadder that voices such as Suno’s (who received another venture capital funding round of $125M late last year) continue to dominate and shape the public imagination on AI and creative expression, drowning out other voices that would also have something to say about what we truly want from this technology, and how we might want to live with it moving forward.</p><p>The technology is new, but what GenAI music companies like Suno are doing is not. Like the recording industry before them (and without whom, ironically, there would be no training data for GenAI), companies like Suno commodify creative expression as part of an aesthetic economy based on passive consumption. Thus it is in Suno’s core interest to usher people away from active creation, and toward a system of frictionless convenience that strives to lower the effort of production — and the effort of imagination beyond vague concepts to type into prompts — to <em>zero</em>. And while no doubt prompting-AI-systems will be a new kind of “muscle” for us all to build, one has to ask: what other muscles will atrophy? There is always a price to pay; the danger of living in a world of frictionless convenience might well be cultural and individual stagnation.</p><p>This brings us to the most misleading part of GenAI companies like Suno: they purport to be tools for creating art, but by making every effort to dismiss and eradicate the process of learning to expressive ourselves, what they are actually creating is a new generation of <em>consumers. </em>While these endeavors might make a few individuals a lot of money in the meantime, it is unlikely to be good in the long-run for culture — or our soul.</p><p>I am not philosophically in opposition to generative AI, even for artistic creation. For one, I don’t know what “AI making art” evens means at this point; I barely, if at all, understand “humans making art”. I am inclined to say, therefore, “there should be room for that, too”. At the same time, I am committed to preserving and protecting the room for humans to labor profusely, unenjoyably, illogically to creatively express themselves. The former may happen more and more as AI entrenches itself further in our lives; simultaneously, there is something at stake in the latter. “There should be room for that, too” should apply both ways.</p><p>I once gave <a href="https://www.youtube.com/watch?v=FYc6uXBUL6k&amp;ab_channel=MattReed">a talk at Stanford HAI’s conference on AI and Creativity</a>, where I put forth my own “crisis” question for others: “What Do We (Really) Want from Artificial Intelligence?”. The talk offers no answers, but a set of lenses to think about AI and creative expression. Give it a watch, if you would like, and figure out for yourself the questions that matter to you.</p><p><iframe width="853" height="505" src="https://www.youtube.com/embed/1tqgwlfi8P8?si=Pwtifp0v8jYVHFqh" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe></p><h2 id="bb7c"><strong>What I (Really) Want</strong></h2><p>In these days of profound uncertainty about the future, I look at my daughter, who just turned one, and every fiber of my person tells me this: as she grows, I would want her to learn to value and even embrace the difficulty, confusion, frustration that come with learning, and that reside inherent in the craft of creatively expressing oneself, whatever form that may take — and for her to come to know the sublime joy hidden in the process…with or without AI.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[US government agency argues that money isn't property–so it can take yours (128 pts)]]></title>
            <link>https://reason.com/2025/01/31/the-government-says-money-isnt-property-so-it-can-take-yours/</link>
            <guid>42891724</guid>
            <pubDate>Fri, 31 Jan 2025 20:42:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://reason.com/2025/01/31/the-government-says-money-isnt-property-so-it-can-take-yours/">https://reason.com/2025/01/31/the-government-says-money-isnt-property-so-it-can-take-yours/</a>, See on <a href="https://news.ycombinator.com/item?id=42891724">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
							<p><span>As a lawyer who sues the government, you get used to the different kinds of arguments that government lawyers use to justify abuses of individual rights—sweeping claims of government power, bad-faith procedural obstacles, and more.&nbsp;&nbsp;</span></p> <p><span>This was a new one: The U.S. Department of Justice (DOJ) </span><a href="https://storage.courtlistener.com/recap/gov.uscourts.dcd.255899/gov.uscourts.dcd.255899.18.0.pdf"><span>argued</span></a><span> that confiscating $50,000 from a small business did not infringe the business' right to private property because money is not property.&nbsp;&nbsp;</span></p> <p><span>"Money is not necessarily 'property' for constitutional purposes," the government's brief declared—putting the very idea of property in square quotes. Reading at my desk, I practically fell out of my chair.&nbsp;</span></p> <p><span>The DOJ gave three rationales for the argument, all packed into a doorstopper of a footnote: (1) the government creates money, so you can't own it; (2) the government can tax your money, so you don't own it; and (3) the Constitution allows the government to spend money for the "general welfare."</span></p> <p><span>If a libertarian was asked to write a satire of a government lawyer's brief, this is what they might come up with. But here it was, in black and white.&nbsp;</span></p> <p><span>Whose money, specifically, was the government saying wasn't property? That of Chuck Saine, the owner of C.S. Lawn &amp; Landscaping, a small landscaping business outside Annapolis, Maryland, which he has operated for over 40 years.&nbsp;</span></p> <p><span>Saine became a client of the Institute for Justice (I.J.), a public interest law firm, when the federal government sought to </span><a href="https://ij.org/case/c-s-lawn-administrative-appeal/"><span>impose over $50,000 in liability</span></a><span> on his business through a "trial" held deep inside the bowls of a federal administrative agency. At said trial, both the prosecutor and the judge were employed by the same federal agency.&nbsp;</span></p> <p><span>I.J. sued, arguing that before the government can impose that kind of liability, it has to provide a real trial before a real judge and jury. The specifics of what the government claims Saine did wrong (in short: arcane labor law) are beside the point. If the government wants to confiscate over $50,000 from your business, you must have the chance to argue your defense to an impartial judge and jury—not an agency bureaucrat.&nbsp;</span></p> <p><span>Now, the DOJ argued that Saine has no right to a real judge and jury because the government was only trying to take his money, not his property. They claimed that fiat currency is a legal fiction that the government can as easily destroy as create. Lest anyone miss the implicit connection to the history of the gold standard, DOJ's footnote prominently cited the </span><i><span>Legal Tender Cases</span></i><span>—where the Supreme Court upheld laws forcing people to accept paper currency, rather than gold and silver, as payment for debts.&nbsp;</span></p> <p><span>This was an argument for taking Saine's $50,000 without a trial before a real judge and jury, but the same argument could be used to justify all manner of mischief. If your money is not your property, what is to stop the government from just seizing all of it tomorrow—for any reason it gives?&nbsp;&nbsp;</span></p> <p><span>Before you run out and trade your USD for meme coins, let me reassure you: DOJ's argument is wrong. The Due Process Clause applies to "life, liberty, or property," and the Supreme Court has repeatedly applied that Clause to money. It follows that, since money is neither life nor liberty, it must be property.&nbsp;</span></p> <p><span>To be sure, DOJ's arguments have force as a philosophical critique of government, taxation, and the monetary system. They may also highlight legitimate reasons to hold part of your wealth in gold or (for some) cryptocurrency. But "for constitutional purposes," to borrow a phrase from the DOJ, the arguments are a flop.&nbsp;</span></p> <p><span>A federal court will soon decide whether to uphold Saine's right to a trial before an impartial judge and jury. Hopefully, the court will agree: Money is property, and an agency bureaucrat is not an impartial judge.</span></p>						</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Elite on the 6502: The original 6502 assembly source, heavily commented (122 pts)]]></title>
            <link>https://elite.bbcelite.com/</link>
            <guid>42891200</guid>
            <pubDate>Fri, 31 Jan 2025 19:55:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://elite.bbcelite.com/">https://elite.bbcelite.com/</a>, See on <a href="https://news.ycombinator.com/item?id=42891200">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
				<!-- Start of article -->
				<div>
						

						<p><img src="https://elite.bbcelite.com/images/general/Elite-BBCMicro.png" alt="BBC Micro Elite screenshot"><img src="https://elite.bbcelite.com/images/general/Elite-BBCMicro.png" alt="BBC Micro Elite screenshot"><img src="https://elite.bbcelite.com/images/general/Elite-Tube.png" alt="BBC Micro 6502 Second Processor Elite screenshot"></p><p>This site contains the original 1980s source code for the classic space game Elite, with every single line documented and (for the most part) explained. It is literally the original 6502 assembly source code, just heavily commented.</p>

						<p>As well as <a href="https://elite.bbcelite.com/cassette/articles/map_of_the_source_code.html">exploring the source</a>, you can read <a href="https://elite.bbcelite.com/deep_dives/">over 120 deep dives</a> into how Elite weaves its magic, <a href="https://elite.bbcelite.com/playing_elite/">play the game</a>, or take things to a new level with the <a href="https://elite.bbcelite.com/hacks/">Elite hacks</a>. There are more suggestions for your visit in the section below.</p>

						<p>All the official versions of 6502 Elite are covered (and more):</p>

						<ul>
						    <li>The original <a href="https://elite.bbcelite.com/cassette/">BBC Micro cassette</a> version</li>

						    <li>The enhanced <a href="https://elite.bbcelite.com/disc/">BBC Micro disc</a> version</li>

						    <li>The cut-down <a href="https://elite.bbcelite.com/electron/">Acorn Electron</a> version</li>

						    <li>The super-fast <a href="https://elite.bbcelite.com/6502sp/">6502 Second Processor</a> version</li>

						    <li>The musical <a href="https://elite.bbcelite.com/c64/">Commodore 64</a> version</li>

						    <li>The flicker-free <a href="https://elite.bbcelite.com/apple/">Apple II</a> version</li>

						    <li>The super-smooth <a href="https://elite.bbcelite.com/master/">BBC Master</a> version</li>

						    <li>The "impossible" <a href="https://elite.bbcelite.com/nes/">Nintendo Entertainment System (NES)</a> version</li>

						    <li>And Angus Duggan's <a href="https://elite.bbcelite.com/elite-a/">Elite-A</a>, the epic extended version of the original game</li>

						</ul>

						<p>Elite was first released in 1984, for the BBC Micro. It was written by Ian Bell and David Braben, and was published by Acornsoft (for Acorn machines), Firebird (Commodore 64 and Apple II) and Imagineer (for the NES). The original sources were released some time ago by Ian Bell on his <a href="http://www.elitehomepage.org/">personal website</a>.</p>

						<p><img src="https://elite.bbcelite.com/images/general/Elite-NES.png" alt="NES Elite screenshot"></p><p>Note that the source code has not been released for the BBC Micro disc, Acorn Electron or BBC Master versions, so where they differ from the released sources, the extra code has been reconstructed by hand from a disassembly of the original game binaries. The rest is all original 1980s source code.</p>

						<p>My hope is that this site will be useful for those who want to learn more about Elite and what makes it tick. It is provided on an educational and non-profit basis, with the aim of helping people appreciate one of the most iconic games of the 8-bit era.</p>

						<h2>Suggestions for your visit<br>
						                             --------------------------</h2>

						<p>To start your journey into the secrets of Elite, you might like to try the following:</p>

						<ul>
							<li>See the <a href="https://elite.bbcelite.com/about_site/quick_start_guide.html">quick start guide</a> to find out how to use this site.</li>

							<li>Read more <a href="https://elite.bbcelite.com/about_site/about_this_project.html">about this project</a> and how it came to be.</li>

							<li>Check out the <a href="https://elite.bbcelite.com/deep_dives/">deep dive articles</a> for lots of details about how Elite works under the hood.</li>

							<li>Explore Elite hacks like the <a href="https://elite.bbcelite.com/hacks/elite_compendium.html">Elite Compendium</a>, the <a href="https://elite.bbcelite.com/hacks/elite_universe_editor.html">Elite Universe Editor</a>, <a href="https://elite.bbcelite.com/hacks/elite_3d.html">Elite 3D</a>, <a href="https://elite.bbcelite.com/hacks/flicker-free_elite.html">flicker-free Elite</a>, <a href="https://elite.bbcelite.com/hacks/teletext_elite.html">Teletext Elite</a> and <a href="https://elite.bbcelite.com/hacks/elite_over_econet.html">Elite over Econet</a>.</li>

							<li>Dive straight into the <a href="https://elite.bbcelite.com/cassette/articles/map_of_the_source_code.html">source code</a>, though you might want to <a href="https://elite.bbcelite.com/about_site/terminology_used_in_this_commentary.html">read these notes</a> first, which explain some of the terminology used in the commentary.</li>

							<li>Dig really deep and <a href="https://elite.bbcelite.com/compare/how_to_compare.html">compare the code for the different versions</a> of Acornsoft Elite.

							</li><li>Play Elite <a href="https://elite.bbcelite.com/playing_elite/">in your browser or emulator</a>, and discover why it is regarded as such a masterpiece.</li>

							<li>Jump straight to a <a href="https://elite.bbcelite.com/cgi-bin/random.cgi">random routine from the source code</a> - who knows where you might end up? (Hopefully not in witchspace...) You can also click the ∞ at the top of the page to keep jumping through the source code; it's a good way to explore.</li>
						</ul>

						<p>If you prefer a lighter theme for your Elite explorations, you can change the site's colour scheme by clicking the icons in the top-right corner.</p>

						<p><img src="https://elite.bbcelite.com/images/general/Elite-Commodore64.png" alt="Commodore 64 Elite screenshot"></p><h2>If you want to play with the code<br>
						                             ---------------------------------</h2>

						<p>If you are interested in building a working copy of Elite from the source, then you'll enjoy exploring the accompanying GitHub repositories, each of which contains fully commented and buildable source code for a specific version of Elite:</p>

						<ul>
							<li><a href="https://github.com/markmoxon/elite-source-code-bbc-micro-cassette">BBC Micro cassette version</a></li>

							<li><a href="https://github.com/markmoxon/elite-source-code-bbc-micro-disc">BBC Micro disc version</a></li>

							<li><a href="https://github.com/markmoxon/elite-source-code-acorn-electron">Acorn Electron version</a></li>

							<li><a href="https://github.com/markmoxon/elite-source-code-6502-second-processor">6502 Second Processor version</a></li>

							<li><a href="https://github.com/markmoxon/elite-source-code-commodore-64">Commodore 64 version</a></li>

							<li><a href="https://github.com/markmoxon/elite-source-code-apple-ii">Apple II version</a></li>

							<li><a href="https://github.com/markmoxon/elite-source-code-bbc-master">BBC Master version</a></li>

							<li><a href="https://github.com/markmoxon/elite-source-code-nes">NES version</a></li>

							<li><a href="https://github.com/markmoxon/elite-a-source-code-bbc-micro">Elite-A</a></li>
						</ul>
            
						<p>These repositories can be <a href="https://elite.bbcelite.com/about_site/building_elite.html">assembled on modern computers</a> to produce working game discs that can be loaded into a BBC Micro, an Acorn Electron, a NES or an emulator. If you want to experiment with the code, this is the place to go.</p>

						<p><img src="https://elite.bbcelite.com/images/general/Elite-AppleII.png" alt="Apple II Elite screenshot"></p><h2>Similar projects<br>
						                             ----------------</h2>

						<p>If you like this site, then you may also be interested in my other software archaeology projects:</p>

						<ul>
							<li>Fully documented <a href="https://revs.bbcelite.com/">source code for Revs</a> on the BBC Micro</li>

							<li>Fully documented <a href="https://aviator.bbcelite.com/">source code for Aviator</a> on the BBC Micro</li>

							<li>Fully documented <a href="https://lander.bbcelite.com/">source code for Lander</a> on the Acorn Archimedes</li>
						</ul>

						<p>Right on, Commanders!</p>

						<p><a href="https://www.markmoxon.com/"><i>Mark Moxon</i></a></p>
					</div>
				<!-- End of article -->
			</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Instagram and Facebook Blocked and Hid Abortion Pill Providers' Posts (246 pts)]]></title>
            <link>https://www.nytimes.com/2025/01/23/technology/instagram-facebook-abortion-pill-providers.html</link>
            <guid>42891148</guid>
            <pubDate>Fri, 31 Jan 2025 19:51:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2025/01/23/technology/instagram-facebook-abortion-pill-providers.html">https://www.nytimes.com/2025/01/23/technology/instagram-facebook-abortion-pill-providers.html</a>, See on <a href="https://news.ycombinator.com/item?id=42891148">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2025/01/23/technology/instagram-facebook-abortion-pill-providers.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Bypass DeepSeek censorship by speaking in hex (341 pts)]]></title>
            <link>https://substack.com/home/post/p-156004330</link>
            <guid>42891042</guid>
            <pubDate>Fri, 31 Jan 2025 19:41:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://substack.com/home/post/p-156004330">https://substack.com/home/post/p-156004330</a>, See on <a href="https://news.ycombinator.com/item?id=42891042">Hacker News</a></p>
Couldn't get https://substack.com/home/post/p-156004330: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Meta in talks to reincorporate in Texas or another state, WSJ reports (119 pts)]]></title>
            <link>https://www.reuters.com/technology/meta-talks-reincorporate-texas-or-another-state-exit-delaware-wsj-reports-2025-01-31/</link>
            <guid>42890960</guid>
            <pubDate>Fri, 31 Jan 2025 19:35:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/technology/meta-talks-reincorporate-texas-or-another-state-exit-delaware-wsj-reports-2025-01-31/">https://www.reuters.com/technology/meta-talks-reincorporate-texas-or-another-state-exit-delaware-wsj-reports-2025-01-31/</a>, See on <a href="https://news.ycombinator.com/item?id=42890960">Hacker News</a></p>
Couldn't get https://www.reuters.com/technology/meta-talks-reincorporate-texas-or-another-state-exit-delaware-wsj-reports-2025-01-31/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[OpenAI O3-Mini (577 pts)]]></title>
            <link>https://openai.com/index/openai-o3-mini/</link>
            <guid>42890627</guid>
            <pubDate>Fri, 31 Jan 2025 19:08:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openai.com/index/openai-o3-mini/">https://openai.com/index/openai-o3-mini/</a>, See on <a href="https://news.ycombinator.com/item?id=42890627">Hacker News</a></p>
Couldn't get https://openai.com/index/openai-o3-mini/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[The Tensor Cookbook (105 pts)]]></title>
            <link>https://tensorcookbook.com/</link>
            <guid>42890389</guid>
            <pubDate>Fri, 31 Jan 2025 18:47:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tensorcookbook.com/">https://tensorcookbook.com/</a>, See on <a href="https://news.ycombinator.com/item?id=42890389">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <h2>What are Tensor Diagrams?</h2>
          <p>
            Machine learning involves a lot of tensor manipulation, and it's easy to lose track of the bigger picture when manipulating high-dimensional data using notation designed for vectors and matrices.
          </p>
          <p>
            It turns out all the trouble with tensors disappears when you instead represent them using graphs:
          </p>
          <p><img src="https://tensorcookbook.com/paper/figures/front.png" alt="Tensor Diagram Example">
          </p>
          <p>
            This book aims to <strong>standardize the notation for tensor diagrams</strong> by rewriting the classical
            "<a href="https://www.math.uwaterloo.ca/~hwolkowi/matrixcookbook.pdf">Matrix Cookbook</a>" using this notation.
          </p>
          <p>
            Tensor diagrams are better than alternative notation like Index Notation (einsum) because they:
          </p>
          <ul>
             <li>Make it easy to spot patterns and symmetries</li>
             <li>Avoid all trouble with vectorization and Kronecker products</li>
             <li>Make Matrix Calculus simple and intuitive</li>
             <li>Represent functions and broadcasting effortlessly</li>
          </ul>

          <h2>Tensorgrad</h2>
          <p>is a <a href="https://github.com/thomasahle/tensorgrad/">python library</a>
            for symbolic tensor manipulation and derivatives using tensor diagrams.
            Try it here:</p>


          
       </div><div id="citation-info">
          <h2>How to Cite:</h2>
          <p>If you use The Tensor Cookbook in your research, please cite it using the following BibTeX entry:</p>
          <pre>@book{ahle2024tensorcookbook,
  title={The Tensor Cookbook},
  author={Ahle, Thomas Dybdahl},
  year={2024},
  url={https://tensorcookbook.com},
  note={Version: September, 2024}
}</pre>
       </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FBI, Dutch police disrupt 'Manipulaters' phishing gang (106 pts)]]></title>
            <link>https://krebsonsecurity.com/2025/01/fbi-dutch-police-disrupt-manipulaters-phishing-gang/</link>
            <guid>42890290</guid>
            <pubDate>Fri, 31 Jan 2025 18:36:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://krebsonsecurity.com/2025/01/fbi-dutch-police-disrupt-manipulaters-phishing-gang/">https://krebsonsecurity.com/2025/01/fbi-dutch-police-disrupt-manipulaters-phishing-gang/</a>, See on <a href="https://news.ycombinator.com/item?id=42890290">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
												<p>The FBI and authorities in The Netherlands this week seized dozens of servers and domains for a hugely popular spam and malware dissemination service operating out of Pakistan. The proprietors of the service, who use the collective nickname “<strong>The Manipulaters</strong>,” have been the subject of three stories published here since 2015. The FBI said the main clientele are organized crime groups that try to trick victim companies into making payments to a third party.</p>
<div id="attachment_56857"><p><img aria-describedby="caption-attachment-56857" decoding="async" src="https://krebsonsecurity.com/wp-content/uploads/2021/09/ftexploit.png" alt="" width="749" height="530" srcset="https://krebsonsecurity.com/wp-content/uploads/2021/09/ftexploit.png 1208w, https://krebsonsecurity.com/wp-content/uploads/2021/09/ftexploit-768x544.png 768w, https://krebsonsecurity.com/wp-content/uploads/2021/09/ftexploit-782x553.png 782w, https://krebsonsecurity.com/wp-content/uploads/2021/09/ftexploit-100x70.png 100w" sizes="(max-width: 749px) 100vw, 749px"></p><p id="caption-attachment-56857">One of several current Fudtools sites run by the principals of The Manipulators.</p></div>
<p>On January 29, the FBI and the Dutch national police seized the technical infrastructure for a cybercrime service marketed under the brands <strong>Heartsender</strong>, <strong>Fudpage</strong> and <strong>Fudtools</strong> (and many other “fud” variations). The “fud” bit stands for “Fully Un-Detectable,” and it refers to cybercrime resources that will evade detection by security tools like antivirus software or anti-spam appliances.</p>
<p>The Dutch authorities <a href="https://www.politie.nl/nieuws/2025/januari/27/09-verstoringsactie-deelt-klap-uit-aan-crimineel-cybernetwerk-heartsender.html" target="_blank" rel="noopener">said</a> 39 servers and domains abroad were seized, and that the servers contained millions of records from victims worldwide — including at least 100,000 records pertaining to Dutch citizens.</p>
<p>A <a href="https://www.justice.gov/usao-sdtx/pr/cybercrime-websites-selling-hacking-tools-transnational-organized-crime-groups-seized" target="_blank" rel="noopener">statement</a> from the <strong>U.S. Department of Justice</strong> refers to the cybercrime group as <strong>Saim Raza</strong>, after a pseudonym The Manipulaters communally used to promote their spam, malware and phishing services on social media.</p>
<p>“The Saim Raza-run websites operated as marketplaces that advertised and facilitated the sale of tools such as phishing kits, scam pages and email extractors often used to build and maintain fraud operations,” the DOJ explained.</p>
<p>The core Manipulaters product is <strong>Heartsender</strong>, a spam delivery service whose homepage openly advertised phishing kits targeting users of various Internet companies, including <strong>Microsoft 365</strong>,&nbsp;<strong>Yahoo</strong>,&nbsp;<strong>AOL</strong>,&nbsp;<strong>Intuit</strong>,&nbsp;<strong>iCloud</strong>&nbsp;and&nbsp;<strong>ID.me</strong>, to name a few.</p>
<p>The government says transnational organized crime groups that purchased these services primarily used them to run <a href="https://krebsonsecurity.com/tag/business-email-compromise/" target="_blank" rel="noopener">business email compromise</a> (BEC) schemes, wherein the cybercrime actors tricked victim companies into making payments to a third party.</p>
<p>“Those payments would instead be redirected to a financial account the perpetrators controlled, resulting in significant losses to victims,” the DOJ wrote. “These tools were also used to acquire victim user credentials and utilize those credentials to further these fraudulent schemes. The seizure of these domains is intended to disrupt the ongoing activity of these groups and stop the proliferation of these tools within the cybercriminal community.”</p>
<div id="attachment_67010"><p><img aria-describedby="caption-attachment-67010" decoding="async" loading="lazy" src="https://krebsonsecurity.com/wp-content/uploads/2024/04/manipulaters-o365.png" alt="" width="748" height="291" srcset="https://krebsonsecurity.com/wp-content/uploads/2024/04/manipulaters-o365.png 1097w, https://krebsonsecurity.com/wp-content/uploads/2024/04/manipulaters-o365-768x299.png 768w, https://krebsonsecurity.com/wp-content/uploads/2024/04/manipulaters-o365-782x304.png 782w" sizes="(max-width: 748px) 100vw, 748px"></p><p id="caption-attachment-67010">Manipulaters advertisement for “Office 365 Private Page with Antibot” phishing kit sold via Heartsender. “Antibot” refers to functionality that attempts to evade automated detection techniques, keeping a phish deployed and accessible as long as possible. Image: DomainTools.</p></div>
<p>KrebsOnSecurity first wrote about The Manipulaters <a href="https://krebsonsecurity.com/2015/05/phishing-gang-is-audacious-manipulator/" target="_blank" rel="noopener">in May 2015</a>, mainly because their ads at the time were blanketing a number of popular cybercrime forums, and because they were fairly open and brazen about what they were doing — even who they were in real life.</p>
<p>We caught up with The Manipulaters again in 2021, with <a href="https://krebsonsecurity.com/2021/09/fudco-spam-empire-tied-to-pakistani-software-firm/" target="_blank" rel="noopener">a story</a> that found the core employees had started a web coding company in Lahore called <strong>WeCodeSolutions</strong> — presumably as a way to account for their considerable Heartsender income. That piece examined how WeCodeSolutions employees had all doxed themselves on Facebook by posting pictures from company parties each year featuring a large cake with the words <strong>FudCo</strong> written in icing.<span id="more-70250"></span></p>
<p>A <a href="https://krebsonsecurity.com/2024/04/the-manipulaters-improve-phishing-still-fail-at-opsec/" target="_blank" rel="noopener">follow-up story last year</a> about The Manipulaters prompted messages from various WeCodeSolutions employees who pleaded with this publication to remove stories about them. The Saim Raza identity told KrebsOnSecurity they were recently released from jail after being arrested and charged by local police, although they declined to elaborate on the charges.</p>
<p>The Manipulaters never seemed to care much about protecting their own identities, so it’s not surprising that they were unable or unwilling to protect their own customers. In <a href="https://www.domaintools.com/resources/blog/the-resurgence-of-the-manipulaters-team-breaking-heartsenders?utm_source=Krebs-on-Security" target="_blank" rel="noopener">an analysis</a> released last year, <strong>DomainTools.com</strong> found the web-hosted version of Heartsender leaked an extraordinary amount of user information to unauthenticated users, including customer credentials and email records from Heartsender employees.</p>
<div id="attachment_56860"><p><img aria-describedby="caption-attachment-56860" decoding="async" loading="lazy" src="https://krebsonsecurity.com/wp-content/uploads/2021/09/fudcocake.png" alt="" width="751" height="773" srcset="https://krebsonsecurity.com/wp-content/uploads/2021/09/fudcocake.png 834w, https://krebsonsecurity.com/wp-content/uploads/2021/09/fudcocake-768x790.png 768w, https://krebsonsecurity.com/wp-content/uploads/2021/09/fudcocake-782x805.png 782w" sizes="(max-width: 751px) 100vw, 751px"></p><p id="caption-attachment-56860">Almost every year since their founding, The Manipulaters have posted a picture of a FudCo cake from a company party celebrating its anniversary.</p></div>
<p>DomainTools also uncovered evidence that the computers used by The Manipulaters were all infected with the same password-stealing malware, and that vast numbers of credentials were stolen from the group and sold online.</p>
<p>“Ironically, the Manipulaters may create more short-term risk to their own customers than law enforcement,” DomainTools wrote. “The data table ‘User Feedbacks’ (sic) exposes what appear to be customer authentication tokens, user identifiers, and even a customer support request that exposes root-level SMTP credentials–all visible by an unauthenticated user on a Manipulaters-controlled domain.”</p>
<p>Police in The Netherlands said the investigation into the owners and customers of the service is ongoing.</p>
<p>“The Cybercrime Team is on the trail of a number of buyers of the tools,” the Dutch national police said. “Presumably, these buyers also include Dutch nationals. The investigation into the makers and buyers of this phishing software has not yet been completed with the seizure of the servers and domains.”</p>
<p>U.S. authorities this week also joined law enforcement in Australia, France, Greece, Italy, Romania and Spain in seizing a number of domains for several long-running cybercrime forums and services, including <strong>Cracked</strong> and <strong>Nulled</strong>. According to <a href="https://www.europol.europa.eu/media-press/newsroom/news/law-enforcement-takes-down-two-largest-cybercrime-forums-in-world" target="_blank" rel="noopener">a statement</a> from the European police agency <strong>Europol</strong>, the two communities attracted more than 10 million users in total.</p>
<p>Other domains seized as part of “<strong>Operation Talent</strong>” included <strong>Sellix</strong>, an e-commerce platform that was frequently used by cybercrime forum members to buy and sell illicit goods and services.</p>
											</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Three AM 911 call, 9 AM salesman (157 pts)]]></title>
            <link>https://a.wholelottanothing.org/when-everything-becomes-a-profit-center/</link>
            <guid>42889777</guid>
            <pubDate>Fri, 31 Jan 2025 17:47:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://a.wholelottanothing.org/when-everything-becomes-a-profit-center/">https://a.wholelottanothing.org/when-everything-becomes-a-profit-center/</a>, See on <a href="https://news.ycombinator.com/item?id=42889777">Hacker News</a></p>
Couldn't get https://a.wholelottanothing.org/when-everything-becomes-a-profit-center/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Living with Nausea: My Story in Six Charts (107 pts)]]></title>
            <link>https://www.c82.net/blog/?id=96</link>
            <guid>42889700</guid>
            <pubDate>Fri, 31 Jan 2025 17:37:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.c82.net/blog/?id=96">https://www.c82.net/blog/?id=96</a>, See on <a href="https://news.ycombinator.com/item?id=42889700">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="entry">
    






<figure>
    <img alt="Collage of charts" src="https://www.c82.net/images/blog/nausea-cover.jpg">
</figure>

<p>I used to have boring health. I never had more than the flu, been admitted to the hospital, and I could eat whatever I wanted, whenever I wanted. In late 2023, that changed when I developed chronic nausea.</p>
<p>The nausea started on November 20, 2023, with what I thought was nothing more than a mild upset stomach and has continued every day since, with varying intensity without any clear triggers. I’ve seen a dozen doctors, tried many medications, and have been subjected to more tests than before I became ill. Nothing pointed to a clear cause and no treatment has had lasting effects.</p>
<p>Chronic nausea is invisible and debilitating.<br>I’m learning how to be me again.</p>
<p>I never gave much thought to what I ate. I ate when I was hungry, enjoyed going to work, lost myself in my projects, and visited family regularly, eating out often on trips. Now, I carefully monitor everything I eat and have up to seven small meals a day. I’m only able to eat small amounts of food at a time because I feel extremely full if I have anything resembling a complete meal. <strong>I’ve learned to eat <em>through</em> the nausea.</strong> I rely on foods that are easy to digest and eat roughly every two hours so I can get enough nutrients to maintain a constant weight. I used to travel every year to visit family but have had to cancel more than a year’s worth of trips because there have been many times when I could barely leave my house to run errands, let alone fly to another state. I take frequent naps, not because I’m tired, but because they allow me to escape the awareness of how I feel. My life revolves around how poorly I’m feeling and it’s hard to focus on much else.</p>
<p>My doctors initially diagnosed me with <a href="https://www.mayoclinic.org/diseases-conditions/gastroparesis/symptoms-causes/syc-20355787">gastroparesis</a>, which means food didn’t pass through my stomach as fast as it should, and as a result, ferments and causes nausea. Later, that diagnosis was broadened to include <a href="https://www.mayoclinic.org/diseases-conditions/functional-dyspepsia/symptoms-causes/syc-20375709">functional dyspepsia</a> and <a href="https://my.clevelandclinic.org/health/diseases/22997-visceral-hypersensitivity">visceral hypersensitivity</a>—both of which are vague umbrella terms that essentially mean I have an upset stomach with no clear cause and no cure.</p>
<p>When I realized the nausea was becoming chronic, I started doing one thing I could control—<strong>collect data about it</strong>. At the end of each day, I took up writing basic notes about how I felt that day, any treatments I tried, and assigning a number to it from 0 to 10 based on how nauseous I felt.</p>

<figure>
    
    <figcaption>Timeline of daily nausea severity with running average</figcaption>
</figure>

<figure>
    <ol start="0">
        <li>No nausea all day</li>
        <li>Occasional periods with little or no nausea</li>
        <li>Noticeable but manageable nausea all day</li>
        <li>Steady nausea all day with difficulty focusing, one or two naps needed</li>
        <li>Unavoidable nausea with multiple naps needed for relief</li>
        <li>Constant strong nausea all day, multiple naps needed</li>
        <li>Strong nausea all day and schedule changes needed for relief</li>
        <li>Vomiting at least once, hospital visit optional</li>
        <li>Unable to keep food down, hospital visit needed</li>
        <li>Vomiting, pain, hospital visit</li>
        <li>Prolonged hospital visit</li>
    </ol>
</figure>

<p>Originally, I tracked this to help my doctors better understand how I was feeling and create new treatment plans but that never happened, despite mentioning it to every doctor I’ve seen. Instead, I use it as a point of reference to remind myself what I’ve tried and to identify trends.</p>
<p>What I’ve found most interesting is the regular intervals at which my nausea flares up—about two weeks. This was surprising because I didn’t expect there to be such regularity. I’ve learned to consider this pattern when evaluating a treatment’s effectiveness. If a treatment had a meaningful impact beyond two weeks, it would be considered effective. Unfortunately, few have.</p>
<p>I’ve seen a range of doctors over dozens of visits in an effort to find relief, including my regular doctor, gastroenterologists, surgeons, therapists, a dietician, and a neurologist. The conversations I’ve had have typically been less than an hour long and comprised me giving a too-brief summary on how I’ve been feeling, reviewing tests results, some general questions about any changes in my habits, and a suggestion to try anti-anxiety medication, over-the-counter medication, or continue waiting to see if my symptoms improve on their own.</p>

<figure>
    
    <figcaption>Timeline of doctor visits</figcaption>
</figure>

<p>From November 2023 to May 2024, I saw my gastroenterologist, psychologist, and dietician on a regular basis. By summer, I started to feel better—even without medication—so appointments were scaled back. The nausea never completely subsided but felt manageable. However, it increased substantially toward the end of June, which prompted me to consider seeing other doctors to help me cope. I met with a neurologist, who was kind enough to listen to my story from beginning to end over the course of two hours. The outcome was similar but I was glad I had the chance to tell him my full story. I started seeing a psychiatrist to see if off-label use of psychiatric medication would help but as of this writing, I’m still evaluating its effectiveness.</p>
<p>Appointments have been emotional roller coasters. Before each one, I naively started to hope that a recent test or experience with medication would reveal something new, or my doctor would have a new treatment to try. Often, the outcome is hearing that everything “looks normal” or that my problems are due to anxiety, which are two of the most crushing responses to hear, especially when I feel far from normal. Weeks or months have often separated appointments, partly because of availability, but also because trying new treatments takes time. Waiting months to see doctors or try treatments only to be told the same result after a short 30-minute visit is a constant source of frustration.</p>
<p>None of my doctors could identify a clear cause for the ongoing nausea but two key events may have contributed:</p>

<ul>
    <li>On September 19, 2023, I tested positive for <strong>COVID-19</strong>. Having been vaccinated, it seemed to be a mild case with common symptoms—such as congestion, loss of smell, loss of taste, and of course, nausea. Unusual symptoms included vertigo and a numb toe. After 12 days, I felt normal again and had no lasting ill effects.</li>
    <li>On November 2, 2023, I caught the <strong>stomach flu</strong> and felt nauseous during the last day of a vacation in Florida and collapsed after standing up too quickly, hitting my head on the way down. I’ve always been somewhat prone to vasovagal syncope but only succumbed to it a handful of times. After coming to in less than a minute, I vomited and had a panic attack. The nausea subsided a few days later with no lasting ill effects. Doctors suspected it was little more than a stomach bug.</li>
</ul>

<p>These two events were far enough away from my initial onset of chronic nausea that none of my doctors could definitively say if either was the cause of my nausea but believe they may have damaged some of my gastrointestinal nerves. Unfortunately, knowing a potential cause doesn’t necessarily result in an effective treatment.</p>
<p>Procedures I’ve had include numerous blood draws, CT scans, gastric emptying studies (GES), ultrasounds, and a failed pharmaceutical clinical trial. Early on, a lot of the standard tests were performed to rule out obvious causes like obstructions, cancer, etc.</p>

<figure>
    
    <figcaption>Timeline of tests and procedures</figcaption>
</figure>

<p>The only test that showed something conclusive was my first gastric emptying study. Out of all the tests I’ve had, it was the most pleasant because it simply involved eating some scrambled eggs laced with a harmless radioactive tracer along with a piece of toast and taking scans of my abdomen over the course of four hours to see how the food moved through my system. After four hours, I should have had 10% or less in my stomach but in December 2023, I had 41% remaining, which indicated gastroparesis. Based on that, I was prescribed a few medications to make my gastrointestinal muscles work more efficiently but none had a lasting effect. The second study I had in September 2024 showed 8% remaining, at which point my gastroparesis was considered resolved but my symptoms persisted.</p>

<figure>
    
    <figcaption>Chart of gastric emptying studies</figcaption>
</figure>

<p>There was some concern early on that I may have <a href="https://www.mayoclinic.org/diseases-conditions/median-arcuate-ligament-syndrome-mals/symptoms-causes/syc-20505001">median arcuate ligament syndrome (MALS)</a> because one of my arteries appeared more compressed than expected in an ultrasound but that was ruled out after a follow-up ultrasound and a consultation with a vascular surgeon, who didn’t feel there was cause for concern.</p>
<p>ER visits bookended 2024—one in January for excess stomach acid caused by stopping an acid-blocking medication and again in November for a suspected small bowel obstruction, later thought to be enteritis. The latter required staying in the hospital for four days with an NG tube in my nose to drain my stomach (not a fun experience). My nausea subsided while the tube was in place but came back a couple days after being discharged. Despite the circumstances, the lack of nausea was a welcomed, albeit brief relief. During my hospital stay, my many tests were punctuated by panic attacks. Prior to becoming sick, I hadn’t had a panic attack but quickly learned what they feel like so I know what to expect in the future if I feel one coming on. The hospital staff were angels that provided immeasurable help throughout my stay in the hospital and I will be forever grateful for them.</p>
<p>I’ve tried numerous over-the-counter and prescription-strength medications since my nausea started with varying levels of success. Few medications had an immediate effect, so I often had to wait weeks to determine if they helped and they often came with side effects.</p>

<figure>
    
    <figcaption>Timeline of number of medication doses each month</figcaption>
</figure>

<p>The earliest medications I tried were over-the-counter like <strong>Dramamine</strong> and <strong>FDgard</strong> but they did little to help and thankfully had no side effects. When those didn’t work, <strong>Zofran</strong> (often prescribed to cancer patients going through chemotherapy) was prescribed but only lasted a short while. Zofran did cause constipation so more medication was needed to keep that at bay.</p>
<p>Acid-reducing medication like <strong>omeprazole</strong> and <strong>pantoprazole</strong> were prescribed, thinking that my nausea was due to excess stomach acid, but they didn’t touch the nausea. I learned the hard way that stopping pantoprazole suddenly is not recommended because doing so caused excess acid and my first trip to the ER.</p>
<p>To help with motility, or the movement of food through the digestive tract, I tried <strong>Reglan</strong> for about two months. It had no positive impact on my nausea but did cause strong hunger pangs before meals, which implies it had some positive effect on motility. My muscles also started twitching occasionally, which could have been signs of early <a href="https://my.clevelandclinic.org/health/diseases/6125-tardive-dyskinesia">tardive dyskinesia</a> (a common side effect). It can also become chronic and incurable if left untreated so once the twitching started, I discontinued it.</p>
<p><strong>Erythromycin</strong> was prescribed toward the end of February and was the first medication with a noticeable positive effect and may have contributed to why I was able to spend about two months after my regimen without medication. It’s primary use is as an antibiotic but is used off-label to treat delayed gastric emptying (gastroparesis) and nausea in lower doses. The only negative side effect was a strong sense of hunger before meals. When my nausea started to increase at the end of June, I was prescribed a second round but it wasn’t as effective—a common experience for those taking it long term.</p>
<p>In August 2024, I learned of a clinical trial for <strong>Tradipitant</strong>—a new drug that was supposed to help reduce nausea in gastroparesis patients. I had to go through a screening period but made it into the trial and took it regularly for two months. Ultimately, the medication didn’t have any positive impact on my nausea but also didn’t cause negative side effects. While it was a lot of time to spend on an experimental treatment that didn’t pan out, I’m glad I did it. Otherwise, I would have forever wondered if it could have helped me.</p>
<p>Since September 2024, I’ve also been on increasing dosages of <strong>mirtazapine</strong> for depression and an off-label use of reducing nausea as well as Pepcid AC to keep stomach acid at bay. The side effects have been minimal and manageable. Since December 2024, I’ve also been trying <strong>Marinol</strong>—a synthetic form of cannabis to help with nausea, appetite, and fullness. As of this writing, it’s too soon to tell if it’s working but there haven’t been any noticeable negative side effects.</p>
<p>Two over-the-counter medications have proven to be surprisingly effective: <strong>ginger and pectin lozenges</strong>. When my chronic nausea began, I wrote off ginger because I had tried Dramamine ginger chews with no success. Toward the end of December 2023, I bought several kinds of lozenges to give them another try and was pleasantly surprised to find that <a href="https://www.amazon.com/dp/B0BQKKV8JC">UpSpring Stomach Settles ginger lozenges</a> helped when my nausea was mild and <a href="https://www.amazon.com/Breezers-Creamy-Strawberry-Throat-Economy/dp/B07MNKZDK2">Halls Throat Soothing drops</a> helped when I was feeling the effects of excess acid. Both helped within minutes and even though they only lasted a short while (hours at most), having them available has been a big help physically and mentally. Both are available on Amazon and Walgreens.</p>
<p>Throughout this ordeal, my weight has also been a constant focus. I’ve tracked my daily weight since August 2022 purely out of curiosity after seeing how others have tracked their weight and shared how it was affected by diets, medical conditions, life events, etc. I found it interesting to see how my weight fluctuated based on diet, exercise, travel, and even sleep. In an effort to keep it accurate, I developed the habit of weighing myself first thing in the morning and last thing at night and tracking the data using the Health app on iOS. This highlighted a problem that I was unaware of when my chronic nausea first started: <strong>I stopped eating enough</strong>.</p>

<figure>
    
    <figcaption>Chart of average monthly weight</figcaption>
</figure>

<p>When I was nauseous, the last thing I wanted to do was eat so I simply ate less in a futile effort to keep it at bay. As a result, I started shedding pounds and not in a healthy way. Looking back to before I caught COVID, my weight hovered just below 170 lbs and my height was 5′9″. I lost some weight during COVID then it fell off sharply once the chronic nausea started. At my lowest in March, I weighed about 146 lbs. I struggled a great deal to find foods with enough calories and nutrients to maintain a healthy weight. My sessions with my dietician helped me figure out what I could eat and get me back on track. Over the next several months, I slowly inched back up to about 161 lbs. by June. Unfortunately, the increasing nausea around that time and subsequent hospital stay in November resulted in more weight loss, but I am slowly doing my best to gain it back.</p>
<p>A few of my doctors have recommended that I stop tracking all this data to improve my mental health and stop focusing on how I feel. While I understand why, I continue because I won’t be able to remember everything and I still hold out hope of finding meaningful information in all the noise. If nothing else, my experiences may prove useful for others going through similar situations. For better or worse, it’s become a cornerstone of my illness.</p>
<p>The hardest thing to come to terms with is that I likely won’t get better. There’s always the chance that my chronic nausea could go away on its own but that uncertainty is daunting. My family and friends have been invaluable in helping me through this long chaos. I love them more than they could ever know. There are more options I can try and I intend to try everything I can until I find something that works.</p>
<p>I will do everything I can to make my health boring again.</p>

<hr>

<h2>Author’s notes</h2>

<p>I am not a medical professional. This blog post does not constitute medical advice. The information in this post is about what I’ve tried as well as what has or hasn’t worked for me. Consult your doctor before making medical decisions.</p>
<p>This blog post was inspired by Giorgia Lupi’s excellent <cite><a href="http://giorgialupi.com/1374-days-nyt-visual-oped">1,374 Days of COVID</a></cite>, chronicling her life-changing experience living with long COVID.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Shell-ish scripting in Go with ease (105 pts)]]></title>
            <link>https://github.com/bitfield/script</link>
            <guid>42889465</guid>
            <pubDate>Fri, 31 Jan 2025 17:14:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/bitfield/script">https://github.com/bitfield/script</a>, See on <a href="https://news.ycombinator.com/item?id=42889465">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a href="https://pkg.go.dev/github.com/bitfield/script" rel="nofollow"><img src="https://camo.githubusercontent.com/26683446980ba8cccc9e6b1d6c3036dcc42964dec198651d8be9fc67607085ad/68747470733a2f2f706b672e676f2e6465762f62616467652f6769746875622e636f6d2f6269746669656c642f7363726970742e737667" alt="Go Reference" data-canonical-src="https://pkg.go.dev/badge/github.com/bitfield/script.svg"></a>
<a href="https://goreportcard.com/report/github.com/bitfield/script" rel="nofollow"><img src="https://camo.githubusercontent.com/43e914a62d1aba296838a8b5a731c48c210541313f8549be9436193364624f4f/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f6269746669656c642f736372697074" alt="Go Report Card" data-canonical-src="https://goreportcard.com/badge/github.com/bitfield/script"></a>
<a href="https://github.com/avelino/awesome-go"><img src="https://camo.githubusercontent.com/adb8f3e4da7635816556cc11275410d326f132ce011955a341259bc1061ff351/68747470733a2f2f617765736f6d652e72652f6d656e74696f6e65642d62616467652d666c61742e737667" alt="Mentioned in Awesome Go" data-canonical-src="https://awesome.re/mentioned-badge-flat.svg"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/bitfield/script/actions/workflows/ci.yml/badge.svg"><img src="https://github.com/bitfield/script/actions/workflows/ci.yml/badge.svg" alt="CI"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/bitfield/script/actions/workflows/audit.yml/badge.svg"><img src="https://github.com/bitfield/script/actions/workflows/audit.yml/badge.svg" alt="Audit"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="import &quot;github.com/bitfield/script&quot;"><pre><span>import</span> <span>"github.com/bitfield/script"</span></pre></div>
<p dir="auto"><a href="https://bitfieldconsulting.com/golang/scripting" rel="nofollow"><img src="https://github.com/bitfield/script/raw/master/img/magic.png" alt="Magical gopher logo"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What is <code>script</code>?</h2><a id="user-content-what-is-script" aria-label="Permalink: What is script?" href="#what-is-script"></a></p>
<p dir="auto"><code>script</code> is a Go library for doing the kind of tasks that shell scripts are good at: reading files, executing subprocesses, counting lines, matching strings, and so on.</p>
<p dir="auto">Why shouldn't it be as easy to write system administration programs in Go as it is in a typical shell? <code>script</code> aims to make it just that easy.</p>
<p dir="auto">Shell scripts often compose a sequence of operations on a stream of data (a <em>pipeline</em>). This is how <code>script</code> works, too.</p>
<blockquote>
<p dir="auto"><em>This is one absolutely superb API design. Taking inspiration from shell pipes and turning it into a Go library with syntax this clean is really impressive.</em><br>
—<a href="https://news.ycombinator.com/item?id=30649524" rel="nofollow">Simon Willison</a></p>
</blockquote>
<p dir="auto">Read more: <a href="https://bitfieldconsulting.com/golang/scripting" rel="nofollow">Scripting with Go</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Quick start: Unix equivalents</h2><a id="user-content-quick-start-unix-equivalents" aria-label="Permalink: Quick start: Unix equivalents" href="#quick-start-unix-equivalents"></a></p>
<p dir="auto">If you're already familiar with shell scripting and the Unix toolset, here is a rough guide to the equivalent <code>script</code> operation for each listed Unix command.</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Unix / shell</th>
<th><code>script</code> equivalent</th>
</tr>
</thead>
<tbody>
<tr>
<td>(any program name)</td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Exec" rel="nofollow"><code>Exec</code></a></td>
</tr>
<tr>
<td><code>[ -f FILE ]</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#IfExists" rel="nofollow"><code>IfExists</code></a></td>
</tr>
<tr>
<td><code>&gt;</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.WriteFile" rel="nofollow"><code>WriteFile</code></a></td>
</tr>
<tr>
<td><code>&gt;&gt;</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.AppendFile" rel="nofollow"><code>AppendFile</code></a></td>
</tr>
<tr>
<td><code>$*</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Args" rel="nofollow"><code>Args</code></a></td>
</tr>
<tr>
<td><code>base64</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.DecodeBase64" rel="nofollow"><code>DecodeBase64</code></a> / <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.EncodeBase64" rel="nofollow"><code>EncodeBase64</code></a></td>
</tr>
<tr>
<td><code>basename</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Basename" rel="nofollow"><code>Basename</code></a></td>
</tr>
<tr>
<td><code>cat</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#File" rel="nofollow"><code>File</code></a> / <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Concat" rel="nofollow"><code>Concat</code></a></td>
</tr>
<tr>
<td><code>curl</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Do" rel="nofollow"><code>Do</code></a> / <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Get" rel="nofollow"><code>Get</code></a> / <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Post" rel="nofollow"><code>Post</code></a></td>
</tr>
<tr>
<td><code>cut</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Column" rel="nofollow"><code>Column</code></a></td>
</tr>
<tr>
<td><code>dirname</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Dirname" rel="nofollow"><code>Dirname</code></a></td>
</tr>
<tr>
<td><code>echo</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Echo" rel="nofollow"><code>Echo</code></a></td>
</tr>
<tr>
<td><code>find</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#FindFiles" rel="nofollow"><code>FindFiles</code></a></td>
</tr>
<tr>
<td><code>grep</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Match" rel="nofollow"><code>Match</code></a> / <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.MatchRegexp" rel="nofollow"><code>MatchRegexp</code></a></td>
</tr>
<tr>
<td><code>grep -v</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Reject" rel="nofollow"><code>Reject</code></a> / <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.RejectRegexp" rel="nofollow"><code>RejectRegexp</code></a></td>
</tr>
<tr>
<td><code>head</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.First" rel="nofollow"><code>First</code></a></td>
</tr>
<tr>
<td><code>jq</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.JQ" rel="nofollow"><code>JQ</code></a></td>
</tr>
<tr>
<td><code>ls</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#ListFiles" rel="nofollow"><code>ListFiles</code></a></td>
</tr>
<tr>
<td><code>sed</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Replace" rel="nofollow"><code>Replace</code></a> / <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.ReplaceRegexp" rel="nofollow"><code>ReplaceRegexp</code></a></td>
</tr>
<tr>
<td><code>sha256sum</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Hash" rel="nofollow"><code>Hash</code></a> / <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.HashSums" rel="nofollow"><code>HashSums</code></a></td>
</tr>
<tr>
<td><code>tail</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Last" rel="nofollow"><code>Last</code></a></td>
</tr>
<tr>
<td><code>tee</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Tee" rel="nofollow"><code>Tee</code></a></td>
</tr>
<tr>
<td><code>uniq -c</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Freq" rel="nofollow"><code>Freq</code></a></td>
</tr>
<tr>
<td><code>wc -l</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.CountLines" rel="nofollow"><code>CountLines</code></a></td>
</tr>
<tr>
<td><code>xargs</code></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.ExecForEach" rel="nofollow"><code>ExecForEach</code></a></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Some examples</h2><a id="user-content-some-examples" aria-label="Permalink: Some examples" href="#some-examples"></a></p>
<p dir="auto">Let's see some simple examples. Suppose you want to read the contents of a file as a string:</p>
<div dir="auto" data-snippet-clipboard-copy-content="contents, err := script.File(&quot;test.txt&quot;).String()"><pre><span>contents</span>, <span>err</span> <span>:=</span> <span>script</span>.<span>File</span>(<span>"test.txt"</span>).<span>String</span>()</pre></div>
<p dir="auto">That looks straightforward enough, but suppose you now want to count the lines in that file.</p>
<div dir="auto" data-snippet-clipboard-copy-content="numLines, err := script.File(&quot;test.txt&quot;).CountLines()"><pre><span>numLines</span>, <span>err</span> <span>:=</span> <span>script</span>.<span>File</span>(<span>"test.txt"</span>).<span>CountLines</span>()</pre></div>
<p dir="auto">For something a bit more challenging, let's try counting the number of lines in the file that match the string <code>Error</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="numErrors, err := script.File(&quot;test.txt&quot;).Match(&quot;Error&quot;).CountLines()"><pre><span>numErrors</span>, <span>err</span> <span>:=</span> <span>script</span>.<span>File</span>(<span>"test.txt"</span>).<span>Match</span>(<span>"Error"</span>).<span>CountLines</span>()</pre></div>
<p dir="auto">But what if, instead of reading a specific file, we want to simply pipe input into this program, and have it output only matching lines (like <code>grep</code>)?</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.Stdin().Match(&quot;Error&quot;).Stdout()"><pre><span>script</span>.<span>Stdin</span>().<span>Match</span>(<span>"Error"</span>).<span>Stdout</span>()</pre></div>
<p dir="auto">Just for fun, let's filter all the results through some arbitrary Go function:</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.Stdin().Match(&quot;Error&quot;).FilterLine(strings.ToUpper).Stdout()"><pre><span>script</span>.<span>Stdin</span>().<span>Match</span>(<span>"Error"</span>).<span>FilterLine</span>(<span>strings</span>.<span>ToUpper</span>).<span>Stdout</span>()</pre></div>
<p dir="auto">That was almost too easy! So let's pass in a list of files on the command line, and have our program read them all in sequence and output the matching lines:</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.Args().Concat().Match(&quot;Error&quot;).Stdout()"><pre><span>script</span>.<span>Args</span>().<span>Concat</span>().<span>Match</span>(<span>"Error"</span>).<span>Stdout</span>()</pre></div>
<p dir="auto">Maybe we're only interested in the first 10 matches. No problem:</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.Args().Concat().Match(&quot;Error&quot;).First(10).Stdout()"><pre><span>script</span>.<span>Args</span>().<span>Concat</span>().<span>Match</span>(<span>"Error"</span>).<span>First</span>(<span>10</span>).<span>Stdout</span>()</pre></div>
<p dir="auto">What's that? You want to append that output to a file instead of printing it to the terminal? <em>You've got some attitude, mister</em>. But okay:</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.Args().Concat().Match(&quot;Error&quot;).First(10).AppendFile(&quot;/var/log/errors.txt&quot;)"><pre><span>script</span>.<span>Args</span>().<span>Concat</span>().<span>Match</span>(<span>"Error"</span>).<span>First</span>(<span>10</span>).<span>AppendFile</span>(<span>"/var/log/errors.txt"</span>)</pre></div>
<p dir="auto">And if we'd like to send the output to the terminal <em>as well as</em> to the file, we can do that:</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.Echo(&quot;data&quot;).Tee().AppendFile(&quot;data.txt&quot;)"><pre><span>script</span>.<span>Echo</span>(<span>"data"</span>).<span>Tee</span>().<span>AppendFile</span>(<span>"data.txt"</span>)</pre></div>
<p dir="auto">We're not limited to getting data only from files or standard input. We can get it from HTTP requests too:</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.Get(&quot;https://wttr.in/London?format=3&quot;).Stdout()
// Output:
// London: 🌦   +13°C"><pre><span>script</span>.<span>Get</span>(<span>"https://wttr.in/London?format=3"</span>).<span>Stdout</span>()
<span>// Output:</span>
<span>// London: 🌦   +13°C</span></pre></div>
<p dir="auto">That's great for simple GET requests, but suppose we want to <em>send</em> some data in the body of a POST request, for example. Here's how that works:</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.Echo(data).Post(URL).Stdout()"><pre><span>script</span>.<span>Echo</span>(<span>data</span>).<span>Post</span>(<span>URL</span>).<span>Stdout</span>()</pre></div>
<p dir="auto">If we need to customise the HTTP behaviour in some way, such as using our own HTTP client, we can do that:</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.NewPipe().WithHTTPClient(&amp;http.Client{
	Timeout: 10 * time.Second,
}).Get(&quot;https://example.com&quot;).Stdout()"><pre><span>script</span>.<span>NewPipe</span>().<span>WithHTTPClient</span>(<span>&amp;</span>http.<span>Client</span>{
	<span>Timeout</span>: <span>10</span> <span>*</span> <span>time</span>.<span>Second</span>,
}).<span>Get</span>(<span>"https://example.com"</span>).<span>Stdout</span>()</pre></div>
<p dir="auto">Or maybe we need to set some custom header on the request. No problem. We can just create the request in the usual way, and set it up however we want. Then we pass it to <code>Do</code>, which will actually perform the request:</p>
<div dir="auto" data-snippet-clipboard-copy-content="req, err := http.NewRequest(http.MethodGet, &quot;http://example.com&quot;, nil)
req.Header.Add(&quot;Authorization&quot;, &quot;Bearer &quot;+token)
script.Do(req).Stdout()"><pre><span>req</span>, <span>err</span> <span>:=</span> <span>http</span>.<span>NewRequest</span>(<span>http</span>.<span>MethodGet</span>, <span>"http://example.com"</span>, <span>nil</span>)
<span>req</span>.<span>Header</span>.<span>Add</span>(<span>"Authorization"</span>, <span>"Bearer "</span><span>+</span><span>token</span>)
<span>script</span>.<span>Do</span>(<span>req</span>).<span>Stdout</span>()</pre></div>
<p dir="auto">The HTTP server could return some non-okay response, though; for example, “404 Not Found”. So what happens then?</p>
<p dir="auto">In general, when any pipe stage (such as <code>Do</code>) encounters an error, it produces no output to subsequent stages. And <code>script</code> treats HTTP response status codes outside the range 200-299 as errors. So the answer for the previous example is that we just won't <em>see</em> any output from this program if the server returns an error response.</p>
<p dir="auto">Instead, the pipe “remembers” any error that occurs, and we can retrieve it later by calling its <code>Error</code> method, or by using a <em>sink</em> method such as <code>String</code>, which returns an <code>error</code> value along with the result.</p>
<p dir="auto"><code>Stdout</code> also returns an error, plus the number of bytes successfully written (which we don't care about for this particular case). So we can check that error, which is always a good idea in Go:</p>
<div dir="auto" data-snippet-clipboard-copy-content="_, err := script.Do(req).Stdout()
if err != nil {
	log.Fatal(err)
}"><pre><span>_</span>, <span>err</span> <span>:=</span> <span>script</span>.<span>Do</span>(<span>req</span>).<span>Stdout</span>()
<span>if</span> <span>err</span> <span>!=</span> <span>nil</span> {
	<span>log</span>.<span>Fatal</span>(<span>err</span>)
}</pre></div>
<p dir="auto">If, as is common, the data we get from an HTTP request is in JSON format, we can use <a href="https://stedolan.github.io/jq/" rel="nofollow">JQ</a> queries to interrogate it:</p>
<div dir="auto" data-snippet-clipboard-copy-content="data, err := script.Do(req).JQ(&quot;.[0] | {message: .commit.message, name: .commit.committer.name}&quot;).String()"><pre><span>data</span>, <span>err</span> <span>:=</span> <span>script</span>.<span>Do</span>(<span>req</span>).<span>JQ</span>(<span>".[0] | {message: .commit.message, name: .commit.committer.name}"</span>).<span>String</span>()</pre></div>
<p dir="auto">We can also run external programs and get their output:</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.Exec(&quot;ping 127.0.0.1&quot;).Stdout()"><pre><span>script</span>.<span>Exec</span>(<span>"ping 127.0.0.1"</span>).<span>Stdout</span>()</pre></div>
<p dir="auto">Note that <code>Exec</code> runs the command concurrently: it doesn't wait for the command to complete before returning any output. That's good, because this <code>ping</code> command will run forever (or until we get bored).</p>
<p dir="auto">Instead, when we read from the pipe using <code>Stdout</code>, we see each line of output as it's produced:</p>
<div data-snippet-clipboard-copy-content="PING 127.0.0.1 (127.0.0.1): 56 data bytes
64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.056 ms
64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.054 ms
..."><pre><code>PING 127.0.0.1 (127.0.0.1): 56 data bytes
64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.056 ms
64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.054 ms
...
</code></pre></div>
<p dir="auto">In the <code>ping</code> example, we knew the exact arguments we wanted to send the command, and we just needed to run it once. But what if we don't know the arguments yet? We might get them from the user, for example.</p>
<p dir="auto">We might like to be able to run the external command repeatedly, each time passing it the next line of data from the pipe as an argument. No worries:</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.Args().ExecForEach(&quot;ping -c 1 {{.}}&quot;).Stdout()"><pre><span>script</span>.<span>Args</span>().<span>ExecForEach</span>(<span>"ping -c 1 {{.}}"</span>).<span>Stdout</span>()</pre></div>
<p dir="auto">That <code>{{.}}</code> is standard Go template syntax; it'll substitute each line of data from the pipe into the command line before it's executed. You can write as fancy a Go template expression as you want here (but this simple example probably covers most use cases).</p>
<p dir="auto">If there isn't a built-in operation that does what we want, we can just write our own, using <code>Filter</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.Echo(&quot;hello world&quot;).Filter(func (r io.Reader, w io.Writer) error {
	n, err := io.Copy(w, r)
	fmt.Fprintf(w, &quot;\nfiltered %d bytes\n&quot;, n)
	return err
}).Stdout()
// Output:
// hello world
// filtered 11 bytes"><pre><span>script</span>.<span>Echo</span>(<span>"hello world"</span>).<span>Filter</span>(<span>func</span> (<span>r</span> io.<span>Reader</span>, <span>w</span> io.<span>Writer</span>) <span>error</span> {
	<span>n</span>, <span>err</span> <span>:=</span> <span>io</span>.<span>Copy</span>(<span>w</span>, <span>r</span>)
	<span>fmt</span>.<span>Fprintf</span>(<span>w</span>, <span>"<span>\n</span>filtered %d bytes<span>\n</span>"</span>, <span>n</span>)
	<span>return</span> <span>err</span>
}).<span>Stdout</span>()
<span>// Output:</span>
<span>// hello world</span>
<span>// filtered 11 bytes</span></pre></div>
<p dir="auto">The <code>func</code> we supply to <code>Filter</code> takes just two parameters: a reader to read from, and a writer to write to. The reader reads the previous stages of the pipe, as you might expect, and anything written to the writer goes to the <em>next</em> stage of the pipe.</p>
<p dir="auto">If our <code>func</code> returns some error, then, just as with the <code>Do</code> example, the pipe's error status is set, and subsequent stages become a no-op.</p>
<p dir="auto">Filters run concurrently, so the pipeline can start producing output before the input has been fully read, as it did in the <code>ping</code> example. In fact, most built-in pipe methods, including <code>Exec</code>, are implemented <em>using</em> <code>Filter</code>.</p>
<p dir="auto">If we want to scan input line by line, we could do that with a <code>Filter</code> function that creates a <code>bufio.Scanner</code> on its input, but we don't need to:</p>
<div dir="auto" data-snippet-clipboard-copy-content="script.Echo(&quot;a\nb\nc&quot;).FilterScan(func(line string, w io.Writer) {
	fmt.Fprintf(w, &quot;scanned line: %q\n&quot;, line)
}).Stdout()
// Output:
// scanned line: &quot;a&quot;
// scanned line: &quot;b&quot;
// scanned line: &quot;c&quot;"><pre><span>script</span>.<span>Echo</span>(<span>"a<span>\n</span>b<span>\n</span>c"</span>).<span>FilterScan</span>(<span>func</span>(<span>line</span> <span>string</span>, <span>w</span> io.<span>Writer</span>) {
	<span>fmt</span>.<span>Fprintf</span>(<span>w</span>, <span>"scanned line: %q<span>\n</span>"</span>, <span>line</span>)
}).<span>Stdout</span>()
<span>// Output:</span>
<span>// scanned line: "a"</span>
<span>// scanned line: "b"</span>
<span>// scanned line: "c"</span></pre></div>
<p dir="auto">And there's more. Much more. <a href="https://pkg.go.dev/github.com/bitfield/script" rel="nofollow">Read the docs</a> for full details, and more examples.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">A realistic use case</h2><a id="user-content-a-realistic-use-case" aria-label="Permalink: A realistic use case" href="#a-realistic-use-case"></a></p>
<p dir="auto">Let's use <code>script</code> to write a program that system administrators might actually need. One thing I often find myself doing is counting the most frequent visitors to a website over a given period of time. Given an Apache log in the Common Log Format like this:</p>
<div data-snippet-clipboard-copy-content="212.205.21.11 - - [30/Jun/2019:17:06:15 +0000] &quot;GET / HTTP/1.1&quot; 200 2028 &quot;https://example.com/ &quot;Mozilla/5.0 (Linux; Android 8.0.0; FIG-LX1 Build/HUAWEIFIG-LX1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.156 Mobile Safari/537.36&quot;"><pre><code>212.205.21.11 - - [30/Jun/2019:17:06:15 +0000] "GET / HTTP/1.1" 200 2028 "https://example.com/ "Mozilla/5.0 (Linux; Android 8.0.0; FIG-LX1 Build/HUAWEIFIG-LX1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.156 Mobile Safari/537.36"
</code></pre></div>
<p dir="auto">we would like to extract the visitor's IP address (the first column in the logfile), and count the number of times this IP address occurs in the file. Finally, we might like to list the top 10 visitors by frequency. In a shell script we might do something like:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cut -d' ' -f 1 access.log |sort |uniq -c |sort -rn |head"><pre>cut -d<span><span>'</span> <span>'</span></span> -f 1 access.log <span>|</span>sort <span>|</span>uniq -c <span>|</span>sort -rn <span>|</span>head</pre></div>
<p dir="auto">There's a lot going on there, and it's pleasing to find that the equivalent <code>script</code> program is quite brief:</p>
<div dir="auto" data-snippet-clipboard-copy-content="package main

import (
	&quot;github.com/bitfield/script&quot;
)

func main() {
	script.Stdin().Column(1).Freq().First(10).Stdout()
}"><pre><span>package</span> main

<span>import</span> (
	<span>"github.com/bitfield/script"</span>
)

<span>func</span> <span>main</span>() {
	<span>script</span>.<span>Stdin</span>().<span>Column</span>(<span>1</span>).<span>Freq</span>().<span>First</span>(<span>10</span>).<span>Stdout</span>()
}</pre></div>
<p dir="auto">Let's try it out with some <a href="https://github.com/bitfield/script/blob/master/testdata/access.log">sample data</a>:</p>
<div data-snippet-clipboard-copy-content="16 176.182.2.191
 7 212.205.21.11
 1 190.253.121.1
 1 90.53.111.17"><pre><code>16 176.182.2.191
 7 212.205.21.11
 1 190.253.121.1
 1 90.53.111.17
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">A <code>script</code> “interpreter”</h2><a id="user-content-a-script-interpreter" aria-label="Permalink: A script “interpreter”" href="#a-script-interpreter"></a></p>
<p dir="auto">One of the nice things about shell scripts is that there's no build process: the script file itself is the “executable” (in fact, it's interpreted by the shell). Simon Willison (and GPT-4) contributed this elegant <code>script</code> interpreter, written in <code>bash</code>:</p>
<ul dir="auto">
<li><a href="https://til.simonwillison.net/bash/go-script" rel="nofollow"><code>go-script</code></a></li>
</ul>
<p dir="auto">With <code>go-script</code>, you can run <code>script</code> one-liners directly:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cat file.txt | ./goscript.sh -c 'script.Stdin().Column(1).Freq().First(10).Stdout()'"><pre>cat file.txt <span>|</span> ./goscript.sh -c <span><span>'</span>script.Stdin().Column(1).Freq().First(10).Stdout()<span>'</span></span></pre></div>
<p dir="auto">or create <code>.goscript</code> files that you can run using a “shebang” line:</p>
<div dir="auto" data-snippet-clipboard-copy-content="#!/tmp/goscript.sh
script.Stdin().Column(1).Freq().First(10).Stdout()"><pre><span><span>#!</span>/tmp/goscript.sh</span>
<span>script.Stdin().Column(1).Freq().First(10).Stdout</span>()</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Documentation</h2><a id="user-content-documentation" aria-label="Permalink: Documentation" href="#documentation"></a></p>
<p dir="auto">See <a href="https://pkg.go.dev/github.com/bitfield/script" rel="nofollow">pkg.go.dev</a> for the full documentation, or read on for a summary.</p>
<p dir="auto"><a href="https://bitfieldconsulting.com/books/tools" rel="nofollow"><img src="https://github.com/bitfield/script/raw/master/img/tools.png" alt="The Power of Go: Tools cover image"></a></p>
<p dir="auto">The <code>script</code> package originated as an exercise in my book <a href="https://bitfieldconsulting.com/books/tools" rel="nofollow">The Power of Go: Tools</a>:</p>
<blockquote>
<p dir="auto"><em>Not all software engineering is about writing applications. Developers also need tooling: programs and services to automate everyday tasks like configuring servers and containers, running builds and tests, deploying their applications, and so on. Why shouldn't we be able to use Go for that purpose, too?</em></p>
<p dir="auto"><em><code>script</code> is designed to make it easy to write Go programs that chain together operations into a pipeline, in the same way that shell scripts do, but with the robust type checking and error handling of a real programming language. You can use <code>script</code> to construct the sort of simple one‐off pipelines that would otherwise require the shell, or special‐purpose tools.</em></p>
<p dir="auto"><em>So, when plain Go doesn’t provide a convenient way to solve a problem, you yourself can use it to implement a domain-specific “language” that does. In this case, we used Go to provide the language of Unix‐style pipelines. But we could have chosen any architecture we wanted to suit the problem. If Go doesn’t already provide the tool you need, use Go to build that tool, then use it.</em><br>
—From the book</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">Sources</h2><a id="user-content-sources" aria-label="Permalink: Sources" href="#sources"></a></p>
<p dir="auto">These are functions that create a pipe with a given contents:</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Source</th>
<th>Contents</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Args" rel="nofollow"><code>Args</code></a></td>
<td>command-line arguments</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Do" rel="nofollow"><code>Do</code></a></td>
<td>HTTP response</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Echo" rel="nofollow"><code>Echo</code></a></td>
<td>a string</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Exec" rel="nofollow"><code>Exec</code></a></td>
<td>command output</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#File" rel="nofollow"><code>File</code></a></td>
<td>file contents</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#FindFiles" rel="nofollow"><code>FindFiles</code></a></td>
<td>recursive file listing</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Get" rel="nofollow"><code>Get</code></a></td>
<td>HTTP response</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#IfExists" rel="nofollow"><code>IfExists</code></a></td>
<td>do something only if some file exists</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#ListFiles" rel="nofollow"><code>ListFiles</code></a></td>
<td>file listing (including wildcards)</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Post" rel="nofollow"><code>Post</code></a></td>
<td>HTTP response</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Slice" rel="nofollow"><code>Slice</code></a></td>
<td>slice elements, one per line</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Stdin" rel="nofollow"><code>Stdin</code></a></td>
<td>standard input</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Modifiers</h2><a id="user-content-modifiers" aria-label="Permalink: Modifiers" href="#modifiers"></a></p>
<p dir="auto">These are methods on a pipe that change its configuration:</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Source</th>
<th>Modifies</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.WithEnv" rel="nofollow"><code>WithEnv</code></a></td>
<td>environment for commands</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.WithError" rel="nofollow"><code>WithError</code></a></td>
<td>pipe error status</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.WithHTTPClient" rel="nofollow"><code>WithHTTPClient</code></a></td>
<td>client for HTTP requests</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.WithReader" rel="nofollow"><code>WithReader</code></a></td>
<td>pipe source</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.WithStderr" rel="nofollow"><code>WithStderr</code></a></td>
<td>standard error output stream for command</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.WithStdout" rel="nofollow"><code>WithStdout</code></a></td>
<td>standard output stream for pipe</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Filters</h2><a id="user-content-filters" aria-label="Permalink: Filters" href="#filters"></a></p>
<p dir="auto">Filters are methods on an existing pipe that also return a pipe, allowing you to chain filters indefinitely. The filters modify each line of their input according to the following rules:</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Filter</th>
<th>Results</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Basename" rel="nofollow"><code>Basename</code></a></td>
<td>removes leading path components from each line, leaving only the filename</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Column" rel="nofollow"><code>Column</code></a></td>
<td>Nth column of input</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Concat" rel="nofollow"><code>Concat</code></a></td>
<td>contents of multiple files</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.DecodeBase64" rel="nofollow"><code>DecodeBase64</code></a></td>
<td>input decoded from base64</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Dirname" rel="nofollow"><code>Dirname</code></a></td>
<td>removes filename from each line, leaving only leading path components</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Do" rel="nofollow"><code>Do</code></a></td>
<td>response to supplied HTTP request</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Echo" rel="nofollow"><code>Echo</code></a></td>
<td>all input replaced by given string</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.EncodeBase64" rel="nofollow"><code>EncodeBase64</code></a></td>
<td>input encoded to base64</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Exec" rel="nofollow"><code>Exec</code></a></td>
<td>filtered through external command</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.ExecForEach" rel="nofollow"><code>ExecForEach</code></a></td>
<td>execute given command template for each line of input</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Filter" rel="nofollow"><code>Filter</code></a></td>
<td>user-supplied function filtering a reader to a writer</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.FilterLine" rel="nofollow"><code>FilterLine</code></a></td>
<td>user-supplied function filtering each line to a string</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.FilterScan" rel="nofollow"><code>FilterScan</code></a></td>
<td>user-supplied function filtering each line to a writer</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.First" rel="nofollow"><code>First</code></a></td>
<td>first N lines of input</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Freq" rel="nofollow"><code>Freq</code></a></td>
<td>frequency count of unique input lines, most frequent first</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Get" rel="nofollow"><code>Get</code></a></td>
<td>response to HTTP GET on supplied URL</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.HashSums" rel="nofollow"><code>HashSums</code></a></td>
<td>hashes of each listed file</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Join" rel="nofollow"><code>Join</code></a></td>
<td>replace all newlines with spaces</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.JQ" rel="nofollow"><code>JQ</code></a></td>
<td>result of <code>jq</code> query</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Last" rel="nofollow"><code>Last</code></a></td>
<td>last N lines of input</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Match" rel="nofollow"><code>Match</code></a></td>
<td>lines matching given string</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.MatchRegexp" rel="nofollow"><code>MatchRegexp</code></a></td>
<td>lines matching given regexp</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Post" rel="nofollow"><code>Post</code></a></td>
<td>response to HTTP POST on supplied URL</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Reject" rel="nofollow"><code>Reject</code></a></td>
<td>lines not matching given string</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.RejectRegexp" rel="nofollow"><code>RejectRegexp</code></a></td>
<td>lines not matching given regexp</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Replace" rel="nofollow"><code>Replace</code></a></td>
<td>matching text replaced with given string</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.ReplaceRegexp" rel="nofollow"><code>ReplaceRegexp</code></a></td>
<td>matching text replaced with given string</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Tee" rel="nofollow"><code>Tee</code></a></td>
<td>input copied to supplied writers</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto">Note that filters run concurrently, rather than producing nothing until each stage has fully read its input. This is convenient for executing long-running commands, for example. If you do need to wait for the pipeline to complete, call <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Wait" rel="nofollow"><code>Wait</code></a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Sinks</h2><a id="user-content-sinks" aria-label="Permalink: Sinks" href="#sinks"></a></p>
<p dir="auto">Sinks are methods that return some data from a pipe, ending the pipeline and extracting its full contents in a specified way:</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Sink</th>
<th>Destination</th>
<th>Results</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.AppendFile" rel="nofollow"><code>AppendFile</code></a></td>
<td>appended to file, creating if it doesn't exist</td>
<td>bytes written, error</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Bytes" rel="nofollow"><code>Bytes</code></a></td>
<td></td>
<td>data as <code>[]byte</code>, error</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Hash" rel="nofollow"><code>Hash</code></a></td>
<td></td>
<td>hash, error</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.CountLines" rel="nofollow"><code>CountLines</code></a></td>
<td></td>
<td>number of lines, error</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Read" rel="nofollow"><code>Read</code></a></td>
<td>given <code>[]byte</code></td>
<td>bytes read, error</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Slice" rel="nofollow"><code>Slice</code></a></td>
<td></td>
<td>data as <code>[]string</code>, error</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Stdout" rel="nofollow"><code>Stdout</code></a></td>
<td>standard output</td>
<td>bytes written, error</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.String" rel="nofollow"><code>String</code></a></td>
<td></td>
<td>data as <code>string</code>, error</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Wait" rel="nofollow"><code>Wait</code></a></td>
<td></td>
<td>error</td>
</tr>
<tr>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.WriteFile" rel="nofollow"><code>WriteFile</code></a></td>
<td>specified file, truncating if it exists</td>
<td>bytes written, error</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">What's new</h2><a id="user-content-whats-new" aria-label="Permalink: What's new" href="#whats-new"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Version</th>
<th>New</th>
</tr>
</thead>
<tbody>
<tr>
<td>0.24.0</td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Hash" rel="nofollow"><code>Hash</code></a></td>
</tr>
<tr>
<td></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.HashSums" rel="nofollow"><code>HashSums</code></a></td>
</tr>
<tr>
<td>0.23.0</td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.WithEnv" rel="nofollow"><code>WithEnv</code></a></td>
</tr>
<tr>
<td></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.DecodeBase64" rel="nofollow"><code>DecodeBase64</code></a> / <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.EncodeBase64" rel="nofollow"><code>EncodeBase64</code></a></td>
</tr>
<tr>
<td></td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Wait" rel="nofollow"><code>Wait</code></a> returns error</td>
</tr>
<tr>
<td>v0.22.0</td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Tee" rel="nofollow"><code>Tee</code></a>, <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.WithStderr" rel="nofollow"><code>WithStderr</code></a></td>
</tr>
<tr>
<td>v0.21.0</td>
<td>HTTP support: <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Do" rel="nofollow"><code>Do</code></a>, <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Get" rel="nofollow"><code>Get</code></a>, <a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.Post" rel="nofollow"><code>Post</code></a></td>
</tr>
<tr>
<td>v0.20.0</td>
<td><a href="https://pkg.go.dev/github.com/bitfield/script#Pipe.JQ" rel="nofollow"><code>JQ</code></a></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">See the <a href="https://github.com/bitfield/script/blob/master/CONTRIBUTING.md">contributor's guide</a> for some helpful tips if you'd like to contribute to the <code>script</code> project.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Links</h2><a id="user-content-links" aria-label="Permalink: Links" href="#links"></a></p>
<ul dir="auto">
<li><a href="https://bitfieldconsulting.com/posts/scripting" rel="nofollow">Scripting with Go</a></li>
<li><a href="https://www.youtube.com/watch?v=6S5EqzVwpEg" rel="nofollow">Code Club: Script</a></li>
<li><a href="https://bitfieldconsulting.com/" rel="nofollow">Bitfield Consulting</a></li>
<li><a href="https://bitfieldconsulting.com/books" rel="nofollow">Go books by John Arundel</a></li>
</ul>
<p dir="auto">Gopher image by <a href="https://github.com/MariaLetta/free-gophers-pack">MariaLetta</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Uscope, a new Linux debugger written from scratch (187 pts)]]></title>
            <link>https://github.com/jcalabro/uscope</link>
            <guid>42889407</guid>
            <pubDate>Fri, 31 Jan 2025 17:07:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/jcalabro/uscope">https://github.com/jcalabro/uscope</a>, See on <a href="https://news.ycombinator.com/item?id=42889407">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">uscope 🔬</h2><a id="user-content-uscope-" aria-label="Permalink: uscope 🔬" href="#uscope-"></a></p>
<p dir="auto"><a href="https://ci.uscope.dev/repos/1" rel="nofollow"><img src="https://camo.githubusercontent.com/1a18ed67a95c00d763718cbf2d98ff723894ff292cb129c66d8b63e0a15e3040/68747470733a2f2f63692e7573636f70652e6465762f6170692f6261646765732f312f7374617475732e737667" alt="status-badge" data-canonical-src="https://ci.uscope.dev/api/badges/1/status.svg"></a></p>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/8205547/405439211-8ad10ca9-42d1-4afe-8397-74b8a92a69f5.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzgzNTU3MTEsIm5iZiI6MTczODM1NTQxMSwicGF0aCI6Ii84MjA1NTQ3LzQwNTQzOTIxMS04YWQxMGNhOS00MmQxLTRhZmUtODM5Ny03NGI4YTkyYTY5ZjUucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEzMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMzFUMjAzMDExWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZDY4Njk5NTNkZjEyMDkyMjY5YTkwZjI1MTQxMGZhNGQxNTM1YjVhMDcxMzc3OGIzNzBlMjhhOGMzZjEyZDNlNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.XjAla-iePtu2nJJnx-MQke-E28SVeoI-zkYkjzNmIlw"><img src="https://private-user-images.githubusercontent.com/8205547/405439211-8ad10ca9-42d1-4afe-8397-74b8a92a69f5.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzgzNTU3MTEsIm5iZiI6MTczODM1NTQxMSwicGF0aCI6Ii84MjA1NTQ3LzQwNTQzOTIxMS04YWQxMGNhOS00MmQxLTRhZmUtODM5Ny03NGI4YTkyYTY5ZjUucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDEzMSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAxMzFUMjAzMDExWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZDY4Njk5NTNkZjEyMDkyMjY5YTkwZjI1MTQxMGZhNGQxNTM1YjVhMDcxMzc3OGIzNzBlMjhhOGMzZjEyZDNlNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.XjAla-iePtu2nJJnx-MQke-E28SVeoI-zkYkjzNmIlw"></a>
<p dir="auto"><h3 tabindex="-1" dir="auto">Overview</h3><a id="user-content-overview" aria-label="Permalink: Overview" href="#overview"></a></p>
<p dir="auto">uscope (pronounced "microscope") is a native code graphical debugger and introspection toolchain for Linux.</p>
<p dir="auto"><a href="https://calabro.io/uscope" rel="nofollow">See here</a> for background and motivation on the project.</p>
<p dir="auto">Join the <a href="https://discord.gg/bPWC6PZPhR" rel="nofollow">Discord</a> if you're interested in talking debuggers.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Project Status and Roadmap</h3><a id="user-content-project-status-and-roadmap" aria-label="Permalink: Project Status and Roadmap" href="#project-status-and-roadmap"></a></p>
<p dir="auto">uscope is not far enough along to consider using as a daily-driver. It's a side project I'm working on for fun and because I need a better debugger for my own use.</p>
<p dir="auto">This is a birds-eye overview of the features I'd like implemented before I'd personally be able to completely ditch other "traditional" debuggers. In no particular order:</p>
<ul dir="auto">
<li>Ensure that all table-stakes debugger operations are rock-solid and fast
<ul dir="auto">
<li>Debug symbol parsing</li>
<li>Subordinate process control flow (i.e. stepping)</li>
<li>Basic variable value rendering</li>
<li>Stack unwinding</li>
<li>etc.</li>
</ul>
</li>
<li>Support for visualization of common data types in several languages (preliminary C and Zig support is already underway)
<ul dir="auto">
<li>Adding at least C++ and Go even though they're very complicated languages since that's what I use for work</li>
<li>Also planning on supporting at least Rust, Odin, and Jai</li>
<li>In general, we will design a system that handles transforming data in to user-friendly visualization that is flexible, extensible, and not tied to any one language</li>
</ul>
</li>
<li>Support for multi-threaded programs</li>
<li>Debug tests by clicking on them, at least for programs with built-in testing solutions like Zig, Go, etc.</li>
<li>Run to cursor</li>
<li>User-friendly source code navigation (i.e. go to definition, find all references, etc.)</li>
<li>Better config file management
<ul dir="auto">
<li>I don't want to have to manually edit config files; I want to have the debugger configure them for me via the GUI</li>
</ul>
</li>
</ul>
<p dir="auto">Other long-term features that will be implemented are:</p>
<ul dir="auto">
<li>Build as a library so other people can build other interesting things as well
<ul dir="auto">
<li>The GUI debugger will be the first consumer of that library (in the same way <a href="https://github.com/mitchellh/ghostty">Ghostty</a> is the first consumer of libghostty)</li>
</ul>
</li>
<li>Many more types of domain-specific data visualizations
<ul dir="auto">
<li>For example, I work on chess engines for my day job, and it would be amazing to have a debugger that natively understands my position encoding and automatically visually renders interactive chess boards</li>
</ul>
</li>
<li>Remote debugging</li>
<li>Conditional breakpoints</li>
<li>Data/address breakpoints (i.e. break when an address is accessed or a variable mutated)</li>
<li>Trace points (observe variable values over time without actually pausing the subordinate program)</li>
<li>Load and view core dumps</li>
<li>Assembly viewer</li>
<li>Ability to track and visualize system calls (similar to <a href="https://man7.org/linux/man-pages/man1/strace.1.html" rel="nofollow">strace</a>)</li>
<li>Various <code>/proc</code> views (there's lots of interesting information in there)</li>
<li>Complete UI/UX revamp
<ul dir="auto">
<li>Dear ImGUI has been decent, but it has its limitations; we'll probably just end up writing our own if I had to guess</li>
<li>I'm really looking for a fast UI system that allows my users to write interesting visualization plugins for their own needs with minimal effort</li>
</ul>
</li>
<li>macOS and Windows support</li>
<li>What is important to <em>you</em>? Let me know!</li>
</ul>
<p dir="auto">Similarly, the following features are non-goals of the project:</p>
<ul dir="auto">
<li>Supporting non-native languages (i.e. Java, Python, etc.)</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Building and Running</h3><a id="user-content-building-and-running" aria-label="Permalink: Building and Running" href="#building-and-running"></a></p>
<p dir="auto">We do not provide pre-built binaries or package manager distributions yet.</p>
<p dir="auto">To build from source, clone the repo and run <code>zig build</code>. Ensure you're using the exact version of zig specified in <a href="https://github.com/jcalabro/uscope/blob/main/zig_version.txt">zig_version.txt</a>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="git clone git@github.com:jcalabro/uscope.git
cd uscope
zig build -Doptimize=ReleaseSafe -Drelease"><pre>git clone git@github.com:jcalabro/uscope.git
<span>cd</span> uscope
zig build -Doptimize=ReleaseSafe -Drelease</pre></div>
<p dir="auto">You'll probably want to create a global config file at <code>$XDG_CONFIG_HOME/uscope/config.ini</code> like this (though we'll create an empty config for you if one does not already exist):</p>
<div dir="auto" data-snippet-clipboard-copy-content="[log]
level=debug
regions=all"><pre><span>[log]</span>
<span>level</span>=debug
<span>regions</span>=all</pre></div>
<p dir="auto">And a you'll need to create a local, project-specific config file at <code>$(pwd)/.uscope/config.ini</code>, whose only required field is <code>target.path</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="[target]
path=./assets/zigprint/out # required: the path to the binary to debug
# args=...
# stop_on_entry=true
# watch_expressions=...

[sources]
# for convenience, opens this file upon launch and sets breakpoints on lines 33 and 96
open_files=assets/zigprint/main.zig:33:96

# to open multiple files on launch, you could do something like:
# open_files=first.c:1:2, second.c:3:4"><pre><span>[target]</span>
<span>path</span>=./assets/zigprint/out <span><span>#</span> required: the path to the binary to debug</span>
<span><span>#</span> args=...</span>
<span><span>#</span> stop_on_entry=true</span>
<span><span>#</span> watch_expressions=...</span>

<span>[sources]</span>
<span><span>#</span> for convenience, opens this file upon launch and sets breakpoints on lines 33 and 96</span>
<span>open_files</span>=assets/zigprint/main.zig:33:96

<span><span>#</span> to open multiple files on launch, you could do something like:</span>
<span><span>#</span> open_files=first.c:1:2, second.c:3:4</span></pre></div>
<p dir="auto">Then, to create a development build, you can do any of:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# create and run a debug binary
zig build run

# create and run a debug binary with the race detector enabled
zig build run -Drace

# run all tests
zig build test

# run a test by name
zig build test -Dfilter='compile unit header parse errors'

# run a subset of tests based on a prefix match (i.e. this runs all simulator tests)
zig build test -Dfilter=sim:"><pre><span><span>#</span> create and run a debug binary</span>
zig build run

<span><span>#</span> create and run a debug binary with the race detector enabled</span>
zig build run -Drace

<span><span>#</span> run all tests</span>
zig build <span>test</span>

<span><span>#</span> run a test by name</span>
zig build <span>test</span> -Dfilter=<span><span>'</span>compile unit header parse errors<span>'</span></span>

<span><span>#</span> run a subset of tests based on a prefix match (i.e. this runs all simulator tests)</span>
zig build <span>test</span> -Dfilter=sim:</pre></div>
<p dir="auto">The <code>Primary</code> view is open by defaults, which includes views in to source code, program stdout/stderr, variables, registers, etc. To launch the subordinate, press <code>r</code>, and press <code>k</code> to kill a running subordinate. Click lines of source code to add/remove breakpoints. When you're stopped at a breakpoint, you can:</p>
<ul dir="auto">
<li><code>c</code>: continue execution</li>
<li><code>k</code>: kill the subprocess</li>
<li><code>w</code>: step out</li>
<li><code>a</code>: single step (one assembly instruction)</li>
<li><code>s</code>: step in</li>
<li><code>d</code>: step next</li>
</ul>
<p dir="auto">To quickly navigate between multiple open source files, press <code>ctrl+j</code> to move one source file to the left (according to the order of tabs), and press <code>ctrl+;</code> to move one to the right. Press <code>ctrl+d</code> to close the open source file. Press <code>ctrl+q</code> in the primary view to quickly exit the debugger.</p>
<p dir="auto">Additionally, we've taken a bit of inspiration from the <a href="https://helix-editor.com/" rel="nofollow">Helix editor</a> for menu navigation. Press <code>space</code> to open the view picker, then choose a view to open. Press <code>ctrl+d</code>, <code>ctrl+c</code>, or <code>ctrl+q</code> at any time in any sub-view to go back to the main view.</p>
<p dir="auto">The program outputs a user-friendly log by default to:</p>

<p dir="auto">This repo comes pre-packaged with a bunch of small, simple source programs in various languages in the <code>assets/</code> directory. To build them all, ensure you have all the toolchains you could possibly neeed installed and:</p>

<p dir="auto">The compiler versions used to build all the asset programs in CI are in the <a href="https://github.com/jcalabro/uscope/blob/main/Dockerfile">Dockerfile</a>. You run the tests without docker as demonstrated above, or with docker using:</p>
<div dir="auto" data-snippet-clipboard-copy-content="docker build -t uscope .
docker run --rm -it -v $(pwd):/uscope uscope
cd /uscope/assets
./build.sh
cd ..
zig build test -Drace"><pre>docker build -t uscope <span>.</span>
docker run --rm -it -v <span><span>$(</span>pwd<span>)</span></span>:/uscope uscope
<span>cd</span> /uscope/assets
./build.sh
<span>cd</span> ..
zig build <span>test</span> -Drace</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">FAQ</h3><a id="user-content-faq" aria-label="Permalink: FAQ" href="#faq"></a></p>
<p dir="auto"><h5 tabindex="-1" dir="auto">1. When will this project be mature enough to use for my day to day work?</h5><a id="user-content-1-when-will-this-project-be-mature-enough-to-use-for-my-day-to-day-work" aria-label="Permalink: 1. When will this project be mature enough to use for my day to day work?" href="#1-when-will-this-project-be-mature-enough-to-use-for-my-day-to-day-work"></a></p>
<p dir="auto">Probably a long time (could easily be a year or more). I have a day job, and this is a passion project I work on in my spare time. Check back often for updates!</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">2. How can I help out?</h5><a id="user-content-2-how-can-i-help-out" aria-label="Permalink: 2. How can I help out?" href="#2-how-can-i-help-out"></a></p>
<p dir="auto">The absolute best thing you can do is reach out and talk debuggers so I know that there is interest in the the project. We have a <a href="https://discord.gg/bPWC6PZPhR" rel="nofollow">Discord</a>, and you can find my email on my personal site. I love hearing from you!</p>
<p dir="auto">Adding features, fixing bugs, and creating tests that move us further along the path towards being able to use this for day-to-day work is also apprecaited! If you're thinking about tackling a major new feature, I'd recommend reaching out first to make sure we're on the same page and effort isn't wasted going in the wrong direciton.</p>
<p dir="auto">You could also consider <a href="https://github.com/sponsors/jcalabro">sponsoring my work</a>. This is a very strong signal to me that I'm focused on things that matter.</p>
<p dir="auto">Additionally, please consider donating to the <a href="https://ziglang.org/zsf/" rel="nofollow">Zig Software Foundation</a>!</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">3. Will you provide pre-built binaries?</h5><a id="user-content-3-will-you-provide-pre-built-binaries" aria-label="Permalink: 3. Will you provide pre-built binaries?" href="#3-will-you-provide-pre-built-binaries"></a></p>
<p dir="auto">Once the project is further along, yes, but not now.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">4. Why are you building a library for debugging, not just a new debugger? And why not just use DAP?</h5><a id="user-content-4-why-are-you-building-a-library-for-debugging-not-just-a-new-debugger-and-why-not-just-use-dap" aria-label="Permalink: 4. Why are you building a library for debugging, not just a new debugger? And why not just use DAP?" href="#4-why-are-you-building-a-library-for-debugging-not-just-a-new-debugger-and-why-not-just-use-dap"></a></p>
<p dir="auto">There are a wide variety of use-cases for an introspection library outside of traditional debuggers (i.e. reverse engineering tools, novel forms of debuggers, etc.). By making this system reusable and nicely packaged, it encourages the entire ecosystem of debugging tools to improve, not just this one project. That being said, we are focusing intently on the traditional debugger first, and then once the core of the system is solid, we will make it more intentionally accessible to other consumers.</p>
<p dir="auto">Regarding <a href="https://microsoft.github.io/debug-adapter-protocol" rel="nofollow">DAP</a>, This toolchain intends to be lower-level and broader in scope than something like DAP would enable. I do not think DAP is very good, but lots of editors out there already speak it, so we're partially stuck with it. However, by creating an introspection library, we easily create a separate DAP-compatible executable in separate from the native GUI we're building so that way neither is bloated by the other.</p>
<p dir="auto">In short, building as a library allows us all to build many novel, simple, and focused introspection tools.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple files emergency motion to become defendant in US vs. Google [pdf] (351 pts)]]></title>
            <link>https://storage.courtlistener.com/recap/gov.uscourts.dcd.223205/gov.uscourts.dcd.223205.1158.0_1.pdf</link>
            <guid>42889297</guid>
            <pubDate>Fri, 31 Jan 2025 16:53:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://storage.courtlistener.com/recap/gov.uscourts.dcd.223205/gov.uscourts.dcd.223205.1158.0_1.pdf">https://storage.courtlistener.com/recap/gov.uscourts.dcd.223205/gov.uscourts.dcd.223205.1158.0_1.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=42889297">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[How to Train an AI Image Model on Yourself (168 pts)]]></title>
            <link>https://www.coryzue.com/writing/make-ai-pictures-of-yourself/</link>
            <guid>42889236</guid>
            <pubDate>Fri, 31 Jan 2025 16:46:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.coryzue.com/writing/make-ai-pictures-of-yourself/">https://www.coryzue.com/writing/make-ai-pictures-of-yourself/</a>, See on <a href="https://news.ycombinator.com/item?id=42889236">Hacker News</a></p>
Couldn't get https://www.coryzue.com/writing/make-ai-pictures-of-yourself/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Fixing E.T. The Extra-Terrestrial for the Atari 2600 (2013) (101 pts)]]></title>
            <link>http://www.neocomputer.org/projects/et/</link>
            <guid>42889139</guid>
            <pubDate>Fri, 31 Jan 2025 16:36:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://www.neocomputer.org/projects/et/">http://www.neocomputer.org/projects/et/</a>, See on <a href="https://news.ycombinator.com/item?id=42889139">Hacker News</a></p>
<div id="readability-page-1" class="page">
<h2>Fixing <i>E.T. The Extra-Terrestrial</i> for the Atari 2600</h2>

	<br><center></center>

	<p>If you're reading this page, chances are that you're already well aware that E.T. for the Atari 2600 is one of the most reviled games ever made.  I never understood why.  As a child, it was one of my favorite games.  I still think it's a good game.  <a href="http://www.randomterrain.com/atari-2600-memories-et.html">Apparently</a>, <a href="http://www.youtube.com/watch?v=TsF7q_hA6Z8">I'm not alone</a>.</p>

	<p>On this page I'm going to briefly explore why people hate <i>E.T.</i>, and how the game can be fixed.</p>

	

	<p>April 2023 Update: Jamie Curmi (Curmi on AtariAge) has put together an <a href="http://www.neocomputer.org/projects/et/ET_Fixed-Manual.pdf">Updated Manual</a> for the game to reflect the changes made here. </p>
	
	<h2>Contents:</h2>
	<ul>
		<li><a href="#cantwait">In case you can't wait</a></li>
		<li><a href="#download">Downloads</a></li>
		<li><a href="#whyhate">Why people hate E.T.</a></li>
		<li><a href="#whyfall">Why people fall in wells</a></li>
		<li><a href="#fixfall">Fixing the falling problem</a></li>
		<li><a href="#toohard">Dealing with the difficulty</a></li>
		<li><a href="#notgreen">E.T. is NOT green</a></li>
		<li><a href="#finishup">Spit and polish</a></li>
		<li><a href="#newfeature">A new feature</a></li>
		<li><a href="#bugs">Squashing 30-year-old bugs</a></li>
		<li><a href="#ninja">Ninja E.T. easter egg</a></li>
		<li><a href="#newmode">A new game mode</a></li>
		<li><a href="#allchanges">Summary of changes</a></li>
		<li><a href="#theend">Conclusion</a></li>
	</ul>

	<br>
	<a name="cantwait"></a> 
	<h2>In case you can't wait</h2>
		<p>Open your NTSC <i>E.T.</i> ROM in a hex editor and make the following changes:</p>
		<pre>		-------------------------------------------
		- E.T. is Not Green                       
		-------------------------------------------
		 17FA: FE FC F8 F8 F8
		 1DE8: 04

		-------------------------------------------
		- Difficulty Fix  (Walk, Run, Hover)     
		-------------------------------------------
		 0707: A4 F8
		 071B: A4 F8
		 0685: A4 F8
		 0FEF: AD 82 02 29  08 4C 4E BB
		 0B4D: 60 4A 4A 4A  49 01 85 F8
		 04F0: A5 81 29 1E

		-------------------------------------------
		- Falling Fix                            
		-------------------------------------------
		 002A: 4C F6 BB
		 0BF6: A5 9C 69 07  85 F6 4C AB  BC
		 1013: 05 D9 65 E3  65 F6 85 8B  4C 4B F0
		 101E: 08 E4 8B D0  06 24 13 70  02 85 2C E4  9E 08 E8
		 102D: A4 86 8A
		 1034: 85 02 84 1C
		 1060: A5 87 85 1B  A5 88 85 06  8A A8 B1 BA  85 0E B1 BC
		 1070: 85 0F E4 9F  4C 1E F0
		 18F3: 2E F0
		 0B40: A9 EF
		 07ED: E9 04
		 0BA5: 22

		--------------------------------------------
		 - BUG FIXES
		--------------------------------------------
		 - Don't Fall Leaving Forest on Right
		 -------------------------------------------
		 0D54: 4A
		 0D6C: 01
		 -------------------------------------------
		 - Ship Shouldn't Crush Elliott 
		 -------------------------------------------
		 07BD: 4C D9 BA

		-------------------------------------------
		- FIX SCORING TO MATCH MANUAL
		-------------------------------------------
		 058E: 85 F4 A5 DD  85 F5 65 F4  85 DD 69 10  EA EA
		 1382: 4C 9D F3
		 1395: A9 99 85 D3  85 D4 D0 09  A5 F8 D0 02  AA A8
		 13BD: A9 01 05 DE  85 DE A2 07  A0 70 20 41  F3 EA
		 1341: A5 D2 C9 0A  F0 08 E9 10  85 D2 A2 04  A0 90 A5 DD
		 1351: F8 4C E9 F7
		 17E9: C9 1F 90 0A  8A 09 10 AA  A5 D3 E9 07  85 D3 D8 60
		 13FD: A9 99 85 D3  85 D4 A9 00  85 F4 85 E3
		 147A: A9 00 85 DD  85 D9 85 94  A5 29 C5 DC  B0 02 A5 DC
		 148A: 4C A5 F4

		    Note: If you don't include the difficulty fix, make
		          the following change to the scoring fix:
		          139D: EA EA EA EA  EA EA

		-------------------------------------------
		- Easter Egg - Ninja E.T. 
		-------------------------------------------
		 148A: A5 F4 C5 F5  D0 0C C9 03  D0 08 A9 AA  85 D2 85 D3
		 149A: 85 D4 4C A5  F4 EA EA EA

		--------------------------------------------
		 - Add Extra Game Option - Scientist Only
		--------------------------------------------
		 0471: E0 05
		 02ED: 29 01 F0 09

		</pre>
		 <p>Special thanks to AtariAge users Nukey Shay, Random Terrain, KevinMos3, iesposta, and roadrunner for their excellent comments and suggestions.</p>

		<a name="download"></a> 
		 <h2>Downloads</h2>
		 <p>If you don't know how to use a hex editor, or if you're just lazy, you can download a modified .bin file here:</p>
		 <ul>
			<li><a href="http://www.neocomputer.org/projects/et/ET_Fixed_Final.bin">ET_Fixed_Final.bin</a></li>
			<li><a href="http://www.neocomputer.org/projects/et/ET.bin">ET.bin (unmodified)</a></li>
		 </ul>

		 <p><b>NOTE:</b> If you want to play the game with the original difficulty, set the B&amp;W / Color switch to the B&amp;W position.  This will completely disable the difficulty fix, but leave the other changes in place.</p>
	<br>

	<a name="whyhate"></a> 
	<h2>Why do people hate <i>E.T.</i>?</h2>
		<p>
			So, why do people hate E.T.?  When it was released, it was well ahead of its time. It pioneered a lot of concepts that we take for granted in games today, but were unheard of in 1982 (Atari's <i>Adventure</i> and <i>Haunted House</i> had some of these features, but not all):
		</p>
		<ul>
			<li>It was one of the first home video games with a title screen.</li>
			<li>It featured an open-ended world with gameplay focused on exploration.</li>
			<li>It was completely non-violent. You can't hurt the bad-guys, and they can't hurt you. There isn't even any competition!</li>
			<li>You could complete the game. There are also several goals that you need to complete to win the game.</li>
			<li>There were multiple ways to complete goals. You can actually finish the game without falling in a single well.</li>
			<li>The game not only had an ending, it also featured an animated cut-scene as a reward.</li>
			<li>The game featured optional additional goals to complete (side quests).</li>
		</ul>
		<p>
			While that seems like a great list of features, players in 1982 weren't prepared for that much change.  You really needed to read the manual to understand the game and how to play it.  As younger children were the primary audience, it's no surprise that it wasn't well received.
		</p>
		<p>
			Of course, that doesn't explain why the game is so hated <i>today</i>.  If we can identify the reasons why, we can try to address them.  Here are the problems this page will address:
		</p>
		<ul>
			<li>The game seems incredibly complex. This isn't a real problem.  Once you learn how to play, it's really very simple.  You just need to <a href="http://www.atariage.com/manual_html_page.html?SoftwareLabelID=157">read the manual</a>, or watch a <a href="http://www.youtube.com/watch?v=r-pzdPLfy9Y">tutorial video</a>, to understand it.</li>
			<li>The game is incredibly hard.  It's difficult for novices to complete the game even on mode 3, the easiest setting.  Fortunately, this can be fixed.
			</li><li>You spend a lot of time <i>accidentally</i> falling in to wells.  I believe that I know reason why this happens to so many people, and what can be done to fix it.</li>
			<li>E.T. is not green.  I'm really surprised that this isn't a common complaint.  We'll fix that as well.</li>
		</ul>
	<br>

	<a name="whyfall"></a> 
	<h2>Why people accidentally fall in to the wells</h2>
		<p>The myth: A lot of people blame poor collision detection for this problem.  That is simply not true.  The collision detection in <i>E.T.</i> is perfect.  There are no bounding boxes like in more modern games. Collision detection happens at the pixel level.  You can't get any better than that.  If you fall in to a well, it's because your player character <i>visually</i> overlaps it.</p>
		<p>The actual problem: We don't want pixel-perfect collision detection!</p>

		<p>The reason that people so easily fall in to wells is that they don't expect to fall when, for example, E.T.'s head overlaps a well.  After all, his feet are clearly on solid ground!</p>

		<div>
		<p><img src="http://www.neocomputer.org/projects/et/figure1.png"></p><p><b>Figure 1:</b> E.T. appears to be standing in front of a well.  However, because collision detection is pixel perfect and some of the sprite pixels overlap the well pixels, E.T. is sure to fall.  This is a bad thing.</p>
		</div>

		<p>E.T. uses a weird perspective not well suited for pixel-perfect collision detection.  It's an overhead view, but we see E.T. and the other characters from the side.  An <a href="http://tvtropes.org/pmwiki/pmwiki.php/Main/ThreeQuartersView">article on tvtropes.org</a> calls this "Three Quarters View" and describes it as a "tilted bird's eye view perspective".</p>

		<p>Nintendo's <i>The Legend of Zelda</i> uses the same perspective, but you don't hear a lot of complaints about accidentally running in to enemies or obstacles.</p>

		<div>
		<p><img src="http://www.neocomputer.org/projects/et/figure2.png"></p><p><b>Figure 2:</b> A similar perspective is used in <i>The Legend of Zelda</i> though it somehow manages to be even stranger.  The floor tiles and blocks, the outer walls, and the player character are all shown from different perspectives.  This doesn't hurt the game in any way, it actually makes it better.</p>
		</div>

		<p><i>Zelda</i> uses a neat trick to make the perspective feel more natural when playing and less like the characters are lying on their sides.  Collision detection is designed around where your player character <i>appears</i> to be, not by what sprites happens to overlap.  In <i>Zelda</i>, when you approach an obstacle from the south, for example, it doesn't obstruct your movement until about half of your sprite overlaps it.  </p>

		<div>
		<p><img src="http://www.neocomputer.org/projects/et/figure3.png"></p><p><b>Figure 3:</b> (Left) Our player character appears to be standing in the row of floor tiles below the block.  The player assumes that they are able to move forward as there are clearly no obstacles in the way.  However, if collision detection was pixel-perfect they would be obstructed by the block. (Right) Thanks to good design, we can do the obvious: walk on the tiles in front of the block.</p>
		</div>

		<p>If we can modify the collision detection in <i>E.T.</i> so that it's not pixel perfect, but based on where the player character appears to be, we can give the player the same intuitive advantages that <i>Zelda</i> players enjoy.  In the case of <i>E.T.</i>, such a change is simple: we just need to ensure that only collisions with E.T.'s feet are detected. The game will feel much more natural, and players won't fall in to wells accidentally nearly as often.</p>

	<br>

	<a name="fixfall"></a>
	<h2>Fixing the falling problem</h2>

		<p>The fix is pretty simple.  All we need to do is clear the collision latches sometime before we finish drawing the E.T. sprite. One or two scan lines before the end should work out great.  That may not seem like a lot, but it really is the most appropriate place.  It'll also let us stand on the inner edge of the "v" shaped wells. I've always thought you should be able to do that.</p>

		<div>
		<p><img src="http://www.neocomputer.org/projects/et/figure4.png"></p><p><b>Figure 4:</b> Where no extra-terrestrial has gone before!</p>
		</div>

		<p>We don't have access to the game's source code and the disassembler I have for 2600 games won't work if the game is over 4k. If we're going to fix the problem, we've got to modify the ROM somehow.  A good hex editor coupled with the nifty debugger included in <a href="">Stella</a> and we're ready to go.  That may be a bit optimistic. As every Atari 2600 developer knows, you rarely have and abundance of free space on the ROM and routines (particularly in the kernel) are generally kept very tight with little or no wasted code.</p>
		
		<p>To make matters worse, to implement our fix we'll need to add some code to the kernel.  If you're following along, take a look at kernel code starting at 1006.  As it's unlikely that Howard Scott Warshaw (the developer) included some useless code for us to replace, we may want to consider hijacking a jump, running our routine in some unused spot on the ROM, and returning.  A quick look presents us with a candidate at 1074. We could run our routine and jump back to 1022. Unfortunately, time is also an important factor, especially in the kernel. We don't even have enough time to jump out and return, let alone run our routine.  We could use an extra scan line, but that does far more harm than just making our graphics look blocky: candy won't appear and hint areas, for the most part, won't display the location of phone parts.  Give it a try if you're feeling ambitious, just don't forget to increment X or you'll end up with a flickering mess!</p>

		<p>Back to the kernel we go to see what we can change.  A few rounds with the debugger and you'll notice that the code at 101C to 101E ultimately does nothing as there is a TXA right after the jump. Useless code in the kernel is unusual. Looking a little further back, we find that the code starting at 1013 sets COLUP0 to some inexplicably twisted value based on whatever is stored in 81. This is weird because 88 is used to hold that color, as we can see from the code at 1047 to 1049. Even stranger, this code is never called on lines where we draw GRP0.  The code from 1013 to 101E appears to do nothing but burn a few cycles. (That's exactly what it's supposed to do, for timing.) After a good bit of double-checking, it becomes obvious that can safely replace it. This is great news for us as that means we have a whole 12 bytes we can change!  Since X holds the current y position, that's more than we need for our routine. Lucky.</p>
		<p>The idea is to strobe CXCLR before we draw the last line of the sprite so that any collisions recorded to that point are eliminated. The effect will be that only collisions with E.T.'s feet will be detected. The code is pretty simple, 9C holds E.T.'s y position so we just need to subtract some amount of E.T.'s height from our current y position and compare it to the value at 9C to see if we can safely clear the collision latches:</p>
		<pre>		1013: TXA         ; 2 ; 8A
		1014: SBC #$08    ; 2 ; E9 08
		1016: CMP $9C     ; 3 ; C5 9C
		1018: BCS $F01C   ; 2 ; B0 02
		101A: STA CXCLR   ; 3 ; 85 2C
		</pre>
		<p>Give it a try.  It looks like we're done, but there are still a few problems:</p>
		<ul>
			<li>We can't pick-up phone parts. (We'll fix this a little later.)</li>
			<li>We need to step on candy to collect it. (This is a problem we can't yet avoid.)</li>
			<li>The routine isn't called when there is another character next to you. (Remember that we discovered the code we replaced was never called on lines where we draw GRP0?) If part of your sprite overlaps a well and another character approaches, the collision latches won't get cleared and you'll fall right it!</li>
		</ul>
		<p>There isn't another junk spot we can dump our routine that is always called, so we'll need to find an additional 9 bytes that we can safely overwrite. Constraints are tighter here, as we'll need to find some code that we can eliminate that also happens to be called all the time, or when our other routine isn't.  That's a pretty tall order. Could we really be that lucky or will we need to find some code that isn't essential to the game, and deal with any unwanted consequences?</p>
		<p>A few rounds with the debugger turns up 8 whole bytes at 1062 that look redundant. Didn't we already handle that at 103B? It turns out that we didn't.  Take a look at 1043. The next sprite row is read and saved for later use. Later, sadly, means at 1062. If we replace this code it means that we won't update GRP0 and COLUP0. That means we'll end up duplicating the previous row. We'll essentially be tossing out half of our sprite data. It will appear as though every other line in our sprite was overwritten by the previous line. That sounds bad, but in the end it means that we can use these bytes without fear as the only consequence will be that the other characters and the phone parts will look a bit pixelated (each row being four scan lines tall). Of course, on an Atari 2600, that's not exactly a major issue.  We need at least 9 bytes for our routine, but our luck is holding out and we can safely eliminate the WSYNC at 1060 giving us a whole 10 bytes to use as we please. We'll also need to slightly modify our routine.  If you've been following along with a debugger, you can probably guess why.</p>
		<pre>		1060: NOP         ; 2 ; EA
		1061: TXA         ; 2 ; 8A 
		1062: SBC #$07    ; 2 ; E9 07 
		1064: CMP $9C     ; 3 ; C5 9C 
		1066: BCS $F06A   ; 2 ; B0 02 
		1068: STA CXCLR   ; 3 ; 85 2C 

		Note: We subtract 7, not 8 like before.
		</pre>

		<div>
		<p><img src="http://www.neocomputer.org/projects/et/figure5.png"></p><p><b>Figure 5:</b> The FBI Agent before and after.  It looks worse when you put them side-by-side.  Only die-hard E.T. fans will notice the change during actual play.</p>
		</div>
		
		<p><b>::UPDATE::</b> Thanks to the excellent suggestion of AtariAge user Nukey Shay, we can (mostly) save our sprites. (Apparently, the die-hard E.T. fans noticed and were not impressed!) Every other line will still be the same color, but at least they won't be a blocky mess.</p>
		<p>Nukey Shay's idea was to precalculate the location where we want to strobe CXCLR. Instead calculating the position we're looking for on every line,  we do it once per frame and store the result so that we can just do a quick CPX. This saves us a 3 bytes and 4 cycles. We can spend these (plus 2 cycles from the NOP) on an LDA and STA to update GRP0.  That will make our sprites less blocky, but we'll still lose some color detail.  Elliott's shirt will lose its stripes and the FBI agent will lose his hair.</p>
		<p>Our second routine now looks like this:</p>
		<pre>		1060: LDA $87     ; 3 ; A5 87
		1062: STA GRP0    ; 3 ; 85 1B
		1064: CPX $8B     ; 3 ; E4 8B
		1066: BCS $F06A   ; 2 ; B0 02
		1068: STA CXCLR   ; 3 ; 85 2C

		Note: We'll save our precalculated location at 8B, which is unused.
		</pre>

		<p>Of course, we still need to precalculate the position and store it at 8B.  We've got a little free ROM space in Bank 0, and tons of time during VBLANK, so we can run our routine just before we wait out the timer.  We'll steal the jump to 0CAB at 002A, call our routine at 0FF0, and then jump to 0CAB to wait out the timer.</p>
		<pre>		002A: JMP $BFF0   ; 3 ; 4C F0 BF

		0FF0: LDA $9C     ; 3 ; A5 9C
		0FF2: ADC #$07    ; 3 ; 69 07
		0FF4: STA $8B     ; 3 ; 85 8B
		0FF6: JMP $BCAB   ; 3 ; 4C AB BC
		</pre>

		<p>That solves the problem.  Now E.T. won't fall in to a well unless his feet are over the hole.  Moving around in the game feels a lot more natural.  Of course, it doesn't matter how great the controls are if we can't collect phone parts to complete the game!</p>
		<p>If you've been following along, you've probably already figured out that the reason we can't collect phone parts is because E.T.'s feet never touch them.  Hovering up to make E.T.'s feet touch them doesn't work, which seems obvious in retrospect.</p>
		<p>The simplest solution is to just move the phone parts down the screen a little bit so that they're lying on the ground and not hovering in mid-air.  It's an easy fix, just one byte.  Change 0BEE from 32 to 36.</p>
		<pre>		0BED: LDA #$36    ; 2 ; A9 36
		</pre>
		<p>That's all there is to it.  It's not perfect, but we'll improve it later.</p>
	<br>

	<a name="toohard"></a>
	<h2>Dealing with the difficulty</h2>
		<p>The game is now actually easy to complete on easy mode and much more fun to play in the other game modes.  It may still be a bit too difficult for some, so let's see what we can do to make the game less punishing.</p>
		<p>E.T. focuses heavily on exploration.  Not only do you need to find the phone parts, but also a location for your ship to land, and a suitable spot to "phone home". There is also strategic exploration to identify the spots where you can call Elliott, eat candy, and send the scientist and FBI agent back to their respective buildings.  Let's not forget side quests.  The problem, of course, is that the game punishes you for exploring.  Every step you take uses precious energy.  Rather than a fun activity, exploration is something to avoid whenever possible.</p>
		<p>As there are plenty of other ways to lose energy aside from just moving around, we can reduce the amount of energy it takes to move around to zero without making ourselves invincible.  The game will still be challenging, just not nearly as frustrating.</p>
		<p>E.T. loses energy by moving around in three different ways: walking, running, and hovering upward. Using our debugger, we can step through the code to find the place or places where we lose energy.  Some people may think that running or hovering should still take energy away.  Conveniently, there are three places we need to change. Each line presented below is independent of the others, so just don't make the changes for running or hovering if you don't want them.</p>
		<pre>		The Original code:
		0707: LDY #$01     ; 3 ; A0 01 ; Lose energy Walking
		071B: LDY #$01     ; 3 ; A0 01 ; Lose energy Running
		0685: LDY #$01     ; 3 ; A0 01 ; Lose energy Hovering

		The New code:
		0707: LDY #$00     ; 3 ; A0 00 ; Lose no energy Walking
		071B: LDY #$00     ; 3 ; A0 00 ; Lose no energy Running
		0685: LDY #$00     ; 3 ; A0 00 ; Lose no energy Hovering
		</pre>
		<p>It's easy to see how to change the code to take <i>more</i> energy away if you're after additional challenge. You could, for example, double the energy you use when running by changing 071C to 02.</p>

		<p><b>::UPDATE::</b> AtariAge user Random Terrain noticed that there is a problem with the sound that plays when E.T. is hovering.</p>
		<p>That particular problem is caused by the seemingly simple difficulty fix for hovering. It turns out that the routine that plays the hovering sound uses the lower part of your energy (the last digit, masked off with an AND #$0F) to pace the tones.  If we set 0686 to 0, you'll either hear an annoying tone or no sound at all, depending on the last digit of your energy counter when you start hovering. To fix this, we'll need modify that routine at 04EE.</p>
		<p>We'll need to replace the reference to D4 with another memory location with a value that changes regularly. 81 is a good candidate, but it changes a bit too frequently.  We can slow the pace to match the original fairly well by changing the mask to 1E.</p>
		<pre>		04F0: LDA $81     ; 3 ; A5 81
		04F2: AND #$1E    ; 2 ; 29 1E
		</pre>

		<p>If you still think the game is too difficult, you can skip the changes above (except the sound fix) and make the following change:</p>
		<pre>		0FD5: LDA $D3     ; 3 ; A5 D3
		</pre>
		<p>This change copies the upper part of your energy counter to the lower part, making energy a non-issue.  You only lose energy if you fall in to a well and fail to catch yourself.  You'd need to make that mistake 99 times before you pass-out, assuming that you don't eat any candy between falls.  If that wasn't enough, you still won't lose as Elliott will come to revive you a few times. I don't recommend this change.</p>

	<br>

	<a name="notgreen"></a>
	<h2>E.T. is NOT green!</h2>
		<p>Why is E.T. green?  You need to ask Howard Scott Warshaw about that.  E.T. is brown, however, not green.  There is absolutely no reason why the game shouldn't use a proper color for E.T.</p>
		<p>Here's what we know:</p>
		<ul>
		<li>The E.T. sprite uses GRP1.</li>
		<li>COLUP1 is not set anywhere in the kernel</li>
		<li>E.T.'s color changes as he loses energy</li>
		<li>Our energy level is stored across D3 and D4</li>
		<li>The values at D3 and D4 are stored as BCD</li>
		</ul>
		<p>We don't know, but can assume, that GRP1 and, consequently, COLUP1 are used in the top-bar. (It turns out that they are.)  With our debugger, we can step through the code called after the top bar has been rendered and before we enter the kernel at 102E.  We're looking for anything that checks our energy level or that sets COLUP1. It's not long before we find this gem:</p>
		<pre>		165E: LDA $D3      ; 3 ; A5 D3
		1660: LSR A        ; 2 ; 4A
		1661: LSR A        ; 2 ; 4A
		1662: LSR A        ; 2 ; 4A
		1663: LSR A        ; 2 ; 4A
		1664: LSR A        ; 2 ; 4A
		1665: TAX          ; 2 ; AA
		1666: INX          ; 2 ; E8
		1667: LDA F7F9, X  ; 4 ; BD F9 F7
		166A: STA COLUP1   ; 3 ; 85 07
		</pre>
		<p>It does everything: It reads the upper part of our energy level and sets COLUP1.  We now know that E.T.'s colors are stored starting at 17F9, but how many of those bytes do we need to change?  Remembering that the value stored at D3 is BCD we know that after 1163 we'll have a value between 0 and 9.  One more shift (to divide by 2) and we're left with one of 5 possible values: 0, 1, 2, 3, and 4.  Clever, isn't it?</p>
		<p>Why the INX?  You'd think that it was unnecessary as we'd need only change F7F9 to F7FA to skip the instruction and save a precious byte of ROM space and two cycles. If you take a look at the code a little farther back you'll find that the byte at index 0 is used as a color, but in a special case. (When E.T. has passed-out, if you're curious).  The important thing here is that we now know that to change E.T.'s color, we need only change those 6 bytes starting at 17F9. </p>
		<p>We'll need to consult a <a href="http://www.randomterrain.com/atari-2600-memories-tia-color-charts.html">TIA color chart</a> to figure out what colors we should use.</p>
		<pre>		Original Colors:
		17F9: 0E DE DC DA DA DA

		New Colors:
		17F9: 0E FE FC F8 F8 F8
		</pre>
		<p>I changed the luminance and not just the hue as FA looked too light.  Unfortunately, that choice makes E.T. practically invisible against the gray background in the wells.  Rather than give-in and use the lighter color, we can just make the background of the well a bit darker.  It's a small difference that won't be noticeable during play.</p>
		<p>As you've already guessed, the code to change COLUPF and COLUBK ought to be near the code to set COLUP1: after we draw the top bar but before we enter the main kernel.  No surprise, we find the code we're interested in just a few bytes down at 166E to 1680.  The code works the same way, reading a color from a byte array. COLUPF from 1DD9 and COLUBK from 1DE2.  Play until you fall in to a well and then take a look at the value stored at 80 when we get to 166E to get the index we need. (For the lazy: It's 6, giving us 1DE8.)</p>
		<p>Between the color chart and our understanding of the code starting at 166E we can change the well foreground and background colors to anything that we want.  Gray always seemed to me to be an odd choice, but I'll stick with tradition here and just make the background a shade darker so that E.T. stands out.</p>
		<pre>		1DE8: 04
		</pre>
		<p>If you want to change the well foreground color, that value is stored at 1DDF.</p>

		<div>
		<p><img src="http://www.neocomputer.org/projects/et/figure6.png"></p><p><b>Figure 6:</b> E.T. looking sharp with his fancy new color. </p>
		</div>		

	<br>
	<a name="finishup"></a>
	<h2>Spit and Polish - Finishing the Project</h2>
		<p>Things are looking good, but they're not good enough.  Let's see if we can polish this up and make it ready for production.</p>
		<p>Here are the problems:</p>
		<ul>
			<li>Elliott's Shirt has no stripes</li>
			<li>The FBI Agent lost his hair</li>
			<li>E.T. loses detail on the right side of the screen</li>
			<li>Candy Pieces are much more difficult to collect</li>
			<li>Objects in wells are drawn too far down, making the flower look odd</li>
			<li>A Big One: Elliott can't revive E.T.</li>
		</ul>
		<p>As a Bonus, let's also make our difficulty fix a selectable option.</p>
		
		<h3>Finding some space</h3>
		<p>What purpose does M0 serve? I have absolutely no idea.  It's only set to one of two fixed vertical positions (7F and 33), and only at two fixed horizontal positions.  It's displayed only when E.T. is dead (on the sad ending scene), about half-way across the the bottom of the play area. It changes to various shades of red. That's from the code, I've never actually seen it during play. I've taken the time to see if that really does happen, and what it looks like. M0 shows up directly over a dead E.T., giving him the appearance of being fatally wounded.</p>
		
		<p>While I was hoping for a no-compromise solution, this is something I'm willing to remove. It won't be missed.  We'll trade it for an improved kernel and a new feature much better than a bleeding E.T.</p>

		<p>With that gone, we free up 3 bytes and 6 cycles in our kernel at 1028.  Looking a few bytes down at 102F, you'll see an obviously useless SEC.  It's actually used for timing, but we'll make up for that with our new changes anyway.  For now, it can be considered 1 free byte and 2 precious cycles.  Coupled with the WSYNC we can remove at 1060, that gives us 6 free bytes and 11 cycles.  We'll use these to make a change to our kernel to implement our falling fix while preserving sprite colors and making it easier to collect candy.</p>

		<p>The idea is simple: We have a lot of stuff to draw early, so do that first.  With the extra space and time, we'll check to see if we're on the line we'd normally strobe CXCLR for our falling fix. Instead of clearing it right away, check to make sure we haven't touched any candy.  That's going to take a whopping 10 bytes and 12 cycles. </p>
		
		<pre>		CPX $8B     ; 3 ; E4 8B
		BNE +6      ; 2 ; D0 06
		BIT CXP1FB  ; 2 ; 24 13
		BVS +2      ; 2 ; 70 02
		STA CXCLR   ; 3 ; 85 2C
		</pre>

		<p>Thankfully, we can spare the extra cycle.  Though where are we going to find an extra 4 bytes?</p><p>Remember all that dead code at 1013 we used for the first version of our falling fix?  It's just timing code, there to waste some cycles so that everything is drawn at just the right place.  We don't ultimately need it for our falling fix (though we left it in anyway) so we're free to use it for something else, provided we're careful about our timing.  The code we're going to change starts at 1060 and branches in to the code at 1022. That puts us directly below the useless code at 1013.  We can snag a few bytes from there and just adjust the jump at 1074.</p>
		
		<p>To start, we'll kill the WSYNC at 1060 and move everything before the jump to 1022 (at 1074) up two bytes. We'll move the CPX at 1022 to the hole we created at 1072 giving us:</p>
		<pre>		1060: LDA $87     ; 3 ; A5 87
		1062: STA GRP0    ; 3 ; 85 1B
		1064: LDA $88     ; 3 ; A5 88
		1066: STA COLUP0  ; 3 ; 85 06
		1068: TXA         ; 2 ; 8A
		1069: TAY         ; 2 ; A8
		106A: LDA $BA, Y  ; 5 ; B1 BA
		106C: STA PF1     ; 3 ; 85 0E
		106E: LDA $BC, Y  ; 5 ; B1 BC
		1070: STA PF2     ; 3 ; 85 0F
		1072: CPX $9F     ; 3 ; E4 9F
		</pre>
		<p>Next, we'll grab four bytes from our dead code by moving the jump at 101F to 101B.  We'll then update our jump at 1074 (that used to point to 1022) to point to 101E.</p>
		<pre>		101B: JMP F04B    ; 3 ; 4C 4B F0

		1074: JMP F01E    ; 3 ; 4C 1E F0
		</pre>
		<p>Now we can clear a 10 byte spot for our routine.  Move the PHP at 1024 to 101E. (We can get away with this as JMP doesn't affect any flags.) Now move everything from the CPX at 1025 to the TXA at 102E down a byte, overwriting the useless SEC at 102F.</p>
		<p>Popping in our new routine at 101F, we get:</p>
		<pre>		101B: JMP F04B    ; 3 ; 4C 4B F0

		101E: PHP         ; 3 ; 08
		
		101F: CPX $8B     ; 3 ; E4 8B
		1021: BNE +6      ; 2 ; D0 06
		1023: BIT CXP1FB  ; 2 ; 24 13
		1025: BVS +2      ; 2 ; 70 02
		1027: STA CXCLR   ; 3 ; 85 2C

		1029: CPX $9E     ; 3 ; E4 9E
		102B: PHP         ; 3 ; 08
		102C: INX         ; 2 ; E8
		102D: LDY $86     ; 2 ; A4 86
		102F: TXA         ; 2 ; 8A
		</pre>

		<p>If we try the game now, it'll crash.  The kernel entry point is at 102E, which now in the middle of an instruction!  The CPU will think that we're trying to STX $8A and who knows what else afterward!  We'll need to adjust our entry point down a byte.  It's buried in a table at 18F3.  The address is loaded at 16A0 and shoved on to the stack. We jump in to the kernel with an RTS at 16B5. The RTS instruction pops the address off the stack as sets the PC, but inexplicably adds 1 in the process.  That means we'll need to specify an address 1 byte before the one we want. It's weird. We jump to our new address ... by specifying our old one.</p>
		<pre>		18F3: $F02F       ; - ; 2E F0
		</pre>
		
		<p><i>Now</i> if we replace the 8 bytes from 1013 to 101A with NOP's (EA, using up 16 cycles) we can try out our new kernel.  A quick test shows that we're clearly not done.  E.T. still loses resolution on the right side of the screen!  Remember that useless SEC?  We needed it to delay updating GRP1 at 1034 until we were finished drawing the play area.  The fix is easy, just swap it with the WYSNC at 1036.</p>
		<pre>		1034: STA WSYNC   ; 3 ; 85 02
		1036: STY GRP1    ; 3 ; 84 1C
		</pre>

		<p>That's a lot better, but we're still not done.  Elliott still can't revive E.T., and we still need to touch phone parts with our feet, meaning we still need to push objects in wells down a few lines.  We've also introduced a new problem: E.T. isn't centered in the spaceship on landing or take-off. At least that one is easy to fix.  All we need to do is adjust the starting position of the spaceship for landing (at 0B40) and take-off (at 07ED):</p>
		<pre>		0B40: LDA #$EF    ; 2 ; A9 EF
		07ED: SBC #$04    ; 2 ; E9 04
		</pre>

		<p>So, why can't Elliott revive E.T.?  To revive E.T., Elliott needs to touch him.  Unfortunately, the "E.T. has passed-out" sprite is much shorter than the normal E.T. sprite, and we clear the collision latches well below the last line. It doesn't matter where Elliott is positioned, he'll never touch E.T. after we strobe CXCLR as there will be nothing for him to touch.</p>
		<p>There are a couple things we could do.  Instead of adding 7 when we calculate the position to clear the collision latches, we could do the sensible thing and add E.T.'s height and position, then subtract 2 before storing it in 8B.  That way we'll have a line for Elliott to touch on the much shorter E.T. sprite. Unfortunately, that won't work.  Even if we move the code to calculate the position just above E.T.'s feet to the 10 free bytes at 0BF6 (which we will anyway) we'll need 8 bytes for the math and three to jump to 0CAB.  That's 11 bytes.  Our luck isn't holding out, as there doesn't seem to be any useless bytes to spare.  All the same, let's move that routine anyway in preparation for our cool new feature.</p>
		<pre>		002A: JMP $BBF6   ; 3 ; 4C F6 BB

		0BF6: LDA $9C     ; 3 ; A5 9C
		0BF8: ADC 07      ; 3 ; 69 07
		0BFA: STA $F6     ; 3 ; 85 F6
		0BFC: JMP $BCAB   ; 3 ; 4C AB BC
		</pre>
		<p>(Wait a minute!  Why are we storing the result at F6 when our new kernel is expecting that at 8B?  There is a reason, as we'll soon see.)</p>

		<p>We could alternately check to see if E.T. has passed-out, and skip strobing CXCLR.  The same trick would work for Phone Parts as well, by checking to see if E.T. is in a well.  Of course, there's absolutely no way we can do that at the same place we do our other checks at 1023.  That shouldn't be a problem, as we only really need to do those checks once as they're not dependent on E.T.'s vertical position.  That's great, but how do we skip clearing the collision latches?  There's not enough room for even one extra check.</p>
		
		<p>We could modify our calculated value to point to some other location.  Setting it to 0 would be ideal, but what about this process has been ideal?  We also need a place to stuff our checks. A check usually costs us a good 4 bytes, two to set flags and another two to branch.  That would make it seem like we'd need at <i>least</i> 10 bytes (another 2 bytes to zero 8B).  Naturally, we don't have 10 usable bytes plus 1 or 3 extra bytes for a return. Not anywhere.</p>
		
		<p>Now, we do have 8 bytes at 1013, for timing, just begging to be used in our kernel. The problem is that not only do we need to squeeze our routine in to 8 bytes, we must also burn through 12 to 16 cycles (no more, no less) to keep our timing right.</p>
		
		<p>Here's what we know:</p>
		<ul>
			<li>D9 is normally 0, but is set to 40 when we're hovering over a well, 20 when we're at the bottom of a well, and 80 while we're falling in.</li>
			<li>E3 is normally 0, but is set to C0 when E.T. has passed out</li>
			<li>E.T.'s vertical position will never exceed 3A</li>
			<li>E.T.'s vertical position will never fall below 30 while standing in a well</li>
			<li>E.T. will never collect anything or fall in a well when his vertical position is 0</li>
			<li>We only draw GRP0 on the first scanline when the mothership is taking off or landing</li>
			<li>That means our timing code at 1013, for all practical purposes, will always be called on the first scanline.</li>
		</ul>
		<p>What can we do with this? Adding D9 and E3 to 8B will normally do nothing. If we're at the bottom of a well, D9 will be set to 20, and E3 will be 0 (if E.T. is healthy) and C0 (if not) That means 8B will be around 10 (+16) or 50 (+80), in any case, well outside the area we care about. (It'll be well above E.T. or below the play area). If we're not in a well, D9 will be 0 and adding C0 (-64) to any possible E.T. position will always result in a value in the range FA(-6) to C0(-64).</p>

		<p>This is great.  We can do that in 8 bytes and in precisely 12 cycles (the minimum we need to burn). The only problem is that our little routine will be called more than once.  We can't just keep modifying 8B and hope for the best.  The simple solution is to keep an original copy of our calculated value in a different location, run our routine using that value, and store the result in 8B.  (That's why we stored our calculated value in F6 instead of 8B when we moved the routine to calculate the position we want to strobe CXCLR.) Our slick little routine looks like this:</p>
		<pre>		1013: ORA $D9     ; 3 ; 05 D9
		1015: ADC $E3     ; 3 ; 65 E3
		1017: ADC $F6     ; 3 ; 65 F6
		1019: STA $8B     ; 3 ; 85 8B
		</pre>
		<p>Why ORA and not LDA?  A will always be 0 at this point so the effect will be the same.  With needlessly cryptic things (like the SEC used like a NOP) scattered around the code, it seemed to fit with H.S.W.'s style.</p>

		<p><b>Update:</b> AtariAge user iesposta noticed that it's possible for E.T. to fall in to a well if he's touching both a well and a piece of candy.  This only happens in one spot (on the screen with the "V"-shaped wells) and you've got to be lined up near perfectly.  We can prevent that from happening by pushing that candy down a tiny bit.</p>
		<pre>		 0BA5: 22          ; - ; 22
		</pre>
		
		<p>We did it!  The game is now virtually identical to the original except for the changes that we wanted to make. The gore is the only exception, but it was worth removing it for...</p>

		<a name="newfeature"></a>
		<h3>Our new feature</h3>
		<p>As promised, we're going to make our difficulty fix <i>optional</i>.  No longer will skilled E.T. players need to give up our much-needed changes in exchange for a more challenging game. Both difficulty switches are already used, but the B&amp;W / Color switch is unused. All we need to do is find a place to put our routine.</p>

		<p>We'll need to first modify our old difficulty fix to read from a byte in memory, rather than our explicit 1 or 0.  That's the easy part.  We'll use F8, for no real reason.</p>
		<pre>		0707: LDY $F8     ; 3 ; A4 F8
		071B: LDY $F8     ; 3 ; A4 F8
		0685: LDY $F8     ; 3 ; A4 F8
		</pre>
		
		<p>The state of the color switch is at bit 3 in SWCHB.  We'll need to load that in to memory, mask off bit 3, and check the state against that.  Naturally, we don't have the space to do all of that and store it.  We'd need 13 bytes for the obvious routine, if we magically found a place to stuff our routine that didn't require we hijack a jump.  That's not going to happen.</p>
		
		<p>The smallest routine I could manage works like this: read SWCHB, mask off bit 3, shift right three times, store the result.  That'll take 10 bytes, not including a return jump.  Even if we had the 10 bytes, that also would mean that the difficulty fix would be off by default (the switch is set to color) which isn't optimal.</p>
		
		<p>We have what appears to be 10 bytes, but is really 8 bytes, free at 0FF0 where we used to have the 9-byte routine used to calculate the position to clear the collision latches. (I don't know how we got away with it.)  We also have the 8 bytes that set M0's horizontal and vertical position for the gory ending scene at 0B4D. If we switch from one group to the other, it could be enough.</p>
		
		<p>We'll likely need to use 6 of those bytes just for jumps, once to switch between our open areas, and once to complete the jump we hijack. Luckily, the routine just before our 8 free bytes at 0FF0 ends with an RTS. It turns out that this is the routine that decrements E.T.'s energy. It's a bit of good luck, and a nice match for our difficulty fix.  To make things even better, there's an RTS at the end of our other 8 bytes (that set M0's position).  With 16 bytes, and a return that's ready-made, we can implement our routine, swap the functions of the Color and B&amp;W settings (so that Color is easy), all with a byte to spare.</p>
		<p>We'll overwrite the RTS at 0FEF to allow the routine to continue in to our routine, grab SWCHB, and mask off bit 3 before the jump.  We could do an LSR here, but we'll save it for after the jump to make our routine line-up with the existing RTS at 0B55.</p>
		<pre>		0FEF: LDA SWCHB   ; 4 ; AD 82 02
		0FF2: AND #$08    ; 2 ; 29 08
		0FF4: JMP $BB4E   ; 6 ; 4C 4E BB
		</pre>
		<p>We'll need to use a byte to cap-off the checks to run the old routine so that our routine doesn't accidentally run.  That's why we'll enter the second part at 0B4E instead of 0B4D.</p>
		<pre>		0B4D: RTS         ; 6 ; 60
		0B4E: LSR         ; 2 ; 4A
		0B4F: LSR         ; 2 ; 4A
		0B50: LSR         ; 2 ; 4A
		0B51: EOR #$01    ; 2 ; 49 01
		0B53: STA $F8     ; 3 ; 85 F8
		</pre>
		<p>Bit 3 of SWCHB is 1 if the B&amp;W / Color switch is in the Color position, 0 otherwise.  The EOR at 0B51 will reverse that so that we store a 0 in F8 when the switch is set to Color instead of 1.</p>
		<p>That's all there is to it.</p>

	<br>

		<a name="bugs"></a>
		<h2>Squashing some 30-year-old Bugs</h2>

		<p>E.T. has a reputation for being loaded with bugs.  Bugs that make the game "virtually unplayable".  This just isn't true.  There aren't actually that many bugs, and only one that seems to impact normal gameplay.</p>
		
		<h3>Bug myths and facts</h3>
		<p>There are a few oft-cited bugs that, well, aren't bugs at all.  Before we begin, let's set the record straight on the most common non-bugs:</p>
		<ul>
			<li>
				<p>Myth: <i>Some game-state variables aren't cleared when starting a new game as evidenced by the appearance of the Scientist and FBI agent after starting a new game on mode 3.</i></p>
				<p>This simply isn't true.  The Scientist and FBI agent always appear regardless of the game mode.  In every mode, all the humans are shown returning to their respective buildings -- that includes mode 3, even from power-on.  The difference, of course, is that in mode 3 they never leave.</p>
			</li>
			<li>
				<p>Myth: <i>The first count-down timer doesn't finish ticking down like the second, faster, timer.</i></p>
				<p>This is just a misunderstanding of what the "two" timers represent.  The timer takes 64 "ticks" to complete. Every 8 ticks, a section disappears.  The second timer is a "close-up" of the last section of the first timer.  It ticks off one of its eight sections every "tick".  It's like the first timer is minutes, and the second timer seconds.  There really is just one 64-tick timer, we just see the higher-precision ("second") view when we get to the end (the last "minute").</p>
			</li>
			<li>
				<p>Myth: <i>The number of times Elliott can revive E.T. is incorrect / can be exploited to gain and extra revival.</i></p>
				<p>This is simply not true. The manual states that <i>"Elliott can merge with E.T. three times per game."</i> Which is correct.  It also states that <i>"Once during a round, however, E.T. can encounter a wilted flower hidden in the bottom of a well.  If E.T. is revives the flower, Elliott is given the ability to merge with E.T. one extra time."</i> This is also correct.  Extra merges / lives accumulate as you would expect from the description, though that's not explicitly stated in the manual.</p>
				<p>In short, there are no bugs related to the number of times Elliott can revive E.T. (Not under any normal play circumstances anyhow.  If you accumulate more than 127 "lives", Elliott will not revive E.T. I doubt that has <i>ever</i> happened!)</p>
			</li>
		</ul>
		
		<h3>Real Bugs</h3>
		<p>Bug 1: <i>On difficulty modes where Elliott is allowed to be on-screen when the ship lands, the Ship Crushes Elliott.</i></p>
		<p>This bug happens because the ship's position is overwritten by Elliott's position immediately after the ship's position is set to start the landing animation.  The fix is simple, just skip over the code that updates the current objects on-screen position after we start initialize the ship landing sequence.</p>
		<pre>			07BD: JMP $BAD9  ; 3 ; 4C D9 BA
		</pre>
		
		<p>Bug 2: <i>You always fall in to a well when exiting the forest on the right, and when exiting the city on the left</i></p>
		<p>This is also an easy fix.  The falling fix automatically takes care of the bug when exiting left from the city screen.  For the forest, we just need to slightly adjust E.T.'s starting position on the next screen.  The player will be pushing right on the joystick, so we'll just move E.T. a tiny bit up and to the right to avoid immediately falling in to the top-center well on the screen with eight pits.  E.T.'s starting position is read from a table, so we just need to update a couple of values:</p>
		<pre>			0D54: 3A +10      ; - ; 4A
			0D6C: 04 -3       ; - ; 01
		</pre>
		<p>We'll move E.T. 16 units to the left, and 3 units up from the original positions.</p>
		
		<p>Bug 3: <i>Scoring is wildly incorrect.</i></p>
		<p>It's consistent, for the most part, but it's very confusing.  It also doesn't even come close to matching the manual.  There are some more serious problems, however.  Collecting more than 31 pieces of candy will cause an error, often leading to the famous "Ninja E.T." bug. The starting energy penalty and candy bonuses are also incorrect.</p>

		<p>The code for scoring also determines other things, like E.T.'s energy when starting a new game, so we'll need to be careful making drastic changes to make sure we don't accidentally break anything.  Of cousre, the code is also a mess, so we will be making some rather dramatic changes.</p>
		<p>Right now, points for candy E.T. brings on the ship, bonus points for candy collected beyond a certain amount, and the energy penalty are determined by table look-ups.  Normally, a look-up table is used to save ROM space, time, or both to avoid a complex calculation or provide a more accurate calculation. These tables just waste space as time isn't an important factor here. Even worse, only points for E.T.'s candy are scored correctly! We'll eliminate these awful tables and put those bytes to better use.</p>
		<p>Currently, scoring follows this sequence:  After the ending animation starts, you are given 1 point for every unit of remaining energy, then 490 points for every candy brought on to the ship.  The candy munching part of the animation then begins, netting you 770 points for each candy held by Elliott; one at a time while the animation runs.  When a new round starts, you're given bonus points for collected candy above a certain amount (21 pieces, not 31 as specified in the manual) and the energy penalty determines your starting energy for the round.</p>
		<p>We're going to change that.  We'll start off the same way, giving one point for every unit of remaining energy.  We'll then set E.T.'s energy to 9999. As the munching animation runs, we'll deduct energy for the penalty, add bonus points for candies collected over a certain amount, and add the normal 490 or 770 points for collected candy to your score.</p>
		<p>The energy penalty code also sets E.T.'s energy at the start of a new game. We'll need to remember that code that begins a new round is also called when a new game starts, and add some code to make sure E.T.'s starting energy is set to 9999 at the beginning of a new game.</p>
		<p>Fixing the scoring code will also fix the Ninja E.T. bug. As it's become a popular, if unintended, Easter Egg in its own right, we'll add it to the game as an intentional effect. (Without the other strange artifacts, of course).</p>
		<p>Since we're fixing the scoring, it makes sense to make the scoring match the manual.  This means we'll also need to make a small change to how much candy can be found during a round so that you can meaningfully collect more than 31 pieces. There is technically a bug here, as the flags that show which well screens currently have candy is never cleared. The counter that holds how much additional candy can be found during the round often doesn't reach zero. We'll leave this in as it adds a nice bit of pseudo-randomness to the amount of candy you can find.</p>
		<p>Wait. What?  There's effectively a potential +4 or -3 to the amount of candy than can appear during a round. Remembering that candy left on the ground from the previous round isn't cleared, there can be as many as four pieces left on the ground from a previous round. Those won't be deducted from the counter, effectively increasing the potential amount of candy by as much as four pieces.  The -3 is a bit more complicated.  When candy appears, it appears on every well screen.  The value at DC is reduced by the amount of candy needed to add a candy to every screen.  (If all four screens need candy, DC is reduced by four. If three screens need candy, DC is reduced by three, and so on.) If there isn't enough candy left to place a candy on every screen, according to DC, then no candy is added.  That means that DC can get "stuck" at 3, 2, or 1. (If all four well screens need candy when DC is less than four, no candy is added. If three screens need candy when DC is less than 3, no candy will be added, and so on.)  If you're looking to maximize the amount of candy you can collect, collect only one candy at a time, allowing the candy to replenish in-between, when you get close to the maximum.</p>
		<p>Without further exposition, let's get started.  The first thing we'll do is make a change to the code that runs right after we finish a round.  The code we're interested in initializes the counter for remaining candy for the next round and totals the collected candy (what Elliott is holding plus what E.T. is holding.)</p>
		<pre>		 058E: STA $F4     ; 3 ; 85 F4
		 0590: LDA $DD     ; 3 ; A5 DD
		 0592: STA $F5     ; 3 ; 85 F5
		 0594: ADC $F4     ; 3 ; 65 F4
		 0596: STA $DD     ; 3 ; 85 DD
		 0598: ADC 16      ; 3 ; 69 10
		 059A: NOP         ; 2 ; EA
		 059B: NOP         ; 2 ; EA
		</pre>
		<p>Memory location DD holds the amount of candy held by Elliott, which will now be set to the total amount of candy collected.  F4 and F5 hold the amount of candy held by E.T. and Elliott, respectively.  At 0598, we set the amount of candy available in the next round to 16 plus the total amount of candy collected. (It will be stored in DC just after the two NOP's).  We'll come back to that later.</p>
		<p>We only need F4 and F5 to implement the Ninja E.T. bug as an Easter Egg, so this routine could be made much simpler.</p>
		<p>With that out of the way, let's kill the code that scores E.T.'s candy as we'll handle that in our new scoring routine.  As we'll be deducting energy for the penalty in our new score routine, we'll use this opportunity to set E.T.'s energy to 9999.</p>
		<pre>		 1395: LDA #$99    ; 2 ; A9 99
		 1397: STA $D3     ; 3 ; 85 D3
		 1399: STA $D4     ; 3 ; 85 D4
		 139B: BNE +9      ; 3 ; D0 09
		 139D: NOP         ; 2 ; EA
		 139E: NOP         ; 2 ; EA
		 139F: NOP         ; 2 ; EA
		 13A0: NOP         ; 2 ; EA
		 13A1: NOP         ; 2 ; EA
		 13A2: NOP         ; 2 ; EA
		</pre>
		<p>The branch at the end skips over the jump to the routine that updates our score.</p>

		<p>Those six bytes are just begging to be used!  As we're fixing the scoring, let's take this opportunity to address a scoring issue with the difficulty fix.  Normally, you get 1 bonus point for every remaining unit of energy that E.T. has at the end of a round.  With the difficulty fix in place, players essentially get tons of free points.  It hardly seems fair, so we'll add a check so that the players taking advantage of the difficulty switch receive no bonus points for remaining energy.</p>
		<pre>		 139D: LDA $F8     ; 3 ; A5 F8
		 139F: BNE +2      ; 2 ; D0 02
		 13A1: TAX         ; 2 ; AA
		 13A2: TAY         ; 2 ; A8
		</pre>
		<p>We'll hijack the jump at 1382, pushing it back a bit so that our routine is actually called. The routine to increment our score will be called directly afterward like normal, only with X and Y set to 0 instead of E.T.'s remaining energy, if the difficulty fix is enabled.</p>
		<pre>		 1382: JMP 13A3 -6 ; 6 ; 4C 9D F3
		</pre>

		<p>Now we've freed up the 20 bytes that make up the table at 1341.  We'll free up the 16 bytes at 17E9 used for the energy penalty later when we update the code that start a new round.  For now, we'll assume that they're free.  That should give us 36 bytes for our new scoring routine.</p>
		<p>We'll call our new scoring routine from the munching routine at 13AC.  We'll need to either hijack a jump or find some free bytes for our own.  Luckily, we've got four useless bytes at 13BD.  All those do are store the number 6 in 8B. It's the only place in the ROM that does anything with 8B (our changes excepted, of course) so it's essentially useless.  We'll use those four bytes for our jump.</p>
		<pre>		 13BD: LDA #$01    ; 2 ; A9 01
		 13BF: ORA $DE     ; 2 ; 05 DE
		 13C1: STA $DE     ; 3 ; 85 DE
		 13C3: LDX #$07    ; 2 ; A2 07
		 13C5: LDY #$70    ; 2 ; A0 70
		 13C7: JSR $1341   ; 6 ; 20 41 F3
		 13CA: NOP         ; 2 ; EA
		</pre>
		<p>We'll want to take advantage of the LDX and LDY (which hold the number of points to score) to save a few bytes, so we'll just push everything before that up in to the four-byte hole we made at 13BD and add our jump.  Our jump only takes three bytes, so we'll fill that extra byte with a NOP.</p>
		<p>Finally, we can add our new score routine! The idea here is simple.  Assume from 13C5 and 13C7 that the candy we're munching is worth 770 points.  If E.T. is holding any candy, reduce that amount by one and change the points to score to 490.  Finally, check to see if the current candy is one of the candies collected after the 31st piece.  If so, add 1000 points to whatever we've planned to score and deduct 700 units of energy as the penalty. This matches the scoring described in the manual. The points will actually be added to the score after we return from our routine.</p>
		<pre>		 1341: LDA $D2      ; 2 ; A5 D2
		 1343: CMP #$0A     ; 2 ; C9 0A
		 1345: BEQ +8       ; 2 ; F0 08
		 1347: SBC 16       ; 3 ; E9 10
		 1349: STA $D2      ; 3 ; 85 D2
		 134B: LDX #$04     ; 2 ; A2 04
		 134D: LDY #$90     ; 2 ; A0 90
		 134F: LDA $DD      ; 2 ; A5 DD
		 1351: SED          ; 2 ; F8
		 1352: JMP $17E9    ; 6 ; 4C E9 F7
		 -----------------------------------
		 17E9: CMP #$1F     ; 2 ; C9 1F
		 17EB: BCC +10      ; 2 ; 90 0A
		 17ED: TXA          ; 2 ; 8A
		 17EE: ORA #$10     ; 2 ; 09 10
		 17EF: TAX          ; 2 ; AA
		 17F1: LDA $D3      ; 2 ; A5 D3
		 17F3: SBC 7        ; 3 ; E9 07
		 17F5: STA $D3      ; 3 ; 85 D3
		 17F7: CLD          ; 2 ; D8
		 17F8: RET          ; 6 ; 60
		</pre>
		
		<p>Now we need to update the code that starts a new round to keep it from scoring bonus points and issuing a penalty.  There is an additional problem, as the code that determines the energy penalty also sets E.T.'s energy to 9999 for the first round, we'll need to also modify the code that starts a new game or E.T. will start the game without any energy!</p>
		<p>Looking at the new game code at 13DC we initialize a lot of stuff to zero, including things that are set later or can be set later.  We won't need the STA $EB (ship status) as that's set later. We can also safely set DD, D9, and 94 (Elliot's candy, well flags, and E.T.'s neck height) at the start of each round. That'll free up a few bytes to set E.T.'s starting energy at the beginning of a new game.</p>
		<pre>		 13FD: LDA #$99     ; 2 ; A9 99
		 13FF: STA $D3      ; 3 ; 85 D3
		 1401: STA $D4      ; 3 ; 85 D4
		 1403: LDA #0       ; 2 ; A9 00
		 1405: STA $F4      ; 2 ; 85 F4
		 1407: STA $E3      ; 3 ; 85 E3
		</pre>

		<p>We'll also want to reset F4 (which holds the total candy collected used for our Ninja E.T. Easter Egg) so we'll include that  between the old 13FD and 13FF (now 1403 and 1407) that we pushed down to make room for our new code.</p>
		<p>We still need to set DD, D9, and 94 to 0 so we we'll do that at the start of a new round. (The new round code is also called when we start a new game.)  Everything from 147A to the jump at 14A2 is free for us to use, thanks to our new scoring routine.</p>
		<pre>		 
		 147A: LDA #$0      ; 2 ; A9 00
		 147C: STA $DD      ; 3 ; 85 DD
		 147E: STA $D9      ; 3 ; 85 D9
		 1480: STA $94      ; 3 ; 85 94
		</pre>

		<p>We also need to limit the amount of candy available in the next round so that our energy penalty doesn't "wrap around" and start deducting from the max again. Remember that DC holds the amount of candy that can appear in the next round.  We'll cap it off at 41 pieces, giving us potentially 38 to 45 pieces in the next round.  At 45 pieces our penalty will be (45-31)*700 or 9800.  Any more than that and E.T.'s energy would wrap to 9300.</p>
		<pre>		 1482: LDA #$29     ; 3 ; A5 29
		 1484: CMP $DC      ; 3 ; C5 DC
		 1486: BCS +2       ; 3 ; B0 02 
		 1488: STA $DC      ; 2 ; A5 DC
		 148A: JMP $14A5    ; 6 ; 4C A5 F4
		</pre>
		<p>Now scoring works exactly as stated in the manual.  There's just one thing left to do.</p>
		<a name="ninja"></a>
		<h3>Adding the Ninja E.T. Easter Egg</h3>
		<p>Ninja E.T. wasn't an intentional easter egg in the original game, it was a bug.  If you collected too much candy (most sources say 33 pieces) on the next round, E.T. would turn black and your energy would show part of H.S.W.'s initials and other junk.  This happens because a value other than 0-9 appears in the upper nibble in the upper part of E.T.'s energy, which will make the code "point" to the wrong image.  As E.T. changes color depending the amount of remaining energy, the color selected will be outside of the color table, which just happens to have a few 0's around it.  We'll take advantage of that to implement Ninja E.T. though we'll make sure that the energy counter doesn't look broken.</p>
		<p>With the scoring fixed, collecting 33 pieces of candy seems like a perfectly reasonable, and likely common, amount.  An easter egg shouldn't be triggered so easily.  Echoing the oft-cited trigger, we'll enable Ninja E.T. only if a player completes a round with both E.T. and Elliott in posession of exactly three candies.</p>
		<p>As a bonus, we'll give Ninja E.T. ten pieces of candy to make up for the previous candy-poor round.  It'll also let Ninja E.T. make a quick trade with Elliott for a phone part.</p>
		<pre>		 148A: LDA $F4     ; 2 ; A5 F4
		 148C: CMP $F5     ; 2 ; C5 F5
		 148E: BNE +12     ; 3 ; D0 0C
		 1490: CMP #$03    ; 2 ; C9 03
		 1492: BNE +8      ; 2 ; D0 08
		 1494: LDA #$AA    ; 2 ; A9 AA
		 1496: STA $D2     ; 3 ; 85 D2
		 1498: STA $D3     ; 3 ; 85 D3
		 149A: STA $D4     ; 3 ; 85 D4
		 149C: JMP $14A5   ; 6 ; 4C A5 F4
		 149F: NOP         ; 2 ; EA
		 14A0: NOP         ; 2 ; EA
		 14A1: NOP         ; 2 ; EA
		</pre>
		<p>Why AA?  That will both give Ninja E.T. 10 pieces of candy and make the energy counter appear to be empty.  As E.T. loses energy, the counter will return to normal, one digit at a time. When all four digits of the counter are back to normal, Ninja E.T. will also return to normal.</p>
	<br>
	<a name="newmode"></a>
	<h2>An Extra Game Mode</h2>
	<p>Players looking for additional challenge above game mode 3, but not quite as challenging as game mode 2 (with the nasty FBI Agent) have always felt left out.  AtariAge user roadrunner suggested that an extra game mode that included just the scientist would be a welcome addition.</p>
	<p>The various game modes remove humans by sending the Scientist or the FBI agent home repeatedly so that they don't appear in-game.  To allow an extra mode to be selected, we just need to change the maximum game mode from 3 to 4.  The game checks to see if the current mode is one higher than the maximum before setting the game mode back to 1, so we'll check to see if the the game mode is 5.  We'll also need to modify the check to send the scientist back home.  If we make the scientist only option game mode 3 and push the "no humans" option to game mode 4, we can check to see if we need to send the scientist home with an AND and by changing the branch instruction. Ultimately, it's a four-byte change.</p>
	<pre>	 0471: CPX #$05    ; 2 ; E0 05
	 --------------------------------------------
	 02ED: AND #$01    ; 2 ; 29 01
	 02EF: BEQ +9      ; 2 ; F0 09
	</pre>
	<br>

	<a name="allchanges"></a>
		<h2>All of the Final Changes</h2>
		<p>Here are all the final changes:</p>
		<pre>		---------------------------------------------
		- E.T. Fixed Final Version (NTSC) 2013-02-01
		---------------------------------------------

		-------------------------------------------
		- E.T. is Not Green                       
		-------------------------------------------
		 17FA: ET Colors   ; - ; FE FC F8 F8 F8
		 1DE8: Well BG     ; - ; 04

		-------------------------------------------
		- Difficulty Fix  (Walk, Run, Hover)     
		-------------------------------------------
		 0707: LDY $F8     ; 3 ; A4 F8
		 071B: LDY $F8     ; 3 ; A4 F8
		 0685: LDY $F8     ; 3 ; A4 F8
		 ------------------------------------------
		 0FEF: LDA SWCHB   ; 4 ; AD 82 02
		 0FF2: AND #$08    ; 2 ; 29 08
		 0FF4: JMP $BB4E   ; 6 ; 4C 4E BB
		 ------------------------------------------
		 0B4D: RTS         ; 6 ; 60
		 0B4E: LSR         ; 2 ; 4A 
		 0B4F: LSR         ; 2 ; 4A
		 0B50: LSR         ; 2 ; 4A
		 0B51: EOR #$01    ; 2 ; 49 01
		 0B53: STA $F8     ; 3 ; 85 F8
		 ------------------------------------------
		  - Hovering Sound Fix
		 ------------------------------------------
		 04F0: LDA $81     ; 3 ; A5 81
		 04F2: AND #$1E    ; 2 ; 29 1E

		-------------------------------------------
		- Falling Fix                            
		-------------------------------------------
		 002A: JMP $BBF6   ; 3 ; 4C F6 BB
		 0BF6: LDA $9C     ; 3 ; A5 9C
		 0BF8: ADC 07      ; 3 ; 69 07
		 0BFA: STA $F6     ; 3 ; 85 F6
		 0BFC: JMP $BCAB   ; 3 ; 4C AB BC
		 ------------------------------------------
		 1013: ORA $D9     ; 3 ; 05 D9
		 1015: ADC $E3     ; 3 ; 65 E3
		 1017: ADC $F6     ; 3 ; 65 F6
		 1019: STA $8B     ; 3 ; 85 8B
		 101B: JMP F04B    ; 3 ; 4C 4B F0
		 ------------------------------------------
		 101E: PHP         ; 3 ; 08
		 101F: CPX $8B     ; 3 ; E4 8B
		 1021: BNE +6      ; 2 ; D0 06
		 1023: BIT CXP1FB  ; 2 ; 24 13
		 1025: BVS +2      ; 2 ; 70 02
		 1027: STA CXCLR   ; 3 ; 85 2C
		 1029: CPX $9E     ; 3 ; E4 9E
		 102B: PHP         ; 3 ; 08
		 102C: INX         ; 2 ; E8
		 102D: LDY $86     ; 2 ; A4 86
		 102F: TXA         ; 2 ; 8A
		 -------------------------------------------
		 1034: STA WSYNC   ; 3 ; 85 02
		 1036: STY GRP1    ; 3 ; 84 1C
		 -------------------------------------------
		 1060: LDA $87     ; 3 ; A5 87
		 1062: STA GRP0    ; 3 ; 85 1B
		 1064: LDA $88     ; 3 ; A5 88
		 1066: STA COLUP0  ; 3 ; 85 06
		 1068: TXA         ; 2 ; 8A
		 1069: TAY         ; 2 ; A8
		 106A: LDA $BA, Y  ; 5 ; B1 BA
		 106C: STA PF1     ; 3 ; 85 0E
		 106E: LDA $BC, Y  ; 5 ; B1 BC
		 1070: STA PF2     ; 3 ; 85 0F
		 1072: CPX $9F     ; 3 ; E4 9F
		 1074: JMP F01E    ; 3 ; 4C 1E F0
		 -------------------------------------------
		 - Change Kernel Entry Point
		 -------------------------------------------
		 18F3: $F02F       ; - ; 2E F0
		 -------------------------------------------
		 - Landing / Launching Ship Position Fix        
		 -------------------------------------------
		 0B40: LDA #$EF    ; 2 ; A9 EF
		 07ED: SBC #$04    ; 2 ; E9 04
		 -------------------------------------------
		 - Move Candy on V Screen To Prevent Falls
		 -------------------------------------------
		 0BA5: 22          ; - ; 22
		 -------------------------------------------

		--------------------------------------------
		 - BUG FIXES
		--------------------------------------------
		 - Don't Fall Leaving Forest on Right
		 -------------------------------------------
		 0D54: 3A +10      ; - ; 4A
		 0D6C: 04 -3       ; - ; 01
		 -------------------------------------------
		 - Ship Shouldn't Crush Elliott 
		 -------------------------------------------
		 07BD: JMP $BAD9  ; 3 ; 4C D9 BA
		 -------------------------------------------

		-------------------------------------------
		- FIX SCORING TO MATCH MANUAL
		-------------------------------------------
		 058E: STA $F4     ; 3 ; 85 F4
		 0590: LDA $DD     ; 3 ; A5 DD
		 0592: STA $F5     ; 3 ; 85 F5
		 0594: ADC $F4     ; 3 ; 65 F4
		 0596: STA $DD     ; 3 ; 85 DD
		 0598: ADC 16      ; 3 ; 69 10
		 059A: NOP         ; 2 ; EA
		 059B: NOP         ; 2 ; EA
		 -------------------------------------------
		 1382: JMP 13A3 -6 ; 6 ; 4C 9D F3
		 -------------------------------------------
		 1395: LDA #$99    ; 2 ; A9 99
		 1397: STA $D3     ; 3 ; 85 D3
		 1399: STA $D4     ; 3 ; 85 D4
		 139B: BNE +9      ; 3 ; D0 09
		 139D: NOP         ; 2 ; EA
		 139E: NOP         ; 2 ; EA
		 139F: NOP         ; 2 ; EA
		 13A0: NOP         ; 2 ; EA
		 13A1: NOP         ; 2 ; EA
		 13A2: NOP         ; 2 ; EA
		 -------------------------------------------
		 - Score no points for remaining energy
		 - with the difficulty fix enabled (6 bytes)
		 -------------------------------------------
		 139D: LDA $F8     ; 3 ; A5 F8
		 139F: BNE +2      ; 2 ; D0 02
		 13A1: TAX         ; 2 ; AA
		 13A2: TAY         ; 2 ; A8
		 -------------------------------------------
		 13BD: LDA #$01    ; 2 ; A9 01
		 13BF: ORA $DE     ; 2 ; 05 DE
		 13C1: STA $DE     ; 3 ; 85 DE
		 13C3: LDX #$07    ; 2 ; A2 07
		 13C5: LDY #$70    ; 2 ; A0 70
		 13C7: JSR $1341   ; 6 ; 20 41 F3
		 13CA: NOP         ; 2 ; EA
		 -------------------------------------------
		 1341: LDA $D2     ; 2 ; A5 D2
		 1343: CMP #$0A    ; 2 ; C9 0A
		 1345: BEQ +8      ; 2 ; F0 08
		 1347: SBC 16      ; 3 ; E9 10
		 1349: STA $D2     ; 3 ; 85 D2
		 134B: LDX #$04    ; 2 ; A2 04
		 134D: LDY #$90    ; 2 ; A0 90
		 134F: LDA $DD     ; 2 ; A5 DD
		 1351: SED         ; 2 ; F8
		 1352: JMP $17E9   ; 6 ; 4C E9 F7
		 -------------------------------------------
		 17E9: CMP #$1F    ; 2 ; C9 1F
		 17EB: BCC +10     ; 2 ; 90 0A
		 17ED: TXA         ; 2 ; 8A
		 17EE: ORA #$10    ; 2 ; 09 10
		 17EF: TAX         ; 2 ; AA
		 17F1: LDA $D3     ; 2 ; A5 D3
		 17F3: SBC 7       ; 3 ; E9 07
		 17F5: STA $D3     ; 3 ; 85 D3
		 17F7: CLD         ; 2 ; D8
		 17F8: RET         ; 6 ; 60
		 ------------------------------------------
		 13FD: LDA #$99    ; 2 ; A9 99
		 13FF: STA $D3     ; 3 ; 85 D3
		 1401: STA $D4     ; 3 ; 85 D4
		 1403: LDA #0      ; 2 ; A9 00
		 1405: STA $F4     ; 2 ; 85 F4
		 1407: STA $E3     ; 3 ; 85 E3
		 ------------------------------------------		 
		 147A: LDA #$0     ; 2 ; A9 00
		 147C: STA $DD     ; 3 ; 85 DD
		 147E: STA $D9     ; 3 ; 85 D9
		 1480: STA $94     ; 3 ; 85 94
		 1482: LDA #$29    ; 3 ; A5 29
		 1484: CMP $DC     ; 3 ; C5 DC
		 1486: BCS +2      ; 3 ; B0 02 
		 1488: STA $DC     ; 2 ; A5 DC
		 148A: JMP $14A5   ; 6 ; 4C A5 F4
		-------------------------------------------

		-------------------------------------------
		- Easter Egg - Ninja E.T. 
		-------------------------------------------
		 148A: LDA $F4     ; 2 ; A5 F4
		 148C: CMP $F5     ; 2 ; C5 F5
		 148E: BNE +12     ; 3 ; D0 0C
		 1490: CMP #$03    ; 2 ; C9 03
		 1492: BNE +8      ; 2 ; D0 08
		 1494: LDA #$AA    ; 2 ; A9 AA
		 1496: STA $D2     ; 3 ; 85 D2
		 1498: STA $D3     ; 3 ; 85 D3
		 149A: STA $D4     ; 3 ; 85 D4
		 149C: JMP $14A5   ; 6 ; 4C A5 F4
		 149F: NOP         ; 2 ; EA
		 14A0: NOP         ; 2 ; EA
		 14A1: NOP         ; 2 ; EA
		--------------------------------------------

		--------------------------------------------
		 - Add Extra Game Option - Scientist Only
		--------------------------------------------
		 0471: CPX #$05    ; 2 ; E0 05
		--------------------------------------------
		 02ED: AND #$01    ; 2 ; 29 01
		 02EF: BEQ +9      ; 2 ; F0 09
		--------------------------------------------

		</pre>
	<br>

	<a name="theend"></a>
	<h2>Conclusion</h2>
	<p>It turns out that E.T. isn't a bad game after all.  With a few simple changes we were able to dramatically improve an already good game by eliminating the most common complaints.  With a few additional changes, we were able to clear up any confusion for players who care about the score, and were confused by the differences between what the manual claims and what actually happens in-game.  Next time someone tells you that "E.T. for the Atari 2600 is the worst game ever made" you can tell them that this is not the case. It's been fixed, and you know how.</p>

<hr>
<a href="http://www.neocomputer.org/projects">Home</a> - Published: January 2013 - Last modified: April 2023

<!-- Global site tag (gtag.js) - Google Analytics -->


<!-- /Google -->





</div>]]></description>
        </item>
        <item>
            <title><![CDATA[RamaLama (156 pts)]]></title>
            <link>https://github.com/containers/ramalama</link>
            <guid>42887939</guid>
            <pubDate>Fri, 31 Jan 2025 14:20:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/containers/ramalama">https://github.com/containers/ramalama</a>, See on <a href="https://news.ycombinator.com/item?id=42887939">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/containers/ramalama/blob/main/logos/PNG/ramalama-logo-full-vertical-added-bg.png"><img src="https://github.com/containers/ramalama/raw/main/logos/PNG/ramalama-logo-full-vertical-added-bg.png" alt="RAMALAMA logo"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">RamaLama</h2><a id="user-content-ramalama" aria-label="Permalink: RamaLama" href="#ramalama"></a></p>
<p dir="auto">The RamaLama project's goal is to make working with AI boring
through the use of OCI containers.</p>
<p dir="auto">RamaLama tool facilitates local management and serving of AI Models.</p>
<p dir="auto">On first run RamaLama inspects your system for GPU support, falling back to CPU support if no GPUs are present.</p>
<p dir="auto">RamaLama uses container engines like Podman or Docker to pull the appropriate OCI image with all of the software necessary to run an AI Model for your systems setup.</p>
<p dir="auto">Running in containers eliminates the need for users to configure the host system for AI. After the initialization, RamaLama runs the AI Models within a container based on the OCI image.</p>
<p dir="auto">RamaLama then pulls AI Models from model registries. Starting a chatbot or a rest API service from a simple single command. Models are treated similarly to how Podman and Docker treat container images.</p>
<p dir="auto">When both Podman and Docker are installed, RamaLama defaults to Podman, The <code>RAMALAMA_CONTAINER_ENGINE=docker</code> environment variable can override this behaviour. When neither are installed RamaLama will attempt to run the model with software on the local system.</p>
<p dir="auto">RamaLama supports multiple AI model registries types called transports.
Supported transports:</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">TRANSPORTS</h2><a id="user-content-transports" aria-label="Permalink: TRANSPORTS" href="#transports"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Transports</th>
<th>Web Site</th>
</tr>
</thead>
<tbody>
<tr>
<td>HuggingFace</td>
<td><a href="https://www.huggingface.co/" rel="nofollow"><code>huggingface.co</code></a></td>
</tr>
<tr>
<td>Ollama</td>
<td><a href="https://www.ollama.com/" rel="nofollow"><code>ollama.com</code></a></td>
</tr>
<tr>
<td>OCI Container Registries</td>
<td><a href="https://opencontainers.org/" rel="nofollow"><code>opencontainers.org</code></a></td>
</tr>
<tr>
<td></td>
<td>Examples: <a href="https://quay.io/" rel="nofollow"><code>quay.io</code></a>,  <a href="https://docker.io/" rel="nofollow"><code>Docker Hub</code></a>, and <a href="https://artifactory.com/" rel="nofollow"><code>Artifactory</code></a></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto">RamaLama uses the Ollama registry transport by default. Use the RAMALAMA_TRANSPORTS environment variable to modify the default. <code>export RAMALAMA_TRANSPORT=huggingface</code> Changes RamaLama to use huggingface transport.</p>
<p dir="auto">Individual model transports can be modifies when specifying a model via the <code>huggingface://</code>, <code>oci://</code>, or <code>ollama://</code> prefix.</p>
<p dir="auto"><code>ramalama pull huggingface://afrideva/Tiny-Vicuna-1B-GGUF/tiny-vicuna-1b.q2_k.gguf</code></p>
<p dir="auto">To make it easier for users, RamaLama uses shortname files, which container
alias names for fully specified AI Models allowing users to specify the shorter
names when referring to models. RamaLama reads shortnames.conf files if they
exist . These files contain a list of name value pairs for specification of
the model. The following table specifies the order which RamaLama reads the files
. Any duplicate names that exist override previously defined shortnames.</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Shortnames type</th>
<th>Path</th>
</tr>
</thead>
<tbody>
<tr>
<td>Distribution</td>
<td>/usr/share/ramalama/shortnames.conf</td>
</tr>
<tr>
<td>Administrators</td>
<td>/etc/ramamala/shortnames.conf</td>
</tr>
<tr>
<td>Users</td>
<td>$HOME/.config/ramalama/shortnames.conf</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<div data-snippet-clipboard-copy-content="$ cat /usr/share/ramalama/shortnames.conf
[shortnames]
  &quot;tiny&quot; = &quot;ollama://tinyllama&quot;
  &quot;granite&quot; = &quot;huggingface://instructlab/granite-7b-lab-GGUF/granite-7b-lab-Q4_K_M.gguf&quot;
  &quot;granite:7b&quot; = &quot;huggingface://instructlab/granite-7b-lab-GGUF/granite-7b-lab-Q4_K_M.gguf&quot;
  &quot;ibm/granite&quot; = &quot;huggingface://instructlab/granite-7b-lab-GGUF/granite-7b-lab-Q4_K_M.gguf&quot;
  &quot;merlinite&quot; = &quot;huggingface://instructlab/merlinite-7b-lab-GGUF/merlinite-7b-lab-Q4_K_M.gguf&quot;
  &quot;merlinite:7b&quot; = &quot;huggingface://instructlab/merlinite-7b-lab-GGUF/merlinite-7b-lab-Q4_K_M.gguf&quot;
..."><pre lang="code"><code>$ cat /usr/share/ramalama/shortnames.conf
[shortnames]
  "tiny" = "ollama://tinyllama"
  "granite" = "huggingface://instructlab/granite-7b-lab-GGUF/granite-7b-lab-Q4_K_M.gguf"
  "granite:7b" = "huggingface://instructlab/granite-7b-lab-GGUF/granite-7b-lab-Q4_K_M.gguf"
  "ibm/granite" = "huggingface://instructlab/granite-7b-lab-GGUF/granite-7b-lab-Q4_K_M.gguf"
  "merlinite" = "huggingface://instructlab/merlinite-7b-lab-GGUF/merlinite-7b-lab-Q4_K_M.gguf"
  "merlinite:7b" = "huggingface://instructlab/merlinite-7b-lab-GGUF/merlinite-7b-lab-Q4_K_M.gguf"
...
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Install</h2><a id="user-content-install" aria-label="Permalink: Install" href="#install"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Install via PyPi</h2><a id="user-content-install-via-pypi" aria-label="Permalink: Install via PyPi" href="#install-via-pypi"></a></p>
<p dir="auto">RamaLama is available via PyPi <a href="https://pypi.org/project/ramalama" rel="nofollow">https://pypi.org/project/ramalama</a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Install by script</h2><a id="user-content-install-by-script" aria-label="Permalink: Install by script" href="#install-by-script"></a></p>
<div dir="auto"><p dir="auto">Tip</p><p dir="auto">If you are a macOS user, this is the preferred method.</p>
</div>
<p dir="auto">Install RamaLama by running this one-liner:</p>
<div data-snippet-clipboard-copy-content="curl -fsSL https://raw.githubusercontent.com/containers/ramalama/s/install.sh | bash"><pre><code>curl -fsSL https://raw.githubusercontent.com/containers/ramalama/s/install.sh | bash
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Hardware Support</h2><a id="user-content-hardware-support" aria-label="Permalink: Hardware Support" href="#hardware-support"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Hardware</th>
<th>Enabled</th>
</tr>
</thead>
<tbody>
<tr>
<td>CPU</td>
<td>✅</td>
</tr>
<tr>
<td>Apple Silicon GPU (Linux / Asahi)</td>
<td>✅</td>
</tr>
<tr>
<td>Apple Silicon GPU (macOS)</td>
<td>✅</td>
</tr>
<tr>
<td>Apple Silicon GPU (podman-machine)</td>
<td>✅</td>
</tr>
<tr>
<td>Nvidia GPU (cuda)</td>
<td>✅</td>
</tr>
<tr>
<td>AMD GPU (rocm)</td>
<td>✅</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">COMMANDS</h2><a id="user-content-commands" aria-label="Permalink: COMMANDS" href="#commands"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Command</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama.1.md">ramalama(1)</a></td>
<td>primary RamaLama man page</td>
</tr>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama-containers.1.md">ramalama-containers(1)</a></td>
<td>list all RamaLama containers</td>
</tr>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama-info.1.md">ramalama-info(1)</a></td>
<td>display RamaLama configuration information</td>
</tr>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama-list.1.md">ramalama-list(1)</a></td>
<td>list all downloaded AI Models</td>
</tr>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama-login.1.md">ramalama-login(1)</a></td>
<td>login to remote registry</td>
</tr>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama-logout.1.md">ramalama-logout(1)</a></td>
<td>logout from remote registry</td>
</tr>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama-pull.1.md">ramalama-pull(1)</a></td>
<td>pull AI Model from Model registry to local storage</td>
</tr>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama-push.1.md">ramalama-push(1)</a></td>
<td>push AI Model from local storage to remote registry</td>
</tr>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama-rm.1.md">ramalama-rm(1)</a></td>
<td>remove AI Model from local storage</td>
</tr>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama-run.1.md">ramalama-run(1)</a></td>
<td>run specified AI Model as a chatbot</td>
</tr>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama-serve.1.md">ramalama-serve(1)</a></td>
<td>serve REST API on specified AI Model</td>
</tr>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama-stop.1.md">ramalama-stop(1)</a></td>
<td>stop named container that is running AI Model</td>
</tr>
<tr>
<td><a href="https://github.com/containers/ramalama/blob/main/docs/ramalama-version.1.md">ramalama-version(1)</a></td>
<td>display version of AI Model</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Running Models</h3><a id="user-content-running-models" aria-label="Permalink: Running Models" href="#running-models"></a></p>
<p dir="auto">You can <code>run</code> a chatbot on a model using the <code>run</code> command. By default, it pulls from the Ollama registry.</p>
<p dir="auto">Note: RamaLama will inspect your machine for native GPU support and then will
use a container engine like Podman to pull an OCI container image with the
appropriate code and libraries to run the AI Model. This can take a long time to setup, but only on the first run.</p>
<div data-snippet-clipboard-copy-content="$ ramalama run instructlab/merlinite-7b-lab
Copying blob 5448ec8c0696 [--------------------------------------] 0.0b / 63.6MiB (skipped: 0.0b = 0.00%)
Copying blob cbd7e392a514 [--------------------------------------] 0.0b / 65.3MiB (skipped: 0.0b = 0.00%)
Copying blob 5d6c72bcd967 done  208.5MiB / 208.5MiB (skipped: 0.0b = 0.00%)
Copying blob 9ccfa45da380 [--------------------------------------] 0.0b / 7.6MiB (skipped: 0.0b = 0.00%)
Copying blob 4472627772b1 [--------------------------------------] 0.0b / 120.0b (skipped: 0.0b = 0.00%)
>"><pre><code>$ ramalama run instructlab/merlinite-7b-lab
Copying blob 5448ec8c0696 [--------------------------------------] 0.0b / 63.6MiB (skipped: 0.0b = 0.00%)
Copying blob cbd7e392a514 [--------------------------------------] 0.0b / 65.3MiB (skipped: 0.0b = 0.00%)
Copying blob 5d6c72bcd967 done  208.5MiB / 208.5MiB (skipped: 0.0b = 0.00%)
Copying blob 9ccfa45da380 [--------------------------------------] 0.0b / 7.6MiB (skipped: 0.0b = 0.00%)
Copying blob 4472627772b1 [--------------------------------------] 0.0b / 120.0b (skipped: 0.0b = 0.00%)
&gt;
</code></pre></div>
<p dir="auto">After the initial container image has been downloaded, you can interact with
different models, using the container image.</p>
<div data-snippet-clipboard-copy-content="$ ramalama run granite3-moe
> Write a hello world application in python

print(&quot;Hello World&quot;)"><pre><code>$ ramalama run granite3-moe
&gt; Write a hello world application in python

print("Hello World")
</code></pre></div>
<p dir="auto">In a different terminal window see the running podman container.</p>
<div data-snippet-clipboard-copy-content="$ podman ps
CONTAINER ID  IMAGE                             COMMAND               CREATED        STATUS        PORTS       NAMES
91df4a39a360  quay.io/ramalama/ramalama:latest  /home/dwalsh/rama...  4 minutes ago  Up 4 minutes              gifted_volhard"><pre><code>$ podman ps
CONTAINER ID  IMAGE                             COMMAND               CREATED        STATUS        PORTS       NAMES
91df4a39a360  quay.io/ramalama/ramalama:latest  /home/dwalsh/rama...  4 minutes ago  Up 4 minutes              gifted_volhard
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Listing Models</h3><a id="user-content-listing-models" aria-label="Permalink: Listing Models" href="#listing-models"></a></p>
<p dir="auto">You can <code>list</code> all models pulled into local storage.</p>
<div data-snippet-clipboard-copy-content="$ ramalama list
NAME                                                                MODIFIED     SIZE
ollama://smollm:135m                                                16 hours ago 5.5M
huggingface://afrideva/Tiny-Vicuna-1B-GGUF/tiny-vicuna-1b.q2_k.gguf 14 hours ago 460M
ollama://moondream:latest                                           6 days ago   791M
ollama://phi4:latest                                                6 days ago   8.43 GB
ollama://tinyllama:latest                                           1 week ago   608.16 MB
ollama://granite3-moe:3b                                            1 week ago   1.92 GB
ollama://granite3-moe:latest                                        3 months ago 1.92 GB
ollama://llama3.1:8b                                                2 months ago 4.34 GB
ollama://llama3.1:latest                                            2 months ago 4.34 GB"><pre><code>$ ramalama list
NAME                                                                MODIFIED     SIZE
ollama://smollm:135m                                                16 hours ago 5.5M
huggingface://afrideva/Tiny-Vicuna-1B-GGUF/tiny-vicuna-1b.q2_k.gguf 14 hours ago 460M
ollama://moondream:latest                                           6 days ago   791M
ollama://phi4:latest                                                6 days ago   8.43 GB
ollama://tinyllama:latest                                           1 week ago   608.16 MB
ollama://granite3-moe:3b                                            1 week ago   1.92 GB
ollama://granite3-moe:latest                                        3 months ago 1.92 GB
ollama://llama3.1:8b                                                2 months ago 4.34 GB
ollama://llama3.1:latest                                            2 months ago 4.34 GB
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Pulling Models</h3><a id="user-content-pulling-models" aria-label="Permalink: Pulling Models" href="#pulling-models"></a></p>
<p dir="auto">You can <code>pull</code> a model using the <code>pull</code> command. By default, it pulls from the Ollama registry.</p>
<div data-snippet-clipboard-copy-content="$ ramalama pull granite3-moe
 31% |████████                    |  250.11 MB/ 783.77 MB  36.95 MB/s       14s"><pre><code>$ ramalama pull granite3-moe
 31% |████████                    |  250.11 MB/ 783.77 MB  36.95 MB/s       14s
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Serving Models</h3><a id="user-content-serving-models" aria-label="Permalink: Serving Models" href="#serving-models"></a></p>
<p dir="auto">You can <code>serve</code> multiple models using the <code>serve</code> command. By default, it pulls from the Ollama registry.</p>
<div data-snippet-clipboard-copy-content="$ ramalama serve --name mylama llama3"><pre><code>$ ramalama serve --name mylama llama3
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Stopping servers</h3><a id="user-content-stopping-servers" aria-label="Permalink: Stopping servers" href="#stopping-servers"></a></p>
<p dir="auto">You can stop a running model if it is running in a container.</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">UI support</h3><a id="user-content-ui-support" aria-label="Permalink: UI support" href="#ui-support"></a></p>
<p dir="auto">To use a UI, run a <code>ramalama serve</code> command, then connect via your browser at:</p>
<p dir="auto">127.0.0.1:8080</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Diagram</h2><a id="user-content-diagram" aria-label="Permalink: Diagram" href="#diagram"></a></p>
<div data-snippet-clipboard-copy-content="+---------------------------+
|                           |
| ramalama run granite3-moe |
|                           |
+-------+-------------------+
	|
	|
        |           +------------------+           +------------------+
        |           | Pull inferencing |           | Pull model layer |
        +-----------| runtime (cuda)   |---------->| granite3-moe     |
                    +------------------+           +------------------+
						   | Repo options:    |
						   +-+-------+------+-+
						     |       |      |
						     v       v      v
					     +---------+ +------+ +----------+
					     | Hugging | | OCI  | | Ollama   |
					     | Face    | |      | | Registry |
					     +-------+-+ +---+--+ +-+--------+
						     |       |      |
						     v       v      v
						   +------------------+
						   | Start with       |
						   | cuda runtime     |
						   | and              |
						   | granite3-moe     |
						   +------------------+"><pre><code>+---------------------------+
|                           |
| ramalama run granite3-moe |
|                           |
+-------+-------------------+
	|
	|
        |           +------------------+           +------------------+
        |           | Pull inferencing |           | Pull model layer |
        +-----------| runtime (cuda)   |----------&gt;| granite3-moe     |
                    +------------------+           +------------------+
						   | Repo options:    |
						   +-+-------+------+-+
						     |       |      |
						     v       v      v
					     +---------+ +------+ +----------+
					     | Hugging | | OCI  | | Ollama   |
					     | Face    | |      | | Registry |
					     +-------+-+ +---+--+ +-+--------+
						     |       |      |
						     v       v      v
						   +------------------+
						   | Start with       |
						   | cuda runtime     |
						   | and              |
						   | granite3-moe     |
						   +------------------+
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">In development</h2><a id="user-content-in-development" aria-label="Permalink: In development" href="#in-development"></a></p>
<p dir="auto">Regard this alpha, everything is under development, so expect breaking changes, luckily it's easy to reset everything and re-install:</p>
<div data-snippet-clipboard-copy-content="rm -rf /var/lib/ramalama # only required if running as root user
rm -rf $HOME/.local/share/ramalama"><pre><code>rm -rf /var/lib/ramalama # only required if running as root user
rm -rf $HOME/.local/share/ramalama
</code></pre></div>
<p dir="auto">and install again.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Credit where credit is due</h2><a id="user-content-credit-where-credit-is-due" aria-label="Permalink: Credit where credit is due" href="#credit-where-credit-is-due"></a></p>
<p dir="auto">This project wouldn't be possible without the help of other projects like:</p>
<p dir="auto">llama.cpp<br>
whisper.cpp<br>
vllm<br>
podman<br>
huggingface</p>
<p dir="auto">so if you like this tool, give some of these repos a ⭐, and hey, give us a ⭐ too while you are at it.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Community</h2><a id="user-content-community" aria-label="Permalink: Community" href="#community"></a></p>
<p dir="auto"><a href="https://matrix.to/#/#ramalama:fedoraproject.org" rel="nofollow"><code>Matrix</code></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributors</h2><a id="user-content-contributors" aria-label="Permalink: Contributors" href="#contributors"></a></p>
<p dir="auto">Open to contributors</p>
<a href="https://github.com/containers/ramalama/graphs/contributors">
  <img src="https://camo.githubusercontent.com/82bc3486beb7e9973918ff7622dfe963d5fa51d8f65f6c0a6aa624aee7cd028b/68747470733a2f2f636f6e747269622e726f636b732f696d6167653f7265706f3d636f6e7461696e6572732f72616d616c616d61" data-canonical-src="https://contrib.rocks/image?repo=containers/ramalama">
</a>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ear muscle we thought humans didn't use activates when people listen hard (214 pts)]]></title>
            <link>https://www.frontiersin.org/news/2025/01/31/ear-muscle-wiggling-ears-activates-listening-frontiers-neuroscience</link>
            <guid>42886867</guid>
            <pubDate>Fri, 31 Jan 2025 12:11:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.frontiersin.org/news/2025/01/31/ear-muscle-wiggling-ears-activates-listening-frontiers-neuroscience">https://www.frontiersin.org/news/2025/01/31/ear-muscle-wiggling-ears-activates-listening-frontiers-neuroscience</a>, See on <a href="https://news.ycombinator.com/item?id=42886867">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><!--[--><!----><!--]--><figure><picture><!--[--><source srcset="https://images.ctfassets.net/mrbo2ykgx5lt/1fQgvZhdIvpxsvUlhLGVq9/4c073694c3d48aa2c24fa418f3751cd2/Horizontal-Side_view_of_senior_man_with_symptom_of_hearing_loss._Mature_man_sitting_on_couch_with_fingers_near_ear_suffering.png?&amp;w=380&amp;fm=webp&amp;q=80" media="(max-width: 767px)"><source srcset="https://images.ctfassets.net/mrbo2ykgx5lt/1fQgvZhdIvpxsvUlhLGVq9/4c073694c3d48aa2c24fa418f3751cd2/Horizontal-Side_view_of_senior_man_with_symptom_of_hearing_loss._Mature_man_sitting_on_couch_with_fingers_near_ear_suffering.png?&amp;w=642&amp;fm=webp&amp;q=80" media="(min-width: 768px and max-width: 1023px)"><source srcset="https://images.ctfassets.net/mrbo2ykgx5lt/1fQgvZhdIvpxsvUlhLGVq9/4c073694c3d48aa2c24fa418f3751cd2/Horizontal-Side_view_of_senior_man_with_symptom_of_hearing_loss._Mature_man_sitting_on_couch_with_fingers_near_ear_suffering.png?&amp;w=824&amp;fm=webp&amp;q=80" media="(min-width: 1024px and max-width: 1279px)"><source srcset="https://images.ctfassets.net/mrbo2ykgx5lt/1fQgvZhdIvpxsvUlhLGVq9/4c073694c3d48aa2c24fa418f3751cd2/Horizontal-Side_view_of_senior_man_with_symptom_of_hearing_loss._Mature_man_sitting_on_couch_with_fingers_near_ear_suffering.png?&amp;w=644&amp;fm=webp&amp;q=80" media="(min-width: 1280px and max-width: 1439px)"><source srcset="https://images.ctfassets.net/mrbo2ykgx5lt/1fQgvZhdIvpxsvUlhLGVq9/4c073694c3d48aa2c24fa418f3751cd2/Horizontal-Side_view_of_senior_man_with_symptom_of_hearing_loss._Mature_man_sitting_on_couch_with_fingers_near_ear_suffering.png?&amp;w=672&amp;fm=webp&amp;q=80" media="(min-width: 1440px and max-width: 1919px)"><source srcset="https://images.ctfassets.net/mrbo2ykgx5lt/1fQgvZhdIvpxsvUlhLGVq9/4c073694c3d48aa2c24fa418f3751cd2/Horizontal-Side_view_of_senior_man_with_symptom_of_hearing_loss._Mature_man_sitting_on_couch_with_fingers_near_ear_suffering.png?&amp;w=912&amp;fm=webp&amp;q=80" media="(min-width: 1920px)"><!--]--><img src="https://images.ctfassets.net/mrbo2ykgx5lt/1fQgvZhdIvpxsvUlhLGVq9/4c073694c3d48aa2c24fa418f3751cd2/Horizontal-Side_view_of_senior_man_with_symptom_of_hearing_loss._Mature_man_sitting_on_couch_with_fingers_near_ear_suffering.png?&amp;w=912&amp;fm=webp&amp;q=80" alt="" loading="eager"></picture><figcaption>An older man presses his fingers to the side of his head, next to his ear.</figcaption></figure><!--[--><p><strong>To test whether humans still use auricular muscles — which once helped move our primate ancestors’ ears to funnel sound — scientists attached electrodes to the sides of people’s heads, and asked them to listen closely to an audiobook. Different challenge modes were imposed, with the sound coming from different angles, and other competing sounds. The scientists found that, the more difficult it was for participants to hear the audiobook, the more the superior auricular muscles activated, as if participants were trying to prick up their ears like a dog or cat. When sounds came from behind a participant, the posterior auricular muscles contracted as if attempting to point the ears in that direction. </strong></p><p>If you can wiggle your ears, you can use muscles that helped our distant ancestors listen closely. These auricular muscles helped change the shape of the pinna, or the shell of the ear, funneling sound to the eardrums. Millions of years ago, our ancestors stopped using them, so humans’ auricular muscles are only vestigial. But now scientists examining the function of these muscles have discovered that they activate when we’re trying to listen to competing sounds. </p><p>“There are three large muscles which connect the auricle to the skull and scalp and are important for ear wiggling,” explained Andreas Schröer of Saarland University, first author of the study in <a href="https://www.frontiersin.org/journals/neuroscience/articles/10.3389/fnins.2024.1462507/full"><em>Frontiers in Neuroscience</em></a>. “These muscles, particularly the superior auricular muscle, exhibit increased activity during effortful listening tasks. This suggests that these muscles are engaged not merely as a reflex but potentially as part of an attentional effort mechanism, especially in challenging auditory environments.” </p><h2>Straining your ears</h2><p>It’s difficult to test how hard someone is listening without self-reported measures. But electromyography, which measures electrical activity in a muscle, can help identify activity in the auricular muscles linked to listening closely. Similar research has already shown that the largest muscles, posterior and superior auricular muscles, react during attentive listening. Because they pull the ears up and back, they are considered likely to have been involved in moving the pinna to capture sounds.</p><p>“The exact reason these became vestigial is difficult to tell, as our ancestors lost this ability about 25 million years ago,” Schröer said. “One possible explanation could be that the evolutionary pressure to move the ears ceased because we became much more proficient with our visual and vocal systems.” 

To test whether these muscles are more active during more difficult listening tasks, the scientists recruited 20 people without hearing problems. They applied electrodes to participants’ auricular muscles and then played them an audiobook and distracting podcasts from speakers in front of or behind them. Each participant underwent 12 five-minute trials, covering three different levels of difficulty. </p><p>On easy mode, the podcast was quieter than the audiobook, and the speaker’s voice was a stronger contrast to the audiobook. To create two more difficult modes, the scientists added a podcast that sounded more like the audiobook and made the distractors louder.  However, the researchers were careful to make even the most difficult condition achievable: if the participants gave up, no physiological effort would register.  </p><p>Then, the scientists asked the participants to rate their effort levels and to estimate how often they lost the thread of the audiobook in each trial. They also quizzed the participants on the audiobook’s content. </p><hr><p><a href="https://www.frontiersin.org/journals/neuroscience/articles/10.3389/fnins.2024.1462507/full">Read and download the original article</a></p><hr><h2>Hearsay</h2><p>The scientists found that the two auricular muscles reacted differently to the different conditions. The posterior auricular muscles reacted to changes in direction, while the superior auricular muscles reacted to the difficulty level of the task. Participants’ self-reported measures of effort and how often they lost track of the audiobook rose in line with the difficulty of the task, and the accuracy of their responses to questions about the audiobook dropped noticeably between the medium and the difficult mode.&nbsp;&nbsp; </p><p>This correlated with the superior auricular muscles’ activity levels: they didn’t activate more during the medium mode than during the easy mode, but were very active during the difficult mode. This suggests that the activity of the superior auricular muscles could provide an objective measure of listening effort, although it’s unclear if the muscle activity helps people hear. </p><p>“The ear movements that could be generated by the signals we have recorded are so minuscule that there is probably no perceivable benefit,” said Schröer. “However, the auricle itself does contribute to our ability to localize sounds. So, our auriculomotor system probably tries its best after being vestigial for 25 million years, but does not achieve much.” </p><p>The scientists pointed out that more work will be necessary to confirm these results and develop practical applications. Like many hearing studies, their sample was relatively small and composed of young people without hearing problems. Larger, more diverse participant groups, in more realistic conditions, are needed.  </p><p>“Investigating the possible effects of muscle strain itself or the ear’s miniscule movements on the transmission of sound is something we want to do in the future,” said Schröer. “The effect of these factors in people with hearing impairments would also be interesting to investigate.” 
</p><p><strong>REPUBLISHING GUIDELINES</strong>: Open access and sharing research is part of <a href="https://www.frontiersin.org/about/about-frontiers">Frontiers’ mission</a>. Unless otherwise noted, you can republish articles posted in the Frontiers news site — as long as you include a link back to the original research. Selling the articles is not allowed. </p><!--]--><!----></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Casio F91w at 5KM underwater – watches of espionage (317 pts)]]></title>
            <link>https://www.watchesofespionage.com/blogs/woe-dispatch/casio-f91w-diving-underwater-pressure-test</link>
            <guid>42886718</guid>
            <pubDate>Fri, 31 Jan 2025 11:40:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.watchesofespionage.com/blogs/woe-dispatch/casio-f91w-diving-underwater-pressure-test">https://www.watchesofespionage.com/blogs/woe-dispatch/casio-f91w-diving-underwater-pressure-test</a>, See on <a href="https://news.ycombinator.com/item?id=42886718">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
              <h2><strong>Pressure Testing An Affordable Watch &amp; Understanding Deepsea Espionage</strong></h2>
<p><em>By Benjamin Lowry</em></p>
<p>While the stories we tell typically explore the world of intelligence in the terrestrial sense, espionage and the deep sea have been closely linked for decades. Starting during the Cold War, a shadowy conflict has been waged on the ocean floor. From submarines and divers tapping (or cutting) cables to deepsea acoustic listening stations and the clandestine recovery of sensitive materials, controlling and monitoring the deep ocean is an unfamiliar yet critical component of intelligence and modern warfare.</p>
<p>Brands like Rolex and Omega will often tout their deepsea capabilities with the Rolex Deepsea Challenge rated to 11,000 meters (36,090 feet) and the Omega Ultra Deep coming in at a lesser but still ridiculous 6,000 meters (20,000 feet) of theoretical water resistance. But what about a cheap Casio often associated with terrorists and hipsters? With around $15 and some engineering know-how, can an affordable watch also venture into the deep ocean?</p>
<p><img src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/Glomar-High-res-4-Toni_600x600.jpg?v=1737727560" alt="Setting the stage for undersea espionage to follow, the CIA’s Glomar Explorer was a ship designed to secretly raise a sunken Soviet submarine to recover its nuclear warheads. (Photo Credit: CIA)"></p>
<h6>Setting the stage for undersea espionage to follow, the CIA’s Glomar Explorer was a ship designed to secretly raise a sunken Soviet submarine to recover its nuclear warheads. (Photo Credit: CIA)</h6>
<p>At W.O.E., watches are the lens through which we view history and current events. In this Dispatch, we’ll take a Casio F91W—a cheap digital tool watch—almost 5,000 meters (16,400 feet) under the sea, setting the stage for a broader discussion on the deep ocean’s role in the wilderness of mirrors. As a Coast Guard veteran and former commercial diver, I’m no expert on the intersection of engineering and espionage at depth. Luckily, I know people.</p>
<h2><strong>Pressure Testing A Casio F91W</strong></h2>
<p><img src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/ROVTRIPWOE-1_1024x1024.jpg?v=1737727632" alt="Our friend Josh’s Omega Planet Ocean on the manipulator arm of an ROV. (Photo Credit: Brock Stevens)"></p>
<h6>Our friend Josh’s Omega Planet Ocean on the manipulator arm of an ROV. (Photo Credit: Brock Stevens)</h6>
<p>A couple of years ago, a fellow watch enthusiast named Josh Konicki reached out saying he worked in the unique world of deep ocean salvage, often contracting for the US Government to recover downed fighter jets, lost ordnance, and other sensitive items the military doesn’t want lying around the ocean floor. In 2022, Josh and his team helped the Navy recover an F35 that crashed into the South China Sea from the deck of an aircraft carrier. It’s scary to imagine the repercussions if our adversaries were to recover and reverse engineer one of the world’s most advanced fighter jet platforms—not good.</p>
<p><img src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/aircraft-ht-ml-220303_1646325566304_hpMain_16x9_1600_600x600.jpg?v=1737727807" alt="F35 recovery rov south china sea deepsea diving cia espionage watches f91w"></p>
<h6>Photo Credit: US Navy</h6>
<p>Like many whose lives revolve around the sea, Josh is a watch guy, and when he asked if I would be interested in seeing a Casio F91W dive deep on the manipulator arm of an ROV or remotely operated vehicle, I answered with an enthusiastic “hell yeah”.</p>
<p>Available on Amazon for precisely $13.16, the F91W is among the most common watches on the planet, with some three million units produced on average per year since the watch’s inception in 1989. This implies there are well over 100 million F91Ws out there in the world, a crazy statistic. Utilized as a tool by everyone from <a title="Casio F-91W, the Preferred Watch of Terrorists" href="https://www.watchesofespionage.com/blogs/woe-dispatch/casio-f-91w-the-preferred-watch-of-terrorists" target="_blank">Usama Bin Laden</a> to <a title="Digital Watches Of The Global War On Terror" href="https://www.watchesofespionage.com/blogs/woe-dispatch/digital-watches-global-war-on-terror" target="_blank">US SpecOps</a> and art school grads at your local farmers market, the F91W is a straightforward digital watch equipped with a resin case, strap, and crystal and paired with simple digital timekeeping functions and one of the worst backlights in watch history.</p>
<p><img src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/Untitled_design_859_1024x1024.png?v=1737727969" alt="(Photo Credit: James Rupley/W.O.E.) casio f91w 5000 meters diving water resistance"></p>
<h6>(Photo Credit: James Rupley/W.O.E.)</h6>
<p>Many have argued the F91W is the least expensive watch that is actually worth buying, and I tend to agree. For its price, it’s one of the most capable watches you can get. However, while the F91W is many things to many people, most would fall well short of calling it a dive watch, at least unless you’re willing to get a little bit handy, risk your $15 investment, and have some mineral oil lying around.</p>
<h2><strong>Filling A Watch With Oil &amp; Going Deep</strong></h2>
<p><img alt="casio f91w deep diving pressure test hydromod oil" src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/Tactical_Watches_Holiday_Movies_3_600x600.png?v=1737730515"></p>
<p>For Josh, whose job is to build and maintain equipment for deepsea salvage and recovery, filling a digital watch with oil is no big deal. Incredibly, after this relatively simple and cheap modification, a watch—even one as attainable as the F91W—becomes all but pressure-proof thanks to the almost incompressible nature of oil. The actual how-to for this “hydro-mod” is all over the internet, but suffice it to say oil-filling your Casio is relatively easy, cheap, fun, and helps if you’re planning to take your F91W five kilometers or so underwater, which is exactly the kind of thing Josh does for fun.</p>
<p><img src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/A94C2DFB-DE23-48E4-BF12-364B371AF577_1_201_a_600x600.jpg?v=1737728402" alt="casio f91w hydro mod water resistance diving 5000 meters"></p>
<p>For the deep ocean test, Josh strapped the F91W onto the manipulator arm of CURV 21, a 6,400-pound ROV belonging to the US Navy and capable of diving to around 20,000 feet. The live video feed from the ROV, which is hard-wired to the surface, means the operator can observe the watch throughout the dive. As the numbers on the depth gauge begin to rise, there’s an element of suspense as the ROV descends through the water column. The bright ambient light of the shallows gives way to the inky darkness of the depths, with nothing but small particles passing by the ROV’s lights to indicate the descent to the bottom. As the digital depth indication passes 1000 meters, 2000 meters, 3000 meters, and finally 4000 meters, the watch nerds in the room are glued to the screen waiting for the $15 watch to implode… or not. Incredibly, the F91W survives its journey to an official 4,950 meters—an astonishing 16,240 feet—and back.</p>
<p>4,950 meters under the surface, the pressure is approximately 7,227 pounds per square inch, which is well over three tons pressing on the watch. For context, that’s a Dodge Ram 1500 or a young adult hippopotamus parked on every inch of your F91W. As Americans, we’ll do anything to avoid the metric system, but using scientific terminology, we’re talking about a shitload of pressure.</p>
<p><img src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/IMG_9167_600x600.heic?v=1737728532" alt="Josh with his fleet of deep-diving F91W watches and the ROV."></p>
<h6>Josh with his fleet of deep-diving F91W watches and the ROV.</h6>
<p>However impressive, this example of oil-filled horological pressure resistance is not unique. There are other oil-filled watches from brands like Sinn capable of similar diving exploits, and many other watches both digital and analog quartz (mechanical watches can’t be oil-filled) that could theoretically be filled with oil and go deep. But the feat is all the more impressive when considering the F91W costs about as much as a Chipotle burrito (with guac). But wait, what is the US Government doing 5000 meters down anyway?</p>
<h2><strong>A Brief History Of Deepsea Espionage</strong></h2>
<p><img src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/211020-us-navy-sealab-3-illustration_1_600x600.jpg?v=1737728599" alt="Artist’s rendering of SEALAB III, the Navy’s final experiment to prove men could live and work on the sea floor. (Photo Credit: US Navy)"></p>
<h6>Artist’s rendering of SEALAB III, the Navy’s final experiment to prove men could live and work on the sea floor. (Photo Credit: US Navy)</h6>
<p>When the <a title="The Newly-Discovered Watches Of SEALAB III &amp; The Records That Prove It" href="https://www.watchesofespionage.com/blogs/woe-dispatch/sealab-watches-doxa-rolex-jaquet-droz" target="_blank">US Navy’s SEALAB trials</a> kicked off in 1964, the reason behind the costly and dangerous experiment was billed as an attempt to prove man’s ability to live and work in the sea. The part the Navy left out was why the US Government might require such a mode of diving in the first place, and the principal reason was intelligence collection. Even after the cancellation of SEALAB III in the wake of aquanaut Berry Cannon’s death in 1969, the Navy didn’t stop its deep-diving research, it simply stopped talking about it.</p>
<p><img src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/USS-Parche_Sutton_600x600.jpg?v=1737728712" alt="Artist’s rendering of the USS Parche, one of the modified submarines used in Operation Ivy Bells. (Photo Credit: Naval Order)"></p>
<h6>Artist’s rendering of the USS Parche, one of the modified submarines used in Operation Ivy Bells. (Photo Credit: Naval Order)</h6>
<p>Before SEALAB, the Navy was already using the Sound Surveillance System, a network of underwater listening stations designed to detect and monitor submarine movements, especially the kind with nuclear capabilities. By the 1970s, American submarine espionage was in full swing, with the specially modified USS Halibut using diver lockout chambers and saturation diving methodology developed during SEALAB to attach listening equipment to Soviet communication cables in the Sea of Okhotsk as part of Operation Ivy Bells. If you haven’t read up on this insane operation, there’s a great book called <a href="https://amzn.to/3PLT88T" target="_blank" title="Blind Man's Bluff: The Untold Story Of American Submarine Espionage" rel="noopener"><em>Blind Man's Bluff: The Untold Story Of American Submarine Espionage</em></a>, that is more than worth your time.</p>
<p><img src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/D951851B-C970-48D6-A461-32EBADE63BBB_600x600.jpg?v=1737728989" alt="US Navy SEAL Rick Hetzell wearing a Rolex Submariner on an Olongapo bracelet while working with his US Navy-trained sea lion."></p>
<h6>US Navy SEAL Rick Hetzell wearing a Rolex Submariner on an Olongapo bracelet while working with his US Navy-trained sea lion.</h6>
<p>By 1974, the CIA and Howard Hughes built the Glomar Explorer, a 618-foot supposed deep-sea mining ship designed to secretly raise a sunken Soviet submarine, the K-129, from a depth of 4,900 meters (16,000 feet). The plan was for the ship to use a massive specially engineered undersea claw, which was completely hidden from the outside of the ship, to lift the sub and recover its nuclear warheads and cryptological documents. To date, it remains one of the most complex, expensive, and secretive intelligence operations of the Cold War.</p>
<p>It gets weirder. Starting in 1960, the US Navy also maintained a fleet of trained marine mammals including dolphins and sea lions capable of locating undersea mines and even identifying and subduing adversarial combat swimmers, especially those with Russian accents. During the Cold War, espionage in the deep sea was alive and well, but what about now?</p>
<h2><strong>A Sea Of Surveillance &amp; Sabotage</strong></h2>
<p><img alt="The true extent of the modern US Navy Marine Mammal Program is unknown to the public. (Photo Credit: US Navy)" src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/Your_paragraph_text_4_600x600.png?v=1737729385"></p>
<h6>
<strong></strong>The true extent of the modern US Navy Marine Mammal Program is unknown to the public. (Photo Credit: US Navy)</h6>
<p>Today, as technology takes an increasingly prominent role in armed conflict, the deep ocean continues to serve as a little-understood domain of war. In addition to its nuclear submarines and a much improved undersea listening system that detected the implosion of the Titan submersible in 2023, the US Navy quietly maintains its Marine Mammal Program, (allegedly) primarily for Mine Countermeasures (MCM), but other recent clandestine acts on the sea floor have—once discovered—burst into the headlines.</p>
<p><img alt="The exploded Nordsteam pipelines were determined acts of sabotage." src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/Nord-Stream-Anschlag-auf-die-Pipeline-4_600x600.jpg?v=1737729471"></p>
<h6>The exploded Nordsteam pipelines were determined acts of sabotage.</h6>
<p>Twenty-three natural gas pipelines connect Europe to Russia. On 26 September 2022, two of them exploded without warning 70 to 80 meters (230 to 260 feet) under the surface of the Baltic Sea. Built to carry Russian natural gas to Germany, the explosion of the Nord Stream 1 and Nord Stream 2 pipelines was captured by undersea seismic listening stations, with explosive materials later being recovered on the surface. With much of Europe facing an energy crisis, the saboteur was careful, exploiting the inherent difficulty of investigating the aftermath on the ocean floor, making attribution difficult.</p>
<p><img alt="A Baltic Sea communications was severed by a vessel dragging its anchor across the cable numerous times." src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/Untitled_design_865_600x600.png?v=1737729560"></p>
<h6>A Baltic Sea communications was severed by a vessel dragging its anchor across the cable numerous times.</h6>
<p>In 2024, also in the Baltic Sea, there were several more highly publicized incidents where deepsea cables carrying internet and electricity were cut by unknown agents. Cables providing internet service between Lithuania and Sweden and Finland and Germany were cut in November. Depending on the depth, operations of this type would likely require advanced marine technology involving divers, ROVs, and submersibles, well beyond the scope of any entity smaller than a major nation-state.</p>
<p>Coincidentally, on Christmas Day, a Russian tanker allegedly packed with “spy equipment” was detained by the Finnish Border Guard after intentionally dragging its anchor across cables providing critical infrastructure. Russia, one of the possible culprits for at least some of the recent undersea acts of espionage, is known to operate a “shadow fleet” of civilian-registered vessels outfitted to conduct intelligence and sabotage operations.</p>
<p><img alt="Eagle S, an alleged Russian “spy tanker” was seized by the Finnish Border Guard on Christmas Day, 2025." src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/medium_eagle_s_dd02367835_600x600.webp?v=1737730045"></p>
<h6>Eagle S, an alleged Russian “spy tanker” was seized by the Finnish Border Guard on Christmas Day, 2025.</h6>
<p>Whether these covert operators wear Vostok Amphibias or F91Ws or something else is anyone’s guess. They don’t appear to have a fleet Instagram page. Home to numerous utility and communications cables, not to mention submarines armed with nuclear weapons, and at least one Casio F91W, the sea floor is a key player in global espionage operations both then and now.<br></p>
<p><span><strong>If you enjoyed this article, please consider signing up for our weekly free newsletter for further updates</strong> <a href="http://eepurl.com/h8jvsv" title="Watches of Espionage Email Signup Link" target="_blank" rel="noopener">HERE</a>.</span></p>
<p><strong>Read Next: </strong><a href="https://www.watchesofespionage.com/blogs/woe-dispatch/casio-f-91w-the-preferred-watch-of-terrorists" target="_blank" title="Casio F-91W, the Preferred Watch of Terrorists" rel="noopener">Casio F-91W, the Preferred Watch of Terrorists</a><strong></strong></p>
<p><a href="https://www.watchesofespionage.com/blogs/woe-dispatch/casio-f-91w-the-preferred-watch-of-terrorists" target="_blank" title="https://www.watchesofespionage.com/blogs/woe-dispatch/casio-f-91w-the-preferred-watch-of-terrorists" rel="noopener"><img alt="casio f91w watches of espionage" src="https://cdn.shopify.com/s/files/1/0582/0291/4931/files/F91WTerror_240x240.webp?v=1737731633"></a></p>
<p><em>*As a disclaimer, as Amazon Associates, we earn from qualifying purchases. When you click on the link to a book in this article and make a purchase, this can result in Watches of Espionage earning a commission. If you’re interested in these books and want to make a purchase using these links, we appreciate your support.</em></p>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Llama.cpp supports Vulkan. why doesn't Ollama? (206 pts)]]></title>
            <link>https://github.com/ollama/ollama/pull/5059</link>
            <guid>42886680</guid>
            <pubDate>Fri, 31 Jan 2025 11:30:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ollama/ollama/pull/5059">https://github.com/ollama/ollama/pull/5059</a>, See on <a href="https://news.ycombinator.com/item?id=42886680">Hacker News</a></p>
<div id="readability-page-1" class="page"><div disabled="" sortable="">
          <p dir="auto"><a data-hovercard-type="user" data-hovercard-url="/users/pepijndevos/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/pepijndevos">@pepijndevos</a> Thanks for letting me know. After setting <code>GGML_VK_FORCE_MAX_ALLOCATION_SIZE</code>, I verified that <code>llama3.1 8B</code> works fine. However, I noticed a strange issue where models around 12–13 GiB in size fail to upload to the GPU. The CLI only shows the loading indicator continuously without any response.</p>
<ul dir="auto">
<li><strong>Successful:</strong>
<ul dir="auto">
<li><code>llama3.1:8b-instruct-q8_0</code> (7.95 GiB)</li>
<li><code>gemma2:27b-text-q3_K_S</code> (11.33 GiB)</li>
</ul>
</li>
<li><strong>Failed:</strong>
<ul dir="auto">
<li><code>gemma2:27b-instruct-q3_K_L</code> (13.52 GiB)</li>
<li><code>llama3.1:8b-instruct-fp16</code> (14.96 GiB)</li>
</ul>
</li>
</ul>
<p dir="auto">When the upload is successful, only one Vulkan device (the AMD GPU) is detected. However, when it fails, three Vulkan devices are detected instead. In <a href="https://github.com/ggerganov/llama.cpp/blob/master/ggml/src/ggml-vulkan/ggml-vulkan.cpp#L2821">this section of the llama.cpp code</a>, the size of <code>device_indices</code> changes depending on the model size, and I wonder if this might be related to the error.</p>
<details>
    <summary>Successful Case</summary>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/67185299/404688913-2ff829cb-189d-4b07-ba0d-00a6635accd8.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzgzMzA1MDIsIm5iZiI6MTczODMzMDIwMiwicGF0aCI6Ii82NzE4NTI5OS80MDQ2ODg5MTMtMmZmODI5Y2ItMTg5ZC00YjA3LWJhMGQtMDBhNjYzNWFjY2Q4LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAxMzElMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMTMxVDEzMzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTA2ZjhmYjdjYjY0Y2ExODY5NDNkZjQ1MmRmZDM2MWUzYmI5YzViNTBhYTRjOWU3NTc4ZDVlNTA5NmE0NmEwOTkmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.aamDJBaBM23llrwg__c3HmJ1dGShTbwg4q2yo3MIM38"><img width="907" alt="image" src="https://private-user-images.githubusercontent.com/67185299/404688913-2ff829cb-189d-4b07-ba0d-00a6635accd8.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzgzMzA1MDIsIm5iZiI6MTczODMzMDIwMiwicGF0aCI6Ii82NzE4NTI5OS80MDQ2ODg5MTMtMmZmODI5Y2ItMTg5ZC00YjA3LWJhMGQtMDBhNjYzNWFjY2Q4LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAxMzElMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMTMxVDEzMzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTA2ZjhmYjdjYjY0Y2ExODY5NDNkZjQ1MmRmZDM2MWUzYmI5YzViNTBhYTRjOWU3NTc4ZDVlNTA5NmE0NmEwOTkmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.aamDJBaBM23llrwg__c3HmJ1dGShTbwg4q2yo3MIM38"></a>
</details>
<details>
    <summary>Failed Case</summary>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/67185299/404688955-1d135dd9-1d6c-43bc-8c4a-605336bb3a72.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzgzMzA1MDIsIm5iZiI6MTczODMzMDIwMiwicGF0aCI6Ii82NzE4NTI5OS80MDQ2ODg5NTUtMWQxMzVkZDktMWQ2Yy00M2JjLThjNGEtNjA1MzM2YmIzYTcyLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAxMzElMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMTMxVDEzMzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTA2YWJhMGI5MjQ2ZDU4NjkzNTFjNWEyNGI5MjIwZjY2NTIxZjBhMzA2YmFmNjllYzM1YzAzYTNlMjVkOTRiYTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.ZTMUuFhv9zr5rvWHgUox-3FfoSqPUvBlepFYzC0DfJg"><img width="909" alt="image" src="https://private-user-images.githubusercontent.com/67185299/404688955-1d135dd9-1d6c-43bc-8c4a-605336bb3a72.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzgzMzA1MDIsIm5iZiI6MTczODMzMDIwMiwicGF0aCI6Ii82NzE4NTI5OS80MDQ2ODg5NTUtMWQxMzVkZDktMWQ2Yy00M2JjLThjNGEtNjA1MzM2YmIzYTcyLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAxMzElMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMTMxVDEzMzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTA2YWJhMGI5MjQ2ZDU4NjkzNTFjNWEyNGI5MjIwZjY2NTIxZjBhMzA2YmFmNjllYzM1YzAzYTNlMjVkOTRiYTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.ZTMUuFhv9zr5rvWHgUox-3FfoSqPUvBlepFYzC0DfJg"></a>
</details>
<hr>
<p dir="auto">The Maven core is fascinating, and I’m also interested in local LLMs due to data privacy concerns. Could you provide links to the Raspberry Pi images with AMD drivers and Vulkan LLM Docker images? If new Docker images are created, please let me know as well.</p>
<p dir="auto">For my GPU setup, I initially gained a lot of insights from the information shared by Geerlingguy. I’m using a Pineberry Pi UpCity HAT to connect a GPU, but the GPU is too large to securely mount on a Raspberry Pi. Recently, I purchased the AOOSTART AG01 dock, though it hasn’t arrived yet. This dock includes a power switch for the GPU. One thing to watch out for is the wattage, as the dock seems to support GPUs with a power consumption of up to 250W. For AMD GPUs, it appears the 7700 XT is the maximum supported model.</p>
<p dir="auto">For the power supply, I chose the MSI A850GL. It was one of the very few options that seemed capable of connecting two GPUs to a single supply due to its cable and port configuration. First, I tried using NVIDIA’s RTX 4060 Ti (the only 16GB memory option in the 4000 series), but I had issues getting the driver to recognize it properly. So, I switched to AMD’s RX 7600 XT instead. AMD also offers GPUs with over 20GB of memory, so it’s a viable option if you want to run larger LLMs.</p>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[NSF starts vetting all grants to comply with executive orders (190 pts)]]></title>
            <link>https://www.science.org/content/article/exclusive-nsf-starts-vetting-all-grants-comply-trump-s-orders</link>
            <guid>42886661</guid>
            <pubDate>Fri, 31 Jan 2025 11:21:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.science.org/content/article/exclusive-nsf-starts-vetting-all-grants-comply-trump-s-orders">https://www.science.org/content/article/exclusive-nsf-starts-vetting-all-grants-comply-trump-s-orders</a>, See on <a href="https://news.ycombinator.com/item?id=42886661">Hacker News</a></p>
Couldn't get https://www.science.org/content/article/exclusive-nsf-starts-vetting-all-grants-comply-trump-s-orders: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Hacker News for Gamedev (450 pts)]]></title>
            <link>https://gamedev.city/</link>
            <guid>42885520</guid>
            <pubDate>Fri, 31 Jan 2025 07:56:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gamedev.city/">https://gamedev.city/</a>, See on <a href="https://news.ycombinator.com/item?id=42885520">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="inside">


      

<ol>
<li id="story_b6unru" data-shortid="b6unru">
<div>
  <div>
      <p>2</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://irokaru.github.io/pixel-scaler/" rel="ugc noreferrer">Pixel art upscaler with a nice algorithm</a>
    </span>
      <span>
          <a title="Free and open source resources are always apreciated!" href="https://gamedev.city/t/open-source">open-source</a>
          <a title="2D, 3D and everything in between" href="https://gamedev.city/t/art">art</a>
          <a title="tools that are useful to everyone" href="https://gamedev.city/t/dev-tools">dev-tools</a>
      </span>
        <a href="https://gamedev.city/domains/irokaru.github.io">irokaru.github.io</a></p><div>
        <p><a href="https://gamedev.city/~saint11"><img srcset="https://gamedev.city/avatars/saint11-16.png 1x, https://gamedev.city/avatars/saint11-32.png 2x" alt="saint11 avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/saint11-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~saint11">saint11</a>

        <span title="2025-01-29 15:19:08 -0600">38 hours ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_b6unru">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Firokaru.github.io%2Fpixel-scaler%2F">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Firokaru.github.io%2Fpixel-scaler%2F">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Firokaru.github.io%2Fpixel-scaler%2F">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/b6unru/pixel_art_upscaler_with_nice_algorithm">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_hfyy4d" data-shortid="hfyy4d">
<div>
  <div>
      <p>5</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://www.youtube.com/watch?v=HPqGaIMVuLs" rel="ugc noreferrer">Surface-Stable Fractal Dithering</a>
    </span>
      <a title="A new form of dithering I call Surface-Stable Fractal Dithering.Released it as open source along with this explainer video of how it works.

Find the shader source and example project here:
https://github.com/runevision/Dither3D
https://blog.runevision.com" href="https://gamedev.city/s/hfyy4d/surface_stable_fractal_dithering">☶</a>
      <span>
          <a title="you want to share a video or a link that contains a video " href="https://gamedev.city/t/video">video</a>
          <a title="graphics tech behind game visuals, from basic rendering to complex effects." href="https://gamedev.city/t/graphics">graphics</a>
      </span>
        <a href="https://gamedev.city/domains/youtube.com">youtube.com</a></p><div>
        <p><a href="https://gamedev.city/~hayes"><img srcset="https://gamedev.city/avatars/hayes-16.png 1x, https://gamedev.city/avatars/hayes-32.png 2x" alt="hayes avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/hayes-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~hayes">hayes</a>

        <span title="2025-01-24 10:38:52 -0600">6 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_hfyy4d">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DHPqGaIMVuLs">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DHPqGaIMVuLs">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DHPqGaIMVuLs">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/hfyy4d/surface_stable_fractal_dithering">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_giuycn" data-shortid="giuycn">
<div>
  <div>
      <p>9</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://github.com/libsdl-org/SDL/releases/tag/release-3.2.0" rel="ugc noreferrer">SDL 3 it's officially released (3.2.0)</a>
    </span>
      <span>
          <a title="something related to recent events, releases or announcements" href="https://gamedev.city/t/news">news</a>
          <a title="Free and open source resources are always apreciated!" href="https://gamedev.city/t/open-source">open-source</a>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
      </span>
        <a href="https://gamedev.city/domains/github.com">github.com</a></p><div>
        <p><a href="https://gamedev.city/~Andre-LA"><img srcset="https://gamedev.city/avatars/Andre-LA-16.png 1x, https://gamedev.city/avatars/Andre-LA-32.png 2x" alt="Andre-LA avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/Andre-LA-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~Andre-LA">Andre-LA</a>

        <span title="2025-01-21 14:14:30 -0600">9 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_giuycn">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fgithub.com%2Flibsdl-org%2FSDL%2Freleases%2Ftag%2Frelease-3.2.0">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fgithub.com%2Flibsdl-org%2FSDL%2Freleases%2Ftag%2Frelease-3.2.0">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fgithub.com%2Flibsdl-org%2FSDL%2Freleases%2Ftag%2Frelease-3.2.0">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/giuycn/sdl_3_it_s_officially_released_3_2_0">
              1 comment</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_vlpdv7" data-shortid="vlpdv7">
<div>
  <div>
      <p>4</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://ssno.cc/posts/reversing-tac-1-4-2025/" rel="ugc noreferrer">Reverse Engineering Call Of Duty Anti-Cheat (Black Ops Cold War)</a>
    </span>
      <span>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
      </span>
        <a href="https://gamedev.city/domains/ssno.cc">ssno.cc</a></p><div>
        <p><a href="https://gamedev.city/~Mew"><img srcset="https://gamedev.city/avatars/Mew-16.png 1x, https://gamedev.city/avatars/Mew-32.png 2x" alt="Mew avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/Mew-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~Mew">Mew</a>

        <span title="2025-01-20 23:48:21 -0600">10 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_vlpdv7">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fssno.cc%2Fposts%2Freversing-tac-1-4-2025%2F">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fssno.cc%2Fposts%2Freversing-tac-1-4-2025%2F">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fssno.cc%2Fposts%2Freversing-tac-1-4-2025%2F">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/vlpdv7/reverse_engineering_call_duty_anti_cheat">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_bsy8d5" data-shortid="bsy8d5">
<div>
  <div>
      <p>6</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://github.com/terrehbyte/awesome-devblogs" rel="ugc noreferrer">A curated list of gamedev related devblogs</a>
    </span>
      <span>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
          <a title="graphics tech behind game visuals, from basic rendering to complex effects." href="https://gamedev.city/t/graphics">graphics</a>
      </span>
        <a href="https://gamedev.city/domains/github.com">github.com</a></p><div>
        <p><a href="https://gamedev.city/~Valden"><img srcset="https://gamedev.city/avatars/Valden-16.png 1x, https://gamedev.city/avatars/Valden-32.png 2x" alt="Valden avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/Valden-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~Valden">Valden</a>

        <span title="2025-01-20 05:12:33 -0600">11 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_bsy8d5">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fgithub.com%2Fterrehbyte%2Fawesome-devblogs">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fgithub.com%2Fterrehbyte%2Fawesome-devblogs">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fgithub.com%2Fterrehbyte%2Fawesome-devblogs">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/bsy8d5/curated_list_gamedev_related_devblogs">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_5drqoa" data-shortid="5drqoa">
<div>
  <div>
      <p>4</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://www.riotgames.com/en/news/tech-blog-cpu-usage" rel="ugc noreferrer">Riot Tech Blog: Improving Performance by Streamlining League’s Server Selection</a>
    </span>
      <span>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
          <a title="admin, operations and general information about the industry" href="https://gamedev.city/t/industry">industry</a>
      </span>
        <a href="https://gamedev.city/domains/riotgames.com">riotgames.com</a></p><div>
        <p><a href="https://gamedev.city/~ironcutter24"><img srcset="https://gamedev.city/avatars/ironcutter24-16.png 1x, https://gamedev.city/avatars/ironcutter24-32.png 2x" alt="ironcutter24 avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/ironcutter24-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~ironcutter24">ironcutter24</a>

        <span title="2025-01-19 02:18:09 -0600">12 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_5drqoa">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fwww.riotgames.com%2Fen%2Fnews%2Ftech-blog-cpu-usage">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fwww.riotgames.com%2Fen%2Fnews%2Ftech-blog-cpu-usage">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fwww.riotgames.com%2Fen%2Fnews%2Ftech-blog-cpu-usage">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/5drqoa/riot_tech_blog_improving_performance_by">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_3n89kw" data-shortid="3n89kw">
<div>
  <div>
      <p>8</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://bsky.app/profile/gamemakerstoolkit.com/post/3lfr7fg65dk24" rel="ugc noreferrer">Ludum Dare events cancelled for 2025, as host is struggling financially</a>
    </span>
      <a title="Let's support Mike and Ludum Dare!

https://www.patreon.com/c/mikekasprzak/about" href="https://gamedev.city/s/3n89kw/ludum_dare_events_cancelled_for_2025_as">☶</a>
      <span>
          <a title="something that's hosted on a social media platform" href="https://gamedev.city/t/social-media">social-media</a>
          <a title="anything related or using generative AI" href="https://gamedev.city/t/ai">ai</a>
          <a title="admin, operations and general information about the industry" href="https://gamedev.city/t/industry">industry</a>
      </span>
        <a href="https://gamedev.city/domains/bsky.app">bsky.app</a></p><div>
        <p><a href="https://gamedev.city/~ShadowMitia"><img srcset="https://gamedev.city/avatars/ShadowMitia-16.png 1x, https://gamedev.city/avatars/ShadowMitia-32.png 2x" alt="ShadowMitia avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/ShadowMitia-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~ShadowMitia">ShadowMitia</a>

        <span title="2025-01-15 13:27:13 -0600">15 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_3n89kw">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fbsky.app%2Fprofile%2Fgamemakerstoolkit.com%2Fpost%2F3lfr7fg65dk24">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fbsky.app%2Fprofile%2Fgamemakerstoolkit.com%2Fpost%2F3lfr7fg65dk24">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fbsky.app%2Fprofile%2Fgamemakerstoolkit.com%2Fpost%2F3lfr7fg65dk24">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/3n89kw/ludum_dare_events_cancelled_for_2025_as">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_fbh5aq" data-shortid="fbh5aq">
<div>
  <div>
      <p>2</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://www.patreon.com/posts/how-do-i-record-34759149" rel="ugc noreferrer">How does Kev record a .gif for this twitter thing?</a>
    </span>
      <span>
          <a title="tools that are useful to everyone" href="https://gamedev.city/t/dev-tools">dev-tools</a>
      </span>
        <a href="https://gamedev.city/domains/patreon.com">patreon.com</a></p><div>
        <p><a href="https://gamedev.city/~taletronic"><img srcset="https://gamedev.city/avatars/taletronic-16.png 1x, https://gamedev.city/avatars/taletronic-32.png 2x" alt="taletronic avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/taletronic-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~taletronic">taletronic</a>

        <span title="2025-01-13 01:32:42 -0600">18 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_fbh5aq">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fwww.patreon.com%2Fposts%2Fhow-do-i-record-34759149">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fwww.patreon.com%2Fposts%2Fhow-do-i-record-34759149">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fwww.patreon.com%2Fposts%2Fhow-do-i-record-34759149">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/fbh5aq/how_does_kev_record_gif_for_this_twitter">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_la00m1" data-shortid="la00m1">
<div>
  <div>
      <p>6</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://www.youtube.com/watch?v=DYWTw19_8r4" rel="ugc noreferrer">Introducing Clay - High Performance UI Layout in C</a>
    </span>
      <span>
          <a title="Free and open source resources are always apreciated!" href="https://gamedev.city/t/open-source">open-source</a>
          <a title="you want to share a video or a link that contains a video " href="https://gamedev.city/t/video">video</a>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
      </span>
        <a href="https://gamedev.city/domains/youtube.com">youtube.com</a></p><div>
        <p><a href="https://gamedev.city/~slembcke"><img srcset="https://gamedev.city/avatars/slembcke-16.png 1x, https://gamedev.city/avatars/slembcke-32.png 2x" alt="slembcke avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/slembcke-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~slembcke">slembcke</a>

        <span title="2025-01-11 23:18:32 -0600">19 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_la00m1">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DDYWTw19_8r4">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DDYWTw19_8r4">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DDYWTw19_8r4">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/la00m1/introducing_clay_high_performance_ui">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_zquctz" data-shortid="zquctz">
<div>
  <div>
      <p>4</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://dd3d.dmitriysalnikov.ru/docs/1.4.5/index.html" rel="ugc noreferrer">Godot addon to draw debug lines in 2D and 3D</a>
    </span>
      <span>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
          <a title="" href="https://gamedev.city/t/godot">godot</a>
      </span>
        <a href="https://gamedev.city/domains/dd3d.dmitriysalnikov.ru">dd3d.dmitriysalnikov.ru</a></p><div>
        <p><a href="https://gamedev.city/~grej"><img srcset="https://gamedev.city/avatars/grej-16.png 1x, https://gamedev.city/avatars/grej-32.png 2x" alt="grej avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/grej-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~grej">grej</a>

        <span title="2025-01-10 12:22:53 -0600">20 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_zquctz">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fdd3d.dmitriysalnikov.ru%2Fdocs%2F1.4.5%2Findex.html">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fdd3d.dmitriysalnikov.ru%2Fdocs%2F1.4.5%2Findex.html">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fdd3d.dmitriysalnikov.ru%2Fdocs%2F1.4.5%2Findex.html">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/zquctz/godot_addon_draw_debug_lines_2d_3d">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_3u7dkb" data-shortid="3u7dkb">
<div>
  <div>
      <p>5</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://racenis.github.io/tram-sdk/why.html" rel="ugc noreferrer">Tramway SDK: a Quake, GoldSrc or Source like engine/framework</a>
    </span>
      <span>
          <a title="Free and open source resources are always apreciated!" href="https://gamedev.city/t/open-source">open-source</a>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
          <a title="you are sharing a game engine" href="https://gamedev.city/t/engine">engine</a>
      </span>
        <a href="https://gamedev.city/domains/racenis.github.io">racenis.github.io</a></p><div>
        <p><a href="https://gamedev.city/~saint11"><img srcset="https://gamedev.city/avatars/saint11-16.png 1x, https://gamedev.city/avatars/saint11-32.png 2x" alt="saint11 avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/saint11-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~saint11">saint11</a>

        <span title="2025-01-07 19:57:29 -0600">23 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_3u7dkb">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fracenis.github.io%2Ftram-sdk%2Fwhy.html">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fracenis.github.io%2Ftram-sdk%2Fwhy.html">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fracenis.github.io%2Ftram-sdk%2Fwhy.html">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/3u7dkb/tramway_sdk_quake_goldsrc_source_like">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_m7i7vc" data-shortid="m7i7vc">
<div>
  <div>
      <p>4</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://blurbusters.com/blur-busters-open-source-display-initiative-refresh-cycle-shaders/" rel="ugc noreferrer">Blur Busters Open Source Display Initiative – Refresh Cycle Shaders - Blur Busters</a>
    </span>
      <span>
          <a title="2D, 3D and everything in between" href="https://gamedev.city/t/art">art</a>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
      </span>
        <a href="https://gamedev.city/domains/blurbusters.com">blurbusters.com</a></p><div>
        <p><a href="https://gamedev.city/~berru"><img srcset="https://gamedev.city/avatars/berru-16.png 1x, https://gamedev.city/avatars/berru-32.png 2x" alt="berru avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/berru-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~berru">berru</a>

        <span title="2025-01-05 03:02:20 -0600">26 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_m7i7vc">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fblurbusters.com%2Fblur-busters-open-source-display-initiative-refresh-cycle-shaders%2F">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fblurbusters.com%2Fblur-busters-open-source-display-initiative-refresh-cycle-shaders%2F">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fblurbusters.com%2Fblur-busters-open-source-display-initiative-refresh-cycle-shaders%2F">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/m7i7vc/blur_busters_open_source_display">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_7ajlzt" data-shortid="7ajlzt">
<div>
  <div>
      <p>5</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://github.com/s-macke/VoxelSpace" rel="ugc noreferrer">VoxelSpace: Terrain rendering algorithm in less than 20 lines of code</a>
    </span>
      <span>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
          <a title="articles or resources related to the history and development of the industry" href="https://gamedev.city/t/game-history">game-history</a>
          <a title="graphics tech behind game visuals, from basic rendering to complex effects." href="https://gamedev.city/t/graphics">graphics</a>
      </span>
        <a href="https://gamedev.city/domains/github.com">github.com</a></p><div>
        <p><a href="https://gamedev.city/~saint11"><img srcset="https://gamedev.city/avatars/saint11-16.png 1x, https://gamedev.city/avatars/saint11-32.png 2x" alt="saint11 avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/saint11-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~saint11">saint11</a>

        <span title="2025-01-04 13:50:56 -0600">26 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_7ajlzt">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fgithub.com%2Fs-macke%2FVoxelSpace">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fgithub.com%2Fs-macke%2FVoxelSpace">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fgithub.com%2Fs-macke%2FVoxelSpace">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/7ajlzt/voxelspace_terrain_rendering_algorithm">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_vbpmbd" data-shortid="vbpmbd">
<div>
  <div>
      <p>5</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://realfix.substack.com/p/handmade-engine-survey-results" rel="ugc noreferrer">Handmade Engine Survey Results</a>
    </span>
      <span>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
          <a title="you are sharing a game engine" href="https://gamedev.city/t/engine">engine</a>
      </span>
        <a href="https://gamedev.city/domains/realfix.substack.com">realfix.substack.com</a></p><div>
        <p><a href="https://gamedev.city/~lessa"><img srcset="https://gamedev.city/avatars/lessa-16.png 1x, https://gamedev.city/avatars/lessa-32.png 2x" alt="lessa avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/lessa-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~lessa">lessa</a>

        <span title="2025-01-02 03:06:20 -0600">29 days ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_vbpmbd">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Frealfix.substack.com%2Fp%2Fhandmade-engine-survey-results">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Frealfix.substack.com%2Fp%2Fhandmade-engine-survey-results">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Frealfix.substack.com%2Fp%2Fhandmade-engine-survey-results">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/vbpmbd/handmade_engine_survey_results">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_dd3wcg" data-shortid="dd3wcg">
<div>
  <div>
      <p>1</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://sevencrane.itch.io/vapor-trails/devlog/432175/ghost-ai-for-andromeda" rel="ugc noreferrer">Ghost AI for Andromeda</a>
    </span>
      <span>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
      </span>
        <a href="https://gamedev.city/domains/sevencrane.itch.io">sevencrane.itch.io</a></p><div>
        <p><a href="https://gamedev.city/~ncharlie"><img srcset="https://gamedev.city/avatars/ncharlie-16.png 1x, https://gamedev.city/avatars/ncharlie-32.png 2x" alt="ncharlie avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/ncharlie-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~ncharlie">ncharlie</a>

        <span title="2024-12-31 17:37:36 -0600">1 month ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_dd3wcg">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fsevencrane.itch.io%2Fvapor-trails%2Fdevlog%2F432175%2Fghost-ai-for-andromeda">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fsevencrane.itch.io%2Fvapor-trails%2Fdevlog%2F432175%2Fghost-ai-for-andromeda">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fsevencrane.itch.io%2Fvapor-trails%2Fdevlog%2F432175%2Fghost-ai-for-andromeda">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/dd3wcg/ghost_ai_for_andromeda">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_p5gzzh" data-shortid="p5gzzh">
<div>
  <div>
      <p>4</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://audiomass.co/" rel="ugc noreferrer">AudioMass: In-browser audio editor similar to Audacity</a>
    </span>
      <span>
          <a title="Free and open source resources are always apreciated!" href="https://gamedev.city/t/open-source">open-source</a>
          <a title="sound and music" href="https://gamedev.city/t/audio">audio</a>
      </span>
        <a href="https://gamedev.city/domains/audiomass.co">audiomass.co</a></p><div>
        <p><a href="https://gamedev.city/~saint11"><img srcset="https://gamedev.city/avatars/saint11-16.png 1x, https://gamedev.city/avatars/saint11-32.png 2x" alt="saint11 avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/saint11-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~saint11">saint11</a>

        <span title="2024-12-29 12:50:27 -0600">1 month ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_p5gzzh">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Faudiomass.co%2F">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Faudiomass.co%2F">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Faudiomass.co%2F">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/p5gzzh/audiomass_browser_audio_editor_similar">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_4xul27" data-shortid="4xul27">
<div>
  <div>
      <p>3</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://allusion-app.github.io/" rel="ugc noreferrer">Allusion - Visual Library Manager</a>
    </span>
      <span>
          <a title="Free and open source resources are always apreciated!" href="https://gamedev.city/t/open-source">open-source</a>
          <a title="art galleries or pieces that are exceptionally good or interesting - do not post your own art" href="https://gamedev.city/t/art-reference">art-reference</a>
          <a title="tools that are useful to everyone" href="https://gamedev.city/t/dev-tools">dev-tools</a>
      </span>
        <a href="https://gamedev.city/domains/allusion-app.github.io">allusion-app.github.io</a></p><div>
        <p><a href="https://gamedev.city/~saint11"><img srcset="https://gamedev.city/avatars/saint11-16.png 1x, https://gamedev.city/avatars/saint11-32.png 2x" alt="saint11 avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/saint11-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~saint11">saint11</a>

        <span title="2024-12-23 15:12:48 -0600">1 month ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_4xul27">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fallusion-app.github.io%2F">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fallusion-app.github.io%2F">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fallusion-app.github.io%2F">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/4xul27/allusion_visual_library_manager">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_oelkvo" data-shortid="oelkvo">
<div>
  <div>
      <p>9</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://ldtk.io/" rel="ugc noreferrer">LDtk: A modern 2D level editor from the director of Dead Cells</a>
    </span>
      <span>
          <a title="game design" href="https://gamedev.city/t/design">design</a>
          <a title="tools that are useful to everyone" href="https://gamedev.city/t/dev-tools">dev-tools</a>
      </span>
        <a href="https://gamedev.city/domains/ldtk.io">ldtk.io</a></p><div>
        <p><a href="https://gamedev.city/~ncharlie"><img srcset="https://gamedev.city/avatars/ncharlie-16.png 1x, https://gamedev.city/avatars/ncharlie-32.png 2x" alt="ncharlie avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/ncharlie-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~ncharlie">ncharlie</a>

        <span title="2024-12-22 08:26:42 -0600">1 month ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_oelkvo">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fldtk.io%2F">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fldtk.io%2F">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fldtk.io%2F">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/oelkvo/ldtk_modern_2d_level_editor_from_director">
              1 comment</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_mbiw21" data-shortid="mbiw21">
<div>
  <div>
      <p>2</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://youtu.be/69Ukg2BqIk0" rel="ugc noreferrer">how does an indie game get made?</a>
    </span>
      <span>
          <a title="you want to share a video or a link that contains a video " href="https://gamedev.city/t/video">video</a>
          <a title="analysis, theories and studies related to a specific game or group of games" href="https://gamedev.city/t/game-analysis">game-analysis</a>
      </span>
        <a href="https://gamedev.city/domains/youtu.be">youtu.be</a></p><div>
        <p><a href="https://gamedev.city/~cuca"><img srcset="https://gamedev.city/avatars/cuca-16.png 1x, https://gamedev.city/avatars/cuca-32.png 2x" alt="cuca avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/cuca-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~cuca">cuca</a>

        <span title="2024-12-22 16:10:36 -0600">1 month ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_mbiw21">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fyoutu.be%2F69Ukg2BqIk0">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fyoutu.be%2F69Ukg2BqIk0">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fyoutu.be%2F69Ukg2BqIk0">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/mbiw21/how_does_indie_game_get_made">
              1 comment</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_pytqxu" data-shortid="pytqxu">
<div>
  <div>
      <p>5</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://trenchbroom.github.io/" rel="ugc noreferrer">TrenchBroom: FOSS level editor for the Quake-engine (Can be used in Unity, Godot, Unreal, etc)</a>
    </span>
      <span>
          <a title="2D, 3D and everything in between" href="https://gamedev.city/t/art">art</a>
          <a title="game design" href="https://gamedev.city/t/design">design</a>
          <a title="tools that are useful to everyone" href="https://gamedev.city/t/dev-tools">dev-tools</a>
      </span>
        <a href="https://gamedev.city/domains/trenchbroom.github.io">trenchbroom.github.io</a></p><div>
        <p><a href="https://gamedev.city/~saint11"><img srcset="https://gamedev.city/avatars/saint11-16.png 1x, https://gamedev.city/avatars/saint11-32.png 2x" alt="saint11 avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/saint11-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~saint11">saint11</a>

        <span title="2024-12-14 02:33:06 -0600">1 month ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_pytqxu">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Ftrenchbroom.github.io%2F">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Ftrenchbroom.github.io%2F">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Ftrenchbroom.github.io%2F">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/pytqxu/trenchbroom_foss_level_editor_for_quake">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_so96zy" data-shortid="so96zy">
<div>
  <div>
      <p>2</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://indiegames101.com/blog/2023-10-20-from-game-idea-to-game-concept/" rel="ugc noreferrer">From game idea to game concept</a>
    </span>
      <span>
          <a title="game design" href="https://gamedev.city/t/design">design</a>
      </span>
        <a href="https://gamedev.city/domains/indiegames101.com">indiegames101.com</a></p><div>
        <p><a href="https://gamedev.city/~ncharlie"><img srcset="https://gamedev.city/avatars/ncharlie-16.png 1x, https://gamedev.city/avatars/ncharlie-32.png 2x" alt="ncharlie avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/ncharlie-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~ncharlie">ncharlie</a>

        <span title="2024-12-12 22:17:29 -0600">1 month ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_so96zy">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Findiegames101.com%2Fblog%2F2023-10-20-from-game-idea-to-game-concept%2F">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Findiegames101.com%2Fblog%2F2023-10-20-from-game-idea-to-game-concept%2F">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Findiegames101.com%2Fblog%2F2023-10-20-from-game-idea-to-game-concept%2F">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/so96zy/from_game_idea_game_concept">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_0gmxv5" data-shortid="0gmxv5">
<div>
  <div>
      <p>2</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://mikejsavage.co.uk/geometry-clipmaps/" rel="ugc noreferrer">Geometry clipmaps: simple terrain rendering with level of detail</a>
    </span>
      <span>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
          <a title="graphics tech behind game visuals, from basic rendering to complex effects." href="https://gamedev.city/t/graphics">graphics</a>
      </span>
        <a href="https://gamedev.city/domains/mikejsavage.co.uk">mikejsavage.co.uk</a></p><div>
        <p><a href="https://gamedev.city/~ncharlie"><img srcset="https://gamedev.city/avatars/ncharlie-16.png 1x, https://gamedev.city/avatars/ncharlie-32.png 2x" alt="ncharlie avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/ncharlie-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~ncharlie">ncharlie</a>

        <span title="2024-12-12 11:15:42 -0600">1 month ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_0gmxv5">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fmikejsavage.co.uk%2Fgeometry-clipmaps%2F">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fmikejsavage.co.uk%2Fgeometry-clipmaps%2F">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fmikejsavage.co.uk%2Fgeometry-clipmaps%2F">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/0gmxv5/geometry_clipmaps_simple_terrain">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_kiazeh" data-shortid="kiazeh">
<div>
  <div>
      <p>8</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://lostgarden.com/2018/01/24/cozy-games/comment-page-1/" rel="ugc noreferrer">What is a ‘Cozy’ game?</a>
    </span>
      <span>
          <a title="game design" href="https://gamedev.city/t/design">design</a>
          <a title="analysis, theories and studies related to a specific game or group of games" href="https://gamedev.city/t/game-analysis">game-analysis</a>
      </span>
        <a href="https://gamedev.city/domains/lostgarden.com">lostgarden.com</a></p><div>
        <p><a href="https://gamedev.city/~isadora"><img srcset="https://gamedev.city/avatars/isadora-16.png 1x, https://gamedev.city/avatars/isadora-32.png 2x" alt="isadora avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/isadora-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~isadora">isadora</a>

        <span title="2024-12-11 15:32:19 -0600">1 month ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_kiazeh">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Flostgarden.com%2F2018%2F01%2F24%2Fcozy-games%2Fcomment-page-1%2F">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Flostgarden.com%2F2018%2F01%2F24%2Fcozy-games%2Fcomment-page-1%2F">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Flostgarden.com%2F2018%2F01%2F24%2Fcozy-games%2Fcomment-page-1%2F">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/kiazeh/what_is_cozy_game">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_wkxfjj" data-shortid="wkxfjj">
<div>
  <div>
      <p>6</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://thebookofshaders.com/" rel="ugc noreferrer">The Book of Shaders</a>
    </span>
      <span>
          <a title="interesting resources for programmers" href="https://gamedev.city/t/code">code</a>
          <a title="graphics tech behind game visuals, from basic rendering to complex effects." href="https://gamedev.city/t/graphics">graphics</a>
      </span>
        <a href="https://gamedev.city/domains/thebookofshaders.com">thebookofshaders.com</a></p><div>
        <p><a href="https://gamedev.city/~saint11"><img srcset="https://gamedev.city/avatars/saint11-16.png 1x, https://gamedev.city/avatars/saint11-32.png 2x" alt="saint11 avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/saint11-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~saint11">saint11</a>

        <span title="2024-12-11 13:20:48 -0600">1 month ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_wkxfjj">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fthebookofshaders.com%2F">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fthebookofshaders.com%2F">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fthebookofshaders.com%2F">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/wkxfjj/book_shaders">
              no comments</a>
          </span>

    </p></div>
  </div>
</div>

</li>

<li id="story_wtkjfm" data-shortid="wtkjfm">
<div>
  <div>
      <p>3</p>
  </div>
  <div>
    <p><span role="heading" aria-level="1">
        <a href="https://www.charliecleveland.com/ugliness-needed/" rel="ugc noreferrer">Ugliness Needed</a>
    </span>
      <span>
          <a title="game design" href="https://gamedev.city/t/design">design</a>
      </span>
        <a href="https://gamedev.city/domains/charliecleveland.com">charliecleveland.com</a></p><div>
        <p><a href="https://gamedev.city/~ncharlie"><img srcset="https://gamedev.city/avatars/ncharlie-16.png 1x, https://gamedev.city/avatars/ncharlie-32.png 2x" alt="ncharlie avatar" loading="lazy" decoding="async" src="https://gamedev.city/avatars/ncharlie-16.png" width="16" height="16"></a>
          <span> via </span>
        <a href="https://gamedev.city/~ncharlie">ncharlie</a>

        <span title="2024-12-10 15:00:47 -0600">1 month ago</span>

          <span> | </span>
          <span>
            
            <label for="archive_wtkjfm">archive</label>
            <div>
              <p><a href="https://web.archive.org/web/3/https%3A%2F%2Fwww.charliecleveland.com%2Fugliness-needed%2F">Archive.org</a>
              <a href="https://archive.today/https%3A%2F%2Fwww.charliecleveland.com%2Fugliness-needed%2F">Archive.today</a>
              <a href="https://ghostarchive.org/search?term=https%3A%2F%2Fwww.charliecleveland.com%2Fugliness-needed%2F">Ghostarchive</a>
            </p></div>
          </span>
          <span>
            <span> | </span>
            <a role="heading" aria-level="2" href="https://gamedev.city/s/wtkjfm/ugliness_needed">
              1 comment</a>
          </span>

    </p></div>
  </div>
</div>

</li>

</ol>



<div>

    <p><a href="https://gamedev.city/page/2">Page 2 &gt;&gt;</a>
</p></div>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hydro: Distributed Programming Framework for Rust (253 pts)]]></title>
            <link>https://hydro.run/docs/hydro/</link>
            <guid>42885087</guid>
            <pubDate>Fri, 31 Jan 2025 06:11:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hydro.run/docs/hydro/">https://hydro.run/docs/hydro/</a>, See on <a href="https://news.ycombinator.com/item?id=42885087">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main><div><article><div><header></header>
<p>Hydro is a high-level distributed programming framework for Rust. Hydro can help you quickly write scalable distributed services that are correct by construction. Much like Rust helps with memory safety, Hydro helps with <a href="https://hydro.run/docs/hydro/correctness"><strong>distributed safety</strong></a>. Hydro also makes it easy to get started by running your distributed programs in either testing or deployment modes.</p>
<p>Hydro is a distributed dataflow language, powered by the high-performance single-threaded <a href="https://hydro.run/docs/dfir/">DFIR runtime</a>. Unlike traditional architectures such as actors or RPCs, Hydro offers <em>choreographic</em> APIs, where expressions and functions can describe computation that takes place across many locations. It also integrates with <a href="https://hydro.run/docs/deploy/">Hydro Deploy</a> to make it easy to deploy and run distributed Hydro programs either locally or in the cloud.</p>
<p>Hydro uses a two-stage compilation approach. Hydro programs are standard Rust programs, which first run on the developer's laptop to generate a <em>deployment plan</em>. This plan is then compiled to DFIR to generate individual binaries for each machine in the distributed system (enabling zero-overhead abstractions), which are then deployed to the cloud using the generated plan along with specifications of cloud resources.</p>
<p>Hydro has been used to write a variety of high-performance distributed systems, including implementations of classic distributed protocols such as two-phase commit and Paxos. Work is ongoing to develop a distributed systems standard library that will offer these protocols and more as reusable components.</p>
<div><p><span><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</p><p>The docs for Hydro are still a work in progress. If you have any questions or run into bugs, please file an issue on the <a href="https://github.com/hydro-project/hydro" target="_blank" rel="noopener noreferrer">Hydro GitHub repository</a>.</p></div></div></article></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Release Notes for Ghostty 1.1.0 (134 pts)]]></title>
            <link>https://ghostty.org/docs/install/release-notes/1-1-0</link>
            <guid>42884930</guid>
            <pubDate>Fri, 31 Jan 2025 05:24:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ghostty.org/docs/install/release-notes/1-1-0">https://ghostty.org/docs/install/release-notes/1-1-0</a>, See on <a href="https://news.ycombinator.com/item?id=42884930">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Ghostty 1.1.0 features <strong>1 month of work</strong> with changes from
<strong>84 contributors</strong> over <strong>564 commits.</strong> The focus of this release
remains on critical bug fixes and quality of life improvements based
on feedback from the initial 1.0 release.</p>

<ul>
<li><a href="https://github.com/ghostty-org/ghostty/security/advisories/GHSA-98wc-794w-gjx3">GHSA-98wc-794w-gjx3</a>.
Fixed an issue where Ghostty would leak some file descriptors to the
running shell or command.</li>
</ul>


<p>PR:
<a href="https://github.com/ghostty-org/ghostty/pull/4630">#4630</a>,
<a href="https://github.com/ghostty-org/ghostty/pull/4723">#4723</a>,
<a href="https://github.com/ghostty-org/ghostty/pull/5124">#5124</a></p>
<p>On Linux in particular, window decorations have a wide variety of
styles and behaviors. Ghostty's previous behavior was to always use
client-side decorations (CSD), which made Ghostty look and feel too
much like a "GNOME" application. In particular, Ghostty looked out of
place on popular desktop environments like KDE Plasma.</p>
<p>Ghostty 1.1 on Linux now supports server-side decorations (SSD) for
compositors that support it. This allows Ghostty to look and feel more
like a native application on a wider variety of desktop environments.
This can be disabled if you prefer CSD or no decorations at all.</p>
<p><a href="https://ghostty.org/images/1-1-0/csd.png" target="_blank"><img src="https://ghostty.org/images/1-1-0/csd.png" width="360"></a><a href="https://ghostty.org/images/1-1-0/ssd.png" target="_blank"><img src="https://ghostty.org/images/1-1-0/ssd.png" width="360"></a></p>
<p>(Left/Top: Old Client-Side Decorations, Right/Bottom: New Server-Side Decorations)</p>
<p>The <code>window-decoration</code> configuration option now has a new value <code>auto</code>
which will use SSD if the compositor supports it and prefers it. A value
of <code>server</code> will force SSD (if available). A value of <code>client</code> will force
client-side decorations. And a value of <code>none</code> will disable decorations
entirely.</p>
<p>SSD is only supported on Wayland. Ghostty uses the
<a href="https://wayland.app/protocols/kde-server-decoration">KDE Server Decoration</a>
protocol. Despite the name, this protocol is supported on almost every
major Wayland compositor, not just KDE. For X11, we could not find a
well-supported protocol for SSD, so we continue to use CSD.</p>
<p>Future versions of Ghostty will continue to improve the native look and
feel across different desktop environments in Linux to the best of our
ability and protocol availability. For example, we're looking into native
menu bars, currently.</p>
<blockquote><p>Future versions of Ghostty will remove the <code>gtk-adwaita</code> option
and force a dependency on libadwaita. This is relevant to this change
because we found the vast majority of users who wanted SSD were using
<code>gtk-adwaita = false</code> to achieve this (which only worked in some cases).
With the new SSD support, this workaround is no longer necessary.
See <a href="#gtk:-forcing-a-dependency-on-libadwaita">the dedication section</a> for more
details.</p></blockquote>

<p>PR:
<a href="https://github.com/ghostty-org/ghostty/pull/3567">#3567</a>,
<a href="https://github.com/ghostty-org/ghostty/pull/4332">#4332</a>,
<a href="https://github.com/ghostty-org/ghostty/issues/4539">#4539</a>,
<a href="https://github.com/ghostty-org/ghostty/pull/4854">#4854</a>,
<a href="https://github.com/ghostty-org/ghostty/pull/4933">#4933</a>,
<a href="https://github.com/ghostty-org/ghostty/pull/4999">#4999</a></p>
<p>For both macOS and Linux, we've tested IME with the following
paradigms: CJK (Chinese, Japanese, Korean), dead keys (such as
accented characters), emoji, Unicode hex input, and more and
have massively improved the reliability and consistency of IME
input.</p>
<p>On Linux, we've tested both <code>fcitx</code> and <code>ibus</code> under both X11 and
Wayland. We also tested multiple versions of each (in particular
versions that are common in LTS distributions). We found a bug in
ibus 1.5.29 that caused deadkey input to become "stuck" and worked
around it.</p>
<p>On macOS, we've ensured in particular that the AquaSKK and macSKK
Japanese language input methods work out of the box, although we've
also tested other IMEs and found them to work well as well.</p>

<p>PR:
<a href="https://github.com/ghostty-org/ghostty/pull/4328">#4328</a></p>
<p>Keybinds support a new <code>performable:</code> prefix. This prefix indicates that
the keybind should only consume the input if the action is performed.</p>
<p>For example, the keybind below will only consume <code>ctrl+c</code> if there is
text able to be copied. Otherwise, <code>ctrl+c</code> will be passed to the shell
(typically causing an interrupt signal).</p>
<pre><code>keybind = performable:ctrl+c=copy_to_clipboard
</code></pre>
<blockquote><p>Not all actions support <code>performable:</code>. Namely, many actions are always
performed (e.g. <code>text</code>, <code>new_tab</code>, etc.). The performable prefix only
applies to actions that have a meaningful "perform" state.</p></blockquote>

<p>PR:
<a href="https://github.com/ghostty-org/ghostty/pull/4913">#4913</a>,
<a href="https://github.com/ghostty-org/ghostty/pull/5401">#5401</a></p>
<p>Alpha blending is the process of determining the result when a semi-transparent
foreground color is placed in front of a background color. This affects the
edges of text, and any images (displayed with Kitty Graphic Protocol) which
have transparency in them.</p>
<p>Before, this was performed by blending colors in the sRGB color space, which
causes darkening around the edges of text when the foreground and background
colors are different highly saturated colors. With Ghostty 1.1 on macOS, alpha
blending is now performed in the P3 color space by default, which reduces the
darkening issue thanks to the wider gamut and matches the appearance of native
macOS applications like Terminal.app and TextEdit.</p>
<p>Additionally, a configuration, <code>alpha-blending</code>, has been added to control this.
The default is <code>native</code>, which has been described, but two more options are
available:</p>
<ul>
<li><code>linear</code> performs blending in a linear color space, which is technically
correct but has downsides like dark text seeming too thin and light text
seeming too thick.</li>
<li><code>linear-corrected</code> is like <code>linear</code> but applies a correction step to text
which makes it appear extremely close to <code>native</code>, but without <em>any</em> darkening
problems.</li>
</ul>
<p>Below you can compare (from left to right) the old blending, the new <code>native</code>
blending, <code>linear</code> blending, and <code>linear-corrected</code> blending. You may have to
zoom in to see the differences correctly.</p>
<p><img src="https://ghostty.org/images/1-1-0/srgb_blending.png" width="180"><img src="https://ghostty.org/images/1-1-0/p3_blending.png" width="180"><img src="https://ghostty.org/images/1-1-0/linear_blending.png" width="180"><img src="https://ghostty.org/images/1-1-0/linear-corrected_blending.png" width="180"></p>
<p>This is currently only available on macOS, but work is underway which should
bring it to Linux as well in the future.</p>

<p>PR:
<a href="https://github.com/ghostty-org/ghostty/pull/4049">#4049</a>,
<a href="https://github.com/ghostty-org/ghostty/pull/4501">#4501</a>,
<a href="https://github.com/ghostty-org/ghostty/pull/4999">#4999</a>,
<a href="https://github.com/ghostty-org/ghostty/pull/5361">#5361</a></p>
<p>The quick terminal now works with native fullscreen windows,
space changes while the quick terminal is open, IME widgets, left/right
docks, and more.</p>
<p>A new configuration <code>quick-terminal-space-behavior</code> has been added to
control how the quick terminal reacts to changing macOS spaces while it
is open. The default behavior is to follow the active space (<code>move</code>).
You can also set it to <code>remain</code> to stay on the space it was opened on.</p>

<p><a href="https://github.com/ghostty-org/ghostty/milestone/3?closed=1">Full list of closed issues on GitHub</a>.</p>
<p>In each section, we try to sort improvements before bug fixes.</p>
<ul>
<li>Add the new <code>performable:</code> prefix to keybindings to only consume
the input if the action is performed. See
<a href="#%22performable%22-keybindings">"Performable" Keybindings</a>.
<a href="https://github.com/ghostty-org/ghostty/pull/4328">#4328</a></li>
<li><code>shell-integration-features</code> now sets the proper environment variables
even when <code>shell-integration</code> is disabled. This is useful for environments
that manually source shell integration.
<a href="https://github.com/ghostty-org/ghostty/pull/5046">#5046</a></li>
<li>A new keybinding action <code>copy_url_to_clipboard</code> is available to copy
the URL (if any) under the cursor to the clipboard.
<a href="https://github.com/ghostty-org/ghostty/pull/4633">#4633</a></li>
<li>A new keybinding action <code>close_tab</code> can be used to close the tab and
all splits within the tab. This works on both macOS and GTK builds.
<a href="https://github.com/ghostty-org/ghostty/pull/4331">#4331</a></li>
<li>Update default <code>ctrl+shift+j</code>/<code>ctrl+shift+alt+j</code> keybindings to capture full
screen contents.
<a href="https://github.com/ghostty-org/ghostty/pull/5285">#5285</a></li>
<li>IPv6 URLs are now automatically turned into hyperlinks.
<a href="https://github.com/ghostty-org/ghostty/issues/4743">#4743</a></li>
<li>Filepaths without an explicit <code>file://</code> protocol can now be clicked
like any other hyperlink.
<a href="https://github.com/ghostty-org/ghostty/issues/4713">#4713</a></li>
<li>New configuration <code>split-divider-color</code> to explicitly set the divider
color for splits. If this is not set, the previous default behavior of
automatically determining the color based on your terminal background
color is used.
<a href="https://github.com/ghostty-org/ghostty/issues/4326">#4236</a></li>
<li>The <code>palette</code> configuration option now allows binary, octal, and hexadecimal
keys.
<a href="https://github.com/ghostty-org/ghostty/issues/4298">#4298</a></li>
<li><code>goto_split</code> keybind parameter <code>top</code> and <code>bottom</code> have been renamed to
<code>up</code> and <code>down</code>, respectively. The old names are still supported for
backwards compatibility.
<a href="https://github.com/ghostty-org/ghostty/pull/3427">#3427</a></li>
<li>bash: use <code>\w</code> instead of <code>$PWD</code> for abbreviated titles.
<a href="https://github.com/ghostty-org/ghostty/pull/4656">#4656</a></li>
<li>bash: drop dependency on <code>sed</code>, which significantly reduces
per-prompt overhead
<a href="https://github.com/ghostty-org/ghostty/pull/5141">#5141</a>,
<a href="https://github.com/ghostty-org/ghostty/pull/5142">#5142</a></li>
<li>fish: fix sudo integration
<a href="https://github.com/ghostty-org/ghostty/pull/5276">#5276</a></li>
<li>Fix scenario where CPU would spin at 100% if <code>wait-after-command</code> was enabled.
<a href="https://github.com/ghostty-org/ghostty/pull/4884">#4884</a></li>
<li>Fix a possible memory corruption race condition when the renderer grid
size and terminal grid size mismatched.
<a href="https://github.com/ghostty-org/ghostty/pull/5265">#5265</a></li>
<li>Triple-click-and-drag now works when the triple click starts from a
blank line.
<a href="https://github.com/ghostty-org/ghostty/pull/5068">#5068</a></li>
<li><code>super+triple-click</code> properly selects command output if the command line
wrapped.
<a href="https://github.com/ghostty-org/ghostty/issues/5373">#5373</a></li>
<li>vt: Fix incorrect alpha blending for Kitty image protocol.
<a href="https://github.com/ghostty-org/ghostty/pull/5189">#5189</a></li>
<li>vt: More robust and correct handling of mixed semicolon and colon
usage in SGR sequences. Practically, fixes some styling within the
Kakoune editor.
<a href="https://github.com/ghostty-org/ghostty/pull/5022">#5022</a></li>
<li>The <code>cursor-invert-fg-bg</code> option now works well with the invert VT sequence.
<a href="https://github.com/ghostty-org/ghostty/issues/4777">#4777</a></li>
<li>Remove <code>VTE_VERSION</code> from environment prior to executing shell. This
fixes issues where VTE's shell integration would mistakingly think Ghostty
was libvte-based.
<a href="https://github.com/ghostty-org/ghostty/issues/4710">#4710</a></li>
<li>Fix an issue that didn't allow an initial window size smaller than
<code>640x480</code>
<a href="https://github.com/ghostty-org/ghostty/issues/4688">#4688</a></li>
<li>vt: ConEmu OSC <code>9;4</code> parsing better matches ConEmu logic, fixing an
issue with some versions of systemd.
<a href="https://github.com/ghostty-org/ghostty/issues/4727">#4727</a></li>
<li>The <code>unbind</code> keybind action now also unbinds any matching physical
mapping.
<a href="https://github.com/ghostty-org/ghostty/issues/4703">#4703</a></li>
<li>Non-existent <code>config-file</code> now properly shows an error when <code>theme</code>
is also set.
<a href="https://github.com/ghostty-org/ghostty/issues/4509">#4509</a></li>
<li>vt: ConEmu OSC <code>9;1</code>, <code>9;2</code>, <code>9;3</code>, <code>9;5</code> are now parsed and ignored so they
don't conflict with OSC 9 desktop notifications.
<a href="https://github.com/ghostty-org/ghostty/issues/4644">#4644</a>,
<a href="https://github.com/ghostty-org/ghostty/issues/4327">#4327</a>,
<a href="https://github.com/ghostty-org/ghostty/issues/4948">#4948</a>,
<a href="https://github.com/ghostty-org/ghostty/issues/4447">#4447</a></li>
<li>Inspector: Memory values now specify units rather than raw bytes
<a href="https://github.com/ghostty-org/ghostty/issues/4549">#4549</a></li>
<li>Fix control sequence (e.g. <code>ctrl+c</code>) encoding in legacy mode for
various keyboard layouts such as Russian.
<a href="https://github.com/ghostty-org/ghostty/issues/4518">#4518</a></li>
<li>vt: Kitty graphics protocol temporary files must be named according to
the specification.
<a href="https://github.com/ghostty-org/ghostty/issues/4451">#4451</a></li>
<li>The default file limit (<code>RLIMIT_NOFILE</code>) is restored for the executed
shell or command.
<a href="https://github.com/ghostty-org/ghostty/issues/4241">#4241</a></li>
<li>Multiple <code>font-feature</code> values can be comma-separated. Previously,
you had to repeat <code>font-feature</code> multiple times. This is still supported.
<a href="https://github.com/ghostty-org/ghostty/issues/3128">#3128</a></li>
<li>vt: CSI intermediate bytes are now validated for all supported CSI
sequences.
<a href="https://github.com/ghostty-org/ghostty/issues/3122">#3122</a></li>
<li>Selected text no longer remains after a <code>clear_screen</code> keybinding.
<a href="https://github.com/ghostty-org/ghostty/issues/3414">#3414</a></li>
<li>Tilde (<code>~</code>) in filepaths now expands to the user's home directory
in path-typed configuration values.
<a href="https://github.com/ghostty-org/ghostty/issues/3328">#3328</a></li>
<li>Cache data now respects <code>XDG_CACHE_HOME</code>.
<a href="https://github.com/ghostty-org/ghostty/pull/3458">#3458</a></li>
<li>Default configuration file will now be created even if the parent
directories do not exist.
<a href="https://github.com/ghostty-org/ghostty/pull/4295">#4295</a></li>
<li>Inspector: Font size now shows fractional values.
<a href="https://github.com/ghostty-org/ghostty/pull/4371">#4371</a></li>
</ul>

<ul>
<li>macOS: Consistent and correct alpha blending for correct colors.
Options for matching Apple-style alpha blending as well as an
experimental "linear" blending mode that we think produces better
results for certain foreground/background color combinations.
See <a href="#macos-alpha-blending-improvements">macOS Alpha Blending Improvements</a>.
<a href="https://github.com/ghostty-org/ghostty/pull/4913">#4913</a></li>
<li>macOS: New config option <code>quick-terminal-space-behavior</code> to configure
how the quick terminal reacts to changing macOS spaces while it is open.
The default behavior is to follow the active space (remain open).
<a href="https://github.com/ghostty-org/ghostty/pull/4049">#4049</a></li>
<li>macOS: Selection clipboard is now supported. The <code>copy-on-select</code> option
now defaults to true for macOS. A new "Paste Selection" menu item is
available on macOS. This behavior matches Terminal.app.
<a href="https://github.com/ghostty-org/ghostty/pull/4733">#4733</a></li>
<li>macOS: A very short delay has been introduced for the default window
title to prevent a FOUC ("flash of unknown content") for new surfaces.
<a href="https://github.com/ghostty-org/ghostty/pull/4799">#4799</a></li>
<li>macOS: <code>font-thicken</code> now accepts an optional numeric value to adjust
the thickening factor.
<a href="https://github.com/ghostty-org/ghostty/issues/4531">#4531</a></li>
<li>macOS: Explicit Ghostty keybindings now take priority over
system keybindings (e.g. <code>cmd+h</code> can now be bound).
<a href="https://github.com/ghostty-org/ghostty/issues/4591">#4591</a></li>
<li>macOS: Non-boolean <code>font-feature</code> values such as <code>cv02 = 2</code> are now
supported.
<a href="https://github.com/ghostty-org/ghostty/issues/3128">#3128</a></li>
<li>macOS: Cache data now uses macOS system APIs to store data in the
OS-configured cache directory (typically <code>~/Library/Caches</code>).
<a href="https://github.com/ghostty-org/ghostty/pull/3458">#3458</a></li>
<li>macOS: Autohide the dock if the quick terminal would overlap with it.
<a href="https://github.com/ghostty-org/ghostty/pull/5361">#5361</a></li>
<li>macOS: Fix zombie processes leaking when the shell or command exits
before the containing UI is closed.
<a href="https://github.com/ghostty-org/ghostty/pull/4554">#4554</a></li>
<li>macOS: Hyperlinks in the top-left no loner appear hovered when
command is held anywhere outside the window.
<a href="https://github.com/ghostty-org/ghostty/pull/5252">#5252</a></li>
<li>macOS: When <code>macos-titlebar-style = hidden</code>, the titlebar area
can no longer be used to drag the window. You must now use option+drag
(standard macOS bindings) in the resize area.
<a href="https://github.com/ghostty-org/ghostty/pull/2523">#2523</a></li>
<li>macOS: Closing a tab with Stage Manager enabled no longer causes
Ghostty to lose focus.
<a href="https://github.com/ghostty-org/ghostty/pull/5108">#5108</a></li>
<li>macOS: Fix "background flash" for new and resized terminals.
<a href="https://github.com/ghostty-org/ghostty/pull/5083">#5083</a></li>
<li>macOS: Filepaths are shell escaped when files, URLs, are pasted.
<a href="https://github.com/ghostty-org/ghostty/pull/5036">#5036</a></li>
<li>macOS: Quick terminal no longer covers IME widget.
<a href="https://github.com/ghostty-org/ghostty/pull/4999">#4999</a></li>
<li>macOS: Text can now be dragged onto the terminal.
<a href="https://github.com/ghostty-org/ghostty/pull/4932">#4932</a></li>
<li>macOS: IME window position is now correct when <code>window-padding</code> is set.
<a href="https://github.com/ghostty-org/ghostty/pull/4933">#4933</a></li>
<li>macOS: Pasting multiple files now separates their path by a space
instead of a newline.
<a href="https://github.com/ghostty-org/ghostty/pull/4956">#4956</a></li>
<li>macOS: <code>toggle_visibility</code> no longer separates tabs from their parent
window.
<a href="https://github.com/ghostty-org/ghostty/pull/4329">#4329</a></li>
<li>macOS: Control-characters such as <code>ctrl+h</code> now work as expected for
input method editors (IME).
<a href="https://github.com/ghostty-org/ghostty/pull/4854">#4854</a></li>
<li>macOS: Fix crash when <code>window-step-resize</code> was used in conjunction with
an overly large initial window size.
<a href="https://github.com/ghostty-org/ghostty/pull/4801">#4801</a></li>
<li>macOS: Quick terminal now properly overlays native fullscreen windows.
<a href="https://github.com/ghostty-org/ghostty/pull/4049">#4049</a></li>
<li>macOS: Add strings for more macOS system permission requests that can
be triggered by child processes (e.g. Bluetooh access).
<a href="https://github.com/ghostty-org/ghostty/issues/4668">#4668</a></li>
<li>macOS: <code>new_tab</code> keybinding without any windows creates a new window.
<a href="https://github.com/ghostty-org/ghostty/issues/4691">#4691</a></li>
<li>macOS: Fix a retain cycle that prevented the <code>NSWindow</code> from being
released when closed.
<a href="https://github.com/ghostty-org/ghostty/issues/4689">#4689</a></li>
<li>macOS: Preedit text no longer disappears when a modifier key is pressed.
<a href="https://github.com/ghostty-org/ghostty/issues/4634">#4634</a></li>
<li>macOS: AquaSKK/macSKK Japanese language input methods now work.
<a href="https://github.com/ghostty-org/ghostty/issues/4539">#4539</a></li>
<li>macOS: Quick terminal now appears in the correct location with certain
multi-monitor configurations.
<a href="https://github.com/ghostty-org/ghostty/issues/4501">#4501</a></li>
<li>macOS: <code>command+&lt;key&gt;</code> release events are now properly encoded for
the Kitty keyboard protocol.
<a href="https://github.com/ghostty-org/ghostty/issues/4591">#4591</a></li>
<li>macOS: <code>cmd+period</code> and other keybinds can now be bound.
<a href="https://github.com/ghostty-org/ghostty/issues/4591">#4591</a></li>
<li>macOS: Window borders with dark mode now match macOS styling.
<a href="https://github.com/ghostty-org/ghostty/issues/4308">#4308</a></li>
<li>macOS: Auto-update no longer defaults to on. On first run, Ghostty will
ask for your permission to check for updates. The <code>auto-update</code> option
can still be used to configure this.
<a href="https://github.com/ghostty-org/ghostty/issues/4433">#4433</a></li>
<li>macOS: New configurations <code>window-position-x</code> and <code>window-position-y</code>
can be used to set the initial window position.
<a href="https://github.com/ghostty-org/ghostty/issues/3929">#3929</a></li>
<li>macOS: <code>macos-titlebar-style = hidden</code> restores properly after exiting
non-native fullscreen.
<a href="https://github.com/ghostty-org/ghostty/issues/3535">#3535</a></li>
</ul>

<ul>
<li>
<p>GTK: Support for server-side decorations (SSD) has been added.
This utilizes the existing <code>window-decoration</code> configuration option.
The new value is <code>auto</code> which will use SSD if the compositor supports
it and preferes it. A value of <code>server</code> will force SSD (if available).
A value of <code>client</code> will force client-side decorations. And a value
of <code>none</code> will disable decorations entirely.
See <a href="#server-side-decorations-(ssd)-on-linux">Server Side Decorations (SSD) on Linux</a>.
<a href="https://github.com/ghostty-org/ghostty/pull/4630">#4630</a></p>
</li>
<li>
<p>GTK(X11): <code>background-blur</code> is now supported for any window manager
that respects the <code>_KDE_NET_WM_BLUR_BEHIND_REGION</code> atom.
<a href="https://github.com/ghostty-org/ghostty/issues/4403">#4403</a></p>
</li>
<li>
<p>GTK(Wayland): <code>background-blur</code> is now supported for any compositor
supporting the <code>org_kde_kwin_blur_manager</code> protocol (namely, KDE).
<a href="https://github.com/ghostty-org/ghostty/issues/4403">#4403</a></p>
</li>
<li>
<p>GTK: Add new configuration <code>app-notifications</code> to control what toasts
are shown.
<a href="https://github.com/ghostty-org/ghostty/pull/4460">#4460</a></p>
</li>
<li>
<p>GTK: Multiple <code>custom-shader</code> values are now supported (matching macOS)
<a href="https://github.com/ghostty-org/ghostty/pull/5037">#5037</a></p>
</li>
<li>
<p>GTK: A new configuration option <code>gtk-titlebar-hide-when-maximized</code>
(default false) added to hide the titlebar when the window is maximized
(not fullscreen).
<a href="https://github.com/ghostty-org/ghostty/pull/3381">#3381</a></p>
</li>
<li>
<p>GTK: Ghostty can now be pinned in the dock or task manager for
supported desktop environments.
<a href="https://github.com/ghostty-org/ghostty/pull/4930">#4930</a></p>
</li>
<li>
<p>GTK: Dropping files and selected text now works and matches
macOS.
<a href="https://github.com/ghostty-org/ghostty/pull/4211">#4211</a></p>
</li>
<li>
<p>"Open in Ghostty" shortcut for Nautilus is now available
<a href="https://github.com/ghostty-org/ghostty/pull/4816">#4816</a></p>
</li>
<li>
<p>GTK: Fix adwaita tab bars appearing above the titlebar in some
older versions of libadwaita.
<a href="https://github.com/ghostty-org/ghostty/issues/5410">#5410</a></p>
</li>
<li>
<p>GTK: Fix slow startup times when XDG desktop portal is not available.
<a href="https://github.com/ghostty-org/ghostty/pull/5064">#5064</a></p>
</li>
<li>
<p>GTK: <code>fcitx</code> and <code>ibus</code> under both X11 and Wayland work.
<a href="https://github.com/ghostty-org/ghostty/pull/4332">#4332</a></p>
</li>
<li>
<p>GTK: Workaround bug in <code>ibus</code> 1.5.29 that caused deadkey input to
become "stuck."
<a href="https://github.com/ghostty-org/ghostty/pull/3567">#3567</a></p>
</li>
<li>
<p>GTK(X11): When a new window is initially maximized, the <code>_NET_WM_STATE</code>
atom is properly set so the titlebar properly reflects the maximized
state.
<a href="https://github.com/ghostty-org/ghostty/pull/4646">#4646</a></p>
</li>
<li>
<p>GTK: <code>last_tab</code> keybind action works
<a href="https://github.com/ghostty-org/ghostty/pull/5004">#5004</a></p>
</li>
<li>
<p>GTK: The titlebar is automatically hidden when the window is fullscreen
(and restored when the window exits fullscreen).
<a href="https://github.com/ghostty-org/ghostty/pull/5008">#5008</a></p>
</li>
<li>
<p>GTK: Mouse no longer appears when the title changes and
<code>mouse-hide-while-typing</code> is set.
<a href="https://github.com/ghostty-org/ghostty/pull/3345">#3345</a></p>
</li>
<li>
<p>GTK: Fix segfault that would happen with older libadwaita versions
when <code>ctrl+d</code> was used to exit a window.
<a href="https://github.com/ghostty-org/ghostty/pull/4971">#4971</a></p>
</li>
<li>
<p>GTK: Ensure close confirmation appears in more scenarios such as
pressing the "X" in the tab bar.
<a href="https://github.com/ghostty-org/ghostty/pull/4234">#4234</a></p>
</li>
<li>
<p>GTK: OpenGL debug logging is now disabled by default for release
builds but can be configured to be turned back on.
<a href="https://github.com/ghostty-org/ghostty/pull/4662">#4662</a></p>
</li>
<li>
<p>GTK: Windows with libadwaita enabled can now be sized smaller than
482x322.
<a href="https://github.com/ghostty-org/ghostty/pull/4836">#4836</a></p>
</li>
<li>
<p>GTK: Fix a handful of cases where compile-time version checks were
done instead of runtime, disabling behavior when we shouldn't have.
<a href="https://github.com/ghostty-org/ghostty/issues/4783">#4783</a></p>
</li>
<li>
<p>GTK: <code>window-title-font-family</code> now works (previously this was macOS-only)
<a href="https://github.com/ghostty-org/ghostty/issues/4560">#4560</a></p>
</li>
<li>
<p>GTK: Menu separator colors now match the system theme.
<a href="https://github.com/ghostty-org/ghostty/issues/4421">#4421</a></p>
</li>
<li>
<p>GTK: Fix issues with fractional scaling. The terminal should now appear
crisp on GTK displays with fractional scaling.
<a href="https://github.com/ghostty-org/ghostty/issues/4255">#4255</a></p>
</li>
<li>
<p>GTK: A new configuration <code>gtk-custom-css</code> allows loading custom CSS
to theme GTK elements.
<a href="https://github.com/ghostty-org/ghostty/issues/4200">#4200</a></p>
</li>
<li>
<p>GTK: <code>focus-follows-mouse</code> works properly with <code>goto_split</code> keybindings.
<a href="https://github.com/ghostty-org/ghostty/issues/3229">#3229</a></p>
</li>
<li>
<p>GTK: Use <code>gtk-xft-dpi</code> for font scaling on Wayland (previously
we only used the value for X11). This allows the GNOME "Large Text"
setting to work properly.
<a href="https://github.com/ghostty-org/ghostty/pull/4424">#4424</a></p>
</li>
<li>
<p>GTK: <code>ctrl+insert</code> and <code>shift+insert</code> bindings have been added as
secondary defaults for <code>copy</code> and <code>paste</code>, respectively.
<a href="https://github.com/ghostty-org/ghostty/pull/2870">#2870</a></p>
</li>
<li>
<p>GTK: Paste preview text is now monospace.
<a href="https://github.com/ghostty-org/ghostty/pull/4227">#4227</a></p>
</li>
</ul>

<blockquote><p>All of the build changes are minor and should not impact previously
functional builds. Feel free to ignore these changes unless you're
simply curious about them.</p></blockquote>
<ul>
<li>Build: <code>-Dstrip</code> can be used to control binary stripping. Previously,
we automatically stripped release binaries. This can now be configured.
<a href="https://github.com/ghostty-org/ghostty/issues/3945">#3945</a></li>
<li>Build: <code>-Dsentry</code> can be used to explicitly enable or disable Sentry.
Linux builds by default have Sentry disabled. macOS builds by default
have Sentry enabled. Sentry only collects crash logs locally, it does
not transmit them via the network.
<a href="https://github.com/ghostty-org/ghostty/issues/3934">#3934</a></li>
<li>Build: Terminfo/Termcap sources are no longer installed by default.
Note the <em>compiled</em> version is still properly installed so the terminfo
is available. Build flags <code>-Demit-terminfo</code> and <code>-Demit-termcap</code> can be
used to emit the source files.
<a href="https://github.com/ghostty-org/ghostty/pull/5311">#5311</a></li>
<li>Build: Fix incorrect libadwaita pkg-config name.
<a href="https://github.com/ghostty-org/ghostty/pull/4818">#4818</a></li>
</ul>

<p>We plan to release a version 1.1.1 to address some additional bugs that
didn't quite make the 1.1.0 release. We don't expect this release to happen
quickly unless any critical issues or regressions are raised. Therefore,
we recommend all package managers to upgrade to 1.1.0 as quickly as possible.</p>
<p>The focus for the next release will be to continue to resolve some issues
with certain keyboard layouts along with some fundamental issues with
<code>window-step-resize</code> on macOS. Additional unplanned functionality may
be introduced if unexpected contributors appear (thank you!).</p>
<p>We're reaching general wide-scale stability since our initial 1.0 release.
I expect soon we'll move to even longer release cycles (months long) to
allow the development team to focus on larger, more impactful features.</p>

<p>Starting with Ghostty 1.2, we plan to remove the <code>gtk-adwaita</code> option
and force a dependency on libadwaita. libadwaita is defaulted to on
already so unless you've explicitly disabled it, this change should
not affect you.</p>
<blockquote><p><strong>I expect for some this will be a controversial decision</strong>,
so please read this section carefully to understand
our motivation and the diligence we've done in making this decision. If you
still have concerns, please reach out to us on GitHub or Discord.</p></blockquote>
<p>The primary use case for <code>gtk-adwaita = false</code> in earlier versions of Ghostty
was to use it in concert with <code>window-decoration = none</code> to force some
compositors to use server-side decorations (SSD). Note this didn't work
in all cases and was never an explicit configuration goal; it just happened
to work in some cases. With the introduction of
<a href="#server-side-decorations-(ssd)-on-linux">explicit SSD support</a>
in Ghostty 1.1, <em>this workaround is no longer necessary</em>.</p>
<p>Another use case for <code>gtk-adwaita = false</code> was in relation to theming.
Ghostty 1.1 introduces a
<a href="https://github.com/ghostty-org/ghostty/issues/4200"><code>gtk-custom-css</code> option</a>
to easily inject custom CSS to theme GTK elements. We also introduced
more easily targetable class names across our GTK widgets. You could always
use system-wide CSS to theme Ghostty, but this new option makes it easier
to test and apply custom CSS specific to Ghostty.</p>
<p>For Ghostty maintainers, maintaining "classic GTK" and "libadwaita" code
paths is a significant burden, especially in addition to differences in
behavior across GTK and Adwaita versions and the complex interactions
of various Ghostty configurations (all the <code>gtk-</code> and <code>adw-</code> prefixed
options). This has led to a number of bugs and regressions that are
difficult to fix and test without expensive and complex CI setups.</p>
<p>With the SSD support in Ghostty 1.1 and the primary use case for
<code>gtk-adwaita = false</code> no longer necessary, we believe now is a good
time to make this change. We believe this will result in a more stable,
more maintainable, and more feature-rich Ghostty in the future (the last
point because we can go all-in on libadwaita features).</p>
<p>To better feel confident in this decision, we've also reached out directly
to non-GNOME users of Ghostty as well as non-Ghostty users who complained
about the look and feel of Ghostty (namely: bloggers, streamers, and
YouTubers). The feedback was unanimously supportive of this change,
understanding the reasoning and the benefits it would bring and acknowledging
that explicit SSD support addresses the major concerns.</p>
<p>If you have strong opinions on this change, please reach out to us
on Discord or GitHub. Please justify your argument with specific use cases
and scenarios where this change would negatively impact you. Please do not
just say "I don't like it" without providing a reason; it's not helpful.
We are open to feedback and will consider it carefully. Thank you!</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Mini-R1: Reproduce DeepSeek R1 "Aha Moment" (186 pts)]]></title>
            <link>https://www.philschmid.de/mini-deepseek-r1</link>
            <guid>42884834</guid>
            <pubDate>Fri, 31 Jan 2025 05:03:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.philschmid.de/mini-deepseek-r1">https://www.philschmid.de/mini-deepseek-r1</a>, See on <a href="https://news.ycombinator.com/item?id=42884834">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>The release of Deepseek R1 shocked the industry. Why? Well, DeepSeek-R1 is an open model that rivals OpenAI's o1 in complex reasoning tasks, introduced using Group Relative Policy Optimization (GRPO) and RL-focused multi-stage training approach. They not only released the model, but also a research paper on how they did it.</p>
<p>In the <a target="_blank" rel="noopener noreferrer" href="https://arxiv.org/abs/2501.12948">paper</a> they described an "aha moment" when using pure RL to train the model. During this phase, DeepSeek-R1-Zero (the first test of DeepSeek-R1) learns to allocate more thinking time to a problem by reevaluating its initial approach without any human feedback or data describing how to do it.  They describe this as an "aha moment" as:</p>
<blockquote>
<p>This behavior is not only a testament to the model’s growing reasoning abilities but also a captivating example of how reinforcement learning can lead to unexpected and sophisticated outcomes.</p>
</blockquote>
<p>In this blog post we want to recreate the small "aha moment" of DeepSeek-R1 using Group Relative Policy Optimization (GRPO) and the Countdown Game. We will train an open model using reinforcement learning trying to teach it self-verification and search abilities all on its own to solve the Countdown Game.
The Countdown game is a numbers puzzle where players use a set of randomly drawn numbers and basic arithmetic operations (+, -, ×, ÷) to reach or get as close as possible to a target number.</p>
<div><pre><code>Target Number: 952
Available Numbers: 25, 50, 75, 100, 3, 6

(100 × (3 × 3)) + (50 + 6 / 3) = 952
</code></pre></div>
<p>The blog post includes an interactive code which you can run in a Jupyter Notebook on how to train a model using GRPO and Q-Lora. This is a great way to learn how to use TRL and GRPO, but it is very slow and requires a lot of compute. Additionally, I added a <a target="_blank" rel="noopener noreferrer" href="https://github.com/philschmid/deep-learning-pytorch-huggingface/blob/main/training/scripts/run_r1_grpo.py">script</a> and instructions to run the training on Node with multiple GPUs or a SLURM cluster.</p>
<ol>
<li><a href="#1-setup-the-development-environment">Setup the development environment</a></li>
<li><a href="#2-generate-training-samples-with-reasoning-prefix-from-the-countdown-game">Generate training samples with reasoning prefix from the Countdown Game</a></li>
<li><a href="#3-train-the-model-using-grpo-educational-part">Train the model using GRPO (Educational part)</a></li>
<li><a href="#4-distributed-training-example-for-grpo-using-deepspeed-and-vllm">Distributed Training example for GRPO using Deepspeed and vLLM</a></li>
<li><a href="#5-results-and-training-observations">Results and Training Observations</a></li>
</ol>
<p><em>Note: This blog is inspired by <a target="_blank" rel="noopener noreferrer" href="https://x.com/jiayi_pirate/status/1882839370505621655">Jiayi Pan</a> who initially explored the idea and proofed it with a small model.</em></p>
<p>But Before we start, let's take a look at the <a target="_blank" rel="noopener noreferrer" href="https://arxiv.org/abs/2402.03300">Group Relative Policy Optimization (GRPO)</a> and understand how it works.</p>
<p><strong>Group Relative Policy Optimization (GRPO)</strong></p>
<p>Group Relative Policy Optimization (GRPO) is a reinforcement learning algorithm to improve the reasoning capabilities of LLMs. It was introduced in the <a target="_blank" rel="noopener noreferrer" href="https://arxiv.org/abs/2402.03300">DeepSeekMath</a> paper in the context of mathematical reasoning. GRPO modifies the traditional Proximal Policy Optimization (PPO) by eliminating the need for a value function model. Instead, it estimates baselines from group scores, reducing memory usage and computational overhead. GRPO, now also used by the Qwen team, can be used with rule/binary-based Rewards as well as General Reward Models to improve models on helpfulness.</p>
<ol>
<li><strong>Sampling</strong>: Generate multiple outputs for each prompt using the current policy</li>
<li><strong>Reward Scoring</strong>: Each generation is scored using a reward function, could be (rule-based or outcome-based)</li>
<li><strong>Advantage Calculation</strong>: The average reward of the generated outputs is used as a baseline. The advantage of each solution within the group is then computed relative to this baseline. The reward is normalized within a group.</li>
<li><strong>Policy Optimization</strong>: The policy tries to maximize the GRPO objective, which includes the calculated advantages and a KL divergence term. This is different from how PPO implements the KL term within the reward.</li>
</ol>
<p><img src="https://www.philschmid.de/static/blog/mini-deepseek-r1/grpo.png" alt="grpo.png"></p>
<h2 id="1-setup-the-development-environment">1. Setup the development environment</h2>
<p>Our first step is to install Hugging Face Libraries and Pytorch, vllm, and trl, transformers and datasets. If you haven't heard of trl yet, don't worry. It is a new library on top of transformers and datasets, which makes it easier to fine-tune, rlhf, align open LLMs.</p>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="python" data-theme="github-dark github-light"><span data-line=""><span># Install Pytorch &amp; other libraries, make sure to match your GPU driver version</span></span>
<span data-line=""><span>%</span><span>pip install </span><span>"torch==2.5.1"</span><span> tensorboard </span><span>"setuptools&lt;71.0.0"</span><span>  --</span><span>index</span><span>-</span><span>url https:</span><span>//</span><span>download.pytorch.org</span><span>/</span><span>whl</span><span>/</span><span>cu121</span></span>
<span data-line=""> </span>
<span data-line=""><span># Install flash-attn</span></span>
<span data-line=""><span>%</span><span>pip install flash</span><span>-</span><span>attn </span></span>
<span data-line=""> </span>
<span data-line=""><span># Install Hugging Face libraries</span></span>
<span data-line=""><span>%</span><span>pip install  </span><span>--</span><span>upgrade \</span></span>
<span data-line=""><span>  "transformers==4.48.1"</span><span> \</span></span>
<span data-line=""><span>  "datasets==3.1.0"</span><span> \</span></span>
<span data-line=""><span>  "accelerate==1.3.0"</span><span> \</span></span>
<span data-line=""><span>  "hf-transfer==0.1.9"</span><span> \</span></span>
<span data-line=""><span>  "deepspeed==0.15.4"</span><span> \</span></span>
<span data-line=""><span>  "trl==0.14.0"</span></span>
<span data-line=""> </span>
<span data-line=""><span># install vLLM </span></span>
<span data-line=""><span>%</span><span>pip install </span><span>"vllm==0.7.0"</span></span>
<span data-line=""> </span>
<span data-line=""><span>## IMPORTANT: If you want to run the notebook and the interactive cells you also need to install the following libraries:</span></span>
<span data-line=""><span># But first read it the blog post and then decide as they might conflict with the libraries for distributed training. </span></span>
<span data-line=""><span># %pip install "peft==0.14.0" "bitsandbytes==0.45.0"</span></span>
<span data-line=""> </span></code></pre></div></figure>
<p><em>Note: you may need to restart the kernel to use updated packages.</em></p>
<p>We will use the <a target="_blank" rel="noopener noreferrer" href="https://huggingface.co/models">Hugging Face Hub</a> as a remote model versioning service. This means we will automatically push our model, logs and information to the Hub during training. You must register on the <a target="_blank" rel="noopener noreferrer" href="https://huggingface.co/join">Hugging Face</a> for this. After you have an account, we will use the <code>login</code> util from the <code>huggingface_hub</code> package to log into our account and store our token (access key) on the disk.</p>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="python" data-theme="github-dark github-light"><span data-line=""><span>from</span><span> huggingface_hub </span><span>import</span><span> login</span></span>
<span data-line=""> </span>
<span data-line=""><span>login(</span><span>token</span><span>=</span><span>""</span><span>, </span><span>add_to_git_credential</span><span>=</span><span>True</span><span>) </span><span># ADD YOUR TOKEN HERE</span></span></code></pre></div></figure>
<h2 id="2-generate-training-samples-with-reasoning-prefix-from-the-countdown-game">2. Generate training samples with reasoning prefix from the Countdown Game</h2>
<p>We are going to use the <a target="_blank" rel="noopener noreferrer" href="https://huggingface.co/datasets/Jiayi-Pan/Countdown-Tasks-3to4">Jiayi-Pan/Countdown-Tasks-3to4</a> dataset, which contains samples with 3 to 4 numbers and solutions.</p>
<p>As Model we are going to use <a target="_blank" rel="noopener noreferrer" href="https://huggingface.co/Qwen/Qwen2.5-3B-Instruct">Qwen/Qwen2.5-3B-Instruct</a> which is a 3B parameter instruction tuned model. This makes it easier to showcase the "aha moment" as it already follows the prompt format. But you can use the base version of Qwen or other models as well. <a target="_blank" rel="noopener noreferrer" href="https://x.com/jiayi_pirate/status/1882839487417561307">Jiayi-Pan</a> explored that the model needs to have a certain quality to be able to learn the reasoning process, starting with &gt; 1.5B parameters.</p>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="python" data-theme="github-dark github-light"><span data-line=""><span>from</span><span> transformers </span><span>import</span><span> AutoTokenizer</span></span>
<span data-line=""><span>from</span><span> datasets </span><span>import</span><span> load_dataset</span></span>
<span data-line=""> </span>
<span data-line=""><span># Load dataset from Hugging Face Hub</span></span>
<span data-line=""><span>dataset_id </span><span>=</span><span> "Jiayi-Pan/Countdown-Tasks-3to4"</span></span>
<span data-line=""><span>dataset </span><span>=</span><span> load_dataset(dataset_id, </span><span>split</span><span>=</span><span>"train"</span><span>)</span></span>
<span data-line=""><span># select a random subset of 50k samples</span></span>
<span data-line=""><span>dataset </span><span>=</span><span> dataset.shuffle(</span><span>seed</span><span>=</span><span>42</span><span>).select(</span><span>range</span><span>(</span><span>50000</span><span>))</span></span>
<span data-line=""> </span>
<span data-line=""><span># Load tokenizer from Hugging Face Hub to format the dataset to our "r1" prompt </span></span>
<span data-line=""><span>tokenizer </span><span>=</span><span> AutoTokenizer.from_pretrained(</span><span>"Qwen/Qwen2.5-3B-Instruct"</span><span>)</span></span>
<span data-line=""> </span>
<span data-line=""><span># gemerate r1 prompt with a prefix for the model to already start with the thinking process</span></span>
<span data-line=""><span>def</span><span> generate_r1_prompt</span><span>(numbers, target):</span></span>
<span data-line=""><span>    r1_prefix </span><span>=</span><span> [{</span></span>
<span data-line=""><span>        "role"</span><span>: </span><span>"system"</span><span>,</span></span>
<span data-line=""><span>        "content"</span><span>: </span><span>"You are a helpful assistant. You first thinks about the reasoning process in the mind and then provides the user with the answer."</span></span>
<span data-line=""><span>      },</span></span>
<span data-line=""><span>      { </span></span>
<span data-line=""><span>        "role"</span><span>: </span><span>"user"</span><span>,</span></span>
<span data-line=""><span>        "content"</span><span>: </span><span>f</span><span>"Using the numbers </span><span>{</span><span>numbers</span><span>}</span><span>, create an equation that equals </span><span>{</span><span>target</span><span>}</span><span>. You can use basic arithmetic operations (+, -, *, /) and each number can only be used once. Show your work in &lt;think&gt; &lt;/think&gt; tags. And return the final equation and answer in &lt;answer&gt; &lt;/answer&gt; tags, for example &lt;answer&gt; (1 + 2) / 3 = 1 &lt;/answer&gt;."</span></span>
<span data-line=""><span>      },</span></span>
<span data-line=""><span>      {</span></span>
<span data-line=""><span>        "role"</span><span>: </span><span>"assistant"</span><span>,</span></span>
<span data-line=""><span>        "content"</span><span>: </span><span>"Let me solve this step by step.</span><span>\n</span><span>&lt;think&gt;"</span></span>
<span data-line=""><span>      }]</span></span>
<span data-line=""><span>    return</span><span> {</span><span>"prompt"</span><span>: tokenizer.apply_chat_template(r1_prefix, </span><span>tokenize</span><span>=</span><span>False</span><span>, </span><span>continue_final_message</span><span>=</span><span>True</span><span>), </span><span>"target"</span><span>: target}</span></span>
<span data-line=""> </span>
<span data-line=""><span># convert our dataset to the r1 prompt</span></span>
<span data-line=""><span>dataset </span><span>=</span><span> dataset.map(</span><span>lambda</span><span> x: generate_r1_prompt(x[</span><span>"nums"</span><span>], x[</span><span>"target"</span><span>]))</span></span>
<span data-line=""> </span>
<span data-line=""><span># split the dataset into train and test</span></span>
<span data-line=""><span>train_test_split </span><span>=</span><span> dataset.train_test_split(</span><span>test_size</span><span>=</span><span>0.1</span><span>)</span></span>
<span data-line=""> </span>
<span data-line=""><span>train_dataset </span><span>=</span><span> train_test_split[</span><span>"train"</span><span>]</span></span>
<span data-line=""><span>test_dataset </span><span>=</span><span> train_test_split[</span><span>"test"</span><span>]</span></span></code></pre></div></figure>
<h2 id="3-train-the-model-using-grpo-educational-part">3. Train the model using GRPO (Educational part)</h2>
<p><em>Note: Section 3 is shows the basic on how to use TRL and GRPO. If you want to run the interactive cells you need to install <code>bitsandbytes</code> and <code>peft</code> as they are required for the <code>Trainer</code> class. This section is mostly for educational purposes.</em></p>
<p>TRL supports Group Relative Policy Optimization (GRPO) through a dedicated <a target="_blank" rel="noopener noreferrer" href="https://huggingface.co/docs/trl/main/en/grpo_trainer">GRPOTrainer</a> for aligning LLMs from preference data, as described in <a target="_blank" rel="noopener noreferrer" href="https://arxiv.org/abs/2402.03300">DeepSeekMath: Pushing the Limits of Mathematical Reasoning in Open Language Models</a>. The <code>GRPOTrainer</code> is a subclass of the <code>Trainer</code> from the <code>transformers</code> library and supports all the same features, including logging, checkpointing, distributed training, and parameter efficient fine-tuning (PEFT).</p>
<p>The <code>GRPOTrainer</code> supports generic Outcome Reward Models (ORM) and custom reward functions, that can be used to implement Rule-Based Reward Models. In the Deepseek R1 paper they implemented Rule-Based Reward Models to verify the correctness of the generated solutions. In our exmaple we are going to do a similar approach, where we will create 2 reward functions that:</p>
<ol>
<li><strong>Format Reward</strong>: Checks if the generated format is correct <code>&lt;think&gt; [thinking] &lt;/think&gt;&lt;answer&gt; [answer] &lt;/answer&gt;</code></li>
<li><strong>Accuracy Reward</strong>: Extracts the equation from the <code>&lt;answer&gt;</code> tag and evaluates it against the target and if every number is used once.</li>
</ol>
<p><em>Note: Correct <code>&lt;answer&gt;</code> in our example includes the equation, for example <code>&lt;answer&gt; 55 + 36 - 7 - 19 &lt;/answer&gt;</code></em></p>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="python" data-theme="github-dark github-light"><span data-line=""><span>import</span><span> re</span></span>
<span data-line=""> </span>
<span data-line=""><span>def</span><span> format_reward_func</span><span>(completions, target, </span><span>**</span><span>kwargs):</span></span>
<span data-line=""><span>    """</span></span>
<span data-line=""><span>    Format: &lt;think&gt;...&lt;/think&gt;&lt;answer&gt;...&lt;/answer&gt;</span></span>
<span data-line=""><span>    Args:</span></span>
<span data-line=""><span>        completions (list[str]): Generated outputs</span></span>
<span data-line=""><span>        target (list[str]): Expected answers</span></span>
<span data-line=""><span>      </span></span>
<span data-line=""><span>      Returns:</span></span>
<span data-line=""><span>          list[float]: Reward scores</span></span>
<span data-line=""><span>    """</span></span>
<span data-line=""><span>    rewards </span><span>=</span><span> []</span></span>
<span data-line=""> </span>
<span data-line=""><span>    for</span><span> completion, gt </span><span>in</span><span> zip</span><span>(completions, target):</span></span>
<span data-line=""> </span>
<span data-line=""><span>      try</span><span>:</span></span>
<span data-line=""><span>        # add synthetic &lt;think&gt; as its already part of the prompt and prefilled for the assistant to more easily match the regex</span></span>
<span data-line=""><span>        completion </span><span>=</span><span> "&lt;think&gt;"</span><span> +</span><span> completion        </span></span>
<span data-line=""><span>        # Check if the format is correct</span></span>
<span data-line=""><span>        regex </span><span>=</span><span> r</span><span>"</span><span>^</span><span>&lt;think&gt;</span><span>([</span><span>^</span><span>&lt;]</span><span>*</span><span>(?:</span><span>&lt;</span><span>(?!</span><span>/</span><span>?</span><span>think&gt;</span><span>)</span><span>[</span><span>^</span><span>&lt;]</span><span>*</span><span>)</span><span>*</span><span>)</span><span>&lt;</span><span>\/</span><span>think&gt;</span><span>\n</span><span>&lt;answer&gt;</span><span>([\s\S]</span><span>*?</span><span>)</span><span>&lt;</span><span>\/</span><span>answer&gt;</span><span>$</span><span>"</span></span>
<span data-line=""> </span>
<span data-line=""><span>        match </span><span>=</span><span> re.search(regex, completion, re.</span><span>DOTALL</span><span>) </span></span>
<span data-line=""><span>        # if the format is not correct, reward is 0</span></span>
<span data-line=""><span>        if</span><span> match </span><span>is</span><span> None</span><span> or</span><span> len</span><span>(match.groups()) </span><span>!=</span><span> 2</span><span>:</span></span>
<span data-line=""><span>            rewards.append(</span><span>0.0</span><span>)</span></span>
<span data-line=""><span>        else</span><span>:</span></span>
<span data-line=""><span>            rewards.append(</span><span>1.0</span><span>)</span></span>
<span data-line=""><span>      except</span><span> Exception</span><span>:</span></span>
<span data-line=""><span>        rewards.append(</span><span>0.0</span><span>)</span></span>
<span data-line=""><span>    return</span><span> rewards</span></span>
<span data-line=""> </span>
<span data-line=""><span>def</span><span> equation_reward_func</span><span>(completions, target, nums, </span><span>**</span><span>kwargs):</span></span>
<span data-line=""><span>    """</span></span>
<span data-line=""><span>    Evaluates completions based on:</span></span>
<span data-line=""><span>    2. Mathematical correctness of the answer</span></span>
<span data-line=""> </span>
<span data-line=""><span>    Args:</span></span>
<span data-line=""><span>        completions (list[str]): Generated outputs</span></span>
<span data-line=""><span>        target (list[str]): Expected answers</span></span>
<span data-line=""><span>        nums (list[str]): Available numbers</span></span>
<span data-line=""><span>    </span></span>
<span data-line=""><span>    Returns:</span></span>
<span data-line=""><span>        list[float]: Reward scores</span></span>
<span data-line=""><span>    """</span></span>
<span data-line=""><span>    rewards </span><span>=</span><span> []</span></span>
<span data-line=""><span>    for</span><span> completion, gt, numbers </span><span>in</span><span> zip</span><span>(completions, target, nums):</span></span>
<span data-line=""><span>      try</span><span>:</span></span>
<span data-line=""><span>        # add synthetic &lt;think&gt; as its already part of the prompt and prefilled for the assistant to more easily match the regex</span></span>
<span data-line=""><span>        completion </span><span>=</span><span> "&lt;think&gt;"</span><span> +</span><span> completion</span></span>
<span data-line=""><span>        # Check if the format is correct</span></span>
<span data-line=""><span>        match </span><span>=</span><span> re.search(</span><span>r</span><span>"</span><span>&lt;answer&gt;</span><span>(.</span><span>*?</span><span>)</span><span>&lt;</span><span>\/</span><span>answer&gt;</span><span>"</span><span>, completion)</span></span>
<span data-line=""><span>        if</span><span> match </span><span>is</span><span> None</span><span>:</span></span>
<span data-line=""><span>            rewards.append(</span><span>0.0</span><span>)</span></span>
<span data-line=""><span>            continue</span></span>
<span data-line=""><span>        # Extract the "answer" part from the completion</span></span>
<span data-line=""><span>        equation </span><span>=</span><span> match.group(</span><span>1</span><span>).strip()</span></span>
<span data-line=""><span>        # Extract all numbers from the equation</span></span>
<span data-line=""><span>        used_numbers </span><span>=</span><span> [</span><span>int</span><span>(n) </span><span>for</span><span> n </span><span>in</span><span> re.findall(</span><span>r</span><span>'</span><span>\d</span><span>+</span><span>'</span><span>, equation)]</span></span>
<span data-line=""><span>        </span></span>
<span data-line=""><span>        # Check if all numbers are used exactly once</span></span>
<span data-line=""><span>        if</span><span> sorted</span><span>(used_numbers) </span><span>!=</span><span> sorted</span><span>(numbers):</span></span>
<span data-line=""><span>            rewards.append(</span><span>0.0</span><span>)</span></span>
<span data-line=""><span>            continue</span></span>
<span data-line=""><span>        # Define a regex pattern that only allows numbers, operators, parentheses, and whitespace</span></span>
<span data-line=""><span>        allowed_pattern </span><span>=</span><span> r</span><span>'</span><span>^[\d+</span><span>\-</span><span>*/().\s]</span><span>+</span><span>$</span><span>'</span></span>
<span data-line=""><span>        if</span><span> not</span><span> re.match(allowed_pattern, equation):</span></span>
<span data-line=""><span>           rewards.append(</span><span>0.0</span><span>)</span></span>
<span data-line=""><span>           continue</span></span>
<span data-line=""><span>        </span></span>
<span data-line=""><span>        # Evaluate the equation with restricted globals and locals</span></span>
<span data-line=""><span>        result </span><span>=</span><span> eval</span><span>(equation, {</span><span>"__builtins__"</span><span>: </span><span>None</span><span>}, {})</span></span>
<span data-line=""><span>        # Check if the equation is correct and matches the ground truth</span></span>
<span data-line=""><span>        if</span><span> abs</span><span>(</span><span>float</span><span>(result) </span><span>-</span><span> float</span><span>(gt)) </span><span>&lt;</span><span> 1e-5</span><span>:</span></span>
<span data-line=""><span>            rewards.append(</span><span>1.0</span><span>)</span></span>
<span data-line=""><span>        else</span><span>:</span></span>
<span data-line=""><span>            rewards.append(</span><span>0.0</span><span>)</span></span>
<span data-line=""><span>      except</span><span> Exception</span><span>:</span></span>
<span data-line=""><span>            # If evaluation fails, reward is 0</span></span>
<span data-line=""><span>            rewards.append(</span><span>0.0</span><span>) </span></span>
<span data-line=""><span>    return</span><span> rewards</span></span></code></pre></div></figure>
<p>Lets try our reward function with a sample.</p>
<p><em>Note: None of the example starts with <code>&lt;think&gt;</code> as we added it synthetically to the prompt.</em></p>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="python" data-theme="github-dark github-light"><span data-line=""><span>correct_sample_1 </span><span>=</span><span> """We need to find an equation using the numbers 19, 36, 55, and 7</span></span>
<span data-line=""><span>exactly once, with basic arithmetic operations, that equals 65. One possible</span></span>
<span data-line=""><span>combination is 55 + 36 - 19 + 7... &lt;/think&gt;</span></span>
<span data-line=""> </span>
<span data-line=""><span>&lt;answer&gt; 55 + 36 - 7 - 19 &lt;/answer&gt;"""</span></span>
<span data-line=""> </span>
<span data-line=""><span>correct_sample_2 </span><span>=</span><span> """ ... &lt;/think&gt;</span></span>
<span data-line=""> </span>
<span data-line=""><span>&lt;answer&gt; 55 + 36 - 7 - 19 &lt;/answer&gt;"""</span></span>
<span data-line=""> </span>
<span data-line=""><span>wrong_format </span><span>=</span><span> """User: Using the numbers [19, 36, 55, 7], create an equation that equals 65."""</span></span>
<span data-line=""> </span>
<span data-line=""><span>wrong_format_2 </span><span>=</span><span> """To find the equation that equals 79 using the numbers 95, 78, 6, 88, I'll start by adding 88 and 95:                      </span></span>
<span data-line=""><span>95 + 88 = 183                                                                                                              </span></span>
<span data-line=""><span>Now, let's subtract 104 from 183 to get 79:</span></span>
<span data-line=""><span>183 - 104 = 79</span></span>
<span data-line=""><span>&lt;think&gt; 183 - 104 = 79 &lt;/think&gt;&lt;think&gt; 183 - 104 = 79 &lt;/think&gt;&lt;answer&gt; 183 - 104 = 79 &lt;/answer&gt;"""</span></span>
<span data-line=""> </span>
<span data-line=""><span>wrong_result </span><span>=</span><span> """ ... &lt;/think&gt;</span></span>
<span data-line=""> </span>
<span data-line=""><span>&lt;answer&gt; 55 + 36 - 7 - 18 &lt;/answer&gt;"""</span></span>
<span data-line=""> </span>
<span data-line=""> </span>
<span data-line=""><span>test_rewards </span><span>=</span><span> format_reward_func(</span><span>completions</span><span>=</span><span>[correct_sample_1, correct_sample_2, wrong_format, wrong_format_2, wrong_result], </span><span>target</span><span>=</span><span>[</span><span>"65"</span><span>, </span><span>"65"</span><span>, </span><span>"65"</span><span>, </span><span>"65"</span><span>, </span><span>"65"</span><span>], </span><span>nums</span><span>=</span><span>[[</span><span>19</span><span>, </span><span>36</span><span>, </span><span>55</span><span>, </span><span>7</span><span>]] </span><span>*</span><span> 5</span><span>)</span></span>
<span data-line=""><span>assert</span><span> test_rewards </span><span>==</span><span> [</span><span>1.0</span><span>, </span><span>1.0</span><span>, </span><span>0.0</span><span>, </span><span>0.0</span><span>, </span><span>1.0</span><span>], </span><span>"Reward function is not working"</span></span>
<span data-line=""><span>test_rewards </span><span>=</span><span> equation_reward_func(</span><span>completions</span><span>=</span><span>[correct_sample_1, correct_sample_2, wrong_format, wrong_format_2, wrong_result], </span><span>target</span><span>=</span><span>[</span><span>"65"</span><span>, </span><span>"65"</span><span>, </span><span>"65"</span><span>, </span><span>"65"</span><span>, </span><span>"65"</span><span>], </span><span>nums</span><span>=</span><span>[[</span><span>19</span><span>, </span><span>36</span><span>, </span><span>55</span><span>, </span><span>7</span><span>]] </span><span>*</span><span> 5</span><span>)</span></span>
<span data-line=""><span>assert</span><span> test_rewards </span><span>==</span><span> [</span><span>1.0</span><span>, </span><span>1.0</span><span>, </span><span>0.0</span><span>, </span><span>0.0</span><span>, </span><span>0.0</span><span>], </span><span>"Reward function is not working"</span></span></code></pre></div></figure>
<p>This looks good, now lets define our remaining training parameters, create a trainer and start training.</p>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="python" data-theme="github-dark github-light"><span data-line=""><span>from</span><span> trl </span><span>import</span><span> GRPOConfig, GRPOTrainer, get_peft_config, ModelConfig</span></span>
<span data-line=""> </span>
<span data-line=""><span># our model we are going to use as policy </span></span>
<span data-line=""><span>model_config </span><span>=</span><span> ModelConfig(</span></span>
<span data-line=""><span>    model_name_or_path</span><span>=</span><span>"Qwen/Qwen2.5-3B-Instruct"</span><span>,</span></span>
<span data-line=""><span>    torch_dtype</span><span>=</span><span>"bfloat16"</span><span>,</span></span>
<span data-line=""><span>    attn_implementation</span><span>=</span><span>"flash_attention_2"</span><span>,</span></span>
<span data-line=""><span>    use_peft</span><span>=</span><span>True</span><span>,</span></span>
<span data-line=""><span>    load_in_4bit</span><span>=</span><span>True</span><span>,</span></span>
<span data-line=""><span>)</span></span>
<span data-line=""> </span>
<span data-line=""><span># Hyperparameters</span></span>
<span data-line=""><span>training_args </span><span>=</span><span> GRPOConfig(</span></span>
<span data-line=""><span>    output_dir</span><span>=</span><span>"qwen-r1-aha-moment"</span><span>,</span></span>
<span data-line=""><span>    learning_rate</span><span>=</span><span>5e-7</span><span>,</span></span>
<span data-line=""><span>    lr_scheduler_type</span><span>=</span><span>"cosine"</span><span>,</span></span>
<span data-line=""><span>    logging_steps</span><span>=</span><span>10</span><span>,</span></span>
<span data-line=""><span>    max_steps</span><span>=</span><span>100</span><span>,</span></span>
<span data-line=""><span>    per_device_train_batch_size</span><span>=</span><span>1</span><span>,</span></span>
<span data-line=""><span>    gradient_accumulation_steps</span><span>=</span><span>1</span><span>,</span></span>
<span data-line=""><span>    gradient_checkpointing</span><span>=</span><span>True</span><span>,</span></span>
<span data-line=""><span>    gradient_checkpointing_kwargs</span><span>=</span><span>{</span><span>"use_reentrant"</span><span>: </span><span>False</span><span>},</span></span>
<span data-line=""><span>    bf16</span><span>=</span><span>True</span><span>,</span></span>
<span data-line=""><span>    # GRPO specific parameters</span></span>
<span data-line=""><span>    max_prompt_length</span><span>=</span><span>256</span><span>,</span></span>
<span data-line=""><span>    max_completion_length</span><span>=</span><span>1024</span><span>, </span><span># max length of the generated output for our solution</span></span>
<span data-line=""><span>    num_generations</span><span>=</span><span>2</span><span>,</span></span>
<span data-line=""><span>    beta</span><span>=</span><span>0.001</span><span>,</span></span>
<span data-line=""><span>    </span></span>
<span data-line=""><span>)</span></span>
<span data-line=""><span>trainer </span><span>=</span><span> GRPOTrainer(</span></span>
<span data-line=""><span>    model</span><span>=</span><span>model_config.model_name_or_path,</span></span>
<span data-line=""><span>    reward_funcs</span><span>=</span><span>[format_reward_func, equation_reward_func],</span></span>
<span data-line=""><span>    args</span><span>=</span><span>training_args,</span></span>
<span data-line=""><span>    train_dataset</span><span>=</span><span>train_dataset,</span></span>
<span data-line=""><span>    eval_dataset</span><span>=</span><span>test_dataset,</span></span>
<span data-line=""><span>    peft_config</span><span>=</span><span>get_peft_config(model_config),</span></span>
<span data-line=""><span>)</span></span></code></pre></div></figure>
<p>We can start our training by calling the <code>train</code> method on the trainer instance.</p>
<p><em>Note: Reinforcement Training is very slow and compute intensive. Running a single step on 1x L4 with Q-LoRA, Batch size of 1 and only 2 generations per samples takes &gt;20 minutes.</em></p>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="python" data-theme="github-dark github-light"><span data-line=""><span># Train and push the model to the Hub</span></span>
<span data-line=""><span>trainer.train()</span></span>
<span data-line=""><span># Save model</span></span>
<span data-line=""><span>trainer.save_model(training_args.output_dir)</span></span></code></pre></div></figure>
<h2 id="4-distributed-training-example-for-grpo-using-deepspeed-and-vllm">4. Distributed Training example for GRPO using Deepspeed and vLLM</h2>
<p>More than 20 minutes per step with only 2 generations per sample is not feasible. We need to scale up our training. Hugging Face TRL added support for distributed training with Deepspeed and using vLLM for faster generation. I preprared a <a target="_blank" rel="noopener noreferrer" href="https://github.com/philschmid/deep-learning-pytorch-huggingface/blob/main/training/scripts/run_r1_grpo.py">run_r1_grpo.py</a> script and a <a target="_blank" rel="noopener noreferrer" href="https://github.com/philschmid/deep-learning-pytorch-huggingface/blob/main/training/receipes/grpo-qwen-2.5-3b-deepseek-r1-countdown.yaml">receipes/grpo-qwen-2.5-3b-deepseek-r1-countdown.yaml</a> config file to run the training.</p>
<p>This configuration is tested and validated on a Node with 4x H100 80GBs, where a single step takes around 45-60s, as we can leverage vLLM for generation and DeepSpeed for distributed training. Therefore we need to make sure we correctly set the <code>num_processes</code> to the number of GPUs you have - 1 as the last one will be used with vLLM for Generation. If you are using more GPUS you need to change the <code>vllm_device</code> in the config file to last index GPU, e.g. if you have 8 GPUs you need to set <code>vllm_device=7</code> and your <code>num_processes</code> to 7.</p>
<p>command to run the training:</p>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="bash" data-theme="github-dark github-light"><span data-line=""><span>accelerate</span><span> launch</span><span> --num_processes</span><span> 3</span><span> --config_file</span><span> configs/accelerate_configs/deepspeed_zero3.yaml</span><span> scripts/run_r1_grpo.py</span><span> --config</span><span> receipes/grpo-qwen-2.5-3b-deepseek-r1-countdown.yaml</span></span></code></pre></div></figure>
<p>With the optimized distributed training a single step with 8 generations per sample on 4x H100 80GBs takes around 45-60s. The full training for 450 steps takes around 6 hours.</p>
<h2 id="5-results-and-training-observations">5. Results and Training Observations</h2>
<p>The script saves random completions to the <code>completion_samples</code> folder, which you can use to inspect the model's progress. It includes <code>completion_samples.txt</code> and <code>success_completion_samples.txt</code>. The <code>completion_samples.txt</code> includes all completions, while the <code>success_completion_samples.txt</code> which correctly solves the equation. Below you can find the interesating training obeserations on how the performance changes over time, as well as the Tensornoard logs and successfull reasoning samples.</p>
<p>The model with checkpoints for every 25th step can be found at <a target="_blank" rel="noopener noreferrer" href="https://huggingface.co/philschmid/qwen-2.5-3b-r1-countdown">philschmid/qwen-2.5-3b-r1-countdown</a>.</p>
<h3 id="hyperparameters">Hyperparameters</h3>
<p>I started the experiment using the hyperparameters from the <a target="_blank" rel="noopener noreferrer" href="https://arxiv.org/abs/2402.03300">DeepSeekMath</a> paper with a learning rate of 1e-6 and a beta (KL coefficient) of 0.04, which led to unstable training runs after around 150 steps. I ran some small ablations and decreased both the learning rate to 5e-7 and the beta to 0.001, based on a test from <a target="_blank" rel="noopener noreferrer" href="https://hijkzzz.notion.site/unraveling-rlhf-and-its-variants-engineering-insights#147d9a33ecc9806090f3d5c749d31f05">OpenRLHF</a>. I coulnd't test how increasing the <code>num_generations</code> from 8 to 64 would affect the training. 64 is the generation value, which was used in the DeepSeekMath paper. All other parameters can be found in the <a target="_blank" rel="noopener noreferrer" href="https://github.com/philschmid/deep-learning-pytorch-huggingface/blob/main/training/receipes/grpo-qwen-2.5-3b-deepseek-r1-countdown.yaml">grpo-qwen-2.5-3b-deepseek-r1-countdown.yaml</a> config file.</p>
<h3 id="training-observations">Training Observations:</h3>
<ul>
<li>At ~50 steps the model has learned the correct format <code>&lt;think&gt;...&lt;/think&gt;\n&lt;answer&gt;...&lt;/answer&gt;</code>.</li>
<li>At 100 steps the success rate for solving the equation is around 25%. The model starts to "reason" with words see examples below.</li>
<li>At 200 steps the performance seems to converge much slower and we are at ~40% success rate. The model starts to learn a new "format" where it solves the equation similar to how you would do it programmatically, by trying different combinations and reviewing the results, see "Successfull Reasoning Samples between step 200 and 450".</li>
<li>At 450 steps we have 50% success rate for solving the equation. The performance still improves slowly and the model kept its new format form from step 200.</li>
</ul>
<p>I have 3 potential assumptions why the model shifts from "word reasoning" to "programmatic execution":</p>
<ol>
<li>Qwen 2.5 3B is not strong enough or to small, Deepseek mentions that you need a very strong base model.</li>
<li>The reward functions are not good enough defined and it reward hacks the model to solve the equation. We could try to force it to use words, e.g. having a number to word frequency condition. (We don't know much about the reward functions from Deepseek)</li>
<li>Only training on the Countdown Game tasks might force the model naturally to learn the most effective way to solve the equation as no other formats are required.</li>
<li>We didn't train the model long enough, in the R1 paper they showed visuals of training for over 8000 steps.</li>
</ol>
<h4 id="tensorboard-results">Tensorboard Results</h4>
<p><img src="https://www.philschmid.de/static/blog/mini-deepseek-r1/tensorboard-r1.png" alt="Qwen R1 Tensorboard results"></p>
<h4 id="successfull-reasoning-samples-up-to-step-200">Successfull Reasoning Samples up to step 200</h4>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="xml" data-theme="github-dark github-light"><span data-line=""><span>&lt;</span><span>think</span><span>&gt; First, I need to think about the numbers we have: 14, 70, and 80. To get 85, I think 80 might be a good starting point because it's right in between 85. If I subtract or add 80, it won't lead to 85 easily. Next, 70 seems to be a good intermediate number, especially to use in conjunction with 14. </span></span>
<span data-line=""><span>Now, I can think about different combinations using addition, subtraction and multiplication/division. If I take 80 - 70 = 10, which is not needed. So, I need to find a way to use 14. If I subtract 14 from 80, I get 66, which still isn't 85. If I subtract 70 from 80, I get 10 again, this isn't constructive yet. </span></span>
<span data-line=""><span>Multiplication could create numbers larger than the target 85. Let's consider division: If I divide 70 by 14, I get 5. Then if I add this result to 80, I get 85. This combination seems promising: 80 - (70 / 14) = 80 - 5 = 75, this still isn't quite right. Let me correct my approach: Let's use division and then addition. If I take 80 / (70 / 14) → 80 / 5 = 16, and then 80 - 16 = 64, still incorrect. Let me simplify: 80 / (70 / 14) → 80 / 5 = 16, and then 80 - 16 gives 64 again, let me correct: 80 - (70 / 14) → 80 - 5 = 75, but I need 85. Thus I will use the combinations in a slightly different order to insert numbers: I get 80 + (70 / 14) = 80 + 5 = 85&lt;/</span><span>think</span><span>&gt;</span></span>
<span data-line=""><span>&lt;</span><span>answer</span><span>&gt; 80 + (70 / 14) &lt;/</span><span>answer</span><span>&gt;</span></span></code></pre></div></figure>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="xml" data-theme="github-dark github-light"><span data-line=""><span>&lt;</span><span>think</span><span>&gt; First, I need to consider how I can use the numbers 1, 21, and 90 to reach 68. I can try different combinations of operations. Let's try to use subtraction and addition. If I subtract 90 from 21, I get -69, which is too far from 68. Now, if I add 1 to 90, I get 91, which is also not right. Another way is to see what happens if I subtract 21 from 90, which gives me 69. This is closer but still not 68. Let me use multiplication instead of subtraction. 90 * 1 = 90. Now, if I try to reduce this slightly by subtracting 21, I am not getting close to 68.</span></span>
<span data-line=""><span>Now, let's try another multiplication. I'll think of 1 * (larger value) + (smaller value). Let's try 1 * 90 + 21. This evaluates to 90 + 21 = 111, which is too much. Instead, I will try: 90 / 1 + 21 - 7. But this gives a division by 7, which seems complex. Let's re-evaluate: I'll use 1 to divide 21: 21 / 1 = 21. Now, subtract 21 from 90, and add 1, we have 90 - 21 = 69, using one...</span></span>
<span data-line=""><span>Hey, wait on re-evaluating I will subtract 21 from 90, and include 1 to complete the solution: 90 - (21 + 1) which would be 68.&lt;/</span><span>think</span><span>&gt;</span></span>
<span data-line=""><span>&lt;</span><span>answer</span><span>&gt; 90 - (21 + 1) &lt;/</span><span>answer</span><span>&gt;</span></span></code></pre></div></figure>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="xml" data-theme="github-dark github-light"><span data-line=""><span>&lt;</span><span>think</span><span>&gt; First, I need to consider the numbers we have: 59, 80, and 66. I need to use these numbers to get 45. Let's try to use subtraction first since it can quickly reduce large numbers.</span></span>
<span data-line=""><span>Let's see if we can get close by subtracting or adding these numbers. If I subtract 66 from 80, I get 14. Then I need to make this 14 equal 45 when combined with 59. That gives me 14 + 59 = 73, which is too high.</span></span>
<span data-line=""><span>Now let's try adding numbers. If I add 59 and 66, I get 125. Then I would need to subtract 80 from 125 to get 45, but 80 is too large to fit well with this.</span></span>
<span data-line=""><span>Let me try a different approach. What if I subtract 66 from 80 first and then add 59? That would be 14 + 59 = 73, which is still not 45.</span></span>
<span data-line=""><span>Hmm, I need to think of another combination. What if I start with 59 and then add 80 and subtract 66? That would be (59 + 80) - 66, let me calculate it. That equals 139 - 66, which is 73.</span></span>
<span data-line=""><span>That's still not 45, so let me try rearranging it slightly: maybe 80 - 66 + 59 would be closer to 45. Calculating again: 80 - 66 is 14, then adding 59 gives 73.</span></span>
<span data-line=""><span>This way doesn't work either. Let's flip this: maybe (59 + 66) - 80. Let me check: that's 125 - 80, which equals 45.&lt;/</span><span>think</span><span>&gt;</span></span>
<span data-line=""><span>&lt;</span><span>answer</span><span>&gt;(59 + 66) - 80&lt;/</span><span>answer</span><span>&gt;</span></span></code></pre></div></figure>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="xml" data-theme="github-dark github-light"><span data-line=""><span>&lt;</span><span>think</span><span>&gt; First, I need to find a combination of the numbers 61, 4, 94, and 21 that can be manipulated using basic arithmetic operations to equal 50. One way to approach this is to look for numbers that can be used to reach a target number close to 50 and then adjust with the remaining numbers.</span></span>
<span data-line=""><span>Let's try combining 94 and 21 first:</span></span>
<span data-line=""><span>94 + 21 = 115</span></span>
<span data-line=""><span>Now, we need to get from 115 to 50. We can try subtracting 65:</span></span>
<span data-line=""><span>115 - 65 = 50</span></span>
<span data-line=""><span>Now we need to find a way to get 65 using the remaining numbers 61 and 4. We can try:</span></span>
<span data-line=""><span>61 - 4 = 57</span></span>
<span data-line=""><span>Now we need to get from 57 to 65. Adding 8 would give us that:</span></span>
<span data-line=""><span>57 + 8 = 65</span></span>
<span data-line=""><span>So, we need to find a way to get 8 using 61 and 4. We can try:</span></span>
<span data-line=""><span>61 - 94 = -36</span></span>
<span data-line=""><span>This is negative, so let's try dividing:</span></span>
<span data-line=""><span>61 / 94 = 0.648987...</span></span>
<span data-line=""><span>This is not helping, so let's try multiplication and division in a different way:</span></span>
<span data-line=""><span>(61 - 4) * (94 / 21) = 57 * 4.476... = 254.4</span></span>
<span data-line=""><span>This is not working either. Let's try a different approach:</span></span>
<span data-line=""><span>(94 - 61) = 33</span></span>
<span data-line=""><span>Now we have:</span></span>
<span data-line=""><span>33 + 21 = 54</span></span>
<span data-line=""><span>We need to adjust from 54 to 50, so we can:</span></span>
<span data-line=""><span>54 - 4 = 50</span></span>
<span data-line=""><span>So, the equation becomes:</span></span>
<span data-line=""><span>(94 - 61) + (21 - 4) = 50</span></span>
<span data-line=""><span>&lt;/</span><span>think</span><span>&gt;</span></span>
<span data-line=""><span>&lt;</span><span>answer</span><span>&gt;(94 - 61) + (21 - 4)&lt;/</span><span>answer</span><span>&gt;</span></span></code></pre></div></figure>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="xml" data-theme="github-dark github-light"><span data-line=""><span>&lt;</span><span>think</span><span>&gt; First, I'll consider the possibility of directly subtracting two numbers to get close to 31. If I subtract 57 from 63, I get 7. Now, if I subtract this 7 from 25, I get 25 - 7 = 18. Far from 31, so this doesn't work.</span></span>
<span data-line=""><span>Next, let's try adding and subtracting. Dividing 63 by 25 will give a decimal, so that's unlikely to work. Now, let's see if adding and subtracting in another order could work. For example, let's try 63 - 25, and then we see this gets us 38. Now, we need a way to get to 31 from here. Subtracting 7 from 38 would work, but we can't figure out how to create that 7 from the given numbers.</span></span>
<span data-line=""><span>Hmm, let me try to incorporate all numbers by adding and subtracting. If I try 63 + 25, I get 88. This is quite far from 31, but if 88 - 57, I get 31 exactly!</span></span>
<span data-line=""><span>This seems to be the equation: 63 + 25 - 57 equals 31.</span></span>
<span data-line=""><span>&lt;/</span><span>think</span><span>&gt;</span></span>
<span data-line=""><span>&lt;</span><span>answer</span><span>&gt; 63 + 25 - 57 &lt;/</span><span>answer</span><span>&gt;</span></span></code></pre></div></figure>
<h4 id="successfull-reasoning-samples-between-step-200-and-450">Successfull Reasoning Samples between step 200 and 450</h4>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="xml" data-theme="github-dark github-light"><span data-line=""><span>&lt;</span><span>think</span><span>&gt; We need to use the numbers 39, 16, and 55 with basic arithmetic operations to get 78. Let's try different combinations:</span></span>
<span data-line=""><span>- 55 + 39 - 16 = 84 - 16 = 68 (too low)</span></span>
<span data-line=""><span>- 55 + 16 - 39 = 71 - 39 = 32 (too low)</span></span>
<span data-line=""><span>- 55 - 16 + 39 = 39 + 39 = 78 (this works)</span></span>
<span data-line=""><span>So, the equation is 55 - 16 + 39 = 78. &lt;/</span><span>think</span><span>&gt;</span></span>
<span data-line=""><span>&lt;</span><span>answer</span><span>&gt; 55 - 16 + 39 &lt;/</span><span>answer</span><span>&gt;</span></span></code></pre></div></figure>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="xml" data-theme="github-dark github-light"><span data-line=""><span>&lt;</span><span>think</span><span>&gt; We need to use the numbers 21, 5, and 40 with basic arithmetic operations to get 24. Let's try different combinations:</span></span>
<span data-line=""><span>- 21 - 5 - 40 = -15</span></span>
<span data-line=""><span>- 21 - 5 + 40 = 56</span></span>
<span data-line=""><span>- 21 + 5 - 40 = -14</span></span>
<span data-line=""><span>- 21 * 5 / 40 = 2.1 (not an integer, let's try another)</span></span>
<span data-line=""><span>- 40 * 5 / 21 = 9.52 (not 24)</span></span>
<span data-line=""><span>- 40 / 5 - 21 = 9 - 21 = -12</span></span>
<span data-line=""><span>- 5 * 40 / 21 = 100 / 21 ~= 4.76 (not 24)</span></span>
<span data-line=""><span>- 5 + 40 - 21 = 24 ! This works.</span></span>
<span data-line=""><span>&lt;/</span><span>think</span><span>&gt;</span></span>
<span data-line=""><span>&lt;</span><span>answer</span><span>&gt; 5 + 40 - 21 &lt;/</span><span>answer</span><span>&gt;</span></span></code></pre></div></figure>
<figure data-rehype-pretty-code-figure=""><div><pre><code data-language="xml" data-theme="github-dark github-light"><span data-line=""><span>&lt;</span><span>think</span><span>&gt; We need to use the numbers 75, 99, 62, and 34 with basic arithmetic operations to get 72. Let's try different combinations:</span></span>
<span data-line=""><span>- 99 - 75 + 62 - 34 = 92 - 34 = 58 (too high)</span></span>
<span data-line=""><span>- 99 - 75 - 62 + 34 = 24 - 62 + 34 = -38 + 34 = -4 (too low)</span></span>
<span data-line=""><span>- 99 + 75 - 62 - 34 = 174 - 96 = 78 (too high)</span></span>
<span data-line=""><span>- 99 + 75 - 62 + 34 = 174 + 34 - 62 = 208 - 62 = 146 (too high)</span></span>
<span data-line=""><span>- 99 - 75 + 62 + 34 = 24 + 96 = 120 (too high)</span></span>
<span data-line=""><span>- 75 + 99 - 62 - 34 = 174 - 96 = 78 (too high)</span></span>
<span data-line=""><span>- 75 + 99 - 62 + 34 = 174 + 34 - 62 = 208 - 62 = 146 (too high)</span></span>
<span data-line=""><span>- 75 + 62 - 99 + 34 = 137 - 99 + 34 = 38 + 34 = 72</span></span>
<span data-line=""><span>So, 75 + 62 - 99 + 34 equals 72.</span></span>
<span data-line=""><span>&lt;/</span><span>think</span><span>&gt;</span></span>
<span data-line=""><span>&lt;</span><span>answer</span><span>&gt; 75 + 62 - 99 + 34 &lt;/</span><span>answer</span><span>&gt;</span></span></code></pre></div></figure>
<h2 id="conclusion">Conclusion</h2>
<p>The release of DeepSeek R1 and its research paper might be breakpoint for the open-science and open-source development. Just a week after DeepSeek release, we've been able to reproduce a simple version of R1 learned "reasoning" using GRPO and the Countdown Game. While our implementation focuses on a specific task rather than general reasoning and convergence into a very specific "reasoning" format, it shows that the method is working.</p>
<p>In our mini R1 experiment we used GRPO, with two rule-based reward but already required significant compute: 4 H100 GPUs running for 6 hours to complete just 450 training steps on a 3B parameter model. This gives us an idea of the compute needs that you will need to scale Reinforcement Learning. Deepseek ran a 671B model for over 8000 steps and they probably did many ablations.</p>
<p>Looking in to 2025, it's clear that we are on the cusp of even more significant progress. RL will become more accessible and user-friendly, more researchers and developers will explore its potential, but also require amount of more compute as before and compared to supervised fine-tuning.</p>
<p>I am excited for 2025. If you are have any question or ideas feel free to reach out to me.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[sixos: A nix OS without systemd [video] (171 pts)]]></title>
            <link>https://media.ccc.de/v/38c3-sixos-a-nix-os-without-systemd</link>
            <guid>42884727</guid>
            <pubDate>Fri, 31 Jan 2025 04:35:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://media.ccc.de/v/38c3-sixos-a-nix-os-without-systemd">https://media.ccc.de/v/38c3-sixos-a-nix-os-without-systemd</a>, See on <a href="https://news.ycombinator.com/item?id=42884727">Hacker News</a></p>
Couldn't get https://media.ccc.de/v/38c3-sixos-a-nix-os-without-systemd: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Rubywm: An X11 window manager in pure Ruby (138 pts)]]></title>
            <link>https://github.com/vidarh/rubywm</link>
            <guid>42884556</guid>
            <pubDate>Fri, 31 Jan 2025 03:51:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/vidarh/rubywm">https://github.com/vidarh/rubywm</a>, See on <a href="https://news.ycombinator.com/item?id=42884556">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">A Ruby X11 Window Manager</h2><a id="user-content-a-ruby-x11-window-manager" aria-label="Permalink: A Ruby X11 Window Manager" href="#a-ruby-x11-window-manager"></a></p>
<p dir="auto"><strong>WARNING</strong>:</p>
<p dir="auto">This is experimental. It will eat your cat and burn down your house,
format your hard drive and post all your secrets to Facebook.</p>
<p dir="auto">Also it <em>will</em> likely crash on you.</p>
<p dir="auto">If you're not comfortable figuring out how to recover from an X session
where your window manager is gone and lots of your windows appears to have
disappeared ... somewhere, and you might not be able to get focus to a
terminal window without switching to the text console, this is not yet
for you.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">So why should I run this?</h2><a id="user-content-so-why-should-i-run-this" aria-label="Permalink: So why should I run this?" href="#so-why-should-i-run-this"></a></p>
<p dir="auto">You almost certainly shouldn't.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">But what is it then, at least?</h2><a id="user-content-but-what-is-it-then-at-least" aria-label="Permalink: But what is it then, at least?" href="#but-what-is-it-then-at-least"></a></p>
<p dir="auto">It's a minimalist (currently &lt;1K lines) pure Ruby (including the X11
driver) X11 window manager. It is focused on tiling, but allows you to
choose to assign a tiling layout to specific desktops or leave them
floating. Currently <em>whether or not you use tiling or floating layout</em>
there is <em>no window decoration</em> and windows are not draggable or
resizable by pulling on borders (but you can do that with Windows
key + left/right mouse button)</p>
<p dir="auto">Like bspwm, which was an inspiration, the wm supports <em>no</em> keyboard
handling - all keyboard handling is deferred to separate tools like
sxhkd. Unlike bspwm this WM has no dedicated IPC mechanism. Instead,
so far, all communication happens via X11 ClientMessage events, which
means any tool, like xdotool etc. that can produce those events can
control the WM.</p>
<p dir="auto">It currently does <em>not</em> do anything to facilitate working on multiple
monitors, as in my current setup I'm only using a single monitor for
my Linux machine.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Screenshots</h2><a id="user-content-screenshots" aria-label="Permalink: Screenshots" href="#screenshots"></a></p>
<p dir="auto">Note that most of what you see here is not the wm. The wm decoration is minimalist: a 1 pixel rectangular frame. Nothing else. But people want to see screenshots anyway, so here:</p>
<p><a href="https://github.com/vidarh/rubywm/blob/8eed458c1b9f9d25372df3932ab1237149bb90c0/screenshots/2024-01-11_19-45.png?raw=true"><img src="https://github.com/vidarh/rubywm/raw/8eed458c1b9f9d25372df3932ab1237149bb90c0/screenshots/2024-01-11_19-45.png?raw=true"></a>
<a href="https://github.com/vidarh/rubywm/blob/master/screenshots/2024-01-11_20-04.png?raw=true"><img src="https://github.com/vidarh/rubywm/raw/master/screenshots/2024-01-11_20-04.png?raw=true"></a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Why did you write this?</h2><a id="user-content-why-did-you-write-this" aria-label="Permalink: Why did you write this?" href="#why-did-you-write-this"></a></p>
<p dir="auto">It started with mild frustration that bspwm handled my desire for one of
my virtual desktops to have floating windows by default poorly. It's
possible, but didn't work great for me. It also frustrated me that my
file manager was visible on all the virtual desktops instead of just the
floating one. I also happened to know an X11 WM can be <em>really</em>
minimal to start off with.</p>
<p dir="auto">So I ditched bspwm, and translated TinyWM - a really minimal C wm - to
Ruby, made that my main wm, and gradually started adding the features
I needed, drawing a lot of inspiration from the code of KatriaWM to
figure out how to make my experience gradually less painful.</p>
<p dir="auto">This has been my only WM since that day, and I now feel that <em>I</em> have
rough parity in term of the features <em>I</em> use with bspwm. That does
not mean it will have parity for you - it lacks lots of things. It
also does not mean there aren't plenty of bugs, because there are.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Will you add...?</h2><a id="user-content-will-you-add" aria-label="Permalink: Will you add...?" href="#will-you-add"></a></p>
<p dir="auto">Maybe. As long as it can either 1) be done with little code, and/or
2) be done by you, and/or 3) it can easily be kept as a separate gem.</p>
<p dir="auto">Talk to me. But please respect I'm primarily releasing this "as is", and
I'm not committing to supporting this - I <em>do not care</em> if you decide
it doesn't work for you and is horrible. I'll think it's great if you
get some utility out of this code, though. But my goal is not a big user
base. Or <em>a</em> user base.</p>
<p dir="auto">My goal is a functional, minimalist WM that works <em>for me</em>. And so, I'll
help if it's not compromising my own goal. To the extent our goals are
not compatible, I'm happy to e.g. split out generic/reusable
functionality so people can fork this and we can still benefit from
sharing the bits where we do agree how things should be.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Pre-requisites:</h2><a id="user-content-pre-requisites" aria-label="Permalink: Pre-requisites:" href="#pre-requisites"></a></p>
<ul dir="auto">
<li>
<p dir="auto">sxhkd or similar is needed to handle input, as this WM does
<em>not</em> listen to keybindings other than grabbing windows+ left/right
mouse button for move and resize.</p>
</li>
<li>
<p dir="auto">A recent version of Ruby. I currently use 3.2.2</p>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to run</h2><a id="user-content-how-to-run" aria-label="Permalink: How to run" href="#how-to-run"></a></p>
<p dir="auto">This is a subset of my .xinitrc.</p>
<p dir="auto">WARNING: You probably want to try this in a vm or something first and
see if it works for you:</p>
<div dir="auto" data-snippet-clipboard-copy-content="  (sxhkd 2>&amp;1 | logger -t sxhkd) &amp;
  (cd ~/Desktop/Projects/wm ; ruby rubywm.rb 2>&amp;1 | logger -t rubywm) &amp;
  
  while true do
    wait
    sleep 5
  done"><pre>  (sxhkd <span>2&gt;&amp;1</span> <span>|</span> logger -t sxhkd) <span>&amp;</span>
  (cd <span>~</span>/Desktop/Projects/wm <span>;</span> ruby rubywm.rb <span>2&gt;&amp;1</span> <span>|</span> logger -t rubywm) <span>&amp;</span>
  
  <span>while</span> <span>true</span> <span>do</span>
    <span>wait</span>
    sleep 5
  <span>done</span></pre></div>
<p dir="auto">For most "normal" window managers, people tend to start the window
manager last and let it end the X session when it quits, but since
this is in development, I'm not going to do that because most stuff on
my desktop can survive my WM crashing and being restarted just fine,
as it should be, but will obviously get killed if the X session dies.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Using with sxhkd</h2><a id="user-content-using-with-sxhkd" aria-label="Permalink: Using with sxhkd" href="#using-with-sxhkd"></a></p>
<p dir="auto">This is my related integration with sxhkd from my sxhkd config, but any
app that supports sending XClientMessage events can work:</p>
<div data-snippet-clipboard-copy-content="    # Full screen
    super + f
    	/home/vidarh/bin/xclimsg -mpw focused _NET_WM_STATE 2 _NET_WM_STATE_FULLSCREEN 0 2
    
    # Shift Focus
    super + {Left,Down,Up,Right}
    	/home/vidarh/bin/xclimsg -mpw focused _RWM_FOCUS {Left,Down,Up,Right}
    
    # Shift direction
    super + shift + d
    	/home/vidarh/bin/xclimsg -mpw focused _RWM_SHIFT_DIRECTION 0
    
    # Swap node layout
    super + shift + l
    	/home/vidarh/bin/xclimsg -mpw focused _RWM_SWAP_NODES 0
    
    # Move
    super + shift + {Left,Down,Up,Right}
    	/home/vidarh/bin/xclimsg -mpw focused _RWM_MOVE {Left,Down,Up,Right}
    
    super + F1
    	/home/vidarh/bin/xclimsg -mpw focused _NET_RESTACK_WINDOW 2 0 0
    
    super + F2
    	/home/vidarh/bin/xclimsg -mpw focused _NET_RESTACK_WINDOW 2 0 1
    
    # Focus desktop
    super + {1-9,0}
    	/home/vidarh/bin/xclimsg -mp _NET_CURRENT_DESKTOP {0-8,9}
    
    # Move to desktop
    super + shift + {1-9,0}
    	/home/vidarh/bin/xclimsg -mpw focused _NET_WM_DESKTOP {0-8,9}"><pre><code>    # Full screen
    super + f
    	/home/vidarh/bin/xclimsg -mpw focused _NET_WM_STATE 2 _NET_WM_STATE_FULLSCREEN 0 2
    
    # Shift Focus
    super + {Left,Down,Up,Right}
    	/home/vidarh/bin/xclimsg -mpw focused _RWM_FOCUS {Left,Down,Up,Right}
    
    # Shift direction
    super + shift + d
    	/home/vidarh/bin/xclimsg -mpw focused _RWM_SHIFT_DIRECTION 0
    
    # Swap node layout
    super + shift + l
    	/home/vidarh/bin/xclimsg -mpw focused _RWM_SWAP_NODES 0
    
    # Move
    super + shift + {Left,Down,Up,Right}
    	/home/vidarh/bin/xclimsg -mpw focused _RWM_MOVE {Left,Down,Up,Right}
    
    super + F1
    	/home/vidarh/bin/xclimsg -mpw focused _NET_RESTACK_WINDOW 2 0 0
    
    super + F2
    	/home/vidarh/bin/xclimsg -mpw focused _NET_RESTACK_WINDOW 2 0 1
    
    # Focus desktop
    super + {1-9,0}
    	/home/vidarh/bin/xclimsg -mp _NET_CURRENT_DESKTOP {0-8,9}
    
    # Move to desktop
    super + shift + {1-9,0}
    	/home/vidarh/bin/xclimsg -mpw focused _NET_WM_DESKTOP {0-8,9}
</code></pre></div>
<p dir="auto">The <code>_RWM</code> events are custom for this WM. The others works on other
EWMH compatible wms.</p>
<p dir="auto">xclimsg is from <a href="https://github.com/phillbush/xclimsg">https://github.com/phillbush/xclimsg</a>
I intend to "build in" the same client code in rubywm to avoid that
external dependency. Alternatively you can e.g. use xdotool or similar</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[TopoNets: High performing vision and language models with brain-like topography (216 pts)]]></title>
            <link>https://arxiv.org/abs/2501.16396</link>
            <guid>42884338</guid>
            <pubDate>Fri, 31 Jan 2025 02:58:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2501.16396">https://arxiv.org/abs/2501.16396</a>, See on <a href="https://news.ycombinator.com/item?id=42884338">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2501.16396">View PDF</a>
    <a href="https://arxiv.org/html/2501.16396v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>Neurons in the brain are organized such that nearby cells tend to share similar functions. AI models lack this organization, and past efforts to introduce topography have often led to trade-offs between topography and task performance. In this work, we present TopoLoss, a new loss function that promotes spatially organized topographic representations in AI models without significantly sacrificing task performance. TopoLoss is highly adaptable and can be seamlessly integrated into the training of leading model architectures. We validate our method on both vision (ResNet-18, ResNet-50, ViT) and language models (GPT-Neo-125M, NanoGPT), collectively TopoNets. TopoNets are the highest-performing supervised topographic models to date, exhibiting brain-like properties such as localized feature processing, lower dimensionality, and increased efficiency. TopoNets also predict responses in the brain and replicate the key topographic signatures observed in the brain's visual and language cortices. Together, this work establishes a robust and generalizable framework for integrating topography into leading model architectures, advancing the development of high-performing models that more closely emulate the computational strategies of the human brain.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Mayukh Deb [<a href="https://arxiv.org/show-email/3224565a/2501.16396" rel="nofollow">view email</a>]      <br>    <strong>[v1]</strong>
        Mon, 27 Jan 2025 01:09:59 UTC (38,378 KB)<br>
</p></div></div>]]></description>
        </item>
    </channel>
</rss>