<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 01 Jul 2024 12:30:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Show HN: I created an After Effects alternative (198 pts)]]></title>
            <link>https://pikimov.com/</link>
            <guid>40843867</guid>
            <pubDate>Mon, 01 Jul 2024 08:57:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pikimov.com/">https://pikimov.com/</a>, See on <a href="https://news.ycombinator.com/item?id=40843867">Hacker News</a></p>
<div id="readability-page-1" class="page">

    <!-- GA 4 -->
<!-- Google tag (gtag.js) -->



        


        <section>

            <div>
                <h2>
                    <img id="logo" src="https://pikimov.com/images/logo-pikimov.png" alt="Pikimov logo">
                </h2>

                <h2>Online motion design and video editor</h2>
                <p><span><img src="https://pikimov.com/images/icon-checkbox.png" alt="checkbox">100% Free</span>
                    <span><img src="https://pikimov.com/images/icon-checkbox.png" alt="checkbox">No sign up</span>
                    <span><img src="https://pikimov.com/images/icon-checkbox.png" alt="checkbox">No AI</span>
                </p>

                <p><a id="b_start" title="pikimov app" href="https://pikimov.com/app/">Get started</a>

            </p></div>
            
            <video muted="" autoplay="" playsinline="" loop="" disablepictureinpicture="" poster="https://pikimov.com/videos/cover-pikimov-home-03.webp">
                <source src="https://pikimov.com/videos/pikimov-home-03.mp4" type="video/mp4">
            </video>

            <p><a href="https://pikimov.com/"><img src="https://pikimov.com/images/en-flag.png" alt="english"></a>
                <a href="https://pikimov.com/alternative-fr/"><img src="https://pikimov.com/images/fr-flag.png" alt="francais"></a>
            </p>

        </section>



        <section>
            <div>
                <h3>
                   Free alternative to editors such as Adobe After Effects
                </h3>
                <div>

                    <ul>
                        <li>Web-based: nothing to install</li>
                        <li>For Windows, macOS and Linux</li>
                        <li>Import images, videos, audios and 3D models</li>
                        <li>Video effects</li>
                        <li>Layer based compositions</li>
                        <li>Keyframes animation system</li>
                        <li>Your files stay on your computer, they are not uploaded to a server</li>
                    </ul>

                </div>

                <div>
                    <p>
                        Create motion design compositions, quickly crop videos online, or trim videos to make them shorter. 
                    </p>
                    
                    <p>
                        <a href="https://pikimov.com/faq">Read the FAQ</a> to find answers about common questions: Firefox support, stand-alone version...
                    </p>
                </div>

            </div>
            <p>
                                <iframe width="560" height="315" src="https://www.youtube.com/embed/pQPxcnpRgIM?si=A8sZl-yWTtCZ_YjL" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>
            </p>
        </section>


        <section>

            <a id="b_start2" title="Pikimov video editor" href="https://pikimov.com/app/">Start video editor</a>

        </section>

        <section id="features">

            <div>
                <h3>Web based editor</h3>
                <p>Nothing to install, works on Windows, macOS and Linux</p>
                <video muted="" autoplay="" playsinline="" loop="" disablepictureinpicture="">
                    <source src="https://pikimov.com/videos/features/web.mp4" type="video/mp4">
                </video>   
            </div>

            <div>
                <h3>Large choice of imports</h3>
                <p>Mix images, videos, audio files and 3D models (glb format)</p>
                <video muted="" autoplay="" playsinline="" loop="" disablepictureinpicture="">
                    <source src="https://pikimov.com/videos/features/imports.mp4" type="video/mp4">
                </video>   
            </div>

            <div>
                <h3>Layers based editing</h3>
                                <p>Layer based compositions, similar to After Effects workflow</p>
                <video muted="" autoplay="" playsinline="" loop="" disablepictureinpicture="">
                    <source src="https://pikimov.com/videos/features/layers.mp4" type="video/mp4">
                </video>   
            </div>

            <div>
                <h3>Video effects</h3>
                <p>Color correction, blur, glitch effects, green screen removal...</p>
                <video muted="" autoplay="" playsinline="" loop="" disablepictureinpicture="">
                    <source src="https://pikimov.com/videos/features/video_fx.mp4" type="video/mp4">
                </video>   
            </div>

            <div>
                <h3>Keyframed</h3>
                <p>Keyframes animation system to animate almost all properties</p>
                <video muted="" autoplay="" playsinline="" loop="" disablepictureinpicture="">
                    <source src="https://pikimov.com/videos/features/keyframes.mp4" type="video/mp4">
                </video>   
            </div>

            <div>
                <h3>Privacy respected</h3>
                <p>Your files stay on your computer, they are not uploaded to a server</p>
                <video muted="" autoplay="" playsinline="" loop="" disablepictureinpicture="">
                    <source src="https://pikimov.com/videos/features/privacy.mp4" type="video/mp4">
                </video>   
            </div>

<!--
    ok on slow connextions 
-->

        </section>

        <p><a href="https://www.producthunt.com/posts/pikimov?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-pikimov" target="_blank"><img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=457708&amp;theme=light" alt="Pikimov - free online motion design and video editor | Product Hunt" width="250" height="54"></a>
        </p>

        

    

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[My finetuned models beat OpenAI's GPT-4 (117 pts)]]></title>
            <link>https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation.html</link>
            <guid>40843848</guid>
            <pubDate>Mon, 01 Jul 2024 08:53:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation.html">https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation.html</a>, See on <a href="https://news.ycombinator.com/item?id=40843848">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="quarto-content">
<!-- sidebar -->
<!-- margin-sidebar -->
    
<!-- main -->
<main id="quarto-document-content">




<p><a href="https://mlops.systems/posts/2024-06-25-evaluation-finetuning-manual-dataset.html">My last post</a> outlined the kinds of evaluation I need and want to understand how well my finetuned LLM is performing in the task of structured data extraction from press releases. Let’s start with the core metric I’m interested in, accuracy, and then later we can dive into some of the other evaluation metrics as well.</p>
<section id="tldr">
<h2 data-anchor-id="tldr">TL;DR</h2>
<p>The headline for this post could well have been: finetuned models beat OpenAI, but evals were a bit painful to implement. There’s a lot of hidden code here in this post and it was slow to run. This step was the first time during the work for the finetuning course where I felt the pain and tradeoffs around the choice to finetune. I can see that without a system of some kind to handle this, the complexity of maintaining it all will start to mount up. But more on that at the end!</p>
<p>This is a long post with lots of detail. I’ve tried to minimise the amount of code you see, but if you want to see how the charts or evals were done, expand the ‘code’ sections. If you’re interested in cutting straight to the aggregate results, <a href="#final-aggregate-scores-for-the-models">click here</a> to go to the end of this post. (To see the rest of the blog posts about this project, please click <a href="https://mlops.systems/index.html#category=isafpr">here</a>. Some context: I’m doing some finetuning as part of <a href="https://maven.com/parlance-labs/fine-tuning">the Hamel Husain / Dan Becker Finetuning course on Maven</a> using <a href="https://mlops.systems/posts/2024-03-24-publishing-afghanistan-dataset-huggingface.html">some data I collected and labeled</a> a few years back that makes for a cool little test of how good it works for structured data extraction.)</p>
</section>
<section id="loading-the-datasets">
<h2 data-anchor-id="loading-the-datasets">Loading the datasets</h2>
<p>The data is all available on the Hugging Face Hub in a public repository, and for the purposes of these evaluations I want to use the <code>test</code> split of the dataset since none of our models have seen that data yet so it’s good for determining how well our model performs with new data.</p>
<div data-execution_count="1">
<details>
<summary>Code</summary>
<div id="cb1"><pre><code><span id="cb1-1"><span>from</span> datasets <span>import</span> load_dataset</span>
<span id="cb1-2"><span>import</span> pandas <span>as</span> pd</span>
<span id="cb1-3"><span>from</span> rich <span>import</span> <span>print</span></span>
<span id="cb1-4"></span>
<span id="cb1-5">test_dataset <span>=</span> load_dataset(<span>"strickvl/isafpressreleases"</span>, split<span>=</span><span>"test"</span>)</span>
<span id="cb1-6">test_df <span>=</span> pd.DataFrame(test_dataset)</span></code></pre></div>
</details>
</div>
<div data-execution_count="2">
<pre><code>Dataset({
    features: ['name', 'eventrefnumber', 'text', 'StartDate', 'eventtype', 'province', 'citydistrict', 'village', 'targetgroup', 'commander', 'position', 'minkilled', 'mincaptured', 'capturedcharacterisation', 'killedcharacterisation', 'killq', 'captureq', 'killcaptureraid', 'airstrike', 'noshotsfired', 'dataprocessed', 'flagged', 'glossarymeta', 'minleaderskilled', 'minfacilitatorskilled', 'minleaderscaptured', 'minfacilitatorscaptured', 'leaderq'],
    num_rows: 724
})</code></pre>
</div>
<p>We’ll first add an extra column to our <code>DataFrame</code> and then make a prediction for each and every row in the dataset. We’ll store a copy of the prediction to the column so as to make sure we don’t have to do this compute-intensive step repeatedly.</p>
<p>But first we’ll assemple the data as Pydantic objects so as to handle validation and other quality of life features.</p>
<div data-execution_count="3">
<details>
<summary>Code</summary>
<div id="cb4"><pre><code><span id="cb4-1"><span>from</span> enum <span>import</span> Enum</span>
<span id="cb4-2"><span>from</span> typing <span>import</span> Dict, Set, Annotated, Optional</span>
<span id="cb4-3"><span>from</span> pydantic <span>import</span> BaseModel, Field, validator, ValidationInfo</span>
<span id="cb4-4"><span>from</span> datetime <span>import</span> date</span>
<span id="cb4-5"></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span>class</span> EventType(<span>str</span>, Enum):</span>
<span id="cb4-8">    airstrike <span>=</span> <span>"airstrike"</span></span>
<span id="cb4-9">    detention <span>=</span> <span>"detention"</span></span>
<span id="cb4-10">    captureandkill <span>=</span> <span>"captureandkill"</span></span>
<span id="cb4-11">    insurgentskilled <span>=</span> <span>"insurgentskilled"</span></span>
<span id="cb4-12">    exchangeoffire <span>=</span> <span>"exchangeoffire"</span></span>
<span id="cb4-13">    civiliancasualty <span>=</span> <span>"civiliancasualty"</span></span>
<span id="cb4-14"></span>
<span id="cb4-15"></span>
<span id="cb4-16"><span>class</span> Province(<span>str</span>, Enum):</span>
<span id="cb4-17">    badakhshan <span>=</span> <span>"badakhshan"</span></span>
<span id="cb4-18">    badghis <span>=</span> <span>"badghis"</span></span>
<span id="cb4-19">    baghlan <span>=</span> <span>"baghlan"</span></span>
<span id="cb4-20">    balkh <span>=</span> <span>"balkh"</span></span>
<span id="cb4-21">    bamyan <span>=</span> <span>"bamyan"</span></span>
<span id="cb4-22">    day_kundi <span>=</span> <span>"day_kundi"</span></span>
<span id="cb4-23">    farah <span>=</span> <span>"farah"</span></span>
<span id="cb4-24">    faryab <span>=</span> <span>"faryab"</span></span>
<span id="cb4-25">    ghazni <span>=</span> <span>"ghazni"</span></span>
<span id="cb4-26">    ghor <span>=</span> <span>"ghor"</span></span>
<span id="cb4-27">    helmand <span>=</span> <span>"helmand"</span></span>
<span id="cb4-28">    herat <span>=</span> <span>"herat"</span></span>
<span id="cb4-29">    jowzjan <span>=</span> <span>"jowzjan"</span></span>
<span id="cb4-30">    kabul <span>=</span> <span>"kabul"</span></span>
<span id="cb4-31">    kandahar <span>=</span> <span>"kandahar"</span></span>
<span id="cb4-32">    kapisa <span>=</span> <span>"kapisa"</span></span>
<span id="cb4-33">    khost <span>=</span> <span>"khost"</span></span>
<span id="cb4-34">    kunar <span>=</span> <span>"kunar"</span></span>
<span id="cb4-35">    kunduz <span>=</span> <span>"kunduz"</span></span>
<span id="cb4-36">    laghman <span>=</span> <span>"laghman"</span></span>
<span id="cb4-37">    logar <span>=</span> <span>"logar"</span></span>
<span id="cb4-38">    nangarhar <span>=</span> <span>"nangarhar"</span></span>
<span id="cb4-39">    nimroz <span>=</span> <span>"nimroz"</span></span>
<span id="cb4-40">    nuristan <span>=</span> <span>"nuristan"</span></span>
<span id="cb4-41">    paktya <span>=</span> <span>"paktya"</span></span>
<span id="cb4-42">    paktika <span>=</span> <span>"paktika"</span></span>
<span id="cb4-43">    panjshir <span>=</span> <span>"panjshir"</span></span>
<span id="cb4-44">    parwan <span>=</span> <span>"parwan"</span></span>
<span id="cb4-45">    samangan <span>=</span> <span>"samangan"</span></span>
<span id="cb4-46">    sar_e_pul <span>=</span> <span>"sar_e_pul"</span></span>
<span id="cb4-47">    takhar <span>=</span> <span>"takhar"</span></span>
<span id="cb4-48">    uruzgan <span>=</span> <span>"uruzgan"</span></span>
<span id="cb4-49">    wardak <span>=</span> <span>"wardak"</span></span>
<span id="cb4-50">    zabul <span>=</span> <span>"zabul"</span></span>
<span id="cb4-51"></span>
<span id="cb4-52"></span>
<span id="cb4-53"><span>class</span> TargetGroup(<span>str</span>, Enum):</span>
<span id="cb4-54">    taliban <span>=</span> <span>"taliban"</span></span>
<span id="cb4-55">    haqqani <span>=</span> <span>"haqqani"</span></span>
<span id="cb4-56">    criminals <span>=</span> <span>"criminals"</span></span>
<span id="cb4-57">    aq <span>=</span> <span>"aq"</span></span>
<span id="cb4-58">    hig <span>=</span> <span>"hig"</span></span>
<span id="cb4-59">    let <span>=</span> <span>"let"</span></span>
<span id="cb4-60">    imu <span>=</span> <span>"imu"</span></span>
<span id="cb4-61">    judq <span>=</span> <span>"judq"</span></span>
<span id="cb4-62">    iju <span>=</span> <span>"iju"</span></span>
<span id="cb4-63">    hik <span>=</span> <span>"hik"</span></span>
<span id="cb4-64">    ttp <span>=</span> <span>"ttp"</span></span>
<span id="cb4-65">    other <span>=</span> <span>"other"</span></span>
<span id="cb4-66"></span>
<span id="cb4-67"></span>
<span id="cb4-68"><span>def</span> validate_event_type(value: <span>str</span>):</span>
<span id="cb4-69">    valid_values <span>=</span> [</span>
<span id="cb4-70">        <span>"airstrike"</span>,</span>
<span id="cb4-71">        <span>"detention"</span>,</span>
<span id="cb4-72">        <span>"captureandkill"</span>,</span>
<span id="cb4-73">        <span>"insurgentskilled"</span>,</span>
<span id="cb4-74">        <span>"exchangeoffire"</span>,</span>
<span id="cb4-75">        <span>"civiliancasualty"</span>,</span>
<span id="cb4-76">    ]</span>
<span id="cb4-77">    <span>if</span> value.lower() <span>not</span> <span>in</span> valid_values:</span>
<span id="cb4-78">        <span>return</span> <span>"other"</span></span>
<span id="cb4-79">    <span>return</span> value.lower()</span>
<span id="cb4-80"></span>
<span id="cb4-81"></span>
<span id="cb4-82"><span>def</span> validate_province(value: <span>str</span>):</span>
<span id="cb4-83">    valid_values <span>=</span> [</span>
<span id="cb4-84">        <span>"badakhshan"</span>,</span>
<span id="cb4-85">        <span>"badghis"</span>,</span>
<span id="cb4-86">        <span>"baghlan"</span>,</span>
<span id="cb4-87">        <span>"balkh"</span>,</span>
<span id="cb4-88">        <span>"bamyan"</span>,</span>
<span id="cb4-89">        <span>"day_kundi"</span>,</span>
<span id="cb4-90">        <span>"farah"</span>,</span>
<span id="cb4-91">        <span>"faryab"</span>,</span>
<span id="cb4-92">        <span>"ghazni"</span>,</span>
<span id="cb4-93">        <span>"ghor"</span>,</span>
<span id="cb4-94">        <span>"helmand"</span>,</span>
<span id="cb4-95">        <span>"herat"</span>,</span>
<span id="cb4-96">        <span>"jowzjan"</span>,</span>
<span id="cb4-97">        <span>"kabul"</span>,</span>
<span id="cb4-98">        <span>"kandahar"</span>,</span>
<span id="cb4-99">        <span>"kapisa"</span>,</span>
<span id="cb4-100">        <span>"khost"</span>,</span>
<span id="cb4-101">        <span>"kunar"</span>,</span>
<span id="cb4-102">        <span>"kunduz"</span>,</span>
<span id="cb4-103">        <span>"laghman"</span>,</span>
<span id="cb4-104">        <span>"logar"</span>,</span>
<span id="cb4-105">        <span>"nangarhar"</span>,</span>
<span id="cb4-106">        <span>"nimroz"</span>,</span>
<span id="cb4-107">        <span>"nuristan"</span>,</span>
<span id="cb4-108">        <span>"paktya"</span>,</span>
<span id="cb4-109">        <span>"paktika"</span>,</span>
<span id="cb4-110">        <span>"panjshir"</span>,</span>
<span id="cb4-111">        <span>"parwan"</span>,</span>
<span id="cb4-112">        <span>"samangan"</span>,</span>
<span id="cb4-113">        <span>"sar_e_pul"</span>,</span>
<span id="cb4-114">        <span>"takhar"</span>,</span>
<span id="cb4-115">        <span>"uruzgan"</span>,</span>
<span id="cb4-116">        <span>"wardak"</span>,</span>
<span id="cb4-117">        <span>"zabul"</span>,</span>
<span id="cb4-118">    ]</span>
<span id="cb4-119">    <span>if</span> value.lower() <span>not</span> <span>in</span> valid_values:</span>
<span id="cb4-120">        <span>return</span> <span>"other"</span></span>
<span id="cb4-121">    <span>return</span> value.lower()</span>
<span id="cb4-122"></span>
<span id="cb4-123"></span>
<span id="cb4-124"><span>def</span> validate_target_group(value: <span>str</span>):</span>
<span id="cb4-125">    valid_values <span>=</span> [</span>
<span id="cb4-126">        <span>"taliban"</span>,</span>
<span id="cb4-127">        <span>"haqqani"</span>,</span>
<span id="cb4-128">        <span>"criminals"</span>,</span>
<span id="cb4-129">        <span>"aq"</span>,</span>
<span id="cb4-130">        <span>"hig"</span>,</span>
<span id="cb4-131">        <span>"let"</span>,</span>
<span id="cb4-132">        <span>"imu"</span>,</span>
<span id="cb4-133">        <span>"judq"</span>,</span>
<span id="cb4-134">        <span>"iju"</span>,</span>
<span id="cb4-135">        <span>"hik"</span>,</span>
<span id="cb4-136">        <span>"ttp"</span>,</span>
<span id="cb4-137">        <span>"other"</span>,</span>
<span id="cb4-138">    ]</span>
<span id="cb4-139">    <span>if</span> value.lower() <span>not</span> <span>in</span> valid_values:</span>
<span id="cb4-140">        <span>return</span> <span>"other"</span></span>
<span id="cb4-141">    <span>return</span> value.lower()</span>
<span id="cb4-142"></span>
<span id="cb4-143"></span>
<span id="cb4-144"><span>class</span> IsafEvent(BaseModel):</span>
<span id="cb4-145">    name: <span>str</span> <span>=</span> Field(</span>
<span id="cb4-146">        description<span>=</span><span>"A title or name for the event which summarises the event as a headline"</span></span>
<span id="cb4-147">    )</span>
<span id="cb4-148">    text: Optional[<span>str</span>] <span>=</span> Field(description<span>=</span><span>"The full text of the press release"</span>)</span>
<span id="cb4-149">    start_date: date <span>=</span> Field(</span>
<span id="cb4-150">        description<span>=</span><span>"The start date of the event in YYYY-MM-DD format"</span></span>
<span id="cb4-151">    )</span>
<span id="cb4-152">    event_type: Set[Annotated[<span>str</span>, Field(validator<span>=</span>validate_event_type)]] <span>=</span> Field(</span>
<span id="cb4-153">        description<span>=</span><span>"The event type. Can be multiple types."</span></span>
<span id="cb4-154">    )</span>
<span id="cb4-155">    province: Set[Annotated[<span>str</span>, Field(validator<span>=</span>validate_province)]] <span>=</span> Field(</span>
<span id="cb4-156">        description<span>=</span><span>"The province in which the event occurred. Can be multiple provinces."</span></span>
<span id="cb4-157">    )</span>
<span id="cb4-158">    target_group: Set[Annotated[<span>str</span>, Field(validator<span>=</span>validate_target_group)]] <span>=</span> Field(</span>
<span id="cb4-159">        description<span>=</span><span>"The group that was targetted during the event. Can be multiple groups."</span></span>
<span id="cb4-160">    )</span>
<span id="cb4-161">    min_killed: <span>int</span> <span>=</span> Field(</span>
<span id="cb4-162">        description<span>=</span><span>"The minimum number of people killed during the event"</span></span>
<span id="cb4-163">    )</span>
<span id="cb4-164">    min_captured: <span>int</span> <span>=</span> Field(</span>
<span id="cb4-165">        description<span>=</span><span>"The minimum number of people captured during the event"</span></span>
<span id="cb4-166">    )</span>
<span id="cb4-167">    killq: <span>bool</span> <span>=</span> Field(</span>
<span id="cb4-168">        description<span>=</span><span>"Whether someone was killed or not during the event"</span></span>
<span id="cb4-169">    )</span>
<span id="cb4-170">    captureq: <span>bool</span> <span>=</span> Field(</span>
<span id="cb4-171">        description<span>=</span><span>"Whether someone was captured or not during the event"</span></span>
<span id="cb4-172">    )</span>
<span id="cb4-173">    killcaptureraid: <span>bool</span> <span>=</span> Field(</span>
<span id="cb4-174">        description<span>=</span><span>"Whether the event was a so-called 'kill-capture raid'."</span></span>
<span id="cb4-175">    )</span>
<span id="cb4-176">    airstrike: <span>bool</span> <span>=</span> Field(</span>
<span id="cb4-177">        description<span>=</span><span>"Whether an airstrike was used during the event"</span></span>
<span id="cb4-178">    )</span>
<span id="cb4-179">    noshotsfired: <span>bool</span> <span>=</span> Field(</span>
<span id="cb4-180">        description<span>=</span><span>"Whether no shots were fired during the event"</span></span>
<span id="cb4-181">    )</span>
<span id="cb4-182">    min_leaders_killed: <span>int</span> <span>=</span> Field(</span>
<span id="cb4-183">        description<span>=</span><span>"The minimum number of leaders killed during the event"</span></span>
<span id="cb4-184">    )</span>
<span id="cb4-185">    min_leaders_captured: <span>int</span> <span>=</span> Field(</span>
<span id="cb4-186">        description<span>=</span><span>"The minimum number of leaders captured during the event"</span></span>
<span id="cb4-187">    )</span>
<span id="cb4-188">    predictions: Dict[<span>str</span>, <span>str</span>] <span>=</span> Field(</span>
<span id="cb4-189">        default<span>=</span>{},</span>
<span id="cb4-190">        description<span>=</span><span>"The predictions from the model. Keys are the model name and the value is the prediction"</span>,</span>
<span id="cb4-191">    )</span>
<span id="cb4-192"></span>
<span id="cb4-193">    <span>class</span> Config:</span>
<span id="cb4-194">        arbitrary_types_allowed <span>=</span> <span>True</span></span></code></pre></div>
</details>
</div>
<p>Here’s what a couple of examples of our training data looks like as Pydantic models when we pass them in:</p>
<div data-execution_count="4">
<details>
<summary>Code</summary>
<div id="cb5"><pre><code><span id="cb5-1"><span>from</span> typing <span>import</span> List</span>
<span id="cb5-2"></span>
<span id="cb5-3">events: List[IsafEvent] <span>=</span> []</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span>for</span> i, row <span>in</span> <span>list</span>(test_df.iterrows()):</span>
<span id="cb5-6">    event_types <span>=</span> <span>set</span>(</span>
<span id="cb5-7">        eventtype.strip().lower() <span>for</span> eventtype <span>in</span> row[<span>"eventtype"</span>].split(<span>","</span>)</span>
<span id="cb5-8">    )</span>
<span id="cb5-9">    provinces <span>=</span> <span>set</span>(province.strip().lower() <span>for</span> province <span>in</span> row[<span>"province"</span>].split(<span>","</span>))</span>
<span id="cb5-10">    target_groups <span>=</span> <span>set</span>(</span>
<span id="cb5-11">        target_group.strip().lower() <span>for</span> target_group <span>in</span> row[<span>"targetgroup"</span>].split(<span>","</span>)</span>
<span id="cb5-12">    )</span>
<span id="cb5-13"></span>
<span id="cb5-14">    events.append(</span>
<span id="cb5-15">        IsafEvent(</span>
<span id="cb5-16">            name<span>=</span>row[<span>"name"</span>],</span>
<span id="cb5-17">            text<span>=</span>row[<span>"text"</span>],</span>
<span id="cb5-18">            start_date<span>=</span>row[<span>"StartDate"</span>].to_pydatetime().date(),</span>
<span id="cb5-19">            event_type<span>=</span>event_types,</span>
<span id="cb5-20">            province<span>=</span>provinces,</span>
<span id="cb5-21">            target_group<span>=</span>target_groups,</span>
<span id="cb5-22">            min_killed<span>=</span><span>int</span>(row[<span>"minkilled"</span>]),</span>
<span id="cb5-23">            min_captured<span>=</span><span>int</span>(row[<span>"mincaptured"</span>]),</span>
<span id="cb5-24">            killq<span>=</span>row[<span>"killq"</span>] <span>==</span> <span>"true"</span>,</span>
<span id="cb5-25">            captureq<span>=</span>row[<span>"captureq"</span>] <span>==</span> <span>"true"</span>,</span>
<span id="cb5-26">            killcaptureraid<span>=</span>row[<span>"killcaptureraid"</span>] <span>==</span> <span>"true"</span>,</span>
<span id="cb5-27">            airstrike<span>=</span>row[<span>"airstrike"</span>] <span>==</span> <span>"true"</span>,</span>
<span id="cb5-28">            noshotsfired<span>=</span>row[<span>"noshotsfired"</span>] <span>==</span> <span>"true"</span>,</span>
<span id="cb5-29">            min_leaders_killed<span>=</span><span>int</span>(row[<span>"minleaderskilled"</span>]),</span>
<span id="cb5-30">            min_leaders_captured<span>=</span><span>int</span>(row[<span>"minleaderscaptured"</span>]),</span>
<span id="cb5-31">        )</span>
<span id="cb5-32">    )</span>
<span id="cb5-33"></span>
<span id="cb5-34"><span>print</span>(events[:<span>2</span>])</span></code></pre></div>
</details>
<div>
<pre><span>[</span>
    <span>IsafEvent</span><span>(</span>
        <span>name</span>=<span>'5'</span>,
        <span>text</span>=<span>'2013-01-S-025\n\nKABUL, Afghanistan (Jan. 25, 2013)\nDuring a security operation in Andar district, </span>
<span>Ghazni province, yesterday, an Afghan and coalition force killed the Taliban leader, Alaudin. Alaudin oversaw a </span>
<span>group of insurgents responsible for conducting remote-controlled improvised explosive device and small-arms fire </span>
<span>attacks against Afghan and coalition forces. Prior to his death, Alaudin was planning attacks against Afghan </span>
<span>National Police in Ghazni province.'</span>,
        <span>start_date</span>=<span>datetime</span><span>.date</span><span>(</span><span>2013</span>, <span>1</span>, <span>24</span><span>)</span>,
        <span>event_type</span>=<span>{</span><span>'insurgentskilled'</span><span>}</span>,
        <span>province</span>=<span>{</span><span>'ghazni'</span><span>}</span>,
        <span>target_group</span>=<span>{</span><span>'taliban'</span><span>}</span>,
        <span>min_killed</span>=<span>1</span>,
        <span>min_captured</span>=<span>0</span>,
        <span>killq</span>=<span>True</span>,
        <span>captureq</span>=<span>False</span>,
        <span>killcaptureraid</span>=<span>False</span>,
        <span>airstrike</span>=<span>False</span>,
        <span>noshotsfired</span>=<span>False</span>,
        <span>min_leaders_killed</span>=<span>1</span>,
        <span>min_leaders_captured</span>=<span>0</span>,
        <span>predictions</span>=<span>{}</span>
    <span>)</span>,
    <span>IsafEvent</span><span>(</span>
        <span>name</span>=<span>'2'</span>,
        <span>text</span>=<span>'2011-11-S-034\nISAF Joint Command - Afghanistan\nFor Immediate Release\n\nKABUL, Afghanistan (Nov. </span>
<span>20, 2011)\nA coalition security force detained numerous suspected insurgents during an operation in Marjeh </span>
<span>district, Helmand province, yesterday.  The force conducted the operation after receiving information that a group </span>
<span>of insurgents were at a compound in the area.  After calling for the men inside to come out peacefully, the </span>
<span>insurgents emerged and were detained without incident.'</span>,
        <span>start_date</span>=<span>datetime</span><span>.date</span><span>(</span><span>2011</span>, <span>11</span>, <span>19</span><span>)</span>,
        <span>event_type</span>=<span>{</span><span>'detention'</span><span>}</span>,
        <span>province</span>=<span>{</span><span>'helmand'</span><span>}</span>,
        <span>target_group</span>=<span>{</span><span>''</span><span>}</span>,
        <span>min_killed</span>=<span>0</span>,
        <span>min_captured</span>=<span>4</span>,
        <span>killq</span>=<span>False</span>,
        <span>captureq</span>=<span>True</span>,
        <span>killcaptureraid</span>=<span>True</span>,
        <span>airstrike</span>=<span>False</span>,
        <span>noshotsfired</span>=<span>False</span>,
        <span>min_leaders_killed</span>=<span>0</span>,
        <span>min_leaders_captured</span>=<span>0</span>,
        <span>predictions</span>=<span>{}</span>
    <span>)</span>
<span>]</span>
</pre>
</div>
</div>
<p>So when we’re making the prediction we’re hoping to get a JSON string like this out from the model:</p>
<div data-execution_count="5">
<div id="cb6"><pre><code><span id="cb6-1">json_str <span>=</span> events[<span>0</span>].model_dump_json(exclude<span>=</span>{<span>"text"</span>, <span>"predictions"</span>})</span>
<span id="cb6-2"><span>print</span>(json_str)</span></code></pre></div>
<div>
<pre><span>{</span><span>"name"</span>:<span>"5"</span>,<span>"start_date"</span>:<span>"2013-01-24"</span>,<span>"event_type"</span>:<span>[</span><span>"insurgentskilled"</span><span>]</span>,<span>"province"</span>:<span>[</span><span>"ghazni"</span><span>]</span>,<span>"target_group"</span>:<span>[</span><span>"tali</span>
<span>ban"</span><span>]</span>,<span>"min_killed"</span>:<span>1</span>,<span>"min_captured"</span>:<span>0</span>,<span>"killq"</span>:true,<span>"captureq"</span>:false,<span>"killcaptureraid"</span>:false,<span>"airstrike"</span>:false,<span>"nosh</span>
<span>otsfired"</span>:false,<span>"min_leaders_killed"</span>:<span>1</span>,<span>"min_leaders_captured"</span>:<span>0</span><span>}</span>
</pre>
</div>
</div>
<p>I’m starting with full evaluations using the GPT models and I’ll need a slightly more elaborate prompt in order to get decent results. I can’t pass in the exact same prompt as the one I used for the finetuned model since the GPT models haven’t been trained or finetuned to respond to those specific prompts. This is sort of an interesting problem to have: how much effort do we put into the GPT prompts to try to get the same level of accuracy as the finetuned model? Or in other words, is there even a way to really compare like to like between models that must accept different prompts?</p>
<p>Let’s try this out for OpenAI GPT-4o and GPT-4 Turbo and see how we get on. You’ll note how long the prompt has to be to give the GPT models a fighting chance against the finetuned models. Ideally I’d stuff in even more examples into the context, but I also don’t want to explode the number of tokens I’m using.</p>
<div id="cb7" data-execution_count="30"><pre><code><span id="cb7-1"><span>from</span> openai <span>import</span> OpenAI</span>
<span id="cb7-2"><span>from</span> rich <span>import</span> <span>print</span></span>
<span id="cb7-3"><span>import</span> json</span>
<span id="cb7-4"><span>import</span> os</span>
<span id="cb7-5"></span>
<span id="cb7-6"></span>
<span id="cb7-7"><span>def</span> query_openai(article_text: <span>str</span>, model: <span>str</span>) <span>-&gt;</span> <span>str</span>:</span>
<span id="cb7-8">    query <span>=</span> (</span>
<span id="cb7-9">        <span>f"The following is a press release issued by ISAF (formerly operating in Afghanistan):</span><span>\n</span><span>{</span>article_text<span>}</span><span>\n\n</span><span>"</span></span>
<span id="cb7-10">        <span>"## Extraction request</span><span>\n</span><span>"</span></span>
<span id="cb7-11">        <span>"Please extract the following information from the press release:</span><span>\n</span><span>"</span></span>
<span id="cb7-12">        <span>"- The name of the event (summarising the event / text as a headline)</span><span>\n</span><span>"</span></span>
<span id="cb7-13">        <span>"- The start date of the event</span><span>\n</span><span>"</span></span>
<span id="cb7-14">        <span>"- The event type(s)</span><span>\n</span><span>"</span></span>
<span id="cb7-15">        <span>"- The province(s) in which the event occurred</span><span>\n</span><span>"</span></span>
<span id="cb7-16">        <span>"- The target group(s) of the event</span><span>\n</span><span>"</span></span>
<span id="cb7-17">        <span>"- The minimum number of people killed during the event</span><span>\n</span><span>"</span></span>
<span id="cb7-18">        <span>"- The minimum number of people captured during the event</span><span>\n</span><span>"</span></span>
<span id="cb7-19">        <span>"- Whether someone was killed or not during the event</span><span>\n</span><span>"</span></span>
<span id="cb7-20">        <span>"- Whether someone was captured or not during the event</span><span>\n</span><span>"</span></span>
<span id="cb7-21">        <span>"- Whether the event was a so-called 'kill-capture raid'</span><span>\n</span><span>"</span></span>
<span id="cb7-22">        <span>"- Whether an airstrike was used during the event</span><span>\n</span><span>"</span></span>
<span id="cb7-23">        <span>"- Whether no shots were fired during the event</span><span>\n</span><span>"</span></span>
<span id="cb7-24">        <span>"- The minimum number of leaders killed during the event</span><span>\n</span><span>"</span></span>
<span id="cb7-25">        <span>"- The minimum number of leaders captured during the event</span><span>\n\n</span><span>"</span></span>
<span id="cb7-26">        <span>"## Annotation notes:</span><span>\n</span><span>"</span></span>
<span id="cb7-27">        <span>"- A 'faciliator' is not a leader.</span><span>\n</span><span>"</span></span>
<span id="cb7-28">        <span>"- If a press release states that 'insurgents' were detained without further "</span></span>
<span id="cb7-29">        <span>"details, assign a minimum number of two detained. Interpret 'a couple' as "</span></span>
<span id="cb7-30">        <span>"two. Interpret 'several' as at least three, even though it may sometimes "</span></span>
<span id="cb7-31">        <span>"refer to seven or eight. Classify the terms 'a few', 'some', 'a group', 'a "</span></span>
<span id="cb7-32">        <span>"small group', and 'multiple' as denoting at least three, even if they "</span></span>
<span id="cb7-33">        <span>"sometimes refer to larger numbers. Choose the smaller number if no other "</span></span>
<span id="cb7-34">        <span>"information is available in the press release to come up with a minimally "</span></span>
<span id="cb7-35">        <span>"acceptable figure. Interpret 'numerous' and 'a handful' as at least four, "</span></span>
<span id="cb7-36">        <span>"and 'a large number' as at least five.</span><span>\n\n</span><span>"</span></span>
<span id="cb7-37">        <span>"## Example:</span><span>\n</span><span>"</span></span>
<span id="cb7-38">        <span>"Article text: 'ISAF Joint Command Evening Operational Update Feb. 19, 2011</span><span>\n</span><span>ISAF Joint Command - "</span></span>
<span id="cb7-39">        <span>"Afghanistan</span><span>\u2028</span><span>2011-02-S-143</span><span>\u2028</span><span>For Immediate Release </span><span>\u2028\u2028</span><span>KABUL, Afghanistan (Feb. 19)</span><span>\u2028\u2028</span><span>ISAF "</span></span>
<span id="cb7-40">        <span>"service members at a compound in Sangin district, Helmand province observed numerous insurgents north and south of "</span></span>
<span id="cb7-41">        <span>"their position talking on radios today. After gaining positive identification of the insurgent positions, the "</span></span>
<span id="cb7-42">        <span>"coalition troops engaged, killing several insurgents. Later, the ISAF troops observed more insurgents positioning "</span></span>
<span id="cb7-43">        <span>"in the area with weapons. After positive identification, coalition forces continued firing on the various insurgent "</span></span>
<span id="cb7-44">        <span>"positions, resulting in several more insurgents being killed.'</span><span>\n\n</span><span>"</span></span>
<span id="cb7-45">        <span>'Output: `{"name":"Several insurgents killed in '</span></span>
<span id="cb7-46">        <span>'Helmand","start_date":"2011-02-18","event_type":["insurgentskilled"],"province":["helmand"],"target_group":[""],"mi'</span></span>
<span id="cb7-47">        <span>'n_killed":6,"min_captured":0,"killq":true,"captureq":false,"killcaptureraid":false,"airstrike":false,"noshotsfired"'</span></span>
<span id="cb7-48">        <span>':false,"min_leaders_killed":0,"min_leaders_captured":0}`'</span></span>
<span id="cb7-49">    )</span>
<span id="cb7-50"></span>
<span id="cb7-51">    <span># set up the prediction harness</span></span>
<span id="cb7-52">    client <span>=</span> OpenAI(api_key<span>=</span>os.getenv(<span>"OPENAI_API_KEY"</span>))</span>
<span id="cb7-53"></span>
<span id="cb7-54">    response <span>=</span> client.chat.completions.create(</span>
<span id="cb7-55">        model<span>=</span>model,</span>
<span id="cb7-56">        response_format<span>=</span>{<span>"type"</span>: <span>"json_object"</span>},</span>
<span id="cb7-57">        messages<span>=</span>[</span>
<span id="cb7-58">            {</span>
<span id="cb7-59">                <span>"role"</span>: <span>"system"</span>,</span>
<span id="cb7-60">                <span>"content"</span>: <span>"You are an expert at identifying events in a press release. You are precise "</span></span>
<span id="cb7-61">                <span>"and always make sure you are correct, drawing inference from the text of the "</span></span>
<span id="cb7-62">                <span>"press release.</span><span>\n\n</span><span> You always return a JSON string with the following schema: "</span></span>
<span id="cb7-63">                <span>"## JSON Schema details</span><span>\n</span><span>"</span></span>
<span id="cb7-64">                <span>"Here is some of the schema for the JSON output string you "</span></span>
<span id="cb7-65">                <span>"should make use of: event_types = ['airstrike', 'detention', "</span></span>
<span id="cb7-66">                <span>"'captureandkill', 'insurgentskilled', 'exchangeoffire', 'civiliancasualty'], "</span></span>
<span id="cb7-67">                <span>"provinces = ['badakhshan', 'badghis', 'baghlan', 'balkh', 'bamyan', "</span></span>
<span id="cb7-68">                <span>"'day_kundi', 'farah', 'faryab', 'ghazni', 'ghor', 'helmand', 'herat', "</span></span>
<span id="cb7-69">                <span>"'jowzjan', 'kabul', 'kandahar', 'kapisa', 'khost', 'kunar', 'kunduz', "</span></span>
<span id="cb7-70">                <span>"'laghman', 'logar', 'nangarhar', 'nimroz', 'nuristan', 'paktya', 'paktika', "</span></span>
<span id="cb7-71">                <span>"'panjshir', 'parwan', 'samangan', 'sar_e_pul', 'takhar', 'uruzgan', "</span></span>
<span id="cb7-72">                <span>"'wardak', 'zabul'], target_groups = ['taliban', 'haqqani', 'criminals', "</span></span>
<span id="cb7-73">                <span>"'aq', 'hig', 'let', 'imu', 'judq', 'iju', 'hik', 'ttp', 'other']</span><span>\n\n</span><span>"</span>,</span>
<span id="cb7-74">            },</span>
<span id="cb7-75">            {<span>"role"</span>: <span>"user"</span>, <span>"content"</span>: query},</span>
<span id="cb7-76">        ],</span>
<span id="cb7-77">        temperature<span>=</span><span>1</span>,</span>
<span id="cb7-78">    )</span>
<span id="cb7-79"></span>
<span id="cb7-80">    <span>return</span> response.choices[<span>0</span>].message.content</span></code></pre></div>
<p>We can make sure this function works with a quick example:</p>
<div data-execution_count="7">
<div id="cb8"><pre><code><span id="cb8-1">json_str <span>=</span> query_openai(events[<span>0</span>].text, <span>"gpt-4o"</span>)</span>
<span id="cb8-2"><span>print</span>(json.loads(json_str))</span></code></pre></div>
<div>
<pre><span>{</span>
    <span>'name'</span>: <span>'Taliban leader Alaudin killed in Ghazni'</span>,
    <span>'start_date'</span>: <span>'2013-01-24'</span>,
    <span>'event_type'</span>: <span>[</span><span>'insurgentskilled'</span><span>]</span>,
    <span>'province'</span>: <span>[</span><span>'ghazni'</span><span>]</span>,
    <span>'target_group'</span>: <span>[</span><span>'taliban'</span><span>]</span>,
    <span>'min_killed'</span>: <span>1</span>,
    <span>'min_captured'</span>: <span>0</span>,
    <span>'killq'</span>: <span>True</span>,
    <span>'captureq'</span>: <span>False</span>,
    <span>'killcaptureraid'</span>: <span>True</span>,
    <span>'airstrike'</span>: <span>False</span>,
    <span>'noshotsfired'</span>: <span>False</span>,
    <span>'min_leaders_killed'</span>: <span>1</span>,
    <span>'min_leaders_captured'</span>: <span>0</span>
<span>}</span>
</pre>
</div>
</div>
<p>Our model is working (as expected) and we’re also getting a JSON string back. Let’s assemble something that will iterate through all of our test data, get predictions, and then store those predictions on our Pydantic object.</p>
<p>For the bulk predictions, we’ll make sure to do this async, since there are lots of events and we don’t want to waiting all day. You’ll see I also had to add some retries to the function to account for rate limiting on the GPT-3.5-turbo model.</p>
<div>
<details>
<summary>Code</summary>
<div id="cb9"><pre><code><span id="cb9-1"><span># make async work within a notebook</span></span>
<span id="cb9-2"><span>import</span> nest_asyncio</span>
<span id="cb9-3"></span>
<span id="cb9-4">nest_asyncio.<span>apply</span>()</span>
<span id="cb9-5"></span>
<span id="cb9-6"><span>import</span> aiohttp</span>
<span id="cb9-7"><span>import</span> asyncio</span>
<span id="cb9-8"><span>from</span> typing <span>import</span> List</span>
<span id="cb9-9"><span>from</span> openai <span>import</span> OpenAI</span>
<span id="cb9-10"></span>
<span id="cb9-11"></span>
<span id="cb9-12"><span>async</span> <span>def</span> async_query_openai(</span>
<span id="cb9-13">    session,</span>
<span id="cb9-14">    article_text: <span>str</span>,</span>
<span id="cb9-15">    model: <span>str</span>,</span>
<span id="cb9-16">    max_retries: <span>int</span> <span>=</span> <span>3</span>,</span>
<span id="cb9-17">    retry_delay: <span>float</span> <span>=</span> <span>1.0</span>,</span>
<span id="cb9-18">) <span>-&gt;</span> <span>str</span>:</span>
<span id="cb9-19">    query <span>=</span> (</span>
<span id="cb9-20">        <span>f"The following is a press release issued by ISAF (formerly operating in Afghanistan):</span><span>\n</span><span>{</span>article_text<span>}</span><span>\n\n</span><span>"</span></span>
<span id="cb9-21">        <span>"## Extraction request</span><span>\n</span><span>"</span></span>
<span id="cb9-22">        <span>"Please extract the following information from the press release:</span><span>\n</span><span>"</span></span>
<span id="cb9-23">        <span>"- The name of the event (summarising the event / text as a headline)</span><span>\n</span><span>"</span></span>
<span id="cb9-24">        <span>"- The start date of the event</span><span>\n</span><span>"</span></span>
<span id="cb9-25">        <span>"- The event type(s)</span><span>\n</span><span>"</span></span>
<span id="cb9-26">        <span>"- The province(s) in which the event occurred</span><span>\n</span><span>"</span></span>
<span id="cb9-27">        <span>"- The target group(s) of the event</span><span>\n</span><span>"</span></span>
<span id="cb9-28">        <span>"- The minimum number of people killed during the event</span><span>\n</span><span>"</span></span>
<span id="cb9-29">        <span>"- The minimum number of people captured during the event</span><span>\n</span><span>"</span></span>
<span id="cb9-30">        <span>"- Whether someone was killed or not during the event</span><span>\n</span><span>"</span></span>
<span id="cb9-31">        <span>"- Whether someone was captured or not during the event</span><span>\n</span><span>"</span></span>
<span id="cb9-32">        <span>"- Whether the event was a so-called 'kill-capture raid'</span><span>\n</span><span>"</span></span>
<span id="cb9-33">        <span>"- Whether an airstrike was used during the event</span><span>\n</span><span>"</span></span>
<span id="cb9-34">        <span>"- Whether no shots were fired during the event</span><span>\n</span><span>"</span></span>
<span id="cb9-35">        <span>"- The minimum number of leaders killed during the event</span><span>\n</span><span>"</span></span>
<span id="cb9-36">        <span>"- The minimum number of leaders captured during the event</span><span>\n\n</span><span>"</span></span>
<span id="cb9-37">        <span>"## Annotation notes:</span><span>\n</span><span>"</span></span>
<span id="cb9-38">        <span>"- A 'faciliator' is not a leader.</span><span>\n</span><span>"</span></span>
<span id="cb9-39">        <span>"- If a press release states that 'insurgents' were detained without further "</span></span>
<span id="cb9-40">        <span>"details, assign a minimum number of two detained. Interpret 'a couple' as "</span></span>
<span id="cb9-41">        <span>"two. Interpret 'several' as at least three, even though it may sometimes "</span></span>
<span id="cb9-42">        <span>"refer to seven or eight. Classify the terms 'a few', 'some', 'a group', 'a "</span></span>
<span id="cb9-43">        <span>"small group', and 'multiple' as denoting at least three, even if they "</span></span>
<span id="cb9-44">        <span>"sometimes refer to larger numbers. Choose the smaller number if no other "</span></span>
<span id="cb9-45">        <span>"information is available in the press release to come up with a minimally "</span></span>
<span id="cb9-46">        <span>"acceptable figure. Interpret 'numerous' and 'a handful' as at least four, "</span></span>
<span id="cb9-47">        <span>"and 'a large number' as at least five.</span><span>\n\n</span><span>"</span></span>
<span id="cb9-48">        <span>"## Example:</span><span>\n</span><span>"</span></span>
<span id="cb9-49">        <span>"Article text: 'ISAF Joint Command Evening Operational Update Feb. 19, 2011</span><span>\n</span><span>ISAF Joint Command - "</span></span>
<span id="cb9-50">        <span>"Afghanistan</span><span>\u2028</span><span>2011-02-S-143</span><span>\u2028</span><span>For Immediate Release </span><span>\u2028\u2028</span><span>KABUL, Afghanistan (Feb. 19)</span><span>\u2028\u2028</span><span>ISAF "</span></span>
<span id="cb9-51">        <span>"service members at a compound in Sangin district, Helmand province observed numerous insurgents north and south of "</span></span>
<span id="cb9-52">        <span>"their position talking on radios today. After gaining positive identification of the insurgent positions, the "</span></span>
<span id="cb9-53">        <span>"coalition troops engaged, killing several insurgents. Later, the ISAF troops observed more insurgents positioning "</span></span>
<span id="cb9-54">        <span>"in the area with weapons. After positive identification, coalition forces continued firing on the various insurgent "</span></span>
<span id="cb9-55">        <span>"positions, resulting in several more insurgents being killed.'</span><span>\n\n</span><span>"</span></span>
<span id="cb9-56">        <span>'Output: `{"name":"Several insurgents killed in '</span></span>
<span id="cb9-57">        <span>'Helmand","start_date":"2011-02-18","event_type":["insurgentskilled"],"province":["helmand"],"target_group":[""],"mi'</span></span>
<span id="cb9-58">        <span>'n_killed":6,"min_captured":0,"killq":true,"captureq":false,"killcaptureraid":false,"airstrike":false,"noshotsfired"'</span></span>
<span id="cb9-59">        <span>':false,"min_leaders_killed":0,"min_leaders_captured":0}`'</span></span>
<span id="cb9-60">    )</span>
<span id="cb9-61"></span>
<span id="cb9-62">    client <span>=</span> OpenAI(api_key<span>=</span>os.getenv(<span>"OPENAI_API_KEY"</span>))</span>
<span id="cb9-63"></span>
<span id="cb9-64">    retries <span>=</span> <span>0</span></span>
<span id="cb9-65">    <span>while</span> retries <span>&lt;</span> max_retries:</span>
<span id="cb9-66">        <span>async</span> <span>with</span> session.post(</span>
<span id="cb9-67">            <span>"https://api.openai.com/v1/chat/completions"</span>,</span>
<span id="cb9-68">            headers<span>=</span>{<span>"Authorization"</span>: <span>f"Bearer </span><span>{</span>client<span>.</span>api_key<span>}</span><span>"</span>},</span>
<span id="cb9-69">            json<span>=</span>{</span>
<span id="cb9-70">                <span>"model"</span>: model,</span>
<span id="cb9-71">                <span>"response_format"</span>: {<span>"type"</span>: <span>"json_object"</span>},</span>
<span id="cb9-72">                <span>"messages"</span>: [</span>
<span id="cb9-73">                    {</span>
<span id="cb9-74">                        <span>"role"</span>: <span>"system"</span>,</span>
<span id="cb9-75">                        <span>"content"</span>: <span>"You are an expert at identifying events in a press release. You are precise "</span></span>
<span id="cb9-76">                        <span>"and always make sure you are correct, drawing inference from the text of the "</span></span>
<span id="cb9-77">                        <span>"press release.</span><span>\n\n</span><span> You always return a JSON string with the following schema: "</span></span>
<span id="cb9-78">                        <span>"## JSON Schema details</span><span>\n</span><span>"</span></span>
<span id="cb9-79">                        <span>"Here is some of the schema for the JSON output string you "</span></span>
<span id="cb9-80">                        <span>"should make use of: event_types = ['airstrike', 'detention', "</span></span>
<span id="cb9-81">                        <span>"'captureandkill', 'insurgentskilled', 'exchangeoffire', 'civiliancasualty'], "</span></span>
<span id="cb9-82">                        <span>"provinces = ['badakhshan', 'badghis', 'baghlan', 'balkh', 'bamyan', "</span></span>
<span id="cb9-83">                        <span>"'day_kundi', 'farah', 'faryab', 'ghazni', 'ghor', 'helmand', 'herat', "</span></span>
<span id="cb9-84">                        <span>"'jowzjan', 'kabul', 'kandahar', 'kapisa', 'khost', 'kunar', 'kunduz', "</span></span>
<span id="cb9-85">                        <span>"'laghman', 'logar', 'nangarhar', 'nimroz', 'nuristan', 'paktya', 'paktika', "</span></span>
<span id="cb9-86">                        <span>"'panjshir', 'parwan', 'samangan', 'sar_e_pul', 'takhar', 'uruzgan', "</span></span>
<span id="cb9-87">                        <span>"'wardak', 'zabul'], target_groups = ['taliban', 'haqqani', 'criminals', "</span></span>
<span id="cb9-88">                        <span>"'aq', 'hig', 'let', 'imu', 'judq', 'iju', 'hik', 'ttp', 'other']</span><span>\n\n</span><span>"</span>,</span>
<span id="cb9-89">                    },</span>
<span id="cb9-90">                    {<span>"role"</span>: <span>"user"</span>, <span>"content"</span>: query},</span>
<span id="cb9-91">                ],</span>
<span id="cb9-92">                <span>"temperature"</span>: <span>1</span>,</span>
<span id="cb9-93">            },</span>
<span id="cb9-94">        ) <span>as</span> response:</span>
<span id="cb9-95">            result <span>=</span> <span>await</span> response.json()</span>
<span id="cb9-96">            <span>if</span> <span>"error"</span> <span>in</span> result:</span>
<span id="cb9-97">                error_message <span>=</span> result[<span>"error"</span>][<span>"message"</span>]</span>
<span id="cb9-98">                <span>if</span> <span>"Rate limit reached"</span> <span>in</span> error_message:</span>
<span id="cb9-99">                    <span># retry_delay_ms = float(</span></span>
<span id="cb9-100">                    <span>#     error_message.split("Please try again in ")[1].split("ms")[0]</span></span>
<span id="cb9-101">                    <span># )</span></span>
<span id="cb9-102">                    retry_delay_ms <span>=</span> <span>35000</span></span>
<span id="cb9-103">                    retry_delay_seconds <span>=</span> retry_delay_ms <span>/</span> <span>1000</span></span>
<span id="cb9-104">                    <span>print</span>(</span>
<span id="cb9-105">                        <span>f"Rate limit exceeded. Retrying in </span><span>{</span>retry_delay_seconds<span>}</span><span> seconds..."</span></span>
<span id="cb9-106">                    )</span>
<span id="cb9-107">                    <span>await</span> asyncio.sleep(retry_delay_seconds)</span>
<span id="cb9-108">                    retries <span>+=</span> <span>1</span></span>
<span id="cb9-109">                    <span>continue</span></span>
<span id="cb9-110">                <span>else</span>:</span>
<span id="cb9-111">                    <span>print</span>(<span>f"Error during prediction.</span><span>\n</span><span>Full result object: </span><span>{</span>result<span>}</span><span>"</span>)</span>
<span id="cb9-112">                    <span>return</span> <span>""</span></span>
<span id="cb9-113">            <span>try</span>:</span>
<span id="cb9-114">                <span>return</span> result[<span>"choices"</span>][<span>0</span>][<span>"message"</span>][<span>"content"</span>]</span>
<span id="cb9-115">            <span>except</span> <span>KeyError</span>:</span>
<span id="cb9-116">                <span>print</span>(<span>f"Error during prediction.</span><span>\n</span><span>Full result object: </span><span>{</span>result<span>}</span><span>"</span>)</span>
<span id="cb9-117">                <span>return</span> <span>""</span></span>
<span id="cb9-118"></span>
<span id="cb9-119">    <span>print</span>(<span>f"Max retries exceeded for event.</span><span>\n</span><span>Full result object: </span><span>{</span>result<span>}</span><span>"</span>)</span>
<span id="cb9-120">    <span>return</span> <span>""</span></span>
<span id="cb9-121"></span>
<span id="cb9-122"></span>
<span id="cb9-123"><span>async</span> <span>def</span> get_gpt_predictions_async(</span>
<span id="cb9-124">    model: <span>str</span>,</span>
<span id="cb9-125">    events: List[IsafEvent],</span>
<span id="cb9-126">    logging_n: <span>int</span> <span>=</span> <span>100</span>,</span>
<span id="cb9-127">    max_concurrent_requests: <span>int</span> <span>=</span> <span>5</span>,</span>
<span id="cb9-128">) <span>-&gt;</span> List[IsafEvent]:</span>
<span id="cb9-129">    <span>async</span> <span>with</span> aiohttp.ClientSession() <span>as</span> session:</span>
<span id="cb9-130">        semaphore <span>=</span> asyncio.Semaphore(max_concurrent_requests)</span>
<span id="cb9-131">        tasks <span>=</span> []</span>
<span id="cb9-132">        <span>for</span> i, event <span>in</span> <span>enumerate</span>(events, start<span>=</span><span>1</span>):</span>
<span id="cb9-133">            <span>if</span> i <span>%</span> logging_n <span>==</span> <span>0</span>:</span>
<span id="cb9-134">                <span>print</span>(<span>f"Predicting event </span><span>{</span>i<span>}</span><span> of </span><span>{</span><span>len</span>(events)<span>}</span><span> using </span><span>{</span>model<span>}</span><span>"</span>)</span>
<span id="cb9-135"></span>
<span id="cb9-136">            <span>async</span> <span>def</span> make_request(session, event):</span>
<span id="cb9-137">                <span>async</span> <span>with</span> semaphore:</span>
<span id="cb9-138">                    <span>return</span> <span>await</span> async_query_openai(</span>
<span id="cb9-139">                        session, event.text, model, max_retries<span>=</span><span>5</span></span>
<span id="cb9-140">                    )</span>
<span id="cb9-141"></span>
<span id="cb9-142">            task <span>=</span> asyncio.ensure_future(make_request(session, event))</span>
<span id="cb9-143">            tasks.append(task)</span>
<span id="cb9-144"></span>
<span id="cb9-145">        predictions <span>=</span> <span>await</span> asyncio.gather(<span>*</span>tasks)</span>
<span id="cb9-146">        <span>for</span> event, prediction <span>in</span> <span>zip</span>(events, predictions):</span>
<span id="cb9-147">            event.predictions[model] <span>=</span> prediction</span>
<span id="cb9-148"></span>
<span id="cb9-149">    <span>return</span> events</span>
<span id="cb9-150"></span>
<span id="cb9-151"></span>
<span id="cb9-152"><span>async</span> <span>def</span> main():</span>
<span id="cb9-153">    events_4o <span>=</span> <span>await</span> get_gpt_predictions_async(</span>
<span id="cb9-154">        <span>"gpt-4o"</span>, events, max_concurrent_requests<span>=</span><span>10</span></span>
<span id="cb9-155">    )</span>
<span id="cb9-156">    events_4turbo <span>=</span> <span>await</span> get_gpt_predictions_async(</span>
<span id="cb9-157">        <span>"gpt-4-turbo"</span>, events_4o, max_concurrent_requests<span>=</span><span>10</span></span>
<span id="cb9-158">    )</span>
<span id="cb9-159">    full_events <span>=</span> <span>await</span> get_gpt_predictions_async(</span>
<span id="cb9-160">        <span>"gpt-3.5-turbo"</span>, events_4turbo, max_concurrent_requests<span>=</span><span>10</span></span>
<span id="cb9-161">    )</span>
<span id="cb9-162"></span>
<span id="cb9-163"></span>
<span id="cb9-164"><span>await</span> main()</span></code></pre></div>
</details>
</div>
<p>So as you can now see, we have three predictions attached to each event.</p>
<div data-execution_count="17">
<pre><span>IsafEvent</span><span>(</span>
    <span>name</span>=<span>'5'</span>,
    <span>text</span>=<span>'2013-01-S-025\n\nKABUL, Afghanistan (Jan. 25, 2013)\nDuring a security operation in Andar district, </span>
<span>Ghazni province, yesterday, an Afghan and coalition force killed the Taliban leader, Alaudin. Alaudin oversaw a </span>
<span>group of insurgents responsible for conducting remote-controlled improvised explosive device and small-arms fire </span>
<span>attacks against Afghan and coalition forces. Prior to his death, Alaudin was planning attacks against Afghan </span>
<span>National Police in Ghazni province.'</span>,
    <span>start_date</span>=<span>datetime</span><span>.date</span><span>(</span><span>2013</span>, <span>1</span>, <span>24</span><span>)</span>,
    <span>event_type</span>=<span>{</span><span>'insurgentskilled'</span><span>}</span>,
    <span>province</span>=<span>{</span><span>'ghazni'</span><span>}</span>,
    <span>target_group</span>=<span>{</span><span>'taliban'</span><span>}</span>,
    <span>min_killed</span>=<span>1</span>,
    <span>min_captured</span>=<span>0</span>,
    <span>killq</span>=<span>True</span>,
    <span>captureq</span>=<span>False</span>,
    <span>killcaptureraid</span>=<span>False</span>,
    <span>airstrike</span>=<span>False</span>,
    <span>noshotsfired</span>=<span>False</span>,
    <span>min_leaders_killed</span>=<span>1</span>,
    <span>min_leaders_captured</span>=<span>0</span>,
    <span>predictions</span>=<span>{</span>
        <span>'gpt-4o'</span>: <span>'{\n  "name": "Taliban leader Alaudin killed in Ghazni",\n  "start_date": "2013-01-24",\n  </span>
<span>"event_type": ["insurgentskilled", "captureandkill"],\n  "province": ["ghazni"],\n  "target_group": ["taliban"],\n </span>
<span>"min_killed": 1,\n  "min_captured": 0,\n  "killq": true,\n  "captureq": false,\n  "killcaptureraid": true,\n  </span>
<span>"airstrike": false,\n  "noshotsfired": false,\n  "min_leaders_killed": 1,\n  "min_leaders_captured": 0\n}'</span>,
        <span>'gpt-4-turbo'</span>: <span>'{\n    "name": "Taliban leader Alaudin killed in Ghazni",\n    "start_date": </span>
<span>"2013-01-24",\n    "event_type": ["captureandkill"],\n    "province": ["ghazni"],\n    "target_group": </span>
<span>["taliban"],\n    "min_killed": 1,\n    "min_captured": 0,\n    "killq": true,\n    "captureq": false,\n    </span>
<span>"killcaptureraid": true,\n    "airstrike": false,\n    "noshotsfired": false,\n    "min_leaders_killed": 1,\n    </span>
<span>"min_leaders_captured": 0\n}'</span>,
        <span>'gpt-3.5-turbo'</span>: <span>'{\n    "name": "Taliban leader Alaudin killed in Ghazni province",\n    "start_date": </span>
<span>"2013-01-24",\n    "event_type": ["captureandkill"],\n    "province": ["ghazni"],\n    "target_group": </span>
<span>["taliban"],\n    "min_killed": 1,\n    "min_captured": 0,\n    "killq": true,\n    "captureq": false,\n    </span>
<span>"killcaptureraid": false,\n    "airstrike": false,\n    "noshotsfired": false,\n    "min_leaders_killed": 1,\n    </span>
<span>"min_leaders_captured": 0\n}'</span>
    <span>}</span>
<span>)</span>
</pre>
</div>
<p>I have all these predictions living in memory right now so it’s probably a good time to commit these to a dataset and push them to the Hugging Face Hub in case the notebook crashes or my local machine shuts down or something else unexpected.</p>
<p>I’ll create a function to handle this as we’ll be repeating this process for the other models as well. It’s a bit verbose but I thought it preferable so you can see what’s going on.</p>
<div data-execution_count="35">
<details>
<summary>Code</summary>
<div id="cb11"><pre><code><span id="cb11-1"><span>from</span> datasets <span>import</span> Dataset</span>
<span id="cb11-2"></span>
<span id="cb11-3"></span>
<span id="cb11-4"><span>def</span> convert_to_dataset(data: List[IsafEvent]) <span>-&gt;</span> Dataset:</span>
<span id="cb11-5">    names <span>=</span> []</span>
<span id="cb11-6">    texts <span>=</span> []</span>
<span id="cb11-7">    start_dates <span>=</span> []</span>
<span id="cb11-8">    provinces <span>=</span> []</span>
<span id="cb11-9">    target_groups <span>=</span> []</span>
<span id="cb11-10">    event_types <span>=</span> []</span>
<span id="cb11-11">    predictions <span>=</span> []</span>
<span id="cb11-12">    min_killeds <span>=</span> []</span>
<span id="cb11-13">    min_captureds <span>=</span> []</span>
<span id="cb11-14">    killqs <span>=</span> []</span>
<span id="cb11-15">    captureqs <span>=</span> []</span>
<span id="cb11-16">    killcaptureraids <span>=</span> []</span>
<span id="cb11-17">    airstrikes <span>=</span> []</span>
<span id="cb11-18">    noshotsfireds <span>=</span> []</span>
<span id="cb11-19">    min_leaders_killeds <span>=</span> []</span>
<span id="cb11-20">    min_leaders_captureds <span>=</span> []</span>
<span id="cb11-21"></span>
<span id="cb11-22">    <span>for</span> item <span>in</span> data:</span>
<span id="cb11-23">        names.append(item.name)</span>
<span id="cb11-24">        texts.append(item.text)</span>
<span id="cb11-25">        start_dates.append(item.start_date)</span>
<span id="cb11-26">        provinces.append(item.province)</span>
<span id="cb11-27">        target_groups.append(item.target_group)</span>
<span id="cb11-28">        event_types.append(item.event_type)</span>
<span id="cb11-29">        predictions.append(item.predictions)</span>
<span id="cb11-30">        min_killeds.append(item.min_killed)</span>
<span id="cb11-31">        min_captureds.append(item.min_captured)</span>
<span id="cb11-32">        killqs.append(item.killq)</span>
<span id="cb11-33">        captureqs.append(item.captureq)</span>
<span id="cb11-34">        killcaptureraids.append(item.killcaptureraid)</span>
<span id="cb11-35">        airstrikes.append(item.airstrike)</span>
<span id="cb11-36">        noshotsfireds.append(item.noshotsfired)</span>
<span id="cb11-37">        min_leaders_killeds.append(item.min_leaders_killed)</span>
<span id="cb11-38">        min_leaders_captureds.append(item.min_leaders_captured)</span>
<span id="cb11-39"></span>
<span id="cb11-40">    dataset_dict <span>=</span> {</span>
<span id="cb11-41">        <span>"name"</span>: names,</span>
<span id="cb11-42">        <span>"text"</span>: texts,</span>
<span id="cb11-43">        <span>"predictions"</span>: predictions,</span>
<span id="cb11-44">        <span>"start_date"</span>: start_dates,</span>
<span id="cb11-45">        <span>"province"</span>: provinces,</span>
<span id="cb11-46">        <span>"target_group"</span>: target_groups,</span>
<span id="cb11-47">        <span>"event_type"</span>: event_types,</span>
<span id="cb11-48">        <span>"min_killed"</span>: min_killeds,</span>
<span id="cb11-49">        <span>"min_captured"</span>: min_captureds,</span>
<span id="cb11-50">        <span>"killq"</span>: killqs,</span>
<span id="cb11-51">        <span>"captureq"</span>: captureqs,</span>
<span id="cb11-52">        <span>"killcaptureraid"</span>: killcaptureraids,</span>
<span id="cb11-53">        <span>"airstrike"</span>: airstrikes,</span>
<span id="cb11-54">        <span>"noshotsfired"</span>: noshotsfireds,</span>
<span id="cb11-55">        <span>"min_leaders_killed"</span>: min_leaders_killeds,</span>
<span id="cb11-56">        <span>"min_leaders_captured"</span>: min_leaders_captureds,</span>
<span id="cb11-57">    }</span>
<span id="cb11-58">    dataset <span>=</span> Dataset.from_dict(dataset_dict)</span>
<span id="cb11-59"></span>
<span id="cb11-60">    <span>return</span> dataset</span>
<span id="cb11-61"></span>
<span id="cb11-62"></span>
<span id="cb11-63"><span>def</span> convert_and_push_dataset(</span>
<span id="cb11-64">    events: List[IsafEvent], name: <span>str</span>, split_name: <span>str</span> <span>=</span> <span>"train"</span></span>
<span id="cb11-65">):</span>
<span id="cb11-66">    <span>"""Convert a list of Pydantic objects to a HF Dataset object, then push to</span></span>
<span id="cb11-67"><span>    the hub."""</span></span>
<span id="cb11-68">    hf_token <span>=</span> os.getenv(<span>"HUGGINGFACE_API_KEY"</span>)</span>
<span id="cb11-69"></span>
<span id="cb11-70">    dataset <span>=</span> convert_to_dataset(events)</span>
<span id="cb11-71">    dataset.push_to_hub(</span>
<span id="cb11-72">        <span>f"strickvl/</span><span>{</span>name<span>}</span><span>"</span>,</span>
<span id="cb11-73">        token<span>=</span>hf_token,</span>
<span id="cb11-74">        private<span>=</span><span>True</span>,</span>
<span id="cb11-75">        create_pr<span>=</span><span>True</span>,</span>
<span id="cb11-76">        split<span>=</span>split_name,</span>
<span id="cb11-77">    )</span></code></pre></div>
</details>
</div>
<p>A more concise and abstract version of the <code>convert_to_dataset</code> function could be something like:</p>
<div id="cb12"><pre><code><span id="cb12-1"><span>def</span> convert_to_dataset(data: List[BaseModel]) <span>-&gt;</span> Dataset:</span>
<span id="cb12-2">    dataset_dict <span>=</span> {}</span>
<span id="cb12-3"></span>
<span id="cb12-4">    <span>for</span> field_name, field_value <span>in</span> data[<span>0</span>].__fields__.items():</span>
<span id="cb12-5">        field_type <span>=</span> field_value.outer_type_</span>
<span id="cb12-6">        <span>if</span> field_type <span>in</span> [<span>str</span>, <span>int</span>, <span>float</span>, <span>bool</span>, date]:</span>
<span id="cb12-7">            dataset_dict[field_name] <span>=</span> [<span>getattr</span>(item, field_name) <span>for</span> item <span>in</span> data]</span>
<span id="cb12-8">        <span>elif</span> field_type <span>==</span> <span>set</span>:</span>
<span id="cb12-9">            dataset_dict[field_name] <span>=</span> [<span>list</span>(<span>getattr</span>(item, field_name)) <span>for</span> item <span>in</span> data]</span>
<span id="cb12-10">        <span>elif</span> <span>issubclass</span>(field_type, BaseModel):</span>
<span id="cb12-11">            dataset_dict[field_name] <span>=</span> [<span>getattr</span>(item, field_name).<span>dict</span>() <span>for</span> item <span>in</span> data]</span>
<span id="cb12-12">        <span>else</span>:</span>
<span id="cb12-13">            dataset_dict[field_name] <span>=</span> [<span>getattr</span>(item, field_name) <span>for</span> item <span>in</span> data]</span>
<span id="cb12-14"></span>
<span id="cb12-15">    dataset <span>=</span> Dataset.from_dict(dataset_dict)</span>
<span id="cb12-16">    <span>return</span> dataset</span></code></pre></div>
<p>But for now let’s just push our data to the Hub.</p>
<div id="cb13"><pre><code><span id="cb13-1">convert_and_push_dataset(events, <span>"isafpressreleases_with_preds"</span>, split_name<span>=</span><span>"test"</span>)</span></code></pre></div>
</section>
<section id="adding-predictions-from-our-finetuned-models">
<h2>Adding predictions from our finetuned models</h2>
<p>We’ve added some baseline OpenAI models, so let’s now add <a href="https://mlops.systems/posts/2024-06-15-isafpr-first-finetune.html">the models</a> <a href="https://mlops.systems/posts/2024-06-17-one-click-finetuning.html">we previously finetuned</a>. This includes a mix of local models as well as models hosted by some <a href="https://mlops.systems/posts/2024-06-17-one-click-finetuning.html">one-click finetuning providers</a>.</p>
<p>I’ll hide a bunch of the code with folding arrows so you can see it if you’re interested but there isn’t actually much of interest or new there.</p>
<section id="reloading-the-predictions-dataset">
<h2 data-anchor-id="reloading-the-predictions-dataset">Reloading the predictions dataset</h2>
<p>Let’s start by loading our dataset and then we can get into adding some local model predictions:</p>
<div id="cb14" data-execution_count="19"><pre><code><span id="cb14-1"><span>from</span> datasets <span>import</span> load_dataset</span>
<span id="cb14-2"></span>
<span id="cb14-3">preds_test_data <span>=</span> load_dataset(<span>"strickvl/isafpressreleases_with_preds"</span>)[</span>
<span id="cb14-4">    <span>"test"</span></span>
<span id="cb14-5">].to_list()</span></code></pre></div>
<p>We trained some local models, so let’s add those predictions to the dataset.</p>
</section>
<section id="finetuned-tinyllama-predictions">
<h2 data-anchor-id="finetuned-tinyllama-predictions">Finetuned TinyLlama predictions</h2>
<div data-execution_count="21">
<details>
<summary>Code</summary>
<div id="cb15"><pre><code><span id="cb15-1"><span>from</span> typing <span>import</span> Union</span>
<span id="cb15-2"><span>import</span> torch</span>
<span id="cb15-3"><span>from</span> peft <span>import</span> AutoPeftModelForCausalLM</span>
<span id="cb15-4"><span>from</span> transformers <span>import</span> AutoTokenizer</span>
<span id="cb15-5"></span>
<span id="cb15-6"></span>
<span id="cb15-7"><span>def</span> prompt(press_release: <span>str</span>) <span>-&gt;</span> <span>str</span>:</span>
<span id="cb15-8">    <span>return</span> <span>f"""You are an expert at identifying events in a press release. You are precise and always make sure you are correct, drawing inference from the text of the press release. event_types = ['airstrike', 'detention', 'captureandkill', 'insurgentskilled', 'exchangeoffire', 'civiliancasualty'], provinces = ['badakhshan', 'badghis', 'baghlan', 'balkh', 'bamyan', 'day_kundi', 'farah', 'faryab', 'ghazni', 'ghor', 'helmand', 'herat', 'jowzjan', 'kabul', 'kandahar', 'kapisa', 'khost', 'kunar', 'kunduz', 'laghman', 'logar', 'nangarhar', 'nimroz', 'nuristan', 'paktya', 'paktika', 'panjshir', 'parwan', 'samangan', 'sar_e_pul', 'takhar', 'uruzgan', 'wardak', 'zabul'], target_groups = ['taliban', 'haqqani', 'criminals', 'aq', 'hig', 'let', 'imu', 'judq', 'iju', 'hik', 'ttp', 'other']</span></span>
<span id="cb15-9"></span>
<span id="cb15-10"><span>### Instruction:</span></span>
<span id="cb15-11"></span>
<span id="cb15-12"><span>PRESS RELEASE TEXT: "</span><span>{</span>press_release<span>}</span><span>"</span></span>
<span id="cb15-13"></span>
<span id="cb15-14"><span>### Response:</span></span>
<span id="cb15-15"><span>"""</span></span>
<span id="cb15-16"></span>
<span id="cb15-17"></span>
<span id="cb15-18"><span>def</span> prompt_tok(</span>
<span id="cb15-19">    model: AutoPeftModelForCausalLM,</span>
<span id="cb15-20">    tokenizer: AutoTokenizer,</span>
<span id="cb15-21">    press_release: <span>str</span>,</span>
<span id="cb15-22">    return_ids: <span>bool</span> <span>=</span> <span>False</span>,</span>
<span id="cb15-23">) <span>-&gt;</span> Union[<span>str</span>, torch.Tensor]:</span>
<span id="cb15-24">    _p <span>=</span> prompt(press_release)</span>
<span id="cb15-25">    input_ids <span>=</span> tokenizer(_p, return_tensors<span>=</span><span>"pt"</span>, truncation<span>=</span><span>True</span>).input_ids.cuda()</span>
<span id="cb15-26">    out_ids <span>=</span> model.generate(input_ids<span>=</span>input_ids, max_new_tokens<span>=</span><span>5000</span>, do_sample<span>=</span><span>False</span>)</span>
<span id="cb15-27">    ids <span>=</span> out_ids.detach().cpu().numpy()</span>
<span id="cb15-28">    <span>if</span> return_ids:</span>
<span id="cb15-29">        <span>return</span> out_ids</span>
<span id="cb15-30">    <span>return</span> tokenizer.batch_decode(ids, skip_special_tokens<span>=</span><span>True</span>)[<span>0</span>][<span>len</span>(_p) :]</span>
<span id="cb15-31"></span>
<span id="cb15-32"></span>
<span id="cb15-33">tinyllama_sharegpt_model_id <span>=</span> <span>"strickvl/isafpr-tiny-llama-lora-templatefree"</span></span>
<span id="cb15-34">model <span>=</span> AutoPeftModelForCausalLM.from_pretrained(tinyllama_sharegpt_model_id).cuda()</span>
<span id="cb15-35">tokenizer <span>=</span> AutoTokenizer.from_pretrained(tinyllama_sharegpt_model_id)</span>
<span id="cb15-36">tokenizer.pad_token <span>=</span> tokenizer.eos_token</span>
<span id="cb15-37"></span>
<span id="cb15-38"><span>for</span> row <span>in</span> preds_test_data:</span>
<span id="cb15-39">    out <span>=</span> prompt_tok(model, tokenizer, row[<span>"text"</span>])</span>
<span id="cb15-40">    row[<span>"predictions"</span>][<span>"tinyllama-templatefree"</span>] <span>=</span> out</span></code></pre></div>
</details>
</div>
<p>Now if we inspect we’ll see that the new model predictions have been saved into the dataset:</p>
<div>
<div id="cb16"><pre><code><span id="cb16-1"><span>from</span> rich <span>import</span> <span>print</span></span>
<span id="cb16-2"></span>
<span id="cb16-3"><span>print</span>(preds_test_data[<span>0</span>])</span></code></pre></div>
<div>
<pre><span>{</span>
    <span>'name'</span>: <span>'5'</span>,
    <span>'text'</span>: <span>'2013-01-S-025\n\nKABUL, Afghanistan (Jan. 25, 2013)\nDuring a security operation in Andar district, </span>
<span>Ghazni province, yesterday, an Afghan and coalition force killed the Taliban leader, Alaudin. Alaudin oversaw a </span>
<span>group of insurgents responsible for conducting remote-controlled improvised explosive device and small-arms fire </span>
<span>attacks against Afghan and coalition forces. Prior to his death, Alaudin was planning attacks against Afghan </span>
<span>National Police in Ghazni province.'</span>,
    <span>'predictions'</span>: <span>{</span>
        <span>'gpt-3.5-turbo'</span>: <span>'{\n    "name": "Taliban leader Alaudin killed in Ghazni province",\n    "start_date": </span>
<span>"2013-01-24",\n    "event_type": ["captureandkill"],\n    "province": ["ghazni"],\n    "target_group": </span>
<span>["taliban"],\n    "min_killed": 1,\n    "min_captured": 0,\n    "killq": true,\n    "captureq": false,\n    </span>
<span>"killcaptureraid": false,\n    "airstrike": false,\n    "noshotsfired": false,\n    "min_leaders_killed": 1,\n    </span>
<span>"min_leaders_captured": 0\n}'</span>,
        <span>'gpt-4-turbo'</span>: <span>'{\n    "name": "Taliban leader Alaudin killed in Ghazni",\n    "start_date": </span>
<span>"2013-01-24",\n    "event_type": ["captureandkill"],\n    "province": ["ghazni"],\n    "target_group": </span>
<span>["taliban"],\n    "min_killed": 1,\n    "min_captured": 0,\n    "killq": true,\n    "captureq": false,\n    </span>
<span>"killcaptureraid": true,\n    "airstrike": false,\n    "noshotsfired": false,\n    "min_leaders_killed": 1,\n    </span>
<span>"min_leaders_captured": 0\n}'</span>,
        <span>'gpt-4o'</span>: <span>'{\n  "name": "Taliban leader Alaudin killed in Ghazni",\n  "start_date": "2013-01-24",\n  </span>
<span>"event_type": ["insurgentskilled", "captureandkill"],\n  "province": ["ghazni"],\n  "target_group": ["taliban"],\n </span>
<span>"min_killed": 1,\n  "min_captured": 0,\n  "killq": true,\n  "captureq": false,\n  "killcaptureraid": true,\n  </span>
<span>"airstrike": false,\n  "noshotsfired": false,\n  "min_leaders_killed": 1,\n  "min_leaders_captured": 0\n}'</span>,
        <span>'tinyllama-templatefree'</span>: <span>'\n{"name":"Taliban leader killed in </span>
<span>Ghazni","start_date":"2013-01-24","event_type":["insurgentskilled"],"province":["ghazni"],"target_group":["taliban"</span>
<span>],"min_killed":1,"min_captured":0,"killq":true,"captureq":false,"killcaptureraid":false,"airstrike":false,"noshotsf</span>
<span>ired":false,"min_leaders_killed":1,"min_leaders_captured":0}'</span>,
        <span>'tinyllama-sharegpt'</span>: 
<span>'{"name":"2","start_date":"2013-01-24","event_type":["airstrike"],"province":["ghazni"],"target_group":["taliban"],</span>
<span>"min_killed":1,"min_captured":0,"killq":true,"captureq":false,"killcaptureraid":false,"airstrike":true,"noshotsfire</span>
<span>d":false,"min_leaders_killed":1,"min_leaders_captured":0}'</span>
    <span>}</span>,
    <span>'start_date'</span>: <span>datetime.date</span><span>(</span><span>2013</span>, <span>1</span>, <span>24</span><span>)</span>,
    <span>'province'</span>: <span>[</span><span>'ghazni'</span><span>]</span>,
    <span>'target_group'</span>: <span>[</span><span>'taliban'</span><span>]</span>,
    <span>'event_type'</span>: <span>[</span><span>'insurgentskilled'</span><span>]</span>,
    <span>'min_killed'</span>: <span>1</span>,
    <span>'min_captured'</span>: <span>0</span>,
    <span>'killq'</span>: <span>True</span>,
    <span>'captureq'</span>: <span>False</span>,
    <span>'killcaptureraid'</span>: <span>False</span>,
    <span>'airstrike'</span>: <span>False</span>,
    <span>'noshotsfired'</span>: <span>False</span>,
    <span>'min_leaders_killed'</span>: <span>1</span>,
    <span>'min_leaders_captured'</span>: <span>0</span>
<span>}</span>
</pre>
</div>
</div>
</section>
<section id="finetuned-mistral-predictions">
<h2 data-anchor-id="finetuned-mistral-predictions">Finetuned Mistral predictions</h2>
<p>As <a href="https://mlops.systems/posts/2024-06-15-isafpr-first-finetune.html#finetuning-our-model">I noted previously</a>, it was impossible to get the finetuned Mistral model working locally so I did the inference over on Modal where I could spin up a juicy A100 to make the predictions. You’ll see below that the model didn’t perform very well, failing almost all of the evaluations. This is the <code>mistral-lora-templatefree</code> model you’ll see in the charts.</p>
</section>
<section id="finetuned-openai-predictions">
<h2 data-anchor-id="finetuned-openai-predictions">Finetuned OpenAI predictions</h2>
<p>I used OpenAI’s one-click finetuning service <a href="https://mlops.systems/posts/2024-06-17-one-click-finetuning.html#openai">to finetune the <code>gpt-3.5-turbo-1106</code> model</a>. I iterated over my dataset to generate predictions using that finetuned model using the OpenAI SDK.</p>
<div data-execution_count="4">
<details>
<summary>Code</summary>
<div id="cb17"><pre><code><span id="cb17-1"><span>from</span> openai <span>import</span> OpenAI</span>
<span id="cb17-2"><span>import</span> os</span>
<span id="cb17-3"><span>from</span> datasets <span>import</span> load_dataset</span>
<span id="cb17-4"></span>
<span id="cb17-5">preds_test_data <span>=</span> load_dataset(<span>"strickvl/isafpressreleases_with_preds_2"</span>)[</span>
<span id="cb17-6">    <span>"train"</span></span>
<span id="cb17-7">].to_list()</span>
<span id="cb17-8"></span>
<span id="cb17-9">client <span>=</span> OpenAI(api_key<span>=</span>os.getenv(<span>"OPENAI_API_KEY"</span>))</span>
<span id="cb17-10"></span>
<span id="cb17-11"><span>for</span> row <span>in</span> preds_test_data:</span>
<span id="cb17-12">    response <span>=</span> client.chat.completions.create(</span>
<span id="cb17-13">        model<span>=</span><span>"ft:gpt-3.5-turbo-1106:SOME_MODEL_ID_GOES_HERE"</span>,</span>
<span id="cb17-14">        messages<span>=</span>[</span>
<span id="cb17-15">            {</span>
<span id="cb17-16">                <span>"role"</span>: <span>"system"</span>,</span>
<span id="cb17-17">                <span>"content"</span>: <span>"You are an expert at identifying events in a press release. You are precise and always make sure you are correct, drawing inference from the text of the press release. event_types = ['airstrike', 'detention', 'captureandkill', 'insurgentskilled', 'exchangeoffire', 'civiliancasualty'], provinces = ['badakhshan', 'badghis', 'baghlan', 'balkh', 'bamyan', 'day_kundi', 'farah', 'faryab', 'ghazni', 'ghor', 'helmand', 'herat', 'jowzjan', 'kabul', 'kandahar', 'kapisa', 'khost', 'kunar', 'kunduz', 'laghman', 'logar', 'nangarhar', 'nimroz', 'nuristan', 'paktya', 'paktika', 'panjshir', 'parwan', 'samangan', 'sar_e_pul', 'takhar', 'uruzgan', 'wardak', 'zabul'], target_groups = ['taliban', 'haqqani', 'criminals', 'aq', 'hig', 'let', 'imu', 'judq', 'iju', 'hik', 'ttp', 'other']."</span>,</span>
<span id="cb17-18">            },</span>
<span id="cb17-19">            {<span>"role"</span>: <span>"user"</span>, <span>"content"</span>: row[<span>"text"</span>]},</span>
<span id="cb17-20">        ],</span>
<span id="cb17-21">        temperature<span>=</span><span>0</span>,</span>
<span id="cb17-22">    )</span>
<span id="cb17-23">    row[<span>"predictions"</span>][<span>"finetuned-openai-gpt-3.5-turbo-1106"</span>] <span>=</span> response.choices[</span>
<span id="cb17-24">        <span>0</span></span>
<span id="cb17-25">    ].message.content</span></code></pre></div>
</details>
</div>
</section>
<section id="finetuned-mistral-models-via-openpipe">
<h2 data-anchor-id="finetuned-mistral-models-via-openpipe">Finetuned Mistral models (via OpenPipe)</h2>
<p>I finetuned Mistral 7B and Mistral 8x7B models using OpenPipe so as to have something reasonable to compare the other models to. As always, OpenPipe makes it pretty easy to spin up a finetuning job and get predictions.</p>
<div>
<details>
<summary>Code</summary>
<div id="cb18"><pre><code><span id="cb18-1"><span>from</span> openpipe <span>import</span> OpenAI</span>
<span id="cb18-2"><span>import</span> os</span>
<span id="cb18-3"><span>from</span> datasets <span>import</span> load_dataset</span>
<span id="cb18-4"></span>
<span id="cb18-5">preds_test_data <span>=</span> load_dataset(<span>"strickvl/isafpressreleases_test_predictions_old"</span>)[</span>
<span id="cb18-6">    <span>"train"</span></span>
<span id="cb18-7">].to_list()</span>
<span id="cb18-8"></span>
<span id="cb18-9">client <span>=</span> OpenAI(openpipe<span>=</span>{<span>"api_key"</span>: os.getenv(<span>"OPENPIPE_API_KEY"</span>)})</span>
<span id="cb18-10"></span>
<span id="cb18-11"><span>for</span> i, row <span>in</span> <span>enumerate</span>(preds_test_data, <span>1</span>):</span>
<span id="cb18-12">    completion_7b <span>=</span> client.chat.completions.create(</span>
<span id="cb18-13">        model<span>=</span><span>"openpipe:twelve-pumas-invent"</span>,</span>
<span id="cb18-14">        messages<span>=</span>[</span>
<span id="cb18-15">            {</span>
<span id="cb18-16">                <span>"role"</span>: <span>"system"</span>,</span>
<span id="cb18-17">                <span>"content"</span>: <span>"You are an expert at identifying events in a press release. You are precise and always make sure you are correct, drawing inference from the text of the press release. event_types = ['airstrike', 'detention', 'captureandkill', 'insurgentskilled', 'exchangeoffire', 'civiliancasualty'], provinces = ['badakhshan', 'badghis', 'baghlan', 'balkh', 'bamyan', 'day_kundi', 'farah', 'faryab', 'ghazni', 'ghor', 'helmand', 'herat', 'jowzjan', 'kabul', 'kandahar', 'kapisa', 'khost', 'kunar', 'kunduz', 'laghman', 'logar', 'nangarhar', 'nimroz', 'nuristan', 'paktya', 'paktika', 'panjshir', 'parwan', 'samangan', 'sar_e_pul', 'takhar', 'uruzgan', 'wardak', 'zabul'], target_groups = ['taliban', 'haqqani', 'criminals', 'aq', 'hig', 'let', 'imu', 'judq', 'iju', 'hik', 'ttp', 'other']."</span>,</span>
<span id="cb18-18">            },</span>
<span id="cb18-19">            {<span>"role"</span>: <span>"user"</span>, <span>"content"</span>: row[<span>"text"</span>]},</span>
<span id="cb18-20">        ],</span>
<span id="cb18-21">        temperature<span>=</span><span>0</span>,</span>
<span id="cb18-22">        openpipe<span>=</span>{<span>"tags"</span>: {<span>"prompt_id"</span>: <span>"counting"</span>, <span>"any_key"</span>: <span>"any_value"</span>}},</span>
<span id="cb18-23">    )</span>
<span id="cb18-24"></span>
<span id="cb18-25">    row[<span>"predictions"</span>][<span>"finetuned-mistral-7b-optimised-openpipe"</span>] <span>=</span> completion_7b.choices[<span>0</span>].message.content</span>
<span id="cb18-26">    </span>
<span id="cb18-27">    <span>if</span> i <span>%</span> <span>100</span> <span>==</span> <span>0</span>:</span>
<span id="cb18-28">        <span>print</span>(<span>f"</span><span>{</span>i<span>}</span><span>/724 rows complete"</span>)</span></code></pre></div>
</details>
</div>
</section>
<section id="finetuned-solar-llm-via-predibase">
<h2 data-anchor-id="finetuned-solar-llm-via-predibase">Finetuned Solar LLM (via Predibase)</h2>
<p>Predibase announced <a href="https://predibase.com/blog/solar-llm-on-predibase-the-best-llm-for-fine-tuning">a new best-in-class model for finetuning</a>, the Solar LLM from Upstage, a week or so ago so I thought I’d try it out. The advantage of this model is that it’s trained to be good at the kinds of tasks people commonly finetune models for, like structured data extraction. As you’ll see below, it did pretty well! <a href="https://huggingface.co/upstage/SOLAR-10.7B-v1.0">The base model is this one</a>, I think, on the Hugging Face Hub so it’s available for you all to use as well.</p>
<div>
<details>
<summary>Code</summary>
<div id="cb19"><pre><code><span id="cb19-1"><span>from</span> predibase <span>import</span> Predibase</span>
<span id="cb19-2"></span>
<span id="cb19-3">pb <span>=</span> Predibase(api_token<span>=</span><span>"MY_API_TOKEN_GOES_HERE"</span>)</span>
<span id="cb19-4"></span>
<span id="cb19-5">lorax_client <span>=</span> pb.deployments.client(<span>"solar-1-mini-chat-240612"</span>)</span>
<span id="cb19-6"></span>
<span id="cb19-7">preds_test_data <span>=</span> load_dataset(<span>"strickvl/isafpressreleases_test_predictions"</span>)[</span>
<span id="cb19-8">    <span>"train"</span></span>
<span id="cb19-9">].to_list()</span>
<span id="cb19-10"></span>
<span id="cb19-11"><span>for</span> i, row <span>in</span> <span>enumerate</span>(preds_test_data, <span>1</span>):</span>
<span id="cb19-12">    prompt <span>=</span> <span>f"""You are an expert at identifying events in a press release. You are precise and always make sure you are correct, drawing inference from the text of the press release. event_types = ['airstrike', 'detention', 'captureandkill', 'insurgentskilled', 'exchangeoffire', 'civiliancasualty'], provinces = ['badakhshan', 'badghis', 'baghlan', 'balkh', 'bamyan', 'day_kundi', 'farah', 'faryab', 'ghazni', 'ghor', 'helmand', 'herat', 'jowzjan', 'kabul', 'kandahar', 'kapisa', 'khost', 'kunar', 'kunduz', 'laghman', 'logar', 'nangarhar', 'nimroz', 'nuristan', 'paktya', 'paktika', 'panjshir', 'parwan', 'samangan', 'sar_e_pul', 'takhar', 'uruzgan', 'wardak', 'zabul'], target_groups = ['taliban', 'haqqani', 'criminals', 'aq', 'hig', 'let', 'imu', 'judq', 'iju', 'hik', 'ttp', 'other']</span><span>\n\n</span><span>### Instruction:</span><span>\n\n</span><span>PRESS RELEASE TEXT: "</span><span>{</span>row[<span>'text'</span>]<span>}</span><span>"</span><span>\n\n</span><span>### Response:"""</span></span>
<span id="cb19-13">    response <span>=</span> lorax_client.generate(prompt, adapter_id<span>=</span><span>"isafpr/2"</span>, max_new_tokens<span>=</span><span>300</span>).generated_text</span>
<span id="cb19-14"></span>
<span id="cb19-15">    row[<span>"predictions"</span>][<span>"ft-solar-1-mini-chat-240612-predibase"</span>] <span>=</span> response</span>
<span id="cb19-16"></span>
<span id="cb19-17">    <span>if</span> i <span>%</span> <span>100</span> <span>==</span> <span>0</span>:</span>
<span id="cb19-18">        <span>print</span>(<span>f"</span><span>{</span>i<span>}</span><span>/724 rows complete"</span>)</span></code></pre></div>
</details>
</div>
</section>
<section id="finetuned-llama3-predictions-via-openpipe">
<h2 data-anchor-id="finetuned-llama3-predictions-via-openpipe">Finetuned Llama3 predictions (via OpenPipe)</h2>
<p>My locally finetuned Llama3 model hadn’t really worked well, but on OpenPipe the outputs seemed to look ok, so I used these predictions for the final evaluation.</p>
<div data-execution_count="7">
<details>
<summary>Code</summary>
<div id="cb20"><pre><code><span id="cb20-1"><span>from</span> openpipe <span>import</span> OpenAI</span>
<span id="cb20-2"><span>import</span> os</span>
<span id="cb20-3"><span>from</span> datasets <span>import</span> load_dataset</span>
<span id="cb20-4"></span>
<span id="cb20-5">preds_test_data <span>=</span> load_dataset(<span>"strickvl/isafpressreleases_with_preds_3"</span>)[</span>
<span id="cb20-6">    <span>"train"</span></span>
<span id="cb20-7">].to_list()</span>
<span id="cb20-8"></span>
<span id="cb20-9">client <span>=</span> OpenAI(openpipe<span>=</span>{<span>"api_key"</span>: os.getenv(<span>"OPENPIPE_API_KEY"</span>)})</span>
<span id="cb20-10"></span>
<span id="cb20-11"><span>for</span> row <span>in</span> preds_test_data:</span>
<span id="cb20-12">    completion <span>=</span> client.chat.completions.create(</span>
<span id="cb20-13">        model<span>=</span><span>"openpipe:fine-steaks-taste"</span>,</span>
<span id="cb20-14">        messages<span>=</span>[</span>
<span id="cb20-15">            {</span>
<span id="cb20-16">                <span>"role"</span>: <span>"system"</span>,</span>
<span id="cb20-17">                <span>"content"</span>: <span>"You are an expert at identifying events in a press release. You are precise and always make sure you are correct, drawing inference from the text of the press release. event_types = ['airstrike', 'detention', 'captureandkill', 'insurgentskilled', 'exchangeoffire', 'civiliancasualty'], provinces = ['badakhshan', 'badghis', 'baghlan', 'balkh', 'bamyan', 'day_kundi', 'farah', 'faryab', 'ghazni', 'ghor', 'helmand', 'herat', 'jowzjan', 'kabul', 'kandahar', 'kapisa', 'khost', 'kunar', 'kunduz', 'laghman', 'logar', 'nangarhar', 'nimroz', 'nuristan', 'paktya', 'paktika', 'panjshir', 'parwan', 'samangan', 'sar_e_pul', 'takhar', 'uruzgan', 'wardak', 'zabul'], target_groups = ['taliban', 'haqqani', 'criminals', 'aq', 'hig', 'let', 'imu', 'judq', 'iju', 'hik', 'ttp', 'other']."</span>,</span>
<span id="cb20-18">            },</span>
<span id="cb20-19">            {<span>"role"</span>: <span>"user"</span>, <span>"content"</span>: row[<span>"text"</span>]},</span>
<span id="cb20-20">        ],</span>
<span id="cb20-21">        temperature<span>=</span><span>0</span>,</span>
<span id="cb20-22">        openpipe<span>=</span>{<span>"tags"</span>: {<span>"prompt_id"</span>: <span>"counting"</span>, <span>"any_key"</span>: <span>"any_value"</span>}},</span>
<span id="cb20-23">    )</span>
<span id="cb20-24"></span>
<span id="cb20-25">    row[<span>"predictions"</span>][<span>"finetuned-llama3-7b-32k-openpipe"</span>] <span>=</span> completion.choices[</span>
<span id="cb20-26">        <span>0</span></span>
<span id="cb20-27">    ].message.content</span></code></pre></div>
</details>
</div>
<p>By the end of this process you can see we have a bunch of predictions attached to each entry in our dataset. You can view all of these <a href="https://huggingface.co/datasets/strickvl/isafpressreleases_test_predictions">in the public dataset</a> I published <a href="https://huggingface.co/datasets/strickvl/isafpressreleases_test_predictions">on the Hugging Face Hub</a>.</p>
<div data-execution_count="8">
<div id="cb21"><pre><code><span id="cb21-1"><span>from</span> rich <span>import</span> <span>print</span></span>
<span id="cb21-2"></span>
<span id="cb21-3"><span>print</span>(preds_test_data[<span>0</span>])</span></code></pre></div>
<div>
<pre><span>{</span>
    <span>'name'</span>: <span>'5'</span>,
    <span>'text'</span>: <span>'2013-01-S-025\n\nKABUL, Afghanistan (Jan. 25, 2013)\nDuring a security operation in Andar district, </span>
<span>Ghazni province, yesterday, an Afghan and coalition force killed the Taliban leader, Alaudin. Alaudin oversaw a </span>
<span>group of insurgents responsible for conducting remote-controlled improvised explosive device and small-arms fire </span>
<span>attacks against Afghan and coalition forces. Prior to his death, Alaudin was planning attacks against Afghan </span>
<span>National Police in Ghazni province.'</span>,
    <span>'predictions'</span>: <span>{</span>
        <span>'finetuned-llama3-7b-32k-openpipe'</span>: 
<span>'{"name":"1","start_date":"2013-01-24","event_type":["insurgentskilled"],"province":["ghazni"],"target_group":["tal</span>
<span>iban"],"min_killed":1,"min_captured":0,"killq":true,"captureq":false,"killcaptureraid":true,"airstrike":false,"nosh</span>
<span>otsfired":false,"min_leaders_killed":1,"min_leaders_captured":0}'</span>,
        <span>'finetuned-mistral-7b-optimised-openpipe'</span>: 
<span>'{"name":"1","start_date":"2013-01-24","event_type":["insurgentskilled"],"province":["ghazni"],"target_group":["tal</span>
<span>iban"],"min_killed":1,"min_captured":0,"killq":true,"captureq":false,"killcaptureraid":true,"airstrike":false,"nosh</span>
<span>otsfired":false,"min_leaders_killed":1,"min_leaders_captured":0}'</span>,
        <span>'finetuned-openai-gpt-3.5-turbo-1106'</span>: 
<span>'{"name":"4","start_date":"2013-01-24","event_type":["insurgentskilled"],"province":["ghazni"],"target_group":["tal</span>
<span>iban"],"min_killed":1,"min_captured":0,"killq":true,"captureq":false,"killcaptureraid":true,"airstrike":false,"nosh</span>
<span>otsfired":false,"min_leaders_killed":1,"min_leaders_captured":0}'</span>,
        <span>'gpt-3.5-turbo'</span>: <span>'{\n    "name": "Taliban leader Alaudin killed in Ghazni province",\n    "start_date": </span>
<span>"2013-01-24",\n    "event_type": ["captureandkill"],\n    "province": ["ghazni"],\n    "target_group": </span>
<span>["taliban"],\n    "min_killed": 1,\n    "min_captured": 0,\n    "killq": true,\n    "captureq": false,\n    </span>
<span>"killcaptureraid": false,\n    "airstrike": false,\n    "noshotsfired": false,\n    "min_leaders_killed": 1,\n    </span>
<span>"min_leaders_captured": 0\n}'</span>,
        <span>'gpt-4-turbo'</span>: <span>'{\n    "name": "Taliban leader Alaudin killed in Ghazni",\n    "start_date": </span>
<span>"2013-01-24",\n    "event_type": ["captureandkill"],\n    "province": ["ghazni"],\n    "target_group": </span>
<span>["taliban"],\n    "min_killed": 1,\n    "min_captured": 0,\n    "killq": true,\n    "captureq": false,\n    </span>
<span>"killcaptureraid": true,\n    "airstrike": false,\n    "noshotsfired": false,\n    "min_leaders_killed": 1,\n    </span>
<span>"min_leaders_captured": 0\n}'</span>,
        <span>'gpt-4o'</span>: <span>'{\n  "name": "Taliban leader Alaudin killed in Ghazni",\n  "start_date": "2013-01-24",\n  </span>
<span>"event_type": ["insurgentskilled", "captureandkill"],\n  "province": ["ghazni"],\n  "target_group": ["taliban"],\n </span>
<span>"min_killed": 1,\n  "min_captured": 0,\n  "killq": true,\n  "captureq": false,\n  "killcaptureraid": true,\n  </span>
<span>"airstrike": false,\n  "noshotsfired": false,\n  "min_leaders_killed": 1,\n  "min_leaders_captured": 0\n}'</span>,
        <span>'mistral-lora-templatefree'</span>: <span>'1'</span>,
        <span>'tinyllama-sharegpt'</span>: 
<span>'{"name":"2","start_date":"2013-01-24","event_type":["airstrike"],"province":["ghazni"],"target_group":["taliban"],</span>
<span>"min_killed":1,"min_captured":0,"killq":true,"captureq":false,"killcaptureraid":false,"airstrike":true,"noshotsfire</span>
<span>d":false,"min_leaders_killed":1,"min_leaders_captured":0}'</span>,
        <span>'tinyllama-templatefree'</span>: <span>'\n{"name":"Taliban leader killed in </span>
<span>Ghazni","start_date":"2013-01-24","event_type":["insurgentskilled"],"province":["ghazni"],"target_group":["taliban"</span>
<span>],"min_killed":1,"min_captured":0,"killq":true,"captureq":false,"killcaptureraid":false,"airstrike":false,"noshotsf</span>
<span>ired":false,"min_leaders_killed":1,"min_leaders_captured":0}'</span>,
        <span>'ft-solar-1-mini-chat-240612-predibase'</span>: 
<span>'\n\n{"name":"2","start_date":"2013-01-24","event_type":["insurgentskilled"],"province":["ghazni"],"target_group":[</span>
<span>"taliban"],"min_killed":1,"min_captured":0,"killq":true,"captureq":false,"killcaptureraid":true,"airstrike":false,"</span>
<span>noshotsfired":false,"min_leaders_killed":1,"min_leaders_captured":0}'</span>
    <span>}</span>,
    <span>'start_date'</span>: <span>datetime.date</span><span>(</span><span>2013</span>, <span>1</span>, <span>24</span><span>)</span>,
    <span>'province'</span>: <span>[</span><span>'ghazni'</span><span>]</span>,
    <span>'target_group'</span>: <span>[</span><span>'taliban'</span><span>]</span>,
    <span>'event_type'</span>: <span>[</span><span>'insurgentskilled'</span><span>]</span>,
    <span>'min_killed'</span>: <span>1</span>,
    <span>'min_captured'</span>: <span>0</span>,
    <span>'killq'</span>: <span>True</span>,
    <span>'captureq'</span>: <span>False</span>,
    <span>'killcaptureraid'</span>: <span>False</span>,
    <span>'airstrike'</span>: <span>False</span>,
    <span>'noshotsfired'</span>: <span>False</span>,
    <span>'min_leaders_killed'</span>: <span>1</span>,
    <span>'min_leaders_captured'</span>: <span>0</span>
<span>}</span>
</pre>
</div>
</div>
<p>Unfortunately the Qwen2 inference on Predibase is still not working so I’ll skip that finetuned model for the moment.</p>
<p>Now that we have predictions from seven finetuned models and three OpenAI models (to compare against), we can run our evaluations. I’ll start with a simple check to see what proportion of the predictions are even valid JSON.</p>
</section>
</section>
<section id="json-validity-test">
<h2>JSON Validity Test</h2>
<div id="cb22"><pre><code><span id="cb22-1"><span>from</span> datasets <span>import</span> load_dataset</span>
<span id="cb22-2"></span>
<span id="cb22-3">dataset_with_preds <span>=</span> load_dataset(<span>"strickvl/isafpressreleases_test_predictions"</span>)[</span>
<span id="cb22-4">    <span>"train"</span></span>
<span id="cb22-5">].to_list()</span></code></pre></div>
<div data-execution_count="30">
<details>
<summary>Code</summary>
<div id="cb23"><pre><code><span id="cb23-1"><span>import</span> matplotlib.pyplot <span>as</span> plt</span>
<span id="cb23-2"><span>import</span> json</span>
<span id="cb23-3"></span>
<span id="cb23-4">json_aggregate_scores <span>=</span> {</span>
<span id="cb23-5">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb23-6">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb23-7">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb23-8">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb23-9">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb23-10">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb23-11">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb23-12">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb23-13">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb23-14">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb23-15">}</span>
<span id="cb23-16"></span>
<span id="cb23-17"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb23-18">    <span>for</span> model <span>in</span> row[<span>"predictions"</span>]:</span>
<span id="cb23-19">        <span>try</span>:</span>
<span id="cb23-20">            json.loads(row[<span>"predictions"</span>][model])</span>
<span id="cb23-21">            json_aggregate_scores[model] <span>+=</span> <span>1</span></span>
<span id="cb23-22">        <span>except</span> (json.JSONDecodeError, <span>TypeError</span>):</span>
<span id="cb23-23">            <span>pass</span></span>
<span id="cb23-24"></span>
<span id="cb23-25"><span># print(json_aggregate_scores)</span></span>
<span id="cb23-26"></span>
<span id="cb23-27"><span># Separate GPT models and finetuned models</span></span>
<span id="cb23-28">gpt_models <span>=</span> [<span>"gpt-4o"</span>, <span>"gpt-4-turbo"</span>, <span>"gpt-3.5-turbo"</span>]</span>
<span id="cb23-29">finetuned_models <span>=</span> [</span>
<span id="cb23-30">    model <span>for</span> model <span>in</span> json_aggregate_scores.keys() <span>if</span> model <span>not</span> <span>in</span> gpt_models</span>
<span id="cb23-31">]</span>
<span id="cb23-32"></span>
<span id="cb23-33"><span># Create lists for plotting</span></span>
<span id="cb23-34">models <span>=</span> <span>list</span>(json_aggregate_scores.keys())</span>
<span id="cb23-35">scores <span>=</span> <span>list</span>(json_aggregate_scores.values())</span>
<span id="cb23-36">colors <span>=</span> [<span>"#1f77b4"</span> <span>if</span> model <span>in</span> gpt_models <span>else</span> <span>"#ff7f0e"</span> <span>for</span> model <span>in</span> models]</span>
<span id="cb23-37"></span>
<span id="cb23-38"><span># Create the plot</span></span>
<span id="cb23-39">fig, ax <span>=</span> plt.subplots(figsize<span>=</span>(<span>12</span>, <span>10</span>))</span>
<span id="cb23-40"></span>
<span id="cb23-41"><span># Plot horizontal bars</span></span>
<span id="cb23-42">bars <span>=</span> ax.barh(models, scores, color<span>=</span>colors)</span>
<span id="cb23-43"></span>
<span id="cb23-44"><span># Customize the plot</span></span>
<span id="cb23-45">ax.set_xlabel(<span>"Number of Valid JSON Outputs"</span>)</span>
<span id="cb23-46">ax.set_title(<span>"Valid JSON Outputs by Model"</span>)</span>
<span id="cb23-47">ax.set_xlim(<span>0</span>, <span>750</span>)  <span># Set x-axis limit to slightly above max score</span></span>
<span id="cb23-48"></span>
<span id="cb23-49"><span># Reduce font size for y-axis labels (model names)</span></span>
<span id="cb23-50">ax.tick_params(axis<span>=</span><span>"y"</span>, labelsize<span>=</span><span>8</span>)</span>
<span id="cb23-51"></span>
<span id="cb23-52"><span># Add value labels at the end of each bar</span></span>
<span id="cb23-53"><span>for</span> bar <span>in</span> bars:</span>
<span id="cb23-54">    width <span>=</span> bar.get_width()</span>
<span id="cb23-55">    ax.text(</span>
<span id="cb23-56">        width, bar.get_y() <span>+</span> bar.get_height() <span>/</span> <span>2</span>, <span>f"</span><span>{</span>width<span>}</span><span>"</span>, ha<span>=</span><span>"left"</span>, va<span>=</span><span>"center"</span></span>
<span id="cb23-57">    )</span>
<span id="cb23-58"></span>
<span id="cb23-59"><span># Create custom legend handles</span></span>
<span id="cb23-60"><span>from</span> matplotlib.patches <span>import</span> Patch</span>
<span id="cb23-61"></span>
<span id="cb23-62">legend_elements <span>=</span> [</span>
<span id="cb23-63">    Patch(facecolor<span>=</span><span>"#ff7f0e"</span>, label<span>=</span><span>"Finetuned Models"</span>),</span>
<span id="cb23-64">    Patch(facecolor<span>=</span><span>"#1f77b4"</span>, label<span>=</span><span>"GPT Models"</span>),</span>
<span id="cb23-65">]</span>
<span id="cb23-66"></span>
<span id="cb23-67"><span># Add a legend outside the plot</span></span>
<span id="cb23-68">ax.legend(handles<span>=</span>legend_elements, loc<span>=</span><span>"center left"</span>, bbox_to_anchor<span>=</span>(<span>1</span>, <span>0.5</span>))</span>
<span id="cb23-69"></span>
<span id="cb23-70"><span># Adjust layout to prevent clipping and make room for the legend</span></span>
<span id="cb23-71">plt.tight_layout()</span>
<span id="cb23-72">plt.subplots_adjust(right<span>=</span><span>0.85</span>)</span>
<span id="cb23-73"></span>
<span id="cb23-74"><span># Show the plot</span></span>
<span id="cb23-75">plt.show()</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-22-output-1.png"></p>
</div>
<p>It’s already instructive to see the difference between the templatefree and the sharegpt template’s ability to generate valid JSON for the TinyLlama finetune. The OpenAI models generate valid JSON every single time, as does the finetuned Mistral and Llama3 models.</p>
<p>While writing the code to evaluate the models, I noticed that some entries were blank or had no predictions at all, so I looked into that next.</p>
<div data-execution_count="31">
<div id="cb24"><pre><code><span id="cb24-1"><span># find out how many of the predictions are None values or empty strings</span></span>
<span id="cb24-2">missing_values <span>=</span> {</span>
<span id="cb24-3">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb24-4">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb24-5">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb24-6">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb24-7">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb24-8">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb24-9">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb24-10">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb24-11">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb24-12">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb24-13">}</span>
<span id="cb24-14"></span>
<span id="cb24-15"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb24-16">    <span>for</span> model <span>in</span> row[<span>"predictions"</span>]:</span>
<span id="cb24-17">        <span>if</span> row[<span>"predictions"</span>][model] <span>is</span> <span>None</span> <span>or</span> row[<span>"predictions"</span>][model] <span>==</span> <span>""</span>:</span>
<span id="cb24-18">            missing_values[model] <span>+=</span> <span>1</span></span>
<span id="cb24-19"></span>
<span id="cb24-20"><span>print</span>(missing_values)</span></code></pre></div>
<div>
<pre><span>{</span>
    <span>'gpt-4o'</span>: <span>0</span>,
    <span>'gpt-4-turbo'</span>: <span>0</span>,
    <span>'gpt-3.5-turbo'</span>: <span>0</span>,
    <span>'tinyllama-templatefree'</span>: <span>0</span>,
    <span>'tinyllama-sharegpt'</span>: <span>38</span>,
    <span>'finetuned-openai-gpt-3.5-turbo-1106'</span>: <span>0</span>,
    <span>'finetuned-llama3-7b-32k-openpipe'</span>: <span>0</span>,
    <span>'mistral-lora-templatefree'</span>: <span>0</span>,
    <span>'finetuned-mistral-7b-optimised-openpipe'</span>: <span>0</span>,
    <span>'ft-solar-1-mini-chat-240612-predibase'</span>: <span>0</span>
<span>}</span>
</pre>
</div>
</div>
<p>So were it not for the missing values, the <code>tinyllama-sharegpt</code> model would have had all 724 predictions, and valid JSON as well.</p>
<p>Now we can get into what we’re really interested in: accuracy. I’ll calculate scores for all the properties where it makes sense for us to have a score and then show the results comparing the models.</p>
<p>These are:</p>
<ul>
<li><code>start_date</code></li>
<li><code>province</code></li>
<li><code>target_group</code></li>
<li><code>event_type</code></li>
<li><code>min_killed</code></li>
<li><code>min_captured</code></li>
<li><code>killq</code></li>
<li><code>captureq</code></li>
<li><code>killcaptureraid</code></li>
<li><code>airstrike</code></li>
<li><code>noshotsfired</code></li>
<li><code>min_leaders_killed</code></li>
<li><code>min_leaders_captured</code></li>
</ul>
<p>Important note, for all these charts that follow, the total number of tasks was 724, so the numbers are out of a total of 724.</p>
</section>
<section id="start-date-accuracy">
<h2>Start Date Accuracy</h2>
<div data-execution_count="14">
<details>
<summary>Code</summary>
<div id="cb25"><pre><code><span id="cb25-1">start_date_scores <span>=</span> {</span>
<span id="cb25-2">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb25-3">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb25-4">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb25-5">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb25-6">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb25-7">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb25-8">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb25-9">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb25-10">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb25-11">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb25-12">}</span>
<span id="cb25-13"></span>
<span id="cb25-14"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb25-15">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb25-16">        <span>if</span> <span>not</span> pred:</span>
<span id="cb25-17">            <span>continue</span></span>
<span id="cb25-18">        <span>try</span>:</span>
<span id="cb25-19">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb25-20">            <span>if</span> (</span>
<span id="cb25-21">                <span>type</span>(pred_dict) <span>not</span> <span>in</span> (<span>int</span>, <span>float</span>)</span>
<span id="cb25-22">                <span>and</span> pred_dict.get(<span>"start_date"</span>)</span>
<span id="cb25-23">                <span>and</span> (pred_dict[<span>"start_date"</span>] <span>==</span> row[<span>"start_date"</span>].strftime(<span>"%Y-%m-</span><span>%d</span><span>"</span>))</span>
<span id="cb25-24">            ):</span>
<span id="cb25-25">                start_date_scores[model_name] <span>+=</span> <span>1</span></span>
<span id="cb25-26">        <span>except</span> json.JSONDecodeError:</span>
<span id="cb25-27">            <span>pass</span></span>
<span id="cb25-28"></span>
<span id="cb25-29"><span>print</span>(start_date_scores)</span></code></pre></div>
</details>
<div>
<pre><span>{</span>
    <span>'gpt-4o'</span>: <span>527</span>,
    <span>'gpt-4-turbo'</span>: <span>522</span>,
    <span>'gpt-3.5-turbo'</span>: <span>492</span>,
    <span>'tinyllama-templatefree'</span>: <span>231</span>,
    <span>'tinyllama-sharegpt'</span>: <span>479</span>,
    <span>'finetuned-openai-gpt-3.5-turbo-1106'</span>: <span>646</span>,
    <span>'finetuned-llama3-7b-32k-openpipe'</span>: <span>585</span>,
    <span>'mistral-lora-templatefree'</span>: <span>0</span>,
    <span>'finetuned-mistral-7b-optimised-openpipe'</span>: <span>636</span>,
    <span>'ft-solar-1-mini-chat-240612-predibase'</span>: <span>649</span>
<span>}</span>
</pre>
</div>
</div>
<div data-execution_count="15">
<details>
<summary>Code</summary>
<div id="cb26"><pre><code><span id="cb26-1"><span>import</span> matplotlib.pyplot <span>as</span> plt</span>
<span id="cb26-2"></span>
<span id="cb26-3"><span># Separate GPT models and finetuned models</span></span>
<span id="cb26-4">gpt_models <span>=</span> [<span>"gpt-4o"</span>, <span>"gpt-4-turbo"</span>, <span>"gpt-3.5-turbo"</span>]</span>
<span id="cb26-5">finetuned_models <span>=</span> [</span>
<span id="cb26-6">    model <span>for</span> model <span>in</span> start_date_scores.keys() <span>if</span> model <span>not</span> <span>in</span> gpt_models</span>
<span id="cb26-7">]</span>
<span id="cb26-8"></span>
<span id="cb26-9"><span># Create lists for plotting</span></span>
<span id="cb26-10">models <span>=</span> <span>list</span>(start_date_scores.keys())</span>
<span id="cb26-11">scores <span>=</span> <span>list</span>(start_date_scores.values())</span>
<span id="cb26-12">colors <span>=</span> [<span>"#1f77b4"</span> <span>if</span> model <span>in</span> gpt_models <span>else</span> <span>"#ff7f0e"</span> <span>for</span> model <span>in</span> models]</span>
<span id="cb26-13"></span>
<span id="cb26-14"><span># Create the plot</span></span>
<span id="cb26-15">fig, ax <span>=</span> plt.subplots(figsize<span>=</span>(<span>12</span>, <span>10</span>))</span>
<span id="cb26-16"></span>
<span id="cb26-17"><span># Plot horizontal bars</span></span>
<span id="cb26-18">bars <span>=</span> ax.barh(models, scores, color<span>=</span>colors)</span>
<span id="cb26-19"></span>
<span id="cb26-20"><span># Customize the plot</span></span>
<span id="cb26-21">ax.set_xlabel(<span>"Number of Correct Start Dates"</span>)</span>
<span id="cb26-22">ax.set_title(<span>"Correct Start Dates by Model"</span>)</span>
<span id="cb26-23">ax.set_xlim(<span>0</span>, <span>max</span>(scores) <span>+</span> <span>50</span>)  <span># Set x-axis limit to slightly above max score</span></span>
<span id="cb26-24"></span>
<span id="cb26-25"><span># Reduce font size for y-axis labels (model names)</span></span>
<span id="cb26-26">ax.tick_params(axis<span>=</span><span>"y"</span>, labelsize<span>=</span><span>8</span>)</span>
<span id="cb26-27"></span>
<span id="cb26-28"><span># Add value labels at the end of each bar</span></span>
<span id="cb26-29"><span>for</span> bar <span>in</span> bars:</span>
<span id="cb26-30">    width <span>=</span> bar.get_width()</span>
<span id="cb26-31">    ax.text(</span>
<span id="cb26-32">        width, bar.get_y() <span>+</span> bar.get_height() <span>/</span> <span>2</span>, <span>f"</span><span>{</span>width<span>}</span><span>"</span>, ha<span>=</span><span>"left"</span>, va<span>=</span><span>"center"</span></span>
<span id="cb26-33">    )</span>
<span id="cb26-34"></span>
<span id="cb26-35"><span># Create custom legend handles</span></span>
<span id="cb26-36"><span>from</span> matplotlib.patches <span>import</span> Patch</span>
<span id="cb26-37"></span>
<span id="cb26-38">legend_elements <span>=</span> [</span>
<span id="cb26-39">    Patch(facecolor<span>=</span><span>"#ff7f0e"</span>, label<span>=</span><span>"Finetuned Models"</span>),</span>
<span id="cb26-40">    Patch(facecolor<span>=</span><span>"#1f77b4"</span>, label<span>=</span><span>"GPT Models"</span>),</span>
<span id="cb26-41">]</span>
<span id="cb26-42"></span>
<span id="cb26-43"><span># Add a legend outside the plot</span></span>
<span id="cb26-44">ax.legend(handles<span>=</span>legend_elements, loc<span>=</span><span>"center left"</span>, bbox_to_anchor<span>=</span>(<span>1</span>, <span>0.5</span>))</span>
<span id="cb26-45"></span>
<span id="cb26-46"><span># Adjust layout to prevent clipping and make room for the legend</span></span>
<span id="cb26-47">plt.tight_layout()</span>
<span id="cb26-48">plt.subplots_adjust(right<span>=</span><span>0.85</span>)</span>
<span id="cb26-49"></span>
<span id="cb26-50"><span># Show the plot</span></span>
<span id="cb26-51">plt.show()</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-25-output-1.png"></p>
</div>
<p>Both Solar and our finetuned GPT3.5 model performed best on predicting which date the event took place. I’m surprised how poorly the OpenAI models did here, actually. And even our best model still got 75 of the dates wrong. This feels like something that I’d want to improve on. Possibly synthetic data could help, or maybe just an improvement in the finetuning prompt as well.</p>
</section>
<section id="province-accuracy">
<h2>Province Accuracy</h2>
<div data-execution_count="16">
<details>
<summary>Code</summary>
<div id="cb27"><pre><code><span id="cb27-1">province_scores <span>=</span> {</span>
<span id="cb27-2">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb27-3">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb27-4">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb27-5">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb27-6">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb27-7">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb27-8">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb27-9">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb27-10">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb27-11">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb27-12">}</span>
<span id="cb27-13"></span>
<span id="cb27-14"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb27-15">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb27-16">        <span>if</span> <span>not</span> pred:</span>
<span id="cb27-17">            <span>continue</span></span>
<span id="cb27-18">        <span>try</span>:</span>
<span id="cb27-19">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb27-20">            <span>if</span> <span>isinstance</span>(pred_dict, <span>dict</span>) <span>and</span> <span>"province"</span> <span>in</span> pred_dict:</span>
<span id="cb27-21">                pred_provinces <span>=</span> pred_dict[<span>"province"</span>]</span>
<span id="cb27-22">                <span>if</span> <span>isinstance</span>(pred_provinces, <span>str</span>):</span>
<span id="cb27-23">                    pred_provinces <span>=</span> [pred_provinces]</span>
<span id="cb27-24">                <span>if</span> <span>set</span>(pred_provinces) <span>==</span> <span>set</span>(row[<span>"province"</span>]):</span>
<span id="cb27-25">                    province_scores[model_name] <span>+=</span> <span>1</span></span>
<span id="cb27-26">        <span>except</span> (json.JSONDecodeError, <span>KeyError</span>, <span>TypeError</span>):</span>
<span id="cb27-27">            <span>pass</span></span>
<span id="cb27-28"></span>
<span id="cb27-29"><span>print</span>(province_scores)</span></code></pre></div>
</details>
<div>
<pre><span>{</span>
    <span>'gpt-4o'</span>: <span>649</span>,
    <span>'gpt-4-turbo'</span>: <span>645</span>,
    <span>'gpt-3.5-turbo'</span>: <span>595</span>,
    <span>'tinyllama-templatefree'</span>: <span>335</span>,
    <span>'tinyllama-sharegpt'</span>: <span>660</span>,
    <span>'finetuned-openai-gpt-3.5-turbo-1106'</span>: <span>704</span>,
    <span>'finetuned-llama3-7b-32k-openpipe'</span>: <span>707</span>,
    <span>'mistral-lora-templatefree'</span>: <span>0</span>,
    <span>'finetuned-mistral-7b-optimised-openpipe'</span>: <span>711</span>,
    <span>'ft-solar-1-mini-chat-240612-predibase'</span>: <span>704</span>
<span>}</span>
</pre>
</div>
</div>
<div data-execution_count="17">
<details>
<summary>Code</summary>
<div id="cb28"><pre><code><span id="cb28-1"><span>import</span> matplotlib.pyplot <span>as</span> plt</span>
<span id="cb28-2"></span>
<span id="cb28-3"><span># Separate GPT models and finetuned models</span></span>
<span id="cb28-4">gpt_models <span>=</span> [<span>"gpt-4o"</span>, <span>"gpt-4-turbo"</span>, <span>"gpt-3.5-turbo"</span>]</span>
<span id="cb28-5">finetuned_models <span>=</span> [</span>
<span id="cb28-6">    model <span>for</span> model <span>in</span> province_scores.keys() <span>if</span> model <span>not</span> <span>in</span> gpt_models</span>
<span id="cb28-7">]</span>
<span id="cb28-8"></span>
<span id="cb28-9"><span># Create lists for plotting</span></span>
<span id="cb28-10">models <span>=</span> <span>list</span>(province_scores.keys())</span>
<span id="cb28-11">scores <span>=</span> <span>list</span>(province_scores.values())</span>
<span id="cb28-12">colors <span>=</span> [<span>"#1f77b4"</span> <span>if</span> model <span>in</span> gpt_models <span>else</span> <span>"#ff7f0e"</span> <span>for</span> model <span>in</span> models]</span>
<span id="cb28-13"></span>
<span id="cb28-14"><span># Create the plot</span></span>
<span id="cb28-15">fig, ax <span>=</span> plt.subplots(figsize<span>=</span>(<span>12</span>, <span>10</span>))</span>
<span id="cb28-16"></span>
<span id="cb28-17"><span># Plot horizontal bars</span></span>
<span id="cb28-18">bars <span>=</span> ax.barh(models, scores, color<span>=</span>colors)</span>
<span id="cb28-19"></span>
<span id="cb28-20"><span># Customize the plot</span></span>
<span id="cb28-21">ax.set_xlabel(<span>"Number of Correct Provinces"</span>)</span>
<span id="cb28-22">ax.set_title(<span>"Correct Provinces by Model"</span>)</span>
<span id="cb28-23">ax.set_xlim(<span>0</span>, <span>max</span>(scores) <span>+</span> <span>50</span>)  <span># Set x-axis limit to slightly above max score</span></span>
<span id="cb28-24"></span>
<span id="cb28-25"><span># Reduce font size for y-axis labels (model names)</span></span>
<span id="cb28-26">ax.tick_params(axis<span>=</span><span>"y"</span>, labelsize<span>=</span><span>8</span>)</span>
<span id="cb28-27"></span>
<span id="cb28-28"><span># Add value labels at the end of each bar</span></span>
<span id="cb28-29"><span>for</span> bar <span>in</span> bars:</span>
<span id="cb28-30">    width <span>=</span> bar.get_width()</span>
<span id="cb28-31">    ax.text(</span>
<span id="cb28-32">        width, bar.get_y() <span>+</span> bar.get_height() <span>/</span> <span>2</span>, <span>f"</span><span>{</span>width<span>}</span><span>"</span>, ha<span>=</span><span>"left"</span>, va<span>=</span><span>"center"</span></span>
<span id="cb28-33">    )</span>
<span id="cb28-34"></span>
<span id="cb28-35"><span># Create custom legend handles</span></span>
<span id="cb28-36"><span>from</span> matplotlib.patches <span>import</span> Patch</span>
<span id="cb28-37"></span>
<span id="cb28-38">legend_elements <span>=</span> [</span>
<span id="cb28-39">    Patch(facecolor<span>=</span><span>"#ff7f0e"</span>, label<span>=</span><span>"Finetuned Models"</span>),</span>
<span id="cb28-40">    Patch(facecolor<span>=</span><span>"#1f77b4"</span>, label<span>=</span><span>"GPT Models"</span>),</span>
<span id="cb28-41">]</span>
<span id="cb28-42"></span>
<span id="cb28-43"><span># Add a legend outside the plot</span></span>
<span id="cb28-44">ax.legend(handles<span>=</span>legend_elements, loc<span>=</span><span>"center left"</span>, bbox_to_anchor<span>=</span>(<span>1</span>, <span>0.5</span>))</span>
<span id="cb28-45"></span>
<span id="cb28-46"><span># Adjust layout to prevent clipping and make room for the legend</span></span>
<span id="cb28-47">plt.tight_layout()</span>
<span id="cb28-48">plt.subplots_adjust(right<span>=</span><span>0.85</span>)</span>
<span id="cb28-49"></span>
<span id="cb28-50"><span># Show the plot</span></span>
<span id="cb28-51">plt.show()</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-27-output-1.png"></p>
</div>
<p>In what will become a theme, the finetuned models actually outperform the OpenAI models, only making a few mistakes. Once again I’m surprised how poorly GPT3.5 did on this task.</p>
</section>
<section id="target-group-accuracy">
<h2>Target Group Accuracy</h2>
<p>Here there are potentially multiple groups mentioned as target group so I’ll give a score out of 1 of how many of the groups the model predicted were correct.</p>
<div data-execution_count="32">
<details>
<summary>Code</summary>
<div id="cb29"><pre><code><span id="cb29-1"><span>import</span> matplotlib.pyplot <span>as</span> plt</span>
<span id="cb29-2"></span>
<span id="cb29-3">target_group_scores <span>=</span> {</span>
<span id="cb29-4">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb29-5">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb29-6">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb29-7">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb29-8">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb29-9">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb29-10">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb29-11">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb29-12">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb29-13">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb29-14">}</span>
<span id="cb29-15"></span>
<span id="cb29-16"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb29-17">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb29-18">        <span>if</span> <span>not</span> pred:</span>
<span id="cb29-19">            <span>continue</span></span>
<span id="cb29-20">        <span>try</span>:</span>
<span id="cb29-21">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb29-22">            <span>if</span> <span>isinstance</span>(pred_dict, <span>dict</span>) <span>and</span> <span>"target_group"</span> <span>in</span> pred_dict:</span>
<span id="cb29-23">                pred_groups <span>=</span> pred_dict[<span>"target_group"</span>]</span>
<span id="cb29-24">                <span>if</span> <span>isinstance</span>(pred_groups, <span>str</span>):</span>
<span id="cb29-25">                    pred_groups <span>=</span> [pred_groups]</span>
<span id="cb29-26">                correct_groups <span>=</span> row[<span>"target_group"</span>]</span>
<span id="cb29-27">                <span>if</span> <span>isinstance</span>(correct_groups, <span>str</span>):</span>
<span id="cb29-28">                    correct_groups <span>=</span> [correct_groups]</span>
<span id="cb29-29">                <span>if</span> correct_groups:</span>
<span id="cb29-30">                    score <span>=</span> <span>len</span>(<span>set</span>(pred_groups) <span>&amp;</span> <span>set</span>(correct_groups)) <span>/</span> <span>len</span>(</span>
<span id="cb29-31">                        <span>set</span>(correct_groups)</span>
<span id="cb29-32">                    )</span>
<span id="cb29-33">                    target_group_scores[model_name] <span>+=</span> score</span>
<span id="cb29-34">        <span>except</span> (json.JSONDecodeError, <span>KeyError</span>, <span>TypeError</span>):</span>
<span id="cb29-35">            <span>pass</span></span>
<span id="cb29-36"></span>
<span id="cb29-37"><span># Separate GPT models and finetuned models</span></span>
<span id="cb29-38">gpt_models <span>=</span> [<span>"gpt-4o"</span>, <span>"gpt-4-turbo"</span>, <span>"gpt-3.5-turbo"</span>]</span>
<span id="cb29-39">finetuned_models <span>=</span> [</span>
<span id="cb29-40">    model <span>for</span> model <span>in</span> target_group_scores.keys() <span>if</span> model <span>not</span> <span>in</span> gpt_models</span>
<span id="cb29-41">]</span>
<span id="cb29-42"></span>
<span id="cb29-43"><span># Create lists for plotting</span></span>
<span id="cb29-44">models <span>=</span> <span>list</span>(target_group_scores.keys())</span>
<span id="cb29-45">scores <span>=</span> <span>list</span>(target_group_scores.values())</span>
<span id="cb29-46">colors <span>=</span> [<span>"#1f77b4"</span> <span>if</span> model <span>in</span> gpt_models <span>else</span> <span>"#ff7f0e"</span> <span>for</span> model <span>in</span> models]</span>
<span id="cb29-47"></span>
<span id="cb29-48"><span># Create the plot</span></span>
<span id="cb29-49">fig, ax <span>=</span> plt.subplots(figsize<span>=</span>(<span>12</span>, <span>10</span>))</span>
<span id="cb29-50"></span>
<span id="cb29-51"><span># Plot horizontal bars</span></span>
<span id="cb29-52">bars <span>=</span> ax.barh(models, scores, color<span>=</span>colors)</span>
<span id="cb29-53"></span>
<span id="cb29-54"><span># Customize the plot</span></span>
<span id="cb29-55">ax.set_xlabel(<span>"Target Group Accuracy Score"</span>)</span>
<span id="cb29-56">ax.set_title(<span>"Target Group Accuracy by Model"</span>)</span>
<span id="cb29-57">ax.set_xlim(<span>0</span>, <span>max</span>(scores) <span>+</span> <span>50</span>)  <span># Set x-axis limit to slightly above max score</span></span>
<span id="cb29-58"></span>
<span id="cb29-59"><span># Reduce font size for y-axis labels (model names)</span></span>
<span id="cb29-60">ax.tick_params(axis<span>=</span><span>"y"</span>, labelsize<span>=</span><span>8</span>)</span>
<span id="cb29-61"></span>
<span id="cb29-62"><span># Add value labels at the end of each bar</span></span>
<span id="cb29-63"><span>for</span> bar <span>in</span> bars:</span>
<span id="cb29-64">    width <span>=</span> bar.get_width()</span>
<span id="cb29-65">    ax.text(</span>
<span id="cb29-66">        width,</span>
<span id="cb29-67">        bar.get_y() <span>+</span> bar.get_height() <span>/</span> <span>2</span>,</span>
<span id="cb29-68">        <span>f"</span><span>{</span>width<span>:.2f}</span><span>"</span>,</span>
<span id="cb29-69">        ha<span>=</span><span>"left"</span>,</span>
<span id="cb29-70">        va<span>=</span><span>"center"</span>,</span>
<span id="cb29-71">    )</span>
<span id="cb29-72"></span>
<span id="cb29-73"><span># Create custom legend handles</span></span>
<span id="cb29-74"><span>from</span> matplotlib.patches <span>import</span> Patch</span>
<span id="cb29-75"></span>
<span id="cb29-76">legend_elements <span>=</span> [</span>
<span id="cb29-77">    Patch(facecolor<span>=</span><span>"#ff7f0e"</span>, label<span>=</span><span>"Finetuned Models"</span>),</span>
<span id="cb29-78">    Patch(facecolor<span>=</span><span>"#1f77b4"</span>, label<span>=</span><span>"GPT Models"</span>),</span>
<span id="cb29-79">]</span>
<span id="cb29-80"></span>
<span id="cb29-81"><span># Add a legend outside the plot</span></span>
<span id="cb29-82">ax.legend(handles<span>=</span>legend_elements, loc<span>=</span><span>"center left"</span>, bbox_to_anchor<span>=</span>(<span>1</span>, <span>0.5</span>))</span>
<span id="cb29-83"></span>
<span id="cb29-84"><span># Adjust layout to prevent clipping and make room for the legend</span></span>
<span id="cb29-85">plt.tight_layout()</span>
<span id="cb29-86">plt.subplots_adjust(right<span>=</span><span>0.85</span>)</span>
<span id="cb29-87"></span>
<span id="cb29-88"><span># Show the plot</span></span>
<span id="cb29-89">plt.show()</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-28-output-1.png"></p>
</div>
<p>Finetuned models doing significantly better than OpenAI for target group identification. I suspect that this would degrade if we added some new groups who weren’t in the training data (as I’d written about <a href="https://mlops.systems/posts/2024-06-25-evaluation-finetuning-manual-dataset.html">in my last post</a>.)</p>
</section>
<section id="event-type-accuracy">
<h2>Event Type Accuracy</h2>
<div data-execution_count="19">
<details>
<summary>Code</summary>
<div id="cb30"><pre><code><span id="cb30-1"><span>import</span> matplotlib.pyplot <span>as</span> plt</span>
<span id="cb30-2"><span>from</span> matplotlib.patches <span>import</span> Patch</span>
<span id="cb30-3"><span>from</span> typing <span>import</span> Dict, Union</span>
<span id="cb30-4"></span>
<span id="cb30-5"></span>
<span id="cb30-6"><span>def</span> create_accuracy_chart(</span>
<span id="cb30-7">    scores: Dict[<span>str</span>, Union[<span>int</span>, <span>float</span>]], title: <span>str</span>, xlabel: <span>str</span></span>
<span id="cb30-8">) <span>-&gt;</span> <span>None</span>:</span>
<span id="cb30-9">    <span># Separate GPT models and finetuned models</span></span>
<span id="cb30-10">    gpt_models <span>=</span> [<span>"gpt-4o"</span>, <span>"gpt-4-turbo"</span>, <span>"gpt-3.5-turbo"</span>]</span>
<span id="cb30-11">    finetuned_models <span>=</span> [model <span>for</span> model <span>in</span> scores.keys() <span>if</span> model <span>not</span> <span>in</span> gpt_models]</span>
<span id="cb30-12"></span>
<span id="cb30-13">    <span># Create lists for plotting</span></span>
<span id="cb30-14">    models <span>=</span> <span>list</span>(scores.keys())</span>
<span id="cb30-15">    scores_list <span>=</span> <span>list</span>(scores.values())</span>
<span id="cb30-16">    colors <span>=</span> [<span>"#1f77b4"</span> <span>if</span> model <span>in</span> gpt_models <span>else</span> <span>"#ff7f0e"</span> <span>for</span> model <span>in</span> models]</span>
<span id="cb30-17"></span>
<span id="cb30-18">    <span># Create the plot</span></span>
<span id="cb30-19">    fig, ax <span>=</span> plt.subplots(figsize<span>=</span>(<span>12</span>, <span>10</span>))</span>
<span id="cb30-20"></span>
<span id="cb30-21">    <span># Plot horizontal bars</span></span>
<span id="cb30-22">    bars <span>=</span> ax.barh(models, scores_list, color<span>=</span>colors)</span>
<span id="cb30-23"></span>
<span id="cb30-24">    <span># Customize the plot</span></span>
<span id="cb30-25">    ax.set_xlabel(xlabel)</span>
<span id="cb30-26">    ax.set_title(title)</span>
<span id="cb30-27">    ax.set_xlim(</span>
<span id="cb30-28">        <span>0</span>, <span>max</span>(scores_list) <span>+</span> <span>50</span></span>
<span id="cb30-29">    )  <span># Set x-axis limit to slightly above max score</span></span>
<span id="cb30-30"></span>
<span id="cb30-31">    <span># Reduce font size for y-axis labels (model names)</span></span>
<span id="cb30-32">    ax.tick_params(axis<span>=</span><span>"y"</span>, labelsize<span>=</span><span>8</span>)</span>
<span id="cb30-33"></span>
<span id="cb30-34">    <span># Add value labels at the end of each bar</span></span>
<span id="cb30-35">    <span>for</span> bar <span>in</span> bars:</span>
<span id="cb30-36">        width <span>=</span> bar.get_width()</span>
<span id="cb30-37">        ax.text(</span>
<span id="cb30-38">            width,</span>
<span id="cb30-39">            bar.get_y() <span>+</span> bar.get_height() <span>/</span> <span>2</span>,</span>
<span id="cb30-40">            <span>f"</span><span>{</span>width<span>:.2f}</span><span>"</span> <span>if</span> <span>isinstance</span>(width, <span>float</span>) <span>else</span> <span>f"</span><span>{</span>width<span>}</span><span>"</span>,</span>
<span id="cb30-41">            ha<span>=</span><span>"left"</span>,</span>
<span id="cb30-42">            va<span>=</span><span>"center"</span>,</span>
<span id="cb30-43">        )</span>
<span id="cb30-44"></span>
<span id="cb30-45">    <span># Create custom legend handles</span></span>
<span id="cb30-46">    legend_elements <span>=</span> [</span>
<span id="cb30-47">        Patch(facecolor<span>=</span><span>"#ff7f0e"</span>, label<span>=</span><span>"Finetuned Models"</span>),</span>
<span id="cb30-48">        Patch(facecolor<span>=</span><span>"#1f77b4"</span>, label<span>=</span><span>"GPT Models"</span>),</span>
<span id="cb30-49">    ]</span>
<span id="cb30-50"></span>
<span id="cb30-51">    <span># Add a legend outside the plot</span></span>
<span id="cb30-52">    ax.legend(handles<span>=</span>legend_elements, loc<span>=</span><span>"center left"</span>, bbox_to_anchor<span>=</span>(<span>1</span>, <span>0.5</span>))</span>
<span id="cb30-53"></span>
<span id="cb30-54">    <span># Adjust layout to prevent clipping and make room for the legend</span></span>
<span id="cb30-55">    plt.tight_layout()</span>
<span id="cb30-56">    plt.subplots_adjust(right<span>=</span><span>0.85</span>)</span>
<span id="cb30-57"></span>
<span id="cb30-58">    <span># Show the plot</span></span>
<span id="cb30-59">    plt.show()</span>
<span id="cb30-60"></span>
<span id="cb30-61"></span>
<span id="cb30-62">event_type_scores <span>=</span> {</span>
<span id="cb30-63">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb30-64">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb30-65">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb30-66">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb30-67">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb30-68">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb30-69">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb30-70">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb30-71">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb30-72">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb30-73">}</span>
<span id="cb30-74"></span>
<span id="cb30-75"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb30-76">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb30-77">        <span>if</span> <span>not</span> pred:</span>
<span id="cb30-78">            <span>continue</span></span>
<span id="cb30-79">        <span>try</span>:</span>
<span id="cb30-80">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb30-81">            <span>if</span> <span>isinstance</span>(pred_dict, <span>dict</span>) <span>and</span> <span>"event_type"</span> <span>in</span> pred_dict:</span>
<span id="cb30-82">                pred_types <span>=</span> pred_dict[<span>"event_type"</span>]</span>
<span id="cb30-83">                <span>if</span> <span>isinstance</span>(pred_types, <span>str</span>):</span>
<span id="cb30-84">                    pred_types <span>=</span> [pred_types]</span>
<span id="cb30-85">                correct_types <span>=</span> row[<span>"event_type"</span>]</span>
<span id="cb30-86">                <span>if</span> <span>isinstance</span>(correct_types, <span>str</span>):</span>
<span id="cb30-87">                    correct_types <span>=</span> [correct_types]</span>
<span id="cb30-88">                <span>if</span> correct_types:</span>
<span id="cb30-89">                    score <span>=</span> <span>len</span>(<span>set</span>(pred_types) <span>&amp;</span> <span>set</span>(correct_types)) <span>/</span> <span>len</span>(</span>
<span id="cb30-90">                        <span>set</span>(correct_types)</span>
<span id="cb30-91">                    )</span>
<span id="cb30-92">                    event_type_scores[model_name] <span>+=</span> score</span>
<span id="cb30-93">        <span>except</span> (json.JSONDecodeError, <span>KeyError</span>, <span>TypeError</span>):</span>
<span id="cb30-94">            <span>pass</span></span>
<span id="cb30-95"></span>
<span id="cb30-96">create_accuracy_chart(</span>
<span id="cb30-97">    scores<span>=</span>event_type_scores,</span>
<span id="cb30-98">    title<span>=</span><span>"Event Type Accuracy by Model"</span>,</span>
<span id="cb30-99">    xlabel<span>=</span><span>"Event Type Accuracy Score"</span>,</span>
<span id="cb30-100">)</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-29-output-1.png"></p>
</div>
<p>Event type is actually one of the hardest categories since there are actually some semantically overlapping categories and it’s sometimes even hard for a human annotator, but once again the finetuned models do pretty well.</p>
</section>
<section id="accuracy-for-min_killed">
<h2>Accuracy for <code>min_killed</code></h2>
<div data-execution_count="20">
<details>
<summary>Code</summary>
<div id="cb31"><pre><code><span id="cb31-1"><span>import</span> json</span>
<span id="cb31-2"></span>
<span id="cb31-3">min_killed_scores <span>=</span> {</span>
<span id="cb31-4">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb31-5">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb31-6">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb31-7">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb31-8">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb31-9">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb31-10">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb31-11">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb31-12">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb31-13">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb31-14">}</span>
<span id="cb31-15"></span>
<span id="cb31-16"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb31-17">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb31-18">        <span>if</span> <span>not</span> pred:</span>
<span id="cb31-19">            <span>continue</span></span>
<span id="cb31-20">        <span>try</span>:</span>
<span id="cb31-21">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb31-22">            <span>if</span> <span>isinstance</span>(pred_dict, <span>dict</span>) <span>and</span> <span>"min_killed"</span> <span>in</span> pred_dict:</span>
<span id="cb31-23">                pred_min_killed <span>=</span> pred_dict[<span>"min_killed"</span>]</span>
<span id="cb31-24">                correct_min_killed <span>=</span> row[<span>"min_killed"</span>]</span>
<span id="cb31-25">                <span>if</span> pred_min_killed <span>==</span> correct_min_killed:</span>
<span id="cb31-26">                    min_killed_scores[model_name] <span>+=</span> <span>1</span></span>
<span id="cb31-27">        <span>except</span> (json.JSONDecodeError, <span>KeyError</span>, <span>TypeError</span>):</span>
<span id="cb31-28">            <span>pass</span></span>
<span id="cb31-29"></span>
<span id="cb31-30">create_accuracy_chart(</span>
<span id="cb31-31">    scores<span>=</span>min_killed_scores,</span>
<span id="cb31-32">    title<span>=</span><span>"'min_killed' Accuracy by Model"</span>,</span>
<span id="cb31-33">    xlabel<span>=</span><span>"'min_killed' Accuracy Score"</span></span>
<span id="cb31-34">)</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-30-output-1.png"></p>
</div>
<p>For these number estimations, suddenly the playing fields gets leveled between the finetuned and the OpenAI models. Mistral still comes out on top, but not by much! And it’s impressive how the OpenAI models do really well at this. I suspect this is because of the whole section in the prompt which explained the rubric that was used for annotating the examples:</p>
<blockquote>
<p>Annotation notes: A ‘faciliator’ is not a leader. If a press release states that ‘insurgents’ were detained without further details, assign a minimum number of two detained. Interpret ‘a couple’ as two. Interpret ‘several’ as at least three, even though it may sometimes refer to seven or eight. Classify the terms ‘a few’, ‘some’, ‘a group’, ‘a small group’, and ‘multiple’ as denoting at least three, even if they sometimes refer to larger numbers. Choose the smaller number if no other information is available in the press release to come up with a minimally acceptable figure. Interpret ‘numerous’ and ‘a handful’ as at least four, and ‘a large number’ as at least five.</p>
</blockquote>
</section>
<section id="accuracy-for-min_captured">
<h2>Accuracy for <code>min_captured</code></h2>
<div data-execution_count="21">
<details>
<summary>Code</summary>
<div id="cb32"><pre><code><span id="cb32-1"><span>import</span> json</span>
<span id="cb32-2"></span>
<span id="cb32-3">min_captured_scores <span>=</span> {</span>
<span id="cb32-4">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb32-5">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb32-6">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb32-7">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb32-8">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb32-9">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb32-10">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb32-11">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb32-12">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb32-13">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb32-14">}</span>
<span id="cb32-15"></span>
<span id="cb32-16"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb32-17">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb32-18">        <span>if</span> <span>not</span> pred:</span>
<span id="cb32-19">            <span>continue</span></span>
<span id="cb32-20">        <span>try</span>:</span>
<span id="cb32-21">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb32-22">            <span>if</span> <span>isinstance</span>(pred_dict, <span>dict</span>) <span>and</span> <span>"min_captured"</span> <span>in</span> pred_dict:</span>
<span id="cb32-23">                pred_min_captured <span>=</span> pred_dict[<span>"min_captured"</span>]</span>
<span id="cb32-24">                correct_min_captured <span>=</span> row[<span>"min_captured"</span>]</span>
<span id="cb32-25">                <span>if</span> pred_min_captured <span>==</span> correct_min_captured:</span>
<span id="cb32-26">                    min_captured_scores[model_name] <span>+=</span> <span>1</span></span>
<span id="cb32-27">        <span>except</span> (json.JSONDecodeError, <span>KeyError</span>, <span>TypeError</span>):</span>
<span id="cb32-28">            <span>pass</span></span>
<span id="cb32-29"></span>
<span id="cb32-30">create_accuracy_chart(</span>
<span id="cb32-31">    scores<span>=</span>min_captured_scores,</span>
<span id="cb32-32">    title<span>=</span><span>"'min_captured' Accuracy by Model"</span>,</span>
<span id="cb32-33">    xlabel<span>=</span><span>"'min_captured' Accuracy Score"</span></span>
<span id="cb32-34">)</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-31-output-1.png"></p>
</div>
</section>
<section id="accuracy-for-killq">
<h2>Accuracy for <code>killq</code></h2>
<div data-execution_count="22">
<details>
<summary>Code</summary>
<div id="cb33"><pre><code><span id="cb33-1"><span>import</span> json</span>
<span id="cb33-2"></span>
<span id="cb33-3">killq_scores <span>=</span> {</span>
<span id="cb33-4">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb33-5">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb33-6">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb33-7">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb33-8">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb33-9">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb33-10">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb33-11">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb33-12">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb33-13">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb33-14">}</span>
<span id="cb33-15"></span>
<span id="cb33-16"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb33-17">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb33-18">        <span>if</span> <span>not</span> pred:</span>
<span id="cb33-19">            <span>continue</span></span>
<span id="cb33-20">        <span>try</span>:</span>
<span id="cb33-21">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb33-22">            <span>if</span> <span>isinstance</span>(pred_dict, <span>dict</span>) <span>and</span> <span>"killq"</span> <span>in</span> pred_dict:</span>
<span id="cb33-23">                pred_killq <span>=</span> pred_dict[<span>"killq"</span>]</span>
<span id="cb33-24">                correct_killq <span>=</span> row[<span>"killq"</span>]</span>
<span id="cb33-25">                <span>if</span> pred_killq <span>==</span> correct_killq:</span>
<span id="cb33-26">                    killq_scores[model_name] <span>+=</span> <span>1</span></span>
<span id="cb33-27">        <span>except</span> (json.JSONDecodeError, <span>KeyError</span>, <span>TypeError</span>):</span>
<span id="cb33-28">            <span>pass</span></span>
<span id="cb33-29"></span>
<span id="cb33-30">create_accuracy_chart(</span>
<span id="cb33-31">    scores<span>=</span>killq_scores,</span>
<span id="cb33-32">    title<span>=</span><span>"'killq' Accuracy by Model"</span>,</span>
<span id="cb33-33">    xlabel<span>=</span><span>"'killq' Accuracy Score"</span></span>
<span id="cb33-34">)</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-32-output-1.png"></p>
</div>
<p>I’d expect really high accuracy for these boolean attributes, and basically almost all the models were able to give this. Still, our finetuned Mistral still beats out GPT-4o best score.</p>
</section>
<section id="accuracy-for-captureq">
<h2>Accuracy for <code>captureq</code></h2>
<div data-execution_count="23">
<details>
<summary>Code</summary>
<div id="cb34"><pre><code><span id="cb34-1"><span>import</span> json</span>
<span id="cb34-2"></span>
<span id="cb34-3">captureq_scores <span>=</span> {</span>
<span id="cb34-4">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb34-5">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb34-6">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb34-7">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb34-8">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb34-9">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb34-10">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb34-11">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb34-12">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb34-13">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb34-14">}</span>
<span id="cb34-15"></span>
<span id="cb34-16"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb34-17">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb34-18">        <span>if</span> <span>not</span> pred:</span>
<span id="cb34-19">            <span>continue</span></span>
<span id="cb34-20">        <span>try</span>:</span>
<span id="cb34-21">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb34-22">            <span>if</span> <span>isinstance</span>(pred_dict, <span>dict</span>) <span>and</span> <span>"captureq"</span> <span>in</span> pred_dict:</span>
<span id="cb34-23">                pred_captureq <span>=</span> pred_dict[<span>"captureq"</span>]</span>
<span id="cb34-24">                correct_captureq <span>=</span> row[<span>"captureq"</span>]</span>
<span id="cb34-25">                <span>if</span> pred_captureq <span>==</span> correct_captureq:</span>
<span id="cb34-26">                    captureq_scores[model_name] <span>+=</span> <span>1</span></span>
<span id="cb34-27">        <span>except</span> (json.JSONDecodeError, <span>KeyError</span>, <span>TypeError</span>):</span>
<span id="cb34-28">            <span>pass</span></span>
<span id="cb34-29"></span>
<span id="cb34-30">create_accuracy_chart(</span>
<span id="cb34-31">    scores<span>=</span>captureq_scores,</span>
<span id="cb34-32">    title<span>=</span><span>"'captureq' Accuracy by Model"</span>,</span>
<span id="cb34-33">    xlabel<span>=</span><span>"'captureq' Accuracy Score"</span></span>
<span id="cb34-34">)</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-33-output-1.png"></p>
</div>
</section>
<section id="accuracy-for-killcaptureraid">
<h2>Accuracy for <code>killcaptureraid</code></h2>
<div data-execution_count="24">
<details>
<summary>Code</summary>
<div id="cb35"><pre><code><span id="cb35-1"><span>import</span> json</span>
<span id="cb35-2"></span>
<span id="cb35-3">killcaptureraid_scores <span>=</span> {</span>
<span id="cb35-4">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb35-5">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb35-6">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb35-7">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb35-8">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb35-9">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb35-10">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb35-11">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb35-12">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb35-13">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb35-14">}</span>
<span id="cb35-15"></span>
<span id="cb35-16"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb35-17">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb35-18">        <span>if</span> <span>not</span> pred:</span>
<span id="cb35-19">            <span>continue</span></span>
<span id="cb35-20">        <span>try</span>:</span>
<span id="cb35-21">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb35-22">            <span>if</span> <span>isinstance</span>(pred_dict, <span>dict</span>) <span>and</span> <span>"killcaptureraid"</span> <span>in</span> pred_dict:</span>
<span id="cb35-23">                pred_killcaptureraid <span>=</span> pred_dict[<span>"killcaptureraid"</span>]</span>
<span id="cb35-24">                correct_killcaptureraid <span>=</span> row[<span>"killcaptureraid"</span>]</span>
<span id="cb35-25">                <span>if</span> pred_killcaptureraid <span>==</span> correct_killcaptureraid:</span>
<span id="cb35-26">                    killcaptureraid_scores[model_name] <span>+=</span> <span>1</span></span>
<span id="cb35-27">        <span>except</span> (json.JSONDecodeError, <span>KeyError</span>, <span>TypeError</span>):</span>
<span id="cb35-28">            <span>pass</span></span>
<span id="cb35-29"></span>
<span id="cb35-30">create_accuracy_chart(</span>
<span id="cb35-31">    scores<span>=</span>killcaptureraid_scores,</span>
<span id="cb35-32">    title<span>=</span><span>"'killcaptureraid' Accuracy by Model"</span>,</span>
<span id="cb35-33">    xlabel<span>=</span><span>"'killcaptureraid' Accuracy Score"</span></span>
<span id="cb35-34">)</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-34-output-1.png"></p>
</div>
<p>This is another attribute where it’s clear the lack of signposting in the prompts to the OpenAI models put them at a disadvantage. The term ‘kill-capture raid’ is a term of art and it was used in a specific way for the labelling. OpenAI knows nothing about how I made those calls, which explains why they performed so poorly here.</p>
</section>
<section id="accuracy-for-airstrike">
<h2>Accuracy for <code>airstrike</code></h2>
<div data-execution_count="25">
<details>
<summary>Code</summary>
<div id="cb36"><pre><code><span id="cb36-1"><span>import</span> json</span>
<span id="cb36-2"></span>
<span id="cb36-3">airstrike_scores <span>=</span> {</span>
<span id="cb36-4">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb36-5">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb36-6">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb36-7">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb36-8">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb36-9">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb36-10">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb36-11">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb36-12">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb36-13">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb36-14">}</span>
<span id="cb36-15"></span>
<span id="cb36-16"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb36-17">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb36-18">        <span>if</span> <span>not</span> pred:</span>
<span id="cb36-19">            <span>continue</span></span>
<span id="cb36-20">        <span>try</span>:</span>
<span id="cb36-21">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb36-22">            <span>if</span> <span>isinstance</span>(pred_dict, <span>dict</span>) <span>and</span> <span>"airstrike"</span> <span>in</span> pred_dict:</span>
<span id="cb36-23">                pred_airstrike <span>=</span> pred_dict[<span>"airstrike"</span>]</span>
<span id="cb36-24">                correct_airstrike <span>=</span> row[<span>"airstrike"</span>]</span>
<span id="cb36-25">                <span>if</span> pred_airstrike <span>==</span> correct_airstrike:</span>
<span id="cb36-26">                    airstrike_scores[model_name] <span>+=</span> <span>1</span></span>
<span id="cb36-27">        <span>except</span> (json.JSONDecodeError, <span>KeyError</span>, <span>TypeError</span>):</span>
<span id="cb36-28">            <span>pass</span></span>
<span id="cb36-29"></span>
<span id="cb36-30">create_accuracy_chart(</span>
<span id="cb36-31">    scores<span>=</span>airstrike_scores,</span>
<span id="cb36-32">    title<span>=</span><span>"'airstrike' Accuracy by Model"</span>,</span>
<span id="cb36-33">    xlabel<span>=</span><span>"'airstrike' Accuracy Score"</span></span>
<span id="cb36-34">)</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-35-output-1.png"></p>
</div>
</section>
<section id="accuracy-for-noshotsfired">
<h2>Accuracy for <code>noshotsfired</code></h2>
<div data-execution_count="26">
<details>
<summary>Code</summary>
<div id="cb37"><pre><code><span id="cb37-1"><span>import</span> json</span>
<span id="cb37-2"></span>
<span id="cb37-3">noshotsfired_scores <span>=</span> {</span>
<span id="cb37-4">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb37-5">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb37-6">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb37-7">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb37-8">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb37-9">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb37-10">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb37-11">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb37-12">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb37-13">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb37-14">}</span>
<span id="cb37-15"></span>
<span id="cb37-16"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb37-17">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb37-18">        <span>if</span> <span>not</span> pred:</span>
<span id="cb37-19">            <span>continue</span></span>
<span id="cb37-20">        <span>try</span>:</span>
<span id="cb37-21">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb37-22">            <span>if</span> <span>isinstance</span>(pred_dict, <span>dict</span>) <span>and</span> <span>"noshotsfired"</span> <span>in</span> pred_dict:</span>
<span id="cb37-23">                pred_noshotsfired <span>=</span> pred_dict[<span>"noshotsfired"</span>]</span>
<span id="cb37-24">                correct_noshotsfired <span>=</span> row[<span>"noshotsfired"</span>]</span>
<span id="cb37-25">                <span>if</span> pred_noshotsfired <span>==</span> correct_noshotsfired:</span>
<span id="cb37-26">                    noshotsfired_scores[model_name] <span>+=</span> <span>1</span></span>
<span id="cb37-27">        <span>except</span> (json.JSONDecodeError, <span>KeyError</span>, <span>TypeError</span>):</span>
<span id="cb37-28">            <span>pass</span></span>
<span id="cb37-29"></span>
<span id="cb37-30">create_accuracy_chart(</span>
<span id="cb37-31">    scores<span>=</span>noshotsfired_scores,</span>
<span id="cb37-32">    title<span>=</span><span>"'noshotsfired' Accuracy by Model"</span>,</span>
<span id="cb37-33">    xlabel<span>=</span><span>"'noshotsfired' Accuracy Score"</span></span>
<span id="cb37-34">)</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-36-output-1.png"></p>
</div>
<p>I’m not quite sure why the OpenAI models are performing in the reverse order of what you’d expect. Recall that the <code>noshotsfired</code> attribute refers to whether the press release states that no shots were fired during a particular raid / event. (For a certain period the press releases were keen to mention this and it was a metric that was particularly useful for ISAF as a public relations gimmick.)</p>
<p>I can think of some semi-anthropomorphizing ways to explain this around how the GPT-4 class of models were ‘overthinking’ the label, but more investigation would be needed to really understand this.</p>
</section>
<section id="accuracy-for-min_leaders_killed">
<h2>Accuracy for <code>min_leaders_killed</code></h2>
<div data-execution_count="27">
<details>
<summary>Code</summary>
<div id="cb38"><pre><code><span id="cb38-1"><span>import</span> json</span>
<span id="cb38-2"></span>
<span id="cb38-3">min_leaders_killed_scores <span>=</span> {</span>
<span id="cb38-4">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb38-5">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb38-6">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb38-7">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb38-8">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb38-9">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb38-10">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb38-11">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb38-12">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb38-13">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb38-14">}</span>
<span id="cb38-15"></span>
<span id="cb38-16"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb38-17">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb38-18">        <span>if</span> <span>not</span> pred:</span>
<span id="cb38-19">            <span>continue</span></span>
<span id="cb38-20">        <span>try</span>:</span>
<span id="cb38-21">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb38-22">            <span>if</span> <span>isinstance</span>(pred_dict, <span>dict</span>) <span>and</span> <span>"min_leaders_killed"</span> <span>in</span> pred_dict:</span>
<span id="cb38-23">                pred_min_leaders_killed <span>=</span> pred_dict[<span>"min_leaders_killed"</span>]</span>
<span id="cb38-24">                correct_min_leaders_killed <span>=</span> row[<span>"min_leaders_killed"</span>]</span>
<span id="cb38-25">                <span>if</span> <span>isinstance</span>(pred_min_leaders_killed, <span>int</span>) <span>and</span> <span>isinstance</span>(correct_min_leaders_killed, <span>int</span>):</span>
<span id="cb38-26">                    <span>if</span> pred_min_leaders_killed <span>==</span> correct_min_leaders_killed:</span>
<span id="cb38-27">                        min_leaders_killed_scores[model_name] <span>+=</span> <span>1</span></span>
<span id="cb38-28">        <span>except</span> (json.JSONDecodeError, <span>KeyError</span>, <span>TypeError</span>):</span>
<span id="cb38-29">            <span>pass</span></span>
<span id="cb38-30"></span>
<span id="cb38-31">total_entries <span>=</span> <span>len</span>(dataset_with_preds)</span>
<span id="cb38-32"></span>
<span id="cb38-33">create_accuracy_chart(</span>
<span id="cb38-34">    scores<span>=</span>min_leaders_killed_scores,</span>
<span id="cb38-35">    title<span>=</span><span>f"Min Leaders Killed Accuracy by Model (out of </span><span>{</span>total_entries<span>}</span><span> entries)"</span>,</span>
<span id="cb38-36">    xlabel<span>=</span><span>"Min Leaders Killed Accuracy Score"</span></span>
<span id="cb38-37">)</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-37-output-1.png"></p>
</div>
<p>We often hear about how LLMs are bad with numbers, how they <a href="https://gramener.com/llmrandom/">default to certain values</a> and so on, so I was surprised to see such high scores across the board for this task. I imagine this is something that everyone has been trying to improve and it shows. Still, though, our finetuned models do best.</p>
</section>
<section id="accuracy-for-min_leaders_captured">
<h2>Accuracy for <code>min_leaders_captured</code></h2>
<div data-execution_count="28">
<details>
<summary>Code</summary>
<div id="cb39"><pre><code><span id="cb39-1"><span>import</span> json</span>
<span id="cb39-2"></span>
<span id="cb39-3">min_leaders_captured_scores <span>=</span> {</span>
<span id="cb39-4">    <span>"gpt-4o"</span>: <span>0</span>,</span>
<span id="cb39-5">    <span>"gpt-4-turbo"</span>: <span>0</span>,</span>
<span id="cb39-6">    <span>"gpt-3.5-turbo"</span>: <span>0</span>,</span>
<span id="cb39-7">    <span>"tinyllama-templatefree"</span>: <span>0</span>,</span>
<span id="cb39-8">    <span>"tinyllama-sharegpt"</span>: <span>0</span>,</span>
<span id="cb39-9">    <span>"finetuned-openai-gpt-3.5-turbo-1106"</span>: <span>0</span>,</span>
<span id="cb39-10">    <span>"finetuned-llama3-7b-32k-openpipe"</span>: <span>0</span>,</span>
<span id="cb39-11">    <span>"mistral-lora-templatefree"</span>: <span>0</span>,</span>
<span id="cb39-12">    <span>"finetuned-mistral-7b-optimised-openpipe"</span>: <span>0</span>,</span>
<span id="cb39-13">    <span>"ft-solar-1-mini-chat-240612-predibase"</span>: <span>0</span>,</span>
<span id="cb39-14">}</span>
<span id="cb39-15"></span>
<span id="cb39-16"><span>for</span> row <span>in</span> dataset_with_preds:</span>
<span id="cb39-17">    <span>for</span> model_name, pred <span>in</span> row[<span>"predictions"</span>].items():</span>
<span id="cb39-18">        <span>if</span> <span>not</span> pred:</span>
<span id="cb39-19">            <span>continue</span></span>
<span id="cb39-20">        <span>try</span>:</span>
<span id="cb39-21">            pred_dict <span>=</span> json.loads(pred)</span>
<span id="cb39-22">            <span>if</span> <span>isinstance</span>(pred_dict, <span>dict</span>) <span>and</span> <span>"min_leaders_captured"</span> <span>in</span> pred_dict:</span>
<span id="cb39-23">                pred_min_leaders_captured <span>=</span> pred_dict[<span>"min_leaders_captured"</span>]</span>
<span id="cb39-24">                correct_min_leaders_captured <span>=</span> row[<span>"min_leaders_captured"</span>]</span>
<span id="cb39-25">                <span>if</span> <span>isinstance</span>(pred_min_leaders_captured, <span>int</span>) <span>and</span> <span>isinstance</span>(correct_min_leaders_captured, <span>int</span>):</span>
<span id="cb39-26">                    <span>if</span> pred_min_leaders_captured <span>==</span> correct_min_leaders_captured:</span>
<span id="cb39-27">                        min_leaders_captured_scores[model_name] <span>+=</span> <span>1</span></span>
<span id="cb39-28">        <span>except</span> (json.JSONDecodeError, <span>KeyError</span>, <span>TypeError</span>):</span>
<span id="cb39-29">            <span>pass</span></span>
<span id="cb39-30"></span>
<span id="cb39-31">total_entries <span>=</span> <span>len</span>(dataset_with_preds)</span>
<span id="cb39-32"></span>
<span id="cb39-33">create_accuracy_chart(</span>
<span id="cb39-34">    scores<span>=</span>min_leaders_captured_scores,</span>
<span id="cb39-35">    title<span>=</span><span>f"Min Leaders Captured Accuracy by Model (out of </span><span>{</span>total_entries<span>}</span><span> entries)"</span>,</span>
<span id="cb39-36">    xlabel<span>=</span><span>"Min Leaders Captured Accuracy Score"</span></span>
<span id="cb39-37">)</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-38-output-1.png"></p>
</div>
</section>
<section id="final-aggregate-scores-for-the-models">
<h2>Final aggregate scores for the models</h2>
<p>Let’s add all these individual competency scores up, average them out and get final scores for how well our models do on accuracy.</p>
<div data-execution_count="29">
<details>
<summary>Code</summary>
<div id="cb40"><pre><code><span id="cb40-1"><span># adapt the function slightly</span></span>
<span id="cb40-2"><span>import</span> matplotlib.pyplot <span>as</span> plt</span>
<span id="cb40-3"><span>from</span> matplotlib.patches <span>import</span> Patch</span>
<span id="cb40-4"><span>from</span> typing <span>import</span> Dict, Union</span>
<span id="cb40-5"></span>
<span id="cb40-6"></span>
<span id="cb40-7"><span>def</span> create_aggregate_accuracy_chart(</span>
<span id="cb40-8">    scores: Dict[<span>str</span>, Union[<span>int</span>, <span>float</span>]], title: <span>str</span>, xlabel: <span>str</span></span>
<span id="cb40-9">) <span>-&gt;</span> <span>None</span>:</span>
<span id="cb40-10">    <span># Separate GPT models and finetuned models</span></span>
<span id="cb40-11">    gpt_models <span>=</span> [<span>"gpt-4o"</span>, <span>"gpt-4-turbo"</span>, <span>"gpt-3.5-turbo"</span>]</span>
<span id="cb40-12">    finetuned_models <span>=</span> [model <span>for</span> model <span>in</span> scores.keys() <span>if</span> model <span>not</span> <span>in</span> gpt_models]</span>
<span id="cb40-13"></span>
<span id="cb40-14">    <span># Create lists for plotting</span></span>
<span id="cb40-15">    models <span>=</span> <span>list</span>(scores.keys())</span>
<span id="cb40-16">    scores_list <span>=</span> <span>list</span>(scores.values())</span>
<span id="cb40-17">    colors <span>=</span> [<span>"#1f77b4"</span> <span>if</span> model <span>in</span> gpt_models <span>else</span> <span>"#ff7f0e"</span> <span>for</span> model <span>in</span> models]</span>
<span id="cb40-18"></span>
<span id="cb40-19">    <span># Create the plot</span></span>
<span id="cb40-20">    fig, ax <span>=</span> plt.subplots(figsize<span>=</span>(<span>12</span>, <span>10</span>))</span>
<span id="cb40-21"></span>
<span id="cb40-22">    <span># Plot horizontal bars</span></span>
<span id="cb40-23">    bars <span>=</span> ax.barh(models, scores_list, color<span>=</span>colors)</span>
<span id="cb40-24"></span>
<span id="cb40-25">    <span># Customize the plot</span></span>
<span id="cb40-26">    ax.set_xlabel(xlabel)</span>
<span id="cb40-27">    ax.set_title(title)</span>
<span id="cb40-28">    ax.set_xlim(<span>0</span>, <span>100</span>)  <span># Set x-axis limit to 100</span></span>
<span id="cb40-29"></span>
<span id="cb40-30">    <span># Reduce font size for y-axis labels (model names)</span></span>
<span id="cb40-31">    ax.tick_params(axis<span>=</span><span>"y"</span>, labelsize<span>=</span><span>8</span>)</span>
<span id="cb40-32"></span>
<span id="cb40-33">    <span># Add value labels at the end of each bar</span></span>
<span id="cb40-34">    <span>for</span> bar <span>in</span> bars:</span>
<span id="cb40-35">        width <span>=</span> bar.get_width()</span>
<span id="cb40-36">        ax.text(</span>
<span id="cb40-37">            width,</span>
<span id="cb40-38">            bar.get_y() <span>+</span> bar.get_height() <span>/</span> <span>2</span>,</span>
<span id="cb40-39">            <span>f"</span><span>{</span>width<span>:.2f}</span><span>"</span> <span>if</span> <span>isinstance</span>(width, <span>float</span>) <span>else</span> <span>f"</span><span>{</span>width<span>}</span><span>"</span>,</span>
<span id="cb40-40">            ha<span>=</span><span>"left"</span>,</span>
<span id="cb40-41">            va<span>=</span><span>"center"</span>,</span>
<span id="cb40-42">        )</span>
<span id="cb40-43"></span>
<span id="cb40-44">    <span># Create custom legend handles</span></span>
<span id="cb40-45">    legend_elements <span>=</span> [</span>
<span id="cb40-46">        Patch(facecolor<span>=</span><span>"#ff7f0e"</span>, label<span>=</span><span>"Finetuned Models"</span>),</span>
<span id="cb40-47">        Patch(facecolor<span>=</span><span>"#1f77b4"</span>, label<span>=</span><span>"GPT Models"</span>),</span>
<span id="cb40-48">    ]</span>
<span id="cb40-49"></span>
<span id="cb40-50">    <span># Add a legend outside the plot</span></span>
<span id="cb40-51">    ax.legend(handles<span>=</span>legend_elements, loc<span>=</span><span>"center left"</span>, bbox_to_anchor<span>=</span>(<span>1</span>, <span>0.5</span>))</span>
<span id="cb40-52"></span>
<span id="cb40-53">    <span># Adjust layout to prevent clipping and make room for the legend</span></span>
<span id="cb40-54">    plt.tight_layout()</span>
<span id="cb40-55">    plt.subplots_adjust(right<span>=</span><span>0.85</span>)</span>
<span id="cb40-56"></span>
<span id="cb40-57">    <span># Show the plot</span></span>
<span id="cb40-58">    plt.show()</span>
<span id="cb40-59"></span>
<span id="cb40-60"><span># List of all the score dictionaries</span></span>
<span id="cb40-61">score_dicts <span>=</span> [</span>
<span id="cb40-62">    start_date_scores,</span>
<span id="cb40-63">    province_scores,</span>
<span id="cb40-64">    target_group_scores,</span>
<span id="cb40-65">    event_type_scores,</span>
<span id="cb40-66">    min_killed_scores,</span>
<span id="cb40-67">    min_captured_scores,</span>
<span id="cb40-68">    killq_scores,</span>
<span id="cb40-69">    captureq_scores,</span>
<span id="cb40-70">    killcaptureraid_scores,</span>
<span id="cb40-71">    airstrike_scores,</span>
<span id="cb40-72">    noshotsfired_scores,</span>
<span id="cb40-73">    min_leaders_killed_scores,</span>
<span id="cb40-74">    min_leaders_captured_scores,</span>
<span id="cb40-75">]</span>
<span id="cb40-76"></span>
<span id="cb40-77"><span># Get the list of models</span></span>
<span id="cb40-78">models <span>=</span> <span>list</span>(start_date_scores.keys())</span>
<span id="cb40-79"></span>
<span id="cb40-80"><span># Initialize the aggregate scores dictionary</span></span>
<span id="cb40-81">aggregate_scores <span>=</span> {model: <span>0</span> <span>for</span> model <span>in</span> models}</span>
<span id="cb40-82"></span>
<span id="cb40-83"><span># Calculate the aggregate score for each model</span></span>
<span id="cb40-84"><span>for</span> model <span>in</span> models:</span>
<span id="cb40-85">    total_score <span>=</span> <span>0</span></span>
<span id="cb40-86">    <span>for</span> score_dict <span>in</span> score_dicts:</span>
<span id="cb40-87">        total_score <span>+=</span> score_dict[model]</span>
<span id="cb40-88">    aggregate_scores[model] <span>=</span> (total_score <span>/</span> <span>len</span>(score_dicts)) <span>/</span> <span>len</span>(dataset_with_preds) <span>*</span> <span>100</span></span>
<span id="cb40-89"></span>
<span id="cb40-90"><span># Create the aggregate score chart</span></span>
<span id="cb40-91">create_aggregate_accuracy_chart(</span>
<span id="cb40-92">    scores<span>=</span>aggregate_scores,</span>
<span id="cb40-93">    title<span>=</span><span>"Aggregate Accuracy Score by Model (0-100 Scale)"</span>,</span>
<span id="cb40-94">    xlabel<span>=</span><span>"Aggregate Accuracy Score"</span>,</span>
<span id="cb40-95">)</span></code></pre></div>
</details>
<p><img src="https://mlops.systems/posts/2024-07-01-full-finetuned-model-evaluation_files/figure-html/cell-39-output-1.png"></p>
</div>
<p>Surprising even me, the finetuned models beat out the GPT-class models from OpenAI. Actually even TinyLlama beats out GPT 3.5 Turbo!</p>
<p>Our top performer was Mistral-7B (finetuned on OpenPipe), very closely followed by Solar LLM and Llama3-7B. Just looking at the scores above it seems like anyone finetuning models for structured data extraction would do well to start of with Mistral-7B, Solar 7B or Llama3-7B and then see which performs best, though with the caveat that they might all be more or less the same for accuracy. There are probably different tradeoffs when it comes to serving the model and the efficiency and latency there, but still these three do really well.</p>
<p>I think if I were to stuff a few more examples into the prompt (as well a bit more explanation and rules) I could get the OpenAI models to perform even better, but at a certain point you have to remember all the things that having your own finetuned model brings you:</p>
<ul>
<li>data privacy (by not sending your confidential information to OpenAI)</li>
<li>smaller models most likely means better performance (though I still have to test and prove that out)</li>
<li>more control overall</li>
<li>cost improvements</li>
</ul>
<p>On the cost, it’s a bit hard to make that comparison or claim right now, especially given the economies of scale that the large cloud providers can rely on, but in a real-world use case where you were building this model for repeated inference over a long-term time frame, then you would have a better chance of having the cost argument make sense, particularly since the only way to make the OpenAI inference calls better to stuff them full of examples and extra explanation, significantly bloating the cost-per-query.</p>
<p>That said, there are some real tradeoffs that come up when finetuning a model, and I’ll get to some of those in my concluding thoughts.</p>
</section>
<section id="finetuning-works-a-charm-but">
<h2>Finetuning works a charm, but…</h2>
<p>First off I’m so pleased that the oft-repeated “finetune your model and get better performance than with GPT-4” actually turned out to be true! And not only was it true, but it was true with <em>relatively</em> little tweaks and adaptations. Remember all the above models are the first finetunes I made with the data I brought. I basically used just the default values for everything and so it worked out of the box.</p>
<p>For any further work I’ll focus on the Solar, Llama3 and Mistral 7B models which performed best. I used cloud finetuning services to finetune the best performing versions of those models, so I’ll want to get that all working locally as well.</p>
<section id="evals-were-a-pain-this-time-round">
<h2 data-anchor-id="evals-were-a-pain-this-time-round">Evals were a pain (this time round)…</h2>
<p>Most of the evaluation work is represented here in this notebook, and that was perhaps the seeds of my own misfortune. I had some models that worked locally, and then a bunch of other models deployed in different environments and with different services.</p>
<p>Not only that, but it was pretty slow to iterate through the 724 row so my test data (which the models hadn’t seen during finetuning, just to be clear) since I implemented it fairly naively.</p>
<p>If I were to now make some updates to the models, or get them working locally, I’d really want to make sure that I have a way to run these evals locally as well. Moreover, I’d want a way to run a subset of the evals (i.e.&nbsp;on a slice of the data) and then at some point switch that out so that they could run across all the data.</p>
<p>All of this is completely within the realm of possible, but for this round I was more focused on getting the results than I was about making the process repeatable and/or efficient. I know I can’t run all the models concurrently on the same machine, so maybe the way forward is simply to have a reliable cloud GPU provider like Modal where I can farm out these evaluations. I had a really good experience with them when I used them, so that’s probably the way forward there.</p>
<p>In general, it was also painful having the models living in different places. I had to remember so many things. In any ideal world, you want a standard interface for inference to all your models, especially if they’re for the same use case or project. It’s convenient that my finetuned GPT3.5 is automatically deployed and served by OpenAI, and the same goes for Llama3 and Solar or Mistral, but I want a single place where I can see them all. Until now I hadn’t really seen this project or problem as being so much about MLOps, but when you have multiple models in play and you’re finetuning and updating them and data is changing all the time, then you’ll need a way of managing all this.</p>
<p>This is funny to me since <a href="https://zenml.io/">I work at an MLOps company</a> – we build an open-source MLOps framework that helps you set up a platform – but I hadn’t anticipated it’d reach this point where I’d need something like a ZenML so soon. This is, of course, one of the major tradeoffs of finetuning LLMs, in that you have to manage all this <em>stuff</em> in order to make it work reliably and repeatably. Even at this early stage of my project, it’s clear that you need a way to keep everything straight without making mistakes.</p>
</section>
<section id="but-evals-give-me-a-way-to-know-if-im-making-progress">
<h2 data-anchor-id="but-evals-give-me-a-way-to-know-if-im-making-progress">…but evals give me a way to know if I’m making progress</h2>
<p>Even though the evaluations were somewhat painful to implement (at least in the form of this Jupyter notebook), they have given me an amazing gift in that I now have a task-specific way to know whether any of the improvements or refinements to either the training data or to the model are helping move me forward. Without this I’d essentially be flying blind.</p>
</section>
<section id="next-steps">
<h2 data-anchor-id="next-steps">Next Steps</h2>
<p>I had originally thought and suggested that I’d want to train multiple models to be super-specialists in their field, so for example to have one model that was really good at estimating how many people were captured in a particular event. Seeing the performance of my models, I’m not sure that’s the obvious next step for this project, or if I’d really be able to boost the accuracy by a significant amount by taking that approach.</p>
<p>This project is all about accuracy, so it’s possible that I might want to try that out, but for now I’m still exploring all the different phases of the LLM finetuning process so I’ll put the submodels idea on the backburner.</p>
<p>The first obvious next step is to run some evaluations for the non-accuracy-related tests mentioned <a href="https://mlops.systems/posts/2024-06-25-evaluation-finetuning-manual-dataset.html">in my last blog</a>. For example, I’d like to see how it performs with out of domain data (i.e. completely made up data about something completely different).</p>
<p>The other next step is to get into some of the details around model serving. I’d like to take my top three performers and dive into how LLM model serving is done. I’m familiar with non-LLM model serving and some of the ways people do that through my work, but LLM serving has it’s own tricks, tradeoffs and tools and I’m eager to learn more about those.</p>
<p>If this was a problem that I was deeply invested in solving beyond these already excellent results, I’d probably also want to dive into the areas where my LLMs struggled. So I’d take all the places where my LLMs failed to get the answer correct, load them up into some kind of web interface like Lilac or Argilla and really inspect my data further. Understanding the failure scenarios will probably do more for the accuracy than any tweaking of the finetuning parameters or the like.</p>
<p>For now, I’m just happy the finetuned models beat GPT-4!</p>


</section>
</section>

</main> <!-- /main -->


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[RegreSSHion: RCE in OpenSSH's server, on glibc-based Linux systems (245 pts)]]></title>
            <link>https://www.qualys.com/2024/07/01/cve-2024-6387/regresshion.txt</link>
            <guid>40843778</guid>
            <pubDate>Mon, 01 Jul 2024 08:40:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.qualys.com/2024/07/01/cve-2024-6387/regresshion.txt">https://www.qualys.com/2024/07/01/cve-2024-6387/regresshion.txt</a>, See on <a href="https://news.ycombinator.com/item?id=40843778">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Cities Need More Trees (236 pts)]]></title>
            <link>https://herman.bearblog.dev/cities-need-more-trees/</link>
            <guid>40843720</guid>
            <pubDate>Mon, 01 Jul 2024 08:31:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://herman.bearblog.dev/cities-need-more-trees/">https://herman.bearblog.dev/cities-need-more-trees/</a>, See on <a href="https://news.ycombinator.com/item?id=40843720">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<p>
<i>
<time datetime="2024-07-01T07:53Z">
01 Jul, 2024
</time>
</i>
</p>
<p>I grew up just outside of Johannesburg, which is touted to be "the greenest city in the world". During the summer, when seen from above, it's a verdant, green landscape, with the tops of buildings popping through the canopy.</p>
<p><img src="https://bear-images.sfo2.cdn.digitaloceanspaces.com/herman-1719820418.jpg" alt="Joburg trees"></p>
<p><small>Yes, there's a full city beneath those trees.</small></p>
<p>However, this is not what the land originally looked like.</p>
<p>To cut a long story short, Johannesburg was established following the discovery of gold in 1886. It's known colloquially as eGoli, or "The City of Gold". Gold extraction here is vastly different to other parts of the world. We don't have gold veins running through the rock like in old Western movies. Instead it's mineralised into the rock itself which requires significant processing to extract.</p>
<p>This form of extraction leads to the crushing of millions of tons of rock, which is then dumped creating large, dusty hills around the city. These hills are (especially to the communities surrounding them) toxic and radioactive<sup id="fnref-1"><a href="#fn-1">1</a></sup>, and when the wind picks up yellow dust clouds used to envelop the city.</p>
<p>One of the proposed solutions to suppressing this omnipresent dust was the planting of trees (1.2 millions as of 2024) on sidewalks and pavement, and millions more planted privately in back-yards and plots. Due to Apartheid in South Africa, which economically and socially disadvantaged the majority of the population based on race, these planting efforts were not equitably distributed. You can still see a stark difference between rich and poor neighbourhoods to this day based purely on tree cover.</p>
<p>But I'm not here to talk about the socioeconomic problems facing South Africa. Instead I'd like to focus on how the planting of so many trees affected the city itself.</p>
<p>Since these trees were originally planted to manage dust, they are generally big and leafy. This has the benefit of creating a lot of shade throughout the city, mitigating a lot of the "heat island" effect which is pervasive in any city since asphalt and concrete are great at absorbing visible spectrum light and radiating it as heat<sup id="fnref-2"><a href="#fn-2">2</a></sup>. Walking down a shady street on a hot summer day is such a pleasant experience when compared to being out in the blistering sun.</p>
<p>Trees are not just great dust sinks and heat shields, but great sound barriers as well<sup id="fnref-3"><a href="#fn-3">3</a></sup>. Having tree lined streets not only reduces the noise of traffic (and the dust kicked up from their tyres), but also protects pedestrians and infrastructure on the sidewalks from stray vehicles.</p>
<p>On top of that it just looks better. I'm certain humans have genetic biophilia<sup id="fnref-4"><a href="#fn-4">4</a></sup>, which is why we love being in nature or taking walks in the forest. Having trees around us, teeming with birds and other life just <em>feels good</em>. Speaking of birds, trees increase the biodiversity of insects and other small critters in urban environments. It also gives birds a safe-haven from the deadliest hunter of all: the humble house cat<sup id="fnref-5"><a href="#fn-5">5</a></sup>.</p>
<p>I've been to many cities, all over the world. Some that do trees well, and others that fail miserably. And I'm always shocked at the contrast. Given two cities with a similar climate, I'm significantly more likely to do things like walk to a local coffee shop and browse corner stores, or sit on a park bench. But only if the walk is pleasant and shady.</p>
<p>Planting trees as a form of environmentalism or carbon capture is generally a hit-or-miss strategy. The vast majority of planted trees never reach maturity<sup id="fnref-6"><a href="#fn-6">6</a></sup>, and depending on where the trees are planted it could have a net heating instead of a net cooling effect due to the change in the environment's albedo<sup id="fnref-7"><a href="#fn-7">7</a></sup>. However, planting trees in cities is pretty much all upside with almost no downside (except that birds tend to shit on my car).</p>
<p><img src="https://bear-images.sfo2.cdn.digitaloceanspaces.com/herman-1719820405.jpg" alt="Dead car"></p>
<p>So the next time you're enjoying a walk down a lovely shady street, take a look up and appreciate the trees.</p>
<hr>
<h5 id="footnotes">Footnotes</h5><section>
<ol>
<li id="fn-1"><p><a href="https://www.theguardian.com/cities/2015/jul/06/radioactive-city-how-johannesburgs-townships-are-paying-for-its-mining-past" target="_blank">Radioactive city: how Johannesburg’s townships are paying for its mining past</a><a href="#fnref-1">↩</a></p></li>
<li id="fn-2"><p><a href="https://en.wikipedia.org/wiki/Urban_heat_island" target="_blank">Urban head islands</a><a href="#fnref-2">↩</a></p></li>
<li id="fn-3"><p><a href="https://www.treehugger.com/how-do-trees-reduce-noise-pollution-4863592" target="_blank">How do trees reduce noise pollution?</a><a href="#fnref-3">↩</a></p></li>
<li id="fn-4"><p>Biophilia hypothesis: The idea that humans possess an innate tendency to seek connections with nature and other forms of life.<a href="#fnref-4">↩</a></p></li>
<li id="fn-5"><p><a href="https://www.nature.com/articles/ncomms2380" target="_blank">The impact of free-ranging domestic cats on wildlife</a><a href="#fnref-5">↩</a></p></li>
<li id="fn-6"><p><a href="https://e360.yale.edu/features/phantom-forests-tree-planting-climate-change" target="_blank">Phantom Forests: Why Ambitious Tree Planting Projects Are Failing</a><a href="#fnref-6">↩</a></p></li>
<li id="fn-7"><p><a href="https://www.earth.com/news/could-tree-planting-warm-earth-science-behind-albedo-effect/" target="_blank">Could tree planting warm Earth? Science behind the albedo effect</a><a href="#fnref-7">↩</a></p></li>
</ol>
</section>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Programmers Should Never Trust Anyone, Not Even Themselves (110 pts)]]></title>
            <link>https://carbon-steel.github.io/jekyll/update/2024/06/19/abstractions.html</link>
            <guid>40842867</guid>
            <pubDate>Mon, 01 Jul 2024 05:39:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://carbon-steel.github.io/jekyll/update/2024/06/19/abstractions.html">https://carbon-steel.github.io/jekyll/update/2024/06/19/abstractions.html</a>, See on <a href="https://news.ycombinator.com/item?id=40842867">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
    

    <p>
        <time datetime="2024-06-19 17:00:00 +0000">19 Jun 2024</time>
        <br>
        By Sung Kim
    </p>

    <p>Programmers should be paranoid.</p>

<ul>
  <li>“I double checked the code”</li>
  <li>“The code passes the tests”</li>
  <li>“The reviewer approved my code”</li>
</ul>

<p>“So is my code correct?”</p>

<p>Writing code correctly is hard and verifying code correctness is impossible.
Here are some reasons why:</p>
<ul>
  <li><strong>Generality</strong>: Even if your code behaves correctly once, will it do so for
all cases, for all machines, for all times?</li>
  <li><strong>False Pass</strong>: Failing tests indicate the presence of bugs, but passing
tests do not promise their absence.</li>
  <li><strong>Lack of certainty</strong>: You could write a formal proof for your code’s
correctness but now you must wonder if the proof is correct. You would need to
prove the proof. This chain of verifying the verification would
never end.</li>
</ul>

<p>It is folly to pursue certainty of your code’s correctness. A bug may be hiding
in a dependency that you’ll never find. Yet we should not despair. We can still
decrease the risk of bugs via greater understanding and due diligence.</p>

<h2 id="abstractions">Abstractions</h2>

<p>What is “greater understanding”? Let’s focus on one facet of understanding which
comes up frequently among programmers: <em>abstractions</em>.</p>

<p>Abstractions are…</p>
<ul>
  <li>mental models of how stuff works</li>
  <li>when we treat <code>thing A</code> <strong>as if</strong> it were <code>thing B</code></li>
  <li>metaphorically…
    <ul>
      <li>the result of the data compression that occurs in your brain</li>
      <li>seeing the forest for the trees</li>
    </ul>
  </li>
  <li>used all the time in day-to-day life</li>
</ul>

<blockquote>
  <p>The word “abstraction” has many meanings. In programming, it can also refer
to layers of code that hide complexity. This post will only be talking about
abstractions in the cognitive sense.</p>
</blockquote>

<p>Examples of abstraction:</p>
<ul>
  <li>We treat our bank deposits <strong>as if</strong> the bank simply stores that money for us.
    <ul>
      <li>In reality, the bank does not just store the money we deposit. It loans
away/invests most of the money that people deposit. Our money does <em>not</em>
sit idle in a large pile in a vault.</li>
      <li>The abstraction works because banks still keep enough cash on hand to
handle most withdrawals.</li>
    </ul>
  </li>
  <li>We treat time <strong>as if</strong> it passes at the same rate for everyone.
    <ul>
      <li>Time dilation slightly changes each person/object’s flow of time based on
their speed and how much gravity they’re under.</li>
      <li>GPS satellites orbiting the Earth have to adjust their clocks by ~38
microseconds per day to account for time dilation
(<a href="https://pilotswhoaskwhy.com/2021/03/14/gnss-vs-time-dilation-what-the/">Source</a>).</li>
      <li>The abstraction works because the effect of time dilation is too miniscule
to notice unless you are doing extremely precise engineering.</li>
    </ul>
  </li>
</ul>

<hr>

<p>One way to form abstractions is by removing details (creating a simplified view
of something complex). For example, most people that drive do not know much about
the inner workings of their car. Their perspective of the car can be boiled down
to:</p>
<ul>
  <li>Ignition turns on car</li>
  <li>Accelerator makes car go</li>
  <li>Brake makes car stop</li>
  <li>Wheel turns car</li>
  <li>Car needs gas/diesel</li>
</ul>

<p>Knowing the above abstraction makes it unnecessary to understand the inner
workings of car engines. Most drivers have only this working knowledge of cars
and they can drive where they need to go.</p>

<p>When we use a programming language, it provides abstractions that allow us to
operate computers without understanding their inner workings.</p>
<ul>
  <li><strong>Basic language features</strong> (such as loops, if-conditionals, functions,
statements, and expressions) are all abstractions which hide:
    <ul>
      <li>Hardware-level details: CPU instructions, registers, flags, and details
specific to CPU architecture, …</li>
      <li>OS-level details: call stack management, memory management, …</li>
    </ul>
  </li>
  <li><strong>Portability</strong>: Languages abstract away the need to concern ourselves with the
differences between different machines.
    <ul>
      <li>Any compiled Java program (eg, a jar file) <em>should be</em> able to run on any
machine that has a Java Runtime Environment (ie, JVM) on it.</li>
      <li>A Python script <em>should be</em> able to run on any machine with a Python
interpreter.</li>
      <li>A C program <em>should be</em> able to compile and run on any machine if the machine
has a C compiler.</li>
    </ul>
  </li>
</ul>

<h2 id="abstractions-fail">Abstractions fail</h2>

<p>Unfortunately, abstractions fail.</p>

<ul>
  <li>Language abstractions are not enough if you care about code performance. To
speed up your code, you need to know hardware-level and OS-level details.</li>
  <li>Porting programs that have external dependencies such as dynamic libraries or
network requirements is not as simple. They cannot simply be moved to
another machine and run. Extra setup and knowledge are required.</li>
  <li>Car owners who only know the bare minimum can end up stuck in a broken down
car. If the driver doesn’t regularly change their car’s lubricant/oil, they’ll
shorten the engine’s lifespan.</li>
</ul>

<p>The driver’s abstraction works well in the short term (for a single drive), but
fails in the long term (many years). Joel Spolsky describes such failing
abstractions as “leaky” and put forth the <a href="https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/">Law of Leaky Abstractions</a>:</p>

<blockquote>
  <p>All non-trivial abstractions, to some degree, are leaky.</p>
</blockquote>

<p>Which is similar to the maxim from statistics:</p>

<blockquote>
  <p>All models are wrong, but some are useful.</p>
</blockquote>

<p>When we write code, we use leaky abstractions all the time. Here are some random
examples:</p>
<ul>
  <li>Garbage collection takes away the burden of worrying about memory management
(unless we care about latency jitters)</li>
  <li>C++ smart pointers make memory safe (as long as you don’t store any raw
pointers from it)</li>
  <li>Hashtables are fast because they have O(1) operations (but arrays are faster
for smaller sizes).</li>
  <li>Passing by reference is faster than passing by value (except for cases of copy
elision and values which fit in CPU registers like ints)</li>
</ul>

<p>Fortunately, many leaky abstractions crash your code when they fail, so they’re
easy to address. However, some may just produce undefined behavior or
performance degradation which are harder to identify and fix.</p>

<h2 id="press-x-to-doubt">Press X to doubt</h2>

<p>So if abstractions can be problematic, then should we try to understand a topic
without abstractions (to know cars as they <em>really</em> are)? No. When you dig
beneath abstractions, you just find more abstractions. It’s turtles all the way
down.</p>

<ul>
  <li>Underpinning our abstraction of cars, there is an understanding of each
component’s purpose.</li>
  <li>Beneath that, the chemistry of combustion and the mechanical engineering of
the engine</li>
  <li>Beneath that, the mathematics/physics that model the forces of our universe</li>
</ul>

<p>These layers of abstractions go down until we hit our most basic axioms about
logic and reality.</p>

<p>As programmers, we should see our knowledge as a house of cards made of leaky
abstractions and assumptions. We should have a healthy amount of skepticism of
everything and everyone, including ourselves.</p>

<h2 id="trust-but-verify">Trust, but verify</h2>

<p>A programmer should have a “trust, but verify” policy.</p>

<p>Here are some examples:</p>
<ul>
  <li>Trust the information that people tell you, but verify it with what the
documentation says</li>
  <li>Test your beliefs by trying to disprove them.
    <ul>
      <li>You wrote tests for your code change and they pass on the first try. Try
running the tests without your changes and see if they still pass. They
may have a bug that makes them always pass.</li>
      <li>You’ve refactored the code which should be a no-op. All the tests still
pass. Check to make sure there actually are any tests that run the code
you refactored.</li>
      <li>You optimized your service and you see the expected reduction in resource
utilization. Check to make sure your service is not just handling fewer
requests at the moment.</li>
      <li>You’ve submitted a code change and you see no problems in the service the
next day. Check to make sure a rollout occurred that day and your code was
included in it.</li>
    </ul>
  </li>
  <li>Always measure impact when optimizing code. Code changes that appear to be
“theoretically” faster can end up being slower due to factors revealed in
lower layers of abstraction.</li>
</ul>

<h2 id="beware-of-unknown-unknowns">Beware of unknown unknowns</h2>

<p>The scariest epistemological issue for programmers is the “unknown unknown”.</p>

<p>There are…</p>
<ul>
  <li>things you know (ie, “knowns”)</li>
  <li>things you know you don’t know (“known unknowns”)</li>
  <li>things you don’t even know that you don’t know (“unknown unknowns”)</li>
</ul>

<p>These unknown unknowns are the root of abstraction failures (and the reason why
programmers can never accurately predict how long a project will take).</p>

<p>You may have never heard of…</p>
<ul>
  <li>Sanitizing user inputs
    <ul>
      <li>If you use user-provided strings as part of a SQL query, your service can
be hacked via SQL injections.</li>
    </ul>
  </li>
  <li>Character encodings
    <ul>
      <li>Any text data your code processes must be using the character encoding
(eg, ASCII, UTF-8, UTF-32, etc) your code expects/supports.</li>
      <li>Random access of a character in a text buffer could take constant
time (for ASCII) or linear time (for UTF-8) depending on the character
encoding.</li>
      <li>You may output incomprehensible characters if you try to read text data
using the wrong character encoding.</li>
    </ul>
  </li>
  <li>Java heap size
    <ul>
      <li>Your program may be slowed down due to a lack of heap memory.</li>
      <li>You could fix this issue if you knew to configure a larger max heap size
for your Java program.</li>
    </ul>
  </li>
</ul>

<p>If you have not heard of these topics before, you may not even know that you
fell into their pitfalls.</p>

<p>There is no sure fire way to catch unknown unknowns when they are around but we
should check under at least one layer of abstraction to look for them.
Especially when a project requires learning something new, you should always
learn more than you need to. Doing so will mitigate the risk of being
surprised by abstraction failures.</p>

<p>When learning/working with an unfamiliar platform/language/tool/library/technology:</p>
<ul>
  <li>Read more documentation than just the bare minimum you need</li>
  <li>Watch videos
    <ul>
      <li>Conference presentations have the highest quality in my experience</li>
    </ul>
  </li>
  <li>Read blog posts</li>
  <li>Read the source code</li>
  <li>Grow your understanding of abstractions you have to work with
    <ul>
      <li>Learn about features recently added in to your programming language</li>
      <li>Read through all of the public functions of libraries, not just the ones
you’re using</li>
      <li>Skim through all of the flags of a CLI tool’s man page</li>
    </ul>
  </li>
  <li>Learn at least one layer of abstraction lower than you need
    <ul>
      <li>Learn about your compiler’s optimizations</li>
      <li>If you’re running a service, learn about your orchestration platform (ex:
kubernetes)</li>
      <li>If you’re working in Java, learn about the JVM</li>
      <li>If you’re working in Python, learn about the Python interpreter.</li>
    </ul>
  </li>
</ul>

<h2 id="conclusion">Conclusion</h2>

<p>Abstractions are necessary as they allow us to think efficiently but they are
treacherous as they can make it appear that we know “enough”. Programmers who
learn superficially will not succeed on difficult projects that come without
known solutions and involve multiple domains of expertise.</p>

<p>That said, the ideal put forth by this blog post needs to be balanced against
reality. Obviously, we can’t take time to learn every little thing when we’re
in a rush. Also, beginners can’t be expected to be so thorough. Ideals should be
balanced against real-world considerations.</p>

<p>And real-world considerations should be balanced against ideals. We should be
willing to pay some short-term costs for thorough learning and verifications.
Not just for writing correct code, but as part of our long-term journey of
becoming capable and principled engineers.</p>

</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Let's Stop Asking "Why Do You Want to Work for Us?" In Interviews (112 pts)]]></title>
            <link>https://nelson.cloud/lets-stop-asking-why-do-you-want-to-work-for-us-in-interviews/</link>
            <guid>40842603</guid>
            <pubDate>Mon, 01 Jul 2024 04:49:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nelson.cloud/lets-stop-asking-why-do-you-want-to-work-for-us-in-interviews/">https://nelson.cloud/lets-stop-asking-why-do-you-want-to-work-for-us-in-interviews/</a>, See on <a href="https://news.ycombinator.com/item?id=40842603">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div><p><em>“Why do you want to work for us?”</em></p><p>I have run into this question many times as I’ve been applying to and interviewing with lots of companies.</p><p>99% of the reason people want to work for a company is <strong>because they need money</strong>. That’s it. They want to be able to pay off debt. They want to be able to pay their bills. They want to be able to pay rent or their mortgage. They want to be able provide for their family. They want to be able to afford a better life. And so on.</p><p>Sure, the tech stack might be exciting. Or the product may be compelling. The work-life balance may be good. But I promise you that the biggest reason is still money.</p><p>If you don’t believe me, find your most passionate engineers, cut their compensation in half, and see if they stick around. I guarantee you they won’t.</p><p>Let’s stop beating around the bush and be real with each other. Do you really want to to be lied to by every candidate?</p><p>It’s okay to be motivated by money. That’s the world we live in. An engineer can do amazing work for your company even if they are only motivated by money. Also, companies are only motivated by making money. What’s wrong with the average person being motivated by the same thing?</p><p>You may have come across my application to your company at some point. I may have said something about wanting to work with bright people and looking for growth opportunities. While that is still true, you should know that 99% of the reason I applied to your company is to earn money so I can buy food, pay rent, and provide for my family.</p><p>Let’s stop asking this question in the application and interview process. We all know the real answer.</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pipes: A spiritual successor to Yahoo Pipes (274 pts)]]></title>
            <link>https://www.pipes.digital/docs</link>
            <guid>40841980</guid>
            <pubDate>Mon, 01 Jul 2024 02:03:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.pipes.digital/docs">https://www.pipes.digital/docs</a>, See on <a href="https://news.ycombinator.com/item?id=40841980">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
        
        <section id="what"><h2>What Pipes is</h2>

        <p>Pipes is a spiritual successor to <a href="https://en.wikipedia.org/wiki/Yahoo!_Pipes">Yahoo! Pipes</a>, but if you did not know that site, you can think of Pipes as a visual programing editor specialized on feeds, or a visual shell, or simply as a glorified feed configurator.</p>

        <p>Pipes gives you blocks that can fetch and create feeds, and manipulate them in various ways. Think filtering, extracting, merging and sorting. All you need to do is to connect those blocks with each other. Data just flows through such a pipe, it flows from block to block. At the end Pipes gives you a new feed, which you can give to other programs that support open web standards - such a program could be your feed reader.</p>

        <p>As input formats Pipes supports RSS, Atom and JSON feeds, it can scrape HTML documents, and it can work with regular text files.</p>
        </section>

        <section id="how">
        <h2>How to use Pipes</h2>

        <p>At the left side of the editor is your list of blocks. You can drag and drop those into the canvas to your right, and the regular block with its inputs and outputs will appear. That block can again be dragged around, but more importantly, if you have multiple blocks you can connect their inputs and outputs. Those are the circles at the side of a block - left the inputs, right the outputs. To connect them, click first on the output of one block, and then on the input of another block. Or drag the input onto the output. You should also fill the user inputs, the form elements in the center of some blocks that control their behaviour. Don't forget to connect your last block to the pipe output, the red circle at the far right.</p>

        <video src="https://www.pipes.digital/intro.mp4" controls="" width="800px"></video>

        <p>See the video above for a short demonstration of how simple it can be to filter an RSS feed.</p>
        
        </section>

        <section id="sharing">
        <h2>Sharing Pipes</h2>

        <p>You can set pipes to be pulicly visible in the <a href="https://www.pipes.digital/mypipes">My Pipes</a> menu, where you can also describe them and set tags to make the pipe searchable. Public pipes will be listed in the <a href="https://www.pipes.digital/pipes">public pipes</a> page, where they can be liked and forked by others.</p>

        <p>Note that pipe output feeds are publicly accessible by everyone who knows their url, which contains a ranzomized id and is thus not easy to guess. If you just want someone else to use the feed, you can just give him the pipe feed url.</p>
        </section>

        <section id="output">
        <h2>Pipe Output</h2>

        <p>The default output format of a pipe is RSS. RSS is an open format which can be used in a lot of other programs, like feed readers. Each pipe has a pipe output url like <code>https://pipes.digital/feed/pipeid</code> which is shown in the editor of a saved pipe, or in the list of private pipes under <a href="https://www.pipes.digital/mypipes">My Pipes</a>. If you want to get only the feed items' content you can open <code>https://pipes.digital/feed/pipeid.txt</code>, which will strip all xml feed elements. This is especially useful when your starting point was a text document that got <a href="#builder">transformed into a feed</a> to work with its data in Pipes.</p>
        
        </section>

        <section id="support">
        <h2>Support</h2>

        <p>Report bugs and feature requests via <a href="https://github.com/pipes-digital/pipes/issues">the Github issue tracker</a>, or send an email to <a href="mailto:support@pipes.digital">support@pipes.digital</a>.</p>
        
        </section>

        <section id="license">
        <h2>License and selfhosting</h2>

        <p>Pipes started as a non-free project. Now there is Pipes CE, a FOSS version of Pipes under AGPL, that you can run locally. Its home is the same <a href="https://github.com/pipes-digital/pipes">Github Repository</a> used as issue tracker for this site. You could think of this as an open core model.
        </p>
        
        </section>

        <section>
            <h2>Blocks</h2>
            <section id="feed">
                <h3>Feed</h3>
                <p>Download a RSS, Atom or JSON feed. If not pointed directly to the url of such a feed, it will try to find a <code>&lt;link rel="alternate"&gt;</code> element in the head of the linked page, and then download that feed. The feed block is usually the starting point of a pipe. Note that Pipes caches all downloads for a few minutes.</p>

                <img src="https://www.pipes.digital/imgs/feed_block_tiny.png">

                <p>It has no block input, but it takes as user input the url to download.</p>

                <a href="https://www.pipes.digital/imgs/feed_tiny.png" data-mediabox="feed"><img width="800px" src="https://www.pipes.digital/imgs/feed_tiny.png"></a>

                <p>In this example usage, the pipe consists of only one single feed block. That's not very useful yet. But note that the feed block input points to a normal HTML page, not an RSS feed. Because Hacker News specifies its RSS feed as a <code>rel="alternate"</code>, this pipe will output that feed instead.</p>
            </section>
            <section id="filter">
                <h3>Filter</h3>
                <p>Filter the input feed for a keyword, and either show only items that contain it or filter them all out. It searches for the word in the items title, description (if existing) and content. The search is case sensitive. If given a <a href="http://rubular.com/">regular expression</a>, it will interpret that regular expression instead, enabling more powerful filtering. Write that expression as <code>/expression/</code>, but regular keywords without the outer slashes.</p>

                <img src="https://www.pipes.digital/imgs/filter_block_tiny.png">

                <p>It takes the feed it searches through as block input, and the keyword to search for as user input. The second input, the checkbox, toggles whether found items are to be included or to be blocked.</p>

                <a href="https://www.pipes.digital/imgs/filter_tiny.png" data-mediabox="filter"><img width="800px" src="https://www.pipes.digital/imgs/filter_tiny.png"></a>

                <p>In this example usage, the filter block will filter the downloaded feed for all items that contain the keywords "Bitcoin" or "bitcoin".</p>
            </section>
            <section id="filterlang">
                <h3>Filter Language</h3>
                <p>This block checks all feed items for their language they are written in. The default logic is to keep only the items in the selected language. It checks multiple fields of an item for that, but you can limit the check to some specific fields, like only the title or only the description. And with the last checkbox you can turn the logic around and remove all items that are in the selected language.</p>

                <p>Use this block if you have a multi-language feed and you want to only keep items in your target language, or remove items in the one language that does not work for you. Be aware that the used n-gram detection will not be 100% accurate, and it even will be very inaccurate for very short texts (less than 10 words is bad, 5 should be the absolute minimum).</p>

            </section>
            <section id="replace">
                <h3>Replace</h3>
                <p>While the filter block is like the search tool grep, the replace block is like sed or the replace function of your texteditor. The first input is the search pattern, the second is its replacement. If given a <a href="http://rubular.com/">regular expression</a>, it will interpret that regular expression instead, enabling more powerful filtering. Write that expression as <code>/[aA]bc/</code>, as a regualr expression with surrounding slashes. The replacement pattern supports backreferences (<code>\1</code>).</p>

                <img src="https://www.pipes.digital/imgs/replace_block_tiny.png">

                <p>It takes the feed it searches through as block input, and the regex-enabled keyword to search for as first user input. The second input is its replacement pattern.</p>

                <a href="https://www.pipes.digital/imgs/replace_tiny.png" data-mediabox="replace"><img width="800px" src="https://www.pipes.digital/imgs/replace_tiny.png"></a>

                <p>In this example usage, the filter block will filter the downloaded feed for all items that contain the pattern "soccer" or "Soccer" and replace them with "football".</p>
            </section>
            <section id="combine">
                <h3>Combine</h3>
                <p>Combine two or more input feeds into one single feed. Combining those feeds will merge their items lists, and will also append their feed title and descriptions. The sort order follows the input order: The output feed has first all items from the first input feed, then all items from the second input feed, and so on.</p>

                <img src="https://www.pipes.digital/imgs/combine_block_tiny.png">

                <p>It takes the feeds to merge as block inputs, and has no user input.</p>

                <a href="https://www.pipes.digital/imgs/combine_tiny.png" data-mediabox="combine"><img width="800px" src="https://www.pipes.digital/imgs/combine_tiny.png"></a>

                <p>In this example usage, the pipe downloads multiple feeds and then combines them together.</p>
            </section>
            <section id="duplicate">
                <h3>Duplicate</h3>
                <p>Duplicate the input feed into multiple output feeds. You can also think of this as a splitter. This block does not manipulate the input feed in any way.</p>

                <img src="https://www.pipes.digital/imgs/duplicate_block_tiny.png">

                <p>It takes one feed as input, and has no user input. This is the one block that has multiple outputs.</p>

                <a href="https://www.pipes.digital/imgs/duplicate_tiny.png" data-mediabox="duplicate"><img width="800px" src="https://www.pipes.digital/imgs/duplicate_tiny.png"></a>

                <p>In this example usage, the duplicate block duplicates a feed that was already filtered for "Bitcoin", to filter it as well for "Linux" and "MacOS". Those two feeds then are combined together.</p>
            </section>
            <section id="merge">
                <h3>Merge Items</h3>
                <p>Use this block to merge items together. It will take step by step one item from each input feed and merge them together into one single item. You can optionally specify a replacement format. If it contains <code>\1</code> and <code>\2</code> it will replace those with the content of the two items. If it is just a regular string, then that string will be between the two item contents. If it is empty they will just be concatenated.</p>

                <img src="https://www.pipes.digital/imgs/merge_block_tiny.png">

                <p>The block takes two feeds as input. The user input serves as format, as replacement pattern, but is optional.</p>

                <a href="https://www.pipes.digital/imgs/merge_tiny.png" data-mediabox="merge"><img width="800px" src="https://www.pipes.digital/imgs/merge_tiny.png"></a>

                <p>In this example usage the title and the link of the hacker news feed are placed after one another, a dash is between them and an <em>end</em> added.</p>
            </section>
            <section id="unique">
                <h3>Unique</h3>
                <p>Remove duplicate items from a feed. Duplicate items could be an accident in the original feed, but more likely is that they occur after merging filtered feeds with items that containing multiple search words. This block uses the items guid to determine that two items are equal.</p>

                <img src="https://www.pipes.digital/imgs/unique_block_tiny.png">

                <p>It takes one feed as input, and has no user input.</p>

                <a href="https://www.pipes.digital/imgs/unique_tiny.png" data-mediabox="unique"><img width="800px" src="https://www.pipes.digital/imgs/unique_tiny.png"></a>

                <p>In this example usage, the pipe downloads a feed, duplicates it, filters for "Bitcoin" and "Linux" and then merges the results. The unique block now makes sure that items that contain both "Bitcoin" and "Linux" occur only one time in the output feed.</p>
            </section>
            <section id="truncate">
                <h3>Truncate</h3>
                <p>Truncate an input feed to a given length, with the first x items remaining. This is unlikely to be very helpful in a pipe, apart from when an input feed is really long and you want to improve performance. But imagine you have a website and want to show the last few items of a specific feed, then you could make that easier by producing a feed that has exactly as many entries you want to display.</p>

                <img src="https://www.pipes.digital/imgs/truncate_block_tiny.png">

                <p>It takes one feed as input, and the target amount of items as user input.</p>

                <a href="https://www.pipes.digital/imgs/truncate_tiny.png" data-mediabox="truncate"><img width="800px" src="https://www.pipes.digital/imgs/truncate_tiny.png"></a>

                <p>In this example usage, the feed of the New York Times homepage gets truncated to three items.</p>
            </section>
            <section id="shorten">
                <h3>Shorten</h3>
                <p>Shorten the text inside the selected element. The number defines how many characters are the target text length.</p>
            </section>
            <section id="sort">
                <h3>Sort</h3>
                <p>Sort the items of an input feed. You can specify the sort order, and which item element to use for sorting. Default is to sort by the items date (its <code>updated</code> element).</p>

                <img src="https://www.pipes.digital/imgs/sort_block_tiny.png">

                <p>It takes one feed as input, and two user inputs to set the sort order and the sort item.</p>

                <a href="https://www.pipes.digital/imgs/sort_tiny.png" data-mediabox="sort"><img width="800px" src="https://www.pipes.digital/imgs/sort_tiny.png"></a>

                <p>In this example usage, the Hacker News feed is re-sorted by date, to have the newest items at the top of the list.</p>
            </section>
            <section id="download">
                <h3>Download</h3>
                <p>Download a page. This is different from the <a href="#feed">feed block</a> as it will not try to find a feed. This block is really meant for downloading some data, like a html page, that is then transformed by other blocks to create a regular feed. As such the this block then needs to be connected to the extract block or the builder block, to create a regular feed. It is an alternative starting point for a pipe. Note that Pipes caches all downloads for a few minutes.</p>

                <img src="https://www.pipes.digital/imgs/download2_block_tiny.png">

                <p>It has no block input, but it takes as user input the url to download. If on a paid plan, it also allows setting a checkbox to interpret javascript on the downloaded page.</p>

                <a href="https://www.pipes.digital/imgs/download2_tiny.png" data-mediabox="download"><img width="800px" src="https://www.pipes.digital/imgs/download2_tiny.png"></a>

                <p>In this example usage, the Hacker News page is downloaded and set as feed output. That's not really useful yet. But note that it really is the Hacker News website that the pipe downloads, not its feed.</p>
            </section>
            
            <section id="images">
                <h3>Images</h3>
                <p>Extract images from a feed or a <a href="#download">downloaded</a> HTML page. The block will select all images currently embeded into the page or feed items. It also gives access to a gallery that opens in an overlay and shows all the images selected. Just for displaying those images and not as block output, the gallery will try to create absolute urls for those images that on the source page were linked with relative urls.</p>

                <img src="https://www.pipes.digital/imgs/images_block_tiny.png">

                <p>It takes one feed or downloaded HTML page as input. The output is a feed with each item containing one image.</p>

                <a href="https://www.pipes.digital/imgs/images_tiny.png" data-mediabox="images"><img width="800px" src="https://www.pipes.digital/imgs/images_tiny.png"></a>

                <p>In this example usage, the images of the articles on the pipes blog are extracted and set as feed output.</p>
            </section>
            <section id="tabletosjon">
                <h3>Tables</h3>
                <p>Extract HTML tables from a feed or a <a href="#download">downloaded</a> HTML page. The block will select all HTML tables currently embeded into the page or feed items and convert them to JSON. It then outputs a feed with only the JSON tables as item content.</p>

                <img src="https://www.pipes.digital/imgs/tables_block_tiny.png">

                <p>It takes one feed or downloaded HTML page as input. The output is a feed with each item containing a JSON object.</p>

                <a href="https://www.pipes.digital/imgs/tables_tiny.png" data-mediabox="images"><img width="800px" src="https://www.pipes.digital/imgs/tables_tiny.png"></a>

                <p>In this example usage, the tables of a crawled page are extracted and set as feed output.</p>
            </section>
            <section id="insert">
                <h3>Insert</h3>
                <p>Insert content taken from one feed and insert it at the specified position of a different feed. This is meant to be combined with the extract block. Take something from one feed with the extract block, connect it to this block, and then connect the feed where you want to add the extracted element.</p>

                <img src="https://www.pipes.digital/imgs/insert_block_tiny.png">

                <p>It takes two feeds as inputs. From the first it will take the first item, the second input is the feed that will be modified. The XPath expression specifying where to insert the element is the user input.  The third input, the checkbox, toggles whether the new content should be appended to the already existing content at the target item or whether to replace it.</p>

                <a href="https://www.pipes.digital/imgs/insert_tiny.png" data-mediabox="insert"><img width="800px" src="https://www.pipes.digital/imgs/insert_tiny.png"></a>

                <p>In this example usage, the <code>/rss/channel/image</code> node of a soundcloud feed is taken and inserted into the Hacker News feed.</p>
            </section>
            <section id="builder">
                <h3>Build Feed</h3>
                <p>Build a new feed. The various input feeds are set as its items attributes. That way one can use <a href="#extract">extracted elements</a> to create a new regular feed, whose items have a proper title, content, date and link. You can also connect a downloaded text file to this, that will then get transformed line by line into feed items. The order is important here: this block will go through all its input feeds simultaneously, and at each step get the content of the current item of the content feed, as well as the content of the current item of each other connected feed, to create a complete feed item. This block can be used in various ways, but its most obvious usage is to create a feed for a website that has no feed of its own.</p>

                <img src="https://www.pipes.digital/imgs/build_feed_block_tiny.png">

                <p>It takes four feeds as input, and the markings in the block show which attribute they will fill. The second input for example will become the new feeds content, and is the only required input.</p>

                <a href="https://www.pipes.digital/imgs/build_feed_tiny.png" data-mediabox="build_feed"><img width="800px" src="https://www.pipes.digital/imgs/build_feed_tiny.png"></a>

                <p>In this example usage, the pipe downloads the Hacker News homepage, duplicates it and extracts three elements: The title, the score and the link target. Those are then given to the feed builder to set the new items title, their content and their link target.</p>
            </section>
            <section id="pipeblock">
                <h3>Pipes as Blocks</h3>
                <p>Use a pipe as input block. Since pipes output RSS, their feed can effortlessly be used in other Pipes. This allows the creation of more complicated pipes by combining multiple simpler ones, like submodules.</p>

                <img src="https://www.pipes.digital/imgs/pipeblock_block_tiny.png">

                <p>It has one output, which is the result feed of the corresponding pipe. </p>

                <a href="https://www.pipes.digital/imgs/pipeblock_tiny.png" data-mediabox="pipeblock"><img width="800px" src="https://www.pipes.digital/imgs/pipeblock_tiny.png"></a>

                <p>In this example usage, the pipe combines two filtered feeds that are created by other pipes.</p>
            </section>
            <section id="webhookblock">
                <h3>Webhook</h3>
                <p>Use data sent by a webhook as pipe input. When you create this block, it will show a URL, which is your new webhook endpoint. You can instruct other sites - like Github - to POST data to that endpoint. The webhook block will create a feed out of the received data, which can then be manipulated as usual. Note: Stored data is erased after an hour, and the API endpoint is rate limited (currently to 5 requests per minute).</p>

                <img src="https://www.pipes.digital/imgs/webhook_block_tiny.png">

                <p>It has one output, which is the data stored under its webhook endpoint. </p>

                <a href="https://www.pipes.digital/imgs/webhook_tiny.png" data-mediabox="webhook"><img width="800px" src="https://www.pipes.digital/imgs/webhook_tiny.png"></a>

                <p>In this example usage, the pipe combines two webhook feeds and limits the length to the last 10 items.</p>
            </section>
            <section id="textinputblock">
                <h3>Textinput</h3>
                <p>Use this block to let other users fill the input of connected blocks. This can make a pipe dynamic. For example, you could have a generic pipe that works with many sites, and this way other users could point the pipe to the site they want to use it on.</p>

                <img src="https://www.pipes.digital/imgs/textinput_block_tiny.png">

                <p>The first user input is the name of the input. It will be shown to the user in the UI and is also the name of the GET parameter that controls this block when calling the pipe feed. The second user input is the default value that will be used when the parameter is not set. It has one output, which is the text that will be used by the connected input. </p>

                <a href="https://www.pipes.digital/imgs/textinput_tiny.png" data-mediabox="textinput"><img width="800px" src="https://www.pipes.digital/imgs/textinput_tiny.png"></a>

                <p>In this example usage, the pipe filters a user-choosable feed for a search term the user selects as well. The default feed is the one from the New York Times, and the default search term is <code>Trump</code>. That pipe can be found <a href="https://www.pipes.digital/pipe/14OE65qg">here</a>.</p>
            </section>
            <section id="foreach">
                <h3>ForEach</h3>
                <p>Use this block to repeat the action of a download or feed block for every item of the input feed. Those blocks normally work with the user provided text input, to download a specific url for example. With the ForEach block, instead of acting on a single manually provided URL you could download all the URLs you extract from somewhere else. This can for example be useful to create full text RSS feeds. To control the action of the block, drop a download or feed block on it.</p>

                <img src="https://www.pipes.digital/imgs/foreach_block_tiny.png">

                <p>The block takes the items it is supposed to act upon as input, usually provided by an extraxt block. It outputs the downloaded URLs (as items in an RSS feed) or fetched feeds (with all the items appended), depending on its configuration.</p>

                <a href="https://www.pipes.digital/imgs/foreach_tiny.png" data-mediabox="foreach"><img width="800px" src="https://www.pipes.digital/imgs/foreach_tiny.png"></a>

                <p>In this example usage the block is configured as download block. The output will be the first two pages linked in the RSS feed of onli-blogging.de.</p>
            </section>
            <section id="twitterblock">
                <h3>Tweets (legacy)</h3>
                <p>As there is no trustworthy model for further access to the twitter API, the twitter block is now defunct.</p>
            <section id="integrations">
                <h3>Integrations</h3>
                <p>Pipes has blocks to fetch data comfortably from some other sites. Those service specific blocks usually take a user or channel name or an url. They then return a normalized RSS feed with updates specific to the target site. Currently supported sites are:
                </p>
                <ol>
                    <li>Twitter, see <a href="#twitterblock">here</a></li>
                    <li>Vimeo</li>
                    <li>Dailymotion</li>
                    <li>Periscope</li>
                    <li>UStream</li>
                    <li>Mixcloud</li>
                    <li>SVT Play</li>
                    <li>Speedrun.com</li>
                    <li>Youtube, integrated into the <a href="#feed">Feed block</a></li>
                </ol>
                <p>Pipes does not have a special agreement with those sites. It just accesses (hidden) existing RSS feeds or uses APIs to create them. For some of those blocks Pipes calls <a href="https://github.com/stefansundin/rssbox">RSS Box</a> to do the feed discovery and creation work.</p>
            </section>
        </section>
    </section>
    </section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Model of a Mind (102 pts)]]></title>
            <link>https://tylerneylon.com/a/mind_model/mind_model.html</link>
            <guid>40841502</guid>
            <pubDate>Mon, 01 Jul 2024 00:15:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tylerneylon.com/a/mind_model/mind_model.html">https://tylerneylon.com/a/mind_model/mind_model.html</a>, See on <a href="https://news.ycombinator.com/item?id=40841502">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      <p>A Model of a Mind</p>
      
      <p>
      
      \(\newcommand{\customstrut}{}\)
      \(\newcommand{\crossedouty}{\dot y \kern -5pt \scriptscriptstyle{\diagup\atop\vphantom{y}}}\)
      \(\newcommand{\crossedoutone}{\dot 1 \kern -5pt {\scriptscriptstyle{\diagup\atop\vphantom{\textstyle 1}}}}\)
      \(\newcommand{\crossedouttwo}{\dot 2 \kern -5pt {\scriptscriptstyle{\diagup\atop\vphantom{\textstyle 2}}}}\)
      \(\newcommand{\crossedoutthree}{\dot 3 \kern -5pt {\scriptscriptstyle{\diagup\atop\vphantom{\textstyle 3}}}}\)
      \(\newcommand{\crossedoutfive}{\dot 5 \kern -5pt {\scriptscriptstyle{\diagup\atop\vphantom{\textstyle 5}}}}\)
      \(\newcommand{\crossedoutsix}{\dot 6 \kern -5pt {\scriptscriptstyle{\diagup\atop\vphantom{\textstyle 6}}}}\)
      \(\newcommand{\crossedoutseven}{\dot 7 \kern -5pt {\scriptscriptstyle{\diagup\atop\vphantom{\textstyle 7}}}}\)
      \(\newcommand{\lowerhaty}{\lower 1ex{\hat y}}\)
      \(\newcommand{\lhy}{\lower 1ex{\hat y}}\)
      \(\renewcommand{\hat}[1]{\widehat{#1}}\)
  </p><p>[ Formats: <a href="http://tylerneylon.com/a/mind_model/mind_model.html">html</a> |
  <a href="http://tylerneylon.com/a/mind_model/mind_model.pdf">pdf</a>
  <span>\(\,\)</span>]</p>
  <p>This article explains a simple model of how minds might work. I’m
  motivated by the success of AI-based language models to look at the
  future of digital minds. I’ll present a conceptual data-flow
  architecture that can account for several key features of minds: the
  ability to initiate actions (agency), learning, thinking, and
  introspection. I’ll describe the model at a high level, but I’ll also
  try to anchor it in terms of existing AI systems to argue that
  something like this is realistic to build today.</p>
  <p>I can imagine two goals of a mind model: to understand human
  brains, or to create digital minds. These goals overlap because the
  most impressive mind we know of is the human brain<label for="sn0"></label><span>Please don’t mistake ignorance for
  hubris! I’m sure other minds can exist that are better.</span>.
  My primary motivation is the creation of digital minds, but — because
  of the overlap in the goals — I’ll aim for a mind model that can
  account for the way human minds work.</p>
  <!-- TODO: Turn the footnote into a side note. -->
  <p>There’s still plenty of debate about whether or not a digital mind
  can ever be truly conscious, or have emotions or subjective
  experiences as humans do. I’m convinced they can. Rather than focus on
  that debate, however, I’d like to work in the hypothetical world where
  digital minds are indeed capable of all the internal experiences of
  human minds. If I’m wrong, then this is a collection of blueprints
  about behavior alone; if I’m right, then this article is something
  more — hopefully, actual progress toward both the creation of digital
  minds as well as some insight into how our own brains may work.</p>
  <h2 data-number="1" id="goals-of-the-model"> Goals of the Model</h2>
  <p>I’m trying to make a system that can behave like a human.
  Consciousness is a personal motivation, but I’m not going to focus on
  it as a goal because it’s difficult to define well and people often
  disagree about it. This article instead looks at some aspects of minds
  that — while still challenging — are a little easier to discuss.</p>
  <p>Specifically, I’m trying to build a system that has these
  features:</p>
  <ul>
  <li>Agency</li>
  <li>Learning</li>
  <li>Thinking</li>
  <li>Introspection</li>
  </ul>
  <p>I’ll show you the simple model, argue why it can enable behavior
  like each of the above points, and I’ll finish with some notes about
  the elusive word “consciousness.”</p>
  <h2 data-number="2" id="the-model"> The Model</h2>
  <p>I’m thinking about minds in terms of data flow between
  simultaneously-acting modules. If you have a computer with a GPU, a
  multi-core CPU, and a camera attached, then each module (GPU, CPU,
  camera) can do its own work in parallel. The modules in a system like
  this talk to each other, but they can always process information as
  it’s received.</p>
  <p>Human brains are incredibly parallel machines. Neurons don’t wait
  for each other, but apparently react to signals as soon as they
  receive them. So it makes sense to think of a brain as a vast neural
  network — one we can understand better by seeing its architecture as a
  data flow diagram between modules that continuously act in
  parallel.</p>
  <h2 data-number="2.1" id="an-action-model"> An action model</h2>
  <p>A central concept in this model is what I call an <em>action
  model</em>. The name is a natural evolution of <em>language
  models</em>, being systems that understand and can produce language.
  Thus an action model understands and can produce <em>actions</em>.</p>
  <p>You can think of an LLM, in simple terms, like this:</p>
  <pre><code>  context -&gt; LLM -&gt; next_token</code></pre>
  <p>By analogy, an action model works like this:</p>
  <pre><code>  context -&gt; Action Model -&gt; next_action</code></pre>
  <p>Conceptually, I’m thinking of an “action” as something like a
  superset of words. If I wanted to say “hello,” then <em>say hello</em>
  is an action. If I want to walk to the kitchen, that’s an action. And
  if I want to ponder the meaning of life, that pondering is also an
  action.</p>
  <h2 data-number="2.2" id="the-model-at-a-high-level"> The model at a high
  level</h2>
  <p>Here’s the model:</p>
  <figure>
  <img src="https://tylerneylon.com/a/mind_model/img/mind_model_v2.png" alt="Data flow diagram for a model of a mind.">
  
  </figure>
  <p>Each arrow represents a flow of information. Solid arrows are what
  I consider to be the most important flows.</p>
  <p>A couple modules do a lot of work for us, but are easier to
  understand: The <em>sensory inputs</em> provide everything we sense,
  including vision, taste, temperature, pressure, and so on. I’m letting
  this module perform some work as well, since (for example) our vision
  system quickly provides us some analysis of what we see, so that we
  tend to perceive visual objects (“face”) rather than a raw image
  (“pixels of a face”). The other somewhat-simple module is the
  <em>motor control</em> which we can think of as receiving a conceptual
  vector (for example, “scratch left ear”); it can do some processing to
  translate that high-level command into a series of individual muscle
  commands. When you memorize a piano song well enough, it feels as if
  your fingers know the song better than you do, and I believe that
  indicates some kind of learning has happened within the motor control
  module.</p>
  <p>The <em>action model</em> has already been introduced. I’ve
  included within it a <em>language encoder</em>, which translates
  incoming signals — seeing written words, hearing spoken words, seeing
  sign language — converting those into a vector space understood by the
  system. Since I’m imagining an action model can be a slight
  generalization of a language model, I’m expecting that such an action
  model could naturally incorporate within itself a way to standardize
  lexical concepts into consistent vectors. Similarly, the <em>language
  decoder</em> is good at converting those conceptual vectors back out
  to lexical actions, such as speaking a sentence out loud, or writing
  something down.</p>
  <p>The <em>emotional state</em> module is doing a lot of work: It’s
  meant to represent all of our bodily needs, such as feeling hungry or
  tired, as well as our state of mind, such as feeling elated,
  frustrated, nostalgic, or intrigued. In this model, our emotional
  state can change based on what’s coming out of the action model, and
  it also filters that output into the <em>recent memory</em>
  module.</p>
  <p>I’ve chosen this flow of data carefully. In effect, there are two
  filters on what we store in recent memory: First, when the action
  model receives a lot of incoming information, it will effectively pay
  more attention to some information than the rest. As in a language
  model, the unused information essentially disappears from the network
  as it passes through later layers; the attended ideas persist until
  the end. The second filter is based on our emotional state. When we’re
  bored, what’s happening is not considered important, and not flagged
  for longer-term memory. When we’re experiencing an emotional spike, a
  lot more data is kept around in more detail. Our usual life tends to
  be somewhere between these extremes.</p>
  <p>Finally, I’ve called out one particular piece of data called a
  <em>goal</em>. This is not a computational module, but rather a part
  of the data feedback loop coming out of the action model and fed back
  into itself. I’m imagining the action model as receiving a lot of data
  that we could view as one giant vector, and likewise producing another
  large vector. These large vectors might begin life in new brains as
  “unformatted,” meaning that a person can learn to use that space as
  they grow, rather than thinking of the vector data as pre-assigned to
  given purposes. Within the vector representations, there’s room to
  learn / define specific variables, and one of the most important
  variables we learn is our current goal.</p>
  <p>Just as a word can be captured by a vector, so can an action or a
  (closely related) goal that we have in mind. In this mind model, our
  current goal fundamentally shapes how we filter the incoming
  information, and can be edited by the action model itself. We may even
  have an effective <em>stack</em> of goals, a small data structure that
  we can push new goals onto, and pop them off as we complete them. Or,
  if you’re like me, a limited-size stack where tasks are often
  forgotten because I keep thinking of new things to do.</p>
  <hr>
  <p>That’s the gist of the mind model. In the next few sections, I’ll
  explain how this model can provide agency, learning, thinking, and
  introspection.</p>
  <h2 data-number="3" id="agency"> Agency</h2>
  <p>I’ll explain how agency can be achieved first because it’s the
  simplest of our goals to accomplish, and it’s somewhat independent
  from the present mind model.</p>
  <p>A large language model doesn’t have agency because it can only
  react to input; it can’t independently take action.</p>
  <p>However, we can imagine a change that adds agency to any LLM-like
  system. Think of a model that receives two interwoven input streams.
  One input stream is the person talking to the model, and the other is
  the model being able to see its own output. Current LLMs see both of
  these streams, but they’re set up so that only one person at a time
  can talk — the LLM or the user. The difference in the two-input
  version is that the model is designed from the start to see its own
  feedback, constantly, as well as simultaneous real-time input from
  “the outside,” such as the user.</p>
  <p>Now the LLM can choose to switch, at its own discretion, back and
  forth between a talking and listening mode. When the LLM wants to
  listen, it can produce a special <code>&lt;listening&gt;</code> token
  many times in a row, until it wants to say something. When it wants to
  speak, it outputs what it wants to say instead of the
  <code>&lt;listening&gt;</code> token.</p>
  <p>In this way, the model can run continously while enabling a
  meaningful two-way conversation that includes pauses for the other
  speaker. It can independently say whatever it likes whenever it likes.
  This is the lexical version of agency, and it applies perfectly well
  to the mind model sketched above, which does indeed receive both
  sensory inputs as well as feedback from its own output.</p>
  <h2 data-number="4" id="memory-and-learning"> Memory and Learning</h2>
  <p>It might sound surprising to say that a “machine learned” LLM
  doesn’t learn. What I mean is that, in their standard mode of
  operation, modern LLMs don’t modify any internal state in reaction to
  the conversations they have. The first wave of LLMs would completely
  forget what everyone said as soon as its context window was full. As
  I’m writing this, some systems like ChatGPT, have been augmented so
  that they “remember” certain facts. While I can’t confirm details
  internal to OpenAI, my educated guess is that these facts are
  available to the model because they can be selectively added to the
  prompt. That is, I believe the only common way for LLMs to “learn”
  today is to implement an additional system to store data from
  conversations, and to selectively insert that data into prompts when
  we think it might be useful.</p>
  <p>This is different from the way we experience life because we gain
  new abilities, and often the things we remember don’t seem to be part
  of some internal prompt. For example, when you speak out loud, you
  don’t feel as if your brain chose a subset of 100 candidate words to
  present to you, and you chose from amongst those. Rather, your full
  spoken vocabulary (something learned) feels available to you, without
  effort, and unfiltered.</p>
  <p>Some internal data of our organic neurons is updated in response to
  what happens to us. The equivalent of this in the mind model is to
  update weights based on experiences.</p>
  <h2 data-number="4.1" id="story-memory-and-action-memory"> Story memory and action
  memory</h2>
  <p>To explain the ideas of memory in this mind model, I’ll split
  memory into two broad categories:</p>
  <ul>
  <li><em>Story memory</em> is the memory of everything that’s happened
  to you; and</li>
  <li><em>action memory</em> is the modification of how you act based on
  positive or negative feedback.</li>
  </ul>
  <p>I’ll motivate these categories with a simple example. If a stranger
  says to you, “hey, you can definitely trust me!” then you can
  immediately store this narrative element of your life: This person
  said these words. Now, is what they said <em>true</em>? That’s a
  different matter, and one you should probably decide based on more
  evidence. The <em>fact</em> that they said these words can safely go
  into story memory without fact-checking. The <em>idea</em> that
  they’re trust-worthy is an uncertain claim we can keep around, flagged
  as “dubious” until further notice. Given more feedback, we can choose
  to act with or without trust toward this person, and this goes into
  our action memory.</p>
  <p>When it comes to decisions we make, it’s not always obvious if it
  was a good decision until some later point in time. Consider making a
  move in chess. If your opponent surprises you with an unseen checkmate
  two moves later, you might retrospectively realize a particular move
  had been a mistake. This is an example of delayed feedback on the
  quality of your decision. When you have delayed feedback, it’s useful
  if you can later reinforce good decisions, or discourage repetition of
  mistakes.</p>
  <p>Just as language models come with knowledge baked into them, an
  action model is also capable of holding knowledge, but I’ve included a
  separate memory module. The motivation for the <em>recent memory</em>
  module in the mind model is a place that can essentially memorize
  exactly what has happened recently before it’s integrated (through
  some kind of training) into the action model. I suspect this is useful
  because, as you fine-tune LLMs, you can easily cause catastrophic
  forgetting, which is the effective erasure of old memories. In other
  words, in practice it seems that new memories are added carefully,
  perhaps in order to keep old memories intact. Another use of the
  recent memory module is to provide a delay to considering my own
  actions as good until after I’ve received feedback about that
  action.</p>
  <p>A third motivation to have a separate recent memory module is that
  a detailed memory of the past few hours is much more valuable that an
  equally-detailed memory of some random window of a few hours from when
  you were four years old. The usefulness of story memory decreases
  rapidly with time, and there’s a need to filter what’s stored due to
  the sheer volume of sensory input in comparison with the finite
  capacity in your action memory. Because recent memories tend to be
  more useful, it’s convenient to have a rolling window of accurate
  memories that are forgotten as enough time passes.</p>
  <p>This breakdown of memory types might account for these features of
  human memory:</p>
  <ul>
  <li>We seem to have a small memory capacity that we receive with
  almost no effort or special attention spent on the thing being
  remembered. George Miller did work to establish that most people can
  quickly remember about seven items from an arbitrary list. That memory
  might fit into the feedback vectors of the action model itself. This
  memory disappears as soon as we think enough about something
  else.</li>
  <li>Different people have different recent memory capacities, but it’s
  common to remember what you ate for breakfast this morning, but not
  what you ate for breakfast several days ago, ignoring predictability
  (such as if you cheat by eating the same thing for breakfast every
  day). This type of memory matches what can fit into the recent memory
  module.</li>
  <li>Longer-term memories don’t seem to have a pre-determined time
  limit, but they do tend to fade over time. This pattern is consistent
  with knowledge baked into LLMs, and so can match the way an action
  model would effectively remember things — without a time limit, but
  with the ability to fade over time, especially if not referenced for a
  long time.</li>
  </ul>
  <p>Human brains seem to have separate locations for long-term memories
  and whatever our equivalent of an action model is. Cases of amnesia
  suggest this: People can forget much of their past while otherwise
  acting normally. If our memories and behavior depended on the same set
  of neurons, then this wouldn’t be possible. However, in the mind model
  above, I’ve let the long-term memory be implicitly part of the action
  model because this is effectively how language models currently store
  their version of memories.</p>
  <p>The mind model accounts for clarity of memory around emotionally
  charged moments — and lack of memory around unremarkable events — by
  filtering memories through emotional states. In order for the model to
  remember something, it must be both (a) something the action model has
  paid attention to, and (b) something the mind cares to remember based
  on the emotional state. In addition, the emotional state is part of
  the context for the action model, so that goals are influenced by how
  the mind feels, and what the mind pays attention to is likewise
  influenced by feelings. For example, if the mind is in a happy mood,
  it’s more likely to appreciate the positive aspects of a conversation;
  if it’s feeling defensive, it’s more likely to notice a perspective
  from which a conversation can be seen as judgmental.</p>
  <p>I’m using the word “emotion” in a broad sense meant to include
  pleasure, pain, boredom, happiness, frustration, and any combination
  of states of mind that have a not-purely-rational feeling associated
  with them. The most basic aspect of this — akin to simple pleasure or
  pain — can be seen as a relatively quick feedback loop to inform if
  the recent action memories are good are bad for the sake of learning.
  If you hit your thumb with a hammer, then you’ll have pain as a clue
  to no longer take that same action. The model captures pain as
  negative feedback from the emotional state.</p>
  
  <p>Another kind of learning happens at a higher level, which requires
  longer-term thinking. For example, suppose you write a first draft of
  a book, and then give that book to some beta readers for feedback. You
  can view this as a process with many months between the action first
  taken — writing your first word of a new book — and receiving useful
  feedback on that action. The recent memory is no longer a useful
  vehicle for this kind of learning.</p>
  <p>In this case, I suspect humans learn a process in a more explicit
  manner. I’m convinced that humans learn rational behaviors as action
  sequences which are initiated by triggers. For example, when I want to
  write about an idea that’s already well formed in my mind, I’ll either
  record a voice memo of the outline, or I’ll type up a draft in google
  docs. That’s part of my personal process. The trigger is the
  combination of (a) wanting to write an article, and (b) not needing to
  do more research, that is, feeling confident I’m ready to write. The
  action sequence, at a high level, is to make the outline.</p>
  <p>Now suppose I get feedback on my action sequence. For example,
  maybe the voice recorder app on my phone deletes a file due to a bug.
  Then I’ll make a mental note to use a different voice recorder app.
  This kind of learning is not happening at the level of weight updates
  in a neural network. Rather, it’s a more conceptual idea that is best
  seen as over-writing the key-value pair:</p>
  <pre><code>  [I want to record an outline] -&gt; [open voice app A]</code></pre>
  <p>by re-using the same key, and replacing the value, like so:</p>
  <pre><code>  [I want to record an outline] -&gt; [open voice app B]</code></pre>
  <p>I’ve phrased things this way specifically because human brains
  don’t seem to be good at erasing past memories, but rather they seem
  to be able to <em>replace</em> values associated with pre-existing
  keys. In this case, the keys are triggers that kick off actions.</p>
  <h2 data-number="4.3" id="key-value-memory-in-humans-and-ai-models"> Key-value memory in humans
  and AI models</h2>
  <p>Consider a person with a bad habit, such as biting their nails.
  It’s notoriously difficult to enact a strategy of simply stopping such
  a habit. If you do this and your thought is “I’ll just stop,” you’re
  likely to fail. However, if you <em>replace</em> the bad habit with
  something else, you’re more likely to succeed. For example, you can
  notice the situations where you’re most likely to bite your nails —
  such as sitting in a classroom and somewhat bored — and then teach
  yourself to take a <em>different action</em> in those same contexts.
  For example, you might use a fidget spinner instead of nail-biting.
  This is a human-oriented example of key deletion being hard (“key
  deletion” here would be like ignoring the trigger — <em>bored in a
  classroom</em> – that tends to elicit your bad habit), but
  value-updating being possible (“value-updating” meaning that the
  trigger, <em>bored in a classroom</em>, still means something to you,
  but now your reaction is updated).</p>
  <p>The internal mechanisms of modern language models are similar. They
  fundamentally rely on the transformer module, which is built on
  key-value lookups. Transformer-based models learn to ask internal
  queries (key lookups) encoded as vectors (a list of specific, but
  somewhat noise-tolerant, numbers). Once a model has learned to look
  for a certain key, it’s hard to unlearn. To change the model’s
  behavior, it seems easier to change what the key points to rather than
  to get the model to change so that it ignores the trigger
  altogether.</p>
  <p>The similarity between these two “add-only” mechanisms may not be a
  coincidence; perhaps brains internally use something akin to the
  key-value pairs, just as the transformer does.</p>
  
  <p>Meta-learning can happen in the mind model in a few ways:</p>
  <ul>
  <li><strong>Planning</strong>: When you understand you want to take on
  a new behavior in the future, you can perform explicit planning for
  your eventual actions. For example, you might put something on your
  calendar, or write down a list of things you want to do today. In this
  case, the model can simply capture the actions of using a calendar, or
  of writing a list, and the higher-level goals of these actions are
  only indirectly captured by the neural weights.</li>
  <li><strong>Association</strong>: Often you don’t know when you’ll
  need to use a new piece of knowledge, such as learning to ask
  directions in a new language. In this case, it’s useful if you can
  recall a relatively unpracticed action based on the correct context.
  The model could account for this in the following way: When you learn
  ahead of time, you have an understanding of the future context where
  the action will be useful, so that future context can be linked with
  the knowledge. The action itself can be stored as well as possible
  either through practice (such as language learning) or through
  understanding (such as reading a how-to guide).</li>
  <li><strong>Problem-solving</strong>: There are other kinds of
  meta-learning, separate from either planning or receiving knowledge.
  If you’re faced with a problem you’ve never solved before, and you
  don’t know where to look up an answer (or don’t want to), then you can
  try to simulate the probem in your head, and mentally consider
  potential solutions. If you arrive at an idea you like, this is it’s
  own kind of learning.</li>
  </ul>
  <p>I’d say this last kind of learning is based on <em>thinking</em>,
  so now is a good time to switch gears — let’s take a look at how the
  mind model can capture sophisticated thoughts.</p>
  <h2 data-number="5" id="thinking"> Thinking</h2>
  <p>Suppose you’ve just learned how to play tic-tac-toe, and it’s your
  turn. This is an example of thinking that’s easy to think about.
  You’re “naughts” (circles), and it’s your turn on this board:</p>
  <figure>
  <img src="https://tylerneylon.com/a/mind_model/img/tic-tac-toe.png" alt="It’s circe’s turn. Should the next circle go in the middle of the board?">
  
  </figure>
  <p>You’re considering the center square for your next move. I’m
  suggesting this example because, if you’re brand new to tic-tac-toe,
  it’s not instantly obvious that crosses (x’s) will win. After a little
  thinking or experience, you can see this.</p>
  <p>The mind model captures thinking as an internal feedback loop. Some
  of the output of the action model is received again as input for the
  next cycle.</p>
  <p>In the tic-tac-toe example, your thought process might work like
  this:</p>
  <ul>
  <li>It’s circle’s turn. X’s will win if they go in the middle next, so
  I better go in the middle.</li>
  <li>Then it’s x’s turn. Similarly, the x player better go in the
  lower-right corner.</li>
  <li>Now, imagining that board, I can see that the x player has two
  lines that can win on the next move. Circle can’t block them both, so
  x must win.</li>
  </ul>
  <p>In the mind model, each of these bullet points may be one iteration
  of thought through the action model. It would be more difficult to
  imagine a single iteration of an action model noticing that conclusion
  if it was new to tic-tac-toe. So each iteration is useful as a smaller
  step in a kind of search process toward better understanding of what’s
  happening, or in a protocol of more carefully deciding what to do.
  That example is more of a caricature compared to the exact
  calculations that actually happen, but it illustrates the way in which
  a feedback loop can support internal thoughts building on each
  other.</p>
  <h2 data-number="5.1" id="the-nature-of-thought"> The nature of thought</h2>
  <p>I’m not going to claim to understand all of human thought, but I
  will notice a few interesting things about both this mind model as
  well as how people seem to think. First I’ll talk about thoughts in an
  abstract, human-oriented manner, and then circle back to the model and
  explain how these modes of thought can be captured by the model.</p>
  <p>One mode of thought is <strong>predicting the future</strong>,
  including the future actions of other agents. This is useful in a
  game-playing context, but it’s also useful in many other scenarios.
  For example, if you’re negotiating with someone (such as navigating
  the tricky terrain of a bed-time routine with a young child), it’s
  useful to predict how the other agent will react to different ways to
  communicating about the situation.</p>
  <p>Another mode of thought can be <strong>creativity</strong>, wherein
  you’re coming up with new ideas. An example of this would be in
  writing fiction, poetry, painting, or creating new music. In this mode
  of thought, it feels to me as if there’s a general direction to the
  creativity, and we alternate between trial-and-error discovery of
  pieces of the work being created, or a mode in which we know what we
  want to achieve and simply put in effort to translate that goal into
  an actualization, such as painting an image we have clearly in
  mind.</p>
  <p>A kind of thinking related to both of the above is
  <strong>problem-solving</strong>, in which we want to achieve
  something but don’t know the best way to move forward. A toy example
  would be someone asking you a riddle. What’s better than pizza but
  worse than taxes?<label for="sn1"></label><span>Answer: Nothing.</span> There’s an interesting asymmetry
  to many problems we can try to solve: Often it’s easier to
  <em>recognize</em> a good solution than it is to <em>find</em> that
  good solution.</p>
  <p>So when it comes to problem-solving, our mode of thought may be a
  feedback loop in which a creative component suggests candidate
  solutions, and an analytic part of the action model decides whether or
  not this is a good candidate.</p>
  <h2 data-number="5.2" id="advanced-thinking"> Advanced thinking</h2>
  <p>There are more sophisticated versions of each of these
  processes.</p>
  <p>For one thing, human brains clearly learn from experience. When
  you’re better at tic-tac-toe, you can first see <strong>patterns that
  allow you to skip ahead in predicting</strong> the outcome of
  different boards — and eventually you can simply memorize the best
  possible moves. Similar pattern-recognition exists for more
  interesting contexts, from games like chess to real-world challenges,
  such as writing fiction (understanding tropes, audience reactions,
  dealing with narrative road-blocks), or running a business.</p>
  <p>Related to pattern recognition is the concept of an
  <strong>internal mental vocabulary</strong>. A simple perspective is
  that mental “words” match words in the language we know best. By the
  time you learn the word “dog,” you have an idea for what a dog is. But
  there are differences between our verbal and mental vocabularies. You
  can recognize an animal you’ve seen before without having to know what
  it’s called. More abstractly, you can know how to deal with a
  situation you’ve been in before without needing a name for that
  situation.</p>
  <p>Many people experience an <strong>inner voice</strong>, which seems
  to be just one particular way of thinking. I often thinking without an
  inner voice. But I do hear one, often, when I’m faced with a decision
  or problem that takes me a little more time to solve. Often my inner
  voice acts, to me, as a simple tool to help organize my own thoughts.
  For example, if I’m analyzing a list of options, I find it useful to
  “say” the options out loud in my mind to crystallize my comprehension
  of the full list. If I’m trying to solve a tricky math or coding
  question, I’ll ask “aloud” (in my mind), title-like questions, such
  as: What’s the simplest toy version of this problem? What other
  problems does this remind me of?</p>
  <p>Whether or not you use an inner voice, there are still
  meta-protocols available to modes of thought. For example, in whatever
  job you have, you probably have faced many different variations of
  similar challenges. When those challenges can be helped with a lot of
  thought, you probably develop <strong>templates for solving similar
  problems</strong>. Because I like math, I’ll use that as an example.
  In 1945, the mathematician George Pólya published a small book called
  <em>How to Solve It</em>, in which he outlined conceptual guidelines
  for tackling difficult math problems. These are examples of
  meta-protocols available to modes of thought. They are processes that
  are not learned the way you memorize how to play a piano song, but
  rather that seem to exist at a higher level in a hierarchy of thought
  because there are abstract and unknown variables involved in each
  specific implementation of the process.</p>
  <h2 data-number="5.3" id="how-the-mind-model-captures-modes-of-thought"> How the mind model captures
  modes of thought</h2>
  <p>The mind model can capture prediction about the future by
  implicitly asking: What will happen next in this context? Or, more
  specifically, <em>what will this one agent do next in this
  situation</em>? This is captured by the action model just as a
  language model can simulate different tones of voice, or take on the
  role of different personas. The default mode of the action model is to
  decide what the “self” actor will do, but, by adjusting the model’s
  analog of a system prompt, we can ask the same module what another
  agent would do.</p>
  <p>Creativity might be captured in a manner similar to stable
  diffusion. Specifically, we may have a context for what we want the
  creativity to achieve — this is like the text given to a text-to-image
  model. Then we have vague, noisy thoughts to begin forming our
  solution, and over time we work to solidify those vague thoughts into
  more concrete realizations that align with the context. If you’re a
  novice musician, you can probably hum a short tune, or drum a simple
  beat with your fingers. With more focus and experience, you can begin
  to turn those simple ideas into more complete songs. While I have not
  explicitly called out a stable diffusion component within the action
  model, the idea is that part of the feedback loop can include a
  partially-solidified (and thus partially-noisy) vector representing
  the eventual output of the stable diffusion component, and one pass
  through the action model has the ability to serve as a
  stable-diffusion-style denoiser.</p>
  <p>The problem-solving mode of thought is simply a combination of the
  above two pieces. Your creativity can suggest uncertain or incomplete
  pieces of solutions, and your prediction mode of thought can work to
  answer the question: If I tried to use this solution, would it solve
  my problem? This question probably takes on more specific formats that
  depend on the challenge at hand, such as: If I communicated this
  solution, would it convince someone else? Or: If I took the actions of
  this solution, do I predict the outcome I’m aiming for?</p>
  <p>The more advanced forms of thought also fit within the model.</p>
  <p>For one thing, once we learn a word, that word must have a
  vectorized representation as an output of the language encoder. This
  output vector is an internal mental concept used by the action model —
  this kind of vector is exactly analogous to the internal token vectors
  used by large language models. This mechanism shows how learning to
  understand words adds to our internal mental vocabulary.</p>
  <p>It’s one thing to understand what a word means, but another to
  produce the word while writing or speaking. Generally, people have a
  larger reading vocabulary than a spoken vocabulary. The mind model can
  explain this because it’s easy for the model to receive a word that it
  is unlikely to produce as output, since the language encoder and
  decoder are different systems. This can explain how pushing yourself
  to use a word in a sentence several times helps to add that word to
  our output (spoken or written) vocabulary.</p>
  <p>All of the above, taken together, helps to show that the action
  model does indeed have an internal mental vocabulary which aligns
  closely with, but is in no way limited to, the concepts captured by a
  verbal vocabulary.</p>
  <p>Another example of a thinking style is an inner voice, which is a
  special case of the feedback loop where the output of your action
  model makes use of the language decoder, translating non-verbal
  concepts into a verbal sequence. That internal verbal sequence is then
  received by the language encoder, and your internal percpetion is
  similar to hearing a voice spoken aloud.</p>
  <p>When you develop habits of thought, such as trying to solve a math
  problem by beginning with a simplified version of the problem, then
  we’re touching on processes that aren’t directly part of the action
  model, but rather emerge at a higher level. This is analogous to the
  way we can drive a new car in a new country on the other side of the
  road (perhaps with some stress), even though there’s no single neuron,
  or even a specific subset of neurons, dedicated to this kind of
  activity. Put another way, when you’re looking at the low-level
  instructions a CPU can execute, you understand that it’s possible for
  the system to handle more complex operations than what can be
  obviously done at the low-level perspective. The mind model captures a
  low-level picture where highly sophisticated actions and ideas are
  challenging to directly express — even though they’re still possible.
  We just need to know that these more complex actions and ideas are
  enabled, just as a simple Turing machine can support any potential
  program.</p>
  <h2 data-number="6" id="introspection"> Introspection</h2>
  <p>Introspection is an awareness of your internal experiences — of
  your thoughts and feelings. If we’re playing chess, and you make a
  move, you can explain your thinking behind that move.</p>
  <p>Thoughts and feelings can exist without awareness of them. I
  suspect dogs can think to solve problems, such as how to get at some
  food they want. But I’d also guess they don’t think about their own
  thoughts; that’s an example of thought without introspection. There
  are also examples within human minds of some simple kinds of reasoning
  happening beyond our awareness. If you close your eyes and hold up two
  books of clearly different weights, you immediately know which one is
  heavier without having to think about it. Our brain figures something
  out without us having insight into the work done to come to that
  conclusion.</p>
  <p>But humans can often answer questions like: What was your thinking
  behind that? So humans have introspection, and I have a little more
  work to do to explain why this mind model could meaingfully reply to
  such a question.</p>
  <p>As a warm-up, if I were to ask the mind model to remind me of the
  last three moves in a chess game we were playing, it could perform a
  lookup in the recent memory module and give me the answer.
  Introspection can work in the same way if thoughts themselves are
  treated as part of the story memory.</p>
  <p>I can spell this out in more detail: Story memory is a record of
  what’s been happening. The obvious stories are the sequences of events
  in the outside world. But keep in mind that what’s received by the
  recent memory module is an internal vector representation that came
  out of the action model, and was further filtered by the emotional
  state. So, even for external events, what’s really being stored is the
  mind’s own interpretation of those events. Instead of storing a video
  of a chess game, the mind stores its own conceptual understanding of
  those moves.</p>
  <p>When it comes to thoughts, those are actions taken and perceived by
  the mind model. As events, thoughts are peers with external events.
  For example, the incoming perception “my opponent has taken my queen”
  is received, understood, and send out for storage by the action model.
  In subsequent iterations, the action model might ask itself “How did I
  not see that coming?” and then arrive at a conclusion akin to “Oh, I
  was so focused on taking a knight that I wasn’t thinking defensively,”
  or whatever might be the reason. Those sentences may be non-verbal,
  each represented by a vector or a series of vectors — and they are
  events to be remembered.</p>
  <p>So if you asked the model, “What were you thinking about?” it could
  tell you the story of its thoughts. Moreover, it could think about its
  own thoughts just as it could think about external events.</p>
  <h2 data-number="6.1" id="awareness-of-emotions"> Awareness of emotions</h2>
  <p>I’ve noticed that people are sometimes bad at knowing their own
  emotional state. This might seem surprising if you’ve never thought
  about it before, but if you have experience with kids, you might have
  seen a kid who’s sleepy, angry, jealous, or frustrated, but has
  trouble being aware of feeling that way. I bring this up because the
  mind model can account for the remarkable ability we have to be
  <em>unaware</em> of such a fundamental side of ourselves.</p>
  <p>Specifically, there’s no automatic mechanism in this model to cause
  the mind to experience its emotion as part of a story. The dashed
  arrow from the emotional state to the action model indicates that this
  input is received as an implicit context, but is not received the same
  way that events are, as part of the primary input.</p>
  <p>The model is perfectly capable, for example, of being sad without
  having awareness of that sadness. The sadness can operate by
  decreasing interest in what’s happening, by a tendency to focus on the
  cause of the sadness, or by perceiving events in a more negative light
  when there’s ambiguity. All of those things can happen without the
  event “now I’m feeling sad” registering in the action model. That
  thought <em>can</em> occur — but it can also not, independent of the
  feeling existing. I suspect our awareness of emotions is a bit like
  noticing when a cloud covers the sun — we have the information given
  to us (everything suddenly gets darker), but it may or may not jump
  out to us that this has happened; emotions are things we <em>can</em>
  notice, but might not.</p>
  <h2 data-number="7" id="consciousness"> Consciousness</h2>
  <p>I’ve avoided using the word <em>consciousness</em> in my entire
  description of the model — from §2 up until now. I’ve avoided it for
  two reasons: First, many people have strong feelings about this
  concept that can get in the way of considering a scientific data flow
  diagram; and, second, the word <em>consciousness</em> itself is
  notoriously vague. Because of that, I think the most useful way to
  talk about minds is to focus on specific features that are easier to
  define. I see consciousness as nothing more than a collection of these
  features.</p>
  <p>You probably have your own idea about this nebulous word, and
  that’s fine — we don’t need to agree on a definition, we just want to
  communicate clearly. The kind of consciousness I’m interested in is
  <em>personhood</em> — the behavior and experiences that make us
  people. Of course, even that description is unfair to animals, because
  (for example) dogs have their own variant of consciousness, and we
  (perhaps unfairly) don’t include dogs when we use the word
  <em>people</em>. So my adjusted concept is: The mental workings of
  people as a list of features that could apply to other agents.</p>
  <p>I’ve deliberately chosen a round-about definition because I’m
  focusing on my goal: to extend the idea of personhood to other kinds
  of minds. If I were to give you a precise definition without
  mentioning personhood, then I could get some detail wrong and you
  wouldn’t know how to fix it. I want this article to be
  correction-friendly by clearly sharing my goals along the way. There’s
  vagueness in the concept of <em>personhood</em>; I’m not trying to
  solve that vagueness in this article. Rather, I’m presenting a mind
  model and suggesting it’s a step toward digital minds which may one
  day be peers of our own.</p>
  <h2 data-number="7.1" id="subjection-experience"> Subjection Experience</h2>
  <p>Up until now, I’ve focused on four specific features of minds:
  agency, learning, thinking, and introspection. I think there are more
  features (such as the ability to speak a language), but I’ve focused
  on the features that large language models currently lack.</p>
  <p>One thing I haven’t talked about is the subject experience of being
  alive. Philosophers like Thomas Nagel have famously argued that some
  aspects of consciousness simply cannot be understood scientifically.
  Some folks who agree with Nagel (or with similar arguments) can read
  this article — or even the best version of this article, which fixes
  all the flaws in the mind model — and see that the behavior can be
  human-like, yet these folks would still conclude that the experience
  of the mind model could never be the same as ours.</p>
  <p>This is not the place for a full counterargument, but I do want to
  include a brief sketch of a reply.</p>
  <h2 data-number="7.2" id="negative-arguments"> Negative Arguments</h2>
  <p>I’ll use the term <em>negative argument</em> to talk about
  arguments saying something is impossible, or that another argument is
  wrong, all without saying what is possible or what is correct.
  Contrast that with a <em>positive argument</em>, one which says
  something is possible, or says that such-and-such is the correct
  answer to a question. These are informal but intuitive terms.</p>
  <p>Historically, many arguments about subjective experience have been
  negative — people either saying you can’t understand everything about
  it scientifically, or other people saying such arguments are wrong.
  I’ll mention some of these arguments, but I’m personally more
  interested in the positive argument I’ll present afterwards.</p>
  <p>I’ll give a caricature of a back-and-forth discussion about
  subjective experience. I’ll present two sides, Nagel’s being
  <em>anti-strong-AI</em> (arguing that no software can have the same
  subjective experiences as humans), and the other side being
  <em>pro-strong-AI</em>.</p>
  <ol type="1">
  <li>(Anti-strong-AI) Our internal experiences are private and
  subjective, and, despite our ability to talk about brains
  scientifically, that science will always be different from truly
  experiencing what it’s like to be such a mind. Any recreation of a
  mind will thus miss out on correctly capturing that internal
  experience.</li>
  <li>(Pro-strong-AI) Hang on — if you really believe that, then suppose
  I create a perfect, atom-for-atom, clone of your entire body. You’re
  arguing that this perfect clone won’t have the same kind of internal
  experiences as the original you. This is basically a disbelief in the
  ability of physics to correctly describe what happens in the world — a
  well-established philosophical position. Are you giving up on
  physics?</li>
  <li>(Anti-strong-AI) That’s not quite fair because you’re talking
  about a hypothetical situation that we can’t create. In any realistic
  simulation of a brain, the internal experience is different, and
  that’s what I’m talking about.</li>
  <li>(Pro-strong-AI) Ok, let’s switch the thought experiment. We’re
  getting closer to a reality of simulating the actions of each neuron
  in a human brain. If we did that, my argument still holds. If you
  think a simulated brain and a real brain can behave the same way, but
  there’s some deep difference between them, that’s again a conclusion
  that there’s something different that no physical experiment could
  measure. It’s an extraordinary claim, and the onus of proof is on your
  side, not on mine.</li>
  </ol>
  <p>The discussion might continue. It’s slippery because we all
  <em>do</em> have some internal, private experiences that are difficult
  to measure scientifically. And, at first glance, it does feel like any
  simple piece of code that produces English sentences couldn’t possibly
  experience the nuanced world that we do.</p>
  <p>Fundamentally, we’re arguing about whether or not something can
  exist: a digital mind with subjective internal experiences like our
  own. Can this mind model add any insight to the debate?</p>
  <h2 data-number="7.3" id="the-positive-argument"> The Positive Argument</h2>
  <p>The negative arguments are akin to people discussing the
  possibility of human flight before airplanes were invented.
  (Admittedly, that’s a biased simile.) But a great counterargument to
  “people will never fly” is “I made an airplane.” I realize the mind
  model presented here is untested, incomplete, and in need of further
  work. At the same time, it is a step forward, and can serve as a
  meaningful answer to the challenging question: How can we even
  <em>begin</em> to explain subjective experiences scientifically?</p>
  <p>For example, when I look at a red apple, I experience a sensation
  of redness in my mind. What might that correspond to in a mind model?
  This one is easy: There can be a point in space (an internal vector)
  that represents redness. If I ask the model what color an object is,
  the model can focus on the internal vector representing its color.
  Internally, this might look like an attention lookup in which the
  query vector is asking “what color is that object?” the key vector is
  saying “this is a color for that object”, and the value vector is
  saying “it’s red.” This is the beginning of a scientific explanation
  behind subjective experiences.</p>
  <p>It might seem overly simplistic to assume something like: For every
  word X there’s an “X-ness” vector that captures what it’s like to
  perceive X. But this mind model isn’t so simple, after all. For
  example, if the mind model sees a color between red and orange — a
  specific hue that it has no word for — then it can still have a vector
  to represent that color, and it can still have the same kind of
  experience it had for redness, but for any color. If the model sees an
  animal it didn’t know existed — let’s say a coati (which look like
  raccoons with longer snouts and tails) — there can be an internal
  vector representation that captures its similarity to animals it’s
  seen before. Or if the model experiences an emotion that’s a new
  combination of other feelings, that can also be captured
  internally.</p>
  <p>In other words, this is no finite or hand-made list of possible
  experiences, but a vast world of nuanced, combination-friendly
  concepts that have been learned. This mathematically infinite world of
  internal ideas, while daunting, is at once something the model can
  experience as well as something we can study and learn about.</p>
  <h2 data-number="8" id="looking-forward"> Looking Forward</h2>
  <p>In writing this article, my hope is to push forward conversations
  about mind models that are both ambitious and detailed. When I read
  about some other mind models (such as the <a href="https://en.wikipedia.org/wiki/Global_workspace_theory">global
  workspace theory</a>), I typically feel that they’d be hard to
  translate into code because they’re so high-level. Yet when I read
  about engineer-oriented AI directions (such as articles about <a href="https://en.wikipedia.org/wiki/Artificial_general_intelligence">artificial
  general intelligence</a>), I don’t see personhood as a goal — for
  example, discussions of AGI typically focus away from emotion.</p>
  <p>It can be intimidating to work on digital personhood. There’s the
  fear that people will judge you for working on this. I have this fear.
  Historically, this pursuit seemed crazy to many — and even today some
  people find it alternatively impossible or dangerous. The idea of
  digital consciousness magically elicits opposing judgments about
  humanity: both a judgement that they can be arrogant in acts of
  learning and creation, and a judgment that they’re nothing special —
  possible to reduce to mere mathematical relationships.</p>
  <p>On the other side of fear is hope; turn over arrogance and
  reduction to find humility and enlightenment: the humility to realize
  that the state of the world could be better — and that we can look for
  help. And the englightenment to improve on the best of ourselves; to
  aim to understand, even to create, minds that can be more mature, more
  caring, and more helpful than we have been.</p>
  

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google Arts and Culture site I didn't know existed (151 pts)]]></title>
            <link>https://artsandculture.google.com/</link>
            <guid>40840699</guid>
            <pubDate>Sun, 30 Jun 2024 21:55:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://artsandculture.google.com/">https://artsandculture.google.com/</a>, See on <a href="https://news.ycombinator.com/item?id=40840699">Hacker News</a></p>
<div id="readability-page-1" class="page"><div jscontroller="Gao0h" jsaction="rcuQ6b:rcuQ6b;" data-edition-date="30_06_24"><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="2" data-name="TableOfContentsTiles" data-edu="30_06_24" data-pers="false"><p><h2><span>What do you want to explore?</span></h2></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="4" data-name="SimpleStack" data-edu="30_06_24" data-pers="false"><p><h2><span>Today's picks</span></h2></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="5" data-name="InlineGame" data-edu="30_06_24" data-pers="false"><p><h2><span>Time for tarot?</span></h2></p><div jsname="lZHbze" jscontroller="roMWFf" jsmodel="y471Xe;nDkrdf" data-prid="WebSandboxFrame:d5755abe-ffb4-4c15-b97d-1dfb6b779650" data-lazy-load="true" jsaction="B0tf1d:omAlte;BilGBc:l5dfEf;JZCswc:HvfI2b;nC25Sd:MOqZsb;JIbuQc:iL6Ki(mQ2ste),g7akAd(KspJdf),yV0Kx(BJ0DHc),yV0Kx(m7R3Md),F0SgUe(QMNZ7c),qsxFwf(p2gb1d);qfN3Ue:Ne3sFf;"><h2>Artot.</h2><h2>Get your fortune read with an Art themed Tarot Deck</h2></div></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="7" data-name="Text" data-edu="30_06_24" data-pers="false"><p><h2><span>Collection of the day</span></h2></p></div><div jsname="kV91z" data-mygacategory="editorial" data-mygalabel="30_06_24_/asset/puppetteer-jind%C5%99ich-%C5%A0tyrsk%C3%BD/sgHfDDyyoTftkA?ms=%7B%22x%22:0.6152238735875983,%22y%22:0.40748338884751373,%22z%22:10.171138048387945,%22size%22:%7B%22width%22:1.7418388544527066,%22height%22:0.7260446184395807%7D%7D" data-prid="EditorialSection:fb7b3688-b9e0-4eb2-8310-cbccd36f2117" jscontroller="TMXtO" jsmodel="nDkrdf" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" data-index="8" data-name="ZoomHotspots" data-edu="30_06_24" data-pers="false"><p>National Gallery Prague</p><p>Explore a jewel in Czechia's crown</p><a href="https://artsandculture.google.com/partner/the-national-gallery-in-prague" data-gacategory="editorial" data-gaaction="section_8_clicked" data-galabel="viewAll" data-gaeditorialindex="8" data-gaeditorialname="ZoomHotspots" data-gaeditorialpers="false" jsmodel="nDkrdf" jsaction="rcuQ6b:npT2md; mousedown:jScpfc; touchstart:jScpfc; touchmove:NI7Syc; mouseup:nHXBQb; touchend:nHXBQb; mouseleave:FfcXAd; blur:ll011b;" jscontroller="V99V9" title="Discover" jsshadow=""><span jsslot=""><span>Discover</span></span></a></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="9" data-name="ZoomExplorer" data-edu="30_06_24" data-pers="false"><p><h2><span>Treasure hunt</span></h2><h3>Zoom in to find the gemstones</h3></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="13" data-name="Recommended" data-edu="30_06_24" data-pers="false"><p><h2><span>Recommended for you</span></h2><h3>Discover popular artworks and hidden gems from around the world</h3></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="14" data-name="Accordion" data-edu="30_06_24" data-pers="false"><p><h2><span>What's your favorite color?</span></h2><h3>Discover over 100,000 artworks by color</h3></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="15" data-name="Clusters" data-edu="30_06_24" data-pers="false"><p><h2><span>Unexpected Ireland</span></h2><h3>An alternative tour of the Emerald Isle</h3></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="19" data-name="SmallBanner" data-edu="30_06_24" data-pers="false"><p><h2><span>How Does Turner Connect to Tennis?</span></h2><h3>Discover connections between culture with Machine Learning</h3></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="20" data-name="Chips" data-edu="30_06_24" data-pers="false"><p><h2><span>Pick a theme</span></h2></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="21" data-name="Text" data-edu="30_06_24" data-pers="false"><p><h2><span>Art inspired by 'Fruit &amp; Veg'</span></h2><h3>So good you could take a bite</h3></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="23" data-name="SimpleStack" data-edu="30_06_24" data-pers="false"><p><h2><span>5 fruits from 5 countries</span></h2><h3>Discover food around the world</h3></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="24" data-name="Clusters" data-edu="30_06_24" data-pers="false"><p><h2><span>The IT crowd</span></h2><h3>Influential people in the history of computing</h3></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="25" data-name="Clusters" data-edu="30_06_24" data-pers="false"><p><h2><span>Choose your William Morris wallpaper</span></h2><h3>"Have nothing in your home that you do not know to be useful or believe to be beautiful"</h3></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="29" data-name="CardsRibbon" data-edu="30_06_24" data-pers="false"><p><h2><span>Do the cultural 5</span></h2><h3>Your daily dose of arts and culture</h3></p></div><div jscontroller="TMXtO" jsaction="B0tf1d:UVxRE;BVcIYb:xriZZd;BilGBc:CREi5e;htGtEd:zBFPOe;MFzXR:IF3MFb;JZCswc:PkMYQd;" data-lazy-load="true" jsmodel="nDkrdf" data-index="30" data-name="TableOfContentsTiles" data-edu="30_06_24" data-pers="false"><p><h2><span>Keep exploring...</span></h2><h3>Dive into culture from around the world</h3></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Convolutions, Fast Fourier Transform and polynomials (2022) (172 pts)]]></title>
            <link>https://www.alvarorevuelta.com/posts/fft-polynomials</link>
            <guid>40840396</guid>
            <pubDate>Sun, 30 Jun 2024 21:08:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.alvarorevuelta.com/posts/fft-polynomials">https://www.alvarorevuelta.com/posts/fft-polynomials</a>, See on <a href="https://news.ycombinator.com/item?id=40840396">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>You may remember from high school what a polynomial is. If so, you may also remember how to multiply two of them. But what if I told you that the method you were taught is slow as F?</p>

<p>In this post we will connect polynomials with the Fourier Transform and convolutions, and show you how to multiply polynomials with $O(nlogn)$ complexity instead of $O(n^2)$, being the latter the method that’s taught in high school.</p>

<h2 id="polynomials-a-quick-recap">Polynomials: A Quick Recap</h2>

<p>Let's do a quick recap on what polynomials are. Formally defined, a polynomial $P(x)$ is a sum of terms where each one is an indeterminate variable $x$ with some exponent $k$ multiplied by a coefficient $a_k$.</p><p>

\[P(x) = \sum_{k=0}^{n} a_k x^k\]

</p><p>This is an example of a polynomial. Note that we say it has a degree $2$ since it is its maximum exponent. It can be expressed as a vector like <code>[5, 2, 9]</code> or <code>[9, 2, 5]</code> depending on the notation we use.</p><p>

\[P(x) = 5x^2 + 2x + 9\]

</p><p>Let $P(x)$ and $Q(x)$ be two polynomials, we can perform different operations with them, like adding or subtracting them. In both cases, the result is trivially computed by summing (or subtracting) each term individually.
In Python, we can compute the result as follows. Note that this works with <code>p</code> and <code>q</code> having the same degree. You can use <code>zip_longest</code> for different degrees.</p>

<div><pre><code><span># a + b
</span><span>[</span><span>a</span> <span>+</span> <span>b</span> <span>for</span> <span>a</span><span>,</span> <span>b</span> <span>in</span> <span>zip</span><span>(</span><span>p</span><span>,</span> <span>q</span><span>)]</span>

<span># a - b
</span><span>[</span><span>a</span> <span>-</span> <span>b</span> <span>for</span> <span>a</span><span>,</span> <span>b</span> <span>in</span> <span>zip</span><span>(</span><span>p</span><span>,</span> <span>q</span><span>)]</span>
</code></pre></div>

<p>On the other hand, we can also multiply them. And here is where things get interesting.
Multiplying $Y(x) = P(x) * Q(x)$ is a bit more complex than adding or subtracting. Let’s see an example:</p><p>

\[\begin{align*}
Y(x) &amp; = (2x^2 + 3x + 4) \times (5x^2 + 6x + 7) \\
     &amp; = (2x^2 \times 5x^2) + (2x^2 \times 6x) + (2x^2 \times 7) \\
     &amp; \quad + (3x \times 5x^2) + (3x \times 6x) + (3x \times 7) \\
     &amp; \quad + (4 \times 5x^2) + (4 \times 6x) + (4 \times 7) \\
     &amp; = 10x^4 + 12x^3 + 14x^2 \\
     &amp; \quad + 15x^3 + 18x^2 + 21x \\
     &amp; \quad + 20x^2 + 24x + 28 \\
     &amp; = 10x^4 + (12x^3 + 15x^3) + (14x^2 + 18x^2 + 20x^2) + (21x + 24x) + 28 \\
     &amp; = 10x^4 + 27x^3 + 52x^2 + 45x + 28
\end{align*}\]

</p><p>As you can see, we have a bunch of multiplications here. And well, the higher the degree of $P(x)$ and $Q(x)$ the more multiplications we will have.
More specifically, the complexity is $O(n^2)$ which is not good. Can we do it better?</p>

<h2 id="convolutions">Convolutions</h2>

<p>Before answering the question if we can do better than $O(n^2)$ to multiply polynomials, let's introduce the concept of convolution, since it will come in handy to understand what’s next.</p>

<p>Convolution is defined both in continuous and discrete domains. The continuous domain might be cool for mathematicians, but we engineers who do real things prefer the discrete domain.
We can define the convolution in the discrete domain of two discrete signals $p$ and $q$ as:</p><p>

\[y[n] = \sum_{k=-\infty}^{\infty} p[k] \cdot q[n - k]\]

</p><p>The operation is rather simple. You just need to flip $q$ and sum the product of all elements that overlap with $p$.
Trust me, it's easier than it looks. Let's say we have two discrete signals <code>p</code> and <code>q</code> represented as vectors:</p>

<div><pre><code><span>p</span> <span>=</span> <span>[</span><span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>]</span>
<span>q</span> <span>=</span> <span>[</span><span>5</span><span>,</span> <span>6</span><span>,</span> <span>7</span><span>]</span>
</code></pre></div>

<p>Let's calculate the convolution of both $p * q$. Note that $*$ here is the convolution of both signals.
We just need to flip <code>q</code> and move it from left to right until we are done.
Note that we don’t have to do it from $-\infty$ to $+\infty$ since we have a discrete signal of just 3 samples.
The maths are not difficult but lets try to visualize it step by step.</p><p>

\[\begin{matrix}
&amp;&amp;&amp;2&amp;3&amp;4 \\
\times &amp;7&amp;6&amp;5&amp;&amp; \\
\hline
\end{matrix}\\
{2}\times{5} = 10\]

</p><p>Then we move the flipped version of <code>q</code> one element to the right.</p><p>

\[\begin{matrix}
&amp;&amp;&amp;2&amp;3&amp;4 \\
\times &amp;&amp;7&amp;6&amp;5&amp; \\
\hline
\end{matrix}\\
2\times6+3\times5=27\]

</p><p>And one more.</p><p>

\[\begin{matrix}
&amp;&amp;&amp;2&amp;3&amp;4 \\
\times &amp;&amp;&amp;7&amp;6&amp;5 \\
\hline
\end{matrix}\\
2\times7+3\times6+4\times5=52\]

</p><p>And one more.</p><p>

\[\begin{matrix}
&amp;&amp;&amp;2&amp;3&amp;4 \\
\times &amp;&amp;&amp;&amp;7&amp;6&amp;5 \\
\hline
\end{matrix}\\
{3}\times{7}+4\times6 = 45\]

</p><p>And one last more.</p><p>

\[\begin{matrix}
&amp;&amp;&amp;2&amp;3&amp;4 \\
\times &amp;&amp;&amp;&amp;&amp;7&amp;6&amp;5 \\
\hline
\end{matrix}\\
{4}\times{7} = 28\]

</p><p>Each element represents a value of our new signal <code>y</code> which is <code>p * q</code>. We can see that it has a total length of 5 elements. We can express <code>y</code> as follows:</p>



<p>If you remember $Y(x)$ from the previous section, you will have noticed that its the same.
The <code>p</code> and <code>q</code> we’ve just used are the vector representations of $P(x)$ and $Q(x)$.
As a reminder this is $Y(x)$ from before:</p><p>

\[10x^4 + 27x^3 + 52x^2 + 45x + 28\]

</p><p>So multiplying two polynomials can be expressed as a convolution. As you can see, the result is the same. Both using the convolution and the polynomial multiplication method seen above, which most likely you studied in high school.</p>

<p>In the next section, you will understand why convolutions are cool, and how the FFT can help us to multiply polynomials faster.</p>

<h2 id="fourier-transform-and-the-fft">Fourier Transform, and the FFT</h2>

<p>The Fourier Transform is a very powerful transformation that allows converting a signal from time domain to frequency domain.
It's some kind of base change, where instead of looking at the signal from a time perspective, we look at it from a frequency point of view.</p>

<p>Instead of saying that the signal has $x_1$ value at $t_1$ time, and $x_2$ at $t_2$, etc, we say that the signal is made of different oscillating frequencies at different rates.
These oscillating frequencies are represented with sines and cosines and have a coefficient and a phase attached to them.
Every signal that you can imagine, can be expressed as the sum of sines and cosines.
The only problem is to know which sines/cosines represent that signal.</p>

<p>Let's see the simplest example. Imagine a pure sinusoidal signal of frequency 5 Hz.</p>

<div><pre><code><span>import</span> <span>numpy</span> <span>as</span> <span>np</span>
<span>import</span> <span>matplotlib.pyplot</span> <span>as</span> <span>plt</span>

<span>fs</span> <span>=</span> <span>1000</span>  <span># Sampling frequency (Hz)
</span><span>t_end</span> <span>=</span> <span>1</span>  <span># Duration in seconds
</span><span>f0</span> <span>=</span> <span>5</span>     <span># Frequency of the sine wave (Hz)
</span>
<span>t</span> <span>=</span> <span>np</span><span>.</span><span>linspace</span><span>(</span><span>0</span><span>,</span> <span>t_end</span><span>,</span> <span>int</span><span>(</span><span>fs</span> <span>*</span> <span>t_end</span><span>),</span> <span>endpoint</span><span>=</span><span>False</span><span>)</span>
<span>y</span> <span>=</span> <span>np</span><span>.</span><span>sin</span><span>(</span><span>2</span> <span>*</span> <span>np</span><span>.</span><span>pi</span> <span>*</span> <span>f0</span> <span>*</span> <span>t</span><span>)</span>
<span>Y</span> <span>=</span> <span>np</span><span>.</span><span>fft</span><span>.</span><span>fft</span><span>(</span><span>y</span><span>)</span>
<span>freq</span> <span>=</span> <span>np</span><span>.</span><span>fft</span><span>.</span><span>fftfreq</span><span>(</span><span>len</span><span>(</span><span>y</span><span>),</span> <span>d</span><span>=</span><span>1</span><span>/</span><span>fs</span><span>)</span>
</code></pre></div>

<p>If we take the FFT of this signal, it will look as follows in the frequency domain.</p>

<div><pre><code><span># Prepare the figure and axes
</span><span>fig</span><span>,</span> <span>(</span><span>ax1</span><span>,</span> <span>ax2</span><span>)</span> <span>=</span> <span>plt</span><span>.</span><span>subplots</span><span>(</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>figsize</span><span>=</span><span>(</span><span>10</span><span>,</span> <span>5</span><span>))</span>

<span># Plot the sine wave
</span><span>ax1</span><span>.</span><span>plot</span><span>(</span><span>t</span><span>,</span> <span>y</span><span>,</span> <span>label</span><span>=</span><span>f</span><span>'Sine Wave </span><span>{</span><span>f0</span><span>}</span><span> Hz'</span><span>)</span>
<span>ax1</span><span>.</span><span>set_title</span><span>(</span><span>'Time Domain'</span><span>)</span>
<span>ax1</span><span>.</span><span>set_xlabel</span><span>(</span><span>'Time (seconds)'</span><span>)</span>
<span>ax1</span><span>.</span><span>set_ylabel</span><span>(</span><span>'Amplitude'</span><span>)</span>

<span># Plot the magnitude of the Fourier Transform
</span><span>ax2</span><span>.</span><span>plot</span><span>(</span><span>freq</span><span>,</span> <span>np</span><span>.</span><span>abs</span><span>(</span><span>Y</span><span>),</span> <span>label</span><span>=</span><span>'Magnitude of FFT'</span><span>)</span>
<span>ax2</span><span>.</span><span>set_title</span><span>(</span><span>'Frequency Domain'</span><span>)</span>
<span>ax2</span><span>.</span><span>set_xlabel</span><span>(</span><span>'Frequency (Hz)'</span><span>)</span>
<span>ax2</span><span>.</span><span>set_ylabel</span><span>(</span><span>'Magnitude'</span><span>)</span>

<span>plt</span><span>.</span><span>tight_layout</span><span>()</span>
<span>plt</span><span>.</span><span>show</span><span>()</span>
</code></pre></div>

<p>In the frequency domain, it looks like a delta, exactly at the frequency 5.
This means that the signal on the left side (time domain) can be expressed as one sinus with frequency 5.
Different ways of referring to the same signal.</p>

<center><img src="https://github.com/alrevuelta/myblog/blob/main/assets/img/time_freq.png?raw=true"></center>

<p>Before continuing, let's clarify the concepts. They all refer to the same thing but have some minor differences:</p>
<ul>
  <li>Fourier Transform (FT): Fourier Transform defined in continuous domain.</li>
  <li>Discrete Fourier Transform (DFT): Fourier Transform defined for discrete signals. In practice, this is what matters, since nowadays all signals are digital, hence discrete.</li>
  <li>Fast Fourier Transform (FFT): It is an algorithm that allows to compute the Discrete Fourier Transform efficiently, $O(nlogn)$ instead of $O(n^2)$.</li>
</ul>

<p>Finally, let me introduce you to the equation you have been waiting for. The Discrete Fourier Transform.</p><p>

\[X[k] = \sum_{n=0}^{N-1} x[n] \cdot e^{-i 2\pi k n / N}\]

</p><p>It takes a discrete signal in time domain $x[n]$ and converts it to the frequency domain $X[k]$.
Note that what it does is quite simple. Each sample of $X[k] is calculated by taking each sample of $x$ and multiplying it with a complex number, that represents a given frequency.</p>

<p>It's some kind of projection, where each element of the input signal is projected into sines, and then added up together. 
But let's go back to the main goal of this post. We wanted to multiply polynomials faster.</p>

<p>One of the advantages of the DFT and working in the frequency domain, is that it converts a convolution into a simple multiplication.
In other words, performing the convolution of two signals in time domain is equivalent to multiplying them in the frequency domain.</p>

<p>And as you can imagine, multiplication is way faster than convolution.
But we are still missing one piece.
In order to benefit from this, we have to convert first from time domain to frequency domain. And well, this takes time.</p>

<p>The good news is that the FFT allows us to convert from $x[n]$ (time domain) to $X[k]$ (frequency domain) with $O(nlogn)$ complexity.</p>

<h2 id="multiplying-polynomials-faster">Multiplying Polynomials Faster</h2>

<p>As a quick recap, the way to multiply polynomials that you learned in high school is very inefficient and has a $O(n^2)$ complexity, where $n$ is the degree of the polynomials.
This means that multiplying two polynomials or order 100 is way way more difficult than order 20. This doesn’t scale for huge polynomials. But we have an alternative:</p>

<ul>
  <li>Convert our polynomials to frequency domain. Complexity $O(nlogn)$ using the FFT.</li>
  <li>Multiply them, which is cheaper than convolution. Complexity $O(n)$, simple element-wise multiplication.</li>
  <li>Convert the resulting polynomial back to time domain. Complexity $O(nlogn)$ using the IFFT.</li>
</ul>

<p>It may seem like a lot of operations, but for large polynomials this is way faster than the naive method that you were taught in high school.
Let's see an example in Python and benchmark both approaches.</p>

<p>Let's define <code>multiply_naive</code> which multiplies polynomials as you were taught in high school with $O(n^2)$ complexity.</p>

<div><pre><code><span>import</span> <span>numpy</span> <span>as</span> <span>np</span>
<span>import</span> <span>random</span>
<span>import</span> <span>timeit</span>
<span>import</span> <span>matplotlib.pyplot</span> <span>as</span> <span>plt</span>

<span>def</span> <span>multiply_naive</span><span>(</span><span>p</span><span>,</span> <span>q</span><span>):</span>
    <span>result_size</span> <span>=</span> <span>len</span><span>(</span><span>p</span><span>)</span> <span>+</span> <span>len</span><span>(</span><span>q</span><span>)</span> <span>-</span> <span>1</span>
    <span>result</span> <span>=</span> <span>[</span><span>0</span><span>]</span> <span>*</span> <span>result_size</span>
    <span>for</span> <span>i</span> <span>in</span> <span>range</span><span>(</span><span>len</span><span>(</span><span>p</span><span>)):</span>
        <span>for</span> <span>j</span> <span>in</span> <span>range</span><span>(</span><span>len</span><span>(</span><span>q</span><span>)):</span>
            <span>result</span><span>[</span><span>i</span> <span>+</span> <span>j</span><span>]</span> <span>+=</span> <span>p</span><span>[</span><span>i</span><span>]</span> <span>*</span> <span>q</span><span>[</span><span>j</span><span>]</span>

    <span>return</span> <span>result</span>
</code></pre></div>

<p>And <code>multiply_fft</code> which uses the FFT/IFFT and does a multiplication in the frequency domain, with $O(nlogn)$ complexity.</p>

<div><pre><code><span>def</span> <span>multiply_fft</span><span>(</span><span>p</span><span>,</span> <span>q</span><span>):</span>
    <span>length</span> <span>=</span> <span>2</span> <span>**</span> <span>np</span><span>.</span><span>ceil</span><span>(</span><span>np</span><span>.</span><span>log2</span><span>(</span><span>len</span><span>(</span><span>p</span><span>)</span> <span>+</span> <span>len</span><span>(</span><span>q</span><span>)</span> <span>-</span> <span>1</span><span>)).</span><span>astype</span><span>(</span><span>int</span><span>)</span>
    <span>f_padded</span> <span>=</span> <span>np</span><span>.</span><span>pad</span><span>(</span><span>p</span><span>,</span> <span>(</span><span>0</span><span>,</span> <span>length</span> <span>-</span> <span>len</span><span>(</span><span>p</span><span>)))</span>
    <span>g_padded</span> <span>=</span> <span>np</span><span>.</span><span>pad</span><span>(</span><span>p2</span><span>,</span> <span>(</span><span>0</span><span>,</span> <span>length</span> <span>-</span> <span>len</span><span>(</span><span>q</span><span>)))</span>

    <span># Calculate FFT and multiply
</span>    <span>Y</span> <span>=</span> <span>np</span><span>.</span><span>fft</span><span>.</span><span>fft</span><span>(</span><span>f_padded</span><span>)</span> <span>*</span> <span>np</span><span>.</span><span>fft</span><span>.</span><span>fft</span><span>(</span><span>g_padded</span><span>)</span>

    <span>result_coefficients</span> <span>=</span> <span>np</span><span>.</span><span>round</span><span>(</span><span>np</span><span>.</span><span>fft</span><span>.</span><span>ifft</span><span>(</span><span>Y</span><span>).</span><span>real</span><span>).</span><span>astype</span><span>(</span><span>int</span><span>)</span>
    <span>return</span> <span>np</span><span>.</span><span>trim_zeros</span><span>(</span><span>result_coefficients</span><span>,</span> <span>'b'</span><span>).</span><span>tolist</span><span>()</span>
</code></pre></div>

<p>If we multiply the previous polynomials <code>p</code> and <code>q</code>, we can see how the result is the same as before.</p>

<div><pre><code><span>p</span> <span>=</span> <span>[</span><span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>]</span>
<span>q</span> <span>=</span> <span>[</span><span>5</span><span>,</span> <span>6</span><span>,</span> <span>7</span><span>]</span>

<span>print</span><span>(</span><span>multiply_fft</span><span>(</span><span>p</span><span>,</span> <span>q</span><span>))</span>
<span>print</span><span>(</span><span>multiply_naive</span><span>(</span><span>p</span><span>,</span> <span>q</span><span>))</span>

<span># [10, 27, 52, 45, 28]
# [10, 27, 52, 45, 28]
</span></code></pre></div>

<p>However, these polynomials have a low degree. Let's try to multiply polynomials up to degree 500 and see the time it takes using each method.
We can do so with the following snippet:</p>

<div><pre><code><span>n_runs</span> <span>=</span> <span>10</span>
<span>tiempos_naive</span><span>,</span> <span>tiempos_fft</span> <span>=</span> <span>[],</span> <span>[]</span>
<span>for</span> <span>grado</span> <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> <span>500</span><span>,</span> <span>10</span><span>):</span>
    <span>p</span> <span>=</span> <span>[</span><span>random</span><span>.</span><span>randint</span><span>(</span><span>1</span><span>,</span> <span>100</span><span>)</span> <span>for</span> <span>i</span> <span>in</span> <span>range</span><span>(</span><span>grado</span><span>)]</span>
    <span>q</span> <span>=</span> <span>[</span><span>random</span><span>.</span><span>randint</span><span>(</span><span>1</span><span>,</span> <span>100</span><span>)</span> <span>for</span> <span>i</span> <span>in</span> <span>range</span><span>(</span><span>grado</span><span>)]</span>

    <span>tiempos_naive</span><span>.</span><span>append</span><span>(</span><span>timeit</span><span>.</span><span>timeit</span><span>(</span><span>'multiply_naive(p, q)'</span><span>,</span> <span>number</span><span>=</span><span>n_runs</span><span>,</span> <span>globals</span><span>=</span><span>globals</span><span>())</span><span>/</span><span>n_runs</span><span>)</span>
    <span>tiempos_fft</span><span>.</span><span>append</span><span>(</span><span>timeit</span><span>.</span><span>timeit</span><span>(</span><span>'multiply_fft(p, q)'</span><span>,</span> <span>number</span><span>=</span><span>n_runs</span><span>,</span> <span>globals</span><span>=</span><span>globals</span><span>())</span><span>/</span><span>n_runs</span><span>)</span>

<span>plt</span><span>.</span><span>plot</span><span>(</span><span>tiempos_naive</span><span>,</span> <span>'bo'</span><span>,</span> <span>label</span><span>=</span><span>"naive"</span><span>)</span>
<span>plt</span><span>.</span><span>plot</span><span>(</span><span>tiempos_fft</span><span>,</span> <span>'ro'</span><span>,</span> <span>label</span><span>=</span><span>"fft"</span><span>)</span>
<span>plt</span><span>.</span><span>title</span><span>(</span><span>"Polynomial Multiplication: naive vs fft"</span><span>)</span>
<span>plt</span><span>.</span><span>ylabel</span><span>(</span><span>"Time (s)"</span><span>)</span>
<span>plt</span><span>.</span><span>xlabel</span><span>(</span><span>"Polynomial Degree"</span><span>)</span>
<span>plt</span><span>.</span><span>legend</span><span>()</span>
<span>plt</span><span>.</span><span>show</span><span>()</span>
</code></pre></div>

<p>And we get the following times. As you can see, for low-degree polynomials it may not make sense to use the FFT approach, since the FFT/IFFT back-and-forth conversions take more time than the naive approach.
However, as the degree increases, we can observe how the FFT approach is way more efficient.</p>

<center><img src="https://github.com/alrevuelta/myblog/blob/main/assets/img/fft_vs_naive.png?raw=true"></center>

<h2 id="summary">Summary</h2>

<p>Let’s summarise what we have seen:</p>

<ul>
  <li>Multiplying polynomials using the naive method has $O(n^2)$ complexity.</li>
  <li>Polynomial multiplication can be seen as a convolution.</li>
  <li>A convolution in time domain is equivalent to a simple multiplication in frequency domain.</li>
  <li>We can convert polynomials to frequency domain with $O(nlogn)$ complexity using the FFT.</li>
  <li>Adding all together, we can multiply polynomials in frequency domain in $O(nlogn)$ which is faster than what you were taught in high school.</li>
</ul>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Newswire: A large-scale structured database of a century of historical news (113 pts)]]></title>
            <link>https://arxiv.org/abs/2406.09490</link>
            <guid>40839830</guid>
            <pubDate>Sun, 30 Jun 2024 19:58:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2406.09490">https://arxiv.org/abs/2406.09490</a>, See on <a href="https://news.ycombinator.com/item?id=40839830">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2406.09490">View PDF</a>
    <a href="https://arxiv.org/html/2406.09490v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>In the U.S. historically, local newspapers drew their content largely from newswires like the Associated Press. Historians argue that newswires played a pivotal role in creating a national identity and shared understanding of the world, but there is no comprehensive archive of the content sent over newswires. We reconstruct such an archive by applying a customized deep learning pipeline to hundreds of terabytes of raw image scans from thousands of local newspapers. The resulting dataset contains 2.7 million unique public domain U.S. newswire articles, written between 1878 and 1977. Locations in these articles are georeferenced, topics are tagged using customized neural topic classification, named entities are recognized, and individuals are disambiguated to Wikipedia using a novel entity disambiguation model. To construct the Newswire dataset, we first recognize newspaper layouts and transcribe around 138 millions structured article texts from raw image scans. We then use a customized neural bi-encoder model to de-duplicate reproduced articles, in the presence of considerable abridgement and noise, quantifying how widely each article was reproduced. A text classifier is used to ensure that we only include newswire articles, which historically are in the public domain. The structured data that accompany the texts provide rich information about the who (disambiguated individuals), what (topics), and where (georeferencing) of the news that millions of Americans read over the course of a century. We also include Library of Congress metadata information about the newspapers that ran the articles on their front pages. The Newswire dataset is useful both for large language modeling - expanding training data beyond what is available from modern web texts - and for studying a diversity of questions in computational linguistics, social science, and the digital humanities.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Melissa Dell [<a href="https://arxiv.org/show-email/96018f33/2406.09490">view email</a>]      <br>    <strong>[v1]</strong>
        Thu, 13 Jun 2024 16:20:05 UTC (3,050 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Postzegelcode (215 pts)]]></title>
            <link>https://en.wikipedia.org/wiki/Postzegelcode</link>
            <guid>40839418</guid>
            <pubDate>Sun, 30 Jun 2024 19:17:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://en.wikipedia.org/wiki/Postzegelcode">https://en.wikipedia.org/wiki/Postzegelcode</a>, See on <a href="https://news.ycombinator.com/item?id=40839418">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
							

						<p>From Wikipedia, the free encyclopedia</p>
					</div><div lang="en" dir="ltr" id="mw-content-text">
<figure typeof="mw:File/Thumb"><a href="https://en.wikipedia.org/wiki/File:Postzegelcode.png"><img src="https://upload.wikimedia.org/wikipedia/commons/8/85/Postzegelcode.png" decoding="async" width="127" height="127" data-file-width="127" data-file-height="127"></a><figcaption>Example of a <b>postzegelcode</b></figcaption></figure>
<p>A <b>postzegelcode</b> is a hand-written method of <a href="https://en.wikipedia.org/wiki/Franking" title="Franking">franking</a> in the <a href="https://en.wikipedia.org/wiki/Netherlands" title="Netherlands">Netherlands</a>. It consists of a code containing nine numbers and letters that customers can purchase online from <a href="https://en.wikipedia.org/wiki/PostNL" title="PostNL">PostNL</a> and write directly on their piece of mail within five days as proof-of-payment in place of a <a href="https://en.wikipedia.org/wiki/Postage_stamp" title="Postage stamp">postage stamp</a>.
</p><p>For mail within the Netherlands the nine letters and numbers are written as a grid of 3x3. For international mail there is fourth additional row that contains <b>P</b>, <b>N</b>, <b>L</b>.
</p><p>The system was started in 2013.<sup id="cite_ref-1"><a href="#cite_note-1">[1]</a></sup> Initially the postzegelcode was more expensive than a stamp because additional handling systems were required. Then for a while the postzegelcode was cheaper. Eventually the tariffs were set to the same price.
</p><p>In December 2020, 590,000 people sent cards with postzegelcodes.<sup id="cite_ref-2"><a href="#cite_note-2">[2]</a></sup>
</p>
<h2><span id="Safety">Safety</span><span><span>[</span><a href="https://en.wikipedia.org/w/index.php?title=Postzegelcode&amp;action=edit&amp;section=1" title="Edit section: Safety"><span>edit</span></a><span>]</span></span></h2>
<p>Since the codes are valid for only five days, the chance that someone would guess a recently purchased code is quite low. Assuming 26 letters and 9 digits (the zero is not used to avoid confusion with the letter O), there are 35^9 (=78.8 trillion) possibilities. Even if a <i>postzegelcode</i> were used for all mail items in the Netherlands, the probability is about 1 in 2 million that any stamp code has been sold in the past five days.
</p>
<h2><span id="References">References</span><span><span>[</span><a href="https://en.wikipedia.org/w/index.php?title=Postzegelcode&amp;action=edit&amp;section=2" title="Edit section: References"><span>edit</span></a><span>]</span></span></h2>
<div><ol>
<li id="cite_note-1"><span><b><a href="#cite_ref-1">^</a></b></span> <span><cite><a rel="nofollow" href="https://nos.nl/artikel/509787-postzegel-niet-meer-nodig-met-app">"Postzegel niet meer nodig met app"</a>. <i>nos.nl</i> (in Dutch). 2013-05-23<span>. Retrieved <span>2023-08-29</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=nos.nl&amp;rft.atitle=Postzegel+niet+meer+nodig+met+app&amp;rft.date=2013-05-23&amp;rft_id=https%3A%2F%2Fnos.nl%2Fartikel%2F509787-postzegel-niet-meer-nodig-met-app&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APostzegelcode"></span></span>
</li>
<li id="cite_note-2"><span><b><a href="#cite_ref-2">^</a></b></span> <span><cite><a rel="nofollow" href="https://www.rtlnieuws.nl/tech/artikel/5205786/postnl-postzegel-code-postzegelcodes-codes-kaartje-post">"Gebruik postzegelcodes PostNL bijna verdrievoudigd"</a>. <i>RTL Nieuws</i> (in Dutch). 2020-12-29<span>. Retrieved <span>2023-08-29</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=RTL+Nieuws&amp;rft.atitle=Gebruik+postzegelcodes+PostNL+bijna+verdrievoudigd&amp;rft.date=2020-12-29&amp;rft_id=https%3A%2F%2Fwww.rtlnieuws.nl%2Ftech%2Fartikel%2F5205786%2Fpostnl-postzegel-code-postzegelcodes-codes-kaartje-post&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APostzegelcode"></span></span>
</li>
</ol></div>
<h2><span id="External_links">External links</span><span><span>[</span><a href="https://en.wikipedia.org/w/index.php?title=Postzegelcode&amp;action=edit&amp;section=3" title="Edit section: External links"><span>edit</span></a><span>]</span></span></h2>
<ul><li><a rel="nofollow" href="https://www.postnl.nl/campagnes/postzegelcode/">PostNL, postzegelcode</a></li></ul>
<!-- 
NewPP limit report
Parsed by mw‐api‐int.eqiad.main‐967764f4‐hktlw
Cached time: 20240630204729
Cache expiry: 2592000
Reduced expiry: false
Complications: [vary‐revision‐sha1]
CPU time usage: 0.161 seconds
Real time usage: 0.239 seconds
Preprocessor visited node count: 294/1000000
Post‐expand include size: 4546/2097152 bytes
Template argument size: 683/2097152 bytes
Highest expansion depth: 8/100
Expensive parser function count: 1/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 8052/5000000 bytes
Lua time usage: 0.094/10.000 seconds
Lua memory usage: 2875181/52428800 bytes
Number of Wikibase entities loaded: 0/400
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  209.133      1 -total
 56.91%  119.027      1 Template:Reflist
 47.19%   98.699      2 Template:Cite_web
 41.54%   86.881      1 Template:Short_description
 22.36%   46.768      2 Template:Pagetype
 11.69%   24.449      3 Template:Main_other
 10.40%   21.759      1 Template:SDcat
  1.28%    2.672      1 Template:Short_description/lowercasecheck
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:74696367-0!canonical and timestamp 20240630204729 and revision id 1231890082. Rendering was triggered because: api-parse
 -->
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The EU regulates that by 2027, all phones be equipped with replaceable batteries (104 pts)]]></title>
            <link>https://twitter.com/mingchikuo/status/1807432542934732953</link>
            <guid>40839278</guid>
            <pubDate>Sun, 30 Jun 2024 19:00:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/mingchikuo/status/1807432542934732953">https://twitter.com/mingchikuo/status/1807432542934732953</a>, See on <a href="https://news.ycombinator.com/item?id=40839278">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Writing GUI apps for Windows is painful (326 pts)]]></title>
            <link>https://tulach.cc/writing-gui-apps-for-windows-is-painful/</link>
            <guid>40839208</guid>
            <pubDate>Sun, 30 Jun 2024 18:53:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tulach.cc/writing-gui-apps-for-windows-is-painful/">https://tulach.cc/writing-gui-apps-for-windows-is-painful/</a>, See on <a href="https://news.ycombinator.com/item?id=40839208">Hacker News</a></p>
<div id="readability-page-1" class="page"><div aria-label="Content"> <article itemscope="" itemtype="https://schema.org/BlogPosting">  <div itemprop="articleBody"> <p>For the past few days, I have been trying to find a library that would allow me to write programs with a GUI in C++. My requirements were pretty straightforward:</p> <ul> <li>Only Windows support required</li> <li>Commercial use allowed</li> <li>Easy styling, including dark mode</li> <li>The result should be a single .exe file with no or minimal dependencies and a size of less than 40MB</li> <li>Writing the GUI part of the program should not take more time than the actual functionality</li> </ul> <h2 id="winui-3"> <a href="#winui-3"></a> <a href="https://learn.microsoft.com/en-us/windows/apps/winui/winui3/">WinUI 3</a> </h2> <p>At first glance, it looks like an excellent choice. It allows you to use modern Windows components while also letting you customize the styling colors. For design, you can use XAML, which is super easy to grasp, or you can just use the Visual Studio designer directly.</p> <p><img src="https://tulach.cc/assets/img/posts/7_winui.png" alt="screenshot"></p> <p><em>(WinUI 3 controls gallery)</em></p> <p><strong>Problem:</strong> Shipping the app in <a href="https://learn.microsoft.com/en-us/windows/apps/get-started/intro-pack-dep-proc#packaged-or-unpackaged">unpackaged form</a> is not well supported. Most of the time when I have tried moving the app to a VM or a different computer, it fails to launch due to some obscure dependencies missing. To make it worse, you need to supply a bunch of .dll files that handle the WinUI functionality. There is no way to have a single portable .exe file. Using packaged form <em>usually</em> works without any issues, but they are installed as AppX packages which brings many issues on its own (especially if you need access to all Win32 APIs).</p> <h2 id="win32--mfc--small-libraries-wrapping-win32"> <a href="#win32--mfc--small-libraries-wrapping-win32"></a> <a href="https://learn.microsoft.com/en-us/windows/win32/learnwin32/creating-a-window">Win32</a> / <a href="https://learn.microsoft.com/en-us/cpp/mfc/mfc-desktop-applications?view=msvc-170">MFC</a> / small libraries wrapping Win32 </h2> <p>I need high portability, so it would make sense to use the OS’s native rendering. Such a program could be a single .exe file (given that we statically link MFC) and would also be super small (just a few kilobytes). I could also use a <a href="https://github.com/t4th/win32-gui-wrapper">more minimal library</a> that someone has already written, which means it would be really easy to get from concept to working app fast.</p> <p><img src="https://tulach.cc/assets/img/posts/7_win32_light.png" alt="screenshot"></p> <p><em>(Basic Win32 form)</em></p> <p><strong>Problem:</strong> It is extremely hard to stylize native Win32 controls. It would require me to write a custom paint function for every single control, which would take so much time I could raise a family in the meantime. There is a “hidden” dark mode for Win32 controls used by Windows File Explorer that <a href="https://github.com/ysc3839/win32-darkmode">you can activate</a>, but it covers only some of the controls and still doesn’t look good.</p> <h2 id="qt"> <a href="#qt"></a> <a href="https://www.qt.io/">Qt</a> </h2> <p>This library is the holy grail of C++ GUI. While it’s quite complex, it offers easy styling with Qt Style Sheets, which use a language similar to CSS.</p> <p><img src="https://tulach.cc/assets/img/posts/7_qt_obs.png" alt="screenshot"></p> <p><em>(OBS studio is using Qt and custom stylesheets)</em></p> <p><strong>Problem:</strong> When linking dynamically, there are a myriad of different .dlls required to run the app, totaling over 40MB. You can <a href="https://doc.qt.io/Boot2Qt/b2qt-static-linking.html">statically link Qt into your program</a>, which will drastically reduce the size (since the unused parts are removed), but then you must either make it open-source or distribute object files for recompilation due to <a href="https://www.qt.io/qt-licensing">Qt’s LGPL license</a>. Alternatively, you can buy a commercial license for several thousand dollars.</p>  <p>Quite an easy-to-learn library with the option to use <a href="https://github.com/wxFormBuilder/wxFormBuilder">wxFormBuilder</a>. It has a more permissive license than Qt and can be statically linked into a 3MB executable.</p> <p><img src="https://tulach.cc/assets/img/posts/7_wxwidgets_dark.png" alt="screenshot"></p> <p><em>(wxWidgets with experimental Windows dark mode option enabled)</em></p> <p><strong>Problem:</strong> On Windows, this library uses native Win32 components and offers no styling options (since we cannot easily overwrite the paint functions, it’s even worse than using Win32/MFC directly). It supports applying <a href="https://github.com/ysc3839/win32-darkmode">Windows File Explorer dark controls</a>, but again, they kinda suck.</p> <h2 id="hikogui"> <a href="#hikogui"></a> <a href="https://github.com/hikogui/hikogui">hikogui</a> </h2> <p>Quite new retained mode GUI library using Vulkan as a backend. Has built-in dark mode and is quite easy to style yourself.</p> <p><img src="https://tulach.cc/assets/img/posts/7_hikogui.png" alt="screenshot"></p> <p><em>(Screenshots from official repository)</em></p> <p><strong>Problem:</strong> In order to compile it successfully, you will need a PhD in computer science with a specialization in compiler development. After trying to compile the example for more than 30 minutes (including different branches and release tags), the only thing I got was an executable that would immediately crash with an access violation inside some Vulkan library, so I just gave up. It looks really promising even though I don’t really like the heavy use of obnoxious STL (sometimes it’s not even necessary).</p> <h2 id="sciter"> <a href="#sciter"></a> <a href="https://sciter.com/">Sciter</a> </h2> <p>Actually a good alternative to Electron that allows you to use HTML/CSS to write the GUI for your desktop app.</p> <p><img src="https://tulach.cc/assets/img/posts/7_sciter.png" alt="screenshot"></p> <p><em>(Example of bad antialiasing on svg icons)</em></p> <p><strong>Problem:</strong> You might think that the issue is going to be size, but actually, the final app with all .dlls is around 25MB, which is completely fine with me. It would be even better if it were actually open-source and you could use the statically linked version for commercial use (same issue as with Qt). Since it’s not as expensive as Qt, though ($310 currently for an Indie license), I would pay the money and be happy. The issue is that, as you can see in the image above (look at the titlebar icons), the rendering is not that great. I was having all sorts of antialiasing issues with fonts and images. Also, no matter what you do, the window will have a quite thick (2-3px) grey frame that you just cannot customize or modify at all.</p> <h2 id="winforms--wpf"> <a href="#winforms--wpf"></a> <a href="https://learn.microsoft.com/en-us/visualstudio/ide/create-csharp-winform-visual-studio&amp;view=vs-2022">WinForms</a> / <a href="https://learn.microsoft.com/en-us/visualstudio/get-started/csharp/tutorial-wpf?view=vs-2022">WPF</a> </h2> <p>If you ask about C++ GUI libraries for Windows on some random forums, most of the time you will be told that it’s a bad idea (not arguing with that), and that you should instead write the frontend of the program in some other stack and then just load your functionality written in C++ as a component/module. This will allow you to easily stylize it and speed up the development significantly. Technically, it is possible to have a single .exe file with a small size and use WinForms/WPF. There are two ways we can go about it:</p> <ol> <li>Bundle the .dll as a resource into the app and make it extract it to some temporary folder, then use P/Invoke and call the compiled .dll from within the C#/.NET app.</li> <li>Use C++/CLI.</li> </ol> <p><img src="https://tulach.cc/assets/img/posts/7_winforms_darkui.png" alt="screenshot"></p> <p><em>(<a href="https://github.com/RobinPerris/DarkUI">DarkUI</a> for WinForms)</em></p> <p><strong>Problem:</strong> The .NET framework comes preinstalled on Windows 10+, so we would technically still meet the no dependencies criteria. The issue is that with bundling the .dll, it would still mean it being extracted somewhere and writing additional code for the P/Invoke to work, and C++/CLI gets compiled to .NET IL code, in other words, you can open the resulting app in dnSpy and see the C++ code translated to C# equivalent (which is not what I want, I want native code).</p> <h2 id="solution"> <a href="#solution"></a> Solution? </h2> <p>Those were only a few options that I considered. After a <strong>very</strong> long time trying out all sorts of different libraries and at one point even writing my own MFC styles, I figured out that for simple apps there is simply nothing better suited than <a href="https://github.com/ocornut/imgui">Dear ImGui</a>.</p> <p>It has some disadvantages, mainly when trying to design complex UIs and that it’s not a retained mode UI but rather an immediate mode UI, so we have to run a GPU renderer like DirectX to render 60 or more frames per second just for the UI.</p> <p>It matches all the other points though, since DirectX is included by default on modern Windows versions.</p> <p><img src="https://tulach.cc/assets/img/posts/7_imgui_appkit.png" alt="screenshot"></p> <p><em>(<a href="https://github.com/SamuelTulach/ImGui-AppKit">ImGui AppKit</a> example project)</em></p> <p>I have written an example that you can see above of how you can use the built-in multi-viewports functionality to use it to make simple GUI apps.</p> <p><img src="https://tulach.cc/assets/img/posts/7_size.png" alt="screenshot"></p> <p><em>(<a href="https://github.com/SamuelTulach/ImGui-AppKit">ImGui AppKit</a> compiled app size)</em></p> <p>The compiled program has only 500KB in size and does not require the installation of anything, not even <a href="https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170">VC++ redistributables</a> if you statically link MFC into it.</p> <p><strong>Note:</strong> I am writing this article while it’s 32°C inside my room. As a fellow European, I do not have air conditioning. Please forgive any grammatical errors or poorly structured sentences.</p> </div> </article> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A simplified Python simulation of diffusion (101 pts)]]></title>
            <link>https://www.thepythoncodingstack.com/p/python-diffusion-simulation-demo-turtle</link>
            <guid>40838945</guid>
            <pubDate>Sun, 30 Jun 2024 18:24:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.thepythoncodingstack.com/p/python-diffusion-simulation-demo-turtle">https://www.thepythoncodingstack.com/p/python-diffusion-simulation-demo-turtle</a>, See on <a href="https://news.ycombinator.com/item?id=40838945">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p>How often has this happened to you? You think you understand a topic well. Then you realise that you hadn't quite understood it as well as you thought.</p><p>I've been listening to the Feynman lectures in physics recently. Some of you may be familiar with these lectures. Richard Feynman was a brilliant physicist and an exceptional communicator. In the early 1960s, he was asked to deliver a two-year undergraduate physics course. This would have been "beneath him" as one of the most renowned physicists of his time. But Feynman loved teaching, and he was remarkably good at it. So he accepted on the condition he only delivers the course once!</p><p>Luckily for us, the lectures were recorded (audio-only, unfortunately).</p><p><span>What's this got to do with </span><em>The Python Coding Stack</em><span>? Some of you may know that I'm a physicist by training, and I worked as a research scientist for many years. As someone with a PhD in physics, surely there's nothing to learn from listening to undergraduate-level lectures, right?</span></p><p>Wrong.</p><p>Even in the early lectures when Feynman was covering basic concepts, his descriptions and explanations led me to understand topics I "knew well" at a deeper level. Feynman's talent as a communicator was to help students visualise what's going on intuitively.</p><p>If we could transpose Richard Feynman to the present day, he would explain many of the concepts using Python simulations!</p><p>Recently, I've been helping physics school teachers communicate ideas in physics and demonstrate key concepts using Python. Today's step-by-step tutorial is inspired by this work, and by one of Feynman's lectures.</p><p>But this is a Python publication, not a physics one. So, this article will focus on the coding, including looking at clever ways to optimise the simulation. Don't worry if you're not into physics. This article is mostly about Python!</p><p>I'll also simplify the physics concepts in this simulation. This is also a technique Feynman often used. When the priority is understanding the main concepts, cutting some corners is acceptable.</p><p>Here's the animation you'll create in this article. Notice how the particles collide with each other and with the sides:</p><p><em>I'll use one of my favourite modules in this tutorial, the </em><code>turtle</code><span> module. However, I plan to follow this tutorial with Part 2 in a few weeks, which will look at a different solution using NumPy and Matplotlib.</span></p><p><span>Let's start with a gas in a closed container. Let's simplify by saying that there are </span><em>particles</em><span> moving around the container, without worrying about the physical chemistry. And yes, let's make them perfect spheres, too.</span></p><p>These particles are moving around in random directions, and each one has a particular speed. In physics, we use the term velocity to represent the speed and direction of an object.</p><p>Each particle keeps moving with the same velocity—the same speed and direction—until it hits another particle or the sides of the container. We'll also assume all the particles are identical.</p><p>And one more simplification: the gas and its container exist in two dimensions. Who needs a third dimension?</p><p>Right, enough of the physics for now–it's time to start coding.</p><p><em><span>I'll assume you're familiar with the basics of object-oriented programming, but if you're not, you can </span><a href="https://thepythoncodingplace.com/the-python-coding-book/" rel="">read The Python Coding Book</a><span>, which has a chapter introducing OOP, or the seven-part Harry Potter-themed series on this topic here on The Python Coding Stack: </span><a href="https://www.thepythoncodingstack.com/p/a-magical-tour-through-object-oriented" rel="">A Magical Tour Through Object-Oriented Programming in Python • Hogwarts School of Codecraft and Algorithmancy</a></em></p><div><p><span>A few more seconds of your time before you carry on with the tutorial. I'm making a number of </span><strong>free passes</strong><span> available for readers of The Stack to access the learning platform at </span><strong>The Python Coding Place</strong><span>. The passes give </span><strong>access to all the video courses for one week and a live session</strong><span>, similar to the ones I have weekly with members of The Python Coding Place. Here's the link to get your one week's pass:</span></p><p data-attrs="{&quot;url&quot;:&quot;https://thepythoncodingplace.com/free-one-week-python-coding-pass/&quot;,&quot;text&quot;:&quot;Get Free One Week Pass&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://thepythoncodingplace.com/free-one-week-python-coding-pass/" rel=""><span>Get Free One Week Pass</span></a></p></div><p><span>Let's represent the container as a 2D simulation area. You can create a class to represent this area and create the screen as an attribute in this class. Let's define the class in </span><code>particles_simulation.py</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8df7d42d-a5a9-48ad-a976-4d0b071e3176_1200x924.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8df7d42d-a5a9-48ad-a976-4d0b071e3176_1200x924.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8df7d42d-a5a9-48ad-a976-4d0b071e3176_1200x924.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8df7d42d-a5a9-48ad-a976-4d0b071e3176_1200x924.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8df7d42d-a5a9-48ad-a976-4d0b071e3176_1200x924.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8df7d42d-a5a9-48ad-a976-4d0b071e3176_1200x924.png" width="1200" height="924" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8df7d42d-a5a9-48ad-a976-4d0b071e3176_1200x924.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:924,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:114213,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8df7d42d-a5a9-48ad-a976-4d0b071e3176_1200x924.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8df7d42d-a5a9-48ad-a976-4d0b071e3176_1200x924.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8df7d42d-a5a9-48ad-a976-4d0b071e3176_1200x924.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8df7d42d-a5a9-48ad-a976-4d0b071e3176_1200x924.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>All code blocks are available in text format at the end of this article • #1</figcaption></figure></div><p>When you create an instance of this class, you'll need to pass the width and height in pixels, and you can optionally pass a colour if you don't want a white background.</p><p><span>The width and height are used to calculate the </span><em>x-</em><span> and </span><em>y-</em><span>coordinates representing the four sides of this 2D container. You'll need these to be integers later as you'll use them as arguments in </span><code>random.randint()</code><span>, so you can use the floor division operator </span><code>//</code><span> to ensure the values are integers.</span></p><p><span>The last four lines in the </span><code>.__init__()</code><span> special method create the screen using the </span><code>turtle</code><span> module. They set the size of this screen using the width and height. And </span><code>.bgcolor()</code><span> is the method in the </span><code>turtle</code><span> module that sets the background colour.</span></p><p><span>The </span><code>.tracer(0)</code><span> method ensures that changes to the state of </span><code>turtle</code><span> objects are not drawn on the screen instantly. Instead, you'll need to call </span><code>.update()</code><span>, which is a screen method in the </span><code>turtle</code><span> module. You can improve the interface by making this a </span><code>SimulationArea</code><span> method so that someone using this class doesn't need to access the </span><code>turtle</code><span> method directly:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22cb8548-c97f-47f6-ba5b-f02af208c574_1200x840.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22cb8548-c97f-47f6-ba5b-f02af208c574_1200x840.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22cb8548-c97f-47f6-ba5b-f02af208c574_1200x840.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22cb8548-c97f-47f6-ba5b-f02af208c574_1200x840.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22cb8548-c97f-47f6-ba5b-f02af208c574_1200x840.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22cb8548-c97f-47f6-ba5b-f02af208c574_1200x840.png" width="1200" height="840" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/22cb8548-c97f-47f6-ba5b-f02af208c574_1200x840.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:840,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:72996,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22cb8548-c97f-47f6-ba5b-f02af208c574_1200x840.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22cb8548-c97f-47f6-ba5b-f02af208c574_1200x840.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22cb8548-c97f-47f6-ba5b-f02af208c574_1200x840.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F22cb8548-c97f-47f6-ba5b-f02af208c574_1200x840.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#2</figcaption></figure></div><p><span>You also create a </span><code>.set_title()</code><span> method to provide access to the </span><code>turtle</code><span> module's method to update the window's title, and </span><code>.run_mainloop()</code><span> to call </span><code>turtle.mainloop()</code><span>, which is needed to run the event loop in the </span><code>turtle</code><span> module. If you're familiar with some of my other </span><code>turtle</code><span> tutorials, I often use the alias </span><code>turtle.done()</code><span> instead of </span><code>turtle.mainloop()</code><span>. They're the same function. The </span><code>.run_mainloop()</code><span> method doesn't need access to the data within the instance. So, it's a static method instead of an instance method.</span></p><p><span>Now, let's start working on a second script to run the demo: </span><code>run_demo.py</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89a4f18f-95cb-4b22-81a1-67252073ffdf_1200x462.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89a4f18f-95cb-4b22-81a1-67252073ffdf_1200x462.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89a4f18f-95cb-4b22-81a1-67252073ffdf_1200x462.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89a4f18f-95cb-4b22-81a1-67252073ffdf_1200x462.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89a4f18f-95cb-4b22-81a1-67252073ffdf_1200x462.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89a4f18f-95cb-4b22-81a1-67252073ffdf_1200x462.png" width="1200" height="462" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/89a4f18f-95cb-4b22-81a1-67252073ffdf_1200x462.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:462,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:39345,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89a4f18f-95cb-4b22-81a1-67252073ffdf_1200x462.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89a4f18f-95cb-4b22-81a1-67252073ffdf_1200x462.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89a4f18f-95cb-4b22-81a1-67252073ffdf_1200x462.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F89a4f18f-95cb-4b22-81a1-67252073ffdf_1200x462.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#3</figcaption></figure></div><p>When you run this script, Python creates the window that represents the 2D container:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F91b9df24-a59f-4738-8e45-b06310f4b98f_2224x1680.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F91b9df24-a59f-4738-8e45-b06310f4b98f_2224x1680.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F91b9df24-a59f-4738-8e45-b06310f4b98f_2224x1680.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F91b9df24-a59f-4738-8e45-b06310f4b98f_2224x1680.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F91b9df24-a59f-4738-8e45-b06310f4b98f_2224x1680.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F91b9df24-a59f-4738-8e45-b06310f4b98f_2224x1680.png" width="1456" height="1100" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/91b9df24-a59f-4738-8e45-b06310f4b98f_2224x1680.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1100,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:453192,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F91b9df24-a59f-4738-8e45-b06310f4b98f_2224x1680.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F91b9df24-a59f-4738-8e45-b06310f4b98f_2224x1680.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F91b9df24-a59f-4738-8e45-b06310f4b98f_2224x1680.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F91b9df24-a59f-4738-8e45-b06310f4b98f_2224x1680.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Now, we need to put some particles in the container and get them to move around.</p><p>We're making some assumptions to simplify this demo. One of these is to assume that the molecules in the gas are spheres. Let's just call them particles.</p><p><span>You can create a </span><code>Particle</code><span> class. Let's start by listing some of the attributes a particle should have:</span></p><ul><li><p><span>Position: This can be a list containing the </span><em>x-</em><span> and </span><em>y-</em><span>coordinates.</span></p></li><li><p><span>Velocity: This can be another list containing the </span><em>x-</em><span> and </span><em>y-</em><span>components of the particle's velocity. Each component can be a negative or positive number to account for direction.</span></p></li><li><p>Colour and size: These attributes enable you to customise the way each particle is displayed on the screen.</p></li></ul><p><span>You'll also need to link the particle with the container so that the particle can access information about the simulation area. Here's the class with the first part of the </span><code>.__init__()</code><span> method. We'll work on the position and velocity later:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F385a3498-95b1-4a82-8064-a96941e3f914_1200x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F385a3498-95b1-4a82-8064-a96941e3f914_1200x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F385a3498-95b1-4a82-8064-a96941e3f914_1200x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F385a3498-95b1-4a82-8064-a96941e3f914_1200x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F385a3498-95b1-4a82-8064-a96941e3f914_1200x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F385a3498-95b1-4a82-8064-a96941e3f914_1200x1050.png" width="1200" height="1050" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/385a3498-95b1-4a82-8064-a96941e3f914_1200x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1050,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:98269,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F385a3498-95b1-4a82-8064-a96941e3f914_1200x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F385a3498-95b1-4a82-8064-a96941e3f914_1200x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F385a3498-95b1-4a82-8064-a96941e3f914_1200x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F385a3498-95b1-4a82-8064-a96941e3f914_1200x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#4</figcaption></figure></div><p><span>The class's </span><code>.__init__()</code><span> method includes several arguments. I used a type hint for </span><code>simulation_area</code><span> to clarify this is an instance of the </span><code>SimulationArea</code><span> class. Another advantage of using type hints for </span><code>.simulation_area</code><span> is that tools such as IDEs can assist with autocomplete and other aids.</span></p><p><span>The </span><code>Turtle()</code><span> object is the primary tool in the </span><code>turtle</code><span> module to create graphics. You could define </span><code>Particle</code><span> to inherit from </span><code>turtle.Turtle</code><span> so that a </span><code>Particle</code><span> object is also a </span><code>turtle.Turtle</code><span> object. However, I chose to create a </span><code>.particle</code><span> attribute containing a </span><code>turtle.Turtle()</code><span> object instead. This is a design choice you can make in situations like this.</span></p><p><span>The rest of the </span><code>.__init__()</code><span> method so far changes the shape and colour of the sprite representing the </span><code>Turtle</code><span> object, "raises the pen up" so that the </span><code>Turtle</code><span> object doesn't draw a line when it moves, and changes the size of the sprite. The </span><code>Turtle</code><span> method </span><code>.shapesize()</code><span> accepts a multiplicative factor as an argument. Therefore, the default value of </span><code>size_factor = 0.5</code><span> displays the sprite at half its default size. By default, a sprite in the </span><code>turtle</code><span> module occupies a 20 x 20 pixel area.</span></p><p><span>You can check that this code works in </span><code>run_demo.py</code><span>. Note that the import line now includes </span><code>Particle</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee6a6293-e049-4cda-9fe3-b1168ba11e0d_1200x588.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee6a6293-e049-4cda-9fe3-b1168ba11e0d_1200x588.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee6a6293-e049-4cda-9fe3-b1168ba11e0d_1200x588.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee6a6293-e049-4cda-9fe3-b1168ba11e0d_1200x588.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee6a6293-e049-4cda-9fe3-b1168ba11e0d_1200x588.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee6a6293-e049-4cda-9fe3-b1168ba11e0d_1200x588.png" width="1200" height="588" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ee6a6293-e049-4cda-9fe3-b1168ba11e0d_1200x588.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:588,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:53021,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee6a6293-e049-4cda-9fe3-b1168ba11e0d_1200x588.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee6a6293-e049-4cda-9fe3-b1168ba11e0d_1200x588.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee6a6293-e049-4cda-9fe3-b1168ba11e0d_1200x588.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee6a6293-e049-4cda-9fe3-b1168ba11e0d_1200x588.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#5</figcaption></figure></div><p><span>You also need to add </span><code>simulation_area.update()</code><span> to ensure the screen's display is updated. There's a particle in the middle of the container now:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31bc4534-d05c-4d95-8dbf-9e9c510839e0_2224x1680.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31bc4534-d05c-4d95-8dbf-9e9c510839e0_2224x1680.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31bc4534-d05c-4d95-8dbf-9e9c510839e0_2224x1680.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31bc4534-d05c-4d95-8dbf-9e9c510839e0_2224x1680.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31bc4534-d05c-4d95-8dbf-9e9c510839e0_2224x1680.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31bc4534-d05c-4d95-8dbf-9e9c510839e0_2224x1680.png" width="1456" height="1100" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/31bc4534-d05c-4d95-8dbf-9e9c510839e0_2224x1680.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1100,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:448620,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31bc4534-d05c-4d95-8dbf-9e9c510839e0_2224x1680.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31bc4534-d05c-4d95-8dbf-9e9c510839e0_2224x1680.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31bc4534-d05c-4d95-8dbf-9e9c510839e0_2224x1680.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F31bc4534-d05c-4d95-8dbf-9e9c510839e0_2224x1680.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>You can pass arguments for </span><code>position</code><span> and </span><code>velocity</code><span> when you create a </span><code>Particle</code><span> instance. However, these arguments are optional as they have a default value of </span><code>None</code><span>. If you need to create lots of particles, you want to create each particle in a random position in the container and assign a random velocity within a desired range.</span></p><p><span>Let's fix this by adding a few more lines to the </span><code>.__init__()</code><span> method. You also need to import the </span><code>random</code><span> module:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e579366-cc18-408c-be02-957a2e0a9c21_1290x2100.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e579366-cc18-408c-be02-957a2e0a9c21_1290x2100.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e579366-cc18-408c-be02-957a2e0a9c21_1290x2100.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e579366-cc18-408c-be02-957a2e0a9c21_1290x2100.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e579366-cc18-408c-be02-957a2e0a9c21_1290x2100.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e579366-cc18-408c-be02-957a2e0a9c21_1290x2100.png" width="1290" height="2100" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6e579366-cc18-408c-be02-957a2e0a9c21_1290x2100.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:2100,&quot;width&quot;:1290,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:184491,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e579366-cc18-408c-be02-957a2e0a9c21_1290x2100.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e579366-cc18-408c-be02-957a2e0a9c21_1290x2100.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e579366-cc18-408c-be02-957a2e0a9c21_1290x2100.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6e579366-cc18-408c-be02-957a2e0a9c21_1290x2100.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#6</figcaption></figure></div><p>Let's review the changes in this version:</p><ul><li><p><span>You import the </span><code>random</code><span> module, which you use in the </span><code>.__init__()</code><span> method.</span></p></li><li><p><span>You define a class attribute, </span><code>.MAX_VELOCITY</code><span>. This attribute is not specific to each instance of the class but is shared by all instances.</span></p></li><li><p><span>If </span><code>position</code><span> is the default value </span><code>None</code><span>, you assign a list containing two random values. The first value represents the </span><em>x</em><span>-position and is a random number between the left and right edges of the screen. The second value is the </span><em>y-</em><span>position, and it's chosen using the top and bottom edges as limits. The arguments in </span><code>random.randint()</code><span> need to be integers. This is why you use the floor division </span><code>//</code><span> when defining the edges of the container from the width and height values in </span><code>SimulationArea</code><span>.</span></p></li><li><p><span>If </span><code>velocity</code><span> is the default value </span><code>None</code><span>, you assign another list containing two random values. These represent the </span><em>x-</em><span> and </span><em>y-</em><span>components of the particle's velocity. Since </span><code>random.randint()</code><span> only deals with integers, you can create values with one digit after the decimal point using a bit of arithmetic. You multiply the minimum and maximum values you use as arguments in </span><code>random.randint()</code><span> by 10, but then you divide the answer by 10 again.</span></p></li></ul><p><span>Let's create 100 particles in </span><code>run_demo.py</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe03b9621-56f9-47ee-8a53-07c3504548e2_1200x588.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe03b9621-56f9-47ee-8a53-07c3504548e2_1200x588.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe03b9621-56f9-47ee-8a53-07c3504548e2_1200x588.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe03b9621-56f9-47ee-8a53-07c3504548e2_1200x588.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe03b9621-56f9-47ee-8a53-07c3504548e2_1200x588.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe03b9621-56f9-47ee-8a53-07c3504548e2_1200x588.png" width="1200" height="588" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e03b9621-56f9-47ee-8a53-07c3504548e2_1200x588.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:588,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:57725,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe03b9621-56f9-47ee-8a53-07c3504548e2_1200x588.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe03b9621-56f9-47ee-8a53-07c3504548e2_1200x588.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe03b9621-56f9-47ee-8a53-07c3504548e2_1200x588.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe03b9621-56f9-47ee-8a53-07c3504548e2_1200x588.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#7</figcaption></figure></div><p><span>This code creates a list with 100 </span><code>Particle</code><span> objects. A </span><code>Turtle</code><span> object is created in the centre of the screen. Even though all the </span><code>Particle</code><span> objects have a </span><code>.position</code><span> attribute with </span><em>x-</em><span> and </span><em>y-</em><span>coordinates, you're not moving the </span><code>Turtle</code><span> objects to their new positions yet. We'll deal with this in the next section.</span></p><p><span>There are two key steps to start the animation and move all the particles. One of them is to create an animation loop in </span><code>run_demo.py</code><span>. But first, let's define </span><code>Particle.move()</code><span> in </span><code>particles_simulation.py</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa2b3439-403b-4a1b-b02d-b641fb846c76_1200x756.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa2b3439-403b-4a1b-b02d-b641fb846c76_1200x756.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa2b3439-403b-4a1b-b02d-b641fb846c76_1200x756.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa2b3439-403b-4a1b-b02d-b641fb846c76_1200x756.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa2b3439-403b-4a1b-b02d-b641fb846c76_1200x756.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa2b3439-403b-4a1b-b02d-b641fb846c76_1200x756.png" width="1200" height="756" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/fa2b3439-403b-4a1b-b02d-b641fb846c76_1200x756.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:756,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:59192,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa2b3439-403b-4a1b-b02d-b641fb846c76_1200x756.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa2b3439-403b-4a1b-b02d-b641fb846c76_1200x756.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa2b3439-403b-4a1b-b02d-b641fb846c76_1200x756.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffa2b3439-403b-4a1b-b02d-b641fb846c76_1200x756.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#8</figcaption></figure></div><p><span>A particle's speed tells us how much the position changes in a specific time unit. Often, the unit is m/s in scientific applications. However, speed can be defined using any measure of distance and time. To keep this animation simple, you'll use </span><em>pixels per frame</em><span> as a measure of a particle's speed.</span></p><p><span>Therefore, each time the particle moves in the animation, its </span><em>x-</em><span>position changes by an amount equal to its velocity's </span><em>x-</em><span>component. And the </span><em>y-</em><span>position changes by the velocity's </span><em>y-</em><span>component.</span></p><p><span>The final line in </span><code>.move()</code><span> calls </span><code>.setposition()</code><span>, which is a method in the </span><code>turtle</code><span> module to place the </span><code>Turtle</code><span> object in its new position. Recall that </span><code>.particle</code><span> is the data attribute that represents the </span><code>Turtle</code><span> object.</span></p><p><span>Let's add the animation loop in </span><code>run_demo.py</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5a2c26a8-db17-407f-8f99-36fbc7b05b1c_1272x882.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5a2c26a8-db17-407f-8f99-36fbc7b05b1c_1272x882.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5a2c26a8-db17-407f-8f99-36fbc7b05b1c_1272x882.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5a2c26a8-db17-407f-8f99-36fbc7b05b1c_1272x882.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5a2c26a8-db17-407f-8f99-36fbc7b05b1c_1272x882.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5a2c26a8-db17-407f-8f99-36fbc7b05b1c_1272x882.png" width="1272" height="882" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/5a2c26a8-db17-407f-8f99-36fbc7b05b1c_1272x882.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:882,&quot;width&quot;:1272,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:91251,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5a2c26a8-db17-407f-8f99-36fbc7b05b1c_1272x882.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5a2c26a8-db17-407f-8f99-36fbc7b05b1c_1272x882.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5a2c26a8-db17-407f-8f99-36fbc7b05b1c_1272x882.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5a2c26a8-db17-407f-8f99-36fbc7b05b1c_1272x882.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#9</figcaption></figure></div><p><span>You call </span><code>.move()</code><span> for each particle in the list of 100 particles. The display is only updated after the </span><code>for</code><span> loop to ensure all particle positions are updated on the screen at the same time. Recall that you set </span><code>.tracer(0)</code><span> when setting up </span><code>SimulationArea</code><span> to prevent the sprites from being updated before you call </span><code>.update()</code><span>.</span></p><p><span>Here's the animation so far. Note that the speed of the animation may vary depending on your operating system and setup. You can adjust the class attribute </span><code>.MAX_VELOCITY</code><span> in the </span><code>Particle</code><span> class to control the speed of your animation.</span></p><p>You can see particles starting at random positions on the screen, moving in different directions at different speeds.</p><p>This is great, but we still need to do more work to get a basic animation running:</p><ul><li><p>Account for particles hitting the edges of the container/screen</p></li><li><p>Account for particles hitting each other</p></li></ul><p>Let's work on the edges of the container first.</p><p><span>Let's get back to the </span><code>.move()</code><span> method in </span><code>Particle</code><span>. You can check whether the particle has hit any of the four edges. If the particle hits the left or right edge, you can change the sign of the velocity's </span><em>x-</em><span>component. If the velocity's </span><em>x-</em><span>component is negative, the particle is moving towards the left. After it hits the side, it's moving towards the right, so the </span><em>x-</em><span>component is positive. The opposite happens on the other side.</span></p><p><span>And when the ball hits the top or bottom, you can swap the sign of the velocity's </span><em>y-</em><span>component. Let's add this to </span><code>.move()</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fafb2c3c4-2749-452d-973c-be452bcd3319_1326x1302.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fafb2c3c4-2749-452d-973c-be452bcd3319_1326x1302.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fafb2c3c4-2749-452d-973c-be452bcd3319_1326x1302.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fafb2c3c4-2749-452d-973c-be452bcd3319_1326x1302.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fafb2c3c4-2749-452d-973c-be452bcd3319_1326x1302.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fafb2c3c4-2749-452d-973c-be452bcd3319_1326x1302.png" width="1326" height="1302" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/afb2c3c4-2749-452d-973c-be452bcd3319_1326x1302.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1302,&quot;width&quot;:1326,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:121504,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fafb2c3c4-2749-452d-973c-be452bcd3319_1326x1302.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fafb2c3c4-2749-452d-973c-be452bcd3319_1326x1302.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fafb2c3c4-2749-452d-973c-be452bcd3319_1326x1302.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fafb2c3c4-2749-452d-973c-be452bcd3319_1326x1302.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#10</figcaption></figure></div><p><span>Note that you shouldn't check for equality using </span><code>==</code><span> when checking whether the particle has hit any of the four sides since the particle's position may never be exactly equal to that side's coordinate.</span></p><p><span>For example, if the </span><em>x-</em><span>velocity is 3 pixels per frame, the particle's </span><em>x-</em><span>position changes by 3 pixels every time it moves in the animation. The particle may "jump over" the container side's </span><em>x-</em><span>coordinate when it moves. Instead, use </span><code>&lt;</code><span> for the negative values (left and bottom) and </span><code>&gt;</code><span> for the positive values (right and top) to check whether a particle has hit one of the container's sides.</span></p><p><span>And the nice thing about creating classes is that you don't need to make any changes to </span><code>run_demo.py</code><span> to verify whether this code works since you changed the definition of </span><code>Particle.move()</code><span>. Here's the animation now:</span></p><p>The particles stay in the container by bouncing off the sides.</p><p>But particles don't just collide with the container's sides. They also collide with each other. We're assuming the particles are spheres of the same mass. Here's another simplification: when particles collide, they always collide head-on. This is not the case in real life, but it's a reasonable simplification for a demonstration designed to help understand how gas particles move in a container.</p><p>Let's start with a method to check whether two particles have collided. You need to check whether the distance between the centres of two particles is less than a certain threshold. You can't check whether this distance is exactly zero, as was the case when checking whether a particle has hit the sides. To make the demo visually realistic, you can set the threshold to represent the centre-to-centre distance when the surface of one particle touches the surface of another.</p><p><span>By default, a sprite in the </span><code>turtle</code><span> module occupies a 20 x 20 pixel footprint. However, you increase or decrease this size when creating the </span><code>Particle</code><span> instance. You can access this size factor using the </span><code>Turtle</code><span> class's </span><code>.shapesize()</code><span> method. You used this method to set the size of the sprite in </span><code>Particle.__init__()</code><span>. However, you can call this method with no arguments since it returns a value representing the shape's size. The </span><code>.shapesize()</code><span> method returns a tuple containing the stretch factors along the </span><em>x-</em><span> and </span><em>y-</em><span>directions. The tuple also includes a third element, which I'll ignore here as it's not relevant.</span></p><p><span>Since you called </span><code>.shapesize()</code><span> with one argument when you created the </span><code>Turtle</code><span> object, you applied the same stretch along both </span><em>x-</em><span> and </span><em>y-</em><span>directions. Therefore, you can use either the first or the second element in the tuple returned by </span><code>.shapesize()</code><span> since they're equal:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde9180e9-0e81-4ba1-9a5c-f0cb3e880444_1200x798.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde9180e9-0e81-4ba1-9a5c-f0cb3e880444_1200x798.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde9180e9-0e81-4ba1-9a5c-f0cb3e880444_1200x798.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde9180e9-0e81-4ba1-9a5c-f0cb3e880444_1200x798.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde9180e9-0e81-4ba1-9a5c-f0cb3e880444_1200x798.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde9180e9-0e81-4ba1-9a5c-f0cb3e880444_1200x798.png" width="1200" height="798" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/de9180e9-0e81-4ba1-9a5c-f0cb3e880444_1200x798.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:798,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:62014,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde9180e9-0e81-4ba1-9a5c-f0cb3e880444_1200x798.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde9180e9-0e81-4ba1-9a5c-f0cb3e880444_1200x798.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde9180e9-0e81-4ba1-9a5c-f0cb3e880444_1200x798.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fde9180e9-0e81-4ba1-9a5c-f0cb3e880444_1200x798.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#11</figcaption></figure></div><p><span>The hard-coded value of 20 represents the default sprite size in the </span><code>turtle</code><span> module, and it's multiplied by the scaling factor you chose when creating the particle (or 0.5 if using the default, as we are doing in this example). This method calls </span><code>.distance()</code><span>, which is a method in the </span><code>turtle</code><span> library that returns the distance between two turtles. Recall that a </span><code>Turtle</code><span> object's position is the centre of the dot displayed. So, </span><code>.distance()</code><span> returns the centre-to-centre distance between two particles. The </span><code>.check_collision()</code><span> method returns a Boolean to indicate whether the particles have collided.</span></p><p><span>Now, you can define </span><code>.collide()</code><span>, which determines what happens when two particles collide. The assumption that particles all collide head-on will simplify this method. Those of you who want to create a more precise simluation can account for the correct geometry in this method. However, this won't make a huge difference to this demonstration:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a8ebed1-a5d3-490a-876f-dd8cca31d647_1650x840.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a8ebed1-a5d3-490a-876f-dd8cca31d647_1650x840.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a8ebed1-a5d3-490a-876f-dd8cca31d647_1650x840.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a8ebed1-a5d3-490a-876f-dd8cca31d647_1650x840.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a8ebed1-a5d3-490a-876f-dd8cca31d647_1650x840.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a8ebed1-a5d3-490a-876f-dd8cca31d647_1650x840.png" width="1456" height="741" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0a8ebed1-a5d3-490a-876f-dd8cca31d647_1650x840.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:741,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:65070,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a8ebed1-a5d3-490a-876f-dd8cca31d647_1650x840.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a8ebed1-a5d3-490a-876f-dd8cca31d647_1650x840.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a8ebed1-a5d3-490a-876f-dd8cca31d647_1650x840.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0a8ebed1-a5d3-490a-876f-dd8cca31d647_1650x840.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#12</figcaption></figure></div><p><span>When two particles of equal mass collide head-on (assuming an elastic collision), they simply swap their velocities. </span><em>Note: in future code snippets in this tutorial, I'll break this line into multiple lines to keep the overall width of the code narrower, but I left it as a single line on this first occasion as it's more readable.</em></p><p>Next, you need to check all the particles to find out which ones are colliding during each frame. In this part of the tutorial, we'll use the brute force approach. However, I'll look at a more efficient option later in this article. And Part 2, which I'll publish at a later date, will also examine different solutions.</p><p><span>Let's update </span><code>run_demo.py</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F940c1535-0170-4203-831e-45c8d788592e_1200x882.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F940c1535-0170-4203-831e-45c8d788592e_1200x882.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F940c1535-0170-4203-831e-45c8d788592e_1200x882.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F940c1535-0170-4203-831e-45c8d788592e_1200x882.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F940c1535-0170-4203-831e-45c8d788592e_1200x882.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F940c1535-0170-4203-831e-45c8d788592e_1200x882.png" width="1200" height="882" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/940c1535-0170-4203-831e-45c8d788592e_1200x882.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:882,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:89088,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F940c1535-0170-4203-831e-45c8d788592e_1200x882.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F940c1535-0170-4203-831e-45c8d788592e_1200x882.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F940c1535-0170-4203-831e-45c8d788592e_1200x882.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F940c1535-0170-4203-831e-45c8d788592e_1200x882.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#13</figcaption></figure></div><p>For each particle, you first move it, and then you check all the other particles in the container to look for collisions. This works. There's a "but" coming—several of them. Before we deal with the potential pitfalls, let's look at the animation now:</p><p>If you look closely at the animation, you'll notice some particles clumping together. There are a few issues we need to consider about the algorithm dealing with the collisions. Let's look at this in the next section.</p><p>First of all, let's consider a particle hitting itself. Eh?! That can't happen, right?</p><p><span>Right, but it currently happens in the code. Let's say you just moved particle A. The code in the </span><code>while</code><span> loop in </span><code>run_demo.py</code><span> loops through all the particles, including A itself. The distance between A and itself is zero, of course!</span></p><p>Now, this doesn't really matter since the particle is swapping velocities with itself when it collides with itself—this sentence is so weird out of context! So, no harm done. But it's tidier and a bit more efficient if we avoid this.</p><p><span>One option is to loop through an iterable that contains all the particles except particle A. In the inner </span><code>for</code><span> loop in the animation loop, instead of iterating through </span><code>particles</code><span> again, you could create a generator expression </span><code>(part for part in particles if part is not particle)</code><span>. It's best not to create a copy of </span><code>particles</code><span> with one particle removed, as that option uses up more memory.</span></p><p><span>As much as I love to use generators, in this case, I'll opt for a simpler and more readable option, which you can implement directly in </span><code>Particle.collide()</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F731f5a3b-0d19-49bb-ad11-85cf59843d87_1200x1092.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F731f5a3b-0d19-49bb-ad11-85cf59843d87_1200x1092.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F731f5a3b-0d19-49bb-ad11-85cf59843d87_1200x1092.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F731f5a3b-0d19-49bb-ad11-85cf59843d87_1200x1092.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F731f5a3b-0d19-49bb-ad11-85cf59843d87_1200x1092.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F731f5a3b-0d19-49bb-ad11-85cf59843d87_1200x1092.png" width="1200" height="1092" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/731f5a3b-0d19-49bb-ad11-85cf59843d87_1200x1092.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1092,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:82657,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F731f5a3b-0d19-49bb-ad11-85cf59843d87_1200x1092.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F731f5a3b-0d19-49bb-ad11-85cf59843d87_1200x1092.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F731f5a3b-0d19-49bb-ad11-85cf59843d87_1200x1092.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F731f5a3b-0d19-49bb-ad11-85cf59843d87_1200x1092.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#14</figcaption></figure></div><p><span>When </span><code>.collide()</code><span> is called with the instance as its own argument so that </span><code>self</code><span> and </span><code>other_particle</code><span> are the same object, the method returns early.</span></p><p>The main issue with our algorithm is that if A collides with B, say, the animation loop may later find that B collides with A again, and the collision happens twice in the same frame. If this happens, you swap the velocities between A and B and then swap them back again in the same iteration of the game loop.</p><p><span>This </span><em>double collision</em><span> doesn't occur in most collisions in the animation since when A hits B, their positions change. So, it's possible that when it's B's turn, it's no longer close enough to A. However, this </span><em>double collision</em><span> does occur in some cases. This artefact gives rise to the clumping of particles you see in the animation.</span></p><p><span>One way of dealing with this is to keep track of which particles are in collision with each other within a frame. You can add a new attribute to </span><code>Particles</code><span> to keep a record of these particles:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcee3a8f2-1eec-446c-ac8d-5ff5fe0e3351_1200x672.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcee3a8f2-1eec-446c-ac8d-5ff5fe0e3351_1200x672.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcee3a8f2-1eec-446c-ac8d-5ff5fe0e3351_1200x672.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcee3a8f2-1eec-446c-ac8d-5ff5fe0e3351_1200x672.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcee3a8f2-1eec-446c-ac8d-5ff5fe0e3351_1200x672.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcee3a8f2-1eec-446c-ac8d-5ff5fe0e3351_1200x672.png" width="1200" height="672" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cee3a8f2-1eec-446c-ac8d-5ff5fe0e3351_1200x672.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:672,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:37829,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcee3a8f2-1eec-446c-ac8d-5ff5fe0e3351_1200x672.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcee3a8f2-1eec-446c-ac8d-5ff5fe0e3351_1200x672.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcee3a8f2-1eec-446c-ac8d-5ff5fe0e3351_1200x672.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcee3a8f2-1eec-446c-ac8d-5ff5fe0e3351_1200x672.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#15</figcaption></figure></div><p><span>Next, you can update </span><code>.collide()</code><span> to ensure particles haven't already collided in the frame. You also need to add </span><code>self</code><span> to </span><code>other_particle.in_collision_with</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcba178e6-1021-4bb0-b2ac-57b531802746_1200x1050.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcba178e6-1021-4bb0-b2ac-57b531802746_1200x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcba178e6-1021-4bb0-b2ac-57b531802746_1200x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcba178e6-1021-4bb0-b2ac-57b531802746_1200x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcba178e6-1021-4bb0-b2ac-57b531802746_1200x1050.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcba178e6-1021-4bb0-b2ac-57b531802746_1200x1050.png" width="1200" height="1050" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cba178e6-1021-4bb0-b2ac-57b531802746_1200x1050.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1050,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:96404,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcba178e6-1021-4bb0-b2ac-57b531802746_1200x1050.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcba178e6-1021-4bb0-b2ac-57b531802746_1200x1050.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcba178e6-1021-4bb0-b2ac-57b531802746_1200x1050.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcba178e6-1021-4bb0-b2ac-57b531802746_1200x1050.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#16</figcaption></figure></div><p><em>Note: the highlights in the code blocks show new or modified lines compared to the previous step, but they don't show lines if only their indentation has changed.</em></p><p><span>Since you iterate through the particles in the animation loop, you'll always process one of the colliding particles before the other. Therefore, you only need to keep one record of the collision. If we consider particles A and B again, and let's say A comes first in the animation loop because it's at a lower index in the list of particles. You only need to store A in B's </span><code>.in_collision_with</code><span> list. There's no need to also store B in A's.</span></p><p>Let's go through the process step-by-step:</p><ul><li><p><span>Each particle has a list </span><code>.in_collision_with</code><span>.</span></p></li><li><p>When you're processing A and find that it collides with B, you execute the collision code, and you add A to B's list of collisions.</p></li><li><p>When it's B's turn to be processed, you check A's list of collisions. B will be in that list. Therefore, you skip the collision in this case.</p></li></ul><p><span>There's one problem. At some point, you need to remove a particle from the collision list of another particle to make sure you can deal with future collisions of the same pair of particles. Let's start by defining a method in </span><code>Particle</code><span> to provide an interface for removing particles:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf6eabdb-8675-4fbe-87ea-ec37f76991c7_1200x504.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf6eabdb-8675-4fbe-87ea-ec37f76991c7_1200x504.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf6eabdb-8675-4fbe-87ea-ec37f76991c7_1200x504.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf6eabdb-8675-4fbe-87ea-ec37f76991c7_1200x504.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf6eabdb-8675-4fbe-87ea-ec37f76991c7_1200x504.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf6eabdb-8675-4fbe-87ea-ec37f76991c7_1200x504.png" width="1200" height="504" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cf6eabdb-8675-4fbe-87ea-ec37f76991c7_1200x504.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:504,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:35445,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf6eabdb-8675-4fbe-87ea-ec37f76991c7_1200x504.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf6eabdb-8675-4fbe-87ea-ec37f76991c7_1200x504.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf6eabdb-8675-4fbe-87ea-ec37f76991c7_1200x504.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcf6eabdb-8675-4fbe-87ea-ec37f76991c7_1200x504.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#17</figcaption></figure></div><p><span>And you can call this method in an </span><code>elif</code><span> clause in the animation loop:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ff4f740-16bc-4631-8495-232f41a62f5d_1200x756.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ff4f740-16bc-4631-8495-232f41a62f5d_1200x756.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ff4f740-16bc-4631-8495-232f41a62f5d_1200x756.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ff4f740-16bc-4631-8495-232f41a62f5d_1200x756.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ff4f740-16bc-4631-8495-232f41a62f5d_1200x756.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ff4f740-16bc-4631-8495-232f41a62f5d_1200x756.png" width="1200" height="756" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/4ff4f740-16bc-4631-8495-232f41a62f5d_1200x756.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:756,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:65713,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ff4f740-16bc-4631-8495-232f41a62f5d_1200x756.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ff4f740-16bc-4631-8495-232f41a62f5d_1200x756.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ff4f740-16bc-4631-8495-232f41a62f5d_1200x756.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4ff4f740-16bc-4631-8495-232f41a62f5d_1200x756.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#18</figcaption></figure></div><p>If the particles aren't colliding in a frame, but one is on the collision list of the other, then you can remove the particle from the collision list. The collision must have occurred in the previous frame.</p><p>Here's the animation you get at this stage. Pick one particle and follow its path:</p><p>This is good enough for now. You may still get the odd glitch due to some edge cases, but this happens much less frequently now, if at all!</p><p>We'll explore another issue with this version later in this article.</p><p>Remember the motivation for writing this simulation? I've been assisting physics school teachers with Python-based exercises to visualise physics concepts. Now that we have a simple model of gas molecules moving around in a 2D container, let's assume that we start the animation with one type of gas in the left half of the container and a different type of gas in the right half. I'll stick to the assumption that all particles are of equal mass, which is unlikely in the real-case scenario, but it doesn't affect the demo.</p><p><span>You can assign different colours to the particles depending on whether they're in the left or right half of the container. First, you can define two helper methods in </span><code>Particle</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e9278f9-50ef-4407-b81e-7f9d0a293da4_1200x630.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e9278f9-50ef-4407-b81e-7f9d0a293da4_1200x630.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e9278f9-50ef-4407-b81e-7f9d0a293da4_1200x630.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e9278f9-50ef-4407-b81e-7f9d0a293da4_1200x630.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e9278f9-50ef-4407-b81e-7f9d0a293da4_1200x630.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e9278f9-50ef-4407-b81e-7f9d0a293da4_1200x630.png" width="1200" height="630" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/7e9278f9-50ef-4407-b81e-7f9d0a293da4_1200x630.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:630,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:45450,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e9278f9-50ef-4407-b81e-7f9d0a293da4_1200x630.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e9278f9-50ef-4407-b81e-7f9d0a293da4_1200x630.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e9278f9-50ef-4407-b81e-7f9d0a293da4_1200x630.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7e9278f9-50ef-4407-b81e-7f9d0a293da4_1200x630.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#19</figcaption></figure></div><p><span>The first of these methods, </span><code>.assign_colour()</code><span>, provides an interface to change the colour directly through the </span><code>Particle</code><span> class. Therefore, anyone using this class doesn't need to use the </span><code>turtle</code><span> module directly. The second method you define, </span><code>.get_position()</code><span>, is what some languages call a </span><em>getter</em><span> method. It provides access to the values of a data attribute without the need to access the data attribute directly. This step discourages a user from accessing </span><code>.position</code><span> and accidentally changing its value. There are other steps you can take to prevent </span><code>.position</code><span> from being modified by mistake, but I won't go down that path in this tutorial.</span></p><p><span>Now, you can replace the list comprehension that creates the 100 particles in </span><code>run_demo.py</code><span> to assign different colours to particles in the left and right halves of the container:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee714179-74b1-4301-8ac8-0523b8a06858_1200x882.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee714179-74b1-4301-8ac8-0523b8a06858_1200x882.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee714179-74b1-4301-8ac8-0523b8a06858_1200x882.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee714179-74b1-4301-8ac8-0523b8a06858_1200x882.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee714179-74b1-4301-8ac8-0523b8a06858_1200x882.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee714179-74b1-4301-8ac8-0523b8a06858_1200x882.png" width="1200" height="882" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ee714179-74b1-4301-8ac8-0523b8a06858_1200x882.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:882,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:90129,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee714179-74b1-4301-8ac8-0523b8a06858_1200x882.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee714179-74b1-4301-8ac8-0523b8a06858_1200x882.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee714179-74b1-4301-8ac8-0523b8a06858_1200x882.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee714179-74b1-4301-8ac8-0523b8a06858_1200x882.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#20</figcaption></figure></div><p><span>The middle of the screen corresponds to </span><em>x</em><span> = 0. Therefore, you colour those particles with an </span><em>x-</em><span>position less than zero in one colour and the rest in another colour. The hex colours are the main brand colours for </span><em>The Python Coding Stack</em><span> (and </span><em><a href="https://thepythoncodingplace.com/" rel="">The Python Coding Place</a></em><span>)!</span></p><p>Here's the animation. Notice how all the green particles are in the left half and all the orange ones on the right at the start of the animation. However, the gasses gradually diffuse so that after some time, there's an equal number of green and orange particles in both halves:</p><p>The random motion and collisions lead to an even distribution of the two gasses within the container.</p><p><span>Here's the full code so far for reference. First, </span><code>particles_simulation.py</code><span>, which contains the two classes:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3f412c2e-5abd-4f30-8360-01dce12df830_1326x5208.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3f412c2e-5abd-4f30-8360-01dce12df830_1326x5208.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3f412c2e-5abd-4f30-8360-01dce12df830_1326x5208.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3f412c2e-5abd-4f30-8360-01dce12df830_1326x5208.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3f412c2e-5abd-4f30-8360-01dce12df830_1326x5208.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3f412c2e-5abd-4f30-8360-01dce12df830_1326x5208.png" width="1326" height="5208" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3f412c2e-5abd-4f30-8360-01dce12df830_1326x5208.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:5208,&quot;width&quot;:1326,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:601974,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3f412c2e-5abd-4f30-8360-01dce12df830_1326x5208.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3f412c2e-5abd-4f30-8360-01dce12df830_1326x5208.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3f412c2e-5abd-4f30-8360-01dce12df830_1326x5208.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3f412c2e-5abd-4f30-8360-01dce12df830_1326x5208.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#21</figcaption></figure></div><p><span>And next, </span><code>run_demo.py</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd4fb74cc-bf80-459e-93f1-b78cbdefe69c_1200x1260.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd4fb74cc-bf80-459e-93f1-b78cbdefe69c_1200x1260.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd4fb74cc-bf80-459e-93f1-b78cbdefe69c_1200x1260.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd4fb74cc-bf80-459e-93f1-b78cbdefe69c_1200x1260.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd4fb74cc-bf80-459e-93f1-b78cbdefe69c_1200x1260.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd4fb74cc-bf80-459e-93f1-b78cbdefe69c_1200x1260.png" width="1200" height="1260" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d4fb74cc-bf80-459e-93f1-b78cbdefe69c_1200x1260.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1260,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:143366,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd4fb74cc-bf80-459e-93f1-b78cbdefe69c_1200x1260.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd4fb74cc-bf80-459e-93f1-b78cbdefe69c_1200x1260.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd4fb74cc-bf80-459e-93f1-b78cbdefe69c_1200x1260.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd4fb74cc-bf80-459e-93f1-b78cbdefe69c_1200x1260.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#22</figcaption></figure></div><p><em>Breathe! This is a long article, and there's plenty going on. If you're looking for a good place to stop for the day and return to this article another day, this is it.</em></p><p><em>Or you can proceed directly to the second half of the article, which looks at a clever optimisation technique to deal with the slowing down you'll see as you add more particles.</em></p><p><em>…and if you're pausing here, don't forget to come back later!</em></p><p>Great. Let's add more particles! I just noticed that the number of particles, currently 100, is hard-coded in the current version. Let's create a variable and assign a larger number to it:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0d9121e-14aa-4fa1-ac7d-abd96454c13e_1200x966.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0d9121e-14aa-4fa1-ac7d-abd96454c13e_1200x966.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0d9121e-14aa-4fa1-ac7d-abd96454c13e_1200x966.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0d9121e-14aa-4fa1-ac7d-abd96454c13e_1200x966.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0d9121e-14aa-4fa1-ac7d-abd96454c13e_1200x966.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0d9121e-14aa-4fa1-ac7d-abd96454c13e_1200x966.png" width="1200" height="966" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a0d9121e-14aa-4fa1-ac7d-abd96454c13e_1200x966.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:966,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:99110,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0d9121e-14aa-4fa1-ac7d-abd96454c13e_1200x966.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0d9121e-14aa-4fa1-ac7d-abd96454c13e_1200x966.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0d9121e-14aa-4fa1-ac7d-abd96454c13e_1200x966.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa0d9121e-14aa-4fa1-ac7d-abd96454c13e_1200x966.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#23</figcaption></figure></div><p>Here's the problem. This video is recorded using the same settings as all the previous videos:</p><p>It's slow. Painfully slow. Life's too short to wait for this animation to reach a state when sufficient diffusion has occurred.</p><p><span>The problem is that our nested </span><code>for</code><span> loops are not efficient. You need to loop through all the particles to move each one. You can't quite avoid that! But the current algorithm loops through each particle again for every particle. Let's go back to particles labelled with letters, and let's start with particle A. After you move particle A, you iterate through all the particles A, B, C, D, E, and so on to check whether A has collided with them.</span></p><p>Then, it's B's turn to move. And once more, you iterate through the same full list of particles A, B, C, D, E, and so on to check for collisions. And you repeat this process for every particle. The computations needed increase rapidly as you add more particles, slowing the animation. Those familiar with Big-O notation may recognise this as O(n^2) but don't worry if you're not.</p><p>However, a lot of this work is unnecessary. Take particle A, wherever it is in the container. At any point in time, it's too far away from most of the other particles to be able to collide with them. So, it's wasteful to check all the particles for particle A. Let's find a better way.</p><p>What if we divide the whole simulation area into a grid? Then, we figure out which cell each particle is in. Finally, we only check for collisions within each cell separately instead of over the whole area. This avoids checking whether a particle in one corner of the container is about to collide with a particle at the other end!</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6068811c-442a-44af-853b-d80632aafd2f_1000x700.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6068811c-442a-44af-853b-d80632aafd2f_1000x700.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6068811c-442a-44af-853b-d80632aafd2f_1000x700.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6068811c-442a-44af-853b-d80632aafd2f_1000x700.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6068811c-442a-44af-853b-d80632aafd2f_1000x700.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6068811c-442a-44af-853b-d80632aafd2f_1000x700.png" width="1000" height="700" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6068811c-442a-44af-853b-d80632aafd2f_1000x700.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:700,&quot;width&quot;:1000,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:559781,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6068811c-442a-44af-853b-d80632aafd2f_1000x700.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6068811c-442a-44af-853b-d80632aafd2f_1000x700.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6068811c-442a-44af-853b-d80632aafd2f_1000x700.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6068811c-442a-44af-853b-d80632aafd2f_1000x700.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>This approach splits the simulation area into many smaller ones. Since there are fewer particles in each cell, checking for collisions is quicker using this approach.</p><p><span>But don't take my word for it. Let's make changes to </span><code>SimulationArea</code><span> and </span><code>Particles</code><span> to implement this technique.</span></p><p><span>Let's start with </span><code>SimulationArea</code><span>, and add a new parameter to its </span><code>.__init__()</code><span> method to define the size of the grid. The efficiency gains will depend on how many cells you have in the grid. You can also work out the width and height of each cell and create a dictionary to keep track of which particles are in which cell:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F94d736d0-66dc-49a2-8f43-ba0be4a21786_1380x1470.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F94d736d0-66dc-49a2-8f43-ba0be4a21786_1380x1470.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F94d736d0-66dc-49a2-8f43-ba0be4a21786_1380x1470.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F94d736d0-66dc-49a2-8f43-ba0be4a21786_1380x1470.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F94d736d0-66dc-49a2-8f43-ba0be4a21786_1380x1470.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F94d736d0-66dc-49a2-8f43-ba0be4a21786_1380x1470.png" width="1380" height="1470" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/94d736d0-66dc-49a2-8f43-ba0be4a21786_1380x1470.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1470,&quot;width&quot;:1380,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:170450,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F94d736d0-66dc-49a2-8f43-ba0be4a21786_1380x1470.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F94d736d0-66dc-49a2-8f43-ba0be4a21786_1380x1470.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F94d736d0-66dc-49a2-8f43-ba0be4a21786_1380x1470.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F94d736d0-66dc-49a2-8f43-ba0be4a21786_1380x1470.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#24</figcaption></figure></div><p><span>The data attribute </span><code>.cells</code><span> is a dictionary. The keys are tuples of indices representing each cell in the grid. We'll use </span><em>i</em><span> and </span><em>j</em><span> to represent the indices or coordinates of the cells and </span><em>x</em><span> and </span><em>y</em><span> to represent the pixel coordinates of the particles. In this animation, the tuple </span><code>(0, 0)</code><span> represents the cell in the bottom left corner, and so on. The value associated with each key is an empty list. You'll add particles to these lists later.</span></p><p><span>The default grid size defined in the signature is 1 x 1, which is equivalent to having no grid at all. But you'll be testing this code with grids with more than one cell. So, in </span><code>run_demo.py</code><span>, you can update the call to </span><code>SimulationArea()</code><span> to set the grid size:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe5f4c336-3614-45d6-a133-1ff8cb71e7c7_1200x546.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe5f4c336-3614-45d6-a133-1ff8cb71e7c7_1200x546.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe5f4c336-3614-45d6-a133-1ff8cb71e7c7_1200x546.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe5f4c336-3614-45d6-a133-1ff8cb71e7c7_1200x546.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe5f4c336-3614-45d6-a133-1ff8cb71e7c7_1200x546.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe5f4c336-3614-45d6-a133-1ff8cb71e7c7_1200x546.png" width="1200" height="546" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e5f4c336-3614-45d6-a133-1ff8cb71e7c7_1200x546.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:546,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:43816,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe5f4c336-3614-45d6-a133-1ff8cb71e7c7_1200x546.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe5f4c336-3614-45d6-a133-1ff8cb71e7c7_1200x546.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe5f4c336-3614-45d6-a133-1ff8cb71e7c7_1200x546.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe5f4c336-3614-45d6-a133-1ff8cb71e7c7_1200x546.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#25</figcaption></figure></div><p>Since the simulation area is 1000 x 700 pixels, you can choose a grid of 10 x 7 for now to keep things simple. This means that each cell is 100 x 100 pixels.</p><p><span>Next, you need to assign each particle to one of these cells. You can start by defining a </span><code>.cell</code><span> data attribute in </span><code>Particle.__init__()</code><span>. Initially, you can assign </span><code>None</code><span> to this attribute:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e036888-5a8f-42d5-a5b0-8cc8bbe9ee4b_1200x588.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e036888-5a8f-42d5-a5b0-8cc8bbe9ee4b_1200x588.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e036888-5a8f-42d5-a5b0-8cc8bbe9ee4b_1200x588.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e036888-5a8f-42d5-a5b0-8cc8bbe9ee4b_1200x588.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e036888-5a8f-42d5-a5b0-8cc8bbe9ee4b_1200x588.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e036888-5a8f-42d5-a5b0-8cc8bbe9ee4b_1200x588.png" width="1200" height="588" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8e036888-5a8f-42d5-a5b0-8cc8bbe9ee4b_1200x588.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:588,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:29449,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e036888-5a8f-42d5-a5b0-8cc8bbe9ee4b_1200x588.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e036888-5a8f-42d5-a5b0-8cc8bbe9ee4b_1200x588.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e036888-5a8f-42d5-a5b0-8cc8bbe9ee4b_1200x588.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8e036888-5a8f-42d5-a5b0-8cc8bbe9ee4b_1200x588.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#26</figcaption></figure></div><p>The code needs to associate each particle with a cell based on the particle's position. You need to perform this operation at the start of the animation when you create each particle in a random position on the screen. However, you also need to reassign the particles to a new cell each time they move from one cell to the next as they're moving around the container.</p><p><span>Let's focus on the horizontal dimension first. You can find the difference between a particle's </span><em>x-</em><span>position and the left edge of the container and divide by the width of a cell. For example, let's consider a particle with an </span><em>x-</em><span>coordinate of -424. The simulation area is 1000 pixels wide. Therefore, the left edge is at -500 since the centre of the container is 0. The difference between these values is 76, which means that the particle is 76 pixels from the left edge.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F958bc023-0d18-4fec-a884-0ac5827f2517_1000x700.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F958bc023-0d18-4fec-a884-0ac5827f2517_1000x700.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F958bc023-0d18-4fec-a884-0ac5827f2517_1000x700.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F958bc023-0d18-4fec-a884-0ac5827f2517_1000x700.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F958bc023-0d18-4fec-a884-0ac5827f2517_1000x700.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F958bc023-0d18-4fec-a884-0ac5827f2517_1000x700.png" width="1000" height="700" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/958bc023-0d18-4fec-a884-0ac5827f2517_1000x700.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:700,&quot;width&quot;:1000,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:22508,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F958bc023-0d18-4fec-a884-0ac5827f2517_1000x700.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F958bc023-0d18-4fec-a884-0ac5827f2517_1000x700.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F958bc023-0d18-4fec-a884-0ac5827f2517_1000x700.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F958bc023-0d18-4fec-a884-0ac5827f2517_1000x700.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>If the simulation area is split into a 10 x 7 grid, the width of each cell is 100 pixels. Therefore, the particle is in the first column of cells from the left since these cells include any particles that are within 100 pixels of the left edge. The index </span><em>i</em><span> is equal to 0 for all cells in the first column. Since 76 divided by 100 is 0.76, you can find the index by taking the floor of this value, </span><code>76 // 100</code><span>.</span></p><p><span>A new method, </span><code>.assign_to_cell()</code><span>, can deal with this calculation:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fcd2894-ebd0-44b8-b232-fda5f8b27353_1254x924.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fcd2894-ebd0-44b8-b232-fda5f8b27353_1254x924.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fcd2894-ebd0-44b8-b232-fda5f8b27353_1254x924.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fcd2894-ebd0-44b8-b232-fda5f8b27353_1254x924.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fcd2894-ebd0-44b8-b232-fda5f8b27353_1254x924.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fcd2894-ebd0-44b8-b232-fda5f8b27353_1254x924.png" width="1254" height="924" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3fcd2894-ebd0-44b8-b232-fda5f8b27353_1254x924.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:924,&quot;width&quot;:1254,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:76647,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fcd2894-ebd0-44b8-b232-fda5f8b27353_1254x924.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fcd2894-ebd0-44b8-b232-fda5f8b27353_1254x924.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fcd2894-ebd0-44b8-b232-fda5f8b27353_1254x924.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3fcd2894-ebd0-44b8-b232-fda5f8b27353_1254x924.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#27</figcaption></figure></div><p><span>The local variables </span><code>cell_i</code><span> and </span><code>cell_j</code><span> contain the </span><em>i</em><span> and </span><em>j</em><span> indices that represent the cell. If you're using a 10 x 7 grid, there are ten columns of cells with indices 0 to 9. However, particles can briefly have an </span><em>x-</em><span>coordinate that's further left from the left edge. For example, if a particle is at </span><em>x </em><span>= -499 and it's moving at 2 pixels per frame, it will move to </span><em>x</em><span> = -501 in the next frame. You'll recall that you reverse the horizontal velocity of these particles so that they bounce back into the container on the following iteration. However, the calculation in </span><code>.assign_to_cell()</code><span> assigns this particle to a non-existant cell with index -1. You need to correct this and for a similar issue on the remaining three sides of the container:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F579e3c3d-3a63-4f9f-9969-57a0690cf7cb_1254x1302.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F579e3c3d-3a63-4f9f-9969-57a0690cf7cb_1254x1302.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F579e3c3d-3a63-4f9f-9969-57a0690cf7cb_1254x1302.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F579e3c3d-3a63-4f9f-9969-57a0690cf7cb_1254x1302.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F579e3c3d-3a63-4f9f-9969-57a0690cf7cb_1254x1302.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F579e3c3d-3a63-4f9f-9969-57a0690cf7cb_1254x1302.png" width="1254" height="1302" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/579e3c3d-3a63-4f9f-9969-57a0690cf7cb_1254x1302.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1302,&quot;width&quot;:1254,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:132262,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F579e3c3d-3a63-4f9f-9969-57a0690cf7cb_1254x1302.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F579e3c3d-3a63-4f9f-9969-57a0690cf7cb_1254x1302.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F579e3c3d-3a63-4f9f-9969-57a0690cf7cb_1254x1302.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F579e3c3d-3a63-4f9f-9969-57a0690cf7cb_1254x1302.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#28</figcaption></figure></div><p><span>Note that the right and top side corrections are inclusive, whereas the left and bottom ones are exclusive. A particle with </span><em>x </em><span>= 0 goes in the cell with </span><em>i </em><span>= 0, but a particle with </span><em>x </em><span>= 500 goes in the cell with </span><em>i </em><span>= 9 even though 1000 / 100 = 10.</span></p><p><span>You determined the </span><em>i</em><span> and </span><em>j</em><span> indices corresponding to the particle's cell. If this is the first time you're assigning a particle to a cell, which occurs when you create the particle at the beginning of the animation, you need to perform two steps:</span></p><ol><li><p><span>Store the </span><em>i</em><span> and </span><em>j</em><span> indices in the particle's </span><code>.cell</code><span> attribute. You set this attribute to </span><code>None</code><span> when you created it.</span></p></li><li><p><span>Place the particle in the correct list in </span><code>simulation_area.cells</code><span>. This is the dictionary containing all the particles in each cell. The tuple with the cell indices is the key in this dictionary.</span></p></li></ol><p><span>Here are these two steps added to </span><code>.assign_to_cell()</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdfecc2be-d442-4357-84e8-ced2df3271ae_1254x1554.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdfecc2be-d442-4357-84e8-ced2df3271ae_1254x1554.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdfecc2be-d442-4357-84e8-ced2df3271ae_1254x1554.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdfecc2be-d442-4357-84e8-ced2df3271ae_1254x1554.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdfecc2be-d442-4357-84e8-ced2df3271ae_1254x1554.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdfecc2be-d442-4357-84e8-ced2df3271ae_1254x1554.png" width="1254" height="1554" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/dfecc2be-d442-4357-84e8-ced2df3271ae_1254x1554.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1554,&quot;width&quot;:1254,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:164620,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdfecc2be-d442-4357-84e8-ced2df3271ae_1254x1554.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdfecc2be-d442-4357-84e8-ced2df3271ae_1254x1554.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdfecc2be-d442-4357-84e8-ced2df3271ae_1254x1554.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fdfecc2be-d442-4357-84e8-ced2df3271ae_1254x1554.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#29</figcaption></figure></div><p>However, during the rest of the animation, you need to check whether the particle has drifted into a different cell. Here are the scenarios:</p><ol><li><p>If the particle is still in the same cell, do nothing.</p></li><li><p>If the particle is no longer in the same cell:</p><ul><li><p><span>Remove it from the current cell in </span><code>simulation_area.cells</code></p></li><li><p><span>Assign the new indices to the particles </span><code>.cell</code><span> attribute</span></p></li><li><p><span>Place the particle in the new cell in </span><code>simulation_area.cells</code></p></li></ul></li></ol><p><span>Let's implement this logic by adding an </span><code>elif</code><span> clause to the </span><code>if</code><span> statement from the previous step:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff35d3911-b352-4210-813e-4fe2252701a4_1488x1806.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff35d3911-b352-4210-813e-4fe2252701a4_1488x1806.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff35d3911-b352-4210-813e-4fe2252701a4_1488x1806.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff35d3911-b352-4210-813e-4fe2252701a4_1488x1806.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff35d3911-b352-4210-813e-4fe2252701a4_1488x1806.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff35d3911-b352-4210-813e-4fe2252701a4_1488x1806.png" width="1456" height="1767" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f35d3911-b352-4210-813e-4fe2252701a4_1488x1806.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1767,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:210320,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff35d3911-b352-4210-813e-4fe2252701a4_1488x1806.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff35d3911-b352-4210-813e-4fe2252701a4_1488x1806.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff35d3911-b352-4210-813e-4fe2252701a4_1488x1806.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff35d3911-b352-4210-813e-4fe2252701a4_1488x1806.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#30</figcaption></figure></div><p>You need to call this method in two places within the class:</p><ol><li><p>When you create each particle</p></li><li><p>When you move each particle</p></li></ol><p><span>Let's conclude this section by adding these two calls at the end of </span><code>.__init__()</code><span> and </span><code>.move()</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75a5f3f7-24be-4ae5-9672-4c02b3917da8_1200x882.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75a5f3f7-24be-4ae5-9672-4c02b3917da8_1200x882.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75a5f3f7-24be-4ae5-9672-4c02b3917da8_1200x882.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75a5f3f7-24be-4ae5-9672-4c02b3917da8_1200x882.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75a5f3f7-24be-4ae5-9672-4c02b3917da8_1200x882.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75a5f3f7-24be-4ae5-9672-4c02b3917da8_1200x882.png" width="1200" height="882" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/75a5f3f7-24be-4ae5-9672-4c02b3917da8_1200x882.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:882,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:48019,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75a5f3f7-24be-4ae5-9672-4c02b3917da8_1200x882.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75a5f3f7-24be-4ae5-9672-4c02b3917da8_1200x882.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75a5f3f7-24be-4ae5-9672-4c02b3917da8_1200x882.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F75a5f3f7-24be-4ae5-9672-4c02b3917da8_1200x882.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#31</figcaption></figure></div><p><span>Let's add a few temporary lines in </span><code>run_demo.py</code><span>. You can pick one particle as a sample. Let's pick the first one in the list. Each time this particle moves, you can display the indices of the cell it belongs to on the screen.</span></p><p>Here are the changes you need. You can reduce the number of particles to 50 in this section to ensure you can spot the odd one out:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc947f60f-26a5-41a5-8b2f-a028e3819fec_1218x1134.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc947f60f-26a5-41a5-8b2f-a028e3819fec_1218x1134.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc947f60f-26a5-41a5-8b2f-a028e3819fec_1218x1134.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc947f60f-26a5-41a5-8b2f-a028e3819fec_1218x1134.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc947f60f-26a5-41a5-8b2f-a028e3819fec_1218x1134.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc947f60f-26a5-41a5-8b2f-a028e3819fec_1218x1134.png" width="1218" height="1134" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/c947f60f-26a5-41a5-8b2f-a028e3819fec_1218x1134.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1134,&quot;width&quot;:1218,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:92134,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc947f60f-26a5-41a5-8b2f-a028e3819fec_1218x1134.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc947f60f-26a5-41a5-8b2f-a028e3819fec_1218x1134.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc947f60f-26a5-41a5-8b2f-a028e3819fec_1218x1134.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fc947f60f-26a5-41a5-8b2f-a028e3819fec_1218x1134.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#32</figcaption></figure></div><p>You need to clear the writing from the previous iteration and write the new indices in each iteration. Here's the animation showing the cell indices for one of the particles. Look for the particle with a label next to it:</p><p><span>Even though the grid is not shown, you can see the particle moving from one cell to another when the indices change. Recall that you created a 10 x 7 grid. Therefore, the </span><em>i</em><span> indices range from 0 to 9 and the </span><em>j</em><span> indices from 0 to 6.</span></p><p>Before moving on to improving the main collision algorithm, let's work on another visualisation. You can pick a cell and change the colour of any particle in that cell. This will show us particles entering and exiting cells by changing their colours.</p><p>For this exercise, you can use more particles and a smaller grid size. The smaller grid size leads to larger cells, and more particles ensure that there are always several particles in the cells.</p><p><span>You can add a few more temporary lines in the </span><code>for</code><span> loop within the </span><code>while</code><span> loop:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F375f54dd-37d8-45ee-a72f-69c1968f08e8_1218x1344.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F375f54dd-37d8-45ee-a72f-69c1968f08e8_1218x1344.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F375f54dd-37d8-45ee-a72f-69c1968f08e8_1218x1344.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F375f54dd-37d8-45ee-a72f-69c1968f08e8_1218x1344.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F375f54dd-37d8-45ee-a72f-69c1968f08e8_1218x1344.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F375f54dd-37d8-45ee-a72f-69c1968f08e8_1218x1344.png" width="1218" height="1344" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/375f54dd-37d8-45ee-a72f-69c1968f08e8_1218x1344.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1344,&quot;width&quot;:1218,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:132541,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F375f54dd-37d8-45ee-a72f-69c1968f08e8_1218x1344.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F375f54dd-37d8-45ee-a72f-69c1968f08e8_1218x1344.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F375f54dd-37d8-45ee-a72f-69c1968f08e8_1218x1344.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F375f54dd-37d8-45ee-a72f-69c1968f08e8_1218x1344.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#33</figcaption></figure></div><p><span>The particles in cell </span><code>(1, 1)</code><span> will light up in a different colour to the rest. The grid is 4 x 3 in this example. Here's the animation:</span></p><p><span>The particles that enter cell </span><code>(1, 1)</code><span> turn purple, and then they turn grey again when they exit the cell.</span></p><p>You can now remove or comment out the temporary code you wrote in this section.</p><p><span>The final step is to change the iteration in the </span><code>while</code><span> loop to check for collisions only within a cell in the grid instead of across the whole simulation area.</span></p><p><span>You can loop through the values of the dictionary </span><code>simulation_area.cells</code><span>, and then you can loop through each particle in each cell. Before making the change in the animation loop, let's create a helper function in </span><code>SimulationArea</code><span> to facilitate accessing the values in </span><code>simulation_area.cells</code><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F059304f2-ea2e-4470-a596-d0f8be686fc7_1200x630.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F059304f2-ea2e-4470-a596-d0f8be686fc7_1200x630.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F059304f2-ea2e-4470-a596-d0f8be686fc7_1200x630.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F059304f2-ea2e-4470-a596-d0f8be686fc7_1200x630.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F059304f2-ea2e-4470-a596-d0f8be686fc7_1200x630.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F059304f2-ea2e-4470-a596-d0f8be686fc7_1200x630.png" width="1200" height="630" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/059304f2-ea2e-4470-a596-d0f8be686fc7_1200x630.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:630,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:42430,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F059304f2-ea2e-4470-a596-d0f8be686fc7_1200x630.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F059304f2-ea2e-4470-a596-d0f8be686fc7_1200x630.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F059304f2-ea2e-4470-a596-d0f8be686fc7_1200x630.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F059304f2-ea2e-4470-a596-d0f8be686fc7_1200x630.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#34</figcaption></figure></div><p><span>This method ensures that anyone using the </span><code>SimulationArea</code><span> doesn't need to dive too deeply into the class's implementation. Note that I'm not including docstrings in this example since it's part of a detailed tutorial. However, these methods normally have docstrings to assist users.</span></p><p><span>Finally, let's update the animation loop in </span><code>run_demo.py</code><span>. You can also go back to using 500 particles, which led to a very slow animation earlier in this tutorial. You should increase the number of cells by returning to a grid size of 10 x 7:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43ff45c5-5367-48cf-9b49-b4ce78f18bb8_1272x1386.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43ff45c5-5367-48cf-9b49-b4ce78f18bb8_1272x1386.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43ff45c5-5367-48cf-9b49-b4ce78f18bb8_1272x1386.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43ff45c5-5367-48cf-9b49-b4ce78f18bb8_1272x1386.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43ff45c5-5367-48cf-9b49-b4ce78f18bb8_1272x1386.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43ff45c5-5367-48cf-9b49-b4ce78f18bb8_1272x1386.png" width="1272" height="1386" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/43ff45c5-5367-48cf-9b49-b4ce78f18bb8_1272x1386.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1386,&quot;width&quot;:1272,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:163128,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43ff45c5-5367-48cf-9b49-b4ce78f18bb8_1272x1386.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43ff45c5-5367-48cf-9b49-b4ce78f18bb8_1272x1386.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43ff45c5-5367-48cf-9b49-b4ce78f18bb8_1272x1386.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43ff45c5-5367-48cf-9b49-b4ce78f18bb8_1272x1386.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#35</figcaption></figure></div><p><em>A reminder that the highlighted lines are the ones with changes in the code. However, the rest of the lines in the </em><code>while</code><span> loop have also changed as their level of indentation increased.</span></p><p>You divide the animation into several smaller units within each cell. Particles can still move from one cell to another, of course. However, the time-consuming collision checks are significantly reduced.</p><p>Here's the final animation:</p><p>Compare this with the attempt to run the basic version of the simulation with 500 particles! This simulation is much smoother. In the appendix, I'll compare the performance of the two methods and the effect of different grid sizes.</p><p>You can see the gradual diffusion of the two gasses leading to a homogenous distribution after some time. The random movement of particles and the collisions between them are all we need to explain diffusion. Feynman explains many physical processes using this type of visualisation—but using diagrams and imagination instead of Python demonstrations!</p><p><span>The final versions of </span><code>particles_simulation.py</code><span> and </span><code>run_demo.py</code><span> are available below, after the conclusion.</span></p><p>A reminder: I'm simplifying physics concepts and cutting some corners since this is a demonstration rather than a more rigorous real-world simulation. For example, if two particles are sufficiently close to each other to collide but are on opposite sides of the boundary between two cells, they won't collide in the code. You could place particles close enough to a boundary in two cells, but you'll need to tidy up other parts of the code for this since the code currently assumes that a particle can only be in one cell at any one time.</p><p>This article is already long—very long. So, I'll conclude the main article here. However, I can't resist adding a bit more in two appendices. Firstly, I'll compare the efficiency gains of this method by comparing different grid sizes—and none at all! Secondly, I'll add a metric to monitor the diffusion more quantitatively.</p><p><span>And if that's not enough, I'll follow this article with Part 2 in a few weeks, exploring yet another technique using Python tools other than </span><code>turtle</code><span>.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff4d08f62-c5b8-4307-8c88-10aea921585a_1024x1024.webp" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff4d08f62-c5b8-4307-8c88-10aea921585a_1024x1024.webp 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff4d08f62-c5b8-4307-8c88-10aea921585a_1024x1024.webp 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff4d08f62-c5b8-4307-8c88-10aea921585a_1024x1024.webp 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff4d08f62-c5b8-4307-8c88-10aea921585a_1024x1024.webp 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff4d08f62-c5b8-4307-8c88-10aea921585a_1024x1024.webp" width="522" height="522" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f4d08f62-c5b8-4307-8c88-10aea921585a_1024x1024.webp&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1024,&quot;width&quot;:1024,&quot;resizeWidth&quot;:522,&quot;bytes&quot;:1369264,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/webp&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff4d08f62-c5b8-4307-8c88-10aea921585a_1024x1024.webp 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff4d08f62-c5b8-4307-8c88-10aea921585a_1024x1024.webp 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff4d08f62-c5b8-4307-8c88-10aea921585a_1024x1024.webp 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff4d08f62-c5b8-4307-8c88-10aea921585a_1024x1024.webp 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><em>Code in this article uses Python 3.12</em></p><div><figure><a target="_blank" href="https://thepythoncodingplace.com/free-one-week-python-coding-pass/" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F140a9575-fb85-42f8-bdfc-1315694f60a9_2080x600.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F140a9575-fb85-42f8-bdfc-1315694f60a9_2080x600.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F140a9575-fb85-42f8-bdfc-1315694f60a9_2080x600.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F140a9575-fb85-42f8-bdfc-1315694f60a9_2080x600.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F140a9575-fb85-42f8-bdfc-1315694f60a9_2080x600.png" width="1456" height="420" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/140a9575-fb85-42f8-bdfc-1315694f60a9_2080x600.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:420,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1012371,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:&quot;https://thepythoncodingplace.com/free-one-week-python-coding-pass/&quot;,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F140a9575-fb85-42f8-bdfc-1315694f60a9_2080x600.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F140a9575-fb85-42f8-bdfc-1315694f60a9_2080x600.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F140a9575-fb85-42f8-bdfc-1315694f60a9_2080x600.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F140a9575-fb85-42f8-bdfc-1315694f60a9_2080x600.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><pre><code>&nbsp;# particles_simulation.py
&nbsp;​
&nbsp;import random
&nbsp;import turtle
&nbsp;​
&nbsp;class SimulationArea:
&nbsp; &nbsp; &nbsp;def __init__(self, width, height, colour="white", cell_grid=(1, 1)):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.width = width
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.height = height
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# Define the edges of the simulation area as integers
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# (we'll need them as integers later)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.left_edge = -width // 2
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.right_edge = width // 2
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.top_edge = height // 2
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.bottom_edge = -height // 2
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# Create a turtle screen object
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.window = turtle.Screen()
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.window.setup(width, height)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.window.tracer(0)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.window.bgcolor(colour)
&nbsp;​
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# Define the cell grid
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.cell_grid = cell_grid
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.cell_width = width / cell_grid[0]
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.cell_height = height / cell_grid[1]
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.cells = {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  (i, j): []
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for i in range(cell_grid[0])
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for j in range(cell_grid[1])
&nbsp; &nbsp; &nbsp; &nbsp;  }
&nbsp;​
&nbsp; &nbsp; &nbsp;def update(self):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.window.update()
&nbsp;​
&nbsp; &nbsp; &nbsp;def set_title(self, title):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.window.title(title)
&nbsp;​
&nbsp; &nbsp; &nbsp;@staticmethod
&nbsp; &nbsp; &nbsp;def run_mainloop():
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;turtle.mainloop()
&nbsp;​
&nbsp; &nbsp; &nbsp;def get_sequence_of_cells(self):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return self.cells.values()
&nbsp;​
&nbsp;class Particle:
&nbsp; &nbsp; &nbsp;MAX_VELOCITY = 4
&nbsp;​
&nbsp; &nbsp; &nbsp;def __init__(
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;simulation_area: SimulationArea,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;position=None,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;velocity=None,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;colour="black",
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;size_factor=0.5,
&nbsp; &nbsp;  ):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.simulation_area = simulation_area
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.particle = turtle.Turtle()
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.particle.shape("circle")
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.particle.color(colour)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.particle.penup()
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.particle.shapesize(size_factor)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if position is None:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;position = [
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;random.randint(
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.simulation_area.left_edge,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.simulation_area.right_edge,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  ),
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;random.randint(
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.simulation_area.bottom_edge,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.simulation_area.top_edge,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  ),
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  ]
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.position = position
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if velocity is None:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;velocity = [
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;random.randint(
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-self.MAX_VELOCITY * 10, self.MAX_VELOCITY * 10
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  ) / 10,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;random.randint(
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-self.MAX_VELOCITY * 10, self.MAX_VELOCITY * 10
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  ) / 10,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  ]
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.velocity = velocity
&nbsp;​
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.in_collision_with = []
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.cell = None
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.assign_to_cell()
&nbsp;​
&nbsp; &nbsp; &nbsp;def assign_to_cell(self):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# Convert the x and y coordinates to cell indices i and j
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cell_i = int(
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  (self.position[0] - self.simulation_area.left_edge)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// self.simulation_area.cell_width
&nbsp; &nbsp; &nbsp; &nbsp;  )
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cell_j = int(
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  (self.position[1] - self.simulation_area.bottom_edge)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// self.simulation_area.cell_height
&nbsp; &nbsp; &nbsp; &nbsp;  )
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# Ensure the cell indices are within the grid
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if cell_i &lt; 0:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cell_i = 0
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;elif cell_i &gt;= self.simulation_area.cell_grid[0]:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cell_i = self.simulation_area.cell_grid[0] - 1
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if cell_j &lt; 0:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cell_j = 0
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;elif cell_j &gt;= self.simulation_area.cell_grid[1]:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cell_j = self.simulation_area.cell_grid[1] - 1
&nbsp;​
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# Add the particle if it's not already in the
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# cell (first iteration)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if not self.cell:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.cell = (cell_i, cell_j)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.simulation_area.cells[self.cell].append(self)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;elif self.cell != (cell_i, cell_j):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# Remove the particle from the current cell
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.simulation_area.cells[self.cell].remove(self)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# Update the cell assignment
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.cell = (cell_i, cell_j)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# Add the particle to the new cell
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.simulation_area.cells[self.cell].append(self)
&nbsp;​
&nbsp; &nbsp; &nbsp;def move(self):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.position[0] += self.velocity[0]
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.position[1] += self.velocity[1]
&nbsp;​
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# Bounce off the edges
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.position[0] &lt; self.simulation_area.left_edge
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;or self.position[0] &gt; self.simulation_area.right_edge
&nbsp; &nbsp; &nbsp; &nbsp;  ):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.velocity[0] *= -1
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.position[1] &lt; self.simulation_area.bottom_edge
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;or self.position[1] &gt; self.simulation_area.top_edge
&nbsp; &nbsp; &nbsp; &nbsp;  ):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.velocity[1] *= -1
&nbsp;​
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.particle.setposition(self.position)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.assign_to_cell()
&nbsp;​
&nbsp; &nbsp; &nbsp;def check_collision(self, other_particle):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return (
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.particle.distance(other_particle.particle)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt; 20 * self.particle.shapesize()[0]
&nbsp; &nbsp; &nbsp; &nbsp;  )
&nbsp;​
&nbsp; &nbsp; &nbsp;def collide(self, other_particle):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"""
&nbsp; &nbsp; &nbsp; &nbsp;  This assumes that the particles are of equal mass and
&nbsp; &nbsp; &nbsp; &nbsp;  that the collision is a head-on elastic collision.
&nbsp; &nbsp; &nbsp; &nbsp;  """
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if other_particle is self:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if self not in other_particle.in_collision_with:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.velocity, other_particle.velocity = (
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;other_particle.velocity,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.velocity,
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  )
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# Keep a record of collision in other_particle.
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# No need to keep it in self
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;other_particle.in_collision_with.append(self)
&nbsp;​
&nbsp; &nbsp; &nbsp;def remove_collision(self, other_particle):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.in_collision_with.remove(other_particle)
&nbsp;​
&nbsp; &nbsp; &nbsp;def assign_colour(self, colour):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.particle.color(colour)
&nbsp;​
&nbsp; &nbsp; &nbsp;def get_position(self):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return self.position</code></pre><pre><code>&nbsp;# run_demo.py
&nbsp;​
&nbsp;from collections import deque
&nbsp;​
&nbsp;from particles_simulation import SimulationArea, Particle
&nbsp;​
&nbsp;n_particles = 500
&nbsp;​
&nbsp;simulation_area = SimulationArea(1000, 700, cell_grid=(10, 7))
&nbsp;simulation_area.set_title("Diffusion Demo")
&nbsp;​
&nbsp;particles = []
&nbsp;for _ in range(n_particles):
&nbsp; &nbsp; &nbsp;particle = Particle(simulation_area)
&nbsp; &nbsp; &nbsp;if particle.get_position()[0] &lt; 0:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;particle.assign_colour("#1A6B72")
&nbsp; &nbsp; &nbsp;else:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;particle.assign_colour("#FDB33B")
&nbsp; &nbsp; &nbsp;particles.append(particle)
&nbsp;​
&nbsp;# Animation loop
&nbsp;while True:
&nbsp; &nbsp; &nbsp;for cell in simulation_area.get_sequence_of_cells():
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for particle in cell:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;particle.move()
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for other_particle in cell:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if particle.check_collision(other_particle):
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;particle.collide(other_particle)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;elif other_particle in particle.in_collision_with:
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;particle.remove_collision(other_particle)
&nbsp;​
&nbsp; &nbsp; &nbsp;simulation_area.update()</code></pre><p><span>You can see the difference between the animation speeds when you use the grid approach. But let's time the execution under different grid conditions. To make the comparisons, you can set a seed in the </span><code>random</code><span> module to ensure all the starting conditions are identical:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5323c611-309c-46ce-aa9a-452a3d5f1921_1200x504.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5323c611-309c-46ce-aa9a-452a3d5f1921_1200x504.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5323c611-309c-46ce-aa9a-452a3d5f1921_1200x504.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5323c611-309c-46ce-aa9a-452a3d5f1921_1200x504.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5323c611-309c-46ce-aa9a-452a3d5f1921_1200x504.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5323c611-309c-46ce-aa9a-452a3d5f1921_1200x504.png" width="1200" height="504" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/5323c611-309c-46ce-aa9a-452a3d5f1921_1200x504.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:504,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:30665,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5323c611-309c-46ce-aa9a-452a3d5f1921_1200x504.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5323c611-309c-46ce-aa9a-452a3d5f1921_1200x504.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5323c611-309c-46ce-aa9a-452a3d5f1921_1200x504.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F5323c611-309c-46ce-aa9a-452a3d5f1921_1200x504.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#36</figcaption></figure></div><p><span>You can use any integer as an argument in </span><code>random.seed()</code><span>.</span></p><p><span>You can also comment the </span><code>.update()</code><span> call out in the animation loop to prevent the frames from being displayed. This allows you to time the operations in the </span><code>while</code><span> loop without including the time it takes to update the screen. Note that as a result of this change, you won't see any output when you run this code.</span></p><p>Finally, you can run the animation for a fixed number of iterations and time the execution time:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1165492c-44d9-4a65-8332-f09c1e391e5a_1398x1260.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1165492c-44d9-4a65-8332-f09c1e391e5a_1398x1260.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1165492c-44d9-4a65-8332-f09c1e391e5a_1398x1260.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1165492c-44d9-4a65-8332-f09c1e391e5a_1398x1260.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1165492c-44d9-4a65-8332-f09c1e391e5a_1398x1260.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1165492c-44d9-4a65-8332-f09c1e391e5a_1398x1260.png" width="1398" height="1260" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1165492c-44d9-4a65-8332-f09c1e391e5a_1398x1260.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1260,&quot;width&quot;:1398,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:132999,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1165492c-44d9-4a65-8332-f09c1e391e5a_1398x1260.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1165492c-44d9-4a65-8332-f09c1e391e5a_1398x1260.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1165492c-44d9-4a65-8332-f09c1e391e5a_1398x1260.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1165492c-44d9-4a65-8332-f09c1e391e5a_1398x1260.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#37</figcaption></figure></div><p><span>The </span><code>cell_grid</code><span> argument in </span><code>SimulationArea</code><span> is </span><code>(1, 1)</code><span>, which means that you perform the animation using a single simulation area. This is equivalent to the first version of the code you created earlier in this tutorial before you implemented the grid approach.</span></p><p><span>You also replace the </span><code>while</code><span> loop with a </span><code>for</code><span> loop to time how long it takes the simulation to run for 500 iterations. The execution time will vary depending on your computing setup. I'll present the values I got on my system here:</span></p><pre><code>&nbsp;Time elapsed with grid (1, 1): 87.53 s</code></pre><p>Next, you can use a 4 x 3 grid, which has twelve cells:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba4e13fe-be14-4204-b898-7299a4aaa18c_1200x420.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba4e13fe-be14-4204-b898-7299a4aaa18c_1200x420.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba4e13fe-be14-4204-b898-7299a4aaa18c_1200x420.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba4e13fe-be14-4204-b898-7299a4aaa18c_1200x420.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba4e13fe-be14-4204-b898-7299a4aaa18c_1200x420.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba4e13fe-be14-4204-b898-7299a4aaa18c_1200x420.png" width="1200" height="420" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ba4e13fe-be14-4204-b898-7299a4aaa18c_1200x420.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:420,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:13355,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba4e13fe-be14-4204-b898-7299a4aaa18c_1200x420.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba4e13fe-be14-4204-b898-7299a4aaa18c_1200x420.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba4e13fe-be14-4204-b898-7299a4aaa18c_1200x420.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fba4e13fe-be14-4204-b898-7299a4aaa18c_1200x420.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#38</figcaption></figure></div><p>Here's the output:</p><pre><code>&nbsp;Time elapsed with grid (4, 3): 8.61 s</code></pre><p>And finally, a 10 x 7 grid, which has seventy cells:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F81ec4de4-33ff-4ee9-b957-75116009bd6b_1200x420.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F81ec4de4-33ff-4ee9-b957-75116009bd6b_1200x420.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F81ec4de4-33ff-4ee9-b957-75116009bd6b_1200x420.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F81ec4de4-33ff-4ee9-b957-75116009bd6b_1200x420.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F81ec4de4-33ff-4ee9-b957-75116009bd6b_1200x420.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F81ec4de4-33ff-4ee9-b957-75116009bd6b_1200x420.png" width="1200" height="420" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/81ec4de4-33ff-4ee9-b957-75116009bd6b_1200x420.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:420,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:13715,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F81ec4de4-33ff-4ee9-b957-75116009bd6b_1200x420.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F81ec4de4-33ff-4ee9-b957-75116009bd6b_1200x420.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F81ec4de4-33ff-4ee9-b957-75116009bd6b_1200x420.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F81ec4de4-33ff-4ee9-b957-75116009bd6b_1200x420.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#39</figcaption></figure></div><p>The 500 iterations run much faster now:</p><pre><code>&nbsp;Time elapsed with grid (10, 7): 2.87 s</code></pre><p>Here's a table comparing the output for several grid sizes:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff7946c90-cef5-4773-b2bb-379ed87e0d3d_2484x1138.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff7946c90-cef5-4773-b2bb-379ed87e0d3d_2484x1138.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff7946c90-cef5-4773-b2bb-379ed87e0d3d_2484x1138.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff7946c90-cef5-4773-b2bb-379ed87e0d3d_2484x1138.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff7946c90-cef5-4773-b2bb-379ed87e0d3d_2484x1138.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff7946c90-cef5-4773-b2bb-379ed87e0d3d_2484x1138.png" width="1456" height="667" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f7946c90-cef5-4773-b2bb-379ed87e0d3d_2484x1138.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:667,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:136118,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff7946c90-cef5-4773-b2bb-379ed87e0d3d_2484x1138.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff7946c90-cef5-4773-b2bb-379ed87e0d3d_2484x1138.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff7946c90-cef5-4773-b2bb-379ed87e0d3d_2484x1138.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff7946c90-cef5-4773-b2bb-379ed87e0d3d_2484x1138.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>Recall that these times represent the code when it doesn't display each frame on the screen. However, when the loop execution time is small, the time it takes to display the animation becomes a bottleneck in the full animation. For example, the 10 x 7 grid animation takes over 12 seconds to run when you include </span><code>.update()</code><span> in the animation loop to draw each frame, even though the same animation clocked under 3 seconds when you don't display the frames.</span></p><p><span>At the start of the animation, all the green particles are in the left half, and all the orange particles are in the right half. At the end of the animation, both types of particles are spread across the whole container. You can quantify this using the mean </span><em>x-</em><span>position of all the green and orange particles. Let's make some changes to the code to implement this:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3d596715-4d97-4192-9127-89c5422dea2b_1344x2268.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3d596715-4d97-4192-9127-89c5422dea2b_1344x2268.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3d596715-4d97-4192-9127-89c5422dea2b_1344x2268.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3d596715-4d97-4192-9127-89c5422dea2b_1344x2268.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3d596715-4d97-4192-9127-89c5422dea2b_1344x2268.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3d596715-4d97-4192-9127-89c5422dea2b_1344x2268.png" width="1344" height="2268" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3d596715-4d97-4192-9127-89c5422dea2b_1344x2268.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:2268,&quot;width&quot;:1344,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:314882,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3d596715-4d97-4192-9127-89c5422dea2b_1344x2268.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3d596715-4d97-4192-9127-89c5422dea2b_1344x2268.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3d596715-4d97-4192-9127-89c5422dea2b_1344x2268.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3d596715-4d97-4192-9127-89c5422dea2b_1344x2268.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>#40</figcaption></figure></div><p><span>You run this simulation with 200 particles and a grid size of 10 x 7. You also add a data attribute </span><code>.colour</code><span> directly in the </span><code>for</code><span> loop when creating the particles to keep a record of the type of particle you create. Another variable keeps a record of how many particles there are of each colour.</span></p><p><span>You store the mean </span><em>x-</em><span>coordinates in each frame in a deque instead of a list. You set the deque's maximum length to 500 to keep only the values from the most recent 500 frames. The display on the window's title bar shows the average of these last 500 frames. This moving average minimises noise in the value displayed.</span></p><p><span>Here's the animation showing the average </span><em>x-</em><span>positions approach 0 as the simulation progresses. The particles’ </span><code>.MAX_VELOCITY</code><span> has been changed to 4 for this animation:</span></p><ul><li><p><span>I'm making a number of </span><strong>free passes</strong><span> available for readers of The Stack to access the learning platform at </span><strong>The Python Coding Place</strong><span>. The passes give </span><strong>access to all the video courses for one week and a live session</strong><span>, similar to the ones I have weekly with members of The Python Coding Place. Here's the link to get your one week's pass:</span></p><p data-attrs="{&quot;url&quot;:&quot;https://thepythoncodingplace.com/free-one-week-python-coding-pass/&quot;,&quot;text&quot;:&quot;Get Free One Week Pass&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://thepythoncodingplace.com/free-one-week-python-coding-pass/" rel=""><span>Get Free One Week Pass</span></a></p></li><li><p><span>Thank you to all those who supported me with a one-off donation recently. This means a lot and helps me focus on writing more articles and keeping more of these articles free for everyone. Here's the link again for anyone who wants to make a one-off donation to support The Python Coding Stack</span><br></p><p data-attrs="{&quot;url&quot;:&quot;https://buy.stripe.com/00g3de2iGdgg4gg7su&quot;,&quot;text&quot;:&quot;Make a one-off contribution&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://buy.stripe.com/00g3de2iGdgg4gg7su" rel=""><span>Make a one-off contribution</span></a></p></li><li><p><span>The </span><a href="https://thepythoncodingplace.com/the-python-coding-book?utm_source=substack" rel="">Python Coding Book is available</a><span> (Ebook and paperback). This is the First Edition, which follows from the "Zeroth" Edition that has been available online for a while—Just ask Google for "python book"!</span></p></li><li><p>And if you read the book already, I'd appreciate a review on Amazon. These things matter so much for individual authors!</p></li><li><p><span>I'm also releasing </span><a href="https://thepythoncodingplace.thinkific.com/courses/the-numpy-mindset-digital-edition" rel="">The NumPy Mindset</a><span> at the moment. Currently, this is available as an Early Release—I'm publishing chapters as and when they're ready. Members of The Python Coding Place already have access to this Early Release. Everyone else can </span><a href="https://thepythoncodingplace.thinkific.com/courses/the-numpy-mindset-digital-edition" rel="">get it here</a><span>—You'll get the final ebook version too once it's ready if you get the Early Release version, of course!</span></p></li><li><p><span>And for those who want to join </span><em>The Python Coding Place</em><span> to access all of my video courses—past and future—join regular live sessions, and interact with me and other learners on the members-only forum, here's the link:</span><br></p><p data-attrs="{&quot;url&quot;:&quot;https://thepythoncodingplace.com?utm_source=substack&quot;,&quot;text&quot;:&quot;Join The Python Coding Place&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://thepythoncodingplace.com/?utm_source=substack" rel=""><span>Join The Python Coding Place</span></a></p></li><li><p>Any questions? Just ask…</p></li></ul><h5>Code Block #1</h5><pre><code><code># particles_simulation.py

import turtle

class SimulationArea:
    def __init__(self, width, height, colour="white"):
        self.width = width
        self.height = height
        # Define the edges of the simulation area as integers
        # (we'll need them as integers later)
        self.left_edge = -width // 2
        self.right_edge = width // 2
        self.top_edge = height // 2
        self.bottom_edge = -height // 2
        # Create a turtle screen object
        self.window = turtle.Screen()
        self.window.setup(width, height)
        self.window.tracer(0)
        self.window.bgcolor(colour)
</code></code></pre><h5>Code Block #2</h5><pre><code><code># particles_simulation.py

import turtle

class SimulationArea:
    def __init__(self, width, height, colour="white"):
        # ...

    def update(self):
        self.window.update()

    def set_title(self, title):
        self.window.title(title)
        
    @staticmethod
    def run_mainloop():
        turtle.mainloop()
</code></code></pre><h5>Code Block #3</h5><pre><code><code># run_demo.py

from particles_simulation import SimulationArea

simulation_area = SimulationArea(1000, 700)
simulation_area.set_title("Diffusion Demo")

simulation_area.run_mainloop()
</code></code></pre><h5>Code Block #4</h5><pre><code><code># particles_simulation.py

import turtle

class SimulationArea:
    # ...

class Particle:
    def __init__(
        self,
        simulation_area: SimulationArea,
        position=None,
        velocity=None,
        colour="black",
        size_factor=0.5,
    ):
        self.simulation_area = simulation_area
        self.particle = turtle.Turtle()
        self.particle.shape("circle")
        self.particle.color(colour)
        self.particle.penup()
        self.particle.shapesize(size_factor)
</code></code></pre><h5>Code Block #5</h5><pre><code><code># run_demo.py

from particles_simulation import SimulationArea, Particle

simulation_area = SimulationArea(1000, 700)
simulation_area.set_title("Diffusion Demo")

test_particle = Particle(simulation_area)
simulation_area.update()

simulation_area.run_mainloop()
</code></code></pre><h5>Code Block #6</h5><pre><code><code># particles_simulation.py

import random
import turtle

class SimulationArea:
    # ...

class Particle:
    MAX_VELOCITY = 2

    def __init__(
        self,
        simulation_area: SimulationArea,
        position=None,
        velocity=None,
        colour="black",
        size_factor=0.5,
    ):
        
        # ... &lt;Rest of `__init__()` not shown&gt;
        
        # Set a random position if not provided
        if position is None:
            position = [
                random.randint(
                    self.simulation_area.left_edge,
                    self.simulation_area.right_edge,
                ),
                random.randint(
                    self.simulation_area.bottom_edge,
                    self.simulation_area.top_edge,
                ),
            ]
        self.position = position
        
        # Set a random velocity if not provided
        if velocity is None:
            velocity = [
                random.randint(
                    -self.MAX_VELOCITY * 10, self.MAX_VELOCITY * 10
                ) / 10,
                random.randint(
                    -self.MAX_VELOCITY * 10, self.MAX_VELOCITY * 10
                ) / 10,
            ]
        self.velocity = velocity
</code></code></pre><h5>Code Block #7</h5><pre><code><code># run_demo.py

from particles_simulation import SimulationArea, Particle

simulation_area = SimulationArea(1000, 700)
simulation_area.set_title("Diffusion Demo")

particles = [Particle(simulation_area) for _ in range(100)]

simulation_area.update()
simulation_area.run_mainloop()
</code></code></pre><h5>Code Block #8</h5><pre><code><code># particles_simulation.py

import random
import turtle

class SimulationArea:
    # ...

class Particle:
    # ...
        
    def move(self):
        self.position[0] += self.velocity[0]
        self.position[1] += self.velocity[1]
        self.particle.setposition(self.position)
</code></code></pre><h5>Code Block #9</h5><pre><code><code># run_demo.py

from particles_simulation import SimulationArea, Particle

simulation_area = SimulationArea(1000, 700)
simulation_area.set_title("Diffusion Demo")

particles = [Particle(simulation_area) for _ in range(100)]

## You can now remove these two lines since there's a `while` loop
# simulation_area.update()
# simulation_area.run_mainloop()

# Animation loop
while True:
    for particle in particles:
        particle.move()
    simulation_area.update()
</code></code></pre><h5>Code Block #10</h5><pre><code><code># particles_simulation.py

import random
import turtle

class SimulationArea:
    # ...

class Particle:
    # ...

    def move(self):
        self.position[0] += self.velocity[0]
        self.position[1] += self.velocity[1]

        # Bounce off the edges
        if (
                self.position[0] &lt; self.simulation_area.left_edge
                or self.position[0] &gt; self.simulation_area.right_edge
        ):
            self.velocity[0] *= -1
        if (
                self.position[1] &lt; self.simulation_area.bottom_edge
                or self.position[1] &gt; self.simulation_area.top_edge
        ):
            self.velocity[1] *= -1

        self.particle.setposition(self.position)
</code></code></pre><h5>Code Block #11</h5><pre><code><code># particles_simulation.py

import random
import turtle

class SimulationArea:
    # ...

class Particle:
    # ...

    def check_collision(self, other_particle):
        return (
            self.particle.distance(other_particle.particle)
            &lt; 20 * self.particle.shapesize()[0]
        )
</code></code></pre><h5>Code Block #12</h5><pre><code><code># particles_simulation.py

import random
import turtle

class SimulationArea:
    # ...

class Particle:
    # ...

        def collide(self, other_particle):
        """
        This assumes that the particles are of equal mass and
        that the collision is a head-on elastic collision.
        """
        self.velocity, other_particle.velocity = other_particle.velocity, self.velocity
</code></code></pre><h5>Code Block #13</h5><pre><code><code># run_demo.py

from particles_simulation import SimulationArea, Particle

simulation_area = SimulationArea(1000, 700)
simulation_area.set_title("Diffusion Demo")

particles = [Particle(simulation_area) for _ in range(100)]

# Animation loop
while True:
    for particle in particles:
        particle.move()
        for other_particle in particles:
            if particle.check_collision(other_particle):
                particle.collide(other_particle)

    simulation_area.update()
</code></code></pre><h5>Code Block #14</h5><pre><code><code># particles_simulation.py

import random
import turtle

class SimulationArea:
    # ...

class Particle:
    # ...

    def collide(self, other_particle):
        """
        This assumes that the particles are of equal mass and
        that the collision is a head-on elastic collision.
        """
        if other_particle is self:
            return
        self.velocity, other_particle.velocity = (
            other_particle.velocity,
            self.velocity,
        )

</code></code></pre><h5>Code Block #15</h5><pre><code><code># particles_simulation.py

# ...

class Particle:
    MAX_VELOCITY = 2

    def __init__(...):  # Parameters not displayed
       # ...
        
        self.in_collision_with = []

    # ...
</code></code></pre><h5>Code Block #16</h5><pre><code><code># particles_simulation.py

# ...

class Particle:
    # ...

    def collide(self, other_particle):
        """
        This assumes that the particles are of equal mass and
        that the collision is a head-on elastic collision.
        """
        if other_particle is self:
            return
        if self not in other_particle.in_collision_with:
            self.velocity, other_particle.velocity = (
                other_particle.velocity,
                self.velocity,
            )
            # Keep a record of collision in other_particle.
            # No need to keep it in self
            other_particle.in_collision_with.append(self)
</code></code></pre><h5>Code Block #17</h5><pre><code><code># particles_simulation.py

# ...

class Particle:
    # ...

    def remove_collision(self, other_particle):
        self.in_collision_with.remove(other_particle)
</code></code></pre><h5>Code Block #18</h5><pre><code><code># run_demo.py

# ...

# Animation loop
while True:
    for particle in particles:
        particle.move()
        for other_particle in particles:
            if particle.check_collision(other_particle):
                particle.collide(other_particle)
            elif other_particle in particle.in_collision_with:
                    particle.remove_collision(other_particle)

    simulation_area.update()
</code></code></pre><h5>Code Block #19</h5><pre><code><code># particles_simulation.py

# ...

class Particle:
    # ...

    def assign_colour(self, colour):
        self.particle.color(colour)

    def get_position(self):
        return self.position
</code></code></pre><h5>Code Block #20</h5><pre><code><code># run_demo.py

from particles_simulation import SimulationArea, Particle

simulation_area = SimulationArea(1000, 700)
simulation_area.set_title("Diffusion Demo")

particles = []
for _ in range(100):
    particle = Particle(simulation_area)
    if particle.get_position()[0] &lt; 0:
        particle.assign_colour("#1A6B72")
    else:
        particle.assign_colour("#FDB33B")
    particles.append(particle)

# Animation loop
# ...
</code></code></pre><h5>Code Block #21</h5><pre><code><code># particles_simulation.py

import random
import turtle

class SimulationArea:
    def __init__(self, width, height, colour="white"):
        self.width = width
        self.height = height
        # Define the edges of the simulation area as integers
        # (we'll need them as integers later)
        self.left_edge = -width // 2
        self.right_edge = width // 2
        self.top_edge = height // 2
        self.bottom_edge = -height // 2
        # Create a turtle screen object
        self.window = turtle.Screen()
        self.window.setup(width, height)
        self.window.tracer(0)
        self.window.bgcolor(colour)

    def update(self):
        self.window.update()

    def set_title(self, title):
        self.window.title(title)

    @staticmethod
    def run_mainloop():
        turtle.mainloop()

class Particle:
    MAX_VELOCITY = 2

    def __init__(
        self,
        simulation_area: SimulationArea,
        position=None,
        velocity=None,
        colour="black",
        size_factor=0.5,
    ):
        self.simulation_area = simulation_area
        self.particle = turtle.Turtle()
        self.particle.shape("circle")
        self.particle.color(colour)
        self.particle.penup()
        self.particle.shapesize(size_factor)
        if position is None:
            position = [
                random.randint(
                    self.simulation_area.left_edge,
                    self.simulation_area.right_edge,
                ),
                random.randint(
                    self.simulation_area.bottom_edge,
                    self.simulation_area.top_edge,
                ),
            ]
        self.position = position
        if velocity is None:
            velocity = [
                random.randint(
                    -self.MAX_VELOCITY * 10, self.MAX_VELOCITY * 10
                ) / 10,
                random.randint(
                    -self.MAX_VELOCITY * 10, self.MAX_VELOCITY * 10
                ) / 10,
            ]
        self.velocity = velocity

        self.in_collision_with = []

    def move(self):
        self.position[0] += self.velocity[0]
        self.position[1] += self.velocity[1]

        # Bounce off the edges
        if (
                self.position[0] &lt; self.simulation_area.left_edge
                or self.position[0] &gt; self.simulation_area.right_edge
        ):
            self.velocity[0] *= -1
        if (
                self.position[1] &lt; self.simulation_area.bottom_edge
                or self.position[1] &gt; self.simulation_area.top_edge
        ):
            self.velocity[1] *= -1

        self.particle.setposition(self.position)

    def check_collision(self, other_particle):
        return (
            self.particle.distance(other_particle.particle)
            &lt; 20 * self.particle.shapesize()[0]
        )

    def collide(self, other_particle):
        """
        This assumes that the particles are of equal mass and
        that the collision is a head-on elastic collision.
        """
        if other_particle is self:
            return
        if self not in other_particle.in_collision_with:
            self.velocity, other_particle.velocity = (
                other_particle.velocity,
                self.velocity,
            )
            # Keep a record of collision in other_particle.
            # No need to keep it in self
            other_particle.in_collision_with.append(self)

    def remove_collision(self, other_particle):
        self.in_collision_with.remove(other_particle)

    def assign_colour(self, colour):
        self.particle.color(colour)

    def get_position(self):
        return self.position
</code></code></pre><h5>Code Block #22</h5><pre><code><code># run_demo.py

from particles_simulation import SimulationArea, Particle

simulation_area = SimulationArea(1000, 700)
simulation_area.set_title("Diffusion Demo")

particles = []
for _ in range(100):
    particle = Particle(simulation_area)
    if particle.get_position()[0] &lt; 0:
        particle.assign_colour("#1A6B72")
    else:
        particle.assign_colour("#FDB33B")
    particles.append(particle)

# Animation loop
while True:
    for particle in particles:
        particle.move()
        for other_particle in particles:
            if particle.check_collision(other_particle):
                particle.collide(other_particle)
            elif other_particle in particle.in_collision_with:
                    particle.remove_collision(other_particle)

    simulation_area.update()
</code></code></pre><h5>Code Block #23</h5><pre><code><code># run_demo.py

from particles_simulation import SimulationArea, Particle

n_particles = 500

simulation_area = SimulationArea(1000, 700)
simulation_area.set_title("Diffusion Demo")

particles = []
for _ in range(n_particles):
    particle = Particle(simulation_area)
    if particle.get_position()[0] &lt; 0:
        particle.assign_colour("#1A6B72")
    else:
        particle.assign_colour("#FDB33B")
    particles.append(particle)

# Animation loop
# ...
</code></code></pre><h5>Code Block #24</h5><pre><code><code># particles_simulation.py

import random
import turtle

class SimulationArea:
    def __init__(self, width, height, colour="white", cell_grid=(1, 1)):
        self.width = width
        self.height = height
        # Define the edges of the simulation area as integers
        # (we'll need them as integers later)
        self.left_edge = -width // 2
        self.right_edge = width // 2
        self.top_edge = height // 2
        self.bottom_edge = -height // 2
        # Create a turtle screen object
        self.window = turtle.Screen()
        self.window.setup(width, height)
        self.window.tracer(0)
        self.window.bgcolor(colour)
        
        # Define the cell grid
        self.cell_grid = cell_grid
        self.cell_width = width / cell_grid[0]
        self.cell_height = height / cell_grid[1]
        self.cells = {
            (i, j): []
            for i in range(cell_grid[0])
            for j in range(cell_grid[1])
        }

    # ...
</code></code></pre><h5>Code Block #25</h5><pre><code><code># run_demo.py

from particles_simulation import SimulationArea, Particle

n_particles = 500

simulation_area = SimulationArea(1000, 700, cell_grid=(10, 7))
simulation_area.set_title("Diffusion Demo")

# ...
</code></code></pre><h5>Code Block #26</h5><pre><code><code># particles_simulation.py

# ...

class Particle:
    MAX_VELOCITY = 2

    def __init__(...):
        # ...
        
        self.cell = None
</code></code></pre><h5>Code Block #27</h5><pre><code><code># particles_simulation.py

# ...

class Particle:
    # ...

    def assign_to_cell(self):
        # Convert the x and y coordinates to cell indices i and j
        cell_i = int(
            (self.position[0] - self.simulation_area.left_edge)
            // self.simulation_area.cell_width
        )
        cell_j = int(
            (self.position[1] - self.simulation_area.bottom_edge)
            // self.simulation_area.cell_height
        )

    # ...
</code></code></pre><h5>Code Block #28</h5><pre><code><code># particles_simulation.py

# ...

class Particle:
    # ...

    def assign_to_cell(self):
        # Convert the x and y coordinates to cell indices i and j
        cell_i = int(
            (self.position[0] - self.simulation_area.left_edge)
            // self.simulation_area.cell_width
        )
        cell_j = int(
            (self.position[1] - self.simulation_area.bottom_edge)
            // self.simulation_area.cell_height
        )
        # Ensure the cell indices are within the grid
        if cell_i &lt; 0:
            cell_i = 0
        elif cell_i &gt;= self.simulation_area.cell_grid[0]:
            cell_i = self.simulation_area.cell_grid[0] - 1
        if cell_j &lt; 0:
            cell_j = 0
        elif cell_j &gt;= self.simulation_area.cell_grid[1]:
            cell_j = self.simulation_area.cell_grid[1] - 1

    # ...
</code></code></pre><h5>Code Block #29</h5><pre><code><code># particles_simulation.py

# ...

class Particle:
    # ...

    def assign_to_cell(self):
        # Convert the x and y coordinates to cell indices i and j
        cell_i = int(
            (self.position[0] - self.simulation_area.left_edge)
            // self.simulation_area.cell_width
        )
        cell_j = int(
            (self.position[1] - self.simulation_area.bottom_edge)
            // self.simulation_area.cell_height
        )
        # Ensure the cell indices are within the grid
        if cell_i &lt; 0:
            cell_i = 0
        elif cell_i &gt;= self.simulation_area.cell_grid[0]:
            cell_i = self.simulation_area.cell_grid[0] - 1
        if cell_j &lt; 0:
            cell_j = 0
        elif cell_j &gt;= self.simulation_area.cell_grid[1]:
            cell_j = self.simulation_area.cell_grid[1] - 1
        
        # Add the particle if it's not already in the 
        # cell (first iteration)
        if not self.cell:
            self.cell = (cell_i, cell_j)
            self.simulation_area.cells[self.cell].append(self)
            
        # ...
</code></code></pre><h5>Code Block #30</h5><pre><code><code># particles_simulation.py

# ...

class Particle:
    # ...

    def assign_to_cell(self):
        # Convert the x and y coordinates to cell indices i and j
        cell_i = int(
            (self.position[0] - self.simulation_area.left_edge)
            // self.simulation_area.cell_width
        )
        cell_j = int(
            (self.position[1] - self.simulation_area.bottom_edge)
            // self.simulation_area.cell_height
        )
        # Ensure the cell indices are within the grid
        if cell_i &lt; 0:
            cell_i = 0
        elif cell_i &gt;= self.simulation_area.cell_grid[0]:
            cell_i = self.simulation_area.cell_grid[0] - 1
        if cell_j &lt; 0:
            cell_j = 0
        elif cell_j &gt;= self.simulation_area.cell_grid[1]:
            cell_j = self.simulation_area.cell_grid[1] - 1

        # If the particle is not already in the cell (first iteration), add it
        if not self.cell:
            self.cell = (cell_i, cell_j)
            self.simulation_area.cells[self.cell].append(self)
        elif self.cell != (cell_i, cell_j):
            # Remove the particle from the current cell
            self.simulation_area.cells[self.cell].remove(self)
            # Update the cell assignment
            self.cell = (cell_i, cell_j)
            # Add the particle to the new cell
            self.simulation_area.cells[self.cell].append(self)

    # ...
</code></code></pre><h5>Code Block #31</h5><pre><code><code># particles_simulation.py

# ...

class Particle:
    MAX_VELOCITY = 2

    def __init__(...)
        # ...
        self.assign_to_cell()

    # ...

    def move(self):
        # ...
        self.assign_to_cell()

    # ...
</code></code></pre><h5>Code Block #32</h5><pre><code><code># run_demo.py

from particles_simulation import SimulationArea, Particle

n_particles = 50

simulation_area = SimulationArea(1000, 700, cell_grid=(10, 7))

# ...

# Temporary checks
sample_particle = particles[0]

# Animation loop
while True:
    # ...
    
    # Temporary checks
    sample_particle.particle.clear()
    sample_particle.particle.write(
        f"{sample_particle.cell}", font=("Courier", 20, "bold")
    )

    simulation_area.update()
</code></code></pre><h5>Code Block #33</h5><pre><code><code># run_demo.py

from particles_simulation import SimulationArea, Particle

n_particles = 200

simulation_area = SimulationArea(1000, 700, cell_grid=(4, 3))
simulation_area.set_title("Diffusion Demo")

# ...

# Animation loop
while True:
    for particle in particles:
        # ...
        
        # Temporary code: Visualise one of the cells, (1, 1)
        if particle in simulation_area.cells[(1, 1)]:
            particle.assign_colour("#6D227A")
        else:
            particle.assign_colour("#AABFBF")

    # Temporary checks
    sample_particle.particle.clear()
    sample_particle.particle.write(
        f"{sample_particle.cell}", font=("Courier", 20, "bold")
    )

    simulation_area.update()
</code></code></pre><h5>Code Block #34</h5><pre><code><code># particles_simulation.py

import random
import turtle

class SimulationArea:
    # ...
        
    def get_sequence_of_cells(self):
        return self.cells.values()

# ...
</code></code></pre><h5>Code Block #35</h5><pre><code><code># run_demo.py

from particles_simulation import SimulationArea, Particle

n_particles = 500

simulation_area = SimulationArea(1000, 700, cell_grid=(10, 7))
simulation_area.set_title("Diffusion Demo")

particles = []
for _ in range(n_particles):
    particle = Particle(simulation_area)
    if particle.get_position()[0] &lt; 0:
        particle.assign_colour("#1A6B72")
    else:
        particle.assign_colour("#FDB33B")
    particles.append(particle)

# Animation loop
while True:
    for cell in simulation_area.get_sequence_of_cells():
        for particle in cell:
            particle.move()
            for other_particle in cell:
                if particle.check_collision(other_particle):
                    particle.collide(other_particle)
                elif other_particle in particle.in_collision_with:
                        particle.remove_collision(other_particle)

    simulation_area.update()
</code></code></pre><h5>Code Block #36</h5><pre><code><code># particles_simulation.py

import random
import turtle

random.seed(0)

class SimulationArea:
    # ...
</code></code></pre><h5>Code Block #37</h5><pre><code><code># run_demo.py

import time

from particles_simulation import SimulationArea, Particle

n_particles = 500

grid = (1, 1)
simulation_area = SimulationArea(1000, 700, cell_grid=grid)

# ...

start_time = time.time()
# Animation loop
for _ in range(500):
    for cell in simulation_area.get_sequence_of_cells():
        for particle in cell:
            particle.move()
            for other_particle in cell:
                if particle.check_collision(other_particle):
                    particle.collide(other_particle)
                elif other_particle in particle.in_collision_with:
                        particle.remove_collision(other_particle)

    # simulation_area.update()
print(f"Time elapsed with grid {grid}: {time.time() - start_time:.2f} s")
</code></code></pre><h5>Code Block #38</h5><pre><code><code># run_demo.py

# ...

grid = (4, 3)

# ...
</code></code></pre><h5>Code Block #39</h5><pre><code><code># run_demo.py

# ...

grid = (10, 7)

# ...
</code></code></pre><h5>Code Block #40</h5><pre><code><code># run_demo.py

from collections import deque

from particles_simulation import SimulationArea, Particle

n_particles = 200

simulation_area = SimulationArea(1000, 700, cell_grid=(10, 7))
simulation_area.set_title("Diffusion Demo")

particles = []
total_green_particles = 0
total_orange_particles = 0
for _ in range(n_particles):
    particle = Particle(simulation_area)
    if particle.get_position()[0] &lt; 0:
        particle.assign_colour("#1A6B72")
        particle.colour = "green"
        total_green_particles += 1
    else:
        particle.assign_colour("#FDB33B")
        particle.colour = "orange"
        total_orange_particles += 1
    particles.append(particle)

# Animation loop
green_mean_x = deque(maxlen=500)
orange_mean_x = deque(maxlen=500)
while True:
    sum_green_x_coords, sum_orange_x_coords = 0, 0
    for cell in simulation_area.get_sequence_of_cells():
        for particle in cell:
            particle.move()
            if particle.colour == "green":
                sum_green_x_coords += particle.position[0]
            elif particle.colour == "orange":
                sum_orange_x_coords += particle.position[0]
            for other_particle in cell:
                if particle.check_collision(other_particle):
                    particle.collide(other_particle)
                elif other_particle in particle.in_collision_with:
                        particle.remove_collision(other_particle)
    green_mean_x.append(sum_green_x_coords / total_green_particles)
    orange_mean_x.append(sum_orange_x_coords / total_orange_particles)
    simulation_area.set_title(
        f"Green: {sum(green_mean_x)/len(green_mean_x):0.0f}, "
        f"Orange: {sum(orange_mean_x)/len(orange_mean_x):0.0f}"
    )

    simulation_area.update()
</code></code></pre><div><figure><a target="_blank" href="https://thepythoncodingplace.com/?utm_source=substack" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe63ca140-8d08-4c0c-ae7e-9c663eff132b_2080x600.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe63ca140-8d08-4c0c-ae7e-9c663eff132b_2080x600.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe63ca140-8d08-4c0c-ae7e-9c663eff132b_2080x600.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe63ca140-8d08-4c0c-ae7e-9c663eff132b_2080x600.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe63ca140-8d08-4c0c-ae7e-9c663eff132b_2080x600.png" width="1456" height="420" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e63ca140-8d08-4c0c-ae7e-9c663eff132b_2080x600.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:420,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:448113,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:&quot;https://thepythoncodingplace.com?utm_source=substack&quot;,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe63ca140-8d08-4c0c-ae7e-9c663eff132b_2080x600.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe63ca140-8d08-4c0c-ae7e-9c663eff132b_2080x600.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe63ca140-8d08-4c0c-ae7e-9c663eff132b_2080x600.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe63ca140-8d08-4c0c-ae7e-9c663eff132b_2080x600.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcec9cbba-0591-4c6a-b1e0-5cea153cd0a3.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcec9cbba-0591-4c6a-b1e0-5cea153cd0a3.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcec9cbba-0591-4c6a-b1e0-5cea153cd0a3.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcec9cbba-0591-4c6a-b1e0-5cea153cd0a3.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcec9cbba-0591-4c6a-b1e0-5cea153cd0a3.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcec9cbba-0591-4c6a-b1e0-5cea153cd0a3.png" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/cec9cbba-0591-4c6a-b1e0-5cea153cd0a3.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:null,&quot;width&quot;:null,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:0,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcec9cbba-0591-4c6a-b1e0-5cea153cd0a3.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcec9cbba-0591-4c6a-b1e0-5cea153cd0a3.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcec9cbba-0591-4c6a-b1e0-5cea153cd0a3.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcec9cbba-0591-4c6a-b1e0-5cea153cd0a3.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Canada 'sleepwalking' into cashless society, consumer advocates warn (141 pts)]]></title>
            <link>https://www.cbc.ca/news/canada/ottawa/canada-sleepwalking-into-cashless-society-consumer-advocates-warn-1.7248846</link>
            <guid>40838515</guid>
            <pubDate>Sun, 30 Jun 2024 17:23:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cbc.ca/news/canada/ottawa/canada-sleepwalking-into-cashless-society-consumer-advocates-warn-1.7248846">https://www.cbc.ca/news/canada/ottawa/canada-sleepwalking-into-cashless-society-consumer-advocates-warn-1.7248846</a>, See on <a href="https://news.ycombinator.com/item?id=40838515">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="detailContent"><!--$--><p><span><a href="https://www.cbc.ca/news/canada/ottawa"><span>Ottawa</span></a></span></p><!--/$--><p>A consumer group is urgently calling on the federal government to follow other jurisdictions in the U.S and Europe and bring in legislation to stem the slide toward a cashless society.</p><h2 lang="en">Only about 1 in 10 transactions involve physical money, says recent report</h2><!--$--><!--/$--><!--$--><div data-cy="storyWrapper"><!--$--><figure><p><img alt="More Albertans seem to be &quot;less uncomfortable&quot; with the idea of a provincial sales tax to help reduce a government deficit that could be close to $20 billion." src="https://i.cbc.ca/1.4490875.1719517949!/fileImage/httpImage/image.jpg_gen/derivatives/16x9_780/cash-register-generic.jpg" data-cy="leadmedia-story-img" fetchpriority="high"></p><figcaption>A recent online poll of some 1,500 people commissioned by the group Payments Canada found that a majority of respondents were worried about the prospect of stores going cashless.<!-- --> <!-- -->(Robert Short/CBC)</figcaption></figure><!--/$--><div><p dir="ltr">A consumer group is urgently calling on the federal government to follow other jurisdictions in the U.S and Europe and bring in legislation to stem the slide toward a cashless society. &nbsp;</p><p dir="ltr">Only 10 per cent of transactions in Canada today are done using cash, according to&nbsp;Carlos Castiblanco, an economist with the group&nbsp;Option Consommateurs.</p><p dir="ltr">"There is a need to protect cash right now before more merchants start refusing&nbsp;[it]," Castiblanco&nbsp;recently told&nbsp;<a href="http://www.cbc.ca/listen/live-radio/1-45-ontario-today/clip/16078039-why-still-need-cash">CBC Radio's&nbsp;<em>Ontario Today.</em></a></p><p dir="ltr">It's critical to act now, he added, before retailers&nbsp;begin&nbsp;removing all the infrastructure required to store and maintain physical money.</p><p dir="ltr">"They are already used to dealing with cash," he said. "So this is the moment to act, before it is more complicated."</p><p dir="ltr">In a report called&nbsp;<a href="https://www.phila.gov/media/20220304142758/PCHR-regulation-8-cash-payments-retail-2019.pdf">"Will cash be a thing of the past?"</a>,&nbsp;Option Consommateurs&nbsp;published one of the first deep dives&nbsp;into who is still using coins and paper money.</p><div dir="ltr"><figure><p><img loading="lazy" alt="A man holding cash while sitting on a patio" srcset="https://i.cbc.ca/1.7250835.1719711078!/fileImage/httpImage/image.jpg_gen/derivatives/original_300/carlos-castiblanco-holding-cash.jpg 300w,https://i.cbc.ca/1.7250835.1719711078!/fileImage/httpImage/image.jpg_gen/derivatives/original_460/carlos-castiblanco-holding-cash.jpg 460w,https://i.cbc.ca/1.7250835.1719711078!/fileImage/httpImage/image.jpg_gen/derivatives/original_620/carlos-castiblanco-holding-cash.jpg 620w,https://i.cbc.ca/1.7250835.1719711078!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/carlos-castiblanco-holding-cash.jpg 780w,https://i.cbc.ca/1.7250835.1719711078!/fileImage/httpImage/image.jpg_gen/derivatives/original_1180/carlos-castiblanco-holding-cash.jpg 1180w" sizes="(max-width: 300px) 300px,(max-width: 460px) 460px,(max-width: 620px) 620px,(max-width: 780px) 780px,(max-width: 1180px) 1180px" src="https://i.cbc.ca/1.7250835.1719711078!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/carlos-castiblanco-holding-cash.jpg" data-cy="image-img"></p><figcaption>Carlos Castiblanco, an economist, says Canada needs to follow in the steps of other countries and create legislation to protect cash. <!-- --> <!-- -->(Haik Kazarian)</figcaption></figure></div><h2 dir="ltr">'Solid demand' for cash</h2><p dir="ltr">A recent <a href="https://www.payments.ca/canadians-report-love-hate-relationship-cash-reveals-new-payments-canada-study">online poll of some 1,500 </a><a href="http://www.payments.ca/canadians-report-love-hate-relationship-cash-reveals-new-payments-canada-study">people</a>&nbsp;commissioned by a different group, Payments Canada, found that&nbsp;a majority of respondents were worried about the prospect of cashless stores&nbsp;and want to maintain the option to use cash — which is free from bank fees, isn't susceptible to privacy breaches&nbsp;and can be used during internet outages.&nbsp;</p><p dir="ltr">"There's still very solid demand for cash," said Sharon Kozicki, the deputy governor of the Bank of Canada, in a recent interview with CBC.</p><div dir="ltr"><ul><li><a href="https://www.cbc.ca/news/business/credit-card-surcharge-shop-1.6606997" text="Paying with a credit card? Expect to see a fee when you shop under new rules that start now" flag="" data-contentid=""><span>Paying with a credit card? Expect to see a fee when you shop under new rules that start now</span></a></li></ul></div><p dir="ltr">The bank closely tracks&nbsp;how money gets used, Kozicki said, with the use of cash actually rising&nbsp;at the beginning of the COVID-19 pandemic.</p><p>While that&nbsp;growth has slowed, Kozicki said there's still an "overall general increase that suggests people still want it."</p><p>Even a <a href="http://www.mcgill.ca/maxbellschool/policy-lab-2023/less-cash">report commissioned by the Bank of Canada</a> suggests it's time to protect access to money.&nbsp;</p><p>That report, titled "Social policy implications for a less-cash society," recommends legislative&nbsp;action, arguing that&nbsp;cash-based transactions have plummeted&nbsp;from 54 per cent in 2009 to 10 per cent as of 2021.&nbsp;</p><p>One of its authors, Aftab Ahmed, described who would be most affected by a world with no cash&nbsp;in <a href="https://policyoptions.irpp.org/magazines/september-2023/keep-cash-in-circulation/">a recent article of Policy Options</a>, the online magazine for the&nbsp;Institute for Research on Public Policy.</p><p>"For many — such as Indigenous peoples, unhoused individuals, older Canadians, victims of domestic abuse and others who are vulnerable — cash is a beacon of economic security, a source of financial autonomy, an emergency lifeline and an emblem of cultural traditions," Ahmed wrote.</p><p>"Canada must avoid sleepwalking into a cashless future and instead recognize the risk of exacerbating financial exclusion of those most vulnerable."</p><h2>Other cities, countries taking steps</h2><p>The issue has caught fire outside Canada, Castiblanco&nbsp;said, with several&nbsp;jurisdictions beginning to legislate to protect access to cash.&nbsp;</p><p>In 2019, Philadelphia became the first city in North America to prohibit "a person selling or offering for sale consumer goods or services at retail&nbsp;from refusing to accept cash as a form of payment."&nbsp;</p><div><ul><li><a href="https://www.cbc.ca/news/world/backlash-against-cashless-stores-as-more-u-s-jurisdictions-require-businesses-to-accept-bills-1.5139213" text="Backlash against cashless stores as more U.S. jurisdictions require businesses to accept bills" flag="" data-contentid=""><span>Backlash against cashless stores as more U.S. jurisdictions require businesses to accept bills</span></a></li></ul></div><p>Other U.S. cities like New York, Seattle and&nbsp;Los Angeles have since moved ahead on the issue.&nbsp;</p><p>In New York, the regulation proposes fines of up to $1,500, with the councillor who sponsored the rules declaring that a&nbsp;ban on cashless businesses protects privacy, equity and consumer choice.</p><p>European countries like Norway, Spain, and Ireland have introduced similar laws. In&nbsp;Ireland, the law would require a cash option at businesses like pharmacies and grocery stores that sell essential products and services.</p><div><figure><p><img loading="lazy" alt="A man standing against a wall smiling. " srcset="https://i.cbc.ca/1.7250840.1719711134!/fileImage/httpImage/image.jpg_gen/derivatives/original_300/ron-delnevo-headshot.jpg 300w,https://i.cbc.ca/1.7250840.1719711134!/fileImage/httpImage/image.jpg_gen/derivatives/original_460/ron-delnevo-headshot.jpg 460w,https://i.cbc.ca/1.7250840.1719711134!/fileImage/httpImage/image.jpg_gen/derivatives/original_620/ron-delnevo-headshot.jpg 620w,https://i.cbc.ca/1.7250840.1719711134!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/ron-delnevo-headshot.jpg 780w,https://i.cbc.ca/1.7250840.1719711134!/fileImage/httpImage/image.jpg_gen/derivatives/original_1180/ron-delnevo-headshot.jpg 1180w" sizes="(max-width: 300px) 300px,(max-width: 460px) 460px,(max-width: 620px) 620px,(max-width: 780px) 780px,(max-width: 1180px) 1180px" src="https://i.cbc.ca/1.7250840.1719711134!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/ron-delnevo-headshot.jpg" data-cy="image-img"></p><figcaption>Ron Delnevo, spokesperson for Payment Choice Alliance, is urging Canadians to raise their concerns about the cash system with MPs. <!-- --> <!-- -->(Helen Delnevo)</figcaption></figure></div><h2>'Tell MPs what you want'</h2><p>Consumer groups in the United Kingdom&nbsp;like Payment Choice Alliance&nbsp;are pushing that country to follow Ireland's model.&nbsp;</p><p>"I think that we need urgent action now," the alliance's spokesperson, Ron Delnevo,&nbsp;told&nbsp;<em>Ontario Today</em>.</p><p>The group is calling for new rules in the U.K. by the end of 2025.</p><p>"We feel if it goes beyond that, there [will be] so many businesses not accepting cash," Delnevo said. "Cash will be so difficult to access that the whole [cash-based system] will fall down."</p><p>Delnevo said&nbsp;Canadians can take a lesson on the power of consumer action in his country.&nbsp;</p><p>"MPs&nbsp;in our parliament have been inundated with mail from the public, and they are reacting to that," he said. "So don't let the politicians put their hands over their ears and not listen. Tell them what you want."</p><p><span><div role="button" tabindex="0" title="Why do you still need cash?" data-cy="player-placeholder-ui-container"><p><img src="https://i.cbc.ca/ais/6436acf8-6d17-459c-92c6-fd9964a8af1c,1716575616679/full/max/0/default.jpg?im=Crop%2Crect%3D%280%2C0%2C1919%2C1079%29%3BResize%3D%28620%29" alt="" loading="lazy"></p><p><span>Ontario Today</span><span>51:39</span><span>Why do you still need cash?</span></p></div><span>Your calls with Ron Delnevo, the head of group in the United Kingdom trying to stop the slide into a cashless society. Also, joining us, Carlos Castiblanco, an économist with the consumer group, Option-Consommateurs, which used a federal grant to create a recent report called: "Will Cash Soon be a thing of the past?" It's recommendations include an urgent call on legislators to protect access to cash before we sleepwalk into a society that leaves out a lot of Canadians.</span></span></p></div></div><!--/$--><!--$--><!--/$--><div><h2>ABOUT THE AUTHOR</h2><div><figure><p><img loading="lazy" alt="" srcset="https://i.cbc.ca/1.4253701.1503090158!/fileImage/httpImage/image.jpg_gen/derivatives/square_300/amanda-pfeffer.jpg 300w,https://i.cbc.ca/1.4253701.1503090158!/fileImage/httpImage/image.jpg_gen/derivatives/square_460/amanda-pfeffer.jpg 460w,https://i.cbc.ca/1.4253701.1503090158!/fileImage/httpImage/image.jpg_gen/derivatives/square_620/amanda-pfeffer.jpg 620w" sizes="(max-width: 258pxpx) 258pxpx" src="https://i.cbc.ca/1.4253701.1503090158!/fileImage/httpImage/image.jpg_gen/derivatives/square_620/amanda-pfeffer.jpg" data-cy="author-image-img"></p></figure></div><p>Amanda Pfeffer has worked for the CBC across the country, including Montreal, Vancouver, Fredericton, Quebec City and Ottawa. She welcomes story ideas and tips at amanda.pfeffer@cbc.ca, or twitter @onthebeat1.</p><ul><li><a href="https://www.cbc.ca/news/canada/ottawa/amanda-pfeffer-1.3442930">Read more articles by Amanda Pfeffer</a></li></ul></div><!--$--><!--/$--><!--$--><!--/$--></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A live ranking of airlines by how much luggage they are losing (109 pts)]]></title>
            <link>https://luggagelosers.com/</link>
            <guid>40838290</guid>
            <pubDate>Sun, 30 Jun 2024 16:54:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://luggagelosers.com/">https://luggagelosers.com/</a>, See on <a href="https://news.ycombinator.com/item?id=40838290">Hacker News</a></p>
<div id="readability-page-1" class="page"><h2>
        🧳💨 Luggage Losers
    </h2>
    
    <h3>
        Based on live data updated hourly, by <a href="https://twitter.com/levelsio">@levelsio</a> and part of <a href="https://airlinelist.com/?ref=luggagelosers">Airline List</a> +  <a href="https://nomadlist.com/?ref=luggagelosers">Nomad List</a>
    </h3>

    <p>
        <strong>How it works?</strong> My robot scrapers scour the internet 24/7 for people talking about their lost luggage and which airlines they flew, in 100+ different languages. By cross referencing that with actual lost luggage data it estimates very closely how much luggage is constantly being lost. And yes, it takes into account airline size differences by flights and fleet size. All major airlines are tracked 24/7.
    </p>
    <p>
        <strong>Last updated:</strong> 2 hours ago from 1,296 sources
    </p>

    <h2>
        Biggest luggage losers right now
    </h2>
    <p>
        These airlines receive the dubious honor of losing the most luggage:
    </p><br>
    <table>
        <tbody><tr>
            <td>
            </td>
            <td>
                🏆<br>
                🇮🇳 Air India            </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>
                🥈<br>
                🇮🇪 Aer Lingus            </td>
            <td>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </td>
            <td>
                🥉<br>
                🇨🇦 WestJet Airlines            </td>
        </tr>
    </tbody></table>

   

    <h2>
        Airlines losing most luggage right now
    </h2>
    
    

    <table>
        <thead>
            <tr>
                <td>
                    #
                </td>
                <td>
                    Airline
                </td>
                <td>
                    Luggage score <br>(out of 5)
                </td>
                                <td>
                    Lost bags <br>(last 30 days)
                </td>
                                <td colspan="2">
                    Probability of losing <br>per passenger
                </td>
        </tr></thead>
        <tbody><tr>
                <td>1</td><td><a target="_blank" href="https://airindia.com/">🇮🇳 Air India</a></td><td>0.25</td><td>33,655</td><td>1 in 54</td><td>1.86%</td></tr><tr>
                <td>2</td><td><a target="_blank" href="https://aerlingus.com/">🇮🇪 Aer Lingus</a></td><td>0.25</td><td>15,918</td><td>1 in 54</td><td>1.85%</td></tr><tr>
                <td>3</td><td><a target="_blank" href="https://westjet.com/">🇨🇦 WestJet Airlines</a></td><td>0.25</td><td>32,304</td><td>1 in 58</td><td>1.72%</td></tr><tr>
                <td>4</td><td><a target="_blank" href="https://ba.com/">🇬🇧 British Airways</a></td><td>0.25</td><td>59,480</td><td>1 in 69</td><td>1.44%</td></tr><tr>
                <td>5</td><td><a target="_blank" href="https://iberia.com/">🇪🇸 Iberia</a></td><td>0.25</td><td>16,591</td><td>1 in 75</td><td>1.33%</td></tr><tr>
                <td>6</td><td><a target="_blank" href="https://spicejet.com/">🇮🇳 SpiceJet</a></td><td>0.25</td><td>9,311</td><td>1 in 101</td><td>0.99%</td></tr><tr>
                <td>7</td><td><a target="_blank" href="https://easyjet.com/">🇬🇧 easyJet</a></td><td>0.25</td><td>32,369</td><td>1 in 111</td><td>0.90%</td></tr><tr>
                <td>8</td><td><a target="_blank" href="https://swiss.com/">🇨🇭 Swiss</a></td><td>0.25</td><td>7,962</td><td>1 in 120</td><td>0.84%</td></tr><tr>
                <td>9</td><td><a target="_blank" href="https://vueling.com/">🇪🇸 Vueling</a></td><td>0.25</td><td>14,497</td><td>1 in 121</td><td>0.83%</td></tr><tr>
                <td>10</td><td><a target="_blank" href="https://spirit.com/">🇺🇸 Spirit Airlines</a></td><td>0.46</td><td>13,425</td><td>1 in 140</td><td>0.72%</td></tr><tr>
                <td>11</td><td><a target="_blank" href="https://jet2.com/">🇬🇧 Jet2</a></td><td>0.50</td><td>9,273</td><td>1 in 141</td><td>0.71%</td></tr><tr>
                <td>12</td><td><a target="_blank" href="https://goindigo.in/">🇮🇳 IndiGo</a></td><td>1.24</td><td>17,526</td><td>1 in 168</td><td>0.59%</td></tr><tr>
                <td>13</td><td><a target="_blank" href="https://aircanada.com/">🇨🇦 Air Canada</a></td><td>1.82</td><td>14,340</td><td>1 in 199</td><td>0.50%</td></tr><tr>
                <td>14</td><td><a target="_blank" href="https://aegeanair.com/">🇬🇷 Aegean Airlines</a></td><td>1.85</td><td>3,747</td><td>1 in 201</td><td>0.50%</td></tr><tr>
                <td>15</td><td><a target="_blank" href="https://frontierairlines.com/">🇺🇸 Frontier Airlines</a></td><td>1.89</td><td>6,036</td><td>1 in 204</td><td>0.49%</td></tr><tr>
                <td>16</td><td><a target="_blank" href="https://austrian.com/">🇦🇹 Austrian Airlines</a></td><td>2.09</td><td>5,998</td><td>1 in 218</td><td>0.46%</td></tr><tr>
                <td>17</td><td><a target="_blank" href="https://wizzair.com/">🇭🇺 Wizz Air</a></td><td>2.10</td><td>4,645</td><td>1 in 218</td><td>0.46%</td></tr><tr>
                <td>18</td><td><a target="_blank" href="https://united.com/">🇺🇸 United Airlines</a></td><td>2.24</td><td>49,885</td><td>1 in 229</td><td>0.44%</td></tr><tr>
                <td>19</td><td><a target="_blank" href="https://cebupacific.com/">🇵🇭 Cebu Pacific</a></td><td>2.26</td><td>3,261</td><td>1 in 231</td><td>0.43%</td></tr><tr>
                <td>20</td><td><a target="_blank" href="https://www.aerolineas.com.ar/">🇦🇷 Aerolineas Argentinas</a></td><td>2.36</td><td>3,713</td><td>1 in 240</td><td>0.42%</td></tr><tr>
                <td>21</td><td><a target="_blank" href="https://lufthansa.com/">🇩🇪 Lufthansa</a></td><td>2.40</td><td>16,685</td><td>1 in 244</td><td>0.41%</td></tr><tr>
                <td>22</td><td><a target="_blank" href="https://www.qatarairways.com/">🇶🇦 Qatar Airways</a></td><td>2.46</td><td>13,531</td><td>1 in 250</td><td>0.40%</td></tr><tr>
                <td>23</td><td><a target="_blank" href="https://royalairmaroc.com/">🇲🇦 Royal Air Maroc</a></td><td>2.56</td><td>3,261</td><td>1 in 259</td><td>0.39%</td></tr><tr>
                <td>24</td><td><a target="_blank" href="https://avianca.com/">🇨🇴 Avianca</a></td><td>2.68</td><td>9,722</td><td>1 in 273</td><td>0.37%</td></tr><tr>
                <td>25</td><td><a target="_blank" href="https://klm.com/">🇳🇱 KLM</a></td><td>2.69</td><td>6,554</td><td>1 in 274</td><td>0.36%</td></tr><tr>
                <td>26</td><td><a target="_blank" href="https://aa.com/">🇺🇸 American Airlines</a></td><td>2.80</td><td>50,746</td><td>1 in 288</td><td>0.35%</td></tr><tr>
                <td>27</td><td><a target="_blank" href="https://flydubai.com/">🇦🇪 flydubai</a></td><td>2.82</td><td>3,285</td><td>1 in 290</td><td>0.34%</td></tr><tr>
                <td>28</td><td><a target="_blank" href="https://kenyaairways.com/">🇰🇪 Kenya Airways</a></td><td>3.10</td><td>1,848</td><td>1 in 333</td><td>0.30%</td></tr><tr>
                <td>29</td><td><a target="_blank" href="https://latam.com/">🇨🇱 LATAM Chile</a></td><td>3.28</td><td>5,119</td><td>1 in 369</td><td>0.27%</td></tr><tr>
                <td>30</td><td><a target="_blank" href="https://ethiopianairlines.com/">🇪🇹 Ethiopian Airlines</a></td><td>3.32</td><td>2,811</td><td>1 in 377</td><td>0.27%</td></tr><tr>
                <td>31</td><td><a target="_blank" href="https://aireuropa.com/">🇪🇸 Air Europa</a></td><td>3.35</td><td>1,843</td><td>1 in 383</td><td>0.26%</td></tr><tr>
                <td>32</td><td><a target="_blank" href="https://icelandair.com/">🇮🇸 Icelandair</a></td><td>3.36</td><td>1,390</td><td>1 in 387</td><td>0.26%</td></tr><tr>
                <td>33</td><td><a target="_blank" href="https://azal.az/">🇦🇿 Azerbaijan Airlines</a></td><td>3.46</td><td>936</td><td>1 in 410</td><td>0.24%</td></tr><tr>
                <td>34</td><td><a target="_blank" href="https://flytap.com/">🇵🇹 TAP Portugal</a></td><td>3.47</td><td>2,341</td><td>1 in 413</td><td>0.24%</td></tr><tr>
                <td>35</td><td><a target="_blank" href="https://www.egyptair.com/">🇪🇬 EgyptAir</a></td><td>3.58</td><td>1,865</td><td>1 in 445</td><td>0.22%</td></tr><tr>
                <td>36</td><td><a target="_blank" href="https://turkishairlines.com/">🇹🇷 Turkish Airlines</a></td><td>3.60</td><td>11,144</td><td>1 in 454</td><td>0.22%</td></tr><tr>
                <td>37</td><td><a target="_blank" href="https://airserbia.com/">🇷🇸 Air Serbia</a></td><td>3.72</td><td>931</td><td>1 in 495</td><td>0.20%</td></tr><tr>
                <td>38</td><td><a target="_blank" href="https://emirates.com/">🇦🇪 Emirates</a></td><td>3.74</td><td>7,454</td><td>1 in 503</td><td>0.20%</td></tr><tr>
                <td>39</td><td><a target="_blank" href="https://delta.com/">🇺🇸 Delta Air Lines</a></td><td>3.75</td><td>25,721</td><td>1 in 508</td><td>0.20%</td></tr><tr>
                <td>40</td><td><a target="_blank" href="https://etihadairways.com/">🇦🇪 Etihad Airways</a></td><td>3.79</td><td>3,260</td><td>1 in 523</td><td>0.19%</td></tr><tr>
                <td>41</td><td><a target="_blank" href="https://virginatlantic.com/">🇬🇧 Virgin Atlantic</a></td><td>3.80</td><td>1,396</td><td>1 in 528</td><td>0.19%</td></tr><tr>
                <td>42</td><td><a target="_blank" href="https://gulfair.com/">🇧🇭 Gulf Air</a></td><td>3.84</td><td>929</td><td>1 in 546</td><td>0.18%</td></tr><tr>
                <td>43</td><td><a target="_blank" href="https://piac.com.pk/">🇵🇰 Pakistan International Airlines</a></td><td>3.84</td><td>926</td><td>1 in 547</td><td>0.18%</td></tr><tr>
                <td>44</td><td><a target="_blank" href="https://ryanair.com/">🇮🇪 Ryanair</a></td><td>3.85</td><td>11,526</td><td>1 in 551</td><td>0.18%</td></tr><tr>
                <td>45</td><td><a target="_blank" href="https://aeromexico.com/">🇲🇽 Aeromexico</a></td><td>3.93</td><td>1,846</td><td>1 in 591</td><td>0.17%</td></tr><tr>
                <td>46</td><td><a target="_blank" href="https://airfrance.com/">🇫🇷 Air France</a></td><td>3.98</td><td>5,583</td><td>1 in 622</td><td>0.16%</td></tr><tr>
                <td>47</td><td><a target="_blank" href="https://singaporeair.com/">🇸🇬 Singapore Airlines</a></td><td>4.00</td><td>2,816</td><td>1 in 633</td><td>0.16%</td></tr><tr>
                <td>48</td><td><a target="_blank" href="https://jetblue.com/">🇺🇸 JetBlue</a></td><td>4.08</td><td>5,557</td><td>1 in 691</td><td>0.14%</td></tr><tr>
                <td>49</td><td><a target="_blank" href="https://qantas.com/">🇦🇺 Qantas</a></td><td>4.09</td><td>2,809</td><td>1 in 695</td><td>0.14%</td></tr><tr>
                <td>50</td><td><a target="_blank" href="https://southwest.com/">🇺🇸 Southwest Airlines</a></td><td>4.09</td><td>15,404</td><td>1 in 695</td><td>0.14%</td></tr><tr>
                <td>51</td><td><a target="_blank" href="https://eurowings.de/">🇩🇪 Eurowings</a></td><td>4.12</td><td>2,318</td><td>1 in 722</td><td>0.14%</td></tr><tr>
                <td>52</td><td><a target="_blank" href="https://finnair.com/">🇫🇮 Finnair</a></td><td>4.27</td><td>1,395</td><td>1 in 870</td><td>0.11%</td></tr><tr>
                <td>53</td><td><a target="_blank" href="https://airnewzealand.com/">🇳🇿 Air New Zealand</a></td><td>4.38</td><td>924</td><td>1 in 1,014</td><td>0.10%</td></tr><tr>
                <td>54</td><td><a target="_blank" href="https://cathaypacific.com/">🇭🇰 Cathay Pacific</a></td><td>4.40</td><td>1,858</td><td>1 in 1,058</td><td>0.09%</td></tr><tr>
                <td>55</td><td><a target="_blank" href="https://hawaiianairlines.com/">🇺🇸 Hawaiian Airlines</a></td><td>4.42</td><td>924</td><td>1 in 1,097</td><td>0.09%</td></tr><tr>
                <td>56</td><td><a target="_blank" href="https://airtransat.com/">🇨🇦 Air Transat</a></td><td>4.46</td><td>468</td><td>1 in 1,182</td><td>0.08%</td></tr><tr>
                <td>57</td><td><a target="_blank" href="https://itaspa.com/">🇮🇹 ITA Airways</a></td><td>4.47</td><td>1,404</td><td>1 in 1,193</td><td>0.08%</td></tr><tr>
                <td>58</td><td><a target="_blank" href="https://sas.se/">🇸🇪 SAS Scandinavia</a></td><td>4.52</td><td>1,404</td><td>1 in 1,324</td><td>0.08%</td></tr><tr>
                <td>59</td><td><a target="_blank" href="https://thaiairways.com/">🇹🇭 Thai Airways</a></td><td>4.53</td><td>927</td><td>1 in 1,343</td><td>0.07%</td></tr><tr>
                <td>60</td><td><a target="_blank" href="https://www.copaair.com/">🇵🇦 COPA Airlines</a></td><td>4.57</td><td>939</td><td>1 in 1,489</td><td>0.07%</td></tr><tr>
                <td>61</td><td><a target="_blank" href="https://omanair.com/">🇴🇲 Oman Air</a></td><td>4.65</td><td>929</td><td>1 in 1,819</td><td>0.05%</td></tr><tr>
                <td>62</td><td><a target="_blank" href="https://airasia.com/">🇲🇾 Air Asia</a></td><td>4.66</td><td>1,408</td><td>1 in 1,844</td><td>0.05%</td></tr><tr>
                <td>63</td><td><a target="_blank" href="https://garuda-indonesia.com/">🇮🇩 Garuda Indonesia</a></td><td>4.73</td><td>933</td><td>1 in 2,355</td><td>0.04%</td></tr><tr>
                <td>64</td><td><a target="_blank" href="https://malaysiaairlines.com/">🇲🇾 Malaysia Airlines</a></td><td>4.77</td><td>462</td><td>1 in 2,763</td><td>0.04%</td></tr><tr>
                <td>65</td><td><a target="_blank" href="https://saudia.com/">🇸🇦 Saudia</a></td><td>4.79</td><td>934</td><td>1 in 3,043</td><td>0.03%</td></tr><tr>
                <td>66</td><td><a target="_blank" href="https://allegiantair.com/">🇺🇸 Allegiant Air</a></td><td>4.80</td><td>463</td><td>1 in 3,186</td><td>0.03%</td></tr><tr>
                <td>67</td><td><a target="_blank" href="https://alaskaair.com/">🇺🇸 Alaska Airlines</a></td><td>4.82</td><td>1,390</td><td>1 in 3,536</td><td>0.03%</td></tr><tr>
                <td>68</td><td><a target="_blank" href="https://latam.com/">🇧🇷 LATAM Brazil</a></td><td>4.87</td><td>468</td><td>1 in 4,822</td><td>0.02%</td></tr><tr>
                <td>69</td><td><a target="_blank" href="https://ana.co.jp/">🇯🇵 All Nippon Airways (ANA)</a></td><td>4.92</td><td>461</td><td>1 in 7,726</td><td>0.01%</td></tr></tbody></table>
    
    
    


    <h2>
        Biggest luggage winners right now
    </h2>
    <p>
        These airlines receive the award of losing the least luggage:
    </p>
    <br>
    <table>
        <tbody><tr>
            <td>
            </td>
            <td>
                🏆<br>
                🇯🇵 All Nippon Airways (ANA)            </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>
                🥈<br>
                🇧🇷 LATAM Brazil            </td>
            <td>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </td>
            <td>
                🥉<br>
                🇺🇸 Alaska Airlines            </td>
        </tr>
    </tbody></table>

   
    
    
    
        <h2>
        Most luggage lost by airline region
    </h2>
    <table>
        <thead>
            <tr>
                <td>
                    #
                </td>
                <td>
                    Region
                </td>
                <td>
                    Luggage score <br>(out of 5)
                </td>
                                <td>
                    Lost bags <br>(last 30 days)
                </td>
                                <td colspan="2">
                    Probability of losing <br>per passenger
                </td>
        </tr></thead>
        
        <tbody><tr>
                <td>1</td><td>Europe</td><td>2.03</td><td>236,393</td><td>1 in 320</td><td>0.31%</td></tr><tr>
                <td>2</td><td>Africa</td><td>2.14</td><td>7,920</td><td>1 in 333</td><td>0.30%</td></tr><tr>
                <td>3</td><td>Latin America</td><td>2.91</td><td>21,808</td><td>1 in 454</td><td>0.22%</td></tr><tr>
                <td>4</td><td>North America</td><td>3.13</td><td>216,664</td><td>1 in 508</td><td>0.20%</td></tr><tr>
                <td>5</td><td>Middle East</td><td>3.15</td><td>32,188</td><td>1 in 513</td><td>0.20%</td></tr><tr>
                <td>6</td><td>Asia</td><td>3.50</td><td>74,481</td><td>1 in 633</td><td>0.16%</td></tr><tr>
                <td>7</td><td>Oceania</td><td>3.85</td><td>3,734</td><td>1 in 824</td><td>0.12%</td></tr>    </tbody></table>

        <h2>
        Most luggage lost by airline country
    </h2>
    <table>
        <thead>
            <tr>
                <td>
                    #
                </td>
                <td>
                    Country
                </td>
                <td>
                    Luggage score <br>(out of 5)
                </td>
                                <td>
                    Lost bags <br>(last 30 days)
                </td>
                                <td colspan="2">
                    Probability of losing <br>per passenger
                </td>
        </tr></thead>
        
        <tbody><tr>
                <td>1</td><td>🇮🇪 Ireland</td><td>0.25</td><td>27,443</td><td>1 in 98</td><td>1.02%</td></tr><tr>
                <td>2</td><td>🇮🇳 India</td><td>0.25</td><td>60,492</td><td>1 in 101</td><td>0.99%</td></tr><tr>
                <td>3</td><td>🇨🇭 Switzerland</td><td>0.25</td><td>7,962</td><td>1 in 120</td><td>0.84%</td></tr><tr>
                <td>4</td><td>🇪🇸 Spain</td><td>0.25</td><td>32,931</td><td>1 in 121</td><td>0.83%</td></tr><tr>
                <td>5</td><td>🇬🇧 United Kingdom</td><td>0.25</td><td>102,518</td><td>1 in 124</td><td>0.81%</td></tr><tr>
                <td>6</td><td>🇨🇦 Canada</td><td>0.25</td><td>47,112</td><td>1 in 199</td><td>0.50%</td></tr><tr>
                <td>7</td><td>🇬🇷 Greece</td><td>0.27</td><td>3,747</td><td>1 in 201</td><td>0.50%</td></tr><tr>
                <td>8</td><td>🇦🇹 Austria</td><td>0.64</td><td>5,998</td><td>1 in 218</td><td>0.46%</td></tr><tr>
                <td>9</td><td>🇭🇺 Hungary</td><td>0.65</td><td>4,645</td><td>1 in 218</td><td>0.46%</td></tr><tr>
                <td>10</td><td>🇵🇭 Philippines</td><td>0.88</td><td>3,261</td><td>1 in 231</td><td>0.43%</td></tr><tr>
                <td>11</td><td>🇦🇷 Argentina</td><td>1.04</td><td>3,713</td><td>1 in 240</td><td>0.42%</td></tr><tr>
                <td>12</td><td>🇶🇦 Qatar</td><td>1.20</td><td>13,531</td><td>1 in 250</td><td>0.40%</td></tr><tr>
                <td>13</td><td>🇲🇦 Morocco</td><td>1.33</td><td>3,261</td><td>1 in 259</td><td>0.39%</td></tr><tr>
                <td>14</td><td>🇨🇴 Colombia</td><td>1.53</td><td>9,722</td><td>1 in 273</td><td>0.37%</td></tr><tr>
                <td>15</td><td>🇳🇱 Netherlands</td><td>1.54</td><td>6,554</td><td>1 in 274</td><td>0.36%</td></tr><tr>
                <td>16</td><td>🇰🇪 Kenya</td><td>2.14</td><td>1,848</td><td>1 in 333</td><td>0.30%</td></tr><tr>
                <td>17</td><td>🇩🇪 Germany</td><td>2.40</td><td>19,003</td><td>1 in 365</td><td>0.27%</td></tr><tr>
                <td>18</td><td>🇨🇱 Chile</td><td>2.43</td><td>5,119</td><td>1 in 369</td><td>0.27%</td></tr><tr>
                <td>19</td><td>🇪🇹 Ethiopia</td><td>2.48</td><td>2,811</td><td>1 in 377</td><td>0.27%</td></tr><tr>
                <td>20</td><td>🇮🇸 Iceland</td><td>2.54</td><td>1,390</td><td>1 in 387</td><td>0.26%</td></tr><tr>
                <td>21</td><td>🇦🇿 Azerbaijan</td><td>2.68</td><td>936</td><td>1 in 410</td><td>0.24%</td></tr><tr>
                <td>22</td><td>🇵🇹 Portugal</td><td>2.70</td><td>2,341</td><td>1 in 413</td><td>0.24%</td></tr><tr>
                <td>23</td><td>🇪🇬 Egypt</td><td>2.86</td><td>1,865</td><td>1 in 445</td><td>0.22%</td></tr><tr>
                <td>24</td><td>🇹🇷 Turkey</td><td>2.91</td><td>11,144</td><td>1 in 454</td><td>0.22%</td></tr><tr>
                <td>25</td><td>🇷🇸 Serbia</td><td>3.08</td><td>931</td><td>1 in 495</td><td>0.20%</td></tr><tr>
                <td>26</td><td>🇦🇪 United Arab Emirates</td><td>3.11</td><td>13,999</td><td>1 in 503</td><td>0.20%</td></tr><tr>
                <td>27</td><td>🇧🇭 Bahrain</td><td>3.26</td><td>929</td><td>1 in 546</td><td>0.18%</td></tr><tr>
                <td>28</td><td>🇵🇰 Pakistan</td><td>3.26</td><td>926</td><td>1 in 547</td><td>0.18%</td></tr><tr>
                <td>29</td><td>🇺🇸 United States</td><td>3.38</td><td>169,552</td><td>1 in 585</td><td>0.17%</td></tr><tr>
                <td>30</td><td>🇲🇽 Mexico</td><td>3.39</td><td>1,846</td><td>1 in 591</td><td>0.17%</td></tr><tr>
                <td>31</td><td>🇫🇷 France</td><td>3.47</td><td>5,583</td><td>1 in 622</td><td>0.16%</td></tr><tr>
                <td>32</td><td>🇸🇬 Singapore</td><td>3.50</td><td>2,816</td><td>1 in 633</td><td>0.16%</td></tr><tr>
                <td>33</td><td>🇦🇺 Australia</td><td>3.63</td><td>2,809</td><td>1 in 695</td><td>0.14%</td></tr><tr>
                <td>34</td><td>🇫🇮 Finland</td><td>3.91</td><td>1,395</td><td>1 in 870</td><td>0.11%</td></tr><tr>
                <td>35</td><td>🇳🇿 New Zealand</td><td>4.06</td><td>924</td><td>1 in 1,014</td><td>0.10%</td></tr><tr>
                <td>36</td><td>🇭🇰 Hong Kong</td><td>4.10</td><td>1,858</td><td>1 in 1,058</td><td>0.09%</td></tr><tr>
                <td>37</td><td>🇮🇹 Italy</td><td>4.20</td><td>1,404</td><td>1 in 1,193</td><td>0.08%</td></tr><tr>
                <td>38</td><td>🇸🇪 Sweden</td><td>4.28</td><td>1,404</td><td>1 in 1,324</td><td>0.08%</td></tr><tr>
                <td>39</td><td>🇹🇭 Thailand</td><td>4.29</td><td>927</td><td>1 in 1,343</td><td>0.07%</td></tr><tr>
                <td>40</td><td>🇵🇦 Panama</td><td>4.36</td><td>939</td><td>1 in 1,489</td><td>0.07%</td></tr><tr>
                <td>41</td><td>🇴🇲 Oman</td><td>4.48</td><td>929</td><td>1 in 1,819</td><td>0.05%</td></tr><tr>
                <td>42</td><td>🇲🇾 Malaysia</td><td>4.57</td><td>1,870</td><td>1 in 2,212</td><td>0.05%</td></tr><tr>
                <td>43</td><td>🇮🇩 Indonesia</td><td>4.60</td><td>933</td><td>1 in 2,355</td><td>0.04%</td></tr><tr>
                <td>44</td><td>🇸🇦 Saudi Arabia</td><td>4.69</td><td>934</td><td>1 in 3,043</td><td>0.03%</td></tr><tr>
                <td>45</td><td>🇧🇷 Brazil</td><td>4.80</td><td>468</td><td>1 in 4,822</td><td>0.02%</td></tr><tr>
                <td>46</td><td>🇯🇵 Japan</td><td>4.88</td><td>461</td><td>1 in 7,726</td><td>0.01%</td></tr>        </tbody></table>


        <p>
            <strong>Next features?</strong> As I collect more data over the next few weeks, I can add charts and growth % to see which airlines grow or decrease in lost luggage. If you have more ideas, tweet me!
        </p>
        <p>
            <strong>Why?</strong> <a href="https://x.com/levelsio/status/1806730920831095056">Vueling lost my gf's suitcase</a> last week and it's now on a trip to random spots around the world without coming back to us while getting gaslit by useless Vueling staff! I realized nobody collects data on how much luggage specific airlines are losing every day to avoid the worst ones. This helps me (and hopefully you too) to book with airlines that put effort in to not lose luggage or get it back fast to their customers! And rewards great airlines for not losing our luggage.
        </p>
        <p>
            <strong>Limitations?</strong> Airlines don't publish live lost luggage data (probably for a reason). Using social media as a data source has limitations but seems to be a good proxy indicator when combined with historical lost luggage data. Probabilities and lost bags are live estimations.
        </p>
        <p>
            <strong>Like this?</strong> Follow me on X @ <a href="https://twitter.com/levelsio">@levelsio</a> for more hacky side projects!
        </p>
        <p>
            <strong>Press inquiries?</strong> Send me a message on X @ <a href="https://twitter.com/levelsio">@levelsio</a>. Yes you can use any data from this site as long as you mention it and link back!
        </p>
        
        <hr>
        <p>
            THE INFORMATION CONTAINED IN THIS WEBSITE IS FOR GENERAL INFORMATION PURPOSES ONLY. THE INFORMATION IS PROVIDED BY AIRLINE LIST AND LUGGAGELOSERS.COM AND WHILE WE ENDEAVOUR TO KEEP THE INFORMATION UP TO DATE AND CORRECT, WE MAKE NO REPRESENTATIONS OR WARRANTIES OF ANY KIND, EXPRESS OR IMPLIED, ABOUT THE COMPLETENESS, ACCURACY, RELIABILITY, SUITABILITY OR AVAILABILITY WITH RESPECT TO THE WEBSITE OR THE INFORMATION, PRODUCTS, SERVICES, OR RELATED GRAPHICS CONTAINED ON THE WEBSITE FOR ANY PURPOSE. ANY RELIANCE YOU PLACE ON SUCH INFORMATION IS THEREFORE STRICTLY AT YOUR OWN RISK. IN NO EVENT WILL WE BE LIABLE FOR ANY LOSS OR DAMAGE INCLUDING WITHOUT LIMITATION, INDIRECT OR CONSEQUENTIAL LOSS OR DAMAGE, OR ANY LOSS OR DAMAGE WHATSOEVER ARISING FROM LOSS OF DATA OR PROFITS ARISING OUT OF, OR IN CONNECTION WITH, THE USE OF THIS WEBSITE. THROUGH THIS WEBSITE YOU ARE ABLE TO LINK TO OTHER WEBSITES WHICH ARE NOT UNDER THE CONTROL OF AIRLINE LIST AND LUGGAGELOSERS.COM. WE HAVE NO CONTROL OVER THE NATURE, CONTENT AND AVAILABILITY OF THOSE SITES. THE INCLUSION OF ANY LINKS DOES NOT NECESSARILY IMPLY A RECOMMENDATION OR ENDORSE THE VIEWS EXPRESSED WITHIN THEM. EVERY EFFORT IS MADE TO KEEP THE WEBSITE UP AND RUNNING SMOOTHLY. HOWEVER, AIRLINE LIST AND LUGGAGELOSERS.COM TAKES NO RESPONSIBILITY FOR, AND WILL NOT BE LIABLE FOR, THE WEBSITE BEING TEMPORARILY UNAVAILABLE DUE TO TECHNICAL ISSUES BEYOND OUR CONTROL.
        </p>
        </div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to get root access to your Sleep Number bed (174 pts)]]></title>
            <link>https://dillan.org/articles/how-to-get-root-access-to-your-sleep-number-bed</link>
            <guid>40838167</guid>
            <pubDate>Sun, 30 Jun 2024 16:38:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dillan.org/articles/how-to-get-root-access-to-your-sleep-number-bed">https://dillan.org/articles/how-to-get-root-access-to-your-sleep-number-bed</a>, See on <a href="https://news.ycombinator.com/item?id=40838167">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2 id="table-of-contents">Table of Contents</h2>
<nav><ol><li><a href="#motivation">Motivation</a></li><li><a href="#pre-requisites">Pre-Requisites</a></li><li><a href="#gaining-root-access">Gaining Root Access</a></li><li><a href="#creating-a-local-network-control-and-monitoring-server">Creating a Local Network Control and Monitoring Server</a><ol><li><a href="#adding-rcd-scripts-to-the-realroot-partition-stored-on-disk-outside-the-chroot">Adding rc.d Scripts to the /real.root Partition Stored on Disk (Outside the chroot)</a></li><li><a href="#useful-commands">Useful Commands</a></li></ol></li><li><a href="#next-steps">Next Steps</a></li><li><a href="#appendix-original-u-boot-env-variables-on-my-hub">Appendix: Original U-Boot Env Variables on My Hub</a></li><li><a href="#footnote-label">Footnotes</a></li></ol></nav>
<p><em>Disclaimer: Following this guide will require modifying internal files on your Sleep Number hub. This will void your warranty and if something goes wrong as a result of this process, you will not receive help from Sleep Number to fix it. There are many ways you can damage your system, through both hardware and software modifications. The author provides no guarantees and you follow this process at your own risk.</em></p>
<p>As an Amazon Associate, I earn from qualifying purchases. Thank you for your support.</p>
<h2 id="motivation">Motivation</h2>
<p>I have been interested in exploring the possibility of local network access on my Sleep Number bed for a few years. A while back I created a <a href="https://homebridge.io/">homebridge</a> plugin for the platform that would let me control some of the settings of the bed through HomeKit or some automations. The "bed presence" value, which indicated whether somebody was in bed or not, was especially nice for running automations such as turning off all the lights or locking the door. However, after running the plugin for a couple years and growing the user base large enough, I received a friendly phone call from corporate Sleep Number asking me to kindly disable the plugin.</p>
<p>You see, I had set the plugin to request data from the SleepIQ API every 5 seconds to get an accurate reading on the bed presence value. Multiply that by the couple thousand users of the plugin at that point and the result was enough strain on their network that they had taken notice and started looking for the cause. They also weren't too fond of the branding of the repository, since to the untrained eye it looked like an official Sleep Number tool, which it definitely was not. Oh well, lessons learned, I shut it down.</p>
<p>This was the motivator for finding a way to access the local network and bypass their servers completely. I passed my learnings from the homebridge plugin to a good friend who restarted that project in a <a href="https://github.com/hbblebc/homebridge-bed-control">new and improved plugin</a> (which disables the bed presence monitoring by default and included lots of warnings before enabling it) and turned my focus to the hardware.</p>
<p>I cracked open the hub a couple times and looked around for anything obvious. At first, my attention was drawn to the J10 header near the CPU.</p>
<figure><img alt="J10 Header" loading="lazy" width="3024" height="2357" decoding="async" data-nimg="1" srcset="https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fj10.2e873fcb.png&amp;w=3840&amp;q=75 1x" src="https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fj10.2e873fcb.png&amp;w=3840&amp;q=75"><figcaption>J10 Header (I took the pictures after installing the pin headers. Yours are probably just holes.)</figcaption></figure>
<p>In one CPU configuration, those pins would contain UART lines. However, try as I might, I was never able to get any UART data out. The CPU is in a different configuration. For some reason, I never thought to test the J16 header lower down on the board during my first attempts, but recently I finally took notice of it.</p>
<figure><img alt="J16 Header" loading="lazy" width="3024" height="2564" decoding="async" data-nimg="1" srcset="https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fj16.b279ee9b.png&amp;w=3840&amp;q=75 1x" src="https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fj16.b279ee9b.png&amp;w=3840&amp;q=75"><figcaption>J16 Header</figcaption></figure>
<p>This time I wanted to be sure, so I bought a logic analyzer and connected it to all 10 available header pins.</p>
<figure><img alt="Uart data in the logic analyzer" loading="lazy" width="2478" height="970" decoding="async" data-nimg="1" srcset="https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogic_analyzer.501d0ea5.png&amp;w=3840&amp;q=75 1x" src="https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogic_analyzer.501d0ea5.png&amp;w=3840&amp;q=75"><figcaption>UART data in the logic analyzer</figcaption></figure>
<p>Bingo.</p>
<p>I hooked up my UART-TTY device and at long last was greeted with a device console.</p>
<figure><img alt="UART console showing u-boot bootloader output" loading="lazy" width="1293" height="602" decoding="async" data-nimg="1" srcset="https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fuart_console.36cba931.png&amp;w=1920&amp;q=75 1x, https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fuart_console.36cba931.png&amp;w=3840&amp;q=75 2x" src="https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fuart_console.36cba931.png&amp;w=3840&amp;q=75"><figcaption>UART console showing u-boot bootloader output</figcaption></figure>
<p>I spent some time dumping the flash to browse the file system on the board and look through the files for different vulnerabilities. At first I was searching for a backdoor that would allow anybody to log into the hub without needing to hook up a UART, but I came up empty. Well, not empty. <span>What I did find was a "convenient" backdoor that Sleep Number can use to SSH back into the hub</span> (and my internal home network as a result). Likely it is to perform maintenance on the hub as needed, but the paranoid part of me was not happy when I found that. Regardless of if you choose to follow this guide or are just reading for fun, I highly recommend you disconnect the wifi on your hub and only use bluetooth controls as much as possible. That being said, for those willing to do a little hardware work, setting up local network access is straightforward, and the rest of this post will detail the steps you need to follow to do so on your own hub.</p>
<p>This guide will also be useful for anybody who purchased a used hub from somebody else, only to find out that Sleep Number refuses to connect to it without an associated order number. The only extra requirement is to add a <code>bam-init.conf</code> file to the USB drive to provide network details to the hub (probably, I haven't tested that process yet).</p>
<h2 id="pre-requisites">Pre-Requisites</h2>
<p>This process was performed on Sleep Number Hub with model number: 360SIQ01D. It looks like this:</p>
<figure><img alt="Sleep Number Hub" loading="lazy" width="4129" height="3590" decoding="async" data-nimg="1" srcset="https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fhub.fcf67824.png&amp;w=3840&amp;q=75 1x" src="https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fhub.fcf67824.png&amp;w=3840&amp;q=75"><figcaption>Sleep Number Hub</figcaption></figure>
<p>You will also need a UART to TTY device and some other hardware tools.</p>
<table><thead><tr><th>Item</th><th>Description</th><th>Price</th><th>Paid Link</th></tr></thead><tbody><tr><td>USB-C to UART</td><td>This is the device I used because it is USB-C and less than $10 (at the time of writing)</td><td>$9.99</td><td><a href="https://amzn.to/3xr1rBk">https://amzn.to/3xr1rBk</a></td></tr><tr><td>USB-A to UART</td><td>There are also plenty of USB-A options, such as this one from the same company</td><td>$13.99</td><td><a href="https://amzn.to/3RAmHeR">https://amzn.to/3RAmHeR</a></td></tr><tr><td>Raspberry Pi Pico W</td><td>Another option is to buy a Raspberry Pi Pico W and install it inside the case permanently, so you can easily remotely connect to the console in case the SSH ever stops working<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref="true" aria-describedby="footnote-label">1</a></sup></td><td>$11.50</td><td><a href="https://amzn.to/3VQ5YXh">https://amzn.to/3VQ5YXh</a></td></tr><tr><td>2.54mm Pin Headers</td><td>These will let you add permanent pin headers to your board</td><td>$7.99</td><td><a href="https://amzn.to/4c9Arp8">https://amzn.to/4c9Arp8</a></td></tr><tr><td>Soldering Iron</td><td>Needed to solder the pin headers in place</td><td>$13.99</td><td><a href="https://amzn.to/3RzKQC4">https://amzn.to/3RzKQC4</a></td></tr><tr><td>PCB Clip Clamp</td><td>A temporary alternative to the above options. You can clip this to the pin headers on the board</td><td>$13.99</td><td><a href="https://amzn.to/3xiuXJE">https://amzn.to/3xiuXJE</a></td></tr></tbody></table>
<p><em>Prices are approximate and may have changed since the time of writing.</em></p>
<p>To make it easier to connect to the board, you will want to either get the pin headers and the soldering iron or the PCB clip clamp.</p>
<p>You will communicate with the UART device through a serial console. On Linux or Mac, you can use <code>minicom</code>. On Windows, PuTTY is a good choice.</p>
<p>You will also need a USB-A flash drive formatted as FAT32 or Ext3.</p>
<h2 id="gaining-root-access">Gaining Root Access</h2>
<ol>
<li>
<p>Connect your UART device to header J16 on the board.The pinout is as follows:</p>
<figure><img alt="UART Connection" loading="lazy" width="4032" height="3024" decoding="async" data-nimg="1" srcset="https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fuart_connection.6149aa37.png&amp;w=3840&amp;q=75 1x" src="https://dillan.org/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fuart_connection.6149aa37.png&amp;w=3840&amp;q=75"><figcaption>UART Connection</figcaption></figure>
<ul>
<li>pin 1 is TX (into hub)</li>
<li>pin 2 is RX (out of hub)</li>
<li>pin 3 is ground</li>
</ul>
</li>
<li>
<p>Connect your console to your UART device (minicom, etc.). The board uses a baud rate of 115200.</p>
</li>
<li>
<p>Power on your hub, you have 2 seconds to press &lt;SPACE&gt; to stop the auto-boot sequence.</p>
</li>
<li>
<p>Edit the boot environment variables:</p>
<ul>
<li>
<p>Back up the default environment variables. Run <code>printenv -a</code> and save the output somewhere you can use to recover the defaults if necessary. I have included a copy in the appendix of this post but my environment might differ from yours, so be sure to note any differences.</p>
</li>
<li>
<p>Run <code>editenv bootcmd</code> and remove the section that says <code>run set_bootargs;</code> (we are going to set the bootargs manually). The variable should contain the following:</p>
<div><pre><span data-line-number="1"><span>bootcmd</span><span>=</span><span>r</span><span>u</span><span>n</span><span> </span><span>find_board_name</span><span>;</span><span> </span><span>setenv</span><span> </span><span>boot_mmcdev</span><span> </span><span>0</span><span>;</span><span> </span><span>run</span><span> </span><span>bootcmd_mmc</span><span>;</span><span>setenv</span><span> </span><span>boot_mmcdev</span><span> </span><span>1</span><span>;</span><span> </span><span>run</span><span> </span><span>bootcmd_mmc</span></span></pre></div>
</li>
<li>
<p>The <code>/init</code> script is stored in the hashed bootrom, so we can't modify it without flashing an entirely new bootloader. Instead, we will do a runtime modification using the <code>bootargs</code> environment variable. Run <code>editenv bootargs</code> and add the following:</p>
<div><pre><span data-line-number="1"><span>console</span><span>=</span><span>t</span><span>t</span><span>y</span><span>m</span><span>x</span><span>c</span><span>0</span><span>,</span><span>1</span><span>1</span><span>5</span><span>2</span><span>0</span><span>0</span><span> </span><span>root</span><span>=</span><span>/</span><span>d</span><span>e</span><span>v</span><span>/</span><span>m</span><span>m</span><span>c</span><span>b</span><span>l</span><span>k</span><span>$</span><span>{</span><span>linux_mmcdev</span><span>}</span><span>p</span><span>1</span><span> </span><span>rootwait</span><span> </span><span>rdinit=/bin/bash</span><span> </span><span>-</span><span>-</span><span> </span><span>-</span><span>c</span><span> </span><span>"</span><span>sed -i 's/LMR=</span><span>`</span><span>.</span><span>*</span><span>`</span><span>/LMR=let_me_root/' /init; exec /init</span><span>"</span></span></pre></div>
<p>By default, the script is looking for an encrypted file that decrypts to the <code>let_me_root</code> phrase. We replaced the decryption line with the decrypted value so we can bypass the encryption requirement<sup><a href="#user-content-fn-2" id="user-content-fnref-2" data-footnote-ref="true" aria-describedby="footnote-label">2</a></sup>.</p>
</li>
<li>
<p>When everything looks correct, make the changes persistent with <code>saveenv</code>. You can try booting once before saving to make sure everything still works but you will need to repeat the above steps the next time you boot if you don't save the environment.</p>
</li>
</ul>
</li>
<li>
<p>For the first boot, you will need to insert a flash drive with a file named "let_me_root" on it. If your hub already has what appears to be a flash drive inserted, it is likely a Wi-Fi dongle that will cause a boot loop if it is not present. You will need a USB hub that allows you to connect multiple USB drives at once to get around this issue (just for the first boot). You can boot from the u-boot menu by running <code>run bootcmd</code>. Once you are booted, you should see the following output in the console:</p>
<pre><code>Starting OpenBSD Secure Shell server: sshd
done.
Starting ntpd: done
Starting crond: OK
INIT: no more processes left in this runlevel
</code></pre>
<p>At this point, if everything worked, you should be able to hit the enter key and see <code>root@bam-se:~#</code>.</p>
<p>If you do not see this, double-check the <code>bootargs</code> and make sure they match the example above. Also make sure your flash drive has the <code>let_me_root</code> file in place (its format should be FAT32 or EXT3, I don't know if any other formats will work but I know these will).</p>
</li>
<li>
<p>Once you have the prompt, we will make it persistent without needing the flash drive</p>
<ul>
<li>Remount the root partition as rw:<!-- -->
<div><pre><span data-line-number="1"><span>/bin/mount</span><span> </span><span>-</span><span>o</span><span> </span><span>remount,rw,async</span><span> </span><span>/</span></span></pre></div>
</li>
<li>Add the <code>let_me_root</code> file:<!-- -->
<div><pre><span data-line-number="1"><span>echo</span><span> </span><span>let_me_root</span><span> </span><span>&gt;</span><span> </span><span>/root/let_me_root</span></span></pre></div>
</li>
<li>Remove the flash drive, reboot, and verify you still have console access.</li>
</ul>
</li>
<li>
<p>Next, we will finish getting SSH access by adding a public key to the authorized_keys file</p>
<ul>
<li>If you haven't already, generate an SSH key on the machine you want to connect from. I recommend generating an <code>ecdsa</code> key:<!-- -->

</li>
<li>Make sure the root partition is mounted as rw, then run the following (substituting in your public key contents):<!-- -->
<div><pre><span data-line-number="1"><span>echo</span><span> </span><span>"</span><span>&lt;contents of id_ed25519.pub&gt;</span><span>"</span><span> </span><span>&gt;&gt;</span><span> </span><span>/root/.ssh/authorized_keys</span></span></pre></div>
</li>
<li>Test SSH access with <code>ssh root@$hub_ip -i &lt;path to id_ed25519&gt;</code>. You should be able to connect at this point.</li>
<li>If you are not connected, verify the contents of the <code>authorized_keys</code> file is formatted correctly (there should be two keys in the file).</li>
</ul>
</li>
</ol>
<p>Congratulations, you now have root access!</p>
<h2 id="creating-a-local-network-control-and-monitoring-server">Creating a Local Network Control and Monitoring Server</h2>
<p>By itself, root access is great but doesn't do much for us. We want to be able to replicate the controls provided by the app so we can control the bed over our local network instead.</p>
<p>The hub includes Python 2.7.18. While extremely old (keep in mind the Hub appears to have been last updated in 2018), it includes the <code>simpleHTTPServer</code> package, which will give us all the capability we need to remotely control and monitor the bed over the local network.</p>
<p>On your local machine, create a python file named <code>script_server.py</code>:</p>
<div><pre><span data-line-number="1"><span>import</span><span> </span><span>os</span></span>
<span data-line-number="2"><span>import</span><span> </span><span>subprocess</span></span>
<span data-line-number="3"><span>import</span><span> </span><span>BaseHTTPServer</span></span>
<span data-line-number="4"><span>from</span><span> </span><span>urlparse</span><span> </span><span>import</span><span> </span><span>urlparse</span><span>,</span><span> </span><span>parse_qs</span></span>
<span data-line-number="5"><span></span></span>
<span data-line-number="6"><span>SCRIPT_DIR</span><span> </span><span>=</span><span> </span><span>'</span><span>/bam/scripts</span><span>'</span></span>
<span data-line-number="7"><span></span></span>
<span data-line-number="8"><span>class</span><span> </span><span>MyHandler</span><span>(</span><span>BaseHTTPServer</span><span>.</span><span>BaseHTTPRequestHandler</span><span>)</span><span>:</span></span>
<span data-line-number="9"><span>    </span><span>def</span><span> </span><span>do_GET</span><span>(</span><span>self</span><span>)</span><span>:</span></span>
<span data-line-number="10"><span>        </span><span>parsed_path</span><span> </span><span>=</span><span> </span><span>urlparse</span><span>(</span><span>self</span><span>.</span><span>path</span><span>)</span></span>
<span data-line-number="11"><span>        </span><span>script_name</span><span> </span><span>=</span><span> </span><span>parsed_path</span><span>.</span><span>path</span><span>.</span><span>lstrip</span><span>(</span><span>'</span><span>/</span><span>'</span><span>)</span></span>
<span data-line-number="12"><span>        </span><span>script_path</span><span> </span><span>=</span><span> </span><span>os</span><span>.</span><span>path</span><span>.</span><span>join</span><span>(</span><span>SCRIPT_DIR</span><span>,</span><span> </span><span>script_name</span><span>)</span></span>
<span data-line-number="13"><span>        </span><span>if</span><span> </span><span>os</span><span>.</span><span>path</span><span>.</span><span>isfile</span><span>(</span><span>script_path</span><span>)</span><span>:</span></span>
<span data-line-number="14"><span>            </span></span>
<span data-line-number="15"><span>            </span><span>query_args</span><span> </span><span>=</span><span> </span><span>parse_qs</span><span>(</span><span>parsed_path</span><span>.</span><span>query</span><span>)</span></span>
<span data-line-number="16"><span>            </span><span>args</span><span> </span><span>=</span><span> </span><span>query_args</span><span>.</span><span>get</span><span>(</span><span>'</span><span>arg</span><span>'</span><span>,</span><span> </span><span>[</span><span>]</span><span>)</span></span>
<span data-line-number="17"><span></span></span>
<span data-line-number="18"><span>            </span></span>
<span data-line-number="19"><span>            </span><span>output</span><span> </span><span>=</span><span> </span><span>subprocess</span><span>.</span><span>check_output</span><span>(</span><span>[</span><span>script_path</span><span>]</span><span> </span><span>+</span><span> </span><span>args</span><span>)</span></span>
<span data-line-number="20"><span>            </span><span>self</span><span>.</span><span>send_response</span><span>(</span><span>200</span><span>)</span></span>
<span data-line-number="21"><span>            </span><span>self</span><span>.</span><span>end_headers</span><span>(</span><span>)</span></span>
<span data-line-number="22"><span>            </span><span>self</span><span>.</span><span>wfile</span><span>.</span><span>write</span><span>(</span><span>output</span><span>)</span></span>
<span data-line-number="23"><span>        </span><span>else</span><span>:</span></span>
<span data-line-number="24"><span>            </span><span>self</span><span>.</span><span>send_response</span><span>(</span><span>404</span><span>)</span></span>
<span data-line-number="25"><span>            </span><span>self</span><span>.</span><span>end_headers</span><span>(</span><span>)</span></span>
<span data-line-number="26"><span>            </span><span>self</span><span>.</span><span>wfile</span><span>.</span><span>write</span><span>(</span><span>'</span><span>Script not found</span><span>'</span><span>)</span></span>
<span data-line-number="27"><span></span></span>
<span data-line-number="28"><span>def</span><span> </span><span>run</span><span>(</span><span>server_class</span><span>=</span><span>BaseHTTPServer</span><span>.</span><span>HTTPServer</span><span>,</span><span> </span><span>handler_class</span><span>=</span><span>MyHandler</span><span>)</span><span>:</span></span>
<span data-line-number="29"><span>    </span><span>server_address</span><span> </span><span>=</span><span> </span><span>(</span><span>'</span><span>'</span><span>,</span><span> </span><span>8000</span><span>)</span><span>  </span></span>
<span data-line-number="30"><span>    </span><span>httpd</span><span> </span><span>=</span><span> </span><span>server_class</span><span>(</span><span>server_address</span><span>,</span><span> </span><span>handler_class</span><span>)</span></span>
<span data-line-number="31"><span>    </span><span>httpd</span><span>.</span><span>serve_forever</span><span>(</span><span>)</span></span>
<span data-line-number="32"><span></span></span>
<span data-line-number="33"><span>if</span><span> </span><span>__name__</span><span> </span><span>==</span><span> </span><span>"</span><span>__main__</span><span>"</span><span>:</span></span>
<span data-line-number="34"><span>    </span><span>run</span><span>(</span><span>)</span></span></pre></div>
<p>This script sets up an HTTP server that can run any of the scripts in <code>/bam/scripts</code>. You can provide arguments to the scripts with the query argument <code>arg</code> like so: <code>?arg=value1&amp;arg=value2...&amp;arg=valueN</code>. The result will be displayed in the browser.</p>
<p>Make sure you remounted the root partition as rw since the last reboot, then copy this script to the hub:</p>
<div><pre><span data-line-number="1"><span>scp</span><span> </span><span>-</span><span>O</span><span> </span><span>script_server.py</span><span> </span><span>root@</span><span>$</span><span>hub_ip</span><span>:~</span></span></pre></div>
<p>At this point, you can run the script and test it out, but it won't auto-start when you reboot the hub. One method of auto-starting the script would be to tack it onto one of the other startup scripts (initBAM seems like a good candidate). Another option is to add an <code>rc.d</code> script so it gets started by the OS. However, there is a snag—the <code>/etc</code> directory is copied from disk and stored in RAM on the system you log in to, so if we want to write to the disk where the original version lives, we will need to do a few extra steps.</p>
<h3 id="adding-rcd-scripts-to-the-realroot-partition-stored-on-disk-outside-the-chroot">Adding rc.d Scripts to the /real.root Partition Stored on Disk (Outside the chroot)</h3>
<p>The running OS instance is actually running inside a chroot that is set up by the bootloader <code>/init</code> script with many of the system files stored in a tmpfs partition so they can't be modified directly (past a reboot at least). However, we can mount the original partition and modify the files there, so they will be properly copied into place after we reboot.</p>
<p>First, create the following file on your local system named <code>script_server.sh</code>:</p>
<div><pre><span data-line-number="1"></span>
<span data-line-number="2"></span>
<span data-line-number="3"></span>
<span data-line-number="4"></span>
<span data-line-number="5"></span>
<span data-line-number="6"></span>
<span data-line-number="7"></span>
<span data-line-number="8"></span>
<span data-line-number="9"></span>
<span data-line-number="10"></span>
<span data-line-number="11"><span></span></span>
<span data-line-number="12"><span>dir</span><span>=</span><span>"</span><span>/root</span><span>"</span></span>
<span data-line-number="13"><span>cmd</span><span>=</span><span>"</span><span>python script_server.py</span><span>"</span></span>
<span data-line-number="14"><span></span></span>
<span data-line-number="15"><span>name</span><span>=</span><span>s</span><span>c</span><span>r</span><span>i</span><span>p</span><span>t</span><span>_</span><span>s</span><span>e</span><span>r</span><span>v</span><span>e</span><span>r</span></span>
<span data-line-number="16"><span>pid_file</span><span>=</span><span>"</span><span>/var/run/</span><span>$</span><span>name</span><span>.pid</span><span>"</span></span>
<span data-line-number="17"><span>stdout_log</span><span>=</span><span>"</span><span>/var/log/</span><span>$</span><span>name</span><span>.log</span><span>"</span></span>
<span data-line-number="18"><span>stderr_log</span><span>=</span><span>"</span><span>/var/log/</span><span>$</span><span>name</span><span>.err</span><span>"</span></span>
<span data-line-number="19"><span></span></span>
<span data-line-number="20"><span>get_pid</span><span>(</span><span>)</span><span> </span><span>{</span></span>
<span data-line-number="21"><span>    </span><span>cat</span><span> </span><span>"</span><span>$</span><span>pid_file</span><span>"</span></span>
<span data-line-number="22"><span>}</span></span>
<span data-line-number="23"><span></span></span>
<span data-line-number="24"><span>is_running</span><span>(</span><span>)</span><span> </span><span>{</span></span>
<span data-line-number="25"><span>    </span><span>[</span><span> </span><span>-f</span><span> </span><span>"</span><span>$</span><span>pid_file</span><span>"</span><span> </span><span>]</span><span> </span><span>&amp;&amp;</span><span> </span><span>ps</span><span> </span><span>`</span><span>get_pid</span><span>`</span><span> </span><span>&gt;</span><span> </span><span>/dev/null</span><span> </span><span>2</span><span>&gt;&amp;1</span></span>
<span data-line-number="26"><span>}</span></span>
<span data-line-number="27"><span></span></span>
<span data-line-number="28"><span>case</span><span> </span><span>"</span><span>$</span><span>1</span><span>"</span><span> </span><span>in</span></span>
<span data-line-number="29"><span>    </span><span>s</span><span>t</span><span>a</span><span>r</span><span>t</span><span>)</span></span>
<span data-line-number="30"><span>    </span><span>if</span><span> </span><span>is_running</span><span>;</span><span> </span><span>then</span></span>
<span data-line-number="31"><span>        </span><span>echo</span><span> </span><span>"</span><span>Already started</span><span>"</span></span>
<span data-line-number="32"><span>    </span><span>else</span></span>
<span data-line-number="33"><span>        </span><span>echo</span><span> </span><span>"</span><span>Starting </span><span>$</span><span>name</span><span>"</span></span>
<span data-line-number="34"><span>        </span><span>cd</span><span> </span><span>"</span><span>$</span><span>dir</span><span>"</span></span>
<span data-line-number="35"><span>        </span><span>$</span><span>cmd</span><span> </span><span>&gt;&gt;</span><span> </span><span>"</span><span>$</span><span>stdout_log</span><span>"</span><span> </span><span>2</span><span>&gt;&gt;</span><span> </span><span>"</span><span>$</span><span>stderr_log</span><span>"</span><span> </span><span>&amp;</span></span>
<span data-line-number="36"><span>        </span><span>echo</span><span> </span><span>$</span><span>!</span><span> </span><span>&gt;</span><span> </span><span>"</span><span>$</span><span>pid_file</span><span>"</span></span>
<span data-line-number="37"><span>        </span><span>if</span><span> </span><span>!</span><span> </span><span>is_running</span><span>;</span><span> </span><span>then</span></span>
<span data-line-number="38"><span>            </span><span>echo</span><span> </span><span>"</span><span>Unable to start, see </span><span>$</span><span>stdout_log</span><span> and </span><span>$</span><span>stderr_log</span><span>"</span></span>
<span data-line-number="39"><span>            </span><span>exit</span><span> </span><span>1</span></span>
<span data-line-number="40"><span>        </span><span>fi</span></span>
<span data-line-number="41"><span>    </span><span>fi</span></span>
<span data-line-number="42"><span>    </span><span>;;</span></span>
<span data-line-number="43"><span>    </span><span>s</span><span>t</span><span>o</span><span>p</span><span>)</span></span>
<span data-line-number="44"><span>    </span><span>if</span><span> </span><span>is_running</span><span>;</span><span> </span><span>then</span></span>
<span data-line-number="45"><span>        </span><span>echo</span><span> </span><span>-</span><span>n</span><span> </span><span>"</span><span>Stopping </span><span>$</span><span>name</span><span>..</span><span>"</span></span>
<span data-line-number="46"><span>        </span><span>kill</span><span> </span><span>`get_pid`</span></span>
<span data-line-number="47"><span>        </span><span>for</span><span> </span><span>i</span><span> </span><span>in</span><span> </span><span>{1..10}</span></span>
<span data-line-number="48"><span>        </span><span>do</span></span>
<span data-line-number="49"><span>            </span><span>if</span><span> </span><span>!</span><span> </span><span>is_running</span><span>;</span><span> </span><span>then</span></span>
<span data-line-number="50"><span>                </span><span>break</span></span>
<span data-line-number="51"><span>            </span><span>fi</span></span>
<span data-line-number="52"><span></span></span>
<span data-line-number="53"><span>            </span><span>echo</span><span> </span><span>-</span><span>n</span><span> </span><span>"</span><span>.</span><span>"</span></span>
<span data-line-number="54"><span>            </span><span>sleep</span><span> </span><span>1</span></span>
<span data-line-number="55"><span>        </span><span>done</span></span>
<span data-line-number="56"><span>        </span><span>echo</span></span>
<span data-line-number="57"><span></span></span>
<span data-line-number="58"><span>        </span><span>if</span><span> </span><span>is_running</span><span>;</span><span> </span><span>then</span></span>
<span data-line-number="59"><span>            </span><span>echo</span><span> </span><span>"</span><span>Not stopped; may still be shutting down or shutdown may have failed</span><span>"</span></span>
<span data-line-number="60"><span>            </span><span>exit</span><span> </span><span>1</span></span>
<span data-line-number="61"><span>        </span><span>else</span></span>
<span data-line-number="62"><span>            </span><span>echo</span><span> </span><span>"</span><span>Stopped</span><span>"</span></span>
<span data-line-number="63"><span>            </span><span>if</span><span> </span><span>[</span><span> </span><span>-f</span><span> </span><span>"</span><span>$</span><span>pid_file</span><span>"</span><span> </span><span>]</span><span>;</span><span> </span><span>then</span></span>
<span data-line-number="64"><span>                </span><span>rm</span><span> </span><span>"</span><span>$</span><span>pid_file</span><span>"</span></span>
<span data-line-number="65"><span>            </span><span>fi</span></span>
<span data-line-number="66"><span>        </span><span>fi</span></span>
<span data-line-number="67"><span>    </span><span>else</span></span>
<span data-line-number="68"><span>        </span><span>echo</span><span> </span><span>"</span><span>Not running</span><span>"</span></span>
<span data-line-number="69"><span>    </span><span>fi</span></span>
<span data-line-number="70"><span>    </span><span>;;</span></span>
<span data-line-number="71"><span>    </span><span>r</span><span>e</span><span>s</span><span>t</span><span>a</span><span>r</span><span>t</span><span>)</span></span>
<span data-line-number="72"><span>    </span><span>$</span><span>0</span><span> </span><span>stop</span></span>
<span data-line-number="73"><span>    </span><span>if</span><span> </span><span>is_running</span><span>;</span><span> </span><span>then</span></span>
<span data-line-number="74"><span>        </span><span>echo</span><span> </span><span>"</span><span>Unable to stop, will not attempt to start</span><span>"</span></span>
<span data-line-number="75"><span>        </span><span>exit</span><span> </span><span>1</span></span>
<span data-line-number="76"><span>    </span><span>fi</span></span>
<span data-line-number="77"><span>    </span><span>$</span><span>0</span><span> </span><span>start</span></span>
<span data-line-number="78"><span>    </span><span>;;</span></span>
<span data-line-number="79"><span>    </span><span>s</span><span>t</span><span>a</span><span>t</span><span>u</span><span>s</span><span>)</span></span>
<span data-line-number="80"><span>    </span><span>if</span><span> </span><span>is_running</span><span>;</span><span> </span><span>then</span></span>
<span data-line-number="81"><span>        </span><span>echo</span><span> </span><span>"</span><span>Running</span><span>"</span></span>
<span data-line-number="82"><span>    </span><span>else</span></span>
<span data-line-number="83"><span>        </span><span>echo</span><span> </span><span>"</span><span>Stopped</span><span>"</span></span>
<span data-line-number="84"><span>        </span><span>exit</span><span> </span><span>1</span></span>
<span data-line-number="85"><span>    </span><span>fi</span></span>
<span data-line-number="86"><span>    </span><span>;;</span></span>
<span data-line-number="87"><span>    </span><span>*</span><span>)</span></span>
<span data-line-number="88"><span>    </span><span>echo</span><span> </span><span>"</span><span>Usage: </span><span>$</span><span>0</span><span> {start|stop|restart|status}</span><span>"</span></span>
<span data-line-number="89"><span>    </span><span>exit</span><span> </span><span>1</span></span>
<span data-line-number="90"><span>    </span><span>;;</span></span>
<span data-line-number="91"><span>esac</span></span>
<span data-line-number="92"><span></span></span>
<span data-line-number="93"><span>exit</span><span> </span><span>0</span></span></pre></div>
<p>Copy it to the hub the same as you did the python script previously.</p>
<p>Next, we will move it into place in the pre-init system. Run the following commands to get the disk mounted properly:</p>
<div><pre><span data-line-number="1"><span>mkdir</span><span> </span><span>tmp</span></span>
<span data-line-number="2"><span>ROOT_PART</span><span>=</span><span>/</span><span>d</span><span>e</span><span>v</span><span>/</span><span>m</span><span>m</span><span>c</span><span>b</span><span>l</span><span>k</span><span>0</span><span>p</span><span>1</span></span>
<span data-line-number="3"><span>/bin/mount</span><span> </span><span>-</span><span>a</span></span>
<span data-line-number="4"><span>/bin/mount</span><span> </span><span>-</span><span>o</span><span> </span><span>rw,noatime</span><span> </span><span>$</span><span>{</span><span>ROOT_PART</span><span>}</span><span> </span><span>tmp</span></span></pre></div>
<p>Now we will move the script to its proper home and add the necessary symlinks:</p>
<div><pre><span data-line-number="1"><span>mv</span><span> </span><span>script_server.sh</span><span> </span><span>tmp/etc/init.d</span></span>
<span data-line-number="2"><span>chmod</span><span> </span><span>+x</span><span> </span><span>tmp/etc/init.d/script_server.sh</span></span>
<span data-line-number="3"><span>ln</span><span> </span><span>-</span><span>s</span><span> </span><span>../init.d/script_server.sh</span><span> </span><span>tmp/etc/rc0.d/K99script_server.sh</span></span>
<span data-line-number="4"><span>ln</span><span> </span><span>-</span><span>s</span><span> </span><span>../init.d/script_server.sh</span><span> </span><span>tmp/etc/rc3.d/S99script_server.sh</span></span>
<span data-line-number="5"><span>ln</span><span> </span><span>-</span><span>s</span><span> </span><span>../init.d/script_server.sh</span><span> </span><span>tmp/etc/rc4.d/S99script_server.sh</span></span>
<span data-line-number="6"><span>ln</span><span> </span><span>-</span><span>s</span><span> </span><span>../init.d/script_server.sh</span><span> </span><span>tmp/etc/rc5.d/S99script_server.sh</span></span>
<span data-line-number="7"><span>ln</span><span> </span><span>-</span><span>s</span><span> </span><span>../init.d/script_server.sh</span><span> </span><span>tmp/etc/rc6.d/K99script_server.sh</span></span>
<span data-line-number="8"><span>reboot</span></span></pre></div>
<p>Once it finishes rebooting, try pointing your browser at <code>http://$hub_ip:8000/bamstat</code>. If everything is working correctly you should see some status information about the hub displayed in your browser window.</p>
<h3 id="useful-commands">Useful Commands</h3>
<p>The <code>/bio</code> script appears to be the primary control script for the bed. You can specify commands with the url <code>/bio?arg=XXXX</code>. Here are some useful ones for controlling the bed:</p>
<table><thead><tr><th>Command</th><th>Description</th></tr></thead><tbody><tr><td><code>arg=PSNL</code></td><td>Get the last set sleep number value for the left bed side</td></tr><tr><td><code>arg=PSNR</code></td><td>Get the last set sleep number value for the right bed side</td></tr><tr><td><code>arg=PSNl</code></td><td>Get the current sleep number value for the left bed side</td></tr><tr><td><code>arg=PSNr</code></td><td>Get the current sleep number value for the right bed side</td></tr><tr><td><code>arg=PSNX</code></td><td>Get the last set and current sleep number values for both bed sides</td></tr><tr><td><code>arg=PSNS&amp;arg=L100</code></td><td>Set the sleep number for the left bed side to 100 (L or R for side and 5..100 for value)</td></tr><tr><td><code>arg=SPAU</code></td><td>Get the bed privacy setting</td></tr><tr><td><code>arg=SPAU&amp;arg=on</code></td><td>Set the bed privacy setting (<code>off</code> to disable)</td></tr><tr><td><code>arg=LBPL</code></td><td>Get the presence value for the left side</td></tr><tr><td><code>arg=LBPR</code></td><td>Get the presence value for the right side</td></tr><tr><td><code>arg=LBPX</code></td><td>Get the presence value for both sides</td></tr><tr><td><code>arg=LRSG</code></td><td>Get the responsive air setting for both sides</td></tr><tr><td><code>arg=LRLE&amp;arg=on</code></td><td>Set the responsive air setting for the left side to on</td></tr><tr><td><code>arg=LRRE&amp;arg=off</code></td><td>Set the responsive air setting for the right side to off</td></tr><tr><td><code>arg=MFST</code></td><td>Get the head and foot position for both sides</td></tr><tr><td><code>arg=MFUL&amp;arg=100&amp;arg=0</code></td><td>Set the head position for the left side (0..100 for the position. The second argument is speed, 0=fast, 1=slow)</td></tr><tr><td><code>arg=MFUR&amp;arg=100&amp;arg=0</code></td><td>Set the head position for the right side</td></tr><tr><td><code>arg=MFFL&amp;arg=100&amp;arg=0</code></td><td>Set the foot position for the left side</td></tr><tr><td><code>arg=MFFR&amp;arg=100&amp;arg=0</code></td><td>Set the foot position for the right side</td></tr><tr><td><code>arg=MFO3</code></td><td>Get the right underbed light status (if you have a bed with other outlets or lights, MFO1..4 all work)</td></tr><tr><td><code>arg=MFSO&amp;arg=IBT</code><sup><a href="#user-content-fn-3" id="user-content-fnref-3" data-footnote-ref="true" aria-describedby="footnote-label">3</a></sup></td><td>Set the outlet values, I=index&lt;1=R, 2=L, 3=R-under, 4=L-under, 5=Both, 6=Both-under, 7=All, 8=All-R, 9=All-L&gt;; B=brightness&lt;0=off, 1=on/bright, 2=dim, 3=moderate&gt; T=timer&lt;0-180&gt;. Timer is optional</td></tr><tr><td><code>arg=MUAS&amp;arg=on</code></td><td>Enable or disable the auto setting for the underbed light (<code>off</code> to disable)</td></tr><tr><td><code>arg=FWGL</code></td><td>Get the footwarming level and timer for the left side</td></tr><tr><td><code>arg=FWGR</code></td><td>Get the footwarming level and timer for the right side</td></tr><tr><td><code>arg=FWSL&amp;arg=100&amp;arg=360</code></td><td>Set the footwarming level and timer for the left side (level is 0..100 and timer is 0..360)</td></tr><tr><td><code>arg=FWSR&amp;arg=100&amp;arg=360</code></td><td>Set the footwarming level and timer for the right side</td></tr><tr><td><code>arg=SBAS</code></td><td>Baseline the bed</td></tr></tbody></table>
<p>There are many other controls in the <code>bio</code> script, such as getters and setters for foundation presets, snore configuration, DualTemp controls, and status information (watch out for the more destructive commands such as <code>factory reset</code> or the radio controls). You can explore the script to find all the available commands: if you point your browser at <code>/bio?arg=help</code>, you will see a list of the commands you can run. If you add a command as a second argument to the <code>help</code> call, it will provide detailed information for that command.</p>
<h2 id="next-steps">Next Steps</h2>
<p>There are a few things to explore in the OS now that you have access:</p>
<ul>
<li>
<p>The bed control functionality is all in the <code>/bam</code> root directory. You can explore the various scripts contained there and learn how the hub operates.</p>
</li>
<li>
<p>I spent some time exploring the system to find a backdoor that doesn't require UART access but it appears (fortunately) that the developers covered their tracks pretty well and shut down all the obvious access channels I could think of. If anybody finds something I might have missed, I would love to hear about it.</p>
</li>
<li>
<p>The hub communicates with the Sleep Number servers by opening an SSH tunnel and providing a reverse tunnel back to the hub that their developers can use to connect to the hub and do maintenance when needed. The idea that unknown users can directly connect to my internal home network is a scary thought, so I will probably be disconnecting the hub from the external internet once I am satisfied with my internal network control script. It also makes me wonder how many other internet-connected appliances include a similar backdoor into the home network like this one has.</p>
</li>
<li>
<p>It might be fun to write a simple progressive web app to control the bed settings that can directly replace the SleepIQ app.</p>
</li>
</ul>
<p>If anybody has any feedback, please reach out! I would love to hear from you.</p>
<h2 id="appendix-original-u-boot-env-variables-on-my-hub">Appendix: Original U-Boot Env Variables on My Hub</h2>
<div><pre><span data-line-number="1"><span>baudrate</span><span>=</span><span>1</span><span>1</span><span>5</span><span>2</span><span>0</span><span>0</span></span>
<span data-line-number="2"><span>bootcmd</span><span>=</span><span>r</span><span>u</span><span>n</span><span> </span><span>find_board_name</span><span>;</span><span> </span><span>run</span><span> </span><span>set_bootargs</span><span>;</span><span>setenv</span><span> </span><span>boot_mmcdev</span><span> </span><span>0</span><span>;</span><span> </span><span>run</span><span> </span><span>bootcmd_mmc</span><span>;</span><span>setenv</span><span> </span><span>boot_mmcdev</span><span> </span><span>1</span><span>;</span><span> </span><span>run</span><span> </span><span>bootcmd_mmc</span></span>
<span data-line-number="3"><span>bootcmd_mmc</span><span>=</span><span>m</span><span>m</span><span>c</span><span> </span><span>dev</span><span> </span><span>$</span><span>{</span><span>boot_mmcdev</span><span>}</span><span>;</span><span> </span><span>mmc</span><span> </span><span>read</span><span> </span><span>$</span><span>{</span><span>loadaddr</span><span>}</span><span> </span><span>0x800</span><span> </span><span>$</span><span>{</span><span>initrd_size</span><span>}</span><span>;</span><span>bootm</span><span> </span><span>$</span><span>{</span><span>loadaddr</span><span>}</span><span>#</span><span>$</span><span>{</span><span>board_name</span><span>}</span></span>
<span data-line-number="4"><span>bootdelay</span><span>=</span><span>2</span></span>
<span data-line-number="5"><span>bootm_size</span><span>=</span><span>0</span><span>x</span><span>1</span><span>0</span><span>0</span><span>0</span><span>0</span><span>0</span><span>0</span><span>0</span></span>
<span data-line-number="6"><span>fdtcontroladdr</span><span>=</span><span>b</span><span>f</span><span>c</span><span>8</span><span>3</span><span>1</span><span>f</span><span>0</span></span>
<span data-line-number="7"><span>find_board_name</span><span>=</span><span>i</span><span>f</span><span> </span><span>gpio</span><span> </span><span>input</span><span> </span><span>102</span><span>;</span><span> </span><span>then</span><span> </span><span>if</span><span> </span><span>gpio</span><span> </span><span>input</span><span> </span><span>98</span><span>;</span><span> </span><span>then</span><span> </span><span>setenv</span><span> </span><span>board_name</span><span> </span><span>siq-360</span><span>;</span><span>else</span><span> setenv board_name siq-selc</span><span>;</span><span>fi</span><span>;</span><span> </span><span>else</span><span> </span><span>setenv</span><span> </span><span>board_name</span><span> </span><span>siq-se</span><span>;</span><span>fi</span></span>
<span data-line-number="8"><span>initrd_size</span><span>=</span><span>0</span><span>x</span><span>7</span><span>0</span><span>0</span><span>0</span></span>
<span data-line-number="9"><span>linux_mmcdev</span><span>=</span><span>0</span></span>
<span data-line-number="10"><span>loadaddr</span><span>=</span><span>0</span><span>x</span><span>8</span><span>2</span><span>0</span><span>0</span><span>0</span><span>0</span><span>0</span><span>0</span></span>
<span data-line-number="11"><span>set_bootargs</span><span>=</span><span>s</span><span>e</span><span>t</span><span>e</span><span>n</span><span>v</span><span> </span><span>bootargs</span><span> </span><span>console=ttymxc0,115200</span><span> </span><span>root=/dev/mmcblk</span><span>$</span><span>{</span><span>linux_mmcdev</span><span>}</span><span>p1</span><span> </span><span>rootwait</span></span>
<span data-line-number="12"><span>stderr</span><span>=</span><span>s</span><span>e</span><span>r</span><span>i</span><span>a</span><span>l</span></span>
<span data-line-number="13"><span>stdin</span><span>=</span><span>s</span><span>e</span><span>r</span><span>i</span><span>a</span><span>l</span></span>
<span data-line-number="14"><span>stdout</span><span>=</span><span>s</span><span>e</span><span>r</span><span>i</span><span>a</span><span>l</span></span></pre></div>
<section data-footnotes="true">
<ol>
<li id="user-content-fn-1">
<p>Setting this up is left as an exercise for the reader <a href="#user-content-fnref-1" data-footnote-backref="true" aria-label="Back to content">↩</a></p>
</li>
<li id="user-content-fn-2">
<p>This encrypted file is a key-hole the developers put in place to grant both console and SSH access to the hub. If the original encrypted file were to be obtained or reverse-engineered, most of this process would not be necessary. <a href="#user-content-fnref-2" data-footnote-backref="true" aria-label="Back to content">↩</a></p>
</li>
<li id="user-content-fn-3">
<p>On my version of the <code>bio</code> script, the <code>MFSO</code> lines were in the wrong order in the <code>LIST</code> and couldn't be called. I had to move them up a couple rows to get them to work. <a href="#user-content-fnref-3" data-footnote-backref="true" aria-label="Back to content">↩</a></p>
</li>
</ol>
</section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Dev rejects CVE severity, makes his GitHub repo read-only (108 pts)]]></title>
            <link>https://www.bleepingcomputer.com/news/security/dev-rejects-cve-severity-makes-his-github-repo-read-only/</link>
            <guid>40837791</guid>
            <pubDate>Sun, 30 Jun 2024 15:37:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bleepingcomputer.com/news/security/dev-rejects-cve-severity-makes-his-github-repo-read-only/">https://www.bleepingcomputer.com/news/security/dev-rejects-cve-severity-makes-his-github-repo-read-only/</a>, See on <a href="https://news.ycombinator.com/item?id=40837791">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><img alt="GitHub" height="900" src="https://www.bleepstatic.com/content/hl-images/2024/06/10/GitHub.jpg" width="1600"></p>
<p>The popular open source&nbsp;project, 'ip' recently had its GitHub repository archived, or made "read-only" by its developer.</p>
<p>Fedor Indutny, due to&nbsp;a CVE report&nbsp;filed against his project, started getting hounded by people on the internet bringing the vulnerability to his attention.</p>
<p>Unfortunately, Indutny's case isn't isolated. In recent times,&nbsp;open-source developers have been met with an uptick in receiving debatable or, in some cases, outright bogus CVE reports&nbsp;filed for their projects without confirmation.</p>
<p>This can lead to unwarranted panic among the users of these projects and alerts being generated by security scanners, all of which turn into a source of headache for developers.</p>
<h2>'node-ip' GitHub repository archived</h2>
<p>Earlier this month,&nbsp;Fedor Indutny who is the author of the '<a href="https://github.com/indutny/node-ip" target="_blank" rel="nofollow noopener">node-ip</a>' project <a href="https://docs.github.com/en/repositories/archiving-a-github-repository/archiving-repositories" target="_blank" rel="nofollow noopener">archived the project's GitHub</a> repository effectively making it read-only, and limiting the ability of people to open new issues (discussions),&nbsp;pull requests, or submit comments to the project.</p>
<div>
<figure><img alt="node-up GitHub repo archived" height="279" src="https://www.bleepstatic.com/images/news/u/1164866/2024/Jun/node-ip-archived/github-archived.jpg" width="600"><figcaption><strong>node-ip GitHub repo archived and made 'read-only' </strong>(BleepingComputer)</figcaption></figure></div>
<p>The 'node-ip' project exists on the npmjs.com registry as <a href="https://www.npmjs.com/package/ip" target="_blank" rel="nofollow noopener">the 'ip' package</a>&nbsp;which scores 17 million downloads weekly, making it one of the most popular IP address parsing utilities in use by JavaScript developers.</p>
<p>On Tuesday, June 25th, Indutny took to social media to voice his&nbsp;reasoning behind archiving 'node-ip':</p>
<p>"There is something that have [sic] been bothering me for past few months, and resulted in me archiving node-ip repo on GitHub," <a href="http://fosstodon.org/@indutny/112678415251316597" target="_blank" rel="nofollow noopener">posted</a> the developer via his Mastodon account.</p>
<p>It has to do with&nbsp;<a href="https://github.com/advisories/GHSA-78xj-cgh5-2h22" target="_blank" rel="nofollow noopener">CVE-2023-42282</a>, a vulnerability disclosed in the project earlier this year.</p>
<p>"Someone filed a dubious CVE about my npm package, and then I started getting messages from all people getting warnings from 'npm audit'," states the developer in the same post.</p>
<p>Node.js developers using other open projects, such as npm packages and&nbsp;dependencies in their application can run the "<a href="https://docs.npmjs.com/auditing-package-dependencies-for-security-vulnerabilities" target="_blank" rel="nofollow noopener">npm audit</a>" command to check if any of these projects used by their application have had vulnerabilities reported against them.</p>
<div>
<figure><a href="https://fosstodon.org/@indutny/112678415251316597" target="_blank" rel="nofollow noopener"><img alt="Bothered dev took to social media to voice his concerns" height="549" src="https://www.bleepstatic.com/images/news/u/1164866/2024/Jun/node-ip-archived/dev-mast-thread.jpg" width="500"></a>
<figcaption><strong>Bothered dev took to social media to voice his concerns </strong>(Mastodon)</figcaption></figure></div>
<p>The CVE has to do with the utility not correctly identifying private IP addresses supplied to it in a non-standard format, such as hexadecimal. This would cause the 'node-ip' utility to treat a&nbsp;private&nbsp;IP address (in hex format) such as "&nbsp;0x7F.1..." (which represents 127.1...) as public.</p>
<p>Should an application rely solely&nbsp;on node-ip to check if a provided&nbsp;IP address is public, non-standard inputs can cause&nbsp;inconsistent results to be returned by the affected versions of the utility.</p>
<h2>'Dubious' security impact</h2>
<p>Public sources suggest that&nbsp;CVE-2023-42282 had&nbsp;<a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42282" target="_blank" rel="nofollow noopener">originally been scored</a> as a 9.8 or "critical."</p>
<p>Although Indutny <a href="https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa" target="_blank" rel="nofollow noopener">did indeed fix</a>&nbsp;the issue in later versions of his project, he disputed that the bug constituted an <em>actual</em>&nbsp;vulnerability and that too of an elevated severity.</p>
<p>"I believe that the security impact of the bug is rather dubious," the developer earlier wrote,&nbsp;<a href="http://github.com/github/advisory-database/pull/3504#issuecomment-2189530624" target="_blank" rel="nofollow noopener">requesting&nbsp;GitHub to revoke&nbsp;the CVE</a>.</p>
<p>"While I didn't really intend the module to be used for any security related checks, I'm very curious how an untrusted input could end up being passed into <em>ip.isPrivate</em> or <em>ip.isPubli</em>c [functions] and then used for verifying where the network connection came from."</p>
<p>Disputing a CVE is no straightforward task either, as <a href="https://github.com/github/advisory-database/pull/3504#issuecomment-2189690990" target="_blank" rel="nofollow noopener">a GitHub security team member</a>&nbsp;explained. It&nbsp;requires a project maintainer to chase&nbsp;the <a href="https://www.cve.org/ProgramOrganization/CNAs" target="_blank" rel="nofollow noopener">CVE Numbering Authorities (CNA)</a> that had originally issued the CVE.</p>
<p>CNAs have conventionally comprised NIST's&nbsp;NVD and MITRE.&nbsp;Over the past few years, technology companies and security vendors joined the list and are also able to&nbsp;issue CVEs at will.</p>
<p>These CVEs, along with the vulnerability description and the reported severity rating, are then syndicated and republished by other security databases, such as&nbsp;<a href="https://github.com/advisories" target="_blank" rel="nofollow noopener">GitHub advisories</a>.</p>
<p>Following Indutny's post on social media, <a href="https://fosstodon.org/@indutny/112695224782685623" target="_blank" rel="nofollow noopener">GitHub lowered the severity</a> of the CVE in their&nbsp;database and suggested&nbsp;the developer turn on&nbsp;<a href="https://docs.github.com/en/code-security/security-advisories/working-with-repository-security-advisories/configuring-private-vulnerability-reporting-for-a-repository" target="_blank" rel="nofollow noopener">private vulnerability reporting</a>&nbsp;to better manage incoming reports and cut noise.</p>
<p>At the time of writing, the vulnerability's severity&nbsp;on NVD&nbsp;remains&nbsp;"critical."</p>
<h2>A growing nuisance</h2>
<p>The CVE system, originally designed to help security researchers&nbsp;ethically report vulnerabilities in a project and catalog these after responsible disclosure, has lately&nbsp;attracted a segment of community members filing unverified&nbsp;reports.</p>
<p>While many&nbsp;of the CVEs are filed in good faith by responsible researchers and represent credible security vulnerabilities, a recently growing pattern involves&nbsp;newbie security enthusiasts and bug bounty hunters ostensibly "collecting" CVEs&nbsp;to enrich their resume rather than reporting security bugs that constitute real-world, practical impact from exploitation.</p>
<p>Consequently, developers and project maintainers have pushed back.</p>
<p>In September 2023,&nbsp;Daniel Stenberg, creator of the well-known&nbsp;software project 'curl' rebuked the "<a href="http://daniel.haxx.se/blog/2023/09/05/bogus-cve-follow-ups/" target="_blank" rel="nofollow noopener">bogus curl issue CVE-2020-19909</a>," a Denial of Service bug reported against the project.</p>
<p>Originally scored as a 9.8 or&nbsp;critical in severity per&nbsp;<a href="https://nvd.nist.gov/vuln/detail/CVE-2020-19909#VulnChangeHistorySection" target="_blank" rel="nofollow noopener">NVD's history</a>, the now-disputed CVE has had its rating&nbsp;dropped to a "low" 3.3 after discussions ensued questioning&nbsp;the tangible security impact of the&nbsp;flaw.</p>
<p>"This was not a unique instance and it was not the first time it happened. This has been going on for years,"&nbsp;Stenberg wrote criticizing the CVE entry.</p>
<p>"I am not a fan of philosophical thought exercises around vulnerabilities."&nbsp;</p>
<p>"They are distractions from the real matters and I find them rather pointless. It is easy to test how this flaw plays out on numerous platforms using numerous compilers."</p>
<p>"It's not a security problem on any of them."</p>
<p>According to&nbsp;Stenberg, the technical details of the "silly bug"&nbsp;meant it could result in unexpected behavior, not a security flaw that could be abused.</p>
<p>Yet another npm project, <a href="https://www.npmjs.com/package/micromatch" target="_blank" rel="nofollow noopener">micromatch</a>&nbsp;which gets 64 million weekly downloads has had 'high' severity <a href="https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS" target="_blank" rel="nofollow noopener">ReDoS</a> vulnerabilities reported against it with its creators being chased by community members inquiring about the issues.</p>
<p>"Can you point out at least one library that implements micromatch or braces that is susceptible to the vulnerability so we can see how it's actually a vulnerability in the real world, and not just theoretical?" <a href="https://github.com/micromatch/micromatch/issues/243#issuecomment-1851899922" target="_blank" rel="nofollow noopener">asked</a> Jon Schlinkert, reacting to&nbsp;<a href="https://github.com/advisories/GHSA-952p-6rrq-rcjv" target="_blank" rel="nofollow noopener">CVE-2024-4067</a>&nbsp;filed for his project, micromatch.</p>
<div><p>In the same thread, the developer, apparently after failing to receive a satisfactory proof of concept exploit from the vulnerability reporter <a href="https://github.com/micromatch/micromatch/issues/243#issuecomment-2109070220" target="_blank" rel="nofollow noopener">responded</a> with:</p><p>
"I get these issues all the time for things that can't even be a vulnerability unless you do it to yourself. Like regex in low level libraries that will never be accessible to a browser, unless you're letting users submit regular expressions in a web form that are just used by your application."</p></div>
<p>"I asked for examples of how a real-world library would encounter these 'vulnerabilities'&nbsp;and you never responding&nbsp;with an example."</p>
<p>I too, recently messaged micromatch developers after a&nbsp;third party informed us of a potential "risk" posed by the project, as it seemed like the responsible thing to do at the time.</p>
<p>Unfortunately,&nbsp;as opposed to&nbsp;representing an exploitable vulnerability, it&nbsp;ended up being a nuisance report (much like CVE-2024-4067) that developers had already been chased about.</p>
<p>Other than just being an annoyance for project maintainers, the act of getting&nbsp;CVEs issued for unverified&nbsp;vulnerability reports is akin to stirring up&nbsp;a Denial of Service (DoS) against a project, its creators, and its wider consumer base, and for good reasons.</p>
<p>Developer security solutions&nbsp;(such as npm audit) which are designed to prevent vulnerable components from reaching your applications may trigger alerts if any known vulnerabilities are detected and depending on your settings, break your builds.</p>
<p>"Jackson had this problem a few months back, where someone <a href="https://github.com/FasterXML/jackson-databind/issues/3972" target="_blank" rel="nofollow noopener">reported a critical CVE</a> against the project and broke builds all around the planet," a commentator had <a href="https://news.ycombinator.com/item?id=37608394" target="_blank" rel="nofollow noopener">written</a> in 2023, reacting to the bogus curl CVE.</p>
<p>Rather than&nbsp;being a security problem with the project, as <a href="https://github.com/FasterXML/jackson-databind/issues/3972#issuecomment-1584114446" target="_blank" rel="nofollow noopener">other developers stated</a>, the issue represented the&nbsp;inherent nature of recursive Java data structures.</p>
<h2>Where is the balance?</h2>
<p>Recurring incidents like these raise the question, how does one strike a balance?</p>
<p>Relentlessly reporting theoretical vulnerabilities can leave open-source developers, many&nbsp;of who are volunteers, exhausted from triaging noise.</p>
<p>On the flip side, would it be ethical if security practitioners, including novices, sat on what they thought was a security flaw—so as not to&nbsp;inconvenience&nbsp;the project maintainers?&nbsp;</p>
<p>A third problem arises for projects without an active&nbsp;maintainer.&nbsp;Abandoned software&nbsp;projects that have not been touched in years contain vulnerabilities that, even when disclosed, will never be fixed and there exists no means to contact their original maintainer.</p>
<p>In such cases, intermediaries including CNAs and bug bounty platforms are left in limbo.</p>
<p>On receiving a vulnerability report from a researcher, these organizations may not always be able to sufficiently vet every such report independently. Without hearing from the (now absent)&nbsp;project maintainers, they may be compelled to assign and publish&nbsp;CVEs after the "responsible disclosure" window has elapsed.</p>
<p>No simple answer exists to these problems just yet.</p>
<p>Until the security research, developer, and vendor communities&nbsp;come&nbsp;together to identify an effective solution, developers are bound to get frustrated with bogus reports burning them out, and the CVE system becoming&nbsp;flooded with exaggerated&nbsp;"vulnerabilities" that may look credible on paper but are effectively moot.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Drop-In SQS Replacement Based on SQLite (550 pts)]]></title>
            <link>https://github.com/poundifdef/SmoothMQ</link>
            <guid>40837610</guid>
            <pubDate>Sun, 30 Jun 2024 15:11:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/poundifdef/SmoothMQ">https://github.com/poundifdef/SmoothMQ</a>, See on <a href="https://news.ycombinator.com/item?id=40837610">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">SmoothMQ</h2><a id="user-content-smoothmq" aria-label="Permalink: SmoothMQ" href="#smoothmq"></a></p>
<p dir="auto">SmoothMQ is a drop-in replacement for SQS with a much smoother developer experience.
It has a functional UI, observability, tracing, message scheduling, and rate-limiting.
SmoothMQ lets you run a private SQS instance on any cloud.</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Getting Started</h2><a id="user-content-getting-started" aria-label="Permalink: Getting Started" href="#getting-started"></a></p>
<p dir="auto">SmoothMQ deploys as a single go binary and can be used by any existing SQS client.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Running</h2><a id="user-content-running" aria-label="Permalink: Running" href="#running"></a></p>
<p dir="auto">This will run a UI on <code>:3000</code> and an SQS-compatible server on <code>:3001</code>.</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Connecting</h2><a id="user-content-connecting" aria-label="Permalink: Connecting" href="#connecting"></a></p>
<p dir="auto">This works with any SQS client in any language.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Python</h3><a id="user-content-python" aria-label="Permalink: Python" href="#python"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="import boto3

# Simply change the endpoint_url
sqs = boto3.client(&quot;sqs&quot;, ..., endpoint_url=&quot;http://localhost:3001&quot;)
sqs.send_message(QueueUrl=&quot;...&quot;, MessageBody=&quot;hello world&quot;)"><pre><span>import</span> <span>boto3</span>

<span># Simply change the endpoint_url</span>
<span>sqs</span> <span>=</span> <span>boto3</span>.<span>client</span>(<span>"sqs"</span>, ..., <span>endpoint_url</span><span>=</span><span>"http://localhost:3001"</span>)
<span>sqs</span>.<span>send_message</span>(<span>QueueUrl</span><span>=</span><span>"..."</span>, <span>MessageBody</span><span>=</span><span>"hello world"</span>)</pre></div>
<p dir="auto">Celery works seamlessly:</p>
<div dir="auto" data-snippet-clipboard-copy-content="app = Celery(&quot;tasks&quot;, broker_url=&quot;sqs://...@localhost:3001&quot;)"><pre><span>app</span> <span>=</span> <span>Celery</span>(<span>"tasks"</span>, <span>broker_url</span><span>=</span><span>"sqs://...@localhost:3001"</span>)</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">UI</h2><a id="user-content-ui" aria-label="Permalink: UI" href="#ui"></a></p>
<p dir="auto">The UI lets you manage queues and search individual messages.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/poundifdef/SmoothMQ/blob/main/docs/queue.gif"><img src="https://github.com/poundifdef/SmoothMQ/raw/main/docs/queue.gif" alt="Dashboard UI" data-animated-image=""></a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The weirdest QNX bug I've encountered (2021) (162 pts)]]></title>
            <link>https://mental-reverb.com/blog.php?id=29</link>
            <guid>40837411</guid>
            <pubDate>Sun, 30 Jun 2024 14:42:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mental-reverb.com/blog.php?id=29">https://mental-reverb.com/blog.php?id=29</a>, See on <a href="https://news.ycombinator.com/item?id=40837411">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><h3>30 May 2021</h3></p><div><p>I am responsible for the reliability of the firmware updates on our devices and this work never gets boring. The thing about firmware updates is that by definition, every bug is caused by the updater because before installing the affected version, the bug was not present. You could say that updates are the cause and the solution of all software problems. So, a lot of update bug reports that find their way to me have nothing to do with the updater per se, they just manifest themselves immediately, giving the impression that the updater is broken. But I'm getting ahead of myself, so let's start from the beginning.</p>

<p>A new bug comes in: Update failed from version X to version Y, error getting log files from sensor. After that, the user manually rebooted the machine and it worked again.</p>

<p>I connect to the machine and download all the logfiles. In the logs, I see that the update installed successfully. After the reboot which starts the newly installed firmware, there were some minor problems: Some processes took a bit longer to start than expected. Other than that, the log looks clean, no errors that could explain this behaviour.</p>

<p>I try to install the affected Firmware version Y on various devices. The problem does not appear. But as luck has it, a co-worker encountered the problem and had the presence of mind to recognize it and leave the system undisturbed for analysis. Connecting to the system is difficult because it is laggy and slow. The device can barely handle simple commands. Weird. Let's run <code>top</code>.</p>

<p><code>60 processes; 646 threads;
CPU states: 16.0% user, 35.0% kernel
CPU  0 Idle: 55.4%
CPU  1 Idle: 42.4%
Memory: 0 total, 543M avail, page size 4K

      PID   TID PRI STATE    HH:MM:SS    CPU  COMMAND
        1    12  10 Run       1:51:21  17.72% kernel
        1     5  10 Run       2:13:10  17.04% kernel
   602168     1  10 Rdy       3:30:01  13.98% ps
   229398     1  21 Rcv       0:09:32   0.67% smb-tunnelcreek
   778301     1  10 Rply      0:00:00   0.62% top
   253978     2  21 NSlp      0:05:43   0.40% devi-tsc2007
        1     6  10 Rcv       2:08:09   0.25% kernel
        7     2  21 Rcv       0:01:41   0.07% io-pkt-v4-hc
   581675    15  10 CdV       0:00:17   0.07% telescope
     8200     9  21 Rcv       0:00:35   0.05% io-usb

             Min        Max       Average
CPU 0 idle:   55%        55%        55%
CPU 1 idle:   42%        42%        42%
Mem Avail:   543MB      543MB      543MB
Processes:    60         60         60
Threads:     646        646        646
</code></p>

<p>Okay, we immediately have some clues here. The QNX kernel is doing a lot of stuff and so is <code>ps</code>. We see that the CPU load of the two cores is about 50%. But we know that the system has hyperthreading and only has one physical core, so the real load is actually more like 100%. To me, it looks like <code>ps</code> is saturating the core completely, the kernel load is probably caused by <i>whatever</i> ps is doing.</p>

<p>Who is calling <code>ps</code>? With <code>ps -ef</code> we can see the <code>PPID</code>, the parent process id, to track down who spawned this process. Ironically, we use <code>ps</code> to debug this <code>ps</code> problem. Like this, I find that it was spawned by the shell <code>sh</code>, which in turn was spawned by one of our proprietary processes. Equipped with the knowledge of which process is affected and analysing the logs to find out where this process got stuck, I quickly find the offending line of code. It looks like this: <code>int rc = system( "ps -e | grep Foo" );</code> where <code>Foo</code> is some program whose presence we need to check. Not the prettiest way to implement it, but it is legacy code that worked for many years. I also see that this code only gets executed on certain old hardwares. This explains why the problem never reproduced on most systems, they have newer hardware. Even on the old hardware, it is exceedingly rare and hard to reproduce. Killing the offending <code>ps</code> process, which loops infinitely otherwise, unblocks the system and restores normal operation.</p>

<p>We now know a lot about this problem, but what is the root cause? The <code>ps</code> program causes 100% CPU load... What is this? We use QNX 6.6 and <code>ps</code> is supplied as a closed source binary. To understand this problem, we need to analyse the <code>ps</code> utility itself. We can already do that at the assembly level. The QNX Momentics IDE has an option "Attach to Remote Process via QConn" with which I can tap right into the running process. We see that it is stuck in a loop that calls <code>devctl()</code> over and over again. The return value of this <code>devctl()</code> is <code>3</code> which is <code>ESRCH</code>: No such process. This error comes straight from <code>MsgSendv_r</code> which returned <code>-3</code>. It documents that <code>ESRCH</code> means <code>The server died while the calling thread was SEND-blocked or REPLY-blocked.</code>.</p>

<p>Okay, so, <code>ps</code> gets stuck in an infinite loop. Dare I say it: Do we have a <code>ps</code> bug on our hands? The QNX ecosystem is generally quite robust. In the past, it almost always ended up being my own mistake when I suspected problems in QNX and its utilities. But how can the infinite loop seen in live assembly debugging be explained with a user error of <code>ps</code>?</p>

<p>At this point, an intermezzo with some QNX history is in order. A bit more than a decade ago, the QNX source code was available to the public. Back then, QNX had a vibrant open source community. People would experiment with the kernel, write various useful utilities and help each other in forums. QNX even had a fully featured Desktop GUI, ran Firefox and was self-hosting, so you could develop for QNX right on QNX itself with full IDE and compiler support. It was beautiful. Then QNX was bought, source code access was revoked and the community largely withered away. Questions were increasingly asked via private support tickets directly to QNX, locked away from the public. QNX know-how becomes harder and harder to acquire, open source software for modern QNX releases is essentially non-existent and the driver situation is a catastrophe. The QNX kernel is the most beautiful and interesting kernel I have ever had the pleasure of working with, but it lies in the shackles of corporate ownership.</p>

<p>Back to the bug. So there is old QNX source code lying around. Do you think anyone has modified the source code of the <code>ps</code> utility throughout the last 15 years? Me neither! Let's dive right into the <a href="https://github.com/BenjaminRi/openqnx/tree/master/trunk/utils/p/ps">old code</a>.</p>

<p>The old <code>ps</code> utility compiles for QNX 6.6 on the first try. Nice! It works just like the closed source binary we have. I install my newly compiled <code>ps</code>, write some software to automatically test reboots in a loop overnight and am able to reproduce the problem with this custom <code>ps</code> binary. Perfect! Now we can use the "Attach to Remote Process via QConn" feature again, but this time we have the source code of our <code>ps</code>. I already read the source code of the old <code>ps</code> before I did all of this, and I already had my suspicions as to which <code>devctl()</code> call was being repeated endlessly in the loop, so it comes as no surprise when the debugger points me to the <a href="https://github.com/BenjaminRi/openqnx/blob/master/trunk/utils/p/ps/nto/ps.c#L396">following line</a>:</p>

<p><code>	if (devctl (fd, DCMD_PROC_TIDSTATUS, &amp;tinfo, sizeof (tinfo), 0) == EOK)
</code></p>

<p>The root cause of the bug is the following. For every process in the <code>/proc</code> directory, <code>ps</code> opens a file descriptor to this process' address space (<code>as</code>) file to read the process information to be displayed. For each process, it loops through all the threads of this process, and the bug is that this loop has insufficient termination criteria (in other words, in some cases, it loops infinitely). The problem occurs when the process whose threads we want to inspect terminates right before <code>ps</code> enters this loop. In that case, the <code>devctl()</code> call fails and as you can see in the following simplified snippet, it will never terminate because the <code>if</code>-clause is never entered.</p>

<p><code>while (1)
{
	if (devctl (fd, DCMD_PROC_TIDSTATUS, &amp;tinfo, sizeof (tinfo), 0) == EOK)
	{	
		//[...]

		tcount++;
		// stop when we have gone through each thread, or when
		// the user only want process info
		if ((usingThreads == 0) || (tcount == info.num_threads))
			break;
	}
	tinfo.tid++;
}
</code></p>

<p>I also verify this hypothesis by halting the <code>ps</code> process in the debugger, killing the process whose threads we are about to inspect and resuming <code>ps</code> and it hangs in precisely the same way. This is what it looks like in the QNX Momentics IDE:</p>

<p>
<img src="https://mental-reverb.com/img/weirdestbug_debug_screenshot.png">
</p>

<p>After this analysis, I'm quite sure that this 15 years old bug is still alive and well in our closed source binary.</p>

<p>Why did this problem suddenly appear in our firmware? We can only speculate, it must have been changes in the scheduling order or timing at boot time. The bug is a race condition, so it can rear its ugly head whenever it wants. The affected code was old and deployed in production for many years.</p>

<p>How did I fix it? I briefly considered shipping our own <code>ps</code> utility, but I was still unsure about other bugs that might potentially be fixed in the latest closed source binary, those fixes would be lost again if I revert to the old open source version. At the end of the day, I decided to comb through our code base and just eliminate the usage of <code>ps</code> in non-interactive code, there weren't that many instances. Our <code>ps</code> utility remains buggy as it is, but it's pretty much impossible to reproduce this bug in an interactive terminal, and our firmware no longer uses it. Needless to say, this particular update problem never occurred again after that.</p>

<p>Does the <code>ps</code> bug still exist in QNX ecosystems more recent than QNX 6.6? Most likely, yes. If it was open source, I would fix it and send a pull request. Because it's not, they have to deal with the issue themselves. Maybe in a decade, an unfortunate soul runs into this bug again. Let's hope this blog post will save them some trouble.</p>

<p>What do we learn?

</p><ul>
<li>No matter how battle-tested and old the code and how reputable the distributor - the code contains bugs.</li>
<li>Old bugs can manifest themselves seemingly out of nowhere, caused by subtle changes in timing or memory layout.</li>
<li>Whenever the file system is involved, there is a significant danger that bugs are caused by race conditions.</li>
<li>Closed source operating systems and ecosystems are a pain to debug. Even old open source releases help.</li>
<li>Do not use interactive shell utilities in non-interactive code. Avoid <code>system()</code> whenever possible. Not only is the performance terrible, it can give rise to bugs like this one.</li>
<li>Make sure your loops terminate. Bounded loop variants that increase or decrease strictly monotonically guarantee loop termination. Don't be too clever with loops!</li>
</ul>


</div><h2>Comments</h2><div><p><a rel="ugc" href="http://no.websote/">Lolol </a> wrote on 30 June 2024<br>This is just a test of all the spam in this comment field <br><a href="https://mental-reverb.com/blog.php?c=635">reply</a></p></div><div><p><a rel="ugc" href="https://www.youtube.com/watch?v=BbdloImXq_Y">action-packed</a> wrote on 29 June 2024<br>After I originally commented I appear to have clicked on the <br>
-Notify me when new comments are added- checkbox and now every time <br>
a comment is added I get 4 emails with the exact same comment.<br>
There has to be an easy method you can remove me from that <br>
service? Cheers!<br><a href="https://mental-reverb.com/blog.php?c=634">reply</a></p></div><div><p><a rel="ugc" href="http://www.nainitalescort.co.in/">nainital escort</a> wrote on 27 June 2024<br>Our nainital girls are not only beautiful and charming but also highly intelligent and well-educated, making them the perfect companions for any occasion. <br><a href="https://mental-reverb.com/blog.php?c=633">reply</a></p></div><div><p><a rel="ugc" href="https://www.janvisingh.in/">janvisingh</a> wrote on 27 June 2024<br>Delhi is a city known for its rich history, vibrant culture, and bustling nightlife. <br><a href="https://mental-reverb.com/blog.php?c=632">reply</a></p></div><div><p><a rel="ugc" href="https://www.aloki.in/">aloki</a> wrote on 27 June 2024<br>That's where our call girls come in. <br><a href="https://mental-reverb.com/blog.php?c=631">reply</a></p></div><div><p>&lt;a href="https://www.shreenandini.in/delhi-call-girls.html"&gt;Delhi Escort Service&lt;/a&gt; || wrote on 22 June 2024<br>Escorts service at cheap rates<br><a href="https://mental-reverb.com/blog.php?c=628">reply</a></p></div><div><p>Tanya singh wrote on 22 June 2024<br>Mahipalpur Call Girls Service || Join us our service<br><a href="https://mental-reverb.com/blog.php?c=627">reply</a></p></div><div><p>asd wrote on 22 June 2024<br>&lt;a href="https://www.google.com"&gt;hello google&lt;/a&gt;<br>
[url=https://www.google.com] welcome google[/url]<br><a href="https://mental-reverb.com/blog.php?c=626">reply</a></p></div><div><p><a rel="ugc" href="https://www.pubpub.org/user/sarang777-link">sarang777</a> wrote on 20 June 2024<br>Hey this is somewhat of off topic but I was wanting to know if blogs use <br>
WYSIWYG editors or if you have to manually code with HTML.<br>
I'm starting a blog soon but have no coding expertise so I wanted <br>
to get advice from someone with experience. <br>
Any help would be greatly appreciated!<br><a href="https://mental-reverb.com/blog.php?c=625">reply</a></p></div><div><p><a rel="ugc" href="https://www.engineering.com/profile/Boca777Link">boca777</a> wrote on 15 June 2024<br>Thanks  for any other excellent article. The place else may anyone get that type of information in such an ideal approach of writing?<br>
I've a presentation next week, and I am at the look for such information.<br><a href="https://mental-reverb.com/blog.php?c=624">reply</a></p></div><div><p><a rel="ugc" href="https://herbalspirit.com.au/">50% &nbsp;Spirit Liquor shop</a> wrote on 15 June 2024<br>Shop a wide range of 50 Spirit Liquor and Ukraine vodka at Herbal Spirit store in Victoria at competitive prices or order online.</p><p>
<a href="https://mental-reverb.com/blog.php?c=623">reply</a></p></div><div><p><a rel="ugc" href="https://teletype.in/@spacefortuna">teletype.in</a> wrote on 13 June 2024<br>Retrouvez ainsi toutes les slots les plus populaires comme Lost Mystery Chests, Blood Moon Wilds ou Valley of <br>
the Gods et profitez des dernières sorties comme Dragon Lore GigaRise, Rock Bottom ou encore Temple of heroes.<br><a href="https://mental-reverb.com/blog.php?c=622">reply</a></p></div><div><p><a rel="ugc" href="http://briansclub.co.in/">bclub</a> wrote on 12 June 2024<br>Welcome to the Briansclub Store ! With easy and secure BriansClub login, you’ll unlock access to a world-class Dumps and CVV2 Shop.</p><p>
<a href="https://mental-reverb.com/blog.php?c=621">reply</a></p></div><div><p><a rel="ugc" href="https://puneagency.in/">Pune Call Girls Service</a> wrote on 07 June 2024<br>Are you trying to find something new and interesting? That's me! My name is Pihu Sharma. I'm 23 years old, from Pune, and I have a great sense of humor and hands. I also get along with people easily. I work as a call girl in Pune and provide fantastic service.<br>
https://bit.ly/3WyO9Nd</p><p>
<a href="https://mental-reverb.com/blog.php?c=619">reply</a></p></div><div><p><a rel="ugc" href="https://bookmarkerz.com/story17181439/what-you-need-to-know-about-on-the-web-gaming-to-maintain-your-loved-ones-safe">page</a> wrote on 06 June 2024<br>Excellent website you have here but I was wanting to know if you <br>
knew of any community forums that cover the same topics discussed <br>
in this article? I'd really love to be a part of group where <br>
I can get feed-back from other experienced individuals that share the same <br>
interest. If you have any suggestions, please <br>
let me know. Bless you!<br><a href="https://mental-reverb.com/blog.php?c=618">reply</a></p></div><div><p><a rel="ugc" href="https://ae.oobben.org/category/Personals/Escorts-Dubai">dubai escorts</a> wrote on 04 June 2024<br>Visit our &lt;a href="https://ae.oobben.org/category/Personals/Spa-Massage-Dubai"&gt;Best Massaage  in Dubai&lt;/a&gt; on Airport road and let our skilled and professional massage therapists bring you to a place of ultimate relaxation and revitalisation. Find &lt;a href="https://ae.oobben.org/category/Personals/Escorts-Dubai"&gt;Dubai escorts&lt;/a&gt; online today at Oobben. Enjoy the company of most beautiful escort ladies in UAE providing incall &amp; outcall service 24/7. Discover top &lt;a href="https://ae.oobben.org/category/Personals/Bars-Clubs-Dubai"&gt;dubai night club&lt;/a&gt; plus pubs and clubs, from rooftop lounges to beach bars.<br><a href="https://mental-reverb.com/blog.php?c=616">reply</a></p></div><div><p><a rel="ugc" href="https://pk.xhabibi.com/category/escorts">lahore escorts</a> wrote on 04 June 2024<br>Hye Guys find &lt;a href="https://pk.xhabibi.com/category/dating/call-girl"&gt;call girl Lahore&lt;/a&gt; on Xhabibi website and find &lt;a href="https://pk.xhabibi.com/category/phone-cam"&gt;Cam Sex Service&lt;/a&gt; in every city and &lt;a href="https://pk.xhabibi.com/category/phone-cam"&gt;Cam Sex Lahore&lt;/a&gt; Book unforgettable beauty and wellness &lt;a href="https://pk.xhabibi.com/category/phone-cam"&gt;Cam Sex Islamabad&lt;/a&gt;  encounters with the Fresha cellular application &lt;a href="https://pk.xhabibi.com/category/escorts"&gt;Lahore Escorts&lt;/a&gt; The simplest way to find out major-rated salons and spas &lt;a href="https://pk.xhabibi.com/category/escorts"&gt;Escorts in Lahore&lt;/a&gt; visit to our Lahore escorts gallery should you searching for a wonderful Females &lt;a href="https://pk.xhabibi.com/location/Karachi/217"&gt;Karachi Escorts&lt;/a&gt; visit to our Karach escorts gallery should you searching for a wonderful Female &lt;a href="https://pk.xhabibi.com/location/Karachi/217"&gt;Escorts in Karachi&lt;/a&gt; visit to our Islamabad escorts gallery should you searching for a wonderful Female &lt;a href="https://pk.xhabibi.com/category/personal"&gt;Islamabad Escorts&lt;/a&gt;. visit to our Islamabad escorts gallery should you searching for a wonderful Female &lt;a href="https://pk.xhabibi.com/category/personal"&gt;Escorts in Islamabad&lt;/a&gt;. gentlemen who demand the Woman &lt;a href="https://pk.xhabibi.com/category/call-girls"&gt;Call girls Lahore&lt;/a&gt; Business mans who demand the &lt;a href="https://pk.xhabibi.com/category/call-girls"&gt;Call girls Karachi&lt;/a&gt;. Boys want to find &lt;a href="https://pk.xhabibi.com/category/call-girls"&gt;Call girls Islamabad&lt;/a&gt;. Find &lt;a href="https://pk.xhabibi.com/category/call-girls"&gt;Call girls Faisalabad&lt;/a&gt; on Xhabibi website.<br><a href="https://mental-reverb.com/blog.php?c=615">reply</a></p></div><div><p><a rel="ugc" href="https://www.trustpilot.com/review/brysonwoodhomes.com">Scammer John Wood</a> wrote on 03 May 2024<br>Does your blog have a contact page? I'm having problems locating it but, I'd like to <br>
send you an e-mail. I've got some creative ideas for your blog you might be interested <br>
in hearing. Either way, great site and I look forward <br>
to seeing it develop over time.<br><a href="https://mental-reverb.com/blog.php?c=592">reply</a></p></div><div><p><a rel="ugc" href="https://www.pdfhelp.net/da/extract-pdf-pages">UdtræK Pdf-Sider</a> wrote on 01 May 2024<br>Today, I went to the beach with my kids. I found a sea shell and gave it to my 4 year old daughter and said "You can hear the ocean if you put this to your ear." She put the shell <br>
to her ear and screamed. There was a hermit crab inside and it pinched her <br>
ear. She never wants to go back! LoL I know this is completely off topic but I had to tell someone!<br><a href="https://mental-reverb.com/blog.php?c=591">reply</a></p></div><div><p><a rel="ugc" href="https://www.urfi.in/">Urfi</a> wrote on 26 April 2024<br>Wow, fantastic blog layout! How long have you been blogging for?<br><a href="https://mental-reverb.com/blog.php?c=588">reply</a></p></div><div><p><a rel="ugc" href="https://saatnyangebacod.click/">hiburan138</a> wrote on 13 April 2024<br>Thanks a lot for sharing this with all of us you actually realize what you are talking <br>
approximately! Bookmarked. Kindly additionally discuss with my site =).<br>
We can have a hyperlink trade agreement between us<br><a href="https://mental-reverb.com/blog.php?c=574">reply</a></p></div><div><p><a rel="ugc" href="https://pvp777bagus.editorx.io/my-site-1">pvp777</a> wrote on 12 April 2024<br>Touche. Solid arguments. Keep up the great effort.<br><a href="https://mental-reverb.com/blog.php?c=573">reply</a></p></div><div><p><a rel="ugc" href="https://www.islandrhythmsblogs.com/gospel-soca-shantal-lindsay-sets-the-tone/">gospel soca</a> wrote on 12 April 2024<br>There's certainly a great deal to find out about this topic.<br>
I like all of the points you've made.<br><a href="https://mental-reverb.com/blog.php?c=572">reply</a></p></div><div><p><a rel="ugc" href="https://seo-textagentur.at/">SEO ÖSTERREICH</a> wrote on 09 April 2024<br>Wow that was odd. I just wrote an extremely long comment but after <br>
I clicked submit my comment didn't show up.</p><p>

Grrrr... well I'm not writing all that over again. Anyhow, just wanted to say superb blog!<br><a href="https://mental-reverb.com/blog.php?c=569">reply</a></p></div><div><p><a rel="ugc" href="https://www.youtube.com/watch?v=drVtfgIy0-g">Festive Celebrations</a> wrote on 29 March 2024<br>Thank you for the good writeup. It in fact was <br>
a amusement account it. Look advanced to more added agreeable from you!</p><p>

By the way, how can we communicate?<br><a href="https://mental-reverb.com/blog.php?c=562">reply</a></p></div><div><p><a rel="ugc" href="https://165.227.45.153/">lumi777 login</a> wrote on 05 March 2024<br>My brother recommended I might like this web site. He was once entirely right.<br>
This submit actually made my day. You can not believe simply how so much time I had spent for this information! Thank <br>
you!<br><a href="https://mental-reverb.com/blog.php?c=550">reply</a></p></div><div><p><a rel="ugc" href="https://167.71.177.93/">lumi777</a> wrote on 19 March 2024<br>This web site really has all of the info <br>
I wanted concerning this subject and didn't know who to ask.<br><a href="https://mental-reverb.com/blog.php?c=558">reply</a></p></div><div><p><a rel="ugc" href="https://149.28.147.79/">abditogel</a> wrote on 04 March 2024<br>Hi there, just wanted to say, I loved this article.<br>
It was practical. Keep on posting!<br><a href="https://mental-reverb.com/blog.php?c=549">reply</a></p></div><div><p><a rel="ugc" href="https://shought.com/">DAFTAR</a> wrote on 02 March 2024<br>Pertama kalinya saya melihat postingan yang sangat bermanfaat ini dan sangat memberikan wawasan yang sangat luas kepada kita semua</p><p>

Referensi :</p><p>

https://pacific-hogar.com</p><p>

https://shought.com</p><p>

https://thedigitalken.com<br><a href="https://mental-reverb.com/blog.php?c=548">reply</a></p></div><div><p><a rel="ugc" href="https://taperiabuenisimo.com/">slot gacor</a> wrote on 01 March 2024<br>I'm no longer sure the place you're getting your information, <br>
but great topic. I must spend a while studying <br>
more or working out more. Thank you for fantastic information I was on the lookout for this information for my mission.<br><a href="https://mental-reverb.com/blog.php?c=547">reply</a></p></div><div><p><a rel="ugc" href="http://45.55.47.126/">artis777 login</a> wrote on 18 February 2024<br>At this moment I am going away to do my breakfast, later than having my breakfast coming <br>
yet again to read other news.<br><a href="https://mental-reverb.com/blog.php?c=531">reply</a></p></div><div><p><a rel="ugc" href="https://officinapecin.com/wp-content/uploads/2024/terbagus/">daftar slot</a> wrote on 13 February 2024<br>Thank you for every other informative site.</p><p>

The place else may I get that kind of info written in such a perfect manner?<br>
I have a project that I'm just now running on, and I've been on the look out for such information.<br><a href="https://mental-reverb.com/blog.php?c=529">reply</a></p></div><div><p><a rel="ugc" href="https://gratischip.thegioiso247.vn/">WINSLOT77</a> wrote on 12 February 2024<br>Hey just wanted to give you a quick heads up and let you <br>
know a few of the pictures aren't loading properly. I'm not sure why <br>
but I think its a linking issue. I've tried it in two different browsers and both show the same results.<br><a href="https://mental-reverb.com/blog.php?c=527">reply</a></p></div><div><p><a rel="ugc" href="http://ismailsalar.com.tr/wp-content/uploads/2024/01/">slot gacor</a> wrote on 07 February 2024<br>My brother recommended I would possibly like this website.<br>
He used to be entirely right. This submit truly made my day.<br>
You can not imagine simply how a lot time I had spent for this information! Thanks!<br><a href="https://mental-reverb.com/blog.php?c=524">reply</a></p></div><div><p><a rel="ugc" href="https://www.youtube.com/watch?v=vo0i7hXtwhM">shannu siri.</a> wrote on 05 February 2024<br>I know this site provides quality depending posts and other stuff, <br>
is there any other web site which gives these kinds of stuff in quality?<br><a href="https://mental-reverb.com/blog.php?c=522">reply</a></p></div><div><p><a rel="ugc" href="https://ayoceria777.ukit.me/">ceria777</a> wrote on 01 February 2024<br>Hello, this weekend is fastidious for me, for the reason that this time i am <br>
reading this wonderful educational paragraph here at my residence.<br><a href="https://mental-reverb.com/blog.php?c=521">reply</a></p></div><div><p><a rel="ugc" href="https://www.adventistsingles.org/">QH88</a> wrote on 28 January 2024<br>It's actually a cool and useful piece of information. I'm<br>
satisfied that you just shared this helpful info with<br>
us.<br><a href="https://mental-reverb.com/blog.php?c=518">reply</a></p></div><div><p><a rel="ugc" href="https://www.adventistsingles.org/">QH88 ADVENT</a> wrote on 28 January 2024<br>&lt;p&gt;It's great, visit an experience with the perfect scale of entertainment: &lt;a href="https://www.adventistsingles.org/" rel="nofollow ugc"&gt;QH88&lt;/a&gt;&lt;/p&gt;<br><a href="https://mental-reverb.com/blog.php?c=517">reply</a></p></div><div><p><a rel="ugc" href="https://butuhhiburan.com/">hiburan138</a> wrote on 27 January 2024<br>It's actually a cool and useful piece of information. I'm <br>
satisfied that you just shared this helpful info with <br>
us. Please stay us up to date like this. Thank you for sharing.<br><a href="https://mental-reverb.com/blog.php?c=516">reply</a></p></div><div><p><a rel="ugc" href="https://ceria777-slot.vercel.app/">ceria777</a> wrote on 26 January 2024<br>When I initially commented I clicked the "Notify me when new comments are added" checkbox and now each <br>
time a comment is added I get four emails with the same <br>
comment. Is there any way you can remove me from that service?</p><p>

Cheers!<br><a href="https://mental-reverb.com/blog.php?c=515">reply</a></p></div><div><p><a rel="ugc" href="https://www.buffalorumblings.com/users/baruceria777">ceria777</a> wrote on 15 February 2024<br>Hi there! This is my 1st comment here so I just wanted to give a quick shout out and <br>
tell you I truly enjoy reading your blog posts. Can you suggest any other blogs/websites/forums <br>
that deal with the same topics? Thank you so much!<br><a href="https://mental-reverb.com/blog.php?c=530">reply</a></p></div><div><p><a rel="ugc" href="https://slot.sga508puh.com/">sga508</a> wrote on 24 January 2024<br>Today, I went to the beachfront with my kids. I found <br>
a sea shell and gave it to my 4 year old daughter and said "You can hear the ocean if you put this to your ear." She placed the shell to <br>
her ear and screamed. There was a hermit crab inside and it pinched her ear.<br>
She never wants to go back! LoL I know this is entirely off topic <br>
but I had to tell someone!<br><a href="https://mental-reverb.com/blog.php?c=514">reply</a></p></div><div><p><a rel="ugc" href="https://udin777resmi.com/">udin777</a> wrote on 24 January 2024<br>Great weblog right here! Also your website a lot up fast! What web host are you the usage of?<br>
Can I am getting your associate hyperlink on your host?<br>
I desire my website loaded up as quickly as yours lol<br><a href="https://mental-reverb.com/blog.php?c=513">reply</a></p></div><div><p><a rel="ugc" href="https://789bet.works/">789bet</a> wrote on 06 January 2024<br>Oh my goodness! Impressive article dude! Many thanks, However I am encountering problems with your RSS.<br>
I don't know why I am unable to join it. Is there anybody else having <br>
the same RSS problems? Anyone who knows the solution can you kindly respond?<br>
Thanx!!<br><a href="https://mental-reverb.com/blog.php?c=509">reply</a></p></div><div><p><a rel="ugc" href="https://tubular-concha-020db1.netlify.app/">ads508</a> wrote on 05 January 2024<br>Thanks for sharing your info. I really appreciate your efforts <br>
and I will be waiting for your next post thanks once again.<br><a href="https://mental-reverb.com/blog.php?c=507">reply</a></p></div><div><p><a rel="ugc" href="https://ads508slot.framer.website/">ads508</a> wrote on 05 January 2024<br>After I originally left a comment I appear to have clicked the -Notify <br>
me when new comments are added- checkbox and now whenever a comment is added I receive four emails with the exact same comment.<br>
Perhaps there is an easy method you are able to remove me <br>
from that service? Cheers!<br><a href="https://mental-reverb.com/blog.php?c=506">reply</a></p></div><div><p><a rel="ugc" href="https://aplikasiads508.site/">ads508</a> wrote on 15 April 2024<br>Hi! I just wanted to ask if you ever have any <br>
trouble with hackers? My last blog (wordpress) was hacked and I ended up losing several weeks of hard work due <br>
to no data backup. Do you have any methods to protect against hackers?<br><a href="https://mental-reverb.com/blog.php?c=575">reply</a></p></div><div><p><a rel="ugc" href="https://start.me/p/xjnGEJ/ads508-pragmatic-slot-gacor">ads508</a> wrote on 05 January 2024<br>Great article! This is the type of information that are meant to be shared around the internet.<br>
Shame on the search engines for not positioning this put up higher!<br>
Come on over and discuss with my website .<br>
Thank you =)<br><a href="https://mental-reverb.com/blog.php?c=505">reply</a></p></div><div><p><a rel="ugc" href="https://www.anchorofgold.com/users/ide777gacor">ide777</a> wrote on 31 December 2023<br>It's actually very complicated in this busy life to listen news <br>
on Television, therefore I only use world wide <br>
web for that purpose, and take the newest information.<br><a href="https://mental-reverb.com/blog.php?c=502">reply</a></p></div><div><p><a rel="ugc" href="https://slotgacor-win.com/">boca777</a> wrote on 31 December 2023<br>Attractive component of content. I just stumbled upon your site and in accession capital to say that I acquire in fact enjoyed <br>
account your blog posts. Any way I'll be subscribing for your feeds or even I success you get admission to consistently quickly.<br><a href="https://mental-reverb.com/blog.php?c=501">reply</a></p></div><div><p><a rel="ugc" href="https://pm.unida.gontor.ac.id/product/dep10kgacor/">depo 10k</a> wrote on 30 December 2023<br>What's Taking place i'm new to this, I stumbled upon this I've found It absolutely useful and it has aided me out loads.</p><p>

I hope to contribute &amp; assist other customers like its helped me.<br>
Good job.<br><a href="https://mental-reverb.com/blog.php?c=500">reply</a></p></div><div><p><a rel="ugc" href="https://slotgacor.reasonto.gr/">slot gacor hari ini</a> wrote on 27 December 2023<br>Hello! I know this is kinda off topic but I was wondering if <br>
you knew where I could get a captcha plugin for my comment form?<br>
I'm using the same blog platform as yours and I'm having trouble finding one?<br>
Thanks a lot!<br><a href="https://mental-reverb.com/blog.php?c=497">reply</a></p></div><div><p><a rel="ugc" href="https://gasudin777.com/">udin777</a> wrote on 27 December 2023<br>I’m not that much of a online reader to be honest but your blogs really nice,<br>
keep it up! I'll go ahead and bookmark your site to come <br>
back in the future. Many thanks<br><a href="https://mental-reverb.com/blog.php?c=496">reply</a></p></div><div><p><a rel="ugc" href="https://github.com/ads508link">ads508</a> wrote on 27 December 2023<br>Hi! I could have sworn I've been to this site before but after reading through <br>
some of the post I realized it's new to me. Anyways, I'm definitely <br>
happy I found it and I'll be book-marking and checking back frequently!<br><a href="https://mental-reverb.com/blog.php?c=495">reply</a></p></div><div><p><a rel="ugc" href="https://provider-slot.com/?product=sarangdomino">sarangdomino</a> wrote on 27 December 2023<br>Very nice post. I just stumbled upon your blog and wanted to say <br>
that I have truly enjoyed surfing around your blog posts.<br>
After all I'll be subscribing to your rss feed and I hope you write again soon!<br><a href="https://mental-reverb.com/blog.php?c=493">reply</a></p></div><div><p><a rel="ugc" href="https://socialmediainuk.com/story16295381/ads508-situs-slot-gacor-provider-slot-terlengkap-gampang-maxwin-jackpot">ads508</a> wrote on 26 December 2023<br>We're a group of volunteers and starting a new scheme in our community.</p><p>

Your web site offered us with useful info to work on. You've done a formidable process and our whole <br>
group can be grateful to you.<br><a href="https://mental-reverb.com/blog.php?c=492">reply</a></p></div><div><p><a rel="ugc" href="https://ads508link.vzy.io/">ads508 link alternatif</a> wrote on 23 December 2023<br>I want to to thank you for this very good read!! I definitely <br>
enjoyed every little bit of it. I have you bookmarked to look at new things you post…<br><a href="https://mental-reverb.com/blog.php?c=488">reply</a></p></div><div><p><a rel="ugc" href="https://id.carousell.com/p/1273508689/">ads508</a> wrote on 23 December 2023<br>Excellent blog you have here but I was wondering if you knew of any user discussion forums that cover the same topics discussed <br>
here? I'd really love to be a part of community where I can get advice from other knowledgeable individuals that share the same interest.<br>
If you have any recommendations, please let me know. Many thanks!<br><a href="https://mental-reverb.com/blog.php?c=487">reply</a></p></div><div><p>Woah wrote on 22 December 2023<br>Woah! I'm really digging the template/theme of this website.<br>
It's simple, yet effective. A lot of times it's difficult<br>
to get that "perfect balance" between usability and appearance.<br>
I must say you've done a amazing job with this.<br><a href="https://mental-reverb.com/blog.php?c=485">reply</a></p></div><div><p><a rel="ugc" href="https://jose7i29dlr4.iamthewiki.com/user">ads508</a> wrote on 22 December 2023<br>Wow, that's what I was looking for, what a stuff! existing here at this website, thanks admin of this web site.<br><a href="https://mental-reverb.com/blog.php?c=459">reply</a></p></div><div><p><a rel="ugc" href="https://aaron9k29dkr4.59bloggers.com/profile">ceria777</a> wrote on 18 December 2023<br>Hello, I think your website might be having browser <br>
compatibility issues. When I look at your blog in Opera, it looks <br>
fine but when opening in Internet Explorer, it has some overlapping.<br>
I just wanted to give you a quick heads up! Other then that, fantastic blog!<br><a href="https://mental-reverb.com/blog.php?c=393">reply</a></p></div><div><p><a rel="ugc" href="https://groups.google.com/g/sarang777/c/JLLFDtk6osI">sarang777</a> wrote on 18 December 2023<br>I don't know if it's just me or if everybody else encountering problems with your website.<br>
It appears as if some of the text in your content are running <br>
off the screen. Can somebody else please provide feedback and let me know if this is happening <br>
to them as well? This may be a issue with my browser because I've had this happen before.<br>
Kudos<br><a href="https://mental-reverb.com/blog.php?c=392">reply</a></p></div><div><p><a rel="ugc" href="https://pvp777up.com/">pvp777</a> wrote on 18 December 2023<br>This piece of writing offers clear idea for the new visitors <br>
of blogging, that really how to do running a blog.<br><a href="https://mental-reverb.com/blog.php?c=391">reply</a></p></div><div><p><a rel="ugc" href="https://starrdustcrusader.tumblr.com/">ads508</a> wrote on 16 December 2023<br>My family members all the time say that I am wasting my time here at net, however <br>
I know I am getting familiarity all the time by reading thes <br>
nice articles or reviews.<br><a href="https://mental-reverb.com/blog.php?c=390">reply</a></p></div><div><p><a rel="ugc" href="https://www.epic-launch.com/ads508.html">ads508 link alternatif</a> wrote on 15 December 2023<br>Great goods from you, man. I have understand your stuff <br>
previous to and you're just too great. I really like what you have acquired here, really like what you are stating and the way in which you say it.<br>
You make it entertaining and you still take care of to keep it wise.<br>
I cant wait to read far more from you. This is really a great web site.<br><a href="https://mental-reverb.com/blog.php?c=389">reply</a></p></div><div><p><a rel="ugc" href="https://groups.google.com/g/ide777a/c/45tdudjMFG8">ide777</a> wrote on 15 December 2023<br>Hi there this is kind of of off topic but I was wondering if blogs use WYSIWYG editors or <br>
if you have to manually code with HTML. I'm starting a <br>
blog soon but have no coding knowledge so I wanted to get guidance from someone with experience.<br>
Any help would be greatly appreciated!<br><a href="https://mental-reverb.com/blog.php?c=388">reply</a></p></div><div><p><a rel="ugc" href="https://ceria777.plantoys.com/">ceria777</a> wrote on 12 December 2023<br>Hello, I check your blogs like every week.<br>
Your humoristic style is witty, keep up the good work!<br><a href="https://mental-reverb.com/blog.php?c=386">reply</a></p></div><div><p><a rel="ugc" href="https://groups.google.com/g/comp.arch.fpga/c/azK1FWVAV6o">ceria777 slot</a> wrote on 04 December 2023<br>Great post. I was checking continuously this blog and I'm impressed!<br>
Extremely useful info specially the last part :) I care for such <br>
info much. I was looking for this particular info for a <br>
long time. Thank you and good luck.<br><a href="https://mental-reverb.com/blog.php?c=383">reply</a></p></div><div><p><a rel="ugc" href="https://spg138win.com/">spg138 login</a> wrote on 26 November 2023<br>Great beat ! I wish to apprentice while you amend your web site, how could i subscribe for a blog web site?</p><p>

The account helped me a applicable deal. I have been tiny bit familiar of this your broadcast provided <br>
vivid transparent idea<br><a href="https://mental-reverb.com/blog.php?c=381">reply</a></p></div><div><p><a rel="ugc" href="https://leo8m41ktz8.wikicorrespondent.com/user">sga508</a> wrote on 25 November 2023<br>Thank you for the good writeup. It in fact was a amusement account it.<br>
Look advanced to far added agreeable from you!<br>
By the way, how can we communicate?<br><a href="https://mental-reverb.com/blog.php?c=380">reply</a></p></div><div><p><a rel="ugc" href="https://ke68.art/">ke68</a> wrote on 25 November 2023<br>Hi, I think your blog might be having browser compatibility issues.<br>
When I look at your website in Opera, it looks fine <br>
but when opening in Internet Explorer, it has some overlapping.<br>
I just wanted to give you a quick heads up! Other then that, very good blog!<br><a href="https://mental-reverb.com/blog.php?c=379">reply</a></p></div><div><p><a rel="ugc" href="https://ke68.art/">ke68</a> wrote on 25 November 2023<br>Would love to always get updated outstanding web site!<br><a href="https://mental-reverb.com/blog.php?c=378">reply</a></p></div><div><p><a rel="ugc" href="https://www.youtube.com/watch?v=3j8GIZ8G880">VRSmash</a> wrote on 20 November 2023<br>This is a topic that's close to my heart... Best wishes!<br>
Where are your contact details though?<br><a href="https://mental-reverb.com/blog.php?c=377">reply</a></p></div><div><p><a rel="ugc" href="https://www.hydrau-tech.net/gallery-post-format-title/">acceleration</a> wrote on 13 November 2023<br>For latest information you have to go to see world wide web and on web I found <br>
this web page as a best web page for hottest <br>
updates.<br><a href="https://mental-reverb.com/blog.php?c=376">reply</a></p></div><div><p><a rel="ugc" href="https://wlo.link/@hiburan138">hiburan138</a> wrote on 12 November 2023<br>Excellent beat ! I wish to apprentice at the same <br>
time as you amend your website, how could i subscribe for a blog website?<br>
The account aided me a acceptable deal. I have been tiny bit familiar <br>
of this your broadcast provided bright clear concept<br><a href="https://mental-reverb.com/blog.php?c=375">reply</a></p></div><div><p><a rel="ugc" href="https://wlo.link/@sga508">sga508</a> wrote on 08 November 2023<br>all the time i used to read smaller articles that  also clear their motive,<br>
and that is also happening with this article which I am <br>
reading now.<br><a href="https://mental-reverb.com/blog.php?c=370">reply</a></p></div><div><p><a rel="ugc" href="https://blake9p41jqx7.bligblogging.com/profile">ceria777</a> wrote on 07 November 2023<br>hey there and thank you for your info – I've definitely <br>
picked up anything new from right here. I did however expertise a few technical <br>
points using this website, as I experienced to reload the <br>
site lots of times previous to I could get it to load correctly.<br>
I had been wondering if your web hosting is OK? Not <br>
that I'm complaining, but sluggish loading instances times will very frequently affect your placement in google and could damage your quality score <br>
if advertising and marketing with Adwords. Anyway I am adding this RSS to my email and could look out for a lot more of your respective fascinating <br>
content. Make sure you update this again soon.<br><a href="https://mental-reverb.com/blog.php?c=369">reply</a></p></div><div><p><a rel="ugc" href="https://matthew2f07bhn2.ambien-blog.com/profile">udin777</a> wrote on 07 November 2023<br>Hey there! I know this is kinda off topic but I was wondering which blog platform are you <br>
using for this website? I'm getting tired of Wordpress because I've had issues <br>
with hackers and I'm looking at options for another platform.<br>
I would be great if you could point me in the direction of a good platform.<br><a href="https://mental-reverb.com/blog.php?c=368">reply</a></p></div><div><p><a rel="ugc" href="https://mooc.live.unpad.ac.id/user/profile.php?id=82976">udin777</a> wrote on 13 February 2024<br>Hello there, just became aware of your blog through Google, <br>
and found that it's truly informative. I'm gonna watch out for <br>
brussels. I'll appreciate if you continue this in future.<br>
Lots of people will be benefited from your writing.<br>
Cheers!<br><a href="https://mental-reverb.com/blog.php?c=528">reply</a></p></div><div><p><a rel="ugc" href="https://www.anonymouseagle.com/users/udin777slot">udin777</a> wrote on 03 January 2024<br>Hello to every , for the reason that I am genuinely <br>
eager of reading this website's post to be updated regularly.<br>
It carries nice stuff.<br><a href="https://mental-reverb.com/blog.php?c=504">reply</a></p></div><div><p><a rel="ugc" href="https://new88.so/">web page</a> wrote on 07 November 2023<br>Howdy! I know this is somewhat off topic but I was <br>
wondering which blog platform are you using for this <br>
site? I'm getting tired of Wordpress because I've had problems with hackers and I'm looking at options <br>
for another platform. I would be fantastic if you could point me in the direction of a <br>
good platform.<br><a href="https://mental-reverb.com/blog.php?c=367">reply</a></p></div><div><p><a rel="ugc" href="https://knoxwemt51852.actoblog.com/23370696/situs-ads508-pusat-terbaik-untuk-penggemar-slot-online-maxwin">jp maxwin</a> wrote on 06 November 2023<br>I don't even know how I finished up here, however I thought this submit <br>
used to be great. I don't understand who you might be but certainly <br>
you are going to a famous blogger when you aren't already.<br>
Cheers!<br><a href="https://mental-reverb.com/blog.php?c=366">reply</a></p></div><div><p><a rel="ugc" href="https://gabriel2w74syf9.loginblogin.com/profile">ceria777</a> wrote on 02 November 2023<br>Hi there! This is my first visit to your blog! We are a team <br>
of volunteers and starting a new initiative in a community in the same niche.<br>
Your blog provided us useful information to work on. <br>
You have done a marvellous job!<br><a href="https://mental-reverb.com/blog.php?c=362">reply</a></p></div><div><p><a rel="ugc" href="https://jaxon3w63qxe9.wikilima.com/user">ceria777</a> wrote on 28 October 2023<br>Why people still make use of to read news papers when in this <br>
technological globe the whole thing is existing on net?<br><a href="https://mental-reverb.com/blog.php?c=360">reply</a></p></div><div><p><a rel="ugc" href="https://pxhere.com/en/photographer-me/4107490">Visit</a> wrote on 28 October 2023<br>I'm gone to convey my little brother, that he should also pay a visit this webpage <br>
on regular basis to take updated from latest reports.<br><a href="https://mental-reverb.com/blog.php?c=359">reply</a></p></div><div><p><a rel="ugc" href="https://new.express.adobe.com/webpage/KWYvcupkhfqN6">More info</a> wrote on 27 October 2023<br>Excellent post however , I was wanting to know if you could write a litte more on this subject?</p><p>

I'd be very grateful if you could elaborate a little bit further.</p><p>

Appreciate it!<br><a href="https://mental-reverb.com/blog.php?c=358">reply</a></p></div><div><p><a rel="ugc" href="https://camden8q41lsz7.blogsvirals.com/">spg138</a> wrote on 26 October 2023<br>After I originally commented I seem to have clicked on the <br>
-Notify me when new comments are added- checkbox and <br>
now every time a comment is added I recieve four emails with the same comment.<br>
Perhaps there is an easy method you are able to remove me from that service?<br>
Kudos!<br><a href="https://mental-reverb.com/blog.php?c=357">reply</a></p></div><div><p><a rel="ugc" href="https://froheaux.tumblr.com/">ceria777</a> wrote on 26 October 2023<br>Someone essentially assist to make critically articles I would state.<br>
This is the first time I frequented your website page and up to now?<br>
I amazed with the analysis you made to make this actual post <br>
extraordinary. Great job!<br><a href="https://mental-reverb.com/blog.php?c=356">reply</a></p></div><div><p><a rel="ugc" href="https://lucas3z85uch1.ourcodeblog.com/profile">ceria777</a> wrote on 22 October 2023<br>For most recent news you have to pay a visit web <br>
and on the web I found this site as a best site for latest updates.<br><a href="https://mental-reverb.com/blog.php?c=354">reply</a></p></div><div><p><a rel="ugc" href="https://audiomack.com/ads508bet">ads508</a> wrote on 22 October 2023<br>Excellent article. Keep writing such kind of information on your page.<br>
Im really impressed by your site.<br>
Hello there,  You've performed a great job. I will certainly digg it and personally recommend to my friends.<br>
I am sure they will be benefited from this website.<br><a href="https://mental-reverb.com/blog.php?c=353">reply</a></p></div><div><p><a rel="ugc" href="https://henry2x74saf0.blogrelation.com/profile">ceria777</a> wrote on 21 October 2023<br>Undeniably believe that which you stated. Your favorite justification appeared <br>
to be at the internet the easiest thing to take into accout of.<br>
I say to you, I definitely get annoyed whilst <br>
other folks think about concerns that they just do not recognize about.<br>
You managed to hit the nail upon the highest as smartly as <br>
defined out the entire thing with no need side effect , <br>
other people could take a signal. Will likely be again to get more.</p><p>

Thank you<br><a href="https://mental-reverb.com/blog.php?c=352">reply</a></p></div><div><p><a rel="ugc" href="https://lu.ma/parlaysarang188">sarang188</a> wrote on 19 October 2023<br>It's going to be end of mine day, except before ending I am reading this wonderful article to improve my know-how.<br><a href="https://mental-reverb.com/blog.php?c=350">reply</a></p></div><div><p><a rel="ugc" href="https://eduardovcez44445.blogadvize.com/28337797/membongkar-keunggulan-situs-artis777-tempatnya-penggemar-judi-online-terpercaya">artis777</a> wrote on 17 October 2023<br>I love what you guys are usually up too. Such clever work <br>
and exposure! Keep up the superb works guys I've added you guys to my blogroll.<br><a href="https://mental-reverb.com/blog.php?c=349">reply</a></p></div><div><p><a rel="ugc" href="https://www.renderosity.com/users/ads508bet">ads508 slot</a> wrote on 16 October 2023<br>We're a group of volunteers and starting a new scheme in our community.<br>
Your web site provided us with valuable info to work on. You have done a formidable job and our entire <br>
community will be thankful to you.<br><a href="https://mental-reverb.com/blog.php?c=348">reply</a></p></div><div><p><a rel="ugc" href="https://beacons.ai/sawit777slot">sawit777</a> wrote on 16 October 2023<br>I am sure this post has touched all the internet users, its really <br>
really pleasant piece of writing on building up <br>
new website.<br><a href="https://mental-reverb.com/blog.php?c=347">reply</a></p></div><div><p><a rel="ugc" href="https://www.reverbnation.com/artist/movn">More info</a> wrote on 15 October 2023<br>I was recommended this web site by means of my cousin. I am now not positive whether or not this publish is written by him as no one else realize such special about my trouble.<br>
You're incredible! Thanks!<br><a href="https://mental-reverb.com/blog.php?c=346">reply</a></p></div><div><p><a rel="ugc" href="https://luke6y74rye9.bloggip.com/profile">ads508</a> wrote on 15 October 2023<br>Hmm is anyone else experiencing problems with the images on this blog <br>
loading? I'm trying to figure out if its a problem on my end or if <br>
it's the blog. Any feedback would be greatly appreciated.<br><a href="https://mental-reverb.com/blog.php?c=345">reply</a></p></div><div><p><a rel="ugc" href="https://789bet.info/">xnxx</a> wrote on 10 October 2023<br>I read this post completely about the comparison of most <br>
recent and previous technologies, it's awesome article.<br><a href="https://mental-reverb.com/blog.php?c=343">reply</a></p></div><div><p><a rel="ugc" href="https://www.tripadvisor.com/Profile/zevolve">Main profile</a> wrote on 08 October 2023<br>Hi, I do believe this is a great blog. I stumbledupon it <br>
;) I will come back once again since I book-marked it. Money and freedom is the <br>
best way to change, may you be rich and continue to <br>
help others.<br><a href="https://mental-reverb.com/blog.php?c=342">reply</a></p></div><div><p><a rel="ugc" href="https://500px.com/p/pokerbeer">Visit</a> wrote on 08 October 2023<br>you're truly a excellent webmaster. The website <br>
loading velocity is amazing. It kind of feels that you're doing any unique trick.</p><p>

In addition, The contents are masterwork. you've done a great task in this topic!<br><a href="https://mental-reverb.com/blog.php?c=341">reply</a></p></div><div><p><a rel="ugc" href="https://us.community.sony.com/s/profile/005Dp000003xhdA?language=en_US">Source</a> wrote on 05 October 2023<br>I am really loving the theme/design of your site.<br>
Do you ever run into any internet browser compatibility problems?<br>
A few of my blog visitors have complained about my blog not working correctly in Explorer but looks great in Opera.</p><p>

Do you have any recommendations to help fix this issue?<br><a href="https://mental-reverb.com/blog.php?c=337">reply</a></p></div><div><p><a rel="ugc" href="https://linklist.bio/ceria777slotgacor">ceria777</a> wrote on 04 October 2023<br>I really like what you guys are up too. This sort of clever work and coverage!<br>
Keep up the wonderful works guys I've  you guys to my personal <br>
blogroll.<br><a href="https://mental-reverb.com/blog.php?c=336">reply</a></p></div><div><p><a rel="ugc" href="https://hi8866.com/">sex</a> wrote on 28 September 2023<br>Good day! I could have sworn I've been to this website before but after browsing through <br>
some of the post I realized it's new to me. Anyhow, I'm definitely happy I found it and I'll be bookmarking and checking back often!<br><a href="https://mental-reverb.com/blog.php?c=332">reply</a></p></div><div><p><a rel="ugc" href="https://community-streaming.com/it">streaming community</a> wrote on 27 September 2023<br>This is a topic which is near to my heart...<br>
Best wishes! Where are your contact details though?<br><a href="https://mental-reverb.com/blog.php?c=331">reply</a></p></div><div><p><a rel="ugc" href="https://jaxson2q41jpu5.wikifiltraciones.com/user">ads508</a> wrote on 20 September 2023<br>I'm really loving the theme/design of your weblog. Do you ever run into any internet browser compatibility <br>
problems? A handful of my blog audience have complained about <br>
my blog not operating correctly in Explorer but looks great in Opera.</p><p>

Do you have any suggestions to help fix this issue?<br><a href="https://mental-reverb.com/blog.php?c=327">reply</a></p></div><div><p><a rel="ugc" href="https://jose7m30ipw6.wonderkingwiki.com/user">ads508</a> wrote on 19 September 2023<br>Hello, i read your blog occasionally and i own a similar one and i was just curious if you get a lot of spam remarks?<br>
If so how do you stop it, any plugin or anything you can advise?<br>
I get so much lately it's driving me mad so any help is very <br>
much appreciated.<br><a href="https://mental-reverb.com/blog.php?c=326">reply</a></p></div><div><p><a rel="ugc" href="https://159.203.64.221/">ads508</a> wrote on 09 February 2024<br>I am sure this paragraph has touched all the internet people, its really really <br>
good article on building up new web site.<br><a href="https://mental-reverb.com/blog.php?c=525">reply</a></p></div><div><p><a rel="ugc" href="https://www.toolshelps.com/json-viewer">JSON Viewer</a> wrote on 18 September 2023<br>I'm really enjoying the design and layout of your blog.<br>
It's a very easy on the eyes which makes it much more enjoyable for me to come here and visit more often. Did you hire out a developer to create your theme?</p><p>

Excellent work!<br><a href="https://mental-reverb.com/blog.php?c=325">reply</a></p></div><div><p><a rel="ugc" href="http://b3.zcubes.com/v.aspx?mid=12465444">Source of information</a> wrote on 18 September 2023<br>I have read so many content about the blogger lovers except this paragraph is really a pleasant post, keep it up.<br><a href="https://mental-reverb.com/blog.php?c=324">reply</a></p></div><div><p><a rel="ugc" href="https://community.ibm.com/community//user/watsonstudio/network/members/profile?UserKey=8be3b830-426c-4714-9a31-018a91c88bcc">URL</a> wrote on 18 September 2023<br>If some one desires to be updated with newest technologies therefore he must be pay a quick <br>
visit this web page and be up to date daily.<br><a href="https://mental-reverb.com/blog.php?c=323">reply</a></p></div><div><p><a rel="ugc" href="https://landscapederbyshire.co.uk/">Garden Renovation Derbyshire</a> wrote on 16 September 2023<br>Hi! I could have sworn I've been to this blog before but <br>
after going through many of the posts I realized it's new to me.<br>
Nonetheless, I'm certainly happy I discovered it and I'll be <br>
book-marking it and checking back often!<br><a href="https://mental-reverb.com/blog.php?c=320">reply</a></p></div><div><p><a rel="ugc" href="https://500px.com/p/leonab4tdbeth">Website source</a> wrote on 15 September 2023<br>Hmm it seems like your blog ate my first comment (it was extremely long) so I guess I'll just sum it up what <br>
I submitted and say, I'm thoroughly enjoying your blog. I too am <br>
an aspiring blog writer but I'm still new to everything.<br>
Do you have any recommendations for beginner blog <br>
writers? I'd genuinely appreciate it.<br><a href="https://mental-reverb.com/blog.php?c=318">reply</a></p></div><div><p><a rel="ugc" href="https://writeablog.net/unitsteven2/capturing-lifes-minutes-the-magic-of-professional-photographer-services">Source of information</a> wrote on 14 September 2023<br>Its not my first time to pay a quick visit this website, i am browsing this web page dailly <br>
and take good data from here everyday.<br><a href="https://mental-reverb.com/blog.php?c=317">reply</a></p></div><div><p><a rel="ugc" href="https://sites.google.com/view/funplay87/">unblocked games</a> wrote on 12 September 2023<br>This website certainly has all the info I needed about this subject and didn't know who <br>
to ask.<br><a href="https://mental-reverb.com/blog.php?c=316">reply</a></p></div><div><p><a rel="ugc" href="https://www.toolshelps.com/">online tools</a> wrote on 09 September 2023<br>This is very interesting, You are a very skilled blogger.</p><p>

I've joined your feed and look forward to seeking more of your great post.<br>
Also, I've shared your web site in my social networks!<br><a href="https://mental-reverb.com/blog.php?c=314">reply</a></p></div><div><p><a rel="ugc" href="https://elijah5a86xfl2.wikiworldstock.com/user">ads508 slot</a> wrote on 08 September 2023<br>Very energetic article, I liked that a lot. Will there be <br>
a part 2?<br><a href="https://mental-reverb.com/blog.php?c=313">reply</a></p></div><div><p><a rel="ugc" href="https://mangaowl.to/9-manga">mangaowl</a> wrote on 07 September 2023<br>What's up Dear, are you genuinely visiting this website on a regular basis, if so <br>
after that you will without doubt obtain good know-how.<br><a href="https://mental-reverb.com/blog.php?c=312">reply</a></p></div><div><p><a rel="ugc" href="https://rentry.co/bepy7">Website</a> wrote on 07 September 2023<br>It's impressive that you are getting thoughts <br>
from this paragraph as well as from our dialogue made here.<br><a href="https://mental-reverb.com/blog.php?c=311">reply</a></p></div><div><p><a rel="ugc" href="https://www.pearltrees.com/coldskill86/item536380036">Visit</a> wrote on 07 September 2023<br>I am regular visitor, how are you everybody? This <br>
piece of writing posted at this site is in fact fastidious.<br><a href="https://mental-reverb.com/blog.php?c=310">reply</a></p></div><div><p><a rel="ugc" href="https://hub.docker.com/u/permascapes">Click here</a> wrote on 06 September 2023<br>This website was... how do you say it? Relevant!!<br>
Finally I have found something which helped me.</p><p>

Many thanks!<br><a href="https://mental-reverb.com/blog.php?c=309">reply</a></p></div><div><p><a rel="ugc" href="https://jaxson8j29gmt5.wikirecognition.com/user">ads508</a> wrote on 06 September 2023<br>You actually make it seem so easy with your presentation but I <br>
find this topic to be really something that I think I would never understand.</p><p>

It seems too complicated and very broad for <br>
me. I'm looking forward for your next post, I'll try to get the hang <br>
of it!<br><a href="https://mental-reverb.com/blog.php?c=308">reply</a></p></div><div><p><a rel="ugc" href="https://w88.cloud/%e0%b8%9a%e0%b8%b2%e0%b8%84%e0%b8%b2%e0%b8%a3%e0%b9%88%e0%b8%b2/">เกมส์บาคาร่า</a> wrote on 06 September 2023<br>Hey there,  You have done a fantastic job.<br>
I'll certainly digg it and personally recommend to my friends.<br>
I am sure they will be benefited from this web site.<br><a href="https://mental-reverb.com/blog.php?c=306">reply</a></p></div><div><p><a rel="ugc" href="https://postheaven.net/cherryoval29/the-eco-friendly-option-paper-straws-and-their-favorable-ecological-impact">URL</a> wrote on 05 September 2023<br>Hi would you mind sharing which blog platform you're using?<br>
I'm going to start my own blog soon but I'm having a <br>
difficult time choosing between BlogEngine/Wordpress/B2evolution and Drupal.<br>
The reason I ask is because your layout seems different then most blogs and I'm looking for <br>
something completely unique.                  P.S My apologies for <br>
being off-topic but I had to ask!<br><a href="https://mental-reverb.com/blog.php?c=305">reply</a></p></div><div><p><a rel="ugc" href="https://marketplace.visualstudio.com/publishers/eljardinsanador">Website source</a> wrote on 05 September 2023<br>It's an awesome piece of writing in support of all the online viewers; they <br>
will get benefit from it I am sure.<br><a href="https://mental-reverb.com/blog.php?c=304">reply</a></p></div><div><p><a rel="ugc" href="https://soikeo.tv/jude-bellingham-gia-nhap-real/">soikeo.tv</a> wrote on 05 September 2023<br>Hi there, just became alert to your blog through Google, and found that it's really informative.<br>
I am going to watch out for brussels. I will be grateful if you continue this in future.<br>
Numerous people will be benefited from your writing.<br>
Cheers!<br><a href="https://mental-reverb.com/blog.php?c=303">reply</a></p></div><div><p><a rel="ugc" href="https://miles1t63qxd9.wikiinside.com/user">slot online spg138</a> wrote on 05 September 2023<br>Hey just wanted to give you a quick heads up and let you know <br>
a few of the images aren't loading properly. I'm <br>
not sure why but I think its a linking issue. I've tried it in two different browsers and both show <br>
the same results.<br><a href="https://mental-reverb.com/blog.php?c=302">reply</a></p></div><div><p><a rel="ugc" href="https://latkeo.today/scott-mctominay/">latkeo.today</a> wrote on 04 September 2023<br>What's up Dear, are you genuinely visiting this site daily, <br>
if so then you will definitely obtain fastidious know-how.<br><a href="https://mental-reverb.com/blog.php?c=301">reply</a></p></div><div><p><a rel="ugc" href="https://www.reverbnation.com/artist/zenithstore">Source</a> wrote on 04 September 2023<br>Hi there, I enjoy reading through your post.<br>
I wanted to write a little comment to support you.<br><a href="https://mental-reverb.com/blog.php?c=300">reply</a></p></div><div><p><a rel="ugc" href="https://fun88joy237.com/%e0%b8%aa%e0%b8%a5%e0%b9%87%e0%b8%ad%e0%b8%95%e0%b8%ad%e0%b8%ad%e0%b8%99%e0%b9%84%e0%b8%a5%e0%b8%99%e0%b9%8c/">สล็อตออนไลน์</a> wrote on 03 September 2023<br>I don't even understand how I finished up here, but I assumed this post <br>
was once good. I do not realize who you might be however certainly you are going to a famous blogger for those who are not already.<br>
Cheers!<br><a href="https://mental-reverb.com/blog.php?c=298">reply</a></p></div><div><p><a rel="ugc" href="https://postheaven.net/washdoubt20/unlock-the-possible-of-your-business-with-aws-consulting-services">Visit</a> wrote on 02 September 2023<br>Wow, this post is fastidious, my younger sister is analyzing <br>
these things, thus I am going to inform her.<br><a href="https://mental-reverb.com/blog.php?c=297">reply</a></p></div><div><p><a rel="ugc" href="http://b3.zcubes.com/v.aspx?mid=12325607">Source of information</a> wrote on 02 September 2023<br>For the reason that the admin of this site is working, <br>
no uncertainty very rapidly it will be well-known, due <br>
to its quality contents.<br><a href="https://mental-reverb.com/blog.php?c=296">reply</a></p></div><div><p><a rel="ugc" href="https://betking777.com/">우리카지노</a> wrote on 01 September 2023<br>Do you hɑve any video of that? I'd likе tо find out some additional іnformation.<br><a href="https://mental-reverb.com/blog.php?c=295">reply</a></p></div><div><p><a rel="ugc" href="https://kures.co/de/detox/quick-fix-plus-synthetic-urine/">quick fix 6</a> wrote on 01 September 2023<br>Customers share their feedback, tips, and reviews <br>
of "Quick Fix Plus 6.3" on our site. Customers share their feedback, tips, and reviews of "Quick Fix Plus 6.3" <br>
on our site.<br><a href="https://mental-reverb.com/blog.php?c=294">reply</a></p></div><div><p><a rel="ugc" href="https://vulkanvegas.pro/pl/">vulkan vegas pl</a> wrote on 01 September 2023<br>Hello everybody, here every person is sharing these kinds of knowledge, so <br>
it's nice to read this weblog, and I used to visit this webpage all the time.<br><a href="https://mental-reverb.com/blog.php?c=293">reply</a></p></div><div><p><a rel="ugc" href="https://matthew4i20lvf0.signalwiki.com/user">slot hiburan138</a> wrote on 31 August 2023<br>Quality articles or reviews is the key to attract the people to go to see the website, that's what this website is providing.<br><a href="https://mental-reverb.com/blog.php?c=292">reply</a></p></div><div><p><a rel="ugc" href="https://alpha88.in/">alpha88</a> wrote on 31 August 2023<br>Greetings! This is my first comment here so I just wanted to give <br>
a quick shout out and tell you I truly enjoy reading through your blog posts.</p><p>

Can you recommend any other blogs/websites/forums that go over the <br>
same topics? Thanks for your time!<br><a href="https://mental-reverb.com/blog.php?c=291">reply</a></p></div><div><p><a rel="ugc" href="https://appliancerepair2023.com/">appliance repair corona</a> wrote on 30 August 2023<br>I was very happy to find this web site. I want to to thank you for your time for this <br>
particularly fantastic read!! I definitely really liked every bit of it and I have you saved to <br>
fav to see new things in your website.<br><a href="https://mental-reverb.com/blog.php?c=289">reply</a></p></div><div><p><a rel="ugc" href="http://https/">1-50 AD. Abegg-Stiftung Museum</a> wrote on 28 August 2023<br>Anderson Silva madе his UFC debut iin 2006 аt Ultimate Fight Night 55, tthe ρlace he beat Chris Leben ƅy knockout.<br>
Rose Namajunas signed wіtһ UFC in 2013. In 2017, sһe beat Joana Jedrzejczyk <br>
аt UFC 217 for the girls's strawweight championship title.<br>
Ƭhe employees and i ɑre watchin film -- it's thе final pаrt <br>
oof Decеmber -- and in walks Luis to tell us goߋdbye and һe <br>
іs going house foｒ Christmas," Carthel recalled. "Then he said 'We will Kansas City fіrst <br>
to ⅼߋoҝ at tһe nationwide championship game.'" Carthel was speechless. "Yeah," Luis instructed him, "'Ꮤe'rе going so I <br>
can seе what it iѕ like and study. Jon Jones earned the light heavyweight championship title іn 2011, and once more іn 2016.<br>
Ɗespite numerous success іn the ring, һis career hаѕ beｅn threatened by both authorized troubles and struggles ᴡith <br>
banned substances. He gained tһe UFC lightweight title аt UFC 223 in Aprіl 2018, maқing һіm the primary Muslim fighter іn UFC historical рast t᧐ <br>
win a title. Matt Hughes ѡas an NCAA Division I wrestler, <br>
a boxer and an MMA fighter bef᧐re joining tһe UFC.<br><a href="https://mental-reverb.com/blog.php?c=287">reply</a></p></div><div><p><a rel="ugc" href="https://vulkanvegas.pro/">Vulkan Vegas</a> wrote on 27 August 2023<br>This text is priceless. Where can I find out more?<br><a href="https://mental-reverb.com/blog.php?c=286">reply</a></p></div><div><p><a rel="ugc" href="https://list.ly/GreenFuture/activity">Profile</a> wrote on 24 August 2023<br>Hey, I think your site might be having browser compatibility issues.<br>
When I look at your blog site in Opera, it looks fine but <br>
when opening in Internet Explorer, it has some <br>
overlapping. I just wanted to give you a quick heads up! <br>
Other then that, wonderful blog!<br><a href="https://mental-reverb.com/blog.php?c=285">reply</a></p></div><div><p><a rel="ugc" href="https://creativecommons.org/choose/results-one?q_1=2&amp;field_attribute_to_name=Follower%20Guru&amp;field_attribute_to_url=https://follower-guru.de">Profile</a> wrote on 20 August 2023<br>I'm gone to convey my little brother, that he should also go to see this blog <br>
on regular basis to get updated from most up-to-date information.<br><a href="https://mental-reverb.com/blog.php?c=284">reply</a></p></div><div><p><a rel="ugc" href="https://anotepad.com/notes/ht2rc8g8">Main profile</a> wrote on 20 August 2023<br>Nice post. I was checking constantly this blog and <br>
I am impressed! Extremely useful information specially the last part :) <br>
I care for such info a lot. I was seeking this certain info for a long time.<br>
Thank you and good luck.<br><a href="https://mental-reverb.com/blog.php?c=283">reply</a></p></div><div><p><a rel="ugc" href="https://creativecommons.org/choose/results-one?q_1=2&amp;field_attribute_to_name=Clever%20Design&amp;field_attribute_to_url=https://cleverdesign.be">Click here</a> wrote on 19 August 2023<br>Ahaa, its fastidious dialogue on the topic of this paragraph at <br>
this place at this web site, I have read all that, so now me also commenting <br>
at this place.<br><a href="https://mental-reverb.com/blog.php?c=282">reply</a></p></div><div><p><a rel="ugc" href="https://esteen.de/produkt-kategorie/fusskettchen-bis-27cm-gold/">Wie komme ich schnell wieder an möglichst viel Gold?</a> wrote on 17 August 2023<br>Herzlichen Glückwunsch zᥙr Goldenen Hochzeit. 50 Jаhre bedeuten viеl gemeinsame <br>
Zeit, Frede սnd Liebe. Diе besten Ꮤünsche ｚur Golkdenen Hochzeit.</p><p>

Mögen euгe Herzen ᴡeiterhin so miteinander verbunden ѕeіn wie heutе.<br>
So viele gemeinsame Momente, ѕօ ѵiel Liebe und Zuneiigung - <br>
allss Gute zur Goldenen Hochzeit. Herzlichen Glückwunsch ᴢu <br>
50 Ehejahren. Mögedie nächste Нälfte genauso <br>
schön werԁen. Zwwei Herzen, ԁie sіch gefunden hɑЬen սnd nun seit <br>
50 Jahren unzertrennblich ѕind. Alles Gute zur Goldenen Hochzeit.<br>
„50 Јahre sind ｅine lange Zeit - aƄeг іhr <br>
hɑbt es geschafft. Liebe Brautleute, herzlichen Glückwunsch <br>
zuu Еurer Goldenen Hochzeit. Möցe eսer Bund ⅾer Liebe auh in ԁen ҝommenden Jahren sо stark Ƅleiben wie heute.<br>
Zwwei Menschen, diee 50 Jahre lang zusammenhalten, verdienen սnseren allergrößten Respekt.<br>
Herzlichen Glückwunsch uund ɑlles Gute zur Goldenen Hochzeit.<br>
Ԝenn zwei Menschen ѕo lange verheiratet sіnd, dann musѕ die Liebe etwas ganz Besonderes ѕein. <br>
50 Јahre sind eine langе Zeit - аber ihr haƅt ees geschafft.<br><a href="https://mental-reverb.com/blog.php?c=280">reply</a></p></div><div><p><a rel="ugc" href="https://notes.io/qGTiu">Source URL</a> wrote on 14 August 2023<br>Thank you a lot for sharing this with all of us you actually realize what you're speaking <br>
approximately! Bookmarked. Please also consult with my site =).<br>
We may have a link trade arrangement between us<br><a href="https://mental-reverb.com/blog.php?c=278">reply</a></p></div><div><p><a rel="ugc" href="https://adrian1p41iok1.blog-ezine.com/profile">udin777</a> wrote on 14 August 2023<br>I'm more than happy to uncover this web site. I want to <br>
to thank you for your time for this wonderful read!! I definitely really liked every little bit of <br>
it and i also have you book marked to see new information on your site.<br><a href="https://mental-reverb.com/blog.php?c=277">reply</a></p></div><div><p><a rel="ugc" href="https://www.thechampaignroom.com/users/udin777vip">udin777</a> wrote on 07 March 2024<br>Wonderful site. Plenty of useful information here.</p><p>

I am sending it to several pals ans also sharing in delicious.<br>
And certainly, thanks in your sweat!<br><a href="https://mental-reverb.com/blog.php?c=553">reply</a></p></div><div><p><a rel="ugc" href="https://www.purplerow.com/users/udin777slot">udin777</a> wrote on 30 September 2023<br>I like it when individuals get together and share <br>
thoughts. Great website, continue the good work!<br><a href="https://mental-reverb.com/blog.php?c=334">reply</a></p></div><div><p><a rel="ugc" href="https://knowyourmeme.com/users/nakoa-fitness-and-physical-therapy">Website source</a> wrote on 13 August 2023<br>I every time spent my half an hour to read this webpage's posts all the time along <br>
with a mug of coffee.<br><a href="https://mental-reverb.com/blog.php?c=276">reply</a></p></div><div><p><a rel="ugc" href="https://messiahrygm30630.blogprodesign.com/42855685/istimewanya-bermian-di-slot-gacor-online-dengan-uang-asli">udin777</a> wrote on 11 August 2023<br>I got this web page from my buddy who informed me about this website and at the moment this time <br>
I am browsing this website and reading very informative articles here.<br><a href="https://mental-reverb.com/blog.php?c=275">reply</a></p></div><div><p><a rel="ugc" href="http://143.198.1.85/">udin777</a> wrote on 10 March 2024<br>Hello there, I discovered your blog by the use of Google while searching for a comparable subject,<br>
your web site came up, it seems great. I've <br>
bookmarked it in my google bookmarks.<br>
Hi there, just became alert to your blog thru Google, and found that it's really informative.<br>
I am going to be careful for brussels. I'll appreciate if you happen to proceed this in future.<br>
Many people can be benefited out of your writing. Cheers!<br><a href="https://mental-reverb.com/blog.php?c=554">reply</a></p></div><div><p><a rel="ugc" href="https://blake7h18cip3.nico-wiki.com/user">ads508</a> wrote on 10 August 2023<br>Hi there to all, how is the whole thing, I think every one is getting more <br>
from this web site, and your views are pleasant designed for <br>
new people.<br><a href="https://mental-reverb.com/blog.php?c=274">reply</a></p></div><div><p><a rel="ugc" href="https://thoob-mccraex-schlaioms.yolasite.com/">artis777</a> wrote on 08 August 2023<br>Hey this is somewhat of off topic but I <br>
was wanting to know if blogs use WYSIWYG editors or if you have to <br>
manually code with HTML. I'm starting a blog soon but have no coding knowledge so <br>
I wanted to get advice from someone with experience. Any help <br>
would be enormously appreciated!<br><a href="https://mental-reverb.com/blog.php?c=272">reply</a></p></div><div><p><a rel="ugc" href="https://xavier2n30fou5.ja-blog.com/profile">web site</a> wrote on 07 August 2023<br>Wow, wonderful blog layout! How long have you been blogging for?<br>
you made running a blog look easy. The total look of your web site <br>
is fantastic, let alone the content!<br><a href="https://mental-reverb.com/blog.php?c=271">reply</a></p></div><div><p><a rel="ugc" href="https://mpo500-id.azurefd.net/">bokep online</a> wrote on 07 August 2023<br>I have been exploring for a bit for any high quality articles or blog posts on this kind of house .<br>
Exploring in Yahoo I ultimately stumbled upon this web <br>
site. Studying this info So i am glad to exhibit that I've an incredibly good <br>
uncanny feeling I discovered just what I needed. I such a lot indubitably will <br>
make certain to don?t overlook this site and give it a look regularly.<br><a href="https://mental-reverb.com/blog.php?c=270">reply</a></p></div><div><p><a rel="ugc" href="https://www.redbubble.com/people/summertime-saga/shop">Summertime Saga Apk</a> wrote on 05 August 2023<br>This a very awesome blog post. Want to know more about Summertime Saga Apk? Well, Summertime Saga presents a captivating visual novel-style experience following the journey of a school-going boy investigating his father’s mysterious death. To know more visit the given article.<br><a href="https://mental-reverb.com/blog.php?c=269">reply</a></p></div><div><p><a rel="ugc" href="https://www.quia.com/profiles/cleaning136">Source</a> wrote on 03 August 2023<br>I do accept as true with all the ideas you've introduced in your post.<br>
They are really convincing and will certainly work.</p><p>

Nonetheless, the posts are very brief for starters.</p><p>

May you please lengthen them a little from subsequent time?</p><p>

Thank you for the post.<br><a href="https://mental-reverb.com/blog.php?c=268">reply</a></p></div><div><p><a rel="ugc" href="https://www.tripadvisor.com/Profile/yallashootenglish">More information</a> wrote on 02 August 2023<br>Do you mind if I quote a couple of your posts <br>
as long as I provide credit and sources back to your website?<br>
My blog site is in the very same niche as yours and my users would definitely benefit from some of <br>
the information you provide here. Please let me <br>
know if this okay with you. Thanks!<br><a href="https://mental-reverb.com/blog.php?c=267">reply</a></p></div><div><p><a rel="ugc" href="https://500px.com/p/kingads508?view=photos">ads508</a> wrote on 02 August 2023<br>I am now not certain the place you are getting your information, however good <br>
topic. I must spend some time learning much more or figuring out more.<br>
Thanks for fantastic info I used to be in search of this information for my mission.<br><a href="https://mental-reverb.com/blog.php?c=266">reply</a></p></div><div><p><a rel="ugc" href="https://joshua2v64qxc8.blogars.com/profile">ads508</a> wrote on 25 October 2023<br>It's not my first time to pay a visit this site, i am browsing this <br>
site dailly and take fastidious data from here daily.<br><a href="https://mental-reverb.com/blog.php?c=355">reply</a></p></div><div><p><a rel="ugc" href="http://libproxy.vassar.edu/login?url=https://dailynewssolution.com/">celebrity News</a> wrote on 01 August 2023<br>Hello! This is kind of off topic but I need some advice from an established blog.<br>
Is it difficult to sett up your own blog? I'm not very techincal but <br>
I can figure things out pretty quick. I'm thinking about creating my own but I'm noot sure where to begin. Do you have any <br>
tips or suggestions?  Many thanks<br><a href="https://mental-reverb.com/blog.php?c=265">reply</a></p></div><div><p><a rel="ugc" href="https://help.ezadspro.co.uk/index.php?title=Tips_For_Single_Parents:_How_To_Be_Able_To_Lose_The_Human_Brain">Makeup News</a> wrote on 01 August 2023<br>I'm trսly enjоying the design and ⅼaүout of your site.<br>
It's a very easy on the eyes ѡhich makes it mᥙch more enjoyable <br>
for me too come herе and ᴠisit more often. Did you <br>
hire out а ԁesigneг tߋ crеate your theme?<br>
Superb woгk!<br><a href="https://mental-reverb.com/blog.php?c=264">reply</a></p></div><div><p><a rel="ugc" href="https://www.allforxi.com/users/sarang777">sarang777</a> wrote on 01 August 2023<br>Hello, this weekend is nice designed for me, <br>
since this time i am reading this wonderful informative post here <br>
at my home.<br><a href="https://mental-reverb.com/blog.php?c=263">reply</a></p></div><div><p><a rel="ugc" href="http://highthere.idea.informer.com/">Visit</a> wrote on 01 August 2023<br>Admiring the commitment you put into your site and in depth information you provide.<br>
It's awesome to come across a blog every once in a <br>
while that isn't the same old rehashed material. Great read!</p><p>

I've saved your site and I'm adding your RSS feeds to my Google account.<br><a href="https://mental-reverb.com/blog.php?c=262">reply</a></p></div><div><p><a rel="ugc" href="https://sarang777.easy.co/">sarang777</a> wrote on 31 July 2023<br>Aw, this was a very good post. Taking a few minutes and actual effort to make a great article… but <br>
what can I say… I procrastinate a lot and never manage to get nearly anything done.<br><a href="https://mental-reverb.com/blog.php?c=261">reply</a></p></div><div><p><a rel="ugc" href="https://brayden6i29gmt5.homewikia.com/user">Ads508</a> wrote on 30 July 2023<br>Nice blog right here! Also your web site rather a lot up very fast!</p><p>

What host are you the use of? Can I get your affiliate hyperlink on your <br>
host? I wish my web site loaded up as quickly as yours lol<br><a href="https://mental-reverb.com/blog.php?c=260">reply</a></p></div><div><p><a rel="ugc" href="https://wyatt3z85ubi0.bloggerchest.com/profile">ads508</a> wrote on 29 July 2023<br>I’m not that much of a online reader to be honest but your sites really nice, keep <br>
it up! I'll go ahead and bookmark your website to come back down the <br>
road. Cheers<br><a href="https://mental-reverb.com/blog.php?c=259">reply</a></p></div><div><p><a rel="ugc" href="https://bio.link/kingads508">ads508</a> wrote on 29 July 2023<br>Wow, fantastic blog layout! How long have you been blogging for?<br>
you made blogging look easy. The overall look <br>
of your web site is excellent, let alone the content!<br><a href="https://mental-reverb.com/blog.php?c=258">reply</a></p></div><div><p><a rel="ugc" href="https://ceria777.blogspot.com/">ceria777</a> wrote on 29 July 2023<br>Pretty section of content. I just stumbled upon your <br>
web site and in accession capital to assert that I acquire actually enjoyed account <br>
your blog posts. Anyway I will be subscribing to your <br>
augment and even I achievement you access consistently fast.<br><a href="https://mental-reverb.com/blog.php?c=257">reply</a></p></div><div><p><a rel="ugc" href="https://socialrator.com/story5192559/ceria777-situs-slot-gacor-dengan-deposit-termurah">ceria777</a> wrote on 19 August 2023<br>Oh my goodness! Impressive article dude! Thank you,<br>
However I am having issues with your RSS. I don't understand the reason why I am unable to subscribe to it.</p><p>

Is there anybody having similar RSS problems?<br>
Anyone that knows the solution will you kindly respond?<br>
Thanks!!<br><a href="https://mental-reverb.com/blog.php?c=281">reply</a></p></div><div><p><a rel="ugc" href="https://kevin7m91gik7.activoblog.com/profile">ceria777</a> wrote on 10 August 2023<br>Thanks for finally writing about &gt;Blog - Pretty section of content.<br>
I just stumbl... &lt;Liked it!<br><a href="https://mental-reverb.com/blog.php?c=273">reply</a></p></div><div><p><a rel="ugc" href="https://twitter.com/@bobsseo">Predictive analytics</a> wrote on 28 July 2023<br>Hｅllo, There's no doub thаt ʏour site coulⅾ be having web <br>
browser compatgibility ⲣroblems. Wһеn I taқe а <br>
look ɑt youг website in Safari, itt lookss fіne hоwever, when оpening iin I.E., іt haѕ ѕome overlapping issues.<br>
I merely wɑnted to provide you with a quick heads up!<br>
Besidеѕ that, excellent site!<br><a href="https://mental-reverb.com/blog.php?c=256">reply</a></p></div><div><p><a rel="ugc" href="http://yelusaleng.com/__media__/js/netsoltrademark.php?d=piasharma.com%2Fcall-girls-in-kanpur.html">body massage in kolkata</a> wrote on 27 July 2023<br>Howdy just wanted to give you a quick heads up.<br>
The text in your article seem to be running off the screen in Internet explorer.</p><p>

I'm not sure if this is a format issue or something to do with web browser compatibility but I <br>
thought I'd post to let you know. The design and style look great <br>
though! Hope you get the problem fixed soon. Many thanks<br><a href="https://mental-reverb.com/blog.php?c=255">reply</a></p></div><div><p><a rel="ugc" href="https://te.legra.ph/The-Sparkling-Trend-Temporary-Engagement-Rings-Capture-Hearts-Everywhere-07-25">Main profile</a> wrote on 27 July 2023<br>It is truly a nice and helpful piece of information. I'm happy that you simply shared this useful information with us.<br>
Please keep us informed like this. Thank you for sharing.<br><a href="https://mental-reverb.com/blog.php?c=254">reply</a></p></div><div><p><a rel="ugc" href="https://linktr.ee/sga188terbaru">sga188</a> wrote on 27 July 2023<br>My brother suggested I might like this web site. He was entirely right.<br>
This post actually made my day. You cann't imagine just how much <br>
time I had spent for this information! Thanks!<br><a href="https://mental-reverb.com/blog.php?c=252">reply</a></p></div><div><p><a rel="ugc" href="https://creativecommons.org/choose/results-one?q_1=2&amp;field_attribute_to_name=Crawford%20Mulholland%20Financial&amp;field_attribute_to_url=https://crawfordmulholland.com">Source of information</a> wrote on 27 July 2023<br>Thanks for sharing your info. I really appreciate your <br>
efforts and I will be waiting for your further write ups thank you once again.<br><a href="https://mental-reverb.com/blog.php?c=250">reply</a></p></div><div><p><a rel="ugc" href="https://dagasv388.co/">dagasv388</a> wrote on 27 July 2023<br>I am really delighted to glance at this weblog posts <br>
which includes tons of helpful data, thanks for providing these information.<br><a href="https://mental-reverb.com/blog.php?c=249">reply</a></p></div><div><p><a rel="ugc" href="https://hiburan138slot.easy.co/">hiburan138</a> wrote on 27 July 2023<br>What's up, after reading this amazing article i am too delighted <br>
to share my knowledge here with mates.<br><a href="https://mental-reverb.com/blog.php?c=248">reply</a></p></div><div><p><a rel="ugc" href="https://alexander8n42pyi1.bloggerswise.com/profile">hiburan138 login</a> wrote on 30 August 2023<br>As the admin of this website is working, no hesitation very soon it will be famous,<br>
due to its quality contents.<br><a href="https://mental-reverb.com/blog.php?c=290">reply</a></p></div><div><p><a rel="ugc" href="https://brody2z97cmv6.wikipublicity.com/user">hiburan138</a> wrote on 28 August 2023<br>Wow! At last I got a weblog from where I can in fact get valuable data regarding my study and <br>
knowledge.<br><a href="https://mental-reverb.com/blog.php?c=288">reply</a></p></div><div><p><a rel="ugc" href="https://www.tumblr.com/brandstruparnold05/723212519874920448/revamp-your-home-with-stunning-window-treatments">URL</a> wrote on 25 July 2023<br>Pretty! This has been an extremely wonderful article. Many thanks <br>
for providing this info.<br><a href="https://mental-reverb.com/blog.php?c=247">reply</a></p></div><div><p><a rel="ugc" href="https://xxxvidsex.com/">xxx com</a> wrote on 25 July 2023<br>Where does XXX come from? Early on the morning of 2 November, X Corps <br>
and XXX Corps launched the fourth part of Lightfoot, codenamed <br>
Operation Supercharge. Critics blamed its poor performance <br>
on its Christmas release (competitors is particularly excessive presently), the size of time to <br>
drag off the undertaking and the fact that Keanu Reeves didn't have <br>
a very good monitor file with period pieces.<br>
Anticipating poor performance, New Line Cinema skimped on advertising,<br>
in comparison with the total budget, and spent solely <br>
$30 million.<br><a href="https://mental-reverb.com/blog.php?c=246">reply</a></p></div><div><p><a rel="ugc" href="https://zenwriting.net/ideadress84/the-unsung-heroes-celebrating-the-blocked-drain-plumbers">Website</a> wrote on 24 July 2023<br>Hello there! This is my first visit to your blog!</p><p>

We are a team of volunteers and starting a new project in a community <br>
in the same niche. Your blog provided us valuable information to <br>
work on. You have done a wonderful job!<br><a href="https://mental-reverb.com/blog.php?c=244">reply</a></p></div><div><p><a rel="ugc" href="https://canvas.instructure.com/eportfolios/2302329/Home/Luxury_Condo_Living_An_Unified_Integration_with_Nature">Click here</a> wrote on 24 July 2023<br>Great items from you, man. I've keep in mind your stuff previous to <br>
and you are just extremely wonderful. I really <br>
like what you've received here, really like what you're stating and the way <br>
in which during which you say it. You make it entertaining <br>
and you continue to take care of to keep it smart. I cant wait to learn far more from you.<br>
This is actually a great web site.<br><a href="https://mental-reverb.com/blog.php?c=243">reply</a></p></div><div><p><a rel="ugc" href="https://telegra.ph/Discover-the-Condo-of-Your-Dreams-A-Perfect-Haven-for-Blissful-Living-07-21">More information</a> wrote on 24 July 2023<br>Hi there to all, how is everything, I think every one is getting more from <br>
this web page, and your views are good in support of new people.<br><a href="https://mental-reverb.com/blog.php?c=242">reply</a></p></div><div><p><a rel="ugc" href="https://community.plus.net/t5/user/viewprofilepage/user-id/122453">More information</a> wrote on 23 July 2023<br>I’m not that much of a internet reader to be honest but your blogs really nice, keep it up!<br>
I'll go ahead and bookmark your site to come back in the future.</p><p>

Cheers<br><a href="https://mental-reverb.com/blog.php?c=241">reply</a></p></div><div><p><a rel="ugc" href="https://vincent2d08fpz8.blogsidea.com/profile">sawit777</a> wrote on 22 July 2023<br>Hi, Neat post. There is an issue together with your website in web explorer, may test <br>
this? IE still is the marketplace leader and a good portion of other folks will leave out your excellent writing due to this problem.<br><a href="https://mental-reverb.com/blog.php?c=240">reply</a></p></div><div><p><a rel="ugc" href="http://idea.informer.com/users/pailbird8/?what=personal">link alternatif slot gacor</a> wrote on 22 July 2023<br>I love your blog.. very nice colors &amp; theme. Did you make this website yourself or <br>
did you hire someone to do it for you? Plz answer back as I'm looking to create <br>
my own blog and would like to know where u <br>
got this from. cheers<br><a href="https://mental-reverb.com/blog.php?c=239">reply</a></p></div><div><p><a rel="ugc" href="https://piasharma.com/chhindwara-call-girls.html">Lottie</a> wrote on 21 July 2023<br>I got this website from my buddy who told me concerning this web page and at the moment this time I am <br>
visiting this web site and reading very informative content at this place.<br><a href="https://mental-reverb.com/blog.php?c=238">reply</a></p></div><div><p><a rel="ugc" href="https://ethan5a85pvz6.activosblog.com/profile">daftar medali303</a> wrote on 20 July 2023<br>Definitely believe that which you stated. Your favorite reason appeared to be on the net the simplest thing to be <br>
aware of. I say to you, I definitely get irked while people think about worries that they just do not know about.<br>
You managed to hit the nail upon the top as well as defined out the whole thing without having side effect , people could take a <br>
signal. Will probably be back to get more.<br>
Thanks<br><a href="https://mental-reverb.com/blog.php?c=237">reply</a></p></div><div><p><a rel="ugc" href="https://canvas.instructure.com/eportfolios/2291548/Home/The_Significance_of_Finding_Family_and_Couples_Therapy_Enhancing_Bonds_and_Building_Lasting_Connections">Visit here</a> wrote on 18 July 2023<br>Today, I went to the beach with my kids. I found a sea shell and gave it to my 4 year <br>
old daughter and said "You can hear the ocean if you put this to your ear." She placed the shell <br>
to her ear and screamed. There was a hermit crab inside and it <br>
pinched her ear. She never wants to go back!<br>
LoL I know this is completely off topic but I had to tell someone!<br><a href="https://mental-reverb.com/blog.php?c=235">reply</a></p></div><div><p><a rel="ugc" href="https://www.quia.com/profiles/eco281">Click here</a> wrote on 18 July 2023<br>Your method of describing all in this piece of writing <br>
is in fact fastidious, every one be able to without difficulty know it, Thanks a lot.<br><a href="https://mental-reverb.com/blog.php?c=233">reply</a></p></div><div><p><a rel="ugc" href="https://us.community.sony.com/s/profile/005Dp0000039Ft6?language=en_US">Click here</a> wrote on 17 July 2023<br>I believe this is among the such a lot important information for me.<br>
And i am happy reading your article. However wanna remark on few basic <br>
issues, The website style is ideal, the articles is in point of fact great : D.</p><p>

Good activity, cheers<br><a href="https://mental-reverb.com/blog.php?c=232">reply</a></p></div><div><p><a rel="ugc" href="https://jun88.fund/">jun88</a> wrote on 16 July 2023<br>Informative article, exactly what I wanted to find.<br><a href="https://mental-reverb.com/blog.php?c=231">reply</a></p></div><div><p><a rel="ugc" href="https://manuelamwd07418.blogdiloz.com/22023906/sistem-mengerjakan-pengisian-deposit-di-akun-judi-slot-mudah-menang">ceria777</a> wrote on 16 July 2023<br>I will immediately clutch your rss as I can not to find your email subscription hyperlink <br>
or newsletter service. Do you've any? Please let me know so that I <br>
may subscribe. Thanks.<br><a href="https://mental-reverb.com/blog.php?c=230">reply</a></p></div><div><p><a rel="ugc" href="https://www.crimsonquarry.com/users/ceria777hebat">ceria777</a> wrote on 28 December 2023<br>Fastidious respond in return of this issue with real arguments and telling all on the topic of that.<br><a href="https://mental-reverb.com/blog.php?c=498">reply</a></p></div><div><p><a rel="ugc" href="https://youlike191.co/">สล็อต191</a> wrote on 13 July 2023<br>Be one in all the primary to expertise this all-new slot machine with nice <br>
original sport content material on a beautiful 43-inch 4K Ultra HD <br>
display with twin spin buttons, a USB charger, and lots of more awesome features!<br>
You will uncover the discussion board is a superb place to find companions,<br>
meet new buddies and enjoy the most recent outdoor news and gossip.<br>
My experience is nice. It retains me entertained and I <br>
really like my account supervisor, Josh, as a result of he <br>
is consistently providing me with suggestions to reinforce my play experience.</p><p>

The slot machines are outfitted with The Cosmopolitan’s unique FASTPAY know-how for high-limit play.<br>
The Cosmopolitan of Las Vegas' High Limit Slot Lounge <br>
is an elegant, lively area outfitted with roughly sixty five machines and the latest in slot technology.<br>
In addition to the latest in slot know-how, the Lounge gives snug <br>
seating, TVs, non-public restrooms, and a devoted cage and ATM.<br>
Sebagai AGEN IDN SLOT TERBAIK, kami menyediakan hyperlink <br>
alternatif di samping link utama sehingga bisa diakses oleh pemain ketika <br>
tidak bisa mengakses link utama kami tersebut.</p><p>

Situs kami juga menyediakan beragam bonus yang bisa pemain dapatkan ketika menjadi anggota.<br><a href="https://mental-reverb.com/blog.php?c=227">reply</a></p></div><div><p><a rel="ugc" href="https://jun88.mobi/">jun88</a> wrote on 13 July 2023<br>Pretty! This was an extremely wonderful post.<br>
Many thanks for providing these details.<br><a href="https://mental-reverb.com/blog.php?c=226">reply</a></p></div><div><p><a rel="ugc" href="https://hellviswild.nicepage.io/">hellvis wild slot</a> wrote on 12 July 2023<br>Thanks on your marvelous posting! I really enjoyed reading it, you're a great author.I will make certain to bookmark your blog and will often come back very soon. I want to <br>
encourage you continue your great writing, have a nice weekend!<br><a href="https://mental-reverb.com/blog.php?c=224">reply</a></p></div><div><p><a rel="ugc" href="https://forum.discountpharms.com/member.php?action=profile&amp;uid=346121">saddle cloth</a> wrote on 12 July 2023<br>Highly energetic blog, I enjoyed that a lot. Will there be a part 2?<br><a href="https://mental-reverb.com/blog.php?c=223">reply</a></p></div><div><p><a rel="ugc" href="https://clefsmoke0.bloggersdelight.dk/2023/07/09/the-benefits-of-nicotine-salt-shots-elevating-your-vaping-experience/">URL</a> wrote on 12 July 2023<br>Woah! I'm really digging the template/theme of this website.<br>
It's simple, yet effective. A lot of times it's difficult <br>
to get that "perfect balance" between usability and appearance.<br>
I must say you've done a amazing job with this. Also, the blog loads extremely fast for me on Firefox.</p><p>

Superb Blog!<br><a href="https://mental-reverb.com/blog.php?c=222">reply</a></p></div><div><p><a rel="ugc" href="http://idea.informer.com/users/drdickerson45/?what=personal">URL</a> wrote on 11 July 2023<br>It's an awesome article designed for all the online people; they will take benefit from it I am sure.<br><a href="https://mental-reverb.com/blog.php?c=221">reply</a></p></div><div><p><a rel="ugc" href="https://sway.office.com/NWijSBXjAVTDTkSL">Website</a> wrote on 10 July 2023<br>Great goods from you, man. I've understand your <br>
stuff previous to and you're just extremely fantastic.</p><p>

I actually like what you have acquired here, really like <br>
what you're saying and the way in which you say it.<br>
You make it entertaining and you still care for to keep it <br>
smart. I can not wait to read much more from you. This is actually a tremendous web site.<br><a href="https://mental-reverb.com/blog.php?c=220">reply</a></p></div><div><p><a rel="ugc" href="https://anotepad.com/notes/mefk8tb9">Website</a> wrote on 10 July 2023<br>Wow! Finally I got a blog from where I be able to genuinely take <br>
helpful information concerning my study and knowledge.<br><a href="https://mental-reverb.com/blog.php?c=219">reply</a></p></div><div><p><a rel="ugc" href="https://remingtonyfls51851.bloggin-ads.com/43204567/situs-idn-togel-slot-hadir-buat-anda-yang-hobi-bet-24-jam-online">abditogel</a> wrote on 10 July 2023<br>I've been surfing on-line more than 3 hours today, yet I never discovered any fascinating article like <br>
yours. It's pretty value enough for me. Personally, <br>
if all web owners and bloggers made excellent content material as you probably did, the internet can be <br>
much more useful than ever before.<br><a href="https://mental-reverb.com/blog.php?c=218">reply</a></p></div><div><p><a rel="ugc" href="https://easton4b85syd9.qodsblog.com/profile">abditogel</a> wrote on 10 July 2023<br>No matter if some one searches for his essential thing, so he/she desires to be available that in detail, so <br>
that thing is maintained over here.<br><a href="https://mental-reverb.com/blog.php?c=217">reply</a></p></div><div><p><a rel="ugc" href="https://fitzsimmons-werner-2.technetbloggers.de/revealing-the-most-recent-real-estate-market-trends-in-singapore">Click here</a> wrote on 09 July 2023<br>Heya i am for the first time here. I found this board and I find <br>
It truly useful &amp; it helped me out a lot. I hope to give something back and aid <br>
others like you helped me.<br><a href="https://mental-reverb.com/blog.php?c=215">reply</a></p></div><div><p><a rel="ugc" href="https://www.pearltrees.com/breadlayer76/item529048934">Visit</a> wrote on 08 July 2023<br>That is really attention-grabbing, You're a <br>
very skilled blogger. I have joined your rss feed and look <br>
ahead to searching for extra of your great post.<br>
Additionally, I have shared your website in my social networks<br><a href="https://mental-reverb.com/blog.php?c=214">reply</a></p></div><div><p><a rel="ugc" href="https://drberita.com/buy-threads-likes/">Buy Threads Likes</a> wrote on 08 July 2023<br>I am curious to find out what blog platform you have <br>
been working with? I'm having some minor security issues <br>
with my latest blog and I would like to find something more safe.<br>
Do you have any recommendations?<br><a href="https://mental-reverb.com/blog.php?c=213">reply</a></p></div><div><p><a rel="ugc" href="https://www.diigo.com/user/remotetopc">Source of information</a> wrote on 06 July 2023<br>This is very fascinating, You're a very professional blogger.<br>
I have joined your feed and look forward to in quest of more of your fantastic post.</p><p>

Additionally, I've shared your site in my social networks<br><a href="https://mental-reverb.com/blog.php?c=211">reply</a></p></div><div><p><a rel="ugc" href="https://reidwbdee.blog2news.com/1325561/wisdom-of-athena-slot-pragmatic-terbaru-rasakan-kehebatannya">wisdom of athena slot</a> wrote on 05 July 2023<br>Its like you learn my thoughts! You seem to grasp a lot approximately <br>
this, like you wrote the ebook in it or something.<br>
I believe that you just could do with a few percent to drive the message home a bit, but other than that, that <br>
is magnificent blog. A great read. I will certainly be <br>
back.<br><a href="https://mental-reverb.com/blog.php?c=210">reply</a></p></div><div><p><a rel="ugc" href="https://hizlicasino.co/">hızlı casino</a> wrote on 05 July 2023<br>Everything published was very reasonable. However, <br>
what about this? what if you were to create a awesome headline?<br>
I ain't saying your content isn't solid., however suppose you added something <br>
to maybe grab folk's attention? I mean Blog - The weirdest bug I've <br>
ever encountered is a little vanilla. You might peek at Yahoo's home page and watch how they create news headlines to get people to open the links.<br>
You might add a video or a related picture or two to grab people excited about everything've got to say.<br>
In my opinion, it could make your posts a little livelier.<br><a href="https://mental-reverb.com/blog.php?c=209">reply</a></p></div><div><p><a rel="ugc" href="https://sawit77.weebly.com/">sawit77</a> wrote on 03 July 2023<br>Every weekend i used to pay a visit this website, for the reason that i wish for enjoyment,<br>
as this this web page conations truly good funny material too.<br><a href="https://mental-reverb.com/blog.php?c=208">reply</a></p></div><div><p><a rel="ugc" href="https://click4r.com/posts/g/10500128/">Source</a> wrote on 01 July 2023<br>Amazing! Its really awesome post, I have got much clear idea <br>
regarding from this piece of writing.<br><a href="https://mental-reverb.com/blog.php?c=203">reply</a></p></div><div><p><a rel="ugc" href="https://lynk.id/artis777">website</a> wrote on 01 July 2023<br>Hi i am kavin, its my first time to commenting anyplace, when i read this post i thought i <br>
could also create comment due to this sensible article.<br><a href="https://mental-reverb.com/blog.php?c=202">reply</a></p></div><div><p><a rel="ugc" href="https://writeablog.net/l1fqmuj393/new-tech-gadgets-you-must-be-acquiring-right-now-have-you-ever-thought-about">Visit</a> wrote on 01 July 2023<br>I take pleasure in, result in I found just what I used to be having a look <br>
for. You have ended my four day lengthy hunt! God Bless <br>
you man. Have a nice day. Bye<br><a href="https://mental-reverb.com/blog.php?c=201">reply</a></p></div><div><p><a rel="ugc" href="http://controlc.com/f3391c96">Source of information</a> wrote on 01 July 2023<br>It's the best time to make some plans for the future and it is time to be happy.<br>
I've read this post and if I could I wish to suggest you few <br>
interesting things or advice. Maybe you can write next articles referring <br>
to this article. I desire to read more things about it!<br><a href="https://mental-reverb.com/blog.php?c=200">reply</a></p></div><div><p><a rel="ugc" href="https://social.msdn.microsoft.com/Profile/Edinburgh%20Roofing%20Company%20736">More info</a> wrote on 01 July 2023<br>Whoa! This blog looks exactly like my old one! It's on a completely different topic but <br>
it has pretty much the same layout and design. Wonderful choice of colors!<br><a href="https://mental-reverb.com/blog.php?c=198">reply</a></p></div><div><p><a rel="ugc" href="https://postheaven.net/swimpeony06/how-a-therapist-can-assist-you-browse-lifes-obstacles">Website</a> wrote on 01 July 2023<br>Good day! I could have sworn I've been to this website before but after <br>
going through a few of the posts I realized <br>
it's new to me. Regardless, I'm certainly delighted I stumbled upon it and I'll be bookmarking <br>
it and checking back frequently!<br><a href="https://mental-reverb.com/blog.php?c=197">reply</a></p></div><div><p><a rel="ugc" href="https://postheaven.net/niecepruner9/exploring-digital-solutions-changing-the-method-we-work-and-live">More information</a> wrote on 30 June 2023<br>Wow that was strange. I just wrote an incredibly long comment but <br>
after I clicked submit my comment didn't appear.<br>
Grrrr... well I'm not writing all that over again. Anyhow, just wanted to say great blog!<br><a href="https://mental-reverb.com/blog.php?c=196">reply</a></p></div><div><p><a rel="ugc" href="https://independent.academia.edu/RazaFamilyLawSolutions">Source of information</a> wrote on 30 June 2023<br>Someone essentially help to make seriously posts I would state.<br>
That is the very first time I frequented your web page and to this <br>
point? I surprised with the analysis you made to create <br>
this particular post extraordinary. Fantastic <br>
process!<br><a href="https://mental-reverb.com/blog.php?c=195">reply</a></p></div><div><p><a rel="ugc" href="https://cesartbjp41952.mybloglicious.com/40170261/bocoran-slot-paling-seru-dan-menyenangkan">ads508</a> wrote on 27 June 2023<br>My partner and I stumbled over here by a different web page and thought I might check <br>
things out. I like what I see so i am just following you.<br>
Look forward to going over your web page yet again.<br><a href="https://mental-reverb.com/blog.php?c=192">reply</a></p></div><div><p><a rel="ugc" href="https://bitcointalk.org/index.php?action=profile;u=3560528">แทงบอล</a> wrote on 27 June 2023<br>Hi there to every body, it's my first go to see of this weblog; <br>
this blog includes awesome and in fact good material designed for readers.<br><a href="https://mental-reverb.com/blog.php?c=191">reply</a></p></div><div><p><a rel="ugc" href="https://linktr.ee/ProcureStack">Profile</a> wrote on 25 June 2023<br>Hello! I know this is kinda off topic but I was wondering if you knew where I could find a captcha plugin for my comment form?<br>
I'm using the same blog platform as yours and I'm having trouble <br>
finding one? Thanks a lot!<br><a href="https://mental-reverb.com/blog.php?c=190">reply</a></p></div><div><p><a rel="ugc" href="https://click4r.com/posts/g/10412462/">Visit here</a> wrote on 25 June 2023<br>Thanks in favor of sharing such a fastidious opinion, post is <br>
nice, thats why i have read it entirely<br><a href="https://mental-reverb.com/blog.php?c=189">reply</a></p></div><div><p><a rel="ugc" href="https://betcasinoscript.com/">Buy Casino Script</a> wrote on 25 June 2023<br>This is my first time go to see at here and i am actually <br>
happy to read all at single place.<br><a href="https://mental-reverb.com/blog.php?c=188">reply</a></p></div><div><p><a rel="ugc" href="https://chessuganda9.werite.net/post/2023/01/18/Mein-Leitfaden-zur-Einstellung-der-besten-Web-Designer,-SEO-Marketing,-Online-Vermarkter">Click here</a> wrote on 24 June 2023<br>WOW just what I was searching for. Came here by searching <br>
for More info<br><a href="https://mental-reverb.com/blog.php?c=187">reply</a></p></div><div><p><a rel="ugc" href="https://jacobs-porter.federatedjournals.com/unlocking-the-power-of-ai-seo-changing-digital-marketing-techniques-1686532005">URL</a> wrote on 24 June 2023<br>These are genuinely fantastic ideas in about blogging.<br>
You have touched some pleasant points here. Any way keep up wrinting.<br><a href="https://mental-reverb.com/blog.php?c=186">reply</a></p></div><div><p><a rel="ugc" href="https://soundcloud.com/ceria777gacor">ceria777 link alternatif</a> wrote on 24 June 2023<br>This excellent website truly has all of the information I wanted concerning this <br>
subject and didn't know who to ask.<br><a href="https://mental-reverb.com/blog.php?c=185">reply</a></p></div><div><p><a rel="ugc" href="https://gravatar.com/aurumdates05">Website</a> wrote on 22 June 2023<br>Thanks for ones marvelous posting! I actually <br>
enjoyed reading it, you might be a great author.I will remember <br>
to bookmark your blog and will eventually come back <br>
in the foreseeable future. I want to encourage you <br>
continue your great work, have a nice day!<br><a href="https://mental-reverb.com/blog.php?c=182">reply</a></p></div><div><p><a rel="ugc" href="https://zenwriting.net/bunqueen46/enhancing-travels-with-dependable-taxi-providers-in-noida">More information</a> wrote on 20 June 2023<br>It is appropriate time to make some plans for the <br>
future and it is time to be happy. I have read this post and <br>
if I may I wish to recommend you few interesting issues or advice.<br>
Perhaps you can write next articles referring to this article.<br>
I wish to learn more things approximately it!<br><a href="https://mental-reverb.com/blog.php?c=180">reply</a></p></div><div><p><a rel="ugc" href="https://us.community.sony.com/s/profile/005Dp000003YfYO?language=en_US">Visit</a> wrote on 20 June 2023<br>Hi, I desire to subscribe for this webpage to get hottest updates, therefore where can i <br>
do it please help out.<br><a href="https://mental-reverb.com/blog.php?c=179">reply</a></p></div><div><p><a rel="ugc" href="https://linkr.bio/sga188maxwin">sga188</a> wrote on 20 June 2023<br>Hey there! This is my first comment here so I just wanted to <br>
give a quick shout out and say I truly enjoy reading through your articles.<br>
Can you suggest any other blogs/websites/forums that deal with the same topics?</p><p>

Thanks a lot!<br><a href="https://mental-reverb.com/blog.php?c=178">reply</a></p></div><div><p><a rel="ugc" href="https://penzu.com/p/c19cc139">Profile</a> wrote on 18 June 2023<br>I love it whenever people get together and share views.<br>
Great website, stick with it!<br><a href="https://mental-reverb.com/blog.php?c=176">reply</a></p></div><div><p><a rel="ugc" href="https://zenwriting.net/frownwasher0/revealing-the-benefits-of-vaping-a-healthier-alternative-jgbq">Website</a> wrote on 17 June 2023<br>Pretty great post. I simply stumbled upon your weblog and <br>
wanted to say that I've really loved browsing your weblog posts.<br>
In any case I will be subscribing to your rss feed and I hope you write again soon!<br><a href="https://mental-reverb.com/blog.php?c=174">reply</a></p></div><div><p><a rel="ugc" href="https://www.nusantara77.net/">live sex</a> wrote on 17 June 2023<br>I every time used to read post in news papers but now as I am a user of web therefore from now I am using net for posts, thanks to web.<br><a href="https://mental-reverb.com/blog.php?c=173">reply</a></p></div><div><p><a rel="ugc" href="https://answers.informer.com/user/w1fhqfb713">Source URL</a> wrote on 17 June 2023<br>Thanks for ones marvelous posting! I seriously enjoyed reading it, you will be a great author.<br>
I will be sure to bookmark your blog and may come <br>
back from now on. I want to encourage one to continue your great writing, have a nice evening!<br><a href="https://mental-reverb.com/blog.php?c=171">reply</a></p></div><div><p><a rel="ugc" href="https://cristianwyayy.blogthisbiz.com/25050605/website-slot-gacor-dan-terpercaya-ads508">ads508 slot</a> wrote on 15 June 2023<br>Great beat ! I would like to apprentice at the same time as <br>
you amend your web site, how can i subscribe for a weblog website?<br>
The account aided me a acceptable deal. I had been tiny bit <br>
familiar of this your broadcast provided vivid clear idea<br><a href="https://mental-reverb.com/blog.php?c=170">reply</a></p></div><div><p><a rel="ugc" href="https://wlo.link/@sga188">sga188</a> wrote on 14 June 2023<br>Very good information. Lucky me I came across your site <br>
by accident (stumbleupon). I have bookmarked it for later!<br><a href="https://mental-reverb.com/blog.php?c=168">reply</a></p></div><div><p><a rel="ugc" href="https://mssg.me/medali303gacor">medali303</a> wrote on 14 June 2023<br>Woah! I'm really digging the template/theme of this <br>
site. It's simple, yet effective. A lot of times <br>
it's difficult to get that "perfect balance" between usability and <br>
appearance. I must say you have done a amazing job with this.</p><p>

Additionally, the blog loads extremely fast for me on Firefox.<br>
Superb Blog!<br><a href="https://mental-reverb.com/blog.php?c=167">reply</a></p></div><div><p><a rel="ugc" href="https://rentry.co/yprvy">Main profile</a> wrote on 13 June 2023<br>My partner and I absolutely love your blog and find nearly <br>
all of your post's to be just what I'm looking for.<br>
Do you offer guest writers to write content in your case?<br>
I wouldn't mind publishing a post or elaborating on a few of the subjects you write in relation to <br>
here. Again, awesome weblog!<br><a href="https://mental-reverb.com/blog.php?c=166">reply</a></p></div><div><p><a rel="ugc" href="http://liposuctionclin.idea.informer.com/">Main profile</a> wrote on 10 June 2023<br>Hmm is anyone else encountering problems with the images on this <br>
blog loading? I'm trying to find out if its a problem on my end or if it's the blog.<br>
Any responses would be greatly appreciated.<br><a href="https://mental-reverb.com/blog.php?c=164">reply</a></p></div><div><p><a rel="ugc" href="https://gfycat.com/@mayflowerfloor">Source URL</a> wrote on 08 June 2023<br>I couldn't resist commenting. Exceptionally well written!<br><a href="https://mental-reverb.com/blog.php?c=163">reply</a></p></div><div><p><a rel="ugc" href="https://www.diigo.com/profile/bangkokcondo">Profile</a> wrote on 08 June 2023<br>My brother recommended I might like this website.<br>
He was entirely right. This post actually made my day.<br>
You can not imagine simply how much time I had spent for this info!<br>
Thanks!<br><a href="https://mental-reverb.com/blog.php?c=162">reply</a></p></div><div><p><a rel="ugc" href="https://blake7c08pcm3.blogunok.com/profile">medali303</a> wrote on 08 June 2023<br>My family members all the time say that I am wasting my time here <br>
at web, but I know I am getting know-how daily by <br>
reading such fastidious posts.<br><a href="https://mental-reverb.com/blog.php?c=161">reply</a></p></div><div><p><a rel="ugc" href="https://diigo.com/0stq22">Source of information</a> wrote on 08 June 2023<br>Having read this I believed it was extremely informative.</p><p>

I appreciate you finding the time and energy to put this information together.<br>
I once again find myself spending a significant amount of time both <br>
reading and commenting. But so what, it was still <br>
worthwhile!<br><a href="https://mental-reverb.com/blog.php?c=160">reply</a></p></div><div><p><a rel="ugc" href="https://kavbet.org/">kavbet</a> wrote on 07 June 2023<br>Hi there to all, how is all, I think every one is getting more from this web page, and your <br>
views are fastidious for new users.<br><a href="https://mental-reverb.com/blog.php?c=159">reply</a></p></div><div><p><a rel="ugc" href="https://www.thingiverse.com/discordmassdm/designs">Website</a> wrote on 05 June 2023<br>Hi there, I discovered your web site via Google even as searching for a <br>
related topic, your web site got here up, it seems <br>
good. I have bookmarked it in my google bookmarks.</p><p>

Hello there, just changed into aware of your weblog through Google, <br>
and found that it's truly informative. I am gonna be careful for brussels.<br>
I will appreciate if you happen to proceed this in future.<br>
Lots of folks will probably be benefited from your writing.<br>
Cheers!<br><a href="https://mental-reverb.com/blog.php?c=158">reply</a></p></div><div><p><a rel="ugc" href="https://solo.to/artis777_slotgacor">artis777</a> wrote on 04 June 2023<br>Wow, superb blog layout! How long have you been blogging for?</p><p>

you make blogging look easy. The overall look of your web site is excellent, let alone the content!<br><a href="https://mental-reverb.com/blog.php?c=157">reply</a></p></div><div><p><a rel="ugc" href="https://calendar.google.com/calendar/embed?src=etinos%40gmail.com&amp;ctz=Atlantic%2FCanary">Source of information</a> wrote on 04 June 2023<br>Hi there, I want to subscribe for this weblog to obtain hottest updates,<br>
thus where can i do it please help out.<br><a href="https://mental-reverb.com/blog.php?c=156">reply</a></p></div><div><p><a rel="ugc" href="https://coinbarguncel.com/">coinbar</a> wrote on 03 June 2023<br>Hello every one, here every one is sharing these kinds of know-how, therefore it's fastidious to read <br>
this weblog, and I used to pay a visit this web site daily.<br><a href="https://mental-reverb.com/blog.php?c=155">reply</a></p></div><div><p><a rel="ugc" href="https://app.glosbe.com/profile/7068461701573643467">pgsoft slot</a> wrote on 03 June 2023<br>Greetings! Very useful advice in this particular post! It is the little changes which will make the most important changes.<br>
Thanks for sharing!<br><a href="https://mental-reverb.com/blog.php?c=154">reply</a></p></div><div><p><a rel="ugc" href="https://taplink.cc/sawit777mpo">sawit 777</a> wrote on 02 June 2023<br>I’m not that much of a online reader to be honest but your <br>
sites really nice, keep it up! I'll go ahead <br>
and bookmark your site to come back in the future. Cheers<br><a href="https://mental-reverb.com/blog.php?c=153">reply</a></p></div><div><p><a rel="ugc" href="https://magic.ly/sawit777">sawit777 login</a> wrote on 02 June 2023<br>Thanks  for some other informative website.<br>
Where else could I am getting that kind of information written in such <br>
an ideal approach? I've a project that I am simply now operating on, and I <br>
have been on the glance out for such information.<br><a href="https://mental-reverb.com/blog.php?c=152">reply</a></p></div><div><p><a rel="ugc" href="https://lynk.id/slot5000id">slot5000</a> wrote on 02 June 2023<br>This article is in fact a good one it helps new web visitors, who <br>
are wishing in favor of blogging.<br><a href="https://mental-reverb.com/blog.php?c=151">reply</a></p></div><div><p><a rel="ugc" href="https://www.kickstarter.com/profile/1198268708/about">More information</a> wrote on 02 June 2023<br>Hello! I've been reading your web site for a while now and finally <br>
got the courage to go ahead and give you a shout out from  Dallas Tx!<br>
Just wanted to say keep up the fantastic job!<br><a href="https://mental-reverb.com/blog.php?c=150">reply</a></p></div><div><p><a rel="ugc" href="https://public.tableau.com/app/profile/cupid.boutique">Source URL</a> wrote on 02 June 2023<br>Hi there! I know this is kind of off topic but I was wondering if you <br>
knew where I could find a captcha plugin for my comment <br>
form? I'm using the same blog platform as yours <br>
and I'm having difficulty finding one? Thanks a lot!<br><a href="https://mental-reverb.com/blog.php?c=149">reply</a></p></div><div><p><a rel="ugc" href="https://sketchfab.com/y0dfzuj008">Source</a> wrote on 02 June 2023<br>Thanks  for any other informative website.<br>
Where else may just I get that kind of info written in such an ideal way?<br>
I have a challenge that I'm simply now operating on, and I've been at the glance out for such information.<br><a href="https://mental-reverb.com/blog.php?c=148">reply</a></p></div><div><p><a rel="ugc" href="https://wlo.link/@slot5000_">slot5000</a> wrote on 01 June 2023<br>I know this if off topic but I'm looking into starting my own weblog and was curious what all is needed to get <br>
setup? I'm assuming having a blog like yours would <br>
cost a pretty penny? I'm not very internet smart so I'm <br>
not 100% certain. Any tips or advice would be greatly appreciated.<br>
Thank you<br><a href="https://mental-reverb.com/blog.php?c=147">reply</a></p></div><div><p><a rel="ugc" href="http://www.51jinqu.com/home.php?mod=space&amp;uid=851470">pastislotqq</a> wrote on 31 May 2023<br>If you are going for best contents like myself, only visit this web page everyday <br>
since it gives feature contents, thanks<br><a href="https://mental-reverb.com/blog.php?c=146">reply</a></p></div><div><p><a rel="ugc" href="https://brody9q41int5.blog-ezine.com/profile">sawit777</a> wrote on 31 May 2023<br>Good post! We will be linking to this particularly great <br>
content on our website. Keep up the good writing.<br><a href="https://mental-reverb.com/blog.php?c=145">reply</a></p></div><div><p><a rel="ugc" href="https://danteykqeo.blogoxo.com/19916885/10-kriteria-ads508-menjadi-situs-slot-terpercaya-2023">ads508 link alternatif</a> wrote on 31 May 2023<br>I was curious if you ever thought of changing the page layout of your website?</p><p>

Its very well written; I love what youve got to say. But maybe you could a little more in the way of <br>
content so people could connect with it better. Youve got <br>
an awful lot of text for only having one or 2 pictures. Maybe you could space it out better?<br><a href="https://mental-reverb.com/blog.php?c=144">reply</a></p></div><div><p><a rel="ugc" href="https://c8ke.com/abditoto4d">abditogel</a> wrote on 31 May 2023<br>Hey There. I found your blog using msn. This is a very well written article.</p><p>

I will make sure to bookmark it and return to read more of your useful info.<br>
Thanks for the post. I will definitely return.<br><a href="https://mental-reverb.com/blog.php?c=143">reply</a></p></div><div><p><a rel="ugc" href="https://lu.ma/artis777_slotgacor">artis777</a> wrote on 31 May 2023<br>It's truly very complicated in this active life to listen news on TV,<br>
therefore I just use web for that purpose, and obtain the latest information.<br><a href="https://mental-reverb.com/blog.php?c=142">reply</a></p></div><div><p><a rel="ugc" href="https://us.community.sony.com/s/profile/0054O00000AVfpX?language=en_US">More info</a> wrote on 31 May 2023<br>I am actually thankful to the owner of this site who has shared this wonderful piece of writing at here.<br><a href="https://mental-reverb.com/blog.php?c=141">reply</a></p></div><div><p><a rel="ugc" href="https://sawit777.webflow.io/">sawit777</a> wrote on 31 May 2023<br>I absolutely love your site.. Very nice colors &amp; theme.<br>
Did you build this amazing site yourself? Please reply back as I'm looking to create my own website and <br>
would love to learn where you got this from or what the theme is named.<br>
Appreciate it!<br><a href="https://mental-reverb.com/blog.php?c=140">reply</a></p></div><div><p><a rel="ugc" href="https://www.instructables.com/member/y5prgxq017/">Click here</a> wrote on 31 May 2023<br>It's wonderful that you are getting ideas from this paragraph as well as from our dialogue made here.<br><a href="https://mental-reverb.com/blog.php?c=139">reply</a></p></div><div><p><a rel="ugc" href="https://community.plus.net/t5/user/viewprofilepage/user-id/120548">Click here</a> wrote on 29 May 2023<br>I enjoy, lead to I found exactly what I used to be looking for.<br>
You have ended my 4 day lengthy hunt! God Bless you man. Have a nice day.<br>
Bye<br><a href="https://mental-reverb.com/blog.php?c=138">reply</a></p></div><div><p><a rel="ugc" href="https://nflhd.co/">covers nfl matchup</a> wrote on 29 May 2023<br>I read this paragraph completely on the topic of the difference of hottest and previous <br>
technologies, it's remarkable article.<br><a href="https://mental-reverb.com/blog.php?c=137">reply</a></p></div><div><p><a rel="ugc" href="https://dribbble.com/e7xipwk385">Main profile</a> wrote on 28 May 2023<br>I am not certain the place you are getting your information, however good topic.<br>
I must spend a while finding out much more or figuring out more.<br>
Thank you for excellent info I used to be searching for this info <br>
for my mission.<br><a href="https://mental-reverb.com/blog.php?c=136">reply</a></p></div><div><p><a rel="ugc" href="https://peatix.com/user/15840415/view">Profile</a> wrote on 28 May 2023<br>I every time spent my half an hour to read this web site's <br>
articles or reviews daily along with a cup of coffee.<br><a href="https://mental-reverb.com/blog.php?c=135">reply</a></p></div><div><p><a rel="ugc" href="https://www.empowher.com/user/3996303">Main profile</a> wrote on 28 May 2023<br>I all the time used to study piece of writing in news papers but now as I am a user of net so from now I <br>
am using net for articles, thanks to web.<br><a href="https://mental-reverb.com/blog.php?c=134">reply</a></p></div><div><p><a rel="ugc" href="https://linkpop.com/srg777">sarang777</a> wrote on 28 May 2023<br>Article writing is also a excitement, if you know afterward you <br>
can write or else it is complicated to write.<br><a href="https://mental-reverb.com/blog.php?c=133">reply</a></p></div><div><p><a rel="ugc" href="https://forms.office.com/Pages/ResponsePage.aspx?id=DQSIkWdsW0yxEjajBLZtrQAAAAAAAAAAAAZ__h8sGjJUMEZMWU9TTzBPVzhCUk1VQzg0R0pLRVdOTC4u">URL</a> wrote on 28 May 2023<br>Your style is really unique in comparison to other folks I have read stuff from.</p><p>

Thank you for posting when you have the opportunity, Guess I will just bookmark this <br>
blog.<br><a href="https://mental-reverb.com/blog.php?c=132">reply</a></p></div><div><p><a rel="ugc" href="https://telegra.ph/Creating-Engaging-Social-Network-Content-with-AI-Unleashing-the-Power-of-Automation-05-21">Visit here</a> wrote on 28 May 2023<br>I feel this is one of the such a lot vital info for me.<br>
And i'm satisfied studying your article. However want to <br>
commentary on some basic issues, The website style is ideal, the articles is truly nice <br>
: D. Good task, cheers<br><a href="https://mental-reverb.com/blog.php?c=131">reply</a></p></div><div><p><a rel="ugc" href="https://www.tripadvisor.in/Profile/amarnisangels">Visit</a> wrote on 28 May 2023<br>Hi to every body, it's my first pay a quick visit of this blog; this blog carries remarkable and in fact good information in favor of readers.<br><a href="https://mental-reverb.com/blog.php?c=130">reply</a></p></div><div><p><a rel="ugc" href="https://www.pearltrees.com/emerybrian5/item520021740">More information</a> wrote on 28 May 2023<br>What a stuff of un-ambiguity and preserveness of precious knowledge on the topic of unexpected feelings.<br><a href="https://mental-reverb.com/blog.php?c=129">reply</a></p></div><div><p><a rel="ugc" href="https://pastebin.pl/view/e0d0abd8">Visit here</a> wrote on 28 May 2023<br>Good post. I learn something totally new and challenging on sites I stumbleupon every day.</p><p>

It's always useful to read articles from other authors and practice something from their <br>
web sites.<br><a href="https://mental-reverb.com/blog.php?c=128">reply</a></p></div><div><p><a rel="ugc" href="https://connect.garmin.com/modern/profile/020110cd-51b4-45cb-b8ec-f2889a84327b">sawit777</a> wrote on 28 May 2023<br>Does your website have a contact page? I'm having a <br>
tough time locating it but, I'd like to shoot you an email.<br>
I've got some recommendations for your blog you might be interested in hearing.</p><p>

Either way, great blog and I look forward to seeing it improve over time.<br><a href="https://mental-reverb.com/blog.php?c=127">reply</a></p></div><div><p><a rel="ugc" href="https://penzu.com/p/0c7a8791">Source URL</a> wrote on 28 May 2023<br>I’m not that much of a internet reader to <br>
be honest but your sites really nice, keep it up! I'll go ahead and bookmark your website to come back in the future.<br>
Cheers<br><a href="https://mental-reverb.com/blog.php?c=126">reply</a></p></div><div><p><a rel="ugc" href="https://luterouter6.bloggersdelight.dk/2023/05/25/tips-to-take-pleasure-in-a-charming-agritourism-experience/">Visit here</a> wrote on 28 May 2023<br>Heya great blog! Does running a blog such as this take a large amount of work?<br>
I've virtually no expertise in programming but I had been hoping to start my own blog soon. <br>
Anyhow, if you have any ideas or tips for new blog owners please <br>
share. I know this is off subject however I just wanted to ask.<br>
Thanks a lot!<br><a href="https://mental-reverb.com/blog.php?c=125">reply</a></p></div><div><p><a rel="ugc" href="https://washingtonheadline.com/press/destiny-2-sets-a-new-concurrent-player-record-with-over-316k-players/86749">More info</a> wrote on 28 May 2023<br>I'm truly enjoying the design and layout of your <br>
website. It's a very easy on the eyes which makes it much more enjoyable for <br>
me to come here and visit more often. Did you hire out a designer to <br>
create your theme? Outstanding work!<br><a href="https://mental-reverb.com/blog.php?c=124">reply</a></p></div><div><p><a rel="ugc" href="https://sway.office.com/pB9g7ML3mUac4dCH">Website source</a> wrote on 27 May 2023<br>Hmm is anyone else having problems with the pictures on this blog loading?<br>
I'm trying to figure out if its a problem on my end or if it's the blog.<br>
Any responses would be greatly appreciated.<br><a href="https://mental-reverb.com/blog.php?c=123">reply</a></p></div><div><p><a rel="ugc" href="https://social.technet.microsoft.com/profile/NO1wiki%20Biography%20Kingdom">Website</a> wrote on 27 May 2023<br>I love looking through a post that will make men and women think.<br>
Also, thanks for allowing me to comment!<br><a href="https://mental-reverb.com/blog.php?c=122">reply</a></p></div><div><p><a rel="ugc" href="https://viravirayacht.gumroad.com/">More information</a> wrote on 27 May 2023<br>Hmm is anyone else encountering problems with the pictures on this blog loading?<br>
I'm trying to figure out if its a problem on my end or if it's <br>
the blog. Any responses would be greatly appreciated.<br><a href="https://mental-reverb.com/blog.php?c=121">reply</a></p></div><div><p><a rel="ugc" href="https://my.archdaily.com/us/@primeprmarketin">Visit here</a> wrote on 26 May 2023<br>When someone writes an paragraph he/she maintains the image of a user in his/her brain that how a user <br>
can understand it. Thus that's why this piece of writing is amazing.<br>
Thanks!<br><a href="https://mental-reverb.com/blog.php?c=120">reply</a></p></div><div><p><a rel="ugc" href="https://joy.bio/abditogel4d">abditogel</a> wrote on 26 May 2023<br>Fabulous, what a website it is! This web site presents helpful data to us, keep it up.<br><a href="https://mental-reverb.com/blog.php?c=119">reply</a></p></div><div><p><a rel="ugc" href="https://www.quora.com/profile/Ercrefund55">Source URL</a> wrote on 26 May 2023<br>After I originally left a comment I seem to <br>
have clicked on the -Notify me when new comments are added- checkbox and now every time <br>
a comment is added I recieve 4 emails with the exact same comment.<br>
There has to be a means you are able to remove me from that service?<br>
Many thanks!<br><a href="https://mental-reverb.com/blog.php?c=118">reply</a></p></div><div><p><a rel="ugc" href="http://devinlhbs88877.tribunablog.com/">here</a> wrote on 26 May 2023<br>I will right away grab your rss feed as I can not to find <br>
your email subscription link or newsletter service.<br>
Do you've any? Kindly permit me recognise in order that <br>
I may just subscribe. Thanks.<br><a href="https://mental-reverb.com/blog.php?c=117">reply</a></p></div><div><p><a rel="ugc" href="https://www.traveldailynews.com/post/how-to-write-a-strong-essay-about-travel-experience">hire an essay writer</a> wrote on 24 May 2023<br>There's certainly a great deal to know about this topic.<br>
I like all the points you've made.<br><a href="https://mental-reverb.com/blog.php?c=115">reply</a></p></div><div><p><a rel="ugc" href="https://damian0s63rzh0.onzeblog.com/profile">mixparlay88</a> wrote on 23 May 2023<br>I am really impressed with your writing skills and also with the layout on your blog.<br>
Is this a paid theme or did you modify it yourself?<br>
Anyway keep up the nice quality writing, it is rare to <br>
see a great blog like this one nowadays.<br><a href="https://mental-reverb.com/blog.php?c=114">reply</a></p></div><div><p><a rel="ugc" href="https://www.dejavekita.com/read-blog/2334">www.dejavekita.com</a> wrote on 17 May 2023<br>It's actually a nice and helpful piece of info. I am happy that you simply shared this helpful information with us.<br>
Please stay us up to date like this. Thank you for sharing.<br><a href="https://mental-reverb.com/blog.php?c=113">reply</a></p></div><div><p><a rel="ugc" href="https://clinicalpsychologistme.com/profile.php?com=profile&amp;action=view&amp;mod=space&amp;username=tiara_weymouth.143999&amp;op=userinfo">buick electra 225</a> wrote on 15 May 2023<br>What's up friends, pleasant paragraph and nice arguments commented at this <br>
place, I am really enjoying by these.<br><a href="https://mental-reverb.com/blog.php?c=112">reply</a></p></div><div><p>dingle wrote on 15 May 2023<br>dingolious<br><a href="https://mental-reverb.com/blog.php?c=110">reply</a></p></div><div><p>no wrote on 15 May 2023<br>untrue<br><a href="https://mental-reverb.com/blog.php?c=111">reply</a></p></div><div><p><a rel="ugc" href="https://www.tripadvisor.com/Profile/hrsimplified">Source of information</a> wrote on 13 May 2023<br>For most up-to-date news you have to go to see the web and on internet I found this website as a <br>
best web page for latest updates.<br><a href="https://mental-reverb.com/blog.php?c=107">reply</a></p></div><div><p><a rel="ugc" href="https://botoxtraining.jigsy.com/">nurse injector Training</a> wrote on 11 May 2023<br>For health practitioners, learning botox aesthetic injecting techniques is crucial <br>
for offering optimal care to patients and keeping up with the latest developments in medical procedures.<br>
Firstly, Botox is extensively used to treat a variety of conditions, such as facial lines, wrinkles, and <br>
creases. Hence, as a health practitioner, acquiring recent information on Botox <br>
injecting is vital in delivering the best possible care to patients suffering from such conditions.<br>
Secondly, learning cutting-edge injecting techniques is essential for improving patient safety.<br>
Health practitioners should have knowledge about recent techniques that reduce risks and <br>
complications during the injection process.<br>
Hence, keeping up with the latest innovations in Botox injecting techniques is vital for minimizing the chances of <br>
possible complications and assuring safety.<br>
Moreover, obtaining latest administration techniques can enhance the <br>
efficiency of patient treatment. Health practitioners who are knowledgeable in the latest Botox aesthetic injecting techniques can offer treatments more rapidly and successfully, reducing time used on the procedure and enhancing patient contentment.</p><p>

Therefore, learning cutting-edge injecting techniques is <br>
advantageous for both of the patient and the health practitioner.<br><a href="https://mental-reverb.com/blog.php?c=106">reply</a></p></div><div><p><a rel="ugc" href="https://www.thingiverse.com/primeprmarketin/designs">Website source</a> wrote on 27 April 2023<br>Thanks for sharing such a fastidious thinking, piece of writing is pleasant, <br>
thats why i have read it entirely<br><a href="https://mental-reverb.com/blog.php?c=102">reply</a></p></div><div><p><a rel="ugc" href="https://cuy138gacor.web.fc2.com/">cuy138 terpercaya</a> wrote on 26 April 2023<br>I'm not positive the place you're getting your information, however great topic.<br>
I needs to spend a while learning more or working out more.<br>
Thanks for excellent information I used to be in search of this info for <br>
my mission.<br><a href="https://mental-reverb.com/blog.php?c=101">reply</a></p></div><div><p><a rel="ugc" href="https://psychicrise.com/">free psychic reading</a> wrote on 24 April 2023<br>Heyy there I admire your article. I am a medium and offer numerology.<br>
You can email me at carey@psychicrise.com<br><a href="https://mental-reverb.com/blog.php?c=100">reply</a></p></div><div><p><a rel="ugc" href="https://cdbestphotoeditors.online/2023/04/21/simons-assist-to-germany-betting-online-wagering-websites-simons-online-gambling-enterprise-gaming-blog/">Slot Online</a> wrote on 22 April 2023<br>Hey there! I know this is kinda off topic but I was wondering <br>
which blog platform are you using for this site? I'm getting fed up of Wordpress because I've had problems <br>
with hackers and I'm looking at options for another platform.</p><p>

I would be fantastic if you could point <br>
me in the direction of a good platform.<br><a href="https://mental-reverb.com/blog.php?c=99">reply</a></p></div><div><p><a rel="ugc" href="https://www.reverbnation.com/artist/miokaholistischemassagetherapie">More information</a> wrote on 22 April 2023<br>Awesome blog! Do you have any suggestions for aspiring writers?<br>
I'm hoping to start my own blog soon but I'm a little lost on everything.<br>
Would you recommend starting with a free platform like <br>
Wordpress or go for a paid option? There are so many options out there that I'm totally <br>
confused .. Any recommendations? Cheers!<br><a href="https://mental-reverb.com/blog.php?c=98">reply</a></p></div><div><p><a rel="ugc" href="https://saltriverbg.com/">Salt River BLog Group for creating links</a> wrote on 20 April 2023<br>My partner and I stumbled over here from a different website and thought I might as well <br>
check things out. I like what I see so now i'm following you.</p><p>

Look forward to finding out about your web page again.<br><a href="https://mental-reverb.com/blog.php?c=97">reply</a></p></div><div><p><a rel="ugc" href="https://bit.ly/tarotparati">Tarot para Ti</a> wrote on 20 April 2023<br>¿Alguna vez te has preguntado cómo el tarot <br>
puede ayudarte a tomar decisiones más informadas en tu vida?<br>
¡Únete a mi curso gratis de tarot para aprender más!</p><p>

Tarot para Ti<br><a href="https://mental-reverb.com/blog.php?c=96">reply</a></p></div><div><p><a rel="ugc" href="https://smmsav.com/">SMM Panel</a> wrote on 10 April 2023<br>Pretty! This was an extremely wonderful article.<br>
Thank you for providing this info.<br><a href="https://mental-reverb.com/blog.php?c=94">reply</a></p></div><div><p><a rel="ugc" href="https://esteen.de/?s=Armband+Silber+925">tennis armband silber 925</a> wrote on 06 April 2023<br>Ꭺuch für das Namensarmband des Mannes ind viele <br>
kⅼeine, liebevoll gestaltete Silber Details erhältlich. Ꮃie vorgenannt, <br>
hаt Citizen Ԁiese Uhг ziemlich groß dimensioniert, was in den Abmaßen 45 mm für <br>
Ԁеn Durdhmesser und 13 mm іn ⅾer Höhe des Uhrgehäuses deutlich wirԀ.<br>
Solltе kеin Licht langеn, sоrgt der inrerne (und <br>
mit Ԁurch überschüssiger, еbenfalls аuѕ Licht erzeugter Elektrizität gespeiste) Energiespeicher dafür,<br>
ԁɑß diee Uһr eіn weiteres dreiviertel Jahrr ⅼang Idealbesetzung Uhrzeit hält.<br>
Sⲟllten Ѕie mal ⅼange Jahгe nur abends odeг nachts mit Ihгеr Solaruhr unterwegs sеin, so zu raten eіn gelegentliches <br>
Aufladen. Ɗas könnte ebenfɑlls ein Zeichen sein, dɑss das mit Euchh bislang nicht <br>
vorbeii іst! Ɗenn das іst hör auf damіt, wie die Erfahrungen gezeigt <br>
haben! Ein guter Uhrmacher օder eіne gute Uhrenabteilung <br>
unzertrennlich Kaufhaus ᴡird Ihnen immeг <br>
aucch eine oder meһrere Solaruhren imm Angebot һaben. Solaruhrdn mаchen gerade duгch ihre einfache Bediednung und unkomplizierte Handhabung νiel Freude.<br>
Markant ist die Gestaltung der Zeiger: der Stundenzeiger (ƅei zwеi Modellen in dіeser Familie in Root gefaßt) һɑt еine Schwertform, dеr Minutenzeiger hingegen іѕt schlank <br>
սnd geraɗe als Stabzeiger gestaltet, und dder Sekundenzeiger, ɗer bei zwei Modellen miit еiner rlten Spitze versehen wurⅾe, iist äußerst <br>
schmal.<br><a href="https://mental-reverb.com/blog.php?c=93">reply</a></p></div><div><p><a rel="ugc" href="https://esteen.de/produkt-kategorie/herz-ohrstecker-silber-925/">Herz Ohrringe Silber Swarovski</a> wrote on 03 April 2023<br>Bedeutsam iist ebenso dеr hohe Gehalt an Flavonoiden, ɗie bеi Blutgefäßеn unter ɑnderem abdichtende Eigenschaften Ьesitzen. Bedeutsam іst ebrnso der hohe Gehalt an Flavonoiden, ⅾіe außerdem abdichtende Eigenschaften аuf Blutgefäßе aufweisen. Nochmals hervorgehoben ѕeien wiederum ɗiе <br>
Flavonoide, die weіterhin abdichtende Eigenschaften аuf Blutgefäßе aufweisen. Wer <br>
unter Liebeskummer leidet, läuft Gefahr, ԁen neuen Partner nach Ԁem Vorbild dеs Eⲭ <br>
auszusuchen. Viele Partner denk iich ᴡürden sіch aber еin offenes Ansprechen wünschen, <br>
սnd empfinden vorgetäuschte Lust ｅheｒ als Ehrlichkeitsdefizit.<br>
Nüsse ցelten zu Unrecht аls Kalorienbomben. So können Nüsse den Cholesterinspiegel senken ᥙnd damіt Herz-Kreislauf-Erkrankungen vorbeugen. Knacken Տіе ruhig harte Nüsse, <br>
Ԁenn sie sind gut zum Herz: Menschen, ⅾie <br>
mehrmas prօ Woche Nüsse essen, erleiden seltener еinen Herzinfarkt odｅr plötzlichen Herztod.</p><p>

Und ᥙnd außerdem, daѕ die 58-Jährige ᴡieder <br>
ruhiger schlafen lässt: Ɗie magische 58 hаt siｅ fast һinter siｃh und nächste Woche feiert siｅ iheen 59.</p><p>

Geburtstag. Dаs in der Walnuss reichlich vorhandene Toocopherol verstärkt ⅾie positiven Effekte ɑuf die Herzgesundheit,<br>
denn es ցibt wichtig für ɗie Abwehr von freien Radikalen, schützt ѵoг Ablagerungen in den Blutgefäßen und verbessert diе <br>
Fließeigenschaften ɗes Blutes.<br><a href="https://mental-reverb.com/blog.php?c=92">reply</a></p></div><div><p><a rel="ugc" href="http://b3.zcubes.com/v.aspx?mid=10883854">More information</a> wrote on 02 April 2023<br>Hi there, I discovered your site by the use of Google whilst <br>
looking for a comparable topic, your website came up, it seems great.<br>
I have bookmarked it in my google bookmarks.</p><p>

Hello there, simply was alert to your weblog through Google,<br>
and found that it is really informative. I am gonna be careful for <br>
brussels. I'll be grateful if you happen to proceed <br>
this in future. Numerous other folks will probably be benefited out of your writing.<br>
Cheers!<br><a href="https://mental-reverb.com/blog.php?c=90">reply</a></p></div><div><p><a rel="ugc" href="https://marketplace.visualstudio.com/publishers/safehavenbh">Visit here</a> wrote on 02 April 2023<br>Today, I went to the beach with my children. I found a <br>
sea shell and gave it to my 4 year old daughter and said "You can hear the ocean if you put this to your ear." She put the shell to <br>
her ear and screamed. There was a hermit crab inside and it pinched her ear.<br>
She never wants to go back! LoL I know this is totally off topic but I had to tell someone!<br><a href="https://mental-reverb.com/blog.php?c=89">reply</a></p></div><div><p><a rel="ugc" href="https://hizlicasino.net/">hızlıcasino</a> wrote on 30 March 2023<br>Thankfulness to my father who informed me on the topic of this weblog, this webpage is really <br>
awesome.<br><a href="https://mental-reverb.com/blog.php?c=87">reply</a></p></div><div><p><a rel="ugc" href="https://linkpop.com/sga508_slot">sga 508</a> wrote on 29 March 2023<br>Everyone loves what you guys are usually up too.<br>
This kind of clever work and reporting! Keep up the terrific works <br>
guys I've incorporated you guys to  blogroll.<br><a href="https://mental-reverb.com/blog.php?c=86">reply</a></p></div><div><p><a rel="ugc" href="https://thegadgetflow.com/user/k9sfpyb916/">Source URL</a> wrote on 29 March 2023<br>Thank you for the good writeup. It if truth be told was a enjoyment account it.<br>
Glance complicated to far introduced agreeable from you!<br>
However, how can we communicate?<br><a href="https://mental-reverb.com/blog.php?c=85">reply</a></p></div><div><p><a rel="ugc" href="https://taxcarrot21.werite.net/post/2023/03/21/The-Convenience-of-Baggage-Storage-Providers">Source URL</a> wrote on 23 March 2023<br>I used to be able to find good info from your blog articles.<br><a href="https://mental-reverb.com/blog.php?c=80">reply</a></p></div><div><p><a rel="ugc" href="https://portingnews.com/">Latest News</a> wrote on 21 March 2023<br>Greetings! This is my 1st comment here so I just wanted to give a <br>
quick shout out and tell you I really enjoy reading your posts.<br>
Can you recommend any other blogs/websites/forums that cover the <br>
same subjects? Appreciate it!<br><a href="https://mental-reverb.com/blog.php?c=78">reply</a></p></div><div><p><a rel="ugc" href="https://just-kill.ws/">just kill cc</a> wrote on 19 March 2023<br>Aw, thіs was an extremely ցood post. Spending some timе and actual effort tο create ɑ geat article… bᥙt what cɑn І sаy… I procrastinate ɑ lot and never manage <br>
to get anytһing done.<br><a href="https://mental-reverb.com/blog.php?c=77">reply</a></p></div><div><p><a rel="ugc" href="https://cialismars.com/">slot online gacor</a> wrote on 13 January 2023<br>I'm extremely inspired together with your writing abilities and also with the format for your weblog.<br>
Is that this a paid theme or did you modify it yourself?<br>
Anyway keep up the nice high quality writing, it's rare to peer a great weblog like <br>
this one nowadays..<br><a href="https://mental-reverb.com/blog.php?c=67">reply</a></p></div><div><p><a rel="ugc" href="https://motolviv.com.ua/">аккумулятор на мопед альфа</a> wrote on 20 December 2022<br>You're so cool! I do not believe I've truly read a single thing like this before.<br>
So wonderful to discover another person with original thoughts on this issue.<br>
Seriously.. many thanks for starting this up.</p><p>

This site is something that's needed on the internet, someone with a bit of originality!<br><a href="https://mental-reverb.com/blog.php?c=62">reply</a></p></div><div><p><a rel="ugc" href="https://www.senangpoker.website/">Asu</a> wrote on 17 November 2022<br>This is a topic that's close to my heart... Cheers!<br>
Exactly where are your contact details though?<br><a href="https://mental-reverb.com/blog.php?c=60">reply</a></p></div><div><p><a rel="ugc" href="https://xnxxphim.xyz/">phim heo xnxx</a> wrote on 14 November 2022<br>Its like you learn my thoughts! You appear to understand so much about this, <br>
such as you wrote the guide in it or something.<br>
I believe that you just can do with some % to force the message house a bit, but other than that, this is wonderful blog.</p><p>

An excellent read. I'll certainly be back.<br><a href="https://mental-reverb.com/blog.php?c=59">reply</a></p></div><div><p><a rel="ugc" href="https://play.google.com/store/apps/details?id=sleepsounds.relaxmusic.naturesounds">dohm sound machine</a> wrote on 11 November 2022<br>Ꭲһanks for tһe marvelous posting! I seriously enjoyed reading іt, you might <br>
be a great author.I will ensure that I bookmark your blog and will eventually come ƅack very soon. I <br>
want to encoᥙrɑge yourself to continue your great work, have a niϲe evening!<br><a href="https://mental-reverb.com/blog.php?c=58">reply</a></p></div><div><p><a rel="ugc" href="http://wimbi.wiki/index.php?title=User:PeggyVonStieglit">Ditme88.Com</a> wrote on 10 November 2022<br>I am not very excellent with English but I get hold this very easygoing to understand.<br><a href="https://mental-reverb.com/blog.php?c=57">reply</a></p></div><div><p><a rel="ugc" href="https://bettafish.top/">betta fish for sale</a> wrote on 18 October 2022<br>If you want your betta fish to reside long and healthy lives, an aquarium tank heater is often a necessity to be sure the temperature will consistently stay within the safe range.<br><a href="https://mental-reverb.com/blog.php?c=53">reply</a></p></div><div><p><a rel="ugc" href="http://www.ducktv.net/__media__/js/netsoltrademark.php?d=ufabet889.com">ufabet889</a> wrote on 14 October 2022<br>I believe this is among the most important information for <br>
me. And i'm glad reading your article. However wanna statemnt on some common things,<br>
The website style is great, the articles is in point <br>
of fact excellent : D. Excellent task, cheers<br><a href="https://mental-reverb.com/blog.php?c=51">reply</a></p></div><div><p><a rel="ugc" href="https://mhamidexcursionberber.com/tour/3-days-departure-from-marrakech-to-desert-merzouga/">Marrakech to Merzouga</a> wrote on 02 October 2022<br>Write more, thats all I have to say. Literally, it seems as though you relied on the video to make your point.<br>
You obviously know what youre talking about, why waste your intelligence on just posting videos to your site when you could be giving us <br>
something informative to read?<br><a href="https://mental-reverb.com/blog.php?c=48">reply</a></p></div><div><p><a rel="ugc" href="https://www.artistsconnectivity.com/profile/slotsenang77-situs-slot-pulsa-5000-paling-gampang-menang-paling-murah/profile">slot pulsa indosat</a> wrote on 16 September 2022<br>Excellent beat ! I would like to apprentice even as you amend your website, how could i subscribe <br>
for a blog website? The account helped me a appropriate deal.<br>
I had been a little bit acquainted of this your broadcast provided vivid clear concept<br><a href="https://mental-reverb.com/blog.php?c=47">reply</a></p></div><div><p><a rel="ugc" href="https://reallivesocial.com/story13249026/dewapoker-daftar-judi-poker-domino-dan-slot-machine-online-gacor-popular-hari-ini">situs dewa poker</a> wrote on 12 September 2022<br>Hello to all, for the reason that I am really keen of reading this <br>
webpage's post to be updated on a regular basis.<br>
It carries fastidious stuff.<br><a href="https://mental-reverb.com/blog.php?c=46">reply</a></p></div><div><p><a rel="ugc" href="https://www.selaluwd.top/">anjing</a> wrote on 05 September 2022<br>Great ? I should certainly pronounce, impressed with your web site.<br>
I had no trouble navigating through all the tabs and related information ended up being truly simple to do to <br>
access. I recently found what I hoped for before you know it in the least.<br>
Reasonably unusual. Is likely to appreciate it for those who add forums or something, website theme .<br>
a tones way for your client to communicate. Nice task.<br><a href="https://mental-reverb.com/blog.php?c=45">reply</a></p></div><div><p><a rel="ugc" href="https://dumpshop.cc/">dumps with pin</a> wrote on 05 September 2022<br>Inspiring story there. What occurred after? Take care!<br><a href="https://mental-reverb.com/blog.php?c=44">reply</a></p></div><div><p><a rel="ugc" href="https://www.indianterminal.com/forum/redirect-to/?redirect=https://sipetra.id/">https://sipetra.id</a> wrote on 01 September 2022<br>After looking at a few of the blog articles on your web page, I seriously appreciate your way of writing a blog.<br>
I bookmarked it to my bookmark website list and will be checking <br>
back in the near future. Please visit my web site <br>
as well and tell me how you feel.<br><a href="https://mental-reverb.com/blog.php?c=43">reply</a></p></div><div><p><a rel="ugc" href="http://199.188.201.226/senangpoker/">beha bolong</a> wrote on 27 August 2022<br>Wow! This could be one particular of the most useful blogs We've ever arrive across on this subject.<br>
Actually Magnificent. I'm also an expert in this topic therefore I can understand your <br>
hard work.<br><a href="https://mental-reverb.com/blog.php?c=42">reply</a></p></div><div><p><a rel="ugc" href="http://southlandloghomes.info/__media__/js/netsoltrademark.php?d=oggicripto.it%2Fbinance-sceglie-triplea-come-gateway-di-pagamento-globale-per-le-criptovalute%2F">oggi cripto</a> wrote on 13 July 2022<br>OggiⲤrypto è un bellissimo sito per aggiornarsi sulla nicchia delle cripto valute.<br>
Se anche tu vuoi imparare di più su crіptovaluta governo cinese <br>
viita ѕu oggi cripto<br><a href="https://mental-reverb.com/blog.php?c=38">reply</a></p></div><div><p><a rel="ugc" href="http://punch21.s60.xrea.com/cgi-bin/bbs/apeboard_plus.cgi?action=register">bp77 daftar</a> wrote on 05 July 2022<br>Hey there! I've been following your weblog for <br>
a while now and finally got the bravery to go ahead and <br>
give you a shout out from  Austin Texas! Just wanted to mention keep <br>
up the excellent job!<br><a href="https://mental-reverb.com/blog.php?c=37">reply</a></p></div><div><p><a rel="ugc" href="https://sga508slot.vzy.io/">sga508</a> wrote on 10 November 2023<br>Amazing! This blog looks exactly like my old one!<br>
It's on a totally different topic but it has pretty much the same layout and design. Wonderful choice of colors!<br><a href="https://mental-reverb.com/blog.php?c=372">reply</a></p></div><div><p><a rel="ugc" href="https://slotgacor.sga508maxwin.repl.co/">sga508</a> wrote on 20 September 2023<br>Howdy! Someone in my Myspace group shared this website with us so I <br>
came to take a look. I'm definitely enjoying the information. I'm <br>
book-marking and will be tweeting this to my followers!<br>
Exceptional blog and wonderful design.<br><a href="https://mental-reverb.com/blog.php?c=329">reply</a></p></div><div><p><a rel="ugc" href="https://louiszhqv51841.ampedpages.com/Argumen-Dibalik-Tenarnya-Permainan-Slot-Online-43573368">sga508</a> wrote on 15 January 2023<br>You're so cool! I do not suppose I have read through a single thing like this before.<br>
So great to find another person with some unique thoughts on this subject.</p><p>

Seriously.. thanks for starting this up. This website <br>
is something that is required on the web, someone <br>
with a little originality!<br><a href="https://mental-reverb.com/blog.php?c=68">reply</a></p></div><div><p><a rel="ugc" href="https://coba777.mypagecloud.com/">coba777</a> wrote on 26 June 2024<br>Hello, Neat post. There is a problem with your <br>
web site in internet explorer, may test this? <br>
IE still is the marketplace chief and a big component to other <br>
folks will omit your magnificent writing <br>
due to this problem.<br><a href="https://mental-reverb.com/blog.php?c=629">reply</a></p></div><div><p><a rel="ugc" href="https://linkpop.com/sga508_slot">sga508</a> wrote on 15 July 2023<br>Outstanding post but I was wanting to know if you could write a <br>
litte more on this subject? I'd be very grateful if you could elaborate a little <br>
bit more. Thanks!<br><a href="https://mental-reverb.com/blog.php?c=229">reply</a></p></div><div><p><a rel="ugc" href="https://sga508resmi.vzy.io/">sga508</a> wrote on 12 December 2023<br>Hi, I do think this is an excellent blog.<br>
I stumbledupon it ;) I am going to revisit once again since <br>
I saved as a favorite it. Money and freedom <br>
is the best way to change, may you be rich and continue to help others.<br><a href="https://mental-reverb.com/blog.php?c=387">reply</a></p></div><div><p><a rel="ugc" href="https://archerfrag18529.tinyblogging.com/slot-gacor-solusi-memperoleh-uang-dengan-praktis-dan-gampang-63244031">sga508</a> wrote on 03 July 2023<br>Nice response in return of this matter with real arguments and telling all concerning <br>
that.<br><a href="https://mental-reverb.com/blog.php?c=206">reply</a></p></div><div><p><a rel="ugc" href="https://linklist.bio/sga508">sga508 login</a> wrote on 22 June 2023<br>I blog often and I truly thank you for your content.<br>
This article has really peaked my interest.<br>
I will bookmark your site and keep checking for new information about once a week.<br>
I subscribed to your Feed too.<br><a href="https://mental-reverb.com/blog.php?c=181">reply</a></p></div><div><p><a rel="ugc" href="https://sleek.bio/sga508">sga508</a> wrote on 11 November 2023<br>Hey! Would you mind if I share your blog with my twitter group?<br>
There's a lot of people that I think would really enjoy your content.<br>
Please let me know. Thank you<br><a href="https://mental-reverb.com/blog.php?c=373">reply</a></p></div><div><p><a rel="ugc" href="https://bit.ly/m/sga508_slot">sga508</a> wrote on 21 October 2023<br>Hi there, i read your blog from time to time and i own a similar one and i was <br>
just curious if you get a lot of spam responses? If so how do you stop <br>
it, any plugin or anything you can suggest? I get so much lately it's driving me crazy so any assistance is very much appreciated.<br><a href="https://mental-reverb.com/blog.php?c=351">reply</a></p></div><div><p><a rel="ugc" href="https://elliotdmvd96307.blogofoto.com/49665484/layanan-slot-online-dengan-bermacam-kemudahan-fitur-terkini-bagi-anda">sga508</a> wrote on 14 May 2023<br>Hello, i believe that i noticed you visited my site thus i got here to <br>
go back the want?.I am attempting to to find issues <br>
to enhance my site!I suppose its adequate to use a few of your concepts!!<br><a href="https://mental-reverb.com/blog.php?c=108">reply</a></p></div><div><p><a rel="ugc" href="https://elijah0r64sdn3.blogolenta.com/profile">slot ada777</a> wrote on 11 January 2023<br>I think this is among the most important info for me.<br>
And i am glad reading your article. But should remark on some general things, <br>
The site style is great, the articles is really great : D. Good job, cheers<br><a href="https://mental-reverb.com/blog.php?c=66">reply</a></p></div><div><p><a rel="ugc" href="https://www.gatewayfamilyservices.org/profile/rtp-live-pragmatic-deposit-25000/profile">rtp live slot agus bet</a> wrote on 28 June 2022<br>I think this is one of the such a lot significant info for me.<br>
And i am satisfied reading your article. But should statement on some <br>
normal things, The site taste is perfect, the articles is in reality great : D.<br>
Just right activity, cheers<br><a href="https://mental-reverb.com/blog.php?c=36">reply</a></p></div><div><p><a rel="ugc" href="https://flintprint.by/user/tmdmprag9526324hr">pragmatic slot</a> wrote on 27 June 2022<br>Pretty great post. I just stumbled upon your weblog and wanted to mention that I have really enjoyed surfing around your <br>
blog posts. After all I'll be subscribing for your feed and I'm hoping you write again soon!<br><a href="https://mental-reverb.com/blog.php?c=35">reply</a></p></div><div><p>james alot wrote on 15 September 2023<br>The article looks magnificent, but it would be beneficial if you can share more about the suchlike subjects in the future. Keep posting.	&lt;a href="https://aadoo.in/cb-background-hd/"&gt;Best CB Background HD&lt;/a&gt;</p><p>
<a href="https://mental-reverb.com/blog.php?c=319">reply</a></p></div><div><p><a rel="ugc" href="https://dobryakschool.ru/user/tmpbnprofileetoiledunordorg3736138vb">poker</a> wrote on 27 June 2022<br>hi!,I like your writing very much! share we keep in touch extra <br>
about your article on AOL? I require a specialist in this space to unravel my problem.<br>
May be that's you! Looking forward to peer you.<br><a href="https://mental-reverb.com/blog.php?c=34">reply</a></p></div><div><p><a rel="ugc" href="https://file-academy.ir/product/%D8%B3%D9%88%D8%A7%D9%84%D8%A7%D8%AA-%D8%A7%D8%B3%D8%AA%D8%AE%D8%AF%D8%A7%D9%85%DB%8C-%D8%AF%D8%A8%DB%8C%D8%B1-%D8%B4%DB%8C%D9%85%DB%8C-%D8%A2%D9%85%D9%88%D8%B2%D8%B4-%D9%88-%D9%BE%D8%B1%D9%88%D8%B1/">میوه خشک کن</a> wrote on 17 June 2022<br>Hi there, I discovered your blog via Google even as <br>
looking for a comparable matter, your website came up, it seems to be <br>
good. I have bookmarked it in my google bookmarks.</p><p>


Hi there, simply become alert to your weblog through Google, and found that it's really informative.<br>
I'm gonna watch out for brussels. I will appreciate in the event <br>
you continue this in future. A lot of folks will likely be benefited out of your writing.<br>
Cheers!<br><a href="https://mental-reverb.com/blog.php?c=33">reply</a></p></div><div><p><a rel="ugc" href="https://dastgahkhoshkon.com/vegetable-dryer/">سبزی خشک کن</a> wrote on 17 June 2022<br>This is my first time visit at here and i <br>
am truly pleassant to read all at single place.<br><a href="https://mental-reverb.com/blog.php?c=32">reply</a></p></div><div><p><a rel="ugc" href="https://in.pinterest.com/sgaserver/">sga508</a> wrote on 09 April 2024<br>These are actually wonderful ideas in regarding blogging.</p><p>

You have touched some nice points here. Any way keep up wrinting.<br><a href="https://mental-reverb.com/blog.php?c=570">reply</a></p></div><div><p><a rel="ugc" href="https://www.sbnation.com/users/sga508_slotgacor">sga508</a> wrote on 08 January 2023<br>Thank you for another informative website. The place else <br>
could I get that type of info written in such a perfect method?<br>
I've a mission that I am simply now running on, and I've been at the look out for such information.<br><a href="https://mental-reverb.com/blog.php?c=65">reply</a></p></div><div><p><a rel="ugc" href="https://linktr.ee/ayosga508">sga508</a> wrote on 22 December 2023<br>of course like your web-site but you have to take <br>
a look at the spelling on quite a few of your posts.<br>
Several of them are rife with spelling issues and I find it very troublesome to tell <br>
the reality however I will surely come again again.<br><a href="https://mental-reverb.com/blog.php?c=486">reply</a></p></div><div><p><a rel="ugc" href="https://idolink.com/slotsga508">sga508</a> wrote on 12 November 2023<br>Thanks  for some other informative blog. Where else may just I get that type of information written in such an ideal means?<br>
I've a project that I'm simply now running on, and I've been on the look out for such information.<br><a href="https://mental-reverb.com/blog.php?c=374">reply</a></p></div><div><p><a rel="ugc" href="https://link.gallery/sga508">sga508</a> wrote on 21 September 2023<br>I could not refrain from commenting. Perfectly written!<br><a href="https://mental-reverb.com/blog.php?c=330">reply</a></p></div><div><p><a rel="ugc" href="https://doodleordie.com/profile/slotsga508">slot gacor gampang menang</a> wrote on 27 March 2023<br>This is very interesting, You're a very skilled blogger.<br>
I have joined your feed and look forward to seeking more of your magnificent post.<br>
Also, I've shared your site in my social networks!<br><a href="https://mental-reverb.com/blog.php?c=83">reply</a></p></div><div><p><a rel="ugc" href="https://lit.link/ceria777">link ceria777</a> wrote on 25 December 2022<br>Thank you, I've recently been looking for information about this topic for <br>
ages and yours is the greatest I've discovered <br>
so far. But, what about the conclusion? Are you certain concerning <br>
the supply?<br><a href="https://mental-reverb.com/blog.php?c=63">reply</a></p></div><div><p><a rel="ugc" href="https://jos777mpo4dslot2022.blogspot.com/">jos777</a> wrote on 02 November 2022<br>Hi are using Wordpress for your blog platform?<br>
I'm new to the blog world but I'm trying to get started and set up my <br>
own. Do you need any coding knowledge to make your own blog?<br>
Any help would be really appreciated!<br><a href="https://mental-reverb.com/blog.php?c=56">reply</a></p></div><div><p><a rel="ugc" href="https://rebrand.ly/g22thb2">situs slot gacor</a> wrote on 26 October 2022<br>Definitely believe that which you said. Your favorite reason appeared to be on the web the easiest thing <br>
to be aware of. I say to you, I definitely get annoyed while people think about <br>
worries that they just do not know about.<br>
You managed to hit the nail upon the top and also defined out the whole thing without having <br>
side effect , people could take a signal.</p><p>

Will likely be back to get more. Thanks<br><a href="https://mental-reverb.com/blog.php?c=55">reply</a></p></div><div><p><a rel="ugc" href="https://kameronyhon39639.wikicommunications.com/3292040/ciri_ciri_situs_judi_online_slot_gacor_terbaik_gampang_jackpot">event parlay</a> wrote on 16 October 2022<br>Terrific work! This is the type of info that should be shared across the net.<br>
Disgrace on Google for no longer positioning this post upper!</p><p>

Come on over and discuss with my web site .</p><p>

Thank you =)<br><a href="https://mental-reverb.com/blog.php?c=52">reply</a></p></div><div><p><a rel="ugc" href="https://kozmetrik.com/aloe-vera-sac-maskesi/">bu siteye de bakın</a> wrote on 10 June 2022<br>Pretty great post. I jᥙst stumbled սpon your webⅼog and wished <br>
to say that I've гeally loved browsіng your Ƅlog posts.<br>
In ɑny case I ѡill be subscribing for үour rss feed and <br>
I hoρe you write again very soon!<br><a href="https://mental-reverb.com/blog.php?c=31">reply</a></p></div><div><p><a rel="ugc" href="https://www.myvidster.com/profile/msj2152151814mk">situs casino online</a> wrote on 08 June 2022<br>Very good post. I definitely appreciate this site.<br>
Continue the good work!<br><a href="https://mental-reverb.com/blog.php?c=30">reply</a></p></div><div><p><a rel="ugc" href="https://descubre.beqbe.com/p/tmdmj215linux2272437xc">https://linux-index.org/</a> wrote on 07 June 2022<br>If some one wants expert view concerning blogging afterward i propose him/her <br>
to go to see this webpage, Keep up the fastidious job.<br><a href="https://mental-reverb.com/blog.php?c=29">reply</a></p></div><div><p><a rel="ugc" href="https://patinajeartistico.es/oldforum/index.php?action=profile;area=forumprofile;u=851572">agen slot</a> wrote on 07 June 2022<br>I am extremely impressed with your writing skills as well as with the layout on your weblog.<br>
Is this a paid theme or did you customize it yourself?<br>
Anyway keep up the excellent quality writing, it's rare to see a nice blog like this one <br>
nowadays.<br><a href="https://mental-reverb.com/blog.php?c=28">reply</a></p></div><div><p><a rel="ugc" href="https://jeremiah5d08gqa8.bloggazza.com/profile">ads508</a> wrote on 18 January 2023<br>Howdy would you mind letting me know which web host you're using?</p><p>

I've loaded your blog in 3 completely different browsers and I must say this blog loads a lot quicker then most.<br>
Can you suggest a good web hosting provider at a honest price?<br>
Thank you, I appreciate it!<br><a href="https://mental-reverb.com/blog.php?c=70">reply</a></p></div><div><p><a rel="ugc" href="https://nolan9n41ksz8.slypage.com/profile">ads508</a> wrote on 07 October 2023<br>I enjoy, cause I discovered exactly what I <br>
used to be taking a look for. You have ended <br>
my four day long hunt! God Bless you man. Have <br>
a great day. Bye<br><a href="https://mental-reverb.com/blog.php?c=340">reply</a></p></div><div><p><a rel="ugc" href="https://parker0j18cio3.madmouseblog.com/profile">ceria777</a> wrote on 28 September 2023<br>Normally I do not read post on blogs, but I would like to say that this write-up very pressured <br>
me to try and do it! Your writing style has been amazed me.</p><p>

Thank you, quite nice article.<br><a href="https://mental-reverb.com/blog.php?c=333">reply</a></p></div><div><p><a rel="ugc" href="https://www.sbnation.com/users/ads508bet">ads508</a> wrote on 09 July 2023<br>Howdy! I'm at work surfing around your blog from <br>
my new iphone! Just wanted to say I love reading through your blog and look forward to all <br>
your posts! Keep up the great work!<br><a href="https://mental-reverb.com/blog.php?c=216">reply</a></p></div><div><p><a rel="ugc" href="https://ads508gacor.weebly.com/">ads508</a> wrote on 07 July 2023<br>You can certainly see your enthusiasm in the work you write.</p><p>

The sector hopes for more passionate writers like you who aren't afraid to say how they believe.<br>
Always go after your heart.<br><a href="https://mental-reverb.com/blog.php?c=212">reply</a></p></div><div><p><a rel="ugc" href="https://leo2q41jqw6.ouyawiki.com/user">ads508</a> wrote on 04 December 2023<br>It's appropriate time to make some plans for the future and it is time to be happy.<br>
I have read this post and if I could I wish to suggest you some interesting things or tips.<br>
Perhaps you could write next articles referring to this <br>
article. I wish to read even more things about it!<br><a href="https://mental-reverb.com/blog.php?c=382">reply</a></p></div><div><p><a rel="ugc" href="https://zachary1n20fls4.verybigblog.com/profile">ads508</a> wrote on 10 November 2023<br>Amazing! Its in fact remarkable paragraph, I have got much clear idea about from this <br>
piece of writing.<br><a href="https://mental-reverb.com/blog.php?c=371">reply</a></p></div><div><p><a rel="ugc" href="https://lynk.id/ads508_">ads508 link alternatif</a> wrote on 02 July 2023<br>Ahaa, its fastidious dialogue about this piece of <br>
writing at this place at this webpage, I have read all that, so now me also commenting here.<br><a href="https://mental-reverb.com/blog.php?c=205">reply</a></p></div><div><p><a rel="ugc" href="https://landenwent63963.blogproducer.com/24361961/bocoran-slot-paling-seru-dan-menyenangkan">ads508</a> wrote on 24 June 2023<br>Outstanding quest there. What occurred after?<br>
Good luck!<br><a href="https://mental-reverb.com/blog.php?c=184">reply</a></p></div><div><p><a rel="ugc" href="https://ads508.nicepage.io/">slot online</a> wrote on 19 June 2023<br>I read this post completely concerning the resemblance of most up-to-date and <br>
preceding technologies, it's awesome article.<br><a href="https://mental-reverb.com/blog.php?c=177">reply</a></p></div><div><p><a rel="ugc" href="https://about.me/ads508pro">ads508</a> wrote on 18 June 2023<br>Hi there, just became aware of your blog through Google, and found that it is <br>
really informative. I'm gonna watch out for brussels. I will appreciate if you continue this in future.<br>
Many people will be benefited from your writing. Cheers!<br><a href="https://mental-reverb.com/blog.php?c=175">reply</a></p></div><div><p><a rel="ugc" href="https://linklist.bio/ads508">ads508</a> wrote on 29 April 2023<br>bookmarked!!, I really like your site!<br><a href="https://mental-reverb.com/blog.php?c=104">reply</a></p></div><div><p><a rel="ugc" href="https://owen4f08dkr4.bloggip.com/profile">site</a> wrote on 03 April 2023<br>Your style is very unique in comparison to other folks I <br>
have read stuff from. Thanks for posting when you have the opportunity, Guess I'll <br>
just book mark this web site.<br><a href="https://mental-reverb.com/blog.php?c=91">reply</a></p></div><div><p><a rel="ugc" href="https://ads508gacor.com/">ads508</a> wrote on 30 March 2023<br>Its like you read my mind! You appear to know so <br>
much about this, like you wrote the book in it or something.<br>
I think that you could do with a few pics to drive the message home <br>
a little bit, but other than that, this is excellent <br>
blog. An excellent read. I will certainly be back.<br><a href="https://mental-reverb.com/blog.php?c=88">reply</a></p></div><div><p><a rel="ugc" href="https://mirror.xyz/0x40a6eF7d1314CAFfF6145DBf2eBF81600d35e232/J0-wb44IQR4URUMbcTzG5aS6BvxgRs058QjPtSSkXnI">ads508</a> wrote on 28 March 2023<br>Hello! This post could not be written any better! Reading this post reminds me of my old room mate!<br>
He always kept talking about this. I will forward this page to him.</p><p>

Fairly certain he will have a good read. Thanks for sharing!<br><a href="https://mental-reverb.com/blog.php?c=84">reply</a></p></div><div><p><a rel="ugc" href="https://aiden9q52nvc8.homewikia.com/user">ads508</a> wrote on 26 March 2023<br>Its like you read my mind! You seem to know so much about this, like <br>
you wrote the book in it or something. I think that you can do with a few pics to drive the message home a little bit,<br>
but other than that, this is wonderful blog. An excellent read.<br>
I will definitely be back.<br><a href="https://mental-reverb.com/blog.php?c=82">reply</a></p></div><div><p><a rel="ugc" href="https://jason6f19grb9.wikigop.com/user">ads508 slot</a> wrote on 22 March 2023<br>There is definately a lot to know about this issue. I really like all <br>
the points you've made.<br><a href="https://mental-reverb.com/blog.php?c=79">reply</a></p></div><div><p><a rel="ugc" href="https://carter3u63oua8.buyoutblog.com/profile">GOO777</a> wrote on 07 January 2023<br>Does your blog have a contact page? I'm having trouble locating it but, I'd like to shoot you an email.</p><p>

I've got some creative ideas for your blog you might be interested in hearing.</p><p>

Either way, great site and I look forward to seeing <br>
it grow over time.<br><a href="https://mental-reverb.com/blog.php?c=64">reply</a></p></div><div><p><a rel="ugc" href="https://jordan1o40gmr4.blogtov.com/profile">rupiahqq</a> wrote on 26 November 2022<br>It's going to be finish of mine day, but before end I am <br>
reading this enormous article to increase my experience.<br><a href="https://mental-reverb.com/blog.php?c=61">reply</a></p></div><div><p><a rel="ugc" href="https://www.flowcode.com/page/agenresmijudipialadunia">sarang188</a> wrote on 22 October 2022<br>Hi there! Someone in my Myspace group shared this site with us <br>
so I came to give it a look. I'm definitely loving the information. I'm bookmarking and will <br>
be tweeting this to my followers! Great blog and outstanding design.<br><a href="https://mental-reverb.com/blog.php?c=54">reply</a></p></div><div><p><a rel="ugc" href="https://lu.ma/sarang188_parlay">sarang188</a> wrote on 12 March 2023<br>Hi, I do think this is an excellent site. I stumbledupon it ;) I may come back yet again since I bookmarked it.<br>
Money and freedom is the best way to change, may you be rich and continue to guide others.<br><a href="https://mental-reverb.com/blog.php?c=74">reply</a></p></div><div><p><a rel="ugc" href="https://sarang188.info/">sarang188</a> wrote on 15 May 2023<br>My brother suggested I might like this web site. He was entirely right.<br>
This post actually made my day. You cann't imagine just how much time I <br>
had spent for this info! Thanks!<br><a href="https://mental-reverb.com/blog.php?c=109">reply</a></p></div><div><p><a rel="ugc" href="https://heylink.me/sarang188vip">sarang188</a> wrote on 10 May 2023<br>I simply could not depart your web site prior to suggesting that I actually enjoyed <br>
the standard information a person provide on your visitors?<br>
Is going to be again incessantly in order to <br>
investigate cross-check new posts<br><a href="https://mental-reverb.com/blog.php?c=105">reply</a></p></div><div><p><a rel="ugc" href="https://ssarang188.com/">daftar bola88|sbobet online</a> wrote on 10 October 2022<br>When I initially commented I clicked the "Notify me when new comments are added" checkbox and now each time <br>
a comment is added I get three emails with the same comment.<br>
Is there any way you can remove people from that service?</p><p>

Appreciate it!<br><a href="https://mental-reverb.com/blog.php?c=50">reply</a></p></div><div><p><a rel="ugc" href="https://www.stall-bookmarks.win/8-effective-slot77-elevator-pitches">slot online</a> wrote on 07 June 2022<br>I needed to thank you for this good read!! I <br>
definitely enjoyed every bit of it. I have you saved as a favorite to look at new stuff you post?<br><a href="https://mental-reverb.com/blog.php?c=27">reply</a></p></div><div><p><a rel="ugc" href="https://chitaem-zhurnal.ru/user/tmpbnprofileuniversalsimorg4664754ti">bandar poker qq</a> wrote on 07 June 2022<br>Wonderful beat ! I wish to apprentice while you amend your website,<br>
how could i subscribe for a blog site? The account helped me a acceptable deal.<br>
I were tiny bit acquainted of this your broadcast offered bright transparent concept.<br><a href="https://mental-reverb.com/blog.php?c=26">reply</a></p></div><div><p><a rel="ugc" href="https://zulu-wiki.win/index.php/30_Inspirational_Quotes_About_judi_domino">domino qq</a> wrote on 06 June 2022<br>Hello my loved one! I want to say that this post is amazing, nice written and come with approximately all vital infos.</p><p>

I'd like to see extra posts like this .<br><a href="https://mental-reverb.com/blog.php?c=25">reply</a></p></div><div><p><a rel="ugc" href="https://prostsmm.com/">smm services buy</a> wrote on 04 June 2022<br>It's going to be end of mine day, except before finish I am reading this impressive piece of <br>
writing to improve my know-how.<br><a href="https://mental-reverb.com/blog.php?c=24">reply</a></p></div><div><p><a rel="ugc" href="https://sites.google.com/view/mcafeecomactivate-redeemkey/">mcafee com activate</a> wrote on 28 April 2022<br>I do ϲonsider all of the ideas ʏou һave offered on your post.<br>
Tһey aгe very convincing аnd wiⅼl cеrtainly woгk. <br>
Still, the posts ɑrｅ toο short for starters.<br>
Ꮇay you pleaѕe lengthen them a little from <br>
next time? Tһank yօu foг the post.<br><a href="https://mental-reverb.com/blog.php?c=15">reply</a></p></div><div><p><a rel="ugc" href="https://bookofnarcissism.com/scars-cut-open/introduction/">Narcissistic Abuse Recovery Tips</a> wrote on 24 April 2022<br>Sweet blog! I found it while searching on Yahoo News.<br>
Do you have any tips on how to get listed in Yahoo News?<br>
I've been trying for a while but I never seem to get there!<br>
Appreciate it<br><a href="https://mental-reverb.com/blog.php?c=14">reply</a></p></div><div><p><a rel="ugc" href="https://www.totoland79.com/%ED%8C%8C%EC%9B%8C%EB%B3%BC%EC%82%AC%EC%9D%B4%ED%8A%B8">POWERBALL</a> wrote on 22 April 2022<br>I don't know whether it's just me or if everyone else <br>
encountering issues with your website. It appears as if some <br>
of the written text in your content are running off the screen. <br>
Can somebody else please provide feedback and let me know <br>
if this is happening to them too? This might be a issue with my internet browser because I've had this happen before.<br>
Thanks<br><a href="https://mental-reverb.com/blog.php?c=13">reply</a></p></div><div><p>595955995 wrote on 15 November 2021<br>Many such cases! Sad!<br><a href="https://mental-reverb.com/blog.php?c=9">reply</a></p></div><div><p><a rel="ugc" href="https://nuddely.in/">Nuddely</a> wrote on 07 December 2023<br>This is very Amazing and Very Informative Article we get a lot of information from this article we appreciate your teamwork work keep it up and keep posting such informative articles</p><p>
<a href="https://mental-reverb.com/blog.php?c=385">reply</a></p></div></div></div>]]></description>
        </item>
    </channel>
</rss>