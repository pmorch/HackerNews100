<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Wed, 13 Mar 2024 05:00:10 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Nvtop: Linux Task Monitor for Nvidia, AMD and Intel GPUs (136 pts)]]></title>
            <link>https://github.com/Syllo/nvtop</link>
            <guid>39687132</guid>
            <pubDate>Wed, 13 Mar 2024 01:36:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Syllo/nvtop">https://github.com/Syllo/nvtop</a>, See on <a href="https://news.ycombinator.com/item?id=39687132">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">NVTOP</h2><a id="user-content-nvtop" aria-label="Permalink: NVTOP" href="#nvtop"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What is NVTOP?</h2><a id="user-content-what-is-nvtop" aria-label="Permalink: What is NVTOP?" href="#what-is-nvtop"></a></p>
<p dir="auto">NVTOP stands for Neat Videocard TOP, a (h)top like task monitor for GPUs and
accelerators. It can handle multiple GPUs and print information about them in a
htop-familiar way.</p>
<p dir="auto">Currently supported vendors are AMD (Linux amdgpu driver), Apple (limited M1 &amp;
M2 support), Huawei (Ascend), Intel (Linux i915 driver), NVIDIA (Linux
proprietary divers), Qualcomm Adreno (Linux MSM driver).</p>
<p dir="auto">Because a picture is worth a thousand words:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/Syllo/nvtop/blob/master/screenshot/NVTOP_ex1.png"><img src="https://github.com/Syllo/nvtop/raw/master/screenshot/NVTOP_ex1.png" alt="NVTOP interface"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Table of Contents</h2><a id="user-content-table-of-contents" aria-label="Permalink: Table of Contents" href="#table-of-contents"></a></p>
<ul dir="auto">
<li><a href="#nvtop-options-and-interactive-commands">NVTOP Options and Interactive Commands</a>
<ul dir="auto">
<li><a href="#interactive-setup-window">Interactive Setup Window</a></li>
<li><a href="#saving-preferences">Saving Preferences</a></li>
<li><a href="#nvtop-manual-and-command-line-options">NVTOP Manual and Command line Options</a></li>
</ul>
</li>
<li><a href="#gpu-support">GPU Support</a>
<ul dir="auto">
<li><a href="#amd">AMD</a></li>
<li><a href="#intel">Intel</a></li>
<li><a href="#nvidia">NVIDIA</a></li>
<li><a href="#adreno">Adreno</a></li>
<li><a href="#apple">Apple</a></li>
<li><a href="#ascend">Ascend</a> (only tested on 910B)</li>
</ul>
</li>
<li><a href="#build">Build</a></li>
<li><a href="#distribution-specific-installation-process">Distribution Specific Installation Process</a>
<ul dir="auto">
<li><a href="#ubuntu--debian">Ubuntu / Debian</a>
<ul dir="auto">
<li><a href="#ubuntu-impish-2110-debian-buster-stable-and-more-recent">Ubuntu Impish (21.10) / Debian buster (stable) and more recent (stable)</a></li>
</ul>
</li>
<li><a href="#fedora--red-hat--centos">Fedora / Red Hat / CentOS</a></li>
<li><a href="#opensuse">OpenSUSE</a></li>
<li><a href="#arch-linux">Arch Linux</a></li>
<li><a href="#appimage">AppImage</a></li>
<li><a href="#snap">Snap</a></li>
<li><a href="#docker">Docker</a></li>
</ul>
</li>
<li><a href="#nvtop-build">NVTOP Build</a></li>
<li><a href="#troubleshoot">Troubleshoot</a></li>
<li><a href="#license">License</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">NVTOP Options and Interactive Commands</h2><a id="user-content-nvtop-options-and-interactive-commands" aria-label="Permalink: NVTOP Options and Interactive Commands" href="#nvtop-options-and-interactive-commands"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Interactive Setup Window</h3><a id="user-content-interactive-setup-window" aria-label="Permalink: Interactive Setup Window" href="#interactive-setup-window"></a></p>
<p dir="auto">NVTOP has a builtin setup utility that provides a way to specialize the interface to your needs.
Simply press <code>F2</code> and select the options that are the best for you.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/Syllo/nvtop/blob/master/screenshot/Nvtop-config.png"><img src="https://github.com/Syllo/nvtop/raw/master/screenshot/Nvtop-config.png" alt="NVTOP Setup Window"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Saving Preferences</h3><a id="user-content-saving-preferences" aria-label="Permalink: Saving Preferences" href="#saving-preferences"></a></p>
<p dir="auto">You can save the preferences set in the setup window by pressing <code>F12</code>.
The preferences will be loaded the next time you run <code>nvtop</code>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">NVTOP Manual and Command line Options</h3><a id="user-content-nvtop-manual-and-command-line-options" aria-label="Permalink: NVTOP Manual and Command line Options" href="#nvtop-manual-and-command-line-options"></a></p>
<p dir="auto">NVTOP comes with a manpage!</p>

<p dir="auto">For quick command line arguments help</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">GPU Support</h2><a id="user-content-gpu-support" aria-label="Permalink: GPU Support" href="#gpu-support"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">AMD</h3><a id="user-content-amd" aria-label="Permalink: AMD" href="#amd"></a></p>
<p dir="auto">NVTOP supports AMD GPUs using the <code>amdgpu</code> driver through the exposed DRM and
sysfs interface.</p>
<p dir="auto">AMD introduced the fdinfo interface in kernel 5.14 (<a href="https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/tree/drivers/gpu/drm/amd/amdgpu/amdgpu_fdinfo.c?h=linux-5.14.y" rel="nofollow">browse kernel
source</a>).
Hence, you will need a kernel with a version greater or equal to 5.14 to see the
processes using AMD GPUs.</p>
<p dir="auto">Support for recent GPUs are regularly mainlined into the linux kernel, so please
use a recent-enough kernel for your GPU.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Intel</h3><a id="user-content-intel" aria-label="Permalink: Intel" href="#intel"></a></p>
<p dir="auto">NVTOP supports Intel GPUs using the <code>i915</code> linux driver.</p>
<p dir="auto">Intel introduced the fdinfo interface in kernel 5.19 (<a href="https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/tree/drivers/gpu/drm/i915/i915_drm_client.c?h=linux-5.19.y" rel="nofollow">browse kernel
source</a>).
Hence, you will need a kernel with a version greater or equal to 5.19 to see the
processes using Intel GPUs.</p>
<p dir="auto"><strong>INTEL SUPPORT STATUS</strong></p>
<ul dir="auto">
<li>Intel is working on exposing more hardware information through an <code>HWMON</code>
interface. The patches are still a work in progress: <a href="https://patchwork.freedesktop.org/series/104278/" rel="nofollow">see patch
series</a>.</li>
<li>The fdinfo interface does not expose the memory allocated by the process. The
field in the process list is therefore empty.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">NVIDIA</h3><a id="user-content-nvidia" aria-label="Permalink: NVIDIA" href="#nvidia"></a></p>
<p dir="auto">The <em>NVML library</em> does not support some of the queries for GPUs coming before the
Kepler microarchitecture. Anything starting at GeForce 600, GeForce 800M and
successor should work fine. For more information about supported GPUs please
take a look at the <a href="http://docs.nvidia.com/deploy/nvml-api/nvml-api-reference.html#nvml-api-reference" rel="nofollow">NVML documentation</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Adreno</h3><a id="user-content-adreno" aria-label="Permalink: Adreno" href="#adreno"></a></p>
<p dir="auto">NVTOP supports Adreno GPUs using the <code>msm</code> linux driver.</p>
<p dir="auto">msm introduced the fdinfo interface in kernel 6.0 (<a href="https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/tree/drivers/gpu/drm/msm/msm_drv.c?h=linux-6.0.y" rel="nofollow">browse kernel
source</a>).
Hence, you will need a kernel with a version greater or equal to 6.0 to see the
processes using Adreno GPUs.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Apple</h3><a id="user-content-apple" aria-label="Permalink: Apple" href="#apple"></a></p>
<p dir="auto">NVTOP includes some initial support for Apple using Metal. This is only supported when building for Apple, and when building for Apple only this vendor is supported.</p>
<p dir="auto"><strong>APPLE SUPPORT STATUS</strong></p>
<ul dir="auto">
<li>Apple support is still being worked on. Some bugs and limitations may apply.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Ascend</h3><a id="user-content-ascend" aria-label="Permalink: Ascend" href="#ascend"></a></p>
<p dir="auto">NVTOP supports Ascend (testing on Altas 800 (910B)) by DCMI API (version 6.0.0).</p>
<p dir="auto">Currently, the DCMI only supports limited APIs, missing PCIe generation, tx/rx throughput info, max power draw etc.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Build</h2><a id="user-content-build" aria-label="Permalink: Build" href="#build"></a></p>
<p dir="auto">Several libraries are required in order for NVTOP to display GPU info:</p>
<ul dir="auto">
<li>The <em>ncurses</em> library driving the user interface.
<ul dir="auto">
<li>This makes the screen look beautiful.</li>
</ul>
</li>
<li>For NVIDIA: the <em>NVIDIA Management Library</em> (<em>NVML</em>) which comes with the GPU driver.
<ul dir="auto">
<li>This queries the GPU for info.</li>
</ul>
</li>
<li>For AMD: the libdrm library used to query AMD GPUs through the kernel driver.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Distribution Specific Installation Process</h2><a id="user-content-distribution-specific-installation-process" aria-label="Permalink: Distribution Specific Installation Process" href="#distribution-specific-installation-process"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Ubuntu / Debian</h3><a id="user-content-ubuntu--debian" aria-label="Permalink: Ubuntu / Debian" href="#ubuntu--debian"></a></p>
<p dir="auto">If your distribution provides the snap utility, follow the <a href="#snap">snap installation process</a> to obtain an up-to-date version of <code>nvtop</code>.</p>
<p dir="auto">A standalone application is available as <a href="#appimage">AppImage</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Ubuntu Impish (21.10), Debian buster (stable) and more recent</h4><a id="user-content-ubuntu-impish-2110-debian-buster-stable-and-more-recent" aria-label="Permalink: Ubuntu Impish (21.10), Debian buster (stable) and more recent" href="#ubuntu-impish-2110-debian-buster-stable-and-more-recent"></a></p>
<ul dir="auto">
<li>

</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Ubuntu PPA</h4><a id="user-content-ubuntu-ppa" aria-label="Permalink: Ubuntu PPA" href="#ubuntu-ppa"></a></p>
<p dir="auto">A <a href="https://launchpad.net/~flexiondotorg/+archive/ubuntu/nvtop" rel="nofollow">PPA supporting Ubuntu 20.04, 22.04 and newer</a> is provided by
<a href="https://github.com/flexiondotorg">Martin Wimpress</a> that offers an up-to-date
version of <code>nvtop</code>, enabled for NVIDIA, AMD and Intel.</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo add-apt-repository ppa:flexiondotorg/nvtop
sudo apt install nvtop"><pre>sudo add-apt-repository ppa:flexiondotorg/nvtop
sudo apt install nvtop</pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Older</h4><a id="user-content-older" aria-label="Permalink: Older" href="#older"></a></p>
<ul dir="auto">
<li>
<p dir="auto">AMD and Intel Dependencies</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo apt install libdrm-dev libsystemd-dev
# Ubuntu 18.04
sudo apt install libudev-dev"><pre>sudo apt install libdrm-dev libsystemd-dev
<span><span>#</span> Ubuntu 18.04</span>
sudo apt install libudev-dev</pre></div>
</li>
<li>
<p dir="auto">NVIDIA Depenency</p>
<ul dir="auto">
<li>NVIDIA drivers (see <a href="https://help.ubuntu.com/community/BinaryDriverHowto/Nvidia" rel="nofollow">Ubuntu Wiki</a> or <a href="https://launchpad.net/~graphics-drivers/+archive/ubuntu/ppa" rel="nofollow">Ubuntu PPA</a> or <a href="https://wiki.debian.org/NvidiaGraphicsDrivers#NVIDIA_Proprietary_Driver" rel="nofollow">Debian Wiki</a>)</li>
</ul>
</li>
<li>
<p dir="auto">NVTOP Dependencies</p>
</li>
<li>
<p dir="auto">CMake, ncurses and Git</p>
</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="sudo apt install cmake libncurses5-dev libncursesw5-dev git"><pre>sudo apt install cmake libncurses5-dev libncursesw5-dev git</pre></div>
<ul dir="auto">
<li>NVTOP
<ul dir="auto">
<li>Follow the <a href="#nvtop-build">NVTOP Build</a></li>
</ul>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Fedora / Red Hat / CentOS</h3><a id="user-content-fedora--red-hat--centos" aria-label="Permalink: Fedora / Red Hat / CentOS" href="#fedora--red-hat--centos"></a></p>
<p dir="auto">A standalone application is available as <a href="#appimage">AppImage</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Fedora 36 and newer</h4><a id="user-content-fedora-36-and-newer" aria-label="Permalink: Fedora 36 and newer" href="#fedora-36-and-newer"></a></p>
<ul dir="auto">
<li>

</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Red Hat Enterprise Linux 8 and 9</h4><a id="user-content-red-hat-enterprise-linux-8-and-9" aria-label="Permalink: Red Hat Enterprise Linux 8 and 9" href="#red-hat-enterprise-linux-8-and-9"></a></p>
<ul dir="auto">
<li>
<div dir="auto" data-snippet-clipboard-copy-content="sudo dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-$(rpm -E %{rhel}).noarch.rpm
sudo dnf install nvtop"><pre>sudo dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-<span><span>$(</span>rpm -E %{rhel}<span>)</span></span>.noarch.rpm
sudo dnf install nvtop</pre></div>
</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">CentOS Stream, Rocky Linux, AlmaLinux</h4><a id="user-content-centos-stream-rocky-linux-almalinux" aria-label="Permalink: CentOS Stream, Rocky Linux, AlmaLinux" href="#centos-stream-rocky-linux-almalinux"></a></p>
<ul dir="auto">
<li>
<div dir="auto" data-snippet-clipboard-copy-content="sudo dnf install -y epel-release
sudo dnf install nvtop"><pre>sudo dnf install -y epel-release
sudo dnf install nvtop</pre></div>
</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Build process for Fedora / Red Hat / CentOS:</h4><a id="user-content-build-process-for-fedora--red-hat--centos" aria-label="Permalink: Build process for Fedora / Red Hat / CentOS:" href="#build-process-for-fedora--red-hat--centos"></a></p>
<ul dir="auto">
<li>
<p dir="auto">AMD and Intel Dependencies</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo dnf install libdrm-devel systemd-devel"><pre>sudo dnf install libdrm-devel systemd-devel</pre></div>
</li>
<li>
<p dir="auto">NVIDIA Depenency</p>
<ul dir="auto">
<li>NVIDIA drivers, <strong>CUDA required for nvml libraries</strong> (see <a href="https://rpmfusion.org/Howto/NVIDIA" rel="nofollow">RPM Fusion</a>)</li>
</ul>
</li>
<li>
<p dir="auto">NVTOP Dependencies</p>
</li>
<li>
<p dir="auto">CMake, ncurses, C++ and Git</p>
</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="sudo dnf install cmake ncurses-devel git gcc-c++"><pre>sudo dnf install cmake ncurses-devel git gcc-c++</pre></div>
<ul dir="auto">
<li>NVTOP
<ul dir="auto">
<li>Follow the <a href="#nvtop-build">NVTOP Build</a></li>
</ul>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">OpenSUSE</h3><a id="user-content-opensuse" aria-label="Permalink: OpenSUSE" href="#opensuse"></a></p>
<p dir="auto">A standalone application is available as an <a href="#appimage">AppImage</a>.</p>
<p dir="auto">Build process for OpenSUSE:</p>
<ul dir="auto">
<li>
<p dir="auto">AMD Dependecy</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo zypper install libdrm-devel"><pre>sudo zypper install libdrm-devel</pre></div>
</li>
<li>
<p dir="auto">NVIDIA Depenency</p>
<ul dir="auto">
<li>NVIDIA drivers (see <a href="https://en.opensuse.org/SDB:NVIDIA_drivers" rel="nofollow">SUSE Support Database</a>)</li>
</ul>
</li>
<li>
<p dir="auto">NVTOP Dependencies</p>
<ul dir="auto">
<li>CMake, ncurses and Git
<div dir="auto" data-snippet-clipboard-copy-content="sudo zypper install cmake ncurses-devel git"><pre>sudo zypper install cmake ncurses-devel git</pre></div>
</li>
</ul>
</li>
<li>
<p dir="auto">NVTOP</p>
<ul dir="auto">
<li>Follow the <a href="#nvtop-build">NVTOP Build</a></li>
</ul>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Arch Linux</h3><a id="user-content-arch-linux" aria-label="Permalink: Arch Linux" href="#arch-linux"></a></p>
<ul dir="auto">
<li>

</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Gentoo</h3><a id="user-content-gentoo" aria-label="Permalink: Gentoo" href="#gentoo"></a></p>
<ul dir="auto">
<li>
<div dir="auto" data-snippet-clipboard-copy-content="sudo layman -a guru &amp;&amp; sudo emerge -av nvtop"><pre>sudo layman -a guru <span>&amp;&amp;</span> sudo emerge -av nvtop</pre></div>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">AppImage</h3><a id="user-content-appimage" aria-label="Permalink: AppImage" href="#appimage"></a></p>
<p dir="auto">An AppImage is a standalone application. Just download the AppImage, make it executable and run it!</p>
<ul dir="auto">
<li>
<p dir="auto">Go to the <a href="https://github.com/Syllo/nvtop/releases/latest">release page</a> and download <code>nvtop-x86_64.AppImage</code></p>
</li>
<li>
<div dir="auto" data-snippet-clipboard-copy-content="# Go to the download location ** The path may differ on your system **
cd $HOME/Downloads
# Make the AppImage executable
chmod u+x nvtop-x86_64.AppImage
# Enjoy nvtop
./nvtop-x86_64.AppImage"><pre><span><span>#</span> Go to the download location ** The path may differ on your system **</span>
<span>cd</span> <span>$HOME</span>/Downloads
<span><span>#</span> Make the AppImage executable</span>
chmod u+x nvtop-x86_64.AppImage
<span><span>#</span> Enjoy nvtop</span>
./nvtop-x86_64.AppImage</pre></div>
</li>
</ul>
<p dir="auto">If you are curious how that works, please visit the <a href="https://appimage.org/" rel="nofollow">AppImage website</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Snap</h3><a id="user-content-snap" aria-label="Permalink: Snap" href="#snap"></a></p>
<ul dir="auto">
<li>
<div dir="auto" data-snippet-clipboard-copy-content="snap install nvtop
# Add the capability to kill processes inside nvtop
snap connect nvtop:process-control
# Add the capability to inspect GPU information (fan, PCIe, power, etc)
snap connect nvtop:hardware-observe
# AMDGPU process list support (read /proc/<pid>)
snap connect nvtop:system-observe
# Temporary workaround to get per-process GPU usage (read /proc/<pid>/fdinfo)
snap connect nvtop:kubernetes-support"><pre>snap install nvtop
<span><span>#</span> Add the capability to kill processes inside nvtop</span>
snap connect nvtop:process-control
<span><span>#</span> Add the capability to inspect GPU information (fan, PCIe, power, etc)</span>
snap connect nvtop:hardware-observe
<span><span>#</span> AMDGPU process list support (read /proc/&lt;pid&gt;)</span>
snap connect nvtop:system-observe
<span><span>#</span> Temporary workaround to get per-process GPU usage (read /proc/&lt;pid&gt;/fdinfo)</span>
snap connect nvtop:kubernetes-support</pre></div>
</li>
</ul>
<p dir="auto">Notice: The connect commands allow</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Docker</h3><a id="user-content-docker" aria-label="Permalink: Docker" href="#docker"></a></p>
<ul dir="auto">
<li>
<p dir="auto">NVIDIA drivers (same as above)</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/NVIDIA/nvidia-docker">nvidia-docker</a> (See <a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker" rel="nofollow">Container Toolkit Installation Guide</a>)</p>
</li>
<li>
<div dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/Syllo/nvtop.git &amp;&amp; cd nvtop
sudo docker build --tag nvtop .
sudo docker run -it --rm --runtime=nvidia --gpus=all --pid=host nvtop"><pre>git clone https://github.com/Syllo/nvtop.git <span>&amp;&amp;</span> <span>cd</span> nvtop
sudo docker build --tag nvtop <span>.</span>
sudo docker run -it --rm --runtime=nvidia --gpus=all --pid=host nvtop</pre></div>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">NVTOP Build</h2><a id="user-content-nvtop-build" aria-label="Permalink: NVTOP Build" href="#nvtop-build"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/Syllo/nvtop.git
mkdir -p nvtop/build &amp;&amp; cd nvtop/build
cmake .. -DNVIDIA_SUPPORT=ON -DAMDGPU_SUPPORT=ON -DINTEL_SUPPORT=ON
make

# Install globally on the system
sudo make install

# Alternatively, install without privileges at a location of your choosing
# make DESTDIR=&quot;/your/install/path&quot; install"><pre>git clone https://github.com/Syllo/nvtop.git
mkdir -p nvtop/build <span>&amp;&amp;</span> <span>cd</span> nvtop/build
cmake .. -DNVIDIA_SUPPORT=ON -DAMDGPU_SUPPORT=ON -DINTEL_SUPPORT=ON
make

<span><span>#</span> Install globally on the system</span>
sudo make install

<span><span>#</span> Alternatively, install without privileges at a location of your choosing</span>
<span><span>#</span> make DESTDIR="/your/install/path" install</span></pre></div>
<p dir="auto">If you use <strong>conda</strong> as environment manager and encounter an error while building NVTOP, try <code>conda deactivate</code> before invoking <code>cmake</code>.</p>
<p dir="auto">The build system supports multiple build types (e.g. -DCMAKE_BUILD_TYPE=RelWithDebInfo):</p>
<ul dir="auto">
<li>Release: Binary without debug info</li>
<li>RelWithDebInfo: Binary with debug info</li>
<li>Debug: Compile with warning flags and address/undefined sanitizers enabled (for development purposes)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Troubleshoot</h2><a id="user-content-troubleshoot" aria-label="Permalink: Troubleshoot" href="#troubleshoot"></a></p>
<ul dir="auto">
<li>The plot looks bad:
<ul dir="auto">
<li>Verify that you installed the wide character version of the ncurses library (libncurses<strong>w</strong>5-dev for Debian / Ubuntu), clean the build directory and restart the build process.</li>
</ul>
</li>
<li><strong>Putty</strong>: Tell putty not to lie about its capabilities (<code>$TERM</code>) by setting the field <code>Terminal-type string</code> to <code>putty</code> in the menu
<code>Connection &gt; Data &gt; Terminal Details</code>.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">NVTOP is licensed under the GPLv3 license or any later version.
You will find a copy of the license inside the COPYING file of the repository or
at the GNU website &lt;<a href="http://www.gnu.org/licenses/" rel="nofollow">www.gnu.org/licenses/</a>&gt;.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A ragtag band of internet friends became the best at forecasting world events (102 pts)]]></title>
            <link>https://www.vox.com/future-perfect/2024/2/13/24070864/samotsvety-forecasting-superforecasters-tetlock</link>
            <guid>39685894</guid>
            <pubDate>Tue, 12 Mar 2024 22:52:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.vox.com/future-perfect/2024/2/13/24070864/samotsvety-forecasting-superforecasters-tetlock">https://www.vox.com/future-perfect/2024/2/13/24070864/samotsvety-forecasting-superforecasters-tetlock</a>, See on <a href="https://news.ycombinator.com/item?id=39685894">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <p id="dDPrPk">The question before a group made up of some of the best forecasters of world events: What are the odds that <a href="https://www.vox.com/china" data-source="encore">China</a> will control at least half of Taiwan’s territory by 2030?</p>
<p id="ZezmsO">Everyone on the chat gives their answer, and in each case it’s a number. Chinmay Ingalagavi, an economics fellow at Yale, says 8 percent. Nuño Sempere, the 25-year-old Spanish independent researcher and consultant leading our session, agrees. Greg Justice, an MBA student at the University of Chicago, pegs it at 17 percent. Lisa Murillo, who holds a PhD in <a href="https://www.vox.com/neuroscience" data-source="encore">neuroscience</a>, says 15-20 percent. One member of the group, who asked not to be named in this context because they have family in China who could be targeted by the government there, posits the highest figure: 24 percent.</p>
<p id="xaGAvy">Sempere asks me for my number. Based on a quick analysis of past military clashes between the countries, I came up with 5 percent. That might not seem too far away from the others, but it feels embarrassingly low in this context. Why am I so out of step?</p>
<p id="nFqbpL">This is a meeting of Samotsvety. The name comes from a 50-year-old Soviet rock band — more on that later — but the modern Samotsvety specializes in predicting the future. And they are very, very good at it. At <a href="https://www.infer-pub.com/">Infer</a>, a major forecasting platform <a href="https://www.infer-pub.com/the-pub/rand-program-update">operated by Rand</a>, the <a href="https://capture.dropbox.com/qENgJOuZgsTPZy3c">four most accurate forecasters in the site’s history</a> are all members of Samotsvety, and there is a wide gap between them and fifth place. In fact, the gap between them and fifth place is bigger than between fifth and 10th places. They’re waaaaay out ahead.</p>
<p id="JdyadS">While Samotsvety members converse on Slack regularly, the Saturday meetings are the heart of the group, and I was sitting in to get a sense of why, exactly, the group was so good. What were these folks doing differently that made them able to see the future when the rest of us can’t?</p>
<p id="9fJdRC">I knew a bit about forecasting going into the meeting. I’ve <a href="https://www.vox.com/future-perfect/23785731/human-extinction-forecasting-superforecasters">written about it</a>; I’ve read <em>Superforecasting</em>, the bestseller by Philip Tetlock and Dan Gardner describing the research behind forecasting. The whole <a href="https://www.vox.com/future-perfect" data-source="encore">Future Perfect</a> team here at Vox <a href="https://www.vox.com/future-perfect/2024/1/1/24011179/2024-predictions-trump-politics-ohtani-oppenheimer-elections">puts together predictions</a> at the start of each year, hoping not just to lay down markers on how we think the next year will go, but to get better at forecasting in the process. </p>
<p id="Rz7hod">Part of the appeal of forecasting is not just that it seems to work, but that you don’t seem to need specialized expertise to succeed at it. The aggregated opinions of non-experts doing forecasting have <a href="https://arbresearch.com/files/comparing_forecasters.pdf">proven to be a better guide to the future</a> than the aggregated opinions of experts. One <a href="https://goodjudgment.io/docs/Goldstein-et-al-2015.pdf">frequently cited study</a> found that accurate forecasters’ predictions of geopolitical events, when aggregated using standard scientific methods, were more accurate than the forecasts of members of the US intelligence community who answered the same questions in a confidential prediction market. This was true even though the latter had access to classified intelligence.</p>
<p id="5Cxojy">But I felt a bit stuck. After years of doing my annual predictions, I didn’t sense they were improving much at all, but I wasn’t predicting enough things to tell for sure. Events kept happening that I didn’t see coming, like the <a href="https://www.vox.com/2023/10/7/23907683/israel-hamas-war-news-updates-october-2023">Gaza war</a> in recent months or the <a href="https://www.vox.com/2023/6/26/23774184/putin-wagner-group-mutiny-prigozhin">Wagner mutiny</a> a few months before that. I wanted to hang out with Samotsvety for a bit because they were the best of the best, and thus a good crew to learn from.</p>
<p id="z2FpqJ">They count among their fans Jason Matheny, now CEO of the RAND Corporation, a think tank that’s long worked on developing better predictive methods. Before he was at RAND, Matheny funded foundational work on forecasting as an official at the Intelligence Advanced Research Projects Activity (IARPA), a government organization that invests in technologies that might help the US intelligence community. “I’ve admired their work,” Matheny said of Samotsvety. “Not only their impressive accuracy, but also their commitment to scoring their own accuracy” — meaning they grade themselves so they can know when they fail and need to do better. That, he said, “is really rare institutionally.”</p>
<p id="LQfJlz">What I discovered was that Samotsvety’s record of success wasn’t because its members knew things others didn’t. The factors its members brought up that Saturday to explain their probabilities sounded like the points you’d hear at a think tank event or an academic lecture on China-Taiwan relations. The anonymous member emphasized how ideologically important capturing the island was to Xi Jinping, and how few political constraints he faces. Greg Justice countered that the CCP has depended on economic growth that a war would jeopardize. Murrillo put a higher probability on an attack because of a projection that the US will not be likely to back up Taiwan once the latter’s chip production monopoly has waned due to other <a href="https://www.theverge.com/2023/7/25/23806813/eu-chips-act-approved-semiconductor-manufacturing">nations</a> investing in <a href="https://www.nytimes.com/2023/01/16/opinion/america-biden-semiconductor-tsmc.html">fabrication plants</a>.  </p>
<p id="yJezaf">But if the factors being listed reminded me of a normal think tank discussion, the numbers being raised didn’t. Near the end of the session, I asked: If some of you think there are such strong reasons for China to capture Taiwan, why is the highest odds anyone has proposed 24 percent, meaning even the most bullish member thinks such an event is nearly 75 percent likely <em>not </em>to happen? Why does no one here think Chinese control by 2030 is more likely than not?</p>
<p id="iYrBCE">The team had an answer, and it’s an answer that goes some way toward explaining why this group has managed to get so good at predicting the future.</p>
<h3 id="aG0hVZ">The story of Samotsvety</h3>
<p id="Y9D6iK">The name Samotsvety, co-founder Misha Yagudin says, is a multifaceted pun. “It’s Russian for semi-precious stones, or more directly ‘self-lighting/coloring’ stones,” he writes in an email. “It’s a few puns on what forecasting might be: finding nuggets of good info; even if we are not diamonds, together in aggregate we are great; self-lighting is kinda about shedding light on the future.”</p>
<p id="OYAKmw">It began because he and Nuño Sempere needed a name for a Slack they started around 2020 on which they and friends could shoot the shit about forecasting. The two met at a summer fellowship at Oxford’s Future of Humanity Institute, a hotbed of the rationalist subculture where forecasting is a favored activity. Before long, they were competing together in contests like Infer and on platforms like <a href="https://www.gjopen.com/">Good Judgment Open</a>.</p>
<p id="F1eV8h">The latter site is part of the <a href="https://goodjudgment.com/">Good Judgment Project</a>, led by Penn psychologists Philip Tetlock and Barbara Mellers. Those researchers have studied the process of forecasting intensely in recent decades. One of their main findings is that <a href="https://michaelmbishop.github.io/superforecasters.pdf">forecasting ability is not evenly distributed</a>. Some people are consistently much better at it than others, and strong past performance indicates better predictions going forward. These high performers are known as “superforecasters,” a term Tetlock and Gardner would later borrow for their <a href="https://www.amazon.com/Superforecasting-Science-Prediction-Philip-Tetlock/dp/0804136718" has-subtag="true" data-cdata="{&quot;rewritten_url&quot;:&quot;https://www.amazon.com/Superforecasting-Science-Prediction-Philip-Tetlock/dp/0804136718?ascsubtag=___vx__p_23834905__m_m-placeholder__s_s-placeholder__t_w__c_c-placeholder__r_r-placeholder__d_d-placeholder&quot;,&quot;subtag_max_length&quot;:99,&quot;subtag_delim_length&quot;:3,&quot;subtag_key&quot;:&quot;ascsubtag&quot;,&quot;subtag_data&quot;:{&quot;ascsubtag&quot;:&quot;___vx__p_23834905__m_m-placeholder__s_s-placeholder__t_w__c_c-placeholder__r_r-placeholder__d_d-placeholder&quot;},&quot;encode_subtag&quot;:false}">book</a>.</p>
<p id="15FuSx">Superforecaster® is now a <a href="https://goodjudgment.com/how-to-become-a-superforecaster/">registered trademark of Good Judgment</a>, and not every member of Samotsvety has been through that exact process, although more than half of them (8 of 15) have. I won’t call the group as a whole “superforecasters” here for fear of stealing superforecaster valor. But their team’s track record is strong.</p>
<p id="rhukLG">A common measure of forecasting ability is the <a href="https://www.cultivatelabs.com/crowdsourced-forecasting-guide/what-are-relative-brier-scores-and-how-are-they-calculated">relative Brier score</a>, a number that aggregates the result of every prediction for which an outcome is now known, and then compares each forecaster to the median forecaster. A score of 0 means you’re average; a positive score means worse than average while negative means better than average. In 2021, the last full year Samotsvety participated, their score in the Infer tournament was -2.43, compared to -1.039 for the next-best team. They were more than twice as good as the nearest competition.</p>
<p id="GWIdnR">“If the point of forecasting tournaments is to figure out who you can trust,” the <a href="https://www.astralcodexten.com/p/mantic-monday-31422?s=r">writer Scott Alexander</a> once quipped. “the science has spoken, and the answer is ‘these guys.’”</p>
<p id="Qe8nRN">So, why these guys? Part of the answer is selection. Members’ stories of how they joined the Samotsvety were usually some variation of: I started forecasting, I turned out to be pretty good at it, and the group noticed me. It’s a bit like how a youth soccer prodigy might eventually find themselves on Manchester City.</p>
<p id="ZqDsLL">Molly Hickman came to forecasting by way of the government. Taking a contracting job out of college, she was assigned to IARPA, the intelligence research agency where Jason Matheny and others were running forecasting tournaments. The idea intrigued her, and when she went back to grad school for computer science, she signed up at Infer to try forecasting herself. She put together a team with her dad and some friends, and while the team as a whole didn’t do great, she did amazing. The Samotsvety group saw her scores and invited her to join.</p>
<p id="67db9S">Eli Lifland, a 2020 economics and computer science grad at UVA now <a href="https://www.elilifland.com/">attempting to forecast AI progress</a>, got his start predicting Covid-19. 2020 was in some ways a banner year for forecasting: Superforecasters were <a href="https://time.com/5848271/superforecasters-covid-19/">predicting that Covid would reach hundreds of thousands of cases</a> in February of that year, a time when government officials were still <a href="https://www.usatoday.com/story/news/health/2020/02/17/nih-disease-official-anthony-fauci-risk-of-coronavirus-in-u-s-is-minuscule-skip-mask-and-wash-hands/4787209002/">calling the risk “minuscule.”</a> Users of the forecasting platform <a href="https://www.metaculus.com/news/2020/06/02/LRT/">Metaculus outperformed a panel of epidemiologists</a> when predicting case numbers. Even in that company, Lifland did unusually well. The fast-moving nature of the pandemic made it easy to learn quickly because you could predict cases on a near-weekly basis and quickly realize what you got right or wrong. Before long, Misha and Nuño from Samotsvety came calling.</p>
<p id="rbUMv2">But “select people already good at forecasting” doesn’t explain why Samotsvety is so good. What made these forecasters good enough to win Samotsvety’s attention? What are these people, specifically, doing differently that makes their predictions better than almost everyone else’s?</p>
<h3 id="C6ZyNZ">The habits of highly effective forecasters</h3>
<p id="FN0O3w">The literature on superforecasting, from Tetlock, Mellers, and others, finds some commonalities between good predictors. One is a tendency to think in numbers. Quantitative reasoning sharpens thinking in this context. “Somewhat likely,” “pretty unlikely,” “I’d be surprised.” These kinds of phrases, on their own, convey some useful information about someone’s confidence in a prediction, but they’re impossible to compare to each other — is “pretty unlikely” more or less doubtful than “I’d be surprised”? Numbers, by contrast, are easy to compare, and they provide a means of accountability. Unsurprisingly, many great forecasters, in Samotsvety and elsewhere, have backgrounds in computer science, economics, math, and other quantitative disciplines.</p>
<p id="D1Wx0a">Hickman recalls telling her coworkers in intelligence that she was working on forecasting and being frustrated by their skeptical responses: that it’s impossible to put numbers on such things, that the true probabilities are inherently unknowable. Of course, the true probabilities aren’t known, but that isn’t the point. Even if they weren’t using numbers, her peers were “actually doing these calculations implicitly all the time,” she recalls.</p>
<p id="YtJmZj">You might not tell yourself “the odds of China invading Taiwan this year is 10 percent,” but how much time a deputy assistant Secretary of Defense spends studying, say, Taiwan’s naval strategy is probably a reflection of their concept of the underlying probability. They wouldn’t spend any time if their probability was 0.1 percent; they would be losing their mind if their probability was 90 percent. In reality, it’s somewhere in between. They’re just not making that assessment explicit or putting it in a form that makes it possible to judge their accuracy and from which they can learn in the future. Numeric predictions can be graded; they let you know when you’re wrong and how wrong you are. That’s exactly why they’re so scary to make.</p>
<p id="IOKHIY">That leads to another commonality: practice. Forecasting is a lot like any other skill — you get better with practice — so good forecasters forecast a lot, and that in turn makes them better at it. They also update their forecasts a lot. The Taiwan numbers I heard from the team at the start of our meeting? They weren’t the same by the end. Part of practicing is adjusting and tweaking constantly.</p>
<p id="cugS8M">But not everyone who practices, and uses numbers to do so, succeeds. In <em>Superforecasting</em>, Tetlock and Gardner come up with an array of “commandments” to help us mere mortals do better, but I often find myself struggling to implement them. One is “strike the right balance between under- and overreacting to evidence”; another is “strike the right balance between under- and overconfidence.” Great, I will simply strike correct balances in all things. I will become Ty Cobb by always striking the right balance between swinging too early and swinging too late.</p>
<p id="QYu0Bh">However, another commandment — to pay attention to “base rates” — came up a lot when talking to the Samotsvety team. In forecasting lingo, a “base rate” is the rate at which some event tends to happen. If I want to project the odds that the New York Yankees win the World Series, I might note that out of 119 World Series to date, the Yankees <a href="https://www.foxsports.com/stories/mlb/world-series-winners-complete-list-by-year">have won 27</a>, for a base rate of 22.7 percent. If I knew nothing else about baseball, that would incline me to give the Yankees better odds than any other team to win the next World Series.</p>
<p id="X2krmN">Of course, you’d be a fool to depend on that alone — in baseball, you have a lot more information than base rates to go on, like stats on every player, years of modeling telling you which stats are most predictive of team performance, etc. But when projecting other kinds of events where far less data exists, you often don’t have any more to go on than the base rate.</p>
<p id="AmHnjD">This was the whole explanation, it turns out, for why everyone in the group put a relatively low probability on the odds of a successful Chinese attempt to retake Taiwan by 2030. Members argued over just how strong the reasons for China to attempt such an effort was, but there was broad agreement that the base rate of war — between China and Taiwan or just between countries in general — is <a href="https://ourworldindata.org/grapher/number-of-wars-project-mars">not very high</a>. “I think that’s why we were all so far below 50 percent, because we were all starting really low,” Justice explained when I asked.</p>
<p id="uR4ALX">That kind of attention to base rates can be surprisingly powerful. Among other things, it gives you a starting point for questions that might seem otherwise intractable. Say you wanted to predict whether <a href="https://www.vox.com/india" data-source="encore">India</a> will go into a recession next year. Starting by counting up the number of years in which India has had a recession since independence and calculating a probability is a simple way to begin a guess without requiring huge amounts of research. One of my first <a href="https://www.vox.com/future-perfect/2020/1/7/21051910/predictions-trump-brexit-recession-2019-2020">successful predictions</a> was that neither India nor China would go into a recession in 2019. I got it right not because I’m an expert on either, but because I paid attention to the base rates.</p>
<p id="whqRS8">But there’s more to successful forecasting than just base rates. For one thing, knowing what base rate to use is itself a bit of an art. Going into the China/Taiwan discussion, I <a href="https://en.wikipedia.org/wiki/First_Taiwan_Strait_Crisis">counted</a> that there have been four <a href="https://en.wikipedia.org/wiki/Kashmir_Princess">lethal</a> exchanges <a href="https://en.wikipedia.org/wiki/Battle_of_Dong-Yin">between</a> China and <a href="https://en.wikipedia.org/wiki/Second_Taiwan_Strait_Crisis">Taiwan</a> since the end of the Chinese Civil War in 1949. That’s four incidents over 75 years, implying that there’s a 5 percent chance of a lethal exchange in a given year. There are six years between now and 2030, so I got a 26.5 percent chance that there’d be a lethal exchange in at least one of them. After adjusting down for the odds that the exchange is just a skirmish versus a full invasion, and compensating for the chances that Taiwan beats China, I got my 5 percent number.</p>
<p id="iZLvrx">But in our discussion, the participants brought up all kinds of other base rates I hadn’t thought of. Sempere alone brought up three. One was the rate at which provinces claimed by China (like Hong Kong, Macau, and Tibet) have eventually been absorbed, peacefully or by force; another was how often control of Taiwan has changed over the last few hundred years (twice; once when Japan took over from the Qing Empire in 1895 and once when the Chinese Nationalists did in 1945); the third base rate used <a href="https://www.lesswrong.com/posts/Tg5pQCjpefFiqaKjw/limitations-of-laplace-s-rule-of-succession">Laplace’s rule</a>. Laplace’s rule states that the probability of something that hasn’t happened before happening is 1 divided by N+2, where N is the number of times it hasn’t happened in the past. So the odds of the People’s Republic of China invading Taiwan this year is 1 divided by 75 (the number of years since 1949 when this has not happened) plus 2, or 1/77, or 1.3 percent.</p>
<p id="GqfXx2">Sempere averaged his three base rates to get his initial prediction: 8 percent. Is that the best method? Should he have added even more? How should he have adjusted his guess after our discussion? (He nudged up to 12 percent.) There’s no firm rule about these questions. It’s ultimately something that can only be judged by your track record.</p>
<h3 id="Mk6pIR">What if knowing the future is knowing the world?</h3>
<p id="uCvk6i">Justice, the MBA student, tells me that quantitative skill is one reason why the Samotsvety crew is so good at prediction. Another reason is more abstract, maybe even grandiose: that as you forecast, you develop “a better model of the world ... you start to see patterns in how the world works, and then that makes you better at forecasting.”</p>
<p id="HL9wSy">“It’s helpful to think of learning forecasting as having two steps,” he wrote in a follow-up email to me. “The first (and most important) step is the recognition that the future and past will look mostly the same. The second step is isolating that small bundle of cases where the two are different.” And it’s in that second step that developing a clear model of how the world works, and being willing to update that model frequently, is most helpful.</p>
<p id="znOEsC">A lot of Justice’s “updates” to his world model have been toward assuming more continuity. In recent years, he says, he learned a lot from facts like, “Putin didn’t die of cancer, use nukes, or get removed from office; bird flu didn’t jump to and spread among humans (so far); Viktor Orban (very recently) dropped his objection to Ukraine aid.” What these have in common is “they’re predominantly about major events that <em>didn’t</em> happen, implying the future will look a lot like the past.”</p>
<p id="nfEYXW">The hardest part of the job is predicting those rare exceptions where everything changes. Samotsvety’s big coming-out party happened in early 2022 when they published an <a href="https://samotsvety.org/blog/2022/03/10/samotsvety-nuclear-risk-forecasts-march-2022/">estimate of the odds that London would be hit by nuclear weapons</a> as a result of the Ukraine conflict. Their estimated odds of a reasonably prepared Londoner dying from a nuclear warhead in the next month were 0.00241 percent: very, very low, all things considered. The prediction got some <a href="https://www.wired.com/story/micromorts-nuclear-war/">press attention</a> and earned rejoinders from nuclear experts like Peter Scoblic, who argued it significantly <a href="https://forum.effectivealtruism.org/posts/W8dpCJGkwrwn7BfLk/nuclear-expert-comment-on-samotsvety-nuclear-risk-forecast-2">understated the risk of a nuclear exchange</a>. It was a big moment for the group — but also an example of a prediction that’s very, very difficult to get right. The further you’re straying from the ordinary course of history (and a nuclear bomb going off in London would be straying very far), the harder this is.</p>
<p id="Uh7QKL">The tight connection between forecasting and building a model of the world helps explain why so much of the early interest in the idea came from the intelligence community. Matheny and colleagues wanted to develop a tool that could give policymakers real-time numerical probabilities, something that intelligence reports have historically not done, much to policymakers’ consternation. As early as 1973, <a href="https://drive.google.com/file/d/1e_9pEYgRPsF0R1EMXUQIb6TSXw9fIZNM/view">Secretary of State Henry Kissinger was telling colleagues</a> he wished “intelligence would supply him with estimates of the relevant betting odds.”</p>
<p id="UvdXJ5">Matheny’s experiment ran through 2020. It included both the aggregative contingent estimation (ACE), which used members of the public and grew into the Good Judgment Project, and the IC Prediction Market (ICPM), which was available to intelligence analysts with access to classified information. The two sources of information were <a href="https://goodjudgment.io/docs/Goldstein-et-al-2015.pdf">about equally accurate</a>, despite the outsiders’ lack of classified access. The experiment was exciting enough to spawn a <a href="https://www.economist.com/science-and-technology/2021/04/15/how-spooks-are-turning-to-superforecasting-in-the-cosmic-bazaar">UK offshoot</a>. But funding on the US side of the Atlantic ran out, and the culture of forecasting in intelligence died off.</p>
<p id="43Y8qh">To Matheny, it’s a crying shame, and he wishes that government institutions and think tanks like his would get back into the habit and act a bit more like Samotsvety. “People might assume that the methods that we use in most institutions that are responsible for analysis have been well-evaluated. And in fact, they haven’t. Even when there are organizations whose decisions cost billions of dollars or even trillions, billions of dollars in the case of key national security decisions,” he told me. Forecasting, by contrast, works. So what are we waiting for?</p>
  <div data-cid="site/article_footer-1710302460_799_51135" data-cdata="{&quot;base_type&quot;:&quot;Entry&quot;,&quot;id&quot;:23834905,&quot;timestamp&quot;:1707835200,&quot;published_timestamp&quot;:1707835200,&quot;show_published_and_updated_timestamps&quot;:false,&quot;title&quot;:&quot;How a ragtag band of internet friends became the best at forecasting world events&quot;,&quot;type&quot;:&quot;Feature&quot;,&quot;url&quot;:&quot;https://www.vox.com/future-perfect/2024/2/13/24070864/samotsvety-forecasting-superforecasters-tetlock&quot;,&quot;entry_layout&quot;:{&quot;key&quot;:&quot;unison_above&quot;,&quot;layout&quot;:&quot;unison_main&quot;,&quot;template&quot;:&quot;minimal&quot;},&quot;additional_byline&quot;:null,&quot;authors&quot;:[{&quot;id&quot;:1890623,&quot;name&quot;:&quot;Dylan Matthews&quot;,&quot;url&quot;:&quot;https://www.vox.com/authors/dylan-matthews&quot;,&quot;twitter_handle&quot;:&quot;&quot;,&quot;profile_image_url&quot;:&quot;https://cdn.vox-cdn.com/thumbor/pe0KEhTdfY0NyWKh7eyI_AszTM4=/512x512/cdn.vox-cdn.com/author_profile_images/196205/dylan_headshot_square.0.jpg&quot;,&quot;title&quot;:&quot;&quot;,&quot;email&quot;:&quot;dylan@vox.com&quot;,&quot;short_author_bio&quot;:&quot;is a senior correspondent and head writer for Vox's Future Perfect section and has worked at Vox since 2014. He is particularly interested in global health and pandemic prevention, anti-poverty efforts, economic policy and theory, and conflicts about the right way to do philanthropy.&quot;}],&quot;byline_enabled&quot;:true,&quot;byline_credit_text&quot;:&quot;By&quot;,&quot;byline_serial_comma_enabled&quot;:true,&quot;comment_count&quot;:0,&quot;comments_enabled&quot;:false,&quot;legacy_comments_enabled&quot;:false,&quot;coral_comments_enabled&quot;:false,&quot;coral_comment_counts_enabled&quot;:false,&quot;commerce_disclosure&quot;:null,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;cross_community&quot;:false,&quot;internal_groups&quot;:[{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:112405,&quot;timestamp&quot;:1710248568,&quot;title&quot;:&quot;Approach — Explores solutions or ideas to solve problems&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;&quot;,&quot;slug&quot;:&quot;approach-explores-solutions-or-ideas-to-solve-problems&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:258,&quot;always_show&quot;:false,&quot;description&quot;:&quot;&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;}],&quot;image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/73135700/Forecasting_2.0.png&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:null,&quot;credit&quot;:&quot;Ben Hickey for Vox&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:861,&quot;top_left_y&quot;:413,&quot;bottom_right_x&quot;:1187,&quot;bottom_right_y&quot;:739},&quot;bounds&quot;:[0,0,2048,1152],&quot;uploaded_size&quot;:{&quot;width&quot;:2048,&quot;height&quot;:1152},&quot;focal_point&quot;:null,&quot;image_id&quot;:73135700,&quot;alt_text&quot;:&quot;&quot;},&quot;hub_image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/73135700/Forecasting_2.0.png&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:null,&quot;credit&quot;:&quot;Ben Hickey for Vox&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:861,&quot;top_left_y&quot;:413,&quot;bottom_right_x&quot;:1187,&quot;bottom_right_y&quot;:739},&quot;bounds&quot;:[0,0,2048,1152],&quot;uploaded_size&quot;:{&quot;width&quot;:2048,&quot;height&quot;:1152},&quot;focal_point&quot;:null,&quot;image_id&quot;:73135700,&quot;alt_text&quot;:&quot;&quot;},&quot;lede_image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/73135701/Forecasting_2.0.gif&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:null,&quot;credit&quot;:&quot;Ben Hickey for Vox&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:861,&quot;top_left_y&quot;:413,&quot;bottom_right_x&quot;:1187,&quot;bottom_right_y&quot;:739},&quot;bounds&quot;:[0,0,2048,1152],&quot;uploaded_size&quot;:{&quot;width&quot;:2048,&quot;height&quot;:1152},&quot;focal_point&quot;:null,&quot;image_id&quot;:73135701,&quot;alt_text&quot;:&quot;A drawing of a shadowy group sitting in a circle looking at a crystal ball full of numbers with a green light glowing from it.&quot;},&quot;group_cover_image&quot;:null,&quot;picture_standard_lead_image&quot;:{&quot;ratio&quot;:&quot;*&quot;,&quot;original_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_image/image/73135701/Forecasting_2.0.gif&quot;,&quot;network&quot;:&quot;unison&quot;,&quot;bgcolor&quot;:&quot;white&quot;,&quot;pinterest_enabled&quot;:false,&quot;caption&quot;:null,&quot;credit&quot;:&quot;Ben Hickey for Vox&quot;,&quot;focal_area&quot;:{&quot;top_left_x&quot;:861,&quot;top_left_y&quot;:413,&quot;bottom_right_x&quot;:1187,&quot;bottom_right_y&quot;:739},&quot;bounds&quot;:[0,0,2048,1152],&quot;uploaded_size&quot;:{&quot;width&quot;:2048,&quot;height&quot;:1152},&quot;focal_point&quot;:null,&quot;image_id&quot;:73135701,&quot;alt_text&quot;:&quot;A drawing of a shadowy group sitting in a circle looking at a crystal ball full of numbers with a green light glowing from it.&quot;,&quot;picture_element&quot;:{&quot;loading&quot;:&quot;eager&quot;,&quot;html&quot;:{},&quot;alt&quot;:&quot;A drawing of a shadowy group sitting in a circle looking at a crystal ball full of numbers with a green light glowing from it.&quot;,&quot;default&quot;:{&quot;srcset&quot;:&quot;https://cdn.vox-cdn.com/thumbor/WPgUV8o_-8AGV8M1GTGCSVjMTUc=/0x0:2048x1152/320x240/filters:focal(861x413:1187x739):no_upscale()/cdn.vox-cdn.com/uploads/chorus_image/image/73135701/Forecasting_2.0.gif 320w, https://cdn.vox-cdn.com/thumbor/fUOVtIqmiCuUA_a5xn7zv-si-7Q=/0x0:2048x1152/620x465/filters:focal(861x413:1187x739):no_upscale()/cdn.vox-cdn.com/uploads/chorus_image/image/73135701/Forecasting_2.0.gif 620w, https://cdn.vox-cdn.com/thumbor/bShQYsJdugT7GgSPPKuwSETdCRw=/0x0:2048x1152/920x690/filters:focal(861x413:1187x739):no_upscale()/cdn.vox-cdn.com/uploads/chorus_image/image/73135701/Forecasting_2.0.gif 920w, https://cdn.vox-cdn.com/thumbor/VfbXMuQu-jvXFtL4NqQfl9ALIX8=/0x0:2048x1152/1220x915/filters:focal(861x413:1187x739):no_upscale()/cdn.vox-cdn.com/uploads/chorus_image/image/73135701/Forecasting_2.0.gif 1220w, https://cdn.vox-cdn.com/thumbor/cGe4fBy4qr4AcAA6ZjBUDR_n0y8=/0x0:2048x1152/1520x1140/filters:focal(861x413:1187x739):no_upscale()/cdn.vox-cdn.com/uploads/chorus_image/image/73135701/Forecasting_2.0.gif 1520w&quot;,&quot;webp_srcset&quot;:null,&quot;media&quot;:null,&quot;sizes&quot;:&quot;(min-width: 809px) 485px, (min-width: 600px) 60vw, 100vw&quot;,&quot;fallback&quot;:&quot;https://cdn.vox-cdn.com/thumbor/WJvuY3dPmc51MFMP4ERVpxR_y-o=/0x0:2048x1152/1200x900/filters:focal(861x413:1187x739):no_upscale()/cdn.vox-cdn.com/uploads/chorus_image/image/73135701/Forecasting_2.0.gif&quot;},&quot;art_directed&quot;:[]}},&quot;image_is_placeholder&quot;:false,&quot;image_is_hidden&quot;:false,&quot;network&quot;:&quot;vox&quot;,&quot;omits_labels&quot;:false,&quot;optimizable&quot;:false,&quot;promo_headline&quot;:&quot;How a ragtag band of internet friends became&nbsp;the best&nbsp;at forecasting world events&quot;,&quot;recommended_count&quot;:0,&quot;recs_enabled&quot;:false,&quot;slug&quot;:&quot;future-perfect/2024/2/13/24070864/samotsvety-forecasting-superforecasters-tetlock&quot;,&quot;dek&quot;:&quot;What the Samotsvety group can teach us about predicting the future.&quot;,&quot;homepage_title&quot;:&quot;How a ragtag band of internet friends became&nbsp;the best&nbsp;at forecasting world events&quot;,&quot;homepage_description&quot;:&quot;What the Samotsvety group can teach us about predicting the future.&quot;,&quot;show_homepage_description&quot;:false,&quot;title_display&quot;:&quot;How a ragtag band of internet friends became&nbsp;the best&nbsp;at forecasting world events&quot;,&quot;pull_quote&quot;:null,&quot;voxcreative&quot;:false,&quot;show_entry_time&quot;:true,&quot;show_dates&quot;:true,&quot;paywalled_content&quot;:false,&quot;paywalled_content_box_logo_url&quot;:&quot;&quot;,&quot;paywalled_content_page_logo_url&quot;:&quot;&quot;,&quot;paywalled_content_main_url&quot;:&quot;&quot;,&quot;article_footer_body&quot;:&quot;At Vox, we believe that clarity is power, and that power shouldn’t only be available to those who can afford to pay. That’s why we keep our work free. Millions rely on Vox’s clear, high-quality journalism to understand the forces shaping today’s world. <a href=\&quot;http://vox.com/pages/support-now?itm_campaign=evergreen&amp;itm_medium=site&amp;itm_source=footer\&quot;>Support our mission and help keep Vox free for all by making a financial contribution to Vox today.</a> \r\n&quot;,&quot;article_footer_header&quot;:&quot;<a href=\&quot;http://vox.com/pages/support-now?itm_campaign=evergreen&amp;itm_medium=site&amp;itm_source=footer\&quot;>Will you help keep Vox free for all?</a>&quot;,&quot;use_article_footer&quot;:true,&quot;article_footer_cta_annual_plans&quot;:&quot;{\r\n  \&quot;default_plan\&quot;: 1,\r\n  \&quot;plans\&quot;: [\r\n    {\r\n      \&quot;amount\&quot;: 50,\r\n      \&quot;plan_id\&quot;: 99546\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 100,\r\n      \&quot;plan_id\&quot;: 99547\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 150,\r\n      \&quot;plan_id\&quot;: 99548\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 200,\r\n      \&quot;plan_id\&quot;: 99549\r\n    }\r\n  ]\r\n}&quot;,&quot;article_footer_cta_button_annual_copy&quot;:&quot;year&quot;,&quot;article_footer_cta_button_copy&quot;:&quot;Yes, I'll give&quot;,&quot;article_footer_cta_button_monthly_copy&quot;:&quot;month&quot;,&quot;article_footer_cta_default_frequency&quot;:&quot;monthly&quot;,&quot;article_footer_cta_monthly_plans&quot;:&quot;{\r\n  \&quot;default_plan\&quot;: 0,\r\n  \&quot;plans\&quot;: [\r\n    {\r\n      \&quot;amount\&quot;: 5,\r\n      \&quot;plan_id\&quot;: 99543\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 10,\r\n      \&quot;plan_id\&quot;: 99544\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 25,\r\n      \&quot;plan_id\&quot;: 99545\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 50,\r\n      \&quot;plan_id\&quot;: 46947\r\n    }\r\n  ]\r\n}&quot;,&quot;article_footer_cta_once_plans&quot;:&quot;{\r\n  \&quot;default_plan\&quot;: 0,\r\n  \&quot;plans\&quot;: [\r\n    {\r\n      \&quot;amount\&quot;: 20,\r\n      \&quot;plan_id\&quot;: 69278\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 50,\r\n      \&quot;plan_id\&quot;: 48880\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 100,\r\n      \&quot;plan_id\&quot;: 46607\r\n    },\r\n    {\r\n      \&quot;amount\&quot;: 250,\r\n      \&quot;plan_id\&quot;: 46946\r\n    }\r\n  ]\r\n}&quot;,&quot;use_article_footer_cta_read_counter&quot;:true,&quot;use_article_footer_cta&quot;:true,&quot;groups&quot;:[{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:76815,&quot;timestamp&quot;:1710163160,&quot;title&quot;:&quot;Future Perfect&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/future-perfect&quot;,&quot;slug&quot;:&quot;future-perfect&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:1811,&quot;always_show&quot;:false,&quot;description&quot;:&quot;Finding the best ways to do good. &quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/16290809/future_perfect_sized.0.jpg&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:true},{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:30770,&quot;timestamp&quot;:1710281404,&quot;title&quot;:&quot;Politics&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/politics&quot;,&quot;slug&quot;:&quot;politics&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:28923,&quot;always_show&quot;:false,&quot;description&quot;:&quot;Vox's politics team explains everything you need to know about what's going on in Washington and what it means for your life.&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:false},{&quot;base_type&quot;:&quot;EntryGroup&quot;,&quot;id&quot;:30778,&quot;timestamp&quot;:1710270902,&quot;title&quot;:&quot;World Politics&quot;,&quot;type&quot;:&quot;SiteGroup&quot;,&quot;url&quot;:&quot;https://www.vox.com/world-politics&quot;,&quot;slug&quot;:&quot;world-politics&quot;,&quot;community_logo&quot;:&quot;\r\n<svg width=\&quot;386px\&quot; height=\&quot;385px\&quot; viewBox=\&quot;0 0 386 385\&quot; version=\&quot;1.1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot; >\r\n    \r\n    <title>vox-mark</title>\r\n    \r\n    <defs></defs>\r\n    <g id=\&quot;Page-1\&quot; stroke=\&quot;none\&quot; stroke-width=\&quot;1\&quot; fill=\&quot;none\&quot; fill-rule=\&quot;evenodd\&quot; >\r\n        <path d=\&quot;M239.811,0 L238.424,6 L259.374,6 C278.011,6 292.908,17.38 292.908,43.002 C292.908,56.967 287.784,75.469 276.598,96.888 L182.689,305.687 L159.283,35.693 C159.283,13.809 168.134,6 191.88,6 L205.854,6 L207.247,0 L1.409,0 L0,6 L13.049,6 C28.88,6 35.863,15.885 37.264,34.514 L73.611,385 L160.221,385 L304.525,79.217 C328.749,31.719 349.237,6 372.525,6 L384.162,6 L385.557,0 L239.811,0\&quot; id=\&quot;vox-mark\&quot; fill=\&quot;#444745\&quot; ></path>\r\n    </g>\r\n</svg>&quot;,&quot;community_name&quot;:&quot;Vox&quot;,&quot;community_url&quot;:&quot;https://www.vox.com/&quot;,&quot;cross_community&quot;:false,&quot;entry_count&quot;:6704,&quot;always_show&quot;:false,&quot;description&quot;:&quot;&quot;,&quot;disclosure&quot;:&quot;&quot;,&quot;cover_image_url&quot;:&quot;&quot;,&quot;cover_image&quot;:null,&quot;title_image_url&quot;:&quot;&quot;,&quot;intro_image&quot;:null,&quot;four_up_see_more_text&quot;:&quot;View All&quot;,&quot;primary&quot;:false}],&quot;layout&quot;:&quot;&quot;,&quot;featured_placeable&quot;:false,&quot;video_placeable&quot;:false,&quot;disclaimer&quot;:null,&quot;volume_placement&quot;:&quot;lede&quot;,&quot;video_autoplay&quot;:false,&quot;youtube_url&quot;:&quot;http://bit.ly/voxyoutube&quot;,&quot;facebook_video_url&quot;:&quot;&quot;,&quot;play_in_modal&quot;:true,&quot;user_preferences_for_privacy_enabled&quot;:false,&quot;show_branded_logos&quot;:true,&quot;uses_video_lede&quot;:false,&quot;image_brightness&quot;:&quot;image-light&quot;,&quot;display_logo_lockup&quot;:false,&quot;svg_logo_data&quot;:&quot;<svg id=\&quot;Layer_1\&quot; xmlns=\&quot;http://www.w3.org/2000/svg\&quot; viewBox=\&quot;0 0 242 121\&quot;><path fill=\&quot;#444745\&quot; d=\&quot;M110.674 3.528h3.474L114.564 2H71.63l-.418 1.528h6.253c5.418 0 9.726 3.75 9.726 11.255 0 4.168-1.8 9.587-4.72 16.118L54.82 92.32l-6.81-79.756c-.556-6.252 2.5-9.03 9.59-9.03h4.027L62.042 2H1.6l-.557 1.528h3.89c4.725 0 6.532 2.918 7.087 8.615l10.7 103.1h25.427l42.518-90.038c6.392-13.48 13.2-21.677 20.01-21.677zm-5.002 112.27c-3.89 0-6.253-1.25-6.253-7.642 0-8.06 2.91-23.76 6.11-38.072.41 6.67 5 13.2 11.81 13.2 1.67 0 3.06-.138 4.44-.417-6.26 27.236-8.76 32.932-16.12 32.932zm121.024-54.19c8.06 0 13.2-6.67 13.2-14.173 0-6.392-4.585-11.116-11.115-11.116-11.81 0-17.36 9.31-27.09 26.53-2.08-10.7-6.94-24.73-19.45-24.73-14.03 0-30.15 20.01-45.02 32.37-6.67 5.56-14.17 9.17-20.15 9.17-6.11 0-9.72-6.26-9.72-17.23 4.31-17.93 6.67-22.65 13.34-22.65 4.59 0 6.53 2.64 6.53 8.06 0 5.69-1.25 15.42-3.75 27.51 6.67-2.09 16.68-10.42 25.01-19.45-4.44-10.56-13.89-17.79-27.65-17.79-25.42 0-47.66 22.78-47.66 48.35 0 17.65 12.51 30.984 32.1 30.984 32.38 0 45.86-28.066 45.86-47.52 0-2.78-.14-4.86-.42-7.364C155.717 57.14 162.108 52 167.388 52c5.975 0 10.7 15.007 15.423 37.657-4.17 4.58-8.34 13.474-10.42 15.002-.836-8.06-6.115-13.06-13.2-13.06-7.92 0-13.48 7.5-13.48 13.893 0 7.226 5 11.95 11.53 11.95 13.76 0 17.65-13.062 26.265-24.595 2.64 12.363 8.754 24.59 19.313 24.59 12.506 0 24.178-10.7 30.15-18.34l-1.11-1.81c-3.89 3.753-7.642 6.254-11.95 6.254-7.78 0-13.34-16.81-17.645-37.1 2.5-3.47 6.53-12.225 9.31-15.28 1.95 3.612 5.978 10.42 15.15 10.42z\&quot;/></svg>&quot;}">
       <!-- end of .contribute--frequency-container -->

      <div>
        <p><label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$5</span><span>/month</span>
                </p>
              </label>
            
              <label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$10</span><span>/month</span>
                </p>
              </label>
            
              <label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$25</span><span>/month</span>
                </p>
              </label>
            
              <label tabindex="0" role="radio" aria-checked="true">
                
                <p>
                  <span>$50</span><span>/month</span>
                </p>
              </label>
            

            <label tabindex="0">
              
              <span>Other</span>
            </label>
          </p>
        </div>

        

        <a href="https://vox.memberful.com/checkout?plan=" id="contribute--submit">
          <p>
            Yes, I'll give $5<span>/month</span>
          </p>
        </a>

        <p>
          Yes, I'll give $5<span>/month</span>
        </p>

        <div>
            <p>
              <span>
                We accept credit card, Apple Pay, and
              </span>
              <span>
                Google Pay. You can also contribute via
              </span>
            </p>
            <p><a href="https://www.paypal.com/donate/?hosted_button_id=VSP4PYJX98SHL" target="_blank">
              <img src="https://cdn.vox-cdn.com/uploads/chorus_asset/file/22734206/paypal_logo.png" alt="" width="136" height="42">
            </a>
          </p></div>

      </div> <!-- end of .right-column -->

 <!-- end of .c-article-footer-cta -->

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Scammed by the top result for 'Bitcoin wallet' in Apple App Store (183 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=39685272</link>
            <guid>39685272</guid>
            <pubDate>Tue, 12 Mar 2024 21:36:53 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=39685272">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="39685684"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39685684" href="https://news.ycombinator.com/vote?id=39685684&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>I don't think I've ever searched for something on the app store and not got a scam as the first result<p>just tried it</p><pre><code>    - my bank? I get crypto.com
    - train company app? knockoff app that charges extra fees
    - my broker? CFD gambling app
    - official government app for paying my tax? intuit product
</code></pre>
I dare to think how many people this lures in<p>scammy ads plastered everywhere is what I'd expect from Google products</p><p>not for the Apple equivalent that commands a significant price premium
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39686027"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39686027" href="https://news.ycombinator.com/vote?id=39686027&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>I am still surprised that when I search for a specific app (as you did for your bank) I still see junk ads before the real app shows up.  Apple should be better than that.  They seem to have the same bad incentive Google search does.<p>What is CFD gambling?  When I read “CFD” I always think of computational fluid dynamics and so “CFD gambling” sounds pretty cool to me. Obviously I do know I’m just overfitting to a TLA and I’d like to know what it <i>actually</i> means.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39686068"><td></td></tr>
            <tr id="39686078"><td></td></tr>
                  <tr id="39685741"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39685741" href="https://news.ycombinator.com/vote?id=39685741&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>In hindsight, this is quite obvious. Coming from years of using Google Pixels I just got used to trusting the search results. I've never hit a fraudulent app when searching in the Play Store. I trusted apple that at least the top 5 results would be legit.
EDIT: added the word 'top' at the end</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39686267"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39686267" href="https://news.ycombinator.com/vote?id=39686267&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>&gt; my broker? CFD gambling app<p>I don't think 'gambling app' is a fair description given it's a regulated security, any broker that truly offers CFD trading is (1) going to be legit; (2) going to be competing with the broker you were searching for for result space.</p><p>Of course to serve its users any app store should massively prioritise the word/brand (incl. typos) you actually search for though.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39686282"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39686282" href="https://news.ycombinator.com/vote?id=39686282&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>Casino-style gambling is also regulated, there being some degree of oversight doesn't make it not gambling.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39685794"><td></td></tr>
            <tr id="39685792"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39685792" href="https://news.ycombinator.com/vote?id=39685792&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>Can you share some search terms you tried? I never had this problem, but I’m also not in the US so it might be different here</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39685897"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39685897" href="https://news.ycombinator.com/vote?id=39685897&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>Pretty much every brand or app I search for finds a competitor first. Searching for "robinhood" turns up an unaffiliated cryptocurrency app and "macrofactor" turns up a competing diet app, etc. App store search has been broken for at least a few years.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39685992"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39685992" href="https://news.ycombinator.com/vote?id=39685992&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>Do you mean ads or organic results?<p>Apple should remove App Store search ads altogether (I'm sure they won't). <i>By definition</i> they won't give you the app you searched for, because the keyword will be bought by a competitor or even a scam.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39685994"><td></td></tr>
                        <tr id="39686150"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39686150" href="https://news.ycombinator.com/vote?id=39686150&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>TFA is talking about a literal scam, where his money vanished.<p>&gt; - my bank? I get crypto.com</p><p>Although crypto.com is not a bank, they seem like a legit business and not a scam. Many people are using crypto.com: I know one person who has one such card and I asked a waiter if he had already seen cards like that (waiters gets to see many credit/debit cards a day) and he answered me that they weren't that uncommon.</p><p>&gt; - official government app for paying my tax? intuit product</p><p>They may be using shady tactics but they are not a scam.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39686222"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39686222" href="https://news.ycombinator.com/vote?id=39686222&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>crypto.com 1) is cryptocurrency bs and 2) buys ads on keywodrs which leads them to appear on searches for specific banks, smells like a scam to me</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="39686051"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39686051" href="https://news.ycombinator.com/vote?id=39686051&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>&gt; I don't think I've ever searched for something on the app store and not got a scam as the first result<p>It’s cool to crap on Apple and all these days but this is all categorically false. What you are referring to is the Ad on the top of the page. It’s clearly labeled as ad and has a light blue box around the whole ad.</p><p>I tried all those things you mentioned and the first result after the clearly labeled ad is what I searched for.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39686278"><td></td></tr>
                  <tr id="39685750"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39685750" href="https://news.ycombinator.com/vote?id=39685750&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>This has been a very noticeable problem to me for some time.<p>I won't search the App Store anymore. I go to the web site for the app I want and get the App Store link that way.</p><p>I wish the App Store listings would specify the domain of the entity they come from in plain text, backed by a validation method similar to what we do for TLS certs.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39686034"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39686034" href="https://news.ycombinator.com/vote?id=39686034&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>Apple statement on why the EU requiring open app stores is bad:<p><i>Schiller, an Apple veteran who once ran its marketing machine, said the moves to break the company’s closed ecosystem for software will undermine the privacy and security the company has worked to build into its products and services. “This isn’t our first choice,” he said. “We always want to have the highest standard everywhere in the world but we also have the requirement to meet the legal requirements in the local markets. “In the App Store we have a lot of signals that we are looking for every day to find scams and stop them,” Schiller said. “With these new marketplaces we won’t have visibility into those issues.”</i></p><p>Right.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39686318"><td></td></tr>
                  <tr id="39685664"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39685664" href="https://news.ycombinator.com/vote?id=39685664&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>I thought the Apple platform had the best consumer experience and that's why folk love it -- it "just works" -- cause they keep the riff-raff out of their gated community.<p>Perhaps they let this one slip through because their team was too busy dragging out the review process for our cannabis compliance application, they can only afford so many reviewers after all.  We wouldn't want children accidentally getting their hands on regulatory compliance data for deadly deadly cannabis.  (which could happen with our application, after they had signed up and verified their agency cannabis license (which only takes many months/years and $$$$$s to get))
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39685861"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39685861" href="https://news.ycombinator.com/vote?id=39685861&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>Apples app store is way worse than the google play store. i was shocked at how bad the app store is with shitty ads and promoted content over organic search results</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39685807"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39685807" href="https://news.ycombinator.com/vote?id=39685807&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>It did - before cheapo enshittification started creeping in. I believe some time ago I saw some research on the quality of App Store app review process … zero protection.<p>But, even at this stage, Apple is still “the best”, because of the slower pace of the corruption and in comparison to the toxic dumpster fire of the alternatives.</p><p>Android and Windows are spyware/malware masquerading as OSs.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39685862"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39685862" href="https://news.ycombinator.com/vote?id=39685862&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>This is incorrect unless you're shifting topics to whether we trust MS, Apple, or Google's data collection more.</span></p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="39685738"><td></td></tr>
                <tr id="39685808"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39685808" href="https://news.ycombinator.com/vote?id=39685808&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>That’s insane, and news worthy. Imagine non-techies just trying to go about their day and getting that.<p>But hold on a sec. Is this verified by others? The guy in the video cuts to a screenshot, which doesn’t show the resulting url or how he got there, so it’s hard to tell what happened.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39685869"><td></td></tr>
                <tr id="39686104"><td></td></tr>
                        <tr id="39685749"><td></td></tr>
            <tr id="39686113"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39686113" href="https://news.ycombinator.com/vote?id=39686113&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>&gt;Google even vouches for the advertiser<p>Google vouches that the advertisers is who is he says he is. Google is not vouching for the reputation if the advertiser.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39685676"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39685676" href="https://news.ycombinator.com/vote?id=39685676&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>&gt;  does a scam app become the #1 organic search result (not promoted) in the app store<p>It's possible that it's just because it was literally called "Bitcoin Wallet", an exact match for your search, or boosted by fake reviews, or it was actually an ad that you didn't notice. Though it shouldn't have gotten past review at all</p><p>But I don't really understand why you'd blindly trust some random app?</p><p>Also, would be interesting to take a look at the app, sadly know nothing about ios apps or how to get the IPA, only android.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39685699"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39685699" href="https://news.ycombinator.com/vote?id=39685699&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>You're right, I shouldn't trust a random app. Also, it's pretty much my first serious foray into Apple land. I trusted Apple's search results. There are multiple apps, far more mature and backed by serious developers, that would also match the phrase "Bitcoin Wallet".<p>The question is why is the scam app the #1 organic search result? For a new app with such scammy reviews and questionable metadata I would expect it to be #30 in the list. For context, the app store reports the scam app as #85 in all finance apps.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39686199"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39686199" href="https://news.ycombinator.com/vote?id=39686199&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>&gt; The question is why is the scam app the #1 organic search result?<p>The real answer is that this has been happening for years. You can pay companies to pump up your app to the top of App Store search results or "app categories" lists, and they'll have farms of iPhones/Androids downloading apps to pump up their rank, and giving them 5 star reviews.</p><p>There have also been repeated problems with copycat apps that impersonate real indie apps (and sometimes end up earning more than the real app), which should have been a warning sign of the problems of App Review. Google "app store copycat" and you'll see.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                        <tr id="39686232"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39686232" href="https://news.ycombinator.com/vote?id=39686232&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>It is both impressive and concerning how well their app store optimization efforts were, for what seems like a major keyword/phrase. These type of shenanigans were usually reserved for the Play Store. No more.<p>To be fair many crypto wallet apps are deceptively simple applications.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39686136"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39686136" href="https://news.ycombinator.com/vote?id=39686136&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>Must be region/account specific. I get crypto.com, bitcoin.com and coinbase as the top three results. Nevertheless I agree these should be moderated better and scam apps need to be removed quickly.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39685828"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39685828" href="https://news.ycombinator.com/vote?id=39685828&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>When I perform your search, I get legitimate results at the top, and I don't see the <i>specific</i> app from the Reddit thread. But about at about rank #7, I see an app that uses a distorted form of the same logo, a different unfamiliar publisher, a slightly altered title and a similar smattering of only a few reviews.<p>It sounds like somebody is burning developer accounts to keep reposting the scam app. Not unlike people being banned from a website and then resubscribing with a different email or through a VPN or whatever. It slipping through into your results isn't so much plain neglect as it is an arms race that Apple is on the losing side of this time.</p><p>Robust algorithmic ranking and moderation at scale is a myth, though, and you can find this happen pretty much everywhere. This one will probanly get squashed with some near-term update to their algorithm, and then get compromised again sometime later since crypto is so ripe for scamming.</p><p>You can't escape personal due diligence and "it was top ranked!" has never been that.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39685947"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39685947" href="https://news.ycombinator.com/vote?id=39685947&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>Posted above the screen recording:
<a href="https://streamable.com/y5nhy7" rel="nofollow">https://streamable.com/y5nhy7</a><p>&gt; You can't escape personal due diligence and "it was top ranked!" has never been that.</p><p>On one hand that's a fair point and I should've known better. OTOH I think it is legit to trust top app store search results to return quality apps, especially if there is a massive disparity between their quality. The scam app has obvious repetitive spam reviews. The developer's website is terrible and the submit button doesn't even work. This is basic quality control on apple's part. If every single app store user needs to manually vet every single app they install to the proper extent there would be a fraction of a fraction of the installs and respectively, a fraction of a fraction of the revenue.</p><p>Consider the extent of lawsuits between apple and companies with app store apps - does it not strike you that apple protects that revenue stream? Wouldn't it make sense to give app store users a sense of trust in the top search results?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39685690"><td></td></tr>
            <tr id="39685682"><td></td></tr>
                <tr id="39686126"><td></td></tr>
                <tr id="39686166"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39686166" href="https://news.ycombinator.com/vote?id=39686166&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>Security <i>measures</i> should be treated as an opportunity cost, and scrutinized when it fails. In this case, the App Store's manual review layer has failed to catch a rudimentary scam. It's becoming a recurring issue on the App Store.</span></p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="39685683"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39685683" href="https://news.ycombinator.com/vote?id=39685683&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>No repro. Same search string gives me the Bitcoin.com and the Coinbase app at the top. Scrolled through several dozen wallet apps and the one in the Reddit link never surfaced.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39685847"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39685847" href="https://news.ycombinator.com/vote?id=39685847&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>Here is a screen recording including this hacker news post + your comment &amp; and a switch to the app store with the search phrase. The first result is the scam app. I scrolled down so you can see where serious apps are in the list of results.
<a href="https://streamable.com/q2mulu" rel="nofollow">https://streamable.com/q2mulu</a></span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39686013"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39686013" href="https://news.ycombinator.com/vote?id=39686013&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>You already tainted your results by downloading it once and having it stored in your cloud backup.<p>You still haven’t proven you didn’t seek this app out intentionally and made some  attention seeking post to capitalize on the trend of Europeans crapping on Apple all over the front page.</p><p>There is no technical solution to prevent users from outright fraud. If you were truly scammed, then you effectively gave your money to a Nigerian Prince, and you’re now trying to rally a mob against Apple. If there’s a scammy app, report it and move on. Happens to every platform.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39686099"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39686099" href="https://news.ycombinator.com/vote?id=39686099&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>How am I supposed to prove I didn't seek the app out? What level of proof do you expect? Do you expect me to create a brand new apple account, replace the one in my phone (which might require wiping it?), and then search again, just to satisfy your default assumption that my claim is false?<p>When I first installed the app it was the first search result. I can't go back in time and prove it because I'm not paranoid and I don't screenshot the result of every search in every app store and search engine.</p><p>I reported it. I'm not trying to rally a mob against Apple. The bitcoin is gone.</p><p>I'm trying to prevent others from suffering the same fate as me. Based on what I'm reading in the comments here some other people in the world do trust apple app store search results, and I believe they've gained something from my post.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39686326"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_39686326" href="https://news.ycombinator.com/vote?id=39686326&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>I also can't replicate your results but GP is pretty aggressive in a way I don't feel is necessary. Sorry you got scammed out of your crypto, hope it wasn't too bad. I do agree with the sentiment that you should be incredibly vigilant and verify anything you're going to put your money inside of, Bitcoin or otherwise though. But people in positions and wallets that are far bigger than you (presumably) have done worse so don't feel too bad (Ripple CEO losing $112 million worth of XRP, for example).<p>Edit: Unless that app had a ton of reviews removed recently, I recommend in the future looking at that number. It is crazy that they've gamed it up to #97 in the finance charts according to the app store listing for sure, though the Play store is not immune to this manipulation.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39686152"><td></td></tr>
                <tr id="39686263"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_39686263" href="https://news.ycombinator.com/vote?id=39686263&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>If only there was a website I could use to contact other like minded people where they could vote on posts they like and discuss them in comment sections.<p>Oh, wait
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39686350"><td><table>  <tbody><tr>    <td indent="6"><img src="https://news.ycombinator.com/s.gif" height="1" width="240"></td><td>
      <center><a id="up_39686350" href="https://news.ycombinator.com/vote?id=39686350&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>The problem is that you’re framing this as some kind of technical issue that no one else has reproduced. Did you follow any kind of common sense due diligence? How is this any different from blaming Google/Gmail because you fell victim to a phishing/scam email?</span></p></div></td></tr>
        </tbody></table></td></tr>
                                          <tr id="39685773"><td></td></tr>
                <tr id="39685781"><td></td></tr>
                <tr id="39685883"><td></td></tr>
                              <tr id="39686069"><td></td></tr>
            <tr id="39685715"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39685715" href="https://news.ycombinator.com/vote?id=39685715&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>That's actually quite worrisome. I don't really think twice about downloading the top result for things like PayPal or local banking apps if I get a new phone, for example.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="39685688"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39685688" href="https://news.ycombinator.com/vote?id=39685688&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>Why did you have to transfer bitcoin? Surely you would just load your private key into the app unless I'm missing something.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39685733"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39685733" href="https://news.ycombinator.com/vote?id=39685733&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>Honestly, I got lazy, and that's on me. I was using the standard bitcoin wallet app on android. It did seem weird I can't restore the wallet I backed up in the android app, but the android app github doesn't point to an app store app, so I figured there just isn't and the android app's backup format is something detached.<p>Then I figured a legit apple app could generate a wallet and I could transfer the bitcoin between them. Which is what I did. The apple app indeed received it and promptly sent it off somewhere else. What's even crazier is that the apple app shows this info! You'd expect the scammer to hide the scam but I suppose it just made it easier to pass the app store inspection.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="39686268"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39686268" href="https://news.ycombinator.com/vote?id=39686268&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>At this point, I'm about 80% sure that a lot of these scam apps are being approved by corrupted Apple reviewers.<p>So many of them are blatantly scams that it's not credibly "human error".
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="39685640"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_39685640" href="https://news.ycombinator.com/vote?id=39685640&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><br><div>
                  <p><span>It’s crazy that you can leave reviews from within the App Store, nor can you report it to Apple from within the App Store.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="39685665"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_39685665" href="https://news.ycombinator.com/vote?id=39685665&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>You're right, and I've done both. My review doesn't appear in the list of reviews.<p>What's crazy is that a scam app is the #1 organic search result for 'bitcoin wallet', above blockchain.com and coinbase.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39685889"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_39685889" href="https://news.ycombinator.com/vote?id=39685889&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>(1) How much more valuable do you think it is to the scam app developer to appear at the top of the search results than for a legitimate wallet developer?<p>(2) Do you think a legitimate wallet app will engage in the same black-hat SEO tactics a scam app developer will?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="39685978"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_39685978" href="https://news.ycombinator.com/vote?id=39685978&amp;how=up&amp;goto=item%3Fid%3D39685272"></a></center>    </td><td><p><span>&gt; (1) How much more valuable do you think it is to the scam app developer to appear at the top of the search results than for a legitimate wallet developer?<p>Well, the scammer got CAD $150k out of the reddit guy I linked to and I lost a slightly smaller amount - and we're just two out of who knows how many thousands of app store users that installed this app. I'd say people trust the top 5-10 results quite a lot.</p><p>&gt; (2) Do you think a legitimate wallet app will engage in the same black-hat SEO tactics a scam app developer will?</p><p>I think all the black-hat SEO in the world should not be able to surpass the obvious value disparity compared to legit apps with hundreds of thousands of installs and hundreds of reviews.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                              </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[40 Years of Programming (117 pts)]]></title>
            <link>https://liw.fi/40/</link>
            <guid>39685046</guid>
            <pubDate>Tue, 12 Mar 2024 21:15:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://liw.fi/40/">https://liw.fi/40/</a>, See on <a href="https://news.ycombinator.com/item?id=39685046">Hacker News</a></p>
<div id="readability-page-1" class="page"><article class="page">
    

    

    <section id="pagebody">
	

<div>
<ol>
	<li><a href="#index1h1">Introduction</a>
	</li>
	<li><a href="#index2h1">The core skills</a>
	</li>
	<li><a href="#index3h1">On productivity</a>
	</li>
	<li><a href="#index4h1">On governance</a>
	</li>
	<li><a href="#index5h1">On politics and ethics</a>
	</li>
	<li><a href="#index6h1">On diversity and quality</a>
	</li>
	<li><a href="#index7h1">On maintenance</a>
	</li>
	<li><a href="#index8h1">Big questions for projects</a>
	</li>
	<li><a href="#index9h1">Planning and estimating</a>
	</li>
	<li><a href="#index10h1">Express yourself in writing</a>
	</li>
	<li><a href="#index11h1">On doing work</a>
	</li>
	<li><a href="#index12h1">Advice on coding</a>
	</li>
	<li><a href="#index13h1">Developing a career</a>
	</li>
	<li><a href="#index14h1">Takeaway</a>
	</li>
	<li><a href="#index15h1">Acknowledgments</a>
	</li>
</ol>
</div>


<h2><a name="index1h1"></a>Introduction</h2>

<pre><code>10 PRINT "HELLO"
20 GOTO 10
</code></pre>

<p>In April, 1984, my father bought a computer for his home office, a
<a href="https://en.wikipedia.org/wiki/ABC_800#ABC_802">Luxor ABC-802</a>, with a
Z80 CPU, 64 kilobytes of RAM, a yellow-on-black screen with 80 by 25
text mode, or about 160 by 75 pixels in graphics mode, and two floppy
drives. It had BASIC in its ROM, and came with absolutely no games. If
I wanted to play with it, I had to learn how to program, and write my
own games. I learned BASIC, and over the next few years would learn
Pascal, C, and more. I had found my passion. I was 14 years old and I
knew what I wanted to do when I grew up.</p>

<p>When I was learning how to program, I thought it was important to
really understand how computers work, how programming languages work,
and how various tools like text editors work. I wanted to hone my
craft and produce the finest code humanly possible. I was wrong.</p>

<p>This essay is a condensation of what I wish I had been told after I
had learned the basics of how to code. Instead, I was told, in person
and in magazine articles, that by the time I would be twenty five
years old, I'd be too old to work as a programmer. It was critical
that I learn as many algorithms, data structures, and languages as
quickly as possible. Programming was, after all, a young man's game,
and required being able to stay up all night, every night, to crank
out more code than anyone else. That was the only way to succeed. It
turns out that none of that was true: not the part about youth, nor
the part of missing sleep, and especially not the part about gender.</p>

<p>As I write this essay, it will soon be forty years to the day since I
first wrote computer code. I've managed to support myself by
developing software, and I still write code every day. There is
nothing else I would rather do for a living. I can't point at
enormous successes and impressive feats, but I hope that surviving for
decades in the industry gives me sufficient credentials to speak about
software development.</p>

<p>This essay discusses some of the things I've learned about how to
successfully build software. These are things I've learned from my own
experience; I'm not a researcher, and there are few references to
sources, and this is largely not supported by evidence. I'm basing
this essay on my own experience, and if you disagree, that's fine.</p>

<p>My goal in this essay is to get the reader to think, to research, to
learn, to ponder. My goal is not to tell the reader how to think, what
to think, how things are, or to give the answer to every question
about every aspect of the process of building software.</p>

<h2><a name="index2h1"></a>The core skills</h2>

<p>Interesting and significant software is beyond the capacity of any one
person to build alone in a reasonable time frame. This means that the
fundamental, crucial, core skills in building software are
communication and collaboration.</p>

<p>It's not enough to know how computers work, how to use programming
languages, to know algorithms and data structures, or how to use the
varied tools involved in software construction. You also need to know
how to talk with other people to learn what software to build, what it
must do, how much effort is acceptable, how to manage the work, and
many more things. You have know how to work with others to build
something together that's bigger than any of you. If you and your team
can do it well, it'll be bigger than the sum of you. Team work can be
a force multiplier.</p>

<p>These are difficult skills to learn. I've found them much more
difficult than any technical part of building software.</p>

<p>Even in the projects where I'm the only person, there are at least
three people involved: past me, present me, and future me.</p>

<ul>
<li>Past me is a lazy and careless slob who always leaves a mess.</li>
<li>Present me does superb work, but has to cope with all the stupid
stuff done by past me, and needs to placate future me.</li>
<li>Future me is an egotistic and opinionated snob for whom nothing is ever
good enough.</li>
</ul>


<p>Getting these three people to get along well enough to get anything
done is a constant struggle for me. I use my journal to cope. I write
there what I do, why, and what the result is. I try to write so that
I'll understand it, even if I'm tired, or have just experienced a
short term neuralizer mind wipe a la Men in Black. I also plan
explicit iterations, with specific tasks, and I use the GTD system to
track things that still need to done.</p>

<h2><a name="index3h1"></a>On productivity</h2>

<p>What productivity means is not well defined for software development:
time is easy to measure, but the output is not. Most people have at
least a vague idea what productivity means to them. However, there are
known factors that impact productivity---these are customarily
ignored.</p>

<p>To do good work you need to take care of yourself. You have to sleep
well. You have to eat well. If you're tired, or have too much stress,
you'll make mistakes and bad decisions. These result in you doing bad
work. That's not a moral problem, but you may have to fix your own
mistakes. You'll enjoy life, and work, more if you do good work.</p>

<p>Hillel Wayne has talked about sleep and has sources. Recommended
reading:</p>

<ul>
<li><a href="https://www.hillelwayne.com/talks/ese/">https://www.hillelwayne.com/talks/ese/</a></li>
<li><a href="https://www.hillelwayne.com/talks/what-we-know-we-dont-know/">https://www.hillelwayne.com/talks/what-we-know-we-dont-know/</a></li>
</ul>


<p>You also need to have an environment that helps you do good work. Is
it quiet? Are there interruptions? Is the furniture comfortable, and
unlikely to hurt you in the long run? Do you have access to
necessities, such as a toilet and tea? Can you take a break from your
work area? Can you go for a walk: walking helps thinking. This is an
incomplete list.</p>

<p>Further, you need to manage yourself and your work in ways that suit
you. The best way to do this depends on who you are, your preferences
and experiences, and the kind of work you do. There is no single
solution that works for everyone all the time.</p>

<p>For myself, I've found applying the David Allen <a href="https://gtdfh.liw.fi/">Getting Things
Done</a> system has worked well, but whatever you
do, you need to know what you need to achieve, today and in the near
future, and you need to arrange things so that you can concentrate on
one thing at a time. Note, however, that I use the GTD system partly
to know that I can slack off; I do not aim to be as productive as
possible at all times.</p>

<p>It may be worth tracking what you've done. Reflecting on that can give
you a sense of achievement, and lets you see the progress you make.
This can be a motivation and morale booster.</p>

<p>Multi-tasking is fine for a computer, but your brain can only think
about one thing at a time and has really miserable context switching.</p>

<h2><a name="index4h1"></a>On governance</h2>

<p>When a group collaborates, one of the things they need to establish
early on is governance: basically, how does the group make decisions,
and how do they change them? The decisions range from the fundamental
to the mundane: Who is in the group? Is it a democracy, or hierarchy,
or some other structure? Who gets to have a say? What beverages does
the group get? What font should the website use?</p>

<p>Governance is difficult, but it's easier when it's explicit.
Uncertainty about responsibility and power results in confusion and
quarrel, and these can tear a group apart.</p>

<p>All groups eventually have conflicts. Managing this and resolving
differences is nominally the job of management, but really it falls on
everyone. This requires skills that seem to be rarely taught to
programmers, which is a shame.</p>

<p>Recommended reading:</p>

<ul>
<li><a href="https://www.contributor-covenant.org/">Contributor Covenant</a></li>
<li><a href="https://www.jofreeman.com/joreen/tyranny.htm">The Tyranny Of Structurelessness</a> by Jo Freeman</li>
</ul>


<h2><a name="index5h1"></a>On politics and ethics</h2>

<p>Software development is always a political and ethical act. Whenever
you're building software, you have to make a myriad of decisions:</p>

<ul>
<li>what shall the software do?</li>
<li>what resources will using it require?</li>
<li>how shall it be used?</li>
<li>what abilities shall using it require?</li>
<li>what things will be easy to do?</li>
<li>what things will be hard to do?</li>
<li>will the software empower its users, or force them to do things for
someone else's benefit?</li>
</ul>


<p>All these decisions have consequences, which will favor some people
over other people. Hence, they have political and ethical
aspects, which need to be considered.</p>

<p>As an example, if you make something that can be used with a cheap
phone, you enable most people in the world to use it. If you make
it so that it requires expensive hardware, you exclude many people,
especially poor people. Sometimes that is inevitable, and inherent in
the problem you're building software to solve, but it's still a
choice.</p>

<p>There may not be a right or wrong choice for a particular decision,
but there are always consequences. You have to consider them, and
decide if they're acceptable, and for whom.</p>

<p>In general, the software you build will reflect some values. Make sure
you know you agree with them.</p>

<p>Recommended reading:</p>

<ul>
<li><a href="https://www.crummy.com/software/BeautifulSoup/zine/">Tool Safety</a>
by Leonard Richardson</li>
</ul>


<h2><a name="index1h2"></a>On ethics and software freedom</h2>

<p>Free and open source software is the ethical kind of software.
Software freedom is essential for the well-being of people whose lives
are affected by the use of computers, whether they are using computers
directly or someone else is using computers to do things that matter
to other people.</p>

<p>I have been writing free software since 1986, when I first read the
<a href="https://www.gnu.org/gnu/manifesto.html">GNU Manifesto</a> on a BBS. (The
term "open source" is a synonym: I do not care to debate the
differences between the two.)</p>

<p>Much of my career has involved building open source software. My
preference for free and open source over non-free software is clear,
and well documented.</p>

<p>Entire libraries' worth of text has been produced over the past three
decades about the ethics of free and open source software versus other
kinds, and specifics of licenses. I'm not going to make a summary of
arguments here, or even point at recommended reading.</p>

<p>I wanted to make my position clear, in case it matters to the reader.
However, very little of this essay, including the topic of ethics, is
related to software freedom and applies equally to the development
non-free software.</p>

<h2><a name="index6h1"></a>On diversity and quality</h2>

<p>Human rights are fundamentally important. Treating other people well
is the right thing to do. All of this is of paramount priority,
whatever you do. If you don't agree with this, I have no hope for
you.</p>

<p>In a software development context, I've found that the most crucial
thing for building high quality software is to have diversity of
thought among the people contributing to it. The more different kinds
of thinking is brought into the project, the more likely the decisions
will work for more circumstances, for more people, and deal with more
things going wrong.</p>

<p>Diversity of thought comes from different kinds of people coming from
different backgrounds and having lived different kinds of lives.
Sometimes differences are visible externally, sometimes not.</p>

<p>When in doubt, choose different. If you exclude people based on them
being unlike you, you will likely be choosing poorly.</p>

<p>Diversity doesn't guarantee success. Nothing guarantees success.
However, uniformity guarantees you get one-sided answers. Sometimes
that's enough, but often it's not.</p>

<p>Collaboration and communication can certainly be more challenging in a
diverse setting. Do not fear this. Treat challenges as an opportunity
to learn, to become better at what you do.</p>

<p>People will make mistakes, and you too will make them. It's a good
policy to be benign and kind when others make mistakes, and expect
that from others in return. Punishing others for mistakes will leave
you alone.</p>

<h2><a name="index7h1"></a>On maintenance</h2>

<p>It is widely considered, in the software industry, that most of the cost of
software production comes after the initial release, in the so called
maintenance phase. The initial development might take a year or two,
maintenance will take decades.</p>

<p>One would think that this would lead to development practices, and
architectural decision, and everything else to be optimized for lower
maintenance costs. Unfortunately, the economic and other incentives
favor the opposite. In most companies, the event horizon tends to be a
quarter year, or a full year at most. It's not considered acceptable to spend
a lot more effort now to save most of the effort in the long term.</p>

<p>Even for personal hobby projects, there is often a strong urge to get
something working as soon as possible rather than taking one's time to
do things well,
but at least that's an internal urge, not external pressure. Even so,
the end result is the same: software that's harder to change later on,
when bugs are found, requirements change, or the software needs to be
adapted to changes in the surrounding system or ecosystem.</p>

<p>I am not alone in seeing the problem. I don't think it can be solved,
unless the economic incentives are radically changed. It's on
individual developers to try to reduce maintenance costs
surreptitiously, when they can, as a kind of preemptive guerrilla
maintenance.</p>

<h2><a name="index8h1"></a>Big questions for projects</h2>

<p>I find that it's important, but also helpful, to answer a few
questions at the beginning of every new project. The answers don't
have to be final, and it's OK to change them at any time: if you don't
adjust your thinking when you learn new things, you're not good at
what you do. The answers can even be inane, as long as they're honest.
The point to is to get you thinking about the questions at all.</p>

<ul>
<li><p>For whom are you building the software? Whose opinions about it
matter?</p>

<p>This tells you some of the stakeholders in the project. There will
likely be more stakeholders later on, but it's a start. Knowing who
the stakeholders are lets you concentrate on their needs. This helps
make the project a success.</p>

<p>The stakeholders might be the end users, or might be the CEO. If you
think it's the end users, but it's actually the CEO, you will
make decisions that make the CEO unhappy, and the project will fail,
and you won't understand why. And vice versa.</p></li>
<li><p>Why are you building the software?</p>

<p>"It's my job" might be a very practical answer. It's an answer that
means that you need to re-evaluate everything if the chance of
getting money is reduced. A different answer might be more about
passion, or mission, and this means your reaction to changing
circumstances is going to be different. There's no wrong answer
here, but be sure to be honest, at least to yourself.</p></li>
<li><p>What should the software do, in broad strokes? Also, what should it
not do?</p>

<p>This is about knowing if you're building a word processor or a
spreadsheet. It's not about detailed requirements or acceptance
criteria.</p></li>
<li><p>How should the software work, in broad strokes?</p>

<p>Again, big picture view. Are you making a command line tool, a web
service, an operating system, a mobile app, or something else? What
type and size of hardware?</p></li>
<li><p>What's important and what is just nice to have?</p>

<p>This gets into requirements and acceptance criteria. You need to
know them to build something good. Write them down. Also write down
how you verify you meet them.</p></li>
</ul>


<h2><a name="index9h1"></a>Planning and estimating</h2>

<p>Detailed planning beyond the very near future is difficult and usually
fails. This includes estimating how long the work will take. I avoid
doing this.</p>

<p>Planning and estimation are far from useless and should not be
neglected. I plan and I estimate, but within the limits of what I've
learned to be realistic. Specifically, I find it nearly impossible to
make detailed plans beyond a one or two week iteration. By detailed
plans I mean figuring out tasks at a granularity of what can be done
in one sitting.</p>

<p>Something surprising usually happens that ruins the plans beyond a
couple of weeks. It might be management changing priorities, or the
client changing their mind, or the company going bankrupt, or being
bought. It might be something else, but usually something happens. If
an iteration is short, you don't lose too much if all your planning
has to be thrown away.</p>

<p>You can also react more easily if you need to change course.</p>

<p>I stress that I'm talking about detailed planning here. It's fine to
make plans for what to do next month or next quarter, as long as
everyone involved knows that these plans are likely to have to change,
and the plans are kept suitably high level.</p>

<p>An analogy: if you're planning a road trip across the country, you
will probably want to plan what cities to drive through. You probably
don't want plan every stop to fill up on fuel or to eat. You want to
leave enough flexibility that you can change route if there's an
accident, or weather, or something else that may come as a surprise on
the way.</p>

<p>Iteration works. Nothing else seems to work for large software
projects. At least I've never seen any other approach work.</p>

<p>For me, iterations work better if they're focused. Having an explicit,
clear goal helps cut down on scope creep. It concentrates work to aim
at the iteration goal, rather than on what seems like a good idea in
the moment.</p>

<p>When I plan for an iteration, I break things into small tasks that can
be finished in one sitting. My estimates for tasks fall into four
buckets: up to a quarter hour, full hour, four hours, or too long. I
prefer the shorter tasks: they're easier to estimate, and easier to
do, and usually break fewer things. Anything that's too long needs to
be broken down further.</p>

<p>Some tasks are impossible to estimate. Debugging is a typical example.
How long will it take you to realize the Ethernet cable is broken, or
an operating system update broke things, or find the cause of some
other unforeseen problem? Debugging happens, and you had best leave
enough slack in your planning to cope with some troubleshooting.</p>

<p>Interruptions also happen. Sometimes you have no option but to react
and respond to them immediately. Leave room for that.</p>

<h2><a name="index10h1"></a>Express yourself in writing</h2>

<p>Your memory is fleeting and fallible. You will forget details. You
will forget important stuff. You will remember things wrongly. When
you collaborate, you and others will disagree on what was said, agreed
upon, and decided.</p>

<p>I was once in a meeting, with four people, plus the CTO. The CTO
forbade us to take notes: it seems the fad of the week was that
note taking is what makes meetings a waste of time. The meeting took
two hours. Afterwards, the four of us had about eight different
opinions of what had been decided. No follow-up actions were ever
taken.</p>

<p>Write things down. It seems like a stupid chore, tedious, boring, and
archaic, but it's the way organizations remember. Writing things down
is a super power that is easily overlooked.</p>

<p>Your team should keep meeting minutes, covering at least the
important decisions, and what actions everyone should do after the meeting.
Keep them short enough that they're easy write, and to read.
Archive them somewhere everyone can look at them at any time. This
helps people who weren't there, perhaps because they were on vacation,
or only join a year later.</p>

<p>Apropos meetings, learn how to have good meetings. What works for me
is an agenda set well ahead of time, with supporting materials.
Prepare for the meeting so that you don't waste everyone's time. Have
a chair who keeps discussion on track, and time boxed. Your process
for a good meeting might be different, but you should find one.</p>

<h2><a name="index11h1"></a>On doing work</h2>

<p>When making a change, make only one change at a time. If you can, split the
change you're making into smaller partial changes. Small changes are
easier to understand and less likely to be catastrophic.</p>

<p>Automate away friction: running tests, making a release, packaging,
delivery, deployment, etc. Do this from as early
on as feasible. Set up a pipeline where you can make a change and make
sure the software still works and willing users can start using the
changed software. The smoother you can make this pipeline, the easier
it will be to build the software.</p>

<p>Use version control for every project. Practice continuous integration
by merging changes to the main line of development often.</p>

<p>Develop an automated test suite that you trust: if tests pass, you can
make a release, or deploy to production. This usually means starting
the test suite early on in the project. Make sure the automated tests
cover all aspects you care about: the goal is to make sure that what
you give to others works they way it's intended. Update production
code and test code together.</p>

<p>Run the test suite many times in a row to identify flaky tests. Do not
suffer flaky tests.</p>

<p>Do stress or load testing, even if you only do it in simple ways. You
don't know your software and system can handle 10,000 concurrent users
until you've done so. Mine didn't.</p>

<p>In one job, we had a system that had worked fine in production for a
while. We deployed it to a customer who had a lot more traffic. Our
software failed. The problem turned out that we ran out of TCP port
numbers: we made an HTTP request for each incoming message, but we
didn't re-use the underlying TCP connection. There was so much traffic
that all possible port numbers were used, and then everything stalled.
The fix was to re-use the TCP connection, a change that took about one
line, and then everything worked fine. We would have found this
ourselves had we done even the simplest load testing.</p>

<p>If possible, use the software yourself. You'll understand your users
better.</p>

<p>Watch other people use the software. You'll understand your software's
sharp corners better. True story: it's hard for people who've not been
involved in the development of software to use the software, if it has
three different names for the same thing. Seeing someone struggle with
this makes it painfully obvious.</p>

<p>Treat testers as friends who help you find when you've made a mistake.
They're not out to humiliate you. Nobody is so perfect that they never
make mistakes or overlook details or forget entire features. Don't ask
me how I know.</p>

<h2><a name="index12h1"></a>Advice on coding</h2>

<p>Simple, obvious code is easier to write, easier to get to work, easier
to understand, and easier to change without breaking it. Simplify
things as much as you can, but no more than that. Sacrifice simplicity
at the altar of performance only when you have proven the performance
gains are worth it.</p>

<p>Complexity is the enemy you think is a friend.</p>

<p>Coupling and cohesion are still important concepts.</p>

<p>In every project, conceptual clarity is important. Also, keep your
terminology consistent. Confusion lurks where clarity hides. With
great confusion comes great annoyance and the certainty of bugs.</p>

<p>Speed is a feature to users, but not always for development, as too
much haste leaves too little time to think. Functionality can be a
misfeature.</p>

<p>Recommended reading:</p>

<ul>
<li><a href="https://web.stanford.edu/~ouster/cgi-bin/book.php">A Philosophy of Software
Design</a> by John
Ousterhout, which I've not yet read, only skimmed, but which people
I respect keep recommending to me.</li>
</ul>


<h2><a name="index13h1"></a>Developing a career</h2>

<p>You can choose to be a deep expert on something very specific, or to
be a generalist, or some mix. Choose wisely. There may not be any
wrong choice, but every choice has consequences.</p>

<p>Be humble. <a href="https://en.wikipedia.org/wiki/Witches_(Discworld)">Be Nanny, not Granny</a>. People may respect the powerful
witch more, but they like the kind one better.</p>

<p>Be open and honest. Treat others fairly. You don't have to believe in
karma for it to work, so make it work for you, not against you.</p>

<p>Help and lift up others. But at the same time, don't allow others to
abuse or take advantage of you. You don't need to accept bullshit. Set
your boundaries.</p>

<p>Ask for help when you need it, or when you get stuck. Accept help when
offered.</p>

<p>I am not the right person to talk about developing a career, but when
I've done the above, things have usually ended up going well.</p>

<h2><a name="index14h1"></a>Takeaway</h2>

<p>Take care of yourself. Sleep. Eat. Exercise. Rest. Relax. Take care of
other people, as best you can. People are important. Software is just
fun.</p>

<h2><a name="index15h1"></a>Acknowledgments</h2>

<p>Thank you to Brennen Bearnes, Richard Braakman, Tyler Cipriani, Greg
Grossmeier, Hackhörnchen, Soile Mottisenkangas, Daniel Silverstone,
and Enrico Zini, and for reviewing drafts of this essay. Any errors
are mine.</p>

      </section>

  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[On the new Dutch intelligence and security law (181 pts)]]></title>
            <link>https://berthub.eu/articles/posts/dutch-intelligence-and-security-law/</link>
            <guid>39684472</guid>
            <pubDate>Tue, 12 Mar 2024 20:24:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://berthub.eu/articles/posts/dutch-intelligence-and-security-law/">https://berthub.eu/articles/posts/dutch-intelligence-and-security-law/</a>, See on <a href="https://news.ycombinator.com/item?id=39684472">Hacker News</a></p>
<div id="readability-page-1" class="page"><article lang="en">
  

  
  

  <div>
  <p>“The Netherlands hosts some of the world’s largest internet exchanges. This obliges us to make the best use of these exchanges for our national security. With the Temporary Cyber Act, we will make optimum use of the data carried on our cables to protect The Netherlands against Russian and Chinese hackers” – <a href="https://www.rijksoverheid.nl/actueel/nieuws/2024/03/12/inlichtingendiensten-kunnen-sneller-en-beter-optreden-tegen-cyberdreiging">Dutch government announcement</a></p>
<blockquote>
<p>I wrote this earlier, but did not publish it then because I wasn’t happy with the post. However, since <a href="https://www.rijksoverheid.nl/actueel/nieuws/2024/03/12/inlichtingendiensten-kunnen-sneller-en-beter-optreden-tegen-cyberdreiging">the new Dutch Intelligence and Security act just passed</a>, it is relevant for an international audience. Earlier, I wrote a piece for <a href="https://berthub.eu/articles/posts/dutch-intel-law-about-intel/">about:intel</a>, and in there you can find further discussion in English.</p>
</blockquote>
<blockquote>
<p>Of specific note, this law vastly expands when the Dutch agencies can perform SIGINT on Dutch Internet Exchanges like the Amsterdam Internet Exchange. These powers extend to any form of communication, including private peering and Private Network Interconnects (PNI). Every cable must be made available for ’exploration’, and it is likely that due to the wording in the new law, any request for such examination will be granted by the commission that rules on these things. Such exploration includes the right to send data to foreign intelligence agencies, including non-European ones.</p>
</blockquote>
<blockquote>
<p>Secondly, the law also makes it clear that requests for full intercepts should now mostly be judged on technical terms (‘is the request complete’) and with much less emphasis of the merits of full SIGINT. But do read on for the details.</p>
</blockquote>
<p>Today, the upper house of Dutch parliament passed a law to reduce (I think) the oversight on the Dutch intelligence and security services, while simultaneously granting them more leeway to execute their powers. <a href="https://berthub.eu/articles/posts/resignation-as-intelligence-regulator/">In 2022, I resigned as regulator of the Dutch intelligence and security services because of this attempt</a>. Politico.eu wrote <a href="https://www.politico.eu/article/intelligence-watchdog-bert-hubert-netherlands-hacking-cyber-law/">a comprehensive article</a> about it, representing various points of view.</p>
<p>In this page I will try to explain how the new law works and what these changes mean. I also provide some context from the European Court of Human Rights<!-- and the EU Court of Justice-->. This page refers to the just passed version of the proposed legislation.</p>
<blockquote>
<p>There is also a <a href="https://berthub.eu/articles/posts/uitleg-over-de-wiv-2/">far longer page in Dutch</a>. This post is an attempt to summarise the changes for an international audience.</p>
</blockquote>
<center>
<p><img src="https://berthub.eu/articles/cables2.jpg" alt=""></p>

</center>
<h2 id="applicability">Applicability</h2>
<p>The Dutch Law on Intelligence and Security Services defines a broad set of powers. It is also a somewhat odd law with a long history.</p>
<blockquote>
<p>An English translation of a 2016 draft of the law <a href="https://ec.europa.eu/growth/tools-databases/tris/index.cfm/en/search/?trisaction=search.detail&amp;year=2016&amp;num=188&amp;dLang=EN">can be found on the European Commission website</a>. Note that this is a draft and it definitely differs from <a href="https://wetten.overheid.nl/BWBR0039896">the law that is in force (Dutch)</a>.</p>
</blockquote>
<p>A remarkable aspect of the law is that it is universally applicable - it extends as much powers to spy on Dutch people as those from other countries. There are no general protections for people from or in The Netherlands or in the EU. This stands in stark contrast to US legislation which provides some privacy protection to ‘US Persons’, but to no one else.</p>
<p>In addition, the powers can be used around the world - Dutch agencies are free to hack computers anywhere, or to intercept communications anywhere.</p>
<h2 id="interests">Interests</h2>
<p>The services can investigate anything or anyone that gives rise to the suspicion that their activities or goals might be harmful for the survival of the system of democratic rule of law, for security or other important interests of the state. In addition, the services can investigate other countries.</p>
<h2 id="powers">Powers</h2>
<p>The powers granted to the services are broad, but also largely ‘read-only’. The services do not operate drones (unlike the CIA), and they have limited powers to intervene or disturb things, with one exception.</p>
<ul>
<li>Article 40: Observing and following people and objects</li>
<li>Article 41: Operate &amp; instruct agents, who are allowed to break other laws under specific conditions</li>
<li>Article 42: Enter &amp; investigate closed objects and premises</li>
<li>Article 43: Collect, store and match DNA data from people</li>
<li>Article 44: Intercept and investigate physical post and packages</li>
<li>Article 45: Hack ‘automated works’, computers in the very broadest sense of the word</li>
<li>Article 47: Intercept any form of (tele)communications from a specific person, organization of technical identifier</li>
<li>Article 48: Intercept &amp; record whole cables</li>
<li>Article 49: Investigate data recorded under article 48 to find targets or technical identifiers</li>
<li>Article 50: Select part of the data recorded under article 48 for use in intelligence/security investigations</li>
<li>Article 54: Requisitioning data</li>
<li>Article 60: Perform automated analysis and “machine learning” on all data, including 48 data</li>
<li>Article 73: “Undertake measures to protect interests of the services”</li>
</ul>
<h2 id="subjects-of-these-powers">Subjects of these powers</h2>
<p>The law is somewhat unique that all these powers are only tied to the <em>interests</em> the services protect, and not to specific people. So unlike police forces, the services can spy not only on direct targets of investigation, they can also eavesdrop ’non-targets’ (who might know interesting things about targets) or even hack ’third parties’ that could function as a stepping stone to useful information.</p>
<p>Before the services can use their investigatory powers on non-targets or third parties, they do have to explain why this is the only way for an investigation to proceed.</p>
<h2 id="oversight-warrant-process">Oversight, warrant process</h2>
<p>For all of the powers, there must be internal sign-off. Depending on the nature, this sign-off can be mandated to lower ranking employees. The most infringing powers however need to be approved by the relevant minister. Then, the <a href="https://tib-ivd.nl/">ex-ante regulator</a> rules if this permission was obtained lawfully. The minister takes the political decision, the ex-ante regulator verifies this decision. The opinion of the ex-ante regulator is binding.</p>
<p>In addition, there is <a href="https://ctivd.nl/">a non-binding ex-post regulator</a>.</p>
<h2 id="administrative-warrant-extensions">Administrative warrant extensions</h2>
<p>The powers are available for use on people or organizations. If someone turns out to have an additional phone number, or starts using a different phone number, a warrant can administratively be updated with this new information. No new permission process is required. In addition, if a warrant was written to target an organization, if this organization was described well, newly discovered members of the organization can also be added to a warrant administratively.</p>
<p>Crucially, such administrative extensions can not be used to add non-targets or third parties - these can not have been a member of a well described organization.</p>
<h2 id="sigint">SIGINT</h2>
<p>The SIGINT or bulk interception powers are complicated. The intelligence and security law considers that the copying, collecting and storing of data is a lesser infringement than actually looking at the data. This is in line with recent European Court of Human Rights precedents. The infringement of privacy increases at every step of the intelligence process, from collection to storing to selecting relevant communications to exploiting such communications for intelligence/security purposes. Crucially however, merely intercepting and storing data is already an infringement that needs a justification.</p>
<p>Article 48 provides for the collection powers. Services need to describe why a specific cable is interesting, and what they expect to achieve with that data. They must also use a well-targeted cable, one that is expected to best provide the data the services are interested in. There are also some restrictions on traffic with origin and destination in The Netherlands.</p>
<p>Article 49 enables technical analysis of this data to see if it includes interesting targets or subjects. Article 50 meanwhile allows for the selection of communications for dissemination to intelligence teams.</p>
<p>Finally, with specific permission, article 60 allows for the algorithmic analysis of all data intercepted under article 48. It was not found possible to properly limit what “algorithmic analysis” might be, so this was left to the ex-ante regulator to determine. In an adversarial reading, “finding all email from a specific person” might be dressed up as an algorithmic analysis. This means article 60 could be an alternative to article 50, and thus it needs the same level of regulatory scrutiny.</p>
<h2 id="proposed-changes">Proposed changes</h2>
<p>In the proposed additional ‘cyber law’, several things would change:</p>
<ul>
<li>The non-binding ex-post regulator gets binding oversight powers on select capabilities. To actually stop an operation involves a heavyweight procedure which can also be stayed. In addition, the regulator needs a lot of new highly technical staff which has been hard to find.</li>
<li>Hacking operations no longer need to detail plans or technical risks to the regulator. These risks include the leaking of ‘zero days’, or damaging non-target or third party services. In addition, technical risk includes the possibility that the facilities installed by the services could be abused by yet other services or hackers.</li>
<li>Hacking operations no longer need to be tied to specific groups of people or organizations. It will become possible to hack into generic companies, for example to enable the retrieval of phone location data in the future. For such strategic hacks on infrastructure, no technical risks need to be described to the regulator.</li>
<li>Services gain the power to intercept and store any cable for a year, no matter where it leads to, and also store the data for a year. No justification needs to be given for this exploration beyond that there is an interest in figuring out what traffic a cable carries. Data collected under this article may be investigated for a whole year, but (crucially!) not for any other purpose than finding targets. Such exploratory data can be shared with foreign and non-EU intelligence agencies.</li>
<li>In addition, the article 48 powers can now be applied based solely on ‘indications’ what the technical plans are with this data. The regulators are instructed to mostly only study these indications, to the detriment of proportionality, subsidiarity and ‘as targeted as possible’ requirements. The indications are non-binding and the services have the liberty to do other things during the year if they need to. <strong>In effect, regulators do not have a lot left to regulate with this change</strong>.</li>
<li>The administrative permissionless extension of warrants is extended to <em>NON-TARGETS</em>. This means that if a hacker group is being targeted, warrants for eavesdropping, hacking, requisitioning are automatically extended to the <em>victims</em> of those hackers as well. This means that the additional test that used to apply to non-targets is no longer required, and instead, non-targets now get less protection than targets (!).</li>
<li>Algorithmic analysis on bulk intercepted data no longer needs regulatory approval. Since it is not well described what this automated analysis entails, this is a large expansion of powers that are not regulated up front. The European Court of Human Rights argues explicitly that such automated analysis needs safeguards (see below)</li>
</ul>
<h2 id="some-context">Some context</h2>
<ul>
<li><a href="https://hudoc.echr.coe.int/eng?i=001-210077">CASE OF BIG BROTHER WATCH AND OTHERS v. THE UNITED KINGDOM</a> - with particular attention to:
<ul>
<li>“330. The Court considers that Article 8 applies at each of the above stages. While the initial interception followed by the immediate discarding of parts of the communications does not constitute a particularly significant interference, the degree of interference with individuals’ Article 8 rights will increase as the bulk interception process progresses. In this regard, the Court has clearly stated that even the mere storing of data relating to the private life of an individual amounts to an interference within the meaning of Article 8 (see Leander v. Sweden, 26 March 1987, § 48, Series A no. 116), and that <strong>the need for safeguards will be all the greater where the protection of personal data undergoing automatic processing is concerned</strong> (see S. and Marper, cited above, § 103). The fact that the stored material is in coded form, intelligible only with the use of computer technology and capable of being interpreted only by a limited number of persons, can have no bearing on that finding (see Amann v. Switzerland [GC], no. 27798/95, § 69, ECHR 2000‑II and S. and Marper, cited above, §§ 67 and 75).”</li>
</ul>
</li>
</ul>

</div>

  



</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Fig is sunsetting (125 pts)]]></title>
            <link>https://fig.io/blog/post/fig-is-sunsetting</link>
            <guid>39683889</guid>
            <pubDate>Tue, 12 Mar 2024 19:33:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fig.io/blog/post/fig-is-sunsetting">https://fig.io/blog/post/fig-is-sunsetting</a>, See on <a href="https://news.ycombinator.com/item?id=39683889">Hacker News</a></p>
<div id="readability-page-1" class="page"><section><p>Happy 2024! Last year was a big year for our team: we joined Amazon in August,
and by November, we had already shipped
<a href="https://docs.aws.amazon.com/codewhisperer/latest/userguide/command-line-getting-started-installing.html">Amazon CodeWhisperer for command line</a>.</p><p>We’re keenly aware of the impact generative AI is having on the way developers
build. We’re hard at work innovating and we have a lot of exciting new things
coming to CodeWhisperer for command line later this year. With that said, we
have decided to fully focus our efforts on these new features, and given that,
we will be sunsetting Fig on September 1, 2024.</p><p>We will continue supporting Fig until September 1. Until then, we encourage
users to migrate over to
<a href="https://docs.aws.amazon.com/codewhisperer/latest/userguide/command-line-getting-started-installing.html">CodeWhisperer for command line</a>.
To make this transition as easy as possible, users can upgrade to CodeWhisperer
for command line directly from the Fig dashboard (more below).</p><h3 id="whats-the-difference-between-fig-and-codewhisperer-for-the-command-line"><a href="#whats-the-difference-between-fig-and-codewhisperer-for-the-command-line">What’s the difference between Fig and CodeWhisperer for the command line?</a></h3><p><a href="https://docs.aws.amazon.com/codewhisperer/latest/userguide/command-line-getting-started-installing.html">CodeWhisperer for command line</a>
offers Fig’s core features including 1) IDE-style completions for 500+ CLIs
and 2) natural language-to-bash translation. It’s free on the Individual tier
and is designed to be faster and more reliable than Fig. We have several
exciting new CodeWhisperer for command line features coming in 2024 including
support for Linux, AI chat, inline AI completions, autocomplete in SSH, and
private autocomplete.</p><p>CodeWhisperer for command line does not include features similar to Fig Scripts,
Dotfiles, Plugins, or Servers and we do not plan to support these features any
time soon.</p><h3 id="how-do-i-migrate"><a href="#how-do-i-migrate">How do I migrate?</a></h3><p>The Fig Dashboard UI will handle the migration for you — it takes just a few
minutes. The migration process exports your data to your local device, installs
CodeWhisperer for command line, transfers your settings, then uninstalls Fig.
Once the CodeWhisperer app is installed, you will be prompted to grant macOS
accessibility permissions and then login or sign up.</p><p><strong>Note</strong>: You will need to be on v2.18 to see the new Fig Dashboard UI.</p><h3 id="what-happens-to-my-data"><a href="#what-happens-to-my-data">What happens to my data?</a></h3><p>Fig will delete all user data on September 1. Users can export their data to
their local device any time before then by running <code>fig export</code>. The Fig to
CodeWhisperer migration flow will automatically do this for users.</p><h3 id="can-i-use-fig-and-codewhisperer-for-command-line-together"><a href="#can-i-use-fig-and-codewhisperer-for-command-line-together">Can I use Fig and CodeWhisperer for command line together?</a></h3><p>Yes! Before Fig is sunset you can use Fig and CodeWhisperer at the same time.
When both tools are installed, Fig’s Autocomplete feature will turn off in favor
of CodeWhisperer for command line. This means you can keep using Fig for
Scripts, Dotfiles, Plugins, and Servers until September 1st but start using
CodeWhisperer for command line for its more reliable CLI completions and AI
straight away.</p><p>If you have any questions about the migration, please just create a discussion
in our
<a href="https://github.com/withfig/fig/issues/new?assignees=&amp;labels=&amp;projects=&amp;template=1_general_question.md">public community</a>.</p><h3 id="thank-you"><a href="#thank-you">Thank you</a></h3><p>To all Fig’s users, customers, and contributors, we are incredibly grateful for
your feedback, contributions, and support over the years. We are thrilled to
have made such an impact and we are beyond excited to continue working with you
all while we continue to ship!</p><p>Brendan, Matt, and the Amazon CodeWhisperer for command line team.</p></section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How Mandelbrot set images are affected by floating point precision (166 pts)]]></title>
            <link>https://github.com/ProfJski/FloatCompMandelbrot</link>
            <guid>39683455</guid>
            <pubDate>Tue, 12 Mar 2024 19:01:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ProfJski/FloatCompMandelbrot">https://github.com/ProfJski/FloatCompMandelbrot</a>, See on <a href="https://news.ycombinator.com/item?id=39683455">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">FloatCompMandelbrot</h2><a id="user-content-floatcompmandelbrot" aria-label="Permalink: FloatCompMandelbrot" href="#floatcompmandelbrot"></a></p>
<p dir="auto">A program to explore how Mandelbrot set images are affected by floating point precision.</p>
<p dir="auto">Dependencies: <a href="https://www.boost.org/doc/libs/1_79_0/libs/multiprecision/doc/html/index.html" rel="nofollow">Boost::Multiprecision</a> (How to <a href="https://www.boost.org/doc/libs/1_79_0/more/getting_started/index.html" rel="nofollow">Install Boost</a> ) and <a href="https://github.com/raysan5/raylib">RayLib</a> for graphics.  Boost::Multiprecision may be easily replaced by other floating-point or rational implementations, like GiMP or GMPF by just changing the <code>#include</code>s and <code>typedef</code>s at the beginning.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">The Problem In A Nutshell</h2><a id="user-content-the-problem-in-a-nutshell" aria-label="Permalink: The Problem In A Nutshell" href="#the-problem-in-a-nutshell"></a></p>
<p dir="auto">How much is a Mandelbrot set image affected by the floating point precision of the code used to compute it?</p>
<ol dir="auto">
<li>The points in a region of a Mandelbrot set image have <em>sensitive dependence upon initial conditions.</em>  (This property is the "chaos" in "chaos theory.")  A small deviation in the value of C in Z=Z^2+C can lead to a very different outcome for one point versus another point that is only a miniscule distance from it.  This fact remains true at all scales of magnification, i.e., "miniscule" can be arbitrarily small.</li>
<li>Floating point math cannot perfectly represent many rational numbers.  Moreover, floating point math can generate inaccuracies that can snowball with repeated calculations, including repeated operations of multiplication and addition.  Repeated multiplication and addition are the core of the Mandelbrot set algorithm.</li>
<li>Since the Mandelbrot set is always generated on a computer, typically using floating point math of some precision or other, we ask: How much of a Mandelbrot set image's visual complexity is due to the mathematical properties of the algorithm, and how much is due to floating point inaccuracies in its computer calculation?  Could some of the familiar visual properties of the Mandelbrot set simply be "noise" introduced by floating point calculations that have iterated thousands or even millions of times?</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Problem at Large</h3><a id="user-content-the-problem-at-large" aria-label="Permalink: The Problem at Large" href="#the-problem-at-large"></a></p>
<p dir="auto">This question has been posed <a href="https://math.stackexchange.com/questions/2731582/are-the-intriguing-and-lovely-mandelbrot-set-hoops-and-curls-the-result-of-float" rel="nofollow">at least once on Stack Exchange</a> but the original post was not understood, so no satisfactory answer resulted.</p>
<p dir="auto">A 2013 academic paper, <a href="https://mathr.co.uk/blog/2018-08-20_trustworthy_fractals.html" rel="nofollow">"Images of Julia Sets That You Can Trust" </a>, by L. H. de Figueiredo, D. Nehab, J. Stolfi, and J. B. Oliveira, raises similar questions for Julia sets, which are mathematical relatives of the Mandelbrot set.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Background</h3><a id="user-content-background" aria-label="Permalink: Background" href="#background"></a></p>
<p dir="auto">If you are unfamiliar with the limitations of floating point arithmetic, read the classic essay <a href="https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html" rel="nofollow">"What Every Computer Scientist Should Know About Floating-Point Arithmetic"</a> by David Goldberg for a good overview.  Basic introductions to the math involved in generating the Mandelbrot set are ubiquitous if you are unfamiliar with the algorithm.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">The Problem and Solution in More Detail</h3><a id="user-content-the-problem-and-solution-in-more-detail" aria-label="Permalink: The Problem and Solution in More Detail" href="#the-problem-and-solution-in-more-detail"></a></p>
<p dir="auto">For a more detailed statement of the problem and the design of this program, <a href="https://github.com/ProfJski/FloatCompMandelbrot/blob/master/FloatCompMset.md">read the more detailed analysis here</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">My Solution in a Nutshell</h2><a id="user-content-my-solution-in-a-nutshell" aria-label="Permalink: My Solution in a Nutshell" href="#my-solution-in-a-nutshell"></a></p>
<p dir="auto">I wrote easy-to-modify c++ code that simply uses <code>typedef</code> to allow the user to explore the Mandelbrot set and to compare how the Mandelbrot set image looks when generated using the <em>same parameters</em> on the <em>same points</em>, but using three different floating-point implementations to calculate the result.  In addition to standard <code>float</code> and <code>double</code> types, the <code>Boost::Multiprecision</code> <a href="https://www.boost.org/doc/libs/1_79_0/libs/multiprecision/doc/html/boost_multiprecision/tut/floats/cpp_bin_float.html" rel="nofollow">cpp_bin_float</a> class was used to implement extended-precision floating-point types of the user's choice.</p>
<p dir="auto">The program is multi-threaded so it generates the desired Mandelbrot set image in all three float types simultaneously.  Keys <code>&lt;1&gt;</code>, <code>&lt;2&gt;</code>, and <code>&lt;3&gt;</code> display the image as generated by the three different types of floating point precision that the user has selected.  Keys <code>&lt;4&gt;</code>, <code>&lt;5&gt;</code>, and <code>&lt;6&gt;</code> <em>subtract pairs of images</em> to highlight any pixels that are different:</p>
<ul dir="auto">
<li><code>Key &lt;4&gt;</code> -- Subtracts image 1 from 2</li>
<li><code>Key &lt;5&gt;</code> -- Subtracts image 1 from 3</li>
<li><code>Key &lt;6&gt;</code> -- Subtracts image 2 from 3</li>
</ul>
<p dir="auto">Green pixels indicate a positive value following the subtraction, red pixels a negative value.
Basic statistics of the comparison are given in console output, such as the total number of pixels that are different, the percentage of the total image that is different, and the greatest difference between the values of the pixels (which tends to be close to the max iterations that one has selected for the Mandelbrot algorithm).  The console output also prints basic information about the three types one has chosen at start-up, such as digits of precision.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">An Example</h3><a id="user-content-an-example" aria-label="Permalink: An Example" href="#an-example"></a></p>
<p dir="auto">Here are some sample images from a zoom in the neighborhood of C = -0.104943 + 0.927572i. Magnification is approximately 33E+6. The distance between adjacent pixels is 1/(2^33).  Max iterations is 30K.  Here's the image generated with standard <code>double</code> (53 bits of precision):</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ProfJski/FloatCompMandelbrot/blob/master/images/Set3-CppDouble.png"><img src="https://github.com/ProfJski/FloatCompMandelbrot/raw/master/images/Set3-CppDouble.png" alt="Standard double"></a></p>
<p dir="auto">Here is the same image generated with <code>cpp_bin_float_quad</code> (113 bits of precision).  Superficially it looks largely the same:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ProfJski/FloatCompMandelbrot/blob/master/images/Set3-CppQuad.png"><img src="https://github.com/ProfJski/FloatCompMandelbrot/raw/master/images/Set3-CppQuad.png" alt="Quad float"></a></p>
<p dir="auto">But upon subtraction, we find that 8.77% ofthe pixels are different!  92,007 out of 1,048,576 pixels have different values.  These differences include points estimated to be in the Mandelbrot Set in one image and not in the other, as well as points which exceeded the orbit boundary check (i.e., the magnitude of Z &gt; 2) in both images but at different iterations.  Here's what we get when we subtract the Quad image from the Double precision image and color-code the difference:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ProfJski/FloatCompMandelbrot/blob/master/images/Set3-QuadMinusDouble.png"><img src="https://github.com/ProfJski/FloatCompMandelbrot/raw/master/images/Set3-QuadMinusDouble.png" alt="Difference"></a></p>
<p dir="auto">Green pixels are where Quad &gt; Double; red pixels are where Double &gt; Quad.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Four Screen View</h3><a id="user-content-four-screen-view" aria-label="Permalink: Four Screen View" href="#four-screen-view"></a></p>
<p dir="auto">Press <code>Key &lt;7&gt;</code> with the mouse over a pixel in screen views 1, 2 or 3 to trigger Four-Screen view.  Top left and right are float types 1 and 2.  Bottom left is the difference between them.  The bottom right screen displays the trajectory of the point against the background of the whole Mandelbrot set.  The first float type is plotted in blue, the second in red, the third in yellow.  This allows you to see how different floating point implementations lead to different trajectories, which lead to different final values for a single point in the image.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ProfJski/FloatCompMandelbrot/blob/master/images/DiffOrbitsFloatDoubleQuad.png"><img src="https://github.com/ProfJski/FloatCompMandelbrot/raw/master/images/DiffOrbitsFloatDoubleQuad.png" alt="Four Screen View"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Trajectory view</h3><a id="user-content-trajectory-view" aria-label="Permalink: Trajectory view" href="#trajectory-view"></a></p>
<p dir="auto">Press <code>Key &lt;8&gt;</code> to see the trajectory screen by itself.  In this display mode, the background remains that of the zoomed-in image, rather than the whole Mandelbrot set, but the screen coordinates of the trajectories are still (-2-2i) to (2+2i).  Leaving the background image of the zoomed-in fractal better allows you to select a point where trajectories clearly diverge, which are often near the edges of the set or other high-chaos areas.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ProfJski/FloatCompMandelbrot/blob/master/images/TrajectoryView.png"><img src="https://github.com/ProfJski/FloatCompMandelbrot/raw/master/images/TrajectoryView.png" alt="Trajectory View"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Lines to Customize in the Code</h2><a id="user-content-lines-to-customize-in-the-code" aria-label="Permalink: Lines to Customize in the Code" href="#lines-to-customize-in-the-code"></a></p>
<p dir="auto">The three floating point types are <code>typedef</code>ed as <code>first_float</code>, <code>second_float</code> and <code>third_float</code> throughout the code.  Variable names also have these names as suffixes.  Yes, templated code would be more elegant than coding everything in triplicate!  I began with templated code, but finding the proper arguments to pass to <code>std::asynch</code> for templated overloaded functions proved too hard.</p>
<p dir="auto">Places to customize your settings are preceded by the comment tag <code>// OPTION</code>, for which string you can search.  The basic options are below.  The first setting is the most important: selecting your floating point types.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Set your types</h3><a id="user-content-set-your-types" aria-label="Permalink: Set your types" href="#set-your-types"></a></p>
<p dir="auto">Alter these three lines in the code to choose your own floating point implementations and <em>voila!</em> You are all set to go.  It will be helpful to order your types from the least precise for <code>first_float</code> to the most precise for <code>third_float</code>.</p>
<div data-snippet-clipboard-copy-content="typedef double first_float;
typedef cpp_bin_float_quad second_float;
typedef cpp_bin_float_oct third_float;"><pre><code>typedef double first_float;
typedef cpp_bin_float_quad second_float;
typedef cpp_bin_float_oct third_float;
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Tweak your multi-threading preferences (optional)</h3><a id="user-content-tweak-your-multi-threading-preferences-optional" aria-label="Permalink: Tweak your multi-threading preferences (optional)" href="#tweak-your-multi-threading-preferences-optional"></a></p>
<p dir="auto">Depending on how many cores you have you may wish to change <code>unsigned int numThreads;</code> This setting creates <code>numThreads</code> <em>for each of the three floating point types</em>.  So <code>unsigned int numThreads=4;</code> will start 12 threads initially.  Built-in types (like <code>float</code>, <code>double,</code> <code>long double</code>) go much faster on most platforms because of intrinsic processor support.  So threads dedicated to those types will finish far sooner than those using  <code>Boost::multiprecision</code>'s <code>cpp_bin_float</code> types.  Software-emulated floating-point support is always slower.  That's why they invented FPUs.</p>
<p dir="auto">Each thread calculates a batch of pixels at a time.  You can tweak the amount per batch here:</p>
<div data-snippet-clipboard-copy-content="unsigned int batchSize_first_float=10240;
unsigned int batchSize_second_float=2048;
unsigned int batchSize_third_float=512;"><pre><code>unsigned int batchSize_first_float=10240;
unsigned int batchSize_second_float=2048;
unsigned int batchSize_third_float=512;
</code></pre></div>
<p dir="auto">Choosing a built-in type like <code>double</code> for the <code>first_float</code> type, and asigning it a large number of pixels per batch (like 10K above), can be useful to display an image quickly on screen 1 to help perfect your center and zoom.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Tweak how your starting point is calculated (optional)</h3><a id="user-content-tweak-how-your-starting-point-is-calculated-optional" aria-label="Permalink: Tweak how your starting point is calculated (optional)" href="#tweak-how-your-starting-point-is-calculated-optional"></a></p>
<p dir="auto">Every pixel on the screen has X and Y coordinates (ranging 0-1023) which correspond to some point on the complex plane and constitute the value of C in the formula Z=Z^2+C.  Presuming that your floating point types range from least precise (for <code>first_float</code>) to most precise, as you zoom deeper, the calculation of C will begin to be affected by the precision of your floating point types, beginning with <code>first_float</code> losing precision in its last decimal places.  You can choose whether to start iterating with a value for C that is calculated separately for each type, in its own precision, which may lead to slightly different values for C.  Or you can start iterating with the exact same value for C for all types by simply casting the value for C in <code>first_float</code> into the higher-precision types.  The latter approach can highlight differences in value due solely to floating-point inaccuracy accumulated through iteration.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Basic program controls</h2><a id="user-content-basic-program-controls" aria-label="Permalink: Basic program controls" href="#basic-program-controls"></a></p>
<p dir="auto">The <strong>mouse left-click</strong> is used to recenter the image; keys are used for everything else.  Recentering and zooming takes a few seconds for the screen to reset.  The GUI interface is functional but not as pretty or convenient as professional programs.  This tool is made for research.  Get Ultrafractal or Kalles Fraktaler to make beautiful images easily.  My color palette is ugly as sin.</p>
<ul dir="auto">
<li><strong>Period</strong> - Zooms in by a factor of two</li>
<li><strong>Comma</strong> - Zooms out by a factor of two.</li>
<li><strong>Semi-colon</strong> - Zooms in by a factor of eight.  These are the only zoom controls.</li>
<li><strong>M, K, O</strong> - Increase max iterations by 1, 10 or 100, respectively.  <strong>Shift+O</strong> increases to the nearest whole 1000.</li>
<li><strong>N, J, I</strong> - Decrease max iterations by 1, 10 or 100, respectively.  <strong>Shift+I</strong> decreases by 1000.</li>
<li><strong>P</strong> - Pause calculation toggle.  This waits for existing threads to complete and then waits for unpause to spawn new ones, so its effect is not instant if you are working on some computationally intensive threads which must finish first.  Keep your batch sizes small for responsiveness.</li>
<li><strong>U</strong> - Unpause.  Doesn't toggle.</li>
<li><strong>R</strong> - Revert to prior coordinates for image center.  Works once.</li>
<li><strong>C</strong> - Toggle a small semi-transparent indicator of the center of the screen.  Useful for zooming.</li>
<li><strong>G</strong> - Toggle a semi-transparent grid overlay with circles various radii and a rectangle around the middle of the screen.  Useful for centering the screen before zooming and estimating orbits.</li>
<li><strong>/</strong> (Forward slash) with mouse over a pixel - Gives coordinate info for that pixel in console</li>
<li><strong>8</strong> with mouse over a pixel - Plots trajectory of that point (screen mode 8) in all three types.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">The Problem and Solution in More Detail</h2><a id="user-content-the-problem-and-solution-in-more-detail-1" aria-label="Permalink: The Problem and Solution in More Detail" href="#the-problem-and-solution-in-more-detail-1"></a></p>
<p dir="auto">For a more detailed statement of the problem and the design of this program, <a href="https://github.com/ProfJski/FloatCompMandelbrot/blob/master/FloatCompMset.md">read the more detailed analysis here</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Vehicle brakes produce charged particles that may harm public health: study (134 pts)]]></title>
            <link>https://news.uci.edu/2024/03/12/uc-irvine-study-vehicle-brakes-produce-charged-particles-that-may-harm-public-health/</link>
            <guid>39683351</guid>
            <pubDate>Tue, 12 Mar 2024 18:53:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://news.uci.edu/2024/03/12/uc-irvine-study-vehicle-brakes-produce-charged-particles-that-may-harm-public-health/">https://news.uci.edu/2024/03/12/uc-irvine-study-vehicle-brakes-produce-charged-particles-that-may-harm-public-health/</a>, See on <a href="https://news.ycombinator.com/item?id=39683351">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="single-wrapper">

			<main id="main">
									
<article id="post-95331">

	

	
	<div>
		
		
<p><strong>Irvine, Calif., March 12, 2024</strong> <strong>— </strong>Scientists know relatively little about particles released into the air when a vehicle driver brakes, though evidence suggests those particles may be more harmful to health than particles exiting the tailpipe.</p>



<p>In a new study in <em><a href="https://www.pnas.org/doi/10.1073/pnas.2313897121">Proceedings of the National Academy of Sciences</a></em>, University of California, Irvine researchers show how most of these particles emitted during light braking carry an electric charge – something that could potentially be exploited to help reduce air pollution from vehicles.</p>



<p>“We found that up to 80% of aerosol particles emitted from braking are electrically charged, and that many of them are in fact highly charged,” saidAdam Thomas, a doctoral candidate in the lab of Jim Smith, professor of chemistry, who led the study alongside UCI postdoctoral researcher Paulus Bauer.</p>



<p>To do the work, the team used a large lathe to spin a detached brake rotor and caliper. They then measured the electric charge of the aerosols emitted into the air and discovered the 80 percent figure.</p>



<p>“I was very surprised,” said Smith. “We were also surprised that this has not really been studied given how common cars are in human societies.”</p>



<p>The research is part of a broader team effort at UCI to understand the public health impacts of non-tailpipe emissions in areas beset by car traffic, including many areas in Southern California.</p>



<p>“The toxicity and health effects of brake wear particles are largely unknown,” said Manabu Shiraiwa, professor of aerosol chemistry at UCI and one of the researchers behind the university-wide project. “Recent results from my lab indicate that they may induce oxidative stress, but more research is needed.”</p>



<p>The new study reveals a problem that may grow as electric cars become more and more common over the next several decades. Electric cars, Smith explained, are not truly zero-emission vehicles, so municipalities need to think about strategies to reduce emissions from brake use as well as tailpipes.</p>



<p>The team found that the percentage of charged particles emitted largely depended on the material makeup of brake pads. Because the particles carry an electric charge, this should make it relatively easy to remove from the air.</p>



<p>“If they are charged, they can be removed easily from the air before they have a chance to have an impact at all on health,” said Smith. “All you would need to do is to collect them with an electrostatic precipitator – a device that exposes the charged particles to an electric field and efficiently sweeps them away.”</p>



<p>The public health risk posed by brake emissions is not borne equally by a population – lower-income parts of cities tend to be more traffic-heavy than others, which creates an environmental justice issue wherein certain socioeconomic classes are more exposed to brake emissions than others.</p>



<p>According to Professor Barbara Finlayson-Pitts, Distinguished Emeritus Professor of chemistry and the principal investigator of the project at UCI, emissions from braking are not well-characterized but are potentially significant in high-traffic areas. “These areas are often in poorer communities and highlight an important aspect of environmental justice that has been largely overlooked,” Finlayson-Pitts said.</p>



<p>The UCI team is working with local community organizations like the Madison Park Neighborhood Association in Santa Ana, which is helping disseminate UCI’s scientific findings to the public. Funding for the study came from fees paid by Volkswagen as part of a 2016 settlement reached with the California Department of Justice, which found that the company used devices that contributed to increased air pollution.</p>



<p><strong>About UCI’s Brilliant Future campaign:</strong> Publicly launched on Oct. 4, 2019, the <a href="https://brilliantfuture.uci.edu/">Brilliant Future campaign</a> aims to raise awareness and support for UCI. By engaging 75,000 alumni and garnering $2 billion in philanthropic investment, UCI seeks to reach new heights of excellence in&nbsp;student success, health and wellness, research and more. The&nbsp;School of Physical Sciences plays a vital role in the success of the campaign. Learn more by visiting <a href="https://brilliantfuture.uci.edu/uci-school-of-physical-sciences/">https://brilliantfuture.uci.edu/uci-school-of-physical-sciences/</a>.</p>



<p><strong>About the University of California, Irvine:</strong>&nbsp;Founded in 1965, UCI is a member of the prestigious Association of American Universities and is ranked among the nation’s top 10 public universities by&nbsp;<em>U.S. News &amp; World Report</em>. The campus has produced five Nobel laureates and is known for its academic achievement, premier research, innovation and anteater mascot. Led by Chancellor Howard Gillman, UCI has more than 36,000 students and offers 224 degree programs. It’s located in one of the world’s safest and most economically vibrant communities and is Orange County’s second-largest employer, contributing $7 billion annually to the local economy and $8 billion statewide.&nbsp;For more on UCI, visit&nbsp;<a href="http://www.uci.edu/">www.uci.edu</a>.</p>



<p><strong>Media access:</strong> Radio programs/stations may, for a fee, use an on-campus ISDN line to interview UCI faculty and experts, subject to availability and university approval. For more UCI news, visit <a href="http://news.uci.edu/">news.uci.edu</a>. Additional resources for journalists may be found at <a href="https://news.uci.edu/media-resources/" target="_blank" rel="noreferrer noopener">https://news.uci.edu/media-resources/</a>.</p>

		
			</div><!-- .entry-content -->
</article><!-- #post-## -->

					
												</main><!-- #main -->

			<!-- Do the right sidebar check -->
			
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Boeing whistleblower John Barnett found dead (163 pts)]]></title>
            <link>https://www.npr.org/2024/03/12/1238033573/boeing-whistleblower-john-barnett-dead</link>
            <guid>39682698</guid>
            <pubDate>Tue, 12 Mar 2024 18:00:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.npr.org/2024/03/12/1238033573/boeing-whistleblower-john-barnett-dead">https://www.npr.org/2024/03/12/1238033573/boeing-whistleblower-john-barnett-dead</a>, See on <a href="https://news.ycombinator.com/item?id=39682698">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="storytext">
      <div id="res1238039452">
            <div data-crop-type="">
        <picture>
            <source srcset="https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s400-c85.webp 400w,
https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s600-c85.webp 600w,
https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s800-c85.webp 800w,
https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s900-c85.webp 900w,
https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s1200-c85.webp 1200w,
https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s1600-c85.webp 1600w,
https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s1800-c85.webp 1800w" sizes="(min-width: 1300px) 763px, (min-width: 1025px) calc(100vw - 496px), (min-width: 768px) calc(100vw - 171px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s400-c85.jpg 400w,
https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s600-c85.jpg 600w,
https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s800-c85.jpg 800w,
https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s900-c85.jpg 900w,
https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s1200-c85.jpg 1200w,
https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s1600-c85.jpg 1600w,
https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s1800-c85.jpg 1800w" sizes="(min-width: 1300px) 763px, (min-width: 1025px) calc(100vw - 496px), (min-width: 768px) calc(100vw - 171px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s1100-c50.jpg" alt="" loading="lazy">
        </picture>
        
</div>
<div>
    <div>
        <p>
                Boeing 787 Dreamliners are built at the aviation company's North Charleston, S.C., assembly plant in 2023. John Barnett had alleged that Boeing's manufacturing practices had declined  and that managers pressured workers not to document potential defects and problems.
                <b aria-label="Image credit">
                    
                    Juliette Michel/AFP via Getty Images
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Juliette Michel/AFP via Getty Images
        
    </span>
</p></div>
<div>
        <picture>
            <source data-original="https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s1200.webp" type="image/webp">
            <source data-original="https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s1200.jpg" type="image/jpeg">
            <img data-original="https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s1200.jpg" alt="" src="https://media.npr.org/assets/img/2024/03/12/gettyimages-1258352775-22dd4b0612dd7377daa8b0c8b1ca7f33dbab084a-s1200.jpg">
        </picture>
    </div>
<div>
        <p>Boeing 787 Dreamliners are built at the aviation company's North Charleston, S.C., assembly plant in 2023. John Barnett had alleged that Boeing's manufacturing practices had declined  and that managers pressured workers not to document potential defects and problems.</p>
        <p><span aria-label="Image credit">
            
            Juliette Michel/AFP via Getty Images
            
        </span>
    </p></div>
   </div>
   <p>Police in Charleston, S.C., are investigating the death of John Barnett, a former Boeing quality control manager who became a whistleblower when he went public with his concerns about serious safety issues in the company's commercial airplanes.</p>   <p>Barnett's body was found in a vehicle in a Holiday Inn parking lot in Charleston on Saturday, police said. One day earlier, he testified about the string of problems he says he identified at Boeing's plant where he once helped inspect the 787 aircraft before delivery to customers.</p>   
   
   
<!-- END ID="RES1238040111" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>Police said officers were sent to the hotel to conduct a welfare check after people were unable to contact Barnett, who had traveled to Charleston to testify in his lawsuit against Boeing. </p>   <p>"Upon their arrival, officers discovered a male inside a vehicle suffering from a gunshot wound to the head," police said in a statement sent to NPR. "He was pronounced deceased at the scene."</p>   <p>The office of Charleston County Coroner Bobbi Jo O'Neal said that Barnett, who had been living in Louisiana after retiring from Boeing, died "from what appears to be a self-inflicted gunshot wound." </p>   <p>Charleston police said detectives are actively investigating the case and are awaiting a formal cause of death as they try to determine the circumstances surrounding Barnett's death.</p>   <p>Barnett, who spent decades working for Boeing at its plants in Everett, Wash., and North Charleston, S.C., had repeatedly alleged that Boeing's manufacturing practices had declined — and that rather than improve them, he added, managers had pressured workers not to document potential defects and problems. </p>   <p>"We are saddened by Mr. Barnett's passing, and our thoughts are with his family and friends," Boeing said in a statement sent to NPR.</p>   <p>Barnett, 62, made international headlines in April of 2019 when he and other former Boeing employees <a href="https://www.nytimes.com/2019/04/20/business/boeing-dreamliner-production-problems.html">spoke to The New York Times</a> about what he called shoddy manufacturing problems at Boeing. Barnett accused the company of adopting a culture that prioritized raw numbers and profits over quality — and by extension, passenger safety. </p>   
   
<!-- END ID="RES1238040572" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>"As a quality manager at Boeing, you're the last line of defense before a defect makes it out to the flying public," Barnett told the newspaper. "And I haven't seen a plane out of Charleston yet that I'd put my name on saying it's safe and airworthy."</p>   <p>By the time the article appeared, Barnett had already filed a whistleblower complaint against Boeing, saying that his attempts to raise quality and safety problems had been ignored and that he was punished for continuing to flag them.</p>   
   
<!-- END ID="RES1238041466" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>Barnett filed a whistleblower complaint against Boeing in early 2017; his case against the company was heading toward a trial this June, his family said. </p>   <p>"He was looking forward to having his day in court and hoped that it would force Boeing to change its culture," the family said in a statement shared with NPR by his brother, Rodney Barnett.</p>   <p>The family says Barnett's health declined because of the stresses of taking a stand against his longtime employer.</p>   <p>"He was suffering from PTSD and anxiety attacks as a result of being subjected to the hostile work environment at Boeing," they said, "which we believe led to his death."</p>   
   <p>When John Barnett was interviewed by Ralph Nader <a href="https://www.ralphnaderradiohour.com/p/boeing-787-dreamliner-hundreds-of-fdf#details">in 2019</a>, he said health issues had persisted after he retired from the plane-maker.</p>   <p>"It's taken a serious mental and emotional toll on me," Barnett said — but, he added, the safety of the airplanes rolling off the production line remained his main focus. </p>   <p>"That's what my story is about, is telling my story enough to where the right people get involved to make sure that these airplanes are made correctly," Barnett said. "Because the 787 carries 288 passengers plus crew. So the last thing I want to do is wake up in the morning and see a 787 has gone down" because of one of the problems he identified.  </p>   <p>"I mean, it's just, it keeps me up at night," he said.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Astro DB (160 pts)]]></title>
            <link>https://astro.build/db/</link>
            <guid>39682366</guid>
            <pubDate>Tue, 12 Mar 2024 17:34:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://astro.build/db/">https://astro.build/db/</a>, See on <a href="https://news.ycombinator.com/item?id=39682366">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <section data-astro-cid-uj7v6mso=""> <h2 data-astro-cid-uj7v6mso=""> <strong data-astro-cid-uj7v6mso="">Astro DB</strong> is a fully-managed SQL database designed exclusively for Astro.
</h2> <dl data-astro-cid-uj7v6mso=""> <div>  <h3>Powered by LibSQL</h3> <p> 
LibSQL balanced lightweight efficiency with proven enterprise-grade performance.
 </p> </div> <div>  <h3>Scale with confidence</h3> <p> 
Astro DB’s automatically scales up to meet demand and scales down to $0 when inactive.
 </p> </div> <div>  <h3>Automatically configured</h3> <p> 
Everything is setup for you, like a TypeScript ORM with full type-safety out of the box.
 </p> </div> </dl> </section>    <section> <p> <h2> Features </h2> <h3> Everything you need, included </h3>  </p> <div> <figure>   <p>Astro logo</p> <figcaption> <h3>
Designed for the Astro ecosystem
</h3> <p>
A deeply integrated, unified developer experience.
</p> </figcaption> </figure> <div> <figure>  <p>List of common SQL keywords such as SELECT and JOIN</p> <figcaption> <h3>SQL</h3> <p>
Why reinvent the wheel? Astro DB speaks the familiar, universal database language: SQL.
</p> </figcaption> </figure> <figure>  <p>
Code snippet demonstrating TypeScript autocompletion for a User schema
</p> <figcaption> <h3>TypeScript ORM</h3> <p>
Includes a modern, TypeScript ORM with type-safety and autocomplete on every query.
</p> </figcaption> </figure> </div> <figure>  <p>
"Export data" button with a dropdown that says "Export as SQL" and "Export as CSV"
</p> <figcaption> <h3>Zero lock-in</h3> <p>
It's your data. Export it anytime, in the format you need.
</p> </figcaption> </figure> </div> <div> <figure> <figcaption> <h3>Visual Data Viewers</h3> <p>
Explore your data in a visual spreadsheet, a rich-text editor, or raw SQL console.
</p> </figcaption> <p>Illustration of a bable-based user interface, similar to that of Excel</p>  </figure> <figure> <figcaption> <h3>Global Distribution</h3> <p>
Create databases in 8 different regions around the world, including the EU and Japan.
</p> </figcaption> <p>A spinning globe with markers in 8 regions around the world</p>  </figure> </div> <div> <div> <svg viewBox="0 0 24 24" width="24" height="24" astro-icon="ri:dashboard-line"><path fill="currentColor" d="M13 21V11h8v10h-8zM3 13V3h8v10H3zm6-2V5H5v6h4zM3 21v-6h8v6H3zm2-2h4v-2H5v2zm10 0h4v-6h-4v6zM13 3h8v6h-8V3zm2 2v2h4V5h-4z"></path></svg> <h3>Schema management</h3> <p>
Your schema lives in your codebase, with automatic schema diffing and migrations.
</p> </div> <div> <svg viewBox="0 0 24 24" width="24" height="24" astro-icon="ri:code-s-slash-line"><path fill="currentColor" d="m24 12-5.657 5.657-1.414-1.414L21.172 12l-4.243-4.243 1.414-1.414L24 12zM2.828 12l4.243 4.243-1.414 1.414L0 12l5.657-5.657L7.07 7.757 2.828 12zm6.96 9H7.66l6.552-18h2.128L9.788 21z"></path></svg> <h3>Instant local development</h3> <p>
Develop locally with zero dependencies. No Docker? No problem.
</p> </div> <div> <svg viewBox="0 0 24 24" width="24" height="24" astro-icon="ri:apps-2-line"><path fill="currentColor" d="M6.5 11.5a4.5 4.5 0 1 1 0-9 4.5 4.5 0 0 1 0 9zm.5 10a4.5 4.5 0 1 1 0-9 4.5 4.5 0 0 1 0 9zm10-10a4.5 4.5 0 1 1 0-9 4.5 4.5 0 0 1 0 9zm0 10a4.5 4.5 0 1 1 0-9 4.5 4.5 0 0 1 0 9zM6.5 9.5a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zm.5 10a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zm10-10a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zm0 10a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z"></path></svg> <h3>Webhooks</h3> <p>
Changes to data trigger webhooks that can integrate with most third-party tools.
</p> </div> <div> <svg viewBox="0 0 24 24" width="24" height="24" astro-icon="ri:github-fill"><path fill="currentColor" d="M12 2C6.475 2 2 6.475 2 12a9.994 9.994 0 0 0 6.838 9.488c.5.087.687-.213.687-.476 0-.237-.013-1.024-.013-1.862-2.512.463-3.162-.612-3.362-1.175-.113-.288-.6-1.175-1.025-1.413-.35-.187-.85-.65-.013-.662.788-.013 1.35.725 1.538 1.025.9 1.512 2.338 1.087 2.912.825.088-.65.35-1.087.638-1.337-2.225-.25-4.55-1.113-4.55-4.938 0-1.088.387-1.987 1.025-2.688-.1-.25-.45-1.275.1-2.65 0 0 .837-.262 2.75 1.026a9.28 9.28 0 0 1 2.5-.338c.85 0 1.7.112 2.5.337 1.912-1.3 2.75-1.024 2.75-1.024.55 1.375.2 2.4.1 2.65.637.7 1.025 1.587 1.025 2.687 0 3.838-2.337 4.688-4.562 4.938.362.312.675.912.675 1.85 0 1.337-.013 2.412-.013 2.75 0 .262.188.574.688.474A10.016 10.016 0 0 0 22 12c0-5.525-4.475-10-10-10z"></path></svg> <h3>GitHub Automation</h3> <p>
Easy-to-use simplicity meets powerful scalability, with a visual UI that will save you time.
</p> </div> </div> </section> <section> <p> <h2> Pricing </h2> <h3> 
Get started for free,<br>then pay as you grow.
 </h3>  </p>  </section>  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Launch HN: Glide (YC W24) – AI-assisted technical design docs (118 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=39682183</link>
            <guid>39682183</guid>
            <pubDate>Tue, 12 Mar 2024 17:21:06 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=39682183">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="39682183">
      <td><span></span></td>      <td><center><a id="up_39682183" href="https://news.ycombinator.com/vote?id=39682183&amp;how=up&amp;goto=item%3Fid%3D39682183"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=39682183">Launch HN: Glide (YC W24) – AI-assisted technical design docs</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_39682183">101 points</span> by <a href="https://news.ycombinator.com/user?id=robmck">robmck</a> <span title="2024-03-12T17:21:06"><a href="https://news.ycombinator.com/item?id=39682183">7 hours ago</a></span> <span id="unv_39682183"></span> | <a href="https://news.ycombinator.com/hide?id=39682183&amp;goto=item%3Fid%3D39682183">hide</a> | <a href="https://hn.algolia.com/?query=Launch%20HN%3A%20Glide%20(YC%20W24)%20%E2%80%93%20AI-assisted%20technical%20design%20docs&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=39682183&amp;auth=038ae75199a12b9645ff4ec3090693c66c5a5c84">favorite</a> | <a href="https://news.ycombinator.com/item?id=39682183">41&nbsp;comments</a>        </span>
              </td></tr>
    <tr></tr><tr><td colspan="2"></td><td><div><p>Hi everyone! We're building an AI-enabled editor (<a href="https://glide.agenticlabs.com/">https://glide.agenticlabs.com</a>) that helps developers write technical design docs faster. It’s like an IDE with Copilot, but instead of directly editing your code, it helps you come up with a solid plan before implementing a change. There’s a basic demo here (<a href="https://youtu.be/5uEapdT6nYE" rel="nofollow">https://youtu.be/5uEapdT6nYE</a>), and we also recorded a session with one of our early users running through an unusual task (calling a Fortran algorithm from Go, <a href="https://youtu.be/ppluB0Z1OIA" rel="nofollow">https://youtu.be/ppluB0Z1OIA</a>)</p><p>Why use design docs? Mainly because on complex software projects, if you don’t have a careful strategy, a few lines of code can lead to a ripple effect across the whole codebase. You're working on a small new feature and suddenly, your PR is touching dozens of different files in a handful of directories, and you may be questioning if it still makes sense at all.</p><p>Laying out your approach in a technical design document helps to avoid these situations, so tech companies often embed this practice in their engineering culture. Unfortunately, producing these write-ups is a manual and time-consuming process that keeps you switching between typing in Confluence, searching on GitHub, and drawing on a whiteboard.</p><p>For example, one of our early users is building a RAG (Retrieval Augmented Generation) system in Rust, and needs to rewrite their original chunking algorithm that was created in Python. A change like that involves not only porting the chunking logic but also defining new structs, choosing the Rust libraries for text parsing, re-integrating with the Rust server, and changing the endpoint on the front end. Simple-sounding changes like these can end up with many "tentacles" devs have to work through. Our product helps teams like this spec out their approach more quickly.</p><p>The need for this hit us when we were working on a product using LLMs to turn tickets into PRs. You can just assign a ticket to GPT-4 and review the PR, right? Turns out that most people (including us) don’t write very complete or specific tickets on the first pass, and when they do, that ends up being more effort than just doing the whole thing yourself.</p><p>What was missing was a fast way to iterate on goals, requirements, and implementation plans for code that could then be useful to developers (whether AI assisted or not) to implement with high confidence. Our editor, Glide, splits this process into the following stages and lets you spend as much or as little time on each stage as makes sense.</p><p>(1) We index your project code with Tree-Sitter and make it searchable, so you can add relevant parts of the codebase to the task context.</p><p>(2) AI writes the first pass for a high-level solution outline given the code and the goal. It will try to point out missing details or ambiguities about the task so far.</p><p>(3) As a developer you can easily edit the generated content—tweaks like “change step 3” or “remove the part about caching” don’t require additional back-and-forth conversation.</p><p>(4) The next stage is a step-by-step plan—a pseudocode-level guide for how to complete the change. AI generates this, and again you can make adjustments in-line as needed.</p><p>(5) There is a chat mode for deeper discussions about the content—just highlight any text and click chat. This works well for exploring alternatives, getting more specific on a particular point, or understanding why the AI wrote what it did.</p><p>(6) Once the plan looks good, you can have AI generate code edits for each step. You’re free to make additional changes here or just open the markdown doc with code edits in your local VSCode via an extension, so you have it as a reference while you implement.</p><p>This looks a lot like collaborative Chain of Thought, explicitly writing out each step in a line of reasoning, for both the developer and the LLM. Breaking down a high-level task with AI this way can work well for building consensus on the desired end state of your change.</p><p>We plan to charge companies per seat, but today, it’s free for individual use as we get more feedback on the product. One future area we’re excited for is multiplayer mode—where a few developers can share, edit, and leave comments on the generated docs in a shared workspace. If you have ideas for this experience, we’d love to hear them.</p><p>We would love for you to give it a try at <a href="https://glide.agenticlabs.com/">https://glide.agenticlabs.com/</a> and tell us what you think! We’re excited to discuss this with any comments you have!</p><p>P.S. We only keep the indexed code in an in-memory cache while you’re using it. We don’t store your code or use it as training data!</p></div></td></tr>        <tr></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Byte-Sized Swift: Building Tiny Games for the Playdate (155 pts)]]></title>
            <link>https://www.swift.org/blog/byte-sized-swift-tiny-games-playdate/</link>
            <guid>39682143</guid>
            <pubDate>Tue, 12 Mar 2024 17:18:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.swift.org/blog/byte-sized-swift-tiny-games-playdate/">https://www.swift.org/blog/byte-sized-swift-tiny-games-playdate/</a>, See on <a href="https://news.ycombinator.com/item?id=39682143">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main">
<article>
  <header>
    

    <time pubdate="" datetime="2024-03-12T06:00:00-04:00">March 12, 2024</time>
    <div>
  
    
    
      
      
      
        <p>Rauhul Varma works on Advanced Prototyping in the Platform Architecture group at Apple.</p>
      
    
  
</div>
  </header>

  <p>I’m excited to share <a href="https://github.com/apple/swift-playdate-examples">swift-playdate-examples</a>, a technical demonstration of using Swift to build games for <a href="https://play.date/">Playdate</a>, a handheld game system by <a href="https://panic.com/">Panic</a>.</p>

<video title="A screencapture of Swift Break running on Playdate hardware mirrored to a Mac." autoplay="" loop="" muted="">
  <source src="https://swift.org/assets/images/2024-03-12-byte-sized-swift-tiny-games-playdate/playdate-mirror-video-swiftbreak.mp4" type="video/mp4">
</video>

<h2 id="why-swift">Why Swift?</h2>

<p>Swift is widely known as the modern language for app development on Apple devices. However, over the course of its first decade, it has grown into a versatile, multi-platform language targeting use cases where you’d otherwise find C or C++.</p>

<p>Personally, I have come to appreciate Swift’s emphasis on memory safety and great ergonomics, and want these traits for embedded systems where reliability and security are critically important.</p>

<p>But embedded systems are not only found in mission-critical applications. Some are actually all fun and <em>games</em>.</p>

<h3 id="playdate-by-panic">Playdate by Panic</h3>

<p>Over the holiday season, I read about building Playdate games in C and became curious if the same was possible in Swift. For those unfamiliar with Playdate, it is a tiny handheld game system built by Panic, creators of popular apps and games like “Transmit,” “Nova,” “Firewatch,” “Untitled Goose Game,” and more. It houses a Cortex M7 processor, a 400 by 240 1-bit display, and has a small runtime for hosting games. Additionally, Panic provides an <a href="https://play.date/dev/">SDK</a> for building games in both C and Lua.</p>

<p>While most Playdate games are written in Lua for ease of development, they can run into performance problems that necessitate the added complexity of using C. Swift’s combination of high-level ergonomics with low-level performance, as well as its strong support for interoperating with C, make it seem like a good match for the Playdate. However, the typical Swift application and runtime exceed the device’s tight resource constraints.</p>

<p>Regardless, I still wanted to create a game in Swift and I had good idea for the approach.</p>

<h3 id="the-embedded-language-mode">The Embedded Language Mode</h3>

<p>Recently, the Swift project began developing a new embedded language mode to support highly constrained platforms. This mode utilizes generic specialization, inlining, and dead code stripping to produce tiny binaries, while retaining the core features of Swift.</p>

<blockquote>
  <p>Note: The embedded language mode is actively evolving and is helping drive the development of language features such as: <a href="https://github.com/apple/swift-evolution/blob/main/proposals/0390-noncopyable-structs-and-enums.md">non-copyable types</a>, <a href="https://github.com/apple/swift-evolution/blob/main/proposals/0413-typed-throws.md">typed throws</a>, etc. It is available now in <a href="https://www.swift.org/download/">nightly toolchains</a> and if you’re curious to learn more, check out the <a href="https://github.com/apple/swift-evolution/blob/main/visions/embedded-swift.md">Vision for Embedded Swift</a>.</p>
</blockquote>

<p>These defining characteristics make the embedded language mode a great solution for shrinking Swift to fit the Playdate’s constraints.</p>

<p>With the embedded Swift language mode in hand, I got to work.</p>

<h2 id="the-games">The Games</h2>

<p>I wrote two small games in Swift for the Playdate. The first game is a port of the Playdate SDK sample of <a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life">Conway’s Game of Life</a> into Swift:</p>

<p><img src="https://www.swift.org/assets/images/2024-03-12-byte-sized-swift-tiny-games-playdate/playdate-simulator-still-life.png" alt="A screenshot of the Playdate Simulator running Conway’s Game of Life."></p>

<p>This game is one Swift file that builds directly against the Playdate C API and does not require dynamic memory allocation. The packaged game clocks in at 788 bytes, slightly smaller than the C example, which is 904 bytes.</p>

<div><pre><code><span>$ </span><span>wc</span> <span>-c</span> &lt; <span>$REPO_ROOT</span>/Examples/Life/Life.pdx/pdex.bin
     788

<span>$ </span><span>wc</span> <span>-c</span> &lt; <span>$HOME</span>/Developer/PlaydateSDK/C_API/Examples/GameOfLife.pdx/pdex.bin
     904
</code></pre></div>

<blockquote>
  <p>Note: Both versions could likely be made smaller, but I did not try to optimize code size.</p>
</blockquote>

<p>The second game is a paddle-and-ball style game named “Swift Break.”</p>

<p><img src="https://www.swift.org/assets/images/2024-03-12-byte-sized-swift-tiny-games-playdate/playdate-simulator-still-swiftbreak.png" alt="A screenshot of the Playdate Simulator with the Swift Break splash screen."></p>

<p>Swift Break uses the same high-level language features you’d find in desktop and server applications, such as <a href="https://docs.swift.org/swift-book/documentation/the-swift-programming-language/enumerations/#Associated-Values">enums with associated values</a>, <a href="https://docs.swift.org/swift-book/documentation/the-swift-programming-language/generics">generic types and functions</a>, and <a href="https://docs.swift.org/swift-book/documentation/the-swift-programming-language/memorysafety">automatic memory management</a> to simplify game development while retaining C-level performance.</p>

<p>For example, here’s the core game logic for handling ball bounces:</p>

<div><pre><code><span>sprite</span><span>.</span><span>moveWithCollisions</span><span>(</span><span>goalX</span><span>:</span> <span>newX</span><span>,</span> <span>goalY</span><span>:</span> <span>newY</span><span>)</span> <span>{</span> <span>_</span><span>,</span> <span>_</span><span>,</span> <span>collisions</span> <span>in</span>
  <span>for</span> <span>collision</span> <span>in</span> <span>collisions</span> <span>{</span>
    <span>let</span> <span>otherSprite</span> <span>=</span> <span>Sprite</span><span>(</span><span>borrowing</span><span>:</span> <span>collision</span><span>.</span><span>other</span><span>)</span>

    <span>// If we hit a visible brick, remove it.</span>
    <span>if</span> <span>otherSprite</span><span>.</span><span>tag</span> <span>==</span> <span>.</span><span>brick</span><span>,</span> <span>otherSprite</span><span>.</span><span>isVisible</span> <span>{</span>
      <span>otherSprite</span><span>.</span><span>removeSprite</span><span>()</span>
      <span>activeGame</span><span>.</span><span>bricksRemaining</span> <span>-=</span> <span>1</span>
    <span>}</span>

    <span>var</span> <span>normal</span> <span>=</span> <span>Vector</span><span>(</span><span>collision</span><span>.</span><span>normal</span><span>)</span>

    <span>if</span> <span>otherSprite</span><span>.</span><span>tag</span> <span>==</span> <span>.</span><span>paddle</span> <span>{</span>
      <span>// Compute deflection angle (radians) for the normal in domain</span>
      <span>// -pi/6 to pi/6.</span>
      <span>let</span> <span>placement</span> <span>=</span> <span>placement</span><span>(</span><span>of</span><span>:</span> <span>collision</span><span>,</span> <span>along</span><span>:</span> <span>otherSprite</span><span>)</span>
      <span>let</span> <span>deflectionAngle</span> <span>=</span> <span>placement</span> <span>*</span> <span>(</span><span>.</span><span>pi</span> <span>/</span> <span>6</span><span>)</span>
      <span>normal</span><span>.</span><span>rotate</span><span>(</span><span>by</span><span>:</span> <span>deflectionAngle</span><span>)</span>
    <span>}</span>

    <span>activeGame</span><span>.</span><span>ballVelocity</span><span>.</span><span>reflect</span><span>(</span><span>along</span><span>:</span> <span>normal</span><span>)</span>
  <span>}</span>
<span>}</span>
</code></pre></div>

<p>It calls a <code>moveWithCollisions</code> method to move the ball, iterating through a collection of objects the ball bounced off of while moving.</p>

<p>Swift Break features a splash screen, a pause menu, paddle-location-based bounce physics, infinite levels, a game over screen, and allows you to control the paddle with either the D-Pad or the Crank!</p>

<h2 id="try-it-out">Try it Out</h2>

<p>If you’re eager to use Swift on your Playdate, the <a href="https://github.com/apple/swift-playdate-examples">swift-playdate-examples</a> repository has you covered. It contains the above ready-to-use examples that demonstrate how to build Swift games for the Playdate, both for the simulator and the hardware.</p>

<p>Additionally, the repository includes detailed documentation to guide you through the setup process. Whether you’re a seasoned developer or just starting, you’ll find the necessary resources to bring your ideas to life.</p>

<p>But if you’re up for a deep dive into the technical details of what it takes to bring Swift to a new platform, read on!</p>

<h2 id="deep-dive-bringing-swift-to-the-playdate">Deep Dive: Bringing Swift to the Playdate</h2>

<p>Bringing up a new platform is always fraught with challenges and infuriating bugs. Everything is broken with numerous false starts, until you clear the last bug, and then it all comes together. Getting Swift games running on the Playdate was no different.</p>

<p>My general approach was to leverage Swift’s interoperability to build on top of the Playdate C SDK. The good news is that the Swift toolchain already had all the features I needed to get this working. I just had to figure out how to put them together. Here’s an overview of the path I took:</p>

<ul>
  <li>Building object files for the Playdate Simulator</li>
  <li>Importing the Playdate C API</li>
  <li>Running on the Simulator</li>
  <li>Running on the Hardware</li>
  <li>Improving the API with Swift</li>
  <li>Completing Swift Break</li>
</ul>

<p>Without further ado, let’s get started.</p>

<h3 id="building-object-files-for-the-playdate-simulator">Building object files for the Playdate Simulator</h3>

<blockquote>
  <p>Note: The commands mentioned below were run with a Swift nightly toolchain installed and have the <code>TOOLCHAINS</code> environment variable set to the name of the toolchain.</p>
</blockquote>

<p>My first step was compiling an object file for the Playdate Simulator. The simulator works by dynamically loading host libraries, so I needed to build the object files for the host’s platform and architecture (the so-called <em>triple</em> in compiler-speak), which <code>swiftc</code> does by default. The only additional flags I needed were for enabling embedded Swift and code optimizations.</p>

<div><pre><code><span>$ </span><span>cat </span>test.swift
<span>let </span>value <span>=</span> 1

<span>$ </span><span>mkdir </span>build

<span>$ </span>swiftc <span>-c</span> test.swift <span>-o</span> build/test.o <span>\</span>
    <span>-Osize</span> <span>-wmo</span> <span>-enable-experimental-feature</span> Embedded

<span>$ </span>file build/test.o
test.o: Mach-O 64-bit object arm64
</code></pre></div>

<h3 id="importing-the-playdate-c-api">Importing the Playdate C API</h3>

<p>The next step was compiling against the Playdate C API from Swift. This was straightforward due to the structure of the Playdate C header files and Swift’s native support for interoperating with C.</p>

<p>I started by locating the Playdate C header files:</p>

<div><pre><code><span>$ </span><span>ls</span> <span>$HOME</span>/Developer/PlaydateSDK/C_API/
Examples     buildsupport pd_api       pd_api.h

<span>$ </span><span>ls</span> <span>$HOME</span>/Developer/PlaydateSDK/C_API/
pd_api_display.h     pd_api_gfx.h         pd_api_lua.h         pd_api_sound.h       pd_api_sys.h
pd_api_file.h        pd_api_json.h        pd_api_scoreboards.h pd_api_sprite.h
</code></pre></div>

<p>And used an “include search path” (<code>-I</code>) to tell the Swift compiler’s C interoperability feature where to find them. I additionally needed to pass a “define” (<code>-D</code>) to tell the compiler how to parse the header files:</p>

<div><pre><code><span>$ </span>swiftc ... <span>-Xcc</span> <span>-I</span> <span>-Xcc</span> <span>$HOME</span>/Developer/PlaydateSDK/C_API/ <span>-Xcc</span> <span>-DTARGET_EXTENSION</span>
</code></pre></div>

<p>Next, I created a <a href="https://clang.llvm.org/docs/Modules.html#module-maps">module map file</a> to wrap the headers into an importable module from Swift:</p>

<div><pre><code><span>$ </span><span>cat</span> <span>$HOME</span>/Developer/PlaydateSDK/C_API/module.modulemap
module CPlaydate <span>[</span>system] <span>{</span>
  umbrella header <span>"pd_api.h"</span>
  <span>export</span> <span>*</span>
<span>}</span>
</code></pre></div>

<p>And used an “import search path” (<code>-I</code>) to tell the Swift compiler where to find the CPlaydate module:</p>

<div><pre><code><span>$ </span>swiftc ... <span>-I</span> <span>$HOME</span>/Developer/PlaydateSDK/C_API/
</code></pre></div>

<p>Lastly, I made a minimal “library” using the Playdate C API from Swift and compiled using the flags above:</p>

<div><pre><code><span>$ </span><span>cat </span>test.swift
import CPlaydate
<span>let </span>pd: UnsafePointer&lt;PlaydateAPI&gt;? <span>=</span> nil

<span>$ </span><span>mkdir </span>build

<span>$ </span>swiftc <span>\</span>
    <span>-c</span> test.swift <span>\</span>
    <span>-o</span> build/test.o <span>\</span>
    <span>-Osize</span> <span>-wmo</span> <span>-enable-experimental-feature</span> Embedded <span>\</span>
    <span>-Xcc</span> <span>-I</span> <span>-Xcc</span> <span>$HOME</span>/Developer/PlaydateSDK/C_API/ <span>\</span>
    <span>-Xcc</span> <span>-DTARGET_EXTENSION</span> <span>\</span>
    <span>-I</span> <span>$HOME</span>/Developer/PlaydateSDK/C_API/

<span>$ </span>file build/test.o
test.o: Mach-O 64-bit object arm64
</code></pre></div>

<h3 id="running-on-the-simulator">Running on the Simulator</h3>

<p>Once I was able to use the Playdate C API from Swift, I ported the Conway’s Game of Life example included in the Playdate SDK to Swift, referencing <a href="https://sdk.play.date/2.2.0/Inside%20Playdate%20with%20C.html">Inside Playdate with C</a> frequently to familiarize myself with the API.</p>

<p>The C implementation of Conway’s strictly operates on Playdate OS-vended frame buffers and uses the display as game state, removing the need for separate data structures and dynamic allocations. As a result, the porting process was very mechanical because the bit manipulation and pointer operations in the C example have direct Swift analogs:</p>

<div><pre><code><span>static</span> <span>inline</span> <span>int</span> <span>val</span><span>(</span><span>uint8_t</span><span>*</span> <span>row</span><span>,</span> <span>int</span> <span>x</span><span>)</span> <span>{</span>
    <span>return</span> <span>1</span> <span>-</span> <span>((</span><span>row</span><span>[</span><span>x</span><span>/</span><span>8</span><span>]</span> <span>&gt;&gt;</span> <span>(</span><span>7</span> <span>-</span> <span>(</span><span>x</span><span>%</span><span>8</span><span>)))</span> <span>&amp;</span> <span>1</span><span>);</span>
<span>}</span>

<span>static</span> <span>inline</span> <span>int</span> <span>ison</span><span>(</span><span>uint8_t</span><span>*</span> <span>row</span><span>,</span> <span>int</span> <span>x</span><span>)</span> <span>{</span>
    <span>return</span> <span>!</span><span>(</span><span>row</span><span>[</span><span>x</span><span>/</span><span>8</span><span>]</span> <span>&amp;</span> <span>(</span><span>0x80</span> <span>&gt;&gt;</span> <span>(</span><span>x</span><span>%</span><span>8</span><span>)));</span>
<span>}</span>
</code></pre></div>

<div><pre><code><span>struct</span> <span>Row</span> <span>{</span>
  <span>var</span> <span>buffer</span><span>:</span> <span>UnsafeMutablePointer</span><span>&lt;</span><span>UInt8</span><span>&gt;</span>

  <span>func</span> <span>value</span><span>(</span><span>at</span> <span>column</span><span>:</span> <span>Int32</span><span>)</span> <span>-&gt;</span> <span>UInt8</span> <span>{</span>
    <span>isOn</span><span>(</span><span>at</span><span>:</span> <span>column</span><span>)</span> <span>?</span> <span>1</span> <span>:</span> <span>0</span>
  <span>}</span>

  <span>func</span> <span>isOn</span><span>(</span><span>at</span> <span>column</span><span>:</span> <span>Int32</span><span>)</span> <span>-&gt;</span> <span>Bool</span> <span>{</span>
    <span>let</span> <span>byte</span> <span>=</span> <span>buffer</span><span>[</span><span>Int</span><span>(</span><span>column</span> <span>/</span> <span>8</span><span>)]</span>
    <span>let</span> <span>bitPosition</span> <span>=</span> <span>0x80</span> <span>&gt;&gt;</span> <span>(</span><span>column</span> <span>%</span> <span>8</span><span>)</span>
    <span>return</span> <span>(</span><span>byte</span> <span>&amp;</span> <span>bitPosition</span><span>)</span> <span>==</span> <span>0</span>
  <span>}</span>
<span>}</span>
</code></pre></div>

<p>I built the source into a dynamic library and used <code>pdc</code> (the Playdate compiler) to wrap the final <code>dylib</code> into a <code>pdx</code> (Playdate executable).</p>

<div><pre><code><span>$ </span>swiftc <span>\</span>
    <span>-emit-library</span> test.swift <span>\</span>
    <span>-o</span> build/pdex.dylib <span>\</span>
    ...

<span>$ </span>file build/pdex.dylib
pdex.dylib: Mach-O 64-bit dynamically linked shared library arm64

<span>$ $HOME</span>/Developer/PlaydateSDK/bin/pdc build Test

<span>$ </span><span>ls </span>Test.pdx
pdex.dylib pdxinfo
</code></pre></div>

<p>I opened my game file <code>Test.pdx</code> using the Playdate simulator and as you might expect, it worked on the first try … just kidding, it crashed!</p>

<p>After some debugging, I realized the <code>Makefile</code> used to compile the C example included an additional file <code>setup.c</code> from the SDK containing the symbol <code>_eventHandlerShim</code> needed to bootstrap the game. If this symbol is not present in the binary, the Simulator falls back to bootstrapping the game using the symbol <code>_eventHandler</code> which my binary did contain, but meant my game skipped an important setup step.</p>

<p>So, I compiled <code>setup.c</code> into an object file using <code>clang</code>, linked it into my dynamic library, re-ran, and voila! I had Conway’s Game of Life written in Swift running on the Playdate Simulator.</p>

<h3 id="running-on-the-hardware">Running on the Hardware</h3>

<p>After successfully running on the simulator, I wanted to run the game on real hardware. A colleague graciously allowed me to borrow their Playdate and I began hacking away.</p>

<p>I started by matching the triple used by the C examples for the device and seeing what happened.</p>

<div><pre><code><span>$ </span>swiftc ... <span>-target</span> armv7em-none-none-eabi
&lt;module-includes&gt;:1:10: note: <span>in </span>file included from &lt;module-includes&gt;:1:
<span>#include "pd_api.h"</span>
         ^
<span>$HOME</span>/Developer/PlaydateSDK/C_API/pd_api.h:13:10: error: <span>'stdlib.h'</span> file not found
<span>#include &lt;stdlib.h&gt;</span>
         ^
</code></pre></div>

<p>These errors did not previously occur because I was targeting the host machine and used the host headers for the C standard library. I considered using the same host headers for the target device, but didn’t want to debug platform incompatibilities. Little did I know, I would have to do this regardless.</p>

<p>Instead, I decided to follow the route used by the C example programs which leverage the libc headers from a <code>gcc</code> toolchain installed with the Playdate SDK. I copied the include paths used by the C examples and re-ran the compile.</p>

<div><pre><code><span>$ </span><span>mkdir </span>build

<span>$ GCC_LIB</span><span>=</span>/usr/local/playdate/gcc-arm-none-eabi-9-2019-q4-major/lib

<span>$ </span>swiftc <span>\</span>
    <span>-c</span> test.swift <span>\</span>
    <span>-o</span> build/test.o <span>\</span>
    <span>-target</span> armv7em-none-none-eabi <span>\</span>
    <span>-Osize</span> <span>-wmo</span> <span>-enable-experimental-feature</span> Embedded <span>\</span>
    <span>-I</span> <span>$HOME</span>/Developer/PlaydateSDK/C_API/ <span>\</span>
    <span>-Xcc</span> <span>-DTARGET_EXTENSION</span> <span>\</span>
    <span>-Xcc</span> <span>-I</span> <span>-Xcc</span> <span>$HOME</span>/Developer/PlaydateSDK/C_API/ <span>\</span>
    <span>-Xcc</span> <span>-I</span> <span>-Xcc</span> <span>$GCC_LIB</span>/gcc/arm-none-eabi/9.2.1/include <span>\</span>
    <span>-Xcc</span> <span>-I</span> <span>-Xcc</span> <span>$GCC_LIB</span>/gcc/arm-none-eabi/9.2.1/include-fixed <span>\</span>
    <span>-Xcc</span> <span>-I</span> <span>-Xcc</span> <span>$GCC_LIB</span>/gcc/arm-none-eabi/9.2.1/../../../../arm-none-eabi/include

<span>$ </span>file build/test.o
test.o: ELF 32-bit LSB relocatable, ARM, EABI5 version 1 <span>(</span>SYSV<span>)</span>, not stripped
</code></pre></div>

<p>The compile succeeded and I had an object file for the real hardware. I went through similar steps to link and package the object file into a <code>pdx</code>, using <code>clang</code> as the linker driver.</p>

<p>I deployed the game onto a Playdate, and … it crashed.</p>

<p>For some reason, when the frame-update function pointer was called, the game would crash! Debugging this issue was confusing at first, but due to past experience deploying Swift onto a Cortex M7, I realized I likely had a calling convention mismatch. I added a compiler flag <code>-Xfrontend -experimental-platform-c-calling-convention=arm_aapcs_vfp</code> to try to match the calling convention used by the Playdate OS.</p>

<p>Once again, I deployed my game to the Playdate and … it actually worked! You can see the game in action below:</p>

<video title="A video of Conway's Game of Life running on Playdate hardware mirrored to a Mac." autoplay="" loop="" muted="">
  <source src="https://swift.org/assets/images/2024-03-12-byte-sized-swift-tiny-games-playdate/playdate-mirror-video-life.mp4" type="video/mp4">
</video>

<p>I then integrated my manual compilation steps into the Makefiles found in the Playdate SDK, going through a number of options before landing on the final solution found in <code>swift-playdate-examples</code>. The result of this effort was a single <code>make</code> command to build a <code>pdx</code> compatible with both the simulator and hardware!</p>

<h3 id="improving-the-api-with-swift">Improving the API with Swift</h3>

<p>After porting Conway’s Game of Life, I began a more ambitious project: a paddle-and-ball style game named Swift Break. However, I quickly encountered friction using the raw Playdate C API directly in Swift. In typical programming fashion, I took a detour to work on the API’s ergonomics instead of the game! At this point, I had also piqued the interest of some colleagues who contributed further improvements.</p>

<p>One hurdle was the naming conventions of the imported API. In C, enum cases are often prefixed with their type’s name to prevent programmers from inadvertently mixing unrelated enum instances and case constants. However, in Swift, such prefixes are unnecessary as the compiler type-checks comparisons to ensure the correct cases are used.</p>

<p>Fortunately, Swift already provides tools for addressing this precise issue, known as <a href="https://clang.llvm.org/docs/APINotes.html">API notes</a>. I added an API notes file to the Playdate SDK and renamed enum cases with more idiomatic Swift names:</p>

<div><pre><code><span>// Before</span>
<span>if</span> <span>event</span> <span>==</span> <span>kEventPause</span> <span>{</span> <span>...</span> <span>}</span>

<span>// After</span>
<span>if</span> <span>event</span> <span>==</span> <span>.</span><span>pause</span> <span>{</span> <span>...</span> <span>}</span>
</code></pre></div>

<p>A bigger issue, however, was the lack of nullability annotations in the C API. This meant the generated code had redundant null checks everywhere, bloating code size and hurting performance. While I usually would have used API notes to add the missing annotations, this was not possible. The C API uses structs with function pointers as a “vtable”, and unfortunately, these are not currently modifiable with API notes. Due to this incompatibility, I had to adopt a suboptimal solution: pervasively using <code>Optional.unsafelyUnwrapped</code> throughout the Swift code.</p>

<p>Although this approach eliminated the null checks, it dramatically hurt readability:</p>

<div><pre><code><span>// C API in Swift with redundant null checks</span>
<span>let</span> <span>spritePointer</span> <span>=</span> <span>playdate_api</span><span>.</span><span>pointee</span><span>.</span><span>sprite</span><span>.</span><span>pointee</span><span>.</span><span>newSprite</span><span>()</span>

<span>// C API in Swift without redundant null checks</span>
<span>let</span> <span>spritePointer</span> <span>=</span> <span>playdate_api</span><span>.</span><span>unsafelyUnwrapped</span><span>.</span><span>pointee</span><span>.</span><span>sprite</span><span>.</span><span>unsafelyUnwrapped</span><span>.</span><span>pointee</span><span>.</span><span>newSprite</span><span>.</span><span>unsafelyUnwrapped</span><span>()</span>
</code></pre></div>

<p>To address the readability issues, I created a thin Swift overlay on top of the C API. I wrapped function pointer accesses into static and instance methods on Swift types and converted function get/set pairs to Swift properties. Creating a sprite became much more intuitive and introduced zero overhead on top of the equivalent imported C calls.</p>

<div><pre><code><span>var</span> <span>sprite</span> <span>=</span> <span>Sprite</span><span>(</span><span>bitmapPath</span><span>:</span> <span>"background.png"</span><span>)</span>
<span>sprite</span><span>.</span><span>collisionsEnabled</span> <span>=</span> <span>false</span>
<span>sprite</span><span>.</span><span>zIndex</span> <span>=</span> <span>0</span>
<span>sprite</span><span>.</span><span>addSprite</span><span>()</span>
</code></pre></div>

<p>Colleagues further improved the overlay by abstracting Playdate APIs requiring manual memory management to be automatically handled. An excellent example is the C API’s <a href="https://sdk.play.date/2.2.0/Inside%20Playdate%20with%20C.html#f-sprite.moveWithCollisions"><code>moveWithCollisions</code></a> function, which returns a buffer of <code>SpriteCollisionInfo</code> structs that must be freed by the caller. Using the overlay allowed us to avoid manually deallocating the buffer and made the API easier to use:</p>

<div><pre><code><span>// moveWithCollisions without the overlay</span>
<span>var</span> <span>count</span><span>:</span> <span>Int32</span> <span>=</span> <span>0</span>
<span>var</span> <span>actualX</span><span>:</span> <span>Int32</span> <span>=</span> <span>0</span>
<span>var</span> <span>actualY</span><span>:</span> <span>Int32</span> <span>=</span> <span>0</span>
<span>let</span> <span>collisionsStartAddress</span> <span>=</span> <span>playdate_api</span><span>.</span><span>pointee</span><span>.</span><span>sprite</span><span>.</span><span>pointee</span><span>.</span><span>moveWithCollisions</span><span>(</span><span>sprite</span><span>,</span> <span>10</span><span>,</span> <span>10</span><span>,</span> <span>&amp;</span><span>actualX</span><span>,</span> <span>&amp;</span><span>actualY</span><span>,</span> <span>&amp;</span><span>count</span><span>)</span>
<span>let</span> <span>collisions</span> <span>=</span> <span>UnsafeBufferPointer</span><span>(</span><span>start</span><span>:</span> <span>collisionsStartAddress</span><span>,</span> <span>count</span><span>:</span> <span>count</span><span>)</span>
<span>defer</span> <span>{</span> <span>collisions</span><span>.</span><span>deallocate</span><span>()</span> <span>}</span>
<span>for</span> <span>collision</span> <span>in</span> <span>collisions</span> <span>{</span> <span>...</span> <span>}</span>

<span>// moveWithCollisions with the overlay</span>
<span>sprite</span><span>.</span><span>moveWithCollisions</span><span>(</span><span>goalX</span><span>:</span> <span>10</span><span>,</span> <span>goalY</span><span>:</span> <span>10</span><span>)</span> <span>{</span> <span>actualX</span><span>,</span> <span>actualY</span><span>,</span> <span>collisions</span> <span>in</span>
    <span>for</span> <span>collision</span> <span>in</span> <span>collisions</span> <span>{</span> <span>...</span> <span>}</span>
<span>}</span>
</code></pre></div>

<p>These improvements dramatically streamlined writing code for the Playdate. Additionally, as Swift’s support for ownership and non-copyable types improves, I anticipate even more ergonomic representations of the C APIs without language overhead.</p>

<h3 id="completing-swift-break">Completing Swift Break</h3>

<p>Equipped with a refined Swift Playdate API, I returned to developing Swift Break.</p>

<p>I nailed down the basics pretty quickly, but couldn’t resist adding extra features just for the fun of it. One of the highlights was implementing basic logic to deflect ball bounces based on the location where the ball and paddle collide.</p>

<p>This feature required calculating a normal vector relative to a hypothetical curve representing a rounded paddle and then reflecting the ball’s velocity about the normal. Here’s a visualization of the intended behavior:</p>

<video title="A Desmos geometric animation of Swift Break ball bouncing logic." autoplay="" loop="" muted="">
  <source src="https://swift.org/assets/images/2024-03-12-byte-sized-swift-tiny-games-playdate/desmos-ball-bounce.mp4" type="video/mp4">
</video>

<blockquote>
  <p>Note: Making the animation for this post ironically helped me root cause a bug in the bouncing logic. Under some combinations of entry angle and normal angle, the current design can cause the ball to bounce <em>down</em> into the paddle instead of up.</p>
</blockquote>

<p>To turn the math into an algorithm, I had to perform the following steps:</p>

<ol>
  <li>Check if the object the ball collided with is the paddle</li>
  <li>Compute the location of the collision along the paddle from -1 to +1</li>
  <li>Map the location into a deflection angle from from -π/6 to +π/6</li>
  <li>Rotate the collision normal vector by the deflection angle</li>
  <li>Reflect the ball’s velocity along the rotated normal</li>
</ol>

<p>I then directly translated this algorithm into code inside the ball collision callback:</p>

<div><pre><code><span>if</span> <span>otherSprite</span><span>.</span><span>tag</span> <span>==</span> <span>.</span><span>paddle</span> <span>{</span>                                <span>// 1</span>
  <span>let</span> <span>placement</span> <span>=</span> <span>placement</span><span>(</span><span>of</span><span>:</span> <span>collision</span><span>,</span> <span>along</span><span>:</span> <span>otherSprite</span><span>)</span> <span>// 2</span>
  <span>let</span> <span>deflectionAngle</span> <span>=</span> <span>placement</span> <span>*</span> <span>(</span><span>.</span><span>pi</span> <span>/</span> <span>6</span><span>)</span>                  <span>// 3</span>
  <span>normal</span><span>.</span><span>rotate</span><span>(</span><span>by</span><span>:</span> <span>deflectionAngle</span><span>)</span>                           <span>// 4</span>
<span>}</span>
<span>ballVelocity</span><span>.</span><span>reflect</span><span>(</span><span>along</span><span>:</span> <span>normal</span><span>)</span>                            <span>// 5</span>
</code></pre></div>

<h3 id="running-on-the-hardware-again">Running on the Hardware (Again!)</h3>

<p>Throughout the development of “Swift Break,” I regularly deployed the game to the Playdate Simulator. However, the real challenge emerged when I decided to run the game on actual Playdate hardware. As usual, I loaded the game, and … yet again, it crashed, but this time a lot of things were going wrong.</p>

<p>To cut a long debugging story short, I found that the <code>-Xfrontend</code> flag mentioned earlier did not entirely resolve the calling convention issues. To address this, I needed to configure the compiler to match the CPU and floating-point ABI of the microcontroller in the Playdate. This aspect was overlooked when I was porting Conway’s Game of Life since I happened to both not pass structs by value and didn’t use floating-point operations.</p>

<p>The final and most confusing crash arose from a specific Playdate C API call returning an enum from the Playdate OS. After a thorough debugging process, e.g. using <code>printf</code> everywhere, I uncovered a discrepancy in the memory layout of the enum between the system built with <code>gcc</code> and the game built with <code>swiftc</code>. With further research I found the difference stemmed from <code>gcc</code> defaulting to <code>-fshort-enums</code> while <code>swiftc</code> via <code>clang</code> used <code>-fno-short-enums</code> for the <code>armv7em-none-none-eabi</code> triple.</p>

<p>I collected these new and removed flags into the following compile command:</p>

<div><pre><code><span>$ </span>swiftc <span>\</span>
    <span>-c</span> test.swift <span>\</span>
    <span>-o</span> build/test.o <span>\</span>
    <span>-target</span> armv7em-none-none-eabi <span>\</span>
    <span>-Osize</span> <span>-wmo</span> <span>-enable-experimental-feature</span> Embedded <span>\</span>
    <span>-I</span> <span>$HOME</span>/Developer/PlaydateSDK/C_API <span>\</span>
    <span>-Xcc</span> <span>-D__FPU_USED</span><span>=</span>1 <span>\</span>
    <span>-Xcc</span> <span>-DTARGET_EXTENSION</span> <span>\</span>
    <span>-Xcc</span> <span>-falign-functions</span><span>=</span>16 <span>\</span>
    <span>-Xcc</span> <span>-fshort-enums</span> <span>\</span>
    <span>-Xcc</span> <span>-mcpu</span><span>=</span>cortex-m7 <span>\</span>
    <span>-Xcc</span> <span>-mfloat-abi</span><span>=</span>hard <span>\</span>
    <span>-Xcc</span> <span>-mfpu</span><span>=</span>fpv5-sp-d16 <span>\</span>
    <span>-Xcc</span> <span>-mthumb</span> <span>\</span>
    <span>-Xcc</span> <span>-I</span> <span>-Xcc</span> <span>$HOME</span>/Developer/PlaydateSDK/C_API/ <span>\</span>
    <span>-Xcc</span> <span>-I</span> <span>-Xcc</span> <span>$GCC_LIB</span>/gcc/arm-none-eabi/9.2.1/include <span>\</span>
    <span>-Xcc</span> <span>-I</span> <span>-Xcc</span> <span>$GCC_LIB</span>/gcc/arm-none-eabi/9.2.1/include-fixed <span>\</span>
    <span>-Xcc</span> <span>-I</span> <span>-Xcc</span> <span>$GCC_LIB</span>/gcc/arm-none-eabi/9.2.1/../../../../arm-none-eabi/include <span>\</span>
    <span>-Xfrontend</span> <span>-disable-stack-protector</span> <span>\</span>
    <span>-Xfrontend</span> <span>-experimental-platform-c-calling-convention</span><span>=</span>arm_aapcs_vfp <span>\</span>
    <span>-Xfrontend</span> <span>-function-sections</span>
</code></pre></div>

<p>With these adjustments, I attempted once more, and <em>finally</em> “Swift Break” successfully ran on the Playdate hardware! I’ve included a brief video showcasing the game below:</p>

<video title="A screencapture of Swift Break running on Playdate hardware mirrored to a Mac." autoplay="" loop="" muted="">
  <source src="https://swift.org/assets/images/2024-03-12-byte-sized-swift-tiny-games-playdate/playdate-mirror-video-swiftbreak.mp4" type="video/mp4">
</video>

<h2 id="wrapping-up">Wrapping Up</h2>

<p>Thanks for diving into the bring-up journey with me. From refining the Swift Playdate API to tackling issues involving calling conventions, CPU configurations, and memory layout disparities, there was no shortage of challenges.</p>

<p>However, with the issues now resolved, creating Playdate games in Swift is a streamlined process. Just run <code>make</code> and enjoy a development experience with Swift that is both expressive <em>and</em> performant.</p>

<p>You can find all the code examples mentioned in this post in the <a href="https://github.com/apple/swift-playdate-examples">swift-playdate-examples</a> repository with accompanying “Getting Started” documentation.</p>

<p>I hope this post encourages you to explore the possibilities of using Swift in unconventional environments. Feel free to reach out with your experiences, questions, or game ideas on the <a href="https://forums.swift.org/t/byte-sized-swift-building-tiny-games-for-the-playdate/70615">Swift Forums</a>!</p>

<p>Happy coding! 🎮</p>


  
  
  
</article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The NYPD sent a warrantless subpoena for a copwatcher's Twitter account (387 pts)]]></title>
            <link>https://hellgatenyc.com/nypd-warrantless-subpoena-copwatcher-social-media</link>
            <guid>39681920</guid>
            <pubDate>Tue, 12 Mar 2024 17:00:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hellgatenyc.com/nypd-warrantless-subpoena-copwatcher-social-media">https://hellgatenyc.com/nypd-warrantless-subpoena-copwatcher-social-media</a>, See on <a href="https://news.ycombinator.com/item?id=39681920">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>The NYPD sent a sweeping subpoena seeking information from the social media account of the president of a New York City police accountability organization in February, records reviewed by Hell Gate show, only to withdraw its subpoena when told they would need to justify the subpoena in court.</p><p>Michael Clancy, better known to friends on and off social media as <a href="https://twitter.com/minkoff_steven/" target="_blank" rel="noreferrer noopener">Rabbi</a>, received a notice last month from X, formerly known as Twitter, alerting him to the fact that the NYPD had sent X a subpoena requesting "all records consisting but not limited to all subscriber name(s), Email address(s), Phone number(s), account creation date, IP logs with timestamps (IP address of account logins and logouts), all logs of previous messages sent and received." The subpoena also requested "all videos sent and received, including but not limited to meta-data. exit data about the messages and videos” for the account.</p><p>The notification included a copy of the subpoena, which warned X not to tell Clancy of its existence. "You are not to disclose or notify any customer or third party of the existence of this subpoena or that records were provided pursuant to this subpoena," the document read.</p><p>But X, following its own corporate policy, told Clancy anyway, and suggested he might want to get some legal representation to fight the subpoena, recommending the American Civil Liberties Union. Clancy did just that, and Kathryn Sachs of the New York Civil Liberties Union took up his case. Last Wednesday, Sachs wrote to the NYPD to challenge the administrative subpoena, which the NYPD had sent on its own authority, without any warrant or judicial approval. If the NYPD did not withdraw the subpoena, Sachs told the NYPD, Clancy would go to court with a motion to quash it. Rather than go to court to explain to a judge why the subpoena was necessary, the NYPD wrote back the same afternoon to say that it was withdrawing the subpoena altogether.</p><p>The NYPD subpoena letter cited as its empowering authority <a href="https://codelibrary.amlegal.com/codes/newyorkcity/latest/NYCadmin/0-0-0-25019" target="_blank" rel="noreferrer noopener">Section 14-137 of the New York City Administrative Code</a>, which gives the NYPD commissioner the power to issue subpoenas. But as Sachs argued in her letter to the NYPD, that doesn't mean the police department can issue warrantless subpoenas for anything they feel like. Sachs cited case law suggesting that the subpoena power is actually restricted to investigations involving current or former officers.</p><p>Under the federal <a href="https://www.law.cornell.edu/uscode/text/18/2703" target="_blank" rel="noreferrer noopener">Stored Communications Act</a>, authorities who want to subpoena electronic records from a provider either need a court-issued warrant, or, if they're using an administrative subpoena, "prior notice from the governmental entity to the subscriber or customer."</p><p>"This kind of administrative subpoena is not overseen by any court, and is not meant to target people like our client," Sachs told Hell Gate. "If it's left unchecked, it would chill speech from potentially anyone that the NYPD decided to subpoena information about."</p><p>"We don't give that kind of power to police departments without judicial review," said Marty Stolar, a lawyer who has worked on similar cases in the past. "It's got to be a process that's connected to a court if you're going to apply it to the general population. Here, the NYPD is misusing the power of subpoena to compel the production of documents as if they had the right to demand that information from any citizen. And they don't have that right. We have never given it to them."&nbsp;</p><figure><img alt="" src="https://lede-admin.hellgatenyc.com/wp-content/uploads/sites/43/2024/03/Twitter_Subpoena.jpg?w=710" srcset="https://lede-admin.hellgatenyc.com/wp-content/uploads/sites/43/2024/03/Twitter_Subpoena.jpg?w=425&amp;quality=75 425w, https://lede-admin.hellgatenyc.com/wp-content/uploads/sites/43/2024/03/Twitter_Subpoena.jpg?w=850&amp;quality=75 850w, https://lede-admin.hellgatenyc.com/wp-content/uploads/sites/43/2024/03/Twitter_Subpoena.jpg?w=585&amp;quality=75 585w, https://lede-admin.hellgatenyc.com/wp-content/uploads/sites/43/2024/03/Twitter_Subpoena.jpg?w=1170&amp;quality=75 1170w, https://lede-admin.hellgatenyc.com/wp-content/uploads/sites/43/2024/03/Twitter_Subpoena.jpg?w=710&amp;quality=75 710w, https://lede-admin.hellgatenyc.com/wp-content/uploads/sites/43/2024/03/Twitter_Subpoena.jpg?w=1420&amp;quality=75 1420w" sizes="(max-width: 30rem) 425px, (min-width: 30rem) and (max-width: 40rem) 585px, (min-width: 40rem) 710px" loading="lazy"><figcaption>A copy of the NYPD subpoena supplied by X.</figcaption></figure><p>The legal status of the NYPD's use of warrantless subpoenas for social media information isn't as clear as it might be, in part because when the NYPD's use of such subpoenas is challenged, it tends to withdraw the subpoenas rather than engage in a court process that might definitively establish the legality or illegality of its practice.</p><p>In 2020, the department <a href="https://www.nytimes.com/2020/02/14/nyregion/patriot-act-subpoena-nypd.html" target="_blank" rel="noreferrer noopener">sent a nearly identical subpoena</a> to Twitter, seeking a broad swath of records for Tina Moore, a New York Post reporter covering the NYPD. When lawyers for the Post threatened to challenge the subpoena in court, the NYPD hastily withdrew it. The incident provoked significant backlash, with free speech advocates, the Post, and groups like the Media Law Resource Center decrying the chilling effect of the subpoena.</p><p>Clancy isn't working as a conventional journalist, but he is involved in the collection and dissemination of information about the NYPD. As president of the Brooklyn chapter of Copwatch Patrol Unit, Clancy receives tips about police conduct, and films police conduct himself. While the withdrawal of the subpoena makes it all but impossible to know what the NYPD's goal was in issuing it, he has his theories. Maybe the police are just trying to rattle him with a shot across the bow. Or maybe the NYPD is trying to find out whether NYPD officers themselves are feeding his organization information about misconduct. "That happens," Clancy told Hell Gate. "For a junior officer who sees misconduct by his superiors, if you take that to Internal Affairs, maybe your boss has a connection there and it winds up being you who gets in trouble. So some cops prefer to take it to Copwatch."</p><p>As a further wrinkle, the NYPD's subpoena letter to X was sent by Michael Yanni, a member of the office of the department's deputy commissioner for legal matters, but used the email address <a href="mailto:intelsubpoenas@nynjhidta.org" target="_blank" rel="noreferrer noopener">intelsubpoenas@nynjhidta.org</a>, a domain affiliated with the <a href="https://www.hidtaprogram.org/ny_nj.php" target="_blank" rel="noreferrer noopener">New York and New Jersey High Intensity Drug Trafficking Area</a> office, a regional and federal joint drug task force. Similarly, the letter from the NYPD notifying NYCLU of the withdrawal of the subpoena was sent from Mallory McGee, an attorney with the NYPD Legal Bureau, using another email attached to the drug task force.</p><p>Why are NYPD lawyers sending out subpoenas for a critic's private information without a warrant? Why are they using federal task force email domains to do it? Why did they withdraw the subpoena rather than defend its legitimacy in court? How many of these warrantless subpoenas have they sent out in the last year? We asked the NYPD these questions, but did not receive a response.</p><p>Clancy, for his part,<strong> </strong>said that he's undaunted, and that the NYPD has no business rummaging through his social media content and metadata.&nbsp;</p><p>"Why would you use a shower curtain and close the bathroom door when you take a shower, if you have nothing to hide?" he asked. "Because it's none of your business, that's why. What the police might want to know and what they have a legal right to know are two different things."</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Vulkan Foliage rendering using GPU Instancing (137 pts)]]></title>
            <link>https://www.thegeeko.me/blog/foliage-rendering</link>
            <guid>39681812</guid>
            <pubDate>Tue, 12 Mar 2024 16:54:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.thegeeko.me/blog/foliage-rendering">https://www.thegeeko.me/blog/foliage-rendering</a>, See on <a href="https://news.ycombinator.com/item?id=39681812">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><p>I was watching <a href="https://www.youtube.com/watch?v=jw00MbIJcrk">acerola's video</a> on foliage rendering and I liked the idea of rendering millions of grass blades, it was a good opportunity to play around with GPU instancing and indirect draw.</p><h3 id="what-i'll-be-using"><span>
      What I'll Be Using
    </span></h3><p>The features and extensions set used in this abroach are:</p><ul><li><p><code>VK_EXT_buffer_device_address</code> This extension allows for using pointers in GLSL and passing them in push constants or buffers, this extension along with <code>VK_EXT_descriptor_indexing</code> makes dealing with buffers and textures soo much easier and nicer IMHO.</p></li><li><p><code>multiDrawIndirect</code> This feature allows for multiple draw calls in indirect buffer make use of them to draw multiple LODs of the grass.</p></li></ul><h2 id="how-it-works"><span>
      How It Works
    </span></h2><p>Basically, there's a compute pass that generates info about the grass blades stores them in a buffer, and does frustum culling and LOD selection and fill indirect commands, then a graphics pass to draw the blades.</p><h3 id="compute-pass"><span>
      Compute Pass
    </span></h3><p>our grass blade is defined by the following</p><pre><code><span>struct</span> <span>GrassBlade</span> <span>{</span>
	<span>// holds position(displacement from the center) of the blade</span>
	<span>// and a value determining how much it will bend</span>
	<span>vec4</span> pos_bend<span>;</span>
	<span>// holds width and height multiplier</span>
	<span>// and pitch angle</span>
	<span>// and a term used for animation</span>
	<span>vec4</span> size_anim_pitch<span>;</span>
<span>}</span><span>;</span>
</code></pre>

<p>we want to generate all of this data we start by</p><h4 id="position(displacement-from-the-center)"><span>
      Position(displacement from the center)
    </span></h4><p>It starts by generating random positions inside a rectangle area defined by center, width and height using the following formula</p><pre><code><span>// Hash Functions for GPU Rendering, Jarzynski et al.</span>
<span>// http://www.jcgt.org/published/0009/03/02/</span>
<span>vec3</span> <span>rand</span><span>(</span><span>uvec3</span> v<span>)</span> <span>{</span>
	v <span>=</span> v <span>*</span> <span>1664525u</span> <span>+</span> <span>1013904223u</span><span>;</span>
	v<span>.</span>x <span>+=</span> v<span>.</span>y <span>*</span> v<span>.</span>z<span>;</span>
	v<span>.</span>y <span>+=</span> v<span>.</span>z <span>*</span> v<span>.</span>x<span>;</span>
	v<span>.</span>z <span>+=</span> v<span>.</span>x <span>*</span> v<span>.</span>y<span>;</span>
	v <span>^=</span> v <span>&gt;&gt;</span> <span>16u</span><span>;</span>
	v<span>.</span>x <span>+=</span> v<span>.</span>y <span>*</span> v<span>.</span>z<span>;</span>
	v<span>.</span>y <span>+=</span> v<span>.</span>z <span>*</span> v<span>.</span>x<span>;</span>
	v<span>.</span>z <span>+=</span> v<span>.</span>x <span>*</span> v<span>.</span>y<span>;</span>
	<span>return</span> <span>vec3</span><span>(</span>v<span>)</span> <span>*</span> <span>(</span><span>1.0</span> <span>/</span> <span>float</span><span>(</span><span>0xffffffffu</span><span>)</span><span>)</span><span>;</span>
<span>}</span>

<span>uvec2</span> i <span>=</span> gl_GlobalInvocationID<span>.</span>xy<span>;</span>
<span>vec3</span> pos <span>=</span> pc<span>.</span>aria_center<span>.</span>xyz<span>;</span>

<span>vec3</span> rand_val <span>=</span> <span>rand</span><span>(</span><span>uvec3</span><span>(</span>i<span>,</span> <span>378294</span><span>)</span><span>)</span><span>;</span>
pos<span>.</span>x <span>+=</span> <span>(</span>pc<span>.</span>aria<span>.</span>x <span>/</span> <span>2</span><span>)</span> <span>-</span> rand_val<span>.</span>x <span>*</span> pc<span>.</span>aria<span>.</span>x<span>;</span>
pos<span>.</span>z <span>+=</span> <span>(</span>pc<span>.</span>aria<span>.</span>y <span>/</span> <span>2</span><span>)</span> <span>-</span> rand_val<span>.</span>y <span>*</span> pc<span>.</span>aria<span>.</span>y<span>;</span>
</code></pre>

<h4 id="height-and-width"><span>
      Height &amp; Width
    </span></h4><p>then it generates a uv coords for each grass blade to sample a texture by doing</p><pre><code><span>vec2</span> bottom_left_corner <span>=</span> pc<span>.</span>aria_center<span>.</span>xz <span>-</span> <span>(</span>pc<span>.</span>aria<span>.</span>xy <span>/</span> <span>2.0</span><span>)</span><span>;</span>
<span>vec2</span> upper_right_corner <span>=</span> pc<span>.</span>aria_center<span>.</span>xz <span>+</span> <span>(</span>pc<span>.</span>aria<span>.</span>xy <span>/</span> <span>2.0</span><span>)</span><span>;</span>
<span>vec2</span> uv <span>=</span> pos<span>.</span>xz <span>/</span> <span>(</span>upper_right_corner <span>-</span> bottom_left_corner<span>)</span><span>;</span>
</code></pre>

<p>after that using the uv coords, we can sample a simplex noise texture to have height multiplier or width multiplier we can also add some terms for user control using simplex noise for height makes sense as the tall grass tends to stick together in real life.</p><p><img src="https://www.thegeeko.me/images/folliage-simplex.png" alt="simplex noise for hight"></p><h4 id="bend-term"><span>
      Bend Term
    </span></h4><p>This is a term to define how bendable a grass blade is which will be used later as a multiplier in vertex shader to do the animation.</p><h4 id="animation-term"><span>
      Animation term
    </span></h4><p>This is a term used by the animation formula to animate the grass it's the same for all of the vertices so calculating it here saves us time and allows us to not pass uvs to vertex shader which is 2 floats but for millions of blads it will be 100s of megabytes. It's calculated by the following</p><pre><code><span>float</span> <span>wind</span><span>(</span><span>vec2</span> uv<span>,</span> <span>float</span> time<span>,</span> <span>float</span> base_freq<span>,</span> 
           <span>float</span> freq_scale<span>,</span> <span>float</span> strength<span>)</span> <span>{</span>
	<span>float</span> noise_factor <span>=</span> <span>length</span><span>(</span><span>pcg2d</span><span>(</span><span>uvec2</span><span>(</span>uv <span>*</span> <span>104234.f</span><span>)</span><span>)</span><span>)</span><span>;</span>
	
	<span>// Time-varying frequency for windblown effect</span>
	<span>float</span> freq <span>=</span> base_freq <span>+</span> <span>sin</span><span>(</span>time<span>)</span> <span>*</span> freq_scale<span>;</span>
	
	<span>vec2</span> uv_displaced <span>=</span> uv <span>+</span> strength<span>;</span>
	<span>vec2</span> uv_scaled <span>=</span> uv_displaced <span>*</span> freq<span>;</span>
	
	<span>float</span> sin_term <span>=</span> uv_scaled<span>.</span>x <span>+</span> uv_scaled<span>.</span>y <span>+</span> noise_factor<span>;</span>
	<span>return</span> sin_term<span>;</span>
<span>}</span>
</code></pre>

<p>In the vertex shader this value will be used as a parameter for the sin function which will result in a kinda wind like wave, you can see for yourself here in <a href="https://www.shadertoy.com/view/MXXXWj">shader toy</a></p><p>It's called <code>sin_term</code> because I'll pass it to sin function later in the vertex shader.</p><h4 id="pitch"><span>
      Pitch
    </span></h4><p>defines the angle of rotation around the UP axis, which is always <code>{0, 1, 0}</code> in our case the grass will always point upwards, so all we need is just an angle to construct a rotation matrix in the vertex shader. You can make this random or always face the camera or be controlled by the user whatever suits your needs.</p><h4 id="frustum-culling"><span>
      Frustum culling
    </span></h4><p>For the frustum culling, we start by generating a sphere around each blade the radius of the circle is determined by the max of height and width then we transform the sphere to camera space, at this point the distance from the camera is just the length of the point as in camera space the camera is at <code>0, 0, 0</code> we use this to apply the cutoff distance and choose LOD.</p><pre><code><span>float</span> radius <span>=</span> blade_height <span>&gt;=</span> blade_width <span>?</span> blade_height <span>:</span> blade_width<span>;</span>
<span>vec4</span> center <span>=</span> <span>vec4</span><span>(</span>pos<span>,</span> <span>1.0</span><span>)</span><span>;</span>
center<span>.</span>x <span>+=</span> <span>(</span>blade_width <span>/</span> <span>2</span><span>)</span><span>;</span>
center<span>.</span>y <span>+=</span> <span>(</span>blade_height <span>/</span> <span>2</span><span>)</span><span>;</span>

center <span>=</span> pc<span>.</span>per_frame<span>.</span>view <span>*</span> center<span>;</span>

<span>// cut off distance</span>
<span>//We are in view space .. camera at 0, 0, 0;</span>
<span>float</span> dist_from_cam <span>=</span> <span>distance</span><span>(</span>center<span>.</span>xyz<span>)</span><span>;</span>
<span>const</span> <span>float</span> cutoff_dist <span>=</span> <span>800</span><span>;</span>
<span>const</span> <span>float</span> low_lod_dist <span>=</span> <span>200</span><span>;</span>

<span>bool</span> visible <span>=</span> <span>(</span>dist_from_cam <span>&lt;</span> cutoff_dist<span>)</span><span>;</span>
<span>bool</span> low_lod <span>=</span> <span>(</span>dist_from_cam <span>&gt;</span> low_lod_dist<span>)</span><span>;</span>
</code></pre>

<p>then the frustum culling we kinda doing the projection by hand and then check if the sphere is in range, I only do culling on the x and y axes as for the z axis we already have a cutoff but adding that is also trivial. I learned this way of culling on <a href="https://youtu.be/NGGzk4Fi2iU?t=6962">Arseny Kapoulkine's stream</a> they explain it much better but basically, we extract the left or right plane(we need just one of them) and the top or bottom plane then on the GPU we calculate the dot product between the sphere center and planes while taking the abs of the x component of the center of the sphere to do the culling on both sides at same time utilizing its symmetry.</p><pre><code><span>// the dot product with x/z components of the x plain normal</span>
visible <span>=</span> visible <span>&amp;&amp;</span> 
	center<span>.</span>z <span>*</span> frustum<span>[</span><span>1</span><span>]</span> <span>+</span> <span>abs</span><span>(</span>center<span>.</span>x<span>)</span> <span>*</span> frustum<span>[</span><span>0</span><span>]</span> <span>&lt;</span> radius<span>;</span>
<span>// the dot product with y/z components of the y plain normal</span>
visible <span>=</span> visible <span>&amp;&amp;</span> <span>// </span>
	center<span>.</span>z <span>*</span> frustum<span>[</span><span>3</span><span>]</span> <span>+</span> <span>abs</span><span>(</span>center<span>.</span>y<span>)</span> <span>*</span> frustum<span>[</span><span>2</span><span>]</span> <span>&lt;</span> radius<span>;</span>
</code></pre>

<p>After that, we fill the blade info in the respective index in the blades data buffer</p><pre><code><span>uint</span> buf_index <span>=</span> pc<span>.</span>blades_number<span>.</span>x <span>*</span> i<span>.</span>y <span>+</span> i<span>.</span>x<span>;</span>
pc<span>.</span>grass<span>.</span>data<span>[</span>buf_index<span>]</span><span>.</span>pos_bend<span>.</span>xyz <span>=</span> pos<span>;</span>
pc<span>.</span>grass<span>.</span>data<span>[</span>buf_index<span>]</span><span>.</span>pos_bend<span>.</span>w <span>=</span> bend_factor<span>;</span>
pc<span>.</span>grass<span>.</span>data<span>[</span>buf_index<span>]</span><span>.</span>anim_size<span>.</span>x <span>=</span> blade_width<span>;</span>
pc<span>.</span>grass<span>.</span>data<span>[</span>buf_index<span>]</span><span>.</span>anim_size<span>.</span>y <span>=</span> blade_height<span>;</span>
pc<span>.</span>grass<span>.</span>data<span>[</span>buf_index<span>]</span><span>.</span>anim_size<span>.</span>z <span>=</span> pitch<span>;</span>
pc<span>.</span>grass<span>.</span>data<span>[</span>buf_index<span>]</span><span>.</span>anim_size<span>.</span>w <span>=</span> sin_term<span>;</span>
</code></pre>

<h4 id="draw-command-buffers"><span>
      Draw Command Buffers
    </span></h4><p>After generating the data we can fill the command buffer, each thread will atomically increase the number of instances in the <a href="https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDrawIndirectCommand.html">commands buffer</a> this allows us to know to use the instance count as an index in another buffer to store the indices of the visible blades which allows us to access the values using <code>gl_InstaceIndex</code> we can also copy the buffer and sort using prefix sum scan just like Acerola in his video but this is better memory-wise and probably performance wise but I didn't measure performance. in summary, the vertex shader will use <code>gl_InstaceIndex</code> to index into a buffer that contains the indices of the visible grass blades.</p><p><img src="https://www.thegeeko.me/images/foliage-buffers.png" alt="diagram showing the buffers layout"></p><p>The compute shader makes use of 2 indirect draw commands one for high LOD and other for low LOD we can add as many LOD levels as we want, and we check if it's low LOD or high and then increase <code>gl_InstanceIndex</code> in the respective command buffer.</p><pre><code><span>// cmd_buf[0] is high LOD</span>
<span>// cmd_buf[1] is low LOD</span>
<span>bool</span> low_lod <span>=</span> dist_from_cam <span>&gt;</span> low_lod_dist<span>;</span>
<span>if</span> <span>(</span>visible<span>)</span> <span>{</span>
	<span>uint</span> cmd_index <span>=</span> <span>uint</span><span>(</span>low_lod<span>)</span><span>;</span>
	<span>uint</span> index_in_visible <span>=</span> <span>atomicAdd</span><span>(</span>
		pc<span>.</span>cmds<span>.</span>data<span>[</span>cmd_index<span>]</span><span>.</span>instance_count<span>,</span> 
		<span>1</span>
	<span>)</span><span>;</span>
<span>}</span>
</code></pre>

<p>after that, we use <code>index_in_visible</code> to index into the visible blades indices buffer and store the index of the current grass blade.</p><pre><code><span>// pc.visible is the buffer ref of the visible high LOD buffers</span>
<span>// pc.visible_low_lod is the buffer ref of the visible low LOD buffers</span>
DrawIndices indices <span>=</span> low_lod <span>?</span> pc<span>.</span>visible_low_lod <span>:</span> pc<span>.</span>visible<span>;</span>
indices<span>.</span>i<span>[</span>index_in_visible<span>]</span> <span>=</span> buf_index<span>;</span>
<span>// buf_index is the index of the grass blade.</span>
</code></pre>

<p>Now we have our indices data in a continuous buffer to index into using <code>gl_InstanceIndex</code> and <code>gl_DrawID</code> to determine which indices buffer to read from. We are ready to draw the grass blades.</p><h3 id="rendering"><span>
      Rendering
    </span></h3><p>In the vertex shader we start by pulling the Blade data respective to the current instance.</p><pre><code>DrawIndices visible <span>=</span> gl_DrawID <span>==</span> <span>1</span> <span>?</span> pc<span>.</span>visible_low_lod <span>:</span> pc<span>.</span>visible<span>;</span>
<span>uint</span> i_visible <span>=</span> visible<span>.</span>i<span>[</span>gl_InstanceIndex<span>]</span><span>;</span>
GrassBlade blade <span>=</span> pc<span>.</span>grass<span>.</span>data<span>[</span>i_visible<span>]</span><span>;</span>
</code></pre>

<p>After that, we construct a rotation matrix and apply the height and width multiplier.</p><pre><code><span>float</span> sin_pitch <span>=</span> <span>sin</span><span>(</span>blade<span>.</span>anim_size<span>.</span>z<span>)</span><span>;</span>
<span>float</span> cos_pitch <span>=</span> <span>cos</span><span>(</span>blade<span>.</span>anim_size<span>.</span>z<span>)</span><span>;</span>
<span>float</span> height_multiplier <span>=</span> blade<span>.</span>anim_size<span>.</span>y<span>;</span>
<span>float</span> width_multiplier <span>=</span> blade<span>.</span>anim_size<span>.</span>x<span>;</span>
<span>mat3</span> rotation <span>=</span> <span>{</span>
	<span>{</span>cos_pitch<span>,</span> <span>0</span><span>,</span> <span>-</span>sin_pitch<span>}</span><span>,</span>
	<span>{</span><span>0</span><span>,</span> <span>1</span><span>,</span> <span>0</span><span>}</span><span>,</span>
	<span>{</span>sin_pitch<span>,</span> <span>0</span><span>,</span> cos_pitch<span>}</span><span>,</span>
<span>}</span><span>;</span>

<span>vec3</span> v_pos <span>=</span> rotation <span>*</span> 
	<span>vec3</span><span>(</span>v<span>.</span>x <span>*</span> width_multiplier<span>,</span> v<span>.</span>y <span>*</span> height_multiplier<span>,</span> v<span>.</span>z<span>)</span><span>;</span>
</code></pre>

<p>Then we use the sin term to animate the grass blade using a sin function we scroll with time and the height of the vertex because naturally the tip of of the grass blade skew more than the base.</p><pre><code><span>float</span> sin_term <span>=</span> blade<span>.</span>anim_size<span>.</span>w<span>;</span>
<span>float</span> bend <span>=</span> <span>sin</span><span>(</span>sin_term <span>+</span> pc<span>.</span>time <span>+</span> <span>(</span>blade<span>.</span>pos_bend<span>.</span>w <span>*</span> pos<span>.</span>y<span>)</span><span>)</span><span>;</span>
pos<span>.</span>z <span>+=</span> bend <span>*</span> pos<span>.</span>y<span>;</span>
</code></pre>

<p>here is how it looks</p><p>
  <iframe src="https://www.youtube.com/embed/mDakjkrvH-0" title="Grass Animation" frame-border="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
  </iframe>
</p><p>For the color, I opted for a simple gradient that goes brighter as it gets higher. I plan to improve this for example using normals for the grass also add some specular lighting as it could look really nice for example like Ghost of Tsushima's grass.</p><h3 id="optimization"><span>
      Optimization
    </span></h3><p>The simplest thing I thought of was just to reduce the amount of the work the vertex shader does since it will run millions of times a low hanging fruit was multiplying the projection and view matrix on the CPU and have it ready for the vertex shader, the next thing we can do is optimize the grass blade mesh I've used <a href="https://github.com/zeux/meshoptimizer">Mesh Optimizer</a> by Arseny Kapoulkine I used it and did multiple optimizations and the one who had the most impact was converting the grass blade from a triangle list to a triangle strip that reduced the number of vertex shader invocations drastically and almost cut the vertex shader work in half and the shape of the grass blade can be represented nicely as a strip.</p><h4 id="very-rough-numbers"><span>
      very rough numbers
    </span></h4><p><strong>Note:</strong> <em>note I got the numbers using <a href="https://registry.khronos.org/vulkan/specs/1.3-extensions/html/vkspec.html#queries">Vulkan's timestamp queries</a></em></p><p>On my RX5600XT using the <a href="https://docs.mesa3d.org/drivers/radv.html">open source drivers(RADV)</a> on Linux in 1080p resleoution my GPU can process about 6'770'688 grass blade with all of them visible the compute shader takes about <code>4.7ms</code> and drawing it takes around <code>8ms</code> that's about it more than that it drop blew 60fps. Increasing the area covered by the grass to 1000 by 1000 we can consider up to 19'066'880 grass blade with compute shader taking about <code>2.5ms</code> and drawing them takes about <code>6ms</code>. <img src="https://www.thegeeko.me/images/folliage-stats.png" alt="performance data"></p></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pilot of Boeing flight says he lost control after instrument failure (223 pts)]]></title>
            <link>https://www.cnn.com/2024/03/12/australia/latam-airlines-flight-injuries-new-zealand-tuesday-intl-hnk/index.html</link>
            <guid>39681102</guid>
            <pubDate>Tue, 12 Mar 2024 16:01:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnn.com/2024/03/12/australia/latam-airlines-flight-injuries-new-zealand-tuesday-intl-hnk/index.html">https://www.cnn.com/2024/03/12/australia/latam-airlines-flight-injuries-new-zealand-tuesday-intl-hnk/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=39681102">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-uri="cms.cnn.com/_components/video-resource/instances/cltnygdwv000a356hlh05ruvo@published" data-component-name="video-resource" data-editable="lede" data-fixed-ratio="16x9" data-parent-uri="cms.cnn.com/_components/video-resource/instances/h_dac652842f537ff8249037a13b0528b9@published" data-video-id="world/2024/03/12/boeing-jet-flight-drop-pasenger-ebof-intv-vpx.cnn" data-live="" data-analytics-aggregate-events="true" data-custom-experience="" data-asset-type="hlsTs" data-medium-env="prod" data-autostart="unmuted" data-show-ads="true" data-source="CNN" data-featured-video="true" data-headline="Passenger shares what pilot told him after plane's mid-air drop" data-description="Dozens of people <a href=&quot;https://edition.cnn.com/2024/03/11/australia/new-zealand-latam-airlines-intl-hnk/index.html&quot; target=&quot;_blank&quot;>were injured</a> after a flight from Australia to New Zealand experienced a &quot;technical event&quot; that produced a sudden movement, according to the flight's operator. CNN's Erin Burnett speaks with Brian Jokat, a passenger aboard the plane. " data-duration="04:32" data-source-html="<span class=&quot;video-resource__source&quot;> - Source:
                <a href=&quot;https://www.cnn.com/&quot; class=&quot;video-resource__source-url&quot;>CNN</a>
    </span>" data-fave-thumbnails="{&quot;big&quot;: { &quot;uri&quot;: &quot;https://media.cnn.com/api/v1/images/stellar/prod/240312000801-brian-jokat.jpg?c=16x9&amp;q=h_540,w_960,c_fill&quot; }, &quot;small&quot;: { &quot;uri&quot;: &quot;https://media.cnn.com/api/v1/images/stellar/prod/240312000801-brian-jokat.jpg?c=16x9&amp;q=h_540,w_960,c_fill&quot; }  }" data-vr-video="false" data-show-html="<a data-uri=&quot;cms.cnn.com/_components/show/instances/show_4E71F009-862D-73F6-CD76-6FE946F4C52F@published&quot; href=&quot;https://www.cnn.com/shows/erin-burnett-out-front&quot; class=&quot;show show__showlink-url&quot;> Erin Burnett Out Front
    </a>" data-byline-html="<div data-uri=&quot;cms.cnn.com/_components/byline/instances/byline_h_dac652842f537ff8249037a13b0528b9-video-resource@published&quot; class=&quot;byline&quot; data-editable=&quot;settings&quot;>
		<div class=&quot;byline__images&quot;>
		</div>
		<div class=&quot;byline__names&quot;>
			<span class=&quot;byline__name&quot;>Lauryn Froneberger</span>
		</div>
</div>" data-check-event-based-preview="" data-network-id="" data-publish-date="2024-03-12T04:28:13Z" data-video-section="world" data-canonical-url="https://www.cnn.com/videos/world/2024/03/12/boeing-jet-flight-drop-pasenger-ebof-intv-vpx.cnn" data-branding-key="" data-video-slug="boeing-jet-flight-drop-pasenger-ebof-intv-vpx" data-first-publish-slug="boeing-jet-flight-drop-pasenger-ebof-intv-vpx" data-video-tags="" data-details="" data-freewheel-lede="true">
            <div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/thumbnail-image-2ea39d97dd22a1f4d35f7c81c1b15d0d@published" data-name="brian jokat" data-component-name="image" data-observe-resizes="" data-original-ratio="0.5625" data-original-height="1080" data-original-width="1920" data-url="https://media.cnn.com/api/v1/images/stellar/prod/240312000801-brian-jokat.jpg?c=original" data-unselectable="true" id="player-cms.cnn.com/_components/video-resource/instances/cltnygdwv000a356hlh05ruvo@published">
       <picture><img src="https://media.cnn.com/api/v1/images/stellar/prod/240312000801-brian-jokat.jpg?c=16x9&amp;q=w_850,c_fill" alt="brian jokat" onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="1080" width="1920"></picture>
    </div>
              
            <div>
                <p>Passenger shares what pilot told him after plane's mid-air drop</p>
                <p><span>
                            04:32
                        </span>
                        <span> - Source:
                <a href="https://www.cnn.com/">CNN</a>
    </span>
                </p>
            </div>
        </div><div data-editable="content" itemprop="articleBody" data-reorderable="content">
                    <p><cite>
      <span data-editable="location"></span>
      <span data-editable="source">CNN</span>
        &nbsp;—&nbsp;
    </cite>
</p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltns0b3x000j29nwfir7cmm3@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The pilot of a&nbsp;terrifying flight from Australia to New Zealand told those on board he temporarily lost control of his Boeing 787 after one of its instruments failed, a passenger said Monday, as&nbsp;authorities investigate what caused a sudden drop that threw travelers around the cabin, injuring dozens.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltooqik10000356h6actfbck@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            In accordance with rules outlined by the International Civil Aviation Organization (ICAO), Chile’s Directorate General of Civil Aeronautics (DGAC) have sent investigators from the agency’s Operations and Airworthiness team to look into the incident, according to a statement released on Tuesday.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltooqlkc0003356hao4fvgvg@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            “Given that the State of Registration of the aircraft involved is Chilean, it has been established with the New Zealand Transport Accident Investigation Commission (TAIC) that the investigation will be carried out by the Chilean Aeronautical Authority,” the statement read.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw74p0000o3b6h7wk6ux7l@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The incident aboard&nbsp;LATAM Airlines flight 800 from Sydney to Auckland is the latest to hit troubled aircraft manufacturer Boeing, which has been rocked by years of quality and safety issues.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw74p1000p3b6hvcr6b2vv@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Passenger Brian Jokat described the horrifying moment when he was woken from his sleep as the aircraft “dropped something to the effect of 500 feet instantly.”
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw74p1000q3b6hkhce26wp@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            “That’s when I opened my eyes and there was various individuals at the top of the plane. Just stuck to the roof and then they fell to the floor. And then I just realized I’m not in a movie, this is actually for real,” he told CNN’s Erin Burnett.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw74p1000r3b6h76q27b0p@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            After landing in Auckland, Jokat said&nbsp;the pilot checked on the passengers and explained he had temporarily lost control of the jet.
    </p>

  


    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw74p1000s3b6h7rk7ym2w@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            “I immediately engaged with him and said, ‘What was that?’ And he openly admitted, he said, ‘I lost control of the plane. My gauges just kind of went blank on me,’” Jokat said.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw74p1000t3b6h0dk7dodb@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            “He said for that brief moment he couldn’t control anything and that’s when the plane did what it did. Then he said the gauges came back and it reengaged, the plane just reengaged to its normal flight pattern. And we had no issues before, no issues after. But just that moment.”
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw74p1000u3b6hp8i7pk9e@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The plane, operated by Chile’s flag carrier, was a Boeing 787-9 Dreamliner, according to flight tracking website FlightAware.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw74p1000v3b6ha7rma63l@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            LATAM on Monday said the plane “had a technical event during the flight which caused a strong movement,” adding it had landed as scheduled in Auckland.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw74p1000w3b6hd3644fqw@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            In a statement to CNN Tuesday, Boeing said it was “working to gather more information about the flight and will provide any support needed by our customer.”
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw74p1000x3b6hm7ja8u08@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            About 50 people were injured in the incident, with one person in serious condition, emergency services said.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw74p1000y3b6hxgbcfg0c@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Jokat said he feared for his life when he saw fellow passengers fly out of their seats and hit the ceiling of the plane.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw74p1000z3b6h0omkrh6y@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            “People were screaming and crying. And yeah, it was mass chaos for a few short seconds,” he said. “Clearly there was a moment in my head that I just kind of resigned to the fact this could be it. This might be it.”
    </p>

<div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/cltnygu5f000i356hfv76n9kl@published" data-name="AP24071277329116.jpg" data-component-name="image" data-observe-resizes="" data-original-ratio="0.666875" data-original-height="1067" data-original-width="1600" data-url="https://media.cnn.com/api/v1/images/stellar/prod/ap24071277329116.jpg?c=original" data-editable="settings">
       <picture><source height="1067" width="1600" media="(min-width: 1280px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/ap24071277329116.jpg?q=w_1110,c_fill/f_webp" type="image/webp"><source height="1067" width="1600" media="(min-width: 960px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/ap24071277329116.jpg?q=w_1015,c_fill/f_webp" type="image/webp"><source height="1067" width="1600" media="(min-width: 480px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/ap24071277329116.jpg?q=w_1160,c_fill/f_webp" type="image/webp"><source height="1067" width="1600" media="(max-width: 479px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/ap24071277329116.jpg?q=w_680,c_fill/f_webp" type="image/webp"><img src="https://media.cnn.com/api/v1/images/stellar/prod/ap24071277329116.jpg?q=w_1110,c_fill" alt="About 50 people were injured in the incident, according to emergency services in Auckland." onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="1067" width="1600" loading="lazy"></picture>
    </div>

  

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw85cu00143b6hbjs1n6e7@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            As investigators scramble to discover what might have caused the sudden drop, the incident comes at a fraught time for Boeing.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw87h400163b6haaxyflqi@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The US manufacturer has faced harsh criticism for a series of quality and safety issues in recent years, with many critics saying the company has shifted its focus in the last few decades to&nbsp;<a href="https://www.cnn.com/2024/01/30/business/boeing-history-of-problems/index.html">financial results at the cost of safety and quality</a>&nbsp;in its aircraft.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw87h400173b6hhq9ll6io@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            They include&nbsp;<a href="https://www.cnn.com/2019/03/10/africa/ethiopian-airlines-crash-boeing-max-8-intl/index.html">two fatal crashes</a>&nbsp;of the 737 Max jet due to a design flaw in the plane, numerous halts in deliveries due to quality control issues and, most recently, a&nbsp;<a href="https://www.cnn.com/2024/01/06/us/passengers-alaska-airlines/index.html">door plug that blew off</a>&nbsp;of a new 737 Max operated by Alaska Airlines in January, leaving a gaping hole in the side of the plane.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw87h400183b6hknyzzxol@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Meanwhile, the Federal Aviation Administration in February flagged safety issues with engine anti-ice systems on the 737 Max and larger 787 Dreamliner.
    </p>

  


    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw87h400193b6hoz4rltys@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The safety regulator continues to allow both models of the plane to fly despite the potential problems. Both issues are moving through the FAA’s standard process for developing airworthiness directives — rather than an emergency process — signaling that the agency and plane maker do not believe the issues are serious enough to require the planes to stop flying immediately.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw87h4001a3b6hxskn9e3n@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The FAA said Monday it has given Boeing until late May to produce a plan to remedy issues identified in a federal audit and other reviews, including a safety culture survey of employees and a separate panel report that found workers concerned about retaliation for reporting safety concerns.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw87h4001b3b6h3hx66s5f@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            FAA Administrator Mike Whitaker said he expects the company to produce “a very detailed plan within the next 90 days to fix the quality issues that are out there.”
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cltnw87h4001c3b6hz3tvwqih@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Boeing has said it is working on several of the issues Whitaker identified.
    </p>

  <p data-uri="cms.cnn.com/_components/footnote/instances/cltnwbul0001j3b6h15ioseip@published" data-editable="text" data-article-gutter="true">
  CNN’s Pete Muntean, Greg Wallace and Chris Isidore contributed reporting.
</p>

                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Building Meta’s GenAI Infrastructure (527 pts)]]></title>
            <link>https://engineering.fb.com/2024/03/12/data-center-engineering/building-metas-genai-infrastructure/</link>
            <guid>39680997</guid>
            <pubDate>Tue, 12 Mar 2024 15:52:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://engineering.fb.com/2024/03/12/data-center-engineering/building-metas-genai-infrastructure/">https://engineering.fb.com/2024/03/12/data-center-engineering/building-metas-genai-infrastructure/</a>, See on <a href="https://news.ycombinator.com/item?id=39680997">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

		<ul>
<li aria-level="1"><span>Marking a major investment in Meta’s AI future, we are announcing two 24k GPU clusters. We are sharing details on the hardware, network, storage, design, performance, and software that help us extract high throughput and reliability for various AI workloads. We use this cluster design for Llama 3 training.</span></li>
<li aria-level="1"><span>We are strongly committed to open compute and open source. We built these clusters on top of </span><a href="https://engineering.fb.com/2022/10/18/open-source/ocp-summit-2022-grand-teton/" target="_blank" rel="noopener"><span>Grand Teton</span></a><span>, </span><a href="https://www.opencompute.org/wiki/Open_Rack/SpecsAndDesigns" target="_blank" rel="noopener"><span>OpenRack</span></a><span>, and </span><a href="https://pytorch.org/" target="_blank" rel="noopener"><span>PyTorch</span></a><span> and continue to push open innovation across the industry.</span></li>
<li aria-level="1"><span>This announcement is one step in our ambitious infrastructure roadmap. By the end of 2024, we’re aiming to continue to grow our infrastructure build-out that will include 350,000 NVIDIA H100 GPUs as part of a portfolio that will feature compute power equivalent to nearly 600,000 H100s.</span></li>
</ul>
<p><span>To lead in developing AI means leading investments in hardware infrastructure. Hardware infrastructure plays an important role in AI’s future. Today, we’re sharing details on two versions of our </span><span>24,576-GPU data center scale cluster at Meta. These clusters support our current and next generation AI models, including Llama 3, the successor to</span><a href="https://ai.meta.com/llama/open-innovation-ai-research-community"> <span>Llama 2</span></a><span>, our publicly released LLM, as well as AI research and development across GenAI and other areas .</span></p>
<h2><span>A peek into Meta’s large-scale AI clusters</span></h2>
<p><span>Meta’s long-term vision is to build artificial general intelligence (AGI) that is open and built responsibly so that it can be widely available for everyone to benefit from. As we work towards AGI, we have also worked on scaling our clusters to power this ambition. The progress we make towards AGI creates new products,</span><a href="https://about.fb.com/news/2023/09/introducing-ai-powered-assistants-characters-and-creative-tools/" target="_blank" rel="noopener"> <span>new AI features for our family of apps</span></a><span>, and new AI-centric computing devices.&nbsp;</span></p>
<p><span>While we’ve had a long history of building AI infrastructure, we first shared details on our </span><a href="https://ai.meta.com/blog/ai-rsc/" target="_blank" rel="noopener"><span>AI Research SuperCluster (RSC)</span></a><span>, featuring 16,000 NVIDIA A100 GPUs, in 2022. RSC has accelerated our open and responsible AI research by helping us build our first generation of advanced AI models. It played and continues to play an important role in the development of </span><a href="https://arxiv.org/abs/2302.13971" target="_blank" rel="noopener"><span>Llama</span></a><span> and </span><a href="https://arxiv.org/abs/2307.09288" target="_blank" rel="noopener"><span>Llama 2</span></a><span>, as well as advanced AI models for applications ranging from computer vision, NLP, and speech recognition, to</span><a href="https://ai.meta.com/blog/emu-text-to-video-generation-image-editing-research/" target="_blank" rel="noopener"> <span>image generation</span></a><span>, and even</span> <a href="https://ai.meta.com/blog/code-llama-large-language-model-coding/" target="_blank" rel="noopener"><span>coding</span></a><span>.</span></p>
<p><img decoding="async" src="https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-Clusters-hero.png?w=1024" alt="" width="1024" height="734" srcset="https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-Clusters-hero.png 1999w, https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-Clusters-hero.png?resize=916,656 916w, https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-Clusters-hero.png?resize=768,550 768w, https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-Clusters-hero.png?resize=1024,734 1024w, https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-Clusters-hero.png?resize=1536,1100 1536w, https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-Clusters-hero.png?resize=96,69 96w, https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-Clusters-hero.png?resize=192,138 192w" sizes="(max-width: 992px) 100vw, 62vw"></p>
<h2><span>Under the hood</span></h2>
<p><span>Our newer AI clusters build upon the successes and lessons learned from RSC. We focused on building end-to-end AI systems with a major emphasis on researcher and developer experience and productivity. The efficiency of the high-performance network fabrics within these clusters, some of the key storage decisions, combined with the 24,576 NVIDIA Tensor Core H100 GPUs in each, allow both cluster versions to support models larger and more complex than that could be supported in the RSC and pave the way for advancements in GenAI product development and AI research.</span></p>
<h3><span>Network</span></h3>
<p><span>At Meta, we handle hundreds of trillions of AI model executions per day. Delivering these services at a large scale requires a highly advanced and flexible infrastructure. Custom designing much of our own hardware, software, and network fabrics allows us to optimize the end-to-end experience for our AI researchers while ensuring our data centers operate efficiently.&nbsp;</span></p>
<p><span>With this in mind, we built one cluster with a remote direct memory access (RDMA) over converged Ethernet (RoCE) network fabric solution based on the </span><a href="https://www.arista.com/assets/data/pdf/Datasheets/7800R3-Data-Sheet.pdf" target="_blank" rel="noopener"><span>Arista 7800</span></a><span> with </span><a href="https://engineering.fb.com/2021/11/09/data-center-engineering/ocp-summit-2021/" target="_blank" rel="noopener"><span>Wedge400</span></a><span> and </span><a href="https://engineering.fb.com/2021/11/09/data-center-engineering/ocp-summit-2021/" target="_blank" rel="noopener"><span>Minipack2</span></a><span> OCP rack switches. The other cluster features an </span><a href="https://www.nvidia.com/en-us/networking/quantum2/" target="_blank" rel="noopener"><span>NVIDIA Quantum2 InfiniBand</span></a><span> fabric. Both of these solutions interconnect 400 Gbps endpoints. With these two, we are able to assess the suitability and scalability of these </span><a href="https://engineering.fb.com/2023/11/15/networking-traffic/watch-metas-engineers-on-building-network-infrastructure-for-ai/" target="_blank" rel="noopener"><span>different types of interconnect for large-scale training,</span></a><span> giving us more insights that will help inform how we design and build even larger, scaled-up clusters in the future. Through careful co-design of the network, software, and model architectures, we have successfully used both RoCE and InfiniBand clusters for large, GenAI workloads (including our ongoing training of Llama 3 on our RoCE cluster) without any network bottlenecks.</span></p>
<h3><span>Compute</span></h3>
<p><span>Both clusters are built using</span> <a href="https://engineering.fb.com/2022/10/18/open-source/ocp-summit-2022-grand-teton/" target="_blank" rel="noopener"><span>Grand Teton</span></a><span>, our in-house-designed, open GPU hardware platform that we’ve contributed to the Open Compute Project (OCP). Grand Teton builds on the many generations of AI systems that integrate power, control, compute, and fabric interfaces into a single chassis for better overall performance, signal integrity, and thermal performance. It provides rapid scalability and flexibility in a simplified design, allowing it to be quickly deployed into data center fleets and easily maintained and scaled. Combined with other in-house innovations like our</span> <a href="https://engineering.fb.com/2022/10/18/open-source/ocp-summit-2022-grand-teton/" target="_blank" rel="noopener"><span>Open Rack</span></a><span> power and rack architecture, Grand Teton allows us to build new clusters in a way that is purpose-built for current and future applications at Meta.</span></p>
<p><span>We have been openly designing our GPU hardware platforms beginning with our </span><a href="https://engineering.fb.com/2015/12/10/ml-applications/facebook-to-open-source-ai-hardware-design/" target="_blank" rel="noopener"><span>Big Sur platform in 2015</span></a><span>.</span></p>
<h3><span>Storage</span></h3>
<p><span>Storage plays an important role in AI training, and yet is one of the least talked-about aspects. As the GenAI training jobs become more multimodal over time, consuming large amounts of image, video, and text data, the need for data storage grows rapidly. The need to fit all that data storage into a performant, yet power-efficient footprint doesn’t go away though, which makes the problem more interesting.</span></p>
<p><span>Our storage deployment addresses the data and checkpointing needs of the AI clusters via a home-grown Linux Filesystem in Userspace (FUSE) API backed by a version of Meta’s </span><a href="https://www.usenix.org/conference/fast21/presentation/pan" target="_blank" rel="noopener"><span>‘Tectonic’ distributed storage solution</span></a><span> optimized for Flash media. This solution enables thousands of GPUs to save and load checkpoints in a synchronized fashion (a </span><a href="https://en.wikipedia.org/wiki/Thundering_herd_problem#:~:text=In%20computer%20science%2C%20the%20thundering,able%20to%20handle%20the%20event."><span>challenge</span></a><span> for any storage solution) while also providing a flexible and high-throughput exabyte scale storage required for data loading.</span></p>
<p><span>We have also partnered with </span><a href="https://hammerspace.com/software/" target="_blank" rel="noopener"><span>Hammerspace</span></a><span> to co-develop and land a parallel network file system (NFS) deployment to meet the developer experience requirements for this AI cluster. Among other benefits, Hammerspace enables engineers to perform interactive debugging for jobs using thousands of GPUs as code changes are immediately accessible to all nodes within the environment. When paired together, the combination of our Tectonic distributed storage solution and Hammerspace enable fast iteration velocity without compromising on scale.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>
<p><span>The storage deployments in our GenAI clusters, both Tectonic- and Hammerspace-backed, are based on the </span><a href="https://www.opencompute.org/documents/e1s-expansion-2ou-1s-server-design-specification-pdf"><span>YV3 Sierra Point server platform</span></a><span>, upgraded with the latest high capacity E1.S SSD we can procure in the market today. Aside from the higher SSD capacity, the servers per rack was customized to achieve the right balance of throughput capacity per server, rack count reduction, and associated power efficiency. Utilizing the OCP servers as Lego-like building blocks, our storage layer is able to flexibly scale to future requirements in this cluster as well as in future, bigger AI clusters, while being fault-tolerant to day-to-day Infrastructure maintenance operations.</span></p>
<h3><span>Performance</span></h3>
<p><span>One of the principles we have in building our large-scale AI clusters is to maximize performance and ease of use simultaneously without compromising one for the other. This is an important principle in creating the best-in-class AI models.&nbsp;</span></p>
<p><span>As we push the limits of AI systems, the best way we can test our ability to scale-up our designs is to simply build a system, optimize it, and actually test it (while simulators help, they only go so far). In this design journey, we compared the performance seen in our small clusters and with large clusters to see where our bottlenecks are. In the graph below, AllGather collective performance is shown (as normalized bandwidth on a 0-100 scale) when a large number of GPUs are communicating with each other at message sizes where roofline performance is expected.&nbsp;</span></p>
<p><span>Our out-of-box performance for large clusters was initially poor and inconsistent, compared to optimized small cluster performance. To address this we made several changes to how our internal job scheduler schedules jobs with network topology awareness – this resulted in latency benefits and minimized the amount of traffic going to upper layers of the network. We also optimized our network routing strategy in combination with NVIDIA Collective Communications Library (NCCL) changes to achieve optimal network utilization. This helped push our large clusters to achieve great and expected performance just as our small clusters.</span></p>
<figure id="attachment_21048" aria-describedby="caption-attachment-21048"><img decoding="async" src="https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-clusters-performance.png?w=1024" alt="" width="1024" height="768" srcset="https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-clusters-performance.png 1999w, https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-clusters-performance.png?resize=916,687 916w, https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-clusters-performance.png?resize=768,576 768w, https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-clusters-performance.png?resize=1024,768 1024w, https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-clusters-performance.png?resize=1536,1152 1536w, https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-clusters-performance.png?resize=96,72 96w, https://engineering.fb.com/wp-content/uploads/2024/03/Meta-24K-GenAi-clusters-performance.png?resize=192,144 192w" sizes="(max-width: 992px) 100vw, 62vw"><figcaption id="caption-attachment-21048">In the figure we see that small cluster performance (overall communication bandwidth and utilization) reaches 90%+ out of the box, but an unoptimized large cluster performance has very poor utilization, ranging from 10% to 90%. After we optimize the full system (software, network, etc.), we see large cluster performance return to the ideal 90%+ range.</figcaption></figure>
<p><span>In addition to software changes targeting our internal infrastructure, we worked closely with teams authoring training frameworks and models to adapt to our evolving infrastructure. For example, NVIDIA H100 GPUs open the possibility of leveraging new data types such as 8-bit floating point (FP8) for training. Fully utilizing larger clusters required investments in additional parallelization techniques and new storage solutions provided opportunities to highly optimize checkpointing across thousands of ranks to run in hundreds of milliseconds.</span></p>
<p><span>We also recognize debuggability as one of the major challenges in large-scale training. Identifying a problematic GPU that is stalling an entire training job becomes very difficult at a large scale. We’re building tools such as desync debug, or a distributed collective flight recorder, to expose the details of distributed training, and help identify issues in a much faster and easier way</span></p>
<p><span>Finally, we’re continuing to evolve PyTorch, the foundational AI framework powering our AI workloads, to make it ready for tens, or even hundreds, of thousands of GPU training. We have identified multiple bottlenecks for process group initialization, and reduced the startup time from sometimes hours down to minutes.&nbsp;</span></p>
<h2><span>Commitment to open AI innovation</span></h2>
<p><span>Meta maintains its commitment to open innovation in AI software and hardware. We believe open-source hardware and software will always be a valuable tool to help the industry solve problems at large scale.</span></p>
<p><span>Today, we continue to support</span><a href="https://engineering.fb.com/2022/10/18/open-source/ocp-summit-2022-grand-teton/" target="_blank" rel="noopener"> <span>open hardware innovation</span></a><span> as a founding member of OCP, where we make designs like Grand Teton and Open Rack available to the OCP community. We also continue to be the largest and primary contributor to </span><a href="https://pytorch.org/" target="_blank" rel="noopener"><span>PyTorch</span></a><span>, the AI software framework that is powering a large chunk of the industry.</span></p>
<p><span>We also continue to be committed to open innovation in the AI research community. We’ve launched the</span><a href="https://ai.meta.com/llama/open-innovation-ai-research-community" target="_blank" rel="noopener"> <span>Open Innovation AI Research Community</span></a><span>, a partnership program for academic researchers to deepen our understanding of how to responsibly develop and share AI technologies – with a particular focus on LLMs.</span></p>
<p><span>An open approach to AI is not new for Meta. We’ve also launched the </span><a href="https://ai.meta.com/blog/ai-alliance/" target="_blank" rel="noopener"><span>AI Alliance</span></a><span>, a group of leading organizations across the AI industry focused on accelerating responsible innovation in AI within an open community. Our AI efforts are built on a philosophy of open science and cross-collaboration. An open ecosystem brings transparency, scrutiny, and trust to AI development and leads to innovations that everyone can benefit from that are built with safety and responsibility top of mind.&nbsp;</span></p>
<h2><span>The future of Meta’s AI infrastructure</span></h2>
<p><span>These two AI training cluster designs are a part of our larger roadmap for the future of AI. By the end of 2024, we’re aiming to continue to grow our infrastructure build-out that will include 350,000 NVIDIA H100s as part of a portfolio that will feature compute power equivalent to nearly 600,000 H100s.</span></p>
<p><span>As we look to the future, we recognize that what worked yesterday or today may not be sufficient for tomorrow’s needs. That’s why we are constantly evaluating and improving every aspect of our infrastructure, from the physical and virtual layers to the software layer and beyond. Our goal is to create systems that are flexible and reliable to support the fast-evolving new models and research.&nbsp; </span></p>

		
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Deterministic simulation testing for our entire SaaS (180 pts)]]></title>
            <link>https://www.warpstream.com/blog/deterministic-simulation-testing-for-our-entire-saas</link>
            <guid>39680579</guid>
            <pubDate>Tue, 12 Mar 2024 15:21:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.warpstream.com/blog/deterministic-simulation-testing-for-our-entire-saas">https://www.warpstream.com/blog/deterministic-simulation-testing-for-our-entire-saas</a>, See on <a href="https://news.ycombinator.com/item?id=39680579">Hacker News</a></p>
<div id="readability-page-1" class="page"><div fs-toc-offsettop="5rem" fs-toc-element="contents" id="w-node-_1f6dfb0a-a2b6-7b6c-63db-a502d9c255db-48ffd991"><p>Deterministic simulation testing is fast becoming the gold standard for how mission critical software is tested. Deterministic simulation testing was first popularized by the <a href="https://www.foundationdb.org/">FoundationDB</a> team who spent 18 months building a deterministic simulation framework for their database before ever letting it write or read data from an actual physical disk. The results speak for themselves: FoundationDB is widely considered to be one of the most robust and well-tested distributed databases, so much so that Kyle Kingsbury (of Jepsen fame) refused to test it because their deterministic simulator already stress tested FoundationDB more than the Jepsen framework ever could.</p><p>The WarpStream team utilized FoundationDB heavily at Datadog when we built <a href="https://www.datadoghq.com/blog/engineering/introducing-husky/">Husky, Datadog’s columnar storage engine for event data</a>. Over the course of our careers, our team has operated (and been on-call for) almost every database on the market: M3DB, etcd, ZooKeeper, Cassandra, Elasticsearch, Redis, MongoDB, MySQL, Postgres, Apache Kafka and more. In our experience, FoundationDB stands in a league of its own in terms of correctness and reliability due to its early investment in deterministic simulation testing.</p><p>A more recent example of a database system that leverages this approach to testing is <a href="https://tigerbeetle.com/">TigerBeetle</a>, a financial transactions database, that uses <a href="https://www.youtube.com/watch?v=sC1B3d9C_sI">deterministic simulation testing</a> to build one of the most robust financial OLTP databases available today.</p><p>When we were designing WarpStream, we knew that it wouldn’t be enough to just replace Apache Kafka with something cheaper and easier to operate. Kafka is the beating heart of many companies most critical infrastructure, and if we were to stand any chance of convincing those organizations to adopt WarpStream, we’d have to compress 12+ years of production hardening into a much shorter time frame. We accelerated this process with our architectural decision to rely on object storage as the <em>only</em> storage in the system, bypassing many of the tricky problems of ensuring data durability, availability, and replication at scale. Still, the fact that WarpStream leverages object storage is only a small part of ensuring the correctness of the overall system.</p><h2>Antithesis</h2><p>When we first heard about Antithesis, we could hardly contain our excitement. Antithesis has created the holy grail for testing distributed systems: a bespoke hypervisor that deterministically simulates an entire set of Docker containers and injects faults, <em>created by the same people who made FoundationDB</em>. For a group of gray-haired distributed systems engineers, seeing Antithesis in action felt like a tribe of cavemen stumbling upon a post-industrial revolution society. As we spoke more to the Antithesis team, an idea began to crystallize: we could use Antithesis to deterministically simulate not only WarpStream, but our entire SaaS!</p><figure><p><img src="https://assets-global.website-files.com/64baaecd9c5c9b1b6c38aa0e/65ef867803ca64e3d2e6587e_YVvFpLKTZhluuelHF7q2V7b9ABUwpO10pOj-_oj82XeYsh-liqTCnQ-1YCQQD3vAgzvuq5eY47zO76jW4YrCTehCmfw91o4UvoFtX2QlfEjJgTb_ZLzxcuB1rleAamm02bEho7kRdWKG0w86QxbWtG8.png" alt=""></p></figure><p>WarpStream was built differently than most traditional database products. It was designed from day one with a true data plane / control plane split. There are two primary components to WarpStream: First, the Agents (data plane) that act as “thick proxies” and expose the Kafka protocol to clients. The Agents also take care of all communication with object storage, layering in batching and caching to improve performance and keep costs low.</p><p>‍<br>Second is the WarpStream control plane which has two major components:</p><ol role="list"><li>The metadata store that tracks cluster metadata and performs remote consensus.</li><li>Our SaaS software that manages different tenants’ metadata stores, API keys, users, accounts, etc.</li></ol><p>The metadata store only has two dependencies:</p><ol role="list"><li>Any cloud KV store&nbsp;</li><li>Object storage</li></ol><p>The SaaS software adds one additional dependency: a traditional SQL database for managing users, organization, API keys, etc. Looking at WarpStream’s minimal dependencies, we thought, why not test its entire customer experience, from initial signup to running Kafka workloads?</p><p>We created a docker-compose file that contains the following components:</p><ol role="list"><li>Several WarpStream Agents</li><li>Several WarpStream Control Plane nodes</li><li>Several Apache Kafka clients</li><li>A KV store</li><li>Postgres</li><li>An object store (<a href="https://docs.localstack.cloud/user-guide/aws/s3/">localstack</a>)</li></ol><p>With the help of the Antithesis team, we wrote a test workload that started all of those services, signed up for a WarpStream account, created a virtual cluster, and then began producing and consuming data. The workload was carefully structured so that we could assert on a variety of different important properties that WarpStream must maintain at all times.</p><p>The test workload consists of multiple producers that are each assigned a unique ID and write records to a small set of topics. These producers synchronously write a few small JSON records that contain the producer’s ID, a counter (a monotonic sequence number for that producer), and a few other properties. We repeat the same components as the record’s key, value, and in a header to ensure we never shuffle those around accidentally. The consumer side of the workload polls all the topics and all the partitions and asserts that:</p><ol role="list"><li>The topic and partition the record was consumed from matches the topic and partition the record was produced to.</li><li>The offsets for each record in each partition are monotonic.</li><li>The sequence numbers for each producer are monotonic, i.e. if we group the records by &lt;Topic, Partition, ProducerID&gt; the sequence number encoded in the record is monotonically increasing.</li></ol><p>The consumers store all of the records for each polling iteration and can assert that a record at offset X in the previous poll still exists in a future poll. This ensures that WarpStream doesn't lose or reorder data as e.g. background compaction runs to reorganize the cluster’s data for more efficient access.</p><p>These assertions address many of the classes of bugs found in previous Jepsen tests of Apache Kafka and other Kafka-compatible systems. For example, prior Jepsen tests have caught bugs like:</p><ol role="list"><li>Loss of previously acknowledged writes. If a write was acknowledged but failed to appear in the output for that topic-partition in the future, assertion 1 or 3 above would fire.</li><li>Violation of producer idempotency (i.e producing duplicate records without the producer itself crashing or restarting).&nbsp; Antithesis automatically tests our Idempotent Producer implementation by disrupting the network between the producer client and the agent or the agent and the control plane, leading to internal retries inside the Kafka client. A duplicate would cause the sequence number from a producer to stay the same or decrease, causing assertion 3 above to fire.</li><li>Records appearing in different topic-partitions than they were originally written to. This is addressed by assertions 1 or 3 above.</li></ol><h2>What’s the big deal?</h2><p>At this point you might be scratching your head a little bit and wondering: “What’s the big deal here? Isn’t this just a really fancy integration test!?”. Yes and no. Before we started using Antithesis, WarpStream already had a pretty robust set of stress tests we called the “correctness tests”.</p><p>These tests do essentially everything we just described, but in a regular CI environment. Our correctness tests even inject faults all over the WarpStream stack using a custom chaos injection library that we wrote. These tests are incredibly powerful, and they caught a <em>lot</em> of bugs. We would go as far as saying that investing deeply in those correctness tests is one of the main reasons that we were able to develop WarpStream as efficiently as we did.</p><p>Just like our existing correctness tests, the Antithesis hypervisor automatically injects faults, latency, thread hangs, and restarts into the workload. However, unlike our correctness tests, the Antithesis hypervisor is <em>really smart</em> and automatically fuzzes the system under test in an intelligent way.</p><p>Antithesis automatically instruments your software to measure code coverage and build statistics about the execution frequency of each code path. This enables Antithesis to detect “interesting” behavior in the test (such as infrequent code paths getting exercised, or rare log messages being emitted).</p><p>When Antithesis detects interesting or rare behavior, it immediately snapshots the state of the entire system before exploring various different execution branches. This means that Antithesis is <em>much</em> better at triggering rare or unlikely behavior in WarpStream than our existing correctness tests were.</p><p>Also, since Antithesis runs the entire software stack in a deterministic simulator, they can actually run the simulation at <em>faster than wall clock time</em>. Similar to FoundationDB, WarpStream makes heavy use of timers and batching to improve performance. Anytime a WarpStream Goroutine does the equivalent of time.Sleep(), the Antithesis hypervisor <em>doesn’t actually have to wait</em>. On top of that, the Antithesis hypervisor explores code branches <em>concurrently</em>. All of this adds up in a meaningful way such that Antithesis can cost effectively compress years of stress testing into a much shorter time frame.</p><p>It’s hard to over-emphasize just how transformative this technology is for building distributed systems. For all intents and purposes, it really does feel like a time-traveler arrived from 20 years in the future and gave us their state of the art software testing technology. Of course, it’s not <em>actually</em> magic. Antithesis is the result of dozens of the smartest software engineers, statisticians, and machine learning experts pouring their heart and souls into the problem of software testing for 5 years straight. But to us mere mortals, it does feel a lot like magic.</p><h2>We found some bugs</h2><p>Let’s look at a few example runs that Antithesis generated for us.</p><figure><p><img src="https://assets-global.website-files.com/64baaecd9c5c9b1b6c38aa0e/65f066a2ce79a8d23436120b_antithesis%20report%20final.png" loading="lazy" alt=""></p></figure><p>Antithesis ran the WarpStream workload for 6 wall clock hours, during which it simulated 280 hours of application time. The graph shows that it took about 160 “application hours” for Antithesis to “stall” and stop discovering new “behaviors” in the WarpStream workload. This means that running the tests for longer than 160 hours has diminishing returns, and instead we should invest in making the test itself more sophisticated if we want to exercise the codebase more. Great feedback for us!</p><p>But think about that for a moment: even after 140 hours of injecting faults, randomizing thread execution, automatically detecting that something interesting / rare had happened and intentionally branching to investigate further, Antithesis was still “discovering” new behaviors in WarpStream. We could hire a 100 distributed systems engineers and make them write integration tests for an entire year, and they probably wouldn’t be able to trigger all the interesting states and behavior that a single Antithesis run covered in 6 hours of wall clock time.</p><p>As just one example of how powerful this is, on the first day we started using Antithesis it caught a data race in our metrics instrumentation library that had been present since the first month of the project.</p><figure><p><img src="https://assets-global.website-files.com/64baaecd9c5c9b1b6c38aa0e/65f0668f355b0f7639cbe921_antithesis%20data%20race%20final.png" loading="lazy" alt=""></p></figure><p>Our correctness tests had run in our regular CI workflows for literally <em>10s of thousands of hours</em> by then, with the Go race detector enabled, and not once ever caught this bug. Antithesis caught this bug in its first 233 seconds of execution.</p><p>A data race in the instrumentation library isn’t that exciting, though. What about an extremely rare data loss bug that is the result of both a network failure and a race condition? That’s more exciting!</p><p>To minimize the number of S3 PUTs that WarpStream users have to pay for, the Agents buffer Kafka Produce requests from many different clients in-memory for ~250ms before combining the batches of data into a single file and flushing it to object storage.</p><figure><p><img src="https://assets-global.website-files.com/64baaecd9c5c9b1b6c38aa0e/65ef86782ecf7975e9265e8b_eWyuN7USMfacq1cJSUWU9OuqagABl_7ImESBFKyhTiGiotejnSXeO40xn2oydgktnAU8HJpYK8RowxiR2iy3lZ4aTyiGSV6pJNNJTkHvuc6C9D4v75TnjrZj5JHygYuahZDF9BBnBUvuaz8tZyIZfvg.png" alt=""></p></figure><p>In some scenarios, like if write throughput is high, there will be multiple outstanding files being flushed to object storage concurrently. Once flushing the files succeeds, committing the metadata for the flushed files to the control plane can be batched to reduce networking overhead. This is implemented using a background Goroutine that periodically scans the list of “flushed but not yet committed” files.</p><p>While refactoring the Agent to add speculative retries for flushing files to object storage, we subtly broke the error handling on this path so that, for a very brief window of time, a file which failed to flush would be considered successful and ready to commit to the control plane metadata store. In program order (i.e. the linear flow of the code, ignoring concurrency) this window where the background Goroutine that commits metadata would see the successful file would be nearly impossible to squeeze into. This background Goroutine only polls for successful files every five milliseconds, and the time between the two state transitions in the common case would be less than a microsecond!</p><figure><p><img src="https://assets-global.website-files.com/64baaecd9c5c9b1b6c38aa0e/65ef8757b0bcd3c9f824e5a8_Frame%2042%20(7).png" loading="lazy" alt=""></p></figure><p>This bug is the manifestation of two unlikely events: a file failing to flush and a specific thread interleaving that should be extremely rare in practice. Despite how unlikely these events are to occur together, on a long enough time-scale, this bug would have resulted in data loss at some point.</p><p>Instead, thanks to Antithesis’ powerful fuzzer and fault injector, this rare combination of events happened roughly once per wall clock hour of testing. We’d been running a build with this bug in our staging environment and obviously did not encounter that bug at all, let alone once per hour, as it would’ve immediately been noticed when a future background compaction failed due to the missing file in object storage. We’ve since fixed the regression in the code such that the invalid, temporary state transition cannot occur.</p><h2>Why not Jepsen?</h2><p>The obvious question you might be asking yourself at this point is: Why use Antithesis instead of a traditional Jepsen test? It’s a good question, and one we asked ourselves before embarking on our journey with Antithesis.</p><p>We’re big fans of Jepsen and have consumed almost every published report. However, after speaking with the Antithesis team and spending a few months integrating with it, we feel strongly that deterministic simulation testing with tools like Antithesis is a much more robust and sustainable path forward for the industry. Specifically, we think that the Antithesis’ approach is better than Jepsen’s for a few reasons:</p><ol role="list"><li>The Antithesis technology is more robust, and much more likely to catch bugs than the Jepsen harness. There is simply no other equivalent (that we’re aware of) to Antithesis’ custom hypervisor, and its ability to automatically instrument distributed systems for code coverage and effectively “hunt” for bugs. Yes, the Jepsen framework will inject faults into a running environment in an effort to trigger bugs and edge-case behavior, but this approach is crude in comparison to what Antithesis does.</li><li>Antithesis integrates natively into how our engineers are used to working. The entire test setup is expressed using standard docker-compose files and Docker images, and Antithesis tests are kicked off using Github Actions that push WarpStream images to Antithesis’ docker registry. When we add new functionality, all our engineers have to do is modify the Antithesis workload and kick off an automated CI job. The entire experience and workflow lives right next to our existing codebase, CI, and workflows. Extra bonus: none of our engineers had to learn Clojure.</li><li>Antithesis testing is designed to be a continuous process with accompanying professional services that help you grow and adapt the tests as the scope of your product increases. That means our users get the confidence that every WarpStream release is actively tested with Antithesis, unlike a traditional Jepsen test where the engagement is short-lived and usually only covers a “snapshot” of a system at a static point in time.</li><li>Finally, it would not have been practical to continuously test our entire SaaS platform with Jepsen in the same way that we do with Antithesis. While that may seem like overkill, we think it’s a pretty important point. For example, consider the fact that almost every cloud infrastructure provider has a routing or proxy layer that is responsible for routing customer requests to the correct set of infrastructure that hosts the customer’s resources. A small data race or caching bug in that routing layer could result in exposing one customer’s resources to a different customer. These multi-tenant SaaS layers are never tested in traditional Jepsen testing, but with Antithesis it was actually easier to include these layers in our testing than to specifically exclude them.</li></ol><p>We’re just getting started with Antithesis! Over the coming months we plan to work with the Antithesis team to expand our testing footprint to cover additional functionality like:</p><ol role="list"><li>Multi-region deployments of our SaaS platform.</li><li><a href="https://docs.warpstream.com/warpstream/configuration/deploy/splitting-agent-roles">Multi-role Agent Clusters</a>.</li><li>Injecting and detecting data corruption at the storage and file cache layer using checksums.</li><li>And much more!</li></ol><p>If you’d like to learn more about WarpStream, please <a href="https://www.warpstream.com/contact-us">contact us</a>, or <a href="https://console.warpstream.com/socials/slack">join our Slack!</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Devin, the First AI Software Engineer (394 pts)]]></title>
            <link>https://www.cognition-labs.com/blog</link>
            <guid>39679787</guid>
            <pubDate>Tue, 12 Mar 2024 14:15:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cognition-labs.com/blog">https://www.cognition-labs.com/blog</a>, See on <a href="https://news.ycombinator.com/item?id=39679787">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="w-node-_537870b2-4447-9e58-9c59-0adde404dc40-15286f21"><p><iframe src="https://www.youtube.com/embed/fjHtjT7GO1c?rel=0&amp;controls=1&amp;autoplay=0&amp;mute=0&amp;start=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="" title="Introducing Devin, the first AI software engineer"></iframe></p><p>March 12th, 2024 |&nbsp;Written by Scott Wu</p><h2>Introducing Devin, the first AI software engineer</h2><p><em>And setting a new state of the art on the SWE-bench coding benchmark</em></p><div><p>Meet Devin, the world’s first fully autonomous AI software engineer.<br>‍<br>Devin is a tireless, skilled teammate, equally ready to build alongside you or independently complete tasks for you to review. </p><p>With Devin, engineers can focus on more interesting problems and engineering teams can strive for more ambitious goals.</p></div><p>Devin's Capabilities</p><div><p>With our advances in long-term reasoning and planning, Devin can plan and execute complex engineering tasks requiring thousands of decisions. Devin can recall relevant context at every step, learn over time, and fix mistakes.</p><p>We've also equipped Devin with common developer tools including the shell, code editor, and browser within a sandboxed compute environment—everything a human would need to do their work.</p><p>Finally, we've given Devin the ability to actively collaborate with the user. Devin reports on its progress in real time, accepts feedback, and works together with you through design choices as needed.<br>‍<br>Here's a sample of what Devin can do:</p></div><div id="w-node-_0a565f14-693a-64cf-6e8f-ef1c42c0885f-15286f21"><p><strong>Devin can learn how to use unfamiliar technologies.<br></strong>After reading a blog post, Devin runs ControlNet on Modal to produce images with concealed messages for Sara.<br></p><div id="w-node-_0a565f14-693a-64cf-6e8f-ef1c42c08864-15286f21"><p><iframe src="https://www.youtube.com/embed/lwnkdngr7fU?rel=0&amp;controls=1&amp;autoplay=0&amp;mute=0&amp;start=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="" title="AI Software Engineer Plants Secret Messages in Images"></iframe></p></div></div><div id="w-node-_0b146222-a732-94c8-6af3-800a1994dc81-15286f21"><p><strong>Devin can build and deploy apps end to end. <br></strong>Devin makes an interactive website which simulates the Game of Life! It incrementally adds features requested by the user and then deploys the app to Netlify.<br></p><div id="w-node-_0b146222-a732-94c8-6af3-800a1994dc89-15286f21"><p><iframe src="https://www.youtube.com/embed/G45NKnAWuXc?rel=0&amp;controls=1&amp;autoplay=0&amp;mute=0&amp;start=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="" title="Devin making Game of Life!"></iframe></p></div></div><div id="w-node-_47a4f6da-a718-fc7c-42d6-c4a3c4adc6be-15286f21"><p><strong>Devin can autonomously find and fix bugs in codebases.<br></strong>Devin helps Andrew maintain and debug his open source competitive programming book. <br></p><div id="w-node-_47a4f6da-a718-fc7c-42d6-c4a3c4adc6c0-15286f21"><p><iframe src="https://www.youtube.com/embed/TiXAzn2_Xck?rel=0&amp;controls=1&amp;autoplay=0&amp;mute=0&amp;start=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="" title="AI finds and fixes a bug that I didn't catch!"></iframe></p></div></div><div id="w-node-b0a83d60-326c-bea3-78ef-b35730de8f13-15286f21"><p><strong>Devin can train and fine tune its own AI models. <br>‍</strong>Devin sets up fine tuning for a large language model given only a link to a research repository on GitHub.<br></p><div id="w-node-b0a83d60-326c-bea3-78ef-b35730de8f18-15286f21"><p><iframe src="https://www.youtube.com/embed/V_J-xOeCklQ?rel=0&amp;controls=1&amp;autoplay=0&amp;mute=0&amp;start=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="" title="AI trains an AI!"></iframe></p></div></div><div id="w-node-_4de27410-4316-ee85-9365-dd1333ffbf1f-15286f21"><p><strong>Devin can address bugs and feature requests in open source repositories. </strong>Given just a link to a GitHub issue, Devin does all the setup and context gathering that is needed.<br></p><div id="w-node-_4de27410-4316-ee85-9365-dd1333ffbf24-15286f21"><p><iframe src="https://www.youtube.com/embed/vk3s5JlyHfU?rel=0&amp;controls=1&amp;autoplay=0&amp;mute=0&amp;start=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="" title="AI software engineer adds a feature to an open source repository"></iframe></p></div></div><div id="w-node-_1a215dc4-cda1-8bd5-932e-7f6edd75b9d1-15286f21"><p><strong>Devin can contribute to mature production repositories. </strong>‍<br>This example is part of the SWE-bench benchmark. Devin solves a bug with logarithm calculations in the sympy Python algebra system. Devin sets up the code environment, reproduces the bug, and codes and tests the fix on its own. <br></p><div id="w-node-_1a215dc4-cda1-8bd5-932e-7f6edd75b9db-15286f21"><p><iframe src="https://www.youtube.com/embed/ReE2dFJn_uY?rel=0&amp;controls=1&amp;autoplay=0&amp;mute=0&amp;start=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="" title="Our AI fixes a bug in Python algebra system"></iframe></p></div></div><div id="w-node-_5c76f232-867c-f50d-f659-c17780009b06-15286f21"><p><strong>We even tried giving Devin real jobs on Upwork and it could do those too! <br>‍</strong>Here, Devin writes and debugs code to run a computer vision model. Devin samples the resulting data and compiles a report at the end.<br></p><div id="w-node-_5c76f232-867c-f50d-f659-c17780009b0c-15286f21"><p><iframe src="https://www.youtube.com/embed/UTS2Hz96HYQ?rel=0&amp;controls=1&amp;autoplay=0&amp;mute=0&amp;start=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="" title="Devin's Upwork Side Hustle"></iframe></p></div></div><div id="w-node-_75d93268-fa76-7d60-0a38-d621ef8204c8-15286f21"><div id="w-node-_75d93268-fa76-7d60-0a38-d621ef8204c9-15286f21"><p>Devin's Performance</p><div><p>We evaluated Devin on <a href="https://swebench.com/">SWE-bench</a>, a challenging benchmark that asks agents to resolve real-world GitHub issues found in open source projects like Django and scikit-learn. </p><p>Devin correctly resolves 13.86%* of the issues end-to-end, far exceeding the previous state-of-the-art of 1.96%. Even when given the exact files to edit, the best previous models can only resolve 4.80% of issues.</p></div></div><div id="w-node-abf697be-9572-37d9-3d1d-d4e7645788c1-15286f21"><p><img src="https://assets-global.website-files.com/65cf071d26e52092bc212f6e/65efb346f23abefa856c1454_graph.png" loading="lazy" sizes="100vw" srcset="https://assets-global.website-files.com/65cf071d26e52092bc212f6e/65efb346f23abefa856c1454_graph-p-500.png 500w, https://assets-global.website-files.com/65cf071d26e52092bc212f6e/65efb346f23abefa856c1454_graph-p-800.png 800w, https://assets-global.website-files.com/65cf071d26e52092bc212f6e/65efb346f23abefa856c1454_graph-p-1080.png 1080w, https://assets-global.website-files.com/65cf071d26e52092bc212f6e/65efb346f23abefa856c1454_graph-p-1600.png 1600w, https://assets-global.website-files.com/65cf071d26e52092bc212f6e/65efb346f23abefa856c1454_graph-p-2000.png 2000w, https://assets-global.website-files.com/65cf071d26e52092bc212f6e/65efb346f23abefa856c1454_graph-p-2600.png 2600w, https://assets-global.website-files.com/65cf071d26e52092bc212f6e/65efb346f23abefa856c1454_graph-p-3200.png 3200w, https://assets-global.website-files.com/65cf071d26e52092bc212f6e/65efb346f23abefa856c1454_graph.png 3824w" alt=""></p><p>*Devin was evaluated on a random 25% subset of the dataset. Devin was unassisted, whereas all other models were assisted&nbsp;(meaning the model was told exactly which files need to be edited).<br></p></div><p>We plan to publish a more detailed technical report soon—stay tuned for more details.<br></p></div><p>About Cognition</p><div><p>We are an applied AI lab focused on reasoning.<br>‍<br>We’re building AI teammates with capabilities far beyond today’s existing AI tools. By solving reasoning, we can unlock new possibilities in a wide range of disciplines—code is just the beginning. We want to help people around the world turn their ideas into reality.</p><p>We are well funded, including a <strong>$21 million Series A led by Founders Fund</strong>. And we’re grateful for the support of industry leaders including <strong>Patrick and John Collison, Elad Gil, Sarah Guo, Chris Re, Eric Glyman, Karim Atiyeh</strong>, <strong>Erik Bernhardsson, Tony Xu, Fred Ehrsam</strong> and so many more.</p></div><p>Hire Devin</p><p>Devin is currently in early access as we ramp up capacity. To start using Devin for engineering work, <a href="https://forms.gle/N8HZbXbnoosik21n8">please reach out here</a> or get in touch at <a href="mailto:info@cognition-labs.com">info@cognition-labs.com</a>. <br></p><p>Join Us</p><div><p>Our team is small and talent-dense. Our founding team has 10 IOI gold medals and includes leaders and builders who have worked at the cutting edge of applied AI at companies like Cursor, Scale AI, Lunchclub, Modal, Google DeepMind, Waymo, and Nuro.<br>‍<br>Building Devin is just the first step—our hardest challenges still lie ahead. &nbsp;If you’re excited to solve some of the world’s biggest problems and build AI that can reason, learn more about our team and <a href="https://jobs.ashbyhq.com/cognition">apply to join us here</a>. </p><p>‍</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Comma Separated Values (CSV) to Unicode Separated Values (USV) (186 pts)]]></title>
            <link>https://crates.io/crates/csv-to-usv</link>
            <guid>39679378</guid>
            <pubDate>Tue, 12 Mar 2024 13:43:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://crates.io/crates/csv-to-usv">https://crates.io/crates/csv-to-usv</a>, See on <a href="https://news.ycombinator.com/item?id=39679378">Hacker News</a></p>
Couldn't get https://crates.io/crates/csv-to-usv: Error: Request failed with status code 404]]></description>
        </item>
        <item>
            <title><![CDATA[Weather forecasts have become more accurate (267 pts)]]></title>
            <link>https://ourworldindata.org/weather-forecasts</link>
            <guid>39678783</guid>
            <pubDate>Tue, 12 Mar 2024 12:42:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ourworldindata.org/weather-forecasts">https://ourworldindata.org/weather-forecasts</a>, See on <a href="https://news.ycombinator.com/item?id=39678783">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><header><h2>A four-day forecast today is as accurate as a one-day forecast 30 years ago.</h2></header><p>Weather forecasts are often seen as just a nice thing to have. Useful when planning a Sunday barbecue, or when we want to know if we’ll need an umbrella for the day. But in many ways weather forecasts are absolutely crucial: they can be a matter of life and death.</p><p>Accurate forecasts can save lives by giving early warnings of storms, heat waves, and disasters. Farmers use them for agricultural management, which can make the difference between a lost harvest or a harvest of plenty. Grid operators rely on accurate forecasts of temperatures for heating and cooling demand, and how much energy they’ll get from wind and solar farms. Pilots and sailors need them to carry people across oceans safely. Accurate information about future weather is often absolutely vital.</p><p>In this article, I look at improvements over time and the global inequalities that need to be closed to protect lives and livelihoods around the world.</p><h2 id="weather-forecasts-have-improved-a-lot">Weather forecasts have improved a lot<a href="#weather-forecasts-have-improved-a-lot"></a></h2><p>Weather forecasting has come a long way. In 650 B.C. the Babylonians would try to predict weather patterns based on cloud patterns and movements. Three centuries later, Aristotle wrote <em>Meteorologica</em>, discussing how phenomena such as rain, hail, hurricanes, and lightning formed. Much of it turned out to be wrong, but it represents one of the first attempts to explain how the weather works in detail.</p><p>It wasn’t until 1859 that the UK’s Meteorological Service (the Met Office) <a href="https://www.metoffice.gov.uk/about-us/who/our-history" target="_blank" rel="noopener noreferrer">issued its first</a> weather forecast for shipping. Two years later, it broadcasted its first public weather forecast. While meteorological measurements improved over time, the massive step-change in predictions came with the use of computerized numerical modeling. This didn’t start until a century later, in the 1960s.</p><p>Forecasts have improved a lot since then. We can see this across a range of measurements, and different national meteorological organizations.</p><p>The Met Office <a href="https://blog.metoffice.gov.uk/2023/11/15/why-an-exact-date-weather-forecast-headline-isnt-what-it-seems/#:~:text=Despite%20the%20certainty%20suggested%20in,come%20with%20in%2Dbuilt%20uncertainty." target="_blank" rel="noopener noreferrer">says</a> its four-day forecasts are now as accurate as its one-day forecasts were 30 years ago.</p><p>Predictions have gotten much better in the United States, too. We can see this in some of the most important forecasts: the prediction of hurricanes.</p><p>The National Hurricane Center <a href="https://www.nhc.noaa.gov/verification/verify5.shtml" target="_blank" rel="noopener noreferrer">publishes data</a> on the “track error” of hurricanes and cyclones — the error in <em>where</em> the hurricane hits. This is shown in the chart below, from the 1960s onwards.</p><p>Each line represents the error of forecasts for different time periods in advance. For example, 12 hours before it hits, all the way up to 120 hours (or 5 days) before.</p><p>We can see that this track error — especially for longer-term forecasts — has decreased a lot over time. In the 1970s, a 48-hour forecast had an error between 200 and 400 nautical miles; today this is around 50 nautical miles.</p><p>We can show the same data another way. In the chart below, each line represents the average error for each decade. On the horizontal axis we have the forecast period, again extending from 0 to 120 hours.</p><p>The 72-hour error in the 1960s and 70s was over 400 nautical miles. Today, it’s less than 80 miles.</p><p>Meteorologists can now make pretty accurate predictions of where a hurricane will hit three or four days in advance, which lets cities and communities prepare while preventing unnecessary evacuations that might have been implemented in the past.</p><figure><picture><source srcset="https://ourworldindata.org/images/published/hurricane-forecasting-error_100.png 100w, https://ourworldindata.org/images/published/hurricane-forecasting-error_350.png 350w, https://ourworldindata.org/images/published/hurricane-forecasting-error_850.png 850w, https://ourworldindata.org/images/published/hurricane-forecasting-error_1350.png 1350w, https://ourworldindata.org/images/published/hurricane-forecasting-error_7963.png 7963w" type="image/png" sizes="(max-width: 960px) 95vw, (min-width: 960px) 853px"><img src="https://ourworldindata.org/images/published/hurricane-forecasting-error.png" alt="Line chart showing the reduction in hurricane forecasting errors from the 1960s to the 2020s. This has improved for very short- and medium-term forecasts." loading="lazy" width="7963" height="NaN"></picture></figure><p>The <a href="https://charts.ecmwf.int/" target="_blank" rel="noopener noreferrer">European Centre for Medium-Range Weather Forecasts</a> (ECMWF) produces global numerical weather models. While national weather agencies use much higher-resolution processing to get local forecasts, these global models provide a crucial input into these systems.</p><p>The ECMWF publishes analyses of its errors over time. This is shown in the chart below.<a href="#note-1"><sup>1</sup></a> It shows the difference between the forecast and the actual weather outcome for forecasts 3, 5, 7, and 10 days in advance. The metric used here is the “<a href="https://climate.copernicus.eu/esotc/2022/atmospheric-circulation" target="_blank" rel="noopener noreferrer">500 hPa geopotential height</a>”, a commonly used meteorological measure of air pressure (which dictates weather patterns).</p><p>The solid line is for the Northern Hemisphere, and the dashed line is for the Southern.</p><p>Three-day forecasts —&nbsp;shown in blue — have been pretty accurate since the 1980s, and have still gotten a lot better over time. Today the accuracy is around 97%.</p><p>The biggest improvements we’ve seen are for longer timeframes. By the early 2000s, 5-day forecasts were “highly accurate” and 7-day forecasts are reaching that threshold today. 10-day forecasts aren’t quite there yet but are getting better.</p><figure><picture><source srcset="https://ourworldindata.org/images/published/improved-weather-forecasting_100.png 100w, https://ourworldindata.org/images/published/improved-weather-forecasting_350.png 350w, https://ourworldindata.org/images/published/improved-weather-forecasting_850.png 850w, https://ourworldindata.org/images/published/improved-weather-forecasting_1350.png 1350w, https://ourworldindata.org/images/published/improved-weather-forecasting_7463.png 7463w" type="image/png" sizes="(max-width: 960px) 95vw, (min-width: 960px) 853px"><img src="https://ourworldindata.org/images/published/improved-weather-forecasting.png" alt="" loading="lazy" width="7463" height="NaN"></picture></figure><h2 id="why-have-weather-forecasts-improved">Why have weather forecasts improved?<a href="#why-have-weather-forecasts-improved"></a></h2><p>A few key developments <a href="https://www.science.org/doi/10.1126/science.aav7274" target="_blank" rel="noopener noreferrer">explain these improvements</a>.<a href="#note-2"><sup>2</sup></a></p><p>The first big change is that the data has improved. More extensive and higher-resolution observations can be used as inputs into the weather models. This is because we have more and better satellite data, and because land-based stations are covering many more areas around the globe, and at a higher density. The precision of these instruments has improved, too.</p><p>These observations are then fed into numerical prediction models to forecast the weather. That brings us to the next two developments. The computers on which these models are run have gotten much faster. Faster speeds are crucial: the Met Office now chunks the world into grids of smaller and smaller squares. While they once modeled the world in 90-kilometer-wide squares, they are now down to a grid of 1.5-kilometer squares. That means many more calculations need to be run to get this high-resolution map. The methods to turn the observations into model outputs have also improved. We’ve gone from very simple visions of the world to methods that can capture the complexity of these systems in detail.</p><p>The final crucial factor is how these forecasts are communicated. Not long ago, you could only get daily updates in the daily newspaper. With the rise of radio and TV, you could get a few notices per day. Now, we can get minute-by-minute updates online or on our smartphones.</p><h2 id="low-income-countries-have-much-worse-forecasts-and-often-no-early-warning-systems">Low-income countries have much worse forecasts, and often no early warning systems<a href="#low-income-countries-have-much-worse-forecasts-and-often-no-early-warning-systems"></a></h2><p>At home in Scotland, I can open an app on my phone and get a pretty accurate 5-day forecast within seconds. Unfortunately, this quality of information isn’t available to everyone. There are large differences in weather forecasts across the world, with a large gap between rich and poor.</p><p>As the researchers Manuel Linsenmeier and Jeffrey Shrader report in a <a href="https://ideas.repec.org/p/osf/socarx/7e2jf.html" target="_blank" rel="noopener noreferrer">recent paper</a>, a 7-day forecast in a rich country can be more accurate than a one-day forecast in some low-income ones.<a href="#note-3"><sup>3</sup></a></p><p>While national forecasts have improved over time across all income levels, the quality gap today is almost as wide as it was in the 1980s.</p><p>There are a few reasons for this. First, far fewer land-based instruments and radiosondes measure meteorological data in poorer countries. Second, the frequency of reporting is much lower.</p><p>This is unsurprising when we look at the amount of money spent on weather and climate information. In <a href="https://www.science.org/doi/10.1126/sciadv.1602632" target="_blank" rel="noopener noreferrer">a paper</a> published in <em>Science</em>, Lucian Georgeson, Mark Maslin, and Martyn Poessinouw looked at differences in spending across income groups.<a href="#note-4"><sup>4</sup></a> This includes private and public spending on commercial products that fall within the definition of “weather and climate information services”.</p><p>This is shown as the spending <em>per person</em>, and the spending as a share of gross domestic product (GDP) in the chart below.</p><p>Low-income countries spend 15 to 20 times less per person than high-income countries. But given the size of their economies, they actually spend <em>more</em> as a share of GDP.</p><p>This gap is a problem. 60% of workers in low-income countries are <a href="https://ourworldindata.org/grapher/share-of-the-labor-force-employed-in-agriculture?tab=chart&amp;country=Low+income~High+income">employed in agriculture</a>, arguably the most weather-dependent sector. Most <a href="https://ourworldindata.org/africa-yields-problem" target="_blank" rel="noopener noreferrer">are small-scale farmers</a>, who are often extremely poor.</p><p>Having accurate weather forecasts can help farmers make better decisions. They can get information on the best time to plant their crops. They know in advance when irrigation will be most needed, or when fertilizers might be at risk of being washed away. They can receive alerts about pest and disease outbreaks so they can either protect their crops when an attack is coming or save pesticides when the risk is low. That means they can use precious resources most efficiently if they have access to accurate weather forecasts. Good weather forecasts are most crucial for the poorest people in the world.</p><p>They’re also crucial for protecting against cyclones, heat waves, flooding, and storm surges. Having accurate forecasts several days in advance allows cities and communities to prepare. Housing can be protected, and emergency services can be on standby to help with the recovery.</p><p>But accurate forecasts alone don’t solve the problem: they’re only useful if they are disseminated to people so they can respond. Many of the deadliest disasters over the last few decades <a href="https://www.sciencedirect.com/science/article/pii/S2212096322000687" target="_blank" rel="noopener noreferrer">were accurately forecasted</a> ahead of time. The common failure was poor communication.<a href="#note-5"><sup>5</sup></a></p><p>Improving forecasts is the foundation. But these also need to be incorporated into effective early warning systems. The World Meteorological Organization <a href="https://documents1.worldbank.org/curated/en/099050123155016375/pdf/P1765160197f400b80947e0af8c48049151.pdf" target="_blank" rel="noopener noreferrer">estimates that</a> around one-third of the world — predominantly the poorest countries — do not have them.</p><h2 id="improving-forecasts-especially-in-low-income-countries-is-underrated">Improving forecasts — especially in low-income countries — is underrated<a href="#improving-forecasts-especially-in-low-income-countries-is-underrated"></a></h2><p>After the big progress in recent decades, we take good weather forecasting and dissemination for granted in large parts of the world. Making this available to everyone would make a difference.</p><p>This will be even more important as climate change increases the risks of weather-related disasters. It is ultimately the poorest, who are the more vulnerable, who will suffer the worst consequences. Better forecasts are key to good climate change adaptation.</p><p>Proper investment and financial support will be essential to close the gaps.</p><p>There also emerging technologies that could accelerate this. A <a href="https://www.nature.com/articles/s41586-023-06185-3" target="_blank" rel="noopener noreferrer">recent paper</a> published in <em>Nature </em>documented a new <a href="https://ourworldindata.org/artificial-intelligence" target="_blank" rel="noopener noreferrer">artificial intelligence (AI)</a> system — Pangu-Weather — that can perform forecasts as accurately (or better) than leading meteorological agencies up to 10,000 times faster.<a href="#note-6"><sup>6</sup></a> It was trained on 39 years of historical data. The speed of these forecasts would make them much cheaper to run and could provide much better results for countries with limited budgets.</p><p>Faster and more efficient technologies can also fill the gaps where land-based weather stations aren’t available. Sensor-carrying drones can run surveys over specific areas to build higher-resolution maps. With lower-cost and more efficient ways of turning that into forecasts, mobile technologies can disseminate this information quickly. Some companies are already sending messages to farmers in low-income countries to advise them on the best time to plant their crops.</p><p>This innovation is crucial to making countries more resilient to weather today. But it’s also essential in a world where weather is likely to get more extreme.</p><div><h4>Acknowledgements</h4><p>Many thanks to Max Roser and Edouard Mathieu for their valuable feedback and comments on this article.</p></div><div><h3 id="article-endnotes">Endnotes</h3><ol><li id="note-1"><p>These charts are sourced from the following sources: Alley, R. B., Emanuel, K. A., &amp; Zhang, F. (2019). Advances in weather prediction. Science, 363(6425), 342-344.</p><p>The Economist (2023). The high-tech race to improve weather forecasting.</p></li><li id="note-2"><p>Alley, R. B., Emanuel, K. A., &amp; Zhang, F. (2019). Advances in weather prediction. Science, 363(6425), 342-344.</p></li><li id="note-3"><p>Linsenmeier, Manuel &amp; Shrader, Jeffrey G., 2023. "Global inequalities in weather forecasts," SocArXiv 7e2jf, Center for Open Science.</p><p>You might wonder how this can be true when the ECMWF forecasts have so quickly improved in both the Northern and Southern Hemisphere. This is because most countries need to develop their own forecasts to get more high-resolution predictions.</p></li><li id="note-4"><p>Georgeson, L., Maslin, M., &amp; Poessinouw, M. (2017). Global disparity in the supply of commercial weather and climate information services. Science Advances, 3(5), e1602632.</p></li><li id="note-5"><p>De Perez, E. C., Berse, K. B., Depante, L. A. C., Easton-Calabria, E., Evidente, E. P. R., Ezike, T., ... &amp; Van Sant, C. (2022). Learning from the past in moving to the future: Invest in communication and response to weather early warnings to reduce death and damage. Climate Risk Management, 38, 100461.</p></li><li id="note-6"><p>Bi, K., Xie, L., Zhang, H. et al. Accurate medium-range global weather forecasting with 3D neural networks. Nature 619, 533–538 (2023).</p></li></ol></div><div id="article-citation"><h3>Cite this work</h3><p>Our articles and data visualizations rely on work from many different people and organizations. When citing this article, please also cite the underlying data sources. This article can be cited as:</p><div><pre><code>Hannah Ritchie (2024) - “Weather forecasts have become much more accurate; we now need to make them available to everyone” Published online at OurWorldInData.org. Retrieved from: 'https://ourworldindata.org/weather-forecasts' [Online Resource]</code></pre></div><p>BibTeX citation</p><div><pre><code>@article{owid-weather-forecasts,
    author = {Hannah Ritchie},
    title = {Weather forecasts have become much more accurate; we now need to make them available to everyone},
    journal = {Our World in Data},
    year = {2024},
    note = {https://ourworldindata.org/weather-forecasts}
}</code></pre></div></div><div id="article-licence"><p><img src="https://ourworldindata.org/owid-logo.svg" alt="Our World in Data logo"></p><h3>Reuse this work freely</h3><p>All visualizations, data, and code produced by Our World in Data are completely open access under the <a href="https://creativecommons.org/licenses/by/4.0/" target="_blank" rel="noopener noreferrer">Creative Commons BY license</a>. You have the permission to use, distribute, and reproduce these in any medium, provided the source and authors are credited.</p><p>The data produced by third parties and made available by Our World in Data is subject to the license terms from the original third-party authors. We will always indicate the original source of the data in our documentation, so you should always check the license of any such third-party data before use and redistribution.</p><p>All of <a href="https://ourworldindata.org/faqs#how-can-i-embed-one-of-your-interactive-charts-in-my-website">our charts can be embedded</a> in any site.</p></div></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[More options for apps distributed in the European Union (308 pts)]]></title>
            <link>https://developer.apple.com/news/?id=8c1m8hqt</link>
            <guid>39678555</guid>
            <pubDate>Tue, 12 Mar 2024 12:11:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://developer.apple.com/news/?id=8c1m8hqt">https://developer.apple.com/news/?id=8c1m8hqt</a>, See on <a href="https://news.ycombinator.com/item?id=39678555">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="main" role="main">
					
					
										
					<article id="article-8c1m8hqt">
						<div>
									<p>March 12, 2024</p>
																			<div><p>We’re providing more flexibility for developers who distribute apps in the European Union (EU), including introducing a new way to distribute apps directly from a developer’s website.</p><h3>More flexibility</h3><p>Developers who’ve agreed to the Alternative Terms Addendum for Apps in the EU have new options for their apps in the EU:</p><ul>
<li>Alternative app marketplaces. Marketplaces can choose to offer a catalog of apps solely from the developer of the marketplace.</li>
<li>Linking out to purchase. When directing users to complete a transaction for digital goods or services on an external webpage, developers can choose how to design promotions, discounts, and other deals. The Apple-provided design templates, which are optimized for key purchase and promotional use cases, are now optional. </li>
</ul><h3>Distributing directly from your website</h3><p>Web Distribution, available with a software update later this spring, will let authorized developers distribute their iOS apps to EU users directly from a website owned by the developer. Apple will provide authorized developers access to APIs that facilitate the distribution of their apps from the web, integrate with system functionality, back up and restore users’ apps, and more. For details, visit <a href="https://developer.apple.com/support/web-distribution-eu/">Getting ready for Web Distribution in&nbsp;the&nbsp;EU</a>. </p></div>

																	</div>


					</article>
									</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple announces ability to download apps directly from websites in EU (610 pts)]]></title>
            <link>https://www.macrumors.com/2024/03/12/apple-announces-app-downloads-from-websites/</link>
            <guid>39678532</guid>
            <pubDate>Tue, 12 Mar 2024 12:08:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.macrumors.com/2024/03/12/apple-announces-app-downloads-from-websites/">https://www.macrumors.com/2024/03/12/apple-announces-app-downloads-from-websites/</a>, See on <a href="https://news.ycombinator.com/item?id=39678532">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main" id="maincontent"><article expanded="true"><div data-io-article-url="/2024/03/12/apple-announces-app-downloads-from-websites/"><p>Apple today <a href="http://developer.apple.com/news">announced</a> three further changes for developers in the European Union, allowing them to distribute apps directly from webpages, choose how to design in-app promotions, and more. </p>
<p><img src="https://images.macrumors.com/t/XFsS_F64sISi8EhlpRo0YgF33vA=/400x0/article-new/2024/01/Apple-EU-iOS-Changes.jpg?lossy" srcset="https://images.macrumors.com/t/XFsS_F64sISi8EhlpRo0YgF33vA=/400x0/article-new/2024/01/Apple-EU-iOS-Changes.jpg?lossy 400w,https://images.macrumors.com/t/5zGTEDBvad8V2r9ky3RpuYRgekE=/800x0/article-new/2024/01/Apple-EU-iOS-Changes.jpg?lossy 800w,https://images.macrumors.com/t/VVwPWAIDnaSFaA16317tv6yTzHs=/1600x0/article-new/2024/01/Apple-EU-iOS-Changes.jpg 1600w,https://images.macrumors.com/t/QrO1Y88Q2IgRavrFMUDQjzuzstU=/2500x0/filters:no_upscale()/article-new/2024/01/Apple-EU-iOS-Changes.jpg 2500w" sizes="(max-width: 900px) 100vw, 697px" alt="Apple EU iOS Changes" width="1312" height="738"><br>Apple last week enabled alternative app stores in the EU <a href="https://www.macrumors.com/guide/ios-17-4-features/">in iOS 17.4</a>, allowing third-party app stores to offer a catalog of other developers' apps as well as the marketplace developer's own apps. As of today, Apple is allowing third-party app stores to offer apps solely from their own catalog. For example, a games studio could create an app store on iOS that exclusively offers their own games.</p>
<p>When directing users to complete a transaction on their website, developers can also now choose how to design their in-app promotions, discounts, and deals. Apple's templates for designing these links out to websites are optional as of today.</p>
<p>In addition, developers will soon be able to distribute apps directly from their websites, providing they meet Apple's specific criteria, such as being a member of the Apple Developer Program for two continuous years or more and having an app with more than one million first installs on iOS in the EU in the prior year, and commit to ongoing requirements, such as publishing transparent data collection policies. Apps distributed in this way must meet Apple's notarization requirements like all other iOS apps and can only be installed from a web domain registered in <a href="https://www.macrumors.com/guide/app-store/">App Store</a> Connect.</p>
<p>Authorized developers will gain access to APIs to facilitate app distribution from the web, integration with system functionality, back up and restore, and more. Web distribution will become available following a software update later in the spring – allowing app downloads directly from a website for the first time on iOS. </p>
<p>The latest changes are part of Apple's Digital Markets Act (DMA) compliance plan and only apply within the European Union.</p>
</div></article><p><h2>Popular Stories</h2></p><div><h3><a href="https://www.macrumors.com/2024/03/11/iphone-16-pro-expected-later-this-year/">iPhone 16 Pro Expected Later This Year With These 10 New Features</a></h3><p>While the iPhone 16 Pro and iPhone 16 Pro Max are still around six months away from launching, there are already many rumors about the devices. Below, we have recapped new features and changes expected so far. These are some of the key changes rumored for the iPhone 16 Pro models as of March 2024:Larger displays: The iPhone 16 Pro and iPhone 16 Pro Max will be equipped with larger 6.3-inch...</p></div><div><h3><a href="https://www.macrumors.com/2024/03/11/apple-preparing-ios-17-4-1/">Apple Preparing iOS 17.4.1 Update for iPhone</a></h3><p>Apple appears to be internally testing iOS 17.4.1 for the iPhone, based on evidence of the software update in our website's logs this week. Our logs have revealed the existence of several iOS 17 versions before Apple released them, ranging from iOS 17.0.3 to iOS 17.3.1. iOS 17.4.1 should be a minor update that addresses software bugs and/or security vulnerabilities. It is unclear when...</p></div><div><h3><a href="https://www.macrumors.com/2024/03/09/m3-macs-still-expected-2024/">Here Are All the M3 Macs Still Expected This Year</a></h3><p>Saturday March 9, 2024 10:53 am PST by <a href="https://www.macrumors.com/author/tim-hardwick/" rel="author">Tim Hardwick</a></p><p>Earlier this week, Apple announced new 13-inch and 15-inch MacBook Air models, the first Mac updates of the year featuring M3 series chips. But there are other Macs in Apple's lineup still to be updated to the latest M3 processors. So, where do the Mac mini, Mac Studio, and Mac Pro fit into Apple's M3 roadmap for the year ahead? Here's what the latest rumors say. Mac Mini Apple announced ...</p></div><div><h3><a href="https://www.macrumors.com/2024/03/10/ios-17-4-now-available/">iOS 17.4 Now Available With These 12 Changes for Your iPhone</a></h3><p>iOS 17.4 was released last week following over a month of beta testing, and the update includes many new features and changes for the iPhone. iOS 17.4 introduces major changes to the App Store, Safari, and Apple Pay in the EU, in response to the Digital Markets Act. Other new features include Apple Podcasts transcripts, an iMessage security upgrade, new emoji options, and more. Below, we...</p></div><div><h3><a href="https://www.macrumors.com/2024/03/09/best-buys-weekend-sale-ipad-pro/">Best Buy's Weekend Sale Includes Rare iPad Pro Deals and All-Time Low MacBook Discounts</a></h3><p>Best Buy this weekend has a big sale on Apple MacBooks and iPads, including some of the first notable M2 iPad Pro discounts in months, alongside the best prices we've ever seen on MacBook Air, MacBook Pro, iPad Air, and more. Some of these deals require a My Best Buy Plus or My Best Buy Total membership, which start at $49.99/year. In addition to exclusive access to select discounts, you'll get...</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I no longer maintain my Emacs projects on Sourcehut (156 pts)]]></title>
            <link>https://protesilaos.com/codelog/2024-01-27-sourcehut-no-more/</link>
            <guid>39678491</guid>
            <pubDate>Tue, 12 Mar 2024 12:00:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://protesilaos.com/codelog/2024-01-27-sourcehut-no-more/">https://protesilaos.com/codelog/2024-01-27-sourcehut-no-more/</a>, See on <a href="https://news.ycombinator.com/item?id=39678491">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>
          🏆 I provide private lessons on Emacs, Linux, and Life in
          general: <a href="https://protesilaos.com/coach/">https://protesilaos.com/coach/</a>.
          Lessons continue <strong>throughout the year</strong>.
        </p><article>

	

	<div>
		<p>On 2022-04-07 I moved all my Emacs projects from GitLab to SourceHut:
<a href="https://protesilaos.com/codelog/2022-04-07-all-emacs-projects-sourcehut/">https://protesilaos.com/codelog/2022-04-07-all-emacs-projects-sourcehut/</a>.
I am now undoing that decision. My code is on GitLab and GitHub, with
the latter as the de facto primary source.</p>

<p>Why the change:</p>

<ul>
  <li>The SourceHut web interface does not show any kind of indication
that a message has an attachment. Last time I tried it, I had to
download an mbox file and extract the patch from there. This was
helped by the fact that I knew what I was searching for, but the
experience was not pleasant anyway.</li>
  <li>Many users are reluctant to subscribe to my project’s mailing list
and instead email me directly. This is fine, as I do get the work
done eventually, but it beats the point of having a public inbox if
I am the only one who reads those messages anyway.</li>
  <li>Personal emails for package maintenance make it more difficult for
me to apply filters. I cannot easily go from “personal” to
“packages” and thus have trouble prioritising tasks.</li>
  <li>Users replying to mailing list threads frequently do not “reply to
all”, so the filter I have for SourceHut lists does not apply and my
inbox is noisy again.</li>
  <li>Coordinating work between my “official” SourceHut-based repository
and the de facto GitHub one is a problem, because a user on one may
not be aware of what a user on the other is doing.</li>
</ul>

<p>There are other papercuts as well, but I understand SourceHut is still
in “alpha”, so I will not list them here.</p>

<h2>What happens to the Git repositories on SourceHut?</h2>

<p>I am no longer updating them and plan to delete them in the near
future.</p>

<h2>What about the mailing lists?</h2>

<p>I will continue to reply to messages sent there, but I will eventually
ask people to use other media. If you do not want to use a Git forge
to report an issue or send a patch, then do it via my personal email:
<a href="https://protesilaos.com/contact">https://protesilaos.com/contact</a>.</p>

<h2>Will you host your own Git server?</h2>

<p>I want to do this at some point because I am mindful of the issues
with proprietary Git forges. But this is a task that requires
knowledge and resources. So it will not happen soon.</p>

	</div>

</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The internet is slipping out of our reach (119 pts)]]></title>
            <link>https://injuly.in/blog/darker-internet/index.html</link>
            <guid>39677677</guid>
            <pubDate>Tue, 12 Mar 2024 09:43:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://injuly.in/blog/darker-internet/index.html">https://injuly.in/blog/darker-internet/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=39677677">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
			<hr>

      
      <p>Do you often append "reddit" or "wiki" to your Google search queries? <br>
Seek out human discourse on specific websites,
when search engines were invented to do it for you?
Worry not, for soon search engines will be useless.</p>
<p>If you searched Google for a movie review in 2005, you'd get a review.
Today, you get paid search results, ads, third-party cookies,
trackers, newsletter prompts, notification requests, and,
if you're lucky – a movie review.
No matter what you search for, SEO-hacked content farms will blot out the sun.<sup><a href="#fn-1" id="fnref-1">1</a></sup></p>
<p>The average essay is written not to be read, but to be found—by a search engine,
that is—so it can monetize every fiber of your eyeballs.
Keep you scrolling, clicking, and sharing.
Like this article? Maybe you'll like this e-book too.
It's free! (Just enter your email ;)).</p>
<p>The internet continues to grow in volume, but shrink in diversity.
As if everything has moved to a few select apps,
which then <a href="https://www.theverge.com/2024/2/17/24075670/reddit-ai-training-license-deal-user-content">sell our words</a> to AI slot machines.
Images on Instagram, videos on YouTube, and discussions on Reddit.
Dare to venture out of this bubble,
and you'll be pelted with SEO spam by content farms squabbling over search ranks and impressions.</p>
<p>But do you know what's worse than SEO spam?</p>
<h2 id="ai-generated-seo-spam-">AI generated SEO spam. <br></h2>
<p>With services that <a href="https://injuly.in/assets/img/darker-internet/seo-heist.webp">generate thousands of articles</a>,
post them on multiple websites,
then create fake profiles to market them<sup><a href="#fn-2" id="fnref-2">2</a></sup>;
the phrase "As an AI language model" now turns up on LinkedIn, Amazon, Twitter,
and even Google scholar.
In a matter of weeks, LLMs can generate more text than has ever been written in human history.
Every passing day, humans grow farther apart, and bots fill the void in between.</p>
<p>This steady decline hearkens me back to my early teenage years –
when I was an active user of several RTS video-game forums.
At the time, the internet was smaller and fostered organic growth.
Smaller websites were easier to find, game mods and fanfics weren't subreddits, and personal pages didn't live on Substack or Medium<sup><a href="#fn-3" id="fnref-3">3</a></sup>.</p>
<p>When I'm older, I expect to surf an internet that will have exploded with AI content,
like the big bang leaving <a href="https://en.wikipedia.org/wiki/Dark_forest_hypothesis">a dark forest</a> behind<sup><a href="#fn-4" id="fnref-4">4</a></sup>.
Online TV shows and webtoons with unending episodes generated on the fly,
digital journals overflowing with articles, and chat apps with AI companions to ease loneliness.
Human interaction will stay burrowed underground, in the tight confines of small and heavily moderated groups.</p>
<p>For the past few years, I've been holed up in small discord servers –
the only place where I expect to freely interact with meaningful messages that aren't marketing posts in disguise.
And if you too have been hiding in telegram groups and mailing lists  – good, don't leave.
It's dark outside.</p>




			
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google Announces Stealing Part of a Production Language Model (114 pts)]]></title>
            <link>https://twitter.com/_akhaliq/status/1767384751269150828</link>
            <guid>39677611</guid>
            <pubDate>Tue, 12 Mar 2024 09:30:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/_akhaliq/status/1767384751269150828">https://twitter.com/_akhaliq/status/1767384751269150828</a>, See on <a href="https://news.ycombinator.com/item?id=39677611">Hacker News</a></p>
Couldn't get https://twitter.com/_akhaliq/status/1767384751269150828: Error: Request failed with status code 400]]></description>
        </item>
        <item>
            <title><![CDATA[Shields up: New ideas might make active shielding viable (164 pts)]]></title>
            <link>https://arstechnica.com/science/2024/03/shields-up-new-ideas-might-make-active-shielding-viable/</link>
            <guid>39677530</guid>
            <pubDate>Tue, 12 Mar 2024 09:10:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/science/2024/03/shields-up-new-ideas-might-make-active-shielding-viable/">https://arstechnica.com/science/2024/03/shields-up-new-ideas-might-make-active-shielding-viable/</a>, See on <a href="https://news.ycombinator.com/item?id=39677530">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2023/12/active-radiation-shielding-800x450.jpg" alt="Shields up: New ideas might make active shielding viable">
      <figcaption><p>Aurich Lawson | Getty Images | NASA</p></figcaption>  </figure>

  




<!-- cache hit 206:single/related:346c4fe386f45703755c78b2601a96d9 --><!-- empty -->
<p>On October 19, 1989, at 12:29 UT, a monstrous X13 class solar flare triggered a geomagnetic storm so strong that auroras lit up the skies in Japan, America, Australia, and even Germany the following day. Had you been flying around the Moon at that time, you would have absorbed well over 6 Sieverts of radiation—a dose that would most likely kill you within a month or so.</p>
<p>This is why the Orion spacecraft that is supposed to take humans on a Moon fly-by mission this year has a heavily shielded storm shelter for the crew. But shelters like that aren’t sufficient for a flight to Mars—Orion’s shield is designed for a 30-day mission.</p>
<p>To obtain protection comparable to what we enjoy on Earth would require hundreds of tons of material, and that's simply not possible in orbit. The primary alternative—using active shields that deflect charged particles just like the Earth’s magnetic field does—was first proposed in the 1960s. Today, we’re finally close to making it work.</p>
<h2>Deep-space radiation</h2>
<p>Space radiation comes in two different flavors. Solar events like flares or coronal mass ejections can cause very high fluxes of charged particles (mostly protons). They're nasty when you have no shelter but are relatively easy to shield against since solar protons are mostly low energy. The majority of solar particle events flux is between 30 Mega-electronVolts to 100 MeV and could be stopped by Orion-like shelters.</p>
<p>Then there are galactic cosmic rays: particles coming from outside the Solar System, set in motion by faraway supernovas or neutron stars. These are relatively rare but are coming at you all the time from all directions. They also have high energies, starting at 200 MeV and going to several GeVs, which makes them extremely penetrating. Thick masses don’t provide much shielding against them. When high-energy cosmic ray particles hit thin shields, they produce many lower-energy particles—you’d be better off with no shield at all.</p>                                            
                                                        
<p>The particles with energies between 70 MeV and 500 MeV are responsible for 95 percent of the radiation dose that astronauts get in space. On short flights, solar storms are the main concern because they can be quite violent and do lots of damage very quickly. The longer you fly, though, GCRs become more of an issue because their dose accumulates over time, and they can go through pretty much everything we try to put in their way.</p>
<h2>What keeps us safe at home</h2>
<p>The reason nearly none of this radiation can reach us is that Earth has a natural, multi-stage shielding system. It begins with its magnetic field, which deflects most of the incoming particles toward the poles. A charged particle in a magnetic field follows a curve—the stronger the field, the tighter the curve. Earth’s magnetic field is very weak and barely bends incoming particles, but it is huge, extending thousands of kilometers into space.</p>
<p>Anything that makes it through the magnetic field runs into the atmosphere, which, when it comes to shielding, is the equivalent of an aluminum wall that's 3 meters thick. Finally, there is the planet itself, which essentially cuts the radiation in half since you always have 6.5 billion trillion tons of rock shielding you from the bottom.</p>
<p>To put that in perspective, the Apollo crew module had on average 5 grams of mass per square centimeter standing between the crew and radiation. A typical ISS module has twice that, about 10 g/cm2. The Orion shelter has 35–45 g/cm2, depending on where you sit exactly, and it weighs 36 tons. On Earth, the atmosphere alone gives you 810 g/cm2—roughly 20 times more than our best shielded spaceships.</p>
<p>The two options are to add more mass—which gets expensive quickly—or to shorten the length of the mission, which isn’t always possible. So solving radiation with passive mass won't cut it for longer missions, even using the best shielding materials like polyethylene or water. This is why making a miniaturized, portable version of the Earth’s magnetic field was on the table from the first days of space exploration. Unfortunately, we discovered it was far easier said than done.</p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Bevy Foundation (223 pts)]]></title>
            <link>https://bevyengine.org/news/bevy-foundation/</link>
            <guid>39677009</guid>
            <pubDate>Tue, 12 Mar 2024 07:31:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bevyengine.org/news/bevy-foundation/">https://bevyengine.org/news/bevy-foundation/</a>, See on <a href="https://news.ycombinator.com/item?id=39677009">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>It is with excitement that I unveil to the world ...</p>
<p><img src="https://bevyengine.org/news/bevy-foundation/bevy_foundation.svg" alt="Bevy Foundation Logo"></p><p>The <a href="https://bevyengine.org/foundation"><strong>Bevy Foundation</strong></a> is the next step in our journey to build a world class free and open source game engine. <strong>Bevy Foundation</strong> is a non-profit organization formed in Washington State, with a pending federal 501(c)(3) tax-exemption application (more on this later).</p>
<p>This is a big step for us and it was not taken lightly. This will be a long blog post, so I'll cover the highlights here:</p>
<ol>
<li><strong>Bevy Foundation</strong> is largely a legal formalization of the leadership and operational structure we have already been using. The "Bevy leadership" that you know (and hopefully trust) is also at the helm of <strong>Bevy Foundation</strong>. The biggest difference is that power is distributed more evenly.</li>
<li>Nothing is fundamentally changing about how we build and release Bevy as free and open source software. This is <em>not</em> a business model rug-pull. It is a legal formalization of our mission to build and release Bevy as free and open source software to members of the general public (you!).</li>
<li>You can now <a href="https://bevyengine.org/donate">donate to the Bevy Foundation</a> to support us!</li>
</ol>
<h2 id="some-history">Some History
<a href="#some-history">#</a>
</h2>
<p>We have come such a long way since I first released Bevy to the world in 2020. What was once a one person side project is now built by hundreds of people and used by thousands (we recently broke a million downloads!). Bevy is the most popular, most used game engine built in Rust, and the second most popular open source game engine on GitHub.</p>
<p>I (Carter / @cart) am still Bevy's Project Lead, but I no longer make all of the decisions. For years now <a href="https://bevyengine.org/community/people">The Bevy Organization</a> has delegated decision making authority across members of the Bevy community. We have 5 excellent Maintainers and even more Subject Matter Experts that were each pivotal in making Bevy what it is today.</p>
<p>As we have grown, we have accumulated what I will call "organizational debt":</p>
<ul>
<li><strong>Funding Bevy Has Been A Popularity Contest</strong>: For years, our donate button linked directly to my GitHub sponsors page. This was acceptable early on when I was the only one spending significant time on the project, but that is no longer the case. Last year, we replaced that with a page that any Bevy Organization member could list themselves on. While fairer than the "everything goes to @cart" model, it resulted in funding being a "popularity contest". And unfortunately, given how attached my name is to the project, in practice I still received the majority of the sponsorships. Presenting donors with the task of picking someone to back also deeply complicated the donation process, which likely turned some donors off. We need a simple, centralized donation model where we can direct funds fairly to the areas of the project that need them the most.</li>
<li><strong>We Lacked "Organizational Legitimacy"</strong>: We would like to attract the attention (and funding) of people and companies serious about gamedev. An informal collective of Bevy developers (each asking for support individually) lacks the legitimacy required to attract some entities. We need to be able to present a centralized and transparent view of our operations, with accountable and professional people at the helm.</li>
<li><strong>Carter Held (And Owned) The Keys</strong>: Up until this point, I have owned Bevy-related intellectual property such as the copyright for the Bevy logo. I also owned the <code>bevyengine.org</code> domain name and had exclusive administrative control over most of our infrastructure and communities. I have had absolute authority over all aspects of the project since its inception. Yes, I have delegated, but it all stemmed from me at the root. This had its efficiencies, but it is no longer sustainable for me or ethically sound when there are <em>so many</em> others that deserve actual <em>legal</em> say over how the project is run. There is also the <a href="https://en.wikipedia.org/wiki/Bus_factor">"bus factor"</a> to consider. If something were to happen to me, some aspects of the Bevy project would be lost forever.</li>
</ul>
<p>Bevy needs a structure that lets us work together: a legal entity that embodies our goals and principles, where responsibility and decision making are all shared.</p>
<h2 id="introducing-the-bevy-foundation">Introducing the Bevy Foundation!
<a href="#introducing-the-bevy-foundation">#</a>
</h2>
<h3 id="our-mission">Our Mission
<a href="#our-mission">#</a>
</h3>
<p>To quote our 501(c)(3) application:</p>
<blockquote>
<p>Our mission is to promote, protect, and advance the free and open source Bevy Engine and related open source projects. We coordinate and promote its continued maintenance and development, educate and train members of the general public in its usage, and conduct research and development to advance the state of the art of creating real-time applications and simulations.</p>
</blockquote>
<p>In short: <strong>we exist to develop Bevy and teach people how to use it</strong>!</p>
<h3 id="legal-status">Legal Status
<a href="#legal-status">#</a>
</h3>
<p><a href="https://bevyengine.org/foundation"><strong>Bevy Foundation</strong></a> is a non-profit incorporated in Washington State. This means that the money we raise <a href="https://dor.wa.gov/education/industry-guides/nonprofit-organizations#Fundraising">cannot be used to benefit our members, officers, or directors, except as compensation for services rendered</a>. We do not have "owners" or "shareholders". We are formed exclusively to accomplish our mission as stated above as a public benefit.</p>
<h3 id="federal-501-c-3-application">Federal 501(c)(3) Application
<a href="#federal-501-c-3-application">#</a>
</h3>
<p>We have also applied for a federal 501(c)(3) non-profit public charity designation.</p>
<p>If our 501(c)(3) application is accepted, this status will exempt us from federal income tax and allow donors in the United States to deduct their donations on their federal taxes.</p>
<p>Note that the 501(c)(3) application has not yet been approved, and there has been an increasing number of denials for technology-oriented charities. The experts we have talked to have told us not to get our hopes up.</p>
<p>If we are denied, our default strategy will be to continue operating as a state-only charity and pay federal taxes. As long as we spend most of the donations we receive, the taxes shouldn't be too painful. We may also consider other designations, such as 501(c)(6), but we are cautious about that designation. We want to focus on the members of the Bevy community as people, not through the lens of their commercial interests.</p>
<p>If tax-deductibility is important to you, <em>please do not donate until we receive a determination</em>. But also note that if our application is accepted, donations made <em>prior</em> to our acceptance will <em>retroactively</em> be tax-deductible! Neat!</p>
<h3 id="the-board-of-directors">The Board of Directors
<a href="#the-board-of-directors">#</a>
</h3>
<p>We are run by the <strong>Bevy Foundation</strong> Board of Directors. All actions taken by <strong>Bevy Foundation</strong> are determined by a vote of the board.</p>
<p>The current Board of Directors is: Carter Anderson (@cart), Alice Cecile (@alice-i-cecile), François Mockers (@mockersf), Robert Swain (@superdump), and James Liu (@james7132).</p>
<p>I have been elected President of the board and Alice has been elected Secretary. For logistical reasons, I have also been elected interim Treasurer to get our initial financial situation spun up. It makes sense for a US-based board member to set up things like bank accounts for a US-based organization. But we would like to pass off the role of Treasurer as quickly as possible.</p>
<p>You may notice that every member of the board is an active Bevy Maintainer. This is not a coincidence. We believe that people <em>actually developing the project</em> should be at the helm. There is currently no way to buy a board seat. We have no plans to hire "professional board members" that aren't in the thick of it. For now we plan to stick to the Maintainer == Board Member policy. Functionally, new Board Members are selected via an election of the current board. "Board Member" is currently not a paid position.</p>
<p>Note that I am using the phrasing "currently" and "for now" in some places above because I am <em>no longer capable of making absolute statements about the future of the project</em>. I am a board member, which gives me a vote. And as President I have been given some authority by the board to manage our operations. But I must follow the resolutions of the board and I <em>can</em> be voted out. This is a good thing I promise! It means that the project can exist without me. And if I am no longer fulfilling my duties to the satisfaction of the board, I probably <em>should</em> be ousted.</p>
<p>This is a leap of faith, but one that has been carefully measured over the course of years. I have worked with the other maintainers (now board members) for a long time now and I trust them ... both with the future of Bevy and with my job.</p>
<h3 id="bylaws">Bylaws
<a href="#bylaws">#</a>
</h3>
<p>We have adopted public <a href="https://bevyengine.org/foundation/bylaws">Bylaws</a> that govern how we operate. They determine how we are structured, the roles in the organization, how meetings and voting take place, a conflict of interest policy, and more. Note these are largely borrowed from the standard legal boilerplate (and they exist for a legal purpose), so they're stiffer than our normal style.</p>
<h3 id="transparency">Transparency
<a href="#transparency">#</a>
</h3>
<p>Our goal is to make the operations of <strong>Bevy Foundation</strong> as transparent as possible. We make the following public:</p>
<ul>
<li><a href="https://bevyengine.org/foundation/bylaws"><strong>Bylaws</strong></a>: The operational rules we have adopted</li>
<li><a href="https://bevyengine.org/foundation/meeting-minutes"><strong>Meeting Minutes</strong></a>: Learn about the decisions the board makes and why we make them</li>
<li><a href="https://drive.google.com/drive/u/0/folders/1Q_vdAaI0tsWZdcddL9lDicDZhjPl79s9?ths=true"><strong>Documents</strong></a>:  Public Bevy Foundation documents, such as our Articles of Incorporation</li>
<li><a href="https://bevyengine.org/foundation/budget"><strong>Budget</strong></a>: How we plan to spend money this year</li>
</ul>
<p>We will strive to be approachable and accountable for our actions, and we will continue to make our technical decisions in public with the input of the community. You know who we are and where to find us!</p>
<h2 id="our-plans">Our Plans
<a href="#our-plans">#</a>
</h2>
<p><strong>Bevy Foundation</strong> will direct the majority of its funding to fueling Bevy development.</p>
<h3 id="short-term-bring-alice-on-full-time">Short Term: Bring Alice on full-time
<a href="#short-term-bring-alice-on-full-time">#</a>
</h3>
<p>We have exactly one focus for the short term: bring Alice on full-time. For years, Alice has dedicated <em>significant</em> time to the project as a Maintainer. She has been our primary project manager: wrangling issues, <a href="https://mastodon.social/deck/tags/bevymergetrain">keeping the merge train running</a>, connecting developers to the right parts of the project, and doing the work that ensures we can harness and enable our ever increasing developer community. Not to mention her extensive technical contributions and documentation work!</p>
<p>If you have participated in Bevy's development, you are probably intimately aware of two things:</p>
<ol>
<li>Project management is our bottleneck.</li>
<li>Alice is a world-class project manager.</li>
</ol>
<p>In addition to performing the general "project management" role, Alice has the following specific priorities when she starts full-time:</p>
<ol>
<li><strong>The New Bevy Book</strong>: The new Bevy Book aims to be a complete, always up-to-date, and constantly improving guide to using Bevy. Alice has already contributed content and helped facilitate the book's production. If she joins full-time, she will work to finish it, in addition to helping others contribute.</li>
<li><strong>Coordinating the Development of ECS Relations</strong>: Relations are an ECS feature that enable connecting entities to each other via special components called Relations. These are an often-requested feature that will make a number of scenarios (such as parent-child relationships) much nicer. Alice will work to coordinate this effort and fill in functionality gaps.</li>
<li><strong>Building an Action System for Input Devices</strong>: Bevy sorely needs an official way to define "input actions", which are then mapped (and remapped) to inputs from one or more input devices (for example: a <code>Jump</code> action that is mapped to the "A" button on controllers and "Spacebar" on keyboards). Alice built <a href="https://github.com/leafwing-studios/leafwing-input-manager"><code>leafwing-input-manager</code></a>, which is a popular third-party Bevy plugin that does exactly that. Alice plans on taking the lessons learned there to build a proper first-party solution to this problem.</li>
</ol>
<p>Alice deserves to be paid for her work, and Bevy needs her full-time. Our goal for the <strong>Bevy Foundation</strong> is to pay reasonably competitive, roughly market rate salaries. Therefore, our first goal is to pay Alice a salary of $150,000 a year.</p>
<p>We all believe Alice is worth at least that much, but given that funds will take time to build up, Alice has agreed to take a pay cut while things spin up.</p>
<h4 id="what-about-carter">What about Carter?
<a href="#what-about-carter">#</a>
</h4>
<p>Some may ask why I (Carter), the creator and Project Lead of Bevy, am not the first to be paid by the <strong>Bevy Foundation</strong>. Thats easy: I already currently have enough support from my current sponsors to live on, and I have historically received the lion's share of sponsorships. The scales have been tilted in my favor for too long. Prioritizing Alice is the only fair choice, and also happens to be what is best for Bevy right now.</p>
<p>I suspect my current sponsors will transition to the <strong>Bevy Foundation</strong> over time (and I encourage them to do so!). As this happens there will likely be an inflection point where Alice is making more than me. When we hit that point, we will sort out a balancing strategy until we are both paid our target wages.</p>
<p>Note if we receive 501(c)(3) status (see the 501(c)(3) section above), we are allowed to pay competitive wages, but we can't pay <em>excessive</em> wages (nor are we <em>interested in doing so</em>). Once Alice and Carter are paid reasonable wages, we will shift our financial focus elsewhere.</p>
<h3 id="future-plans">Future Plans
<a href="#future-plans">#</a>
</h3>
<p>Our focus will always be on funding more Bevy developers, both full-time and part-time. We will likely explore targeted one time grants for specific efforts.</p>
<p>Later down the line, we will likely explore the development of a Bevy Asset store where the community can list and sell Bevy-compatible assets.</p>
<p>We would also like to re-introduce a Bevy Merch store. While we don't think this is an ideal fundraising strategy, we think it will be a fun way for the Bevy community to show their pride!</p>
<p>When we consider future programs, we will ask the questions:</p>
<ol>
<li>Is this compatible with the Bevy Foundation's mission?</li>
<li>Is this in the best interest of the Bevy community and the general public?</li>
<li>Will this compromise the integrity of Bevy as a free and open source offering in any way?</li>
<li>Will this change our incentives in a way that risks changing our answers to (1), (2), or (3)?</li>
<li>If we are monetizing something, are we doing it in an ethical way?</li>
</ol>
<p>Know that we exist <em>for the benefit of the Bevy community and the general public</em> and we will try our utmost to never compromise that.</p>
<h2 id="a-new-era">A New Era
<a href="#a-new-era">#</a>
</h2>
<p>The <strong>Bevy Foundation</strong> is both an accomplishment, as the culmination of months of work and research, and a Foundation, on top of which we will build the future of Bevy. We are building technology that will enrich the lives of everyone as a common, publicly available good. Game development is currently an industry of rent seekers and gatekeepers. I believe that a better world can exist: one where we collectively build tools <em>for each other</em> in the open. Bevy is ideologically and technologically a rethinking of what this industry should be.</p>
<p>I am deeply proud of what we have accomplished so far and I can't wait for what this new Bevy era will bring.</p>
<h2 id="we-need-your-support">We Need Your Support!
<a href="#we-need-your-support">#</a>
</h2>
<p>Bevy will always be free and open source. However our plans for Bevy's future are grand ... they will require significant financial support. Please consider donating if you enjoy using Bevy and believe in our mission.</p>
<p>If we receive 501(c)(3) public charity status, to maintain that status we will require a significant portion of our funds to come from individual people (not just companies). Your contribution matters!</p>
<p>If you are already supporting us through individual sponsorships, consider switching your donation to <strong>Bevy Foundation</strong>, as that will make it easier for us to direct your contribution to the areas that need it most.</p>
<p>Visit our brand new donation page here:</p>
<p><a href="https://bevyengine.org/donate">Donate <img src="https://bevyengine.org/assets/heart.svg" alt="heart icon"></a></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cloning a Laptop over NVMe TCP (392 pts)]]></title>
            <link>https://copyninja.in/blog/clone_laptop_nvmet.html</link>
            <guid>39676767</guid>
            <pubDate>Tue, 12 Mar 2024 06:37:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://copyninja.in/blog/clone_laptop_nvmet.html">https://copyninja.in/blog/clone_laptop_nvmet.html</a>, See on <a href="https://news.ycombinator.com/item?id=39676767">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content"><p>Recently, I got a new laptop and had to set it up so I could start using it. But I wasn't really in the mood to go through the same old steps which I had explained in this <a href="https://copyninja.in/blog/live_install_debian.html">post earlier</a>. I was complaining about this to my colleague, and there came the suggestion of why not copy the entire disk to the new laptop. Though it sounded like an interesting idea to me, I had my doubts, so here is what I told him in return.</p><ol><li>I don't have the tools to open my old laptop and connect the new disk over USB to my new laptop.</li><li>I use full disk encryption, and my old laptop has a 512GB disk, whereas the new laptop has a 1TB NVME, and I'm not so familiar with resizing LUKS.</li></ol><p>He promptly suggested both could be done. For step 1, just expose the disk using NVME over TCP and connect it over the network and do a full disk copy, and the rest is pretty simple to achieve. In short, he suggested the following:</p><ol><li>Export the disk using nvmet-tcp from the old laptop.</li><li>Do a disk copy to the new laptop.</li><li>Resize the partition to use the full 1TB.</li><li>Resize LUKS.</li><li>Finally, resize the BTRFS root disk.</li></ol><div id="exporting-disk-over-nvme-tcp"><h2>Exporting Disk over NVME TCP</h2><p>The easiest way suggested by my colleague to do this is using <a href="https://www.freedesktop.org/software/systemd/man/latest/systemd-storagetm.service.html">systemd-storagetm.service</a>. This service can be invoked by simply booting into <em>storage-target-mode.target</em> by specifying <em>rd.systemd.unit=storage-target-mode.target</em>. But he suggested not to use this as I need to tweak the dracut initrd image to involve network services as well as configuring WiFi from this mode is a painful thing to do.</p><p>So alternatively, I simply booted both my laptops with GRML rescue CD. And the following step was done to export the NVME disk on my current laptop using the nvmet-tcp module of Linux:</p><div><pre><span></span>modprobe<span> </span>nvemt-tcp
<span>cd</span><span> </span>/sys/kernel/config/nvmet
mkdir<span> </span>ports/0
<span>cd</span><span> </span>ports/0
<span>echo</span><span> </span><span>"ipv4"</span><span> </span>&gt;<span> </span>addr_adrfam
<span>echo</span><span> </span><span>0</span>.0.0.0<span> </span>&gt;<span> </span>addr_traaddr
<span>echo</span><span> </span><span>4420</span><span> </span>&gt;<span> </span>addr_trsvcid
<span>echo</span><span> </span>tcp<span> </span>&gt;<span> </span>addr_trtype

<span>cd</span><span> </span>/sys/kernel/config/nvmet/subsystems
mkdir<span> </span>testnqn
<span>echo</span><span> </span><span>1</span><span> </span>&gt;testnqn/allow_any_host
mkdir<span> </span>testnqn/namespaces/1

<span>cd</span><span> </span>testnqn
<span># replace the device name with the disk you want to export</span>
<span>echo</span><span> </span><span>"/dev/nvme0n1"</span><span> </span>&gt;<span> </span>namespaces/1/device_path
<span>echo</span><span> </span><span>1</span><span> </span>&gt;<span> </span>namespaces/1/enable

ln<span> </span>-s<span> </span><span>"../../subsystems/testnqn"</span><span> </span>/sys/kernel/config/nvmet/ports/0/subsystems/testnqn
</pre></div><p>These steps ensure that the device is now exported using NVME over TCP. The next step is to detect this on the new laptop and connect the device:</p><div><pre><span></span>nvme<span> </span>discover<span> </span>-t<span> </span>tcp<span> </span>-a<span> </span>&lt;ip&gt;<span> </span>-s<span> </span><span>4420</span>
nvme<span> </span>connectl-all<span> </span>-t<span> </span>tcp<span> </span>-a<span> </span>&lt;&gt;<span> </span>-s<span> </span><span>4420</span>
</pre></div><p>Finally, <tt>nvme list</tt> shows the device which is connected to the new laptop, and we can proceed with the next step, which is to do the disk copy.</p></div><div id="copying-the-disk"><h2>Copying the Disk</h2><p>I simply used the <tt>dd</tt> command to copy the root disk to my new laptop. Since the new laptop didn't have an Ethernet port, I had to rely only on WiFi, and it took about 7 and a half hours to copy the entire 512GB to the new laptop. The speed at which I was copying was about 18-20MB/s. The other option would have been to create an initial partition and file system and do an rsync of the root disk or use BTRFS itself for file system transfer.</p><div><pre><span></span>dd<span> </span><span>if</span><span>=</span>/dev/nvme2n1<span> </span><span>of</span><span>=</span>/dev/nvme0n1<span> </span><span>status</span><span>=</span>progress<span> </span><span>bs</span><span>=</span>40M
</pre></div></div><div id="resizing-partition-and-luks-container"><h2>Resizing Partition and LUKS Container</h2><p>The final part was very easy. When I launched <tt>parted</tt>, it detected that the partition table does not match the disk size and asked if it can fix it, and I said yes. Next, I had to install <tt><span>cloud-guest-utils</span></tt> to get <tt>growpart</tt> to fix the second partition, and the following command extended the partition to the full 1TB:</p><p>Next, I used <tt><span>cryptsetup-resize</span></tt> to increase the LUKS container size.</p><div><pre><span></span>cryptsetup<span> </span>luksOpen<span> </span>/dev/nvme0n1p2<span> </span>ENC
cryptsetup<span> </span>resize<span> </span>ENC
</pre></div><p>Finally, I rebooted into the disk, and everything worked fine. After logging into the system, I resized the BTRFS file system. BTRFS requires the system to be mounted for resize, so I could not attempt it in live boot.</p><div><pre><span></span>btfs<span> </span>fielsystem<span> </span>resize<span> </span>max<span> </span>/
</pre></div></div><div id="conclussion"><h2>Conclussion</h2><p>The only benefit of this entire process is that I have a new laptop, but I still feel like I'm using my existing laptop. Typically, setting up a new laptop takes about a week or two to completely get adjusted, but in this case, that entire time is saved.</p><p>An added benefit is that I learned how to export disks using NVME over TCP, thanks to my colleague. This new knowledge adds to the value of the experience.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[C++ Safety, in Context (117 pts)]]></title>
            <link>https://herbsutter.com/2024/03/11/safety-in-context/</link>
            <guid>39676702</guid>
            <pubDate>Tue, 12 Mar 2024 06:23:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://herbsutter.com/2024/03/11/safety-in-context/">https://herbsutter.com/2024/03/11/safety-in-context/</a>, See on <a href="https://news.ycombinator.com/item?id=39676702">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
		
<blockquote>
<p><em><strong><em>Scope.</em></strong><em> To talk about C++’s current safety problems and solutions well, I need to include the context of the broad landscape of security and safety threats facing all software. I chair the ISO C++ standards committee and I work for Microsoft, but these are my personal opinions and I hope they will invite more dialog across programming language and security communities.</em></em></p>



<p><strong><em>Acknowledgments. </em></strong><em>Many thanks to people from the C, C++, C#, Python, Rust, MITRE, and other language and security communities whose feedback on drafts of this material has been invaluable, including: Jean-François Bastien, Joe Bialek, Andrew Lilley Brinker, Jonathan Caves, Gabriel Dos Reis, Daniel Frampton, Tanveer Gani, Daniel Griffing, Russell Hadley, Mark Hall, Tom Honermann, Michael Howard, Marian Luparu, Ulzii Luvsanbat, Rico Mariani, Chris McKinsey, Bogdan Mihalcea, Roger Orr, Robert Seacord, Bjarne Stroustrup, Mads Torgersen, Guido van Rossum, Roy Williams, Michael Wong.</em></p>



<p><strong><em>Terminology <em>(see </em><a href="https://www.iso.org/standard/76517.html"><em>ISO/IEC 23643:2020</em></a><em>)</em>.</em></strong><em> “<strong>Software security</strong>” (or “cybersecurity” or similar) means making software able to protect its assets from a malicious attacker. “<strong>Software safety</strong>” (or “life safety” or similar) means making software free from unacceptable risk of causing unintended harm to humans, property, or the environment.  “<strong>Programming language safety</strong>” means a language’s (including its standard libraries’) static and dynamic guarantees, including but not limited to type and memory safety, which helps us make our software both more secure and more safe. When I say <strong>“safety”</strong> unqualified here, I mean programming language safety, which benefits both software security and software safety.</em></p>
</blockquote>



<p>We must make our software infrastructure more secure against the rise in cyberattacks (such as on power grids, hospitals, and banks), and safer against accidental failures with the increased use of software in life-critical systems (such as autonomous vehicles and autonomous weapons).</p>



<p>The past two years in particular have seen extra attention on programming language safety as a way to help build more-secure and -safe software; on the real benefits of memory-safe languages (MSLs); and that C and C++ language safety needs to improve — I agree.</p>



<p>But there have been misconceptions, too, including focusing too narrowly on programming language safety as our industry’s primary security and safety problem — it isn’t. Many of the most damaging recent security breaches happened to code written in MSLs (e.g., <a href="https://www.cisa.gov/news-events/news/apache-log4j-vulnerability-guidance">Log4j</a>) or had nothing to do with programming languages (e.g., <a href="https://blog.aquasec.com/the-ticking-supply-chain-attack-bomb-of-exposed-kubernetes-secrets">Kubernetes Secrets stored on public GitHub repos</a>).</p>



<p>In that context, I’ll focus on C++ and try to:</p>


<div>
<figure><a href="https://herbsutter.files.wordpress.com/2024/03/image.png"><img data-attachment-id="4934" data-permalink="https://herbsutter.com/2024/03/11/safety-in-context/image-12/" data-orig-file="https://herbsutter.files.wordpress.com/2024/03/image.png" data-orig-size="393,398" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://herbsutter.files.wordpress.com/2024/03/image.png?w=296" data-large-file="https://herbsutter.files.wordpress.com/2024/03/image.png?w=393" width="393" height="398" src="https://herbsutter.files.wordpress.com/2024/03/image.png?w=393" alt="" srcset="https://herbsutter.files.wordpress.com/2024/03/image.png 393w, https://herbsutter.files.wordpress.com/2024/03/image.png?w=148 148w, https://herbsutter.files.wordpress.com/2024/03/image.png?w=296 296w" sizes="(max-width: 393px) 100vw, 393px"></a></figure></div>


<ul>
<li>highlight what needs attention (what C++’s problem “is”), and how we can get there by building on solutions already underway;</li>



<li>address some common misconceptions (what C++’s problem “isn’t”), including practical considerations of MSLs; and</li>



<li>leave a call to action for programmers using all &nbsp;languages.</li>
</ul>



<p><strong>tl;dr:</strong> I don’t want C++ to limit what I can express efficiently. I just want C++ to let me enforce our already-well-known safety rules and best practices by default, and make me opt out explicitly if that’s what I want. Then I can still use fully modern C++… just nicer.</p>



<p>Let’s dig in.</p>



<h2>The immediate problem “is” that it’s Too Easy By Default™ to write security and safety vulnerabilities in C++ that would have been caught by stricter enforcement of known rules for <em>type, bounds, initialization, </em>and<em> lifetime</em> language safety</h2>


<div>
<figure><a href="https://herbsutter.files.wordpress.com/2024/03/image-1.png"><img data-attachment-id="4940" data-permalink="https://herbsutter.com/2024/03/11/safety-in-context/image-1-5/" data-orig-file="https://herbsutter.files.wordpress.com/2024/03/image-1.png" data-orig-size="628,498" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-1" data-image-description="" data-image-caption="" data-medium-file="https://herbsutter.files.wordpress.com/2024/03/image-1.png?w=300" data-large-file="https://herbsutter.files.wordpress.com/2024/03/image-1.png?w=628" width="628" height="498" src="https://herbsutter.files.wordpress.com/2024/03/image-1.png?w=628" alt="" srcset="https://herbsutter.files.wordpress.com/2024/03/image-1.png 628w, https://herbsutter.files.wordpress.com/2024/03/image-1.png?w=150 150w, https://herbsutter.files.wordpress.com/2024/03/image-1.png?w=300 300w" sizes="(max-width: 628px) 100vw, 628px"></a></figure></div>


<p><strong>In C++, we need to start with improving these four categories. </strong>These are the main four sources of improvement provided by all the MSLs that NIST/NSA/CISA/etc. recommend using instead of C++ (<a href="https://media.defense.gov/2023/Dec/06/2003352724/-1/-1/0/THE-CASE-FOR-MEMORY-SAFE-ROADMAPS-TLP-CLEAR.PDF">example</a>), so by definition addressing these four would address the immediate NIST/NSA/CISA/etc. issues with C++. (More on this under “The problem ‘isn’t’… (1)” below.)</p>



<p>And in all recent years including 2023 (see figures 1’s four highlighted rows, and figure 2), these four constitute the bulk of those oft-quoted 70% of <a href="https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures">CVEs</a> (Common [Security] Vulnerabilities and Exposures) related to language memory unsafety. (However, that “70% of language memory unsafety CVEs” is misleading; for example, in figure 1, most of <a href="https://cwe.mitre.org/top25/archive/2023/2023_top25_list.html#tableView">MITRE’s 2023 “most dangerous weaknesses”</a> did not involve language safety and so are outside that denominator. More on this under “The problem ‘isn’t’… (3)” below.)</p>


<div>
<figure><a href="https://herbsutter.files.wordpress.com/2024/03/image-2.png"><img data-attachment-id="4943" data-permalink="https://herbsutter.com/2024/03/11/safety-in-context/image-2-4/" data-orig-file="https://herbsutter.files.wordpress.com/2024/03/image-2.png" data-orig-size="538,511" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-2" data-image-description="" data-image-caption="" data-medium-file="https://herbsutter.files.wordpress.com/2024/03/image-2.png?w=300" data-large-file="https://herbsutter.files.wordpress.com/2024/03/image-2.png?w=538" width="538" height="511" src="https://herbsutter.files.wordpress.com/2024/03/image-2.png?w=538" alt="" srcset="https://herbsutter.files.wordpress.com/2024/03/image-2.png 538w, https://herbsutter.files.wordpress.com/2024/03/image-2.png?w=150 150w, https://herbsutter.files.wordpress.com/2024/03/image-2.png?w=300 300w" sizes="(max-width: 538px) 100vw, 538px"></a></figure></div>


<p><strong>The C++ guidance literature already broadly agrees on safety rules in those categories. </strong>It’s true that there is some conflicting guidance literature, particularly in environments that ban exceptions or run-time type support and so use some alternative rules. But there is consensus on core safety rules, such as banning unsafe casts, uninitialized variables, and out-of-bounds accesses (see Appendix).</p>



<p><strong><strong>C++ should provide a way to enforce them by default, and require explicit opt-out where needed.</strong></strong> We can and do write “good” code and secure applications in C++. But it’s easy even for experienced C++ developers to accidentally write “bad” code and security vulnerabilities that C++ silently accepts, and that would be rejected as safety violations in other languages. We need the standard language to help more by enforcing the known best practices, rather than relying on additional nonstandard tools to recommend them.</p>



<p><strong>These are not the only four aspects of language safety we should address.</strong> They are just the immediate ones, a set of clear low-hanging fruit where there is both a clear need and clear way to improve (see Appendix).</p>



<blockquote>
<p><strong><em>Note:</em></strong><em> And safety categories are of course interrelated. For example, full type safety (that an accessed object is a valid object of its type) requires eliminating out-of-bounds accesses to unallocated objects. But, conversely, full bounds safety (that accessed memory is inside allocated bounds) similarly requires eliminating type-unsafe downcasts to larger derived-type objects that would appear to extend beyond the actual allocation.</em></p>
</blockquote>



<p><strong>Software safety is also important.</strong> Cyberattacks are urgent, so it’s natural that recent discussions have focused more on security and CVEs first. But as we specify and evolve default language safety rules, we must also include our stakeholders who care deeply about functional safety issues that are not reflected in the major CVE buckets but are just as harmful to life and property when left in code. Programming language safety helps both software security and software safety, and we should start somewhere, so let’s start (but not end) with the known pain points of security CVEs.</p>



<h3>In those four buckets, a 10-50x improvement (90-98% reduction) is sufficient</h3>



<p><strong>If there were 90-98% fewer C++ type/bounds/initialization/lifetime vulnerabilities we wouldn’t be having this discussion.</strong> All languages have CVEs, C++ just has more (and C still more); so far in 2024, <a href="https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=rust">Rust has 6 CVEs</a>, and <a href="https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=c++">C and C++ combined have 61 CVEs</a>. So zero isn’t the goal; something like a 90% reduction is necessary, and a 98% reduction is sufficient, to achieve security parity with the levels of language safety provided by MSLs… and has the strong benefit that I believe it can be achieved with <em>perfect backward link compatibility</em> (i.e., without changing C++’s object model, and its lifetime model which does not depend on universal tracing garbage collection and is not limited to tree-based data structures) which is essential to our being able to adopt the improvements in existing C++ projects as easily as we can adopt other new editions of C++. — After that, we can pursue additional improvements to other buckets, such as thread safety and overflow safety.</p>



<p>Aiming for 100%, or zero CVEs in those four buckets, would be a mistake:</p>



<ul>
<li>100% is not necessary because none of the MSLs we’re being told to use instead are there either. More on this in “The problem ‘isn’t’… (2)” below.</li>



<li>100% is not sufficient because many cyberattacks exploit security weaknesses other than memory safety.</li>
</ul>



<p><strong>And getting that last 2% would be too costly</strong>, because it would require giving up on link compatibility and seamless interoperability (or “interop”) with today’s C++ code. For example, Rust’s object model and borrow checker deliver great guarantees, but require fundamental incompatibility with C++ and so make interop hard beyond the usual C interop level. One reason is that Rust’s safe language pointers are limited to expressing tree-shaped data structures that have no cycles; that unique ownership is essential to having great language-enforced aliasing guarantees, but it also requires programmers to use ‘something else’ for anything more complex than a tree (e.g., using Rc, or using integer indexes as ersatz pointers); it’s not just about <a href="https://rust-unofficial.github.io/too-many-lists/">linked lists</a> but those are a simple well-known illustrative example.</p>



<p>If we can get a 98% improvement and still have fully compatible interop with existing C++, that would be a holy grail worth serious investment.</p>



<h3>A 98% reduction across those four categories is achievable in new/updated C++ code, and partially in existing code</h3>



<p>Since at least 2014, Bjarne Stroustrup has advocated addressing safety in C++ via a “subset of a superset”: That is, first “superset” to add essential items not available in C++14, then “subset” to exclude the unsafe constructs that now all have replacements.</p>



<p><strong>As of C++20, I believe we have achieved the “superset,” notably by standardizing </strong><strong>span</strong><strong>, </strong><strong>string_view</strong><strong>, concepts, and bounds-aware ranges. </strong>We may still want a handful more features, such as a null-terminated zstring_view, but the major additions already exist.</p>



<p><strong>Now we should “subset”: Enable C++ programmers to enforce best practices around type and memory safety, by default, in new code and code they can update to confirm to the subset.</strong> Enabling safety rules by default would not limit the language’s power but would require explicit opt-outs for non-standard practices, thereby reducing inadvertent risks. And it could be evolved over time, which is important because C++ is a living language and adversaries will keep changing their attacks.</p>



<p>ISO C++ evolution is already pursuing <a href="https://open-std.org/JTC1/SC22/WG21/docs/papers/2023/p2816r0.pdf">Safety Profiles for C++</a>. The suggestions in the Appendix are refinements to that, to demonstrate specific enforcements and to try to maximize their adoptability and useful impact. For example, everyone agrees that many safety bugs will require code changes to fix. However, how many safety bugs could be fixed without manual source code changes, so that just recompiling existing code with safety profiles enabled delivers some safety benefits? For example, we could by default inject a call-site bounds check 0 &lt;= b &lt; a.size() on every subscript expression a[b] when a.size() exists and a is a contiguous container, without requiring any source code changes and without upgrading to a new internally bounds-checked container library; that checking would Just Work out of the box with every contiguous C++ standard container, span, string_view, and third-party custom container with no library updates needed (including therefore also no concern about ABI breakage).</p>



<p><strong>Rules like those summarized in the Appendix would have prevented (at compile time, test time or run time) most of the past CVEs I’ve reviewed in the type, bounds, and initialization categories, and would have prevented many of the lifetime CVEs. </strong>I estimate a roughly 98% reduction in those categories is achievable in a well-defined and standardized way for C++ to enable safety rules by default and retains perfect backward link compatibility.&nbsp;See the Appendix for a more detailed description.</p>



<p><strong>We can and should emphasize adoptability and benefit also for C++ code that cannot easily be changed. </strong>Any code change to conform to safety rules carries a cost; worse, not all code can be easily updated to conform to safety rules (e.g., it’s old and not understood, it belongs to a third party that won’t allow updates, it belongs to a shared project that won’t take upstream changes and can’t easily be forked). That’s why above (and in the Appendix) I stress that C++ should seriously try to deliver as many of the safety improvements as practical without requiring manual source code changes, notably by automatically making existing code do the right thing when that is clear (e.g., the bounds checks mentioned above, or emitting static_cast pointer downcasts as effectively dynamic_cast without requiring the code to be changed), and by offering automated fixits that the programmer can choose to apply (e.g., to change the source for static_cast pointer downcasts to actually say dynamic_cast). Even though in many cases a programmer will need to thoughtfully update code to replace inherently unsafe constructs that can’t be automatically fixed, I believe for some percentage of cases we can deliver safety improvements by just recompiling existing code in the safety-rules-by-default mode, and we should try because it’s essential to maximizing safety profiles’ adoptability and impact.</p>



<h2>What the problem “isn’t”: Some common misconceptions</h2>



<h3>(1) The problem “isn’t” defining what we mean by “C++’s most urgent language safety problem.” We know the four kinds of safety that most urgently need to be improved: type, bounds, initialization, and lifetime safety.</h3>



<p>We know these four are the low-hanging fruit (see “The problem ‘is’…” above). It’s true that these are just four of perhaps two dozen kinds of “safety” categories, including ones like safe integer arithmetic. But:</p>



<ul>
<li>Most of the others are either much smaller sources of problems, or are primarily important because they contribute to those four main categories. For example, the integer overflows we care most about are indexes and sizes, which fall under bounds safety.</li>



<li>Most MSLs don’t address making these safe by default either, typically due to the checking cost. But all languages (including C++) usually have libraries and tools to address them. For example, Microsoft ships a <a href="https://learn.microsoft.com/en-us/cpp/safeint/safeint-library?view=msvc-170">SafeInt library</a> for C++ to handle integer overflows, which is opt-in. C# has a <a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/statements/checked-and-unchecked">checked arithmetic language feature</a> to handle integer overflows, which is opt-in. Python’s built-in integers are overflow-safe by default because they automatically expand; however, the popular NumPy fixed-size integer types do not check for overflow by default and require using checked functions, which is opt-in.</li>
</ul>



<p>Thread safety is obviously important too, and I’m not ignoring it. I’m just pointing out that it is not one of the top target buckets: Most of the MSLs that NIST/NSA/CISA/etc. recommend over C++ (except uniquely Rust, and to a lesser extent Python) address thread safety impact on <em>user</em> <em>data</em> corruption about as well as C++. The main improvement MSLs give is that a program data race will not corrupt the language’s own <em>virtual machine</em> (whereas in C++ a data race is currently all-bets-are-off undefined behavior). Some languages do give some additional protection, such as that Python guarantees two racing threads cannot see a torn write of an integer and reduces other possible interleavings because of the global interpreter lock (GIL).</p>



<h3>(2) The problem “isn’t” that C++ code is not formally provably safe.</h3>



<p>Yes, C++ code makes it too easy to write silently-unsafe code by default (see “The problem ‘is’…” above).</p>



<p>But I’ve seen some people claim we need to require languages to be formally provably safe, and that would be a bridge too far. Much to the chagrin of CS theorists, mainstream commercial programming languages aren’t formally provably safe. Consider some examples:</p>



<ul>
<li>None of the widely-used languages we view as MSLs (except uniquely Rust) claim to be thread-safe and race-free by construction, as covered in the previous section. Yet we still call C#, Go, Java, Python, and similar languages “safe.” Therefore, formally guaranteeing thread safety properties can’t be a requirement to be considered a sufficiently safe language.</li>



<li>That’s because a language’s choice of safety guarantees is a tradeoff: For example, in Rust, safe code uses tree-based dynamic data structures only. This feature lets Rust deliver stronger thread safety guarantees than other safe languages, because it can more easily reason about and control aliasing. However, this same feature also requires Rust programs to use unsafe code more often to represent common data structures that do not require unsafe code to represent in other MSLs such as C# or Java, and so <a href="https://thenewstack.io/unsafe-rust-in-the-wild/">30% to 50% of Rust crates use unsafe code</a>, compared for example to <a href="https://dl.acm.org/doi/abs/10.1145/2814270.2814313">25% of Java libraries</a>.</li>



<li>C#, Java, and other MSLs still have use-before-initialized and use-after-destroyed type safety problems too: They guarantee not accessing <em>memory</em> outside its allocated lifetime, but <em>object</em> lifetime is a subset of memory lifetime (objects are constructed after, and destroyed/disposed before, the raw memory is allocated and deallocated; before construction and after dispose, the memory is allocated but contains “raw bits” that likely don’t represent a valid object of its type). <strong>If you doubt, please run (don’t walk) and ask ChatGPT</strong> about Java and C# problems with: access-unconstructed-object bugs (e.g., in those languages, any virtual call in a constructor is “deep” and executes in a derived object before the derived object’s state is initialized); use-after-dispose bugs; “resurrection” bugs; and why those languages tell people never to use their finalizers. Yet these are great languages and we rightly consider them safe languages. Therefore, formally guaranteeing no-use-before-initialized and no-use-after-dispose can’t be a requirement to be considered a sufficiently safe language.</li>



<li>Rust, Go, and other languages <a href="https://rustc-dev-guide.rust-lang.org/sanitizers.html">support sanitizers</a> too, including ThreadSanitizer and <a href="https://github.com/rust-lang/miri">undefined behavior sanitizers</a>, and related tools like fuzzers. Sanitizers are known to be still needed as a complement to language safety, and not only for when programmers use ‘unsafe’ code; furthermore, they go beyond finding memory safety issues. The uses of Rust at scale that I know of also enforce use of sanitizers. So using sanitizers can’t be an indicator that a language is unsafe — we should use the supported sanitizers for code written in any language.</li>
</ul>



<blockquote>
<p><strong>Note:</strong> “Use your sanitizers” does not mean to use all of them all the time. Some sanitizers conflict with each other, so you can only use those one at a time. Some sanitizers are expensive, so they should only be run periodically. Some sanitizers should not be run in production, including because their presence can create new security vulnerabilities.</p>
</blockquote>



<h3>(3) The problem “isn’t” that moving the world’s C and C++ code to memory-safe languages (MSLs) would eliminate 70% of security vulnerabilities.</h3>



<p>MSLs are wonderful! They just aren’t a silver bullet.</p>



<p><a href="https://alexgaynor.net/2020/may/27/science-on-memory-unsafety-and-security/">An oft-quoted number</a> is that “70%” of <em>programming language-caused</em> CVEs (reported security vulnerabilities) in C and C++ code are due to language safety problems. That number is true and repeatable, but has been badly misinterpreted in the press: No security expert I know believes that if we could wave a magic wand and instantly transform all the world’s code to MSLs, that we’d have 70% fewer CVEs, data breaches, and ransomware attacks. (For example, see <a href="https://www.horizon3.ai/analysis-of-2023s-known-exploited-vulnerabilities/">this February 2024 example analysis paper</a>.)</p>



<p>Consider some reasons.</p>



<ul>
<li>That 70% is of the <em>subset</em> of security CVEs that can be addressed by programming language safety. See figure 1 again: Most of 2023’s top 10 “most dangerous software weaknesses” were not related to memory safety. Many of 2023’s largest data breaches and other cyberattacks and cybercrime had nothing to do with programming languages at all. In 2023, attackers reduced their use of malware because software is getting hardened and endpoint protection is effective (<a href="https://www.crn.com/news/security/10-major-cyberattacks-and-data-breaches-in-2023">CRN</a>), and attackers go after the slowest animal in the herd. Most of the issues listed in <a href="https://nvlpubs.nist.gov/nistpubs/ir/2021/NIST.IR.8397.pdf">NISTIR-8397</a> affect all languages equally, as they go beyond memory safety (e.g., <a href="https://www.cisa.gov/news-events/news/apache-log4j-vulnerability-guidance">Log4j</a>) or even programming languages (e.g., automated testing, hardcoded secrets, enabling OS protections, string/SQL injections, software bills of materials). For more detail see the <a href="https://learn.microsoft.com/en-us/cpp/code-quality/build-reliable-secure-programs?view=msvc-170">Microsoft response to NISTIR-8397</a>, for which I was the editor. (More on this in the Call to Action.)</li>



<li>MSLs get CVEs too, though definitely fewer (again, e.g., <a href="https://www.cisa.gov/news-events/news/apache-log4j-vulnerability-guidance">Log4j</a>). For example, see <a href="https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=rust">MITRE list of Rust CVEs</a>, including six so far in 2024. And all programs use unsafe code; for example, see the <em>Conclusions</em> section of <a href="https://www.researchgate.net/publication/344892072_On_the_use_of_C_Unsafe_Code_Context_An_Empirical_Study_of_Stack_Overflow">Firouzi et al.</a>’s study of uses of C#’s unsafe on StackOverflow and prevalence of vulnerabilities, and that all programs eventually call trusted native libraries or operating system code.</li>



<li>Saying the quiet part out loud: CVEs are known to be an imprecise metric. We use it because it’s the metric we have, at least for security vulnerabilities, but we should use it with care. This may surprise you, as it did me, because we hear a lot about CVEs. But whenever I’ve suggested improvements for C++ and measuring “success” via a reduction in CVEs (including in this essay), security experts insist to me that CVEs aren’t a great metric to use… including the same experts who had previously quoted the 70% CVE number to me. — Reasons why CVEs aren’t a great metric include that CVEs are self-reported and often self-selected, and not all are equally exploitable; but there can be pressure to report a bug as a vulnerability even if there’s no reasonable exploit because of the benefits of getting one’s name on a CVE. In August 2023, the <a href="https://www.cve.org/Media/News/item/news/2023/08/29/Python-Software-Foundation-Added-as-CNA">Python Software Foundation became a CVE Numbering Authority (CNA)</a> for Python and pip distributions, and now has more control over Python and pip CVEs. The C++ community has not done so.</li>



<li>CVEs target only software security vulnerabilities (cyberattacks and intrusions), and we also need to consider software safety (life-critical systems and unintended harm to humans).</li>
</ul>



<h3>(4) The problem “isn’t” that C++ programmers aren’t trying hard enough / using the existing tools well enough. The challenge is making it easier to enable them.</h3>



<p>Today, the mitigations and tools we do have for C++ code are an uneven mix, and all are off-by-default:</p>



<ul>
<li><strong>Kind.</strong> They are a mix of static tools, dynamic tools, compiler switches, libraries, and language features.</li>



<li><strong>Acquisition.</strong> They are acquired in a mix of ways: in-the-box in the C++ compiler, optional downloads, third-party products, and some you need to google around to discover.</li>



<li><strong>Accuracy.</strong> Existing rulesets mix rules with low and high false positives. The latter are effectively unadoptable by programmers, and their presence makes it difficult to “just adopt this whole set of rules.”</li>



<li><strong>Determinism.</strong> Some rules, such as ones that rely on interprocedural analysis of full call trees, are inherently nondeterministic (because an implementation gives up when fully evaluating a case exceeds the space and time available; a.k.a. “best effort” analysis). This means that two implementations of the identical rule can give different answers for identical code (and therefore nondeterministic rules are also not portable, see below).</li>



<li><strong>Efficiency.</strong> Existing rulesets mix rules with low and high (and sometimes impossible) cost to diagnose. The rules that are not efficient enough to implement in the compiler will always be relegated to optional standalone tools.</li>



<li><strong>Portability.</strong> Not all rules are supported by all vendors. “Conforms to ISO/IEC 14882 (Standard C++)” is the only thing every C++ tool vendor supports portably.</li>
</ul>



<p>To address all these points, I think we need the C++ standard to specify a mode of well-agreed and low-or-zero-false-positive deterministic rules that are sufficiently low-cost to implement in-the-box at build time.</p>



<h2 id="call-to-action">Call(s) to action</h2>


<div>
<figure><a href="https://herbsutter.files.wordpress.com/2024/03/image-4.png"><img data-attachment-id="4987" data-permalink="https://herbsutter.com/2024/03/11/safety-in-context/image-4-4/" data-orig-file="https://herbsutter.files.wordpress.com/2024/03/image-4.png" data-orig-size="441,792" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-4" data-image-description="" data-image-caption="" data-medium-file="https://herbsutter.files.wordpress.com/2024/03/image-4.png?w=167" data-large-file="https://herbsutter.files.wordpress.com/2024/03/image-4.png?w=441" loading="lazy" width="441" height="792" src="https://herbsutter.files.wordpress.com/2024/03/image-4.png?w=441" alt="" srcset="https://herbsutter.files.wordpress.com/2024/03/image-4.png 441w, https://herbsutter.files.wordpress.com/2024/03/image-4.png?w=84 84w, https://herbsutter.files.wordpress.com/2024/03/image-4.png?w=167 167w" sizes="(max-width: 441px) 100vw, 441px"></a></figure></div>


<p>As an industry generally, we must make a major improvement in programming language memory safety — and we will.</p>



<p>In C++ specifically, we should first target the four key safety categories that are our perennial empirical attack points (type, bounds, initialization, and lifetime safety), and drive vulnerabilities in these four areas down to the noise for new/updated C++ code — and we can.</p>



<p>But we must also recognize that programming language safety is not a silver bullet to achieve cybersecurity and software safety. It’s one battle (not even the biggest) in a long war: Whenever we harden one part of our systems and make that more expensive to attack, attackers always switch to the next slowest animal in the herd. Many of 2023’s worst data breaches did not involve malware, but were caused by inadequately stored credentials (e.g., <a href="https://blog.aquasec.com/the-ticking-supply-chain-attack-bomb-of-exposed-kubernetes-secrets">Kubernetes Secrets</a> on public GitHub repos), misconfigured servers (e.g., <a href="https://cybernews.com/security/darkbeam-data-leak/#google_vignette">DarkBeam</a>, <a href="https://cybernews.com/security/kidsecurity-parental-control-data-leak/">Kid Security</a>), lack of testing, supply chain vulnerabilities, social engineering, and other problems that are independent of programming languages. <a href="https://www.apple.com/newsroom/pdfs/The-Continued-Threat-to-Personal-Data-Key-Factors-Behind-the-2023-Increase.pdf">Apple’s white paper</a> about 2023’s rise in cybercrime emphasizes improving the handling, not of program code, but of the data: “it’s imperative that organizations consider limiting the amount of personal data they store in readable format while making a greater effort to protect the sensitive consumer data that they do store [including by using] end-to-end [E2E] encryption.”</p>



<p>No matter what programming language we use, security hygiene is essential:</p>



<ul>
<li><strong>Do</strong> use your language’s static analyzers and sanitizers. Never pretend using static analyzers and sanitizers is unnecessary “because I’m using a safe language.” If you’re using C++, Go, or Rust, then use those languages’ supported analyzers and sanitizers. If you’re a manager, don’t allow your product to be shipped without using these tools. (Again: This doesn’t mean running all sanitizers all the time; some sanitizers conflict and so can’t be used at the same time, some are expensive and so should be used periodically, and some should be run only in testing and never in production including because their presence can create new security vulnerabilities.)</li>



<li><strong>Do</strong> keep all your tools updated. Regular patching is not just for iOS and Windows, but also for your compilers, libraries, and IDEs.</li>



<li><strong>Do</strong> secure your software supply chain. <strong>Do</strong> use package management for library dependencies. <strong>Do</strong> track a software bill of materials for your projects.</li>



<li><strong>Don’t</strong> store secrets in code. (Or, for goodness’ sake, on GitHub!)</li>



<li><strong>Do</strong> configure your servers correctly, especially public Internet-facing ones. (Turn authentication on! Change the default password!)</li>



<li><strong>Do</strong> keep non-public data encrypted, both when at rest (on disk) and when in motion (ideally E2E… and oppose proposed legislation that tries to neuter E2E encryption with ‘backdoors only good guys will use’ because there’s no such thing).</li>



<li><strong>Do</strong> keep investing long-term in keeping your threat modeling current, so that you can stay adaptive as your adversaries keep trying different attack methods.</li>
</ul>


<div>
<figure><a href="https://herbsutter.files.wordpress.com/2024/03/image-3.png"><img data-attachment-id="4950" data-permalink="https://herbsutter.com/2024/03/11/safety-in-context/image-3-4/" data-orig-file="https://herbsutter.files.wordpress.com/2024/03/image-3.png" data-orig-size="375,397" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-3" data-image-description="" data-image-caption="" data-medium-file="https://herbsutter.files.wordpress.com/2024/03/image-3.png?w=283" data-large-file="https://herbsutter.files.wordpress.com/2024/03/image-3.png?w=375" loading="lazy" width="375" height="397" src="https://herbsutter.files.wordpress.com/2024/03/image-3.png?w=375" alt="" srcset="https://herbsutter.files.wordpress.com/2024/03/image-3.png 375w, https://herbsutter.files.wordpress.com/2024/03/image-3.png?w=142 142w, https://herbsutter.files.wordpress.com/2024/03/image-3.png?w=283 283w" sizes="(max-width: 375px) 100vw, 375px"></a></figure></div>


<p>We need to improve software security and software safety across the industry, especially by improving programming language safety in C and C++, and in C++ a 98% improvement in the four most common problem areas is achievable in the medium term. But if we focus on programming language safety alone, we may find ourselves fighting yesterday’s war and missing larger past and future security dangers that affect software written in any language.</p>



<p>Sadly, there are too many bad actors. For the foreseeable future, our software and data will continue to be under attack, written in any language and stored anywhere. But we can defend our programs and systems, and we will.</p>



<p>Be well, and may we all keep working to have a safer and more secure 2024.</p>


<div>
<figure><a href="https://herbsutter.files.wordpress.com/2024/03/image-5.png"><img data-attachment-id="5050" data-permalink="https://herbsutter.com/2024/03/11/safety-in-context/image-5-4/" data-orig-file="https://herbsutter.files.wordpress.com/2024/03/image-5.png" data-orig-size="288,150" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image-5" data-image-description="" data-image-caption="" data-medium-file="https://herbsutter.files.wordpress.com/2024/03/image-5.png?w=288" data-large-file="https://herbsutter.files.wordpress.com/2024/03/image-5.png?w=288" loading="lazy" width="288" height="150" src="https://herbsutter.files.wordpress.com/2024/03/image-5.png?w=288" alt="" srcset="https://herbsutter.files.wordpress.com/2024/03/image-5.png 288w, https://herbsutter.files.wordpress.com/2024/03/image-5.png?w=150 150w" sizes="(max-width: 288px) 100vw, 288px"></a></figure></div>


<h2>Appendix: Illustrating why a 98% reduction is feasible</h2>



<p>This Appendix exists to support why I think a 98% reduction in type/bounds/initialization/lifetime CVEs in C++ code is believable. This is not a formal proposal, but an overview of concrete ways to achieve such an improvement it in new and updatable code, and ways to even get some fraction of that improvement in existing code we cannot update but can recompile. These notes are aligned with the proposals currently being pursued in the ISO C++ safety subgroup, and if they pan out as I expect in ongoing discussions and experiments, then I intend to write further details about them in a future paper.</p>



<p>There are runtime and code size overheads to some of the suggestions in all four buckets, notably checking bounds and casts. But there is no reason to think those overheads need to be inherently worse in C++ than other languages, and we can make them on by default and still provide a way to opt out to regain full performance where needed.</p>



<blockquote>
<p><strong>Note:</strong> For example, bounds checking can cause a major impact on some hot loops, when using a compiler whose optimizer does not hoist bounds checks; not only can the loops incur redundant checking, but they also may not get other optimizations such as not being vectorized. This is why making bounds-checking on by default is good, but all performance-oriented languages also need to provide a way to say “trust me” and explicitly opt out of bounds checking tactically where needed.</p>
</blockquote>



<p>This appendix refers to the “profiles” in the <a href="https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#S-profile">C++ Core Guidelines safety profiles</a>, a set of about two dozen enforceable rules for type and memory safety of which I am a coauthor. I refer to them only as examples, to show “what” already-known rules exist that we can enforce, to support that my claimed improvement is possible. They are broadly consistent with rules in other sources, such as: <a href="https://www.amazon.com/C-Programming-Language-4th/dp/0321563840"><em>The C++ Programming Language</em></a>’s advice on type safety; <a href="https://www.amazon.com/Coding-Standards-Rules-Guidelines-Practices/dp/0321113586"><em>C++ Coding Standards</em></a>’ section on type safety; the <a href="https://www.stroustrup.com/JSF-AV-rules.pdf"><em>Joint Strike Fighter Coding Standards</em></a>; <a href="https://www.perforce.com/resources/qac/high-integrity-cpp-coding-standard">High Integrity C++</a>; the <a href="https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#S-profile">C++ Core Guidelines section on safety profiles</a> (a small enforceable set of safety rules); and the <a href="https://forum.misra.org.uk/thread-1668.html">recently-released MISRA C++:2023</a>.</p>



<p>The best way for “how” to let the programmer control enabling those rules (e.g., via source code annotations, compiler switches, and/or something else) is an orthogonal UX issue that is now being actively discussed in the C++ standards committee and community.</p>



<h3>Type safety</h3>



<p><strong>Enforce the </strong><a href="https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#SS-type"><strong>Pro.Type safety profile</strong></a><strong> by default.</strong> That includes either banning or checking all unsafe casts and conversions (e.g., static_cast pointer downcasts, reinterpret_cast), including implicit unsafe type punning via C union and vararg.</p>



<p>However, these rules haven’t yet been systematically enforced in the industry. For example, in recent years I’ve painfully observed a significant set of type safety-caused security vulnerabilities whose root cause was that code used static_cast instead of dynamic_cast for pointer downcasts, and “C++” gets blamed even when the actual problem was failure to follow the well-publicized guidance to use the language’s existing safe recommended feature. It’s time for a standardized C++ mode that enforces these rules by default.</p>



<blockquote>
<p><a><strong><em>Note:</em></strong></a><em> On some platforms and for some applications, </em><em>dynamic_cast</em><em> has problematic space and time overheads that hinder its use. Many implementations bundle </em><em>dynamic_cast</em><em> indivisibly with all C++ run-time typing (RTTI) features (e.g., </em><em>typeid</em><em>), and so require storing full potentially-heavyweight RTTI data even though </em><em>dynamic_cast</em><em> needs only a small subset. Some implementations also use needlessly inefficient algorithms for </em><em>dynamic_cast</em><em> itself. So the standard must encourage (and, if possible, enforce for conformance, such as by setting algorithmic complexity requirements) that </em><em>dynamic_cast</em><em> implementations be more efficient and decoupled from other RTTI overheads, so that programmers do not have a legitimate performance reason not to use the safe feature. That decoupling could require an ABI break; if that is unacceptable, the standard must provide an alternative lightweight facility such as a </em><em>fast_dynamic_cast</em><em> that is separate from (other) RTTI and performs the dynamic cast with minimum space and time cost.</em></p>
</blockquote>



<h3>Bounds safety</h3>



<p><strong>Enforce the </strong><a href="https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#probounds-bounds-safety-profile"><strong>Pro.Bounds safety profile</strong></a><strong> by default, and guarantee bounds checking.</strong> We should additionally guarantee that:</p>



<ul>
<li>Pointer arithmetic is banned (use std::span instead); this enforces that a pointer refers to a single object. Array-to-pointer decay, if allowed, will point to only the first object in the array.</li>



<li>Only bounds-checked iterator arithmetic is allowed (also, prefer ranges instead).</li>



<li>All subscript operations are bounds-checked at the call site, by having the compiler inject an automatic subscript bounds check on every expression of the form a[b], where a is a contiguous sequence with a size/ssize function and b is an integral index. When a violation happens, the action taken can be customized using a global bounds violation handler; some programs will want to terminate (the default), others will want to log-and-continue, throw an exception, integrate with a project-specific critical fault infrastructure.</li>
</ul>



<p>Importantly, the latter explicitly avoids implementing bounds-checking intrusively for each individual container/range/view type. Implementing bounds-checking non-intrusively and automatically at the call site makes full bounds checking available for every existing standard and user-written container/range/view type out of the box: Every subscript into a vector, span, deque, or similar existing type in third-party and company-internal libraries would be usable in checked mode without any need for a library upgrade.</p>



<p>It’s important to add automatic call-site checking now before libraries continue adding more subscript bounds checking in each library, so that we avoid duplicating checks at the call site and in the callee. As a counterexample, C# took many years to get rid of duplicate caller-and-callee checking, but succeeded and .NET Core addresses this better now; we can avoid most of that duplicate-check-elimination optimization work by offering automatic call-site checking sooner.</p>



<p>Language constructs like the range-for loop are already safe by construction and need no checks.</p>



<p>In cases where bounds checking incurs a performance impact, code can still explicitly opt out of the bounds check in just those paths to retain full performance and still have full bounds checking in the rest of the application.</p>



<h3>Initialization safety</h3>



<p><strong>Enforce initialization-before-use by default.</strong> That’s pretty easy to statically guarantee, except for some cases of the unused parts of lazily constructed array/vector storage. Two simple alternatives we could enforce are (either is sufficient):</p>



<ul>
<li>Initialize-at-declaration as required by <a href="https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#SS-type">Pro.Type</a> and <a href="https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-always">ES.20</a>; and possibly zero-initialize data by default as currently proposed in <a href="https://wg21.link/p2723">P2723</a>. These two are good but with some drawbacks; both have some performance costs for cases that require ‘dummy’ writes that are never used but hard for optimizers to eliminate, and the latter has some correctness costs because it ‘fixing’ some uninitialized cases where zero is a valid value but masks others for which zero is not a valid initializer and so the behavior is still wrong, but because a zero has been jammed in it’s harder for sanitizers to detect.</li>



<li>Guaranteed initialization-before-use, similar to what Ada and C# successfully do. This is still simple to use, but can be more efficient because it avoids the need for artificial ‘dummy’ writes, and can be more flexible because it allows alternative constructors to be used for the same object on different paths. For details, see: <a href="https://youtu.be/ELeZAKCN4tY?si=HKzgS8CUBdGREDAN&amp;t=4305">example diagnostic</a>; <a href="https://youtu.be/ELeZAKCN4tY?si=MnhZGU5xoRhTGF_V&amp;t=4556">definite-first-use rules</a>.</li>
</ul>



<h3>Lifetime safety</h3>



<p><strong>Enforce the </strong><a href="https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#SS-type"><strong>Pro.Lifetime safety profile</strong></a><strong> by default, ban manual allocation by default, and guarantee null checking.</strong> The Lifetime profile is a static analysis that diagnoses many common sources of dangling and use-after-free, including for iterators and views (not just raw pointers and references), in a way that is efficient enough to run during compilation. It can be used as a basis to iterate on and further improve. And we should additionally guarantee that:</p>



<ul>
<li>All manual memory management is banned by default (new, delete, malloc, and free). Corollary: ‘Owning’ raw pointers are banned by default, since they require delete or free. Use RAII instead, such as by calling make_unique or make_shared.</li>



<li>All dereferences are null-checked. The compiler injects an automatic check on every expression of the form *p or p-&gt; where p can be compared to nullptr to null-check all dereferences at the call site (similar to bounds checks above). When a violation happens, the action taken can be customized using a global null violation handler; some programs will want to terminate (the default), others will want to log-and-continue, throw an exception, integrate with a project-specific critical fault infrastructure.</li>
</ul>



<blockquote>
<p><strong>Note:</strong> The compiler could choose to not emit this check (and not perform optimizations that benefit from the check) when targeting platforms that already trap null dereferences, such as platforms that mark low memory pages as unaddressable. Some C++ features, such as delete, have always done call-site null checking.</p>
</blockquote>



<h3>Reducing undefined behavior and semantic bugs</h3>



<p><strong>Tactically, reduce some undefined behavior (UB) and other semantic bugs (pitfalls), for cases where we can automatically diagnose or even fix well-known antipatterns.</strong> Not all UB is bad; any performance-oriented language needs some. But we know there is low-hanging fruit where the programmer’s intent is clear and any UB or pitfall is a definite bug, so we can do one of two things:</p>



<p><strong>(A – Good) Make the pitfall a diagnosed error, with zero false positives — every violation is a real bug.</strong> Two examples mentioned above are to automatically check a[b] to be in bounds and *p and p-&gt; to be non-null.</p>



<p><strong>(B – Ideal) Make the code actually do what the programmer intended, with zero false positives — i.e., fix it by just recompiling.</strong> An example, discussed at the most recent ISO C++ November 2023 meeting, is to default to an implicit <a href="https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2973r0.html">return *this;</a> when the programmer writes an assignment operator for their type C that returns a C&amp; (note: the same type), but forgets to write a return statement. Today, that is undefined behavior. Yet it’s clear that the programmer meant return *this; — nothing else can be valid. If we make return *this; be the default, all the existing code that accidentally omits the return is not just “no longer UB,” but is guaranteed to do the right and intended thing.</p>



<p><strong>An example of both (A) and (B)</strong> is to support <a href="https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0893r1.html">chained comparisons</a>, that makes the mathematically valid chains work correctly and rejects the mathematically invalid ones at compile time. Real-world code does write such chains by accident (see: <a href="https://stackoverflow.com/q/8889522/2069064">[a]</a>&nbsp;<a href="https://stackoverflow.com/q/5939077/2069064">[b]</a>&nbsp;<a href="https://stackoverflow.com/q/14433884/2069064">[c]</a>&nbsp;<a href="https://stackoverflow.com/q/46806239/2069064">[d]</a>&nbsp;<a href="https://stackoverflow.com/q/25965157/2069064">[e]</a>&nbsp;<a href="https://stackoverflow.com/q/38643022/2069064">[f]</a>&nbsp;<a href="https://stackoverflow.com/q/45385837/2069064">[g]</a>&nbsp;<a href="https://stackoverflow.com/q/20989496/2069064">[h]</a>&nbsp;<a href="https://stackoverflow.com/q/35564553/2069064">[i]</a>&nbsp;<a href="https://stackoverflow.com/q/42335710/2069064">[j]</a>&nbsp;<a href="https://stackoverflow.com/q/37470518/2069064">[k]</a>).</p>



<ul>
<li>For (A): We can reject all mathematically invalid chains like a != b &gt; c at compile time. This automatically diagnoses bugs in existing code that tries to do such nonsense chains, with perfect accuracy.</li>



<li>For (B): We can fix all existing code that writes would-be-correct chains like 0 &lt;= index &lt; max. Today those silently compile but are completely wrong, and we can make them mean the right thing. This automatically fixes those bugs, just by recompiling the existing code.</li>
</ul>



<p>These examples are not exhaustive. We should review the list of UB in the standard for a more thorough list of cases we can automatically fix (ideally) or diagnose.</p>



<h3>Summarizing: Better defaults for C++</h3>



<p>C++ could enable turning safety rules on by default that would make code:</p>



<ul>
<li>fully type-safe,</li>



<li>fully bounds-safe,</li>



<li>fully initialization-safe,</li>
</ul>



<p>and for lifetime safety, which is the hardest of the four, and where I would expect the remaining vulnerabilities in these categories would mostly lie:</p>



<ul>
<li>fully null-safe,</li>



<li>fully free of owning raw pointers,</li>



<li>with lifetime-safety static analysis that diagnoses most common pointer/iterator/view lifetime errors;</li>
</ul>



<p>and, finally:</p>



<ul>
<li>with less undefined behavior including by automatically fixing existing bugs just by recompiling code with safety enabled by default.</li>
</ul>



<p><strong>All of this is efficiently implementable and has been implemented.</strong> Most of the Lifetime rules have been implemented in Visual Studio and CLion, and I’m prototyping a proof-of-concept mode of C++ that includes all of the other above language safeties on-by-default in my <a href="https://github.com/hsutter/cppfront/">cppfront compiler</a>, as well as other safety improvements including an implementation of the current proposal for ISO C++ contracts. I haven’t yet used the prototype at scale. However, I can report that the first major change request I received from early users was to change the bounds checking and null checking from opt-in (off by default) to opt-out (on by default).</p>



<blockquote>
<p><strong><em>Note:</em></strong><em> Please don’t be distracted by that cppfront uses an experimental alternate syntax for C++. That’s because I’m additionally trying to see if we can reach a second orthogonal goal: to make the C++ language itself simpler, and eliminate the need to teach ~90% of the C++ guidance literature related to language complexity and quirks. This essay’s language safety improvements are orthogonal to that, however, and can be applied equally to today’s C++ syntax.</em></p>
</blockquote>



<h3>Solutions need to distinguish between (A) “solution for new-or-updatable code” and (B) “solution for existing code.”</h3>



<p><strong>(A) A “solution for new-or-updatable code” means that to help existing code we have to change/rewrite our code.</strong> This includes not only “(re)write in C#/Rust/Go/Python/…,” but also “annotate your code with <a href="https://learn.microsoft.com/en-us/cpp/code-quality/understanding-sal?view=msvc-170">SAL</a>” or “change your code to use std::span.”</p>



<p>One of the costs of (A) is that anytime we write/change code to fix bugs, we also introduce new bugs; change is never free. We need to recognize that changing our code to use std::span often means non-trivially rewriting parts of it which can also create other bugs. Even annotating our code means writing annotations that can have bugs (this is a common experience in the annotation languages I’ve seen used at scale, such as SAL). All these are significant adoption barriers.</p>



<p>Actually switching to another language means losing a mature ecosystem. C++ is the well-trod path: It’s taught, people know it, the tools exist, interop works, and current regulations have an industry around C++ (such as for functional safety). It takes another decade at least for another language to become the well-trod path, whereas a better C++, and its benefits to the industry broadly, can be here much sooner.</p>



<p><strong>(B) A “solution for existing code” emphasizes the adoptability benefits of not having to make manual code changes.</strong> It includes anything that makes existing code more secure with “just a recompile” (i.e., no binary/ABI/link issues; e.g., ASAN, compiler switches to enable stack checks, static analysis that produces only true positives, or a reliable automated code modernizer).</p>



<p>We will still need (B) no matter how successful new languages or new C++ types/annotations are. And (B) has the strong benefit that it is easier to adopt. Getting to a 98% reduction in CVEs will require both (A) and (B), but if we can deliver even a 30% reduction using just (B) that will be a major benefit for adoption and effective impact in large existing code bases that are hard to change.</p>



<p>Consider how the ideas earlier in this appendix map onto (A) and (B):</p>



<figure><table><tbody><tr><td>In C++, by default enforce …</td><td><strong>(A) Solution for new/updated code (can require code changes — no link/binary changes)</strong></td><td><strong>(B) Solution for existing code (requires recompile only — no manual code changes, no link/binary changes)</strong></td></tr><tr><td><strong>Type safety</strong></td><td>Ban all inherently unsafe casts and conversions</td><td>Make unsafe casts and conversions with a safe alternative do the safe thing</td></tr><tr><td><strong>Bounds safety</strong></td><td>Ban pointer arithmetic Ban unchecked iterator arithmetic</td><td>Check in-bounds for all allowed iterator arithmetic Check in-bounds for all subscript operations</td></tr><tr><td><strong>Initialization safety</strong></td><td>Require all variables to be initialized (either at declaration, or before first use)</td><td>—</td></tr><tr><td><strong>Lifetime safety</strong></td><td>Statically diagnose many common pointer/iterator lifetime error cases</td><td>Check not-null for all pointer dereferences</td></tr><tr><td><strong>Less undefined behavior</strong></td><td>Statically diagnose known UB/bug cases, to error on actual bugs in existing code with just a recompile and zero false positives:<br>Ban mathematically invalid comparison chains<br>(add additional cases from UB Annex review)</td><td>Automatically fix known UB/bug cases, to make current bugs in existing code be actually correct with just a recompile and zero false positives: <br>Define mathematically valid comparison chains<br>Default return *this; for C assignment operators that return C&amp;<br>(add additional cases from UB Annex review)</td></tr></tbody></table></figure>



<p>By prioritizing adoptability, we can get at least some of the safety benefits just by recompiling existing code, and make the total improvement easier to deploy even when code updates are required. I think that makes it a valuable strategy to pursue.</p>



<p>Finally, please see again the main post’s conclusion: <strong><a href="#call-to-action">Call(s) to action</a></strong>.</p>
	</div></div>]]></description>
        </item>
    </channel>
</rss>