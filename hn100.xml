<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 13 Sep 2025 02:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Proton Mail suspended journalist accounts at request of cybersecurity agency (169 pts)]]></title>
            <link>https://theintercept.com/2025/09/12/proton-mail-journalist-accounts-suspended/</link>
            <guid>45226903</guid>
            <pubDate>Fri, 12 Sep 2025 21:20:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://theintercept.com/2025/09/12/proton-mail-journalist-accounts-suspended/">https://theintercept.com/2025/09/12/proton-mail-journalist-accounts-suspended/</a>, See on <a href="https://news.ycombinator.com/item?id=45226903">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
    <p><span>The company behind</span> the Proton Mail email service, Proton, <a href="https://proton.me/#:~:text=We%20are%20a%20neutral%20and%20safe%20haven%20for%20your%20personal%20data%2C%20committed%20to%20defending%20your%20freedom">describes itself</a> as a “neutral and safe haven for your personal data, committed to defending your freedom.”</p>
<p>But last month, Proton disabled email accounts belonging to journalists reporting on security breaches of various South Korean government computer systems following a complaint by an unspecified cybersecurity agency. After a public outcry, and multiple weeks, the journalists’ accounts were eventually reinstated — but the reporters and editors involved still want answers on how and why Proton decided to shut down the accounts in the first place.</p>
<p>Martin Shelton, deputy director of digital security at the Freedom of the Press Foundation, highlighted that numerous newsrooms use Proton’s services as alternatives to something like Gmail “specifically to avoid situations like this,” pointing out that “While it’s good to see that Proton is reconsidering account suspensions, journalists are among the users who need these and similar tools most.” Newsrooms like The Intercept, the Boston Globe, and the Tampa Bay Times all rely on Proton Mail for<a href="https://theintercept.com/source/"> emailed tip submissions</a>.</p>
<p>Shelton noted that perhaps Proton should “prioritize responding to journalists about account suspensions privately, rather than when they go viral.”</p>
<p>On Reddit, Proton’s official account <a href="https://www.reddit.com/r/ProtonMail/comments/1nd1nrc/is_that_true/ndg68pz/">stated</a> that “Proton did not knowingly block journalists’ email accounts” and that the “situation has unfortunately been blown out of proportion.” Proton did not respond to The Intercept’s request for comment.</p>
<!-- BLOCK(cta)[0](%7B%22componentName%22%3A%22CTA%22%2C%22entityType%22%3A%22SHORTCODE%22%2C%22optional%22%3Atrue%7D)(%7B%7D) -->


<!-- END-BLOCK(cta)[0] -->
<p><span>The two journalists</span> whose accounts were disabled were working on an <a href="https://phrack.org/issues/72/7_md">article</a> published in the August issue of the long-running hacker zine Phrack. The story described how a sophisticated hacking operation — what’s known in cybersecurity parlance as an APT, or advanced persistent threat — had wormed its way into a number of South Korean computer networks, including those of the Ministry of Foreign Affairs and the military Defense Counterintelligence Command, or DCC.</p>
<p>The journalists, who published their story under the names Saber and cyb0rg, describe the hack as being consistent with the work of Kimsuky, a notorious North Korean state-backed APT <a href="https://home.treasury.gov/news/press-releases/jy1938">sanctioned</a> by the U.S. Treasury Department in 2023.</p>
<p>As they pieced the story together, emails viewed by The Intercept show that the authors followed cybersecurity best practices and conducted what’s known as responsible disclosure: notifying affected parties that a vulnerability has been discovered in their systems prior to publicizing the incident.</p>
<p>Saber and cyb0rg created a dedicated Proton Mail account to coordinate the responsible disclosures, then proceeded to notify the impacted parties, including the Ministry of Foreign Affairs and the DCC, and also notified South Korean cybersecurity organizations like the Korea Internet and Security Agency, and <a href="https://www.krcert.or.kr/">KrCERT/CC</a>, the state-sponsored Computer Emergency Response Team. According to emails viewed by The Intercept, KrCERT wrote back to the authors, thanking them for their disclosure.</p>
<p>A note on cybersecurity jargon: CERTs are agencies consisting of cybersecurity experts specializing in dealing with and responding to security incidents. CERTs exist in over 70 countries — with some countries having multiple CERTs each specializing in a particular field such as the financial sector — and may be government-sponsored or private organizations. They adhere to a set of formal technical <a href="https://datatracker.ietf.org/doc/html/rfc2350">standards</a>, such as being expected to react to reported cybersecurity threats and security incidents. A high-profile example of a CERT agency in the U.S. is the Cybersecurity and Infrastructure Agency, which has recently been <a href="https://www.nextgov.com/cybersecurity/2025/06/cisa-projected-lose-third-its-workforce-under-trumps-2026-budget/405726/">gutted</a> by the Trump administration.</p>
<!-- BLOCK(newsletter)[0](%7B%22componentName%22%3A%22NEWSLETTER%22%2C%22entityType%22%3A%22SHORTCODE%22%2C%22optional%22%3Atrue%7D)(%7B%7D) -->

<!-- END-BLOCK(newsletter)[0] -->
<p>A week after the print issue of Phrack came out, and a few days before the digital version was released, Saber and cyb0rg found that the Proton account they had set up for the responsible disclosure notifications had been suspended. A day later, Saber discovered that his personal Proton Mail account had also been suspended. Phrack posted a timeline of the account suspensions at the top of the published article, and later highlighted the timeline in a viral social media <a href="https://x.com/phrack/status/1965385266904138241">post</a>. Both accounts were suspended owing to an unspecified “potential policy violation,” according to screenshots of account login attempts reviewed by The Intercept.</p>
<p>The suspension notice instructed the authors to fill out <a href="https://proton.me/support/appeal-abuse">Proton’s abuse appeals form</a> if they believed the suspension was in error. Saber did so, and received a reply from a member of Proton Mail’s Abuse Team who went by the name Dante.</p>
<p>In an email viewed by The Intercept, Dante told Saber that their account “has been disabled as a result of a direct connection to an account that was taken down due to violations of our terms and conditions while being used in a malicious manner.” Dante also provided a link to <a href="https://proton.me/legal/terms">Proton’s terms of service</a>, going on to state, “We have clearly indicated that any account used for unauthorized activities, will be sanctioned accordingly.” The response concluded by stating, “We consider that allowing access to your account will cause further damage to our service, therefore we will keep the account suspended.”</p>
<p>On August 22, a Phrack editors reached out to Proton, writing that no hacked data was passed through the suspended email accounts, and asked if the account suspension incident could be deescalated. After receiving no response from Proton, the editor sent a follow-up email on September 6. Proton once again did not reply to the email.</p>
<p>On September 9, the official Phrack X account made a <a href="https://x.com/phrack/status/1965385266904138241">post</a> asking Proton’s official account asking why Proton was “cancelling journalists and ghosting us,” adding: “need help calibrating your moral compass?” The post quickly went viral, garnering over 150,000 views.</p>
<p>Proton’s official account replied the following day, <a href="https://x.com/ProtonPrivacy/status/1965701661705322849">stating</a> that Proton had been “alerted by a CERT that certain accounts were being misused by hackers in violation of Proton’s Terms of Service. This led to a cluster of accounts being disabled. Our team is now reviewing these cases individually to determine if any can be restored.” Proton then <a href="https://x.com/ProtonPrivacy/status/1965828424963895605">stated</a> that they “stand with journalists” but “cannot see the content of accounts and therefore cannot always know when anti-abuse measures may inadvertently affect legitimate activism.”</p>
<p>Proton did not publicly specify which CERT had alerted them, and didn’t answer The Intercept’s request for the name of the specific CERT which had sent the alert. KrCERT also did not reply to The Intercept’s question about whether they were the CERT that had sent the alert to Proton.</p>

<p>Later in the day, Proton’s founder and CEO Andy Yen <a href="https://x.com/andyyen/status/1965767030688317832">posted</a> on X that the two accounts had been reinstated. Neither Yen nor Proton explained why the accounts had been reinstated, whether they had been found to not violate the terms of service after all, why had they been suspended in the first place, or why a member of the Proton Abuse Team reiterated that the accounts had violated the terms of service during Saber’s appeals process.</p>
<p>Phrack noted that the account suspensions created a “real impact to the author. The author was unable to answer media requests about the article.” The co-authors, Phrack pointed out, were also in the midst of the responsible disclosure process and working together with the various affected South Korean organizations to help fix their systems. “All this was denied and ruined by Proton,” Phrack stated.&nbsp;</p>
<p>Phrack editors said that the incident leaves them “concerned what this means to other whistleblowers or journalists. The community needs assurance that Proton does not disable accounts unless Proton has a court order or the crime (or ToS violation) is apparent.”</p>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I used standard Emacs extension-points to extend org-mode (128 pts)]]></title>
            <link>https://edoput.it/2025/04/16/emacs-paradigm-shift.html</link>
            <guid>45226639</guid>
            <pubDate>Fri, 12 Sep 2025 20:53:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://edoput.it/2025/04/16/emacs-paradigm-shift.html">https://edoput.it/2025/04/16/emacs-paradigm-shift.html</a>, See on <a href="https://news.ycombinator.com/item?id=45226639">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <article itemscope="" itemtype="http://schema.org/BlogPosting">

  

  <div itemprop="articleBody">
    <p>Recently I read <a href="https://blog.tjll.net/a-beginners-guide-to-extending-emacs/">this beginners guide to extend Emacs</a>.
The guide is perfect for starting out with elisp and it shows a lot of care in teaching how to interact with Emacs.</p>

<p>To me, the most important bit though is this one, from the section aptly named <strong>Emacs Wants You to Extend It</strong>.</p>

<blockquote>
  <p>I haven’t written plugins for other editors extensively, but I can tell you this: emacs doesn’t just make deep customization available, but it actively encourages you to make an absolute customization messes masterpieces. Core editor functions aren’t just documented, but often include tidbits about “you probably want to see this other variable” or “here’s how you should use this”.</p>

  <p>Not only that, but emacs happily hands you functions shaped like nuclear warheads like advice-add (that let you override any function) that can absolutely obliterate your editor if you hold it the wrong way. Of course, this also grants you unlimited power.</p>

  <p>Remember that emacs is designed to be torn apart and rearranged.</p>
</blockquote>

<p>This is the core bit of the argument. Emacs, as a system, wants you to
extend it and it gives you all the means to do so. This is in contrast
with systems that can be extended through scripting and instead don’t give
you all the means to do so!</p>

<p>I think the tutorial is a fantastic example of <em>doing things
right</em>. There is a well-thought example, a constructive approach where
the solution grows to a full package.</p>

<p>This is problematic. You may get the impression that extending Emacs
is only possible if you do things right and that is definitely not true.</p>

<p>To make my point I want to walk you through an example. I will show
you how I used standard Emacs extension-points to extend org-mode to sort my
reading lists automatically.</p>

<h2 id="what-do-i-want">What do I want?</h2>

<p>The behavior I want is that when I save an org file the entries are
ordered automatically. I keep a timeline of the papers I am reading
and it is annoying to keep them kind of ordered.</p>

<p>This is the content of an example buffer.</p>

<figure><pre><code data-lang="org">#+TITLE: My tematic reading list

* Paper which is old but not too old
:PROPERTY:
:year: 2002
:END:

* Definitely older paper but unfortunately it's later in the list
:PROPERTY:
:year: 1998
:END:</code></pre></figure>

<p>When I add a paper to my reading list I run <code>org-sort-entries</code> and
interactively select to order the entries by the value in the property
<code>year</code>. Initally this was nice to have but now it’s just annoying that
I have to keep doing it. Let’s extend org-mode so that this is done automatically.</p>

<h2 id="a-simple-solution">A simple solution</h2>

<p>The first step is to automate the interactive part. Lucky for me this is easy
as <code>org-sort-entries</code> is both a function and a command. I can call it in a
script just as I can run it as a command.</p>

<figure><pre><code data-lang="elisp"><span>(</span><span>defvar</span> <span>org-sort-option</span> <span>"year"</span><span>)</span>

<span>(</span><span>defun</span> <span>org-sort-run</span> <span>()</span>
  <span>(</span><span>when</span> <span>(</span><span>and</span> <span>(</span><span>derived-mode-p</span> <span>'org-mode</span><span>)</span> <span>org-sort-option</span><span>)</span>
    <span>(</span><span>let</span> <span>((</span><span>case-sensitive</span> <span>nil</span><span>)</span>
	  <span>(</span><span>sorting-type</span> <span>?r</span><span>)</span>
	  <span>(</span><span>getkey-func</span> <span>nil</span><span>)</span>
	  <span>(</span><span>compare-func</span> <span>nil</span><span>)</span>
	  <span>(</span><span>property</span> <span>org-sort-option</span><span>)</span>
	  <span>(</span><span>interactive?</span> <span>nil</span><span>))</span>
      <span>(</span><span>org-sort-entries</span> <span>case-sensitive</span> <span>sorting-type</span> <span>getkey-func</span> <span>compare-func</span> <span>property</span> <span>interactive?</span><span>))))</span></code></pre></figure>

<p>This solves one part of the problem. Let’s solve the other one, automatically calling
<code>org-sort-run</code> whenever an org-mode buffer is saved.</p>

<p>Emacs already has support for this use-case through the use of hooks. We can run
<code>org-sort-run</code> all the times we want to save a buffer.</p>

<figure><pre><code data-lang="elisp"><span>(</span><span>add-hook</span> <span>'before-save-hook</span> <span>#'</span><span>org-sort-run</span><span>)</span></code></pre></figure>

<p>These two together solve the problem but the solution presented is “just more code”.
We tapped into the <em>hook</em> extension point but this would be possible in any
<em>scriptable system</em> that exposes well-defined extension points such as hooks and commands.</p>

<h2 id="leveraging-emacs-extensibility-to-extend-org-mode">Leveraging Emacs’ extensibility to extend org-mode</h2>

<p>I want to show that even if something is not thought with
extensibility in mind Emacs allow us to extend it. Most importantly, while we
want to extend org-mode’s behavior we would like this not to be an
extension to org-mode’s code.</p>

<p>Here’s the updated problem statement. Have the buffer be automatically
sorted and have the sorting criteria be in the buffer itself. We will
specify the sorting as a <em>in-buffer setting</em> and use Emacs to
support this never thought before org-mode behavior.</p>

<p>Our example buffer changes to the following.</p>

<figure><pre><code data-lang="diff"> #+TITLE: My tematic reading list
<span>+#+SORT: year
</span> 
 * Paper which is old but not too old
 :PROPERTY:
 :year: 2002
 :END:
 
 * Definitely older paper but unfortunately it's later in the list
 :PROPERTY:
 :year: 1998
 :END:</code></pre></figure>



<p>The hard part of this is to find how org-mode reads <em><a href="https://orgmode.org/manual/In_002dbuffer-Settings.html">in-buffer
settings</a></em>
from the header. A <kbd>M-x find-library</kbd> later we are in org’s
sources.</p>

<p>Searching for <code>+STARTUP</code> (<kbd>Ctrl+s +STARTUP</kbd>), one of the
supported settings, leads us to <code>org-startup-folded</code> and that in turn
(<kbd>Ctrl+s org-startup-folded</kbd>) leads us to <code>org-startup-options</code>.</p>

<p><code>org-startup-options</code> is the used by (again <kbd>Ctrl+s org-startup-option</kbd>)
<code>org-set-regexps-and-options</code>.</p>



<p>While the documentation for this function is not very convincing, its code
does make sense for what we are after. I copied it here for reference.</p>

<figure><pre><code data-lang="elisp">  <span>(</span><span>when</span> <span>(</span><span>derived-mode-p</span> <span>'org-mode</span><span>)</span>
    <span>(</span><span>let</span> <span>((</span><span>alist</span> <span>(</span><span>org-collect-keyword</span>
		  <span>(</span><span>append</span> <span>'</span><span>(</span><span>"FILETAGS"</span> <span>"TAGS"</span><span>)</span>
			  <span>(</span><span>and</span> <span>(</span><span>not</span> <span>tags-only</span><span>)</span>
			       <span>'</span><span>(</span><span>"ARCHIVE"</span> <span>"CATEGORY"</span> <span>"COLUMNS"</span> <span>"CONSTANTS"</span>
				 <span>"LINK"</span> <span>"OPTIONS"</span> <span>"PRIORITIES"</span> <span>"PROPERTY"</span>
				 <span>"SEQ_TODO"</span> <span>"STARTUP"</span> <span>"TODO"</span> <span>"TYP_TODO"</span><span>)))</span>
		  <span>'</span><span>(</span><span>"ARCHIVE"</span> <span>"CATEGORY"</span> <span>"COLUMNS"</span> <span>"PRIORITIES"</span><span>))))</span>
      <span>;; Startup options.  Get this early since it does change</span>
      <span>;; behavior for other options (e.g., tags).</span>
      <span>(</span><span>let</span> <span>((</span><span>startup</span> <span>(</span><span>cl-mapcan</span> <span>(</span><span>lambda</span> <span>(</span><span>value</span><span>)</span> <span>(</span><span>split-string</span> <span>value</span><span>))</span>
				<span>(</span><span>cdr</span> <span>(</span><span>assoc</span> <span>"STARTUP"</span> <span>alist</span><span>)))))</span>
	     <span>...</span><span>)</span></code></pre></figure>

<p>Unfortunately this function calls <code>org-collect-keyword</code> with a list that we cannot
touch. There is no custom variable to set to pass our own keyword.</p>

<p>If this was a “normal programming environment” we would make our changes
to this function body and forever maintain a fork of org-mode. As this
is elisp instead we have choices.</p>

<p>I think the best choice is to use <code>advice-add</code> and have Emacs call our
advice code every time <code>org-set-regexps-and-options</code> is called. We will copy
what we need from the function body but that will be all.</p>

<p>This is what I ended up with.</p>

<figure><pre><code data-lang="elisp"><span>(</span><span>defvar</span> <span>org-sort-option</span> <span>nil</span><span>)</span>

<span>(</span><span>defun</span> <span>org-sort-set-option</span> <span>(</span><span>&amp;rest</span> <span>r</span><span>)</span>
  <span>"Read the +SORT: spec value into variable `org-sort-option'."</span>
  <span>(</span><span>when</span> <span>(</span><span>derived-mode-p</span> <span>'org-mode</span><span>)</span>
    <span>(</span><span>let</span> <span>((</span><span>alist</span> <span>(</span><span>org-collect-keywords</span> <span>'</span><span>(</span><span>"SORT"</span><span>))))</span>
      <span>(</span><span>let</span> <span>((</span><span>sort</span> <span>(</span><span>cdr</span> <span>(</span><span>assoc</span> <span>"SORT"</span> <span>alist</span><span>))))</span>
	<span>(</span><span>let</span> <span>((</span><span>sort-spec</span> <span>(</span><span>car</span> <span>(</span><span>read-from-string</span> <span>(</span><span>car</span> <span>sort</span><span>)))))</span>
	  <span>(</span><span>setq-local</span> <span>org-sort-option</span> <span>sort-spec</span><span>))))))</span>

<span>(</span><span>advice-add</span> <span>'org-set-regexps-and-options</span> <span>:after</span> <span>#'</span><span>org-sort-set-option</span><span>)</span>

<span>(</span><span>defun</span> <span>org-sort-run</span> <span>()</span>
  <span>(</span><span>when</span> <span>(</span><span>and</span> <span>(</span><span>derived-mode-p</span> <span>'org-mode</span><span>)</span> <span>org-sort-option</span><span>)</span>
    <span>(</span><span>let</span> <span>((</span><span>case-sensitive</span> <span>nil</span><span>)</span>
	  <span>(</span><span>sorting-type</span> <span>?r</span><span>)</span>
	  <span>(</span><span>getkey-func</span> <span>nil</span><span>)</span>
	  <span>(</span><span>compare-func</span> <span>nil</span><span>)</span>
	  <span>(</span><span>property</span> <span>org-sort-option</span><span>)</span>
	  <span>(</span><span>interactive?</span> <span>nil</span><span>))</span>
      <span>(</span><span>org-sort-entries</span> <span>case-sensitive</span> <span>sorting-type</span> <span>getkey-func</span> <span>compare-func</span> <span>property</span> <span>interactive?</span><span>))))</span>

<span>(</span><span>add-hook</span> <span>'before-save-hook</span> <span>#'</span><span>org-sort-run</span><span>)</span></code></pre></figure>

<p>We keep a buffer-local variable <code>org-sort-option</code> around to store the
property name read from <code>#+SORT: property-name</code>. This variable is initially
<code>nil</code> and will be set from the property name in <code>#+SORT: property-name</code>. To do so
we have a function <code>org-sort-set-option</code>.</p>

<p>But when to call <code>org-sort-set-option</code>? The easy way out is to have Emacs call it whenever
<code>org-set-regexps-and-options</code> is called on a file visit. To achieve this we
tap into <code>advice-add</code> and ask Emacs to run <code>org-sort-set-option</code> after
<code>org-sort-regexps-and-options</code>.</p>

<p>We have now succesfully interposed ourselves in the control flow of the org-mode library.</p>

<p>Org-mode did not provide any interposition point for us, there
is no thought ahead etension-point or configuration variable we can
use to achieve our goal an yet here we are with a sorted buffer.</p>

<p>We succeeded in our effort because <em>Emacs wants you to extend it</em>
and it gives you all the means to do so.</p>

<h2 id="conclusions">Conclusions</h2>

<p>I have made a horrible hack and it works. I have learnt nothing about
how org-mode works or Emacs’ file-visiting extension-points.</p>

  </div>

</article>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[UTF-8 is a brilliant design (404 pts)]]></title>
            <link>https://iamvishnu.com/posts/utf8-is-brilliant-design</link>
            <guid>45225098</guid>
            <pubDate>Fri, 12 Sep 2025 18:30:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://iamvishnu.com/posts/utf8-is-brilliant-design">https://iamvishnu.com/posts/utf8-is-brilliant-design</a>, See on <a href="https://news.ycombinator.com/item?id=45225098">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article>
    <h2>UTF-8 is a Brilliant Design</h2>
    <time datetime="2025-09-12">2025-09-12</time>
    <meta name="format-detection" content="telephone=no">


<p>The first time I learned about UTF-8 encoding, I was fascinated by how well-thought and brilliantly it was designed to represent millions of characters from different languages and scripts, and <strong>still be backward compatible with ASCII.</strong></p>
<p>Basically UTF-8 uses 32 bits and the old ASCII uses 7 bits, but UTF-8 is designed in such a way that:</p>
<ul>
<li>Every ASCII encoded file is a valid UTF-8 file.</li>
<li>Every UTF-8 encoded file that has only ASCII characters is a valid ASCII file.</li>
</ul>
<p>Designing a system that scales to millions of characters and still be compatible with the old systems that use just 128 characters is a brilliant design.</p>
<blockquote>
<p>Note: If you are already aware of the UTF-8 encoding, you can explore the <a href="https://utf8-playground.netlify.app/" target="_blank" rel="noopener">UTF-8 Playground</a> utility that I built to visualize UTF-8 encoding.</p>
</blockquote>
<h2>How Does UTF-8 Do It?</h2>
<p>UTF-8 is a variable-width character encoding designed to represent every character in the Unicode character set, encompassing characters from most of the world's writing systems.</p>
<p>It encodes characters using <strong>one to four bytes</strong>. </p>
<p>The first 128 characters (<code>U+0000</code> to <code>U+007F</code>) are encoded with a <strong>single byte,</strong> ensuring backward compatibility with ASCII, and this is the reason why a file with only ASCII characters is a valid UTF-8 file.</p>
<p>Other characters require two, three, or four bytes. The <strong>leading bits of the first byte</strong> determine the total number of bytes that represents the current character. These bits follow one of four specific patterns, which indicate how many continuation bytes follow.</p>
<table>
<thead>
<tr>
<th>1st byte Pattern</th>
<th># of bytes used</th>
<th>Full byte sequence pattern</th>
</tr>
</thead>
<tbody><tr>
<td><span>0xxxxxxx</span></td>
<td>1</td>
<td><span>0xxxxxxx</span><br>(This is basically a regular ASCII encoded byte)</td>
</tr>
<tr>
<td><span>110xxxxx</span></td>
<td>2</td>
<td><span>110xxxxx</span> <span>10xxxxxx</span></td>
</tr>
<tr>
<td><span>1110xxxx</span></td>
<td>3</td>
<td><span>1110xxxx</span> <span>10xxxxxx</span> <span>10xxxxxx</span></td>
</tr>
<tr>
<td><span>11110xxx</span></td>
<td>4</td>
<td><span>11110xxx</span> <span>10xxxxxx</span> <span>10xxxxxx</span> <span>10xxxxxx</span></td>
</tr>
</tbody></table>
<p>Notice that the second, third, and fourth bytes in a multi-byte sequence <strong>always start with 10</strong>. This indicates that these bytes are continuation bytes, following the main byte.</p>
<p>The remaining bits in the main byte, along with the bits in the continuation bytes, are combined to form the character's code point. A code point serves as a unique identifier for a character in the Unicode character set. A code point is typically represented in hexadecimal format, prefixed with "U+". For example, the code point for the character "A" is <code>U+0041</code>.</p>
<p>So here is how a software determines the character from the UTF-8 encoded bytes:</p>
<ol>
<li>Read a byte. If it starts with <code>0</code>, it's a single-byte character (ASCII). Show the character represented by the remaiing 7 bits on the screen. Continue with the next byte.</li>
<li>If the byte didn't start with a <code>0</code>, then:<ul>
<li>If it starts with <code>110</code>, it's a two-byte character, so read the next byte as well.</li>
<li>If it starts with <code>1110</code>, it's a three-byte character, so read the next two bytes.</li>
<li>If it starts with <code>11110</code>, it's a four-byte character, so read the next three bytes.</li>
</ul>
</li>
<li>Once the number of bytes are determined, read all the remaining bits except the leading bits, and find the binary value (aka. code point) of the character.</li>
<li>Look up the code point in the Unicode character set to find the corresponding character and display it on the screen.</li>
<li>Read the next byte and repeat the process.</li>
</ol>
<h3>Example: Hindi Letter "अ" (<a href="https://utf8-playground.netlify.app/0905" target="_blank" rel="noopener">open in UTF-8 Playground</a>)</h3>
<p>The Hindi letter "अ" (officially "Devanagari Letter A") is represented in UTF-8 as:</p>
<p><span>11100000</span> <span>10100100</span> <span>10000101</span>
Here:</p>
<p>The first byte <span>11100000</span> indicates that the character is encoded using 3 bytes.</p>
<p>The remaining bits of the three bytes:
<span>xxxx0000</span> <span>xx100100</span> <span>xx000101</span> 
are combined to form the binary sequence <span>00001001</span> <span>00000101</span> (<code>0x0905</code> in hexadecimal). This is the code point of the character, represented as <code>U+0905</code>.</p>
<p>The code point <code>U+0905</code> (<a href="https://www.unicode.org/charts/PDF/U0900.pdf" target="_blank" rel="noopener">see official chart</a>) represents the Hindi letter "अ" in the Unicode character set.</p>
<h2>Example Text Files</h2>
<p>Now that we understood the design of UTF-8, let's look at a file that contains the following text:</p>
<h3>1. Text file contains: <code>Hey👋 Buddy</code></h3>
<p>The text <code>Hey👋 Buddy</code> has both English characters and an emoji character on it. The <a href="https://iamvishnu.com/utf8-samples/text_with_emoji_character.txt">text file</a> with this text saved on the disk will have the following <strong>13 bytes</strong> in it:</p>
<p><span>01001000</span> <span>01100101</span> <span>01111001</span> <span>11110000</span> <span>10011111</span> <span>10010001</span> <span>10001011</span> <span>00100000</span> <span>01000010</span> <span>01110101</span> <span>01100100</span> <span>01100100</span> <span>01111001</span></p>
<p>Let's evaluate this file byte-by-byte following the UTF-8 decoding rules:</p>
<table>
<thead>
<tr>
<th>Byte</th>
<th>Explanation</th>
</tr>
</thead>
<tbody><tr>
<td><span>01001000</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1001000</code> represent the letter 'H'. (<a href="https://utf8-playground.netlify.app/0048" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01100101</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1100101</code> represent the letter 'e'. (<a href="https://utf8-playground.netlify.app/0065" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01111001</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1111001</code> represent the letter 'y'. (<a href="https://utf8-playground.netlify.app/0079" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>11110000</span></td>
<td>Starts with <code>11110</code>, indicating it's the <strong>first byte of a four-byte character.</strong></td>
</tr>
<tr>
<td><span>10011111</span></td>
<td>Starts with <code>10</code>, indicating it's a continuation byte.</td>
</tr>
<tr>
<td><span>10010001</span></td>
<td>Starts with <code>10</code>, indicating it's a continuation byte.</td>
</tr>
<tr>
<td><span>10001011</span></td>
<td>Starts with <code>10</code>, indicating it's a continuation byte.<p>The bits from these four bytes (excluding the leading bits) combine to form the binary sequence <span>00001 11110100 01001011</span>, which is <code>1F44B</code> in hexadecimal, corresponds to the code point <code>U+1F44B</code>. This code point represents the waving hand emoji "👋" in the Unicode character set </p><a href="https://utf8-playground.netlify.app/1F44B" target="_blank" rel="noopener">(open in playground)</a>.</td>
</tr>
<tr>
<td><span>00100000</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>0100000</code> represent a whitespace character. (<a href="https://utf8-playground.netlify.app/0020" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01000010</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1000010</code> represent the letter 'B'. (<a href="https://utf8-playground.netlify.app/0042" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01110101</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1110101</code> represent the letter 'u'. (<a href="https://utf8-playground.netlify.app/0075" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01100100</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1100100</code> represent the letter 'd'. (<a href="https://utf8-playground.netlify.app/0064" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01100100</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1100100</code> represent the letter 'd'. (<a href="https://utf8-playground.netlify.app/0064" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01111001</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1111001</code> represent the letter 'y'. (<a href="https://utf8-playground.netlify.app/0079" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
</tbody></table>
<p>Now this is a valid UTF-8 file, but it doesn't have to be "backward compatible" with ASCII because it contains a non-ASCII character (the emoji). Next let's create a file that contains only ASCII characters.</p>
<h3>2. Text file contains: <code>Hey Buddy</code></h3>
<p>The <a href="https://iamvishnu.com/utf8-samples/text_with_ASCII_only.txt">text file</a> doesn't have any non-ASCII characters. The file saved on the disk has the following <strong>9 bytes</strong> in it:</p>
<p><span>01001000</span> <span>01100101</span> <span>01111001</span> <span>00100000</span> <span>01000010</span> <span>01110101</span> <span>01100100</span> <span>01100100</span> <span>01111001</span></p>
<p>Let's evaluate this file byte-by-byte following the UTF-8 decoding rules:</p>
<table>
<thead>
<tr>
<th>Byte</th>
<th>Explanation</th>
</tr>
</thead>
<tbody><tr>
<td><span>01001000</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1001000</code> represent the letter 'H'. (<a href="https://utf8-playground.netlify.app/0048" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01100101</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1100101</code> represent the letter 'e'. (<a href="https://utf8-playground.netlify.app/0065" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01111001</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1111001</code> represent the letter 'y'. (<a href="https://utf8-playground.netlify.app/0079" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>00100000</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>0100000</code> represent a whitespace character. (<a href="https://utf8-playground.netlify.app/0020" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01000010</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1000010</code> represent the letter 'B'. (<a href="https://utf8-playground.netlify.app/0042" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01110101</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1110101</code> represent the letter 'u'. (<a href="https://utf8-playground.netlify.app/0075" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01100100</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1100100</code> represent the letter 'd'. (<a href="https://utf8-playground.netlify.app/0064" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01100100</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1100100</code> represent the letter 'd'. (<a href="https://utf8-playground.netlify.app/0064" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
<tr>
<td><span>01111001</span></td>
<td>Starts with <code>0</code>, so it's a single-byte ASCII character. The remaining bits <code>1111001</code> represent the letter 'y'. (<a href="https://utf8-playground.netlify.app/0079" target="_blank" rel="noopener">open in playground</a>)</td>
</tr>
</tbody></table>
<p>So this is a valid UTF-8 file, <strong>and it is also a valid ASCII file</strong>. The bytes in this file follows both the UTF-8 and ASCII encoding rules. This is how UTF-8 is designed to be backward compatible with ASCII.</p>
<h2>Other Encodings</h2>
<p>I did a quick research on any other encoding that are backward compatible with ASCII, and there are a few, but they are not as popular as UTF-8, for example GB 18030 (a Chinese government standard). Another one is the ISO/IEC 8859 encodings are single-byte encodings that extend ASCII to include additional characters, but they are limited to 256 characters.</p>
<p>The siblings of UTF-8, like UTF-16 and UTF-32, are not backward compatible with ASCII. For example, the letter 'A' in UTF-16 is represented as: <code>00 41</code> (two bytes), while in UTF-32 it is represented as: <code>00 00 00 41</code> (four bytes).</p>
<h2>Bonus: UTF-8 Playground</h2>
<p>When I was exploring the UTF-8 encoding, I couldn't find any good tool to interactively visualize how UTF-8 encoding works. So I built <strong>UTF-8 Playground</strong> to visualize and play around with UTF-8 encoding. <a href="https://utf8-playground.netlify.app/1F44B" target="_blank" rel="noopener">Give it a try!</a>.</p>

    <p>
        <a href="https://iamvishnu.com/tags/tech/" rel="tag">#tech</a>
        <a href="https://iamvishnu.com/tags/history/" rel="tag">#history</a>
        <a href="https://iamvishnu.com/tags/programming/" rel="tag">#programming</a>
    </p>
</article>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[EU court rules nuclear energy is clean energy (653 pts)]]></title>
            <link>https://www.weplanet.org/post/eu-court-rules-nuclear-energy-is-clean-energy</link>
            <guid>45224967</guid>
            <pubDate>Fri, 12 Sep 2025 18:18:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.weplanet.org/post/eu-court-rules-nuclear-energy-is-clean-energy">https://www.weplanet.org/post/eu-court-rules-nuclear-energy-is-clean-energy</a>, See on <a href="https://news.ycombinator.com/item?id=45224967">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="ltr" data-id="content-viewer" data-rce-version="10.141.4" data-hook="post-description"><div id="viewer-ua0iq295" data-breakout="normal"><figure data-hook="figure-IMAGE"><div id="ua0iq295" data-hook="image-viewer"><wow-image id="dccfdc_1744e9223bae4f338ddd5d15499c1763~mv2.jpg" data-image-info="{&quot;containerId&quot;:&quot;ua0iq295&quot;,&quot;displayMode&quot;:&quot;fill&quot;,&quot;isLQIP&quot;:true,&quot;isSEOBot&quot;:false,&quot;lqipTransition&quot;:&quot;blur&quot;,&quot;encoding&quot;:&quot;AVIF&quot;,&quot;imageData&quot;:{&quot;width&quot;:9504,&quot;height&quot;:6336,&quot;uri&quot;:&quot;dccfdc_1744e9223bae4f338ddd5d15499c1763~mv2.jpg&quot;,&quot;name&quot;:&quot;&quot;,&quot;displayMode&quot;:&quot;fill&quot;}}" data-motion-part="BG_IMG" data-bg-effect-name="" data-has-ssr-src="true" data-animate-blur=""><img src="https://static.wixstatic.com/media/dccfdc_1744e9223bae4f338ddd5d15499c1763~mv2.jpg/v1/fill/w_147,h_98,al_c,q_80,usm_0.66_1.00_0.01,blur_2,enc_avif,quality_auto/dccfdc_1744e9223bae4f338ddd5d15499c1763~mv2.jpg" alt="Youth climate activists sit with a sign reading Dear Greenpeace You can't power the future with hope." data-pin-url="https://www.weplanet.org/post/eu-court-rules-nuclear-energy-is-clean-energy" data-pin-media="https://static.wixstatic.com/media/dccfdc_1744e9223bae4f338ddd5d15499c1763~mv2.jpg/v1/fill/w_5000,h_3333,al_c,q_90,usm_0.66_1.00_0.01/dccfdc_1744e9223bae4f338ddd5d15499c1763~mv2.jpg" draggable="false"></wow-image></div><div id="viewer-c161e298"><p><figcaption><span>Launching Dear Greenpeace back in 2023</span></figcaption></p></div></figure></div><p dir="auto" id="viewer-n7zk6396"><span><span>When I launched </span><a target="_blank" href="https://www.weplanet.org/deargreenpeace" rel="noopener noreferrer" data-hook="web-link"><span><u><span>Dear Greenpeace</span></u></span></a><span> with my fellow youth climate activists alongside WePlanet two years ago, I had no idea just how quickly the anti-nuclear dominoes would fall across Europe. </span></span></p><p dir="auto" id="viewer-88h61415"><span><span>In 2023, and what seems like a lifetime ago, Austria launched their legal action against the European Commission for the inclusion of nuclear energy in the EU Sustainable Finance Taxonomy. At the time they were supported by a bulwark of EU countries and environmental NGOs that opposed nuclear energy. Honestly, it looked like they might win.</span></span></p><p dir="auto" id="viewer-ryc0x156"><span><span>But today, that whole landscape has changed.</span></span></p><p dir="auto" id="viewer-bw9py159"><span><span>Germany, long a symbol of anti-nuclear politics, is beginning to shift. The nuclear phase-outs or bans in the Netherlands, Belgium, Switzerland, Denmark, and Italy are now history. Even Fridays for Future has quietened its opposition, and in some places, embraced nuclear power.</span></span></p><p dir="auto" id="viewer-9x3x3163"><span><span>This moment matters.</span></span></p><p dir="auto" id="viewer-b4w0x166"><span><span>It shows what’s possible when we stick to the science. The evidence only gets clearer by the day that nuclear energy has an extremely low environmental impact across its lifecycle, and strong regulations and safety culture ensure that it remains one of the safest forms of energy available to humanity. </span></span></p><p dir="auto" id="viewer-2amni169"><span><span>The European Court of Justice has now fully dismissed Austria’s lawsuit. That ruling doesn’t just uphold nuclear energy’s place in EU green finance rules. It also signals a near-certain defeat for the ongoing Greenpeace case – the very lawsuit that inspired me to launch Dear Greenpeace in the first place.</span></span></p><p dir="auto" id="viewer-s1mp7538"><span><span>But instead of learning from this, Greenpeace is doubling down. Martin Kaiser, Executive Director of Greenpeace Germany, called the court decision “a dark day for the climate”.</span></span></p><p dir="auto" id="viewer-hnk62579"><span><span>Let that sink in. The highest court in the EU just reaffirmed that nuclear energy meets the scientific and environmental standards to be included in sustainable finance, and Greenpeace still refuses to budge.</span></span></p><p dir="auto" id="viewer-kjw4h560"><span><span>Meanwhile, the climate crisis gets worse. Global emissions are not falling fast enough. Billions of people still lack access to clean, reliable electricity. And we are forced to spend time defending proven solutions instead of scaling them.</span></span></p><div id="viewer-3ae5f638" data-breakout="normal"><figure data-hook="figure-IMAGE"><div id="3ae5f638" data-hook="image-viewer"><wow-image id="5caaac_7a93e55d745a4c13a57e7cf2c6f3fb8a~mv2.jpg" data-image-info="{&quot;containerId&quot;:&quot;3ae5f638&quot;,&quot;displayMode&quot;:&quot;fill&quot;,&quot;isLQIP&quot;:true,&quot;isSEOBot&quot;:false,&quot;lqipTransition&quot;:&quot;blur&quot;,&quot;encoding&quot;:&quot;AVIF&quot;,&quot;imageData&quot;:{&quot;width&quot;:4521,&quot;height&quot;:3442,&quot;uri&quot;:&quot;5caaac_7a93e55d745a4c13a57e7cf2c6f3fb8a~mv2.jpg&quot;,&quot;name&quot;:&quot;&quot;,&quot;displayMode&quot;:&quot;fill&quot;}}" data-motion-part="BG_IMG" data-bg-effect-name="" data-has-ssr-src="true" data-animate-blur=""><img src="https://static.wixstatic.com/media/5caaac_7a93e55d745a4c13a57e7cf2c6f3fb8a~mv2.jpg/v1/fill/w_147,h_112,al_c,q_80,usm_0.66_1.00_0.01,blur_2,enc_avif,quality_auto/5caaac_7a93e55d745a4c13a57e7cf2c6f3fb8a~mv2.jpg" alt="Youth Climate Activists stand with a sign saying Fight Fossils Not Nuclear." data-pin-url="https://www.weplanet.org/post/eu-court-rules-nuclear-energy-is-clean-energy" data-pin-media="https://static.wixstatic.com/media/5caaac_7a93e55d745a4c13a57e7cf2c6f3fb8a~mv2.jpg/v1/fill/w_4521,h_3442,al_c,q_90/5caaac_7a93e55d745a4c13a57e7cf2c6f3fb8a~mv2.jpg" draggable="false"></wow-image></div><div id="viewer-xdow6652"><p><figcaption><span>Announcing our inclusion in the case between Greenpeace and the EU Commission</span></figcaption></p></div></figure></div><p dir="auto" id="viewer-depjh684"><span><span>It’s now up to the court whether we will get our time in court to outline the evidence in support of nuclear energy and the important role it can play in the global clean energy transition. Whether in court, on the streets, or in the halls of parliaments across the globe, we will be there to defend the science and ensure that nuclear power can spread the advantages of the modern world across the planet in a sustainable, reliable and dignified way.</span></span></p><p dir="auto" id="viewer-szxti181"><span><span>Austria stands increasingly isolated among a handful of countries that still cling to their opposition to nuclear energy. Their defeat in this vital high stakes topic is a success not just for the nuclear movement, but for the global transition as a whole. </span></span></p><p dir="auto" id="viewer-tvkcu260"><span><span>We have made real progress. Together, we’ve helped defend nuclear power in the EU, overturned outdated policies at the World Bank, and secured more technology-neutral language at the UN. These wins are not abstract. They open the door to real investment, real projects, and real emissions cuts.</span></span></p><p dir="auto" id="viewer-5dxe6243"><span><span>But the work is not done.</span></span></p><p dir="auto" id="viewer-a2l0l226"><span><span>We still need to overturn national nuclear bans, unlock more funding, and push democratic countries to support clean energy development abroad: especially where it is most needed to compete with Russia’s growing influence.</span></span></p><p dir="auto" id="viewer-u71i5190"><span><span>The fight will not be done until every single country in the world can boast a clean, reliable energy grid, ready to maintain a modern dignified standard of living, for everyone, everywhere.</span></span></p><p dir="auto" id="viewer-ifug7193"><span><span>This is a great success for the movement and it would not have been possible without the financial support, time and energy given by people like you.</span></span></p><p dir="auto" id="viewer-mcpu5961"><span><span>In Solidarity,</span><span>
</span><span>Ia Aanstoot</span></span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Epistemic Collapse at the WSJ (117 pts)]]></title>
            <link>https://www.math.columbia.edu/~woit/wordpress/?p=15206</link>
            <guid>45224649</guid>
            <pubDate>Fri, 12 Sep 2025 17:46:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.math.columbia.edu/~woit/wordpress/?p=15206">https://www.math.columbia.edu/~woit/wordpress/?p=15206</a>, See on <a href="https://news.ycombinator.com/item?id=45224649">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-15206">
					

					<!-- .entry-meta -->

					<div>
						<p>For a long time now fundamental theoretical physics has been suffering not just from a slowdown in progress, but from a sort of intellectual collapse (I wrote about this <a href="https://www.math.columbia.edu/~woit/wordpress/?p=14999">here</a> a while back in the context of “epistemic collapse”: the collapse of a shared reality, caused by the loss of reliable sources for distinguishing what is true from what is false.). The Wall Street Journal has a new article entitled <a href="https://www.wsj.com/science/physics/the-rise-of-conspiracy-physics-dd79fe36">The Rise of ‘Conspiracy Physics’</a> with summary:</p>
<blockquote><p>Streamers are building huge audiences by attacking academic physics as just another corrupt establishment. Scientists are starting to worry about the consequences.</p></blockquote>
<p>If you replaced “Streamers” by “Sabine Hossenfelder” this would be reasonably accurate, and a serious discussion of this would have been interesting and worthwhile.  Instead, the article is an excellent example of the sort of epistemic collapse we’re now living in.  There’s zero intelligent content about the underlying scientific issues (is fundamental theoretical physics in trouble?), just a random collection of material about podcasts, written by someone who clearly knows nothing about the topic he’s writing about.  The epistemic collapse is total when traditional high-quality information sources like the Wall Street Journal are turned over to uninformed writers getting their information from Joe Rogan podcasts. Any hope of figuring out what is true and what is false is now completely gone.</p>
<p>I was planning on writing something explaining what exactly the WSJ story gets wrong, but now realize this is hopeless (and I’m trying to improve my mental health this week, not make it worse).  Sorting through a pile of misinformation, trying to rebuild something true out of a collapsed mess of some truth buried in a mixture of nonsense and misunderstandings is a losing battle.</p>
<p>Maybe some day our information environment will become healthy again, but for now I’m not sure what to do about this.   Be aware that if you’re trying to understand the state of fundamental theoretical physics, watching Joe Rogan, Piers Morgan, Professor Dave, etc. podcasts is just going to fill your mind with crap. Reading articles about these podcasts is worse. If a podcaster (e.g. Sabine Hossenfelder) has a book, read the book (Lost in Math is pretty good) rather than watching the podcasts.  In general, reading books is a good idea (I can also recommend <a href="https://www.amazon.com/gp/product/0465092756">this one</a>). </p>
<p><strong>Update:</strong>  John Baez comments <a href="https://mathstodon.xyz/@johncarlosbaez/115187879181381057">here</a>:</p>
<blockquote><p>This quagmire is getting bigger.  It’s another part of what William Gibson recently called the Singularity of Stupid.</p></blockquote>
											</div><!-- .entry-content -->

		
						<div><p>
							This entry was posted in <a href="https://www.math.columbia.edu/~woit/wordpress/?cat=1" rel="category">Uncategorized</a>. Bookmark the <a href="https://www.math.columbia.edu/~woit/wordpress/?p=15206" title="Permalink to Epistemic Collapse at the WSJ" rel="bookmark">permalink</a>.													</p></div><!-- .entry-utility -->
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[QGIS is a free, open-source, cross platform geographical information system (317 pts)]]></title>
            <link>https://github.com/qgis/QGIS</link>
            <guid>45224156</guid>
            <pubDate>Fri, 12 Sep 2025 16:57:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/qgis/QGIS">https://github.com/qgis/QGIS</a>, See on <a href="https://news.ycombinator.com/item?id=45224156">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/qgis/QGIS/blob/master/images/README-md/main_logo.png"><img src="https://github.com/qgis/QGIS/raw/master/images/README-md/main_logo.png" width="300"></a></p>
<p dir="auto"><a href="https://github.com/qgis/QGIS/actions/workflows/run-tests.yml?query=branch%3Amaster+event%3Apush"><img src="https://github.com/qgis/QGIS/actions/workflows/run-tests.yml/badge.svg" alt="🧪 QGIS tests"></a>
<a href="https://hub.docker.com/r/qgis/qgis/tags" rel="nofollow"><img src="https://camo.githubusercontent.com/7479f1416cefaf1fb2aef1e41ee07620277a2cda1409bfb2d49b2fc7e6342f0d/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f6175746f6d617465642f716769732f716769732e737667" alt="Docker Status" data-canonical-src="https://img.shields.io/docker/automated/qgis/qgis.svg"></a>
<a href="https://dev.azure.com/qgis/QGIS/_build/latest?definitionId=1&amp;branchName=master" rel="nofollow"><img src="https://camo.githubusercontent.com/6018bbe5616d615cfae2a5b8468eabdf637715d73641cedfb748b89d3b2ea727/68747470733a2f2f6465762e617a7572652e636f6d2f716769732f514749532f5f617069732f6275696c642f7374617475732f716769732e514749533f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/qgis/QGIS/_apis/build/status/qgis.QGIS?branchName=master"></a>
<a href="https://securityscorecards.dev/viewer/?uri=github.com/qgis/QGIS" rel="nofollow"><img src="https://camo.githubusercontent.com/78f8a15ac0c16f8d566c8873db83e54641fbe6651878f352d21edd7177fcc857/68747470733a2f2f6170692e736563757269747973636f726563617264732e6465762f70726f6a656374732f6769746875622e636f6d2f716769732f514749532f6261646765" alt="OpenSSF Scorecard" data-canonical-src="https://api.securityscorecards.dev/projects/github.com/qgis/QGIS/badge"></a>
<a href="https://www.bestpractices.dev/projects/1581" rel="nofollow"><img src="https://camo.githubusercontent.com/72f1c97496354fc098765cd411c4cfa4a1d4995de93c713dca34493e93803d04/68747470733a2f2f7777772e626573747072616374696365732e6465762f70726f6a656374732f313538312f6261646765" alt="OpenSSF Best Practices" data-canonical-src="https://www.bestpractices.dev/projects/1581/badge"></a>
<a href="https://github.com/qgis/QGIS/actions/workflows/mingw64.yml?query=branch%3Amaster+event%3Apush"><img src="https://github.com/qgis/QGIS/actions/workflows/mingw64.yml/badge.svg" alt="🪟 MingW64 Windows 64bit Build"></a>
<a href="https://doi.org/10.5281/zenodo.5869837" rel="nofollow"><img src="https://camo.githubusercontent.com/85acebb9718a81d9772f3fe57a92af1c29abc98c8c308d00c8ae2d87ea89ab91/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e353836393833372e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.5869837.svg"></a></p>
<p dir="auto">QGIS is a full-featured, user-friendly, free-and-open-source (FOSS) geographical information system (GIS) that runs on Unix platforms, Windows, and MacOS.</p>

<ul dir="auto">
<li><a href="#features">Features</a>
<ul dir="auto">
<li><a href="#1-flexible-and-powerful-spatial-data-management">1. Flexible and powerful spatial data management</a></li>
<li><a href="#2-beautiful-cartography">2. Beautiful cartography</a></li>
<li><a href="#3-advanced-and-robust-geospatial-analysis">3. Advanced and robust geospatial analysis</a></li>
<li><a href="#4-powerful-customization-and-extensibility">4. Powerful customization and extensibility</a></li>
<li><a href="#5-qgis-server">5. QGIS Server</a></li>
</ul>
</li>
<li><a href="#under-the-hood">Under the hood</a>
<ul dir="auto">
<li><a href="#versions-and-release-cycle">Versions and release cycle</a></li>
<li><a href="#free-and-open-source">Free and Open Source</a></li>
</ul>
</li>
<li><a href="#installing-and-using-qgis">Installing and using QGIS</a>
<ul dir="auto">
<li><a href="#documentation">Documentation</a></li>
<li><a href="#help-and-support-channels">Help and support channels</a></li>
</ul>
</li>
<li><a href="#get-involved-with-the-community">Get involved with the community</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">1. Flexible and powerful spatial data management</h3><a id="user-content-1-flexible-and-powerful-spatial-data-management" aria-label="Permalink: 1. Flexible and powerful spatial data management" href="#1-flexible-and-powerful-spatial-data-management"></a></p>
<ul dir="auto">
<li>Support for raster, vector, mesh, and point cloud data in a range of industry-standard formats
<ul dir="auto">
<li><em>Raster formats include</em>: GeoPackage, GeoTIFF, GRASS, ArcInfo binary and ASCII grids, ERDAS Imagine SDTS, WMS, WCS, PostgreSQL/PostGIS, and <a href="https://gdal.org/drivers/raster/index.html" rel="nofollow">other GDAL supported formats</a>.</li>
<li><em>Vector formats include</em>: GeoPackage, ESRI shapefiles, GRASS, SpatiaLite, PostgreSQL/PostGIS, MSSQL, Oracle, WFS, Vector Tiles and <a href="https://www.gdal.org/ogr_formats.html" rel="nofollow">other OGR supported formats</a>.</li>
<li><em>Mesh formats include</em>: NetCDF, GRIB, 2DM, and <a href="https://github.com/lutraconsulting/MDAL#supported-formats">other MDAL supported formats</a>.</li>
<li><em>Point-cloud format</em>: LAS/LAZ and EPT datasets.</li>
</ul>
</li>
<li>Data abstraction framework, with local files, spatial databases (PostGIS, SpatiaLite, SQL Server, Oracle, SAP HANA), and web services (WMS, WCS, WFS, ArcGIS REST) all accessed through a unified data model and browser interface, and as flexible layers in user-created projects</li>
<li>Spatial data creation via visual and numerical digitizing and editing, as well as georeferencing of raster and vector data</li>
<li>On-the-fly reprojection between coordinate reference systems (CRS)</li>
<li>Nominatim (OpenStreetMap) geocoder access</li>
<li>Temporal support</li>
</ul>
<p dir="auto"><em>Example: Temporal animation</em></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/qgis/QGIS/blob/master/images/README-md/icebergs.gif"><img src="https://github.com/qgis/QGIS/raw/master/images/README-md/icebergs.gif" alt="Example: Temporal animation" title="Temporal animation" data-animated-image=""></a></p>
<p dir="auto"><em>Example: 3D map view</em></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/e34903ab068547a5e7824acb2fbdfce83d25503c434720028fe22aff7668ce9c/68747470733a2f2f646f63732e716769732e6f72672f6c61746573742f656e2f5f696d616765732f33646d6170766965772e706e67"><img src="https://camo.githubusercontent.com/e34903ab068547a5e7824acb2fbdfce83d25503c434720028fe22aff7668ce9c/68747470733a2f2f646f63732e716769732e6f72672f6c61746573742f656e2f5f696d616765732f33646d6170766965772e706e67" alt="Example: 3D map view" title="3D map view" data-canonical-src="https://docs.qgis.org/latest/en/_images/3dmapview.png"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">2. Beautiful cartography</h3><a id="user-content-2-beautiful-cartography" aria-label="Permalink: 2. Beautiful cartography" href="#2-beautiful-cartography"></a></p>
<ul dir="auto">
<li>Large variety of rendering options in 2D and 3D</li>
<li>Fine control over symbology, labeling, legends and additional graphical elements for beautifully rendered maps</li>
<li>Respect for embedded styling in many spatial data sources (e.g. KML and TAB files, Mapbox-GL styled vector tiles)</li>
<li>In particular, near-complete replication (and significant extension) of symbology options that are available in proprietary software by ESRI</li>
<li>Advanced styling using data-defined overrides, blending modes, and draw effects</li>
<li>500+ built-in color ramps (cpt-city, ColorBrewer, etc.)</li>
<li>Create and update maps with specified scale, extent, style, and decorations via saved layouts</li>
<li>Generate multiple maps (and reports) automatically using QGIS Atlas and QGIS Reports</li>
<li>Display and export elevation profile plots with flexible symbology</li>
<li>Flexible output direct to printer, or as image (raster), PDF, or SVG for further customization</li>
<li>On-the-fly rendering enhancements using geometry generators (e.g. create and style new geometries from existing features)</li>
<li>Preview modes for inclusive map making (e.g. monochrome, color blindness)</li>
</ul>
<p dir="auto"><em><a href="https://flic.kr/p/2jFfGJP" rel="nofollow">Example: Map of Bogota, Colombia in the style of Starry Starry Night, by Andrés Felipe Lancheros Sánchez</a></em></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/c2d03d08c41df2483941f33b27268788b4926c275b52efa45eda52bb0d27b0ab/68747470733a2f2f6c6976652e737461746963666c69636b722e636f6d2f36353533352f35303332373332363332335f336461323866306438365f622e6a7067"><img src="https://camo.githubusercontent.com/c2d03d08c41df2483941f33b27268788b4926c275b52efa45eda52bb0d27b0ab/68747470733a2f2f6c6976652e737461746963666c69636b722e636f6d2f36353533352f35303332373332363332335f336461323866306438365f622e6a7067" alt="Map of Bogota, Colombia in the style of Starry Starry Night" title="Map of Bogota, Colombia in the style of Starry Starry Night" data-canonical-src="https://live.staticflickr.com/65535/50327326323_3da28f0d86_b.jpg"></a></p>
<p dir="auto">For more maps created with QGIS, visit the <a href="https://www.flickr.com/groups/2244553@N22/pool/with/50355460063/" rel="nofollow">QGIS Map Showcase Flickr Group</a>.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/qgis/QGIS/blob/master/images/README-md/qgis_map_showcase.png"><img src="https://github.com/qgis/QGIS/raw/master/images/README-md/qgis_map_showcase.png" alt="QGIS Map Showcase" title="QGIS Map Showcase"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">3. Advanced and robust geospatial analysis</h3><a id="user-content-3-advanced-and-robust-geospatial-analysis" aria-label="Permalink: 3. Advanced and robust geospatial analysis" href="#3-advanced-and-robust-geospatial-analysis"></a></p>
<ul dir="auto">
<li>Powerful processing framework with 200+ native processing algorithms</li>
<li>Access to 1000+ processing algorithms via providers such as GDAL, SAGA, GRASS, OrfeoToolbox, as well as custom models and processing scripts</li>
<li>Geospatial database engine (filters, joins, relations, forms, etc.), as close to datasource- and format-independent as possible</li>
<li>Immediate visualization of geospatial query and geoprocessing results</li>
<li>Model designer and batch processing</li>
</ul>
<p dir="auto"><em>Example: Travel isochrones</em></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/qgis/QGIS/blob/master/images/README-md/network_analysis_2.png"><img src="https://github.com/qgis/QGIS/raw/master/images/README-md/network_analysis_2.png" alt="Example: Travel isochrones" title="Travel isochrones"></a></p>
<p dir="auto"><em>Example: Model designer</em></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/3d0b647c5ce4ebabda9cf79f8e056f21bd03f70cd16bb7dfa5025000ea60de85/68747470733a2f2f646f63732e716769732e6f72672f6c61746573742f656e2f5f696d616765732f6d6f64656c735f6d6f64656c2e706e67"><img src="https://camo.githubusercontent.com/3d0b647c5ce4ebabda9cf79f8e056f21bd03f70cd16bb7dfa5025000ea60de85/68747470733a2f2f646f63732e716769732e6f72672f6c61746573742f656e2f5f696d616765732f6d6f64656c735f6d6f64656c2e706e67" alt="Example: model designer" title="Model designer" data-canonical-src="https://docs.qgis.org/latest/en/_images/models_model.png"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">4. Powerful customization and extensibility</h3><a id="user-content-4-powerful-customization-and-extensibility" aria-label="Permalink: 4. Powerful customization and extensibility" href="#4-powerful-customization-and-extensibility"></a></p>
<ul dir="auto">
<li>Fully customizable user experience, including user interface and application settings that cater to power-users and beginners alike</li>
<li>Rich <a href="https://docs.qgis.org/testing/en/docs/user_manual/working_with_vector/expression.html" rel="nofollow">expression engine</a> for maximum flexibility in visualization and processing</li>
<li>Broad and varied <a href="https://plugins.qgis.org/" rel="nofollow">plugin ecosystem</a> that includes data connectors, digitizing aids, advanced analysis and charting tools,
in-the-field data capture, conversion of ESRI style files, etc.</li>
<li>Style manager for creating, storing, and managing styles</li>
<li><a href="https://plugins.qgis.org/styles/" rel="nofollow">QGIS style hub</a> for easy sharing of styles</li>
<li>Python and C++ API for standalone (headless) applications as well as in-application comprehensive scripting (PyQGIS)</li>
</ul>
<p dir="auto"><em>Example: Style manager</em></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ddd6e1d08a828f44b26570db1953d8a0f672a62b43ab66ed7082a387e85b910f/68747470733a2f2f646f63732e716769732e6f72672f6c61746573742f656e2f5f696d616765732f7374796c656d616e616765722e706e67"><img src="https://camo.githubusercontent.com/ddd6e1d08a828f44b26570db1953d8a0f672a62b43ab66ed7082a387e85b910f/68747470733a2f2f646f63732e716769732e6f72672f6c61746573742f656e2f5f696d616765732f7374796c656d616e616765722e706e67" alt="Example: Style manager" title="Style Manager" data-canonical-src="https://docs.qgis.org/latest/en/_images/stylemanager.png"></a></p>
<p dir="auto"><em>Example: Plugins</em></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/qgis/QGIS/blob/master/images/README-md/plugins_1.png"><img src="https://github.com/qgis/QGIS/raw/master/images/README-md/plugins_1.png" alt="Example: Plugins" title="Plugins"></a></p>

<p dir="auto"><h3 tabindex="-1" dir="auto">5. QGIS Server</h3><a id="user-content-5-qgis-server" aria-label="Permalink: 5. QGIS Server" href="#5-qgis-server"></a></p>
<p dir="auto">Headless map server -- running on Linux, macOS, Windows, or in a docker container -- that shares the same code base as QGIS.</p>
<ul dir="auto">
<li>Industry-standard protocols (WMS, WFS, WFS3/OGC API for Features and WCS) allow plug-n-play with any software stack</li>
<li>Works with any web server (Apache, nginx, etc) or standalone</li>
<li>All beautiful QGIS cartography is supported with best-in-class support for printing</li>
<li>Fully customizable with Python scripting support</li>
</ul>
<p dir="auto"><em>Example: QGIS server WMS response</em></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/9a67fbbe6a56d12302164ba4ae495acae4a74553817085c48935259cd7cda194/68747470733a2f2f646f63732e716769732e6f72672f6c61746573742f656e2f5f696d616765732f7365727665725f73656c656374696f6e5f706172616d657465722e706e67"><img src="https://camo.githubusercontent.com/9a67fbbe6a56d12302164ba4ae495acae4a74553817085c48935259cd7cda194/68747470733a2f2f646f63732e716769732e6f72672f6c61746573742f656e2f5f696d616765732f7365727665725f73656c656374696f6e5f706172616d657465722e706e67" alt="Example: QGIS Server response to a WMS request" title="QGIS Server response to a WMS request" data-canonical-src="https://docs.qgis.org/latest/en/_images/server_selection_parameter.png"></a></p>
<p dir="auto"><em>Example: QGIS server WFS response</em></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0956e8550c0e3e824343dfe5e994ac6fc7183d8d35687caaa13dd554c478a86a/68747470733a2f2f646f63732e716769732e6f72672f6c61746573742f656e2f5f696d616765732f7365727665725f776673335f666561747572652e706e67"><img src="https://camo.githubusercontent.com/0956e8550c0e3e824343dfe5e994ac6fc7183d8d35687caaa13dd554c478a86a/68747470733a2f2f646f63732e716769732e6f72672f6c61746573742f656e2f5f696d616765732f7365727665725f776673335f666561747572652e706e67" alt="Example: QGIS Server response to a WFS Feature request" title="QGIS Server response to a WFS Feature request" data-canonical-src="https://docs.qgis.org/latest/en/_images/server_wfs3_feature.png"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Under the hood</h2><a id="user-content-under-the-hood" aria-label="Permalink: Under the hood" href="#under-the-hood"></a></p>
<p dir="auto">QGIS is developed using the <a href="https://qt.io/" rel="nofollow">Qt toolkit</a> and C++, since 2002, and has a pleasing, easy to use graphical
user interface with multilingual support. It is maintained by an active developer team and supported by vibrant
community of GIS professionals and enthusiasts as well as geospatial data publishers and end-users.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Versions and release cycle</h3><a id="user-content-versions-and-release-cycle" aria-label="Permalink: Versions and release cycle" href="#versions-and-release-cycle"></a></p>
<p dir="auto">QGIS development and releases follow a <a href="https://www.qgis.org/en/site/getinvolved/development/roadmap.html" rel="nofollow">time based schedule/roadmap</a>. There are three main branches of QGIS that users can install. These are the <strong>Long Term Release (LTR)</strong> branch, the <strong>Latest Release (LR)</strong> branch, and the <strong>Development (Nightly)</strong> branch.</p>
<p dir="auto">Every month, there is a <strong>Point Release</strong> that provides bug-fixes to the LTR and LR.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Free and Open Source</h3><a id="user-content-free-and-open-source" aria-label="Permalink: Free and Open Source" href="#free-and-open-source"></a></p>
<p dir="auto">QGIS is released under the GNU Public License (GPL) Version 2 or any later version.
Developing QGIS under this license means that you can (if you want to) inspect
and modify the source code and guarantees that you, our happy user will always
have access to a GIS program that is free of cost and can be freely
modified.</p>
<p dir="auto">QGIS is part of the Open-Source Geospatial Foundation (<a href="https://www.osgeo.org/" rel="nofollow">OSGeo</a>), offering a range of complementary open-source GIS software projects.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installing and using QGIS</h2><a id="user-content-installing-and-using-qgis" aria-label="Permalink: Installing and using QGIS" href="#installing-and-using-qgis"></a></p>
<p dir="auto">Precompiled binaries for QGIS are available at <a href="https://www.qgis.org/en/site/forusers/download.html" rel="nofollow">the QGIS.org download page</a>.
Please follow the installation instructions carefully.</p>
<p dir="auto">The <a href="https://github.com/qgis/QGIS/blob/master/INSTALL.md">building guide</a> can be used to get started with building QGIS from source.</p>
<p dir="auto">For installation of QGIS Server, see its <a href="https://docs.qgis.org/testing/en/docs/server_manual/getting_started.html" rel="nofollow">getting started documentation</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Documentation</h3><a id="user-content-documentation" aria-label="Permalink: Documentation" href="#documentation"></a></p>
<p dir="auto">A range of <a href="https://qgis.org/resources/hub/#documentation" rel="nofollow">documentation</a> is available. This includes:</p>
<ul dir="auto">
<li><a href="https://docs.qgis.org/latest/en/docs/training_manual/index.html" rel="nofollow">Training Manual</a></li>
<li><a href="https://docs.qgis.org/latest/en/docs/user_manual/index.html" rel="nofollow">QGIS User Guide</a></li>
<li><a href="https://docs.qgis.org/latest/en/docs/server_manual/index.html" rel="nofollow">QGIS Server Guide</a></li>
<li><a href="https://qgis.org/project/visual-changelogs/" rel="nofollow">Visual Changelog</a></li>
<li><a href="https://docs.qgis.org/latest/en/docs/documentation_guidelines/index.html" rel="nofollow">Documentation Guidelines</a></li>
<li><a href="https://docs.qgis.org/latest/en/docs/pyqgis_developer_cookbook/index.html" rel="nofollow">QGIS Python (PyQGIS) Cookbook</a></li>
<li><a href="https://qgis.org/pyqgis/" rel="nofollow">QGIS Python (PyQGIS) API</a></li>
<li><a href="https://qgis.org/api/" rel="nofollow">QGIS C++ API</a></li>
<li><a href="https://docs.qgis.org/latest/en/docs/developers_guide/index.html" rel="nofollow">Developers Guide</a></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Help and support channels</h3><a id="user-content-help-and-support-channels" aria-label="Permalink: Help and support channels" href="#help-and-support-channels"></a></p>
<p dir="auto">There are several channels where you can find help and support for QGIS:</p>
<ul dir="auto">
<li>Using the <a href="https://qgis.org/" rel="nofollow">QGIS community site</a></li>
<li>Joining the <a href="https://lists.osgeo.org/mailman/listinfo/qgis-user" rel="nofollow">qgis-users mailing list</a></li>
<li>Chatting with other users real-time. <em>Please wait around for a response to your question as many folks on the channel are doing other things and it may take a while for them to notice your question. The following paths all take you to the same chat room:</em>
<ul dir="auto">
<li>Using an IRC client and joining the
<a href="https://web.libera.chat/?channels=#qgis" rel="nofollow">#qgis</a> channel on irc.libera.chat.</li>
<li>Using a Matrix client and joining the <a href="https://matrix.to/#/#qgis:osgeo.org" rel="nofollow">#qgis:osgeo.org</a> room.</li>
</ul>
</li>
<li>At the <a href="https://gis.stackexchange.com/" rel="nofollow">GIS stackexchange</a> or <a href="https://www.reddit.com/r/QGIS/" rel="nofollow">r/QGIS reddit</a>, which are not maintained by the QGIS team, but where the QGIS and broader GIS community provides lots of advice</li>
<li><a href="https://qgis.org/resources/support/" rel="nofollow">Other support channels</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Get involved with the community</h2><a id="user-content-get-involved-with-the-community" aria-label="Permalink: Get involved with the community" href="#get-involved-with-the-community"></a></p>
<p dir="auto"><a href="https://github.com/qgis/QGIS/blob/master/CONTRIBUTING.md">Contribution guidelines for this project</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Corporations are trying, and now failing, to hide job openings from US citizens (412 pts)]]></title>
            <link>https://thehill.com/opinion/finance/5498346-corporate-america-has-been-trying-to-hide-job-openings-now-it-is-failing/</link>
            <guid>45223719</guid>
            <pubDate>Fri, 12 Sep 2025 16:13:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thehill.com/opinion/finance/5498346-corporate-america-has-been-trying-to-hide-job-openings-now-it-is-failing/">https://thehill.com/opinion/finance/5498346-corporate-america-has-been-trying-to-hide-job-openings-now-it-is-failing/</a>, See on <a href="https://news.ycombinator.com/item?id=45223719">Hacker News</a></p>
Couldn't get https://thehill.com/opinion/finance/5498346-corporate-america-has-been-trying-to-hide-job-openings-now-it-is-failing/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[A beginner's guide to extending Emacs (136 pts)]]></title>
            <link>https://blog.tjll.net/a-beginners-guide-to-extending-emacs/</link>
            <guid>45223239</guid>
            <pubDate>Fri, 12 Sep 2025 15:32:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.tjll.net/a-beginners-guide-to-extending-emacs/">https://blog.tjll.net/a-beginners-guide-to-extending-emacs/</a>, See on <a href="https://news.ycombinator.com/item?id=45223239">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
<hgroup>
  <h3>
    
    <a href="https://blog.tjll.net/blog-architecture-redux/">«</a>
    
    A Beginner's Guide to Extending Emacs
    
    <a href="https://blog.tjll.net/human-resources-misalignment/">»</a>
    
  </h3>
  <div>
    <ul id="post-details">
      <li> 4 February, 2025</li>
      <li>3,983 words</li>
      <li>17 minute read time</li>
    </ul>
  </div>
</hgroup>


        <section id="content">
	  
<p>
This post isn’t about the virtues of some editors versus others: <a href="https://www.murilopereira.com/the-values-of-emacs-the-neovim-revolution-and-the-vscode-gorilla/">that's already been written by somebody else</a> (and it’s really good) – if you want to know <i>why</i> I use emacs, I suggest reading that instead.
</p>

<p>
<i>This</i> post will help you understand why "extensibility" and "introspectability" are such prominent emacs features even without an emacs lisp background.
Bridging the gap from <a href="https://www.spacemacs.org/">spacemacs</a> or <a href="https://github.com/doomemacs/doomemacs">doom emacs</a> to a bespoke configuration wasn't easy for me because I didn’t know <i>how</i> to learn emacs, so I'm going to stumble through one of my own use cases to demonstrate how this process goes if you're peeking in from outside the emacs ecosystem, <del>horrified</del> curious about how this all works.
</p>

<p>
Let's talk about reStructuredText.
</p>

<div id="table-of-contents" role="doc-toc">
<h4>Table of Contents</h4>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#restructuredtext">reStructuredText</a>
<ul>
<li><a href="#a-parentheses-prelude">A Parentheses Prelude</a></li>
</ul>
</li>
<li><a href="#extensible-macros">Extensible MACroS</a>
<ul>
<li><a href="#completions-abound">Completions Abound</a></li>
</ul>
</li>
<li><a href="#gathering-completions">Gathering Completions</a>
<ul>
<li><a href="#regexes">Regexes</a></li>
</ul>
</li>
<li><a href="#gathering-completions-continued">Gathering Completions: Continued</a></li>
<li><a href="#completing-the-completion-backend">Completing the Completion Backend</a></li>
<li><a href="#dressing-up-the-bones">Dressing Up the Bones</a>
<ul>
<li><a href="#mode-hooks">Mode Hooks</a></li>
<li><a href="#other-files">Other Files</a></li>
<li><a href="#fancy-completion">Fancy Completion</a></li>
</ul>
</li>
<li><a href="#summary">Summary</a></li>
</ul>
</div>
</div>
<div id="outline-container-restructuredtext">
<h4 id="restructuredtext">reStructuredText</h4>
<div id="text-restructuredtext">
<p>
At my day job I write <a href="https://docs.bowtie.works/">our user documentation</a> using <a href="https://www.sphinx-doc.org/en/master/">Sphinx</a>.
It expects my stilted prose in <code>.rst</code> format, which is kind of like Markdown if you squint.
</p>

<p>
I do an awful lot of cross-referencing between <i>references</i> (or <code>refs</code>) to link concepts across the documentation.
You define a reference like this:
</p>

<p><span><span>ReST</span></span></p><div><ul><li><span>Font used for directives and roles.</span></li>
<li><span>Font used for all other defining constructs.</span></li></ul></div><div>
<pre><code><span>.. _code_example:</span></code>
<code></code>
<code><span>.. code::</span></code>
<code>   echo "HELP I'M TRAPPED IN A CODE EXAMPLE"</code>
</pre>
</div>

<p>
…and then link to it later like this:
</p>

<p><span><span>ReST</span></span></p><div><ul><li><span>Font used for field names and interpreted text.</span></li>
<li><span>Font used for directives and roles.</span></li></ul></div><div>
<pre><code>This <span>:ref:</span><span>`doesn't look like anything to me &lt;code_example&gt;`</span>.</code>
</pre>
</div>

<p>
…or like this (if the <code>ref</code> is associated with a title of some sort):
</p>

<p><span><span>ReST</span></span></p><div><ul><li><span>Font used for field names and interpreted text.</span></li>
<li><span>Font used for directives and roles.</span></li></ul></div><div>
<pre><code>Don't say <span>:ref:</span><span>`code_example`</span>.</code>
</pre>
</div>

<p>
My problem is that I have an <i>assload</i> of references across the all of the documentation and my brain cannot recall them on the spot.
What I really need is the ability to call up the list of references to easily discover and select from that list – this is basically auto-completion but for documentation headers (or titles).
</p>

<p>
I am ready to write some shitty elisp <a href="http://landoflisp.com/">with the help of aliens</a>.
</p>
</div>
<div id="outline-container-a-parentheses-prelude">
<h5 id="a-parentheses-prelude">A Parentheses Prelude</h5>
<p>
Before we dig into emacs' guts, here are some principles that I learned after my first elisp experiments that might help somebody digging into this ecosystem for the first time:
</p>
<div id="outline-container-1-emacs-wants-you-to-extend-it">
<h6 id="1-emacs-wants-you-to-extend-it">1. Emacs <i>Wants</i> You to Extend It</h6>
<div>
<p>
I haven't written plugins for other editors extensively, but I <i>can</i> tell you this: emacs doesn't just make deep customization available, but it actively <i>encourages</i> you to make an absolute customization <del>messes</del> masterpieces.
Core editor functions aren't just documented, but often include tidbits about "you probably want to see this other variable" or "here's how you should use this".
</p>

<p>
Not only that, but emacs happily hands you functions shaped like nuclear warheads like <code><span>advice-add</span></code> (that let you override any function) that can absolutely obliterate your editor if you hold it the wrong way.
Of course, this also grants you <b>unlimited power</b>.
</p>

<p>
Remember that emacs is designed to be torn apart and rearranged.
</p>
</div>
</div>
<div id="outline-container-2-geriatric-software">
<h6 id="2-geriatric-software">2. Geriatric Software</h6>
<div>
<p>
The first public release of GNU emacs happened in 1985.
Literally <i>40 years</i> of development sits inside of emacs and its developers are <b>still</b> adding non-trivial features (native language server support landed in version 29 in 2023).
</p>

<p>
The ecosystem is vast and the language has evolved for a long time.
There's nearly always something useful if you need a particular piece of functionality, so even moreso than with other ecosystems: remember to do your homework first.
</p>
</div>
</div>
<div id="outline-container-3-lisp-for-for-the-un-lisped">
<h6 id="3-lisp-for-for-the-un-lisped">3. Lisp for for the un-Lisped</h6>
<div>
<p>
The syntax is polarizing, I know.
Gurus will wince when I get this wrong, but:
</p>

<ul>
<li>Writing lisp is like writing any other code, just with the parentheses wrapping <i>everything</i> instead of just <i>arguments</i>. <code><span>print</span><span>(</span><span>"Macrodata Refinement"</span><span>)</span></code> becomes <code><span>(</span><span>print</span> <span>"Macrodata Refinement"</span><span>)</span></code></li>
<li>Sometimes you don't get functions, you get macros that behave special ways.
For example, <code><span>let</span></code> sets variables for an inner block of code.
Like this: <code><span>(</span><span>let</span> <span>(</span>name <span>"Mark S."</span><span>)</span> <span>(</span><span>print</span> name<span>)</span><span>)</span></code></li>
<li>Lispers say "this is actually data and not calling code" by doing this with single quotes: <code><span>'</span><span>(</span><span>"list"</span> <span>"of"</span> <span>"strings"</span><span>)</span></code></li>
</ul>

<p>
I'm out of my depth in lisp, but if you're a novice, those notes might help.
</p>
</div>
</div>
</div>
</div>
<div id="outline-container-extensible-macros">
<h4 id="extensible-macros">Extensible MACroS</h4>
<div id="text-extensible-macros">
<p>
With that prelude out of the way, let's begin.
</p>

<p>
Inside of emacs you can call up a list of potential <i>completions</i> by using the keyboard shortcut <kbd>M-.</kbd> (that’s "hit the meta key along with period", where "meta" is the <kbd>Alt</kbd> key for me).
This applies in a wide variety of scenarios, like when completing class names or variables.
If we want to ask emacs to hand us a list of potential references, then the system we want to hook into is this <i>completions</i> system.
</p>

<p>
(This is the only time I'll assume we know where to go without crawling through documentation. You could discover it yourself looking for "<code>completion</code>" or similar string in emacs docs).
</p>

<p>
To start our hero’s journey, we figure out what the hell <kbd>M-.</kbd> actually <i>does</i>.
We can ask emacs this by calling the function <code><span>describe-key</span></code>, which is bound to <kbd>C-h k</kbd>.
Hitting <kbd>Ctrl-h</kbd>, then <kbd>k</kbd>, then <kbd>M-.</kbd> drops us into a help buffer that looks like this:
</p>

<pre id="org6bbb9dc"><code>M-. runs the command completion-at-point (found in</code>
<code>evil-insert-state-map), which is an interactive native-compiled Lisp</code>
<code>function in ‘minibuffer.el’.</code>
<code></code>
<code>It is bound to M-..</code>
<code></code>
<code>(completion-at-point)</code>
<code></code>
<code>Perform completion on the text around point.</code>
<code>The completion method is determined by ‘completion-at-point-functions’.</code>
<code></code>
<code>  Probably introduced at or before Emacs version 23.2.</code>
</pre>

<p>
We have the next breadcrumb to follow, which is the variable <code><span>completion-at-point-functions</span></code>.
Running <code><span>completion-at-point</span></code> by hitting <kbd>M-.</kbd> consults that variable to hand us completion candidates, so we <code><span>describe-variable</span></code> it with <kbd>C-h v</kbd> and then choose <code><span>completion-at-point-functions</span></code> from the list of variables:
</p>

<pre id="org56c73d2"><code>completion-at-point-functions is a variable defined in ‘minibuffer.el’.</code>
<code></code>
<code>Its value is (cape-dict cape-file tags-completion-at-point-function)</code>
<code></code>
<code>Special hook to find the completion table for the entity at point.</code>
<code>Each function on this hook is called in turn without any argument and</code>
<code>should return either nil, meaning it is not applicable at point,</code>
<code>or a function of no arguments to perform completion (discouraged),</code>
<code>or a list of the form (START END COLLECTION . PROPS)</code>
</pre>

<p>
…and it goes on from there.
You can see some existing completion functions in there: I use a package called <a href="https://github.com/minad/cape">cape</a> to offer helpful suggestions like file paths if I start typing in something like <code>./filename</code>.
</p>

<p>
The description for this variable instructs us about how to add our own functions (scary!)
You’ll note that emacs calls this a "hook", which is most often just a term used to describe a variable that is a list of functions that get called at a specific time (hooks show up everywhere).
</p>

<p>
I elided the full description for <code><span>completion-at-point-functions</span></code> – which is lengthy! – but if you parse it all out, you learn the following:
</p>

<ul>
<li>Your completion at point function should return either <code>nil</code> (the elisp "null") – which means your completion function doesn’t apply right now – or another function (which emacs discourages), or a list, which is what we’ll do because it sounds like the most-correct thing to do.</li>
<li>The list we return is <code><span>(</span>START END COLLECTION . PROPS<span>)</span></code>:
<ul>
<li><code>START</code> and <code>END</code> should be positions in the buffer between which emacs will replace the completed symbol with our candidate.
That is, if your cursor is calling a method on a Python object like <code>file.ope|</code> (where the bar is your cursor), emacs will replace just <code>ope</code> when you select <code>open</code> from a list of completions and not the entire <code>file.ope</code> string.</li>
<li><code>COLLECTION</code> is the juicy bit. The documentation calls it a completion "table", and there’s probably hidden meaning there, but you can just return a list of candidates and move on with your day, which is what I'll do.</li>
</ul></li>
</ul>

<p>
Okay, so we need to write something to find the bounds of a string to replace and a function that returns that list.
</p>
</div>
<div id="outline-container-completions-abound">
<h5 id="completions-abound">Completions Abound</h5>
<div id="text-completions-abound">
<p>
I fooled around with some regular expressions for a while until I did the <i>right</i> thing and examined how other completion backends do it.
If you have the package installed, the aforementioned <code><span>cape-file</span></code> function gives us a hint: hit <kbd>M-x</kbd>, then choose <code><span>find-function</span></code>, select <code><span>cape-file</span></code>, and poke around. You’ll find the use of a function called <code><span>bounds-of-thing-at-point</span></code>.
Describing it with <kbd>C-h f</kbd> <code><span>bounds-of-thing-at-point</span></code> gives us:
</p>

<pre id="orgdb3711b"><code>Determine the start and end buffer locations for the THING at point.</code>
<code>THING should be a symbol specifying a type of syntactic entity.</code>
<code>Possibilities include ‘symbol’, ‘list’, ‘sexp’, ‘defun’, ‘number’,</code>
<code>‘filename’, ‘url’, ‘email’, ‘uuid’, ‘word’, ‘sentence’, ‘whitespace’,</code>
<code>‘line’, and ‘page’.</code>
</pre>

<p>
And <i>that</i> is useful for our <code>START</code> and <code>END</code> needs.
You can take it for a test drive at any time with <kbd>M-:</kbd> <code><span>(</span><span>bounds-of-thing-at-point</span> <span>'</span><span>word</span><span>)</span></code> to see where emacs thinks the <i>word</i> at your cursor starts and ends.
This is a common theme when developing elisp: try out functions all the time within the editor since they’re near at hand.
</p>

<p>
The argument to <code><span>bounds-of-thing-at-point</span></code> is a symbol for a literal <i>thing</i> that is predefined by the function <code><span>define-thing-chars</span></code>.
We pass <code><span>define-thing-chars</span></code> a name for our "thing" and a regex, and we can call <code><span>bounds-of-thing-at-point</span></code> with it from that point on.
The function documentation in <code>thingatpt.el</code> that emacs refers you to explains more if you’re interested.
</p>

<p>
<code><span>define-thing-chars</span></code> expects a string with characters to put into a regex character class (like <code>[...]</code>) - just any valid character.
This is a pretty standard character class and we can start with something super simple.
I can’t be bothered to look up whatever the reStructedText spec is for references, but let’s start with "word characters, dashes, and underscores".
That expressed as a "thing" looks like this:
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font used to highlight strings.</span></li>
<li><span>Font used to highlight keywords.</span></li></ul></div><div>
<pre><code><span>(</span><span>define-thing-chars</span> rst-ref <span>"[:alpha:]_-"</span><span>)</span></code>
</pre>
</div>

<p>
Now we have a <i>thing</i> called <code>rst-ref</code> we can use with <code><span>bounds-of-thing-at-point</span></code>.
In typical emacs fashion, we can run elisp ad-hoc in our editor just to tinker, so let’s do that now.
</p>

<p>
Remember: we’re trying to write a function to give us the <code>start</code> and <code>end</code> of whatever piece of text we intend for a completion to replace.
Let’s try it out: in any sort of buffer, put a piece of fake <code>.rst</code> text with a reference, like this:
</p>

<p><span><span>ReST</span></span></p><div><ul><li><span>Font used for field names and interpreted text.</span></li>
<li><span>Font used for directives and roles.</span></li></ul></div><div>
<pre><code>This is a <span>:ref:</span><span>`other-reference`</span>.</code>
</pre>
</div>

<p>
Place your point somewhere within "<code>other-reference</code>" and try out your <code>thing</code>:
</p>

<p>
<kbd>M-:</kbd> <code><span>(</span><span>bounds-of-thing-at-point</span> <span>'</span><span>rst-ref</span><span>)</span></code>
</p>

<p>
You’ll see something like <code><span>(</span>number . number<span>)</span></code> in the echo area (the little minibuffer at the bottom of the emacs window frame).
Congratulations!
We’ve got the first part of the problem solved.
</p>
</div>
</div>
</div>
<div id="outline-container-gathering-completions">
<h4 id="gathering-completions">Gathering Completions</h4>
<div id="text-gathering-completions">
<p>
Recall the structure of what our "completion backend" needs to return to emacs:
</p>

<p><span><span>ELisp</span></span></p><div>
<pre><code><span>(</span>START END COLLECTION . PROPS<span>)</span></code>
</pre>
</div>

<p>
We can construct <code>START</code> and <code>END</code> with <code><span>bounds-of-thing-at-point</span></code>, now we just need <code>COLLECTION</code>, which is a list of potential candidates.
</p>

<p>
Conceptually the task isn’t hard: we should find all instances of strings of the form:
</p>

<p><span><span>ReST</span></span></p><div><ul><li><span>Font used for all other defining constructs.</span></li></ul></div>

<p>
in our document and capture <code>my-reference</code>.
Where do we start?
</p>

<p>
Once again you can rely on discovery mechanisms like searching for functions that <i>sound</i> related (by browsing <code><span>describe-function</span></code>) or look at existing code.
Personally, I found this:
</p>

<pre id="orge9859ee"><code>(re-search-forward REGEXP &amp;optional BOUND NOERROR COUNT)</code>
<code></code>
<code>Search forward from point for regular expression REGEXP.</code>
</pre>

<p>
The documentation refers you to some other related functions, like this one:
</p>

<pre id="org335f041"><code>(match-beginning SUBEXP)</code>
<code></code>
<code>Return position of start of text matched by last search.</code>
<code>SUBEXP, a number, specifies which parenthesized expression in the last</code>
<code>regexp.</code>
</pre>

<p>
So we can <code><span>(</span><span>re-search-forward</span><span>)</span></code> for something then invoke <code><span>(</span><span>match-beginning</span> 1<span>)</span></code>, for example, if we used a regex capture group to grab the reference’s label.
Cool: we can start there.
</p>

<p>
As you get deeper into elisp you’ll find that regular expressions are <i>everywhere</i>, and this case is no different.
We need a solid regex to search through a reStructuredText buffer (and honor any quirks in emacs’ regular expression engine), so we’ll use this opportunity to kick the tires on <i>interactively</i> developing regular expressions in emacs.
</p>
</div>
<div id="outline-container-regexes">
<h5 id="regexes">Regexes</h5>
<div id="text-regexes">
<p>
Geriatric millennial software engineers like myself grew up on <a href="https://regexr.com/">https://regexr.com/</a> when it was still a Flash application.
Unless you’re a masochist that lives and breathes regular expressions, it’s kind of hard to develop a good regex without live feedback, which sites like <a href="https://regexr.com/">https://regexr.com/</a> provide.
</p>

<p>
Little did I know that emacs comes with its own live regular expression builder and it's goooood.
</p>

<p>
Within any emacs buffer, run <kbd>M-x</kbd> <code><span>re-builder</span></code> to open the regex builder window split alongside the current buffer.
If I then enter the string <code><span>"re-</span><span><span>\\</span></span><span><span>(</span></span><span>builder</span><span><span>\\</span></span><span><span>)</span></span><span>"</span></code> into that buffer, that string a) gets highlighted in my original buffer and b) the capture group gets highlighted in its own unique group color.
</p>

<p>
You can do this all day long to fine-tune a regular expression, but there’s yet <i>another</i> trick when writing regular expressions, which is to use the <code><span>rx</span></code> macro.
</p>

<p>
My previous example regular expression <code><span>"re-</span><span><span>\\</span></span><span><span>(</span></span><span>builder</span><span><span>\\</span></span><span><span>)</span></span><span>"</span></code> works, but the quirks when writing emacs regular expressions pile up quickly: escaping characters is one example but there are more, too.
</p>

<p>
Instead, the <code><span>rx</span></code> macro will let you define a regular expression in lisp-y form and evaluate it into a typical string-based regular expression you can use normally, so it works any place emacs expects a string-based regular expression.
For example, if you evaluate this with <kbd>M-:</kbd>:
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font used to highlight strings.</span></li>
<li><span>Font used to highlight keywords.</span></li></ul></div><div>
<pre><code><span>(</span><span>rx</span> <span>"re-"</span> <span>(</span>group <span>"builder"</span><span>)</span><span>)</span></code>
</pre>
</div>

<p>
This is what emacs returns:
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font for backslashes in Lisp regexp grouping constructs.</span></li>
<li><span>Font used to highlight strings.</span></li></ul></div>

<p>
Identical!
The <a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Rx-Constructs.html"><code>rx</code> documentation</a> explains all the constructs available to you.
</p>

<p>
Jumping back to <code><span>re-builder</span></code>, with the <code><span>re-builder</span></code> window active, invoke <kbd>M-x</kbd> <code>reb-change-syntax</code> and choose <code><span>rx</span></code>.
Now you can interactively build regular expressions with the <code><span>rx</span></code> macro!
In the <code><span>re-builder</span></code> window, you’ve got to enter a weird syntax to get it to take <code><span>rx</span></code> constructs (I’m… not sure why this is), but you end up with the same outcome:
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font used to highlight strings.</span></li></ul></div><div>
<pre><code><span>'</span><span>(</span><span>:</span> <span>"re-"</span> <span>(</span>group <span>"builder"</span><span>)</span><span>)</span></code>
</pre>
</div>

<p>
Watch the regex get highlighted live just as it was in the string-based regex mode.
</p>

<p>
To bring this full circle, hop into a buffer with an example <code>.rst</code> document like this one:
</p>

<p><span><span>ReST</span></span></p><div><ul><li><span>Font used for all other defining constructs.</span></li>
<li><span>Font used for the adornment of a section header.</span></li>
<li><span>Default font for section title text at level 1.</span></li></ul></div><div>
<pre><code><span>A Heading</span></code>
<code><span>=========</span></code>
<code></code>
<code><span>.. _my-reference:</span></code>
<code></code>
<code>Link to me!</code>
</pre>
</div>

<p>
Using our newfound <code><span>re-builder</span></code> knowledge, let’s build a regex interactively to make short work of it:
</p>

<ul>
<li>Invoke <kbd>M-x</kbd> <code><span>re-builder</span></code></li>
<li>Change the engine to something easier with <kbd>M-x</kbd> <code>reb-change-syntax</code> and choose <code><span>rx</span></code></li>
<li>Start trying out solutions</li>
</ul>

<p>
I’ll refer here to the <a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Rx-Constructs.html">rx constructs documentation</a> which lists out all the possibilities that you can plug into the <code><span>rx</span></code> macro.
Here’s a recorded example of what developing it looks like from start to finish, ending up with a functional <code><span>rx</span></code> construct:
</p>



<p>
Live-highlighting regex development.
Nice.
If you add more groups, more colors show up.
In this example the <a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Rx-Constructs.html">rx constructs</a> I’m using are:
</p>

<ul>
<li>Any strings end up as literal matches</li>
<li>Special symbols <code>bol</code> and <code>eol</code> for "beginning of line" and "end of line", respectively</li>
<li>Symbols like <code>+</code> behave like their regex counterparts ("at least one")</li>
<li>Some symbols like <code>not</code> are nice little shortcuts (in this case, to negate the next form)</li>
</ul>

<p>
Because <code><span>rx</span></code> is a macro, we don’t ever actually <i>need</i> to compile its regular expressions to use elsewhere - we can always just use <code><span>rx</span></code> when we need a regex.
</p>
</div>
</div>
</div>
<div id="outline-container-gathering-completions-continued">
<h4 id="gathering-completions-continued">Gathering Completions: Continued</h4>
<div id="text-gathering-completions-continued">
<p>
Okay, we've cut our teeth on emacs regular expressions.
Let's use 'em.
(Not our teeth. Regexes.)
</p>

<p>
To start, let's save our reStructuredText regular expression to find a <code>ref</code> so we can easily grab it later.
I'll save the one I came up with to the name <code>tmp/re</code> (this name is arbitrary, I drop temporary variables into <code>tmp/&lt;name&gt;</code> out of habit)
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font used to highlight built-in function names.</span></li>
<li><span>Font used to highlight strings.</span></li>
<li><span>Font used to highlight keywords.</span></li></ul></div><div>
<pre><code><span>(</span><span>setq</span> tmp/re <span>(</span><span>rx</span> bol <span>".."</span> <span>(</span><span>+</span> blank<span>)</span> <span>"_"</span> <span>(</span>group <span>(</span><span>+</span> <span>(</span><span>not</span> <span>":"</span><span>)</span><span>)</span><span>)</span> <span>":"</span> eol<span>)</span><span>)</span></code>
</pre>
</div>

<p>
Now we can reference it easily.
I mentioned before that <code><span>re-search-forward</span></code> accepts a regex, so let's hop into a reStructuredText rev up the regex.
</p>

<p>
Here's my sample text that I'll work with:
</p>

<p><span><span>ReST</span></span></p><div><ul><li><span>Font used for directives and roles.</span></li>
<li><span>Font used for all other defining constructs.</span></li>
<li><span>Font used for the adornment of a section header.</span></li>
<li><span>Default font for section title text at level 1.</span></li></ul></div><div>
<pre><code><span>A Title</span></code>
<code><span>=======</span></code>
<code></code>
<code>Beware the Jabberwock, my son.</code>
<code></code>
<code><span>.. _my-reference:</span></code>
<code></code>
<code>You are like a little baby. Watch this.</code>
<code></code>
<code><span>.. _code-sample:</span></code>
<code></code>
<code><span>.. code::</span> python</code>
<code></code>
<code>   print("emacs needs telemetry")</code>
<code></code>
<code>The end?</code>
</pre>
</div>

<p>
The <code><span>re-search-forward</span></code> documentation indicates that it starts at the <code>point</code>'s current position, so head to the start of the buffer, hit <kbd>M-:</kbd> to enter the elisp <code>Eval</code> prompt, and try:
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font used to highlight built-in function names.</span></li></ul></div><div>
<pre><code><span>(</span><span>re-search-forward</span> tmp/re<span>)</span></code>
</pre>
</div>

<p>
This is anticlimactic because you'll just see the point move to the end of one of the references.
BUT.
This means that the search succeeded.
So… what now?
</p>

<p>
More reading in the <code><span>re-search-forward</span></code> documentation will educate you about emacs <i>global match data</i>.
In non-functional-programming style, functions like <code><span>match-beginning</span></code> and <code><span>match-end</span></code> serve to interrogate a global state that functions like <code><span>re-search-forward</span></code> will modify.
In concise terms, our regular expression defines one match group and we can grab it with <code><span>(</span><span>match-string-no-properties</span> 1<span>)</span></code> to get the first group match (<code><span>match-string</span></code> will return a string with "properties", which is a bunch of data like font styling that we don't want).
</p>

<p>
Within our example buffer, executing this after the regex search should return our match:
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font used to highlight function names.</span></li></ul></div><div>
<pre><code><span>(</span><span>match-string-no-properties</span> 1<span>)</span></code>
</pre>
</div>

<p>
I see <code>"my-reference"</code> from this command.
Now we're cooking like it's 1985, baby.
You can enter the minibuffer again with <kbd>M-:</kbd>, press <kbd>↑</kbd> to find the <code><span>re-search-forward</span></code> command again, and repeat this process again to watch the point move to the next match, after which you can see the matched string with <code><span>match-string-no-properties</span></code>.
</p>

<p>
Note that running this a few times will eventually error out after no matches exist past your point.
We'll address this.
</p>

<p>
If you're a human (or Claude) at this point, you can see the path ahead – we need to write some elisp that will:
</p>

<ul>
<li>Move the point to the beginning of the buffer (important, remember that <code><span>re-search-forward</span></code> relies upon the current position of your point)</li>
<li>Iteratively execute an <code><span>re-search-forward</span></code> command to aggregate reference targets</li>
<li>Conclude when there aren't any more matches</li>
</ul>

<p>
I'll start with the code and then explain which demons the parentheses are summoning afterward:
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font used to highlight function names.</span></li>
<li><span>Font used to highlight strings.</span></li>
<li><span>Font used to highlight special form names.</span></li>
<li><span>Font used to highlight built-in function names.</span></li>
<li><span>Font used to highlight keywords.</span></li>
<li></li>
<li></li></ul></div><div>
<pre><code><span>;; </span><span>This function will save the current position of the cursor and then</span></code>
<code><span>;; </span><span>return it to this position once the code that it wraps has finished</span></code>
<code><span>;; </span><span>executing, which lets us hop around the buffer without driving the</span></code>
<code><span>;; </span><span>programmer insane. Important for any functions that move the point</span></code>
<code><span>;; </span><span>around.</span></code>
<code><span>(</span><span>save-excursion</span></code>
<code>  <span>;; </span><span>progn is a simple function that just executes each lisp form</span></code>
<code>  <span>;; </span><span>step-by-step.</span></code>
<code>  <span>(</span><span>progn</span></code>
<code>    <span>;; </span><span>Step one: go to the beginning of the buffer.</span></code>
<code>    <span>(</span><span>goto-char</span> <span>(</span><span>point-min</span><span>)</span><span>)</span></code>
<code>    <span>;; </span><span>Step two: loop</span></code>
<code>    <span>;;</span><span></span></code>
<code>    <span>;; </span><span>cl-loop is a macro with a long and venerable heritage stemming</span></code>
<code>    <span>;; </span><span>from the common lisp family of macros, which it mimics the</span></code>
<code>    <span>;; </span><span>behavior of. You could spend hours honing your ability to wield</span></code>
<code>    <span>;; </span><span>the common lisp `loop` macro, but we'll just explain the parts</span></code>
<code>    <span>;; </span><span>we're using:</span></code>
<code>    <span>;;</span><span></span></code>
<code>    <span>;; </span><span>`while` runs the loop until its argument evalutates to a falsy</span></code>
<code>    <span>;; </span><span>value. We can overload our use of `re-search-forward` here: we</span></code>
<code>    <span>;; </span><span>can use it to step our loop forward each time and also rely</span></code>
<code>    <span>;; </span><span>upon it returning `nil` once it stops matching substrings in</span></code>
<code>    <span>;; </span><span>the buffer and we should finish up.</span></code>
<code>    <span>(</span><span>cl-loop</span> <span>while</span> <span>(</span><span>re-search-forward</span></code>
<code>                    <span>(</span><span>rx</span> bol <span>".."</span> <span>(</span><span>+</span> blank<span>)</span> <span>"_"</span> <span>(</span>group <span>(</span><span>+</span> <span>(</span><span>not</span> <span>":"</span><span>)</span><span>)</span><span>)</span> <span>":"</span> eol<span>)</span></code>
<code>                    <span>;; </span><span>The aforementioned `while` termination case</span></code>
<code>                    <span>;; </span><span>relies upon this `t` parameter, which says</span></code>
<code>                    <span>;; </span><span>"don't error out with no matches, just return</span></code>
<code>                    <span>;; </span><span>nil". Once no more matches are found, the loop</span></code>
<code>                    <span>;; </span><span>exits.</span></code>
<code>                    nil <span>t</span><span>)</span></code>
<code>             <span>;; </span><span>The `collect` keyword instructs `cl-loop` how to form</span></code>
<code>             <span>;; </span><span>its return value. We can helpfully summarize the regex</span></code>
<code>             <span>;; </span><span>match item by pulling out the global match data.</span></code>
<code>             collect <span>(</span><span>match-string-no-properties</span> 1<span>)</span><span>)</span><span>)</span><span>)</span></code>
</pre>
</div>

<p>
The code is less intimidating without comments:
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font used to highlight function names.</span></li>
<li><span>Font used to highlight strings.</span></li>
<li><span>Font used to highlight special form names.</span></li>
<li><span>Font used to highlight built-in function names.</span></li>
<li><span>Font used to highlight keywords.</span></li></ul></div><div>
<pre><code><span>(</span><span>save-excursion</span></code>
<code>  <span>(</span><span>progn</span></code>
<code>    <span>(</span><span>goto-char</span> <span>(</span><span>point-min</span><span>)</span><span>)</span></code>
<code>    <span>(</span><span>cl-loop</span> <span>while</span> <span>(</span><span>re-search-forward</span></code>
<code>                    <span>(</span><span>rx</span> bol <span>".."</span> <span>(</span><span>+</span> blank<span>)</span> <span>"_"</span> <span>(</span>group <span>(</span><span>+</span> <span>(</span><span>not</span> <span>":"</span><span>)</span><span>)</span><span>)</span> <span>":"</span> eol<span>)</span></code>
<code>                    nil <span>t</span><span>)</span></code>
<code>             collect <span>(</span><span>match-string-no-properties</span> 1<span>)</span><span>)</span><span>)</span><span>)</span></code>
</pre>
</div>

<p>
Without belaboring the point, you can – like I did – discover most of these functions by skimming existing elisp code and using it as a launch pad.
Many of these functions are bog standard and show up all over the place in emacs packages (<code><span>save-excursion</span></code>, <code><span>progn</span></code>, <code><span>goto-char</span></code>…)
</p>

<p>
Here's the result when I run this code against our example <code>.rst</code> file:
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font used to highlight strings.</span></li></ul></div><div>
<pre><code><span>(</span><span>"my-reference"</span> <span>"code-sample"</span><span>)</span></code>
</pre>
</div>

<p>
Looks good!
</p>
</div>
</div>
<div id="outline-container-completing-the-completion-backend">
<h4 id="completing-the-completion-backend">Completing the Completion Backend</h4>
<div id="text-completing-the-completion-backend">
<p>
We're now armed with the ability to:
</p>

<ul>
<li>Identify the bounds of the string we want to replace, and</li>
<li>Collect a list of targets for completion candidates</li>
</ul>

<p>
We are <i>so close</i>.
Recall the description of the variable we need to modify:
</p>

<pre id="orgb0e2210"><code>completion-at-point-functions is a variable defined in ‘minibuffer.el’.</code>
<code></code>
<code>Its value is (cape-dict cape-file tags-completion-at-point-function)</code>
<code></code>
<code>Special hook to find the completion table for the entity at point.</code>
<code>Each function on this hook is called in turn without any argument and</code>
<code>should return either nil, meaning it is not applicable at point,</code>
<code>or a function of no arguments to perform completion (discouraged),</code>
<code>or a list of the form (START END COLLECTION . PROPS)</code>
</pre>

<p>
To return the list that <code><span>completion-at-point-functions</span></code> expects, we already have the ability to identify the bounds of a <code>thing</code> and sweep up a list of candidates in our buffer.
Note the comment about returning <code>nil</code>: we probably don't <i>always</i> want to run our backend, so we should short-circuit our function to eagerly return nil to avoid tying up emacs with a regex loop we don't need.
</p>

<p>
With all that said, <a href="https://en.wikipedia.org/wiki/Bill_Nye">consider the following</a>:
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font used to highlight special form names.</span></li>
<li><span>Font to highlight quoted Lisp symbols.</span></li>
<li><span>Font used to highlight built-in function names.</span></li>
<li><span>Font used to highlight function names.</span></li>
<li><span>Font used to highlight documentation embedded in program code.
It is typically used for special documentation comments or strings.</span></li>
<li><span>Font used to highlight function names.</span></li>
<li><span>Font used to highlight strings.</span></li>
<li><span>Font used to highlight keywords.</span></li>
<li></li>
<li></li></ul></div><div>
<pre><code><span>;; </span><span>Our reStructuredText reference "thing"</span></code>
<code><span>(</span><span>define-thing-chars</span> rst-ref <span>"[:alpha:]_-"</span><span>)</span></code>
<code></code>
<code><span>(</span><span>defun</span> <span>my/rst-internal-reference-capf</span> <span>()</span></code>
<code>  <span>"Completion backend for buffer reStructuredText references"</span></code>
<code>  <span>;; </span><span>Only applies when we're within a reference - outside of a</span></code>
<code>  <span>;; </span><span>reference, we bail out with nil.</span></code>
<code>  <span>(</span><span>when</span> <span>(</span><span>looking-back</span> <span>(</span><span>rx</span> <span>":ref:`"</span> <span>(</span><span>*</span> <span>(</span><span>not</span> <span>"`"</span><span>)</span><span>)</span><span>)</span> <span>(</span><span>point-at-bol</span><span>)</span><span>)</span></code>
<code>    <span>;; </span><span>Get potential bounds for the string to replace</span></code>
<code>    <span>(</span><span>let*</span> <span>(</span><span>(</span>bounds <span>(</span><span>or</span> <span>(</span><span>bounds-of-thing-at-point</span> <span>'</span><span>rst-ref</span><span>)</span></code>
<code>                       <span>;; </span><span>Fallback to the current position</span></code>
<code>                       <span>(</span><span>cons</span> <span>(</span><span>point</span><span>)</span> <span>(</span><span>point</span><span>)</span><span>)</span><span>)</span><span>)</span></code>
<code>           <span>(</span>start <span>(</span><span>car</span> bounds<span>)</span><span>)</span></code>
<code>           <span>(</span>end <span>(</span><span>cdr</span> bounds<span>)</span><span>)</span></code>
<code>           <span>;; </span><span>Collect all reference candidates</span></code>
<code>           <span>(</span>candidates</code>
<code>            <span>;; </span><span>Our previously-noted reference collector</span></code>
<code>            <span>(</span><span>save-excursion</span></code>
<code>              <span>(</span><span>progn</span></code>
<code>                <span>(</span><span>goto-char</span> <span>(</span><span>point-min</span><span>)</span><span>)</span></code>
<code>                <span>(</span><span>cl-loop</span> <span>while</span> <span>(</span><span>re-search-forward</span></code>
<code>                                <span>(</span><span>rx</span> bol <span>".."</span> <span>(</span><span>+</span> blank<span>)</span> <span>"_"</span> <span>(</span>group <span>(</span><span>+</span> <span>(</span><span>not</span> <span>":"</span><span>)</span><span>)</span><span>)</span> <span>":"</span> eol<span>)</span></code>
<code>                                nil <span>t</span><span>)</span></code>
<code>                         collect <span>(</span><span>match-string-no-properties</span> 1<span>)</span><span>)</span><span>)</span><span>)</span><span>)</span><span>)</span></code>
<code>      <span>;; </span><span>Return value suitable for `completion-at-point-functions`</span></code>
<code>      <span>(</span><span>list</span> start end candidates<span>)</span><span>)</span><span>)</span><span>)</span></code>
</pre>
</div>

<ul>
<li>We're following some naming conventions by calling this a "<code>capf</code>" (a "completion-at-point function) and prefixing with <code>my/</code> (a habit to namespace your own functions)</li>
<li>Our short-circuit takes the form of using <code><span>looking-back</span></code> to ask, "are we inside of a reStructuredText reference"?
Note the use of <code><span>rx</span></code> here again to clean up our lisp.</li>
<li>We use our <code>rst-ref</code> <code>thing</code> to easily snag the <code>start</code> and <code>end</code> of the string to replace – note our fallback to <i>just</i> the immediate point if we can't find the bounds of our <code>thing</code>.</li>
</ul>

<p>
We wrap it all up with <code>list</code>.
Personally, even as somebody relatively new to writing Lisps, I find the code pleasant to read and self-evident.
We did a lot in 17 lines of code!
</p>

<p>
Inside of our test <code>.rst</code> buffer, we can test drive this function.
First, invoke <kbd>M-x</kbd> <code><span>eval-defun</span></code> with your cursor somewhere in the function to evaluate it, which makes <code>my/rst-internal-reference-capf</code> available.
Then run:
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font to highlight quoted Lisp symbols.</span></li>
<li><span>Font used to highlight variable names.</span></li>
<li><span>Font used to highlight function names.</span></li></ul></div><div>
<pre><code><span>(</span><span>add-hook</span> <span>'</span><span>completion-at-point-functions</span> <span>'</span><span>my/rst-internal-reference-capf</span><span>)</span></code>
</pre>
</div>

<p>
Huzzah!
Our function is now live in emacs' completion framework.
You can trigger the completion by calling <code>completion-at-point</code> at a relevant spot in a buffer.
Many batteries-included emacs distributions like spacemacs or doom emacs slap nice-looking porcelain on top of the completion framework; here's an example that uses the <a href="https://github.com/minad/corfu">corfu</a> package:
</p>



<p>
Congratulations, you've extended emacs for the first time!
</p>
</div>
</div>
<div id="outline-container-dressing-up-the-bones">
<h4 id="dressing-up-the-bones">Dressing Up the Bones</h4>
<p>
Okay, this is a pretty basic setup.
You could improve it in <i>many</i> ways, but here are a few ideas about potential directions:
</p>
<div id="outline-container-mode-hooks">
<h5 id="mode-hooks">Mode Hooks</h5>
<div id="text-mode-hooks">
<p>
Manually adding your custom completion function to the <code><span>completion-at-point-functions</span></code> hook is tedious, but there's a way to automate it.
Recall that in emacs parlance, a "hook" is usually a <i>variable</i> that holds a <i>list of functions</i> that get called at a <i>specific time</i>.
</p>

<p>
If you use <a href="https://docutils.sourceforge.io/docs/user/emacs.html">rst-mode</a>, then opening an <code>.rst</code> file will drop you into <code><span>rst-mode</span></code> and implicitly call the <code><span>rst-mode-hook</span></code> functions.
That means that this line is sufficient to integrate our completion function:
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font to highlight quoted Lisp symbols.</span></li>
<li><span>Font to highlight Lisp quotes.</span></li>
<li><span>Font used to highlight keywords.</span></li>
<li><span>Font used to highlight variable names.</span></li>
<li><span>Font used to highlight function names.</span></li></ul></div><div>
<pre><code><span>(</span><span>add-hook</span> <span>'</span><span>rst-mode-hook</span> <span>(</span><span>lambda</span> <span>()</span> </code>
<code>    <span>(</span><span>add-hook</span> <span>'</span><span>completion-at-point-functions</span>  <span>#'</span><span>my/rst-internal-reference-capf</span> 0 <span>t</span><span>)</span><span>)</span><span>)</span></code>
</pre>
</div>

<p>
This says: "when I open an <code>.rst</code> file, run this lambda that modifies <code><span>completion-at-point-functions</span></code> <i>only</i> for this buffer by adding my internal reference completion function".
It's a little nested which makes it less obvious with the two <code>add-hook</code> calls.
</p>
</div>
</div>
<div id="outline-container-other-files">
<h5 id="other-files">Other Files</h5>
<div id="text-other-files">
<p>
Okay, our example works for references in the <i>same buffer</i> but this is sort of pointless for uses <i>across</i> files.
</p>

<p>
You can solve this too, although my post is already too long so we won't solve this step-by-step.
However, here's how <i>I</i> solved it:
</p>

<ul>
<li>Turn my <code>capf</code> into a minor mode that manages the completion variables</li>
<li>Doesn't search the buffer every time but instead does so once and then rebuilds it with a hook in <code><span>after-change-functions</span></code>, saving it to a hash cache</li>
<li>Walk all <code>.rst</code> files in the current project and run the reference collection function for each, storing the results into a hash cache for all files that don't have live buffers</li>
<li>When it comes time to call the completion function, combine the hash for completions for files without buffers along with each <code>.rst</code> buffer's cached list of references</li>
</ul>

<p>
It sounds complicated, but it works!
Functions like <code><span>with-temp-buffer</span></code> make this pretty easy by aggregating reference targets for files using the exact same function we do for live buffers.
</p>

<p><span><span>ELisp</span></span></p><div><ul><li><span>Font used to highlight built-in function names.</span></li>
<li><span>Font used to highlight keywords.</span></li></ul></div><div>
<pre><code><span>(</span><span>with-temp-buffer</span></code>
<code>  <span>(</span><span>insert-file-contents</span> file<span>)</span></code>
<code>  <span>(</span>my/rst-internal-references<span>)</span><span>)</span></code>
</pre>
</div>
</div>
</div>
<div id="outline-container-fancy-completion">
<h5 id="fancy-completion">Fancy Completion</h5>
<div id="text-fancy-completion">
<p>
Emacs' long history includes <a href="https://company-mode.github.io/">company-mode</a>, which is a third-party completion framework that integrates with the <code><span>completion-at-point</span></code> set of functions.
Some <code><span>company-mode</span></code> features include additional metadata about completion candidates, and I found two that were useful: <code>company-kind</code> and <code>company-doc-buffer</code>.
</p>

<ul>
<li><code>company-kind</code> is a simple key that just tells the completion caller what the completion cadidate <i>is</i>.
In our case we can add some eye candy by indicating it's <code><span>'</span><span>text</span></code>.</li>
<li><code>company-doc-buffer</code> lets us add additional context to a completion candidate.
I leveraged this to include a couple of lines following the reference line to help me figure out what exactly the link refers to.
It's easier to show what this looks like rather than tell:</li>
</ul>



<p>
Notes:
</p>

<ul>
<li>I'm using GUI emacs here for the nicer completion popup with <a href="https://github.com/minad/corfu">corfu</a> which displays a transparent, floating frame</li>
<li>My completion candidate "context" is a real excerpt from the text around the reference, complete with styling, etc.</li>
<li>The small icon to the left of each candidate comes from the <code>company-kind</code> attribute.</li>
<li>The <code>~</code> syntax is part of <a href="https://github.com/oantolin/orderless">orderless</a></li>
</ul>

<p>
Completion candidate context is an extra frill but very helpful.
</p>
</div>
</div>
</div>
<div id="outline-container-summary">
<h4 id="summary">Summary</h4>
<p>
My experience extending a core emacs function was an instructive and interesting exercise.
I don't know what the future of emacs looks like in an increasingly LLM-crazed world, but I hope that future includes an open and powerful way to extend and customize the tools we use to write software.
</p>
</div>


<hr>



<hr>







        </section>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Crates.io phishing attempt (148 pts)]]></title>
            <link>https://fasterthanli.me/articles/crates-io-phishing-attempt</link>
            <guid>45222772</guid>
            <pubDate>Fri, 12 Sep 2025 14:50:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fasterthanli.me/articles/crates-io-phishing-attempt">https://fasterthanli.me/articles/crates-io-phishing-attempt</a>, See on <a href="https://news.ycombinator.com/item?id=45222772">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

  
    
    

    
    

    

    

    
    

    
    
     
     

    
        
<p id="sponsor-list">
    Thanks to my sponsors:
    <span id="visible-sponsors">
    
    Lena Schönburg, Kevin Nguyen, Aiden Scandella, Brian L. Troutwine, Yufan Lou, Dirkjan Ochtman, Santiago Lema, Geoffrey Thomas, Radu Matei, Samit Basu, Justy, Tanner Muro, Seth, Geoff Cant, Simon Menke, psentee, Bob Ippolito, Philipp Gniewosz, Enrico Zschemisch, Andrew Henshaw
        and <a href="#" id="show-all-sponsors"><span id="more-sponsors-count">279</span> more</a>
    
    </span>
    

    
</p>



     

    

    
    



    

    

    

    <p data-bo="160">Earlier this week, an <a href="https://fasterthanli.me/articles/color-npm-package-compromised">npm supply chain attack</a>.</p>

<p data-bo="251">It’s turn for <a href="https://crates.io/">crates.io</a>, the main public repository for <a href="https://rust-lang.org/">Rust</a>
crates (packages).</p>

<p data-bo="378">The phishing e-mail looks like this:</p>

<figure data-bo="416"><picture><source type="image/jxl" media="(max-width: 400px)" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/phishing-email~13b1cc912a064403.w400.jxl 1x"><source type="image/jxl" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/phishing-email~052f360399d29116.jxl 1x,https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/phishing-email~052f360399d29116.jxl 2x"><source type="image/avif" media="(max-width: 400px)" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/phishing-email~0965dc15bd5795cf.w400.avif 1x"><source type="image/avif" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/phishing-email~4adc3538b38cd5d0.avif 1x,https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/phishing-email~4adc3538b38cd5d0.avif 2x"><source type="image/webp" media="(max-width: 400px)" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/phishing-email~569c8ebc7740ee8f.w400.webp 1x"><source type="image/webp" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/phishing-email~f5f81e8409287a73.webp 1x,https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/phishing-email~f5f81e8409287a73.webp 2x"><img src="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/phishing-email~052f360399d29116.jxl" loading="lazy" width="708" height="653" data-kind="media" data-input-path="/content/articles/crates-io-phishing-attempt/phishing-email.jxl" title="" alt="A phishing e-mail: Important: Breach notification regarding crates.io  Hi, BurntSushi! We recently discovered that an unauthorized actor had compromised the crates.io infrastructure and accessed a limited amount of user information. The attacker's access was revoked, and we are currently reviewing our security posture. We are currently drafting a blog post to outline the timeline and the steps we took to mitigate this. In the meantime, we strongly suggest you to rotate your login info by signing in here to our internal SSO, which is a temporary fix to ensure that the attacker cannot modify any packages published by you. "></picture><figcaption><cite><a href="https://bsky.app/profile/burntsushi.net/post/3lynehptw6c2n">Andrew Gallant on BlueSky
</a></cite></figcaption>
</figure><p data-bo="1262">And it leads to a GitHub login page that looks like this:</p>

<figure data-bo="1321"><picture><source type="image/jxl" media="(max-width: 400px)" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~f39542ca9ae9f0c3.w400.jxl 1x,https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~5429425a2625794b.w800.jxl 2x"><source type="image/jxl" media="(max-width: 900px)" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~ff6053b5d2562aeb.w900.jxl 1x"><source type="image/jxl" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~e78524d35ede5efb.jxl 1x,https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~e78524d35ede5efb.jxl 2x"><source type="image/avif" media="(max-width: 400px)" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~de116d2a77f034de.w400.avif 1x,https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~e4d40b2fbaa0c23e.w800.avif 2x"><source type="image/avif" media="(max-width: 900px)" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~5f55c6d615078899.w900.avif 1x"><source type="image/avif" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~f28292ec85f76009.avif 1x,https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~f28292ec85f76009.avif 2x"><source type="image/webp" media="(max-width: 400px)" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~21a0077b4369fdc4.w400.webp 1x,https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~34797abd3fa323ca.w800.webp 2x"><source type="image/webp" media="(max-width: 900px)" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~324abfa3a52194e8.w900.webp 1x"><source type="image/webp" srcset="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~bf34180d4a8419bd.webp 1x,https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~bf34180d4a8419bd.webp 2x"><img src="https://cdn.fasterthanli.me/content/articles/crates-io-phishing-attempt/github-phish~e78524d35ede5efb.jxl" loading="lazy" width="1322" height="1378" data-kind="media" data-input-path="/content/articles/crates-io-phishing-attempt/github-phish.jxl" title="" alt="A fake GitHub sign-in page. "></picture><figcaption><cite><a href="https://github.com/rust-lang/crates.io/discussions/11889#discussion-8886064">Barre on GitHub
</a></cite></figcaption>
</figure><p data-bo="1548">Several maintainers received it — the issue is being discussed <a href="https://github.com/rust-lang/crates.io/discussions/11889">on GitHub</a>.</p>

<p data-bo="1685">The <a href="https://www.rust-lang.org/governance/teams/dev-tools#team-crates-io">crates.io team</a> has acknowledged
the attack and said they’d see if they can do something about it.</p>

<p data-bo="1859">No compromised packages have been identified as of yet (Sep 12, 14:10 UTC).</p>

<p data-bo="1936">Important links:</p>

<ul><li><a href="https://blog.rust-lang.org/2025/09/12/crates-io-phishing-campaign/">Rust Security Response WG blog post</a>.</li>
<li><a href="https://github.com/rust-lang/crates.io/discussions/11889">GitHub discussion about the attack</a></li>
</ul>


    

    

    

    
    
    

    
        <p>
            (JavaScript is required to see this. Or maybe my stuff broke)
        </p>
     

    



    
  
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Many hard LeetCode problems are easy constraint problems (423 pts)]]></title>
            <link>https://buttondown.com/hillelwayne/archive/many-hard-leetcode-problems-are-easy-constraint/</link>
            <guid>45222695</guid>
            <pubDate>Fri, 12 Sep 2025 14:44:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://buttondown.com/hillelwayne/archive/many-hard-leetcode-problems-are-easy-constraint/">https://buttondown.com/hillelwayne/archive/many-hard-leetcode-problems-are-easy-constraint/</a>, See on <a href="https://news.ycombinator.com/item?id=45222695">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            
            <date>
                
                
                September 10, 2025
                
                
            </date>
            

            

            
            <h2>
                Use the right tool for the job.
            </h2>
            

            

            
            
            <p>In my first interview out of college I was asked the change counter problem:</p>
<blockquote>
<p>Given a set of coin denominations, find the minimum number of coins required to make change for a given number. IE for USA coinage and 37 cents, the minimum number is four (quarter, dime, 2 pennies).</p>
</blockquote>
<p>I implemented the simple greedy algorithm and immediately fell into the trap of the question: the greedy algorithm only works for "well-behaved" denominations. If the coin values were <code>[10, 9, 1]</code>, then making 37 cents would take 10 coins in the greedy algorithm but only 4 coins optimally (<code>10+9+9+9</code>). The "smart" answer is to use a dynamic programming algorithm, which I didn't know how to do. So I failed the interview.</p>
<p>But you only need dynamic programming if you're writing your own algorithm. It's really easy if you throw it into a constraint solver like <a href="https://www.minizinc.org/" target="_blank">MiniZinc</a> and call it a day. </p>
<div><pre><span></span><code>int: total;
array[int] of int: values = [10, 9, 1];
array[index_set(values)] of var 0..: coins;

constraint sum (c in index_set(coins)) (coins[c] * values[c]) == total;
solve minimize sum(coins);
</code></pre></div>
<p>You can try this online <a href="https://play.minizinc.dev/" target="_blank">here</a>. It'll give you a prompt to put in <code>total</code> and then give you successively-better solutions:</p>
<div><pre><span></span><code>coins = [0, 0, 37];
----------
coins = [0, 1, 28];
----------
coins = [0, 2, 19];
----------
coins = [0, 3, 10];
----------
coins = [0, 4, 1];
----------
coins = [1, 3, 0];
----------
</code></pre></div>

<p>Lots of similar interview questions are this kind of mathematical optimization problem, where we have to find the maximum or minimum of a function corresponding to constraints. They're hard in programming languages because programming languages are too low-level. They are also exactly the problems that constraint solvers were designed to solve. Hard leetcode problems are easy constraint problems.<sup id="fnref:leetcode"><a href="#fn:leetcode">1</a></sup> Here I'm using MiniZinc, but you could just as easily use Z3 or OR-Tools or whatever your favorite generalized solver is.</p>
<h3>More examples</h3>

<p>This was a question in a different interview (which I thankfully passed):</p>
<blockquote>
<p>Given a list of stock prices through the day, find maximum profit you can get by buying one stock and selling one stock later.</p>
</blockquote>
<p>It's easy to do in O(n^2) time, or if you are clever, you can do it in O(n). Or you could be not clever at all and just write it as a constraint problem:</p>
<div><pre><span></span><code>array[int] of int: prices = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8];
var int: buy;
var int: sell;
var int: profit = prices[sell] - prices[buy];

constraint sell &gt; buy;
constraint profit &gt; 0;
solve maximize profit;
</code></pre></div>
<p>Reminder, link to trying it online <a href="https://play.minizinc.dev/" target="_blank">here</a>. While working at that job, one interview question we tested out was:</p>
<blockquote>
<p>Given a list, determine if three numbers in that list can be added or subtracted to give 0? </p>
</blockquote>
<p>This is a satisfaction problem, not a constraint problem: we don't need the "best answer", any answer will do. We eventually decided against it for being too tricky for the engineers we were targeting. But it's not tricky in a solver; </p>
<div><pre><span></span><code>include "globals.mzn";
array[int] of int: numbers = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8];
array[index_set(numbers)] of var {0, -1, 1}: choices;

constraint sum(n in index_set(numbers)) (numbers[n] * choices[n]) = 0;
constraint count(choices, -1) + count(choices, 1) = 3;
solve satisfy;
</code></pre></div>
<p>Okay, one last one, a problem I saw last year at <a href="https://chicagopython.github.io/algosig/" target="_blank">Chipy AlgoSIG</a>. Basically they pick some leetcode problems and we all do them. I failed to solve <a href="https://leetcode.com/problems/largest-rectangle-in-histogram/description/" target="_blank">this one</a>:</p>
<blockquote>
<p>Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.</p>
<p><img alt="example from leetcode link" src="https://assets.buttondown.email/images/63337f78-7138-4b21-87a0-917c0c5b1706.jpg?w=960&amp;fit=max"></p>
</blockquote>
<p>The "proper" solution is a tricky thing involving tracking lots of bookkeeping states, which you can completely bypass by expressing it as constraints:</p>
<div><pre><span></span><code>array[int] of int: numbers = [2,1,5,6,2,3];

var 1..length(numbers): x; 
var 1..length(numbers): dx;
var 1..: y;

constraint x + dx &lt;= length(numbers);
constraint forall (i in x..(x+dx)) (y &lt;= numbers[i]);

var int: area = (dx+1)*y;
solve maximize area;

output ["(\(x)-&gt;\(x+dx))*\(y) = \(area)"]
</code></pre></div>
<p>There's even a way to <a href="https://docs.minizinc.dev/en/2.9.3/visualisation.html" target="_blank">automatically visualize the solution</a> (using <code>vis_geost_2d</code>), but I didn't feel like figuring it out in time for the newsletter.</p>
<h3>Is this better?</h3>
<p>Now if I actually brought these questions to an interview the interviewee could ruin my day by asking "what's the runtime complexity?" Constraint solvers runtimes are unpredictable and almost always than an ideal bespoke algorithm because they are more expressive, in what I refer to as the <a href="https://buttondown.com/hillelwayne/archive/the-capability-tractability-tradeoff/" target="_blank">capability/tractability tradeoff</a>. But even so, they'll do way better than a <em>bad</em> bespoke algorithm, and I'm not experienced enough in handwriting algorithms to consistently beat a solver.</p>
<p>The real advantage of solvers, though, is how well they handle new constraints. Take the stock picking problem above. I can write an O(n²) algorithm in a few minutes and the O(n) algorithm if you give me some time to think. Now change the problem to</p>
<blockquote>
<p>Maximize the profit by buying and selling up to <code>max_sales</code> stocks, but you can only buy or sell one stock at a given time and you can only hold up to <code>max_hold</code> stocks at a time?</p>
</blockquote>
<p>That's a way harder problem to write even an inefficient algorithm for! While the constraint problem is only a tiny bit more complicated:</p>
<div><pre><span></span><code>include "globals.mzn";
int: max_sales = 3;
int: max_hold = 2;
array[int] of int: prices = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8];
array [1..max_sales] of var int: buy;
array [1..max_sales] of var int: sell;
array [index_set(prices)] of var 0..max_hold: stocks_held;
var int: profit = sum(s in 1..max_sales) (prices[sell[s]] - prices[buy[s]]);

constraint forall (s in 1..max_sales) (sell[s] &gt; buy[s]);
constraint profit &gt; 0;

constraint forall(i in index_set(prices)) (stocks_held[i] = (count(s in 1..max_sales) (buy[s] &lt;= i) - count(s in 1..max_sales) (sell[s] &lt;= i)));
constraint alldifferent(buy ++ sell);
solve maximize profit;

output ["buy at \(buy)\n", "sell at \(sell)\n", "for \(profit)"];
</code></pre></div>

<p>Most constraint solving examples online are puzzles, like <a href="https://docs.minizinc.dev/en/stable/modelling2.html#ex-sudoku" target="_blank">Sudoku</a> or "<a href="https://docs.minizinc.dev/en/stable/modelling2.html#ex-smm" target="_blank">SEND + MORE = MONEY</a>". Solving leetcode problems would be a more interesting demonstration. And you get more interesting opportunities to teach optimizations, like symmetry breaking.</p>

            
            

            
            
            <p><em>If you're reading this on the web, you can subscribe <a href="https://buttondown.com/hillelwayne" target="_blank">here</a>. Updates are once a week. My main website is <a href="https://www.hillelwayne.com/" target="_blank">here</a>.</em></p>
<p><em>My new book, </em>Logic for Programmers<em>, is now in early access! Get it <a href="https://leanpub.com/logic/" target="_blank">here</a>.</em></p>
            
            

            





        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[3D modeling with paper (246 pts)]]></title>
            <link>https://www.arvinpoddar.com/blog/3d-modeling-with-paper</link>
            <guid>45222369</guid>
            <pubDate>Fri, 12 Sep 2025 14:12:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.arvinpoddar.com/blog/3d-modeling-with-paper">https://www.arvinpoddar.com/blog/3d-modeling-with-paper</a>, See on <a href="https://news.ycombinator.com/item?id=45222369">Hacker News</a></p>
Couldn't get https://www.arvinpoddar.com/blog/3d-modeling-with-paper: Error: unsuitable certificate purpose]]></description>
        </item>
        <item>
            <title><![CDATA[Over 100 ships have sailed with fake insurance from the Norwegian Ro Marine (224 pts)]]></title>
            <link>https://www.nrk.no/vestland/xl/over-100-ships-have-sailed-without-legitimate-insurance-from-the-norwegian-company-ro-marine-1.17565216</link>
            <guid>45221996</guid>
            <pubDate>Fri, 12 Sep 2025 13:36:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nrk.no/vestland/xl/over-100-ships-have-sailed-without-legitimate-insurance-from-the-norwegian-company-ro-marine-1.17565216">https://www.nrk.no/vestland/xl/over-100-ships-have-sailed-without-legitimate-insurance-from-the-norwegian-company-ro-marine-1.17565216</a>, See on <a href="https://news.ycombinator.com/item?id=45221996">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-main-content="" data-ec-list="article_body" data-ec-name="brødtekst">
<p>All large ships must have insurance, and Ro Marine has provided this in a big way.</p>
<p>The Norwegian company did not have permission to sell insurance but did it anyway — to clients worldwide.</p>
<p>In March, we reported how select ships used false papers to <a href="https://www.nrk.no/vestland/xl/falske-dokument-fra-norsk-selskap-brukt-til-a-lure-nato-land-i-skyggeflate-kontroller-1.17354948" ec-id="pp:1.17354948" ec-name="deceive inspectors in NATO countries">deceive inspectors in NATO countries</a>.</p>
<p><strong>Now, NRK and <span data-content="<p>Dossier Center is a non-commercial project by Mikhail Khodorkovsky, an opponent&amp;nbsp;of Vladimir Putin.<br /> The internationally recognized Dossier Center consists of journalists, including Russians in exile, that investigate Russia&amp;#39;s leaders.</p> " data-term="Dossier Center">Dossier Center</span> can reveal how extensive and global the fraud was: over 100 ships have sailed with illegitimate insurance documents from Ro Marine.</strong></p>
<p>“It's very serious and unusual that such a serious fraud happens with the help of a Norwegian company. At worst, it could undermine the trust in the Norwegian maritime industry,” says Thomas Angell Bergh from the Norwegian Maritime Authority.</p>
<div id="1.17568300.8c70d55b"><!-- include: /serum/render?id=1.17568300&amp;size=18&amp;perspective=RICH&amp;alignment=CENTER&amp;parentSize=18 -->
    <!-- prettier-ignore-attribute --><persongalleri-v1 data-name="persongalleri"><div><ul><li><div><figure data-name="Thomas Angell Bergh"><picture><source type="image/webp" srcset="https://gfx.nrk.no/ihn93lPDHrcBSgfFUis9_wq8rUs1eFkbYJbZ61EPOBGQ.webp 450w,https://gfx.nrk.no/ihn93lPDHrcBSgfFUis9_wnoTgudfdDwgJbZ61EPOBGQ.webp 768w,https://gfx.nrk.no/ihn93lPDHrcBSgfFUis9_w8jePSXb30yAJbZ61EPOBGQ.webp 1080w,https://gfx.nrk.no/ihn93lPDHrcBSgfFUis9_wuNp7Qu8ZmcYJbZ61EPOBGQ.webp 1280w,https://gfx.nrk.no/ihn93lPDHrcBSgfFUis9_wn_o6CoW11WYJbZ61EPOBGQ.webp 1600w,https://gfx.nrk.no/ihn93lPDHrcBSgfFUis9_wLKWFt68BNHoJbZ61EPOBGQ.webp 2400w" sizes="(min-width: 540px) 320px, 100vw"><source type="image/jpeg" srcset="https://gfx.nrk.no/ihn93lPDHrcBSgfFUis9_w342IbWVNHKenVEhkjqGLsQ.jpg 450w,https://gfx.nrk.no/ihn93lPDHrcBSgfFUis9_wztEmgUJr222nVEhkjqGLsQ.jpg 768w,https://gfx.nrk.no/ihn93lPDHrcBSgfFUis9_w9rfWMZYJdzinVEhkjqGLsQ.jpg 1080w,https://gfx.nrk.no/ihn93lPDHrcBSgfFUis9_w882KLzBeIRunVEhkjqGLsQ.jpg 1280w,https://gfx.nrk.no/ihn93lPDHrcBSgfFUis9_wPMBdYPZ_3manVEhkjqGLsQ.jpg 1600w,https://gfx.nrk.no/ihn93lPDHrcBSgfFUis9_wMg-LIRMKR8inVEhkjqGLsQ.jpg 2400w" sizes="(min-width: 540px) 320px, 100vw"></picture></figure><h4>Thomas Angell Bergh</h4></div></li></ul></div></persongalleri-v1>
  </div>
<p>Most of the fake insurance papers were for ships transporting goods out of Russia, mainly oil.</p>
<p>NRK has contacted dozens of Ro Marine’s clients. Only a few were willing to speak with us.</p>
<p>One of the customers says he was scammed by Ro Marine because he believed the insurance policies he purchased were valid.</p>
<p>Another says that "everyone" knows Ro Marine is fake, but that the ships need Western insurance documents. Such documents can make it easier to sail freely, without Western countries interfering in the transport.</p>
<p>This signature appears time and again on documents issued by Ro Marine.</p>
<div id="1.17568169.8cb74ae0"><!-- include: /serum/render?id=1.17568169&amp;size=12&amp;perspective=RICH&amp;alignment=LEFT&amp;type=image&amp;aspect=F11&amp;parentSize=18 --><!-- START: /templates/image/image-rich.jsp -->
<figure>
<p><img sizes="(min-width:1180px) 767px, (min-width:720px) 67vw, 100vw" srcset="https://gfx.nrk.no/MCbDTN4tmgaQov7qKXpaLgp8oq42yqzJv_bmGApN12mA.jpg 80w, https://gfx.nrk.no/MCbDTN4tmgaQov7qKXpaLgI4VxDh-eYuP_bmGApN12mA.jpg 160w, https://gfx.nrk.no/MCbDTN4tmgaQov7qKXpaLgCK_seUg0Z13_bmGApN12mA.jpg 350w, https://gfx.nrk.no/MCbDTN4tmgaQov7qKXpaLgkb3wyP2Zz5z_bmGApN12mA.jpg 450w, https://gfx.nrk.no/MCbDTN4tmgaQov7qKXpaLgN7_-8CwimW3_bmGApN12mA.jpg 650w, https://gfx.nrk.no/MCbDTN4tmgaQov7qKXpaLgOiGR5qF_50r_bmGApN12mA.jpg 1000w, https://gfx.nrk.no/MCbDTN4tmgaQov7qKXpaLgU29NNNUV-yn_bmGApN12mA.jpg 1200w, https://gfx.nrk.no/MCbDTN4tmgaQov7qKXpaLg-ayV4U5l8p3_bmGApN12mA.jpg 1600w, https://gfx.nrk.no/MCbDTN4tmgaQov7qKXpaLgjuoSny5RoK7_bmGApN12mA.jpg 2000w" loading="eager" alt="Ro Marine's logo and a signature on an insurance document" title=""></p>
</figure>
<!-- END: /templates/image/image-rich.jsp -->
</div>
<p>The search for the owner of the signature led us to a Russian website, where you can download many different signatures. The one used by Ro Marine belongs to a "doctor," says the website.</p>

<p><strong>Behind the global hoax is this man.</strong></p>
<div id="1.17568185.8c9b1bde"><!-- include: /serum/render?id=1.17568185&amp;size=12&amp;perspective=RICH&amp;alignment=LEFT&amp;type=image&amp;aspect=F11&amp;parentSize=18 --><!-- START: /templates/image/image-rich.jsp -->
<figure>
<p><img sizes="(min-width:1180px) 767px, (min-width:720px) 67vw, 100vw" srcset="https://gfx.nrk.no/IvSO6V-9BL7p6VxthXRYfwZStez9nvcswaCR3DbYoUfw.png 80w, https://gfx.nrk.no/IvSO6V-9BL7p6VxthXRYfw6OtUNMSZ_tIaCR3DbYoUfw.png 160w, https://gfx.nrk.no/IvSO6V-9BL7p6VxthXRYfw2BOD_pdfbXgaCR3DbYoUfw.png 350w, https://gfx.nrk.no/IvSO6V-9BL7p6VxthXRYfwXKNX0QHbnGUaCR3DbYoUfw.png 450w, https://gfx.nrk.no/IvSO6V-9BL7p6VxthXRYfwH1dPZu-OvFAaCR3DbYoUfw.png 650w, https://gfx.nrk.no/IvSO6V-9BL7p6VxthXRYfwUVQFAgSRKukaCR3DbYoUfw.png 1000w, https://gfx.nrk.no/IvSO6V-9BL7p6VxthXRYfwFxu00I7874IaCR3DbYoUfw.png 1200w, https://gfx.nrk.no/IvSO6V-9BL7p6VxthXRYfwFBLMM5pHi5MaCR3DbYoUfw.png 1600w, https://gfx.nrk.no/IvSO6V-9BL7p6VxthXRYfw20KeFacs-zQaCR3DbYoUfw.png 2000w" loading="eager" alt="Images taken from Andrey Mochalin's passport" title=""></p>
</figure>
<!-- END: /templates/image/image-rich.jsp -->
</div>
<p>His name is Andrey Mochalin, a Russian citizen and resident of St. Petersburg. Mochalin has experience working for a reputable Norwegian insurance company.</p>
<p>In March, he, two Norwegians and a Bulgarian were charged with forging documents and operating an insurance business without a permit. Mochalin is also being investigated for violating international sanctions.</p>
<p><em>Through an attorney, the Norwegians say they do not understand the charges (see their full response in the fact box later in the article). The Bulgarian tells NRK he is innocent.</em></p>
<p>For several months, NRK and Dossier Center have tried unsuccessfully to get in touch with Mochalin. At the same time, we investigated Ro Marine's operations. What we found surprised experts.</p>
<h2>“Among the worst of the worst”</h2>
<p>Sanctions expert David Tannenbaum is shocked by the the scale of it. He knows how far Russia is willing to go to protect its oil exports, which are crucial for funding Putin’s illegal war in Ukraine.</p>
<p>Sanctions against Russia can make it difficult for tankers carrying Russian oil to obtain insurance that is approved in the West. But they are finding ways around it.</p>
<p>This is where Ro Marine enters the picture.</p>
<p>“Seems like Ro Marine is popular with sanctions evaders. You don't have this roster by accident,” says David Tannenbaum from Deep Blue Intelligence. The American company specializes in detecting sanctions evasion.</p>
<div id="1.17509059.48b308e2"><!-- include: /serum/render?id=1.17509059&amp;size=12&amp;perspective=RICH&amp;alignment=LEFT&amp;type=image&amp;aspect=F169&amp;parentSize=18 --><!-- START: /templates/image/image-rich.jsp -->
<figure>
<p><img sizes="(min-width:1180px) 767px, (min-width:720px) 67vw, 100vw" srcset="https://gfx.nrk.no/FmLZNY4daRMBV4kNL7XzJQg7rXPWF7Mz3IlyPp8Xb8RA.jpg 80w, https://gfx.nrk.no/FmLZNY4daRMBV4kNL7XzJQ8jYT6MYPiGPIlyPp8Xb8RA.jpg 160w, https://gfx.nrk.no/FmLZNY4daRMBV4kNL7XzJQf_1pSlZEGQDIlyPp8Xb8RA.jpg 350w, https://gfx.nrk.no/FmLZNY4daRMBV4kNL7XzJQxa5lBDeruP_IlyPp8Xb8RA.jpg 450w, https://gfx.nrk.no/FmLZNY4daRMBV4kNL7XzJQdeoe2MHnLabIlyPp8Xb8RA.jpg 650w, https://gfx.nrk.no/FmLZNY4daRMBV4kNL7XzJQJCobIBIWEFnIlyPp8Xb8RA.jpg 1000w, https://gfx.nrk.no/FmLZNY4daRMBV4kNL7XzJQG4VFENiSFL7IlyPp8Xb8RA.jpg 1200w, https://gfx.nrk.no/FmLZNY4daRMBV4kNL7XzJQDL9Zv-pLhpzIlyPp8Xb8RA.jpg 1600w, https://gfx.nrk.no/FmLZNY4daRMBV4kNL7XzJQyBwvDFOI7P3IlyPp8Xb8RA.jpg 2000w" loading="eager" alt="David Tannenbaum. " title=""></p>
</figure>
<!-- END: /templates/image/image-rich.jsp -->
</div>
<p>For Tannenbaum, it appears that Ro Marine primarily serves the <span data-content="<p>The shadow fleet consists of ships suspected of circumventing Western sanctions. This term is loosely defined as ships having the following characteristics:</p> <ul> <li>Older than 15 years and without Western insurance</li> <li>Changing flags often</li> <li>Difficult to trace real ownership</li> <li>Owned or operated by companies registered in countries that have not joined the economic sanctions imposed after Russia&amp;#39;s full-scale invasion of Ukraine in 2022</li> <li>Often deactivating&amp;nbsp;their AIS, a system that permits tracking their movements and calls at Russian ports</li> </ul> <p>Insurance companies have been given a central role in enforcing sanctions against Russia.</p> <p>The Norwegian&amp;nbsp;companies Gard and Skuld are among the twelve in the International Group, which provides insurance for about 90 percent&amp;nbsp;of the world&amp;#39;s shipping. These twelve go to great lengths to comply with Western sanctions.</p> <p>This means that ships that violate sanctions rules must find other insurance providers in order to pass inspections and avoid Western countries interfering in the transport.</p> <p>A standard insurance policy provides coverage in the event of an oil spill, ship accident or crew accident. A fake insurance policy, such as the one offered by Ro Marine, is unlikely to provide any coverage at all.</p> " data-term="shadow fleet">shadow fleet</span> or ships engaged in illegal activities or sanctions evasion.</p>
<p>“Is Ro Marine the worst of the worst? I think they're definitely in contention,” he both asks and answers.</p>
<p>Our documentation shows, for example, that Gatik, known as one of the largest players in the Russian shadow fleet, appears to have placed almost all of their ships with Ro Marine.</p>
<p>In addition, six ships linked to the Russian gas giant Novatek have had fake insurance from the Norwegian company. All six have sailed along the Norwegian coast towards the gas facility Arctic LNG2 in Russia, which is sanctioned by the USA. The ships are sanctioned by the EU.</p>
<p>Ships linked to the sanctioned Iranian oil industry and Iranian military have also been customers of Ro Marine.</p>

<h2>Dangerous cargo from Russia</h2>
<p>Among the cargo ships that have purchased invalid insurance from Ro Marine, we found "<span data-content="<p>The ship with IMO number&amp;nbsp;9125097 was previously called&amp;nbsp;&amp;quot;Lily-B&amp;quot;.</p> " data-term="Agattu">Agattu</span>". Here, the vessel is sailing between Denmark and Sweden with explosives in the cargo, bound for Algeria.</p>
<div id="1.17568437.c344473f"><!-- include: /serum/render?id=1.17568437&amp;size=18&amp;perspective=RICH&amp;alignment=CENTER&amp;parentSize=18 -->
    <!-- prettier-ignore-attribute --><levende-stillbilde-v2 data-self-id="1.17568437" data-name="levende-stillbilde"><dh-lvs-basis-levende-stillbilde data-state="ACTIVE" data-viewport-position="OUT-OF-VIEWPORT" data-view="WIDE"><figure><div role="img" aria-label=""><p><img src="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_360.jpg" alt=""></p><video preload="none" muted="" poster="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_360.jpg"><source type="video/mp4" src="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_360.mp4"></video></div><div role="img" aria-label=""><p><img src="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_720.jpg" alt=""></p><video preload="none" muted="" poster="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_720.jpg"><source type="video/mp4" src="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_720.mp4"></video></div><div role="img" aria-label=""><p><img src="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_1080.jpg" alt=""></p><video preload="none" muted="" poster="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_1080.jpg"><source type="video/mp4" src="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_1080.mp4"></video></div><div role="img" aria-label=""><p><img src="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_360.jpg" alt=""></p><video preload="none" muted="" poster="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_360.jpg"><source type="video/mp4" src="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_360.mp4"></video></div><div role="img" aria-label=""><p><img src="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_720.jpg" alt=""></p><video preload="none" muted="" poster="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_720.jpg"><source type="video/mp4" src="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_720.mp4"></video></div><div role="img" aria-label=""><p><img src="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_1080.jpg" alt=""></p><video preload="none" muted="" poster="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_1080.jpg"><source type="video/mp4" src="https://mediaorigin.nrk.no/movingstill/e150da16-836e-4b6d-90da-16836eab6d93/20250801133521/e150da16-836e-4b6d-90da-16836eab6d93_1080.mp4"></video></div><figcaption data-caption="true"><small>Drone footage: Ole Jakobsen</small></figcaption></figure></dh-lvs-basis-levende-stillbilde></levende-stillbilde-v2>
  </div>
<p>Three tonnes of missile weapons were transported from St. Petersburg in Russia, according to Russian port records.</p>
<p>The ship joins the ranks of Ro Marine customers who have contributed to Russia's export revenues by transporting goods from Russian ports. This does not apply to all customers, but the vast majority, according to research by NRK and Dossier Center.</p>
<h2>Provoked a NATO country</h2>
<p>Not long ago, it was difficult to imagine that ordinary shipping in Europe could lead to military confrontation. Today, the situation is different. European countries may intervene in oil shipments that violate Western sanctions, which are intended to oppose Putin's bloody war in Ukraine. Russia has its countermeasures.</p>
<p>An illustrative example happened to a Ro Marine customer in mid-May: The oil tanker "<span data-content="<p>The ship has previously been called&amp;nbsp;&amp;quot;Argent&amp;quot;&amp;nbsp;and &amp;quot;Jaguar&amp;quot;. Its IMO number is&amp;nbsp;9293002.</p> " data-term="Blint">Blint</span>".</p>
<p>The Estonian navy suspected the ship was sailing without a flag—a clear violation of international regulations. The navy radioed the vessel, but according to Estonian authorities, the captain refused to cooperate.</p>
<p>Suddenly, a Russian fighter jet came whizzing over them, violating the NATO country’s airspace. Instead of stopping, the sanctioned tanker sailed on to the Russian oil port of Primorsk.</p>
<p>This video of the incident is filmed from inside the ship.</p>

<p>Like many other tankers transporting Russian oil, "Blint" has had fake insurance from Ro Marine, NRK can document.</p>
<p>In this way, Ro Marine has acted in line with the interests of the Russian authorities.</p>
<p>Russia's president, October 2023:</p>
<p>“Thanks to the actions of companies and authorities, the tanker fleet has grown, new mechanisms for payment, <strong>insurance</strong> and reinsurance of our cargo have been created.”</p>
<div id="1.17568325.b8ced581"><!-- include: /serum/render?id=1.17568325&amp;size=18&amp;perspective=RICH&amp;alignment=CENTER&amp;parentSize=18 -->
    <!-- prettier-ignore-attribute --><persongalleri-v1 data-name="persongalleri"><div><ul><li><div><figure data-name="Vladimir Putin"><picture><source type="image/webp" srcset="https://gfx.nrk.no/f8cUeJaJIba4_outEVaKtgjdLnXidFSzWNtdzvw0I5SQ.webp 450w,https://gfx.nrk.no/f8cUeJaJIba4_outEVaKtg2X6K4mxagNmNtdzvw0I5SQ.webp 768w,https://gfx.nrk.no/f8cUeJaJIba4_outEVaKtgdiBctd-DXGmNtdzvw0I5SQ.webp 1080w,https://gfx.nrk.no/f8cUeJaJIba4_outEVaKtgAauL-2gJdkONtdzvw0I5SQ.webp 1280w,https://gfx.nrk.no/f8cUeJaJIba4_outEVaKtgnpDqvosoTr2Ntdzvw0I5SQ.webp 1600w,https://gfx.nrk.no/f8cUeJaJIba4_outEVaKtg4ToaQV0IyBmNtdzvw0I5SQ.webp 2400w" sizes="(min-width: 540px) 320px, 100vw"><source type="image/jpeg" srcset="https://gfx.nrk.no/f8cUeJaJIba4_outEVaKtgnSKHvm-_AYw6qzzfOVZgkg.jpg 450w,https://gfx.nrk.no/f8cUeJaJIba4_outEVaKtgw8aQ0IrhwSg6qzzfOVZgkg.jpg 768w,https://gfx.nrk.no/f8cUeJaJIba4_outEVaKtgPh8n5bx9lAk6qzzfOVZgkg.jpg 1080w,https://gfx.nrk.no/f8cUeJaJIba4_outEVaKtgTx-woK-idXE6qzzfOVZgkg.jpg 1280w,https://gfx.nrk.no/f8cUeJaJIba4_outEVaKtgg4BvyddrE0E6qzzfOVZgkg.jpg 1600w,https://gfx.nrk.no/f8cUeJaJIba4_outEVaKtgZJrArYan2q06qzzfOVZgkg.jpg 2400w" sizes="(min-width: 540px) 320px, 100vw"></picture></figure><h4>Vladimir Putin</h4></div></li></ul></div></persongalleri-v1>
  </div>
<p>Researcher Åse Gilje Østensen at the Norwegian Naval Academy tells that “sometimes, entities act in the Russian interest on their own initiative. Sometimes, Putin or other central figures around him have signaled that certain initiatives are welcome. In such cases, actors will often seek to please the regime.”</p>
<div id="1.17568330.b798d06b"><!-- include: /serum/render?id=1.17568330&amp;size=18&amp;perspective=RICH&amp;alignment=CENTER&amp;parentSize=18 -->
    <!-- prettier-ignore-attribute --><persongalleri-v1 data-name="persongalleri"><div><ul><li><div><figure data-name="Åse Gilje Østensen"><picture><source type="image/webp" srcset="https://gfx.nrk.no/btfWzaJhXs-uhS0CSRzzdwL03NoKrzsHuhO8_k8SR0YA.webp 450w,https://gfx.nrk.no/btfWzaJhXs-uhS0CSRzzdwlYg4JfxfvY6hO8_k8SR0YA.webp 768w,https://gfx.nrk.no/btfWzaJhXs-uhS0CSRzzdwNTnevp86prehO8_k8SR0YA.webp 1080w,https://gfx.nrk.no/btfWzaJhXs-uhS0CSRzzdwfXk6cKydPWShO8_k8SR0YA.webp 1280w,https://gfx.nrk.no/btfWzaJhXs-uhS0CSRzzdwjSbHz-dPlhuhO8_k8SR0YA.webp 1600w,https://gfx.nrk.no/btfWzaJhXs-uhS0CSRzzdw_zfdNqp22ZChO8_k8SR0YA.webp 2400w" sizes="(min-width: 540px) 320px, 100vw"><source type="image/jpeg" srcset="https://gfx.nrk.no/btfWzaJhXs-uhS0CSRzzdwm6zm5bhyUs3z5eJ2lc2aMg.jpg 450w,https://gfx.nrk.no/btfWzaJhXs-uhS0CSRzzdwHmXqoLRp6XPz5eJ2lc2aMg.jpg 768w,https://gfx.nrk.no/btfWzaJhXs-uhS0CSRzzdwjNVGsgZGvSjz5eJ2lc2aMg.jpg 1080w,https://gfx.nrk.no/btfWzaJhXs-uhS0CSRzzdwZYozY_cabQPz5eJ2lc2aMg.jpg 1280w,https://gfx.nrk.no/btfWzaJhXs-uhS0CSRzzdw1vnBHxHKY1Tz5eJ2lc2aMg.jpg 1600w,https://gfx.nrk.no/btfWzaJhXs-uhS0CSRzzdwKQngojQkR1Pz5eJ2lc2aMg.jpg 2400w" sizes="(min-width: 540px) 320px, 100vw"></picture></figure><h4>Åse Gilje Østensen</h4></div></li></ul></div></persongalleri-v1>
  </div>
<div><p>“Russia is an authoritarian regime that can force civilian actors to assist the regime. Other times, state bodies may be more directly involved. What is the case regarding Ro Marine is difficult to know.”</p><p>  The Russian Embassy in Norway does not answer NRK's questions about Ro Marine's operations because the company is Norwegian and refers us to the Norwegian authorities. They also do not respond to whether Ro Marine has acted in accordance with the interests of Russian authorities, or any other statements and findings in this case.</p></div>
<p>The embassy does however choose to point out that the sanctions against the "shadow fleet" are contrary to international law.</p>

<h2>Approved by the largest flag state</h2>
<p>For several years, the Norwegian company operated without permission and with fake documents without any authorities noticing — neither in Norway nor abroad.</p>
<p>The earliest objectionable activity was in 2021, according to NRK’s investigation.</p>
<p>At that time, Ro Marine applied to be recognized as an insurance company by the world's largest <span data-content="<p>The flag states are responsible for ensuring&amp;nbsp;that&amp;nbsp;ships comply with international regulations regarding safety, environment, and working conditions. The flag state&amp;#39;s responsibilities&amp;nbsp;also include ensuring that a ship has legitimate&amp;nbsp;insurance.<br /> <br /> All ships must be registered with&amp;nbsp;a flag state.</p> " data-term="flag state">flag state</span>, Panama, despite missing the necessary approval from Norwegian authorities.</p>
<div id="1.17568160.8ca9335f"><!-- include: /serum/render?id=1.17568160&amp;size=12&amp;perspective=RICH&amp;alignment=LEFT&amp;caption=NRK+has+found+that+most+ships+among+Ro+Marine%27s+clients+are+registered+in+Panama.&amp;type=image&amp;aspect=F169&amp;parentSize=18 --><!-- START: /templates/image/image-rich.jsp -->
<figure>
<p><img sizes="(min-width:1180px) 767px, (min-width:720px) 67vw, 100vw" srcset="https://gfx.nrk.no/9VDLCagvklNb21yExnoq0gjF8n58S82ElaOHzh4YKbOw.png 80w, https://gfx.nrk.no/9VDLCagvklNb21yExnoq0gzY_3_sKFywpaOHzh4YKbOw.png 160w, https://gfx.nrk.no/9VDLCagvklNb21yExnoq0gS8bjQpaI-v1aOHzh4YKbOw.png 350w, https://gfx.nrk.no/9VDLCagvklNb21yExnoq0gUpRNoS7C0VZaOHzh4YKbOw.png 450w, https://gfx.nrk.no/9VDLCagvklNb21yExnoq0gTf5EpK_c7LhaOHzh4YKbOw.png 650w, https://gfx.nrk.no/9VDLCagvklNb21yExnoq0gV7bjpwwxi8laOHzh4YKbOw.png 1000w, https://gfx.nrk.no/9VDLCagvklNb21yExnoq0gAfr5SZl42f1aOHzh4YKbOw.png 1200w, https://gfx.nrk.no/9VDLCagvklNb21yExnoq0gx40rQ0uqGwVaOHzh4YKbOw.png 1600w, https://gfx.nrk.no/9VDLCagvklNb21yExnoq0gtIhetBUrdHtaOHzh4YKbOw.png 2000w" loading="eager" alt="Office of the flag state of Panama in Panama City." title=""></p>
<figcaption>
<p>NRK has found that most ships among Ro Marine's clients are registered in Panama.</p>
</figcaption>
</figure>
<!-- END: /templates/image/image-rich.jsp -->
</div>
<p>Ro Marine sent the flag state a forged reference, which was originally given to a completely different company, sources tell NRK. With this reference, Ro Marine was recognized by the flag state of Panama in December 2021.</p>

<p>In the time that followed, <a href="https://www.nrk.no/vestland/flaggstater-verden-rundt-stanser-skip-og-palegger-tiltak-etter-avsloring-fra-nrk-og-danwatch-1.17363840" ec-id="pp:1.17363840" ec-name="several flag states were fooled by Ro Marine">several flag states were fooled by Ro Marine</a>, including by forged documents that looked like they were from the Norwegian Financial Supervisory Authority.</p>
<p><strong>The illegal activity continued unencumbered until NRK alerted the flag states. </strong></p>
<h2>Russian owner worked many years for a Norwegian company</h2>
<p>The Russian owner of Ro Marine, Andrey Mochalin, has gone underground. Mochalin has not responded to any of the numerous inquiries from NRK and Dossier Center.</p>
<p>For over ten years, he worked for a legitimate Norwegian insurance company. Most of the time, he worked from St. Petersburg.</p>
<p>Occasionally, he visited his employer's office in Oslo. Here he is pictured with his former colleagues.</p>

<p>At this time, two of his Norwegian managers also owned another company that offered insurance. This company later became Ro Marine.</p>
<p>A few weeks after Russia's war against Ukraine began in 2022, Ro Marine passed from Norwegian to Russian ownership.</p>
<p>This is when Mochalin bought Ro Marine from the company of the two Norwegians for almost two million NOK.</p>
<p>These two Norwegians, along with Andrey Mochalin and a Bulgarian citizen, are charged with forging documents and conducting illegal insurance business.</p>
<p>Out of respect for the ongoing investigation, the Norwegians did not want to be interviewed by NRK, according to their lawyer.</p>
<div id="1.17568145.8cc56261"><!-- include: /serum/render?id=1.17568145&amp;size=12&amp;perspective=RICH&amp;alignment=LEFT&amp;caption=Ro+Marine+claimed+its+address+was+here+at+the+Norwegian+Shipowners%27+Association+building+in+Oslo%2C+but+according+to+the+association%2C+that+was+not+correct.&amp;type=image&amp;aspect=F169&amp;parentSize=18 --><!-- START: /templates/image/image-rich.jsp -->
<figure>
<p><img sizes="(min-width:1180px) 767px, (min-width:720px) 67vw, 100vw" srcset="https://gfx.nrk.no/7fLLtyITpHkwWHDGgIEyZgFBPT1ejROqIXnh7mSkYdfg.jpg 80w, https://gfx.nrk.no/7fLLtyITpHkwWHDGgIEyZgYCy9dNFmrS0Xnh7mSkYdfg.jpg 160w, https://gfx.nrk.no/7fLLtyITpHkwWHDGgIEyZgNZsHNwrviTIXnh7mSkYdfg.jpg 350w, https://gfx.nrk.no/7fLLtyITpHkwWHDGgIEyZgua7FhvP8m7wXnh7mSkYdfg.jpg 450w, https://gfx.nrk.no/7fLLtyITpHkwWHDGgIEyZgXRyug-pa4HAXnh7mSkYdfg.jpg 650w, https://gfx.nrk.no/7fLLtyITpHkwWHDGgIEyZg7G6NsOXIEowXnh7mSkYdfg.jpg 1000w, https://gfx.nrk.no/7fLLtyITpHkwWHDGgIEyZgU9IAQXJ-Yp4Xnh7mSkYdfg.jpg 1200w, https://gfx.nrk.no/7fLLtyITpHkwWHDGgIEyZgbXkYw-cExFAXnh7mSkYdfg.jpg 1600w, https://gfx.nrk.no/7fLLtyITpHkwWHDGgIEyZgdlUqMBbUKdQXnh7mSkYdfg.jpg 2000w" loading="eager" alt="Norwegian Shipowners' Association building in Oslo" title=""></p>
<figcaption>
<p>Ro Marine claimed its address was here at the Norwegian Shipowners' Association building in Oslo, but according to the association, that was not correct.</p>
</figcaption>
</figure>
<!-- END: /templates/image/image-rich.jsp -->
</div>
<h2>Money trail in Russia</h2>
<p>Alongside the Norwegian company Ro Marine, Andrey Mochalin runs a company in St. Petersburg with direct links to Ro Marine.</p>
<p>NRK and Dossier Center have obtained access to bank documents for <span data-content="<p>The company is called&amp;nbsp;Khaydor St Petersburg,&amp;nbsp;OGRN: 1167847332960.</p> <p>NRK and Dossier Center have verified the information against publicly available reports.</p> " data-term="his Russian company">his Russian company</span>.</p>
<p>The money transfers are many, and some stand out.</p>
<p><strong>Last year, there were 36 payments totaling approximately five million NOK that we can connect to Ro Marine. </strong></p>
<p>The bank transfers were marked with the name of the ship and the policy number.</p>

<p>The number corresponds to insurance documents issued by Ro Marine.</p>

<p>The company’s account also shows salary payments to Mochalin.</p>
<h2>Those charged</h2>
<div id="1.17567355.eb00a411"><!-- include: /serum/render?id=1.17567355&amp;size=12&amp;perspective=RICH&amp;alignment=LEFT&amp;type=image&amp;aspect=ORIGINAL&amp;parentSize=18 --><!-- START: /templates/image/image-rich.jsp -->
<figure>
<p><img sizes="(min-width:1180px) 767px, (min-width:720px) 67vw, 100vw" srcset="https://gfx.nrk.no/nv-P8YTALYMJuOM4Mb-kRQ6gL5eurodHOkNt7LQbu8kA.png 80w, https://gfx.nrk.no/nv-P8YTALYMJuOM4Mb-kRQVxCczaQQnPKkNt7LQbu8kA.png 160w, https://gfx.nrk.no/nv-P8YTALYMJuOM4Mb-kRQdb0IUbjwWpSkNt7LQbu8kA.png 350w, https://gfx.nrk.no/nv-P8YTALYMJuOM4Mb-kRQgZSA5lWZhfGkNt7LQbu8kA.png 450w, https://gfx.nrk.no/nv-P8YTALYMJuOM4Mb-kRQrLxg9Ko8IFikNt7LQbu8kA.png 650w, https://gfx.nrk.no/nv-P8YTALYMJuOM4Mb-kRQ5TzBib8k9YykNt7LQbu8kA.png 1000w, https://gfx.nrk.no/nv-P8YTALYMJuOM4Mb-kRQg0_ce_iOgYWkNt7LQbu8kA.png 1200w, https://gfx.nrk.no/nv-P8YTALYMJuOM4Mb-kRQfTHJhVrKe5OkNt7LQbu8kA.png 1600w, https://gfx.nrk.no/nv-P8YTALYMJuOM4Mb-kRQCQ52fP3rsfukNt7LQbu8kA.png 2000w" loading="eager" alt="A graphical representation showing the geographical connections of Andrey Mochalin and the three others who have held official roles in Ro Marine." title=""></p>
</figure>
<!-- END: /templates/image/image-rich.jsp -->
</div>
<p>Here’s what we can share about the Russian Andrey Mochalin and the others charged in the case (in parentheses is the time period they had official roles in Ro Marine):</p>
<p><strong>A. Mochalin (2022-2025): </strong></p>
<ul>
<li>Sole owner of Ro Marine during the period when the company's illegal insurance activities were most widespread, according to our documentation.</li>
<li>Majority owner of the Russian company that received payments worth millions of NOK last year marked for Ro Marine.</li>
</ul>
<p><strong>Norwegian 1 (2016-2023): </strong></p>
<ul>
<li>Registered as co-owner in the Russian company that last year received payments worth millions of NOK marked for Ro Marine.</li>
<li>Owner and board chairman in 2021 when someone sent a forged reference on behalf of Ro Marine to Panama. At the time the company lacked a permit to sell insurance.</li>
<li>In 2024, a year after he left the board, contributed to ensuring Ro Marine’s continued operations by securing a new board member: the charged Bulgarian.</li>
</ul>
<p><strong>Norwegian 2 (2017-2023): </strong></p>
<ul>
<li>Owner and managing director in 2021 when someone sent a forged reference on behalf of Ro Marine to Panama. At the time the company lacked a permit to sell insurance.</li>
</ul>
<p><strong>Bulgarian (2024-2025): </strong></p>
<ul>
<li>Car mechanic without any experience in marine insurance.</li>
<li>Tenant of Norwegian 1 for years.</li>
<li>Board member in Ro Marine for over half a year, up to March 2025.</li>
</ul>
<p>After the Norwegians left the board in 2023, the Norwegian company had a problem. With a Russian as the only board member, the company was in violation of the Companies Act of Norway, which requires at least one board member to be from an EEA country. Since Bulgaria is a member of the EEA, the Bulgarian could solve the issue.</p>
<p>According to the Bulgarian, his Norwegian landlord arranged the board position to help him financially.</p>
<p>However, he never received the money he was promised and left the board because he realized something was wrong, the Bulgarian says. He does not understand the police's suspicion towards him.</p>
<p>“I had no idea what they were doing. I have nothing to hide,” says the Bulgarian to NRK. He has been contacted by the police and says he is fully cooperating with them.</p>


<h2>The consequences of uncovering the scam</h2>
<p>After NRK's revelation in March, several flag states have issued <a href="https://www.nrk.no/vestland/flaggstater-verden-rundt-stanser-skip-og-palegger-tiltak-etter-avsloring-fra-nrk-og-danwatch-1.17363840" ec-id="pp:1.17363840" ec-name="stop orders to ships that used Ro Marine">stop orders to ships that used Ro Marine</a>.</p>
<p>Panama alone has banned 16 ships from sailing because the ships have not shown new, real insurance within the deadline they were given.</p>
<p>The UK has sanctioned Ro Marine. Ro Marines’s website has been taken down. In July, the Oslo District Court forcibly dissolved the company for breach of accounting obligations, because Ro Marine had not submitted annual accounts for 2023.</p>
<p>However, the Russian company in St. Petersburg, which received payments worth millions of NOK marked for Ro Marine, is still active.</p>
<p>One month after NRK's revelation in March, another ship in the Russian shadow fleet presented a fake insurance certificate from Ro Marine. Inspectors at the oil port of Primorsk were presented with a document "signed in Oslo."</p>
<p>The expiration date of the fake insurance?</p>
<p>April next year.</p>
<p><em>NRK has contacted the companies that operate the mentioned ships "Agattu" and "Blint", with no response. We have not been able to contact Gatik. Novatek has not responded to our questions. </em></p>


</div><p><span>
<span>
<span>Publisert</span>
<time datetime="2025-09-12T07:00:00+02:00">
12.09.2025, kl. 07.00
</time>
</span>
</span>
</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Chat Control faces blocking minority in the EU (377 pts)]]></title>
            <link>https://twitter.com/TutaPrivacy/status/1966384776883142661</link>
            <guid>45221580</guid>
            <pubDate>Fri, 12 Sep 2025 12:52:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/TutaPrivacy/status/1966384776883142661">https://twitter.com/TutaPrivacy/status/1966384776883142661</a>, See on <a href="https://news.ycombinator.com/item?id=45221580">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="ScriptLoadFailure"><form action="" method="GET"><div><p><span>Something went wrong, but don’t fret — let’s give it another shot.</span></p><p><img alt="⚠️" draggable="false" src="https://abs-0.twimg.com/emoji/v2/svg/26a0.svg"><span> Some privacy related extensions may cause issues on x.com. Please disable them and try again.</span></p></div></form></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Treasury Is Expanding the Patriot Act to Attack Bitcoin Self Custody (612 pts)]]></title>
            <link>https://www.tftc.io/treasury-iexpanding-patriot-act/</link>
            <guid>45221274</guid>
            <pubDate>Fri, 12 Sep 2025 12:10:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tftc.io/treasury-iexpanding-patriot-act/">https://www.tftc.io/treasury-iexpanding-patriot-act/</a>, See on <a href="https://news.ycombinator.com/item?id=45221274">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                        <h2 id="martys-bent">Marty's Bent</h2><figure><img src="https://www.tftc.io/content/images/2025/09/Screenshot-2025-09-11-at-9.59.52---PM.png" alt="" loading="lazy" width="593" height="1060"><figcaption><span>via </span><a href="https://www.therage.co/us-government-to-bring-patriot-act-to-digital-assets/?ref=tftc.io"><span>The Rage</span></a></figcaption></figure><p>We warned a couple of months ago when the Trump administration's "Crypto Brief" was released that there was some language in the brief that advised the government to expand the Patriot Act to account for digital assets. Well, it looks like FinCen and the Treasury have been working on guidelines and a rough outline is shared above courtesy of The Rage, and they are absolutely horrid.</p><p>It seems that FinCen and the Treasury are preparing to outlaw the use of CoinJoin, atomic swaps, single address use, and transaction broadcast timing delays. All of which are common <strong>best use </strong>practices that I would recommend any bitcoiner leveraging self-custody practice. This is an all out attack on financial privacy within bitcoin. If enacted, any user who leverages these tools will be flagged as a suspicious, any attempts to send a UTXO that has touched any of these tools will be rejected by regulated services, and could potentially be sent to prison.</p><p>This is an absurd affront to common sensibilities and freedom in the digital age. The fact that they want to prevent people from using single addresses for individual UTXOs is patently absurd. Not only is it a massive infringement on privacy, but it makes bitcoin usage less economically efficient and degrades the security of every bitcoiner. Loading up a single address with too many UTXOs degrades the entropy of a public-private key pair and makes it easier to brute force a user's private key.</p><p>Instead of expanding the Patriot Act, it should be abolished. Instead of trying to eliminate financial privacy for the 99.9% of law abiding citizens in this country, the government should be actively trying to foster an environment in which it can be improved. The proposed solutions will do nothing but put good Americans in harm's way and degrade the security of their savings.</p><p>We shouldn't have to live in a world where standards cater to the lowest common denominator, in this case criminals, and make things worse off for the overwhelming majority of the population. It's crazy that this even has to be said. The onus is on law enforcement to be so good at their jobs that they are able to prevent crimes from happening before they occur and effectively bring criminals to heel after they commit crimes. It shouldn't be on a neutral protocol and the industry being built on top of it that, when used effectively, provides people with a stable monetary system that respects user privacy and equips them with the tools to receive and spend in a way that provides them with peace of mind.</p><p>Why should everyone have to suffer because of a few bad apples? Isn't that letting the terrorist win? </p><h3 id="bitcoin-is-becoming-less-volatile-as-it-integrates-into-traditional-finance-infrastructure">Bitcoin Is Becoming Less Volatile as It Integrates Into Traditional Finance Infrastructure</h3><p>Mel Mattison revealed a fascinating shift in Bitcoin's market dynamics that challenges conventional crypto wisdom. He pointed out that Bitcoin futures now exhibit lower volatility than platinum futures - a remarkable transformation for an asset once synonymous with wild price swings. The proliferation of ETFs, options, futures, and other traditional financial instruments has fundamentally altered Bitcoin's behavior, creating what Mel calls "volatility suppression." This institutionalization comes with trade-offs: while reducing dramatic downswings, it also caps explosive upside potential.</p><blockquote>"Bitcoin is becoming a TradFi security instrument and it's getting TradFi vol." - <a href="https://x.com/MelMattison1?ref=tftc.io">Mel Mattison</a></blockquote><p>Mel argued that the relationship between volatility and returns means investors must recalibrate expectations. Where 100% annual gains once seemed routine, he now considers 50% returns "massive" for this new era of Bitcoin. This maturation reflects Bitcoin's evolution from speculative experiment to financial infrastructure - less exciting perhaps, but ultimately more sustainable for long-term adoption.</p><p>Check out the <a href="https://youtu.be/QEyxOwaQFzo?ref=tftc.io" rel="noreferrer">full podcast here</a> for more on China's gold strategy, Fed independence battles, and housing market manipulation plans.</p><hr><h3 id="headlines-of-the-day">Headlines of the Day</h3><p>New Bill for Strategic Bitcoin Reserve - via <a href="https://x.com/TFTC21/status/1965148899565600991?ref=tftc.io">X</a></p><p>SEC to Host Crypto Roundtable October 17 - via <a href="https://x.com/TFTC21/status/1965140430838006076?ref=tftc.io">X</a></p><p>Research Proposes Bitcoin for Mars Trade Standard - via <a href="https://x.com/TFTC21/status/1965135337543664112?ref=tftc.io">X</a></p><hr><h3 id="secure-your-bitcoin-the-hard-way">Secure Your Bitcoin The Hard Way</h3><p>Tom Honzik has helped 1,000+ people secure more than 5,000 BTC. Now, TFTC and Unchained are teaming up for a live online session on bitcoin custody.What you’ll learn:</p><ul><li>Biggest mistakes that cause lost coins</li><li>Tradeoffs of exchanges, ETFs, singlesig, and multisig</li><li>How to get optimal security without blindly trust custodians or DIY risk</li></ul><p>Stick around for the AMA to ask Tom Honzik and Marty Bent anything—from privacy considerations to the tradeoffs of different multisig quorums.</p><figure><img src="https://www.tftc.io/content/images/2025/08/D1--9--1.png" alt="" loading="lazy" width="2000" height="344" srcset="https://www.tftc.io/content/images/size/w600/2025/08/D1--9--1.png 600w, https://www.tftc.io/content/images/size/w1000/2025/08/D1--9--1.png 1000w, https://www.tftc.io/content/images/size/w1600/2025/08/D1--9--1.png 1600w, https://www.tftc.io/content/images/size/w2400/2025/08/D1--9--1.png 2400w" sizes="(min-width: 720px) 720px"><figcaption><a href="https://www.unchained.com/o/secure-your-bitcoin-the-hard-way?utm_campaign=sybthw&amp;utm_medium=affiliate&amp;utm_source=tftc&amp;utm_content=newsletter"><span>Register Now</span></a></figcaption></figure><h3 id="obscura-%E2%80%93-the-world%E2%80%99s-best-vpn-built-by-bitcoiners">Obscura – The World’s Best VPN Built by Bitcoiners</h3><p>Created by Carl Dong (former Bitcoin Core contributor), unlike other VPNs, it <em>can’t</em> log your activity by design, delivering verifiable privacy you can trust.</p><figure><a href="https://obscura.net/?ref=tftc.io"><img src="https://www.tftc.io/content/images/2025/08/newsletter-1.jpg" alt="" loading="lazy" width="1920" height="505" srcset="https://www.tftc.io/content/images/size/w600/2025/08/newsletter-1.jpg 600w, https://www.tftc.io/content/images/size/w1000/2025/08/newsletter-1.jpg 1000w, https://www.tftc.io/content/images/size/w1600/2025/08/newsletter-1.jpg 1600w, https://www.tftc.io/content/images/2025/08/newsletter-1.jpg 1920w" sizes="(min-width: 720px) 720px"></a><figcaption><a href="https://obscura.net/?ref=tftc.io" rel="noreferrer"><span>USE CODE TFTC25</span></a></figcaption></figure><p><strong>Outsmarts internet censorship</strong>: works even on the most restrictive Wi-Fi networks where other VPNs fail.<br><strong>Pay with bitcoin over Lightning:</strong> better privacy and low fees.<br><strong>No email required: </strong>accounts are generated like bitcoin wallets.<br><strong>No trade-offs</strong>: browse freely with fast, reliable speeds.</p><p><strong>Exclusive Deal for TFTC Listeners:</strong><br>Sign up at <a href="https://obscura.net/?ref=tftc.io" rel="noopener">obscura.net</a> and use code <strong>TFTC25</strong> for <strong>25% off your first 12 months</strong>.</p><p>Now available on <strong>macOS, iOS, and WireGuard</strong>, with more platforms coming soon — so your privacy travels with you wherever you go.</p><hr><p><em>Ten31, the largest bitcoin-focused investor, has deployed $200M across 30+ companies through three funds. I am a Managing Partner at Ten31 and am very proud of the work we are doing. Learn more at </em><a href="https://ten31.vc/invest?ref=tftc.io" rel="noreferrer">ten31.vc/invest</a><em>.</em></p><hr><p><strong>Final thought...</strong></p><p>Rest in peace, Charlie Kirk. Pray for humanity and for peace. </p><hr><p><em>Download our free browser extension, <strong>Opportunity Cost</strong>: </em><a href="https://www.opportunitycost.app/?ref=tftc.io">https://www.opportunitycost.app/</a> start thinking in SATS today. </p><p><em>Get this newsletter sent to your inbox daily: </em><a href="https://www.tftc.io/bitcoin-brief/"><em>https://www.tftc.io/bitcoin-brief/</em></a></p><p><em>Subscribe to our YouTube channels and follow us on Nostr and X:</em></p>
<!--kg-card-begin: html-->
  <!--[if mso]>
        <noscript>
        <xml>
        <o:OfficeDocumentSettings>
          <o:AllowPNG/>
          <o:PixelsPerInch>96</o:PixelsPerInch>
        </o:OfficeDocumentSettings>
        </xml>
        </noscript>
        <![endif]-->
  <!--[if lte mso 11]>
        <style type="text/css">
          .mj-outlook-group-fix { width:100% !important; }
        </style>
        <![endif]-->
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  

 
<!--kg-card-end: html-->

                        <div id="referral-container-end">
        <div>
          <p><img src="https://www.tftc.io/content/images/2022/02/TFTC_03_Cream.png" alt="TFTC"></p><svg viewBox="2190 54 2569 417" xmlns="http://www.w3.org/2000/svg">
                        <path d="M2223.75,408 L2223.75,240 L2285.25,240 L2384.75,408 L2422.25,408 L2319.25,238 C2328.91667,236.666667 2339.08333,234.333333 2349.75,231 C2360.41667,227.666667 2370.16667,222.583333 2379,215.75 C2387.83333,208.916667 2395.16667,200 2401,189 C2406.83333,178 2409.75,164 2409.75,147 C2409.75,131.666667 2407.25,118.666667 2402.25,108 C2397.25,97.3333333 2390.91667,88.5 2383.25,81.5 C2375.58333,74.5 2366.91667,69.1666667 2357.25,65.5 C2347.58333,61.8333333 2338.08333,59.1666667 2328.75,57.5 C2319.41667,55.8333333 2310.75,54.8333333 2302.75,54.5 C2294.75,54.1666667 2288.41667,54 2283.75,54 L2283.75,54 L2190.75,54 L2190.75,408 L2223.75,408 Z M2293.75,210 L2223.75,210 L2223.75,84 L2293.75,84 C2311.08333,84 2325.16667,86.1666667 2336,90.5 C2346.83333,94.8333333 2355.25,100.166667 2361.25,106.5 C2367.25,112.833333 2371.33333,119.666667 2373.5,127 C2375.66667,134.333333 2376.75,141 2376.75,147 C2376.75,153 2375.66667,159.666667 2373.5,167 C2371.33333,174.333333 2367.25,181.166667 2361.25,187.5 C2355.25,193.833333 2346.83333,199.166667 2336,203.5 C2325.16667,207.833333 2311.08333,210 2293.75,210 L2293.75,210 Z M2761.75,408 L2761.75,378 L2570.25,378 L2570.25,240 L2742.25,240 L2742.25,210 L2570.25,210 L2570.25,84 L2753.75,84 L2753.75,54 L2537.25,54 L2537.25,408 L2761.75,408 Z M2981.25,408 L3070.75,93 L3071.75,93 L3161.25,408 L3201.75,408 L3304.75,54 L3270.75,54 L3182.75,367.5 L3181.75,367.5 L3092.25,54 L3050.25,54 L2960.75,367.5 L2959.75,367.5 L2871.75,54 L2837.75,54 L2940.75,408 L2981.25,408 Z M3385.25,408 L3425.25,314 L3612.75,314 L3651.25,408 L3688.25,408 L3539.25,54 L3505.25,54 L3350.75,408 L3385.25,408 Z M3600.75,284 L3438.25,284 L3520.75,90 L3600.75,284 Z M3822.25,408 L3822.25,240 L3883.75,240 L3983.25,408 L4020.75,408 L3917.75,238 C3927.41667,236.666667 3937.58333,234.333333 3948.25,231 C3958.91667,227.666667 3968.66667,222.583333 3977.5,215.75 C3986.33333,208.916667 3993.66667,200 3999.5,189 C4005.33333,178 4008.25,164 4008.25,147 C4008.25,131.666667 4005.75,118.666667 4000.75,108 C3995.75,97.3333333 3989.41667,88.5 3981.75,81.5 C3974.08333,74.5 3965.41667,69.1666667 3955.75,65.5 C3946.08333,61.8333333 3936.58333,59.1666667 3927.25,57.5 C3917.91667,55.8333333 3909.25,54.8333333 3901.25,54.5 C3893.25,54.1666667 3886.91667,54 3882.25,54 L3882.25,54 L3789.25,54 L3789.25,408 L3822.25,408 Z M3892.25,210 L3822.25,210 L3822.25,84 L3892.25,84 C3909.58333,84 3923.66667,86.1666667 3934.5,90.5 C3945.33333,94.8333333 3953.75,100.166667 3959.75,106.5 C3965.75,112.833333 3969.83333,119.666667 3972,127 C3974.16667,134.333333 3975.25,141 3975.25,147 C3975.25,153 3974.16667,159.666667 3972,167 C3969.83333,174.333333 3965.75,181.166667 3959.75,187.5 C3953.75,193.833333 3945.33333,199.166667 3934.5,203.5 C3923.66667,207.833333 3909.58333,210 3892.25,210 L3892.25,210 Z M4240.75,408 C4271.41667,408 4297.41667,404.25 4318.75,396.75 C4340.08333,389.25 4357.83333,379.666667 4372,368 C4386.16667,356.333333 4397.33333,343.416667 4405.5,329.25 C4413.66667,315.083333 4419.66667,301.5 4423.5,288.5 C4427.33333,275.5 4429.75,263.75 4430.75,253.25 C4431.75,242.75 4432.25,235.333333 4432.25,231 C4432.25,226.666667 4431.75,219.25 4430.75,208.75 C4429.75,198.25 4427.33333,186.5 4423.5,173.5 C4419.66667,160.5 4413.66667,146.916667 4405.5,132.75 C4397.33333,118.583333 4386.16667,105.666667 4372,94 C4357.83333,82.3333333 4340.08333,72.75 4318.75,65.25 C4297.41667,57.75 4271.41667,54 4240.75,54 L4240.75,54 L4131.25,54 L4131.25,408 L4240.75,408 Z M4232.25,378 L4164.25,378 L4164.25,84 L4232.25,84 C4255.58333,84 4277.41667,86.9166667 4297.75,92.75 C4318.08333,98.5833333 4335.75,107.5 4350.75,119.5 C4365.75,131.5 4377.58333,146.75 4386.25,165.25 C4394.91667,183.75 4399.25,205.666667 4399.25,231 C4399.25,256.333333 4394.91667,278.25 4386.25,296.75 C4377.58333,315.25 4365.75,330.5 4350.75,342.5 C4335.75,354.5 4318.08333,363.416667 4297.75,369.25 C4277.41667,375.083333 4255.58333,378 4232.25,378 L4232.25,378 Z M4649.25,417 C4663.58333,417 4677.41667,414.833333 4690.75,410.5 C4704.08333,406.166667 4715.83333,399.75 4726,391.25 C4736.16667,382.75 4744.25,372.333333 4750.25,360 C4756.25,347.666667 4759.25,333.5 4759.25,317.5 C4759.25,295.5 4754.75,278.25 4745.75,265.75 C4736.75,253.25 4725.5,243.5 4712,236.5 C4698.5,229.5 4683.83333,223.916667 4668,219.75 C4652.16667,215.583333 4637.5,210.75 4624,205.25 C4610.5,199.75 4599.25,192.25 4590.25,182.75 C4581.25,173.25 4576.75,159.666667 4576.75,142 C4576.75,130.666667 4578.91667,120.833333 4583.25,112.5 C4587.58333,104.166667 4593.33333,97.25 4600.5,91.75 C4607.66667,86.25 4616.08333,82.0833333 4625.75,79.25 C4635.41667,76.4166667 4645.58333,75 4656.25,75 C4671.58333,75 4684.83333,77.9166667 4696,83.75 C4707.16667,89.5833333 4716.91667,98.3333333 4725.25,110 L4725.25,110 L4753.75,89.5 C4741.75,73.5 4727.5,62.0833333 4711,55.25 C4694.5,48.4166667 4676.58333,45 4657.25,45 C4642.25,45 4627.91667,47.0833333 4614.25,51.25 C4600.58333,55.4166667 4588.5,61.5833333 4578,69.75 C4567.5,77.9166667 4559.16667,88.0833333 4553,100.25 C4546.83333,112.416667 4543.75,126.333333 4543.75,142 C4543.75,158.666667 4546.33333,172.666667 4551.5,184 C4556.66667,195.333333 4563.58333,204.75 4572.25,212.25 C4580.91667,219.75 4590.66667,225.833333 4601.5,230.5 C4612.33333,235.166667 4623.5,239.333333 4635,243 C4646.5,246.666667 4657.66667,250.333333 4668.5,254 C4679.33333,257.666667 4689.08333,262.083333 4697.75,267.25 C4706.41667,272.416667 4713.33333,279 4718.5,287 C4723.66667,295 4726.25,305.166667 4726.25,317.5 C4726.25,328.166667 4724.16667,337.75 4720,346.25 C4715.83333,354.75 4710.16667,362 4703,368 C4695.83333,374 4687.41667,378.666667 4677.75,382 C4668.08333,385.333333 4657.75,387 4646.75,387 C4629.08333,387 4613.33333,383.333333 4599.5,376 C4585.66667,368.666667 4574.41667,357.5 4565.75,342.5 L4565.75,342.5 L4534.25,363.5 C4548.25,382.833333 4565.08333,396.583333 4584.75,404.75 C4604.41667,412.916667 4625.91667,417 4649.25,417 Z" fill="currentColor"></path>
                    </svg>
        </div>
        <h4>Spread the signal, <br>earn Bitcoin.</h4>
        <p>Get your unique referral link when you subscribe.</p>
        <p><a href="https://www.tftc.io/rewards">Learn more →</a>
      </p></div>
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Becoming the person who does the thing (198 pts)]]></title>
            <link>https://www.fredrivett.com/2025/09/10/becoming-the-person-who-does-the-thing/</link>
            <guid>45220656</guid>
            <pubDate>Fri, 12 Sep 2025 10:24:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.fredrivett.com/2025/09/10/becoming-the-person-who-does-the-thing/">https://www.fredrivett.com/2025/09/10/becoming-the-person-who-does-the-thing/</a>, See on <a href="https://news.ycombinator.com/item?id=45220656">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>It can be disorienting when our beliefs shift. The world we helped create no longer exists, and our role in it transforms too.</p>
<p>It can be unsettling, naturally. But that's kind of the point.</p>
<p>Looking back at times when I held certain beliefs—about how the world works, and what my role in this story is—it can feel less like a mod was installed and more like an entirely new operating system was swapped in.</p>
<p>Up until my late twenties, I could count the number of times I had been to the gym on one hand.</p>
<p>And worse, as a nerd, I was quietly proud of it. Why waste hours a week on something that hardly mattered? I have better things to do. I pitied the jocks who slaved away in the gym chasing vanity. What for? I don't need that. Who cares?</p>
<p>Like all childish thinking, it contained some truth. Physical fitness is less important than spiritual, emotional, and mental fitness; but it’s still important.</p>
<p>Even Paul, one of history’s most influential figures, with a worldview shaped by the utter centrality of spiritual health, <a href="https://www.bible.com/bible/111/1TI.4.8.NIV" target="_blank">said as much</a>.</p>
<p>Your beliefs—and therefore approach to what a healthy life looks like—are foundational. It might sound obvious, but what you believe a "life well lived" looks like has a pretty transformative impact on both what life you end up building and how well lived it looks.</p>
<p>So if we’re a product of our beliefs and our most formative preconceptions are imposed by others, then where’s the hope?</p>
<p>We build, layer upon layer, and the layers laid first—now deeply buried within—are the ones we had the least say in.</p>
<p>We didn't pick them, but they shape everything we are and do. Bad luck, I guess.</p>
<p>Thankfully, we are dynamic beings. Old beliefs can peel off, and new ones take their place. Later layers can somehow seep deeper. Some recent beliefs can even become cornerstones.</p>
<p>For me, something shifted in my late twenties. Growing up I guess you could call it. I don’t remember the exact straw that broke the camel’s back, but a desire for change grew. I started working out.</p>
<p>It began slowly, but I began. Knee press-ups to start, later adding assisted pull-ups.</p>
<p>If anyone was watching, it would have looked stupid. A grown man barely able to push himself off the floor. But I showed up and put in my reps, day by day, week by week, in the privacy of my bedroom.</p>
<p>As the weeks and months passed, my strength grew.</p>
<p>Eventually, I graduated to full press-ups and pull-ups, no mods required.</p>
<p>Every small win reinforced the last and led me further away from who I used to be.</p>
<p>Fast forward almost to a decade and I feel a lot more friction <em>not</em> going to the gym than I do <em>going</em>. Cognitive dissonance is wonderful when it’s on your side, and it pops up whenever my healthy-Fred self-identity and actions diverge.</p>
<p>I'm far from a gym junkie—it hasn't become my life—but I go every weekday, 20 minutes a day. I arrive, do my workout, and leave, while most people are just getting started.</p>
<p>Our self-identity dictates everything, but it is not set in stone.</p>
<p>Changing our beliefs isn’t easy. Both those about the world around us and the world within. We can't simply will our way there and snap our fingers. We must journey. As with all great things, it's a process.</p>
<p>But it is possible. A well-trodden path is ahead for those who wish to walk it.</p>
<p>So how do you? How do you <em>become the person who does the thing</em>?</p>
<p>Earlier this week I spent a couple hours crafting my digital <a href="https://www.fredrivett.com/shelf" target="_blank">/shelf</a>, a place where I can put the things that have impacted me the most up for all to see, so others can take them for themselves should they wish.</p>
<p>On it are these two quotes that have been living rent-free in my head from the beginning. Together, they create a twin-cog flywheel that cannot be stopped:</p>
<blockquote>
<a href="https://seths.blog/2013/07/people-like-us-do-stuff-like-this/" target="_blank">“People like us do things like this”</a>
<cite>Seth Godin</cite>
</blockquote>
<blockquote>
<a href="https://jamesclear.com/quotes/every-action-you-take-is-a-vote-for-the-type-of-person-you-wish-to-become" target="_blank">“Every action you take is a vote for the type of person you wish to become”</a>
<cite>James Clear</cite>
</blockquote>
<p>Your actions follow your self-beliefs.</p>
<p>If you identity as a failure, incapable of achievement, unfit, unlovable, destined to play a bit-part role in your own story, then by heck no matter how much willpower you put in to push that boulder up the hill, it will return to its place.</p>
<p>But there's a way through: every action you take is a vote for who you wish to become. Every day you wake up, look your old identity in the eye and say "thanks for your service, but you're not needed around here anymore," step forward and lean in, is a day your new identity is built.</p>
<p>It takes time. You have to actually want it. You have to choose to adopt a new mindset. Rome wasn't built in a day. But it comes, a little like how <a href="https://quoteinvestigator.com/2018/08/08/all-at-once/" rel="nofollow noreferrer" target="_blank">Hazel Grace Lancaster describes falling in love in The Fault In Our Stars</a>: <em>"slowly, and then all at once."</em></p>
<p>The path is there, should you choose.</p>
<p>Identify where your identity needs to shift. Then take a step. Cast today’s vote. Find your way through.</p>
<p>Do that day by day, then soon enough, your inner world will shift and recalibrate around the new reality you're co-creating.</p>
<p>Then one day you'll see it.</p>
<p>People like us really do things like this.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I made a generative online drum machine with ClojureScript (169 pts)]]></title>
            <link>https://dopeloop.ai/beat-maker/</link>
            <guid>45220069</guid>
            <pubDate>Fri, 12 Sep 2025 08:44:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dopeloop.ai/beat-maker/">https://dopeloop.ai/beat-maker/</a>, See on <a href="https://news.ycombinator.com/item?id=45220069">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Rust: A quest for performant, reliable software [video] (105 pts)]]></title>
            <link>https://www.youtube.com/watch?v=k_-6KI3m31M</link>
            <guid>45219817</guid>
            <pubDate>Fri, 12 Sep 2025 07:58:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=k_-6KI3m31M">https://www.youtube.com/watch?v=k_-6KI3m31M</a>, See on <a href="https://news.ycombinator.com/item?id=45219817">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Qwen3-Next (535 pts)]]></title>
            <link>https://qwen.ai/blog?id=4074cca80393150c248e508aa62983f9cb7d27cd&amp;from=research.latest-advancements-list</link>
            <guid>45219228</guid>
            <pubDate>Fri, 12 Sep 2025 06:32:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://qwen.ai/blog?id=4074cca80393150c248e508aa62983f9cb7d27cd&#x26;from=research.latest-advancements-list">https://qwen.ai/blog?id=4074cca80393150c248e508aa62983f9cb7d27cd&#x26;from=research.latest-advancements-list</a>, See on <a href="https://news.ycombinator.com/item?id=45219228">Hacker News</a></p>
Couldn't get https://qwen.ai/blog?id=4074cca80393150c248e508aa62983f9cb7d27cd&from=research.latest-advancements-list: Error: getaddrinfo ENOTFOUND qwen.ai]]></description>
        </item>
        <item>
            <title><![CDATA[Debian 13, Postgres, and the US time zones (268 pts)]]></title>
            <link>https://rachelbythebay.com/w/2025/09/11/debtz/</link>
            <guid>45218111</guid>
            <pubDate>Fri, 12 Sep 2025 02:33:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rachelbythebay.com/w/2025/09/11/debtz/">https://rachelbythebay.com/w/2025/09/11/debtz/</a>, See on <a href="https://news.ycombinator.com/item?id=45218111">Hacker News</a></p>
Couldn't get https://rachelbythebay.com/w/2025/09/11/debtz/: Error: Request failed with status code 404]]></description>
        </item>
    </channel>
</rss>