<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 18 Aug 2024 14:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Postmortem of my 9 year journey at Google (175 pts)]]></title>
            <link>https://tinystruggles.com/posts/google_postmortem/</link>
            <guid>41278907</guid>
            <pubDate>Sat, 17 Aug 2024 23:30:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tinystruggles.com/posts/google_postmortem/">https://tinystruggles.com/posts/google_postmortem/</a>, See on <a href="https://news.ycombinator.com/item?id=41278907">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>

    

    
      

    

    
      

    

    <p>I started writing this retrospective during my last week at Google, I have already wrapped up everything, had my goodbyes. In the spirit of SRE (as an ex-SRE), I thought it would be fun to write a little retrospective in the form of a <a href="https://sre.google/sre-book/postmortem-culture/">postmortem</a>.</p>
<h2 id="introduction">Introduction</h2>
<p>I joined Google young and relatively inexperienced and had spent about 9 years there.</p>
<p>I started my journey in software at 19 (first internship) and then continued working part and full time while continuing my degree in Applied Physics. I got disillusioned with working in physics during the course of my degree, software turned out to be a more promising career path.</p>
<p>At some point I got head hunted by a Google sourcer. That resulted in an internship in London when I was 22, later I joined full time in Dublin. I worked in several teams around three products: Bigtable, Persistent Disk and GCE VMs (virtual machines). I include a detailed timeline at the bottom of this post.</p>
<h2 id="what-did-i-expect-from-joining-google">What did I expect from joining Google?</h2>
<p>After I got a taste of Google during my London internship, I was excited for more. What appealed to me was the level of engineering, how sophisticated and interesting the technology was and the level of engineers.</p>
<p>My only experience until then was with small software houses and startups in Poland, but Google… Google had some of the best tech in the world, and I had an opportunity to work with it and learn it. That was making me very excited.</p>
<p>Google impressed me. I didn’t see myself bored easily, I could stay in for longer, maybe even 5 years and I would still continue learning.
Other things that appealed to me were the pay, the perks and fun international community.</p>
<p>From the big picture perspective, I wanted to start my own company, but a detour at Google could give me skills, fun and money to be better positioned to that in the future. I took the plunge.</p>
<h2 id="so-how-was-it">So, how was it?</h2>
<p>Overall, it was incredible. There were ups and downs. Heartwarming moments, joy of teamwork, satisfaction, as well as lots of stresses and frustrations.</p>
<p>It was a mutually beneficial exchange, I poured my energy, soul and cognitive resources and I got form it:</p>
<ul>
<li>tons of money</li>
<li>engineering skills, low and high level, great systems understanding and world class skills in handling crises and debugging</li>
<li>leadership and management skills</li>
<li>satisfaction from being part of a cool company</li>
<li>cool offsites and business travels</li>
<li>lifestyle perks, including things like pool in the office, world class gym, all sort of sport classes, weekly massages, tasty and/or healthy meals, healthcare on site</li>
<li>great community and relationships</li>
</ul>
<p>At some point the exchange became less attractive to me. There were several factors:</p>
<ul>
<li>reached/exceeded my financial goals</li>
<li>fascination with Google tech waned:</li>
<li>industry somewhat caught up</li>
<li>reality of actual work not being that mind blowing</li>
<li>my interests saturated/shifted</li>
<li>desire to start my own company (yes, I can wait, but not for decades!)</li>
<li>company became less fun/cool</li>
<li>budget cuts (less business travel, no mind blowing offsites anymore)</li>
<li>layoffs</li>
<li>Head Count shifting to cheap locations aggressively - less opportunity for me to grow my organization locally</li>
<li>lots of overheads related to security/regulations</li>
<li>many hard engineering challenges due to complex systems and relationships between teams slowing the velocity</li>
<li>cognitive load - this was less of a factor in my last role, but bigger problem in the previous one. Google tech has lots of complexity and nuance, it’s pretty typical that an industry hire employee might need a year to fully ramp up which is pretty crazy</li>
<li>opportunities for personal growth somewhat unclear</li>
<li>there were no dramatic shifts in sight, just more of the same (which is also valuable, I just didn’t want coast)</li>
<li>tapped out career-wise: L6 ICs are pretty rare - it already is a top tier of seniority in engineering, I was not really interested in L7 as L7 is more of a political role than the engineering one on the individual track, and on the management track there was no headcount in sight… if I had an opportunity to become a manager of managers and run a big org under myself I would stay longer</li>
<li>shape of the technical work was not aligned with my interest in what I would like to be growing at.</li>
</ul>
<h2 id="lessons-learned">Lessons learned</h2>
<p>It’s hard to compress 9 years of learning into a bunch of bullet points. I learned technical skills, I learned soft skills, I became a better and a wiser person and a leader.</p>
<p>And in the spirit of being a (somewhat) anxious overachiever, I consistently felt that I could be doing better along the way - always motivating me to strive and learn.</p>
<h3 id="what-went-well">What went well</h3>
<ul>
<li>I got promoted quickly</li>
<li>I ended at L6 which is highly regarded and well compensated</li>
<li>I always had lots of autonomy</li>
<li>I could always push back for work life balance (reasonable hours and workload)</li>
<li>inspiring, motivated and smart coworkers</li>
<li>earn more money that I could have imagined</li>
<li>used a lot of perks that enabled very healthy lifestyle</li>
<li>lots of fun travels for work (business and offsites)</li>
<li>grew as an engineer and as a leader</li>
<li>drastically improved my soft skills</li>
<li>made a lot of work friends</li>
<li>learned about lots of cool technologies</li>
<li>had an opportunity to create my own team from scratch</li>
<li>working 60% or 80% were fantastic for my lifestyle and building relationships outside of work</li>
<li>learned a lot of tools for dealing with (chronic) stress</li>
</ul>
<h3 id="what-went-poorly">What went poorly</h3>
<ul>
<li>I have overstayed as SRE - Dublin didn’t have much options and I didn’t move to a different site (inertia, personal reasons, etc)</li>
<li>oncall was stressing me out and disrupting my sleep,</li>
<li>not the best fit for my personality which is more optimistic and creative - this led to feeling of misalignment, I felt somewhat unfulfilled at - work in terms of type of work and projects and compensated outside of work with side projects</li>
<li>24/7 nature of the organization was making it hard to disconnect</li>
<li>USA centric culture, if you are not in USA at Google and don’t have a big presence in a location it’s a bit like swimming upstream, it’s easy to feel isolated, sidelined or on the flipside overwhelmed with late meetings</li>
<li>Promised HC not landing - e.g. I was promised further expansion twice, which later was scratched and then promised again in a bit different form…</li>
<li>senior level managers overwhelmed and not providing support/feedback or pretty much any oversight (there were moments when things felt a bit like a wild west)</li>
<li>there were many periods when I felt like I was overwhelmed with meetings/repetitive work/underresourced team, but at the same time not having good engineering/or management growth opportunities</li>
<li>cognitive load at Google is very high - there is a countless number of systems and technologies that it’s useful to have in mind and can affect your system in one way or another (this is especially bad in SRE)</li>
</ul>
<h3 id="where-did-i-get-lucky">Where did I get lucky?</h3>
<ul>
<li>Google stock did very well, additionally with my rapid career trajectory, I did very well too 🙂</li>
<li>The people I hired turned out to be really solid</li>
<li>I somehow figured things out - building a track record of being high performer even though some things were definitely stretch opportunities</li>
<li>I made good financial decisions, could have been luckier, but the decisions had good thought process</li>
<li>I made amazing connections</li>
</ul>
<h3 id="what-could-i-have-done-differently">What could I have done differently?</h3>
<ul>
<li>Move out of SRE earlier since from the beginning I knew it wasn’t what I wanted</li>
<li>Move to a different site - it’s easy to cling to a thing that is already good, there is a cost of switching as well, but I undervalued exploration historically</li>
<li>Take more advantage of education reimbursements (e.g. take more stanford online courses)</li>
</ul>
<h2 id="action-items">Action items</h2>
<p>A typical postmortem would present a table of categorized action items. But I’m not here to mobilize anyone…</p>
<p>The next thing for me is a sabbatical consisting of at least 6 months on exploring, relaxing, learning new things and expanding my idea of what I could be doing next.</p>
<p>I have a tendency to underexplore and I love being productive with a clear objective, so a sabbatical is a psychological challenge. I will be writing more on the topic so stay tuned!</p>
<h2 id="timeline">Timeline</h2>
<h4 id="summer-2015---app-engine-sre-intern-london">Summer 2015 - App Engine SRE Intern (London)</h4>
<ul>
<li>Cloud Bigtable SRE Era (Dublin)</li>
<li>joined as an L3 engineer</li>
<li>got promoted to L4 within 9 months</li>
<li>Cloud bigtable TL role</li>
<li>got promoted to L5 within 1.5 year</li>
</ul>
<h4 id="persistent-disk-sre-era">Persistent Disk SRE Era</h4>
<ul>
<li>joined as an L5</li>
<li>wondered around until landed in a work group related to project that later became hyperdisk</li>
<li>the US sister team disbanned and to be recreated in Seattle</li>
<li>became a defacto SRE TL of hyperdisk and created a team for it</li>
<li>promoted to L6</li>
<li>became a manager of Persitent Disk IO SRE</li>
<li>Persistent Disk SRE issues with burnout and attrition (SRE hiring issues, rapid dev org growth 40→200, etc)</li>
</ul>
<h4 id="gce-fleet-maintenance-dev-era">GCE Fleet Maintenance Dev Era</h4>
<ul>
<li>joined as an L6 IC SWE</li>
<li>director who hired me became a VP and dumped me on some other manager that was overloaded</li>
<li>took over a struggling internal project and made it successful and recruited a team around it in Dublin</li>
<li>transitioned from IC to a manager of 4 and then 6</li>
<li>started a 2nd team under a different senior manager</li>
<li>defragged the 2nd team because of the lack of head count, reinvented the main team charter</li>
</ul>


</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Build your own SQLite, Part 1: Listing tables (132 pts)]]></title>
            <link>https://blog.sylver.dev/build-your-own-sqlite-part-1-listing-tables</link>
            <guid>41278807</guid>
            <pubDate>Sat, 17 Aug 2024 23:13:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.sylver.dev/build-your-own-sqlite-part-1-listing-tables">https://blog.sylver.dev/build-your-own-sqlite-part-1-listing-tables</a>, See on <a href="https://news.ycombinator.com/item?id=41278807">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-content-parent"><p>As developers, we use databases all the time. But how do they work? In this series, we'll try to answer that question by building our own SQLite-compatible database from scratch.</p>
<p>Source code examples will be provided in Rust, but you are encouraged to follow along using your language of choice, as we won't be relying on many language-specific features or libraries.</p>
<p>As an introduction, we'll implement the simplest version of the <code>tables</code> command, which lists the names of all the tables in a database. While this looks simple, we'll see that it requires us to make our first deep dive into the SQLite file format.</p>
<p>The complete source code is available on <a target="_blank" href="https://github.com/geoffreycopin/rqlite/tree/16e2dbe95a420d1d88ad2555552c2072206d2308">Github</a>.</p>
<h2 id="heading-building-the-test-database">Building the test database</h2>
<p>To keep things as simple as possible, let's build a minimalistic test database:</p>
<pre><code>sqlite3 minimal_test.db
sqlite&gt; create table table1(id <span>integer</span>);
sqlite&gt; create table table2(id <span>integer</span>);
sqlite&gt; .<span>exit</span>
</code></pre>
<p>This creates a database with two tables, <code>table1</code> and <code>table2</code>, each with a single column, <code>id</code>. We can verify this by running the <code>tables</code> command in the SQLite shell:</p>
<pre><code>sqlite3 minimal_test.db
sqlite&gt; .tables
table1  table2
sqlite&gt; .<span>exit</span>
</code></pre>
<h2 id="heading-bootstrapping-the-project">Bootstrapping the project</h2>
<p>Let's start by creating a new Rust project. We'll use the <code>cargo add</code> to add our only dependency for now, <code>anyhow</code>:</p>
<pre><code>cargo new rsqlite
<span>cd</span> rsqlite
cargo add anyhow
</code></pre>
<h2 id="heading-the-sqlite-file-format">The SQLite file format</h2>
<p><img loading="lazy" src="https://cdn.hashnode.com/res/hashnode/image/upload/v1721572171598/5c4195b6-5472-4ba1-826d-d8f5b6660527.png?auto=compress,format&amp;format=webp" alt=""></p>
<p>SQLite databases are stored in a single file, the format of which is documented in the <a target="_blank" href="https://www.sqlite.org/fileformat.html">SQLite File Format Specification</a>. The file is divided into pages, with each page having the same size: a power of 2, between 512 and 65536 bytes. The first 100 bytes of the first page contain the database header, which includes information such as the page size and the file format version. In this first part, we'll only be interested in the page size. Pages can be of different types, but for this first article, we'll only be interested in <code>table btree leaf</code> pages, which store the actual table data.</p>
<p>Our first task will be to implement a <code>Pager</code> struct that reads and caches pages from the database file. But before we do, we'll have to read the page size from the database header. Let's start by defining our <code>Header</code> struct:</p>
<pre><code><span>// src/page.rs</span>
<span>#[derive(Debug, Copy, Clone)]</span>
<span>pub</span> <span><span>struct</span> <span>DbHeader</span></span> {
    <span>pub</span> page_size: <span>u32</span>,
}
</code></pre>
<p>The header starts with the magic string <code>SQLite format 3\0</code>, followed by the page size encoded as a big-endian 2-byte integer at offset 16. With this information, we can implement a function that reads the header from a buffer:</p>
<pre><code><span>// src/pager.rs</span>
<span>pub</span> <span>const</span> HEADER_SIZE: <span>usize</span> = <span>100</span>;
<span>const</span> HEADER_PREFIX: &amp;[<span>u8</span>] = <span>b"SQLite format 3\0"</span>;
<span>const</span> HEADER_PAGE_SIZE_OFFSET: <span>usize</span> = <span>16</span>;

<span>const</span> PAGE_MAX_SIZE: <span>u32</span> = <span>65536</span>;

<span>pub</span> <span><span>fn</span> <span>parse_header</span></span>(buffer: &amp;[<span>u8</span>]) -&gt; anyhow::<span>Result</span>&lt;page::DbHeader&gt; {
    <span>if</span> !buffer.starts_with(HEADER_PREFIX) {
        <span>let</span> prefix = <span>String</span>::from_utf8_lossy(&amp;buffer[..HEADER_PREFIX.len()]);
        anyhow::bail!(<span>"invalid header prefix: {prefix}"</span>);
    }

    <span>let</span> page_size_raw = read_be_word_at(buffer, HEADER_PAGE_SIZE_OFFSET);
    <span>let</span> page_size = <span>match</span> page_size_raw {
        <span>1</span> =&gt; PAGE_MAX_SIZE,
        n <span>if</span> n.is_power_of_two() =&gt; n <span>as</span> <span>u32</span>,
        _ =&gt; anyhow::bail!(<span>"page size is not a power of 2: {}"</span>, page_size_raw),
    };

    <span>Ok</span>(page::Header { page_size })
}

<span><span>fn</span> <span>read_be_word_at</span></span>(input: &amp;[<span>u8</span>], offset: <span>usize</span>) -&gt; <span>u16</span> {
    <span>u16</span>::from_be_bytes(input[offset..offset + <span>2</span>].try_into().unwrap())
}
</code></pre>
<p>As the maximum page size cannot be represented as a 2-byte integer, a page size of 1 is use to represent the maximum page size.</p>

<h2 id="heading-decoding-table-b-tree-leaf-pages">Decoding Table B-tree leaf pages</h2>
<p><img loading="lazy" src="https://cdn.hashnode.com/res/hashnode/image/upload/v1721571943115/f84ad91d-d3a3-462e-8f2b-1b1975badb1a.png?auto=compress,format&amp;format=webp" alt=""></p>
<p>Now that we have the minimum information we need to read pages from the disk, let's explore the content of a <code>table btree-leaf</code> page. <code>table btree-leaf</code> pages start with an 8-byte header, followed by an sequence of "cell pointers" containing the offset of every cell in the page. The cells contain the table data, and we can think of them as key-value pairs, where the key is a 64-bits integer encoded as a <a target="_blank" href="https://carlmastrangelo.com/blog/lets-make-a-varint">varint</a> (the <code>rowid</code>) and the value is an arbitrary sequence of bytes representing the row data. The header contains the following fields:</p>
<ul>
<li><p><code>page_type</code>: byte representing the page type. For <code>table btree-leaf</code> pages, this is 0x0D.</p>
</li>
<li><p><code>first_freeblock</code>: 2-byte integer representing the offset of the first free block in the page, or zero if there is no freeblock.</p>
</li>
<li><p><code>cell_count</code>: 2-byte integer representing the number of cells in the page.</p>
</li>
<li><p><code>cell_content_offset</code>: 2-byte integer representing the offset of the first cell.</p>
</li>
<li><p><code>fragmented_bytes_count</code>: 1-byte integer representing the number of fragmented free bytes in the page (we won't make use of it for now).</p>
</li>
</ul>
<p>We'll start by defining a <code>Page</code> enum representing a parsed page, along with the necessary structs to represent the page header and the cell pointers:</p>
<pre><code><span>#[derive(Debug, Clone)]</span>
<span>pub</span> <span><span>enum</span> <span>Page</span></span> {
    TableLeaf(TableLeafPage),
}

<span>#[derive(Debug, Clone)]</span>
<span>pub</span> <span><span>struct</span> <span>TableLeafPage</span></span> {
    <span>pub</span> header: PageHeader,
    <span>pub</span> cell_pointers: <span>Vec</span>&lt;<span>u16</span>&gt;,
    <span>pub</span> cells: <span>Vec</span>&lt;TableLeafCell&gt;,
}

<span>#[derive(Debug, Copy, Clone)]</span>
<span>pub</span> <span><span>struct</span> <span>PageHeader</span></span> {
    <span>pub</span> page_type: PageType,
    <span>pub</span> first_freeblock: <span>u16</span>,
    <span>pub</span> cell_count: <span>u16</span>,
    <span>pub</span> cell_content_offset: <span>u32</span>,
    <span>pub</span> fragmented_bytes_count: <span>u8</span>,
}

<span>#[derive(Debug, Copy, Clone)]</span>
<span>pub</span> <span><span>enum</span> <span>PageType</span></span> {
    TableLeaf,
}

<span>#[derive(Debug, Clone)]</span>
<span>pub</span> <span><span>struct</span> <span>TableLeafCell</span></span> {
    <span>pub</span> size: <span>i64</span>,
    <span>pub</span> row_id: <span>i64</span>,
    <span>pub</span> payload: <span>Vec</span>&lt;<span>u8</span>&gt;,
}
</code></pre>
<p>The corresponding parsing functions are quite straightforward. Note the offset handling in <code>parse_page</code>: since the first page contains the database header, we start parsing the page at offset 100.</p>
<pre><code><span>/// pager.rs</span>
<span>const</span> PAGE_LEAF_HEADER_SIZE: <span>usize</span> = <span>8</span>;
<span>const</span> PAGE_FIRST_FREEBLOCK_OFFSET: <span>usize</span> = <span>1</span>;
<span>const</span> PAGE_CELL_COUNT_OFFSET: <span>usize</span> = <span>3</span>;
<span>const</span> PAGE_CELL_CONTENT_OFFSET: <span>usize</span> = <span>5</span>;
<span>const</span> PAGE_FRAGMENTED_BYTES_COUNT_OFFSET: <span>usize</span> = <span>7</span>;

<span><span>fn</span> <span>parse_page</span></span>(buffer: &amp;[<span>u8</span>], page_num: <span>usize</span>) -&gt; anyhow::<span>Result</span>&lt;page::Page&gt; {
    <span>let</span> ptr_offset = <span>if</span> page_num == <span>1</span> { HEADER_SIZE <span>as</span> <span>u16</span> } <span>else</span> { <span>0</span> };

    <span>match</span> buffer[<span>0</span>] {
        PAGE_LEAF_TABLE_ID =&gt; parse_table_leaf_page(buffer, ptr_offset),
        _ =&gt; <span>Err</span>(anyhow::anyhow!(<span>"unknown page type: {}"</span>, buffer[<span>0</span>])),
    }
}

<span><span>fn</span> <span>parse_table_leaf_page</span></span>(buffer: &amp;[<span>u8</span>], ptr_offset: <span>u16</span>) -&gt; anyhow::<span>Result</span>&lt;page::Page&gt; {
    <span>let</span> header = parse_page_header(buffer)?;

    <span>let</span> content_buffer = &amp;buffer[PAGE_LEAF_HEADER_SIZE..];
    <span>let</span> cell_pointers = parse_cell_pointers(content_buffer, header.cell_count <span>as</span> <span>usize</span>, ptr_offset);

    <span>let</span> cells = cell_pointers
        .iter()
        .map(|&amp;ptr| parse_table_leaf_cell(&amp;buffer[ptr <span>as</span> <span>usize</span>..]))
        .collect::&lt;anyhow::<span>Result</span>&lt;<span>Vec</span>&lt;page::TableLeafCell&gt;&gt;&gt;()?;

    <span>Ok</span>(page::Page::TableLeaf(page::TableLeafPage {
        header,
        cell_pointers,
        cells,
    }))
}


<span><span>fn</span> <span>parse_page_header</span></span>(buffer: &amp;[<span>u8</span>]) -&gt; anyhow::<span>Result</span>&lt;page::PageHeader&gt; {
    <span>let</span> page_type = <span>match</span> buffer[<span>0</span>] {
        <span>0x0d</span> =&gt; page::PageType::TableLeaf,
        _ =&gt; anyhow::bail!(<span>"unknown page type: {}"</span>, buffer[<span>0</span>]),
    };

    <span>let</span> first_freeblock = read_be_word_at(buffer, PAGE_FIRST_FREEBLOCK_OFFSET);
    <span>let</span> cell_count = read_be_word_at(buffer, PAGE_CELL_COUNT_OFFSET);
    <span>let</span> cell_content_offset = <span>match</span> read_be_word_at(buffer, PAGE_CELL_CONTENT_OFFSET) {
        <span>0</span> =&gt; <span>65536</span>,
        n =&gt; n <span>as</span> <span>u32</span>,
    };
    <span>let</span> fragmented_bytes_count = buffer[PAGE_FRAGMENTED_BYTES_COUNT_OFFSET];

    <span>Ok</span>(page::PageHeader {
        page_type,
        first_freeblock,
        cell_count,
        cell_content_offset,
        fragmented_bytes_count,
    })
}


<span><span>fn</span> <span>parse_cell_pointers</span></span>(buffer: &amp;[<span>u8</span>], n: <span>usize</span>, ptr_offset: <span>u16</span>) -&gt; <span>Vec</span>&lt;<span>u16</span>&gt; {
    <span>let</span> <span>mut</span> pointers = <span>Vec</span>::with_capacity(n);
    <span>for</span> i <span>in</span> <span>0</span>..n {
        pointers.push(read_be_word_at(buffer, <span>2</span> * i) - ptr_offset);
    }
    pointers
}

<span><span>fn</span> <span>parse_table_leaf_cell</span></span>(<span>mut</span> buffer: &amp;[<span>u8</span>]) -&gt; anyhow::<span>Result</span>&lt;page::TableLeafCell&gt; {
    <span>let</span> (n, size) = read_varint_at(buffer, <span>0</span>);
    buffer = &amp;buffer[n <span>as</span> <span>usize</span>..];

    <span>let</span> (n, row_id) = read_varint_at(buffer, <span>0</span>);
    buffer = &amp;buffer[n <span>as</span> <span>usize</span>..];

    <span>let</span> payload = buffer[..size <span>as</span> <span>usize</span>].to_vec();

    <span>Ok</span>(page::TableLeafCell {
        size,
        row_id,
        payload,
    })
}

<span><span>fn</span> <span>read_varint_at</span></span>(buffer: &amp;[<span>u8</span>], <span>mut</span> offset: <span>usize</span>) -&gt; (<span>u8</span>, <span>i64</span>) {
    <span>let</span> <span>mut</span> size = <span>0</span>;
    <span>let</span> <span>mut</span> result = <span>0</span>;

    <span>while</span> size &lt; <span>8</span> &amp;&amp; buffer[offset] &gt;= <span>0b1000_0000</span> {
        result |= ((buffer[offset] <span>as</span> <span>i64</span>) &amp; <span>0b0111_1111</span>) &lt;&lt; (<span>7</span> * size);
        offset += <span>1</span>;
        size += <span>1</span>;
    }

    result |= (buffer[offset] <span>as</span> <span>i64</span>) &lt;&lt; (<span>7</span> * size);

    (size + <span>1</span>, result)
}
</code></pre>
<p>To read a varint, we copy the 7 least significant bits of each byte to the result, as long as the most significant bit is set. As the maximum length of a varint is 9 bytes, we stop after reading 8 bytes to avoid potential overflows.</p>
<p>We can finally implement the pager itself. For now, it only loads and caches pages without any eviction policy:</p>
<pre><code><span>// pager.rs</span>
<span>#[derive(Debug, Clone)]</span>
<span>pub</span> <span><span>struct</span> <span>Pager</span></span>&lt;I: Read + Seek = std::fs::File&gt; {
    input: I,
    page_size: <span>usize</span>,
    pages: HashMap&lt;<span>usize</span>, page::Page&gt;,
}

<span>impl</span>&lt;I: Read + Seek&gt; Pager&lt;I&gt; {
    <span>pub</span> <span><span>fn</span> <span>new</span></span>(input: I, page_size: <span>usize</span>) -&gt; <span>Self</span> {
        <span>Self</span> {
            input,
            page_size,
            pages: HashMap::new(),
        }
    }

    <span>pub</span> <span><span>fn</span> <span>read_page</span></span>(&amp;<span>mut</span> <span>self</span>, n: <span>usize</span>) -&gt; anyhow::<span>Result</span>&lt;&amp;page::Page&gt; {
        <span>if</span> <span>self</span>.pages.contains_key(&amp;n) {
            <span>return</span> <span>Ok</span>(<span>self</span>.pages.get(&amp;n).unwrap());
        }

        <span>let</span> page = <span>self</span>.load_page(n)?;
        <span>self</span>.pages.insert(n, page);
        <span>Ok</span>(<span>self</span>.pages.get(&amp;n).unwrap())
    }

    <span><span>fn</span> <span>load_page</span></span>(&amp;<span>mut</span> <span>self</span>, n: <span>usize</span>) -&gt; anyhow::<span>Result</span>&lt;page::Page&gt; {
        <span>let</span> offset = HEADER_SIZE + n.saturating_sub(<span>1</span>) * <span>self</span>.page_size;

        <span>self</span>.input
            .seek(SeekFrom::Start(offset <span>as</span> <span>u64</span>))
            .context(<span>"seek to page start"</span>)?;

        <span>let</span> <span>mut</span> buffer = <span>vec!</span>[<span>0</span>; <span>self</span>.page_size];
        <span>self</span>.input.read_exact(&amp;<span>mut</span> buffer).context(<span>"read page"</span>)?;

        parse_page(&amp;buffer, n)
    }
}
</code></pre>
<h2 id="heading-records">Records</h2>
<p><img loading="lazy" src="https://cdn.hashnode.com/res/hashnode/image/upload/v1721683662504/a35ea5c9-4215-4385-9dc3-3c7779f8af0b.png?auto=compress,format&amp;format=webp" alt=""></p>
<p>We now have a way to read pages, and to access the pages cells. But how to decode the values of the cells? Each cell contains the value of a row in the table, encoded using the <a target="_blank" href="https://www.sqlite.org/fileformat2.html#record_format">SQLite record format</a>. The record format is quite simple: a record consists of a header, followed by a sequence of field values. The header starts with a varint representing the byte size of the headerm followed by a sequence of varints -one per column- determining the type of each column according to the following table:</p>
<ul>
<li><p>0: NULL</p>
</li>
<li><p>1: 8-bits signed integer</p>
</li>
<li><p>2: 16-bits signed integer</p>
</li>
<li><p>3: 24-bits signed integer</p>
</li>
<li><p>4: 32-bits signed integer</p>
</li>
<li><p>5: 48-bits signed integer</p>
</li>
<li><p>6: 64-bits signed integer</p>
</li>
<li><p>7: 64-bits IEEE floating point number</p>
</li>
<li><p>8: value is the integer 0</p>
</li>
<li><p>9: value is the integer 1</p>
</li>
<li><p>10 &amp; 11: reserved for internal use</p>
</li>
<li><p>n with n even and n &gt; 12: BLOB of size (n - 12) / 2</p>
</li>
<li><p>n with n odd and n &gt; 13: text of size (n - 13) / 2</p>
</li>
</ul>
<p>We now have all the informations we need to parse and represent record's headers:</p>
<pre><code><span>// src/cursor.rs</span>
<span>#[derive(Debug, Copy, Clone)]</span>
<span>pub</span> <span><span>enum</span> <span>RecordFieldType</span></span> {
    Null,
    I8,
    I16,
    I24,
    I32,
    I48,
    I64,
    Float,
    Zero,
    One,
    <span>String</span>,
    Blob,
}

<span>#[derive(Debug, Clone)]</span>
<span>pub</span> <span><span>struct</span> <span>RecordField</span></span> {
    <span>pub</span> offset: <span>usize</span>,
    <span>pub</span> field_type: RecordFieldType,
}

<span>#[derive(Debug, Clone)]</span>
<span>pub</span> <span><span>struct</span> <span>RecordHeader</span></span> {
    <span>pub</span> fields: <span>Vec</span>&lt;RecordField&gt;,
}

<span><span>fn</span> <span>parse_record_header</span></span>(<span>mut</span> buffer: &amp;[<span>u8</span>]) -&gt; anyhow::<span>Result</span>&lt;RecordHeader&gt; {
    <span>let</span> (varint_size, header_length) = crate::pager::read_varint_at(buffer, <span>0</span>);
    buffer = &amp;buffer[varint_size <span>as</span> <span>usize</span>..header_length <span>as</span> <span>usize</span>];

    <span>let</span> <span>mut</span> fields = <span>Vec</span>::new();
    <span>let</span> <span>mut</span> current_offset = header_length <span>as</span> <span>usize</span>;

    <span>while</span> !buffer.is_empty() {
        <span>let</span> (discriminant_size, discriminant) = crate::pager::read_varint_at(buffer, <span>0</span>);
        buffer = &amp;buffer[discriminant_size <span>as</span> <span>usize</span>..];

        <span>let</span> (field_type, field_size) = <span>match</span> discriminant {
            <span>0</span> =&gt; (RecordFieldType::Null, <span>0</span>),
            <span>1</span> =&gt; (RecordFieldType::I8, <span>1</span>),
            <span>2</span> =&gt; (RecordFieldType::I16, <span>2</span>),
            <span>3</span> =&gt; (RecordFieldType::I24, <span>3</span>),
            <span>4</span> =&gt; (RecordFieldType::I32, <span>4</span>),
            <span>5</span> =&gt; (RecordFieldType::I48, <span>6</span>),
            <span>6</span> =&gt; (RecordFieldType::I64, <span>8</span>),
            <span>7</span> =&gt; (RecordFieldType::Float, <span>8</span>),
            <span>8</span> =&gt; (RecordFieldType::Zero, <span>0</span>),
            <span>9</span> =&gt; (RecordFieldType::One, <span>0</span>),
            n <span>if</span> n &gt;= <span>12</span> &amp;&amp; n % <span>2</span> == <span>0</span> =&gt; {
                <span>let</span> size = ((n - <span>12</span>) / <span>2</span>) <span>as</span> <span>usize</span>;
                (RecordFieldType::Blob(size), size)
            }
            n <span>if</span> n &gt;= <span>13</span> &amp;&amp; n % <span>2</span> == <span>1</span> =&gt; {
                <span>let</span> size = ((n - <span>13</span>) / <span>2</span>) <span>as</span> <span>usize</span>;
                (RecordFieldType::<span>String</span>(size), size)
            }
            n =&gt; anyhow::bail!(<span>"unsupported field type: {}"</span>, n),
        };

        fields.push(RecordField {
            offset: current_offset,
            field_type,
        });

        current_offset += field_size;
    }

    <span>Ok</span>(RecordHeader { fields })
}
</code></pre>
<p>To make it easier to work with records, we'll define a <code>Value</code> type, representing field values and a <code>Cursor</code> struct that uniquely identifies a record within a database file. The <code>Cursor</code> will expose a <code>field</code> method, returning the value of the record's n-th field:</p>
<pre><code><span>// src/value.rs</span>
<span>use</span> std::borrow::Cow;

<span>#[derive(Debug, Clone)]</span>
<span>pub</span> <span><span>enum</span> <span>Value</span></span>&lt;<span>'p</span>&gt; {
    Null,
    <span>String</span>(Cow&lt;<span>'p</span>, <span>str</span>&gt;),
    Blob(Cow&lt;<span>'p</span>, [<span>u8</span>]&gt;),
    Int(<span>i64</span>),
    Float(<span>f64</span>),
}

<span>impl</span>&lt;<span>'p</span>&gt; Value&lt;<span>'p</span>&gt; {
    <span>pub</span> <span><span>fn</span> <span>as_str</span></span>(&amp;<span>self</span>) -&gt; <span>Option</span>&lt;&amp;<span>str</span>&gt; {
        <span>if</span> <span>let</span> Value::<span>String</span>(s) = <span>self</span> {
            <span>Some</span>(s.as_ref())
        } <span>else</span> {
            <span>None</span>
        }
    }
}
</code></pre>
<pre><code><span>// src/cursor.rs</span>
<span>#[derive(Debug)]</span>
<span>pub</span> <span><span>struct</span> <span>Cursor</span></span>&lt;<span>'p</span>&gt; {
    header: RecordHeader,
    pager: &amp;<span>'p</span> <span>mut</span> Pager,
    page_index: <span>usize</span>,
    page_cell: <span>usize</span>,
}

<span>impl</span>&lt;<span>'p</span>&gt; Cursor&lt;<span>'p</span>&gt; {
    <span>pub</span> <span><span>fn</span> <span>field</span></span>(&amp;<span>mut</span> <span>self</span>, n: <span>usize</span>) -&gt; <span>Option</span>&lt;Value&gt; {
        <span>let</span> record_field = <span>self</span>.header.fields.get(n)?;

        <span>let</span> payload = <span>match</span> <span>self</span>.pager.read_page(<span>self</span>.page_index) {
            <span>Ok</span>(Page::TableLeaf(leaf)) =&gt; &amp;leaf.cells[<span>self</span>.page_cell].payload,
            _ =&gt; <span>return</span> <span>None</span>,
        };

        <span>match</span> record_field.field_type {
            RecordFieldType::Null =&gt; <span>Some</span>(Value::Null),
            RecordFieldType::I8 =&gt; <span>Some</span>(Value::Int(read_i8_at(payload, record_field.offset))),
            RecordFieldType::I16 =&gt; <span>Some</span>(Value::Int(read_i16_at(payload, record_field.offset))),
            RecordFieldType::I24 =&gt; <span>Some</span>(Value::Int(read_i24_at(payload, record_field.offset))),
            RecordFieldType::I32 =&gt; <span>Some</span>(Value::Int(read_i32_at(payload, record_field.offset))),
            RecordFieldType::I48 =&gt; <span>Some</span>(Value::Int(read_i48_at(payload, record_field.offset))),
            RecordFieldType::I64 =&gt; <span>Some</span>(Value::Int(read_i64_at(payload, record_field.offset))),
            RecordFieldType::Float =&gt; <span>Some</span>(Value::Float(read_f64_at(payload, record_field.offset))),
            RecordFieldType::<span>String</span>(length) =&gt; {
                <span>let</span> value = std::<span>str</span>::from_utf8(
                    &amp;payload[record_field.offset..record_field.offset + length],
                ).expect(<span>"invalid utf8"</span>);
                <span>Some</span>(Value::<span>String</span>(Cow::Borrowed(value)))
            }
            RecordFieldType::Blob(length) =&gt; {
                <span>let</span> value = &amp;payload[record_field.offset..record_field.offset + length];
                <span>Some</span>(Value::Blob(Cow::Borrowed(value)))
            }
            _ =&gt; <span>panic!</span>(<span>"unimplemented"</span>),
        }
    }
}

<span><span>fn</span> <span>read_i8_at</span></span>(input: &amp;[<span>u8</span>], offset: <span>usize</span>) -&gt; <span>i64</span> {
    input[offset] <span>as</span> <span>i64</span>
}

<span><span>fn</span> <span>read_i16_at</span></span>(input: &amp;[<span>u8</span>], offset: <span>usize</span>) -&gt; <span>i64</span> {
    <span>i16</span>::from_be_bytes(input[offset..offset + <span>2</span>].try_into().unwrap()) <span>as</span> <span>i64</span>
}

<span><span>fn</span> <span>read_i24_at</span></span>(input: &amp;[<span>u8</span>], offset: <span>usize</span>) -&gt; <span>i64</span> {
    (<span>i32</span>::from_be_bytes(input[offset..offset + <span>3</span>].try_into().unwrap()) &amp; <span>0x00FFFFFF</span>) <span>as</span> <span>i64</span>
}

<span><span>fn</span> <span>read_i32_at</span></span>(input: &amp;[<span>u8</span>], offset: <span>usize</span>) -&gt; <span>i64</span> {
    <span>i32</span>::from_be_bytes(input[offset..offset + <span>4</span>].try_into().unwrap()) <span>as</span> <span>i64</span>
}

<span><span>fn</span> <span>read_i48_at</span></span>(input: &amp;[<span>u8</span>], offset: <span>usize</span>) -&gt; <span>i64</span> {
    <span>i64</span>::from_be_bytes(input[offset..offset + <span>6</span>].try_into().unwrap()) &amp; <span>0x0000FFFFFFFFFFFF</span>
}

<span><span>fn</span> <span>read_i64_at</span></span>(input: &amp;[<span>u8</span>], offset: <span>usize</span>) -&gt; <span>i64</span> {
    <span>i64</span>::from_be_bytes(input[offset..offset + <span>8</span>].try_into().unwrap())
}

<span><span>fn</span> <span>read_f64_at</span></span>(input: &amp;[<span>u8</span>], offset: <span>usize</span>) -&gt; <span>f64</span> {
    <span>f64</span>::from_be_bytes(input[offset..offset + <span>8</span>].try_into().unwrap())
}
</code></pre>
<p>To simplify iteration over a page's records, we'll also implement a <code>Scanner</code> struct that wraps a page and allows us to get a <code>Cursor</code> for each record:</p>
<pre><code><span>// src/cursor.rs</span>
<span>#[derive(Debug)]</span>
<span>pub</span> <span><span>struct</span> <span>Scanner</span></span>&lt;<span>'p</span>&gt; {
    pager: &amp;<span>'p</span> <span>mut</span> Pager,
    page: <span>usize</span>,
    cell: <span>usize</span>,
}

<span>impl</span>&lt;<span>'p</span>&gt; Scanner&lt;<span>'p</span>&gt; {
    <span>pub</span> <span><span>fn</span> <span>new</span></span>(pager: &amp;<span>'p</span> <span>mut</span> Pager, page: <span>usize</span>) -&gt; Scanner&lt;<span>'p</span>&gt; {
        Scanner {
            pager,
            page,
            cell: <span>0</span>,
        }
    }
    <span>pub</span> <span><span>fn</span> <span>next_record</span></span>(&amp;<span>mut</span> <span>self</span>) -&gt; <span>Option</span>&lt;anyhow::<span>Result</span>&lt;Cursor&gt;&gt; {
        <span>let</span> page = <span>match</span> <span>self</span>.pager.read_page(<span>self</span>.page) {
            <span>Ok</span>(page) =&gt; page,
            <span>Err</span>(e) =&gt; <span>return</span> <span>Some</span>(<span>Err</span>(e)),
        };

        <span>match</span> page {
            Page::TableLeaf(leaf) =&gt; {
                <span>let</span> cell = leaf.cells.get(<span>self</span>.cell)?;

                <span>let</span> header = <span>match</span> parse_record_header(&amp;cell.payload) {
                    <span>Ok</span>(header) =&gt; header,
                    <span>Err</span>(e) =&gt; <span>return</span> <span>Some</span>(<span>Err</span>(e)),
                };

                <span>let</span> record = Cursor {
                    header,
                    pager: <span>self</span>.pager,
                    page_index: <span>self</span>.page,
                    page_cell: <span>self</span>.cell,
                };

                <span>self</span>.cell += <span>1</span>;

                <span>Some</span>(<span>Ok</span>(record))
            }
        }
    }
}
</code></pre>
<h2 id="heading-table-descriptions">Table descriptions</h2>
<p>With most of the leg work out of the way, we can get back to our original goal: listing tables. SQLite stores the schema of a database in a special table called <code>sqlite_master</code>. The schema for the <code>sqlite_master</code> table is as follows:</p>
<pre><code><span>CREATE</span> <span>TABLE</span> sqlite_schema(
  <span>type</span> <span>text</span>,
  <span>name</span> <span>text</span>,
  tbl_name <span>text</span>,
  rootpage <span>integer</span>,
  <span>sql</span> <span>text</span>
);
</code></pre>
<p>Theses columns are used as follows:</p>
<ul>
<li><p><code>type</code>: the type of the schema object. For tables, this will always be <code>table</code>.</p>
</li>
<li><p><code>name</code>: the name of the schema object.</p>
</li>
<li><p><code>tbl_name</code>: the name of the table the schema object is associated with. In the case of tables, this will be the same as <code>name</code>.</p>
</li>
<li><p><code>rootpage</code>: root page of the table, we'll use it later to read the table's content.</p>
</li>
<li><p><code>sql</code>: the SQL statement used to create the table.</p>
</li>
</ul>
<p>Since our simple database only handles basic schemas for now, we can assume that the entire schema fits in the first page of our database file. In order to list the tables in the database, we'll need to:</p>
<ul>
<li><p>initialize the pager with the database file</p>
</li>
<li><p>create a <code>Scanner</code> for the first page</p>
</li>
<li><p>iterate over the records, and print the value of the <code>name</code> field (at index 1) for each record.</p>
</li>
</ul>
<p>First, we'll define a <code>Db</code> struct to hold our global state:</p>
<pre><code><span>// src/db.rs</span>
<span>use</span> std::{io::Read, path::Path};

<span>use</span> anyhow::Context;

<span>use</span> crate::{cursor::Scanner, page::DbHeader, pager, pager::Pager};

<span>pub</span> <span><span>struct</span> <span>Db</span></span> {
    <span>pub</span> header: DbHeader,
    pager: Pager,
}

<span>impl</span> Db {
    <span>pub</span> <span><span>fn</span> <span>from_file</span></span>(filename: <span>impl</span> <span>AsRef</span>&lt;Path&gt;) -&gt; anyhow::<span>Result</span>&lt;Db&gt; {
        <span>let</span> <span>mut</span> file = std::fs::File::open(filename.as_ref()).context(<span>"open db file"</span>)?;

        <span>let</span> <span>mut</span> header_buffer = [<span>0</span>; pager::HEADER_SIZE];
        file.read_exact(&amp;<span>mut</span> header_buffer)
            .context(<span>"read db header"</span>)?;

        <span>let</span> header = pager::parse_header(&amp;header_buffer).context(<span>"parse db header"</span>)?;

        <span>let</span> pager = Pager::new(file, header.page_size <span>as</span> <span>usize</span>);

        <span>Ok</span>(Db { header, pager })
    }

    <span>pub</span> <span><span>fn</span> <span>scanner</span></span>(&amp;<span>mut</span> <span>self</span>, page: <span>usize</span>) -&gt; Scanner {
        Scanner::new(&amp;<span>mut</span> <span>self</span>.pager, page)
    }
}
</code></pre>
<p>The implementation of a basic REPL supporting the <code>tables</code> and <code>tables</code> commands is straightforward:</p>
<pre><code><span>use</span> std::io::{stdin, BufRead, Write};

<span>use</span> anyhow::Context;

<span>mod</span> cursor;
<span>mod</span> db;
<span>mod</span> page;
<span>mod</span> pager;
<span>mod</span> value;

<span><span>fn</span> <span>main</span></span>() -&gt; anyhow::<span>Result</span>&lt;()&gt; {
    <span>let</span> database = db::Db::from_file(std::env::args().nth(<span>1</span>).context(<span>"missing db file"</span>)?)?;
    cli(database)
}

<span><span>fn</span> <span>cli</span></span>(<span>mut</span> db: db::Db) -&gt; anyhow::<span>Result</span>&lt;()&gt; {
    print_flushed(<span>"rqlite&gt; "</span>)?;

    <span>let</span> <span>mut</span> line_buffer = <span>String</span>::new();

    <span>while</span> stdin().lock().read_line(&amp;<span>mut</span> line_buffer).is_ok() {
        <span>match</span> line_buffer.trim() {
            <span>".exit"</span> =&gt; <span>break</span>,
            <span>".tables"</span> =&gt; display_tables(&amp;<span>mut</span> db)?,
            _ =&gt; {
                <span>println!</span>(<span>"Unrecognized command '{}'"</span>, line_buffer.trim());
            }
        }

        print_flushed(<span>"\nrqlite&gt; "</span>)?;

        line_buffer.clear();
    }

    <span>Ok</span>(())
}

<span><span>fn</span> <span>display_tables</span></span>(db: &amp;<span>mut</span> db::Db) -&gt; anyhow::<span>Result</span>&lt;()&gt; {
    <span>let</span> <span>mut</span> scanner = db.scanner(<span>1</span>);

    <span>while</span> <span>let</span> <span>Some</span>(<span>Ok</span>(<span>mut</span> record)) = scanner.next_record() {
        <span>let</span> type_value = record
            .field(<span>0</span>)
            .context(<span>"missing type field"</span>)
            .context(<span>"invalid type field"</span>)?;

        <span>if</span> type_value.as_str() == <span>Some</span>(<span>"table"</span>) {
            <span>let</span> name_value = record
                .field(<span>1</span>)
                .context(<span>"missing name field"</span>)
                .context(<span>"invalid name field"</span>)?;

            <span>print!</span>(<span>"{} "</span>, name_value.as_str().unwrap());
        }
    }

    <span>Ok</span>(())
}

<span><span>fn</span> <span>print_flushed</span></span>(s: &amp;<span>str</span>) -&gt; anyhow::<span>Result</span>&lt;()&gt; {
    <span>print!</span>(<span>"{}"</span>, s);
    std::io::stdout().flush().context(<span>"flush stdout"</span>)
}
</code></pre>
<h2 id="heading-conclusion">Conclusion</h2>
<p>The first part of our SQLite-compatible database is now complete. We can read the database header, parse table btree-leaf pages and decode records, but we still have a long way to go before we can support rich queries. In the next part, we'll learn how to parse the SQL language and make our first strides towards implementing the <code>SELECT</code> statement!</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Low level of Magnesium linked to disease-causing DNA damage (105 pts)]]></title>
            <link>https://newatlas.com/health-wellbeing/nutrient-dna-damage/</link>
            <guid>41278636</guid>
            <pubDate>Sat, 17 Aug 2024 22:45:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://newatlas.com/health-wellbeing/nutrient-dna-damage/">https://newatlas.com/health-wellbeing/nutrient-dna-damage/</a>, See on <a href="https://news.ycombinator.com/item?id=41278636">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>If you're getting plenty of leafy greens, dark chocolate, nuts, and beans, you're probably doing fine. But if your diet is lacking, you might want to pay attention to this new eye-opening study that links a mineral deficiency issue to DNA changes.</p><p>The study, carried out by researchers at the University of South Australia (UniSA), examined blood samples from 172 middle-aged adults and found that those who had low magnesium also had high levels of an amino acid called homocysteine. This is considered genotoxic, which means that it can damage human DNA.</p><p>Conversely, the study found a positive relationship between high levels of magnesium and those of folate and vitamin B12.</p><p>“Our study showed a direct correlation between low magnesium levels in blood (less than 18mg/L) and increased DNA damage, even after adjusting for gender and age,” says UniSA molecular biologist Dr. Permal Deo, who is a co-author on the study.</p><p>“Blood levels of magnesium, homocysteine (Hcy), folate and vitamin B12 were measured, showing an inverse correlation between magnesium and Hcy and a positive correlation between magnesium, folate and vitamin B12," he adds. "This indicates that sufficiently high magnesium levels in the blood are essential to protect our genes from toxicity caused by homocysteine, which is increased when folate and vitamin B12 are deficient.”</p><p>According to the researchers, the toxic combination of low magnesium and high levels of homocysteine can increase the likelihood of contracting gastrointestinal disease, several cancers, diabetes, and Alzheimer's and Parkinson's diseases.</p><p>The research team believes the damaging results of low magnesium are due to the fact that it can break down the body's ability to produce energy and power cells, which can in turn lead to faster tissue aging. Magnesium, which is the fourth most abundant mineral in the human body, has previously been linked to the healthy synthesis of DNA and RNA. Yet the mineral's deficiency had not yet been fully studied in terms of damaging these genetic carriers, say the researchers.</p><p>In addition to its effects on DNA, magnesium has been identified as a cofactor in over 300 enzyme systems in the body, including those that regulate blood pressure, control blood glucose levels, and ensure proper nerve function. Another study from Australia last year also <a href="https://newatlas.com/health-wellbeing/more-magnesium-better-brain-health-women/" target="_blank" data-cms-ai="0">linked sufficient levels of the mineral to larger brain volumes</a>.</p><p>While the researchers intend to determine the optimal dietary intake of magnesium in future studies, Deo says a low daily intake is any amount below 300 mg per day. The FDA meanwhile <a href="https://ods.od.nih.gov/factsheets/Magnesium-HealthProfessional/" target="_blank" data-cms-ai="0">recommends</a> that adults between the ages of 31 get 420 mg per day. That's an amount that's fairly easy to get either through supplements or diet. For example, an ounce of roasted pumpkin seeds delivers 156 mg of magnesium, an ounce of chia seeds contains 111 mg of the mineral, and an ounce of almonds has 80 mg. Spinach, cashews, peanuts, and soy milk are also top sources.</p><p>The study has been published in the <i><a href="https://link.springer.com/article/10.1007/s00394-024-03449-0#:~:text=Conclusions,frequencies%20of%20MN%20and%20NPBs." target="_blank" data-cms-ai="0">European Journal of Nutrition</a></i>.</p><p>Source: <a href="https://www.unisa.edu.au/media-centre/Releases/2024/low-magnesium-levels-increase-disease-risk-new-study-shows/" target="_blank" data-cms-ai="0">University of South Australia</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FlightAware Leaks Customer Data (Name, Email Addresses and Passwords) (204 pts)]]></title>
            <link>https://loyaltylobby.com/2024/08/16/flightaware-leaks-customer-data-name-email-addresses-passwords/</link>
            <guid>41277429</guid>
            <pubDate>Sat, 17 Aug 2024 19:54:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://loyaltylobby.com/2024/08/16/flightaware-leaks-customer-data-name-email-addresses-passwords/">https://loyaltylobby.com/2024/08/16/flightaware-leaks-customer-data-name-email-addresses-passwords/</a>, See on <a href="https://news.ycombinator.com/item?id=41277429">Hacker News</a></p>
Couldn't get https://loyaltylobby.com/2024/08/16/flightaware-leaks-customer-data-name-email-addresses-passwords/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Are you better than a language model at predicting the next word? (186 pts)]]></title>
            <link>https://joel.tools/smarter/</link>
            <guid>41277179</guid>
            <pubDate>Sat, 17 Aug 2024 19:21:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://joel.tools/smarter/">https://joel.tools/smarter/</a>, See on <a href="https://news.ycombinator.com/item?id=41277179">Hacker News</a></p>
<div id="readability-page-1" class="page">



<p>
There are a lot of benchmarks that try to see how good language models are at human tasks.
But how good are you at the quintessential language model task of predicting the next word?
</p>

<hr>










</div>]]></description>
        </item>
        <item>
            <title><![CDATA[mpv a free, open-source, and cross-platform media player (813 pts)]]></title>
            <link>https://mpv.io/</link>
            <guid>41277014</guid>
            <pubDate>Sat, 17 Aug 2024 18:56:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mpv.io/">https://mpv.io/</a>, See on <a href="https://news.ycombinator.com/item?id=41277014">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<h2>Overview</h2>
<p>
mpv is a free (as in freedom) media player for the command line. It supports
a wide variety of media file formats, audio and video codecs, and subtitle types.
</p>
<div>
<div>
<h4>
<i></i>
Scripting
</h4>
<p>
Powerful scripting capabilities can make the player do almost anything. There is
a large selection of
<a href="https://github.com/mpv-player/mpv/wiki/User-Scripts">user scripts on the wiki</a>.
</p>
</div>
<div>
<h4>
<i></i>
On Screen Controller
</h4>
<p>
While mpv strives for minimalism and provides no real GUI, it has a small controller on top of the video
for basic control.
</p>
</div>
</div>
<div>
<div>
<h4>
<i></i>
High quality video output
</h4>
<p>
mpv has an OpenGL, Vulkan, and D3D11 based video output that is capable of many features
loved by videophiles, such as video scaling with popular high quality
algorithms, color management, frame timing, interpolation, HDR, and more.
</p>
</div>
<div>
<h4>
<i></i>
GPU video decoding
</h4>
<p>
mpv can leverage most hardware decoding APIs on all platforms. Hardware
decoding can be enabled at runtime on demand.
</p>
</div>
</div>
<div>
<div>
<h4>
<i></i>
Embeddable
</h4>
<p>
A straightforward
<a href="https://github.com/mpv-player/mpv/blob/master/libmpv/client.h">C API</a>
was designed from the ground up to make mpv usable as a library and
facilitate easy integration into other applications.
</p>
</div>
<div>
<h4>
<i></i>
Active development
</h4>
<p>
mpv is under active development, focusing on code refactoring and
cleanups as well as adding features. Want a feature?
<a href="https://github.com/mpv-player/mpv/issues" target="_blank">
Post a patch or request it!
</a>
</p>
</div>
<!-- /.col-md-6 -->
<!-- /  %h4 -->
<!-- /    %i.fa.fa-rocket -->
<!-- /    Sky is the limit! -->
<!-- /  %p -->
<!-- /    mpv is packed with way more good stuff than we can fit on this page. -->
<!-- /    %a(href="/features") Check out the other features! -->
</div>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to get from high school math to cutting-edge ML/AI (115 pts)]]></title>
            <link>https://www.justinmath.com/how-to-get-from-high-school-math-to-cutting-edge-ml-ai/</link>
            <guid>41276675</guid>
            <pubDate>Sat, 17 Aug 2024 18:17:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.justinmath.com/how-to-get-from-high-school-math-to-cutting-edge-ml-ai/">https://www.justinmath.com/how-to-get-from-high-school-math-to-cutting-edge-ml-ai/</a>, See on <a href="https://news.ycombinator.com/item?id=41276675">Hacker News</a></p>
<div id="readability-page-1" class="page"><section itemprop="text"><p><span size="3em"> <i>1) Foundational math. 2) Classical machine learning. 3) Deep learning. 4) Cutting-edge machine learning.</i> </span></p><p>I recently talked to a number of people who work in software and want to get to the point where they can read serious ML/AI papers like <a target="_blank" href="https://arxiv.org/pdf/2006.11239"><i>Denoising Diffusion Probabilistic Models</i></a>.</p><p>But even though they did well in high school math, even AP Calculus, maybe even learned some undergraduate math…</p><p>the math in these cutting-edge ML papers still looks like hieroglyphics.</p><p><b>So, how do you get from high school math to cutting-edge ML?</b></p><p>Here’s a 4-stage roadmap.</p><p>I’ll start by briefly describing all the stages – and then I’ll go back to each stage for a deep dive where I fully explain the rationale and point you to resources that you can use to guide your learning.</p><ul><li><i>Stage 1: Foundational Math.</i> All the high school and university-level math that underpins machine learning. All of algebra, a lot of single-variable calculus / linear algebra / probability / statistics, and a bit of multivariable calculus.</li><li><i>Stage 2: Classical Machine Learning.</i> Coding up streamlined versions of basic regression and classification models, all the way from linear regression to small multi-layer neural networks.</li><li><i>Stage 3: Deep Learning.</i> Multi-layer neural networks with many parameters, where the architecture of the network is tailored to the specific kind of task you’re trying to get the model to perform.</li><li><i>Stage 4: Cutting-Edge Machine Learning.</i> Transformers, LLMs, diffusion models, and all the crazy stuff that’s coming out now, that captured your interest to begin with.</li></ul><span size="2em"><br></span><p>Note that I’ve spent the past 5+ years working on resources to support learners in stages 1-2, and there is a general lack of serious yet friendly resources in those stages, so I’m going to be including my own resources there (along with some others).</p><p>But in stages 3-4, all the resources I’ll reference are things I’m not affiliated with in any way.</p><p>Alright, let’s dive in!</p><h2>Stage 1: Foundational Math</h2><p>There’s a lot of math underpinning ML: all of high school algebra, a lot of single-variable calculus / linear algebra / probability / statistics, and a bit of multivariable calculus.</p><p>Last year, I spent some time mapping all this math out at a topic-by-topic level. In many of these math courses, some topics are absolutely essential to know for ML, while other topics are unnecessary.</p><p>For instance, in multivariable calculus:</p><ul><li>You absolutely must know how to compute gradients (they show up all the time in the context of gradient descent when training ML models), and you need to be solid on the multivariable chain rule, which underpins the backpropagation algorithm for training neural networks.</li><li>But on the other hand, many other multivariable calculus topics like divergence, curl, spherical coordinates, and Stokes' theorem don’t really show up anywhere in ML.</li></ul><span size="2em"><br></span><p>Once I mapped out the list of required topics, we put together a <a target="_blank" href="https://mathacademy.com/courses/mathematics-for-machine-learning"><i>Mathematics for Machine Learning</i></a> course whose table of contents can be viewed <a target="_blank" href="https://mathacademy.com/courses/mathematics-for-machine-learning">here</a>.</p><p>(To see the list of all 242 individual topics, click on “Content” and then click to expand the Unit boxes.)</p><p>If you’re working on Math Academy’s maximum-efficiency learning system, you can learn all this content in about 70 hours if you know your math up through single-variable calculus.</p><p>(And if you’re missing background knowledge, that’s totally fine – the diagnostic assessment will automatically figure out the prerequisite material that you need to learn in algebra, calculus, etc. and add it to your learning plan.</p><p>Even if you’ve completely forgotten all the math you learned and need to rebuild your foundations from the ground up, starting with fractions, <a target="_blank" href="https://mathacademy.com/adult-students">we’ve got you covered</a>.)</p><p>It’s also possible to learn these topics through free online resources. For instance,</p><ul><li>Khan Academy covers arithmetic up through high school math,</li><li>OpenStax covers high school and a bit of early university math,</li><li>MIT OpenCourseWare covers plenty of university math, and</li><li>for any given math topic, there are plenty of notes online and usually plenty of videos on YouTube.</li></ul><span size="2em"><br></span><p>However, to make it all the way through this Stage 1 using free resources, you’ll have to piece together a hodgepodge of scattered educational content, and there will be a lot more unproductive friction that will not only slow you down but also make you more likely to get overwhelmed and give up.</p><p>(Personally, I self-studied a bunch of math subjects through MIT OpenCourseWare and a variety of textbooks when I was in high school. These were good resources and I came a long way with them, but for the amount of effort that I put into learning, I could have gone a lot further if my time were used more efficiently. For more info, see my post <a target="_blank" href="https://justinmath.com/why-not-just-learn-from-a-textbook"><i>Why Not Just Learn from a Textbook?</i></a>.)</p><p>For most people, this stage of foundational math learning is a make-or-break moment and the hardest part of their machine learning journey.</p><p>Learning the foundational math for machine learning is like learning how to read: achieving literacy opens up a world of further learning experiences, but without literacy, that world is completely closed off to you.</p><h2>Stage 2: Classical Machine Learning</h2><p>Once you have your math foundations in place, you’re ready to start coding up streamlined versions of basic ML models from linear regression to small multi-layer neural networks.</p><p>But don’t try to jump into the fancy cutting-edge ML models just yet – if you do, you’re going to be confused by a lot of patterns that come from classical machine learning.</p><p>Let me give a concrete example of what I mean by this. Let’s go back to that paper <a target="_blank" href="https://arxiv.org/pdf/2006.11239"><i>Denoising Diffusion Probabilistic Models</i></a>.</p><p>If you look at the bottom of page 3, you’ll see that equation (8) looks something like the following, but with a lot more subscripts and function arguments (which I’ve left out for simplicity):</p><center> $$\begin{align*} L = \mathbb{E} \left[ \dfrac{1}{2 \sigma} \left\Vert \bar{\mu} - \mu \right\Vert^2 \right] + C \end{align*}$$ </center><p><br> Even if you know</p><ul><li>what the $\mathbb{E}$ means (“expectation” from probability/statistics),</li><li>what the $\sigma$ means (“standard deviation” also from probability/statistics),</li><li>what the $\Vert$ means ("vector norm" from linear algebra and multivariable calculus),</li><li>what the $+C$ means (arbitrary "constant of integration" that vanishes when we take the derivative, covered in calculus),</li><li>and so on ...</li></ul><span size="2em"><br></span><p>the way these symbols are arranged here might look really confusing.</p><p>But if you know your classical machine learning, the equation immediately hits you as resembling a “loss function” that measures the average squared difference between two quantities.</p><p>(It’s no coincidence that the authors used the letter $L$ on the left-hand side of the equation – $L$ for “loss.”)</p><p>In classical ML, in that average squared difference between two quantities, one of those quantities comes from your model, and the other comes from a data set, so the loss function in a sense measures how “wrong” your model is in its predictions across the data set.</p><p>(Loosely speaking, the goal of “training” a ML model is to minimize the loss function, that is, to adjust the parameters of the model to minimize how “wrong” the model is about the data.)</p><p><b>My point here is that if you know about these modeling patterns from classical ML, then you’ll immediately have intuition about the equations you see in cutting-edge ML papers.</b></p><p>It’s like how, if a musician has practiced playing their scales and identifying musical keys, they can often jump into any song – even one they’ve never heard it before – and improvise in a way that sounds good, because their understanding of underlying musical patterns has given them a level of “feeling” or “intuition” about the new musical structure in which they’re operating.</p><p>Similarly, an experienced software developer who knows all sorts of design patterns might be able to get a sense of how a piece of code operates just by noticing patterns in the high-level structure – even though they haven’t actually gone through line by line to understand the precise operations that are happening in the code.</p><p>If you know your classical machine learning, the same thing will happen to you when reading modern ML papers.</p><p>Just glancing at equations and diagrams, you’ll find meaningful features jumping out at you in intuitive ways.</p><p>Reading the paper will feel like looking at a “picture” where you get a high-level sense of what’s going on and then zoom in on the details afterwards.</p><p>But if you don’t know your classical ML, then good luck reading modern ML papers, because the authors are not going to spell all this out for you!</p><p><b>So, once you have your math foundations in place, how can you get up to speed classical machine learning?</b></p><p>One problem with many ML courses is that they don’t have students implement the key models from scratch.</p><p>Now, I’m not saying you have to implement a full-fledged ML library with all the bells and whistles of scikit-learn, pytorch, tensorflow, keras, etc., …</p><p>but simply coding up a streamlined version of each basic ML model along the way from linear regression to small multi-layer neural networks will do wonders for your understanding.</p><p>This was the premise of a series of quantitative coding classes that I developed and taught from 2020-23.</p><ul><li>First, students implemented basic ML algorithms from scratch, coding up streamlined versions of polynomial and logistic regression, k-nearest neighbors, k-means clustering, and parameter fitting via gradient descent.</li><li>Then, they implemented more advanced ML algorithms such as decision trees and neural networks (still streamlined versions), and they reproduced academic research papers in artificial intelligence leading up to Blondie24, an AI computer program that taught itself to play checkers.</li></ul><span size="2em"><br></span><p>I wrote a textbook for those courses, <a target="_blank" href="https://justinmath.com/books/#introduction-to-algorithms-and-machine-learning"><i>Introduction to Algorithms and Machine Learning</i></a>, which includes all the instructional material and exercises that I used during the courses. It’s freely available <a target="_blank" href="https://justinmath.com/books/#introduction-to-algorithms-and-machine-learning">here</a>.</p><p>The textbook is self-contained, and once I finished it, my classes were almost entirely self-service. Students read the assigned chapter on their own and completed the exercises. In class, instead of giving traditional lessons, I answered questions and helped students debug their code.</p><p>(My students came in without much coding experience, so the book also has you implement canonical data structures and algorithms including sorting, searching, graph traversals, etc. –</p><p>you can skip this stuff if you already know it, but if you don’t know it, it would definitely worth using these exercises to develop your algorithmic coding chops in general.</p><p>Even if you’ve been working in software for years – if you don’t have experience writing this sort of algorithm-heavy code, it would be a good idea to use this as an opportunity to get some practice.</p><p>It’s like how even beyond competitive weightlifting, most serious athletes still lift weights to develop supporting musculature and improve their overall athleticism, since it indirectly carries over to increase their sport-specific performance.)</p><p><b>IMPORTANT: it’s crucial to point out that the intended learning outcome of <i>Introduction to Algorithms and Machine Learning</i> is pretty general quantitative coding with a focus on ML/AI.</b></p><p><b>While the book provides you with solid foundations, you would still want to follow up with a proper ML course afterwards that goes through the whole zoo of ML algorithms.</b></p><p><b>For this, I would recommend working through Andrew Ng’s acclaimed <a target="_blank" href="https://coursera.org/specializations/machine-learning-introduction">Machine Learning Specialization on Coursera</a>.</b></p><p>This is a sequence of 3 courses:</p><ul><li>Course 1: <i>Supervised Machine Learning: Regression and Classification</i></li><li>Course 2: <i>Advanced Learning Algorithms</i></li><li>Course 3: <i>Unsupervised Learning, Recommenders, Reinforcement Learning</i></li></ul><span size="2em"><br></span><p>But make sure to do the quizzes and assignments! It doesn’t count if you just watch the videos. Passively “following along” is not the same as, or even remotely close to, actually learning.</p><h2>Stage 3: Deep Learning</h2><p>So much of modern machine learning is built upon deep learning, that is, multi-layer neural networks with many parameters, where the architecture of the network is tailored to the specific kind of task you’re trying to get the model to perform.</p><p>If you asked me several years ago how to spin up on deep learning, I wouldn’t know what to tell you. While neural networks have been around for a while in the academic literature, deep learning didn’t really take off in popularity until around 2010, which means there wasn’t much demand for educational material until recently.</p><p>When I first got interested in deep learning, around 2013-14, the only way to spin up on it was to trudge through miscellaneous research papers, YouTube videos, and blog posts. It was extremely frustrating and inefficient.</p><p>Later in the 2010s, a number of deep learning textbooks came out – and while they definitely improved the state of deep learning education, they were seriously lacking concrete computational examples and exercises.</p><p>It was kind of like reading a long, thorough lecture, which was better than a hodgepodge of papers, but it was still pretty hard to learn from compared to, say, a well-scaffolded calculus textbook full of worked examples and hands-on exercises.</p><p><b>More recently, though, one deep learning textbook has caught my eye as a superb educational resource: <a target="_blank" href="https://udlbook.github.io/udlbook/"><i>Understanding Deep Learning</i></a> by Simon J. D. Prince.</b></p><p>It’s freely available <a target="_blank" href="https://udlbook.github.io/udlbook/">here</a>, and I would highly recommend to check out <a target="_blank" href="https://x.com/SimonPrinceAI/status/1686475960973963265">this highlights reel</a> demonstrating what makes the book so awesome.</p><p>I’ve read through a number of chapters myself. It’s a serious yet friendly textbook – remarkably detailed and full of visualizations, quick concrete algebraic/numerical examples and exercises, historical notes/references, and references to current work in the field.</p><p>Overall, an amazing resource for anyone who has foundational math chops and knowledge of classical ML, and has paid attention to deep learning making headlines through the last decade, but hasn’t kept up with all the technical details.</p><p>By the way, it’s not just me who loves this book. It <a target="_blank" href="https://news.ycombinator.com/item?id=38424939">blew up on HackerNews</a> last year and has 4.8/5 stars across <a target="_blank" href="https://amazon.com/dp/0262048647#customerReviews">97 reviews on Amazon</a> – and if you read those Amazon reviews, it’s obvious that this book has made a tremendous positive impact on many people’s lives.</p><p><b>Afterwards, I would also recommend to work through Jeremy Howard’s <a target="_blank" href="https://course.fast.ai/"><i>Practical Deep Learning for Coders (Part 1)</i></a> on Fast.AI.</b></p><p>This course has a wealth of great hands-on, guided projects that go beyond textbook exercises.</p><p>Again, make sure to do the projects! It doesn’t count if you just watch the videos.</p><p>(To be clear: I would still recommend to work through the exercises in the <i>Understanding Deep Learning</i> book so that you come into the Fast.AI projects with plenty of background knowledge.</p><p>Projects are great for pulling a bunch of knowledge together and solidifying your knowledge, but when you’re initially learning something for the very first time, it’s more efficient to do so in a lower-complexity, higher-scaffolding setting.</p><p>Otherwise, without a serious level of background knowledge, it’s easy to get overwhelmed by a project – and when you’re overwhelmed and spinning your wheels being confused without making much progress, that’s very inefficient for your learning.</p><p>By the way, this is an instance of the “<a target="_blank" href="https://en.wikipedia.org/wiki/Expertise_reversal_effect">expertise reversal effect</a>” in the science of learning.)</p><h2>Stage 4: Cutting-Edge Machine Learning</h2><p>Finally, we reach the end destination: transformers, LLMs, diffusion models, and all the crazy stuff that’s coming out now, that captured your interest to begin with.</p><p>Guess what? You know how I said that when I first got interested in deep learning, around 2013-14, the only way to spin up on it was to trudge through miscellaneous research papers, YouTube videos, and blog posts – and it was extremely frustrating and inefficient?</p><p>Well, that’s just kind of how it goes when you reach the cutting edge of a field – and when you get to this “Stage 4,” that’s what you can expect (at least, for now, until the field matures further).</p><p>That said, even when you’re operating at the edge of human knowledge, there is still a way to optimize your approach.</p><p>I’ll quote my colleague Alex Smith who who recently <a target="_blank" href="https://x.com/ninja_maths/status/1820583797491925386">posted</a> about his own experience getting up to speed on his dissertation topic while doing a PhD in mathematics:</p><span size="3em"><ul><li><i> "My biggest mistake when starting my doctoral research was taking a top-down approach. I focused my efforts on a handful of research papers on the frontier of my chosen field, even writing code to solve problems in these papers from day one. However, I soon realized I lacked many foundational prerequisites, making the first year exceptionally tough. <p> What I should have done was spend 3-6 months dissecting the hell out of all the key research papers and books written on the subject, starting from the very basics (from my knowledge frontier) and working my way up (the bottom-up approach)." </p></i></li></ul></span> <span size="2em"><br></span><p>I know “cutting-edge” might sound like a single line where you cross from reading established textbooks to reading the latest arXiv preprint that blew up yesterday…</p><p>but in reality, the cutting edge is more of a “zone” where the amount of guidance gradually fades. Just like how, on a physical knife, you typically see the blade start to narrow a couple millimeters before the true edge.</p><p><b>At the start of the cutting edge, there may not be any textbooks – but there are typically miscellaneous guided resources like videos, blog posts, and foundational research papers and literature reviews that are easier to follow than the latest research papers all the way at the end of the cutting edge.</b></p><p>For a concrete example: if you want to work on cutting-edge LLM research, don’t start by immediately trying to build on the latest paper that’s come out.</p><p>Instead, start out with a literature search and collect the important papers, videos, blog posts, etc., that will bring you from the beginning of the edge of the field to the very end.</p><p>For instance, Andrej Karpathy’s <a target="_blank" href="https://youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ&amp;feature=shared"><i>Neural Networks: Zero to Hero</i></a> series on YouTube would stand firmly in that pool of resources.</p><p>So would Jeremy Howard’s <a target="_blank" href="https://course.fast.ai/Lessons/part2.html"><i>From Deep Learning Foundations to Stable Diffusion</i></a> on Fast.AI.</p><h2>Responses to Follow-Up Questions</h2><p>I received some great follow-up questions about this post after it gained some traction on X/Twitter (August 2024). Feel free to <a target="_blank" href="https://justinmath.com/contact">contact</a> me if you have any additional questions that aren’t addressed here.</p><p><br> <b>Don’t you need software engineering skills as well?</b></p><p>Yes. This roadmap is directed at people who work in software and want to get into serious ML/AI, so I’m assuming that they’re coming in with SWE skills.</p><p>But I’m sure there are also lots of people reading who don’t have SWE experience – including a “dual space” of people who have plenty of background in math but none in SWE (I’m sure plenty of math majors fall into this category).</p><p>Which brings us to the next question:</p><p><br> <b>Can you also provide a roadmap for learning the fundamentals of CS and coding specifically for doing cutting-edge ML/AI research?</b></p><p>I’d say that if you don’t know how to do this already, the first order of business would be to implement the canonical data structures and algorithms covered in <i>Introduction to Algorithms and Machine Learning</i> (sorting, searching, graph traversals, etc., basically the stuff you’d see in a typical Data Structures / Algorithms course). If you work through that textbook in full, you’ll naturally cover all that stuff in addition to the core foundations of classical machine learning.</p><p>After that, I think it’s easier to pickup the rest of CS/coding as needed along the way since – at least, in my experience – it’s less hierarchical than math.</p><p>Don’t get me wrong, there are many CS/coding skills that you’ll need to learn if you don’t know already (off the top of my head: version control, interacting with databases and GPUs, various ML libraries/frameworks), but I these sorts of things can be picked up on the fly because, unlike in a tall hierarchy like math, it’s much easier to identify what prerequisites you’re missing whenever there’s something you don’t know how to do.</p><p>Like, let’s say you get to a stage where you need to run a ML model on a GPU, and you don’t know how to hook it up to the GPU. That’s something you’ll need to learn, but it’s not like there’s a mountain of prerequisite knowledge leading up to that task. You don’t have to know much of the underlying theory behind how GPUs work. There are frameworks like PyTorch where you can define a model in terms of tensor operations and the framework handles the process of getting it running efficiently on a GPU. You just have to point the framework to the GPU, which is pretty much just a configuration thing.</p><p>Now, I should mention that the way I’m interpreting “ML/AI research” is that you’re focusing on building models that are new in a theoretical sense, as opposed to deploying / scaling up existing models. If you’re actually wanting to get into ML/AI deployment, or maxing out ML/AI compute power, then there’s going to be more CS/coding/software prereqs.</p><p>For instance, if you want to further improve the efficiency with which a model utilizes a GPU – like, making improvements to PyTorch itself or something like that – then obviously you’re going to have to know a lot more about low-level GPU programming. But I don’t think that stuff would really fall under the realm of “ML/AI research” proper; it would be more properly categorized as “developing supporting software for ML/AI” or something like that.</p><p><br> <b>So, you don’t need to know graduate-level math for deep learning?</b></p><p>That’s right, the necessary math would be classified as undergraduate level. Now, I should point out that there are some theoretical ML researchers who are trying to build unifying theories of deep learning, and they sometimes use more advanced/abstract math in their theoretical frameworks that what I’ve talked about here. But that’s a separate thing.</p><p><br> <b>In general, why are there so many arguments about how much math you need to learn for ML?</b></p><p>Yeah, the question of “how much math do I need for ML/AI” can be a bit polarizing: some people say “no math needed” while others say “you need everything including axiomatic set theory,” but really the most generally correct answer is somewhere in the middle.</p><p>And for any sort of argument where a nuanced middle ground has to be established, it seems necessary to explicitly lay out what the specific middle ground is – what should be included, what shouldn’t be included, and why. So that’s what I’ve tried to do here.</p><p><br> <b>Do you think in some way the sheer number of things to study from the get go might be somewhat of a limiting factor, or discourage people? How should one balance just deep studying while also satisfying curiosity and keeping a pulse on the cutting-edge?</b></p><p>Yeah, I completely agree that the sheer mountain of work ahead of you can be discouraging, so it is definitely worth doing things to keep your interest alive: reading some articles about the cutting edge, toying around with new machine learning models/libraries, etc.</p><p>At a fundamental level, playing around not as efficient for learning as actually building up your hard skills through deliberate practice. So you can’t spend all your time tinkering and expect to reach a high level of skill.</p><p>However, if you burn yourself out and lose motivation to engage in deliberate practice, and you just stop… then that’s even worse.</p><p>I think that ideally, you’d want to play around just enough to keep yourself motivated to keep building up your hard skills through deliberate practice, and you’d spend the rest of the time actually doing the latter.</p><p>To zoom out and drive this point home, I want to point out the common misconception that ability is something to be “unlocked” by curiosity (which seems easy), not something “built” by deliberate practice (which seems hard).</p><p>This misconception sounds so ridiculous when you imagine it coming from an athletic trainer: “You want to get really good at basketball? Forget about practice drills – you were born to ball; all you need to do to unlock your inner baller is come in with the right attitude and play some pick-up ball at the park.”</p><p>Now, I’m not against curiosity/interest. That’s not what I’m trying to say at all. But curiosity/interest does not itself build ability. Curiosity/interest motivates people to engage in deliberate practice, which is what builds ability.</p><p>I’m not saying curiosity/interest doesn’t help, I’m just saying it’s not what moves the needle directly. Deliberate practice is what moves the needle directly. Curiosity/interest “greases the wheels,” so to speak, but it’s not what actually moves the wheels.</p><!-- keep original code below (not sure if it is used) --></section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Blockbuster Video VHS insert template (272 pts)]]></title>
            <link>https://github.com/rfinnie/blockbuster</link>
            <guid>41276605</guid>
            <pubDate>Sat, 17 Aug 2024 18:09:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/rfinnie/blockbuster">https://github.com/rfinnie/blockbuster</a>, See on <a href="https://news.ycombinator.com/item?id=41276605">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Blockbuster Video VHS insert template</h2><a id="user-content-blockbuster-video-vhs-insert-template" aria-label="Permalink: Blockbuster Video VHS insert template" href="#blockbuster-video-vhs-insert-template"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/rfinnie/blockbuster/blob/main/blockbuster-vhs.png"><img src="https://github.com/rfinnie/blockbuster/raw/main/blockbuster-vhs.png" alt="Blockbuster Video VHS insert template" title="Blockbuster Video VHS insert template"></a></p>
<p dir="auto">This is an editable Inkscape template for a Blockbuster Video VHS clamshell case insert.  Please note that this doesn't strive to be 100% accurate to any specific Blockbuster design, as they made incremental design changes to their clamshells over the years.  Instead, it's meant to be a good enough period piece of late 80s through 90s.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Notes</h2><a id="user-content-notes" aria-label="Permalink: Notes" href="#notes"></a></p>
<p dir="auto">The fields you'd want to change are all in Liberation Sans and Liberation Sans Narrow fonts, but if you don't have them, similar sans-serif fonts should work fine.</p>
<p dir="auto">The back blurb area is Nimbus Mono PS font, but again, any typewriter-like monospace font should be fine. I've also seen "The BLOCKBUSTER difference" blurb in a sans-serif font.  Later on in the 90s, this space tended to be used for actual movie information, in a sans-serif font.</p>
<p dir="auto">The "BLOCKBUSTER VIDEO" logo font is ITC Machine Std and the barcode is Libre Barcode 128. I've broken these out to separate layers which have alternate layers which are "pre-rendered", so you do not need the fonts.</p>
<p dir="auto">An additional set of layers are available for the simpler "BLOCKBUSTER" logo used later.</p>
<p dir="auto">The barcode format changed several times over the years, but the format depicted here is:</p>
<ul dir="auto">
<li>33: Rental. There were likely other codes for things like services, goods, etc.</li>
<li>55740: The 5-digit store number.</li>
<li>809656: A title-specific internal Blockbuster ID.</li>
<li>003: The per-title sequence for the store. For example, if the store had 10 copies of a title, they would be 001 through 010.</li>
</ul>
<p dir="auto">I don't know what "Rent Code" is, but I've seen "B", "N" and "T".</p>
<p dir="auto">"FOX 2000306" is the studio-specific catalog number for a title (in this case, for Fight Club).</p>
<p dir="auto">The title area may just have the title, but it could also have extra information listed. A common alternative format would be "FIGHT CLUB-1999-BRAD PITT".  Sometimes it would also show "NEW RELEASE-FIGHT CLUB".</p>
<p dir="auto">The most minor variation, but I've seen the rating ("R" in this example) sometimes be bolded, sometimes not.</p>
<p dir="auto">For a list of addresses and store numbers as of Blockbuster's bankruptcy, see <a href="https://www.wsj.com/public/resources/documents/BlockbusterCh11.pdf" rel="nofollow">this bankruptcy filing from 2010</a>. Finding the phone number from the store will take some additional searching.</p>
<p dir="auto">A hidden layer outlines where the spine is in relation to the elements, for alignment purposes. Notice that the spine's barcode actually wraps around to the back a little, by design.</p>
<p dir="auto">For an authentic Blockbuster case experience, take the "Barcodes" and "Fillable text" layers, group them all together, and shift them by a random amount relative to the base design, before printing.</p>
<p dir="auto">Blockbuster also used VHS clamshells for SNES and Genesis cartridge distribution.  In these cases, the category is "GAMES SNES" or "GAMES GENESIS", rating "N/A". The title will likely have "SNES-" or "GENESIS-" prefixing the actual game title.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Author</h2><a id="user-content-author" aria-label="Permalink: Author" href="#author"></a></p>
<p dir="auto">Reproduction created by <a href="https://www.finnie.org/" rel="nofollow">Ryan Finnie</a>. I'm not sure about the legal standing of a design semi-reproduction of a defunct company, but this template is licensed CC-BY-SA 4.0 International, to the extent it can be licensed.</p>
<p dir="auto">By the way, the location depicted on the template in Green Bay is a location I have pleasant memories of, having competed in the Blockbuster World Video Game Championships II competition in 1995, playing on the <a href="https://www.mariowiki.com/Donkey_Kong_Country_Competition_Cartridge" rel="nofollow">Donkey Kong Country Competition Cartridge</a>. I finished second place in the Nintendo division for that store.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Magic Wormhole: get things from one computer to another, safely (635 pts)]]></title>
            <link>https://github.com/magic-wormhole/magic-wormhole</link>
            <guid>41275920</guid>
            <pubDate>Sat, 17 Aug 2024 16:59:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/magic-wormhole/magic-wormhole">https://github.com/magic-wormhole/magic-wormhole</a>, See on <a href="https://news.ycombinator.com/item?id=41275920">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Magic Wormhole</h2><a id="user-content-magic-wormhole" aria-label="Permalink: Magic Wormhole" href="#magic-wormhole"></a></p>
<p dir="auto"><a href="https://pypi.python.org/pypi/magic-wormhole" rel="nofollow"><img src="https://camo.githubusercontent.com/12930992045edc2eeda8824e2ccf41245232e0ecab5ec2684b015dd98b5eb786/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f6d616769632d776f726d686f6c652e737667" alt="PyPI" data-canonical-src="http://img.shields.io/pypi/v/magic-wormhole.svg"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/magic-wormhole/magic-wormhole/workflows/Tests/badge.svg"><img src="https://github.com/magic-wormhole/magic-wormhole/workflows/Tests/badge.svg" alt="Tests"></a>
<a href="https://ci.appveyor.com/project/warner/magic-wormhole" rel="nofollow"><img src="https://camo.githubusercontent.com/dbb43eac7555e32970be7fe07a44c58e3ccd09a03e3dcbfa87695b66ec1394fd/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f773162646e696f76776d3465676679672f6272616e63682f6d61737465723f7376673d74727565" alt="Windows Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/w1bdniovwm4egfyg/branch/master?svg=true"></a>
<a href="https://codecov.io/github/magic-wormhole/magic-wormhole?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/9cc79c3b8dc4efa05dbc09e411dce1417992d3e257a7aabf078d05e0fa7fafd2/68747470733a2f2f636f6465636f762e696f2f6769746875622f6d616769632d776f726d686f6c652f6d616769632d776f726d686f6c652f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/magic-wormhole/magic-wormhole/coverage.svg?branch=master"></a>
<a href="https://magic-wormhole.readthedocs.io/" rel="nofollow"><img src="https://camo.githubusercontent.com/642c5b3ccd23bc2acef66264e94a742f67b0718f153090fab3d598415b6bc1fb/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d616769632d776f726d686f6c652f62616467652f3f76657273696f6e3d6c6174657374" alt="Docs" data-canonical-src="https://readthedocs.org/projects/magic-wormhole/badge/?version=latest"></a>
<a href="https://web.libera.chat/" rel="nofollow"><img src="https://camo.githubusercontent.com/afe7cb5ee8dc15a88579f6aed1b91c8074f8de4c661cc567ae328f9a7e79d1d6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6972632e6c69626572612e636861742d2532336d616769632d2d776f726d686f6c652d627269676874677265656e" alt="Irc" data-canonical-src="https://img.shields.io/badge/irc.libera.chat-%23magic--wormhole-brightgreen"></a>
<a href="https://matrix.to/#/#magic-wormhole:matrix.org" rel="nofollow"><img src="https://camo.githubusercontent.com/39204436e6af22521b53b4a5909efef0a2cd207c992a22df8a5e81fd5c85b962/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61747269782e6f72672d2532336d616769632d2d776f726d686f6c652d627269676874677265656e" alt="Matrix" data-canonical-src="https://img.shields.io/badge/matrix.org-%23magic--wormhole-brightgreen"></a></p>
<p dir="auto">Get things from one computer to another, safely.</p>
<p dir="auto">This package provides a library and a command-line tool named <code>wormhole</code>,
which makes it possible to get arbitrary-sized files and directories
(or short pieces of text) from one computer to another. The two endpoints are
identified by using identical "wormhole codes": in general, the sending
machine generates and displays the code, which must then be typed into the
receiving machine.</p>
<p dir="auto">The codes are short and human-pronounceable, using a phonetically-distinct
wordlist. The receiving side offers tab-completion on the codewords, so
usually only a few characters must be typed. Wormhole codes are single-use
and do not need to be memorized.</p>
<ul dir="auto">
<li>PyCon 2016 presentation: <a href="http://www.lothar.com/~warner/MagicWormhole-PyCon2016.pdf" rel="nofollow">Slides</a>, <a href="https://youtu.be/oFrTqQw0_3c" rel="nofollow">Video</a></li>
</ul>
<p dir="auto">For complete documentation, please see <a href="https://magic-wormhole.readthedocs.io/" rel="nofollow">https://magic-wormhole.readthedocs.io</a>
or the docs/ subdirectory.</p>
<p dir="auto">This program uses two servers, whose source code is kept in separate
repositories: the
<a href="https://github.com/magic-wormhole/magic-wormhole-mailbox-server">mailbox server</a>,
and the
<a href="https://github.com/magic-wormhole/magic-wormhole-transit-relay">transit relay</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License, Compatibility</h2><a id="user-content-license-compatibility" aria-label="Permalink: License, Compatibility" href="#license-compatibility"></a></p>
<p dir="auto">Magic-Wormhole is released under the MIT license, see the <code>LICENSE</code> file for details.</p>
<p dir="auto">This library is compatible with Python 3.8 and higher (tested against
versions up to 3.12).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Packaging, Installation</h2><a id="user-content-packaging-installation" aria-label="Permalink: Packaging, Installation" href="#packaging-installation"></a></p>
<p dir="auto">Magic Wormhole packages are included in many operating systems.</p>
<p dir="auto"><a href="https://repology.org/project/magic-wormhole/versions" rel="nofollow"><img src="https://camo.githubusercontent.com/bd996e540fae95b81d51264acc7dc6e85bd8cb527f7aac533e1b48bfa92bd127/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f766572746963616c2d616c6c7265706f732f6d616769632d776f726d686f6c652e737667" alt="Packaging status" data-canonical-src="https://repology.org/badge/vertical-allrepos/magic-wormhole.svg"></a></p>
<p dir="auto">To install it without an OS package, follow the <a href="https://magic-wormhole.readthedocs.io/en/latest/welcome.html#installation" rel="nofollow">Installation docs</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Flaw has Microsoft Authenticator overwriting MFA accounts, locking users out (327 pts)]]></title>
            <link>https://www.csoonline.com/article/3480918/design-flaw-has-microsoft-authenticator-overwriting-mfa-accounts-locking-users-out.html</link>
            <guid>41275846</guid>
            <pubDate>Sat, 17 Aug 2024 16:51:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.csoonline.com/article/3480918/design-flaw-has-microsoft-authenticator-overwriting-mfa-accounts-locking-users-out.html">https://www.csoonline.com/article/3480918/design-flaw-has-microsoft-authenticator-overwriting-mfa-accounts-locking-users-out.html</a>, See on <a href="https://news.ycombinator.com/item?id=41275846">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
					<p><span>News</span></p><p><span>Aug 05, 2024</span><span>9 mins</span></p>
		<p><span><span>Authentication</span></span><span><span>Multi-factor Authentication</span></span></p></div><article id="post-3480918">
	<div>
						<div>
	<h2>
		Microsoft stands out from the authenticator crowd by annihilating accounts when new accounts are introduced via QR code. Despite user complaints for years, no fix has been issued, leaving IT experts wondering, ‘Why would you pick Microsoft?’	</h2>
	
</div>					
						<div id="remove_no_follow">
		<div>




<hr>







<p>With use of <a href="https://www.csoonline.com/article/563753/two-factor-authentication-2fa-explained.html">multi-factor authentication</a> rising, end-users can find themselves fiddling with codes and authentication apps frequently throughout their days. For those who rely on Microsoft Authenticator, the experience can go beyond momentary frustration to full-blown panic as they become locked out of their accounts.</p>



<p>That’s because, due to an issue involving which fields it uses, Microsoft Authenticator often overwrites accounts when a user adds a new account via QR scan — the most common method of doing so.&nbsp;</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column0 -->
								
					<div>


<p>But because of the way the resulting lockout happens, the user is not likely to realize the issue resides with Microsoft Authenticator. Instead, the company issuing the authentication is considered the culprit, resulting in wasted corporate helpdesk hours trying to fix an issue not of that company’s making.&nbsp;</p>






<p>The core of the problem? Microsoft Authenticator will overwrite an account with the same username. Given the prominent use of email addresses for usernames, most users’ apps share the same username. Google Authenticator and just about every other authenticator app add the name of the issuer — such as a bank or a car company — to avoid this issue. Microsoft only uses the username.</p>



<p>Making this situation worse is that when a Microsoft overwrite happens, it’s not easy to determine which account is being overwritten. This can cause authentication issues with both the newly created account and the account that is overwritten.&nbsp;Moreover, users can potentially not realize a previously created account was annihilated until they attempt to use it again, whether that’s weeks or months later.</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column1 -->
								
					<div>


<p>There are multiple workarounds. The easiest is for companies to use any other authentication app. Not using the QR code scan feature — and manually entering the code — will also sidestep the issue, which doesn’t appear to arise when the authenticated accounts belong to Microsoft.</p>



<p>CSO Online found complaints of this problem dating back to 2020, but it appears to have been in place since Microsoft Authenticator was released in June 2016. (For historical context, Google was the first Authenticator app, having been launched in 2010.)&nbsp;</p>



<p>One such complaint in 2020 noted the workaround to manually enter the information, but it was dismissed as not viable for an enterprise audience.</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column2 -->
								
					<div>


<p>“I believe the fix, sorry, I mean <em>workaround</em> for this is to use the Secret Key from the Identity Provider and manually type this into the Authenticator app during setup,” <a href="https://learn.microsoft.com/en-us/answers/questions/721812/authenticator-will-overwrite-accounts-with-same-us">the user wrote</a>. “Unfortunately, this is not very helpful in an enterprise environment, especially when the average end user rarely knows anything about the inner workings of authentication, and seeing a random string of characters is intimidating.”</p>



<h2 id="a-big-problem-with-usability-and-cybersecurity">‘A big problem with usability and cybersecurity’</h2>



<p>This problem got attention recently when Australian IT consultant Brett Randall posted about it on LinkedIn.&nbsp;</p>



<p>In his post, Randall described participating in a recent vendor training session: “As we logged into their system, we were presented with a QR code to scan for MFA. A number of attendees opened Microsoft Authenticator, scanned the QR code, and proceeded to overwrite another application’s TOTP (Time-based One-Time Password) key,” Randall wrote.</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column3 -->
								
					<div>


<p>“Here’s how it should work and how every other authenticator app out there — Google, Okta, etc. — work. When you scan a QR code for MFA, it generates a string with a series of values. Other apps take two of these values — the label and the issuer — and join them together to form the unique ID for that key. Microsoft, on the other hand, ignores the standard and just takes one value — the label. And that’s typically your email address. Which means, Microsoft Authenticator will overwrite the last TOTP key that used the same email address. This can be disastrous.”</p>



<p>He added: “Watching a room full of people lose access to other systems as they gradually scanned a QR code and Microsoft Authenticator overwrote their keys to other systems was painful. But trying to get Microsoft to recognize the issue and do something about it? That’s been nigh on impossible.”</p>



<figure><blockquote><p>“If you haven’t picked an authentication app, why would you pick Microsoft?”</p><cite>— Tim Erlin, VP of product at Wallarm</cite></blockquote></figure>



<p>CSO Online contacted various other security and IT specialists and asked them if they could re-create the problem. They all could.</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column4 -->
								
					<div>


<p>“The help-desk burden is not trivial. This is one where I think it’s a design flaw,” said Gary Longsine, fractional CTO at IllumineX. “As far as recommending the app, this would prevent me from using Microsoft Authenticator. I wouldn’t recommend it to anyone for that reason.”</p>



<p>Tim Erlin, VP of product at Wallarm, said, “Users will be locked out and will need to get back in. Once you add one entry that is using the email address, the second entry will conflict. And once you have overwritten, you won’t know which one was overwritten.”</p>



<p>He added, “It’s possible that this problem occurs more often than anyone realizes because [users] don’t realize what the cause is. If you haven’t picked an authentication app, why would you pick Microsoft?”</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column5 -->
								
					<div>


<p>Erlin speculated that this problem initially happened because of an historic disconnect between security engineers and end-users. “This is a small example of a big problem with usability and cybersecurity. This is what happens when apps are developed by engineers who don’t have a strong knowledge of customers,” he said, adding that Microsoft hasn’t bothered to fix it because Microsoft Authenticator is a free product and therefore doesn’t generate revenue.</p>



<p>David Meltzer, chief product officer at Netography, re-created the problem and found it disconcerting. “I tried this to experience it myself. It is clearly a bug. It is a fairly straightforward thing [for Microsoft] to fix. Every other authenticator can handle it.”</p>



<p>Asked for comment, Google spokesperson Kimberly Samra wrote that “it’s correct that we don’t overwrite codes. That was an explicit decision.”</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column6 -->
								
					<div>


<h2 id="microsoft-says-users-issuers-to-blame">Microsoft says users, issuers to blame</h2>



<p>Microsoft confirmed the issue but said it was a feature not a bug, and that it was the fault of users or companies that use the app for authentication.</p>



<p>Microsoft issued two written statements to CSO Online but declined an interview. Its first statement read: “We can confirm that our authenticator app is functioning as intended. When users scan a QR code, they will receive a message prompt that asks for confirmation before proceeding with any action that might overwrite their account settings. This ensures that users are fully aware of the changes they are making.”</p>



<p>One problem with that first statement is that it does not correctly reflect what the message says. The message says: “This action will overwrite existing security information for your account. To prevent being locked out of your account, continue only if you initiated this action from a trusted source.”</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column7 -->
								
					<div>


<p>The first sentence of the warning window is correct, in that the action will indeed overwrite the account. But the second sentence incorrectly tells the user to proceed as long as two conditions are met: that the user initiated the action; and that it is a trusted source. In almost all relevant situations, both would apply. The user did indeed initiate the action (as opposed to a cyberthief trying to break in) and the site (such as a bank or hotel) is trusted.</p>



<p>Therefore, a user following those instructions would proceed and overwrite the accounts. It’s also worth noting that the message offers no means of not overwriting the account, other than abandoning the entire authentication effort. Users following the instructions would experience the problematic overwrite.&nbsp;</p>



<p>A few days after its initial response, Microsoft unprompted sent a different statement. The second one was much longer, blaming issuers:</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column8 -->
								
					<div>


<blockquote>
<p>“When you scan a QR code, the Authenticator app uses a label given by the vendor to set up your Time-based One-Time Password (TOTP) account. However, some sites or vendors don’t include the issuer — the site name or Identity provider name — in the label. This may result in a situation where a user may already have an account with the same label and the app attempts to overwrite the existing TOTP account with the new one they are scanning. In situations where a user has an existing account with the same label, users are always presented with a message prompt to confirm overwriting an existing TOTP account in their app and can make a conscious choice to proceed or not. We are always working on enhancing our products and will take this into consideration and apply it to future improvements.”</p>
</blockquote>



<p>That last sentence is the only indication we have seen from Microsoft that it might fix the issue.</p>



<p>As for the actions of “some sites or vendors,” Randall said there are a limited number of ways to resolve this situation.</p>



<p>“It seems there are two options here to avoid end users accidentally overwriting other apps’ keys. We audit every application’s otpauth and go through the hassle of trying to convince every company doing it ‘wrong’ to fix it. Or Microsoft fixes this once and then we never have to worry about it again,” Randall said.</p>
</div> <!-- Closing grid grid--cols-10@md grid--cols-8@lg article-column9 -->
								
					<div>


<p>“By the way, I’ve tested this behavior in 14 other authenticator apps so far. None of them exhibit the same collision behavior that Microsoft Authenticator does,” he added. “I gave up at 14 because at that point, it’s obvious Microsoft are the ones who are doing things poorly here.”</p>



<p>Randall listed the apps he tested: Google Authenticator by Google; Okta Verify by Okta; Duo Mobile by Duo Security; LastPass Authenticator by LastPass; 2FA Authenticator (2FAS) by Two Factor Authentication Service; Twilio Authy by Authy; Salesforce Authenticator by Salesforce; OneAuth by Zoho; ForgeRock Authenticator by ForgeRock; Authenticator 7 by SMM Service; Authenticator App by 2Stable; Auth0 Guardian by Auth0; OTP Auth by Roland Moers; and Authenticator 2FA Sentinel by Tommaso Carpi.</p>
</div></div>					</div>
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Alien – CUDA-powered artificial life simulation program (234 pts)]]></title>
            <link>https://github.com/chrxh/alien</link>
            <guid>41275759</guid>
            <pubDate>Sat, 17 Aug 2024 16:41:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/chrxh/alien">https://github.com/chrxh/alien</a>, See on <a href="https://news.ycombinator.com/item?id=41275759">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">
<a href="https://alien-project.org/" rel="nofollow">ALIEN - Explore worlds of artificial life</a>
</h2><a id="user-content-alien---explore-worlds-of-artificial-life" aria-label="Permalink: ALIEN - Explore worlds of artificial life" href="#alien---explore-worlds-of-artificial-life"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/73127001/358838841-ee578848-7dd7-458d-873f-89662a7c15f0.jpg?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjM5NDQ5MDIsIm5iZiI6MTcyMzk0NDYwMiwicGF0aCI6Ii83MzEyNzAwMS8zNTg4Mzg4NDEtZWU1Nzg4NDgtN2RkNy00NThkLTg3M2YtODk2NjJhN2MxNWYwLmpwZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODE4VDAxMzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTNjOWQ4YTVjYjQwYzBiYTU1ODFlYzA2Y2RiMzRhMTAxNmE3MzkzZDg0MTY3OWQ3ZGE2Nzk5MGE3Mjk0MGUyMjAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.CI_lSRhijQIZY6JbbJCuAvLTAsjwX8EuR5x-ab33kx0"><img src="https://private-user-images.githubusercontent.com/73127001/358838841-ee578848-7dd7-458d-873f-89662a7c15f0.jpg?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjM5NDQ5MDIsIm5iZiI6MTcyMzk0NDYwMiwicGF0aCI6Ii83MzEyNzAwMS8zNTg4Mzg4NDEtZWU1Nzg4NDgtN2RkNy00NThkLTg3M2YtODk2NjJhN2MxNWYwLmpwZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODE4VDAxMzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTNjOWQ4YTVjYjQwYzBiYTU1ODFlYzA2Y2RiMzRhMTAxNmE3MzkzZDg0MTY3OWQ3ZGE2Nzk5MGE3Mjk0MGUyMjAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.CI_lSRhijQIZY6JbbJCuAvLTAsjwX8EuR5x-ab33kx0" alt="Preview"></a></p>
<p dir="auto">
<b><i>A</i></b>rtificial <b><i>LI</i></b>fe <b><i>EN</i></b>vironment <b>(ALIEN)</b> is an artificial life simulation tool based on a specialized 2D particle engine in CUDA for soft bodies and fluids. Each simulated body consists of a network of particles that can be upgraded with higher-level functions, ranging from pure information processing capabilities to physical equipment (such as sensors, muscles, weapons, constructors, etc.) whose executions are orchestrated by neural networks. The bodies can be thought of as agents or digital organisms operating in a common environment. Their blueprints can be stored in genomes and passed on to offspring.
</p>
<p dir="auto">
The simulation code is written entirely in CUDA and optimized for large-scale real-time simulations with millions of particles.
The development is driven by the desire to better understand the conditions for (pre-)biotic evolution and the growing complexity of biological systems.
An important goal is to make the simulator user-friendly through a modern user interface, visually appealing rendering and a playful approach. 
</p>
<p dir="auto">
  Please join our <a href="https://discord.gg/7bjyZdXXQ2" rel="nofollow">Discord server</a> as a place for discussions, new developments and feedback around ALIEN and artificial life in general.
</p>
<p dir="auto">
  Demo video: <a href="https://youtu.be/qwbMGPkoJmg" rel="nofollow">Emerging Ecosystems | Winner of the ALIFE 2024 Virtual Creatures Competition</a>
</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">⚡ Main features</h2><a id="user-content--main-features" aria-label="Permalink: ⚡ Main features" href="#-main-features"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Physics and graphics engine</h3><a id="user-content-physics-and-graphics-engine" aria-label="Permalink: Physics and graphics engine" href="#physics-and-graphics-engine"></a></p>
<ul dir="auto">
<li>Particles for simulating soft and rigid body mechanics, fluids, heat dissipation, damage, adhesion etc.</li>
<li>Real-time user interactions with running simulations</li>
<li>Simulation runs entirely on GPU via CUDA</li>
<li>Rendering and post-processing via OpenGL using CUDA-OpenGL interoperability</li>
</ul>
<details open="">
  <summary>
    
    <span aria-label="Video description physics2.mp4">physics2.mp4</span>
    <span></span>
  </summary>

  <video src="https://private-user-images.githubusercontent.com/73127001/229868357-131fa71f-d03d-45db-ac76-9d192f5464af.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjM5NDQ5MDIsIm5iZiI6MTcyMzk0NDYwMiwicGF0aCI6Ii83MzEyNzAwMS8yMjk4NjgzNTctMTMxZmE3MWYtZDAzZC00NWRiLWFjNzYtOWQxOTJmNTQ2NGFmLm1wND9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODE4VDAxMzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWNlZjVlOGYyZDQ0MGE3YmE2ZWRmNWE3MWQzZTliMGVkYzY3MDBlMDVkZmY5YjBjNzRiZmVlYzA0Njk3NzQ2NzcmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.Tzl8QTUGg9YXf1hK57urMLvRsfDOR9BvHYxlZrK5lgE" data-canonical-src="https://private-user-images.githubusercontent.com/73127001/229868357-131fa71f-d03d-45db-ac76-9d192f5464af.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjM5NDQ5MDIsIm5iZiI6MTcyMzk0NDYwMiwicGF0aCI6Ii83MzEyNzAwMS8yMjk4NjgzNTctMTMxZmE3MWYtZDAzZC00NWRiLWFjNzYtOWQxOTJmNTQ2NGFmLm1wND9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODE4VDAxMzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWNlZjVlOGYyZDQ0MGE3YmE2ZWRmNWE3MWQzZTliMGVkYzY3MDBlMDVkZmY5YjBjNzRiZmVlYzA0Njk3NzQ2NzcmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.Tzl8QTUGg9YXf1hK57urMLvRsfDOR9BvHYxlZrK5lgE" controls="controls" muted="muted">

  </video>
</details>

<p dir="auto"><h3 tabindex="-1" dir="auto">Artificial Life engine extensions</h3><a id="user-content-artificial-life-engine-extensions" aria-label="Permalink: Artificial Life engine extensions" href="#artificial-life-engine-extensions"></a></p>
<ul dir="auto">
<li>Multi-cellular organisms are simulated as particle networks</li>
<li>Genetic system and cell by cell construction of offspring</li>
<li>Neural networks for controlling higher-level functions (e.g. sensors and muscles)</li>
<li>Various colors may be used to customize cell types according to own specifications</li>
<li>Support for spatially varying simulation parameters</li>
</ul>
<details open="">
  <summary>
    
    <span aria-label="Video description alife3.mp4">alife3.mp4</span>
    <span></span>
  </summary>

  <video src="https://private-user-images.githubusercontent.com/73127001/229569056-0db6562b-0147-43c8-a977-5f12c1b6277b.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjM5NDQ5MDIsIm5iZiI6MTcyMzk0NDYwMiwicGF0aCI6Ii83MzEyNzAwMS8yMjk1NjkwNTYtMGRiNjU2MmItMDE0Ny00M2M4LWE5NzctNWYxMmMxYjYyNzdiLm1wND9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODE4VDAxMzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTRjNmMzMjE3Njg3MWQ0MjUzZGViNjE1OTFkNDNmODk4Yzg3ZWI5MmMyZTE2MmZiZGQxMmRlMDEzYjIzZWYyZWEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.ARgNjtuHkAW2LFPl3FHG7l3YX9S4gxHVQq5dQNJueug" data-canonical-src="https://private-user-images.githubusercontent.com/73127001/229569056-0db6562b-0147-43c8-a977-5f12c1b6277b.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjM5NDQ5MDIsIm5iZiI6MTcyMzk0NDYwMiwicGF0aCI6Ii83MzEyNzAwMS8yMjk1NjkwNTYtMGRiNjU2MmItMDE0Ny00M2M4LWE5NzctNWYxMmMxYjYyNzdiLm1wND9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODE4VDAxMzAwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTRjNmMzMjE3Njg3MWQ0MjUzZGViNjE1OTFkNDNmODk4Yzg3ZWI5MmMyZTE2MmZiZGQxMmRlMDEzYjIzZWYyZWEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.ARgNjtuHkAW2LFPl3FHG7l3YX9S4gxHVQq5dQNJueug" controls="controls" muted="muted">

  </video>
</details>

<p dir="auto"><h3 tabindex="-1" dir="auto">Extensive editing tools</h3><a id="user-content-extensive-editing-tools" aria-label="Permalink: Extensive editing tools" href="#extensive-editing-tools"></a></p>
<ul dir="auto">
<li>Graph editor for manipulating every particle and connection</li>
<li>Freehand and geometric drawing tools</li>
<li>Genetic editor for designing customized organisms</li>
<li>Mass-operations and (up/down) scaling functions</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Networking</h3><a id="user-content-networking" aria-label="Permalink: Networking" href="#networking"></a></p>
<ul dir="auto">
<li>Built-in simulation browser</li>
<li>Download and upload simulation files</li>
<li>Upvote simulations by giving stars</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">❓ But for what is this useful</h2><a id="user-content--but-for-what-is-this-useful" aria-label="Permalink: ❓ But for what is this useful" href="#-but-for-what-is-this-useful"></a></p>
<ul dir="auto">
<li>A first attempt to answer: Feed your curiosity by watching evolution at work! As soon as self-replicating machines come into play and mutations are turned on, the simulation itself does everything.</li>
<li>Perhaps the most honest answer: Fun! It is almost like a game with a pretty fast and realistic physics engine. You can make hundreds of thousands of machines accelerate and destroy with the mouse cursor. It feels like playing god in your own universe with your own rules. Different render styles and a visual editor offer fascinating insights into the events. There are a lot of videos on the <a href="https://youtube.com/channel/UCtotfE3yvG0wwAZ4bDfPGYw" rel="nofollow">YouTube channel</a> for illustration.</li>
<li>A more academic answer: A tool to tackle fundamental questions of how complexity or life-like structure may arise from simple components. How do entire ecosystems adapt to environmental changes and find a new equilibrium? How to find conditions that allow open-ended evolution?</li>
<li>A tool for generative art: Evolution is a creative force that leads to ever new forms and behaviors.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">📘 Documentation</h2><a id="user-content--documentation" aria-label="Permalink: 📘 Documentation" href="#-documentation"></a></p>
<p dir="auto">A documentation for the previous major version, which introduces the reader to the simulator with tutorial-like articles, can be found at <a href="https://alien-project.gitbook.io/docs" rel="nofollow">alien-project.gitbook.io/docs</a>. Please notice that many of the information therein are no longer up to date.
The latest version includes a brief documentation and user guidance in the program itself via help windows and tooltips.</p>
<p dir="auto">Further information and artwork:</p>
<ul dir="auto">
<li><a href="https://alien-project.org/" rel="nofollow">Website</a></li>
<li><a href="https://youtube.com/channel/UCtotfE3yvG0wwAZ4bDfPGYw" rel="nofollow">YouTube</a></li>
<li><a href="https://twitter.com/chrx_h" rel="nofollow">Twitter</a></li>
<li><a href="https://www.reddit.com/r/AlienProject" rel="nofollow">Reddit</a></li>
<li><a href="https://discord.gg/7bjyZdXXQ2" rel="nofollow">Discord</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🖥️ Minimal system requirements</h2><a id="user-content-️-minimal-system-requirements" aria-label="Permalink: 🖥️ Minimal system requirements" href="#️-minimal-system-requirements"></a></p>
<p dir="auto">An Nvidia graphics card with compute capability 6.0 or higher is needed. Please check <a href="https://en.wikipedia.org/wiki/CUDA#GPUs_supported" rel="nofollow">https://en.wikipedia.org/wiki/CUDA#GPUs_supported</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">💽 Installer</h2><a id="user-content--installer" aria-label="Permalink: 💽 Installer" href="#-installer"></a></p>
<p dir="auto">Installer for Windows: <a href="https://alien-project.org/media/files/alien-installer.msi" rel="nofollow">alien-installer.msi</a> (updated: 2024-04-26)</p>
<p dir="auto">In the case that the program crashes for an unknown reason, please refer to the troubleshooting section below.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔨 How to build the sources</h2><a id="user-content--how-to-build-the-sources" aria-label="Permalink: 🔨 How to build the sources" href="#-how-to-build-the-sources"></a></p>
<p dir="auto">The build process is mostly automated using the cross-platform CMake build system and the vcpkg package manager, which is included as a Git submodule.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Getting the sources</h3><a id="user-content-getting-the-sources" aria-label="Permalink: Getting the sources" href="#getting-the-sources"></a></p>
<p dir="auto">To obtain the sources, please open a command prompt in a suitable directory (which should not contain whitespace characters) and enter the following command:</p>
<div data-snippet-clipboard-copy-content="git clone --recursive https://github.com/chrxh/alien.git"><pre><code>git clone --recursive https://github.com/chrxh/alien.git
</code></pre></div>
<p dir="auto">Note: The <code>--recursive</code> parameter is necessary to check out the vcpkg submodule as well. Besides that, submodules are not normally updated by the standard <code>git pull</code> command. Instead, you need to write <code>git pull --recurse-submodules</code>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Build instructions</h3><a id="user-content-build-instructions" aria-label="Permalink: Build instructions" href="#build-instructions"></a></p>
<p dir="auto">Prerequisites: <a href="https://developer.nvidia.com/cuda-downloads" rel="nofollow">CUDA Toolkit 11.2+</a> and a toolchain for CMake (e.g. GCC 9.x+ or <a href="https://visualstudio.microsoft.com/vs/" rel="nofollow">MSVC v142+</a>).</p>
<p dir="auto">Build steps:</p>
<div data-snippet-clipboard-copy-content="mkdir build &amp;&amp; cd build
cmake .. -DCMAKE_BUILD_TYPE=Release
cmake --build . --config Release -j8"><pre><code>mkdir build &amp;&amp; cd build
cmake .. -DCMAKE_BUILD_TYPE=Release
cmake --build . --config Release -j8
</code></pre></div>
<p dir="auto">If everything goes well, the ALIEN executable can be found under the build directory in <code>./alien</code> or <code>.\Release\alien.exe</code> depending on the used toolchain and platform.
It is important to start ALIEN directly from the build folder, otherwise it will not find the resource folder.</p>
<p dir="auto">There are reported build issues with (updated: 2024-06-22)</p>
<ul dir="auto">
<li>GCC 13 (version 11 should work)</li>
<li>Visual Studio 17.10 (version 17.9 should work)</li>
<li>CUDA 12.5 (version 12.4 should work)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">⌨️ Command-line interface</h2><a id="user-content-️-command-line-interface" aria-label="Permalink: ⌨️ Command-line interface" href="#️-command-line-interface"></a></p>
<p dir="auto">This repository also contains a CLI for ALIEN. It can be used to run simulations without using a GUI. This is useful for performance measurements as well as for automatic execution and evaluation of simulations for different parameters.
The CLI takes the simulation file, along with its parameters and the number of time steps, as input. It then provides the resulting simulation file and the statistics (as a CSV file) as output.
For example,</p>
<div data-snippet-clipboard-copy-content=".\cli.exe -i example.sim -o output.sim -t 1000"><pre><code>.\cli.exe -i example.sim -o output.sim -t 1000
</code></pre></div>
<p dir="auto">runs the simulation file <code>example.sim</code> for 1000 time steps.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔎 Troubleshooting</h2><a id="user-content--troubleshooting" aria-label="Permalink: 🔎 Troubleshooting" href="#-troubleshooting"></a></p>
<p dir="auto">Please make sure that:</p>
<ol dir="auto">
<li>You have an NVIDIA graphics card with compute capability 6.0 or higher (for example GeForce 10 series).</li>
<li>You have the latest NVIDIA graphics driver installed.</li>
<li>The name of the installation directory (including the parent directories) should not contain non-English characters. If this is not fulfilled, please re-install ALIEN to a suitable directory. Do not move the files manually. If you use Windows, make also sure that you install ALIEN with a Windows user that contains no non-English characters. If this is not the case, a new Windows user could be created to solve this problem.</li>
<li>ALIEN needs write access to its own directory. This should normally be the case.</li>
<li>If you have multiple graphics cards, please check that your primary monitor is connected to the CUDA-powered card. ALIEN uses the same graphics card for computation as well as rendering and chooses the one with the highest compute capability.</li>
<li>If you possess both integrated and dedicated graphics cards, please ensure that the alien-executable is configured to use your high-performance graphics card. On Windows you need to access the 'Graphics settings,' add 'alien.exe' to the list, click 'Options,' and choose 'High performance'.</li>
</ol>
<p dir="auto">If these conditions are not met, ALIEN may crash unexpectedly.
If the conditions are met and the error still occurs, please start ALIEN with the command line parameter <code>-d</code>, try to reproduce the error and then create a GitHub issue on <a href="https://github.com/chrxh/alien/issues">https://github.com/chrxh/alien/issues</a> where the log.txt is attached.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🌌 Screenshots</h2><a id="user-content--screenshots" aria-label="Permalink: 🌌 Screenshots" href="#-screenshots"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Different plant-like populations around a radiation source</h4><a id="user-content-different-plant-like-populations-around-a-radiation-source" aria-label="Permalink: Different plant-like populations around a radiation source" href="#different-plant-like-populations-around-a-radiation-source"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/73127001/229311601-839649a6-c60c-4723-99b3-26086e3e4340.jpg"><img src="https://user-images.githubusercontent.com/73127001/229311601-839649a6-c60c-4723-99b3-26086e3e4340.jpg" alt="Screenshot1"></a></p>

<p dir="auto"><h4 tabindex="-1" dir="auto">Close-up of different types of organisms so that their cell networks can be seen</h4><a id="user-content-close-up-of-different-types-of-organisms-so-that-their-cell-networks-can-be-seen" aria-label="Permalink: Close-up of different types of organisms so that their cell networks can be seen" href="#close-up-of-different-types-of-organisms-so-that-their-cell-networks-can-be-seen"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/73127001/229311604-3ee433d4-7dd8-46e2-b3e6-489eaffbda7b.jpg"><img src="https://user-images.githubusercontent.com/73127001/229311604-3ee433d4-7dd8-46e2-b3e6-489eaffbda7b.jpg" alt="Screenshot2"></a></p>

<p dir="auto"><h4 tabindex="-1" dir="auto">Different swarms attacking an ecosystem</h4><a id="user-content-different-swarms-attacking-an-ecosystem" aria-label="Permalink: Different swarms attacking an ecosystem" href="#different-swarms-attacking-an-ecosystem"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/73127001/229311606-2f590bfb-71a8-4f71-8ff7-7013de9d7496.jpg"><img src="https://user-images.githubusercontent.com/73127001/229311606-2f590bfb-71a8-4f71-8ff7-7013de9d7496.jpg" alt="Screenshot3"></a></p>

<p dir="auto"><h4 tabindex="-1" dir="auto">Genome editor</h4><a id="user-content-genome-editor" aria-label="Permalink: Genome editor" href="#genome-editor"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/73127001/229313813-c9ce70e2-d61f-4745-b64f-ada0b6758901.jpg"><img src="https://user-images.githubusercontent.com/73127001/229313813-c9ce70e2-d61f-4745-b64f-ada0b6758901.jpg" alt="Screenshot3b"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🧩 Contributing to the project</h2><a id="user-content--contributing-to-the-project" aria-label="Permalink: 🧩 Contributing to the project" href="#-contributing-to-the-project"></a></p>
<p dir="auto">Contributions to the project are very welcome. The most convenient way is to communicate via <a href="https://github.com/chrxh/alien/issues">GitHub Issues</a>, <a href="https://github.com/chrxh/alien/pulls">Pull requests</a> or the <a href="https://github.com/chrxh/alien/discussions">Discussion forum</a> depending on the subject. For example, it could be</p>
<ul dir="auto">
<li>Providing new content (simulation or genome files)</li>
<li>Producing or sharing media files</li>
<li>Reporting of bugs, wanted features, questions or feedback via GitHub Issues or in the Discussion forum.</li>
<li>Pull requests for bug fixes, code cleanings, optimizations or minor tweaks. If you want to implement new features, refactorings or other major changes, please use the <a href="https://github.com/chrxh/alien/discussions">Discussion forum</a> for consultation and coordination in advance.</li>
<li>Extensions or corrections to the <a href="https://alien-project.gitbook.io/docs" rel="nofollow">alien-docs</a>. It has its <a href="https://github.com/chrxh/alien-docs">own repository</a>.</li>
</ul>
<p dir="auto">A short architectural overview of the source code can be found in the <a href="https://alien-project.gitbook.io/docs/under-the-hood" rel="nofollow">documentation</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">💎 Credits and dependencies</h2><a id="user-content--credits-and-dependencies" aria-label="Permalink: 💎 Credits and dependencies" href="#-credits-and-dependencies"></a></p>
<p dir="auto">ALIEN has been initiated, mainly developed and maintained by <a href="mailto:heinemann.christian@gmail.com">Christian Heinemann</a>. Thanks to all the others who contributed to this repository:</p>
<ul dir="auto">
<li><a href="https://github.com/tlemo">tlemo</a></li>
<li><a href="https://github.com/mpersano">mpersano</a></li>
<li><a href="https://github.com/dguerizec">dguerizec</a></li>
<li><a href="https://github.com/willjallen">Will Allen</a></li>
<li><a href="https://github.com/TheBarret">TheBarret</a></li>
</ul>
<p dir="auto">The following external libraries are used:</p>
<ul dir="auto">
<li><a href="https://developer.nvidia.com/cuda-toolkit" rel="nofollow">CUDA Toolkit</a></li>
<li><a href="https://github.com/ocornut/imgui">Dear ImGui</a></li>
<li><a href="https://github.com/epezent/implot">ImPlot</a></li>
<li><a href="https://github.com/dfranx/ImFileDialog">ImFileDialog</a></li>
<li><a href="https://www.boost.org/" rel="nofollow">boost</a></li>
<li><a href="https://glad.dav1d.de/" rel="nofollow">Glad</a></li>
<li><a href="https://www.glfw.org/" rel="nofollow">GLFW</a></li>
<li><a href="https://github.com/nigels-com/glew">glew</a></li>
<li><a href="https://github.com/nothings/stb">stb</a></li>
<li><a href="https://github.com/USCiLab/cereal">cereal</a></li>
<li><a href="https://www.zlib.net/" rel="nofollow">zlib</a></li>
<li><a href="https://github.com/mateidavid/zstr">zstr</a></li>
<li><a href="https://github.com/openssl/openssl">OpenSSL</a></li>
<li><a href="https://github.com/yhirose/cpp-httplib">cpp-httplib</a></li>
<li><a href="https://github.com/google/googletest">googletest</a></li>
<li><a href="https://vcpkg.io/en/index.html" rel="nofollow">vcpkg</a></li>
<li><a href="https://github.com/GiovanniDicanio/WinReg">WinReg</a></li>
<li><a href="https://github.com/CLIUtils/CLI11">CLI11</a></li>
</ul>
<p dir="auto">Free icons and icon font:</p>
<ul dir="auto">
<li><a href="https://github.com/juliettef/IconFontCppHeaders">IconFontCppHeaders</a></li>
<li><a href="https://iconduck.com/" rel="nofollow">Iconduck</a> (Noto Emoji by Google, <a href="https://www.apache.org/licenses/LICENSE-2.0.txt" rel="nofollow">Apache License 2.0</a>)</li>
<li><a href="https://www.iconfinder.com/" rel="nofollow">Iconfinder</a> (Bogdan Rosu Creative, <a href="https://creativecommons.org/licenses/by/4.0" rel="nofollow">CC BY 4.0</a>)</li>
<li><a href="https://www.flaticon.com/free-icons/people" rel="nofollow">People icons created by Freepik - Flaticon</a> (<a href="https://media.flaticon.com/license/license.pdf" rel="nofollow">Flaticon license</a>)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🧾 License</h2><a id="user-content--license" aria-label="Permalink: 🧾 License" href="#-license"></a></p>
<p dir="auto">ALIEN is licensed under the <a href="https://github.com/chrxh/alien/blob/develop/LICENSE">BSD 3-Clause</a> license.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[pg_duckdb: Splicing Duck and Elephant DNA (147 pts)]]></title>
            <link>https://motherduck.com/blog/pg_duckdb-postgresql-extension-for-duckdb-motherduck/</link>
            <guid>41275751</guid>
            <pubDate>Sat, 17 Aug 2024 16:40:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://motherduck.com/blog/pg_duckdb-postgresql-extension-for-duckdb-motherduck/">https://motherduck.com/blog/pg_duckdb-postgresql-extension-for-duckdb-motherduck/</a>, See on <a href="https://news.ycombinator.com/item?id=41275751">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><section><h2 id="introducing-the-duckdb-postgres-extension">Introducing the DuckDB + Postgres Extension</h2><p><strong>You can have your analytics and transact them too</strong></p><p>We're excited to announce <a href="https://github.com/duckdb/pg_duckdb">pg_duckdb</a>, an open-source Postgres extension that embeds DuckDB's analytics engine into Postgres for fast analytical queries in your favorite transactional database.</p><p>Postgres is generating a lot of excitement, having been named <a href="https://db-engines.com/en/blog_post/106">2023 DBMS of the Year</a> by DB-Engines and recognized as the most popular database in the <a href="https://survey.stackoverflow.co/2024/technology#1-databases">2024 Stack Overflow Developer Survey</a> twice in a row. It is popular for good reasons; it is a robust way to be able to create, update, and store data about your application.</p><p>Postgres is great at a lot of things, but if you try to use it for analytics, you hit a wall pretty quickly. That is, it is great at creating, finding and locating individual rows, but if you want to understand what is going on in a data set, it can be painfully slow. For example, you might want to know how revenue is growing in the Netherlands, or how many of your customers have names that rhyme with “Duck.” These are analytical queries and often require separate ways of storing and processing the data to operate efficiently.</p><p>People have tried to add Band-Aids to improve Postgres analytical performance. but they haven’t been particularly successful because being good at analytics requires different techniques for running your queries, like being able to operate over batches of rows at once, and avoiding decompressing data until it is absolutely needed. And typically, that takes a purpose-built analytical engine, which takes a ton of effort.</p><p>This is where DuckDB comes in. DuckDB is an in-process OLAP database and uses a vectorized query engine to process chunks (vectors) of data at a time. This makes it valuable for answering analytical questions about what is going on in the data. DuckDB’s popularity has been soaring due to its speed, ease of use, and versatility.</p><p>Postgres has a rich extension model that lets you do things like search over vector embeddings and handle geospatial data.  DuckDB is an embedded database so you can build it into other software. What happens if you put those two together? Can you make a terrific transactional database that can also do awesome analytics?</p><p>Today, we’re announcing our collaboration on <code>pg_duckdb</code>, a Postgres extension that combines Postgres and DuckDB. It is fully open source, with a permissive MIT license. What’s more, the IP is owned by the DuckDB foundation, which will ensure that it stays open source. It is hosted in the official DuckDB GitHub <a href="https://github.com/duckdb/pg_duckdb">repository</a>.</p></section>
<section><h2 id="the-challenges-ahead">The challenges ahead</h2><p>In order to really make a DuckDB Postgres extension that looks and feels just like Postgres, it is going to take a lot of work to get right. It is going to need significant DuckDB experience, since it will need improvements to DuckDB. In addition, it will also require a lot of Postgres knowledge to figure out how to weave DuckDB seamlessly into how Postgres executes queries.</p><p>In order to gather the right experts, we helped put together a consortium of companies, each of whom can provide unique skills to make the project successful:</p><ul>
<li><strong>DuckDB Labs</strong> are the creators and stewards of DuckDB. They are signed up to make DuckDB changes needed to make DuckDB execution look just like Postgres.</li>
<li><strong>MotherDuck</strong> has a lot of experience running DuckDB, and so we are helping make DuckDB run well inside Postgres.</li>
<li><strong>Hydra</strong> originally kicked off the effort and has lent their know-how building Postgres extensions and storage. They are key drivers and contributors to the project.</li>
<li><strong>Neon</strong> has been building serverless managed Postgres and is lending experience about what will run well in production and how to make DuckDB work with Postgres Storage</li>
<li><strong>Microsoft</strong> has a ton of Postgres know-how including several Postgres committers and are also participating in the project.</li>
</ul><blockquote>
<p>“A lot of developers use Postgres as a general purpose database and analytics is a major use case that Postgres didn't address well until now. This will be a big win for our users and generally for the Postgres ecosystem to support columnstore data and run analytics well. We are excited to add this extension to our platform and also contribute to this project." -- Nikita Shamgunov, CEO and founder of Neon DB</p>
</blockquote><p>We recognize that we aren’t the first people with this idea; in fact, there have been several other folks who have built DuckDB as a Postgres extension. Crunchy Data has a commercial version. ParadeDB built <code>pg_analytics</code> which has similar functionality, but has a somewhat more restrictive license. But we realized that those projects, on their own, are going to struggle to be successful without commitment to do the internal engine work in DuckDB. By building in the open and making sure that DuckDB can operate seamlessly in a Postgres environment, we believe that we will be helping these projects as well.</p></section>
<section><h2 id="why-you-might-ask-does-motherduck-care-about-postgres">Why, you might ask, does MotherDuck care about Postgres?</h2><p><strong>After all, isn’t MotherDuck a cloud hosted DuckDB?</strong></p><p>First, we are committed to a thriving DuckDB ecosystem. If DuckDB becomes ubiquitous, then that is good for everyone. We want to see DuckDB in as many different places and applications as possible. And Postgres has millions of users; if a healthy proportion of those people starts becoming familiar with DuckDB, that is a win for duck fans everywhere.</p><p>Second, our motto at MotherDuck is, “If you can Duck, you can MotherDuck.” Our aim is to ensure that anywhere you can run DuckDB, running MotherDuck is as simple as opening a database with the <code>md:</code> prefix. MotherDuck allows any DuckDB user to scale into the cloud, collaborate with colleagues, and reliably manage their data.</p><p>The <code>pg_duckdb</code> extension will be fully capable of querying against data stored in the cloud in MotherDuck as if it were local. MotherDuck’s “dual execution” capabilities let us join local Postgres data against MotherDuck data seamlessly, and we will figure out the best place to run the query. As a user, you don’t really need to care where the computation runs, we’ll just figure out how to make it run fast.</p><p>Moreover, it is common in analytics to want to offload your data from your transactional database into an analytical store. The <code>pg_duckdb</code> extension along with MotherDuck can help; you can just run a query in Postgres that pulls recent data from your Postgres database and write it to MotherDuck. You don’t need to export and reimport data, or set up CDC.</p><p>Finally, there are some downsides to running analytics on the same database that runs your application. Analytics can be resource hungry in terms of the amount of memory and CPU needed to make it run well. Above a certain size, folks may not want to run this on their production transactional database. MotherDuck will help offload this to the cloud, in a way that people don’t even have to change the queries that they’re running; they just get faster.</p></section>
<section><h2 id="building-in-the-open">Building in the Open</h2><p>We’re announcing early, with the intention of building in the open with a public roadmap. The <code>pg_duckdb</code> extension is fully usable to query over data in a data lake, to run analytical queries over Postgres, and to store data in a local DuckDB database.</p><p>Today at <a href="https://duckdb.org/2024/08/15/duckcon5.html">DuckCon 5</a>, Joe Sciarrino from <a href="https://hydra.so/">Hydra</a> showed off the extension and some of its capabilities, and Frances Perry from MotherDuck demonstrated <code>pg_duckdb</code> running queries combining Postgres and MotherDuck. If you didn’t make it to that event, you’ll be able to check out the videos once they’re posted.</p><p>Key features in the roadmap include:</p><ul>
<li>Seamless MotherDuck support to be able to access your MotherDuck data in the cloud and your Postgres data at the same time.</li>
<li>Postgres native storage that will write data into Postgres storage pages and write-ahead log, which will let <code>pg_duckdb</code> to integrate with existing backup and replication.</li>
<li>Full type compatibility with Postgres. Postgres already supports a lot of data types, our goal is to support them all.</li>
<li>Full function compatibility with Postgres; any Postgres function that you run should also work in DuckDB.</li>
<li>Seamless semantic compatibility. There are subtle differences between how any two database engines compute results, even ones that support the same SQL operations. Things like how to handle rounding or decimals of certain precision, or how to deal with semi-structured JSON object can vary between engines. So to ensure compatibility, we will need to make sure DuckDB can work just like Postgres.</li>
<li>High quality, seamless lakehouse integration. DuckDB is already pretty good at querying from data lakes and has Iceberg and Delta lake support, but you should expect this functionality to get much better over time.</li>
</ul><p>Check out the <a href="https://github.com/duckdb/pg_duckdb">repository</a> today. We are excited to build this in the open and embrace contributions, feedback, and suggestions from everybody. As they say, “if you want to go far, go together.” We recognize that there are a lot of technical challenges ahead, and we welcome help and guidance on the project.</p><p>Also, please share your feedback with us on the MotherDuck <a href="https://slack.motherduck.com/">Slack</a>! If you’d like to discuss your use case in more detail, please connect with us - we’d love to learn more about what you’re building.</p></section></div><div><div><h6>CONTENT</h6><ol></ol></div><div><p>Subscribe to MotherDuck Blog</p><form><div><p><label for="subscribe_md_emails">Also subscribe to other MotherDuck updates</label></p></div></form></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[X says it is closing operations in Brazil due to judge's content orders (297 pts)]]></title>
            <link>https://www.reuters.com/technology/x-close-operations-brazil-effective-immediately-2024-08-17/</link>
            <guid>41275600</guid>
            <pubDate>Sat, 17 Aug 2024 16:20:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/technology/x-close-operations-brazil-effective-immediately-2024-08-17/">https://www.reuters.com/technology/x-close-operations-brazil-effective-immediately-2024-08-17/</a>, See on <a href="https://news.ycombinator.com/item?id=41275600">Hacker News</a></p>
Couldn't get https://www.reuters.com/technology/x-close-operations-brazil-effective-immediately-2024-08-17/: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: Do we need to pay billions in fees to Stripe, Block, PayPal and Visa/MC? (204 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=41275342</link>
            <guid>41275342</guid>
            <pubDate>Sat, 17 Aug 2024 15:45:43 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=41275342">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="41275342">
      <td><span></span></td>      <td><center><a id="up_41275342" href="https://news.ycombinator.com/vote?id=41275342&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=41275342">Ask HN: Do we need to pay billions in fees to Stripe, Block, PayPal and Visa/MC?</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_41275342">106 points</span> by <a href="https://news.ycombinator.com/user?id=OnuRC">OnuRC</a> <span title="2024-08-17T15:45:43"><a href="https://news.ycombinator.com/item?id=41275342">6 hours ago</a></span> <span id="unv_41275342"></span> | <a href="https://news.ycombinator.com/hide?id=41275342&amp;goto=item%3Fid%3D41275342">hide</a> | <a href="https://hn.algolia.com/?query=Ask%20HN%3A%20Do%20we%20need%20to%20pay%20billions%20in%20fees%20to%20Stripe%2C%20Block%2C%20PayPal%20and%20Visa%2FMC%3F&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=41275342&amp;auth=28462509f6f6e039403fe54f79dc2a3cffd8162d">favorite</a> | <a href="https://news.ycombinator.com/item?id=41275342">189&nbsp;comments</a>        </span>
              </td></tr>
    <tr><td></td></tr><tr><td colspan="2"></td><td><p>In total these companies have profit in double digit billions! That's all coming from inefficiency and lack of real competition? is it totally necessary? does anyone think it possible to rival them in a decade with enough funding?</p></td></tr>        <tr><td></td></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table><table>
            <tbody><tr id="41275901"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41275901" href="https://news.ycombinator.com/vote?id=41275901&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Stripe, Block, and PayPal each solved a massive pain point.</p><p>PayPal provided a way to pay people and vendors without giving away your credit card number.</p><p>Square made it easy to accept payment in person on a phone, without an extensive upfront underwriting experience and without expensive fixed monthly fees.</p><p>Stripe did the same as Square, but for accepting online payments.</p><p>Fraud and Risk come in many forms, and these providers, even with their UX innovations, sit on top of those same rails to reduce fraud.  Without those rails, buyers can’t trust sellers and sellers can’t trust buyers.</p><p>In my opinion, you need to find a way to solve that problem before you can eliminate the fees being captured by these providers.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277559"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41277559" href="https://news.ycombinator.com/vote?id=41277559&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>A lot of the fraud hinges on the fact that all you need to drain an account is a static card number. A lot of hacks are subsequently piled on top of that to try and make it harder (SCA/3D Secure, captchas, etc), and a lot of busywork is spent tidying up the consequences of that (chargeback handling, etc).</p><p>You could eliminate a lot of the fraud by moving off a mostly-static identifier to merchant, amount and time-limited tokens the user generates with their bank (or the merchant redirects them there). This would address a lot of the issues - the tokens are useless when leaked (as they only work against the merchant's own account) and can't be misused even by the merchant to go beyond the agreed amount or time limit.</p><p>This means with such a system you’d immediately eliminate a whole category of fraud, with the only thing remaining being merchant-level disputes like goods not as described/etc, which can easily be made optional and the user can choose to opt-in for the extra fee. Then you would actually have a good case for lower/no mandatory fees at all.</p><p>One problem you need to keep in mind is that fraud mitigation is a big industry in an of itself (some of it is real, some complete snake oil but relies on the underlying problem being real to sell itself) and wouldn't be in favor of a system that is inherently immune to (at least some types of) fraud.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278213"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41278213" href="https://news.ycombinator.com/vote?id=41278213&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p><i>&gt; You could eliminate a lot of the fraud by moving off a mostly-static identifier to merchant, amount and time-limited tokens the user generates with their bank (or the merchant redirects them there). This would address a lot of the issues - the tokens are useless when leaked...</i></p><p>This almost sounds like a subtle recommendation for the Lightning Network. It's based on single-use invoices that are locked to a specific recipient and is usually limited to specific amounts.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277820"><td></td></tr>
                <tr id="41277889"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41277889" href="https://news.ycombinator.com/vote?id=41277889&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>The page is light on details, but is it scoped and merchant/amount/time limited? Because if not, it’s yet another “hack” that merely reduces one specific type of fraud (when a card number is leaked) without fully addressing the problem, so the need for chargeback arbitration (and thus associated costs) persists.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278394"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41278394" href="https://news.ycombinator.com/vote?id=41278394&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>In a word yes.</p><p>You'll still get a lot of chargebacks by the way. With a lot of ecomm I've been involved with the fraud you are talking about is actually a small part of chargeback volume. Most is unhappy or demanding customers, or another type of low level fraud, claiming goods didn't arrive despite a photo of the person literally accepting them from the delivery company. This is absolutely rampant in b2c with smaller merchants (I am aware you mentioned this but not sure if you are aware of the scale of it).</p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="41278103"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41278103" href="https://news.ycombinator.com/vote?id=41278103&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Can I understand this flow?</p><p>I want to buy a CD from Amazon for 19.99.
I click on my bank application (or maybe some QR code on Amazons site)
And that tells my bank app on my phone to authenticate my phone agains the bank
And ask for a 16 digit number that is solely for amazon, 19.99 and 20240812</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278417"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41278417" href="https://news.ycombinator.com/vote?id=41278417&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Think standard oAuth. Github has multiple flows that should cover most purposes here: <a href="https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/authorizing-oauth-apps" rel="nofollow">https://docs.github.com/en/apps/oauth-apps/building-oauth-ap...</a>. The key is that payment data is encoded in oAuth-like scopes, so all authorizations are scoped by amount and lifetime, and are implicitly merchant-specific.</p><p>Browser-based flow, where you're already logged into the bank in an existing browser tab:</p><p>* Amazon redirects you to oauth-proxy.visa.com where you select your bank (if you've done it already once, it remembers and redirects straight to your bank)</p><p>* Visa redirects you to your bank - if you're not logged in, you do a login - this is up to your bank on how to do that - authorize with an existing phone, WebAuthn, etc. On OSes supporting it, this URL can be hooked and handled directly by a native app which may use the device's secure element to store its auth credentials for the bank</p><p>* Bank displays you the payment request details (which include your Amazon account email, order ID, etc - all info you need to confirm it's indeed <i>your</i> payment request and not someone else's) and allows you to change them (maybe you want to authorize more or less, or make it one-time/recurring with a daily/weekly/monthly/yearly cap, or set an expiry after which the authorization is no longer valid)</p><p>* In the background, Amazon gets a success webhook from Visa (or their processor) saying that this authorization request has been granted, or they can poll an endpoint - this eliminates the need for a final redirect back to them like in normal oAuth</p><p>* If this is a recurring charge scenario, Amazon can store this payment request token against your account and use it multiple times, as long as the charges fall within the policy set during initial payment request establishment (if you set a max of $20, they can do as many transactions as they want up to a total of $20).</p><p>Device-based flow, where you aren't/don't want to login in to the bank the same browser:</p><p>* Amazon redirects to oauth.visa.com as above</p><p>* Instead of clicking on your bank directly, you say "authorize via phone", it just encodes the URL of the current page in a QR code so you can scan it on the phone - you then do the above flow there. Because the success/failure of a payment request is already communicated directly between the merchant and Visa, there is no need for your phone to pass any data back to the browser, so no need for a "reverse channel" to be set up.</p><p>* On your phone, you may have your banking app installed, so it takes over the domain name of your bank and automatically opens the payment request authorization there, using your existing session within the app.</p><p>Point is, not only is there no longer a concept of a card number that can be copied, stolen, or leaked, but the user also remains in control - they can control whether the payment is one-time or recurring, set limits on recurring payments, and be able to cancel these authorizations at any time, after which they're guaranteed that nobody can take more money without going through this auth process again. This eliminates many reasons for chargebacks, and reduces fraud risks for merchants too (merchants are no longer vulnerable since the auth to authorize a new payment request is between the user and their bank directly), so things like behavioral fraud detection or captchas on payment pages are no longer needed.</p><p>Downside (for scammers): business models based on a free trial that rely on the user forgetting to cancel, or those who intentionally make cancellation annoying or impossible wouldn't work, because payment requests should list upfront the max amount they can take, and the user can adjust that and make sure the unwanted charge just won't go through even if they tried.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41278077"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41278077" href="https://news.ycombinator.com/vote?id=41278077&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>I often make medium-to-large purchases using SEPA bank transfer. The merchant gives me a bank account number, a random or serialized reference code, and a week to make payment. I go to my bank, and send the money to the bank account, inputting the same reference code. Once it arrives (usually within the day or the next morning) the thing is paid. This works for most online purchases that are not urgent and support the payment type.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278380"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41278380" href="https://news.ycombinator.com/vote?id=41278380&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>The things that are still missing to make this perfect:</p><p>- SEPA instant transfers (exist, but cost extra)</p><p>- A consistent (across all banks) API to poll for received payments for the merchant</p><p>- A consistent API (e.g. an URL schema that browsers do support) to quickly fill in payment details with your bank's transfer form.</p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="41278510"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41278510" href="https://news.ycombinator.com/vote?id=41278510&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>One aspect that's very important is legal. It's very hard / cumbersome to comply in legal for payment processing in one country, having it to comply in most countries is a massive feat, and an expensive one at that. Though yeah if you already has a mass, pressuring regulation may be easier.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277526"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41277526" href="https://news.ycombinator.com/vote?id=41277526&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>PayPal: In Netherlands there is system called iDeal which provide online payments via tokens, without giving any of your data to seller (recipient). It is supported by all banks. It is super-convinient, you scan QR code by bank app on your smartphone if you pay on other device (laptop, computer) or link is opened by your bank app on mobile and you approve payment. You don't need to enter anything, only select your bank from the list. You don't need to pass your payment data to 3rd party like PayPal, there is no place to steal or phish your card or account data in this scheme.</p><p>Visa or MC could do the same, without additional parties. But no.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278241"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41278241" href="https://news.ycombinator.com/vote?id=41278241&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Just back from Poland- they have a great system 'BLIK' that sounds like iDeal...</p><p>Most merchants have a BLIK button... you click it, enter a 6 digit code created on your banking app. Purchase complete. Takes a few seconds. No card numbers, CCV etc..</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41278098"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41278098" href="https://news.ycombinator.com/vote?id=41278098&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>iDeal is working on international expansion, so it may become available in other European places.</p><p>The main downside of iDeal for consumers is that it's irreversible. If you pay and then never receive the product, you can't get your money back. While PayPal and credit cards do offer that extra protection to consumers.</p><p>So iDeal is really only good for the merchants due to the very low transaction costs.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277655"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277655" href="https://news.ycombinator.com/vote?id=41277655&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Same thing in Ukraine. And it's not because they face less fraud attempts, it's just their tech is years ahead of US.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278257"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41278257" href="https://news.ycombinator.com/vote?id=41278257&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p><i>Their tech is years ahead of US.</i></p><p>Can you elaborate?  (Am new to the topic, so your perspective would be appreciated).</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278488"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41278488" href="https://news.ycombinator.com/vote?id=41278488&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Hard to pick up one thing among multiple.</p><p>For example, transfers between accounts are instantaneous, not 2-5 days for ACH (Wire transfers are same-day, but expensive).</p><p>Electronic menus/payments in cafes are default for at least 3 years now (US has  toasttab.com but it's far from being default).</p><p>If you have a small business account, taxes are paid in one click (app shows you tax to be paid with Confirm button).</p><p>PS: These features are available in many other countries besides Ukraine, of course. Only in government id/functions Ukraine excels (#2 in the world, after Estonia only).</p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="41278076"><td></td></tr>
                  <tr id="41277591"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41277591" href="https://news.ycombinator.com/vote?id=41277591&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Stripe had a live dashboard over Black Friday that showed the dollar value of all transactions across their network, including those blocked for fraud. The fraud rate was nearly 12% of the total dollar amount of transactions.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276232"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41276232" href="https://news.ycombinator.com/vote?id=41276232&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>The challenger to these will solve for a different problem. Not every transaction needs complex fraud detection or being able for the customer do to chargebacks.</p><p>For a 3% discount, would customers agree to use something that worked just like cash, where the transfer was instant and couldn't be undone? Then you don't have to worry about fraud, chargebacks, etc.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277172"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277172" href="https://news.ycombinator.com/vote?id=41277172&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt;Not every transaction needs complex fraud detection or being able for the customer do to chargebacks.</p><p>Fraud is an industrial level enterprise. You absolutely need fraud detection if you're accepting payment that isn't cash.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277618"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277618" href="https://news.ycombinator.com/vote?id=41277618&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>You are missing the opposite side of the fraud picture: Where it's not the business scamming you, but someone taking your credentials and spending up to the limit in a store that deals with no chargebacks. This is, if anything, the larger size of the fraud losses for the Stripes of the world. Fake businesses that use the cards either for testing if the creds are good, or where the owners charge cards that they obtained from some other malicious actor.</p><p>So it's not that I get 3% off by not supporting chargebacks, but whether I want to have a dollar under a payment system that supports someone emptying me out without recourse.... and the answer is often no.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277733"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41277733" href="https://news.ycombinator.com/vote?id=41277733&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Or further abusing your weak password on a site and then racking up a ton of charges to a product that they're capable of laundering in some way into money for them at any ratio.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41277435"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277435" href="https://news.ycombinator.com/vote?id=41277435&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>There's an issue that you're not addressing: what happens when someone who isn't me spends my money? I think people would be happy for the theoretical 3% discount until their account is drained and sent to North Korea with no recourse.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276259"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41276259" href="https://news.ycombinator.com/vote?id=41276259&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>This is the purpose of Zelle, Venmo, money wires, and checks. But there are many problems they don’t solve, that customers and sellers prefer to be solved and are willing to pay for.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276332"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41276332" href="https://news.ycombinator.com/vote?id=41276332&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; For a 3% discount,</p><p>It is fantasy to think they'd get a 3% discount. The goods in stores that take only cash do not tend to be cheaper than those that do.</p><p>They know what people are willing to pay and will charge the price. If they see people are willing to pay $99 with a credit card, then they'll be willing to pay that with cash.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277168"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41277168" href="https://news.ycombinator.com/vote?id=41277168&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Handling cash has its own significant cost, it's not a direct comparison to a low-fee digital payment.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277376"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41277376" href="https://news.ycombinator.com/vote?id=41277376&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>I think the issue here is who is paying the fee and where is the fee surfaced. A free market solution would work here, but it requires some regulating to create the transparency required.</p><p>Everyone pays their own credit card fee as a line item on the receipt, merchants are required to print it on the receipt. If customers actually had to pay their own fee's on each swipe you'd see a lot less people reaching for the Platinum card and instead for the no frills local bank credit card. You'd also see immense downward market pressure on swipe fees as now card issuers have to compete against each other.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277988"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41277988" href="https://news.ycombinator.com/vote?id=41277988&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Technically the merchant is paying the fee, and he perhaps is passing some or all of it to you.</p><p>The reason merchants might not pass it all to you if that they get a lot more sales volume when they support credit cards, so they can still be more profitable while paying for some of those fees.</p><p>I know I'm going to get hated for saying this, but the businesses that charge extra for credit card use under $10 are trying to extract as much out of you - they're aiming to get the best of both worlds. The price of their goods are still such that they're assuming you'll pay with a card.</p><p>At the end of the day a business has several costs. Rent, cost of shipping, utilities, etc. When these go up so do the costs of goods. Credit card fees are no different in that regard. If they hated it that much they wouldn't support credit card payments. They do support it because then know it'll bring in more revenue than without - and will easily pay for itself and more.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41277968"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41277968" href="https://news.ycombinator.com/vote?id=41277968&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>In Poland, the default way for computer shops in 2000-2010s was to offer 2% discount when paying in cash. (The prices displayed were assuming cash, so if you paid by card, you'd pay more.)</p><p>I didn't see this anywhere else though. It probably made sense for computer shops because most transactions one would do there would be sporadic, big, and planned.</p><p>(Since then, the Mastercard/Visa fees went down to 0.2-0.3% due to EU rules, so probably those discounts are less popular now).</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278471"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41278471" href="https://news.ycombinator.com/vote?id=41278471&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; I didn't see this anywhere else though.</p><p>In the US offering different prices when paying by cash vs card was a violation of the agreement with Visa, as is putting a minimum price threshold for card usage.</p><p>It's still fairly widespread though, and occasionally makes the news. Might explain why you didn't see it often.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41276726"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41276726" href="https://news.ycombinator.com/vote?id=41276726&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; The goods in stores that take only cash do not tend to be cheaper than those that do.</p><p>In NYC they most definitely do. A lot of the corner stores will change you less with cash. I'm not sure it is a the card payment or that they are keeping the sale off the books, but something that might cost me $18.50, I'll pay $18 for.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278024"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41278024" href="https://news.ycombinator.com/vote?id=41278024&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>When I wrote that comment I knew someone would come out and use New York City as a counterexample.</p><p>The reality is except for a few of the really major cities those types of stores are usually more expensive than their larger counterparts in virtually all other cities in the US.</p><p>In my city I'm not going to get cheaper groceries by going to the smaller stores. They are more expensive regardless of whether they support credit cards or not. They may be superior and certain other aspects but price is not one of them.</p><p>My guess is the opposite may be true only in places where owning a car is expensive or inconvenient.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277170"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41277170" href="https://news.ycombinator.com/vote?id=41277170&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Yes, cheaper in the same store, but not usually compared to other stores that don’t have cash discounts.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="41277627"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277627" href="https://news.ycombinator.com/vote?id=41277627&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; <i>Not every transaction needs complex fraud detection or being able for the customer do to chargebacks.</i></p><p>Well, not until you get hacked.</p><p>We might be happy with instant, no-undo transactions until our device gets hacked and our bank account with many thousands of dollars gets drained, through no fault of our own.</p><p>Then suddenly, complex fraud detection and transaction reversals seems like an awfully good idea.</p><p>Because the issue here isn't about chargebacks where you genuinely made the transaction but the business failed to deliver, and maybe you lose a couple hundred dollars. The issue here is about when you never authorized transactions at all, and you lose all your savings.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277703"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277703" href="https://news.ycombinator.com/vote?id=41277703&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Lol</p><p>If you have an unprotected vector fraudsters will find and exploit it. They're literally paid to do so.</p><p>I've seen fraudsters that are ridiculously persistent to make $2,000 in a year. But they just keep poking at it at a certain point you're able to ramp that up to $80,000 in a month I know they're good it was completely worth it to him for several years.</p><p>How I've seen people spend hundreds of hours to generate a few hundred dollars worth of in-game currency or on-site reward points.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276448"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41276448" href="https://news.ycombinator.com/vote?id=41276448&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>I would use my debit card even if it behaved exactly like cash, ie, when the recipient got the money, my only way of getting it back is to sue them or call the police.</p><p>Obviously any electronic payment system needs to be secure internally but society lasted a long time and made fine progress when having your wallet stolen meant losing your money.</p><p>It would be fine to require a person to charge their debit card with a finite amount rather than have it be funded up to the limit of the supporting account and that would solve the last problem compared to cash.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276754"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41276754" href="https://news.ycombinator.com/vote?id=41276754&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>I understand that Europe is more secure with chip+pin, but in the US, debit cards do exactly what you describe. If fraud happens, you are out money until it is resolved.</p><p>The key difference from cash, in the US, is the ability to abuse cards at a later date without the physical card. For someone to steal your wallet, they have to be colocated with you and can only steal as much as you're walking around with.</p><p>As long as debit cards have a magnetic stripe and have their full number printed on them, and that information is useful, this problem remains.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277296"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41277296" href="https://news.ycombinator.com/vote?id=41277296&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; As long as debit cards have a magnetic stripe and have their full number printed on them, and that information is useful, this problem remains.</p><p>Which the EEA/UK has also (partially) solved by enforcing Strong Customer Authentication (SCA) that mandates that (most) transactions require MFA.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277434"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_41277434" href="https://news.ycombinator.com/vote?id=41277434&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>I don’t believe SCA is enforced by the bank. It’s voluntary by the merchant. It acts as a liability shift but won’t save you from someone not caring about it and emptying your account (temporarily until the chargeback goes though). I don’t think any bank offers an option of “allow SCA-only transactions” and I don’t think it would be even possible (I’m not sure there is any token/session identifier to tie the SCA request and the actual subsequent transaction even).</p><p>When adding a card to a taxi app for example I get SCA prompt for a zero amount, but then they can charge me for any amount without subsequent SCA flows.</p><p>Presumably those subsequent transactions wouldn’t have a liability shift to the issuer but it still means that they can at least temporarily steal all your money until your chargeback claim goes through.</p><p>The whole concept of “card number” is rotten. What’s needed is an oAuth2-type system where every payment needs to redirect to the bank (actual redirect, no stupid hacky iframe like SCA/3DSecure is) and where you can see the merchant and set the max amount (and whether one-off or recurring) and the bank records that and keeps a list of authorized merchants so you can revoke them at any time. The merchant then <i>must</i> use this token to pull money, and can't pull more than what the token allows - just like your usual oAuth2 scopes.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277469"><td><table>  <tbody><tr>    <td indent="6"><img src="https://news.ycombinator.com/s.gif" height="1" width="240"></td><td>
      <center><a id="up_41277469" href="https://news.ycombinator.com/vote?id=41277469&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>This is not right at all (it's mandatory fo all banks and merchants in the EEA), although you're correct that SCA still has loopholes (like a US merchant... just trying, although a bank could just mandate 3DS to solve that).</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277481"><td><table>  <tbody><tr>    <td indent="7"><img src="https://news.ycombinator.com/s.gif" height="1" width="280"></td><td>
      <center><a id="up_41277481" href="https://news.ycombinator.com/vote?id=41277481&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>How do you explain the example I gave where the taxi app only has to SCA me once and not upon every transaction? This is in the EU.</p><p>What I suspect is that the "mandatory" bit is by law (and the law has flexibility, which covers this taxi app scenario) but there is no technical solution to make it mandatory, thus a non-compliant merchant can still drain your account until your chargeback claim goes through.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277528"><td><table>  <tbody><tr>    <td indent="8"><img src="https://news.ycombinator.com/s.gif" height="1" width="320"></td><td>
      <center><a id="up_41277528" href="https://news.ycombinator.com/vote?id=41277528&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>You're right that it's not fully enforced technically. It's complicated, and I don't think that's really solvable by technology (being that this scenario is roughly equivalent to direct debiting). Banks can validate if a particular merchant has already been used by a customer and blocking them from debiting your account, but since that SCA has exceptions for recurring debiting, this is not really enforcable once the customer has authorized the merchant for any debiting.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                              <tr id="41277362"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_41277362" href="https://news.ycombinator.com/vote?id=41277362&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Yeah, Europe is ahead on this; I hedged my earlier statements heavily.</p><p>It's not a difficult technological problem to solve. A card's chip should be able to guarantee that the card is physically present for any transaction.</p><p>Obviously online payments would pose a problem, people would need to either own USB card chip readers or banks would need to do something new and special.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277514"><td><table>  <tbody><tr>    <td indent="6"><img src="https://news.ycombinator.com/s.gif" height="1" width="240"></td><td>
      <center><a id="up_41277514" href="https://news.ycombinator.com/vote?id=41277514&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>In Germany (/ the EU?) we have electronic ID cards that can be used for a few online services.</p><p>The physical card can communicate via NFC, and there's a smartphone app you can use with it.
For PCs, you can buy some fancy NFC interface if you want, but you can also have your phone act as a reader, the PC connects to it over the local network.</p><p>Maybe something similiar could work for banking cards. They all have NFC anyways.</p><p>On the other hand, you might as well just have an app that is registered with the bank on your computer/phone (like how it works for smartphone NFC payments) and skip the card.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277516"><td><table>  <tbody><tr>    <td indent="6"><img src="https://news.ycombinator.com/s.gif" height="1" width="240"></td><td>
      <center><a id="up_41277516" href="https://news.ycombinator.com/vote?id=41277516&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Online payments are done using pretty much the same system. Instead of the chip, you get either a 2nd authentication mechanism, or start out with a strong token (be it the strength of the token itself, or the stability of it).</p><p>An older example was getting transaction authorisation numbers. You would either get a long indexed list on paper, or you could receive then over the phone (voice or text). This was then mostly replaced (about 10 years ago) with hardware (H/T)OTP type tokens that required your card to be inserted in the token and PIN authenticated. Later on that too was replaced by a cardless version, and that one then was replaced (for consumers) with mobile apps.</p><p>The combination of minimum software versions, online authentication, transaction limits, daily limits, and time-locked temporary limit increases (so you can buy a car with your phone, but you have to up the limit a couple of hours ahead of time for it to take effect) make it pretty safe with acceptable risk for the bank. And then there's of course the standard fraud detection and prevention departments, so if you do something unusual that also involves a lot of money, you're likely going to get a call.</p><p>For business use, there are other systems, generally two types like EU-wide smartcards or bank-specific smartcards that can be used to authenticate and authorise. You'd use an USB or NFC connected method for that. Sometimes that involves entering a PIN on the device itself before the computer can talk to it, but that does make the OTP exchange very fast. You'd still have limits or multiparty authorisation setup in your organisation so you don't end up with one person just moving a couple of 100K around on their own.</p><p>And then there's some overlapping systems, apparently this one is going EU-wide: h<a href="https://en.wikipedia.org/wiki/EIDAS" rel="nofollow">https://en.wikipedia.org/wiki/EIDAS</a> and apparently some implementations include useful things: <a href="https://www.idin.nl/en/businesses/" rel="nofollow">https://www.idin.nl/en/businesses/</a> like age confirmation where the business doesn't need to know who, what or where you are just if you're of age (and not even a specific age). Granted, nothing is perfect, but it's a whole lot better than finding some S3 bucket somewhere with JPEGs of ID cards. As long as they don't do dumb stuff like trying to MITM TLS, it's progress. The overlap is in the concept where you can use some electronic means to prove who you are to get something done.</p></div></td></tr>
        </tbody></table></td></tr>
                                    <tr id="41277479"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277479" href="https://news.ycombinator.com/vote?id=41277479&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>You just described debit cards.</p><p>And there fees are 1/10 of that of credit cards, as a result of giving up these benefits.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277845"><td></td></tr>
                  <tr id="41277657"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277657" href="https://news.ycombinator.com/vote?id=41277657&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>This has been done with Zelle and people are crying because they're dumb enough to fall victim to obvious scams.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277267"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277267" href="https://news.ycombinator.com/vote?id=41277267&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>EU caps interchange fees at 0.3%, which is probably still too much. The 3% is mostly to finance the various gimmick programs that make naive people think they are "gaming the system" with their 20th card in wallet (and because they can, of course).</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41276019"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41276019" href="https://news.ycombinator.com/vote?id=41276019&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; Fraud and Risk come in many forms, and these providers, even with their UX innovations, sit on top of those same rails to reduce fraud. Without those rails, buyers can’t trust sellers and sellers can’t trust buyers.
 In my opinion, you need to find a way to solve that problem before you can eliminate the fees being captured by these providers.</p><p>And failing the elimination of those issues there will always be some fees. New vendors can pop in and push the fee structure down if they can run a more efficient operation.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277910"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41277910" href="https://news.ycombinator.com/vote?id=41277910&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Most countries that aren't the US basically did this, in one way or another.</p><p>There are multiple ways of doing so, two-factor authentication (think 3d secure) is one, an oAuth like system where you log in to your bank on their website and consent to a wire transfer is another. There are variations on these ideas, the system we have here gives you a 6-digit code in your banking app which you can enter on any device, trusted or not, and then accept the transfer via a pop-up on your phone, no personal data involved.</p><p>As far as I understand, both US law and US history heavily incentivize the use of credit cards. There's no nice way for landlords, banks, mortgage lenders and other such institutions in the US to do "background checks" on their customers except through credit scores, and that incentivizes credit card use. There's also a regulatory difference in how credit versus debit card chargebacks are handled, making credit a lot more friendly to consumers in cases of actual fraud.</p><p>Then there's the historical aspect, in the era where there were no computers, and most vendors could at best call a bank to verify if a card was valid, a debit based system wasn't technically feasible, which is what put the US on the path of credit. A lot of poorer countries had the major cash-to-cards transition a lot later, in the era of chips and dial-up modems, which made debit a lot easier to implement, and so that's what they went with, and debit usually means far lower fees.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277991"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277991" href="https://news.ycombinator.com/vote?id=41277991&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; Most countries that aren't the US basically did this, in one way or another.</p><p>Most countries that ARE the US put the burden on the business and the credit card companies, and limit the liability to the credit card holder ($50 max, sometimes $500)</p><p>I've known people in other countries that lost money and they were SOL in comparison.  Maybe they have cheaper transaction fees.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278274"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41278274" href="https://news.ycombinator.com/vote?id=41278274&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Nah, that's just because in the US people usually buy with credit while in Europe is mostly debt.</p><p>If you buy with credit you are using the bank's money, with debt your own and you have less protections in the second case.</p><p>Trust me, i have meet my fair share of adults who don't own a credit card and if they want to buy something online just charge a prepaid card with the needed amount.</p><p>American express is not accepted in a lot of places because it is only credit and the processing fees are double that of debit cards.</p><p>Visa and mastercard debit cards are accepted just because you can't only accept debit cards, a lot of vendors fought for the ability to do so.</p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="41278221"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41278221" href="https://news.ycombinator.com/vote?id=41278221&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>I use PayPal for my tiny business. On the one hand, I'd rather not pay them 3% of my sales. On the other hand, if the features of PP (security, buyer protection, ease of use) increase my sales by a palpable amount, then it pays for itself.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277997"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41277997" href="https://news.ycombinator.com/vote?id=41277997&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>These systems act as sort of a fraud insurance. I think in an ideal world we would have low friction low cost money transfers, but people could purchase insurance against fraud. There are complications to this, such as how to be both efficient and avoid abuse, but it would simplify every day life not having to think about a million different payment systems.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41278465"><td></td></tr>
            <tr id="41276278"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41276278" href="https://news.ycombinator.com/vote?id=41276278&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>And the value prop isn’t just the payments. Once you add things like inventory management, front/back of the house integration, taxes and a bunch of other things, you’re simplifying a lot of things for the business at a lower cost than having them pay for every one of those things.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277171"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41277171" href="https://news.ycombinator.com/vote?id=41277171&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>No.</p><p>With 99% of my transactions I don’t care one bit about the ability to do chargebacks.</p><p>I just went grocery shopping. VISA was involved and took a few percent. Why??</p><p>I got my groceries. I’m not going to do a chargeback because the salad was bad.</p><p>Earlier, I bought something on Amazon. Again, VISA took a share. Why? In 15 years of shipping with Amazon they have always hinteres my returns.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277211"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277211" href="https://news.ycombinator.com/vote?id=41277211&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>You leave your credit card on the table at a coffee shop. A thief takes it and goes to the grocery store. You’re going to do a chargeback.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277249"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41277249" href="https://news.ycombinator.com/vote?id=41277249&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Funny aside. Anytime my CC has been stolen the thieves always go grocery shopping first, I assume for alcohol.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278040"><td></td></tr>
                  <tr id="41277316"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41277316" href="https://news.ycombinator.com/vote?id=41277316&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Yea I’m not proposing to replace low security credit cards with low security debit card this is a silly strawman.</p><p>EDIT: I see the general problem of origination fraud. But that can be mitigated by imposing limits and requiring extra levels of authentication for bigger payments.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277677"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41277677" href="https://news.ycombinator.com/vote?id=41277677&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; <i>EDIT: I see the general problem of origination fraud. But that can be mitigated by imposing limits and requiring extra levels of authentication for bigger payments.</i></p><p>Which are exactly the kinds of things credit cards do, but it can't be perfect so they still suffer losses, so they still have to charge a percentage.</p><p>(Of course a lot of the percentage can go to rewards programs, so we're talking about the percentage once those are accounted for.)</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278503"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_41278503" href="https://news.ycombinator.com/vote?id=41278503&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>In the US you can take money from a credit card by just using the that’s plainly written on it.  That’s not what I would call making an effort at origination fraud prevention.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41277635"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41277635" href="https://news.ycombinator.com/vote?id=41277635&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>And that becomes industrial, as someone takes 50 thousand cards, and then steals $20 from each. Then the next store takes another $20...</p><p>Fraud is already a big business, with the current security levels. With worse security? Fraud goes up some more.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278520"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_41278520" href="https://news.ycombinator.com/vote?id=41278520&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Why are you thinking cards?</p><p>A modern payment system would require at least touch/Face ID on every transaction.</p><p>Higher amounts would require 2FA, pre-authorization, delays, cool-downs etc.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41277432"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41277432" href="https://news.ycombinator.com/vote?id=41277432&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>You said you don't want the ability to do chargebacks, but chargebacks solve two different problems: 1) origination fraud (i.e. someone not you originates a transaction from your account) and 2) merchant fraud (i.e. goods not as described/unsatisfactory/undelivered).</p><p>It's fine if you say, yeah I can do without #2, but realistically you cannot do without #1 in any digital payment scheme that will have wide acceptance so a chargeback mechanism is required.</p><p>The only settlement methods we have that do without both protections are cash, cashiers checks, and wires. Setting aside cash the other two are a pain in the ass to originate exactly because they are non reversible.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277498"><td></td></tr>
                <tr id="41278033"><td></td></tr>
                              <tr id="41277264"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41277264" href="https://news.ycombinator.com/vote?id=41277264&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Nobody uses physical cards anymore... even my kids pay with their toy watch when playing restaurant</p><p>Edit: Tap pay is ubiquitous in the EU</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277295"><td></td></tr>
                <tr id="41278202"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_41278202" href="https://news.ycombinator.com/vote?id=41278202&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Is that in the US? Europe hasn't used the magnetic strip on cards for years. It's all chip based and those payment terminals all take NFC / Apple Pay.</p><p>It would be suicide for a shop not to take it, I know many people that don't carry their bank card at all. Only their phone for Apple pay.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277384"><td></td></tr>
                <tr id="41277453"><td><table>  <tbody><tr>    <td indent="6"><img src="https://news.ycombinator.com/s.gif" height="1" width="240"></td><td>
      <center><a id="up_41277453" href="https://news.ycombinator.com/vote?id=41277453&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>This is something I find so fascinating about the American financial system... Home Depot in Canada has taken tap payments and Apple Pay for a long time now.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277688"><td><table>  <tbody><tr>    <td indent="7"><img src="https://news.ycombinator.com/s.gif" height="1" width="280"></td><td>
      <center><a id="up_41277688" href="https://news.ycombinator.com/vote?id=41277688&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Yeah Home Depot is a bizarre exception, AFAIK they signed a contract with PayPal at some point long ago that prevents them from accepting tap-to-pay. Their checkouts have all the hardware for tap-to-pay, but contractually they can't turn it on.</p><p>Hopefully that contract ends soon, because wow did they shoot themselves in the foot on that one.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41277462"><td></td></tr>
                <tr id="41277597"><td></td></tr>
                                          <tr id="41277663"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277663" href="https://news.ycombinator.com/vote?id=41277663&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Because you don't want someone that steals your credentials to spend large amounts of money in things they ship to themselves, instead of to you!</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277261"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277261" href="https://news.ycombinator.com/vote?id=41277261&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; I just went grocery shopping. VISA was involved and took a few percent. Why??</p><p>Because you paid with a VISA card instead of paying by cash. Hint: it says Visa on the card.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277325"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41277325" href="https://news.ycombinator.com/vote?id=41277325&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Why are you intentionally missing my point?</p><p>Are you saying we should somehow all go back to cash and also use cash online?</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277397"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41277397" href="https://news.ycombinator.com/vote?id=41277397&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>What he's saying is that you (konschubert) involved VISA in the transaction. And since VISA is a paid service, you were charged.</p><p>As for why you involved them, that is the actual issue at hand, because it's a choice, not something that was forced upon you. But the choice isn't the first one that comes to mind; the choice was between protecting consumers or protecting corporations. And in the US, corporations are better protected than consumers. To level that protection, you (a consumer) have to involve someone else (a corporation) to gain any practical protection.</p><p>If that method of protection wasn't needed, you'd be paying using a cheaper (or free) method where you'd be protected differently (i.e. not based on the money going from A to B, but based on the fact that you are a consumer and should thus be protected).</p><p>You could also go back to the first choice that might come to mind: protection. If you are not in a society that protects consumers directly, but you also don't want to pay a corporate provider for that protection, you could opt to forgo that protection.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277423"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_41277423" href="https://news.ycombinator.com/vote?id=41277423&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>And what I (konschubert) am saying is: I would like to have more choices, as a customer and especially as a merchant, so I don’t have to pay visa 3% next time.</p><p>And I think this means there is opportunity for disruption.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277449"><td><table>  <tbody><tr>    <td indent="6"><img src="https://news.ycombinator.com/s.gif" height="1" width="240"></td><td>
      <center><a id="up_41277449" href="https://news.ycombinator.com/vote?id=41277449&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Creating those choices requires societal adjustment. It is not something that can be manufactured by a market, and as such is the purpose of government. Many examples of this exist in production all over the world, with high degrees of success.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                                                <tr id="41278101"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41278101" href="https://news.ycombinator.com/vote?id=41278101&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Just imagine how different the Internet would look like today if receiving payments would’ve been as easy as receiving email from the beginning.</p><p>That it is not trivial for a single person on the Internet to receive payments without a third-party involved, in my mind, leads directly to an Internet that is based on ads and on monopolies:</p><p>You can’t make a living posting stuff online on your own private website. Because since you cannot receive money, any value that you add online can never be translated into value offline. So you need to post on someone else’s site, which then acts as a publisher, and has the economies of scale necessary to make taking payments viable. Or otherwise, you need to monetize your content by placing ads, again, using some middleman, who is big enough to be able to afford access to payments.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278344"><td></td></tr>
                <tr id="41278419"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41278419" href="https://news.ycombinator.com/vote?id=41278419&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>There's a reason Facebook is printing money and X is not making any (and essentially never has). It's actually not the user generated content that primarily matters for ad revenue. Time spent on the site is necessary but not sufficient</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41278370"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41278370" href="https://news.ycombinator.com/vote?id=41278370&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>it's not just not trivial, it's quite cumbersome. but micropayments exist. assume I made some content and users wanted to give me 10 cents for it. if they didn't want to pay the 30 cent visa tax, they'd have to: create a Coinbase account, fund it, buy some crypto, install a wallet, move the crypto to the wallet, and connect the wallet to my website, before finally sending 10 cents my way. even if we handwave that the server side exists, how many users are going to bounce off of that?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41276194"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41276194" href="https://news.ycombinator.com/vote?id=41276194&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>This is why I was excited about Libra (later renamed to Diem.) which was Meta's feeless digital currency that was scrapped. It could have been a Western WeChat Pay, which charges no fees up to 200 RMB ~= 20 GBP.</p><p>I don't see why they should get to shave a slice off of every transaction. It takes relatively little upkeep and they rake in huge profits.</p><p>The fees nudge businesses to use cash (well, to avoid tax too, sometimes.) or set a minimum transaction amount, which can mean fewer customers through the door.</p><p>I think a new, public infrastructure competitor could be healthy for economies worldwide.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277185"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41277185" href="https://news.ycombinator.com/vote?id=41277185&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Cash has a processing cost to business as well, sometimes more than card processing fees.</p><p>Not only do you have to pay to deposit, you have to store it, count it, secure it and transport it.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277705"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277705" href="https://news.ycombinator.com/vote?id=41277705&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>You also have to “buy” change. Banks don’t give bulk change that a cash business needs for free. You have to purchase standard denominations to give as change</p>
              </div></td></tr>
        </tbody></table></td></tr>
                        <tr id="41277220"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41277220" href="https://news.ycombinator.com/vote?id=41277220&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>It’s the ultimate two sided marketplace and super hard to bootstrap.</p><p>But if you find a way to debit peoples bank account with 0 fees and 0 default risk and &lt;5s  latency, I believe you could potentially establish a reasonable super-low-fee payment provider and have a clear value proposition for merchants.</p><p>The problem is: Getting merchants and customers on board.</p><p>I’m personally super interested in this topic. If anyone what’s to chat about this: mail@konstantinschubert.com</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278119"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41278119" href="https://news.ycombinator.com/vote?id=41278119&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Some things to keep in mind from the merchant perspective. A merchant will care about cost per transaction, cost of fraud/chargebacks, acceptance by customers, and integration into their backend systems. Once you have these solved, merchants will flock to you.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278490"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41278490" href="https://news.ycombinator.com/vote?id=41278490&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>I’m a merchant myself, I sell e-paper calendars. Last year I paid about 4% in my revenue for transaction costs in various shapes. Some of these are hidden as very bad, but non-optional, currency conversions.</p><p>The hard one here is acceptance by customers. No merchant wants to clutter their checkout page with a button that nobody understands. 
Or worse, have customers get trapped in a dead-end payment process.</p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="41275914"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41275914" href="https://news.ycombinator.com/vote?id=41275914&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Not at all. There are other solutions around the world that bypass the payment gateways and credit card acquirers. In Holland they have iDEAL, in Thailand they have QR Codes, in Australia they have BPAY and in China they have WeChat Pay. There are tons more around the world. As a merchant, it can be very expensive integrating directly with all the different options, which is where these companies help - for a fee.
 If you want to maximise sales and minimise abandoned baskets, you’d better make it easy for your customers to pay using the method they prefer!</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41275986"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41275986" href="https://news.ycombinator.com/vote?id=41275986&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Do those services also deal with fraud, chargebacks, etc., or are they basically digital cash equivalents?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276217"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41276217" href="https://news.ycombinator.com/vote?id=41276217&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>I thought chargebacks were generally considered a pain: for merchants because it's used by abusive customers, and by customers because it means the merchant (or rather, their payment provider) needs to play a guessing game about whether you're going to do a chargeback and may baselessly deny you the purchase, as well as increasing the cost for everyone due to this increased risk the merchant has</p><p>Or maybe it's just me but I greatly prefer the non-algorithmic non-pay-on-credit mechanism where I simply pay for my purchase and the other party has no reason not to take my money (and the bank no reason not to issue the payment method to everyone: as an EU foreigner in Germany without pre-existing German credit score, getting a card at all was a pain, no matter if I could guarantee it with some insane deposit amount... I have the money, they just didn't want to issue a number to pay with because of algorithm magic). Now that I got that card number by co-guaranteeing with a German, purchases often fail like when I use mobile data which is from a Dutch phone number and so it looks foreign and I guess smells like non-standard situation → must be fraud, let's deny the purchase</p><p>Digital replacements for cash, like the aforementioned iDeal system, just always works and is available to everyone with a bank account in the Netherlands (iirc they're looking to start using it EU-wide because the costs are so low). No need to pre-pay either (like with paypal credit) because it just draws from your regular account. Another advantage is that it is owned by the banks collectively so you're not giving a ton of information to a third party, like most German-native payment options requiring to verify a phone number before you're allowed to pay the merchant for absolutely no reason other than tracking</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276479"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41276479" href="https://news.ycombinator.com/vote?id=41276479&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>It's probably just a cultural difference between (broadly) the US, Europe, and Asia. In the US it's increasingly uncommon to buy things with cash or cash-equivalents (Venmo, Zelle, etc.), especially high-value items.</p><p>Basically we have very few consumer protection laws compared to the EU, and it's very much a "buyer beware" culture here. If you get screwed by a merchant, most of the time it's just too bad for you, unless the merchant has a good return policy (most big box stores do, most small places don't). We don't have the regulatory protections that EU has.</p><p>So credit cards have sprung up to offer not just buy on borrowed money, but also purchase protections that live outside the legal/regulatory frameworks. When you buy something with a credit card, you get charged interest by the bank and the merchant also pays a fee. Some tiny part of those fees get pooled into these protection (and other) services that the card offers its members.</p><p>For example, depending on your credit card, some will automatically extend the warranty of things you buy by another year or two. Or price protection is that if the thing you buy goes on sale within 30 days and you find it for a cheaper price, the credit card provider (not the merchant) will issue you a partial refund. The chargeback system is often used for disputing issues (maybe you bought something from an overseas vendor who never delivered and never bothered to answer your emails, or maybe they lied about their return, or maybe provided some terrible product). You file a claim with the credit card company, not the government or the merchant, and the card issuer will mediate on your behalf. If the amount is low enough, they'll often just refund you without a full investigation (it's not worth their time). But it also serves as a sort of review &amp; punishment system for merchants... those who get too high a volume of chargebacks will incur higher fees or be blocked altogether by the credit card issuers, meaning merchants are incentivized to fix customer issues.</p><p>Merchants not accepting credit cards here do exist, but they're relatively rare, because so much of the population uses credit cards instead of anything else. Even debit cards (that draw from your bank balance and typically have fewer protections) still have a partnership with Visa or Mastercard to allow you to pay as though it were one of their credit cards (just with a preset balance).</p><p>Of course all of this means it sucks for the merchants, but it's way better for the buyers than paying with cash (which leaves you almost always without recourse if anything happens). Our government is so captured and so weak that basically no state or federal agency will be able to help you in most consumer issues. We do have something called the "BBB" (Better Business Bureau), but it's not a government agency, just a fake third party middleman who pretends to do that function (but doesn't actually do anything)... it's basically just an old-fashioned Yelp.</p><p>So as a buyer, if you want any protections at all, it's a credit card or nothing.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277527"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41277527" href="https://news.ycombinator.com/vote?id=41277527&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Thanks for providing the context</p><p>&gt; paying with cash (which leaves you almost always without recourse if anything happens)</p><p>One remark about this though: you always have recourse in court. We often hear the USA is incredibly litigious, but it's not like we'd not (threaten to) bring action against a merchant not acting honestly</p><p>The main situation where I see chargebacks being useful is when you fell for a scam and the perpetrator cannot be located for enforcement. Which is a legitimate concern for sure, but there's more ways of dealing with that than giving everyone the option to chargeback anything on a whim with no repercussions for them</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277743"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_41277743" href="https://news.ycombinator.com/vote?id=41277743&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; One remark about this though: you always have recourse in court. We often hear the USA is incredibly litigious, but it's not like we'd not (threaten to) bring action against a merchant not acting honestly</p><p>It is, however, like we (in the US) wouldn't bring action in court. Ordinary consumers don't want to have to go to court to resolve a dispute with a merchant. Unless you have a substantial amount riding on the outcome, you're just going to lose, even if you win. It costs time and money to go to court. While you may legally have recourse with litigation, in practice, it doesn't usually work that way.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277732"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_41277732" href="https://news.ycombinator.com/vote?id=41277732&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Problem is that court action, even small-claims-court where lawyers don't need to be present (and may specifically be disallowed) is still significantly more effort than disputing a bank transaction.</p><p>Courts <i>could</i> be a useful substitute if the actual penalties were high enough that no merchant would dare even try a scam (then it doesn't matter if legal action is hard work, because the mere deterrent effect means you will never actually have to do it), but that's not the case.</p></div></td></tr>
        </tbody></table></td></tr>
                              <tr id="41276220"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41276220" href="https://news.ycombinator.com/vote?id=41276220&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>The brazilian PIX is a digital cash transfer from bank account to account built by our central bank. It doesn't handle fraud and chargebacks which must be done by the seller or third parties.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277696"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41277696" href="https://news.ycombinator.com/vote?id=41277696&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>If the systems are local to a specific country, they could reasonably skip the idea of chargebacks and just rely on the legal system to resolve any disputes?</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276062"><td></td></tr>
            <tr id="41276181"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41276181" href="https://news.ycombinator.com/vote?id=41276181&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>iDEAL in the Netherlands is an instant credit from your account directly into the receivers.  The KYC part has already been handled by your bank.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276199"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41276199" href="https://news.ycombinator.com/vote?id=41276199&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>So basically, if you use that to buy something, you have no post-purchase protections from the payment provider itself (chargebacks, extended warranties, price protections, etc.?) like the kind credit cards will often provide?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276386"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41276386" href="https://news.ycombinator.com/vote?id=41276386&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Reducing charge-backs in another reason Chip &amp; PIN was promoted by the banks.</p><p>With a signature the merchant is responsible for fraud.  They are supposed to check the buyers signature against the one written on the back of the credit/debit card or cheque book. If the signatures don't match the merchant should decline the sale.</p><p>With Chip &amp; PIN - a code only the card owner should know - the responsibility has been shifted away from the seller over to the buyer. The banks always say "NEVER share your PIN code with anybody. It's for you only"</p><p>Claiming a charge-back is much harder if YOU are the one who authorised the transaction by entering a code only YOU should know.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276297"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41276297" href="https://news.ycombinator.com/vote?id=41276297&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Blik in Poland is another example. Every single domestic bank supports it. Marketplaces like OLX (Polish ebay) will sometimes offer a moneyback guarantee for a small percentage of the transaction amount. You can use the same system to pay at the grocery store or the local doner kebab place. We’ve been using cash for far longer than credit cards.</p><p>And in the EU if you’re buying new physical goods online the merchant is required to give you a week or two to return it for free.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276774"><td></td></tr>
                  <tr id="41276361"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41276361" href="https://news.ycombinator.com/vote?id=41276361&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>I never needed any of these things in the EEA</p><p>When I wasn't happy with a product, I either used the warranty or (mandatory) 14-day return option depending on the reason why the product wasn't conforming expectations</p><p>Perhaps warranty extras are more relevant outside of the EU where warranty laws may be less strict? How even does a payment system do warranty, it knows nothing of the product?</p><p>And what is price protection, it sounds like merchants would draw more from the account than you authorised? How would that even work? With iDeal at least, you approve a certain amount for a certain merchant (displayed on a second-factor device so it's not impacted by phishing) and they cannot later charge you more</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276405"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_41276405" href="https://news.ycombinator.com/vote?id=41276405&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; where warranty laws may be less strict?</p><p>These protections don’t really exist in the US. The only thing American consumers can really use as leverage to get a return is the threat of a charge back. Even a small amount of chargebacks (merchants call it friendly fraud) can land you in serious trouble with Visa or MasterCard. If you lose the ability to process cards, your business is basically poof — gone.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276498"><td><table>  <tbody><tr>    <td indent="5"><img src="https://news.ycombinator.com/s.gif" height="1" width="200"></td><td>
      <center><a id="up_41276498" href="https://news.ycombinator.com/vote?id=41276498&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>I have a longer reply in a sibling post (<a href="https://news.ycombinator.com/item?id=41276479">https://news.ycombinator.com/item?id=41276479</a>), but basically, yeah... in the US we have very few consumer protections, so credit cards offer some of that in lieu of a functional government.</p><p>They also have much better protections against fraud (if someone steals your credit card and buys something with it, you're not liable... the bank will pay you back).</p><p>If you get scammed with a cash-equivalent (like our Zelle or Cash App or Venmo), too bad, there's no way to get your money back. I know people who've lost thousands of dollars that way, and nobody will protect you from that.</p><p>Credit cards here obviously charge high interests (and charge the merchants too) but they offer a lot of protections you otherwise wouldn't get.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276603"><td><table>  <tbody><tr>    <td indent="6"><img src="https://news.ycombinator.com/s.gif" height="1" width="240"></td><td>
      <center><a id="up_41276603" href="https://news.ycombinator.com/vote?id=41276603&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Getting scammed is a problem but it's not super common and the banks have a policy of refunding the money. Society bears the cost that way, and has the incentive to prevent and educate, rather than that it ruins some individual's life</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277914"><td><table>  <tbody><tr>    <td indent="7"><img src="https://news.ycombinator.com/s.gif" height="1" width="280"></td><td>
      <center><a id="up_41277914" href="https://news.ycombinator.com/vote?id=41277914&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>The banks where you live, you mean? Here they won't care, once you send it, it's gone forever even if it was a scam.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                              <tr id="41276331"><td></td></tr>
                      <tr id="41276272"><td><table>  <tbody><tr>    <td indent="4"><img src="https://news.ycombinator.com/s.gif" height="1" width="160"></td><td>
      <center><a id="up_41276272" href="https://news.ycombinator.com/vote?id=41276272&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>In a very limited form only. The fees are very low though. You still have all of your legal rights etc so as long as the retailer / manufacturer stays in business you get the warranty etc (EU law gives a warranty on "expected lifetime" but many try to limit that to 2 years - you have to sue to get more).</p>
              </div></td></tr>
        </tbody></table></td></tr>
                                    <tr id="41277615"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41277615" href="https://news.ycombinator.com/vote?id=41277615&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Unless you've worked for a payment processing company, or for a major retailer that does a lot of payment processing, you have no idea how much fraud or attempted fraud happens in transactions (you can even see it as a small retailer if you are getting sales online and say you'll ship international).</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278200"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41278200" href="https://news.ycombinator.com/vote?id=41278200&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>A credit card number is a symmetric secret that's printed on the outside of something that you hand to strangers all day.  That's not exactly best practice.</p><p>If we moved to a PKI where the private keys live in secure enclaves, you could cut that fraud down significantly.  But that won't happen, because then how would they justify the fees?</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278232"><td></td></tr>
                <tr id="41278320"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41278320" href="https://news.ycombinator.com/vote?id=41278320&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Doesn't that just trade one symmetric secret for another? (your password)</p><p>I suppose it's a little better because you probably haven't written your password on the side of your card, but everytime I have to go through it it feels like I'm getting phished.  Also, SSL seems kind of messy for the job.  You've already got the processor as a third party, now the CA's are a fourth party, plus whoever gets to install certs on that device as a fifth...</p><p>You could just have the card sign the transaction and have the merchant send that signature to the clearinghouse.  For online orders, your phone could just be the payment terminal, and still the secret on the card is the signing key.</p></div></td></tr>
        </tbody></table></td></tr>
                              <tr id="41277496"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41277496" href="https://news.ycombinator.com/vote?id=41277496&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>You're naming these companies that facilitate money moving in specific ways, but you could also zoom out and include a lot of banking which either serves to move money between parties or across space or time.</p><p>So I guess one question is: as credit unions are to banks, what missing organization type needs to exist as a counterpoint to payment services, which could return excess to owner-users?</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277352"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41277352" href="https://news.ycombinator.com/vote?id=41277352&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Banks earn revenue from interchange fees on debit and credit card transactions.</p><p>Consumers don’t have any incentive to leave behind their current rewards programs.</p><p>Merchants want to accept any payments they can and/or don't have leverage to fight the fees that partially fund networks using rewards to compete for customers.</p><p>Perhaps something will arise from FedNow like efforts but as consumers don't see the inflated prices from those rewards programs I don't see any incentives to change.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277555"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41277555" href="https://news.ycombinator.com/vote?id=41277555&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>No we don’t need to pay billions. There are moves afoot in the UK to do direct bank to bank payments with Open Banking. HMRC (the UK tax authority) has been doing this for years. When I pay my tax bill, I select my bank, scan a QR code with my phone, that launches my banking app, I authorise the payment and off it goes in just a few seconds. Instant and a few pence, even for thousands of pounds. This particular implementation is provided by Ecospend but there are a few other companies offering this same service now in the UK.</p><p>I agree with the OP, Visa and MC charging so much is just insane when you think about it. It’s more expensive AND settlement times are days, not seconds. The only barrier is consumer awareness and detrimental UK legislation forbidding card fees to be added to bills which while well intentioned completely ruins any competition on payment methods.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277791"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41277791" href="https://news.ycombinator.com/vote?id=41277791&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Open Banking is an overengineered and terrible solution, requires middlemen and there's nothing "open" about it. Do not fall for the hype.</p><p>Basically, instead of having a URL scheme to represent a bank transfer request that your banking app could register itself for and handle, they'd rather rely on a middleman to get a broad read/write access token to your bank account so they can initiate the payment from there.</p><p>These tokens are not scoped. When you do this, you fully trust the merchant (and theoretical legal recourse you may have) to not lie and only initiate the bank transfer for the amount they claimed - but there's nothing technically preventing them from taking more, or silently also grabbing your account history in the process (no bank provides an audit trail to know which <i>read</i> actions were taken).</p><p>In fact, I suspect the fact you can do a read access as a byproduct "for free" and silently is a big part of why this type of payment is pushed so heavily.</p><p>In addition, "Open" banking requires either significant regulatory/licensing hurdles, or a middleman like TrueLayer who (at least at one point, not sure how it is now) will be happy to lend their license to you for a fee. On top of that, you either need a middleman or need to integrate with each bank's API separately - so generally speaking, you'll <i>always</i> need said middleman.</p><p>All for something that can be resolved on the client side with a simple URL scheme. But don't expect a corporatocracy like the UK to go for the simple solution if they can instead go with one that provides turf to as many middlemen and parasites as possible.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41275940"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41275940" href="https://news.ycombinator.com/vote?id=41275940&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>This was something that was supposed to be solved by the original internet they just never got around to it. You are not wrong though... the issue as many people pointed out is that you are focusing on the transactions. The problem these companies solve isn't just the transaction network - their values is primarily how they deal with fraud, governance, currency conversions, etc.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276003"><td></td></tr>
                  <tr id="41278234"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41278234" href="https://news.ycombinator.com/vote?id=41278234&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>The fees are bad, but I think the attack surface is worse.  The easiest way to shut any business down is to go after its ability to collect payments.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277797"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41277797" href="https://news.ycombinator.com/vote?id=41277797&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Thanks to modern payment companies we are already living in the good place. Before Paypal you almost couldn't get paid on the internet at all. If you wanted to accept credit card payments it was a whole ordeal and banks didn't understand why anybody even wanted to sell things on the internet.</p><p>Payment processing also got much cheaper. It's arguably still more expensive than it should be, but giving up a few percentage points in revenue in exchange for frictionless payments is a really good deal.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41278151"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41278151" href="https://news.ycombinator.com/vote?id=41278151&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>You could do things the old way. Just accept cash or checks (probably via the mail) and then either mail the product back to the address on the envelope or just send back a piece of paper with a key on it.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276068"><td></td></tr>
                <tr id="41278139"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41278139" href="https://news.ycombinator.com/vote?id=41278139&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>The problem is that the ownership of the Fed is by the member banks. A CBDC is therefore a no-go in the USA. It would disintermediate money transfer and banks would lose billions.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41278145"><td></td></tr>
                  <tr id="41275885"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41275885" href="https://news.ycombinator.com/vote?id=41275885&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>You've lumped together companies that do very different things. I would just google "payment card network" and you can spend days going down rabbit holes to understand how complex the system is.  And yes it is all totally necessary: 
<a href="https://www.spreedly.com/blog/card-processing-network" rel="nofollow">https://www.spreedly.com/blog/card-processing-network</a></p><p>"Visa, Mastercard, Discover, and AmEx also form the PCI Security Standards Council (SSC) alongside Japan’s JCB International. The PCI SSC acts as an authority in the payments industry, regulating and enforcing the PCI Data Security Standard (DSS) to protect cardholder information.  The rules set by this consortium are not guidelines, but the ground-rules participants must abide by in order to participate in card-payments."</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276022"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41276022" href="https://news.ycombinator.com/vote?id=41276022&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; And yes it is all totally necessary</p><p>Highlighting because it's important. We recently got a totally free and open payments system, probably hundreds of them in fact, and they're a disaster. All the inequity and risk that any money system inherently possesses, with zero protections for anyone involved and zero recourse if you're robbed blind, unless of course you're wealthy in which case the people actually in charge who insist they aren't in charge will write a whole bunch more code to give you you're money back even though that's not how this works for anyone else. And that's not even getting into the fact that every seven transactions used as much electricity as Visa uses per minute to handle hundreds of thousands.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276190"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41276190" href="https://news.ycombinator.com/vote?id=41276190&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>By which I understand you to mean the cryptocurrency efforts, right?</p><p>Man. That whole turn-of-the-2020s, peak-COVID period seems like such a collective fever dream in retrospect.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276404"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41276404" href="https://news.ycombinator.com/vote?id=41276404&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Oh yeah.</p><p>And I mean, I'd agree if there weren't still a substantial community of people swearing up and down that it was the future, despite all evidence to the contrary.</p></div></td></tr>
        </tbody></table></td></tr>
                              <tr id="41276016"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41276016" href="https://news.ycombinator.com/vote?id=41276016&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; In total these companies have profit in double digit billions</p><p>If you think about it.</p><p>Stripe, Block, PayPal only exist because of credit card networks (Visa, Mastercard, American Express, JCB, Discover) and issuing banks (JPM, WF, BoA, foreign banks). Those last two groups of entities have such terrible integrations/interfaces and fail to improve due to their oligopoly on the entire process of facilitating buyer and seller payment processing.</p><p>Stripe, Block, PayPal are just mere parasites living off of other parasites (the 3-7% transaction/network/issuing bank fees).</p><p>A “rival” is a complete dissolution of these parasitic entities. Cash used to be a good alternative, but comes with its own set of setbacks that do not meet our modern era (ie, can’t pay for items with cash in e-commerce, pains of handling high amounts of cash IRL)</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276313"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41276313" href="https://news.ycombinator.com/vote?id=41276313&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Yeah I'm a big fan of cash but do you remember the days when that's all there really was? You had to go the bank every week to get it. There was risk of theft or loss for both individuals and businesses.</p><p>You could write personal checks, but not every business accepted them and if you were a business there was a period of days, sometimes weeks where you didn't know if a payment was good. I did pizza delivery in the 1980s, we accepted cash or check and I would guess about 1 in 10 checks were no good. That's a huge loss to absorb. And drivers would make occasional mistakes handling cash.</p><p>I remember when Visa and Mastercard started to get popular and widely accepted. Before that you had store credit cards, gas station credit cards, you were carrying around maybe half a dozen different cards just to do your normal purchases, or you were writing checks everywhere. e-commerce  didn't exist yet but it would never have been possible paying by cash or check.</p><p>Visa/MC and later Paypal, Stripe, etc. solved real problems and provided real conveniences. That's worth something.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276997"><td></td></tr>
                  <tr id="41276916"><td></td></tr>
                <tr id="41277711"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41277711" href="https://news.ycombinator.com/vote?id=41277711&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>In the US, you can do an ACH transfer, bank account to bank account.</p><p>Some US banks support FedNow, which does roughly the same thing as ACH, but in seconds rather than days. It's not widely used yet. $0.045 per transaction.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41277671"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41277671" href="https://news.ycombinator.com/vote?id=41277671&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Visa and Mastercard both have net profit margins of around  50%. So unless you think they’re taking on vast commercial risk, which I don’t, then there’s no reason we should be paying so much in fees.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277978"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41277978" href="https://news.ycombinator.com/vote?id=41277978&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>I wonder what EU will come up with in the future, some kind of digital cash? Private transactions that must work instantly with all banks doing business in the EU?
Several countries here have their own solution, but none of them are compatible with each other. (Please correct me)</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278335"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41278335" href="https://news.ycombinator.com/vote?id=41278335&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Since a few years ago, the ECB is already looking into the possibilities for implementing a digital euro as another way of paying across the entire Eurozone. The phrase "digital euro" has been kind of a political boogeyman because of the privacy concerns (fair) and implications that the physical euro might disappear (less fair, the right to be able to use it as legal tender is enshrined in the EU treaties and that can't be changed without everyone agreeing to it), but the base idea is to create a public infrastructure that would do what payment processors and credit card companies are doing for a hefty fee right now. Which, to me, sounds like a great answer to this problem.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41277273"><td></td></tr>
            <tr id="41275902"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41275902" href="https://news.ycombinator.com/vote?id=41275902&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>I can tell you it isn't difficult to build something like they have. The issue is more likely to get banks onboard to issue cards/payment instruments for your unknown payment network which has no terminals, the barrier to entry is very high.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276293"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41276293" href="https://news.ycombinator.com/vote?id=41276293&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Isn’t the second part—getting counterparties to trust you—an essential part of building something like they have?</p><p>I’m reminded of the old joke about the tech who thumps a machine to fix it, then sends a $5000 bill. $5 for coming out and thumping, $4995 for knowing where to thump.</p><p>Maybe instead of “3% to update some tables in a money database,” it’s more properly “.001% for the database update, 2.999% for being trustworthy enough that everyone is willing to trade goods and services on the strength of our promise that they’ll get paid”</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276619"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41276619" href="https://news.ycombinator.com/vote?id=41276619&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>I work in fintech specifically in payments and have for a few years now, including working on payment rails. I am going to give my best tl;dr based on my experience and knowledge.</p><p>From my point of view it isn’t really about partner banks. It’s about the rails, nearly 100% about the rails (IE the network). You’d only need one partner bank to move funds, which is how CashApp does it for example, but payment networks (the rails) is a different beast all together and I’ll do my best to outline this.</p><p>The bigger problem is going to be the rails. Visa and Mastercard as a model wouldn’t make as much sense for a new system to start with, rather you would want to be a closed loop system like American Express and Discover, because it’s extremely unlikely you’re going to be lowering any fees if you have to transit on Mastercard or Visa, but this means you have to control the entire on ramp, from issuing cards to operating the network. This as time has gone on has gotten very complicated from a regulatory standpoint and much of it for good reason, not to mention the high entry cost and long tail time it will take to see adoption. In fact you would likely run up against the reason why fees are so high, which I will get into in a minute. This is all the reasons why Capital One is trying to buy Discover, because they want to lower their fees for their cards so they can net more profit per transaction with lower per transaction costs, but this won’t translate into anything being cheaper for merchants (which is what we are really talking about) because of one really big draw of credit cards: Rewards[0]</p><p>The biggest driver of higher over time transaction costs isn’t the operation of the network. Which does cost money and it is unlikely operating any network would be zero cost or near zero cost, but rewards balloon the cost to merchants because of how things are structured and incentivized.</p><p>In a very simplistic breakdown it goes like this: if I am a card issuer like a bank, American Express or Discover and offer rewards, someone has to pay for that. Now you think the sky high interest rates would be enough but, while they in part cover the costs of the bank and they make lots of money on this, the truth is rewards are funded in large part (and sometimes solely) by kick backs on fees paid by merchants to the network operators, e.g. Visa, who may charge 3% they may only keep 0.50% of that and pass the rest back to the issuer as a kick back. This is negotiated by a number of means and the percentages are all different based on a bunch of factors but this is essentially how it works. This in part is done to incentive more transactions over the card network, particularly as a credit transaction which isn’t fee regulated, where as debit cards have a legal limit, which averages out to ~7 cents per transaction, significantly lower than credit cards.</p><p>Now this has created a system of kickbacks and rewards. This benefits three parties: Banks, who get tons of profits off of the high interest on credit cards plus the kickbacks fund rewards. Savvy (and usually wealthy) consumers, who can effectively get the “tax” in higher prices this has observed to cause over time as fees rise paid back to them as rewards at no cost (full paid monthly balances) and the network operators.</p><p>This leaves merchants to bare the real burden, as well as consumers who haven’t or otherwise unable to take advantage of reward programs to offset costs, namely the poor and lower middle class folks.</p><p>Now knowing this, how would you build up a 3 sided network (the operator, the consumer and a bank) that upends this model, which lowers fees for merchants? Assuming you go with a closed loop model (likely the best move) you are left with a few options: lower rewards (or have none, realistically) and you won’t gain consumers. Lower the operator take which has risks the ability for operations to be profitable and regulatory compliant, or you need to fund in large part by merchant fees greater than 1%, which will inch you close to what you see today to begin with, or you may think to use “differential pricing” but in some instances this may enter into a questionable gray area legally to have differential pricing based on which network / payment method the customer uses and it can be burdensome to merchants, which in part is why Winco decided to very publicly disclose that they only take debit cards, for example. Finally, you could forgo all this and simply rely on credit card interest revenue but that is a surprisingly volatile proposition as you have defaults to consider, refunds, reward costs, security and regulatory compliance etc.</p><p>All the while you need to build out a network from scratch by working with merchants, which means you would have very slow adoption and users of the network wouldn’t be able to blindly use their cards where they shop today, because it’s not like you can tap into Visa or Mastercard networks as a back stop either[1]</p><p>For what it’s worth, you should do a deep dive on how retailers tried and failed to upend all this with their own ACH based payment systems, the biggest proponent of which was Walmart. They failed for a lot of reasons but not all of them are the reasons you think.</p><p>[0]: <a href="https://insight.kellogg.northwestern.edu/article/who-pays-generous-credit-card-rewards#:~:text=Wang%20finds%20that%20networks%20are,increased%20costs%20on%20to%20consumers" rel="nofollow">https://insight.kellogg.northwestern.edu/article/who-pays-ge...</a>.</p><p>[1]: I’m not a lawyer but I’m almost certain they have no legal obligation to allow anyone on their network even after the settlement awhile back</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41277489"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41277489" href="https://news.ycombinator.com/vote?id=41277489&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>You mean like UPI? 
For a nascent industry such as India I imagine you could: but for a legacy infrastructure such as that of the US - very advanced a few decades ago but now showing its age - the momentum is too hard to deprecate and start over. Just like how fast the developing world had pretty good mobile networks in a short amount of time.</p><p>There are still a lot of lessons to learn from the Indian model but I guess the US incumbents would artificially add road blocks via legal or subtle measures to maintain the status quo and instead offer band aid solutions.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277999"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41277999" href="https://news.ycombinator.com/vote?id=41277999&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Yes someone can disrupt this, but only really banks and Apple can do this in the US. All you need is stakes to lose besides money, like credit scores or even like Internet access, and robust, compulsory authentication.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41278319"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41278319" href="https://news.ycombinator.com/vote?id=41278319&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>You can't easily disrupt it because it's a two-sided marketplace between consumers and payment providers.</p><p>You could launch a Stripe competitor called CheapPayments but it would still have to pay standard Visa/etc processing fees so it can't be cheaper than Stripe.</p><p>You could launch a Visa competitor called CheapCard that has half the processing fees of Visa, but no merchants or payment processors would take CheapCard so people would continue using Visa.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41278045"><td></td></tr>
            <tr id="41276449"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41276449" href="https://news.ycombinator.com/vote?id=41276449&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>You know in Europe the card merchants are limited to about 1.3%. And the US could regulate this as well. In Australia you can add the card commission on top of the purchase easily. (Much easier than Stripe for instance).</p><p>To save payment fees there are probably easier sections of the payment process to focus on. For instance why do so many merchant banks insist on mandatory FX into 1 currency.  This limitation means if I use Stripe I end up paying 9% commissions.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276385"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41276385" href="https://news.ycombinator.com/vote?id=41276385&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Yes we do. Why? Because the old people running our country have not figured out that digital money is money even though most spending is done using digital money.</p><p>Because they love corporate profits more than citizen wallets, they restrict the US Mint to paper money instead of implementing a Federal payment system to support citizen use of digital money.</p><p>Consequently, those companies effectively implement a regressive sales tax of around 3-4%.</p><p>We should all have a federal debit card with zero processing fees that attaches to our bank accounts and the banks should be mandated to charge zero for federal debit card withdrawals.</p><p>Alternately, a law should be passed that mandates these big companies to charge no processing fee for debit cards. If they can't make profits that are sufficiently obscene on credit card fees, tough luck. While at it, make a federal card processing function that is entirely funded by tax, just like paper money.</p><p>It's an insane part of our government that it is impossible to modernize anything that touches the constitutional responsibilities.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277119"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41277119" href="https://news.ycombinator.com/vote?id=41277119&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; federal debit card</p><p>I don't see how this could possibly be abused by law enforcement or politicians. I'm in!</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41276872"><td></td></tr>
            <tr id="41276122"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41276122" href="https://news.ycombinator.com/vote?id=41276122&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Platforms are where the money is at. Big SaaS companies built something large and complicated (their <i>moat</i>) that's difficult for a competitor to replicate or support.</p><p>It takes thousands of people who know what they are doing to get a big SaaS platform in any industry to work -- and to keep it working through endless regulatory changes, hacks, user demands, tech limitations, and bugs.</p><p>Once you have built something of this scale you're likely to charge as much as competition or perhaps even more -- not only to recoup your enormous costs but to return the expected profits to your capital backers.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276168"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41276168" href="https://news.ycombinator.com/vote?id=41276168&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>I was wondering this myself. If we are paying fees why is it necessary to pay a % of each sale instead of paying a standard subscription? Sure it means more money for them, but is this really necessary?</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277213"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41277213" href="https://news.ycombinator.com/vote?id=41277213&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>purchasing protection and fraud need to be a percent. And "necessary" isn't the correct term for prices, "can" is.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41278494"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41278494" href="https://news.ycombinator.com/vote?id=41278494&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>1. Moving stuff in a ledger from A to B (sending money around in general) is all fairly trivial from a technology standpoint, but only a minuscule part of what financial institutions are doing. They spend a lot of money and effort on combatting fraud and making sure rules and regulations (KYC, AML, CTF, sanctions, etc.) are being followed.</p><p>(The crypto bros (and some FinTechs) solve a tiny part of the puzzle with a new technology (not even good/efficient tech in case of crypto), and then think that they alone have solved it, and that the rest is easy, and that they are now in a position to take over finance. Not so.)</p><p>2. Costs vary tremendously by jurisdiction and industry structure. In Europe, bank transfers within the SEPA region are basically free (instantaneous transfers might cost 35 cents or so). Bank transfers, direct debit, and standing orders have been ubiquitous and cheap for a long time, and checks and credit cards are rarely used (on the continent; the UK is closer to the US system). There was no need for PayPal, as it was fairly trivial to pay bills. (Only when Ebay bought PayPal and made it the default payment method did PayPal get any traction in Europe, I think.)</p><p>Similarly, credit card interchange fees are capped at 0.5% in the EU. That means fewer card rewards (which arguably benefit mostly the rich), and less credit card marketing.</p><p>The banking system in the US is quite crap, but that's not due to stupidity, but a mix of a) well intended regulation that intends to support small regional banks, b) misguided business-friendly regulation with insufficient consumer protection.</p><p>2.b. I think Visa/MC/Amex are ridiculously expensive in many jurisdictions, and that they basically skim off some 2% or so of the entire retail revenue is ridiculous. They should be treated as cheap infrastructure. But this requires sensible regulation. It's not a technological issue.</p><p>3. There are lots of somewhat successful neo-banks, neo-brokers, etc. in many jurisdictions. I don't think many of them have extraordinary profits. And that's because, no, it's not "all coming from inefficiency and lack of real competition". Sure, the sector is so heavily regulated (like aviation) that you can't just walk in and compete willy-nilly. That has some downsides, but it also has advantages.</p><p>4. A bank that makes insufficient profits and tethers on the brink of insolvency invites bank runs. That's one reason regulators are not pushing too hard for more competition. (Replacing the current fractional banking system with private credit + narrow banking might be an option, but that's a huge and complicated topic...)</p><p>For deep insight, I recommend <i>Bits about Money</i> by Patrick McKenzie (patio 11 on HN).</p><p><a href="https://www.bitsaboutmoney.com/" rel="nofollow">https://www.bitsaboutmoney.com</a></p><p><a href="https://news.ycombinator.com/user?id=patio11">https://news.ycombinator.com/user?id=patio11</a></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41275915"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41275915" href="https://news.ycombinator.com/vote?id=41275915&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Sure it would be possible with "enough" funding, almost by definition. If you can't, then the amount of funding clearly wasn't enough. I doubt you (or anyone btw) could get "enough" funding though. The amount of money you'd need just to get all their existing customers to switch would be monumental.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276461"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41276461" href="https://news.ycombinator.com/vote?id=41276461&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Exactly. If you're a new company and your choice is either spending lots of capital to accept payments by building it from scratch or pay 2.9%+30¢, the decision is obvious. If you value your time at $100/hr and spend forty hours building such a system—never mind maintaining it—you'd have to process over $130,000 in volume (500 transactions at about $260 each) just to break even on fees.</p><p>But you probably won't do it in a week, and you'll spend weeks each year maintaining it. I'd make an educated guess that for the vast majority of companies, it would be cheaper to process your first half million on Stripe than it would be to learn how to build a payments processor, build it, run it, and maintain it. You're saving peanuts for the principle of the matter.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41276201"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41276201" href="https://news.ycombinator.com/vote?id=41276201&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>The total annual digital payments volume is estimated to be $11.5 <i>trillion</i>. Given that context a few billion dollars in profit off the top to add ease of use, security, fraud prevention etc. into the system doesn't seem all that absurd.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276780"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41276780" href="https://news.ycombinator.com/vote?id=41276780&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>It’s not a few billion though.
its tens of billions spread across a bunch of different organizations, honestly if you count Stripe, PayPal etc as well, you are in the hundreds of billions. In the last fiscal year for Visa, they alone made $14.9 billion in profit. This doesn’t factor any of the second order money effects either, like kickback to banks for rewards, and this is just Visa. Mastercard, American Express and Discover all factor into this too, at least in the US, and a quick glance suggested this is a world wide figure, which introduces even more variables</p><p>The volume is also misleading because it does not differentiate on source, fee structure etc. it’s a gross (as in financial gross) number that says very little about how it was moved and what it cost to move it. Digital payments is a huge category</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41276065"><td></td></tr>
            <tr id="41275894"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41275894" href="https://news.ycombinator.com/vote?id=41275894&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>You need 2 things: users with your app/terminal, and a way to interoperate with the international banking system. If you can do that, it's technically feasible to create a vertically integrated replacement of the whole stack. It's going to be a huge investment though.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277370"><td></td></tr>
            <tr id="41276207"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41276207" href="https://news.ycombinator.com/vote?id=41276207&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>It would be interesting to listen to an interview with the Dwolla founder and see why they pivoted from their original idea of replacing card networks / ach and building a new payment network from scratch.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276727"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41276727" href="https://news.ycombinator.com/vote?id=41276727&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Yes. Because they actually provide value both for the consumer and the seller for on-line commerce.</p><p>"They make a lot of money!" is not a valid argument against.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41276310"><td></td></tr>
            <tr id="41277485"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41277485" href="https://news.ycombinator.com/vote?id=41277485&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>In countries with modern banking, this has been solved for many/most transactions.</p><p>Maybe fednow can do that in a few years.  I’d build on that rather than reinvent the wheel.</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277690"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41277690" href="https://news.ycombinator.com/vote?id=41277690&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>At least 3 of those companies came into existence in relative recent history. If you think you have something to offer, then do it.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277532"><td></td></tr>
            <tr id="41276117"><td></td></tr>
            <tr id="41275881"><td></td></tr>
                <tr id="41276129"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41276129" href="https://news.ycombinator.com/vote?id=41276129&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Because a currency that fluctuates in value +/- 20% every week is exactly what people want in a payments system.</p><p>Plus the exchange fees for Bitcoin is way higher than what regular payments processors charge.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276579"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_41276579" href="https://news.ycombinator.com/vote?id=41276579&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>I hate Bitcoin as much as the next person but it's not really fair to criticise a technology that's potentially cool on the grounds that it doesn't have enough adoption. If it had the stability of entire countries behind it, it wouldn't fluctuate this much and even if it did, if everything's in that currency then you don't notice it in daily life either.</p><p>The problem I have with it, is that the technology is inefficient at solving the problem as compared to a central authority issuing currency. Something using e.g. blind signatures sounds really cool but the tech was ahead of its time (paper stems from 1983) and by now it doesn't sound cool and new anymore. Example implementation: <a href="https://en.m.wikipedia.org/wiki/Ecash" rel="nofollow">https://en.m.wikipedia.org/wiki/Ecash</a></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41277609"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_41277609" href="https://news.ycombinator.com/vote?id=41277609&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt;  it's not really fair to criticise a technology that's potentially cool on the grounds that it doesn't have enough adoption</p><p>But that's not at all why the person you're responding to criticized it!</p></div></td></tr>
        </tbody></table></td></tr>
                              <tr id="41276057"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41276057" href="https://news.ycombinator.com/vote?id=41276057&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Depends on whether you want to use their services? If you live somewhere where it's easy to just instantly transfer funds form one bank to another for free (e.g. you live in the Netherlands), then no: none of those companies need to exist in your world.</p><p>If you live anywhere else, all these companies are offering services that banks don't, or charge much more for. Or these days, don't even offer themselves, they literally outsource it (e.g. sending money from one bank to another is now a built-in-third-party-service in the form of agreements with Interac to handle low value EFTs).</p><p>So can you rival them? Probably. Will you fail? More likely than not. Is there lack of real competition? Depends on where you live, but yeah the whole reason they <i>got</i> this big is because they found a real problem and solved it, charging just enough for people to go "well that's still worth it for me".</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41277237"><td></td></tr>
            <tr id="41277880"><td></td></tr>
            <tr id="41275828"><td></td></tr>
                <tr id="41275873"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41275873" href="https://news.ycombinator.com/vote?id=41275873&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Q: does anyone think it possible to rival them in a decade with enough funding?</p><p>&gt; If you think building a Stripe or Visa replacement is easy, go ahead and try.</p><p>The use of <i>easy</i> here dismisses the Q's premise of a well funded decade.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41276091"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41276091" href="https://news.ycombinator.com/vote?id=41276091&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>look up Red ocean vs blue ocean.</p><p>Even if it was, there are better uses for a "decade with enough funding" unless you have some competitive advantage, like you're the CEO of Chase Bank or something. If you want to know how possible it is, consider that Bitcoin was released in 2009 and  cryptocurrency's success at being used for payments - in the history of the world - it has been used for payments between people for something other than crimes, but adoption is <i>way</i> behind visa. Like,  that alternative system exists (albeit not for free either) and there's no adoption. So the "billions" aren't exactly a market inefficiency. <i>They</i> make billions, but out of your life, how much do you pay to them. And then, do they perform a valuable service and charge money for that? Would you rather go to a bank and get cash and drive it to Amazon's local office, or mail them a cheque? For a fee, there are companies out there that will make it easier and faster and more convenient than that.</p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="41276497"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41276497" href="https://news.ycombinator.com/vote?id=41276497&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>&gt; look up Red ocean vs blue ocean.</p><p>For those not wishing to visit another site to learn new vocabulary first:</p><p>blue-ocean market = entering into a new markt, red = entering into an existing market</p><p>Interestingly, I never heard this term before but now twice in one week someone referred to it (linking an article from 2012 iirc). At least the other one provided a link, albeit to a 5600-word documentary that I'm sure everyone was thrilled to dig into when there are perfectly normal words for it as well (sounds less fancy if everyone is already familiar, though)</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41275923"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41275923" href="https://news.ycombinator.com/vote?id=41275923&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Nor do we needntobpay billions to healthcare managers orninsurance companies.</p><p>But we do, because capitalism both needs flexibility in separation of concerns and people need jobs and greed is its own fiefdom genersting maxhine.</p><p>Think of it like evolution and social diversity. Studies in squirrels have shown that larger social groups create a need for greater phenotypical visual diversity, if only for identificTion</p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="41275870"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41275870" href="https://news.ycombinator.com/vote?id=41275870&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>Put your efforts where your mouth is and go build your own "real competition" if you think its that easy.</p>
              </div></td></tr>
        </tbody></table></td></tr>
                <tr id="41275930"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_41275930" href="https://news.ycombinator.com/vote?id=41275930&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div><p>Q: does anyone think it possible to rival them in a decade with enough funding?</p><p>&gt; go build your own "real competition" if you think its that easy.</p><p>Another dismissive comment. What inspires these? The Q proposes a significant timetable and suggests adequate funding. I'd agree it's open ended but it sounds like the OP is inviting education on the topic.</p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="41276046"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_41276046" href="https://news.ycombinator.com/vote?id=41276046&amp;how=up&amp;goto=item%3Fid%3D41275342"></a></center>    </td><td><br><div>
                  <p>No we don’t, and I’m working on solving this problem. There’s no reason for a pure SaaS company to pay these middlemen if the only thing they buy and sell is software. Software vendors can settle accounts directly like banks do, we just need something like an ACH for SaaS. And I’ve been thinking a lot about how to do this while having the equivalent of a petrodollar to create underlying value based on a commodity. For example a meta currency for compute credits that is cloud agnostic.</p>
              </div></td></tr>
        </tbody></table></td></tr>
            </tbody></table>
  </td></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ex-Google CEO: AI startups can steal IP and hire lawyers to 'clean up the mess' (176 pts)]]></title>
            <link>https://www.theverge.com/2024/8/14/24220658/google-eric-schmidt-stanford-talk-ai-startups-openai</link>
            <guid>41275073</guid>
            <pubDate>Sat, 17 Aug 2024 15:08:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/2024/8/14/24220658/google-eric-schmidt-stanford-talk-ai-startups-openai">https://www.theverge.com/2024/8/14/24220658/google-eric-schmidt-stanford-talk-ai-startups-openai</a>, See on <a href="https://news.ycombinator.com/item?id=41275073">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article id="content"><div><div><div><h2>Ex-Google CEO says successful AI startups can steal IP and hire lawyers to ‘clean up the mess’</h2><p><span><span> / </span><h2>“But if nobody uses your product, it doesn’t matter that you stole all the content,” Eric Schmidt said during a recent talk at Stanford that has been taken offline.</h2></span></p></div><div><p><span>By</span> <span><span></span> <span><a href="https://www.theverge.com/authors/alex-heath">Alex Heath</a></span><span>, <span>a deputy editor and author of the <i><a href="https://www.theverge.com/command-line-newsletter">Command Line </a></i>newsletter. He has over a decade of experience covering the tech industry.</span></span></span></p><p><time datetime="2024-08-15T00:00:24.437Z"> <!-- -->Aug 15, 2024, 12:00 AM UTC</time></p><div><h2>Share this story</h2></div></div></div><div><figure><span><span></span><img alt="Collision 2022 - Day Two" sizes="(max-width: 768px) calc(100vw - 100px), (max-width: 1180px) 700px, 600px" srcset="https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/16x11/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 16w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/32x21/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 32w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/48x32/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 48w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/64x43/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 64w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/96x64/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 96w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/128x85/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 128w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/256x171/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 256w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/376x251/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 376w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/384x256/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 384w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/415x277/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 415w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/480x320/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 480w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/540x360/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 540w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/640x427/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 640w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/750x500/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 750w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/828x552/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 828w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/1080x720/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 1080w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/1200x800/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 1200w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/1440x960/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 1440w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/1920x1280/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 1920w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/2048x1365/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 2048w, https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/2400x1600/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg 2400w" src="https://duet-cdn.vox-cdn.com/thumbor/0x0:7496x5379/2400x1600/filters:focal(3909x2019:3910x2020):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/25572964/1241460753.jpg" decoding="async" data-nimg="responsive"></span><div><figcaption><em>Eric Schmidt.</em></figcaption> <p><cite>Photo By Lukas Schulze/Sportsfile for Collision via Getty Images</cite></p></div></figure></div></div><div><div><p>Former Google CEO and chairman Eric Schmidt has made headlines for saying that Google was blindsided by the early the rise of ChatGPT because its employees decided that <a href="https://www.theverge.com/2024/8/13/24219912/googles-former-ceo-on-why-the-company-was-caught-off-guard-by-openai">“working from home was more important than winning.”</a></p><p>The comment was made in front of Stanford students during a recent interview, video of which was removed from the university’s YouTube channel after Schmidt’s gaffe was widely picked up by the press. I managed to watch most of Schmidt’s chat with Stanford’s Erik Brynjolfsson before it was taken down, however, and something else he said stands out. (You can still <a href="https://github.com/ociubotaru/transcripts/blob/main/Stanford_ECON295%E2%A7%B8CS323_I_2024_I_The_Age_of_AI%2C_Eric_Schmidt.txt">read the full transcript here</a>.)</p><p>While talking about a future world in which AI agents can do complex tasks on behalf of humans, Schmidt says:</p><div><blockquote><p>If TikTok is banned, here’s what I propose each and every one of you do: Say to your LLM the following: “Make me a copy of TikTok, steal all the users, steal all the music, put my preferences in it, produce this program in the next 30 seconds, release it, and in one hour, if it’s not viral, do something different along the same lines.”</p><p>That’s the command. Boom, boom, boom, boom.</p></blockquote></div><p>A bit later, Schmidt returns to his TikTok example and says:</p><div><blockquote><p>So, in the example that I gave of the TikTok competitor — and by the way, I was not arguing that you should illegally steal everybody’s music — what you would do if you’re a Silicon Valley entrepreneur, which hopefully all of you will be, is if it took off, then you’d hire a whole bunch of lawyers to go clean the mess up, right? But if nobody uses your product, it doesn’t matter that you stole all the content.</p><p>And do not quote me.</p></blockquote></div><p>At this point, Brynjolfsson points out that, “You’re on camera,” to which Schmidt responds:</p><div><blockquote><p>Yeah, that’s right. But you see my point. In other words, Silicon Valley will run these tests and clean up the mess. And that’s typically how those things are done.</p></blockquote></div><p>While Schmidt stepped away from his chairman role at Google in 2015, he remains influential in Silicon Valley and a prolific investor in startups. During this same talk at Stanford, he touts his investment in the AI startup Mistral and being “a licensed arms dealer” to the US military. He also calls Sam Altman “a close friend,” and recalls a recent dinner he had with Elon Musk while praising what the Tesla CEO “gets out of people” who work for him.</p><p>I emailed Schmidt and Brynjolfsson requesting comment about the removal of their chat from YouTube and haven’t heard back yet. Schmidt earlier <a href="https://www.wsj.com/tech/ai/google-eric-schmidt-ai-remote-work-stanford-f92f4ca5">told <em>The Wall Street Journal</em></a><em> </em>that he “misspoke about Google and their work hours” and requested the video be taken down.</p><div><form><div><h2>Command Line</h2><p> / <span>A newsletter from Alex Heath about the tech industry’s inside conversation.</span></p></div></form></div></div><div><p>Most Popular</p><p>Most Popular</p><ol><li><a href="https://www.theverge.com/2024/8/16/24221826/olympics-paris-what-happened-air-conditioning-heat"><h2>What happened to all the temporary air conditioning units at the Olympic Village?</h2></a><hr></li><li><a href="https://www.theverge.com/2024/8/16/24221353/eric-schmidt-says-the-quiet-part-out-loud"><h2>Eric Schmidt says the quiet part out loud</h2></a><hr></li><li><a href="https://www.theverge.com/2024/8/16/24221721/gemini-google-pixel-apple-app-pricing-tv-shootout-vergecast"><h2>Gemini is taking over Google</h2></a><hr></li><li><a href="https://www.theverge.com/2024/8/16/24221755/google-team-pixel-reviews-influencers"><h2>Google threatened tech influencers unless they ‘preferred’ the Pixel</h2></a><hr></li><li><a href="https://www.theverge.com/24220359/google-pixel-9-camera-bar-small-phones-claude-zellweger-interview"><h2>Google’s head of Pixel 9 design won’t apologize for its big, beautiful camera bump</h2></a><hr></li></ol></div></div></article></div></div>]]></description>
        </item>
    </channel>
</rss>