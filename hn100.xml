(ignoring known css parsing error)
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 15 Apr 2025 19:30:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Clolog (106 pts)]]></title>
            <link>https://github.com/bobschrag/clolog</link>
            <guid>43695620</guid>
            <pubDate>Tue, 15 Apr 2025 17:04:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/bobschrag/clolog">https://github.com/bobschrag/clolog</a>, See on <a href="https://news.ycombinator.com/item?id=43695620">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">clolog</h2><a id="user-content-clolog" aria-label="Permalink: clolog" href="#clolog"></a></p>
<p dir="auto">Full-featured logic programming (AKA "Prolog") embedded in/callable
from and supporting calls to Clojure.  In the spirit of LogLisp, Lisp
Machine Prolog, and Franz Inc.'s Allegro Prolog, with some extra
goodies.  Emphasis on expressive power and execution transparency,
supporting rapid prototyping, proof-of-concept development, and
outer-loop reasoning (i.e., not real fast, so far).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Highlights, with examples</h2><a id="user-content-highlights-with-examples" aria-label="Permalink: Highlights, with examples" href="#highlights-with-examples"></a></p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Clojure-based, Lispy (i.e., homoiconic) syntax, e.g., ...</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="(do 
    ;; Set up, clear knowledge base.
    (initialize-prolog)
    ;; Create unit assertion.    
    (<- (has-subtype vertebrate mammal)) 
    ;; Execute query.
    (? ?x ; Answer template
       (has-subtype vertebrate ?x) ; Goal.
       )
    )
  [mammal] ; Answer(s) in vector (perhaps empty)."><pre>(<span>do</span> 
    <span><span>;</span>; Set up, clear knowledge base.</span>
    (<span>initialize-prolog</span>)
    <span><span>;</span>; Create unit assertion.    </span>
    (<span>&lt;-</span> (<span>has-subtype</span> vertebrate mammal)) 
    <span><span>;</span>; Execute query.</span>
    (<span>?</span> ?x <span><span>;</span> Answer template</span>
       (<span>has-subtype</span> vertebrate ?x) <span><span>;</span> Goal.</span>
       )
    )
  [mammal] <span><span>;</span> Answer(s) in vector (perhaps empty).</span></pre></div>
</li>
<li>
<p dir="auto"><strong>Logical variable- ("?var")-containing Clojure seqs (so, lists) and
vectors as "complex" terms---in assertion statements and answer templates</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (? (?a ?b)
     (same [?a 2] [1 ?b]))
[(1 2)]"><pre>&gt; (<span>?</span> (<span>?a</span> ?b)
     (<span>same</span> [?a <span>2</span>] [<span>1</span> ?b]))
[(<span>1</span> <span>2</span>)]</pre></div>
</li>
<li>
<p dir="auto"><strong>Clojure calling predicates</strong></p>
<ul dir="auto">
<li>
<p dir="auto">Truthiness check: <code>truthy?</code></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (? true (truthy? (+ 1 2)))
[true]"><pre>&gt; (<span>?</span> <span>true</span> (<span>truthy?</span> (<span>+</span> <span>1</span> <span>2</span>)))
[<span>true</span>]</pre></div>
</li>
<li>
<p dir="auto">?var-bearing term unification: <code>evals-from?</code></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (? ?x (evals-from? ?x (+ 1 2)))
[3]"><pre>&gt; (<span>?</span> ?x (<span>evals-from?</span> ?x (<span>+</span> <span>1</span> <span>2</span>)))
[<span>3</span>]</pre></div>
</li>
<li>
<p dir="auto">Side effect: <code>do</code></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (? nil (do (println &quot;Hello&quot;)))
Hello
[nil]"><pre>&gt; (<span>?</span> <span>nil</span> (<span>do</span> (<span>println</span> <span><span>"</span>Hello<span>"</span></span>)))
Hello
[<span>nil</span>]</pre></div>
</li>
</ul>
</li>
<li>
<p dir="auto"><strong>Access to ?var bindings in Clojure calls---even within quoted
expressions</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (<-- (male laban))
      (? ?y (male ?x) (evals-from? ?y (list '?x))))
[(laban)]"><pre>&gt; (<span>do</span> (<span>&lt;--</span> (<span>male</span> laban))
      (<span>?</span> ?y (<span>male</span> ?x) (<span>evals-from?</span> ?y (<span>list</span> '?x))))
[(<span>laban</span>)]</pre></div>
</li>
<li>
<p dir="auto"><strong>Negation as failure: <code>not</code></strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (initialize-prolog) ; Clear knowledge base.
      (? :nothing (not (Huh?))))
[:nothing]"><pre>&gt; (<span>do</span> (<span>initialize-prolog</span>) <span><span>;</span> Clear knowledge base.</span>
      (<span>?</span> <span>:nothing</span> (<span>not</span> (<span>Huh?</span>))))
[<span>:nothing</span>]</pre></div>
</li>
<li>
<p dir="auto"><strong>Facilitated access to Clojure values (<code>evals-from?</code> shorthand
<code>-&gt;?</code>) in goals with Clojure-calling predicates</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (binding [*leash* true]
    (? true (same (->? (+ 0 1)) 1)))
0. Processing query: ((same (->? (+ 0 1)) 1))
 Applied ->? transform
 (evals-from?): Entering (evals-from? ??-0:0 (+ 0 1))
 (evals-from?): Succeeded (evals-from? 1 (+ 0 1))
 (same): Entering (same 1 1)
 (same): Succeeded (same 1 1)
Recorded answer: true
Answer limit reached. ; Because answer template `true` has no ?vars.
[true]"><pre>&gt; (<span>binding</span> [*leash* <span>true</span>]
    (<span>?</span> <span>true</span> (<span>same</span> (<span>-&gt;?</span> (<span>+</span> <span>0</span> <span>1</span>)) <span>1</span>)))
<span>0.</span> Processing query: ((<span>same</span> (<span>-&gt;?</span> (<span>+</span> <span>0</span> <span>1</span>)) <span>1</span>))
 Applied -&gt;? transform
 (<span>evals-from?</span>): Entering (<span>evals-from?</span> ??-0:0 (<span>+</span> <span>0</span> <span>1</span>))
 (<span>evals-from?</span>): Succeeded (<span>evals-from?</span> <span>1</span> (<span>+</span> <span>0</span> <span>1</span>))
 (<span>same</span>): Entering (<span>same</span> <span>1</span> <span>1</span>)
 (<span>same</span>): Succeeded (<span>same</span> <span>1</span> <span>1</span>)
Recorded answer: <span>true</span>
Answer limit reached. <span><span>;</span> Because answer template `true` has no ?vars.</span>
[<span>true</span>]</pre></div>
</li>
<li>
<p dir="auto"><strong>Built-in term [non-]matching predicates: <code>same</code>, <code>different</code></strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (? (?a ?b)
     (same [?a 2] [1 ?b]))
[(1 2)]

> (? (?a ?b)
     (different [?a 2] [1 ?b]))
[]"><pre>&gt; (<span>?</span> (<span>?a</span> ?b)
     (<span>same</span> [?a <span>2</span>] [<span>1</span> ?b]))
[(<span>1</span> <span>2</span>)]

&gt; (<span>?</span> (<span>?a</span> ?b)
     (<span>different</span> [?a <span>2</span>] [<span>1</span> ?b]))
[]</pre></div>
</li>
<li>
<p dir="auto"><strong>Built-in term inspection predicates: <code>var</code>, <code>ground</code></strong></p>

<div dir="auto" data-snippet-clipboard-copy-content="> (? ?x (same ?x 1) (ground ?x))
[1]"><pre>&gt; (<span>?</span> ?x (<span>same</span> ?x <span>1</span>) (<span>ground</span> ?x))
[<span>1</span>]</pre></div>
</li>
<li>
<p dir="auto"><strong>Built-in unconditional predicates: <code>true</code>, <code>false</code></strong></p>


</li>
<li>
<p dir="auto"><strong>Nestable built-in logical operators: <code>and</code>, <code>or</code>, <code>not</code>, <code>if</code></strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (? ?x (and (if (false)
               (same ?x :succeed)
               (same ?x :fail))
             (evals-from? ?x :fail)
         (or (true) (false))))
[:fail]"><pre>&gt; (<span>?</span> ?x (<span>and</span> (<span>if</span> (<span>false</span>)
               (<span>same</span> ?x <span>:succeed</span>)
               (<span>same</span> ?x <span>:fail</span>))
             (<span>evals-from?</span> ?x <span>:fail</span>)
         (<span>or</span> (<span>true</span>) (<span>false</span>))))
[<span>:fail</span>]</pre></div>
</li>
<li>
<p dir="auto"><strong>"Cut" operator: <code>first</code></strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (initialize-prolog)
      (<- (sister laban rebecca))
      (<- (sister rachel leah))
      (? [?sibling ?sister]
         (first (sister ?sibling ?sister))))
 [[laban rebecca]]"><pre>&gt; (<span>do</span> (<span>initialize-prolog</span>)
      (<span>&lt;-</span> (<span>sister</span> laban rebecca))
      (<span>&lt;-</span> (<span>sister</span> rachel leah))
      (<span>?</span> [?sibling ?sister]
         (<span>first</span> (<span>sister</span> ?sibling ?sister))))
 [[laban rebecca]]</pre></div>
</li>
<li>
<p dir="auto"><strong>User-custom predicate transforms, supporting (e.g.)
varieties of <code>if</code>, <code>cond</code>, <code>optional</code></strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (create-predicate-transform '((if% ?if ?then ?else)
                              (if (first ?if) ?then ?else)))"><pre>&gt; (<span>create-predicate-transform</span> '((<span>if%</span> ?if ?then ?else)
                              (<span>if</span> (<span>first</span> ?if) ?then ?else)))</pre></div>
</li>
<li>
<p dir="auto"><strong>Full leashing of predicates, including operators</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (binding [*leash* true]
    (? [?sibling ?sister ?x] 
      (if% (sister ?sibling ?sister)
           (evals-from? ?x true)
           (evals-from? ?x false))))
0. Processing query: ((if% (sister ?sibling ?sister) (evals-from? ?x true) (evals-from? ?x false)))
 (if%): Applying logic transform (if% ?if ?then ?else)
 (if): Entering (if (first (sister ?sibling:0 ?sister:0)) (evals-from? ?x:0 true) (evals-from? ?x:0 false))
 (if): Checking 'if' condition (if (first (sister ?sibling:0 ?sister:0)) (evals-from? ?x:0 true) (evals-from? ?x:0 false))
  (if first): Entering first (first (sister ?sibling:0 ?sister:0))
   1. Entering &quot;sister/2&quot;: (sister ?sibling:0 ?sister:0)
   1. Matched head (sister laban rebecca): (sister laban rebecca)
   1. Succeeded &quot;sister/2&quot;: (sister laban rebecca)
  (if first): Succeeded, cutting (first (sister laban rebecca))
 (if): Taking 'then' branch of (if (first (sister laban rebecca)) (evals-from? ?x:0 true) (evals-from? ?x:0 false))
  (if evals-from?): Entering (evals-from? ?x:0 true)
  (if evals-from?): Succeeded (evals-from? true true)
 (if): Succeeded (if (first (sister laban rebecca)) (evals-from? true true) (evals-from? true false))
Recorded answer: [laban rebecca true]
  (if first): Failed (first (sister ?sibling:0 ?sister:0))
 (if): Failed (if (first (sister ?sibling:0 ?sister:0)) (evals-from? ?x:0 true) (evals-from? ?x:0 false))
0. Exhausted query: ((if% (sister ?sibling ?sister) (evals-from? ?x true) (evals-from? ?x false)))
[[laban rebecca true]]"><pre>&gt; (<span>binding</span> [*leash* <span>true</span>]
    (<span>?</span> [?sibling ?sister ?x] 
      (<span>if%</span> (<span>sister</span> ?sibling ?sister)
           (<span>evals-from?</span> ?x <span>true</span>)
           (<span>evals-from?</span> ?x <span>false</span>))))
<span>0.</span> Processing query: ((<span>if%</span> (<span>sister</span> ?sibling ?sister) (<span>evals-from?</span> ?x <span>true</span>) (<span>evals-from?</span> ?x <span>false</span>)))
 (<span>if%</span>): Applying logic transform (<span>if%</span> ?if ?then ?else)
 (<span>if</span>): Entering (<span>if</span> (<span>first</span> (<span>sister</span> ?sibling:0 ?sister:0)) (<span>evals-from?</span> ?x:0 <span>true</span>) (<span>evals-from?</span> ?x:0 <span>false</span>))
 (<span>if</span>): Checking 'if' condition (<span>if</span> (<span>first</span> (<span>sister</span> ?sibling:0 ?sister:0)) (<span>evals-from?</span> ?x:0 <span>true</span>) (<span>evals-from?</span> ?x:0 <span>false</span>))
  (<span>if</span> first): Entering first (<span>first</span> (<span>sister</span> ?sibling:0 ?sister:0))
   <span>1.</span> Entering <span><span>"</span>sister/2<span>"</span></span>: (<span>sister</span> ?sibling:0 ?sister:0)
   <span>1.</span> Matched head (<span>sister</span> laban rebecca): (<span>sister</span> laban rebecca)
   <span>1.</span> Succeeded <span><span>"</span>sister/2<span>"</span></span>: (<span>sister</span> laban rebecca)
  (<span>if</span> first): Succeeded, cutting (<span>first</span> (<span>sister</span> laban rebecca))
 (<span>if</span>): Taking 'then' branch of (<span>if</span> (<span>first</span> (<span>sister</span> laban rebecca)) (<span>evals-from?</span> ?x:0 <span>true</span>) (<span>evals-from?</span> ?x:0 <span>false</span>))
  (<span>if</span> evals-from?): Entering (<span>evals-from?</span> ?x:0 <span>true</span>)
  (<span>if</span> evals-from?): Succeeded (<span>evals-from?</span> <span>true</span> <span>true</span>)
 (<span>if</span>): Succeeded (<span>if</span> (<span>first</span> (<span>sister</span> laban rebecca)) (<span>evals-from?</span> <span>true</span> <span>true</span>) (<span>evals-from?</span> <span>true</span> <span>false</span>))
Recorded answer: [laban rebecca <span>true</span>]
  (<span>if</span> first): Failed (<span>first</span> (<span>sister</span> ?sibling:0 ?sister:0))
 (<span>if</span>): Failed (<span>if</span> (<span>first</span> (<span>sister</span> ?sibling:0 ?sister:0)) (<span>evals-from?</span> ?x:0 <span>true</span>) (<span>evals-from?</span> ?x:0 <span>false</span>))
<span>0.</span> Exhausted query: ((<span>if%</span> (<span>sister</span> ?sibling ?sister) (<span>evals-from?</span> ?x <span>true</span>) (<span>evals-from?</span> ?x <span>false</span>)))
[[laban rebecca <span>true</span>]]</pre></div>
</li>
<li>
<p dir="auto"><strong>Symbols interpreted as logic terms or predicates, regardless of their Clojure values</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (<- (false true))
      (? ?x (false ?x)))
[true]

> (do (<- (neg? 3))
      (? true (neg? 3)))
[true]"><pre>&gt; (<span>do</span> (<span>&lt;-</span> (<span>false</span> <span>true</span>))
      (<span>?</span> ?x (<span>false</span> ?x)))
[<span>true</span>]

&gt; (<span>do</span> (<span>&lt;-</span> (<span>neg?</span> <span>3</span>))
      (<span>?</span> <span>true</span> (<span>neg?</span> <span>3</span>)))
[<span>true</span>]</pre></div>
</li>
<li>
<p dir="auto"><strong>Arbitrary Clojure things as terms or predicates, e.g., ...</strong></p>
<ul dir="auto">
<li>
<p dir="auto">Strings (supporting, e.g., RDF URIs)</p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (<- (&quot;false&quot; true))
      (? ?x (&quot;false&quot; ?x)))
[true]"><pre>&gt; (<span>do</span> (<span>&lt;-</span> (<span>"false"</span> <span>true</span>))
      (<span>?</span> ?x (<span>"false"</span> ?x)))
[<span>true</span>]</pre></div>
</li>
<li>
<p dir="auto">Numbers</p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (<- (3 neg?))
      (? ?x (3 ?x)))
[neg?]"><pre>&gt; (<span>do</span> (<span>&lt;-</span> (<span>3</span> neg?))
      (<span>?</span> ?x (<span>3</span> ?x)))
[neg?]</pre></div>
</li>
<li>
<p dir="auto">Complex terms</p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (initialize-prolog)
      (<- ([treasure] (buried ?x)))
  (? ?r ([treasure] ?r)))
[(buried ?unbound-0)]"><pre>&gt; (<span>do</span> (<span>initialize-prolog</span>)
      (<span>&lt;-</span> ([treasure] (<span>buried</span> ?x)))
  (<span>?</span> ?r ([treasure] ?r)))
[(<span>buried</span> ?unbound-0)]</pre></div>
</li>
</ul>
</li>
<li>
<p dir="auto"><strong>Predicates that are ?var-bearing complex terms</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (initialize-prolog)
      (<- ([treasure chest] (buried ?x)))
  (? [?r ?thing] ([treasure ?thing] ?r)))
[[(buried ?unbound-0) chest]]"><pre>&gt; (<span>do</span> (<span>initialize-prolog</span>)
      (<span>&lt;-</span> ([treasure chest] (<span>buried</span> ?x)))
  (<span>?</span> [?r ?thing] ([treasure ?thing] ?r)))
[[(<span>buried</span> ?unbound-0) chest]]</pre></div>
</li>
<li>
<p dir="auto"><strong>Predicates that are ?vars</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (initialize-prolog)
      (<- (male jacob))
  (? ?pred (?pred jacob)))
[male]"><pre>&gt; (<span>do</span> (<span>initialize-prolog</span>)
      (<span>&lt;-</span> (<span>male</span> jacob))
  (<span>?</span> ?pred (<span>?pred</span> jacob)))
[male]</pre></div>
</li>
<li>
<p dir="auto"><strong>Variadic (variable-tail/arity) predicates and complex terms</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (initialize-prolog)
      (<- (variadic))
      (<- (variadic 1))
      (<- (variadic 1 2))
      (? ?rest (variadic &amp; ?rest)))
[() (1) (1 2)]

> (do (initialize-prolog)
      (<- (variadic-term [1]))
      (<- (variadic-term [1 2]))
  (? ?rest (variadic-term [1 &amp; ?rest])))
[[] [2]]"><pre>&gt; (<span>do</span> (<span>initialize-prolog</span>)
      (<span>&lt;-</span> (<span>variadic</span>))
      (<span>&lt;-</span> (<span>variadic</span> <span>1</span>))
      (<span>&lt;-</span> (<span>variadic</span> <span>1</span> <span>2</span>))
      (<span>?</span> ?rest (<span>variadic</span> &amp; ?rest)))
[() (<span>1</span>) (<span>1</span> <span>2</span>)]

&gt; (<span>do</span> (<span>initialize-prolog</span>)
      (<span>&lt;-</span> (<span>variadic-term</span> [<span>1</span>]))
      (<span>&lt;-</span> (<span>variadic-term</span> [<span>1</span> <span>2</span>]))
  (<span>?</span> ?rest (<span>variadic-term</span> [<span>1</span> &amp; ?rest])))
[[] [<span>2</span>]]</pre></div>
</li>
<li>
<p dir="auto"><strong>Goals that are ?vars</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (initialize-prolog)
      (<- (male jacob))
  (? ?goal ?goal)) ; Tell me everything you can prove.
[(male jacob)]"><pre>&gt; (<span>do</span> (<span>initialize-prolog</span>)
      (<span>&lt;-</span> (<span>male</span> jacob))
  (<span>?</span> ?goal ?goal)) <span><span>;</span> Tell me everything you can prove.</span>
[(<span>male</span> jacob)]</pre></div>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (initialize-prolog)
      (<- (male jacob))
  (? ?goal (unasserted) ?goal)) ; ...with what you know so far.
[]"><pre>&gt; (<span>do</span> (<span>initialize-prolog</span>)
      (<span>&lt;-</span> (<span>male</span> jacob))
  (<span>?</span> ?goal (<span>unasserted</span>) ?goal)) <span><span>;</span> ...with what you know so far.</span>
[]</pre></div>
</li>
<li>
<p dir="auto"><strong>Anonymous ?vars</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (initialize-prolog)
      (<- (sister laban rebecca))
      (<- (sister rachel leah))
      (? true (sister ?_person ?_person)))
[true]

> (? true (sister ? ?))
[true]"><pre>&gt; (<span>do</span> (<span>initialize-prolog</span>)
      (<span>&lt;-</span> (<span>sister</span> laban rebecca))
      (<span>&lt;-</span> (<span>sister</span> rachel leah))
      (<span>?</span> <span>true</span> (<span>sister</span> ?_person ?_person)))
[<span>true</span>]

&gt; (<span>?</span> <span>true</span> (<span>sister</span> ? ?))
[<span>true</span>]</pre></div>
</li>
<li>
<p dir="auto"><strong>Suppression of answers that are (under ?var renaming) duplicates</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (initialize-prolog)
      (<- (male laban))
  (<- (male jacob))
  (binding [*leash* true]
        (? ?x (or (male ?x) (male ?x)))))
0. Processing query: ((or (male ?x) (male ?x)))
 (or): Entering (or (male ?x:0) (male ?x:0))
  1. Entering &quot;male/1&quot;: (male laban)
  1. Matched head (male laban): (male laban)
  1. Succeeded &quot;male/1&quot;: (male laban)
Recorded answer: laban
  1. Backtracking into &quot;male/1&quot;: (male ?x:0)
  1. Succeeded &quot;male/1&quot;: (male jacob)
Recorded answer: jacob
  1. Backtracking into &quot;male/1&quot;: (male ?x:0)
  1. Failed &quot;male/1&quot;: (male ?x:0)
 (or): Backtracking into (or (male ?x:0) (male ?x:0))
  1. Entering &quot;male/1&quot;: (male laban)
  1. Matched head (male laban): (male laban)
  1. Succeeded &quot;male/1&quot;: (male laban)
Duplicate answer (not recorded): laban
  1. Backtracking into &quot;male/1&quot;: (male ?x:0)
  1. Succeeded &quot;male/1&quot;: (male jacob)
Duplicate answer (not recorded): jacob
  1. Backtracking into &quot;male/1&quot;: (male ?x:0)
  1. Failed &quot;male/1&quot;: (male ?x:0)
 (or): Failed (or (male ?x:0) (male ?x:0))
0. Exhausted query: ((or (male ?x) (male ?x)))
[laban jacob]"><pre>&gt; (<span>do</span> (<span>initialize-prolog</span>)
      (<span>&lt;-</span> (<span>male</span> laban))
  (<span>&lt;-</span> (<span>male</span> jacob))
  (<span>binding</span> [*leash* <span>true</span>]
        (<span>?</span> ?x (<span>or</span> (<span>male</span> ?x) (<span>male</span> ?x)))))
<span>0.</span> Processing query: ((<span>or</span> (<span>male</span> ?x) (<span>male</span> ?x)))
 (<span>or</span>): Entering (<span>or</span> (<span>male</span> ?x:0) (<span>male</span> ?x:0))
  <span>1.</span> Entering <span><span>"</span>male/1<span>"</span></span>: (<span>male</span> laban)
  <span>1.</span> Matched head (<span>male</span> laban): (<span>male</span> laban)
  <span>1.</span> Succeeded <span><span>"</span>male/1<span>"</span></span>: (<span>male</span> laban)
Recorded answer: laban
  <span>1.</span> Backtracking into <span><span>"</span>male/1<span>"</span></span>: (<span>male</span> ?x:0)
  <span>1.</span> Succeeded <span><span>"</span>male/1<span>"</span></span>: (<span>male</span> jacob)
Recorded answer: jacob
  <span>1.</span> Backtracking into <span><span>"</span>male/1<span>"</span></span>: (<span>male</span> ?x:0)
  <span>1.</span> Failed <span><span>"</span>male/1<span>"</span></span>: (<span>male</span> ?x:0)
 (<span>or</span>): Backtracking into (<span>or</span> (<span>male</span> ?x:0) (<span>male</span> ?x:0))
  <span>1.</span> Entering <span><span>"</span>male/1<span>"</span></span>: (<span>male</span> laban)
  <span>1.</span> Matched head (<span>male</span> laban): (<span>male</span> laban)
  <span>1.</span> Succeeded <span><span>"</span>male/1<span>"</span></span>: (<span>male</span> laban)
Duplicate answer (<span>not</span> recorded): laban
  <span>1.</span> Backtracking into <span><span>"</span>male/1<span>"</span></span>: (<span>male</span> ?x:0)
  <span>1.</span> Succeeded <span><span>"</span>male/1<span>"</span></span>: (<span>male</span> jacob)
Duplicate answer (<span>not</span> recorded): jacob
  <span>1.</span> Backtracking into <span><span>"</span>male/1<span>"</span></span>: (<span>male</span> ?x:0)
  <span>1.</span> Failed <span><span>"</span>male/1<span>"</span></span>: (<span>male</span> ?x:0)
 (<span>or</span>): Failed (<span>or</span> (<span>male</span> ?x:0) (<span>male</span> ?x:0))
<span>0.</span> Exhausted query: ((<span>or</span> (<span>male</span> ?x) (<span>male</span> ?x)))
[laban jacob]</pre></div>
</li>
<li>
<p dir="auto"><strong>Optional suppression of answers subsumed by other answers</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (initialize-prolog)
      (<- (sister laban rebecca))
      (<- (sister ?x ?y))
      (binding [*leash* true]
        (? [?x ?y] (sister ?x ?y))))
0. Processing query: ((sister ?x ?y))
 1. Entering &quot;sister/2&quot;: (sister laban rebecca)
 1. Matched head (sister laban rebecca): (sister laban rebecca)
 1. Succeeded &quot;sister/2&quot;: (sister laban rebecca)
Recorded answer: [laban rebecca]
 1. Backtracking into &quot;sister/2&quot;: (sister ?x:0 ?y:0)
 1. Succeeded &quot;sister/2&quot;: (sister ?x:0 ?y:0)
Recorded subsuming answer (discarded 1 subsumed answer(s)):  [?x ?y]
 1. Backtracking into &quot;sister/2&quot;: (sister ?x:0 ?y:0)
 1. Failed &quot;sister/2&quot;: (sister ?x:0 ?y:0)
0. Exhausted query: ((sister ?x ?y))
[[?x ?y]]"><pre>&gt; (<span>do</span> (<span>initialize-prolog</span>)
      (<span>&lt;-</span> (<span>sister</span> laban rebecca))
      (<span>&lt;-</span> (<span>sister</span> ?x ?y))
      (<span>binding</span> [*leash* <span>true</span>]
        (<span>?</span> [?x ?y] (<span>sister</span> ?x ?y))))
<span>0.</span> Processing query: ((<span>sister</span> ?x ?y))
 <span>1.</span> Entering <span><span>"</span>sister/2<span>"</span></span>: (<span>sister</span> laban rebecca)
 <span>1.</span> Matched head (<span>sister</span> laban rebecca): (<span>sister</span> laban rebecca)
 <span>1.</span> Succeeded <span><span>"</span>sister/2<span>"</span></span>: (<span>sister</span> laban rebecca)
Recorded answer: [laban rebecca]
 <span>1.</span> Backtracking into <span><span>"</span>sister/2<span>"</span></span>: (<span>sister</span> ?x:0 ?y:0)
 <span>1.</span> Succeeded <span><span>"</span>sister/2<span>"</span></span>: (<span>sister</span> ?x:0 ?y:0)
Recorded subsuming answer (<span>discarded</span> <span>1</span> subsumed answer(<span>s</span>)):  [?x ?y]
 <span>1.</span> Backtracking into <span><span>"</span>sister/2<span>"</span></span>: (<span>sister</span> ?x:0 ?y:0)
 <span>1.</span> Failed <span><span>"</span>sister/2<span>"</span></span>: (<span>sister</span> ?x:0 ?y:0)
<span>0.</span> Exhausted query: ((<span>sister</span> ?x ?y))
[[?x ?y]]</pre></div>
</li>
<li>
<p dir="auto"><strong>Failure (i.e., not system error) when no assertions have been
defined for a called logic predicate and arity</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="> (do (initialize-prolog)
               (binding [*leash* true]
                 (? answer (undefined ?arity-1))))
0. Processing query: ((undefined ?arity-1))
 1. Entering &quot;undefined/1&quot;: (undefined ?arity-1:0)
 1. Failed &quot;undefined/1&quot;: (undefined ?arity-1:0)
0. Exhausted query: ((undefined ?arity-1))
[]"><pre>&gt; (<span>do</span> (<span>initialize-prolog</span>)
               (<span>binding</span> [*leash* <span>true</span>]
                 (<span>?</span> answer (<span>undefined</span> ?arity-1))))
<span>0.</span> Processing query: ((<span>undefined</span> ?arity-1))
 <span>1.</span> Entering <span><span>"</span>undefined/1<span>"</span></span>: (<span>undefined</span> ?arity-1:0)
 <span>1.</span> Failed <span><span>"</span>undefined/1<span>"</span></span>: (<span>undefined</span> ?arity-1:0)
<span>0.</span> Exhausted query: ((<span>undefined</span> ?arity-1))
[]</pre></div>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Grammar</h2><a id="user-content-grammar" aria-label="Permalink: Grammar" href="#grammar"></a></p>
<p dir="auto">In production rules below, ...</p>
<ul dir="auto">
<li>Angle brackets surround a grammar &lt;element&gt;.</li>
<li>&lt;element&gt;+ denotes one or more of &lt;element&gt;.</li>
<li>&lt;element&gt;* denotes zero or more of &lt;element&gt;.</li>
<li>":-" separates rules' left- and right-hand sides.</li>
<li>"|" separates right-hand sides' alternatives.</li>
</ul>
<p dir="auto">&lt;assertion&gt;: <code>(</code>&lt;head-statement&gt;+ &lt;body-statement&gt;*<code>)</code></p>
<p dir="auto">&lt;head-statement&gt; :- &lt;statement&gt;</p>
<p dir="auto">&lt;body-statement&gt; :- &lt;statement&gt;</p>
<p dir="auto">&lt;statement&gt; :- &lt;fixed-arity-statement&gt; | &lt;variable-arity-statement&gt;</p>
<p dir="auto">&lt;fixed-arity-statement&gt; :- <code>(</code>&lt;predicate&gt;+ &lt;argument-term&gt;*<code>)</code></p>
<p dir="auto">&lt;argument-term&gt; :- &lt;term&gt;</p>
<p dir="auto">&lt;variable-arity-statement&gt; :- <code>(</code>&lt;predicate&gt;+ &lt;term&gt;* <code>&amp;</code> &lt;?var&gt;<code>)</code></p>
<p dir="auto">&lt;predicate&gt; :- &lt;special-predicate&gt; | &lt;assertion-predicate&gt;</p>
<p dir="auto">&lt;special-predicate&gt; :- &lt;built-in-predicate&gt; | &lt;transform-predicate&gt;</p>
<p dir="auto">&lt;built-in-predicate&gt; :- &lt;operator&gt; | &lt;Clojure-calling-predicate&gt; | <code>same</code> | <code>different</code> | <code>var</code> | <code>ground</code> | <code>true</code> | <code>false</code></p>
<p dir="auto">&lt;operator&gt; :- <code>and</code> | <code>or</code> | <code>if</code> | <code>not</code> | <code>first</code></p>
<p dir="auto">&lt;Clojure-calling-predicate&gt; :- <code>truthy?</code> | <code>evals-from?</code> | <code>do</code></p>
<p dir="auto">&lt;transform-predicate&gt;: A predicate constant registered using <code>create-predicate-transform</code></p>
<p dir="auto">&lt;assertion-predicate&gt;: A predicate all of whose assertions (if any) are from calls to one of the <code>&lt;-</code>... macros or <code>assert&lt;-</code>... functions</p>
<p dir="auto">&lt;term&gt; :- &lt;transparent-term&gt; | &lt;opaque-term&gt;</p>
<p dir="auto">&lt;transparent-term&gt; :- &lt;?var&gt; | &lt;complex-term&gt;</p>
<p dir="auto">&lt;complex-term&gt; :- &lt;fixed-artiy-complex-term&gt; | &lt;variable-arity-complex-term&gt;</p>
<p dir="auto">&lt;fixed-arity-complex-term&gt; :- <code>(</code>&lt;term&gt;*<code>)</code> | <code>[</code>&lt;term&gt;*<code>]</code></p>
<p dir="auto">&lt;variable-arity-complex-term&gt; :- <code>(</code>&lt;term&gt;* <code>&amp;</code> &lt;?var&gt;<code>)</code> | <code>[</code>&lt;term&gt;* <code>&amp;</code> &lt;?var&gt;<code>]</code></p>
<p dir="auto">&lt;opaque-term&gt; :- Any Clojure value supporting Clojure <code>=</code> (so, not a regex) that is not a transparent term</p>
<p dir="auto">&lt;?var&gt; :- &lt;binding-?var&gt; | &lt;anonymous-?var&gt;</p>
<p dir="auto">&lt;anonymous-?var&gt; :- <code>?</code> | &lt;<code>_</code>-anonymous-?var&gt;</p>
<p dir="auto">&lt;<code>_</code>-anonymous-?var&gt;: Symbol whose name begins with <code>"?_"</code></p>
<p dir="auto">&lt;constant&gt;: An opaque term or a ?var-free complex term</p>
<p dir="auto">&lt;answer-template&gt; :- &lt;term&gt;</p>
<p dir="auto">Note:</p>
<ul dir="auto">
<li>
<p dir="auto">All predicates are terms.</p>
</li>
<li>
<p dir="auto">All ?vars are symbols.</p>
</li>
<li>
<p dir="auto">Statements and assertions, being lists, are terms.</p>
</li>
<li>
<p dir="auto">The arguments of operators are statements.  See our Built-in predicates
section.</p>
</li>
<li>
<p dir="auto">Outside of Clojure-calling predicates' Clojure form arguments:
Symbols appearing in statements are taken at face value, not evaluated.
A symbol used in Prolog otherwise has no relationship to its value
(or the lack thereof) in Clojure.</p>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Additional terminology and conventions</h2><a id="user-content-additional-terminology-and-conventions" aria-label="Permalink: Additional terminology and conventions" href="#additional-terminology-and-conventions"></a></p>
<p dir="auto">Considering for the moment only assertion (not special) predicates,
logic programming <strong>search</strong> processes (or <strong>calls</strong>), in turn from
left to right, each <strong>goal</strong> in an (implicitly) conjunctive <strong>query</strong>
by...</p>
<ul dir="auto">
<li>
<p dir="auto">Identifying assertions whose head statement matches the goal</p>
</li>
<li>
<p dir="auto">Prepending a matching assertion's body statements (AKA the assertion's
<strong>goals</strong>) to the query's remaining goals, after applying the
match's ?var bindings to each such goal</p>
</li>
<li>
<p dir="auto">Processing remaining goals, recursively, ...</p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Backtracking</strong> to remaining matching assertions, when matching a
given assertion <strong>fails</strong></p>
</li>
<li>
<p dir="auto">When no goals remain, <strong>succeed</strong> by...</p>
<ul dir="auto">
<li>
<p dir="auto">Recording an <strong>answer</strong> that realizes the query's <strong>answer
template</strong> according to ?var matches made along the search path</p>
</li>
<li>
<p dir="auto">Backtracking to search for any additional answers.</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p dir="auto">Search generally proceeds depth-first and from left to right.</p>
<p dir="auto">We <strong>match</strong> two statements or transparent terms by associating their
respective terms and ?vars, position by position, with consistent
matching for non-anonymous ?vars.  In matching (AKA "unification"),
...</p>
<ul dir="auto">
<li>
<p dir="auto">A ?var matches a ?var, a transparent term, or a constant.</p>
</li>
<li>
<p dir="auto">Constants match equal (Clojure <code>=</code>) constants.</p>
</li>
<li>
<p dir="auto">Complex terms match recursively.</p>
</li>
<li>
<p dir="auto">A <strong>tail ?var</strong> (last in a statement or complex term, and preceded by
<code>&amp;</code>) matches the (possibly empty) seq or vector of terms remaining in
the parallel traversal of its opposing complex term.</p>
</li>
</ul>
<p dir="auto">One term <strong>subsumes</strong> another if the two terms match and---considering
?var occurrences---the former is at least as general as the latter.</p>
<p dir="auto">A <strong>ground</strong> term has no ?vars (none outside of any opaque included
terms, where they are not treated as ?vars).</p>
<p dir="auto">Here---and in leash (execution tracing) reports---the notation
&lt;predicate&gt;/&lt;integer&gt; (e.g., <code>sibling/2</code>) refers to the
&lt;integer&gt; arity of &lt;predicate&gt;.</p>
<p dir="auto">By convention, we take the first argument of a 2-ary statement to be the
predicate's <strong>subject</strong>, the second to be its <strong>object</strong>.  Thus, in
<code>(brother Jane John)</code>, we take <code>Jane</code> to be the subject (or agent),
<code>John</code> to be the object (or patient).  ("A brother of Jane is John.")</p>
<p dir="auto">A <strong>unit</strong> assertion has only a head statement, no body statements.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">API</h2><a id="user-content-api" aria-label="Permalink: API" href="#api"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Initialization</h3><a id="user-content-initialization" aria-label="Permalink: Initialization" href="#initialization"></a></p>
<p dir="auto">Clear the knowledge base and any existing special predicate
transforms, then execute the transform definitions in function
<code>create-predicate-transforms</code>.</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Knowledge base and predicate transform contexts</h3><a id="user-content-knowledge-base-and-predicate-transform-contexts" aria-label="Permalink: Knowledge base and predicate transform contexts" href="#knowledge-base-and-predicate-transform-contexts"></a></p>
<p dir="auto">Bind <code>*assertions*</code> and/or <code>*predicate-transforms*</code>, per their doc
strings, to set up contexts for different knowledge bases and/or
transform definitions.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Creating assertions---macros and functions</h3><a id="user-content-creating-assertions---macros-and-functions" aria-label="Permalink: Creating assertions---macros and functions" href="#creating-assertions---macros-and-functions"></a></p>
<p dir="auto">We provide four assertion creation functions and four corresponding
macros.  The macros, which don't require quoting arguments, so are
simpler to use at the REPL or from top level in a file, take their
statement arguments at top-level.  The functions take theirs in a list.</p>
<p dir="auto">An assertion's head statement...</p>
<ul dir="auto">
<li>
<p dir="auto">May not be a ?var.</p>
</li>
<li>
<p dir="auto">May be variadic, but must require arity &gt;= 1 (i.e., must not start
with <code>&amp;</code>).</p>
</li>
<li>
<p dir="auto">Must not have a built-in special predicate in its predicate
position.  We don't flag assertions to transform predicates;
however, once a predicate has been used on the left-hand side of a
transform's defining production rule, we refrain from exercising
same-predicate assertions.</p>
</li>
</ul>
<p dir="auto">See the functions' doc strings for other fine points.</p>
<p dir="auto">The following forms have equivalent effect: Add the assertion with
head statement <code>(sibling ?x ?y)</code> and lone goal statement <code>(brother ?x ?y)</code>
to the knowledge base.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(<- (sibling ?x ?y) (brother ?x ?y)) ; Macro.

(assert<- '((sibling ?x ?y) (brother ?x ?y))) ; Function."><pre>(<span>&lt;-</span> (<span>sibling</span> ?x ?y) (<span>brother</span> ?x ?y)) <span><span>;</span> Macro.</span>

(<span>assert&lt;-</span> '((<span>sibling</span> ?x ?y) (<span>brother</span> ?x ?y))) <span><span>;</span> Function.</span></pre></div>
<p dir="auto">The following place their constant-predicate, fixed-arity assertion
first for consideration in search.  We provide no explicit control
over the order in which (less conventional) assertions with variadic,
variable, or non-ground complex head statement predicates are examined
during backtracking search.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(<-0 (sibling ?x ?y) (brother ?x ?y)) ; Macro.

(assert<-0 '((sibling ?x ?y) (brother ?x ?y))) ; Function."><pre>(<span>&lt;-0</span> (<span>sibling</span> ?x ?y) (<span>brother</span> ?x ?y)) <span><span>;</span> Macro.</span>

(<span>assert&lt;-0</span> '((<span>sibling</span> ?x ?y) (<span>brother</span> ?x ?y))) <span><span>;</span> Function.</span></pre></div>
<p dir="auto">The following clear <code>sibling/2</code> before making their assertion.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(<-- (sibling ?x ?y) (brother ?x ?y)) ; Macro.

(assert<-- '((sibling ?x ?y) (brother ?x ?y))) ; Function."><pre>(<span>&lt;--</span> (<span>sibling</span> ?x ?y) (<span>brother</span> ?x ?y)) <span><span>;</span> Macro.</span>

(<span>assert&lt;--</span> '((<span>sibling</span> ?x ?y) (<span>brother</span> ?x ?y))) <span><span>;</span> Function.</span></pre></div>
<p dir="auto">The following clear the entire knowledge base of all but special
transforms before making their assertion.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(<--- (sibling ?x ?y) (brother ?x ?y)) ; Macro.

(assert<--- '((sibling ?x ?y) (brother ?x ?y))) ; Function."><pre>(<span>&lt;---</span> (<span>sibling</span> ?x ?y) (<span>brother</span> ?x ?y)) <span><span>;</span> Macro.</span>

(<span>assert&lt;---</span> '((<span>sibling</span> ?x ?y) (<span>brother</span> ?x ?y))) <span><span>;</span> Function.</span></pre></div>
<p dir="auto">The following---when employed systematically---avoid
subsumed-subsuming assertion pairs in the knowledge base, by declining
to add would-be-subsumed assertions and by retracting subsumed
assertions.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(<-_ (sibling ?x ?y) (brother ?x ?y)) ; Macro.

(assert<-_ '((sibling ?x ?y) (brother ?x ?y))) ; Function."><pre>(<span>&lt;-_</span> (<span>sibling</span> ?x ?y) (<span>brother</span> ?x ?y)) <span><span>;</span> Macro.</span>

(<span>assert&lt;-_</span> '((<span>sibling</span> ?x ?y) (<span>brother</span> ?x ?y))) <span><span>;</span> Function.</span></pre></div>
<p dir="auto">We retrieve assertions once upon calling a predicate, and assertion or
retraction operations otherwise relevant to that predicate will be
reflected during the call.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Retrieving assertions</h3><a id="user-content-retrieving-assertions" aria-label="Permalink: Retrieving assertions" href="#retrieving-assertions"></a></p>
<p dir="auto">We provide three functions for retrieving assertions by matching their
heads against a statement pattern.  Each returns a vector containing the
knowledge base's assertions whose head statements exhibit the function's
required relationship to <code>statement-pattern</code>.</p>
<p dir="auto">Get assertions whose head matches <code>statement-pattern</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(get-matching-head-assertions statement-pattern)"><pre>(<span>get-matching-head-assertions</span> statement-pattern)</pre></div>
<p dir="auto">Get assertions whose head is subsumed by <code>statement-pattern</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(get-subsumed-head-assertions statement-pattern)"><pre>(<span>get-subsumed-head-assertions</span> statement-pattern)</pre></div>
<p dir="auto">Get assertions whose head subsumes <code>statement-pattern</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(get-subsuming-head-assertions statement-pattern)"><pre>(<span>get-subsuming-head-assertions</span> statement-pattern)</pre></div>
<p dir="auto">We provide two similar functions that match assertions against a
full assertion pattern.</p>
<p dir="auto">Get assertions entirely subsumed by <code>assertion-pattern</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(get-subsumed-assertions assertion-pattern)"><pre>(<span>get-subsumed-assertions</span> assertion-pattern)</pre></div>
<p dir="auto">Get assertions entirely subsuming <code>assertion-pattern</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(get-subsuming-assertions assertion-pattern)"><pre>(<span>get-subsuming-assertions</span> assertion-pattern)</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Retracting assertions</h3><a id="user-content-retracting-assertions" aria-label="Permalink: Retracting assertions" href="#retracting-assertions"></a></p>
<p dir="auto">We provide two functions, and two corresponding macros, for retracting
assertions by matching their head statements against a pattern and
one function to retract assertions entirely matching an assertion pattern.</p>
<p dir="auto">The following have equivalent effect.  As in the assertion retrieval
functions, <code>statement-pattern</code> refers to assertions' head statements.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(retract-subsumed-head-assertions statement-pattern)

(--- statement-pattern)"><pre>(<span>retract-subsumed-head-assertions</span> statement-pattern)

(<span>---</span> statement-pattern)</pre></div>
<p dir="auto">The following have equivalent effect.  Here, <code>assertion</code> must be equal
(Clojure <code>=</code>, including equal ?var symbols) to an assertion in the
knowledge base, for the latter to be retracted.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(retract-specific-assertion assertion) ; Function.

(-- statement-pattern) ; Macro."><pre>(<span>retract-specific-assertion</span> assertion) <span><span>;</span> Function.</span>

(<span>--</span> statement-pattern) <span><span>;</span> Macro.</span></pre></div>
<div dir="auto" data-snippet-clipboard-copy-content="(retract-subsumed-assertions '((?pred deceased-person)))"><pre>(<span>retract-subsumed-assertions</span> '((<span>?pred</span> deceased-person)))</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Querying</h2><a id="user-content-querying" aria-label="Permalink: Querying" href="#querying"></a></p>
<p dir="auto">The following macro and function are equivalent---except that the
macro does not support keyword arguments (instead, bind the
default-value globals).  With a truthy limit, terminate search upon
having recorded so many answers.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(? answer-template &amp; goals) ; Macro.

(query answer-template goals ; Function.
       :limit *answer-count-limit*
       :discard-subsumed *discard-subsumed-answers*)"><pre>(<span>?</span> answer-template &amp; goals) <span><span>;</span> Macro.</span>

(<span>query</span> answer-template goals <span><span>;</span> Function.</span>
       <span>:limit</span> *answer-count-limit*
       <span>:discard-subsumed</span> *discard-subsumed-answers*)</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Leashing</h2><a id="user-content-leashing" aria-label="Permalink: Leashing" href="#leashing"></a></p>
<p dir="auto">For now, leashing is an all-or-nothing proposition.  Perform any query
with <code>*leash*</code> bound truthy, for goal-by-goal reports describing
execution.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(binding [*leash* true]
  ;; Query form(s) in here.
  )"><pre>(<span>binding</span> [*leash* <span>true</span>]
  <span><span>;</span>; Query form(s) in here.</span>
  )</pre></div>
<p dir="auto">As demonstrated in our Highlights section and in
<code>test/prolog/leash-tests.txt</code>, leashing reports...</p>
<ul dir="auto">
<li>Entry into and success or failure of goals</li>
<li>Backtracking into...
<ul dir="auto">
<li>Remaining matching assertions of goals with assertion predicates</li>
<li>Remaining disjuncts (remaining alternatives goals) of <code>or</code> goals</li>
</ul>
</li>
<li><code>first</code> operator-induced cuts</li>
<li>Application of predicate transforms</li>
<li>The discovery of answers and their disposition</li>
<li>Search termination upon reaching an answer count limit.</li>
</ul>
<p dir="auto">Leashing also...</p>
<ul dir="auto">
<li>Indexes reports per depth of assertion nesting</li>
<li>Indicates the nesting of built-in predicates for the current assertion</li>
<li>Left-pads reports per nesting of assertion and built-in predicate goals.</li>
</ul>
<p dir="auto">When <code>*pprint-leash-statements*</code> is truthy, ...<code>"Entering"</code>, ...</p>
<ul dir="auto">
<li><code>"Matched head"</code> leash reports are omitted.</li>
<li><code>"Succeeded"</code>, and <code>"Failed"</code> leash reports pprint (vs. print)
statement content, starting on a new line, with indentation, as in...</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="clolog.core> (binding [*leash* true
                       *pprint-leash-statements* true]
               (query '[?h ?w ?z] '((zebra ?h ?w ?z)) :limit 1))
0. Processing query: ((zebra ?h ?w ?z))
 1. Entering `zebra`/3:
    (zebra ?h:0 ?w:0 ?z:0)

  1. (same): Entering...
             (same
              ?h:0
              ((house norwegian ?anon-0:1 ?anon-1:1 ?anon-2:1 ?anon-3:1)
               ?anon-4:1
               (house ?anon-5:1 ?anon-6:1 ?anon-7:1 milk ?anon-8:1)
               ?anon-9:1
               ?anon-10:1))

  1. (same): Succeeded...
             (same
              ((house norwegian ?anon-0:1 ?anon-1:1 ?anon-2:1 ?anon-3:1)
               ?anon-4:1
               (house ?anon-5:1 ?anon-6:1 ?anon-7:1 milk ?anon-8:1)
               ?anon-9:1
               ?anon-10:1)
              ((house norwegian ?anon-0:1 ?anon-1:1 ?anon-2:1 ?anon-3:1)
               ?anon-4:1
               (house ?anon-5:1 ?anon-6:1 ?anon-7:1 milk ?anon-8:1)
               ?anon-9:1
               ?anon-10:1))

  2. Entering `member`/2:
     (member
      (house englishman ?anon-11:1 ?anon-12:1 ?anon-13:1 red)
      ((house norwegian ?anon-0:1 ?anon-1:1 ?anon-2:1 ?anon-3:1)
       ?anon-4:1
       (house ?anon-5:1 ?anon-6:1 ?anon-7:1 milk ?anon-8:1)
       ?anon-9:1
       ?anon-10:1))"><pre>clolog.core&gt; (<span>binding</span> [*leash* <span>true</span>
                       *pprint-leash-statements* <span>true</span>]
               (<span>query</span> '[?h ?w ?z] '((<span>zebra</span> ?h ?w ?z)) <span>:limit</span> <span>1</span>))
<span>0.</span> Processing query: ((<span>zebra</span> ?h ?w ?z))
 <span>1.</span> Entering `zebra`/<span>3</span>:
    (<span>zebra</span> ?h:0 ?w:0 ?z:0)

  <span>1.</span> (<span>same</span>): Entering...
             (<span>same</span>
              ?h:0
              ((<span>house</span> norwegian ?anon-0:1 ?anon-1:1 ?anon-2:1 ?anon-3:1)
               ?anon-4:1
               (<span>house</span> ?anon-5:1 ?anon-6:1 ?anon-7:1 milk ?anon-8:1)
               ?anon-9:1
               ?anon-10:1))

  <span>1.</span> (<span>same</span>): Succeeded...
             (<span>same</span>
              ((<span>house</span> norwegian ?anon-0:1 ?anon-1:1 ?anon-2:1 ?anon-3:1)
               ?anon-4:1
               (<span>house</span> ?anon-5:1 ?anon-6:1 ?anon-7:1 milk ?anon-8:1)
               ?anon-9:1
               ?anon-10:1)
              ((<span>house</span> norwegian ?anon-0:1 ?anon-1:1 ?anon-2:1 ?anon-3:1)
               ?anon-4:1
               (<span>house</span> ?anon-5:1 ?anon-6:1 ?anon-7:1 milk ?anon-8:1)
               ?anon-9:1
               ?anon-10:1))

  <span>2.</span> Entering `member`/<span>2</span>:
     (<span>member</span>
      (<span>house</span> englishman ?anon-11:1 ?anon-12:1 ?anon-13:1 red)
      ((<span>house</span> norwegian ?anon-0:1 ?anon-1:1 ?anon-2:1 ?anon-3:1)
       ?anon-4:1
       (<span>house</span> ?anon-5:1 ?anon-6:1 ?anon-7:1 milk ?anon-8:1)
       ?anon-9:1
       ?anon-10:1))</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Built-in predicates</h2><a id="user-content-built-in-predicates" aria-label="Permalink: Built-in predicates" href="#built-in-predicates"></a></p>
<p dir="auto">We support the following built-in predicates.  We borrow some notation
from our Grammar section and allow ourselves to introduce types via
obvious naming (e.g., a &lt;condition-statement&gt; is a
&lt;statement&gt;---distinguished merely by its role/argument position in the
built-in predicate <code>if</code>).  We invoke the exclued middle: If a goal
does not succeed, then it fails.</p>
<ul dir="auto">
<li>
<p dir="auto"><code>(and</code> &lt;statement&gt;*<code>)</code> succeeds if, proceeding from left to right,
every conjunct statement succeeds.</p>
</li>
<li>
<p dir="auto"><code>(or</code> &lt;statement&gt;*<code>)</code> succeeds if, proceeding from left to
right, some disjunct statement succeeds (and remaining disjuncts are
ignored).  Backtracking will explore first alternative ways to
satisfy a failing statement, then subsequent statements.</p>
</li>
<li>
<p dir="auto"><code>(if</code> &lt;condition-statement&gt; &lt;then-statement&gt; &lt;else-statement&gt;<code>)</code>
succeeds if either:</p>
<ul dir="auto">
<li>
<p dir="auto">The condition statement succeeds and the then statement succeeds (in which
case we do not examine the else statement under the bindings for
the condition statement's ?vars)</p>
</li>
<li>
<p dir="auto">The condition statement fails and the else statement succeeds (in which
case we do not examine <code>then-statement</code>).</p>
</li>
</ul>
<p dir="auto">Backtracking will explore alternative ways to satisfy the argument
statements.</p>
</li>
<li>
<p dir="auto"><code>(not</code> &lt;statement&gt;<code>)</code> succeeds if the wrapped statement fails.</p>
</li>
<li>
<p dir="auto"><code>(first</code> &lt;statement&gt;<code>)</code> succeeds if the argument statement succeeds.  This
form (AKA Prolog "cut") skips backtracking to explore other ways of
satisfying the statement, upon its first success.</p>
</li>
<li>
<p dir="auto"><code>(same</code> &lt;term&gt; &lt;term&gt;<code>)</code> succeeds if the two terms match.</p>
</li>
<li>
<p dir="auto"><code>(true)</code> succeeds unconditionally.</p>
</li>
<li>
<p dir="auto"><code>(false)</code> fails unconditionally.</p>
</li>
<li>
<p dir="auto"><code>(var</code> &lt;term&gt;<code>)</code> succeeds if the argument term is a ?var.</p>
</li>
<li>
<p dir="auto"><code>(ground \&lt;term\&gt;)</code> succeeds if the argument term is ground.</p>
</li>
<li>
<p dir="auto"><code>(truthy?</code> &lt;form&gt;<code>)</code> succeeds if the argument form is ground and
the result of its evaluation (in Clojure) is truthy.</p>
</li>
<li>
<p dir="auto"><code>(evals-from?</code> &lt;term&gt; &lt;form&gt;<code>)</code> succeeds if the argument form is
ground and the result of its evaluation (in Clojure) matches the
argument term (often a ?var).</p>
</li>
<li>
<p dir="auto"><code>(do</code> &lt;form&gt;*<code>)</code> succeeds if the whole <code>do</code> expression is ground,
evaluating it (in Clojure) for side effect, only.</p>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Creating special transforms</h2><a id="user-content-creating-special-transforms" aria-label="Permalink: Creating special transforms" href="#creating-special-transforms"></a></p>
<p dir="auto">The function call below---performed by <code>initialize-prolog</code>---seeds
Clolog with some transforms for predicates we have found useful in
other Lisp-based Prologs.  As we intend this facility to support
customization, you may wish to copy our version of
<code>create-predicate-transforms</code> and edit it to your liking.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(create-predicate-transforms)"><pre>(<span>create-predicate-transforms</span>)</pre></div>
<p dir="auto"><code>create-predicate-transforms</code> includes calls to
<code>create-predicate-transform</code>.  Each call is a production rule.  During
search, a goal matching <code>source-statement</code> is transformed---via
de-referencing---into <code>target-statement</code>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="(create-predicate-transform source-statement target-statement)"><pre>(<span>create-predicate-transform</span> source-statement target-statement)</pre></div>
<p dir="auto">The execution machinery for transform predicates applies the first
matching transform irrevocably, with no backtracking in case of
failure.  Compared to an assertion predicate defined using using one
assertion per transform and the same statements in each
transform-assertion pair, it is as if the transform predicate's goal
always were wrapped with <code>first</code>.  We consider predicate transforms to
be "macros" for Prolog, affording us cleaner leashing than would
similar assertion predicates.  Assertion predicatess more verbose
leashing may nonetheless be helpful in prototyping and debugging
prospective transforms.  It may help to call
<code>create-predicate-transforms</code> with optional argument <code>debugging?</code>
truthy---and either disregard any effects resulting from backtracking
into prospective transform predicates ultimately intended or (as in
<code>tests/clolog/core_tests.clj</code>) avoid backtracking by limiting the
count of answers found.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Potential future enhancements</h2><a id="user-content-potential-future-enhancements" aria-label="Permalink: Potential future enhancements" href="#potential-future-enhancements"></a></p>
<p dir="auto">We might pursue some of the following ideas towards increasing
expressivity/leashing, robustness/scale, and efficiency, given
motivating use cases.</p>
<ul dir="auto">
<li>
<p dir="auto">Potential enhancements to expressiveness and leashing:</p>
<ul dir="auto">
<li>
<p dir="auto">Accommodate non-ground Clojure expressions in Clojure-calling
forms---in case a called form would use these in crafting
subsequent goal (e.g.).</p>
</li>
<li>
<p dir="auto">Make the local/lexical environment accessible within called
Clojure forms.</p>
</li>
<li>
<p dir="auto">Support RDF, RDFS, selected aspects of OWL (e.g., inverses,
functional dependencies).</p>
</li>
<li>
<p dir="auto">Selective leashing, considering (e.g.) predicate, arity,
report type (e.g., answer disposition).</p>
</li>
<li>
<p dir="auto">Selective detail in leashing, e.g., re <code>if</code> subgoals</p>
</li>
<li>
<p dir="auto">Greater precision in leash report prefixes for n-ary operators
<code>and</code>, <code>or</code> (e.g., indexing potentially like-predicate conjuncts,
disjuncts).</p>
</li>
</ul>
</li>
<li>
<p dir="auto">Potential enhancements to robustness and scale</p>
<ul dir="auto">
<li>
<p dir="auto">Error-check user/application inputs more pervasively.</p>
</li>
<li>
<p dir="auto">Support Prolog stack limits, breakpoints, stepping/debugger
integration.</p>
</li>
<li>
<p dir="auto">Support database integration---access to unit ground assertions.</p>
</li>
</ul>
</li>
<li>
<p dir="auto">Potential efficiency enhancements</p>
<ul dir="auto">
<li>
<p dir="auto">Perform further indexing, including trie-based indexing.</p>
</li>
<li>
<p dir="auto">Qualify seq/vector matching with early check for compatible
lengths of candidate-matching seqs and vectors.</p>
</li>
<li>
<p dir="auto">Decline to explore alternative satisfactions of a ground goal.</p>
</li>
<li>
<p dir="auto">Skirt search branches that cannot instantiate an answer template
?var.</p>
</li>
<li>
<p dir="auto">Support parallelism and/or laziness.</p>
</li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Copyright © 2023 Robert Carl Schrag</p>
<p dir="auto">This program and the accompanying materials are made available under
the terms of the Eclipse Public License 2.0 which is available at
<a href="http://www.eclipse.org/legal/epl-2.0" rel="nofollow">http://www.eclipse.org/legal/epl-2.0</a>.</p>
<p dir="auto">This Source Code may also be made available under the following
Secondary Licenses when the conditions for such availability set forth
in the Eclipse Public License, v. 2.0 are satisfied: GNU General
Public License as published by the Free Software Foundation, either
version 2 of the License, or (at your option) any later version, with
the GNU Classpath Exception which is available at
<a href="https://www.gnu.org/software/classpath/license.html" rel="nofollow">https://www.gnu.org/software/classpath/license.html</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Generate videos in Gemini and Whisk with Veo 2 (109 pts)]]></title>
            <link>https://blog.google/products/gemini/video-generation/</link>
            <guid>43695592</guid>
            <pubDate>Tue, 15 Apr 2025 17:02:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.google/products/gemini/video-generation/">https://blog.google/products/gemini/video-generation/</a>, See on <a href="https://news.ycombinator.com/item?id=43695592">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>

    
    





    

    
      

<div data-analytics-module="{
    &quot;module_name&quot;: &quot;Hero Menu&quot;,
    &quot;section_header&quot;: &quot;Generate videos in Gemini and Whisk with Veo 2&quot;
  }">
  
  <div>
      <div>
          
            <p>Apr 15, 2025</p>
          
          
            <p data-reading-time-render="">[[read-time]] min read</p>
          
        </div>
      
        <p>
          Transform text-based prompts into high-resolution eight-second videos, accessible to Gemini Advanced subscribers. Plus, Google One AI Premium subscribers can use Whisk Animate to turn images into eight-second animated clips.
        </p>
      
    </div>
  
  <div>
  <p>Olivia Sturman</p>
  
    <p>
      Product Manager, Google Labs
    </p>
  
  
</div>
</div>

    

    
      <div>
      <p>
        <video aria-label="Video showcasing how you can generate videos in Gemini" autoplay="" loop="" muted="" playsinline="" poster="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_images/GenerateVideos_Static1_1920x1080.png" src="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/Sized_Gemini_VEO_HeroVideo_16x9_Youtube_v04_1.mp4" type="video/mp4">
          Sorry, your browser doesn't support embedded videos, but don't worry, you can
            <a href="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/Sized_Gemini_VEO_HeroVideo_16x9_Youtube_v04_1.mp4">download it</a>
            and watch it with your favorite video player!
        </video>
      </p>
      
    </div>

    

    
    <div data-reading-time="true" data-component="uni-article-body">

            
              





<uni-article-speakable page-title="Generate videos in Gemini and Whisk with Veo 2" listen-to-article="Listen to article" data-date-modified="2025-04-15T17:00:02.675540+00:00" data-tracking-ids="G-HGNBTNCHCQ,G-6NKTLKV14N" data-voice-list="en.ioh-pngnat:Cyan,en.usb-pngnat:Lime" data-script-src="https://www.gstatic.com/readaloud/player/web/api/js/api.js"></uni-article-speakable>

            

            
            
<!--article text-->

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Generate videos in Gemini and Whisk with Veo 2&quot;
         }"><p data-block-key="hzfux">Starting today, Gemini Advanced users can generate and share videos using our state-of-the-art video model, <a href="https://blog.google/technology/google-labs/video-image-generation-update-december-2024/">Veo 2</a>. In Gemini, you can now translate text-based prompts into dynamic videos. Google Labs is also making Veo 2 available through <a href="http://labs.google/whisk">Whisk</a>, a generative AI experiment that allows you to create new images using both text and image prompts, and now animate them into videos.</p><h2 data-block-key="6uggf">How to create videos with Gemini</h2><p data-block-key="emffm">Veo 2 represents a <a href="https://deepmind.google/technologies/veo/veo-2/">leap forward</a> in video generation, designed to produce high-resolution, detailed videos with cinematic realism. By better understanding real-world physics and human motion, it delivers fluid character movement, lifelike scenes and finer visual details across diverse subjects and styles.</p><p data-block-key="4v3c0">To generate videos, select Veo 2 from the model dropdown
<a data-ga4-analytics-superscript-click="" data-target="inline text" href="#footnote-1" id="footnote-source-1"><sup>1</sup></a>
 in Gemini. This feature creates an eight-second video clip at 720p resolution, delivered as an MP4 file in a 16:9 landscape format. There is a monthly limit on how many videos you can create, but we will notify you as you approach it.</p><p data-block-key="ebedu"><a href="https://gemini.google/overview/video-generation/">Creating videos</a> with Gemini is simple: just describe the scene you want to create — whether it's a short story, a visual concept, or a specific scene — and Gemini will bring your ideas to life. The more detailed your description, the more control you have over the final video. This opens up a world of fun creative possibilities, letting your imagination go wild to picture unreal combinations, explore varied visual styles from realism to fantasy, or quickly narrate short visual ideas.</p><p data-block-key="c6t8m">One of the best parts of creating is sharing with others. Sharing your video on mobile is easy: simply tap the share button to quickly upload engaging short videos to platforms like TikTok and YouTube Shorts.</p></div>
  

  
    








<uni-image-carousel section-header="Generate videos in Gemini and Whisk with Veo 2" images="[
    
      {
        
          &quot;src&quot;: [&quot; https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/Gemini_Generated_Video__37_aDEwjss.mp4 &quot;],
        
        &quot;alt&quot;: &quot;Animation of two figures in white exosuits casting light in a cave&quot;,
        &quot;isVideo&quot;: true,
        &quot;videoTitle&quot;: &quot;Gemini 1&quot;
      },
    
      {
        
          &quot;src&quot;: [&quot; https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/Mouse_Reads_Video_Generated.mp4 &quot;],
        
        &quot;alt&quot;: &quot;Animation of an adorable mouse reading a book&quot;,
        &quot;isVideo&quot;: true,
        &quot;videoTitle&quot;: &quot;Gemini 2&quot;
      },
    
      {
        
          &quot;src&quot;: [&quot; https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/Gemini_Generated_Video__13.mp4 &quot;],
        
        &quot;alt&quot;: &quot;Animation of cliffs on a beach&quot;,
        &quot;isVideo&quot;: true,
        &quot;videoTitle&quot;: &quot;pacific view&quot;
      },
    
      {
        
          &quot;src&quot;: [&quot; https://storage.googleapis.com/gweb-uniblog-publish-prod/original_videos/KR_Veo2_4.mp4 &quot;],
        
        &quot;alt&quot;: &quot;Animation of pixelated ice cream melting&quot;,
        &quot;isVideo&quot;: true,
        &quot;videoTitle&quot;: &quot;KR_Veo2_4.mp4&quot;
      }
    
  ]">
  
    
      <div slot="caption-slot-0">
        <p data-block-key="27cbd">Prompt: A wide, slow-panning shot of an enormous glacial cavern, bathed in eerie twilight. Pale cyan light filters from above, illuminating frozen candy figures within the ice walls. Two figures in white exosuits, their helmet lights casting beams, trudge through the center. Capture the cavern's scale and stillness.</p>
      </div>
    
  
    
      <div slot="caption-slot-1">
        <p data-block-key="b8xgg">Prompt: An animated shot of a tiny mouse with oversized glasses, reading a book by the light of a glowing mushroom in a cozy forest den.</p>
      </div>
    
  
    
      <div slot="caption-slot-2">
        <p data-block-key="b8xgg">Prompt: Aerial shot of a grassy cliff onto a sandy beach where waves crash against the shore, a prominent sea stack rises from the ocean near the beach, bathed in the warm, golden light of either sunrise or sunset, capturing the serene beauty of the Pacific coastline.</p>
      </div>
    
  
    
      <div slot="caption-slot-3">
        <p data-block-key="b8xgg">Prompt: Time-lapse of a voxel-style ice cream melting under a clear blue sky. The pink, grey, and white scoops slowly lose their shape, dripping down the yellow, blocky cone held by a large, voxel hand with a blue sleeve. Focus on the melting process, highlighting the changing texture and form of the voxel elements as the ice cream deforms and drips, creating a colorful, pixelated melt against the vibrant blue backdrop.</p>
      </div>
    
  
</uni-image-carousel>

  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Generate videos in Gemini and Whisk with Veo 2&quot;
         }">
        <p data-block-key="be4dh">Video generation is now rolling out to Gemini Advanced subscribers globally on web and mobile, starting today and continuing over the next few weeks. This feature is available in all languages Gemini supports. Try it out today at <a href="http://gemini.google.com/">gemini.google.com</a>.</p>
      </div>
  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Generate videos in Gemini and Whisk with Veo 2&quot;
         }"><h2 data-block-key="be4dh">How Whisk Animate brings your images to life</h2><p data-block-key="qrhp"><a href="https://blog.google/technology/google-labs/whisk/">Introduced in December</a>, Whisk is a Google Labs experiment that helps you quickly explore and visualize new ideas using both text and image prompts. Today, you can animate your creations with Whisk Animate.</p><p data-block-key="2bhtn">Whisk Animate lets you turn your images into vivid eight-second videos using Veo 2. It’s available for Google One AI Premium subscribers globally starting today. Subscribers can try it at <a href="http://labs.google/whisk">labs.google/whisk</a>.</p></div>
  

  
    
  
    


  <uni-youtube-player-article index="5" thumbnail-alt="Video of Whisk Animate" video-id="2yYDI-p5aGs" video-type="video">
  </uni-youtube-player-article>


  


  

  
    <div data-component="uni-article-paragraph" role="presentation" data-analytics-module="{
           &quot;module_name&quot;: &quot;Paragraph&quot;,
           &quot;section_header&quot;: &quot;Generate videos in Gemini and Whisk with Veo 2&quot;
         }"><h2 data-block-key="be4dh">How we approach safety</h2><p data-block-key="94fmg">We’ve taken important steps to make video generation a safe experience. This includes extensive <a href="https://blog.google/technology/safety-security/googles-ai-red-team-the-ethical-hackers-making-ai-safer/">red teaming</a> and evaluation aimed at preventing the generation of content that violates our <a href="https://gemini.google/policy-guidelines/">policies</a>. Additionally, all videos generated with Veo 2 are marked with <a href="https://deepmind.google/technologies/synthid/">SynthID</a>, a digital watermark embedded in each frame, which indicates the videos are AI-generated.</p><p data-block-key="a9rsg">Gemini's outputs are primarily determined by user prompts and like any generative AI tool, there may be instances where it generates content that some individuals find objectionable. We’ll continue to listen to your feedback through the thumbs up/down buttons and make ongoing improvements. For more details, you can <a href="https://gemini.google/our-approach/">read about our approach on our website</a>.</p><p data-block-key="2dv5b">We hope you enjoy making videos in the Gemini app and Whisk as <a href="https://one.google.com/about/ai-premium/">Google One AI Premium subscribers</a>.</p></div>
  

  
    

  
    





<div role="form" data-component="uni-subscribe" data-analytics-module="{
    &quot;module_name&quot;: &quot;Newsletter&quot;,
    &quot;section_header&quot;: &quot;Get more stories from Google in your inbox.&quot;
  }">
    
    
    <div id="newsletter-form--form">
      <form data-method="POST" data-action="https://services.google.com/fb/submissions/thekeywordnewsletterprodv2/">
        <h2 id="subscribe_box_label">
          <span>Get more stories from Google in your inbox.</span>
          
        </h2>
        
      </form>
    </div>
    
    <div>
      <div>
        <p tabindex="-1" role="status" aria-live="off" aria-atomic="false">
          Done. Just one step more.
        </p>
        <p>
          Check your inbox to confirm your subscription.
        </p>
        <p>You are already subscribed to our newsletter.</p>
      </div>
      <p>
        You can also subscribe with a
        
        
      </p>
    </div>
  </div>

  

  


            
            

            
              




            
          </div>
  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Doge Is Far Short of Its Goal, and Still Overstating Its Progress (104 pts)]]></title>
            <link>https://www.nytimes.com/2025/04/13/us/politics/doge-contracts-savings.html</link>
            <guid>43693584</guid>
            <pubDate>Tue, 15 Apr 2025 14:50:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2025/04/13/us/politics/doge-contracts-savings.html">https://www.nytimes.com/2025/04/13/us/politics/doge-contracts-savings.html</a>, See on <a href="https://news.ycombinator.com/item?id=43693584">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2025/04/13/us/politics/doge-contracts-savings.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[ICE Agents Realize They Arrested Wrong Teen, Say 'Take Him Anyway' (130 pts)]]></title>
            <link>https://www.newsweek.com/merwil-gutierrez-ice-wrong-teen-el-salvador-2059783</link>
            <guid>43693531</guid>
            <pubDate>Tue, 15 Apr 2025 14:47:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.newsweek.com/merwil-gutierrez-ice-wrong-teen-el-salvador-2059783">https://www.newsweek.com/merwil-gutierrez-ice-wrong-teen-el-salvador-2059783</a>, See on <a href="https://news.ycombinator.com/item?id=43693531">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>Federal immigration authorities apprehended a 19-year-old in New York despite realizing he was not the intended target.</p><p>The young man, Merwil Gutiérrez, was later deported to El Salvador's notorious super prison, despite his family's insistence that he has no gang ties or criminal history.</p><p>His father, Wilmer Gutiérrez, is now searching for answers after his son was snatched by Immigration and Customs Enforcement (<a href="https://www.newsweek.com/topic/ice" data-sys="1">ICE</a>) agents.</p><p>"The officers grabbed him and two other boys right at the entrance to our building. One said, 'No, he's not the one,' like they were looking for someone else. But the other said, 'Take him anyway,'" Wilmer told <em>Documented, "</em>an independent, nonprofit newsroom dedicated to reporting for immigrant communities in New York City."</p><figure><div>
<picture width="1200" height="800"><source type="image/webp" media="(min-width: 992px)" srcset="https://d.newsweek.com/en/full/2627197/cecot.webp?w=790&amp;f=11c86a37ac0fdc5231227790fab2d18f 1x"><source type="image/jpeg" media="(min-width: 992px)" srcset="https://d.newsweek.com/en/full/2627197/cecot.jpg?w=790&amp;f=11c86a37ac0fdc5231227790fab2d18f 1x"><source type="image/webp" media="(min-width: 768px)" srcset="https://d.newsweek.com/en/full/2627197/cecot.webp?w=900&amp;f=0a36197be5923039d06e7e286e9f3e75 1x"><source type="image/jpeg" media="(min-width: 768px)" srcset="https://d.newsweek.com/en/full/2627197/cecot.jpg?w=900&amp;f=0a36197be5923039d06e7e286e9f3e75 1x"><source type="image/webp" media="(min-width: 481px)" srcset="https://d.newsweek.com/en/full/2627197/cecot.webp?w=790&amp;f=11c86a37ac0fdc5231227790fab2d18f 1x"><source type="image/jpeg" media="(min-width: 481px)" srcset="https://d.newsweek.com/en/full/2627197/cecot.jpg?w=790&amp;f=11c86a37ac0fdc5231227790fab2d18f 1x"><source type="image/webp" media="(min-width: 0px)" srcset="https://d.newsweek.com/en/full/2627197/cecot.webp?w=450&amp;f=fc07c3695b9f62ca2b32a9b1e3252929 1x"><source type="image/jpeg" media="(min-width: 0px)" srcset="https://d.newsweek.com/en/full/2627197/cecot.jpg?w=450&amp;f=fc07c3695b9f62ca2b32a9b1e3252929 1x"><source type="image/webp" srcset="https://d.newsweek.com/en/full/2627197/cecot.webp?w=1200&amp;f=365a7123f1b2ea961c3a5d887e1d968b"><img loading="lazy" id="i2627197" src="https://d.newsweek.com/en/full/2627197/cecot.jpg?w=1200&amp;f=365a7123f1b2ea961c3a5d887e1d968b" alt="CECOT" width="1200" height="800"></picture></div><figcaption>
<span id="short-cap-description">Inmates remain in a cell at the Counter-Terrorism Confinement Centre (CECOT) mega-prison, where hundreds of members of the MS-13 and 18 Street gangs are being held, in Tecoluca, El Salvador on January 27, 2025. </span>

<span>Marvin Recinos/Getty</span>
</figcaption>  </figure><h2><strong>Why It Matters</strong></h2><p>El Salvador's President Nayib Bukele responded Monday to questions about the deportation of Kilmar Abrego Garcia, stating that he lacked the authority to return individuals sent by the U.S. to the Terrorism Confinement Center (CECOT).</p><p>This remark came amid growing criticism of the government's handling of due process, opponents accusing the administration of bypassing legal safeguards in its treatment of deportees. Critics argue that Garcia's deportation reflects a broader pattern of disregarding constitutional rights, sparking concerns over the erosion of legal protections in the country's justice system.</p><p>President <a href="https://www.newsweek.com/topic/donald-trump" target="_blank" rel="noopener">Donald Trump</a> has pledged to conduct the largest deportation operation in American history as his administration looks to remove millions of undocumented immigrants. The White House has said anyone living in the country unlawfully is considered a "criminal" by the federal government. Since the beginning of Trump's second term, thousands of migrants have been arrested.</p><h2><strong>What To Know</strong></h2><p>Gutiérrez, who fled instability in Venezuela and was pursuing an asylum case in the U.S, was detained in the Bronx by ICE agents conducting a targeted operation.</p><p>According to his father, the agents initially acknowledged he was not the individual they were seeking—but chose to detain him anyway.</p><p>Just days later, Gutiérrez was deported to El Salvador, where he was transferred to a high security prison known for housing members of violent gangs, including the transnational criminal group <em>Tren de Aragua</em>.</p><p>His family and attorneys say he has no criminal record, no gang affiliations, and "not even a tattoo," which authorities often use to profile alleged gang members.</p><p>Wilmer Gutiérrez last spoke to his son on March 16 during a brief call allowed by police. He had spent days searching for information, visiting police stations and courthouses, only to be told there was no record of his son.</p><p>During the call, Merwil Gutiérrez said he was being held in Pennsylvania and expected to be transferred to Texas before returning to Venezuela. That transfer never happened.</p><p>Wilmer Gutiérrez later discovered through a news report that his son had been deported to El Salvador under the Alien Enemies Act of 1798. Videos circulating online showed detainees in harsh conditions, their heads shaved and marched to cells.</p><p>"I could have understood if he'd been sent back to Venezuela," he said. "But why to a foreign country he's never even been to?"</p><p>In May 2023, Wilmer Gutiérrez left Venezuela with his son Merwil and nephew Luis, traveling through Colombia and the Darién Gap into Panama. The monthlong journey eventually brought them to Ciudad Juárez, Mexico, where they applied for Temporary Protected Status (TPS) through the CBP One app. While waiting for their immigration appointment, they took temporary jobs and slept near the border to keep their place in line.</p><p>Before leaving Venezuela, Wilmer had lived in Los Teques, near Caracas, working for the state oil company PDVSA and later running a cellphone repair business. However ongoing political instability and a collapsing economy made it increasingly difficult to support his family, including his three children and his mother, who was battling cancer.</p><h2><strong>What People Are Saying</strong></h2><p><strong>William Parra, an immigration attorney from Inmigración Al Día said:</strong> "Merwil was detained for hanging out with friends and was at the wrong place at the wrong time. ICE was not looking for him, nor is there any evidence whatsoever that Merwil was in any gang."</p><p><strong>Aaron Reichlin-Melnick, senior fellow at the American Immigration Council said in a post on X, formerly Twitter</strong>: "19-year-old Merwil Gutierrez was grabbed off the street in New York City days before he was sent to El Salvador. His family insists he has no connection to <a href="https://www.newsweek.com/topic/tren-de-aragua" data-sys="1">Tren de Aragua</a>. He doesn't even have any tattoos."</p><h2><strong>What Happens Next</strong></h2><p>Gutiérrez's legal team is calling for immediate diplomatic intervention to secure his release and safe return.</p>  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to Win an Argument with a Toddler (455 pts)]]></title>
            <link>https://seths.blog/2025/04/how-to-win-an-argument-with-a-toddler/</link>
            <guid>43693402</guid>
            <pubDate>Tue, 15 Apr 2025 14:38:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://seths.blog/2025/04/how-to-win-an-argument-with-a-toddler/">https://seths.blog/2025/04/how-to-win-an-argument-with-a-toddler/</a>, See on <a href="https://news.ycombinator.com/item?id=43693402">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
						
			
<p>You can’t.</p>



<p>That’s because toddlers don’t understand what an argument is and aren’t interesting in having one.</p>



<p>Toddlers (which includes defensive bureaucrats, bullies, flat earthers, folks committed to a specific agenda and radio talk show hosts) may indicate that they’d like to have an <a href="https://youtu.be/ohDB5gbtaEQ?si=AvfXoVSSSAzU04WW">argument</a>, but they’re actually engaging in connection, noise, play acting or a chance to earn status. It can be fun to be in opposition, to harangue or even to use power to change someone’s position.</p>



<p>An argument, though, is an exchange of ideas that ought to surface insight and lead to a conclusion.</p>



<p>If you’re regularly having arguments with well-informed people of goodwill, you will probably ‘lose’ half of them–changing your mind based on what you’ve learned. <em>If you’re not changing your mind, it’s likely you’re not actually having an argument</em> (or you’re hanging out with the wrong people.) While it can be fun to change someone else’s position, it’s also a gift to learn enough to change ours.</p>



<p>The toddler puts on a show of having an argument, but they are holding a tantrum in reserve. If they ‘win’ the argument, no tantrum is needed. If they lose, they can tell themselves that they tried but the other person deserved the tantrum because they didn’t listen.</p>



<p>“Tell me about other strongly-held positions you’ve changed as the result of a discussion like this one…” is a direct way to start a conversation about the argument you’re proposing to have. “What sort of information would make it likely you could see this in a different way?”</p>



<p>It probably doesn’t pay to argue over things we have chosen to believe as part of our identity.</p>
			

			

		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Philosophy Major Snatched by ICE During Citizenship Interview (114 pts)]]></title>
            <link>https://dailynous.com/2025/04/15/philosophy-major-snatched-by-ice-during-citizenship-interview/</link>
            <guid>43693375</guid>
            <pubDate>Tue, 15 Apr 2025 14:36:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dailynous.com/2025/04/15/philosophy-major-snatched-by-ice-during-citizenship-interview/">https://dailynous.com/2025/04/15/philosophy-major-snatched-by-ice-during-citizenship-interview/</a>, See on <a href="https://news.ycombinator.com/item?id=43693375">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>			<article>

				
<header>
				
			
	
	<hr>
			
	</header><!-- .article__header -->
				<section>
					<p>Mohsen Mahdawi, a philosophy major at Columbia University who is due to graduate later this semester, was attending a US citizenship application interview in Vermont on Monday when Immigration and Customs Enforcement (ICE) agents wearing hoods and masks took him from the building, put him into an unmarked car, and drove off.<span id="more-53466"></span></p>
<p><img fetchpriority="high" decoding="async" src="https://dailynous.com/wp-content/uploads/2025/04/mahdawi-mohsen.png" alt="" width="690" height="649" srcset="https://dailynous.com/wp-content/uploads/2025/04/mahdawi-mohsen.png 1672w, https://dailynous.com/wp-content/uploads/2025/04/mahdawi-mohsen-300x282.png 300w, https://dailynous.com/wp-content/uploads/2025/04/mahdawi-mohsen-1024x963.png 1024w, https://dailynous.com/wp-content/uploads/2025/04/mahdawi-mohsen-768x723.png 768w, https://dailynous.com/wp-content/uploads/2025/04/mahdawi-mohsen-1536x1445.png 1536w, https://dailynous.com/wp-content/uploads/2025/04/mahdawi-mohsen-400x376.png 400w" sizes="(max-width: 690px) 100vw, 690px"></p>
<p>His current whereabouts are “unknown”, said his lawyer, according to the <a href="https://www.bbc.com/news/articles/cwy0332y7xzo" target="_blank" rel="noopener">BBC</a>.</p>
<p>Mahdawi is a green card holder. According to the BBC:</p>
<p><em>His lawyer, Luna Droubi, said: “The Trump administration detained Mohsen Mahdawi in direct retaliation for his advocacy on behalf of Palestinians and because of his identity as a Palestinian.</em></p>
<p><em>“His detention is an attempt to silence those who speak out against the atrocities in Gaza. It is also unconstitutional.”</em></p>
<p><em>The attorney applied to a federal court for a temporary restraining order to prevent US immigration authorities moving Mr Mahdawi out of Vermont or expelling him from the US.</em></p>
<p><em>Judge William Sessions, an Obama appointee, quickly granted that order.</em></p>
<p><em>The court filing says Mr Mahdawi was born in a refugee camp in the West Bank and moved to the US in 2014.</em></p>
<p><em>It describes the philosophy major as a committed Buddhist who believes in “non-violence and empathy as a central tenet of his religion”.</em></p>
<p>Mahdawi was interviewed last year by&nbsp;<em>60 Minutes&nbsp;</em>about the student protests at Columbia regarding Israel’s response to Hamas’s attack on October 7th, 2023. In the interview he says:</p>
<p><em>To be anti-Semitic is unjust. And the fight for the freedom of Palestine and the fight against anti-Semitism go hand in hand, because injustice anywhere is a threat to justice everywhere.</em></p>
<p>A clip of the interview is below.</p>
<p><iframe title="YouTube video player" src="https://www.youtube.com/embed/grj328-hlhA?si=Ij16DfujLKKlXHQm" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"></iframe></p>
<p>(via Shen-Yi Liao)</p>
<hr>
<p><strong>UPDATE:&nbsp;</strong>A reader passed along the public Facebook post of <a href="https://history.ucla.edu/person/david-myers/" target="_blank" rel="noopener">David Myers</a>, professor of history, holder of the Sady and Ludwig Kahn Chair in Jewish History, and former director of the Center for Jewish Studies at UCLA:</p>
<div dir="auto">
<p><em>Coming off of two days of Passover, I was horrified to discover that my friend, Columbia student Mohsen Mahdawi, was arrested. I met Mohsen at a meeting in late spring 2024 and have been in touch with him ever since. He is a remarkable and humane person who experienced the worst of Israel’s occupation as a young kid in the Jenin refugee camp, took up arms as a teenager, and then decided to foreswear the path of armed struggle for non-violence. He became an activist in the Palestinian solidarity movement at Columbia, all the while believing in the importance of engaging with and talking to those with whom he disagreed. Let’s be clear: Mohsen was arrested not because he was a supporter of violence or a threat to national security but FOR THE CRIME OF BEING PALESTINIAN. His commitment to non-violence was not always popular with some in the Palestinian solidarity movement, and his fierce criticism of the occupation led others to us accuse him–quite scandalously–of being antisemitic. But he had the courage of his convictions, rooted in his core belief in the dignity of all human life.</em></p>
<p><em>His arrest is a profound miscarriage of justice–and in line with the scandalous harassment, arrest, and deportation of others who have dared to express support for the principle of Palestinian liberation. He is indeed a political prisoner of a rogue regime that is descending ever further into authoritarianism. If this is the kind of person they deem a threat, there is no end to their perfidy. Those who care about the rule of law, freedom of expression, and support for the cause of justice in Israel-Palestine cannot remain silent.</em></p>
<p>Professor Myers’ post is <a href="https://www.facebook.com/david.myers.31586" target="_blank" rel="noopener">here</a>.</p>
</div>
				</section>
				<!-- .article__content -->
				
<!-- .article__footer -->

    
    
    
    
    
			</article>
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hacking the Postgres Wire Protocol (118 pts)]]></title>
            <link>https://pgdog.dev/blog/hacking-postgres-wire-protocol</link>
            <guid>43693326</guid>
            <pubDate>Tue, 15 Apr 2025 14:33:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pgdog.dev/blog/hacking-postgres-wire-protocol">https://pgdog.dev/blog/hacking-postgres-wire-protocol</a>, See on <a href="https://news.ycombinator.com/item?id=43693326">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        
        <p><strong>Apr 14th, 2025</strong><br>Lev Kokotov</p>
       <p>PgDog is a network proxy and it can see every byte sent between Postgres and the clients. It understands SQL and can infer where queries should go, without requiring changes to application code.</p>

<p>In this article, we discuss how we handle the Postgres wire protocol and manipulate it to serve queries to multiple databases at the same time.</p>

<h3 id="protocol-basics">Protocol basics</h3>

<p>Postgres has two ways to send queries over the network:</p>

<ul>
  <li>Simple protocol</li>
  <li>Extended protocol</li>
</ul>

<p>The simple protocol is called like that on purpose: it’s very simple. It has just one message, called <code>Query</code> which contains everything the server needs to execute it:</p>

<div><pre><code>'Q' | \x00\x00\x00&amp; | SELECT * FROM users WHERE id = 25\0
</code></pre></div>

<p>Postgres messages have a standard format. Each message starts with a single ASCII letter (1 byte), identifying the message type. It’s followed by a 32-bit signed integer, indicating the length of the payload, in bytes, with 4 bytes added for itself. The payload is unique for each message.</p>

<p>To route a query, PgDog needs to understand two things:</p>

<ul>
  <li>Does the query read or write data?</li>
  <li>Does it contain a sharding key, and if so, what is it’s value?</li>
</ul>

<p>To make this work, we need some help. To answer the first question, we could, theoretically, just look at the first word, and if it’s a “SELECT”, assume read intent. While this would work in most cases, we’ll miss some obvious ones, like CTEs.</p>

<p>The tricky part is finding the sharding key. For this, we need to actually interpret the query using a tool that understands SQL syntax. That’s called a parser, and luckily the Rust ecosystem already has a great library, called <code>pg_query</code>. The parser produces an Abstract Syntax Tree, a data structure we can read to find what we need:</p>

<div><pre><code><span>let</span> <span>ast</span> <span>=</span> <span>pg_query</span><span>::</span><span>parse</span><span>(</span><span>"SELECT * FROM users WHERE id = 25"</span><span>);</span>
</code></pre></div>

<p><code>pg_query</code> is special. It doesn’t actually implement parsing SQL. It works by extracting C source code directly from Postgres and wraps it with a nice Rust interface. This allows PgDog to understand <em>all</em> queries that Postgres can.</p>

<p>PgDog is all about sharding Postgres. Once we locate the sharding key in a query, we have to figure out what to do with it. Let’s do a quick detour into Postgres partitions.</p>

<h5 id="the-sharding-function">The sharding function</h5>

<p>Picking the right sharding function is critical. It’s not something you can easily change later. One thing I learned from doing this at Instacart: pick a sharding function which is available in multiple places. Let me explain.</p>

<p>In the real world, whatever you build, won’t be the <em>only</em> way to ingest or read data to/from your system. Either you don’t want to touch production (yet) or you just need to move some things around ad-hoc, you want engineers to be able to pre-process data in advance and have multiple ways to talk to your system.</p>

<p>For this reason, PgDog doesn’t implement a custom sharding function. It’s using the hashing function used in Postgres declarative partitions:</p>

<div><pre><code><span>CREATE</span> <span>TABLE</span> <span>users</span> <span>(</span><span>id</span> <span>BIGINT</span><span>,</span> <span>email</span> <span>VARCHAR</span><span>)</span>
<span>PARTITION</span> <span>BY</span> <span>HASH</span><span>(</span><span>id</span><span>);</span>
</code></pre></div>

<p>If you know the number of shards, you can create the same number of data partitions and just COPY data into the table. If you’re using FOREIGN tables with <code>postgres_fdw</code>, you can interact with your sharded database directly.</p>

<p>To make this work in PgDog, we took a page from the <code>pg_query</code> playbook. We could have implemented the function ourselves, but it’s much better to just take the code from Postgres and wrap it with a Rust interface.</p>

<p>Rust makes this pretty easy. Using the <code>cc</code> (C/C++ compiler) library and by copy/pasting some code, we have a working FFI interface to <code>hashfn.c</code> straight out of the Postgres source code tree. All we need is the right data to pass in, and apply the modulo operation to get the shard number.</p>



<p>Our example has only one filter: <code>id = 25</code>. This is the simplest case, but it’s also the most common one. Getting this value from SQL, using <code>pg_query</code>, is straightforward. Once we have it, we can pass it to the sharding function and we have a shard number.</p>

<center>
  <img src="https://pgdog.dev/assets/images/wire-protocol-query.jpg" width="100%" height="auto" alt="Extended protocol">
</center>

<p>UPDATE and DELETE queries work the same way. They all have (an optional) WHERE-clause, and if it has a filter with our sharding key, we can handle it. If it doesn’t, the query is sent to all shards (more on that below).</p>

<p>More complex examples, like <code>IN (1, 2, 3)</code> or <code>id != 25</code> can be handled as well. For the former, we can hash all values and route the query to the matching shards. For the latter, we send the query to all shards. Some cases of course won’t work, e.g., <code>WHERE id &lt; 25</code>. That’s too many values to hash and this query will hit all shards anyway.</p>

<p>INSERT statements are a bit more interesting and come in two variants:</p>



<p>The first one specifies the column order, so we can just extract the sharding key directly. The second doesn’t, so we have to fetch the schema from Postgres and infer the column order. This is slightly more involved, but still a solvable problem. Not something we’re handling yet, but it’s on the roadmap.</p>

<p>ORMs like Rails and Django tend to be explicit and provide fully-qualified columns and table names for all queries. This makes our job easier, but we can’t always rely on everyone using an ORM and we certainly don’t want to impose arbitrary limitations on our users.</p>

<p>Simple protocol is simple, but things get more interesting if the client uses prepared statements and the extended protocol.</p>

<h5 id="extended-protocol">Extended protocol</h5>

<p>The extended protocol has several messages. For our purposes, we are interested in just two:</p>

<ul>
  <li><code>Parse</code> which has the query and parameter placeholders</li>
  <li><code>Bind</code> which contains the parameter values</li>
</ul>

<p>Separating the two allows Postgres to parse the query once and execute it multiple times with different parameters. This is great for query performance and to avoid SQL injection attacks, but it requires us to do a couple extra steps to get what we need:</p>

<center>
  <img src="https://pgdog.dev/assets/images/wire-protocol-bind.jpeg" width="100%" height="auto" alt="Extended protocol">
</center>

<p>If prepared statements are used, clients typically send one <code>Parse</code> message per query. PgDog parses it and stores the AST in its memory cache. The statements are disambiguated at the global level, so even if multiple clients send the same one, they are evaluated only once.</p>

<p>This optimization is critical to make this fast in production. Parsing SQL isn’t free and we only do it when we have to. The message itself is saved in a memory buffer, while PgDog waits for the actual parameter values to arrive.</p>

<p><code>Bind</code> message(s) follow for each execution of the statement. If the statement is anonymous (unnamed), we only get one <code>Bind</code> message. In either case, we know where the sharding key is located, based on the numbered parameters in the query.</p>

<p>With the sharding key hashed, we can forward both messages to a Postgres server connection and begin executing the query.</p>

<p>Both simple and extended protocols require PgDog to build an internal state of the connection and keep track of messages that flow through. As long as we keep the protocol in sync, we can manipulate what Postgres receives and what messages are sent back to the client. This becomes relevant when we start talking to multiple servers at once.</p>

<h3 id="cross-shard-queries">Cross-shard queries</h3>

<p>Postgres query response contains multiple messages. They are, in order of appearance:</p>

<ul>
  <li><code>RowDescription</code>, which contains column names and their data types</li>
  <li><code>DataRow</code> has the actual values, with one message for each row in the result set</li>
  <li><code>CommandComplete</code> indicates the query finished running and how many rows were affected</li>
  <li><code>ReadyForQuery</code> indicates the server is ready for the next query</li>
</ul>

<center>
  <img src="https://pgdog.dev/assets/images/wire-protocol-response.jpg" width="100%" height="auto" alt="Extended protocol">
</center>

<p>Since PgDog is an independent proxy, Postgres servers have no idea they are executing a multi-shard query. Each server connection will return all of these messages in that order. However, except the <code>DataRow</code> message, the client expects only one message of each kind.</p>

<p>Each message in this pipeline is handled differently. For <code>RowDescription</code>, only the last one is returned. All shards are expected to have the same schema, so these messages should be identical between shards. If they are not, the data types must be compatible, e.g., VARCHAR and TEXT.</p>

<p>There are a few more nuances here. For example, if databases have custom data types created by extensions, like pgvector or PostGIS, their OIDs won’t match across different Postgres databases, and we need to make sure clients are only aware of one set. If text encoding is used (it is, by default), mixing BIGINT and INTEGER can work, although I wouldn’t recommend it. While languages like Ruby and Python don’t distinguish between the two, languages like Rust and Java definitely do.</p>

<p><code>DataRow</code> messages are handled in two possible ways. If the query has an ORDER BY clause, the messages are buffered. Once all of them are received, they are sorted accordingly and returned in the right order to the client. If the rows aren’t ordered, PgDog sends them to the client immediately, in whatever order it receives them from the servers.</p>

<center>
  <img src="https://pgdog.dev/assets/images/wire-protocol-sorting.jpg" width="100%" height="auto" alt="Extended protocol">
</center>

<p>This is where the understanding of SQL starts to take shape. Extracting column values is great, but we need to do more to make sure the query is executed correctly. PgDog isn’t a full coordinator yet, but more features are added every week.</p>

<p><code>CommandComplete</code> message is rewritten to reflect the correct row count. We do this by parsing its contents and summing the number of rows across all messages we received from all shards. <code>ReadyForQuery</code> is forwarded as-is (only the last message) and the cross-shard query is complete.</p>

<p>Protocol manipulation works on both sides of the conversation. PgDog doesn’t stop at manipulating server messages. It goes further and can modify client messages to create a powerful cross-shard data ingestion pipeline.</p>

<h3 id="distributed-copy">Distributed COPY</h3>

<p>The fastest way to write data into Postgres is to use COPY. It’s a special command that can read CSV, text or binary data and write it directly into a table. It can be used to bulk ingest records and to move data between DBs.</p>

<div><pre><code><span>COPY</span> <span>users</span> <span>(</span><span>id</span><span>,</span> <span>email</span><span>)</span> <span>FROM</span> <span>STDIN</span> <span>CSV</span> <span>HEADER</span><span>;</span>
</code></pre></div>

<pre><code>id,email
65,<a href="https://pgdog.dev/cdn-cgi/l/email-protection" data-cfemail="94fcfdd4e4f3f0fbf3baf0f1e2">[email&nbsp;protected]</a>
25,<a href="https://pgdog.dev/cdn-cgi/l/email-protection" data-cfemail="f8949d8eb8889f9c979fd69c9d8e">[email&nbsp;protected]</a>
</code></pre>

<p>Postgres clients send this command using two messages:</p>

<ul>
  <li><code>Query</code> to send the COPY command itself</li>
  <li>A series of <code>CopyData</code> messages that contain the actual rows</li>
</ul>

<p>In a sharded database, this command requires special handling. For each row, PgDog extracts the sharding key, hashes it, and routes it to the right server:</p>

<center>
  <img src="https://pgdog.dev/assets/images/wire-protocol-copy.jpg" width="100%" height="auto" alt="Extended protocol">
</center>

<p>Clients typically send data in chunks, irrespective of encoding boundaries. For example, each <code>CopyData</code> message created by <em>psql</em> is 4096 bytes long and can break CSV records. To make this work, PgDog handles partial CSV records and streaming binary data by buffering one complete row at a time. <code>CopyData</code> messages coming out of PgDog always contain one single and complete row.</p>

<h5 id="performance">Performance</h5>

<p>Distributed COPY, in theory, can linearly scale ingestion speeds for sharded Postgres. With each new shard, the speed of ingestion should increase by <em>1/N</em> where <em>N</em> is the number of shards. Since PgDog is using Tokio and multiple threads, it’s possible to run it on a machine with multiple CPUs and parallelize the hashing and manipulation of data rows. A single ingestion pipeline can push gigabytes of data per second into Postgres, while maintaining schema and data integrity.</p>

<h3 id="next-steps">Next steps</h3>

<p>PgDog is just getting started. While it can manipulate the frontend/backend wire protocol used by clients and Postgres servers, we are going further and applying the same technique to manipulate logical replication streams.</p>

<p>Since PgDog does all this at the network layer, it can run anywhere including managed clouds like AWS RDS, and works with Postgres clones like Aurora, AlloyDB and Cockroach.</p>

<p>If this is interesting, <a href="https://pgdog.dev/cdn-cgi/l/email-protection#4b23220b3b2c2f242c652f2e3d">get in touch</a>! We are looking for early adopters and design partners. We always appreciate <a href="https://github.com/pgdogdev/pgdog">a star</a> on GitHub.</p>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[You cannot have our user's data (105 pts)]]></title>
            <link>https://sourcehut.org/blog/2025-04-15-you-cannot-have-our-users-data/</link>
            <guid>43692998</guid>
            <pubDate>Tue, 15 Apr 2025 14:13:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sourcehut.org/blog/2025-04-15-you-cannot-have-our-users-data/">https://sourcehut.org/blog/2025-04-15-you-cannot-have-our-users-data/</a>, See on <a href="https://news.ycombinator.com/item?id=43692998">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
        <p>As you may have noticed, SourceHut has deployed <a href="https://anubis.techaro.lol/">Anubis</a> to parts of our
services to protect ourselves from aggressive LLM crawlers.<sup id="fnref:1"><a href="#fn:1" role="doc-noteref">1</a></sup> Much ink has been
spilled on the subject of the LLM problem elsewhere, and we needn’t revisit that
here. I do want to take this opportunity, however, to clarify how SourceHut
views this kind of scraper behavior more generally, and how we feel that the
data entrusted to us by our users ought to be used.</p>
<p>Up until this point, we have offered some quiet assurances to this effect in a
few places, notably our terms of service and robots.txt file. Quoting the
former:</p>
<blockquote>
<p>You may use automated tools to obtain public information from the services for
the purposes of archival or open-access research. You may not use this data
for recruiting, solicitation, or profit.</p></blockquote>
<p>This has been part of our terms of service since they were originally written in
2018. With the benefit of hindsight, I might propose a different wording to
better reflect our intentions – but we try not to update the terms of service
too often because we have to send all users an email letting them know we’ve
done so. I have a proposed edit pending to include in the next batch of changes
to the terms which reads as follows:</p>
<blockquote>
<p>You may use automated tools to access public SourceHut data in bulk (i.e.
crawlers, robots, spiders, etc) provided that:</p>
<ol>
<li>Your software obeys the rules set forth in robots.txt</li>
<li>Your software uses a User-Agent header which clearly identifies your
software and its operators, including your contact information</li>
<li>Your software requests data at a rate which does not negatively affect the
performance of our services for other users</li>
</ol>
<p>You may <em>only</em> collect this data for one or more of the following purposes:</p>
<ul>
<li>Search engine indexing</li>
<li>Open-access research</li>
<li>Archival</li>
</ul>
<p>You may not use automated tools to collect SourceHut data for solicitation,
profit, training machine learning models, or any other purpose not enumerated
here without explicit permission from SourceHut staff.</p></blockquote>
<p>This text, or something similar, will be included in our next update to the
terms of service, which will probably ship around the time we finish setting up
our new European billing system.</p>
<p>A careful observer can see our views on scrapers elaborated on in our
<a href="https://git.sr.ht/robots.txt">robots.txt</a> file as well. It begins as follows:</p>
<pre tabindex="0"><code># Our policy
#
# Allowed:
# - Search engine indexers
# - Archival services (e.g. IA)
#
# Disallowed:
# - Marketing or SEO crawlers
# - Anything used to feed a machine learning model
# - Bots which are too agressive by default. This is subjective, if you annoy
#   our sysadmins you'll be blocked.
#
# If you do not respect robots.txt or you deliberately circumvent it we will
# block your subnets and leave a bag of flaming dog shit on your mother's front
# porch.
</code></pre><p>One can infer from the tone of the last sentence that attempting to enforce
robots.txt is a frustrating, thankless task for our sysadmins.</p>
<p>To add to these resources, I’d like to elaborate a bit more on our views on
scrapers for you today. Scrapers have been a thorn in the side of sysadmins for
a very long time, but it’s particularly important as LLM scrapers seize the
entire Internet to feed into expensive, inefficient machine learning models –
ignoring the copyright (<a href="https://nitter.net/mitsuhiko/status/1410886329924194309">or copyleft</a>, as it were) of the data as
they go. The serious costs and widespread performance issues and outages caused
by reckless scrapers has been on everyone’s mind in the sysadmin community as of
late, and has been the subject of much discussion online.</p>
<p>Aside from the much-appreciated responses of incredulity towards LLM operators,
and support and compassion for sysadmins from much of the community, a
significant minority views this problem as less important than we believe it to
be. Many of their arguments reduce to victim blaming – that it’s not that hard
to handle this volume of traffic, that we should be optimized to better deal
with it, that we need more caching or to improve our performance, or that we
should pay a racketeer like CloudFlare to make the problem go away. Some suggest
that sysadmins should be reaching out to LLM companies to offer them more
efficient ways to access our data to address the problem.</p>
<p>Of course, not all software is necessarily able to be as resource efficient as
Joe Naysayer’s static website. Moreover, LLM companies are not particularly
interested in the more expensive route of building software integrations for
each data source they scrape when they could go the cheap route of making us all
pay for the overhead; nor should us sysadmins have to spend the finite time and
resources at <em>our</em> disposal (often much more modest than the resources available
to these LLM companies) negotiating with terrorists and building bespoke
solutions for <em>them</em>.</p>
<p>More important than any of these concerns is to address the underlying
assumption: that these companies are entitled to this data. This assumption has
varied roots, as benign as misplaced Libertarian ideals and as unhinged as the
Rationalism cult belief that AGI is around the corner and everyone ought to be
participating as best they can for the benefit of untold numbers of unborn
future-humans.</p>
<p>It is our view that these companies are <em>not</em> entitled to the data we provide,
nor is anyone else. The intended audience for the publicly available data on
SourceHut is users of and contributors to open source software who are accessing
the data for those purposes. Indeed some profitable use of public SourceHut data
is permitted, as one is entitled to by the <a href="https://opensource.org/osd">Open Source Definition</a>, but we
do not wish to provide our data in bulk for any business, megacorp or startup
alike, who wants to feed it into an LLM or do anything else with it which does
not directly serve our mission, which is to improve open source software.</p>
<p>We would not come to a special arrangement to share this data with any of these
companies, either, even in the unlikely event that they offered to pay for it.
We are funded by paid subscriptions, not by selling our user’s data. It is not
ours to sell – something GitHub, with its own LLM products, would do well to
consider more carefully. The data we have been entrusted with belongs to our
users, and is dedicated to the commons, and we take our role as the stewards of
this data seriously. It is our duty to ensure that it is used in the service of
our users best interests. <a href="https://sourcehut.org/blog/2019-10-23-srht-puts-users-first/">We have always put them first</a>.</p>


      </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[America Underestimates the Difficulty of Bringing Manufacturing Back (226 pts)]]></title>
            <link>https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back</link>
            <guid>43692677</guid>
            <pubDate>Tue, 15 Apr 2025 13:50:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back">https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back</a>, See on <a href="https://news.ycombinator.com/item?id=43692677">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page" role="main">
        
          
<article id="sections" data-page-sections="5fd69ad7154d727871f4df3b">
  
  
    
    


  
  


<div data-content-field="main-content" data-item-id="" data-test="page-section" data-section-theme="white-bold" data-section-id="5fd69ad7154d727871f4df41" data-controller="SectionWrapperController" data-current-styles="{
&quot;imageOverlayOpacity&quot;: 0.15,
&quot;backgroundWidth&quot;: &quot;background-width--full-bleed&quot;,
&quot;sectionHeight&quot;: &quot;section-height--medium&quot;,
&quot;customSectionHeight&quot;: 10,
&quot;horizontalAlignment&quot;: &quot;horizontal-alignment--center&quot;,
&quot;verticalAlignment&quot;: &quot;vertical-alignment--middle&quot;,
&quot;contentWidth&quot;: &quot;content-width--medium&quot;,
&quot;customContentWidth&quot;: 50,
&quot;sectionTheme&quot;: &quot;white-bold&quot;,
&quot;sectionAnimation&quot;: &quot;none&quot;,
&quot;backgroundMode&quot;: &quot;image&quot;
}" data-current-context="{
&quot;video&quot;: {
&quot;playbackSpeed&quot;: 0.5,
&quot;filter&quot;: 1,
&quot;filterStrength&quot;: 0,
&quot;zoom&quot;: 0,
&quot;videoSourceProvider&quot;: &quot;none&quot;
},
&quot;backgroundImageId&quot;: null,
&quot;backgroundMediaEffect&quot;: null,
&quot;divider&quot;: null,
&quot;typeName&quot;: &quot;blog-masonry&quot;
}" data-animation="none">
  <article id="article-">
  
    
    
    
    <div data-block-type="2" data-border-radii="{&quot;topLeft&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;topRight&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;bottomLeft&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;bottomRight&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0}}" id="item-67f27d5d63c035294cca874b" data-layout-label="Post Body" data-type="item">
  <p>On April 2nd, 2025, our president announced major new taxes on imports from foreign countries (“tariffs”), ranging from 10% to 49%. The stated goal is to bring manufacturing back to the United States and to “make America wealthy again”.</p><p>These tariffs will not work. In fact, they may even do the opposite, fail to bring manufacturing back and make America poorer in the process.</p><p>This article gives the 14 reasons why this is the case, how the United States could bring manufacturing back if it were serious about doing so, and what will ultimately happen with this wrongheaded policy</p><p>I’ve been in the manufacturing industry for 15 years. I’ve manufactured in the USA and in China. I worked in a factory in China. I speak and read Chinese. I’ve purchased millions of dollars worth of goods from the US and China, but also Vietnam, Indonesia, Taiwan, and Cambodia. I’ve also visited many factories in Mexico and consider myself a student of how countries rise and fall.</p><p>In other words, unlike many who have voiced an opinion on this topic, I know what I am talking about. And that’s why I felt compelled to write this article. I had to do it. I’m a first generation American and I love my country and it pains me to see it hurtling at high speed towards an economic brick wall. This article is an attempt to hit the brakes.</p><h3>The 14 Reasons Why these Tariffs Will Not Bring Manufacturing Back</h3><ol data-rte-list="default"><li><div><p><strong>They’re not high enough</strong></p><p>A tariff is a tax on an imported product. For example, when Apple imports an iPhone that was made in China it declares to the United States government what it paid to make that product overseas. Let’s say it’s $100. When there is a 54% tariff, Apple pays $100 to the manufacturer in China and $54 to the US government when importing. In this simplified example, an iPhone used to cost Apple $100, but it now costs $154. For every dollar Apple spends, Apple needs to make profit. So Apple sells iPhones to stores for double what it pays for them. And stores sell iPhones to consumers like you and me for double what it pays for them, as well.</p><p><strong>Before the tariffs, prices looked like this:</strong> <br>Apple bought iPhones it designed for $100<br>Apple sold iPhones for $200 to stores<br>Stores sold iPhones to you and me for $400</p><p><strong>After the tariffs, prices look like this:</strong><br>Apple bought iPhones for $154 ($100 + $54 in import taxes)<br>Apple sells those iPhones for $308 (double what it paid)<br>Stores sell those iPhones to you and me for $616 (double what they paid)</p><p>Now that you know what a tariff is, let me tell to you why they aren’t high enough to bring manufacturing back to the United States.</p><p>In short, manufacturing in the United States is so expensive and our supply chain (we’ll explain that next) is so bad that making that iPhone in the United States without that 54% tariff, would still cost more than in China with 54% tariff. Since it still costs less to make the iPhone in China, both Apple and consumers would prefer it be made there, so it will, and not in the USA.</p></div></li><li><div><p><strong>America’s industrial supply chain for many products is weak.</strong></p><p>Think of a supply chain as a company’s ability to get the components it needs to build a finished product. Suppose you wanted to build and sell wooden furniture. You’re going to need wood, nails, glue, etc. Otherwise you can’t do it. If you want to build an iPhone you need to procure a glass screen, shaped metal, and numerous internal electronic components.</p><p>Now you might be thinking, “what do you mean America has a weak supply chain? I’ve built furniture, I’ve assembled a computer. I can get everything I want at Home Depot and at Amazon.”</p><p>That’s because America has an amazing <em>consumer</em> supply chain, one of the best, if not the best in the world, but this is totally different from having an <em>industrial</em> supply chain.</p><p>When you’re operating a furniture factory, you need an industrial quantity of wood, more wood than any Home Depot near you has in store. And you need it fast and cheap. It turns out that the United States has a good supply chain for wood, which is why, despite higher wages, we export chopsticks to China. We have abundant cheap wood in the forests of the Northern United States. But if you decided to move that chopstick factory to desert Saudi Arabia, you would not succeed, because their supply chain for wood is poor; there simply aren’t any trees for 1,000s of miles.</p><p>When it comes to the iPhone, all the factories which make the needed components are in Asia, which is one reason why, even with a 54% tariff, it’s cheaper to assemble that iPhone in China than in the United States. It’s cheaper and faster to get those components from nearby factories in Asia than it is to get them from the US, which, because said factories no longer exist here, has to buy these components from Asia anyways.</p><p>Supply chains sound complicated, but aren’t. If you can’t get the components you need at a reasonable price and timeline to build a finished product, it doesn’t matter what the tariffs are, you have to import it, because you can’t build it locally.</p></div></li><li><div><p><strong>We don’t know how to make it</strong></p><p>Apple knows how to build an iPhone, but may not know how to make the individual components. It may seem trivial to make that glass that separates your finger from the electronic engineering that powers your ability to access the internet, but it’s difficult. </p><p>The world buys semiconductors from Taiwan, not just because its relatively inexpensive (but more expensive than China) labor and excellent supply chain, but because they know how to make the best semiconductors in the world. Even with infinite money, we cannot duplicate that, because we lack the knowhow.</p><p>A 54% tariff does not solve that problem. We still need to buy semiconductors from Taiwan, which is perhaps why the administration put in an exception for semiconductors, because we need them and because we can’t make them without their help.</p><p>This is a problem which applies to more than just semiconductors. We have forgotten how to make products people wrongly consider to be basic, too.</p><p>My company makes educational toys from plastic called Brain Flakes. To make Brain Flakes, you melt plastic and force it into shaped metal molds. Were we to import the machines and molds needed to do this, it would work for a little while, but as soon as one of those molds broke, we’d be in trouble, because there are almost no moldmakers left in the United States. The people who knew how to build and repair molds have either passed away or are long retired. In the event of a problem, we’d have to order a new mold from China or send ours back, shutting down production for months.</p><p>People trivialize the complexity and difficulty of manufacturing when it’s really hard. And if we don’t know how to make something, it doesn’t matter what the tariff is. It won’t get made in America.</p></div></li><li><div><p><strong>The effective cost of labor in the United States is higher than it looks</strong>Most people think that the reason why we make products in China instead of the United States is cheaper labor. That’s true, but it’s not the whole story. Frankly, the whole story is hard to read. People are not machines, they are not numbers on a spreadsheet or inputs into a manufacturing cost formula. I respect everyone who works hard and the people I have worked with over the years, and I want Americans to live better, happier lives.</p><p>Chinese manufacturing labor isn’t just cheaper. It’s better.</p><p>In China, there are no people who are too fat to work. The workers don’t storm off midshift, never to return to their job. You don’t have people who insist on being paid in cash so that they can keep their disability payments, while they do acrobatics on the factory floor that the non-disabled workers cannot do.</p><p>Chinese workers much less likely to physically attack each other and their manager. They don’t take 30 minute bathroom breaks on company time. They don’t often quit because their out-of-state mother of their children discovered their new job and now receives 60% of their wages as child support. They don’t disappear because they’ve gone on meth benders. And they don’t fall asleep on a box midshift because their pay from yesterday got converted into pills.</p><p>And they can do their times tables. To manufacture, you need to be able to consistently and accurately multiply 7 times 9 and read in English, and a disturbingly large portion of the American workforce cannot do that.</p><p>Chinese workers work longer hours more happily and they’re physically faster with their hands; they can do things that American labor can’t. It’s years of accumulated skill, but it’s also a culture that is oriented around hard work and education that the United States no longer has.</p><p>Sadly, what I describe above are not theoretical situations. These are things that I have experienced or seen with my own eyes. It’s fixable, but the American workforce needs great improvement in order to compete with the world’s, even with tariffs.</p><p>So yes, Chinese wages are lower, but there many countries with wages lower than China’s. It’s the work ethic, knowhow, commitment, combined with top notch infrastructure, that makes China the most powerful manufacturing country in the world today.</p></div></li><li><div><p><strong>We don’t have the infrastructure to manufacture</strong></p><p>The inputs to manufacturing are not just materials, labor, and knowhow. You need infrastructure like electricity and good roads for transportation, too.</p><p>Since the year 2000, US electricity generation per person has been flat. In China, over the same time period, it has increased 400%. China generates over twice as much electricity person today as the United States. Why?</p><p>Manufacturing.</p><p>To run the machines which make the products we use, you need electricity, a lot of it. We already have electricity instability in this country. Without the construction of huge amounts of new energy infrastructure, like nuclear power plants, we cannot meaningfully increase our manufacturing output.</p><p>And it would put huge stress on our roads and create lots more dangerous traffic. When we import finished goods from foreign countries, a truck delivers them from the port or the airport to distribution centers, stores, and where we live and work.</p><p>When you start manufacturing, every single component, from factory to factory, needs to be moved, increasing the number of trucks on the road many times.</p><p>Paving more roads, modernizing our seaports, improving our airports, speeding up our train terminals, and building power plants in the costliest nation in the world to build is a huge undertaking that people are not appreciating when they say “well, we’ll just make it in America”.</p></div></li><li><div><p><strong>Made in America will take time.</strong></p><p>We placed a $50,000 order with our supplier overseas before the election in November 2024. At the time of ordering, there were no import taxes on the goods. By the time it arrived, a 20% tariff had been applied and we had a surprise bill for $10,000. It can easily take 180 days for many products to go from order, to on your doorstep and this tariff policy seems not to understand that.</p><p>It takes at least, in the most favorable of jurisdictions, 2 years (if you can get the permits) to build a factory in the United States. I know because I’ve done it. From there, it can take 6 months to a year for it to become efficient. It can take months for products to come off the assembly lines. All this ignores all the infrastructure that will need to be built (new roads, new power plants, etc.) to service the new factory.</p><p>By the time “made in America” has begun, we will be electing a new president.</p></div></li><li><div><p><strong>Uncertainty and complexity around the tariffs</strong>To start manufacturing in the United States, a company needs to make a large investment. They will need to buy new machinery and if no existing building is suitable, they will need to construct a new building. These things cost money, a lot, in fact. And significantly more in the USA, than they do in other countries. In exchange for this risk, there must be some reward. If that reward is uncertain, no one will do it.</p><p>Within the past month, the president put a 25% tariff on Mexico, and then got rid of it, only to apply it again, and then get rid of it a second time. Then, last week, he was expected to apply new tariffs to Mexico, but didn’t.</p><p>If you’re building a new factory in the United States, your investment will alternate between maybe it will work, and catastrophic loss according to which way the tariffs and the wind blows. No one is building factories right now, and no one is renting them, because there is no certainty that any of these tariffs will last. How do I know? I built a factory in Austin, Texas in an industrial area. I cut its rent 40% two weeks ago and I can’t get a lick of interest from industrial renters.</p><p>The tariffs have frozen business activity because no one wants to take a big risk dependent on a policy that may change next week.</p><p>Even further, the tariffs are confusing, poorly communicated, and complex. Today, if you want to import something from China, you need to add the original import duty, plus a 20% “fentanyl tariff”, plus a 34% “reciprocal tariff”, and an additional 25% “Venezuelan oil” tariff, should it be determined that China is buying Venezualan oil. The problem is there is no list of countries which are importing Venezuelan oil provided by the White House, so you don’t know if you do or don’t need to add that 25% and you also don’t know when any of these tariffs will go into effect because of unclear language.</p><p>As such, you can’t calculate your costs, either with certainty or accuracy, therefore, not only do you not build a factory in the United States, you cease all business activity, the type of thing that can cause a recession, if not worse.</p><p>For the past month, as someone who runs a business in this industry, I have spent a huge portion of my time just trying to keep up with the constant changes, instead of running my business. </p></div></li><li><div><p><strong>Most Americans are going to hate manufacturing</strong></p><p>Americans want less crime, good schools for their kids, and inexpensive healthcare.</p><p>They don’t want to be sewing shirts.</p><p>The people most excited about this new tariff policy tend to be those who’ve never actually made anything, because if you have, you’d know how hard the work is.</p><p>When I first went to China as a naive 24 year old, I told my supplier I was going to “work a day in his factory!” I lasted 4 hours. It was freezing cold, middle of winter, I had to crouch on a small stool, hunched over, assembling little parts with my fingers at 1/4 the speed of the women next to me. My back hurt, my fingers hurt. It was horrible. That’s a lot of manufacturing.</p><p>And enjoy the blackouts, the dangerous trucks on the road, the additional pollution, etc. Be careful what you wish for America. Doing office work and selling ideas and assets is a lot easier than making actual things.</p></div></li><li><div><p><strong>The labor does not exist to make good products</strong>There are over a billion people in China making stuff. As of right now there are 12 million people looking for work in the United States (4% unemployment). Ignoring for a moment the comparative inefficiency of labor and the billions of people making products outside of China, where are the people that are going to do these jobs? Do you simply say “make America great again” 3 times and they will appear with the skills needed to do the work?</p><p>And where are the managers to manage these people? One of the reasons why manufacturing has declined in the United States is a brain drain towards sectors that make more money. Are people who make money on the stock market, in real estate, in venture capital, and in startups going to start sewing shirts? It’s completely and totally unrealistic to assume that people will move from superficially high productivity sectors driven by US Dollar strength to products that are low on the value chain.</p><p>The United States is trying to bring back the jobs that China doesn’t even want. They have policies to reduce low value manufacturing, yet we are applying tariffs to bring it back. It’s incomprehensible.</p></div></li><li><div><p><strong>Automation will not save us.</strong>Most people think that the reason why American manufacturing is not competitive is labor costs. Most people think this can be solved by automation.</p><p>They’re wrong.</p><p>First, China, on a yearly basis installs 7x as many industrial robots as we do in the United States. Second, Chinese robots are cheaper. Third, most of today’s manufacturing done by people cannot be automated. If it could, it would have already been done so, by China, which, again, has increasingly high labor costs relative to the rest of the world.</p><p>The robots you see on social media doing backflips are, today, mostly for show and unreliable off camera. They are not useful in industrial environments where, if a humanoid robot can do it, an industrial machine which is specialized in the task can do it even better. For example, instead of having a humanoid robot doing a repetitive task such as carrying a boxes from one station to another, you can simply set up a cheaper, faster conveyor belt.</p><p>Said another way, the printer in your office, is cheaper and more efficient than both a human and a humanoid robot with a pen, hand drawing each letter.</p><p>It’s unlikely that American ingenuity will be able to counter the flood of Chinese industrial robots which is coming. The first commercially electrical vehicle was designed and built in the United States, but today China is dominating electric vehicle manufacturing across the world. Industrial robots will likely be the same story.</p></div></li><li><div><p><strong>Robots and overseas factory workers don’t file lawsuits, but Americans do</strong>I probably should not have written this article. Not only will I be attacked for being unpatriotic, but what I have written here makes me susceptible to employment lawsuits. For the record, I don’t use a person’s origin to determine whether or not they will do good work. I just look at the person and what they’re capable of. Doing otherwise is bad business because there are talented people everywhere.</p><p>America has an extremely litigious business environment, both in terms of regulation and employment lawsuits. Excessive regulation and an inefficient court system will stifle those with the courage to make in this country.</p></div></li><li><div><p><strong>Enforcement of the tariffs will be uneven and manipulated</strong>Imagine two companies which import goods into the United States. One is based in China, while the other is based in the United States. They both lie about the value of their goods so that they have to pay less tariffs. </p><p>What happens to the China company? Perhaps they lose a shipment when it’s seized by the US government for cheating, but they won’t pay additional fines because they’re in China, where they’re impervious to the US legal system.</p><p>What happens to the USA company? Owners go to prison.</p><p>Who do you think is going to cheat more on tariffs, the China or the US company? </p><p>Exactly.</p><p>So, in other words, paradoxically, the policies which are designed to help Americans, will hurt them more than the competition these policies are designed to punish.</p></div></li><li><div><p><strong>The tariff policies are structured in the wrong way</strong>Why didn’t the jobs come back in 2018 when we initiated our last trade war? We applied tariffs, why didn’t it work?</p><p>Instead of making America great, we made Vietnam great.</p><p>When the United States applied tariffs to China, it shifted huge amounts of manufacturing to Vietnam, which did not have tariffs applied to it. Vietnam, which has a labor force that is a lot more like China’s than the United States’, was able to use its proximity to China for its supply chain and over the past 7 or so years, slowly developed its own. With Vietnamese wages even lower than Chinese wages, instead of the jobs coming to the United States, they just went to Vietnam instead.</p><p>We’re about to make the same mistake again, in a different way.</p><p>Let’s go back to that last example, the China based and the US based companies which were importing goods into the United States. That US based importer could’ve been a manufacturer. Instead of finished iPhones, perhaps they were importing the glass screens because those could not be found in the USA, for final assembly.</p><p>Our government applied tariffs to finished goods and components equally.</p><p>I’ll say that again. They applied the same tax to the components that you need to make things in America that they did to finished goods that were made outside of America.</p><p>Manufacturing works on a lag. To make and sell in America, first you must get the raw materials and components. These tariffs will bankrupt manufacturers before it multiplies them because they need to pay tariffs on the import components that they assemble into finished products.</p><p>And it gets worse.</p><p>They put tariffs on machines. So if you want to start a factory in the United States, all the machinery you need which is not made here, is now significantly more expensive. You may have heard that there is a chronic shortage of transformers needed for power transmission in the United States. Tariffed that too.</p><p>It gets even worse.</p><p>There is no duty drawback for exporting. In the past, even in the United States, if you imported something and then exported it, the tariff you paid on the import would be refunded to you. They got rid of that so we’re not even incentivizing exports to the countries that we are trying to achieve trade parity with.</p><p>Tariffs are applied to the costs of the goods. The way we’ve structured these tariffs, factories in China which import into the United States will pay lower tariffs than American importers, because the Chinese factory will be able to declare the value of the goods at their cost, while the American importer will pay the cost the factory charges them, which is of course higher than the factory’s cost.</p><p>Worse still.</p><p>With a few exceptions like steel and semiconductors, the tariffs were applied to all products, ranging from things that we will never realistically make like our high labor <a href="https://tigerharttoys.com/" target="_blank">Tigerhart stuffed animals</a> to things that don’t even grow in the continental USA, like coffee.</p><p>Call me crazy, but if we’re going to make products in America, we could use some really cheap coffee, but no, they tariffed it! Our educational <a href="https://brainflakes.com/" target="_blank">engineering toy Brain Flakes</a>, also got tariffed. How is the next generation supposed to build a manufacturing powerhouse if it cannot afford products that will develop its engineering ability? It’s like our goal was to make education and raising children more expensive.</p><p>Not only did we put tariffs on the things that would help us make this transformation, we didn’t put higher tariffs on things that hurt us like processed food which makes us tired and fat or fentanyl precursors which kill us.</p><p>The stated goal of many of our tariffs was to stop the import of fentanyl. 2 milligrams of fentanyl will kill an adult. A grain of rice is 65 milligrams. How do you stop that stuff from coming in? It’s basically microscopic.</p><p>Maybe we could do what every other country has done and focus on the demand, instead of the supply, ideally starting with the fentanyl den near my house which keeps my children indoors or in our backyard instead of playing in the neighborhood.</p><p>It’s frustrating to see our great country take on an unrealistic goal like transforming our economy, when so many basic problems should be fixed first.</p></div></li><li><div><p><strong>Michael Jordan sucked at baseball</strong></p><p>America is the greatest economic power of all time. We’ve got the most talented people in the world and we have a multi-century legacy of achieving what so many other countries could not.</p><p>Michael Jordan is arguably the greatest basketball player of all time, perhaps even the greatest athlete of all time.</p><p>He played baseball in his youth. What happened when he switched from basketball to baseball? He went from being an MVP champion to being a middling player in the minor leagues. 2 years later, he was back to playing basketball.</p><p>And that’s exactly what’s going to happen to us.</p></div></li></ol><h3>My prediction for what will happen with the tariffs</h3><div><p>This is probably the worst economic policy I’ve ever seen. Maybe it’s just an opening negotiating position. Maybe it’s designed to crash the economy, lower interest rates, and then refinance the debt. I don’t know.</p><p>But if you take it at face value, there is no way that this policy will bring manufacturing back to the United States and “make America wealthy again”. Again, if anything, it’ll do the opposite; it’ll make us much poorer.</p><p>Many are saying that this tariff policy is the “end of globalization”. I don’t think so.</p><p>Unless this policy is quickly changed, this is the end of America’s participation in globalization. If we had enacted these policies in 2017 or 2018, they stood a much stronger chance of being successful. That was before Covid. China was much weaker economically and militarily then. They’ve been preparing 8 years for this moment and they are ready.</p><p>China trades much less with the United States as a percent of its total exports today than it did 8 years ago, and as such is much less susceptible to punishing tariffs from the United States today than it was back then.</p><p>Chinese made cars, particularly electric vehicles, are taking the world by storm, without the United States. Go to Mexico to Thailand to Germany and you will see Chinese made electric vehicles on the streets. And they’re good, sometimes even better than US made cars, and not just on a per dollar basis, but simply better quality.</p><p>That is what is going to happen to the United States. Globalization will continue without us if these policies continue unchanged.</p><p>That said, I think the tariffs will be changed. There’s no way we continue to place a 46% tariff on Vietnam when 8 years ago we nudged American companies to put all their production there.  Most likely, this policy will continue another round of the same type of investment; rather than replacing made in China with made in the USA, we’ll replace it with made in Vietnam, Mexico, etc.</p><p>Finally, in the process of doing this, regardless of whether or not we reverse the policies, we will have a recession. There isn’t time to build US factories, nor is it realistic or likely to occur, and American importers don’t have the money to pay for the goods they import.</p><p>People are predicting inflation in the cost of goods, but we can just as easily have deflation from economic turmoil.</p><p>The policy is a disaster, how could it be done better? And what’s the point of this anyways?</p></div><h3>The 3 reasons why we want to actually bring manufacturing back</h3><p><br>1. It makes our country stronger. If a foreign country can cut off your supply of essentials such as food, semiconductors, or antibiotics you’re beholden to that country. The United States must have large flexible capacity in these areas.</p><p>2. It makes it easier to innovate. When the factory floor is down the hall, instead of 30 hours of travel away, it’s easier to make improvements and invent. We need to have manufacturing of high value goods, like drones, robots, and military equipment that are necessary for our economic future and safety. It will be difficult for us to apply artificial intelligence to manufacturing if we’re not doing it here.</p><p>3. People can simplistically be divided into three buckets: those of verbal intelligence, those of mathematical intelligence, and those of spatial intelligence. Without a vibrant manufacturing industry, those with the latter type of intelligence cannot fulfill their potential. This is one reason why so many men drop out, smoke weed, and play video games; they aren’t built for office jobs and would excel at manufacturing, but those jobs either don’t exist or pay poorly.</p><h3>How to actually bring manufacturing back</h3><div><p>Every country that has gone on a brilliant run of manufacturing first established the right conditions and then proceeded slowly.</p><p>We’re doing the opposite right now, proceeding fast with the wrong conditions.</p><p>First, the United States must fix basic problems which reduce the effectiveness of our labor. For example, everyone needs to be able to graduate with the ability to do basic mathematics. American healthcare is way too expensive and it needs to be fixed if the United States wants to be competitive with global labor. I’m not saying healthcare should be socialized or switched to a completely private system, but whatever we’re doing now clearly is not working, and it needs to be fixed.</p><p>We need to make Americans healthy again. Many people are too obese to work. Crime and drugs. It needs to stop.</p><p>And to sew, we must first repair the social fabric.</p><p>From Covid lockdowns to the millions of people who streamed over our border, efforts must be made to repair society. Manufacturing and economic transformations are hard, particularly the way in which we’re doing it. Patriotism and unity are required to tolerate hardship, and we seem to be at all-time lows for those right now.</p><p>Let’s focus on America’s strengths in high end manufacturing, agriculture, and innovation instead of applying tariffs to all countries and products blindly. We should be taxing automated drones for agriculture at 300% to encourage their manufacture here, instead of applying the same blanket tariff of 54% to that that we apply to t-shirts.</p><p>The changes in the policies needed are obvious. Tax finished products higher than components. Let exporters refund their import duties. Enforce the tariffs against foreign companies more strenuously than we do against US importers.</p><p>If American companies want to sell in China, they must incorporate there, register capital, and name a person to be a legal representative. To sell in Europe, we must register for their tax system and nominate a legal representative. For Europeans and Chinese to sell in the United States, none of this is needed, nor do federal taxes need to be paid.</p><p>We can level the playing field without causing massive harm to our economy by adopting policies like these which cause foreign companies to pay the taxes domestic ones pay.</p><p>And if we want to apply tariffs, do it slowly. Instead of saying that products will be tariffed at 100% tomorrow, say they’ll be 25% next year, 50% after that, 75% after that, and 100% in year four. And then make it a law instead of a presidential decree so that there is certainty so people feel comfortable taking the risks necessary to make in America.</p></div><p>Sadly, a lot of the knowhow to make products is outside of this country. Grant manufacturing visas, not for labor, but for knowhow. Make it easy for foreign countries to teach us how they do waht they do best.</p><h3>Conclusion and final thoughts</h3><p>I care about this country and the people in it. I hope we change our mind on this policy before it’s too late. Because if we don’t, it might break the country. And, really, this country needs to be fixed.</p>
</div>
  
</article>

</div>

  
</article>


          

          
            
              

            
          
        
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Launch HN: mrge.io (YC X25) – Cursor for code review (124 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=43692476</link>
            <guid>43692476</guid>
            <pubDate>Tue, 15 Apr 2025 13:34:21 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=43692476">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <tbody><tr id="43692476">
      <td><span></span></td>      <td><center><a id="up_43692476" href="https://news.ycombinator.com/vote?id=43692476&amp;how=up&amp;goto=item%3Fid%3D43692476"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=43692476">Launch HN: mrge.io (YC X25) – Cursor for code review</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_43692476">111 points</span> by <a href="https://news.ycombinator.com/user?id=pomarie">pomarie</a> <span title="2025-04-15T13:34:21 1744724061"><a href="https://news.ycombinator.com/item?id=43692476">4 hours ago</a></span> <span id="unv_43692476"></span> | <a href="https://news.ycombinator.com/hide?id=43692476&amp;goto=item%3Fid%3D43692476">hide</a> | <a href="https://hn.algolia.com/?query=Launch%20HN%3A%20mrge.io%20%28YC%20X25%29%20%E2%80%93%20Cursor%20for%20code%20review&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=43692476&amp;auth=438905132074b5697342bcc8a5dee0b9b512a7a5">favorite</a> | <a href="https://news.ycombinator.com/item?id=43692476">69&nbsp;comments</a>        </span>
              </td></tr>
    <tr><td></td></tr><tr><td colspan="2"></td><td><div><p>Hey HN, we’re building mrge (<a href="https://www.mrge.io/home">https://www.mrge.io/home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.</p><p>Here’s a demo video: <a href="https://www.youtube.com/watch?v=pglEoiv0BgY" rel="nofollow">https://www.youtube.com/watch?v=pglEoiv0BgY</a></p><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.</p><p>We’re building mrge to help solve that. Here’s how it works:</p><p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!</p><p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.</p><p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.</p><p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.</p><p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.</p><p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like "go to definition" or "find references". When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.</p><p>We know cloud-based review isn't for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.</p><p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.</p><p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.</p><p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.</p><p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.</p><p>You can sign up now (<a href="https://www.mrge.io/home">https://www.mrge.io/home</a>). mrge is currently free while we're still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.</p><p>We’re very actively building and would love your honest feedback!</p></div></td></tr>        <tr><td></td></tr><tr><td colspan="2"></td><td></td></tr>  </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How the U.S. Became a Science Superpower (119 pts)]]></title>
            <link>https://steveblank.com/2025/04/15/how-the-u-s-became-a-science-superpower/</link>
            <guid>43692360</guid>
            <pubDate>Tue, 15 Apr 2025 13:24:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://steveblank.com/2025/04/15/how-the-u-s-became-a-science-superpower/">https://steveblank.com/2025/04/15/how-the-u-s-became-a-science-superpower/</a>, See on <a href="https://news.ycombinator.com/item?id=43692360">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

					<p>Prior to WWII the U.S was a distant second in science and engineering. By the time the war was over, U.S. science and engineering had blown past the British, and led the world for 85 years.</p>
<hr>
<p>It happened because two very different people were the science advisors to their nation’s leaders. Each had radically different views on how to use their country’s resources to build advanced weapon systems. Post war, it meant Britain’s early lead was ephemeral while the U.S. built the foundation for a science and technology innovation ecosystem that led the world – until now.</p>
<p><strong>The British – Military Weapons Labs<br>
</strong>When Winston Churchill became the British prime minister in 1940, he had at his side his science advisor, Professor Frederick Lindemann, his friend for 20 years. Lindemann headed up the physics department at Oxford and was the director of the Oxford <a href="https://en.wikipedia.org/wiki/Clarendon_Laboratory">Clarendon Laboratory</a>. Already at war with Germany, Britain’s wartime priorities focused on defense and intelligence technology projects, e.g. weapons that used electronics, radar, physics, etc. – a <a href="https://en.wikipedia.org/wiki/Chain_Home">radar-based air defense network</a> called Chain Home, <a href="https://en.wikipedia.org/wiki/AI_Mark_VIII_radar">airborne radar on night fighters</a>, and plans for a nuclear weapons program – the <a href="https://en.wikipedia.org/wiki/MAUD_Committee">MAUD Committee</a> which started the British nuclear weapons program code-named <a href="https://en.wikipedia.org/wiki/Tube_Alloys">Tube Alloys</a>. And their codebreaking organization at Bletchley Park was starting to read secret German messages – the Enigma – using the <a href="https://en.wikipedia.org/wiki/Colossus_computer">earliest computers</a> ever built.</p>
<p><a href="https://www.amazon.com/Prof-life-times-Frederick-Lindemann/dp/0224063170"><img data-recalc-dims="1" fetchpriority="high" decoding="async" data-attachment-id="32256" data-permalink="https://steveblank.com/2025/04/15/how-the-u-s-became-a-science-superpower/lindemann-book-cover/" data-orig-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Lindemann-Book-cover.jpg?fit=311%2C475&amp;ssl=1" data-orig-size="311,475" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Lindemann Book cover" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Lindemann-Book-cover.jpg?fit=196%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Lindemann-Book-cover.jpg?fit=311%2C475&amp;ssl=1" src="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Lindemann-Book-cover.jpg?resize=254%2C388&amp;ssl=1" alt="" width="254" height="388" srcset="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Lindemann-Book-cover.jpg?w=311&amp;ssl=1 311w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Lindemann-Book-cover.jpg?resize=196%2C300&amp;ssl=1 196w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Lindemann-Book-cover.jpg?resize=98%2C150&amp;ssl=1 98w" sizes="(max-width: 254px) 100vw, 254px"></a></p>
<p>As early as the mid 1930s, the British, fearing Nazi Germany, developed prototypes of these weapons using their existing military and government research labs. The <a href="https://en.wikipedia.org/wiki/Telecommunications_Research_Establishment">Telecommunications Research Establishment</a> built early-warning Radar, critical to Britain’s survival during the <a href="https://en.wikipedia.org/wiki/Battle_of_Britain">Battle of Britain</a>, and electronic warfare to protect British bombers over Germany. The <a href="https://en.wikipedia.org/wiki/Admiralty_Research_Laboratory">Admiralty Research Lab</a> built Sonar and anti-submarine warfare systems. The Royal Aircraft Establishment was developing <a href="https://en.wikipedia.org/wiki/Gloster_Meteor">jet fighters</a>. The labs then contracted with British companies to manufacture the weapons in volume. British government labs viewed their universities as a source of talent, but they had no role in weapons development.</p>
<p>Under Churchill, Professor Lindemann influenced which projects received funding and which were sidelined. Lindemann’s WWI experience as a researcher and test pilot on the staff of the&nbsp;<a href="https://en.wikipedia.org/wiki/Royal_Aircraft_Factory">Royal Aircraft Factory</a>&nbsp;at&nbsp;<a href="https://en.wikipedia.org/wiki/Farnborough,_Hampshire">Farnborough</a> gave him confidence in the competence of British military research and development labs. His <em>top-down, centralized approach</em> <em>with weapons</em><em> development </em>primarily<em> in government research labs</em> shaped British innovation during WW II – and led to its demise post-war.</p>
<p><strong>The Americans – University Weapons Labs<br>
</strong>Unlike Britain, the U.S. lacked a science advisor. It wasn’t until June 1940, that Vannevar Bush, ex-MIT dean of engineering, told President Franklin Roosevelt that World War II would be the first war won or lost on the basis of advanced technology electronics, radar, physics problems, etc.</p>
<p><a href="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Bush-on-Time-Cover.jpg?ssl=1"><img data-recalc-dims="1" decoding="async" data-attachment-id="32254" data-permalink="https://steveblank.com/2025/04/15/how-the-u-s-became-a-science-superpower/bush-on-time-cover/" data-orig-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Bush-on-Time-Cover.jpg?fit=337%2C447&amp;ssl=1" data-orig-size="337,447" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="Bush on Time Cover" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Bush-on-Time-Cover.jpg?fit=226%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Bush-on-Time-Cover.jpg?fit=337%2C447&amp;ssl=1" src="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Bush-on-Time-Cover.jpg?resize=259%2C343&amp;ssl=1" alt="" width="259" height="343" srcset="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Bush-on-Time-Cover.jpg?w=337&amp;ssl=1 337w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Bush-on-Time-Cover.jpg?resize=226%2C300&amp;ssl=1 226w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Bush-on-Time-Cover.jpg?resize=113%2C150&amp;ssl=1 113w" sizes="(max-width: 259px) 100vw, 259px"></a>Unlike Lindemann, Bush had a 20-year-long contentious history with the U.S. Navy and a dim view of government-led R&amp;D. Bush contended that the government research labs were slow and second rate. He convinced the President that while the Army and Navy ought to be in charge of making conventional weapons – planes, ships, tanks, etc. — scientists from academia could develop better&nbsp;advanced technology weapons and deliver them faster than Army and Navy research labs. And he argued the only way the scientists could be productive was if they worked in a university setting in <em>civilian-run</em> weapons labs run by university professors. To the surprise of the Army and Navy Service chiefs, Roosevelt agreed to let Bush build exactly that organization to coordinate and fund all advanced weapons <em>research</em>.</p>
<p>(While Bush had no prior relationship with the President, Roosevelt had been the Assistant Secretary of the Navy during World War I and like Bush had seen first-hand its dysfunction. Over the next four years they worked well together. Unlike Churchill, Roosevelt had little interest in science and accepted Bush’s opinions on the direction of U.S. technology programs, giving Bush sweeping authority.)</p>
<p>In 1941, Bush upped the game by convincing the President that in addition to research, <em>development, acquisition and deployment of these weapons also ought to be done by professors in universities</em>. There they would be tasked to <a href="http://www.amazon.com/Scientists-against-James-Phinney-Baxter/dp/0262520125/">develop military weapons systems and solve military problems</a> to defeat Germany and Japan. (The weapons were then manufactured in volume by U.S. corporations Western Electric, GE, RCA, Dupont, Monsanto, Kodak, Zenith, Westinghouse, Remington Rand and Sylvania.) To do this Bush created the&nbsp;Office of Scientific Research and Development (OSR&amp;D).</p>
<p><a href="http://www.archives.gov/research/guide-fed-records/groups/227.html#227.1">OSR&amp;D</a> headquarters divided the wartime work into 19 “divisions,” 5 “committees,” and 2 “panels,” each solving a unique part of the military war effort. There were no formal requirements.</p>
<p><a href="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Office-of-Science-Research-and-Development.jpg?ssl=1"><img data-recalc-dims="1" decoding="async" data-attachment-id="32153" data-permalink="https://steveblank.com/?attachment_id=32153" data-orig-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Office-of-Science-Research-and-Development.jpg?fit=1260%2C1135&amp;ssl=1" data-orig-size="1260,1135" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Office of Science Research and Development" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Office-of-Science-Research-and-Development.jpg?fit=300%2C270&amp;ssl=1" data-large-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Office-of-Science-Research-and-Development.jpg?fit=468%2C421&amp;ssl=1" src="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Office-of-Science-Research-and-Development.jpg?resize=468%2C421&amp;ssl=1" alt="" width="468" height="421" srcset="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Office-of-Science-Research-and-Development.jpg?resize=1024%2C922&amp;ssl=1 1024w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Office-of-Science-Research-and-Development.jpg?resize=300%2C270&amp;ssl=1 300w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Office-of-Science-Research-and-Development.jpg?resize=150%2C135&amp;ssl=1 150w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Office-of-Science-Research-and-Development.jpg?resize=768%2C692&amp;ssl=1 768w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Office-of-Science-Research-and-Development.jpg?w=1260&amp;ssl=1 1260w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Office-of-Science-Research-and-Development.jpg?w=936&amp;ssl=1 936w" sizes="(max-width: 468px) 100vw, 468px"></a>Staff at OSRD worked with their military liaisons to understand what the most important military problems were and then each OSR&amp;D division came up with solutions. These efforts spanned an enormous range of tasks – the development of advanced electronics, radar, <a href="http://calteches.library.caltech.edu/3672/1/Snyder.pdf">rockets</a>, <a href="https://dosits.org/people-and-sound/history-of-underwater-acoustics/world-war-ii-1941-1945/">sonar</a>, new weapons like the <a href="https://en.wikipedia.org/wiki/Proximity_fuze#:~:text=Work%20on%20the%20radio%20shell,innovations%20of%20World%20War%20II.">proximity fuse</a>, <a href="http://www.globalsecurity.org/military/systems/munitions/napalm.htm">Napalm</a>, the Bazooka and new drugs such as <a href="http://www.lib.niu.edu/2001/iht810139.html">penicillin</a>, cures for malaria, chemical warfare, and <a href="https://steveblank.com/2023/08/29/before-there-was-oppenheimer-there-was-vannevar-bush/">nuclear weapons</a>.</p>
<p>Each&nbsp; division was run by a professor hand-picked by Bush. And they were located in universities –&nbsp; MIT, Harvard, Johns Hopkins, Caltech, Columbia and the University of Chicago all ran major weapons systems programs. Nearly 10,000 scientists and engineers, professors and their grad students received draft deferments to work in these university labs.</p>
<p><strong>Americans – Unlimited Dollars<br>
</strong>What changed U.S. universities, and the world forever, was government money. Lots of it. Prior to WWII most advanced technology research in the U.S. was done in corporate innovation labs (GE, AT&amp;T, Dupont, RCA, Westinghouse, NCR, Monsanto, Kodak, IBM, et al.) Universities had no government funding (<a href="https://www.congress.gov/crs-product/R45897" target="_blank" rel="noopener">except for agriculture</a>) for research. Academic research had been funded by non-profits, mostly the Rockefeller and Carnegie foundations and industry. Now, for the first time, U.S. universities were getting more money than they had ever seen. Between 1941 and 1945, OSR&amp;D gave $9 billion (in 2025 dollars) to the top U.S. research universities. This made universities full partners in wartime research, not just talent pools for government projects as was the case in Britain.</p>
<p><strong>The British – Wartime Constraints<br>
</strong>Wartime Britain had very different constraints. First, England was under daily attack.<a href="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?ssl=1"><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="32262" data-permalink="https://steveblank.com/2025/04/15/how-the-u-s-became-a-science-superpower/blitz-aftermath/" data-orig-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?fit=1920%2C1499&amp;ssl=1" data-orig-size="1920,1499" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Blitz aftermath" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?fit=300%2C234&amp;ssl=1" data-large-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?fit=468%2C365&amp;ssl=1" src="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?resize=252%2C197&amp;ssl=1" alt="" width="252" height="197" srcset="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?resize=300%2C234&amp;ssl=1 300w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?resize=1024%2C799&amp;ssl=1 1024w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?resize=150%2C117&amp;ssl=1 150w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?resize=768%2C600&amp;ssl=1 768w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?resize=1536%2C1199&amp;ssl=1 1536w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?w=1920&amp;ssl=1 1920w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?w=936&amp;ssl=1 936w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/Blitz-aftermath.jpg?w=1404&amp;ssl=1 1404w" sizes="auto, (max-width: 252px) 100vw, 252px"></a> They were being bombed by air and blockaded by submarines, so it was logical that they <a href="https://www.youtube.com/watch?v=C6uV-BojTw4">focused on a smaller set of high-priority projects</a> to counter these threats. Second, the country was teetering on bankruptcy. It couldn’t afford the broad and deep investments that the U.S. made. (Illustrated by their abandonment of their nuclear weapons programs when they realized how much it would cost to turn the research into industrial scale engineering.) This meant that many other areas of innovation—such as early computing and nuclear research—were underfunded compared to their American counterparts.</p>
<p><strong>Post War – Britain<br>
</strong>Churchill was voted out of office in 1945. With him went Professor Lindemann and the coordination of British science and engineering. Britain would be without a science advisor until 1951-55 when Churchill returned for a second term and brought back Lindemann with him.</p>
<p>The end of the war led to extreme downsizing of the British military including severe cuts to all the government labs that had developed Radar, electronics, computing, etc.</p>
<p>With post-war Britain financially exhausted, post-war austerity limited its ability to invest in large-scale innovation. There were no post-war plans for government follow-on investments. The differing economic realities of the U.S. and Britain also played a key role in shaping their innovation systems. The United States had an enormous industrial base, abundant capital, and a large domestic market, which enabled large-scale investment in research and development. In Britain, a socialist government came to power. Churchill’s successor, Labor’s Clement Attlee, dissolved the British empire, nationalized banking, power and light, transport, and iron and steel, all which reduced competition and slowed technological progress.</p>
<p>While British research institutions like Cambridge and Oxford remained leaders in theoretical science, they struggled to scale and commercialize their breakthroughs. For instance Alan Turing’s and Tommy Flower’s pioneering work on <a href="https://www.tnmoc.org/colossus" target="_blank" rel="noopener">computing at Bletchley Park</a> didn’t turn into a thriving British computing industry—unlike in the U.S., where companies like ERA, Univac, NCR and IBM built on their wartime work.</p>
<p>Without the same level of government support for dual-use technologies or commercialization, and with private capital absent for new businesses, Britain’s post-war innovation ecosystem never took off.</p>
<p><strong>Post War – The U.S.<br>
</strong>Meanwhile in the U.S. universities and companies realized that the wartime government funding for research had been an amazing accelerator for science, engineering, and medicine. Everyone, including Congress, agreed that the U.S. government should continue to play a large role in continuing it. In 1945, Vannevar Bush published a report “<a href="https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf">Science, The Endless Frontier</a>” advocating for government funding of basic research in universities, colleges, and research institutes. Congress argued on how to best organize federal support of science.</p>
<p>By the end of the war, OSR&amp;D funding had taken technologies that had been just research papers or considered impossible to build at scale and made them commercially viable – computers, rockets, radar, Teflon, synthetic fibers, nuclear power, etc. Innovation clusters formed around universities like MIT and Harvard which had received large amounts of OSR&amp;D funding (<a href="https://en.wikipedia.org/wiki/MIT_Radiation_Laboratory">MIT’s Radiation Lab or “Rad Lab”</a> employed 3,500 civilians during WWII and developed and built 100 radar systems deployed in theater,) or around professors who ran one of the OSR&amp;D divisions – like <a href="https://steveblank.com/2009/04/27/the-secret-history-of-silicon-valley-part-vi-the-secret-life-of-fred-terman-and-stanford/">Fred Terman at Stanford</a>.</p>
<p>When the war ended, the <a href="https://en.wikipedia.org/wiki/United_States_Atomic_Energy_Commission" target="_blank" rel="noopener">Atomic Energy Commission</a> spun out of the <a href="https://en.wikipedia.org/wiki/Manhattan_Project" target="_blank" rel="noopener">Manhattan Project</a> in 1946 and the military services took back advanced weapons development. In 1950 Congress set up the <a href="https://www.nsf.gov/" target="_blank" rel="noopener">National Science Foundation</a> to fund all basic science in the U.S. (except for Life Sciences, a role the new <a href="https://www.nih.gov/" target="_blank" rel="noopener">National Institutes of Health</a> would assume.) Eight years later <a href="https://www.darpa.mil/" target="_blank" rel="noopener">DARPA</a> and <a href="https://www.nasa.gov/" target="_blank" rel="noopener">NASA</a> would also form as federal research agencies.</p>
<p><a href="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/OSRD-Genealogy.jpg?ssl=1"><img data-recalc-dims="1" loading="lazy" decoding="async" data-attachment-id="32155" data-permalink="https://steveblank.com/?attachment_id=32155" data-orig-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/OSRD-Genealogy.jpg?fit=1447%2C1072&amp;ssl=1" data-orig-size="1447,1072" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="OSRD Genealogy" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/OSRD-Genealogy.jpg?fit=300%2C222&amp;ssl=1" data-large-file="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/OSRD-Genealogy.jpg?fit=468%2C347&amp;ssl=1" src="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/OSRD-Genealogy.jpg?resize=468%2C347&amp;ssl=1" alt="" width="468" height="347" srcset="https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/OSRD-Genealogy.jpg?resize=1024%2C759&amp;ssl=1 1024w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/OSRD-Genealogy.jpg?resize=300%2C222&amp;ssl=1 300w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/OSRD-Genealogy.jpg?resize=150%2C111&amp;ssl=1 150w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/OSRD-Genealogy.jpg?resize=768%2C569&amp;ssl=1 768w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/OSRD-Genealogy.jpg?w=1447&amp;ssl=1 1447w, https://i0.wp.com/steveblank.com/wp-content/uploads/2025/04/OSRD-Genealogy.jpg?w=936&amp;ssl=1 936w" sizes="auto, (max-width: 468px) 100vw, 468px"></a>Ironically, Vannevar Bush’s influence would decline even faster than Professor Lindemann’s. When President Roosevelt died in April 1945 and Secretary of War Stimson retired in September 1945, all the knives came out from the military leadership Bush had bypassed in the war. His arguments on how to reorganize OSR&amp;D made more enemies in Congress. By 1948 Bush had retired from government service. He would never again play a role in the U.S. government.</p>
<p><strong>Divergent Legacies<br>
</strong>Britain’s focused, centralized model using government research labs was created in a struggle for short-term survival. They achieved brilliant breakthroughs but lacked the scale, integration and capital needed to dominate in the post-war world.</p>
<p>The U.S. built a decentralized, collaborative ecosystem, one that tightly integrated massive government funding of universities for research and prototypes while private industry built the solutions in volume.</p>
<p>A key component of this U.S. research ecosystem was the genius of the <a href="https://www.insidehighered.com/news/government/science-research-policy/2025/04/14/doe-puts-15-cap-universities-indirect-research" target="_blank" rel="noopener">indirect cost reimbursement system</a>. Not only did the U.S. fund researchers in universities by paying the cost of their salaries, the U.S. gave universities money for the researchers facilities and administration. This was the secret sauce that allowed U.S. universities to build world-class labs for cutting-edge research that were the envy of the world. Scientists flocked to the U.S. causing other countries to complain of a “brain drain.”</p>
<p>Today, U.S. universities license 3,000 patents, 3,200 copyrights and 1,600 other licenses to technology startups and existing companies. Collectively, they spin out over 1,100 science-based startups each year, which lead to countless products and tens of thousands of new jobs. This university/government ecosystem became the blueprint for modern innovation ecosystems for other countries.</p>
<p><strong>Summary<br>
</strong>By the end of the war, the U.S. and British innovation systems had produced radically different outcomes. Both systems were influenced by the experience and personalities of their nations science advisor.</p>
<ul>
<li>Britain remained a leader in theoretical science and defense technology, but its socialist government economic policies led to its failure to commercialize wartime innovations.</li>
<li>The U.S. emerged as the global leader in science and technology, with innovations like electronics, microwaves, computing, and nuclear power driving its post-war economic boom.</li>
<li>The university-industry-government partnership became the foundation of Silicon Valley, the aerospace sector, and the biotechnology industry.</li>
<li>Today, China’s leadership has spent the last three decades investing heavily to surpass the U.S. in science and technology.</li>
<li>In 2025, with the abandonment of U.S. government support for university research, the long run of U.S. dominance in science may be over. Others will lead.</li>
</ul>
					
					<p>
						Filed under: <a href="https://steveblank.com/category/science-and-industrial-policy/" rel="category tag">Science and Industrial Policy</a> |					</p>

				</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Chroma, Ubisoft's internal tool used to simulate color-blindness, open sourced (119 pts)]]></title>
            <link>https://github.com/ubisoft/Chroma</link>
            <guid>43692089</guid>
            <pubDate>Tue, 15 Apr 2025 13:04:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ubisoft/Chroma">https://github.com/ubisoft/Chroma</a>, See on <a href="https://news.ycombinator.com/item?id=43692089">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Chroma</h2><a id="user-content-chroma" aria-label="Permalink: Chroma" href="#chroma"></a></p>
<p dir="auto"><strong>Chroma</strong> helps in simulating different types of color blindness occurring in society.</p>
<p dir="auto">Main purpose of this is to simulate 3 major <a href="https://en.wikipedia.org/wiki/Color_blindness" rel="nofollow">Color Blindness</a> types <em>Protanopia</em>, <em>Deuteranopia</em> and <em>Tritanopia</em> for our different games and aid accessibility team in performing various complex testing.</p>
<p dir="auto">Following are key features:</p>
<ul dir="auto">
<li>
<p dir="auto">Color Simulation on single monitor. This solution works on top of game and can be maximized as per requirement.</p>
</li>
<li>
<p dir="auto">Work on all games. No dependency on any specific game or engine.</p>
</li>
<li>
<p dir="auto">High performance. Able to simulation live gameplay upto 60 FPS.</p>
</li>
<li>
<p dir="auto">Accurate results.</p>
</li>
<li>
<p dir="auto">Simulation of all type of color blind forms.</p>
</li>
<li>
<p dir="auto">Only available solution which capture screen live gameplay screen and simulate.</p>
</li>
<li>
<p dir="auto">Easy screenshot to log error.</p>
</li>
<li>
<p dir="auto">Easy and configurable UI.</p>
</li>
<li>
<p dir="auto">For more details look into userguide <a href="https://github.com/ubisoft/Chroma/blob/main/source/Userguide.pdf">here</a>.</p>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Known Issue During CMake Process</h2><a id="user-content-known-issue-during-cmake-process" aria-label="Permalink: Known Issue During CMake Process" href="#known-issue-during-cmake-process"></a></p>
<p dir="auto">If you encounter the following error while running CMake without Visual Studio 2022:</p>
<div data-snippet-clipboard-copy-content="error C2039: 'wait_for': is not a member of 'winrt::impl'"><pre><code>error C2039: 'wait_for': is not a member of 'winrt::impl'
</code></pre></div>
<p dir="auto">This issue may occur due to an outdated <code>CPPWinRT</code> library. To resolve it, install the <code>Microsoft.Windows.CppWinRT</code> NuGet package using the following command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="nuget install Microsoft.Windows.CppWinRT"><pre>nuget install Microsoft.Windows.CppWinRT</pre></div>
<p dir="auto">Alternatively, ensure that your development environment is using an updated version of <code>CPPWinRT</code>. <strong>The best option to avoid this issue is to use Visual Studio 2022.</strong></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[4chan hacked. Hacker reopens /QA/ and leaks all admins emails (278 pts)]]></title>
            <link>https://old.reddit.com/r/4chan/comments/1jzkjlg/4chan_hacked_hacker_reopens_qa_and_leaks_all/</link>
            <guid>43691334</guid>
            <pubDate>Tue, 15 Apr 2025 11:30:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://old.reddit.com/r/4chan/comments/1jzkjlg/4chan_hacked_hacker_reopens_qa_and_leaks_all/">https://old.reddit.com/r/4chan/comments/1jzkjlg/4chan_hacked_hacker_reopens_qa_and_leaks_all/</a>, See on <a href="https://news.ycombinator.com/item?id=43691334">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><hr>

<h2>Community:</h2>

<p><strong>Posts:</strong> /<a href="https://www.reddit.com/r/4chan/new/">new</a>/ /<a href="https://www.reddit.com/r/4chan/hot/">hot</a>/ /<a href="https://www.reddit.com/r/4chan/rising/">rising</a>/ /<a href="https://www.reddit.com/r/4chan/gilded/">gilded</a>/<br>
<strong>Best:</strong> /<a href="https://www.reddit.com/r/4chan/top/">day</a>/ /<a href="https://www.reddit.com/r/4chan/top/?sort=top&amp;t=week">week</a>/ /<a href="https://www.reddit.com/r/4chan/top/?sort=top&amp;t=month">month</a>/ /<a href="https://www.reddit.com/r/4chan/top/?sort=top&amp;t=year">year</a>/ /<a href="https://www.reddit.com/r/4chan/top/?sort=top&amp;t=all">all</a>/  </p>

<p><strong><em>Chat now with local singles!</em></strong>  </p>

<p>/<a href="https://www.reddit.com/chat/r/4chan/channel/343662_6b2573d529f800ceef326da71e13bb6a9de782e3/join">a</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_f86d5fc7bdaf09c426df7813bf1c67d46d15006f/join">b</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_eed3db47f1f7ca1ddab9d42d877a3614e3bb7ea9/join">biz</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_3f2b65504a81d3e556358bb5f1530fe68baf1f94/join">ck</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_15e946f2db5eb0d8787e4809523b56042323a63d/join">co</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_eefc635a36d1c9d910b370f956ac544ab298409f/join">diy</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/205434_04282ce39a208ce313848d0d5ea095efa5bae118/join">fa</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_baef63c244205db7f0a6a76c19ab7bde4ad5c858/join">fit</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_43510f7693eaba06afae4c1a9aa6b22d62887e15/join">k</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_258d605db8a8cb7f5bc088e30eb444c841aa121f/join">lit</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_3a9f6a817e8ae39b957b48cc11e2508b9489790d/join">mlp</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_2d76e3016c21a3a2b0fcf89abb377e2f52c3d739/join">mlpol</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_a96b341a1c565b265df18811b70f112d53f6527d/join">mu</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_6fa799f46bd3df5d302bd4fd91b13f4adb5cbb30/join">o</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_b3345e56f2e198ca1581ace327f42984e87bd71a/join">pol</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_df887d49f86f8597ca61658ea9bb83d735e49c29/join">r9k</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_dc72c284199781a4f5755ee6e505ddb3c054946a/join">s4s</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_4d4c8fbe77a6b408cce295a1724f258273582aaa/join">sci</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_5b6dd40f7d4733b7e547b0fc7fb6ec88db2dc70c/join">sp</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_0e092be5e18cdb325616bcaceef0f738bdf40af3/join">tg</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_5d0e6e3cd84c84bcce15e81691be2a85e5e4b6a0/join">tv</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_6a7a801d2abbef0fa6642376b93781f9d4debeb0/join">v</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_69df75f21b7947bf5c9d79cc35cadf3d1e6ff1e0/join">x</a>/ /<a href="https://www.reddit.com/chat/r/4chan/channel/343662_8252e0b914aa70162e238f3f0fcbc351d4eb948a/join">help desk</a>/  </p>

<p><strong>More Subreddits:</strong>   </p>

<p>/<a href="https://old.reddit.com/r/ChrisChanSonichu">ChrisChanSonichu</a>/</p>

<p>/<a href="https://old.reddit.com/r/r4chanmeta">r4chanmeta</a>/ /<a href="https://old.reddit.com/r/titsorgtfo">titsorgtfo</a>/ /<a href="https://old.reddit.com/r/4chanExploitables">4chanExploitables</a>/ /<a href="https://old.reddit.com/r/4ChanMeta">4ChanMeta</a>/ /<a href="https://old.reddit.com/r/Gondola">Gondola</a>/ /<a href="https://old.reddit.com/r/braveryjerk">braveryjerk</a>/ /<a href="https://old.reddit.com/r/4chanCopypasta">4chanCopypasta</a>/ /<a href="https://old.reddit.com/r/baneposting">baneposting</a>/</p>

<hr>

<h2>Rules:</h2>

<ol>
<li><p><strong>Mods = Gods</strong><br>
Do NOT break any rules that the mods might invent on the spot.  </p></li>
<li><p><strong>4chan Only</strong><br>
Do NOT post anything unrelated to 4chan. Do NOT link directly to 4chan.org. Do NOT post anything from unrelated websites. Screencaps from 4chan are ideal.  </p></li>
<li><p><strong>New Content Only</strong><br>
Do NOT post screencaps over a year old, do NOT repost, and do NOT omit the date and time stamp. Those posts belong in <a href="https://old.reddit.com/r/classic4chan">/r/classic4chan</a> (RIP).</p></li>
<li><p><strong>High Quality Only</strong><br>
This applies to quality content and quality presentation. Crop your post so it's actually legible. Don't post garbage that isn't entertaining.  </p></li>
<li><p><strong>No Redditry</strong><br>
Do NOT act like a basic reddit bitch. This includes cliche reddit phrases, subreddit mentions, puns, song lyrics, novelty accounts, getting lots of karma on a single post, sperging out at someone like a 13 year old on Xbox, and other dummy things that make you a manchild.<br>
E.g. not my proudest fap, <a href="https://old.reddit.com/r/theydidthemath">/r/theydidthemath</a>, I did nazi that coming, cake day, Fake and Gay, /u/[somethingstupid], 1000 upvotes, etc.  </p></li>
<li><p><strong>No Doxxing</strong><br>
Do NOT reveal personal information, or post 4chan screenshots that contain personal information of any individual. Do not post 4chan screenshots of Reddit account names or calls for raids. Remember, NYPA.  </p></li>
<li><p><strong>No CP</strong><br>
Do not post nude images of underage children, or say that nude images of underage children aren't child pornography, or say that nude images of underage children are okay, or describe images of underage children in text form.<br>
If we see you do this anywhere on Reddit, we will report you to the law enforcement agency of where you live.</p></li>
<li><p><strong>NSFW marking</strong><br>
Do NOT forget to mark NSFW content. The overall subreddit is SFW, so people need to really know when a submission is legit NSFW. (Potty Words are not NSFW).  </p></li>
<li><p><strong>No Grooming</strong><br>
No agendaposting.</p></li>
<li><p><strong>Admin abuse</strong><br>
The admins bypassed the mods and directly took action on the subreddit.</p></li>
</ol>

<hr>

<h2>Mods Statement:</h2>

<hr>

<p>We personally severely dislike reddit and everyone who frequents it. We believe it's a shitty, destructive echo chamber that does public harm as an internet publisher. We think this website discourages real interpersonal communication, and encourages addict-like consumption.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Whistleblower details how DOGE may have taken sensitive NLRB data (521 pts)]]></title>
            <link>https://www.npr.org/2025/04/15/nx-s1-5355896/doge-nlrb-elon-musk-spacex-security</link>
            <guid>43691142</guid>
            <pubDate>Tue, 15 Apr 2025 10:55:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.npr.org/2025/04/15/nx-s1-5355896/doge-nlrb-elon-musk-spacex-security">https://www.npr.org/2025/04/15/nx-s1-5355896/doge-nlrb-elon-musk-spacex-security</a>, See on <a href="https://news.ycombinator.com/item?id=43691142">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="storytext">
      <div id="resg-s1-59636">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/400/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/800/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/1000/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/1300/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/1600/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/2000/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/2600/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/png">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/1100/quality/50/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3600x2025+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fad%2F9a%2F7e9500df48c4b4523a0001c3be41%2Fdoge-main.png" alt="" fetchpriority="high">
        </picture>
</div>
<div>
    <div>
        <p>
                The DOGE team may have taken data related to union organizing and labor complaints and hid its tracks, according to a whistleblower.
                <b aria-label="Image credit">
                    
                    Charlotte Gomez for NPR
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Charlotte Gomez for NPR
        
    </span>
</p></div>
   </div>
   <p>In the first days of March, a team of advisers from President Trump's new Department of Government Efficiency initiative arrived at the Southeast Washington, D.C., headquarters of the National Labor Relations Board.</p>   <p>The small, independent federal agency investigates and adjudicates complaints about unfair labor practices. It stores reams of potentially sensitive data, from confidential information about employees who want to form unions to proprietary business information.</p>   <p>The DOGE employees, who are effectively led by White House adviser and billionaire tech CEO Elon Musk, appeared to have their sights set on accessing the NLRB's internal systems. They've said their unit's overall mission is to review agency data for compliance with the new administration's policies and to cut costs and maximize efficiency.</p>   
   <p>But according to an official whistleblower disclosure shared with Congress and other federal overseers that was obtained by NPR, subsequent interviews with the whistleblower and records of internal communications, technical staff members were alarmed about what DOGE engineers did when they were granted access, particularly when those staffers noticed a spike in data leaving the agency. It's possible that the data included sensitive information on unions, ongoing legal cases and corporate secrets — data that four labor law experts tell NPR should almost never leave the NLRB and that has nothing to do with making the government more efficient or cutting spending.</p>   
   
<!-- END ID="RESNX-S1-5355896-100" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>Meanwhile, according to the disclosure and records of internal communications, members of the DOGE team asked that their activities not be logged on the system and then appeared to try to cover their tracks behind them, turning off monitoring tools and manually deleting records of their access — evasive behavior that several cybersecurity experts interviewed by NPR compared to what criminal or state-sponsored hackers might do.</p>   <div id="resg-s1-59679">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/6750x4500+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F48%2Ff5%2F1bb3e223420e87981a07ebfe8776%2Fgettyimages-2203694324.jpg" alt="White House senior adviser Elon Musk walks to the White House after landing in Marine One with President Trump on March 9." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                White House senior adviser Elon Musk walks to the White House after landing in Marine One with President Trump on March 9.
                <b aria-label="Image credit">
                    
                    Samuel Corum/Getty Images
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Samuel Corum/Getty Images
        
    </span>
</p></div>
   </div>
   <p>The employees grew concerned that the NLRB's confidential data could be exposed, particularly after they started detecting suspicious log-in attempts from an IP address in Russia, according to the disclosure. Eventually, the disclosure continued, the IT department launched a formal review of what it deemed a serious, ongoing security breach or potentially illegal removal of personally identifiable information. The whistleblower believes that the suspicious activity warrants further investigation by agencies with more resources, like the Cybersecurity and Infrastructure Security Agency or the FBI.</p>   
   <p>The labor law experts interviewed by NPR fear that if the data gets out, it could be abused, including by private companies with cases before the agency that might get insights into damaging testimony, union leadership, legal strategies and internal data on competitors — Musk's SpaceX among them. It could also intimidate whistleblowers who might speak up about unfair labor practices, and it could sow distrust in the NLRB's independence, they said.</p>   
   
<!-- END ID="RESNX-S1-5355896-101" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>The new revelations about DOGE's activities at the labor agency come from a whistleblower in the IT department of the NLRB, who disclosed his concerns to Congress and the U.S. Office of Special Counsel in a detailed report that was then provided to NPR. Meanwhile, his attempts to raise concerns internally within the NLRB preceded someone "physically taping a threatening note" to his door that included sensitive personal information and overhead photos of him walking his dog that appeared to be taken with a drone, according to a cover letter attached to his disclosure filed by his attorney, Andrew Bakaj of the nonprofit Whistleblower Aid.</p>   <p>The whistleblower's account is corroborated by internal documentation and was reviewed by 11 technical experts across other government agencies and the private sector. In total, NPR spoke to over 30 sources across the government, the private sector, the labor movement, cybersecurity and law enforcement who spoke to their own concerns about how DOGE and the Trump administration might be handling sensitive data, and the implications for its exposure. Much of the following account comes from the whistleblower's official disclosure and interviews with NPR.</p>   <p>"I can't attest to what their end goal was or what they're doing with the data," said the whistleblower, Daniel Berulis, in an interview with NPR. "But I can tell you that the bits of the puzzle that I can quantify are scary. ... This is a very bad picture we're looking at."</p>   
   
<!-- END ID="RESNX-S1-5355896-102" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>The whistleblower's story sheds further light on how DOGE is operating inside federal systems and comes on the heels of <a href="https://www.npr.org/2025/03/26/nx-s1-5339842/doge-data-access-privacy-act-social-security-treasury-opm-lawsuit" target="_blank">testimony in more than a dozen court cases</a> across the United States that reveal how DOGE rapidly gained access to <a href="https://www.npr.org/2025/03/11/nx-s1-5305054/doge-elon-musk-security-data-information-privacy" target="_blank">private financial and personal information on hundreds of millions of Americans</a>. It's unclear how or whether DOGE is protecting the privacy of that data. Meanwhile, the threatening note, though its origins are unknown, is reflective of the current climate of fear and intimidation toward whistleblowers.</p>   
   
<!-- END ID="RESNX-S1-5355896-103" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>Tim Bearese, the NLRB's acting press secretary, denied that the agency granted DOGE access to its systems and said DOGE had not requested access to the agency's systems. Bearese said the agency conducted an investigation after Berulis raised his concerns but "determined that no breach of agency systems occurred."</p>   <p>Notwithstanding the NLRB's denial, the whistleblower's disclosure to Congress and other federal overseers includes forensic data and records of conversations with colleagues that provide evidence of DOGE's access and activities. Meanwhile, NPR's extensive reporting makes clear that DOGE's access to data is a widespread concern. Across the government, 11 sources directly familiar with internal operations in federal agencies and in Congress told NPR that they share Berulis' concerns, and some have seen other evidence that DOGE is exfiltrating sensitive data for unknown reasons.</p>   
   <p>A representative of DOGE did not respond to NPR's requests for comment.<br></p>   <h3>Taking apart computers to protecting government data</h3>   <p>Instead of a brand-new car for a 16th-birthday present, Berulis got his first computer.</p>   <p>It's a familiar story for tech nerds the world over: He methodically took the machine apart "to figure out how it works," just like he had dissected radios from the thrift store years earlier. "I electrocuted myself once," he recalled.</p>   <p>Berulis was always interested in public service, but the traditional paths didn't suit him.</p>   
   
<!-- END ID="RESNX-S1-5355896-104" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>A knee injury prevented him from joining the military. He served as a volunteer firefighter for a period and donated his time working for a local rape crisis hotline, answering calls from victims in need of someone to listen. But, he told NPR, "I had an interest in serving my country."</p>   <p>Berulis had been a technical consultant for many years, including in auditing and modernizing corporate systems, when a job opened up at the National Labor Relations Board.</p>   <div id="resg-s1-60225">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8523x5682+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F7a%2F5b%2F795c00cd46f99044a94aa1d5923c%2Fdoge-edit-1.jpg" alt="Daniel Berulis started working at the National Labor Relations Board about six months before President Trump started his second term." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                Daniel Berulis started working at the National Labor Relations Board about six months before President Trump started his second term.
                <b aria-label="Image credit">
                    
                    Grace Raver/NPR
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Grace Raver/NPR
        
    </span>
</p></div>
   </div>
   <p>While he didn't know much about the agency, Berulis<strong> </strong>quickly found its mission to protect employees' rights in line with his long-standing desire "to help people."</p>   <p>He started about six months before President Trump was inaugurated for his second term this past January. Berulis said he hit the ground running, securing the NLRB's cloud-based data servers and reinforcing what's called "zero trust" principles, which means that users can get access only to the parts of the system they need in order to do their jobs — no more, no less. That way, if an attacker gets hold of a single username and password, the attacker can't access the whole system.</p>   <p>"When I first started, it was a dream come true," he said. "There was a great opportunity to build up and do some good." But after the inauguration, he described a "culture of fear" descending over the agency.<br></p>   
   <h3>DOGE arrives&nbsp;</h3>   <p>The first week of March, engineers associated with DOGE arrived at the NLRB's headquarters, according to Berulis' disclosure. Beforehand, they had asked about what software, hardware, programming languages and applications the NLRB was using. DOGE learned that it used commercially available cloud infrastructure that businesses typically use, which connects to government cloud systems at other agencies and can be accessed remotely.</p>   <p>Berulis said he and several colleagues saw a black SUV and police escort enter the garage, after which building security let the DOGE staffers in. They interacted with a small number of staffers, never introducing themselves to most of the IT team.</p>   <p>Berulis says he was told by colleagues that DOGE employees demanded the highest level of access, what are called "tenant owner level" accounts inside the independent agency's computer systems, with essentially unrestricted permission to read, copy and alter data, according to Berulis' disclosure.</p>   <p>When an IT staffer suggested a streamlined process to activate those accounts in a way that would let their activities be tracked, in accordance with NLRB security policies, the IT staffers were told to stay out of DOGE's way, the disclosure continues.</p>   <p>For cybersecurity professionals, a failure to log activity is a cardinal sin and contradicts best practices as recommended by the <a href="https://www.nist.gov/cyberframework" target="_blank">National Institute of Standards and Technology</a> and the Department of Homeland Security's Cybersecurity and Infrastructure Security Agency, as well as the FBI and the National Security Agency.</p>   <p>"That was a huge red flag," said Berulis. "That's something that you just don't do. It violates every core concept of security and best practice."</p>   <div data-crop-type="" id="resg-s1-59634">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/400/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/800/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1000/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1300/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1600/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/2000/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/2600/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/png">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1100/quality/50/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F09%2Fe2%2F9f2467c44b4d83977ce269bc6eed%2Fdoge-spot-01.png" alt="Doge_Spot_01.png" loading="lazy">
        </picture>
</div>
   <p>Those forensic digital records are important for record-keeping requirements and they allow for troubleshooting, but they also allow experts to investigate potential breaches, sometimes even tracing the attacker's path back to the vulnerability that let them inside a network. The records can also help experts see what data might have been removed. Basic logs would likely not be enough to demonstrate the extent of a bad actor's activities, but it would be a start. There's no reason for any legitimate user to turn off logging or other security tools, cybersecurity experts say.</p>   
   <p>"None of this is normal," said Jake Braun, the executive director of the Cyber Policy Initiative at the University of Chicago's Harris School of Public Policy and former acting principal deputy national cyber director at the White House, in an interview with NPR about the whistleblower's disclosure. "This type of activity is why the government buys insider-threat-monitoring technology. So we can know things like this are happening and stop sensitive data exfiltration before it happens," he told NPR.</p>   <p>However, the NLRB's budget hasn't had the money to pay for tools like that for years, Berulis said.<br></p>   <h3>A backdoor to government systems?</h3>   <p>A couple of days after DOGE arrived, Berulis saw something else that alarmed him while browsing the internet over the weekend.</p>   <p>Massachusetts Institute of Technology graduate and DOGE engineer Jordan Wick had been sharing information about coding projects he was working on to his public account with GitHub, a website that allows developers to create, store and collaborate on code.</p>   <p>After journalist Roger Sollenberger started <a href="https://x.com/SollenbergerRC/status/1895609294810464390" target="_blank">posting on X</a> about the account, Berulis noticed something Wick was working on: a project, or repository, titled "NxGenBdoorExtract."</p>   <p>Wick made it private before Berulis could investigate further, he told NPR. But to Berulis, the title itself was revealing.</p>   <p>"So when I saw this tool, I immediately panicked, just for lack of a better term," he said. "I kind of had a conniption and said, 'Whoa, whoa, whoa.'" He immediately alerted his whole team.</p>   <p>While NPR was unable to recover the code for that project, the name itself suggests that Wick could have been designing a backdoor, or "Bdoor," to extract files from the NLRB's internal case management system, known as NxGen, according to several cybersecurity experts who reviewed Berulis' conclusions.</p>   <p>Wick did not respond to NPR's requests for comment.</p>   <div id="resg-s1-60224">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/400/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/800/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/1000/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/1300/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/1600/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/2000/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/2600/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/png">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/1100/quality/50/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/538x575+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F8f%2Fe2%2Fb5ea0e5d406bba8c5eb9fc343604%2Fdoge-github-data-annotation.png" alt="A screenshot of DOGE engineer Jordan Wick's public GitHub account that shows &quot;NxGenBdoorExtract.&quot; The name itself suggests that Wick could have been designing a backdoor, or &quot;Bdoor,&quot; to extract files from the NLRB's internal case management system." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                A screenshot of DOGE engineer Jordan Wick's public GitHub account that shows "NxGenBdoorExtract." The name itself suggests that Wick could have been designing a backdoor, or "Bdoor," to extract files from the NLRB's internal case management system.
                <b aria-label="Image credit">
                    
                    Daniel Berulis/Annotation by NPR
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Daniel Berulis/Annotation by NPR
        
    </span>
</p></div>
   </div>
   <p>"It definitely seems rather odd to name it that," said one of the engineers who built NxGen and asked for anonymity so as not to jeopardize their ability to work with the government again. "Or brazen, if you're not worried about consequences."</p>   
   <p>"The whole idea of removing logging and [getting] tenant-level access is the most disturbing part to me," the engineer said.</p>   <p>NxGen is an <a href="https://www.governmentattic.org/57docs/NLRBnxGenCMSreplace2024-2025.pdf" target="_blank">internal system</a> that was designed specifically for the NLRB in-house, according to several of the engineers who created the tool and who all spoke to NPR on condition of anonymity to avoid retaliation or adverse consequences for any future government work.</p>   <p>The engineers explained that while many of the NLRB's records are eventually made public, the NxGen case management system hosts proprietary data from corporate competitors, personal information about union members or employees voting to join a union, and witness testimony in ongoing cases. Access to that data is protected by numerous federal laws, including the Privacy Act.</p>   <p>Those engineers were also concerned by DOGE staffers' insistence that their activities not be logged, allowing them to probe the NLRB's systems and discover information about potential security flaws or vulnerabilities without being detected.</p>   <p>"If he didn't know the backstory, any [chief information security officer] worth his salt would look at network activity like this and assume it's a nation-state attack from China or Russia," said Braun, the former White House cyber official.<br></p>   <h3>Putting the puzzle pieces together</h3>   <p>About a week after arriving, the DOGE engineers had left the NLRB and deleted their accounts, according to Berulis' disclosure to Congress.</p>   <p>In the office, Berulis had had limited visibility into what the DOGE team was up to in real time.</p>   <p>That's partly because, he said, the NLRB isn't advanced when it comes to detecting insider threats or potentially malicious actors inside the agency itself. "We as an agency have not evolved to account for those," he explained. "We were looking for [bad actors] outside," he said.</p>   <p>But he counted on DOGE leaving at least a few traces of its activity behind, puzzle pieces he could assemble to try to put together a picture of what happened — details he included in his official disclosure.</p>   
   <p>First, at least one DOGE account was created and later deleted for use in the NLRB's cloud systems, hosted by Microsoft: "<a href="mailto:DogeSA_2d5c3e0446f9@nlrb.microsoft.com" target="_blank">DogeSA_2d5c3e0446f9@nlrb.microsoft.com</a>."</p>   <p>Then, DOGE engineers installed what's called a "container," a kind of opaque virtual computer that can run programs on a machine without revealing its activities to the rest of the network. On its own, that wouldn't be suspicious, though it did allow the engineers to work invisibly and left no trace of its activities once it was removed.</p>   <p>Then, Berulis started tracking sensitive data leaving the places it's meant to live, according to his official disclosure. First, he saw a chunk of data exiting the NxGen case management system's "nucleus," inside the NLRB system, Berulis explained. Then, he saw a large spike in outbound traffic leaving the network itself.</p>   <div id="resg-s1-60219">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2048x1455+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F3e%2F38%2F4f7753974f60b1833783b65ddd52%2Fdoge-data-leaving.jpg" alt="This screenshot shows a large spike in outbound traffic leaving the NLRB system." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                This screenshot shows a large spike in outbound traffic leaving the NLRB system.
                <b aria-label="Image credit">
                    
                    Whistleblower Aid
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Whistleblower Aid
        
    </span>
</p></div>
   </div>
   <p>From what he could see, the data leaving, almost all text files, added up to around 10 gigabytes — or the equivalent of a full stack of encyclopedias if someone printed them, he explained. It's a sizable chunk of the total data in the NLRB system, though the agency itself hosts over 10 terabytes in historical data. It's unclear which files were copied and removed or whether they were consolidated and compressed, which could mean even more data was exfiltrated. It's also possible that DOGE ran queries looking for specific files in the NLRB's system and took only what it was looking for, according to the disclosure.</p>   <p data-pym-loader="" data-child-src="https://apps.npr.org/dailygraphics/graphics/doge-nlrb-diagrams-20250404/container.html" id="responsive-embed-doge-nlrb-diagrams-20250404-container"> Loading... </p>
   
<!-- END ID="RESNX-S1-5355896-105" CLASS="BUCKETWRAP STATICHTML" -->
   <p>Regardless, that kind of spike is extremely unusual, Berulis explained, because data almost never directly leaves from the NLRB's databases. In his disclosure, Berulis shared a screenshot tracking data entering and exiting the system, and there's only one noticeable spike of data going out. He also confirmed that no one at the NLRB had been saving backup files that week or migrating data for any projects.</p>   <p>Even when external parties like lawyers or overseers like the inspector general are granted guest accounts on the system, it's only to view the files relevant to their case or investigation, explained labor law experts who worked with or at the NLRB, in interviews with NPR.</p>   <p>"None of that confidential and deliberative information should ever leave the agency," said Richard Griffin, who was the NLRB general counsel from 2013 to 2017, in an interview with NPR.<br></p>   <h3>"We are under assault right now"</h3>   <p>For cybersecurity experts, that spike in data leaving the system is a key indicator of a breach, Berulis explained.</p>   
   <p>"We are under assault right now," he remembered thinking.</p>   <p>When Berulis asked his IT colleagues whether they knew why the data was exfiltrated or whether anyone else had been using containers to run code on the system in recent weeks, no one knew anything about it or the other unusual activities on the network, according to his disclosure. In fact, when they looked into the spike, they found that logs that were used to monitor outbound traffic from the system were absent. Some actions taken on the network, including data exfiltration, had no attribution — except to a "deleted account," he continued. "Nobody knows who deleted the logs or how they could have gone missing," Berulis<strong> </strong>said.</p>   <p>The IT team met to discuss insider threats — namely, the DOGE engineers, whose activities it had little insight into or control over. "We had no idea what they did," he explained. Those conversations are reflected in his official disclosure.</p>   <p>They eventually launched a formal breach investigation, according to the disclosure, and prepared a request for assistance from the Cybersecurity and Infrastructure Security Agency (CISA). However, those efforts were disrupted without an explanation, Berulis said. That was deeply troubling to Berulis, who felt he needed help to try to get to the bottom of what happened and determine what new vulnerabilities might be exploited as a result.</p>   <p>In the days after Berulis and his colleagues prepared a request for CISA's help investigating the breach, Berulis found a printed letter in an envelope taped to his door, which included threatening language, sensitive personal information and overhead pictures of him walking his dog, according to the cover letter attached to his official disclosure. It's unclear who sent it, but the letter made specific reference to his decision to report the breach. Law enforcement is investigating the letter.</p>   
   <p>"If the underlying disclosure wasn't concerning enough, the targeted, physical intimidation and surveillance of my client is. If this is happening to Mr. Berulis, it is likely happening to others and brings our nation more in line with authoritarian regimes than with open and free democracies," wrote Bakaj, his attorney, in a statement sent to NPR. "It is time for everyone – and Congress in particular – to acknowledge the facts and stop our democracy, freedom, and liberties from slipping away, something that will take generations to repair."</p>   <p>In part because of the stymied internal investigation and the attempts to silence him, Berulis decided to come forward publicly.</p>   <p>In fact, despite all that, Berulis managed to uncover some stranger and more troubling details about what happened while DOGE was logged on, which he enumerated in his official declaration.</p>   <p>Unknown users also gave themselves a high-level access key, what's called a SAS token, meaning "shared access signature," to access storage accounts, before deleting it. Berulis said there was no way to track what they did with it.</p>   <p>Someone had disabled controls that would prevent insecure or unauthorized mobile devices from logging on to the system without the proper security settings. There was an interface exposed to the public internet, potentially allowing malicious actors access to the NLRB's systems. Internal alerting and monitoring systems were found to be manually turned off. Multifactor authentication was disabled. And Berulis noticed that an unknown user had exported a "user roster," a file with contact information for outside lawyers who have worked with the NLRB.</p>   <p>Berulis said he noticed five PowerShell downloads on the system, a task automation program that would allow engineers to run automated commands. There were several code libraries that got his attention — tools that he said appeared to be designed to automate and mask data exfiltration. There was a tool to generate a seemingly endless number of IP addresses called "requests-ip-rotator," and a commonly used automation tool for web developers called "browserless" — both repositories starred or favorited by Wick, the DOGE engineer, according to an archive of his GitHub account reviewed by NPR.</p>   
   <p>While investigating the data taken from the agency, Berulis tried to determine its ultimate destination. But whoever had exfiltrated it had disguised its destination too, according to the disclosure.</p>   <p>DOGE staffers had permission to access the system, but removing data is another matter.</p>   <p>Berulis says someone appeared to be doing something called DNS tunneling to prevent the data exfiltration from being detected. He came to that conclusion, outlined in his disclosure, after he saw a traffic spike in DNS requests parallel to the data being exfiltrated, a spike 1,000 times the normal number of requests.</p>   <p>When someone uses this kind of technique, they set up a domain name that pings the target system with questions or queries. But they configure the compromised server so that it answers those DNS queries by sending out packets of data, allowing the attacker to steal information that has been broken down into smaller chunks.</p>   <p>"We've seen Russian threat actors do things like this on U.S. government systems," said one threat intelligence researcher who requested anonymity because they weren't authorized to speak publicly by their employer. That analyst, who has extensive experience hunting nation-state-sponsored hackers, reviewed the whistleblower's technical claims.</p>   <p>"The difference is, they were given the keys to the front door," the researcher continued. While the researcher clarified that it would be difficult to fully verify what happened without full access to the NLRB system, they said Berulis' conclusions and accompanying evidence were a cause for concern. "None of this is standard," they said.</p>   <p>Russ Handorf, who served in the FBI for a decade in various cybersecurity roles, also reviewed Berulis' extensive technical forensic records and analysis and spoke to NPR about his conclusions.</p>   <p>"All of this is alarming," he said. "If this was a publicly traded company, I would have to report this [breach] to the Securities and Exchange Commission. The timeline of events demonstrates a lack of respect for the institution and for the sensitivity of the data that was exfiltrated. There is no reason to increase the security risk profile by disabling security controls and exposing them, less guarded, to the internet. They didn't exercise the more prudent standard practice of copying the data to encrypted and local media for escort."</p>   <p>"Until there's an investigation done, there's no way to definitively prove who did it," Handorf concluded.<br></p>   <h3>"No reason whatsoever for accessing the information"</h3>   <div id="resg-s1-60227">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5000x3335+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Ff0%2F87%2F4722e7324f15aaa3ec8dbfdcebea%2Fgettyimages-1172591604.jpg" alt="The National Labor Relations Board seal hangs inside a hearing room at the agency's headquarters in Washington, D.C., in 2019." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                The National Labor Relations Board seal hangs inside a hearing room at the agency's headquarters in Washington, D.C., in 2019.
                <b aria-label="Image credit">
                    
                    Andrew Harrer/Bloomberg via Getty Images
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Andrew Harrer/Bloomberg via Getty Images
        
    </span>
</p></div>
   </div>
   <p>DOGE's intentions with regard to the NLRB data remain unclear. Many of the systems that DOGE embedded itself in across the rest of the government <a href="https://www.npr.org/2025/03/08/nx-s1-5321323/trump-doge-gsa-federal-buildings" target="_blank">have payment or employment data</a>, information that it could use to evaluate which grants and programs to halt and whom to fire.</p>   
   
<!-- END ID="RESNX-S1-5355896-106" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>But the case management system is very different.</p>   <p>It houses information about ongoing contested labor cases, lists of union activists, internal case notes, personal information from Social Security numbers to home addresses, proprietary corporate data and more information that never gets published openly.</p>   
   
<!-- END ID="RESNX-S1-5355896-107" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>Experts interviewed by NPR acknowledge that there are inefficiencies across government that warrant further review, but they say they don't see a single legitimate reason that DOGE staffers would need to remove the data from the case management system to resolve those problems.</p>   <p>"There is no reason whatsoever for accessing the information. Now, could any agency be more efficient? More effective? Positively. But what you need for that is people who understand what the agency does. That is not by mining data, putting algorithms in and creating a breach of security," said Harley Shaiken, a professor emeritus at the University of California, Berkeley who specializes in labor and information technology.</p>   <p>"There is nothing that I can see about what DOGE is doing that follows any of the standard procedures for how you do an audit that has integrity and that's meaningful and will actually produce results that serve the normal auditing function, which is to look for fraud, waste and abuse," said Sharon Block, the executive director of Harvard Law School's Center for Labor and a Just Economy and a former NLRB board member.</p>   <p>"The mismatch between what they're doing and the established, professional way to do what they say they're doing ... that just kind of gives away the store, that they are not actually about finding more efficient ways for the government to operate," Block said.</p>   <p>For labor law experts, the mere possibility that sensitive records were copied is a serious danger that could create a chilling effect for employees everywhere who turn to the National Labor Relations Board for protection.</p>   <p>"Just saying that they have access to the data is intimidating," said Kate Bronfenbrenner, the director of labor education research at Cornell University and co-director of the Worker Empowerment Research Network. "People are going to go, 'I'm not going to testify before the board because, you know, my employer might get access.'"</p>   <p>Bronfenbrenner, the child of immigrant parents who fled the Soviet Union and Nazi-controlled Germany, said she spends a lot of time thinking about how systems can crumble under the right circumstances. "You know, there's this belief that we have these checks and balances … but anyone who's part of the labor movement should know that's not true," she told NPR.</p>   <p>With access to the data, it would make it easier for companies to fire employees for union organizing or keep blacklists of organizers — illegal activities under federal labor laws enforced by the NLRB. But "people get fired in this country all the time for the lawful act of trying to organize a union," said Block.</p>   <p>Having a copy of the opposing counsel's notes as companies prepare for legal challenges would also be an attractive possibility, she continued.</p>   
   
<!-- END ID="RESNX-S1-5355896-108" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>It's not just employees who might suffer if this data got out. Companies also sometimes provide detailed statements on internal business planning and corporate structure in the midst of unfair-labor-practice complaint proceedings. If a company was attempting to fire someone who it alleged had disclosed trade secrets and was fighting an unfair-labor-practice complaint based around that decision, those trade secrets might come up in the board's investigation too. That information would be valuable to competitors, regulators and others.</p>   <p>Overall, the potential exposure of the NLRB's data could have serious implications.</p>   <p>"I think it is very concerning," said Shaiken. "It could result in damage to individual workers, to union-organizing campaigns and to unions themselves," he said.</p>   <p>"It is bringing a wrecking ball into the dentist office, meaning this is wildly disproportionate and raises real dangers," Shaiken continued.<br></p>   <h3>A conflict of interest and the dangers of exposure</h3>   <p>Labor law experts were particularly concerned about what they described as clear conflicts of interest, particularly when it comes to Elon Musk, his companies and his vast network of former employees and allies who are now getting access to government jobs and data.</p>   
   
<!-- END ID="RESNX-S1-5355896-109" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>Trump and Musk, during an interview with Fox News's Sean Hannity, said Musk would recuse himself from anything involving his companies. "I haven't asked the president for anything ever," <a href="https://www.whitehouse.gov/remarks/2025/02/interview-of-president-trump-and-elon-musk-by-sean-hannity-the-sean-hannity-show/" target="_blank">Musk said</a>. "I'm getting a sort of a daily proctology exam here. You know, it's not like I'll be getting away [with] something in the dead of night." However, DOGE has been granted high-level access to a lot of data that could benefit Musk, and there has been no evidence of a firewall preventing misuse of that data.</p>   
   
<!-- END ID="RESNX-S1-5355896-110" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>There are multiple ongoing cases involving Musk and the NLRB. For one, after a group of former SpaceX employees lodged a complaint with the NLRB, lawyers representing SpaceX, some of whom were <a href="https://www.npr.org/2025/03/27/nx-s1-5341559/lawyer-represented-musk-spacex-downsize-federal-contractors-watchdog" target="_blank">recently hired into government jobs</a>, <a href="https://www.npr.org/2024/11/18/nx-s1-5192918/spacex-amazon-nlrb-labor-board-elon-musk" target="_blank">filed suit against the NLRB.</a> They argued that the agency's structure is unconstitutional.</p>   <div id="resg-s1-60218">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/8256x5504+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F77%2Ff8%2F29b23df04f55968adadb2255f074%2Fgettyimages-2185639186.jpg" alt="Elon Musk speaks with then-President-elect Donald Trump and guests at a viewing of the launch of the sixth test flight of the SpaceX Starship rocket on November 19, 2024, in Brownsville, Texas." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                Elon Musk speaks with then-President-elect Donald Trump and guests at a viewing of the launch of the sixth test flight of the SpaceX Starship rocket on Nov. 19, 2024, in Brownsville, Texas.
                <b aria-label="Image credit">
                    
                    Brandon Bell/Getty Images
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Brandon Bell/Getty Images
        
    </span>
</p></div>
   </div>
   <p>Sen. Chris Murphy, D-Conn. <a href="https://www.murphy.senate.gov/newsroom/press-releases/murphy-presses-labor-secretary-nominee-on-protecting-sensitive-data-and-the-nlrb-from-elon-musk" target="_blank">raised his concerns </a>about Musk accessing sensitive labor investigation data on cases against his companies or competitors during the confirmation hearing for Trump's labor secretary, Lori Chavez-DeRemer, in mid-February. He pressed her to answer whether she believed the NLRB is constitutional and to commit to keeping sensitive data confidential. While she said she was committed to "privacy" and said she respects the NLRB's "authority," she insisted that Trump "has the executive power to exercise it as he sees fit."</p>   <p>All this is happening in the context of a broader attempt by the White House to hamstring labor agencies.</p>   <p>The NLRB was created "to guarantee workers' rights to organize and to address problems that workers have in the workplace," said Shaiken, of UC Berkeley. Under President Joe Biden, he recalled, the labor movement enjoyed an unusual amount of support from Washington. "But what we have seen is a sharp slamming of the brakes to that and putting the vehicle in reverse in terms of what Trump has done so far," he continued.</p>   <p>In addition to sending DOGE to the NLRB, the Trump administration tried to neutralize the board's power to enforce labor law by removing its member Gwynne Wilcox. Courts have gone <a href="https://bsky.app/profile/kyledcheney.bsky.social/post/3lm7wvvih4c27" target="_blank">back and forth</a> on whether Wilcox's removal was illegal, as presidents are meant to demonstrate cause for dismissal of independent board members.</p>   <p>Representatives of DOGE and former colleagues of Musk's who have been installed across the federal government have failed to reassure the public or the courts that they have taken the proper precautions to protect the data they're ingesting and that private business interests won't influence how that data is used or what policy decisions are made, Block and the other labor law experts interviewed by NPR say.</p>   <p>"It's not that he's a random person who's getting information that a random person shouldn't have access to," said Harvard Law's Block. "But if they really did get everything, then he has information about the cases the government is building against him," she said.</p>   <p>"DOGE is, whether they admit it or not, headed by somebody who is the subject of active investigation and prosecution of cases. It is incredibly troubling," she said.</p>   <p>Musk's company xAI could also benefit from sucking up all the data DOGE has collected to train its algorithms. Cybersecurity experts like Bruce Schneier, a well-known cryptographer and adjunct lecturer at the Harvard Kennedy School, have <a href="https://www.hks.harvard.edu/faculty-research/policy-topics/science-technology-data/doge-putting-countrys-data-and-computing" target="_blank">pointed to this concern</a> at length in interviews and written pieces.</p>   <p>According to two federal government sources who were not authorized to speak publicly about their workplaces and who shared email documentation with NPR, managers have consistently been warning employees that their data could be subject to AI review, particularly their email responses to the Musk-led campaign to get federal employees to detail "what they did last week" in five bullet points every Monday.</p>   <p>"It's not a flight of imagination to see several DOGE staffers release some of that [data] surreptitiously to Musk or people close to him," said Shaiken.<br></p>   <h3>Access for adversaries</h3>   <div data-crop-type="" id="resg-s1-59635">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/400/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/800/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1000/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1300/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1600/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/2000/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/2600/quality/85/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/png">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/1100/quality/50/format/png/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2500x1875+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F31%2Fac%2F88dc9f014080a4834083d858806b%2Fdoge-spot-02.png" alt="Doge_Spot_02.png" loading="lazy">
        </picture>
</div>
   <p>If the data isn't properly protected after it leaves the agency or if DOGE left a digital door open to the agency itself, data could also be exposed to potential sale or theft by criminals or foreign adversaries. An attacker could also try to take advantage of the connections between the NLRB's cloud account and other government cloud environments, using their access to the NLRB as a foothold to move to other networks.</p>   <p>"Both criminals and foreign adversaries traditionally have used information like this to enrich themselves through a variety of actions," explained Handorf, the former FBI cyber official. "That includes blackmail, targeting and prioritizing intellectual property theft for espionage or even harming a company to enrich another."</p>   <p>Within minutes after DOGE accessed the NLRB's systems, someone with an IP address in Russia started trying to log in, according to Berulis' disclosure. The attempts were "near real-time," according to the disclosure. Those attempts were blocked, but they were especially alarming. Whoever was attempting to log in was using one of the newly created DOGE accounts — and the person had the correct username and password, according to Berulis. While it's possible the user was disguising their location, it's highly unlikely they'd appear to be coming from Russia if they wanted to avoid suspicion, cybersecurity experts interviewed by NPR explained.</p>   <p>On their own, a few failed login attempts from a Russian IP address aren't a smoking gun, those cybersecurity experts interviewed by NPR said. But given the overall picture of activity, it's a concerning sign that foreign adversaries may already be searching for ways into government systems that DOGE engineers may have left exposed.</p>   <p>"When you move fast and break stuff, the opportunity to ride the coattails of authorized access is ridiculously easy to achieve," said Handorf. What he means is that if DOGE engineers left access points to the network open, it would be very easy for spies or criminals to break in and steal data behind DOGE.</p>   <p>He said he could also see foreign adversaries trying to recruit or pay DOGE team members for access to sensitive data. "It would not surprise me if DOGE is accidentally compromised."</p>   <p>"This is exactly why we usually architect systems using best practices like the principle of least privilege," Ann Lewis, the former director of Technology Transformation Services at the General Services Administration, told NPR in an interview. "The principle of least privilege is a fundamental cybersecurity concept … that states that users should have only the minimum rights, roles and permissions required to perform their roles and responsibilities. This protects access to high-value data and critical assets and helps prevent unauthorized access, accidental damage from user errors and malicious actions. "</p>   <p>Bakaj, Berulis' lawyer, told NPR in a written statement: "This case has been particularly sensitive as it involves the possibility of sophisticated foreign intelligence gaining access to sensitive government systems, which is why we went to the Senate Intelligence Committee directly."<br></p>   <h3><strong>A troubling pattern</strong></h3>   <p>The NLRB isn't alone in those concerns.</p>   <p>In over a dozen lawsuits in federal courts <a href="https://www.npr.org/2025/03/26/nx-s1-5339842/doge-data-access-privacy-act-social-security-treasury-opm-lawsuit" target="_blank">around the country</a>, judges have demanded that DOGE explain why it needs such expansive access to sensitive data on Americans, from Social Security records to private medical records and tax information. But the Trump administration has been unable to give consistent and clear answers, largely dismissing cybersecurity and privacy concerns.</p>   <p>In one case dealing with Treasury Department payment systems that control trillions of dollars in federal spending, U.S. District Judge Jeannette Vargas <a href="https://www.npr.org/2025/03/31/nx-s1-5345708/doge-data-access-labor-cfpb-hhs" target="_blank">blocked DOGE access</a> on Feb. 21, finding "a real possibility exists that sensitive information has already been shared outside of the Treasury Department, in potential violation of federal law."</p>   <p>It's an <a href="https://oversightdemocrats.house.gov/news/press-releases/committee-democrats-are-shining-light-doges-dark-dealings" target="_blank">area of focus </a>for Democratic lawmakers on the House Committee on Oversight and Government Reform.</p>   <div id="resg-s1-60265">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/3128x2085+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2F00%2F20%2Fbce2d3214d218b126bca9a259595%2Fap25072786044651.jpg" alt="U.S. District Judge Jeannette Vargas blocked DOGE access to the Treasury Department over the possibility that &quot;sensitive information has already been shared outside of the Treasury Department.&quot;" loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                U.S. District Judge Jeannette Vargas blocked DOGE access to the Treasury Department over the possibility that "sensitive information has already been shared outside of the Treasury Department."
                <b aria-label="Image credit">
                    
                    Alex Brandon/AP
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Alex Brandon/AP
        
    </span>
</p></div>
   </div>
   <p>An aide for the Democratic minority on the House Oversight Committee who was not authorized to speak publicly told NPR that the committee is in possession of multiple verifiable reports showing that DOGE has exfiltrated sensitive government data across agencies for unknown purposes, revealing that Berulis' disclosure is not an isolated incident.</p>   
   
<!-- END ID="RESNX-S1-5355896-111" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>But government cybersecurity officials are already resigning or being fired, forced to relocate or put on administrative leave all over the federal government, from the <a href="https://www.npr.org/2025/02/11/nx-s1-5293521/foreign-influence-elections-cisa-trump" target="_blank">Cybersecurity and Infrastructure Security Agency</a> to the <a href="https://www.npr.org/2025/03/20/nx-s1-5333655/interior-department-budget-cuts-doge" target="_blank">Interior Department</a>. That has limited their power to respond to the ongoing disruptions or keep track of what DOGE is doing.</p>   
   
<!-- END ID="RESNX-S1-5355896-112" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>One of the first people to speak out about DOGE's access to sensitive data was Erie Meyer, who resigned as the chief technology officer at the Consumer Financial Protection Bureau (CFPB) in February. She has provided testimony in ongoing court cases surrounding DOGE's access and also spoke to NPR in an interview. The CFPB has sensitive and potentially market-moving data. Meyer said DOGE employees granted themselves "God-tier" access to the CFPB's systems, turned off auditing and event logs and put the cybersecurity experts responsible for insider threat detection on administrative leave. When IT experts at the CFPB planned to conduct an "after action" report on DOGE's activities, they were stonewalled, she continued.</p>   <p>When she heard about how DOGE engineers operated at the NLRB, particularly the steps they took to obfuscate their activities, she recognized a pattern.</p>   <p>"I am trembling," she said upon hearing about the potential exposure of data from the NLRB. "They can get every piece of whistleblower testimony, every report, everything. This is not good."</p>   <p>Other technical employees working with government agencies who spoke to NPR shared Berulis' concerns.</p>   <p>"Our cyber teams are pissed because they have to sit on their hands when every single alarm system we have regarding insider threats is going off," said one employee at an agency of the Interior Department who requested anonymity, fearing retribution. Cybersecurity teams wanted to shut off new users' access to the system, the employee continued, but were ordered to stand down.</p>   <p>Meanwhile, in a <a href="https://federalnewsnetwork.com/commentary/2025/03/letter-to-the-editor-46-former-gsa-executives-say-cuts-to-cause-irreversible-damage/?readmore=1" target="_blank">letter published</a> on March 13 on Federal News Network, 46 former senior officials from the General Services Administration, one of the government agencies hardest hit by DOGE's cost-cutting efforts and that oversees nearly all federal buildings and purchasing, wrote that they believed "highly-sensitive IT systems are being put at risk and sensitive information is being downloaded to unknown, unvetted external sources in clear violation of privacy and data-protection rules."<br></p>   <h3>The tip of the iceberg</h3>   <p>The Trump administration could be trying to codify DOGE's practices into how the government shares information, said Kel McClanahan, the executive director of nonprofit public interest law firm National Security Counselors, who is representing federal employees in a lawsuit concerning the Office of Personnel Management's use of a private email server.</p>   <p>Weeks after DOGE staffers descended on federal buildings across Washington, Trump issued an <a href="https://www.whitehouse.gov/fact-sheets/2025/03/fact-sheet-president-donald-j-trump-eliminates-information-silos-to-stop-waste-fraud-and-abuse-60f3/" target="_blank">executive order</a> urging increased data sharing "by eliminating information silos" in what's seen by experts like McClanahan as an attempt to give DOGE engineers further top cover in accessing and amalgamating sensitive federal data, despite laws concerning privacy and cybersecurity.</p>   <p>"The entire reason we have a Privacy Act is that Congress realized 50 years ago that the federal government was just overflowing with information about normal everyday people and needed some guardrails in place," McClanahan told NPR. "The information silos are there for a reason," he continued. "It's astonishing to me that the very people who not a handful of years ago were screaming about the government tracking us with vaccines now cheer for feeding every piece of information about themselves into Elon Musk's stupid Skynet."</p>   <p>DOGE appears to still be in the process of visiting federal agencies across the country, including just recently the Securities and Exchange Commission, according to one former government source directly familiar with the matter who requested anonymity to share information they weren't authorized to share. Across the government, it's unclear how much sensitive data has been removed and collected and combined.</p>   <p>It's also unclear where the labor data went and who has access to it. But for experts in workers' rights, the threat is immediate and existential.</p>   <p>"This shocks the conscience," said Richard Griffin, the former general counsel of the NLRB. "And if DOGE operatives captured and removed case files, it could constitute a violation of the <a href="https://www.npr.org/2025/03/13/1238261955/over-a-dozen-lawsuits-to-stop-doge-data-access-are-betting-on-a-1974-law" target="_blank">Privacy Act</a>."</p>   <p>For Berulis, it was important to speak out, because he believes people deserve to know how the government's data and computer systems are at risk, and to prevent further damage. As a former IT consultant, Berulis says he would have been fired for operating like DOGE.</p>   <div id="resg-s1-60230">
            <div data-crop-type="">
        <picture>
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/400/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/800/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/1000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/1300/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/1600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/2000/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/2600/quality/85/format/webp/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/webp">
            <source srcset="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/400/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 400w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/800/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 800w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/1000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 1000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/1300/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 1300w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/1600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 1600w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/2000/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 2000w,
https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/2600/quality/85/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg 2600w" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg" sizes="(min-width: 1300px) 1238px, (min-width: 1025px) calc(100vw - 60px), (min-width: 768px) calc(100vw - 60px), calc(100vw - 30px)" type="image/jpeg">
            <img src="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/1100/quality/50/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg" data-template="https://npr.brightspotcdn.com/dims3/default/strip/false/crop/5666x3777+0+0/resize/{width}/quality/{quality}/format/{format}/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fed%2Fe4%2F8bca795840cfa0e88e4efe5b0144%2Fdoge-edit-3.jpg" alt="Daniel Berulis hopes that there might be further investigations into mishandling of sensitive data across the federal government." loading="lazy">
        </picture>
</div>
<div>
    <div>
        <p>
                Daniel Berulis hopes that there might be further investigations into mishandling of sensitive data across the federal government.
                <b aria-label="Image credit">
                    
                    Grace Raver/NPR
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Grace Raver/NPR
        
    </span>
</p></div>
   </div>
   <p>Disclosing his concerns "was a moral imperative at this point," he said. "I've never encountered this in my 20 years of IT."</p>   <p>His hope is that there might be further investigations into mishandling of sensitive data across the federal government.</p>   <p>"I believe with all my heart that this goes far beyond just case data," he said. "I know there are [people] at other agencies who have seen similar behavior. I firmly believe that this is happening maybe even to a greater extent at other agencies."</p>   <p>For overseers, investigators and IT experts in a similar position, he hopes to provide a road map of what to look for.</p>   <p>"It was my goal by disclosing to Congress not to focus on me at all, but to give them information that they might not necessarily have, the things that you don't necessarily look for unless you know where to look," he continued.</p>   <p>The NLRB said it would cooperate with any investigations that stem from Berulis' disclosure to Congress.</p>   <p>"As an agency protecting employee rights, the NLRB respects its employee's right to bring whistleblower claims to Congress and the Office of Special Counsel, and the Agency looks forward to working with those entities to resolve the complaints," said Bearese, the agency's acting spokesperson, in a statement.</p>   <p>Berulis had a simple request for the DOGE engineers: "Be transparent. If you have nothing to hide, don't delete logs, don't be covert. ... Be open, because that's what efficiency is really about. If this is all a huge misunderstanding, then just prove it. Put it out there. That's all I'm asking."</p>   <p>But ultimately, if the systems that DOGE accesses are left insecure, it might not matter if its intentions are honorable, he concluded.</p>   <p>"This could just be the start of the operation. ... They still haven't crossed that boundary where they're plugged into every federal system out there," he continued. "So maybe there is still time."</p>   <p><strong><em>NPR's Stephen Fowler contributed reporting. NPR's Brett Neely edited this story.&nbsp;</em></strong></p>   <p><em>Have information or evidence to share about DOGE's access to data inside the federal government?&nbsp;Reach out to the author, </em><a href="https://www.npr.org/people/1038324514/jenna-mclaughlin" target="_blank"><em>Jenna McLaughlin</em></a><em>, through encrypted communications on Signal at jennamclaughlin.54. </em><a href="https://www.npr.org/people/1219684807/stephen-fowler" target="_blank"><em>Stephen Fowler</em></a><em> is available on Signal at stphnfwlr.25. Please use a nonwork device.</em></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Teuken-7B-Base and Teuken-7B-Instruct: Towards European LLMs (222 pts)]]></title>
            <link>https://arxiv.org/abs/2410.03730</link>
            <guid>43690955</guid>
            <pubDate>Tue, 15 Apr 2025 10:17:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2410.03730">https://arxiv.org/abs/2410.03730</a>, See on <a href="https://news.ycombinator.com/item?id=43690955">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
    <div><p><span>Authors:</span><a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Ali,+M" rel="nofollow">Mehdi Ali</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Fromm,+M" rel="nofollow">Michael Fromm</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Thellmann,+K" rel="nofollow">Klaudia Thellmann</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Ebert,+J" rel="nofollow">Jan Ebert</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Weber,+A+A" rel="nofollow">Alexander Arno Weber</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Rutmann,+R" rel="nofollow">Richard Rutmann</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Jain,+C" rel="nofollow">Charvi Jain</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=L%C3%BCbbering,+M" rel="nofollow">Max Lübbering</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Steinigen,+D" rel="nofollow">Daniel Steinigen</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Leveling,+J" rel="nofollow">Johannes Leveling</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Klug,+K" rel="nofollow">Katrin Klug</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Buschhoff,+J+S" rel="nofollow">Jasper Schulze Buschhoff</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Jurkschat,+L" rel="nofollow">Lena Jurkschat</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Abdelwahab,+H" rel="nofollow">Hammam Abdelwahab</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Stein,+B+J" rel="nofollow">Benny Jörg Stein</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Sylla,+K" rel="nofollow">Karl-Heinz Sylla</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Denisov,+P" rel="nofollow">Pavel Denisov</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Brandizzi,+N" rel="nofollow">Nicolo' Brandizzi</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Saleem,+Q" rel="nofollow">Qasid Saleem</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Bhowmick,+A" rel="nofollow">Anirban Bhowmick</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Helmer,+L" rel="nofollow">Lennard Helmer</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=John,+C" rel="nofollow">Chelsea John</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Suarez,+P+O" rel="nofollow">Pedro Ortiz Suarez</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Ostendorff,+M" rel="nofollow">Malte Ostendorff</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Jude,+A" rel="nofollow">Alex Jude</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Manjunath,+L" rel="nofollow">Lalith Manjunath</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Weinbach,+S" rel="nofollow">Samuel Weinbach</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Penke,+C" rel="nofollow">Carolin Penke</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Filatov,+O" rel="nofollow">Oleg Filatov</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Asaadi,+S" rel="nofollow">Shima Asaadi</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Barth,+F" rel="nofollow">Fabio Barth</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Sifa,+R" rel="nofollow">Rafet Sifa</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=K%C3%BCch,+F" rel="nofollow">Fabian Küch</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Herten,+A" rel="nofollow">Andreas Herten</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=J%C3%A4kel,+R" rel="nofollow">René Jäkel</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Rehm,+G" rel="nofollow">Georg Rehm</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Kesselheim,+S" rel="nofollow">Stefan Kesselheim</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=K%C3%B6hler,+J" rel="nofollow">Joachim Köhler</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Flores-Herr,+N" rel="nofollow">Nicolas Flores-Herr</a></p></div>            
    <p><a href="https://arxiv.org/pdf/2410.03730">View PDF</a>
    <a href="https://arxiv.org/html/2410.03730v2">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>We present two multilingual LLMs designed to embrace Europe's linguistic diversity by supporting all 24 official languages of the European Union. Trained on a dataset comprising around 60% non-English data and utilizing a custom multilingual tokenizer, our models address the limitations of existing LLMs that predominantly focus on English or a few high-resource languages. We detail the models' development principles, i.e., data composition, tokenizer optimization, and training methodologies. The models demonstrate competitive performance across multilingual benchmarks, as evidenced by their performance on European versions of ARC, HellaSwag, MMLU, and TruthfulQA.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Mehdi Ali [<a href="https://arxiv.org/show-email/1a532cfd/2410.03730" rel="nofollow">view email</a>]      <br>            <strong><a href="https://arxiv.org/abs/2410.03730v1" rel="nofollow">[v1]</a></strong>
        Mon, 30 Sep 2024 16:05:38 UTC (391 KB)<br>
    <strong>[v2]</strong>
        Tue, 15 Oct 2024 17:09:40 UTC (4,358 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: MCP-Shield – Detect security issues in MCP servers (125 pts)]]></title>
            <link>https://github.com/riseandignite/mcp-shield</link>
            <guid>43689178</guid>
            <pubDate>Tue, 15 Apr 2025 05:15:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/riseandignite/mcp-shield">https://github.com/riseandignite/mcp-shield</a>, See on <a href="https://news.ycombinator.com/item?id=43689178">Hacker News</a></p>
Couldn't get https://github.com/riseandignite/mcp-shield: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Hacking a Smart Home Device (2024) (290 pts)]]></title>
            <link>https://jmswrnr.com/blog/hacking-a-smart-home-device</link>
            <guid>43688658</guid>
            <pubDate>Tue, 15 Apr 2025 03:12:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jmswrnr.com/blog/hacking-a-smart-home-device">https://jmswrnr.com/blog/hacking-a-smart-home-device</a>, See on <a href="https://news.ycombinator.com/item?id=43688658">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>How I reverse engineered an ESP32-based smart home device to gain remote control access and integrate it with Home Assistant.</p><h2><a href="#introduction" title="Introduction"><span>Introduction</span></a></h2><p>Recently, I've been slightly obsessed with connecting anything and everything in my house to <a target="_blank" rel="noopener noreferrer nofollow" href="https://www.home-assistant.io/"><span>Home Assistant</span></a>. There's something so satisfying about having everything connected and automated in one application; I can finally forget every random mobile app for a different brand of smart product.</p><p>But there is one product I own that stubbornly doesn't connect to anything other than its own mobile app. It's a sleek air purifier that is unfortunately let down by its disappointing app.</p><p>So many modern products depend on an internet connection and cloud account for basic functions, and who knows what unnecessary data they collect or technical vulnerabilities they add to the home network?</p><p>I want to control this expensive air purifier just like the rest of my smart gadgets. And that marks the start of this challenging yet undoubtedly fun journey.</p><p><strong>It's time to hack an air purifier! 😆</strong></p><p>By the way, if you enjoy my content, you can <a target="_blank" rel="noopener noreferrer" href="https://buymeacoffee.com/jmswrnr"><span>Buy Me a Coffee</span></a> to support my content creation!</p><div><p>The contents of this post are intended for educational purposes on the process of reverse engineering IoT smart devices and network protocols. </p><p>Hacking can be a scary term, so I'd like to make it clear that my intentions were solely to upgrade the smart device I've purchased to integrate with my smart home system. Doing so does not affect any other instances of this product or its cloud services. Therefore, any sensitive product-specific data, such as private keys, domains, or API endpoints, have been obfuscated or redacted from this post.</p><p>Tinkering with your devices will likely void any warranty and carries a risk of permanently damaging the device; do so at your own risk.</p></div><h2><a href="#the-plan" title="The Plan"><span>The Plan</span></a></h2><p>If we're going to hack this device to be controlled by custom software, we're going to need to understand its current capabilities and plan a point of attack, requiring the least amount of work to achieve our goal. </p><p>The device already supports remote control with its own mobile app, which annoyingly requires a cloud account to use. By toggling my phone's Bluetooth, WiFi, and 5G, I was able to confirm that the app required an internet connection to control the device. Remote control was not possible locally via Bluetooth or WiFi.</p><p>This means the mobile app and device must be connected to a cloud server for the remote control to be possible. So, somewhere in that network, data between the device and its cloud server must be the fan speed and everything else the app controls. </p><p>So, that is our point of attack:</p><ul><li><p>If we can intercept the device's network traffic and change those values, we have control of the device. </p></li><li><p>If we can emulate all of the server responses, we have control of the device without depending on an internet connection and its cloud server.</p></li></ul><h2><a href="#mobile-app-analysis" title="Mobile App Analysis"><span>Mobile App Analysis</span></a></h2><p>One of the first things I looked into was the remote control mobile app. This can be a quick way to gather some information, as Android apps can be relatively simple to pull apart.</p><p>Apps on Android are stored as a <code>.apk</code> file. With a quick search online, you can find a website to download a specific app's latest <code>.apk</code>. If you didn't know, the format of an <code>.apk</code> is technically a <code>.zip</code> file! you can simply extract them to browse the app's contents.</p><p>Android apps include compiled Java executables, usually named <code>classes.dex</code>. You can convert these to a <code>.jar</code> file with <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/pxb1988/dex2jar"><span>dex2jar</span></a> and use <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/java-decompiler/jd-gui"><span>jd-gui</span></a> to browse the contents as reconstructed source code.</p><p>Locating the app <code>MainActivity.class</code> revealed that it is built with React Native!</p><div><pre><code><span><span>package</span><span> com</span><span>.</span><span>smartdeviceapp</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>import</span><span> com</span><span>.</span><span>facebook</span><span>.</span><span>react</span><span>.</span><span>ReactActivity</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>public</span><span> </span><span>class</span><span> </span><span>MainActivity</span><span> </span><span>extends</span><span> </span><span>ReactActivity</span><span> </span><span>{</span><span>
</span></span><span><span>  </span><span>protected</span><span> String </span><span>getMainComponentName</span><span>(</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>return</span><span> </span><span>"SmartDeviceApp"</span><span>;</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span></span><span>}</span></span></code></pre></div><p>For Android apps built with React Native, you can find the JavaScript bundle in <code>assets/index.android.bundle</code>. </p><p>A quick scan of the app's bundle revealed it uses a secure WebSocket connection:</p><div><pre><code><span><span>self</span><span>.</span><span>ws </span><span>=</span><span> </span><span>new</span><span> </span><span>WebSocket</span><span>(</span><span>"wss://smartdeviceapi.---.com"</span><span>)</span><span>;</span></span></code></pre></div><p>There isn't too much interest here in this Android app; as expected, it connects with their cloud server in order to remote control the smart device. It's worth a quick look due to the simplicity of getting some readable source code. We can always reference this bundle to see if any shared values or logic can be found there.</p><h2><a href="#network-inspection" title="Network Inspection"><span>Network Inspection</span></a></h2><p>Next up, it's time to have a look at the network traffic between the device and its cloud server; this is what we're trying to intercept and, ideally, emulate.</p><p>I use Pi-hole locally, which is a DNS server that blocks tracking and some ads, but it also has a useful feature to browse DNS queries by device. By navigating to the <code>Tools &gt; Network</code> page and selecting the device's local network address, we can see it's querying the DNS server for the address of the cloud server's domain:</p><div data-rmiz-content="not-found" aria-owns="rmiz-modal-" data-rmiz=""><p><img alt="" loading="lazy" width="811" height="99" decoding="async" data-nimg="1" sizes="(max-width: 744px) 100vw, (max-width: 1300px) 66vw, 811px" srcset="https://cdn.sanity.io/images/kecg41hi/production/2ace8e71d5ec9263c46f755a4a1609e91b68704c-811x99.png?w=640&amp;q=85&amp;fit=max&amp;auto=format 640w, https://cdn.sanity.io/images/kecg41hi/production/2ace8e71d5ec9263c46f755a4a1609e91b68704c-811x99.png?w=750&amp;q=85&amp;fit=max&amp;auto=format 750w, https://cdn.sanity.io/images/kecg41hi/production/2ace8e71d5ec9263c46f755a4a1609e91b68704c-811x99.png?w=828&amp;q=85&amp;fit=max&amp;auto=format 828w, https://cdn.sanity.io/images/kecg41hi/production/2ace8e71d5ec9263c46f755a4a1609e91b68704c-811x99.png?w=1080&amp;q=85&amp;fit=max&amp;auto=format 1080w, https://cdn.sanity.io/images/kecg41hi/production/2ace8e71d5ec9263c46f755a4a1609e91b68704c-811x99.png?w=1200&amp;q=85&amp;fit=max&amp;auto=format 1200w, https://cdn.sanity.io/images/kecg41hi/production/2ace8e71d5ec9263c46f755a4a1609e91b68704c-811x99.png?w=1920&amp;q=85&amp;fit=max&amp;auto=format 1920w, https://cdn.sanity.io/images/kecg41hi/production/2ace8e71d5ec9263c46f755a4a1609e91b68704c-811x99.png?w=2048&amp;q=85&amp;fit=max&amp;auto=format 2048w, https://cdn.sanity.io/images/kecg41hi/production/2ace8e71d5ec9263c46f755a4a1609e91b68704c-811x99.png?w=3840&amp;q=85&amp;fit=max&amp;auto=format 3840w" src="https://cdn.sanity.io/images/kecg41hi/production/2ace8e71d5ec9263c46f755a4a1609e91b68704c-811x99.png?w=3840&amp;q=85&amp;fit=max&amp;auto=format"></p></div><p>So now we know the cloud server's domain it's connecting to, we can use the <code>Local DNS</code> feature to send that network traffic to my local workstation (<code>192.168.0.10</code>) instead of their cloud server:</p><div data-rmiz-content="not-found" aria-owns="rmiz-modal-" data-rmiz=""><p><img alt="" loading="lazy" width="453" height="173" decoding="async" data-nimg="1" sizes="(max-width: 744px) 100vw, (max-width: 1300px) 66vw, 453px" srcset="https://cdn.sanity.io/images/kecg41hi/production/d1a377dd0c49cbb6798bc4269f9bfa706d6ee68a-453x173.png?w=640&amp;q=85&amp;fit=max&amp;auto=format 640w, https://cdn.sanity.io/images/kecg41hi/production/d1a377dd0c49cbb6798bc4269f9bfa706d6ee68a-453x173.png?w=750&amp;q=85&amp;fit=max&amp;auto=format 750w, https://cdn.sanity.io/images/kecg41hi/production/d1a377dd0c49cbb6798bc4269f9bfa706d6ee68a-453x173.png?w=828&amp;q=85&amp;fit=max&amp;auto=format 828w, https://cdn.sanity.io/images/kecg41hi/production/d1a377dd0c49cbb6798bc4269f9bfa706d6ee68a-453x173.png?w=1080&amp;q=85&amp;fit=max&amp;auto=format 1080w, https://cdn.sanity.io/images/kecg41hi/production/d1a377dd0c49cbb6798bc4269f9bfa706d6ee68a-453x173.png?w=1200&amp;q=85&amp;fit=max&amp;auto=format 1200w, https://cdn.sanity.io/images/kecg41hi/production/d1a377dd0c49cbb6798bc4269f9bfa706d6ee68a-453x173.png?w=1920&amp;q=85&amp;fit=max&amp;auto=format 1920w, https://cdn.sanity.io/images/kecg41hi/production/d1a377dd0c49cbb6798bc4269f9bfa706d6ee68a-453x173.png?w=2048&amp;q=85&amp;fit=max&amp;auto=format 2048w, https://cdn.sanity.io/images/kecg41hi/production/d1a377dd0c49cbb6798bc4269f9bfa706d6ee68a-453x173.png?w=3840&amp;q=85&amp;fit=max&amp;auto=format 3840w" src="https://cdn.sanity.io/images/kecg41hi/production/d1a377dd0c49cbb6798bc4269f9bfa706d6ee68a-453x173.png?w=3840&amp;q=85&amp;fit=max&amp;auto=format"></p></div><p>We can then use <a target="_blank" rel="noopener noreferrer" href="https://www.wireshark.org/"><span>Wireshark</span></a> to take a look at the traffic coming in from the smart device. We can do this by monitoring the workstation network interface with a filter of <code>ip.addr == 192.168.0.61</code> (smart device address).</p><p>By doing this, I was able to see UDP packets being sent from the smart device to the workstation on the port <code>41014</code>! </p><h2><a href="#packet-analysis" title="Packet Analysis"><span>Packet Analysis</span></a></h2><p>So, we know the smart device uses UDP to communicate with its cloud server. But right now, it's trying to communicate with my workstation and is expecting it to respond like its cloud server.</p><p>We can use a simple UDP proxy for our workstation to act as a relay between the smart device and its cloud server. </p><p>I used <a target="_blank" rel="noopener noreferrer" href="https://www.cloudflare.com/en-gb/learning/dns/what-is-1.1.1.1/"><span>Cloudflare's DNS resolver</span></a> (<code>1.1.1.1</code>) to look up the real IP address for their cloud server (because my Pi-hole DNS would have just resolved to my workstation's local IP address). Then I used <a target="_blank" rel="noopener noreferrer nofollow" href="https://www.npmjs.com/package/node-udp-forwarder"><span>node-udp-forwarder</span></a> as a simple method to relay the traffic to their cloud server:</p><div><div><pre><code><span><span>udpforwarder \
</span></span><span><span></span><span>--</span><span>destinationPort </span><span>41014</span><span> </span><span>--</span><span>destinationAddress </span><span>X</span><span>.</span><span>X</span><span>.</span><span>X</span><span>.</span><span>X</span><span> \
</span></span><span><span></span><span>--</span><span>protocol udp4 </span><span>--</span><span>port </span><span>41014</span></span></code></pre></div><p><code>X.X.X.X</code> being the real IP address of their cloud server.</p></div><p>Looking at Wireshark again, we can see all the network traffic between the smart device and its cloud server!</p><p>When booting the device, it would send a packet to the server with data like this:</p><div><pre><code><span><span>Hex View</span><span>  00 01 02 03 04 05 06 07  08 09 0A 0B 0C 0D 0E 0F
</span></span><span><span></span><span> </span><span>
</span></span><span><span></span><span>00000000</span><span>  55 00 31 02 01 23 45 67  89 AB CD EF FF 00 01 EF</span><span>  U.1..#Eg........
</span></span><span><span></span><span>00000010</span><span>  1E 9C 2C C2 BE FD 0C 33  20 A5 8E D6 EF 4E D9 E3</span><span>  ..,....3 ....N..
</span></span><span><span></span><span>00000020</span><span>  6B 95 00 8D 1D 11 92 E2  81 CA 4C BD 46 C9 CD 09</span><span>  k.........L.F...
</span></span><span><span></span><span>00000030</span><span>  0E                               </span><span>                 .</span></span></code></pre></div><p>The server would then respond with the following:</p><div><pre><code><span><span>Hex View</span><span>  00 01 02 03 04 05 06 07  08 09 0A 0B 0C 0D 0E 0F
</span></span><span><span></span><span> </span><span>
</span></span><span><span></span><span>00000000</span><span>  55 00 2F 82 01 23 45 67  89 AB CD EF FF 37 34 9A</span><span>  U./..#Eg.....74.
</span></span><span><span></span><span>00000010</span><span>  7E E6 59 7C 5D 0D AF 71  A0 5F FA 88 13 B0 BE 8D</span><span>  ~.Y|]..q._......
</span></span><span><span></span><span>00000020</span><span>  ED A0 AB FA 47 ED 99 9A  06 B9 80 96 95 C0 96  </span><span>   ....G..........</span></span></code></pre></div><p>All of the packets after this seemed to share a similar structure. They did not include any readable strings but were full of what appeared to be random bytes of data; this could be the <a target="_blank" rel="noopener noreferrer nofollow" href="https://en.wikipedia.org/wiki/Avalanche_effect"><span>Avalanche effect</span></a> pointing toward encryption.</p><p>I searched around to see if this packet structure was an existing protocol. I read that DTLS is used by some smart devices and that it is based on UDP.</p><p>However, Wireshark does support the detection of DTLS packets but listed this packet as UDP, which means it couldn't determine a UDP-based protocol from the data. I double-checked with the DTLS specification, but that described a header format different from what we see in the packet, so we know DTLS isn't used here.</p><p>At this point, we hit a blocker; we don't understand how the data is formatted in these packets, which means we can't manipulate or emulate anything yet.</p><p>This would have been a lot easier if it used a well-documented protocol, but where's the fun in that?</p><h2><a href="#physical-disassembly" title="Physical Disassembly"><span>Physical Disassembly</span></a></h2><p>We know there are 2 applications that understand how to read this packet data: the smart device and its cloud server. And well, I don't have their cloud server handy, so it's time to take a look inside the smart device!</p><p>It was quite easy to disassemble with a few easily accessible screws. Inside was the main PCB containing the microcontroller, a port connecting to the fan, and a ribbon cable to the control panel on the front.</p><div data-rmiz-content="not-found" aria-owns="rmiz-modal-" data-rmiz=""><p><img alt="" loading="lazy" width="2444" height="1286" decoding="async" data-nimg="1" sizes="(max-width: 744px) 100vw, (max-width: 1300px) 66vw, 2444px" srcset="https://cdn.sanity.io/images/kecg41hi/production/007257763d8f8dc8b6fdafc5e662deec344e866d-2444x1286.png?w=640&amp;q=85&amp;fit=max&amp;auto=format 640w, https://cdn.sanity.io/images/kecg41hi/production/007257763d8f8dc8b6fdafc5e662deec344e866d-2444x1286.png?w=750&amp;q=85&amp;fit=max&amp;auto=format 750w, https://cdn.sanity.io/images/kecg41hi/production/007257763d8f8dc8b6fdafc5e662deec344e866d-2444x1286.png?w=828&amp;q=85&amp;fit=max&amp;auto=format 828w, https://cdn.sanity.io/images/kecg41hi/production/007257763d8f8dc8b6fdafc5e662deec344e866d-2444x1286.png?w=1080&amp;q=85&amp;fit=max&amp;auto=format 1080w, https://cdn.sanity.io/images/kecg41hi/production/007257763d8f8dc8b6fdafc5e662deec344e866d-2444x1286.png?w=1200&amp;q=85&amp;fit=max&amp;auto=format 1200w, https://cdn.sanity.io/images/kecg41hi/production/007257763d8f8dc8b6fdafc5e662deec344e866d-2444x1286.png?w=1920&amp;q=85&amp;fit=max&amp;auto=format 1920w, https://cdn.sanity.io/images/kecg41hi/production/007257763d8f8dc8b6fdafc5e662deec344e866d-2444x1286.png?w=2048&amp;q=85&amp;fit=max&amp;auto=format 2048w, https://cdn.sanity.io/images/kecg41hi/production/007257763d8f8dc8b6fdafc5e662deec344e866d-2444x1286.png?w=3840&amp;q=85&amp;fit=max&amp;auto=format 3840w" src="https://cdn.sanity.io/images/kecg41hi/production/007257763d8f8dc8b6fdafc5e662deec344e866d-2444x1286.png?w=3840&amp;q=85&amp;fit=max&amp;auto=format"></p></div><p>The main controller is labeled as an <code>ESP32-WROOM-32D</code>. This microcontroller is commonly used in smart devices and features WiFi and Bluetooth.</p><p>I stumbled across the <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/BlackVS/ESP32-reversing"><span>ESP32-reversing</span></a> GitHub repo, which contained a nice list of ESP32-related reverse engineering resources.</p><h2><a href="#serial-connection" title="Serial Connection"><span>Serial Connection</span></a></h2><p>The ESP32 contains a flash chip, which is where the firmware containing application logic is most likely stored. </p><p>The manufacturer of the ESP32 provides a utility called <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/espressif/esptool"><span>esptool</span></a> to communicate with the ROM bootloader in the ESP32. With this tool, it's possible to read data from the flash, but first, we must establish a serial connection!</p><p>Referencing the <a target="_blank" rel="noopener noreferrer nofollow" href="https://www.espressif.com/sites/default/files/documentation/esp32-wroom-32_datasheet_en.pdf"><span>ESP32 datasheet</span></a>, we can find the pin layout diagram:</p><div data-rmiz-content="not-found" aria-owns="rmiz-modal-" data-rmiz=""><p><img alt="" loading="lazy" width="515" height="623" decoding="async" data-nimg="1" sizes="(max-width: 744px) 100vw, (max-width: 1300px) 66vw, 515px" srcset="https://cdn.sanity.io/images/kecg41hi/production/3965e510a5e3bf781a590b23878118d590ad8cea-515x623.svg?w=640&amp;q=85&amp;fit=max&amp;auto=format 640w, https://cdn.sanity.io/images/kecg41hi/production/3965e510a5e3bf781a590b23878118d590ad8cea-515x623.svg?w=750&amp;q=85&amp;fit=max&amp;auto=format 750w, https://cdn.sanity.io/images/kecg41hi/production/3965e510a5e3bf781a590b23878118d590ad8cea-515x623.svg?w=828&amp;q=85&amp;fit=max&amp;auto=format 828w, https://cdn.sanity.io/images/kecg41hi/production/3965e510a5e3bf781a590b23878118d590ad8cea-515x623.svg?w=1080&amp;q=85&amp;fit=max&amp;auto=format 1080w, https://cdn.sanity.io/images/kecg41hi/production/3965e510a5e3bf781a590b23878118d590ad8cea-515x623.svg?w=1200&amp;q=85&amp;fit=max&amp;auto=format 1200w, https://cdn.sanity.io/images/kecg41hi/production/3965e510a5e3bf781a590b23878118d590ad8cea-515x623.svg?w=1920&amp;q=85&amp;fit=max&amp;auto=format 1920w, https://cdn.sanity.io/images/kecg41hi/production/3965e510a5e3bf781a590b23878118d590ad8cea-515x623.svg?w=2048&amp;q=85&amp;fit=max&amp;auto=format 2048w, https://cdn.sanity.io/images/kecg41hi/production/3965e510a5e3bf781a590b23878118d590ad8cea-515x623.svg?w=3840&amp;q=85&amp;fit=max&amp;auto=format 3840w" src="https://cdn.sanity.io/images/kecg41hi/production/3965e510a5e3bf781a590b23878118d590ad8cea-515x623.svg?w=3840&amp;q=85&amp;fit=max&amp;auto=format"></p></div><p>Here, we can see the <code>TXD0</code>(35) and <code>RXD0</code>(34) pins. We need to connect a wire to both of these pins and a ground pin for a serial connection. </p><p>The device PCB had a few pin holes, which are commonly connected to the pins for debugging and flashing; I was able to visually follow the traces from both of these serial pins to the holes! This allowed me to easily solder on breakout headers that I could temporarily plug jumper wires into. Otherwise, I would have likely carefully soldered directly to the chip pins.</p><p>With a multimeter set to continuity mode, I was able to locate which hole was ground by referencing the <code>GND</code>(38) pin on the ESP32.</p><p>Now, we need a port to handle this UART serial communication. I used my <a target="_blank" rel="noopener noreferrer nofollow" href="https://flipperzero.one/"><span>Flipper Zero</span></a>, which has a handy <code>USB-UART Bridge</code> application under the <code>GPIO</code> category. </p><p>Using 3 jumper wires, I connected them together:</p><ul><li><p>Flipper Zero <code>TX</code> &lt;--&gt; <code>RX</code> ESP32 </p></li><li><p>Flipper Zero <code>RX</code> &lt;--&gt; <code>TX</code> ESP32 </p></li><li><p>Flipper Zero <code>GND</code> &lt;--&gt; <code>GND</code> ESP32 </p></li></ul><div><p>The <code>TX</code> and <code>RX</code> wires are intentionally crossed here; we want to transmit data to the other device's receiving line!</p></div><p>In Windows Device Manager, under the <code>Ports (COM &amp; LPT)</code> category, I found my Flipper Zero UART device as <code>COM7</code>. Using <a target="_blank" rel="noopener noreferrer nofollow" href="https://www.chiark.greenend.org.uk/~sgtatham/putty/"><span>Putty</span></a> configured to a Serial connection on <code>COM7</code> at <code>115200</code> speed, I was able to successfully connect to the Flipper Zero. While searching around, I saw this speed was often used for the ESP32, so I decided to go with it here.</p><p>When booting up the smart device, I noticed a bunch of log data from the serial output:</p><div><div><pre><code><span><span>rst</span><span>:</span><span>0x1</span><span> </span><span>(</span><span>POWERON_RESET</span><span>)</span><span>,</span><span>boot</span><span>:</span><span>0x13</span><span> </span><span>(</span><span>SPI_FAST_FLASH_BOOT</span><span>)</span><span>
</span></span><span><span>configsip</span><span>:</span><span> </span><span>0</span><span>,</span><span> SPIWP</span><span>:</span><span>0xee</span><span>
</span></span><span><span>clk_drv</span><span>:</span><span>0x00</span><span>,</span><span>q_drv</span><span>:</span><span>0x00</span><span>,</span><span>d_drv</span><span>:</span><span>0x00</span><span>,</span><span>cs0_drv</span><span>:</span><span>0x00</span><span>,</span><span>hd_drv</span><span>:</span><span>0x00</span><span>,</span><span>wp_drv</span><span>:</span><span>0x00</span><span>
</span></span><span><span>mode</span><span>:</span><span>DIO</span><span>,</span><span> clock div</span><span>:</span><span>2</span><span>
</span></span><span><span>load</span><span>:</span><span>0x3fff0030</span><span>,</span><span>len</span><span>:</span><span>4476</span><span>
</span></span><span><span>ho </span><span>0</span><span> tail </span><span>12</span><span> room </span><span>4</span><span>
</span></span><span><span>load</span><span>:</span><span>0x40078000</span><span>,</span><span>len</span><span>:</span><span>13512</span><span>
</span></span><span><span>ho </span><span>0</span><span> tail </span><span>12</span><span> room </span><span>4</span><span>
</span></span><span><span>load</span><span>:</span><span>0x40080400</span><span>,</span><span>len</span><span>:</span><span>3148</span><span>
</span></span><span><span>entry </span><span>0x400805f0</span><span>
</span></span><span><span></span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>
</span></span><span><span></span><span>**</span><span>    Starting SmartDevice    </span><span>**</span><span>
</span></span><span><span></span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>**</span><span>
</span></span><span><span>This </span><span>is</span><span> esp32 chip </span><span>with</span><span> </span><span>2</span><span> CPU core</span><span>(</span><span>s</span><span>)</span><span>,</span><span> WiFi</span><span>/</span><span>BT</span><span>/</span><span>BLE</span><span>,</span><span> silicon revision </span><span>1</span><span>,</span><span> 4MB external flash
</span></span><span><span>Minimum free heap size</span><span>:</span><span> </span><span>280696</span><span> </span><span>bytes</span><span>
</span></span><span><span>nvs_flash_init ret</span><span>:</span><span> </span><span>0</span><span>
</span></span><span><span>Running app </span><span>from</span><span>:</span><span> factory
</span></span><span>Mounting FAT filesystem
</span><span><span>csize</span><span>:</span><span> </span><span>1</span><span>
</span></span><span><span></span><span>122</span><span> KiB total drive space</span><span>.</span><span>
</span></span><span><span></span><span>0</span><span> KiB available</span><span>.</span><span>
</span></span><span>FAT filesystem mounted
</span><span>SERIAL GOOD
</span><span>CapSense Init
</span><span><span>Opening</span><span>[</span><span>rb</span><span>]</span><span>:</span><span> </span><span>/</span><span>spiflash</span><span>/</span><span>serial
</span></span><span><span>Serial Number</span><span>:</span><span> 0123456789abcdefff
</span></span><span><span>Opening</span><span>[</span><span>rb</span><span>]</span><span>:</span><span> </span><span>/</span><span>spiflash</span><span>/</span><span>dev_key</span><span>.</span><span>key
</span></span><span>Device key ready
</span><span><span>Base64 Public Key</span><span>:</span><span> </span><span>**</span><span>REDACTED</span><span>**</span><span>
</span></span><span><span>Opening</span><span>[</span><span>rb</span><span>]</span><span>:</span><span> </span><span>/</span><span>spiflash</span><span>/</span><span>SmartDevice</span><span>-</span><span>root</span><span>-</span><span>ca</span><span>.</span><span>crt
</span></span><span><span>Opening</span><span>[</span><span>rb</span><span>]</span><span>:</span><span> </span><span>/</span><span>spiflash</span><span>/</span><span>SmartDevice</span><span>-</span><span>signer</span><span>-</span><span>ca</span><span>.</span><span>crt
</span></span><span><span>Addtimeout</span><span>:</span><span> </span><span>10000</span><span>,</span><span> </span><span>id</span><span>:</span><span> </span><span>0</span><span>
</span></span><span>RELOAD FALSE
</span><span><span>Opening</span><span>[</span><span>rb</span><span>]</span><span>:</span><span> </span><span>/</span><span>spiflash</span><span>/</span><span>server_config
</span></span><span>MP PARSE DONE
</span><span><span>Server</span><span>:</span><span> smartdeviceep</span><span>.</span><span>-</span><span>-</span><span>-</span><span>.</span><span>com</span><span>:</span><span>41014</span></span></code></pre></div><p>We can pick out some useful information from this output:</p><ul><li><p>The device has a 4MB flash chip.</p></li><li><p>The application runs from <code>factory</code>, which is a common partition name for the default application flashed at the factory.</p></li><li><p>A FAT filesystem is mounted.</p></li><li><div><p>The application reads files for:</p><ul><li><p>Serial number</p></li><li><p>Device key</p></li><li><p>Two CA certificates (root and signer)</p></li><li><p>Server config</p></li></ul></div></li></ul></div><h2><a href="#dumping-flash" title="Dumping Flash"><span>Dumping Flash</span></a></h2><p>Awesome, now we have a working serial connection, we can focus on dumping the flash, hoping it contains information on how to read these packets!</p><p>To read the flash, we need to boot the ESP32 in a different mode, specifically what it calls the <code>Download Boot</code> mode. This is technically explained in the <code>Strapping Pins</code> section of the datasheet. But TL;DR, I held a jumper wire from a <code>GND</code> port on my Flipper Zero to the <code>IO0</code>(25) pin on the ESP32 while it boots. </p><p>Checking the serial output with Putty, we can see this successfully boots the smart device into the <code>Download Boot</code> mode:</p><div><pre><code><span><span>rst</span><span>:</span><span>0x1</span><span> </span><span>(</span><span>POWERON_RESET</span><span>)</span><span>,</span><span>boot</span><span>:</span><span>0x3</span><span> </span><span>(</span><span>DOWNLOAD_BOOT</span><span>(</span><span>UART0</span><span>/</span><span>UART1</span><span>/</span><span>SDIO_REI_REO_V2</span><span>)</span><span>)</span><span>
</span></span><span><span>waiting </span><span>for</span><span> download</span></span></code></pre></div><p>Now we can close Putty and switch over to a Terminal to use esptool. </p><p>We're able to dump the entire 4MB of flash data from the ESP32 with the following command:</p><div><pre><code><span><span>esptool </span><span>-</span><span>p </span><span>COM7</span><span> </span><span>-</span><span>b </span><span>115200</span><span> read_flash </span><span>0</span><span> </span><span>0x400000</span><span> flash</span><span>.</span><span>bin</span></span></code></pre></div><p>I dumped the flash a couple of times to ensure I had a good read and backed them up in case we accidentally brick something because then we can flash back the dump.</p><div><p>To read the flash successfully using the Flipper Zero, I had to change its config to specify the baud rate of <code>115200</code> instead of <code>Host</code>.</p></div><h2><a href="#flash-analysis" title="Flash Analysis"><span>Flash Analysis</span></a></h2><p>We have the ESP32 flash dumped into a single binary file, and now we need to make sense of it. I found <a target="_blank" rel="noopener noreferrer" href="https://github.com/jmswrnr/esp32knife"><span>esp32knife</span></a> to be the best utility for this.</p><p>It reads the flash file and extracts a bunch of useful information. It was also the only utility that successfully reformatted this dump into ELF format with correctly mapped virtual memory, but more on that later! Let's see what we can find:</p><div><pre><code><span><span>python esp32knife</span><span>.</span><span>py </span><span>--</span><span>chip</span><span>=</span><span>esp32 load_from_file </span><span>.</span><span>/</span><span>flash</span><span>.</span><span>bin</span></span></code></pre></div><p>This logs out a lot of information and saves the output data to a <code>./parsed</code> folder.</p><p>The first file of interest here is <code>partitions.csv</code>, this table maps areas of data in the flash:</p><div><div><pre><code><span><span># </span><span>ESP</span><span>-</span><span>IDF</span><span> Partition Table
</span></span><span><span># Name</span><span>,</span><span>   Type</span><span>,</span><span> SubType</span><span>,</span><span>  Offset</span><span>,</span><span>   Size</span><span>,</span><span> Flags
</span></span><span><span>nvs</span><span>,</span><span>      data</span><span>,</span><span> nvs</span><span>,</span><span>      </span><span>0x9000</span><span>,</span><span>   16K</span><span>,</span><span>
</span></span><span><span>otadata</span><span>,</span><span>  data</span><span>,</span><span> ota</span><span>,</span><span>      </span><span>0xd000</span><span>,</span><span>   8K</span><span>,</span><span>
</span></span><span><span>phy_init</span><span>,</span><span> data</span><span>,</span><span> phy</span><span>,</span><span>      </span><span>0xf000</span><span>,</span><span>   4K</span><span>,</span><span>
</span></span><span><span>factory</span><span>,</span><span>  app</span><span>,</span><span>  factory</span><span>,</span><span>  </span><span>0x10000</span><span>,</span><span>  768K</span><span>,</span><span>
</span></span><span><span>ota_0</span><span>,</span><span>    app</span><span>,</span><span>  ota_0</span><span>,</span><span>    </span><span>0xd0000</span><span>,</span><span>  768K</span><span>,</span><span>
</span></span><span><span>ota_1</span><span>,</span><span>    app</span><span>,</span><span>  ota_1</span><span>,</span><span>    </span><span>0x190000</span><span>,</span><span> 768K</span><span>,</span><span>
</span></span><span><span>storage</span><span>,</span><span>  data</span><span>,</span><span> fat</span><span>,</span><span>      </span><span>0x250000</span><span>,</span><span> 1M</span><span>,</span><span>
</span></span><span></span></code></pre></div><p>Here, we can see a few interesting entries:</p><ul><li><p>There are three application partitions. Two are labeled <code>ota</code>, which is where over-the-air firmware updates are written. The other is labeled <code>factory</code>, and we know from the serial output during boot this is the application partition that is currently used.</p></li><li><p>That <code>storage</code> partition has the FAT type, this like likely the FAT filesystem we saw mounting in the serial output.</p></li><li><p><code>nvs</code> is a key-value storage partition, there may be some useful data here.</p></li></ul></div><div><p>Other readers have mentioned that this flash dump could have been protected if the device had enabled flash encryption (which it does not in this case). </p></div><h2><a href="#device-storage" title="Device Storage"><span>Device Storage</span></a></h2><p>I was initially curious to see what data was in the <code>nvs</code> key-value storage partition. </p><p>The latest state of this data was extracted to <code>part.0.nvs.cvs</code>, and the only interesting data I could see was my WiFi SSID and password. But I also found the full historical changelog of values in <code>part.0.nvs.txt</code> and that revealed a couple of previously used WiFi credentials; what<strong>!?</strong> did someone use this thing before me?😆</p><p>Following that, it was time to look at the contents of the FAT <code>storage</code> partition. I found <a target="_blank" rel="noopener noreferrer nofollow" href="https://www.osforensics.com/tools/mount-disk-images.html"><span>OSFMount</span></a> to be a great Windows application for this; it mounts the filesystem image as a virtual disk and allows writing to it!</p><p>This revealed a few interesting files that we saw from the serial output earlier:</p><div><div><pre><code><span><span>dev_info
</span></span><span>dev_key.key
</span><span>serial
</span><span>server_config
</span><span>SmartDevice-root-ca.crt
</span><span>SmartDevice-signer-ca.crt
</span><span>wifi_config</span></code></pre></div><p>I inspected the contents of these files and found:</p><ul><li><p><code>dev_info</code> - a UUID labeled <code>firmware</code>, likely the version installed</p></li><li><p><code>dev_key.key</code> - 256-bit private key (prime256v1), the public key for this was printed to the serial output labeled <code>Device key</code>!</p></li><li><p><code>serial</code> - the serial number</p></li><li><p><code>server_config</code> - the address and port number we found earlier</p></li><li><p><code>SmartDevice-root-ca.crt</code> - a CA certificate with a 256-bit public key (prime256v1)</p></li><li><p><code>SmartDevice-signer-ca.crt</code> - a CA certificate with a 256-bit public key (prime256v1) and the root certificate as its CA (certificate authority)</p></li><li><p><code>wifi_config</code> - my WiFi SSID and password</p></li></ul></div><p>The <code>dev_key.key</code> file started with  <code>-----BEGIN EC PRIVATE KEY-----</code> which is an Elliptic Curve private key; I used <a target="_blank" rel="noopener noreferrer nofollow" href="https://www.openssl.org/"><span>openssl</span></a> to verify this with:</p><div><pre><code><span><span>openssl ec </span><span>-</span><span>in</span><span> dev_key</span><span>.</span><span>key </span><span>-</span><span>text </span><span>-</span><span>noout</span></span></code></pre></div><p>And the two <code>.crt</code> files started with <code>-----BEGIN CERTIFICATE-----</code> which I also verified using openssl with:</p><div><pre><code><span><span>openssl x509 </span><span>-</span><span>in</span><span> </span><span>.</span><span>/</span><span>SmartDevice</span><span>-</span><span>root</span><span>-</span><span>ca</span><span>.</span><span>crt </span><span>-</span><span>text </span><span>-</span><span>noout
</span></span><span><span>openssl x509 </span><span>-</span><span>in</span><span> </span><span>.</span><span>/</span><span>SmartDevice</span><span>-</span><span>signer</span><span>-</span><span>ca</span><span>.</span><span>crt </span><span>-</span><span>text </span><span>-</span><span>noout</span></span></code></pre></div><p>Having the certificates and device key stored on the device strongly indicates they are used to encrypt the UDP network packet data.</p><h2><a href="#initial-static-analysis" title="Initial Static Analysis"><span>Initial Static Analysis</span></a></h2><p>Now we've taken a look at the storage, it's time to look at the application which runs on the device. </p><p>We know it's running the <code>factory</code> partition, so I opened the <code>part.3.factory</code> file in the <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/NationalSecurityAgency/ghidra"><span>Ghidra</span></a> CodeBrowser. Ghidra is a free and open-source suite of reverse engineering tools from the NSA; it's an alternative to the paid <a target="_blank" rel="noopener noreferrer nofollow" href="https://hex-rays.com/ida-pro/"><span>IDA Pro</span></a>.</p><p>This file we're opening is the partition image direct from the flash; it's comprised of multiple segments of data, each getting mapped to different virtual memory regions on the ESP32. For example, data at offset <code>0x17CC4</code> in the partition image is actually mapped to <code>0x40080ce0</code> in the device's virtual memory, so although this file contains all of the application logic and data, Ghidra won't understand how to resolve any absolute memory references, at least for now. There will be more on this later!</p><p>The ESP32 microprocessor uses the Xtensa instruction set, and Ghidra has recently added support for this! When loading the image, you can select the language <code>Tensilica Xtensa 32-bit little-endian</code>. We can run the auto analysis; although it won't give us great results just yet, we can still look at any defined strings it is able to find.</p><h2><a href="#string-theory" title="String Theory"><span>String Theory</span></a></h2><p>Text strings in a compiled application are a fast-track way of locating and understanding logic when reverse engineering; they can reveal a lot about the application. </p><p>Because this compiled file only contains bytecode instructions for the processor, there are no function names, data types, or parameters. It can initially seem like a giant blob of nonsense, but as soon as you a string reference like <code>Failed to read wifi config file</code>, you can start to piece together what the logic is doing. Reverse engineering compiled applications can be difficult, but it is certainly a rewarding challenge.</p><p>So, I had a look through the <code>Defined Strings</code> window in Ghidra to see what I could find, and noticed all of the strings we saw in the serial output, such as:</p><div><div><pre><code><span><span>000031c4	</span><span>"Serial Number: %s</span><span>\r</span><span>\n</span><span>"</span><span>
</span></span><span><span>000031fc	</span><span>"Device key ready</span><span>\r</span><span>"</span><span>
</span></span><span><span>00003228	</span><span>"Base64 Public Key: %s</span><span>\r</span><span>\n</span><span>"</span></span></code></pre></div><p>As expected, the address is the string's location in the partition image. Ideally, this should be the address in the virtual memory when running on the ESP32; that way, we can see any bytecode that references this string. We'll tackle that soon!</p></div><p>In close proximity to these strings were some others of interest:</p><div><div><pre><code><span><span>000030d0	</span><span>"Message CRC error</span><span>\r</span><span>"</span><span>
</span></span><span><span>00003150	</span><span>"Seed Error: %d</span><span>\r</span><span>\n</span><span>"</span><span>
</span></span><span><span>000031c4	</span><span>"Serial Number: %s</span><span>\r</span><span>\n</span><span>"</span><span>
</span></span><span><span>000031fc	</span><span>"Device key ready</span><span>\r</span><span>"</span><span>
</span></span><span><span>00003228	</span><span>"Base64 Public Key: %s</span><span>\r</span><span>\n</span><span>"</span><span>
</span></span><span><span>00003240	</span><span>"Error reading root cert!!!!</span><span>\r</span><span>"</span><span>
</span></span><span><span>00003260	</span><span>"Error reading signer cert!!!!</span><span>\r</span><span>"</span><span>
</span></span><span><span>00003280	</span><span>"PRNG fail</span><span>\r</span><span>"</span><span>
</span></span><span><span>0000328c	</span><span>"ECDH setup failed</span><span>\r</span><span>"</span><span>
</span></span><span><span>000032a0	</span><span>"mbedtls_ecdh_gen_public failed</span><span>\r</span><span>"</span><span>
</span></span><span><span>000032c0	</span><span>"mbedtls_mpi_read_binary failed</span><span>\r</span><span>"</span><span>
</span></span><span><span>000032e0	</span><span>"Error copying server key to ECDH</span><span>\r</span><span>"</span><span>
</span></span><span><span>00003304	</span><span>"mbedtls_ecdh_compute_shared failed: 0x%4.4X</span><span>\r</span><span>\n</span><span>"</span><span>
</span></span><span><span>00003334	</span><span>"Error accessing shared secret</span><span>\r</span><span>"</span><span>
</span></span><span><span>00003354	</span><span>"####### MBED HKDF failed: -0x%4.4X ########</span><span>\r</span><span>\n</span><span>"</span><span>
</span></span><span><span>00003384	</span><span>"Sign failed</span><span>\n</span><span>  ! mbedtls_ecp_group_copy returned 0x%4.4X</span><span>\n</span><span>"</span><span>
</span></span><span><span>000033c0	</span><span>"Sign failed</span><span>\n</span><span>  ! mbedtls_ecp_copy returned 0x%4.4X</span><span>\n</span><span>"</span><span>
</span></span><span><span>000033f4	</span><span>"Sign failed: 0x%4.4X</span><span>\r</span><span>\n</span><span>"</span><span>
</span></span><span><span>3f403d30	</span><span>"Write ECC conn packet</span><span>\r</span><span>\n</span><span>"</span></span></code></pre></div><p>There is so much useful information that we can extract from these strings. Even without reading the assembly, we can start to assume what it's doing with the data.</p><p>Here's what I noticed:</p><ul><li><p>CRC error code: this is a checksum algorithm that could be part of the packet data.</p></li><li><p><a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/Mbed-TLS/mbedtls"><span>mbedtls</span></a> is an open-source library implementing cryptographic primitives, X509 certificate manipulation, and SSL/TLS and DTLS protocols.</p></li><li><p>ECDH and HKDF primitive functions are used directly from mbedtls. We already know it's not using the DTLS protocol, so we can assume it's using them to implement a custom protocol.</p></li><li><div><p>We can also assume the files mentioned nearby are also related:</p><ul><li><p>Serial number</p></li><li><p>Device key</p></li><li><p>Root certificate</p></li><li><p>Signer certificate</p></li></ul></div></li><li><p>An "ECC conn packet" is sent from the client; this is part of the ECDH key exchange process; we'll also get to that later!</p></li></ul></div><h2><a href="#ghidra-setup" title="Ghidra Setup"><span>Ghidra Setup</span></a></h2><p>Ok, it's about time we configure Ghidra to analyze this ESP32 application better.</p><p>First up, esp32knife supports reformatting the binary partition image for the application into an ELF format, which Ghidra can better understand. I had to make a small tweak for it to support the <code>RTC_DATA</code> segment, which I've pushed to my fork on GitHub: <a target="_blank" rel="noopener noreferrer" href="https://github.com/jmswrnr/esp32knife/commit/6d632b7ca10aaf5c73da4a469a1e62efb2e03a18"><span>feat: add support for RTC_DATA image segment</span></a>. </p><p>We can then import the more useful <code>part.3.factory.elf</code> instead of the <code>part.3.factory</code> binary partition image.</p><p>But when importing this time, we want to do a couple of things before running the auto analysis, so let's opt out of doing that for now.</p><p>Next, we can use the <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/leveldown-security/SVD-Loader-Ghidra"><span>SVD-Loader-Ghidra</span></a> script to import the peripheral structs and memory maps from the official <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/espressif/svd/blob/main/svd/esp32.svd"><span>esp32.svd</span></a> file.</p><p>We can also use the built-in <code>SymbolImportScript</code> script to load labels for all ROM functions. I've published a file with all ROM function labels for the ESP32 ready for Ghidra here: <a target="_blank" rel="noopener noreferrer" href="https://gist.github.com/jmswrnr/3095b39f8b1f3631489a5db75a275875"><span>ESP32_ROM_LABELS.txt</span></a>. This will help us identify common ROM functions like <code>printf</code>.</p><p>Finally, we run the auto-analysis from the menu bar <code>Analysis &gt; Auto Analyze</code>.</p><p>Let's see what that does to the strings we found earlier:</p><div><div><pre><code><span><span>3f4031c4	</span><span>"Serial Number: %s</span><span>\r</span><span>\n</span><span>"</span><span>
</span></span><span><span>3f4031fc	</span><span>"Device key ready</span><span>\r</span><span>"</span><span>
</span></span><span><span>3f403228	</span><span>"Base64 Public Key: %s</span><span>\r</span><span>\n</span><span>"</span></span></code></pre></div><p>We can now see the same strings are mapped correctly to their virtual memory addresses, meaning the analysis will detect any pointers or instructions that reference them!</p></div><div><p>There are multiple versions of the ESP32, such as <code>ESP32c2</code>, and <code>ESP32s2</code>. The ROM labels and <code>.svd</code> file I've linked are for the default <code>ESP32.</code> if you have a different version, you'll need to import the specific <code>.svd</code> and create specific ROM labels following the README in my gist.</p></div><h2><a href="#firmware-modification" title="Firmware Modification"><span>Firmware Modification</span></a></h2><p>Up until this point, I have the PCB awkwardly positioned to keep the fan and control panel connected. So, I wanted to see if it would still function with them unplugged. Unfortunately, it did not; the serial logged the following:</p><div><pre><code><span><span>I2C read reg fail1
</span></span><span>No Cap device found!
</span><span>REGuru Meditation Error: Core  0 panic'ed (IllegalInstruction). Exception was unhandled.
</span><span>Memory dump at 0x400da020</span></code></pre></div><p>Now we have Ghidra configured nicely, I took a look at the address mentioned in the log; it was assembly right next to a reference for the <code>No Cap device found!</code> string, and at the start of the function, it logs <code>"CapSense Init\r"</code>. This must be for the control panel that uses capacitive sensing input!</p><p>I named this function in Ghidra to <code>InitCapSense</code>:</p><div><pre><code><span><span>void</span><span> </span><span>InitCapSense</span><span>(</span><span>)</span><span>
</span></span><span><span></span><span>{</span><span>                       
</span></span><span><span>  </span><span>FUN_401483e0</span><span>(</span><span>"CapSense Init\r"</span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>// ... CapSense logic</span><span>
</span></span><span><span></span><span>}</span></span></code></pre></div><p>I then followed the references to this function back to another function that appeared to be starting as a task/service; I renamed this one <code>StartCapSenseService:</code></p><div><pre><code><span><span>void</span><span> </span><span>StartCapSenseService</span><span>(</span><span>)</span><span>
</span></span><span><span></span><span>{</span><span>
</span></span><span><span>  _DAT_3ffb2e2c </span><span>=</span><span> </span><span>FUN_40088410</span><span>(</span><span>1</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>3</span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>FUN_4008905c</span><span>(</span><span>InitCapSense</span><span>,</span><span> </span><span>&amp;</span><span>DAT_3f40243c</span><span>,</span><span> </span><span>0x800</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>10</span><span>,</span><span> </span><span>0</span><span>,</span><span> </span><span>0x7fffffff</span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>return</span><span>;</span><span>
</span></span><span><span></span><span>}</span></span></code></pre></div><p>Again, I followed the function references and found the function that calls <code>StartCapSenseService</code>. Using Ghidra's Patch Instruction feature, I replaced the <code>call</code> instruction with a <code>nop</code>  (no operation) instruction to remove the function call:</p><div><pre><code><span><span>// Original</span><span>
</span></span><span><span></span><span>400d9a28  </span><span>25 63 af</span><span>    call8</span><span>     FUN_4008905c
</span><span>
</span></span><span><span></span><span>400d9a2b  </span><span>65 31 00</span><span>    call8</span><span>     StartCapSenseService
</span><span>
</span></span><span><span></span><span>400d9a2e  </span><span>e5 37 00</span><span>    call8</span><span>     FUN_400d9dac
</span><span>
</span></span><span>
</span><span><span></span><span>// Patched</span><span>
</span></span><span><span></span><span>400d9a28  </span><span>25 63 af</span><span>    call8</span><span>     FUN_4008905c
</span><span>
</span></span><span><span></span><span>400d9a2b  </span><span>f0 20 00</span><span>    nop
</span><span>
</span></span><span><span></span><span>400d9a2e  </span><span>e5 37 00</span><span>    call8</span><span>     FUN_400d9dac</span></span></code></pre></div><p>We want to flash this change to the ESP32, so I replaced the bytes that were modified, not in this ELF file, but in the <code>part.3.factory</code> binary partition image, because that is in a raw format directly from the flash, so it will be easy to write back. I use a hex editor to find &amp; replace the bytes:</p><p><code>2564af 653100 e53700</code> -&gt; <code>2563af f02000 e53700</code></p><p>Then, I wrote this modified image to the ESP32 flash at the offset <code>0x10000</code>, that is the offset from the partition table for the factory partition:</p><div><pre><code><span><span>esptool </span><span>-</span><span>p </span><span>COM7</span><span> </span><span>-</span><span>b </span><span>115200</span><span> write_flash </span><span>0x10000</span><span> </span><span>.</span><span>/</span><span>patched</span><span>.</span><span>part</span><span>.</span><span>3</span><span>.</span><span>factory</span></span></code></pre></div><p>But when trying to boot this, we get an error from the serial output:</p><div><pre><code><span><span>E </span><span>(</span><span>983</span><span>)</span><span> esp_image</span><span>:</span><span> Checksum failed</span><span>.</span><span> Calculated </span><span>0xc7</span><span> read </span><span>0x43</span><span>
</span></span><span><span>E </span><span>(</span><span>987</span><span>)</span><span> boot</span><span>:</span><span> Factory app partition </span><span>is</span><span> </span><span>not</span><span> bootable</span></span></code></pre></div><p>Alright, so there is a checksum. Luckily, the code inside esptool knows how to calculate this, so I threw together a quick little script to fix the checksums for an application partition image: <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/jmswrnr/esp32knife/commit/1a2c6eadca6cc43b7a3bb33e4d957cbde8d44388"><span>feat: add image checksum repair script</span></a>.</p><p>Now, we can use this to repair the checksums and flash the repaired image:</p><div><pre><code><span><span>python esp32fix</span><span>.</span><span>py </span><span>--</span><span>chip</span><span>=</span><span>esp32 app_image </span><span>.</span><span>/</span><span>patched</span><span>.</span><span>part</span><span>.</span><span>3</span><span>.</span><span>factory
</span></span><span>
</span><span><span>esptool </span><span>-</span><span>p </span><span>COM7</span><span> </span><span>-</span><span>b </span><span>115200</span><span> write_flash </span><span>0x10000</span><span> </span><span>.</span><span>/</span><span>patched</span><span>.</span><span>part</span><span>.</span><span>3</span><span>.</span><span>factory</span><span>.</span><span>fixed</span></span></code></pre></div><p>I tried booting the device without the control panel again; everything now works ok! We have successfully just modified the smart device's firmware!</p><h2><a href="#packet-header" title="Packet Header"><span>Packet Header</span></a></h2><p>Let's get back to focusing on the packets. We know the packets do not follow a well-known protocol, meaning we must figure out the structure ourselves.</p><p>I captured the packets from the device booting numerous times and compared them to each other. I noticed the first thirteen bytes were similar to other packets, while the rest of the packet seemed to be encrypted.</p><p>Here's the first packet received from the server between boots; you can see the data matches up until the offset <code>0x0D</code>:</p><div><pre><code><span><span>Hex View</span><span>  00 01 02 03 04 05 06 07  08 09 0A 0B 0C 0D 0E 0F
</span></span><span><span></span><span> </span><span>
</span></span><span><span></span><span>00000000</span><span>  55 00 2F 82 01 23 45 67  89 AB CD EF FF 37 34 9A</span><span>  U./..#Eg.....74.
</span></span><span><span></span><span>00000010</span><span>  7E E6 59 7C 5D 0D AF 71  A0 5F FA 88 13 B0 BE 8D</span><span>  ~.Y|]..q._......
</span></span><span><span></span><span>00000020</span><span>  ED A0 AB FA 47 ED 99 9A  06 B9 80 96 95 C0 96  </span><span>   ....G..........
</span></span><span><span></span><span>
</span></span><span><span></span><span>Hex View</span><span>  00 01 02 03 04 05 06 07  08 09 0A 0B 0C 0D 0E 0F
</span></span><span><span></span><span> </span><span>
</span></span><span><span></span><span>00000000</span><span>  55 00 2F 82 01 23 45 67  89 AB CD EF FF 81 85 3F</span><span>  U./..#Eg.......?
</span></span><span><span></span><span>00000010</span><span>  8A 10 F5 02 A5 F0 BD 28  73 C2 8C 05 71 6E E4 A3</span><span>  .......(s...qn..
</span></span><span><span></span><span>00000020</span><span>  A6 36 FD 5C E0 D5 AC 3E  1A D5 C5 88 99 86 28  </span><span>   .6.\...&gt;......(</span></span></code></pre></div><p>It wasn't too difficult to figure out the first couple of values, then I noticed the remaining nine bytes matched the serial number from the device's serial output, and there we have the packet header format:</p><div><div><pre><code><span><span>55 </span><span>// magic byte to identity the protocol</span><span>
</span></span><span><span></span><span>00 31 </span><span>// length of the packet in bytes</span><span>
</span></span><span><span></span><span>02 </span><span>// message identifier</span><span>
</span></span><span><span></span><span>01 23 45 67 89 AB CD EF FF </span><span>// device serial</span></span></code></pre></div><ul><li><p>A magic byte is commonly used to identify a piece of data in a specific format uniquely.</p></li><li><p>A size-related byte and message ID are very common to expect in a packet like this.</p></li></ul></div><p>The packets first sent and received had a slightly different format to those that followed; there were always the bytes <code>00 01</code> after the header in the client packet, and it was the only packet with the message ID of <code>0x02</code>.</p><p>Comparing it to the other packets, I noticed a pattern with the message ID:</p><ul><li><p><code>0x02</code> - First packet sent from smart device</p></li><li><p><code>0x82</code> - First packet received from cloud server</p></li><li><p><code>0x01</code> - All other packets sent from smart device</p></li><li><p><code>0x81</code> - All other packets received from cloud server</p></li></ul><p>You can see the higher bits in this value represent if it's a client request (<code>0x00</code>) or a server response (<code>0x80</code>). And the lower bits are different between the first exchange (<code>0x02</code>) and all other packets (<code>0x01</code>).</p><h2><a href="#packet-checksum" title="Packet Checksum"><span>Packet Checksum</span></a></h2><p>We noticed a string in the application earlier that said <code>"Message CRC error\r"</code> which implied there is a CRC checksum in the packet. It would be helpful to know if there is a checksum in the data so it doesn't interfere with any decryption attempts. </p><p>I followed the references to this string, and a single function references it. </p><p>Let's take a look at the Decompiled code for that function:</p><div><pre><code><span><span>// ...</span><span>
</span></span><span><span>iVar1 </span><span>=</span><span> </span><span>FUN_4014b384</span><span>(</span><span>0</span><span>,</span><span> </span><span>(</span><span>char </span><span>*</span><span>)</span><span>(</span><span>uint</span><span>)</span><span>_DAT_3ffb2e40 </span><span>+</span><span> </span><span>0x3ffb2e42</span><span>)</span><span>;</span><span>
</span></span><span><span>iVar2 </span><span>=</span><span> </span><span>FUN_400ddfc0</span><span>(</span><span>&amp;</span><span>DAT_3ffb2e44</span><span>,</span><span> _DAT_3ffb2e40 </span><span>-</span><span> </span><span>2</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>if</span><span> </span><span>(</span><span>iVar1 </span><span>==</span><span> iVar2</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>  </span><span>if</span><span> </span><span>(</span><span>DAT_3ffb2e47 </span><span>==</span><span> </span><span>'\x01'</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>FUN_400db5c4</span><span>(</span><span>0x3ffb2e48</span><span>,</span><span> _DAT_3ffb2e40 </span><span>-</span><span> </span><span>6</span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span>  </span><span>else</span><span> </span><span>if</span><span> </span><span>(</span><span>DAT_3ffb2e47 </span><span>==</span><span> </span><span>'\x02'</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>FUN_401483e0</span><span>(</span><span>s_Connection_message_3f4030e4</span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span>  pcVar3 </span><span>=</span><span> </span><span>(</span><span>char </span><span>*</span><span>)</span><span>0x0</span><span>;</span><span>
</span></span><span><span>  _DAT_3ffb3644 </span><span>=</span><span> </span><span>(</span><span>char </span><span>*</span><span>)</span><span>0x0</span><span>;</span><span>
</span></span><span><span></span><span>}</span><span>
</span></span><span><span></span><span>else</span><span> </span><span>{</span><span>
</span></span><span><span>  </span><span>FUN_401483e0</span><span>(</span><span>s_Message_CRC_error_3f4030d0</span><span>)</span><span>;</span><span>
</span></span><span><span>  pcVar3 </span><span>=</span><span> </span><span>(</span><span>char </span><span>*</span><span>)</span><span>0x0</span><span>;</span><span>
</span></span><span><span>  _DAT_3ffb3644 </span><span>=</span><span> </span><span>(</span><span>char </span><span>*</span><span>)</span><span>0x0</span><span>;</span><span>
</span></span><span><span></span><span>}</span><span>
</span></span><span><span></span><span>// ...</span></span></code></pre></div><p>We can see the <code>s_Message_CRC_error</code> label being used in the <code>else</code> block, so the <code>if</code> statement must verify the CRC data for a message.</p><p>This logic compares the results of 2 functions <code>FUN_4014b384</code> and <code>FUN_400ddfc0</code>. If this is verifying the checksum of a packet, one must generate a checksum for the packet data, and the other must read the checksum value from the packet. </p><p>We could use the arguments to help us decide which is which, but let's take a look at both:</p><div><div><pre><code><span><span>uint </span><span>FUN_4014b384</span><span>(</span><span>int param_1</span><span>,</span><span> byte </span><span>*</span><span>param_2</span><span>)</span><span>
</span></span><span><span></span><span>{</span><span>
</span></span><span><span>  uint uVar1</span><span>;</span><span>
</span></span><span>  
</span><span><span>  </span><span>if</span><span> </span><span>(</span><span>param_1 </span><span>==</span><span> </span><span>0</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>    uVar1 </span><span>=</span><span> </span><span>(</span><span>uint</span><span>)</span><span>*</span><span>param_2 </span><span>*</span><span> </span><span>0x100</span><span> </span><span>+</span><span> </span><span>(</span><span>uint</span><span>)</span><span>param_2</span><span>[</span><span>1</span><span>]</span><span>;</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span>  </span><span>else</span><span> </span><span>{</span><span>
</span></span><span><span>    uVar1 </span><span>=</span><span> </span><span>(</span><span>uint</span><span>)</span><span>*</span><span>param_2 </span><span>+</span><span> </span><span>(</span><span>uint</span><span>)</span><span>param_2</span><span>[</span><span>1</span><span>]</span><span> </span><span>*</span><span> </span><span>0x100</span><span>;</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span>  </span><span>return</span><span> uVar1 </span><span>&amp;</span><span> </span><span>0xffff</span><span>;</span><span>
</span></span><span><span></span><span>}</span><span>
</span></span><span></span></code></pre></div><p>This doesn't look like a CRC function. It actually looks like a function that reads a 16-bit uint with configurable endianness; here's why:</p><ul><li><p>Multiplying a value by <code>0x100</code> (256) is the equivalent of shifting left by 8 bits (half of a 16-bit value), so <code>0x37</code> becomes <code>0x3700</code>. The logic in the first <code>if</code> code block adds this to the byte at index[1]; this is the next byte after it in memory, so that's basically reading a big-endian uint16 from the <code>param_2</code> pointer</p></li><li><p>The logic of the <code>else</code> code block is similar but shifts the second byte instead of the first, thus reading a little-endian uint16. So, the <code>param_1</code> parameter configures the endianness of the result.</p></li><li><p>The return statement does a bitwise AND (<code>&amp;</code>) operator on the return value with <code>0xFFFF</code>, this restricts the value to 16 bits of data by zeroing out any higher bits.</p></li></ul></div><div><div><pre><code><span><span>uint </span><span>FUN_400ddfc0</span><span>(</span><span>byte </span><span>*</span><span>param_1</span><span>,</span><span> uint param_2</span><span>)</span><span>
</span></span><span><span></span><span>{</span><span>
</span></span><span><span>  uint uVar1</span><span>;</span><span>
</span></span><span><span>  uint uVar2</span><span>;</span><span>
</span></span><span><span>  byte </span><span>*</span><span>pbVar3</span><span>;</span><span>
</span></span><span>  
</span><span><span>  pbVar3 </span><span>=</span><span> param_1 </span><span>+</span><span> </span><span>(</span><span>param_2 </span><span>&amp;</span><span> </span><span>0xffff</span><span>)</span><span>;</span><span>
</span></span><span><span>  uVar1 </span><span>=</span><span> </span><span>0xffff</span><span>;</span><span>
</span></span><span><span>  </span><span>for</span><span> </span><span>(</span><span>;</span><span> pbVar3 </span><span>!=</span><span> param_1</span><span>;</span><span> param_1 </span><span>=</span><span> param_1 </span><span>+</span><span> </span><span>1</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>    uVar1 </span><span>=</span><span> </span><span>(</span><span>uint</span><span>)</span><span>*</span><span>param_1 </span><span>&lt;&lt;</span><span> </span><span>8</span><span> </span><span>^</span><span> uVar1</span><span>;</span><span>
</span></span><span><span>    uVar2 </span><span>=</span><span> uVar1 </span><span>&lt;&lt;</span><span> </span><span>1</span><span>;</span><span>
</span></span><span><span>    </span><span>if</span><span> </span><span>(</span><span>(</span><span>short</span><span>)</span><span>uVar1 </span><span>&lt;</span><span> </span><span>0</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>      uVar2 </span><span>=</span><span> uVar2 </span><span>^</span><span> </span><span>0x1021</span><span>;</span><span>
</span></span><span><span>    </span><span>}</span><span>
</span></span><span><span>    uVar1 </span><span>=</span><span> uVar2 </span><span>&amp;</span><span> </span><span>0xffff</span><span>;</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span>  </span><span>return</span><span> uVar1</span><span>;</span><span>
</span></span><span><span></span><span>}</span></span></code></pre></div><p>Now, this looks a lot more like a checksum function; there's a <code>for</code> loop with a bunch of bitwise operators inside.</p><p>I open up one of the captured packets into <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/WerWolv/ImHex"><span>ImHex</span></a>, a hex editor for reverse engineers. This has a handy feature to show the checksum of the currently selected data. </p><p>Because the other function reads a 16-bit uint, I select CRC-16 and start selecting regions of bytes that would likely be hashed, leaving 2 bytes unselected where I think the 16-bit hash could be.</p><p>No luck so far, but then I noticed you can configure the CRC-16 parameters in ImHex. So, I tried a cheap shortcut and set up ImHex to calculate CRC-16 checksums with a bunch of different parameter combinations using the values found in the decompiled function.</p><p>Success! The last 2 bytes of the packet turned out to be a CRC checksum of all other data in the packet, specifically CRC-16 with <code>0x1021</code> polynomial and <code>0xFFFF</code> initial value. I checked this with other packets, and they all passed the checksum.</p></div><p>Now we know the last 2 bytes of every packet are a CRC-16 checksum and can exclude it from any decryption attempts!</p><h2><a href="#key-exchange" title="Key Exchange"><span>Key Exchange</span></a></h2><p>Earlier, we noticed <code>mbedtls</code> primitives labeled as ECDH and HKDF. So, what exactly are they?</p><p>ECDH (Elliptic Curve Diffie–Hellman Key Exchange) is a key agreement protocol that allows 2 parties (like the smart device and its cloud server), each having an elliptic-curve public–private key pair, to establish a shared secret over an insecure channel (UDP). I found a great explanation of this in more detail in "Practical Cryptography for Developers": <a target="_blank" rel="noopener noreferrer nofollow" href="https://cryptobook.nakov.com/asymmetric-key-ciphers/ecdh-key-exchange"><span>ECDH Key Exchange</span></a>.</p><p>Essentially, if the smart device and server generate an EC key pair and exchange their public keys, they can use the other's public key with their private key to compute a shared secret key. This shared secret key could be used to encrypt and decrypt the packets! And even though they exchange public keys over the insecure network, you still need one of the private keys in order to compute the shared key.</p><p>This is ideal for securing packets like this, and the first packet sent by the client is actually named the <code>ECC conn packet</code> in the logs:</p><div><pre><code><span><span>UDP Connect</span><span>:</span><span> smartdeviceep.---.com
</span></span><span><span>smartdeviceep.---.com = </span><span>192.168</span><span>.</span><span>0.10</span><span>
</span></span><span>UDP Socket created
</span><span>UDP RX Thread Start
</span><span>Write ECC conn packet</span></code></pre></div><p>This is great progress; we know the first packet exchange is likely exchanging EC public keys to establish an ECDH key agreement to encrypt all the other packets.</p><p>If we ignore the packet header (13 bytes from the start) and checksum (2 bytes at the end), we can see the contents of the packets for this potential key exchange are both 32 bytes (256 bits), which would be a valid size for a public key. Even though the client's request has <code>00 01</code> at the start, we can assume this is some unimportant data descriptor as it doesn't change value between boots:</p><div><pre><code><span><span>// Client request packet contents:</span><span>
</span></span><span><span></span><span>
</span></span><span><span></span><span>Hex View</span><span>  00 01 02 03 04 05 06 07  08 09 0A 0B 0C 0D 0E 0F
</span></span><span><span></span><span>
</span></span><span><span></span><span>00000000</span><span>  00 01 D1 C2 B3 41 70 17  75 12 F7 69 25 17 50 4A</span><span>  .....Ap.u..i%.PJ
</span></span><span><span></span><span>00000010</span><span>  C5 DD D4 98 06 FE 24 6B  96 FD 56 14 4A 70 7E 51</span><span>  ......$k..V.Jp~Q
</span></span><span><span></span><span>00000020</span><span>  55 57                            </span><span>                UW
</span></span><span><span></span><span>
</span></span><span><span></span><span>// Server response packet contents:</span><span>
</span></span><span><span></span><span>
</span></span><span><span></span><span>Hex View</span><span>  00 01 02 03 04 05 06 07  08 09 0A 0B 0C 0D 0E 0F
</span></span><span><span></span><span> </span><span>
</span></span><span><span></span><span>00000000</span><span>  07 A8 02 73 52 42 1F 1F  C1 41 B4 E4 5B D9 A9 9A</span><span>  ...sRB...A..[...
</span></span><span><span></span><span>00000010</span><span>  5A DD 0F 94 F1 AB 9E E8  86 C7 99 7E 08 68 52 C5</span><span>  Z..........~.hR.</span></span></code></pre></div><p>Ok, so what is the HKDF? That is HMAC-based key derivation. It can be used to convert shared secrets computed from Diffie–Hellman into key material suitable for use in encryption. Wow, that makes a lot of sense; it's most likely doing exactly that to derive a key to encrypt and decrypt the other packets.</p><h2><a href="#cryptography-analysis" title="Cryptography Analysis"><span>Cryptography Analysis</span></a></h2><p>To be able to decrypt these packets, we need to understand exactly how the key for encryption is generated. That includes any possible input data as well as configurable options.</p><p>It's safe to assume the ECDH and HKDF functions are used for the packet data, so focusing on the key generation process, I summarize the variables we need to understand:</p><ul><li><div><p>ECDH:</p><ul><li><p>Public key</p></li><li><p>Private key</p></li></ul></div></li><li><div><p>HKDF</p><ul><li><p>Hashing method</p></li><li><p>Output key size</p></li><li><p>Optional salt</p></li><li><p>Optional info</p></li></ul></div></li></ul><p>The smart device and its cloud server both exchange 256 bits of data during what we assume is the key exchange process. But remember, the smart device firmware also loads the following keys from storage:</p><ul><li><p>256-bit device key pair (private &amp; public)</p></li><li><p>256-bit cloud server <code>"root"</code> public key</p></li><li><p>256-bit cloud server <code>"signer"</code> public key</p></li></ul><p>There are a lot of possibilities here, so I take another look at the application in Ghidra. By following the error strings, I located the function which generates this key! I steadily work my way through labeling functions and variables by comparing the assembly to the mbedtls source code. I was able to annotate and simplify it to the following pseudocode:</p><div><div><pre><code><span><span>int</span><span> </span><span>GenerateNetworkKey</span><span>(</span><span>uchar </span><span>*</span><span>outputKey</span><span>,</span><span> uchar </span><span>*</span><span>outputRandomBytes</span><span>)</span><span>
</span></span><span><span></span><span>{</span><span>
</span></span><span><span>  </span><span>// Generate an ECDH key pair</span><span>
</span></span><span><span>  char privateKey1 </span><span>[</span><span>12</span><span>]</span><span>;</span><span>
</span></span><span><span>  char publicKey1 </span><span>[</span><span>36</span><span>]</span><span>;</span><span>
</span></span><span><span>  </span><span>mbedtls_ecdh_gen_public</span><span>(</span><span>
</span></span><span><span>    ecpGroup</span><span>,</span><span> 
</span></span><span><span>    privateKey1</span><span>,</span><span> 
</span></span><span><span>    publicKey1</span><span>,</span><span> 
</span></span><span><span>    </span><span>(</span><span>char </span><span>*</span><span>)</span><span>mbedtls_ctr_drbg_random</span><span>,</span><span> 
</span></span><span>    drbgContext
</span><span><span>  </span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span>  </span><span>// Overwrite generated private key?</span><span>
</span></span><span><span>  </span><span>mbedtls_mpi_read_binary</span><span>(</span><span>privateKey1</span><span>,</span><span> </span><span>(</span><span>uchar </span><span>*</span><span>)</span><span>(</span><span>_DAT_3ffb3948 </span><span>+</span><span> </span><span>0x7c</span><span>)</span><span>,</span><span> </span><span>1</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span>  </span><span>// Overwrite generated public key?</span><span>
</span></span><span><span>  </span><span>mbedtls_ecp_copy</span><span>(</span><span>publicKey1</span><span>,</span><span> </span><span>(</span><span>char </span><span>*</span><span>)</span><span>(</span><span>_DAT_3ffb3948 </span><span>+</span><span> </span><span>0x88</span><span>)</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span>  </span><span>// Load another public key?</span><span>
</span></span><span><span>  char publicKey2 </span><span>[</span><span>36</span><span>]</span><span>;</span><span>
</span></span><span><span>  </span><span>mbedtls_ecp_copy</span><span>(</span><span>publicKey2</span><span>,</span><span> </span><span>(</span><span>char </span><span>*</span><span>)</span><span>(</span><span>_DAT_3ffb38cc </span><span>+</span><span> </span><span>0x88</span><span>)</span><span>)</span><span>;</span><span>
</span></span><span>  
</span><span><span>  </span><span>// Compute shared secret key using privateKey1 and publicKey 2</span><span>
</span></span><span><span>  char computedSharedSecret </span><span>[</span><span>100</span><span>]</span><span>;</span><span>
</span></span><span><span>  uchar binarySharedSecret </span><span>[</span><span>35</span><span>]</span><span>;</span><span>
</span></span><span><span>  </span><span>mbedtls_ecdh_compute_shared</span><span>(</span><span>
</span></span><span><span>    ecpGroup</span><span>,</span><span>
</span></span><span><span>    computedSharedSecret</span><span>,</span><span>
</span></span><span><span>    publicKey2</span><span>,</span><span>
</span></span><span><span>    privateKey1</span><span>,</span><span>
</span></span><span><span>    </span><span>(</span><span>char </span><span>*</span><span>)</span><span>mbedtls_ctr_drbg_random</span><span>,</span><span>
</span></span><span>    drbgContext
</span><span><span>  </span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>mbedtls_mpi_write_binary</span><span>(</span><span>computedSharedSecret</span><span>,</span><span> binarySharedSecret</span><span>,</span><span> </span><span>0x20</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span>  </span><span>// Generate random bytes</span><span>
</span></span><span><span>  </span><span>mbedtls_ctr_drbg_random</span><span>(</span><span>globalDrbgContext</span><span>,</span><span> outputRandomBytes</span><span>,</span><span> </span><span>0x20</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span>  </span><span>// Derive key</span><span>
</span></span><span><span>  mbedtls_md_info_t </span><span>*</span><span>md </span><span>=</span><span> </span><span>mbedtls_md_info_from_type</span><span>(</span><span>MBEDTLS_MD_SHA256</span><span>)</span><span>;</span><span>
</span></span><span><span>  uchar</span><span>*</span><span> deviceSerialNumber </span><span>=</span><span> </span><span>(</span><span>uchar </span><span>*</span><span>)</span><span>GetDeviceSerialNumber</span><span>(</span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>mbedtls_hkdf</span><span>(</span><span>
</span></span><span><span>    md</span><span>,</span><span> 
</span></span><span><span>    binarySharedSecret</span><span>,</span><span> </span><span>// salt</span><span>
</span></span><span><span>    </span><span>0x20</span><span>,</span><span>
</span></span><span><span>    outputRandomBytes</span><span>,</span><span> </span><span>// input</span><span>
</span></span><span><span>    </span><span>0x20</span><span>,</span><span>
</span></span><span><span>    deviceSerialNumber</span><span>,</span><span> </span><span>// info</span><span>
</span></span><span><span>    </span><span>9</span><span>,</span><span>
</span></span><span><span>    outputKey</span><span>,</span><span>
</span></span><span><span>    </span><span>0x10</span><span>
</span></span><span><span>  </span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>}</span></span></code></pre></div><p>Being able to interpret assembly or even the decompiled code in Ghidra is certainly an acquired skill; I'd like to emphasize this took a while to figure out, with many breaks in between!</p><p>This function does something unusual; here's what we can learn from it:</p><ul><li><p>The generated ECDH key pair is discarded and replaced by keys loaded from somewhere else in memory, which is strange. Because the ECDH key pair generation function isn't used elsewhere in the application, it's likely these keys are the files from the firmware storage we saw earlier.</p></li><li><p>The algorithm used for the HKDF is <code>SHA-256</code>.</p></li><li><p>The computed shared secret is used as the HKDF <code>salt</code>.</p></li><li><p>Random bytes are generated as the HKDF <code>input</code>. </p></li><li><p>The device serial number is used as the HKDF <code>info</code>. </p></li><li><p>The HKDF output key size is <code>0x10</code> (16 bytes / 128 bits).</p></li></ul></div><p>We now have a much better understanding of how the smart device generates the potential encryption key. </p><p>It's useful to keep in mind that their cloud server also has to generate this key, meaning it needs to have all the same input variables to the HKDF. </p><p>Knowing this, we can recap the three dynamic inputs to the HKDF function and understand how the server will also have them:</p><ul><li><p><code>salt</code> - Shared secret:  The server must have access to the same private and public keys used for the ECDH shared secret computation or use the public to our private and the private to our public.</p></li><li><p><code>input</code> - Random bytes: The server must have access to these randomly generated bytes on the smart device; either we send these bytes to the server, or technically, the server could recreate the pseudo RNG method used. However, the generated bytes have the size of <code>0x20</code> (32 bytes / 256 bits) which exactly matches the size of the data sent in the key exchange packet, so it's highly likely we're sending it there!</p></li><li><p><code>info</code> - <strong>Device serial number:</strong> We already know the device serial number is part of the packet header, so the server easily has access to this value. </p></li></ul><p>Curious to know what the application did with these randomly generated bytes, I checked what the calling function did with them:</p><div><div><pre><code><span><span>stack</span><span>[</span><span>0</span><span>]</span><span> </span><span>=</span><span> </span><span>0x00</span><span>;</span><span>
</span></span><span><span>stack</span><span>[</span><span>1</span><span>]</span><span> </span><span>=</span><span> </span><span>0x01</span><span>;</span><span>
</span></span><span><span></span><span>GenerateNetworkKey</span><span>(</span><span>&amp;</span><span>KeyOutput</span><span>,</span><span> stack</span><span>[</span><span>2</span><span>]</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>log</span><span>(</span><span>2</span><span>,</span><span> </span><span>2</span><span>,</span><span> </span><span>"Write ECC conn packet\r\n"</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>SendPacket</span><span>(</span><span>(</span><span>int</span><span>)</span><span>param_1</span><span>,</span><span> </span><span>2</span><span>,</span><span> stack</span><span>[</span><span>0</span><span>]</span><span>,</span><span> </span><span>0x22</span><span>)</span><span>;</span></span></code></pre></div><p>We can see the random bytes from <code>GenerateNetworkKey</code> are written out to the stack, and better yet, the <code>00 01</code> bytes are written to the stack just before it, and then all <code>0x22</code> bytes are sent in the packet. That exactly matches the format we saw in the key exchange packet!  </p></div><h2><a href="#logging-key-data" title="Logging Key Data"><span>Logging Key Data</span></a></h2><p>Much progress has been made via static analysis, and the final value we need to calculate the decryption key is the shared secret.</p><p>At this point of reverse engineering, I hadn't reversed the functions as cleanly as shown in this blog post and wanted to try to dynamically obtain keys directly from the device.</p><p>Debugging via JTAG would be the sensible choice here. However, I didn't notice breakout points for these pins on the PCB, and I wanted to avoid soldering directly to the ESP32 pins, so I thought I'd challenge myself to patch the firmware to print it over serial!</p><p>The CapSense service is still disabled, so I thought I'd write a function over that logic to print out the shared secret key and call it right after it was computed!</p><p>So, planning in pseudocode, I'd want to add my function call to the <code>GenerateNetworkKey</code> function. Right after it has generated the key.:</p><div><pre><code><span><span>int</span><span> </span><span>GenerateNetworkKey</span><span>(</span><span>uchar </span><span>*</span><span>outputKey</span><span>,</span><span> uchar </span><span>*</span><span>outputRandomBytes</span><span>)</span><span>
</span></span><span><span></span><span>{</span><span>
</span></span><span><span>  </span><span>// ... </span><span>
</span></span><span>  
</span><span><span>  </span><span>// Add my function call:</span><span>
</span></span><span><span>  </span><span>print_key</span><span>(</span><span>binarySharedSecret</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>}</span><span>
</span></span><span>
</span><span><span></span><span>// Custom function saved over unused logic:</span><span>
</span></span><span><span></span><span>void</span><span> </span><span>print_key</span><span>(</span><span>char </span><span>*</span><span>key</span><span>)</span><span>
</span></span><span><span></span><span>{</span><span>
</span></span><span><span>  </span><span>for</span><span> </span><span>(</span><span>int</span><span> i </span><span>=</span><span> </span><span>0</span><span>;</span><span> i </span><span>&lt;</span><span> </span><span>32</span><span>;</span><span> i</span><span>++</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>log</span><span>(</span><span>"%2.2x"</span><span>,</span><span> key</span><span>[</span><span>i</span><span>]</span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span></span><span>}</span></span></code></pre></div><p>While referring to the <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/eerimoq/hardware-reference/blob/master/esp32/xtensa%20Instruction%20Set%20Architecture%20(ISA)%20Reference%20Manual.pdf"><span>Xtensa instruction set architecture manual</span></a>, I threw together some assembly like this:</p><div><div><pre><code><span><span>// Original</span><span>
</span></span><span><span></span><span>400dbf2d  </span><span>25 4b 6c</span><span>    call8</span><span>     GetDeviceSerialNumber</span><span>
</span></span><span>
</span><span><span></span><span>// Patched</span><span>
</span></span><span><span></span><span>400dbf2d  </span><span>e5 ff fd</span><span>    call8</span><span>     print_key</span><span>
</span></span><span>
</span><span><span></span><span>// print_key:</span><span>
</span></span><span><span></span><span>400d9f2c  </span><span>36 41 00</span><span>    entry</span><span>     </span><span>a1</span><span>,</span><span> 0x20</span><span>
</span></span><span><span></span><span>400d9f3b  </span><span>42 c2 20</span><span>    addi</span><span>      </span><span>a4</span><span>,</span><span> </span><span>a2</span><span>,</span><span> 0x20</span><span>
</span></span><span><span></span><span>400d9f3e  </span><span>52 a0 02</span><span>    movi</span><span>      </span><span>a5</span><span>,</span><span> 0x2</span><span>
</span></span><span><span></span><span>400d9f41  </span><span>61 ea db</span><span>    l32r</span><span>      </span><span>a6</span><span>,</span><span> PTR_s_%2.2x </span><span>// "%2.2x"</span><span>
</span></span><span><span></span><span>400d9f44  </span><span>d2 02 00</span><span>    l8ui</span><span>      </span><span>a13</span><span>,</span><span> </span><span>a2</span><span>,</span><span> 0x0</span><span>
</span></span><span><span></span><span>400d9f47  </span><span>60 c6 20</span><span>    mov</span><span>       </span><span>a12</span><span>,</span><span> </span><span>a6</span><span>
</span></span><span><span></span><span>400d9f4a  </span><span>50 b5 20</span><span>    mov</span><span>       </span><span>a11</span><span>,</span><span> </span><span>a5</span><span>
</span></span><span><span></span><span>400d9f4d  </span><span>50 a5 20</span><span>    mov</span><span>       </span><span>a10</span><span>,</span><span> </span><span>a5</span><span>
</span></span><span><span></span><span>400d9f50  </span><span>22 c2 01</span><span>    addi</span><span>      </span><span>a2</span><span>,</span><span> </span><span>a2</span><span>,</span><span> 0x1</span><span>
</span></span><span><span></span><span>400d9f53  </span><span>25 ed 05</span><span>    call8</span><span>     log</span><span>
</span></span><span><span></span><span>400d9f56  </span><span>27 94 ea</span><span>    bne</span><span>       </span><span>a4</span><span>,</span><span> </span><span>a2</span><span>,</span><span> LAB_400d9f44</span><span>
</span></span><span><span></span><span>400d9f59  </span><span>22 a0 00</span><span>    movi</span><span>      </span><span>a2</span><span>,</span><span> 0x0</span><span>
</span></span><span><span></span><span>400d9f5c  </span><span>90 00 00</span><span>    retw</span><span>
</span></span><span></span></code></pre></div><p>We patch over the <code>GetDeviceSerialNumber</code> function call because this is directly after the generation of the shared secret key, and the pointer to the key is still in the register <code>a2</code>.</p></div><p>I flashed the modified firmware, booted up the device, and checked the serial output:</p><div><pre><code><span><span>Write ECC conn packet
</span></span><span>e883eaed93c63d2c09cddebce6bb15a7f4cb5cedf00c1d882b8b292796254c9c</span></code></pre></div><p>Success! We've printed out the shared secret key! </p><p>I rebooted the device numerous times to see if the key changed, and it remained the same. It is most likely computed using the keys in the firmware storage, but now we have the computed static value, we don't need to reverse the computation process.</p><h2><a href="#packet-decryption" title="Packet Decryption"><span>Packet Decryption</span></a></h2><p>Alright, we now understand the method to derive the decryption key and have all input values; it looks something like this: </p><div><pre><code><span><span>const</span><span> hkdfOutputKey </span><span>=</span><span> </span><span>hkdf</span><span>(</span><span>{</span><span>
</span></span><span><span>  </span><span>method</span><span>:</span><span> </span><span>'SHA-256'</span><span>,</span><span>
</span></span><span><span>  </span><span>salt</span><span>:</span><span> Buffer</span><span>.</span><span>from</span><span>(</span><span>
</span></span><span><span>    </span><span>'e883eaed93c63d2c09cddebce6bb15a7f4cb5cedf00c1d882b8b292796254c9c'</span><span>,</span><span> </span><span>'hex'</span><span>
</span></span><span><span>  </span><span>)</span><span>,</span><span>
</span></span><span><span>  </span><span>input</span><span>:</span><span> randomBytesFromDeviceKeyExchangePacket</span><span>,</span><span>
</span></span><span><span>  </span><span>info</span><span>:</span><span> deviceSerialNumber</span><span>,</span><span>
</span></span><span><span>  </span><span>outputKeySize</span><span>:</span><span> </span><span>0x10</span><span>,</span><span>
</span></span><span><span></span><span>}</span><span>)</span><span>;</span></span></code></pre></div><p>To be on the safe side, I wrote another firmware patch to print the key output from the HKDF call and tried recreating the key from captured packets. It works! That confirms we have correctly reverse-engineered the key creation function and are able to replicate the key creation logic in our own application.</p><p>But now we need to find which encryption algorithm is used. I refer back to the function which formats packets and found the call to the encryption function:</p><div><div><pre><code><span><span>char randomBytes </span><span>[</span><span>16</span><span>]</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>// Write device serial</span><span>
</span></span><span><span></span><span>memcpy</span><span>(</span><span>0x3ffb3ce0</span><span>,</span><span> deviceSerialNumber</span><span>,</span><span> </span><span>9</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>// Generate and write random bytes</span><span>
</span></span><span><span></span><span>mbedtls_ctr_drbg_random</span><span>(</span><span>globalDrbgContext</span><span>,</span><span> randomBytes</span><span>,</span><span> </span><span>0x10</span><span>)</span><span>
</span></span><span><span></span><span>memcpy</span><span>(</span><span>0x3ffb3ce9</span><span>,</span><span> randomBytes</span><span>,</span><span> </span><span>0x10</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>// Write packet data</span><span>
</span></span><span><span></span><span>memcpy</span><span>(</span><span>0x3ffb3cf9</span><span>,</span><span> data</span><span>,</span><span> dataSize</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>// Pad with random bytes</span><span>
</span></span><span><span></span><span>mbedtls_ctr_drbg_random</span><span>(</span><span>globalDrbgContext dataSize </span><span>+</span><span> </span><span>0x3ffb3cf9</span><span>,</span><span> paddingSize</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>// Run encryption on the data + padding</span><span>
</span></span><span><span></span><span>FUN_400e2368</span><span>(</span><span>0x3ffb3cf9</span><span>,</span><span> dataSize </span><span>+</span><span> paddingSize</span><span>,</span><span> </span><span>&amp;</span><span>HKDFOutputKey</span><span>,</span><span> randomBytes</span><span>)</span><span>;</span></span></code></pre></div><p>I noticed that after the device serial number is copied to the packet, 16 random bytes are generated and copied directly after it. These bytes are also provided to the encryption function. So, we know they are an input variable to the encryption algorithm.</p></div><p>We know the key is 128 bits, with another 128 bits of additional random data.</p><p>I looked into the encryption function, which is very clearly crypto-related due to the looping of a bunch of bitwise operations, and noticed a reference to a static block of data.</p><p>This data started with <code>63 7C 77 7B F2 6B 6F C5</code>, a search in the mbedtls source code revealed it is the <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/Mbed-TLS/mbedtls/blob/47c74a477378ec3f0d1ba80547db836e078fa3a0/library/aes.c#L78"><span>AES Forward S-Box</span></a>!</p><p>I decided to jump straight into attempting AES decryption on the captured packets and <strong>successfully decrypted a packet!! 🎉</strong></p><div><pre><code><span><span>Hex View</span><span>  00 01 02 03 04 05 06 07  08 09 0A 0B 0C 0D 0E 0F
</span></span><span><span></span><span> </span><span>
</span></span><span><span></span><span>00000000</span><span>  00 00 65 00 53 00 82 A4  74 79 70 65 AF 6D 69 72</span><span>  ..e.S...type.mir
</span></span><span><span></span><span>00000010</span><span>  72 6F 72 5F 64 61 74 61  5F 67 65 74 A4 64 61 74</span><span>  ror_data_get.dat
</span></span><span><span></span><span>00000020</span><span>  61 85 A9 74 69 6D 65 73  74 61 6D 70 CF 00 00 01</span><span>  a..timestamp....
</span></span><span><span></span><span>00000030</span><span>  8D 18 05 31 FB A9 46 41  4E 5F 53 50 45 45 44 00</span><span>  ...1..FAN_SPEED.
</span></span><span><span></span><span>00000040</span><span>  A5 42 4F 4F 53 54 C2 A7  46 49 4C 54 45 52 31 00</span><span>  .BOOST..FILTER1.
</span></span><span><span></span><span>00000050</span><span>  A7 46 49 4C 54 45 52 32  00 07 07 07 07 07 07 07</span><span>  .FILTER2........</span></span></code></pre></div><p>The algorithm was <code>AES-128-CBC</code> and the additional random data was used as the <code>IV</code> (Initialization vector).</p><h2><a href="#mitm-attack" title="MITM Attack"><span>MITM Attack</span></a></h2><p>We can now create an MITM (man in the middle) attack that does not require any firmware patching. This is because the private key of the device is now known, the key derivation logic has been reverse-engineered, and any required dynamic data is exposed over the insecure network.</p><p>If it correctly implemented ECDH, the smart device would have a unique private key that isn't exposed, and our easiest route of attack would be to generate our own server key pair and do any firmware modifications so the device accepts our custom public key.</p><p>But because of their custom protocol's design, we can write an MITM script that can intercept, decrypt, and potentially modify network communications without any modifications to the smart device. So, that's what we're going to do!</p><p>The main aim now is to decrypt and log as much data as possible; then, we can reference that to write a local server endpoint that entirely replaces their cloud server.</p><p>I hack together a quick Node.js script to do this:</p><div><div><pre><code><span><span>const</span><span> dns </span><span>=</span><span> </span><span>require</span><span>(</span><span>"dns"</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>const</span><span> udp </span><span>=</span><span> </span><span>require</span><span>(</span><span>"dgram"</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>const</span><span> crypto </span><span>=</span><span> </span><span>require</span><span>(</span><span>"crypto"</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>const</span><span> hkdf </span><span>=</span><span> </span><span>require</span><span>(</span><span>"futoin-hkdf"</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>const</span><span> fs </span><span>=</span><span> </span><span>require</span><span>(</span><span>"fs"</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>// Key Gen</span><span>
</span></span><span>
</span><span><span></span><span>const</span><span> sharedSecretKey </span><span>=</span><span> Buffer</span><span>.</span><span>from</span><span>(</span><span>
</span></span><span><span>  </span><span>"e883eaed93c63d2c09cddebce6bb15a7f4cb5cedf00c1d882b8b292796254c9c"</span><span>,</span><span>
</span></span><span><span>  </span><span>"hex"</span><span>
</span></span><span><span></span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>function</span><span> </span><span>calculateAesKey</span><span>(</span><span>deviceSerialNumber</span><span>,</span><span> inputData</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>  </span><span>return</span><span> </span><span>hkdf</span><span>(</span><span>inputData</span><span>,</span><span> </span><span>16</span><span>,</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>salt</span><span>:</span><span> sharedSecretKey</span><span>,</span><span>
</span></span><span><span>    </span><span>info</span><span>:</span><span> deviceSerialNumber</span><span>,</span><span>
</span></span><span><span>    </span><span>hash</span><span>:</span><span> </span><span>"SHA-256"</span><span>,</span><span>
</span></span><span><span>  </span><span>}</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>}</span><span>
</span></span><span>
</span><span><span></span><span>// Packet Parsing</span><span>
</span></span><span>
</span><span><span></span><span>let</span><span> latestAesKey </span><span>=</span><span> </span><span>null</span><span>;</span><span>
</span></span><span><span></span><span>let</span><span> packetCounter </span><span>=</span><span> </span><span>0</span><span>;</span><span>
</span></span><span><span></span><span>const</span><span> proxyLogDir </span><span>=</span><span> path</span><span>.</span><span>join</span><span>(</span><span>__dirname</span><span>,</span><span> </span><span>"decrypted-packets"</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>function</span><span> </span><span>decryptPacket</span><span>(</span><span>data</span><span>,</span><span> deviceSerial</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>  </span><span>const</span><span> </span><span>IV</span><span> </span><span>=</span><span> data</span><span>.</span><span>subarray</span><span>(</span><span>0xd</span><span>,</span><span> </span><span>0x1d</span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>const</span><span> encryptedBuffer </span><span>=</span><span> data</span><span>.</span><span>subarray</span><span>(</span><span>0x1d</span><span>,</span><span> data</span><span>.</span><span>length </span><span>-</span><span> </span><span>2</span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>const</span><span> decipher </span><span>=</span><span> crypto</span><span>.</span><span>createDecipheriv</span><span>(</span><span>
</span></span><span><span>    </span><span>"aes-128-cbc"</span><span>,</span><span>
</span></span><span><span>    latestAesKey</span><span>,</span><span>
</span></span><span><span>    parsed</span><span>.</span><span>IV</span><span>
</span></span><span><span>  </span><span>)</span><span>;</span><span>
</span></span><span><span>  decipher</span><span>.</span><span>setAutoPadding</span><span>(</span><span>false</span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>return</span><span> Buffer</span><span>.</span><span>concat</span><span>(</span><span>[</span><span>decipher</span><span>.</span><span>update</span><span>(</span><span>encryptedBuffer</span><span>)</span><span>,</span><span> decipher</span><span>.</span><span>final</span><span>(</span><span>)</span><span>]</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>}</span><span>
</span></span><span>
</span><span><span></span><span>function</span><span> </span><span>logPacket</span><span>(</span><span>data</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>  </span><span>const</span><span> messageId </span><span>=</span><span> data</span><span>.</span><span>readUInt8</span><span>(</span><span>3</span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>const</span><span> deviceSerial </span><span>=</span><span> data</span><span>.</span><span>subarray</span><span>(</span><span>4</span><span>,</span><span> </span><span>4</span><span> </span><span>+</span><span> </span><span>9</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span>  </span><span>if</span><span> </span><span>(</span><span>messageId </span><span>===</span><span> </span><span>2</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>// Key Exchange</span><span>
</span></span><span><span>    </span><span>const</span><span> randomlyGeneratedBytes </span><span>=</span><span> data</span><span>.</span><span>subarray</span><span>(</span><span>0xf</span><span>,</span><span> data</span><span>.</span><span>length </span><span>-</span><span> </span><span>2</span><span>)</span><span>;</span><span>
</span></span><span><span>    latestAesKey </span><span>=</span><span> </span><span>calculateAesKey</span><span>(</span><span>deviceSerial</span><span>,</span><span> randomlyGeneratedBytes</span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>}</span><span> </span><span>else</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>// Encrypted Packets</span><span>
</span></span><span><span>    fs</span><span>.</span><span>writeFileSync</span><span>(</span><span>
</span></span><span><span>      path</span><span>.</span><span>join</span><span>(</span><span>proxyLogDir</span><span>,</span><span> </span><span>`</span><span>packet-</span><span>${</span><span>id</span><span>}</span><span>.bin</span><span>`</span><span>)</span><span>,</span><span>
</span></span><span><span>      </span><span>decryptPacket</span><span>(</span><span>data</span><span>)</span><span>
</span></span><span><span>    </span><span>)</span><span>;</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span></span><span>}</span><span>
</span></span><span>
</span><span><span></span><span>// Networking</span><span>
</span></span><span>
</span><span><span>dns</span><span>.</span><span>setServers</span><span>(</span><span>[</span><span>"1.1.1.1"</span><span>,</span><span> </span><span>"[2606:4700:4700::1111]"</span><span>]</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>const</span><span> </span><span>PORT</span><span> </span><span>=</span><span> </span><span>41014</span><span>;</span><span>
</span></span><span><span></span><span>const</span><span> cloudIp </span><span>=</span><span> dns</span><span>.</span><span>resolve4</span><span>(</span><span>"smartdeviceep.---.com"</span><span>)</span><span>[</span><span>0</span><span>]</span><span>;</span><span>
</span></span><span><span></span><span>const</span><span> cloud </span><span>=</span><span> udp</span><span>.</span><span>createSocket</span><span>(</span><span>"udp4"</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>let</span><span> latestClientIp </span><span>=</span><span> </span><span>null</span><span>;</span><span>
</span></span><span><span></span><span>let</span><span> latestClientPort </span><span>=</span><span> </span><span>null</span><span>;</span><span>
</span></span><span>
</span><span><span>cloud</span><span>.</span><span>on</span><span>(</span><span>"message"</span><span>,</span><span> </span><span>function</span><span> </span><span>(</span><span>data</span><span>,</span><span> info</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>  </span><span>logPacket</span><span>(</span><span>data</span><span>)</span><span>;</span><span>
</span></span><span><span>  local</span><span>.</span><span>send</span><span>(</span><span>data</span><span>,</span><span> latestClientIp</span><span>,</span><span> latestClientPort</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>}</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>const</span><span> local </span><span>=</span><span> udp</span><span>.</span><span>createSocket</span><span>(</span><span>"udp4"</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>local</span><span>.</span><span>bind</span><span>(</span><span>PORT</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span>local</span><span>.</span><span>on</span><span>(</span><span>"message"</span><span>,</span><span> </span><span>function</span><span> </span><span>(</span><span>data</span><span>,</span><span> info</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>  </span><span>logPacket</span><span>(</span><span>data</span><span>)</span><span>;</span><span>
</span></span><span><span>  latestClientIp </span><span>=</span><span> info</span><span>.</span><span>address</span><span>;</span><span>
</span></span><span><span>  latestClientPort </span><span>=</span><span> info</span><span>.</span><span>port</span><span>;</span><span>
</span></span><span><span>  cloud</span><span>.</span><span>send</span><span>(</span><span>data</span><span>,</span><span> </span><span>PORT</span><span>,</span><span> cloudIp</span><span>)</span><span>;</span><span>
</span></span><span><span></span><span>}</span><span>)</span><span>;</span><span>
</span></span><span></span></code></pre></div><p>Here, we combine all of our research to implement an MITM attack.</p><p>Just like when we first captured packets, we configure Node.js to use Cloudflare's DNS resolver to bypass our local DNS server.</p><p>We create a UDP socket locally to accept packets from the smart device and also a socket to communicate with the cloud server.</p><ul><li><p>Anything we receive from the smart device, we log and send to the cloud server</p></li><li><p>Anything we receive from the cloud server, we log and send to the smart device</p></li></ul><p>We treat packets with the <code>messageId</code> of 2 to be the key exchange packet where the smart device send the random bytes to the server, we then calculate the AES key used to decrypt future packets.</p></div><p>While capturing, I used their mobile app to remotely control the smart device so we could reference the logs and replicate the logic ourselves.</p><h2><a href="#data-exchange-format" title="Data Exchange Format"><span>Data Exchange Format</span></a></h2><p>We now have the decrypted packet data, but the data is still in a serialized binary format:</p><div><div><pre><code><span><span>Hex View</span><span>  00 01 02 03 04 05 06 07  08 09 0A 0B 0C 0D 0E 0F
</span></span><span><span></span><span> </span><span>
</span></span><span><span></span><span>00000000</span><span>  01 00 64 00 29 00 82 A4  74 79 70 65 A7 63 6F 6E</span><span>  ..d.)...type.con
</span></span><span><span></span><span>00000010</span><span>  6E 65 63 74 A8 66 69 72  6D 77 61 72 65 C4 10 00</span><span>  nect.firmware...
</span></span><span><span></span><span>00000020</span><span>  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 83</span><span>  ................</span></span></code></pre></div><p>My mind was deep in the world of reverse engineering, and I managed to reverse the structure for all packets and hack together some JavaScript to convert the data to and from JSON.</p><p>The header was quite simple, again just some IDs and length, but in little endianness:</p><ul><li><p><code>01 00</code> - packet ID</p></li><li><p><code>64 00</code> - transaction ID</p></li><li><p><code>29 00</code> - serialized data length</p></li></ul><p>And with some tinkering, I figured out the serialized format:</p><ul><li><p><code>82</code> - Map</p></li><li><p><code>A4</code> - String of 4 length</p></li><li><p><code>A7</code> - String of 7 length</p></li></ul><p>This was fun to reverse because the typing was more described in bits, but it's clearly readable from the bytes for these simple cases.</p></div><p>Looking back on this, I'm not sure why I didn't look for an existing solution that matches this serialized binary data format; I was expecting everything to be a custom solution at this point. But having a search now, this is just <a target="_blank" rel="noopener noreferrer nofollow" href="https://msgpack.org/"><span>MessagePack</span></a>, so I guess I just reverse-engineered and wrote a partial msgpack implementation 😆</p><p>Switching over to a popular implementation, we can see the data is easily unpacked into JSON:</p><div><pre><code><span><span>const</span><span> </span><span>{</span><span> unpack</span><span>,</span><span> pack </span><span>}</span><span> </span><span>=</span><span> </span><span>require</span><span>(</span><span>'msgpackr'</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>const</span><span> packedData </span><span>=</span><span> Buffer</span><span>.</span><span>from</span><span>(</span><span>
</span></span><span><span>  </span><span>'82A474797065A7636F6E6E656374A86669726D77617265C41000000000000000000000000000000000'</span><span>,</span><span> 
</span></span><span><span>  </span><span>'hex'</span><span>
</span></span><span><span></span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>const</span><span> unpackedData </span><span>=</span><span> </span><span>unpack</span><span>(</span><span>packedData</span><span>)</span><span>;</span><span>
</span></span><span>
</span><span><span></span><span>// unpackedData:</span><span>
</span></span><span><span></span><span>{</span><span>
</span></span><span><span>  </span><span>type</span><span>:</span><span> </span><span>'connect'</span><span>,</span><span>
</span></span><span><span>  </span><span>firmware</span><span>:</span><span> </span><span>&lt;</span><span>Buffer </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span>&gt;</span><span>
</span></span><span><span></span><span>}</span></span></code></pre></div><h2><a href="#network-log-analysis" title="Network Log Analysis"><span>Network Log Analysis</span></a></h2><p>In preparation for writing a custom local server for the smart device, let's take a look at the unpacked network logs we've captured:</p><p><strong>🔑 Key Exchange Packet:</strong></p><p>The smart device sends random bytes to the server to be used in the HKDF.</p><div><pre><code><span><span>// Smart Device Request</span><span>
</span></span><span><span></span><span>D1C2B34170177512F7692517504AC5DDD49806FE246B96FD56144A707E515557</span><span>
</span></span><span>
</span><span><span></span><span>// Server Response</span><span>
</span></span><span><span></span><span>00000000000000000000000000000000</span></span></code></pre></div><p>↙️ <strong>Get Device State:</strong></p><p>The smart device fetches its initial state from the server when it boots.</p><div><pre><code><span><span>// Smart Device Request</span><span>
</span></span><span><span></span><span>{</span><span> </span><span>type</span><span>:</span><span> </span><span>'mirror_data_get'</span><span> </span><span>}</span><span>
</span></span><span>
</span><span><span></span><span>// Server Response</span><span>
</span></span><span><span></span><span>{</span><span>
</span></span><span><span>  </span><span>type</span><span>:</span><span> </span><span>'mirror_data_get'</span><span>,</span><span>
</span></span><span><span>  </span><span>data</span><span>:</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>timestamp</span><span>:</span><span> </span><span>1705505010171n</span><span>,</span><span>
</span></span><span><span>    </span><span>FAN_SPEED</span><span>:</span><span> </span><span>0</span><span>,</span><span>
</span></span><span><span>    </span><span>BOOST</span><span>:</span><span> </span><span>false</span><span>,</span><span>
</span></span><span><span>    </span><span>FILTER1</span><span>:</span><span> </span><span>0</span><span>,</span><span>
</span></span><span><span>    </span><span>FILTER2</span><span>:</span><span> </span><span>0</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span></span><span>}</span></span></code></pre></div><p>🔗 <strong>On Connect:</strong></p><p>When the smart device connects to the server, it sends its current firmware UUID. The server responds with the potential UUID for a firmware or config update that could be downloaded.</p><div><pre><code><span><span>// Smart Device Request</span><span>
</span></span><span><span></span><span>{</span><span>
</span></span><span><span>  </span><span>type</span><span>:</span><span> </span><span>'connect'</span><span>,</span><span>
</span></span><span><span>  </span><span>firmware</span><span>:</span><span> </span><span>&lt;</span><span>Buffer </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span>&gt;</span><span>
</span></span><span><span></span><span>}</span><span>
</span></span><span>
</span><span><span></span><span>// Server Response</span><span>
</span></span><span><span></span><span>{</span><span>
</span></span><span><span>  </span><span>type</span><span>:</span><span> </span><span>'connect'</span><span>,</span><span>
</span></span><span><span>  </span><span>server_time</span><span>:</span><span> </span><span>1706098993961n</span><span>,</span><span>
</span></span><span><span>  </span><span>firmware</span><span>:</span><span> </span><span>&lt;</span><span>Buffer ab cd ef ab cd ef ab cd ef ab cd ef ab cd ef ab</span><span>&gt;</span><span>,</span><span>
</span></span><span><span>  </span><span>config</span><span>:</span><span> </span><span>&lt;</span><span>Buffer </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span>&gt;</span><span>,</span><span>
</span></span><span><span>  </span><span>calibration</span><span>:</span><span> </span><span>&lt;</span><span>Buffer </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span>&gt;</span><span>,</span><span>
</span></span><span><span>  </span><span>conditioning</span><span>:</span><span> </span><span>&lt;</span><span>Buffer </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span> </span><span>00</span><span>&gt;</span><span>,</span><span>
</span></span><span><span>  </span><span>server_address</span><span>:</span><span> </span><span>'smartdeviceep.---.com'</span><span>,</span><span>
</span></span><span><span>  </span><span>server_port</span><span>:</span><span> </span><span>41014</span><span>,</span><span>
</span></span><span><span>  </span><span>rtc_sync</span><span>:</span><span> </span><span>{</span><span> </span><span>ss</span><span>:</span><span> </span><span>13</span><span>,</span><span> </span><span>mm</span><span>:</span><span> </span><span>23</span><span>,</span><span> </span><span>hh</span><span>:</span><span> </span><span>12</span><span>,</span><span> </span><span>DD</span><span>:</span><span> </span><span>24</span><span>,</span><span> </span><span>MM</span><span>:</span><span> </span><span>1</span><span>,</span><span> </span><span>YYYY</span><span>:</span><span> </span><span>2024</span><span>,</span><span> </span><span>D</span><span>:</span><span> </span><span>3</span><span> </span><span>}</span><span>
</span></span><span><span></span><span>}</span></span></code></pre></div><p>⤵️ <strong>Server Updates Smart Device State:</strong></p><p>When the server wants to update the smart device's state, it will send a packet like this.</p><div><pre><code><span><span>// Server Request</span><span>
</span></span><span><span></span><span>{</span><span> 
</span></span><span><span>  </span><span>type</span><span>:</span><span> </span><span>'mirror_data'</span><span>,</span><span>
</span></span><span><span>  </span><span>data</span><span>:</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>FAN_SPEED</span><span>:</span><span> </span><span>1</span><span>,</span><span>
</span></span><span><span>    </span><span>BOOST</span><span>:</span><span> </span><span>false</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span></span><span>}</span></span></code></pre></div><p>⤴️ <strong>Smart Device Updates Server State:</strong></p><p>The smart device sends its latest state to the server whenever it changes.</p><div><pre><code><span><span>// Smart Device Request</span><span>
</span></span><span><span></span><span>{</span><span>
</span></span><span><span>  </span><span>type</span><span>:</span><span> </span><span>'mirror_data'</span><span>,</span><span>
</span></span><span><span>  </span><span>data</span><span>:</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>timestamp</span><span>:</span><span> </span><span>1706105072142n</span><span>,</span><span>
</span></span><span><span>    </span><span>FAN_SPEED</span><span>:</span><span> </span><span>1</span><span>,</span><span>
</span></span><span><span>    </span><span>BOOST</span><span>:</span><span> </span><span>false</span><span>,</span><span>
</span></span><span><span>    </span><span>FILTER1</span><span>:</span><span> </span><span>0</span><span>,</span><span>
</span></span><span><span>    </span><span>FILTER2</span><span>:</span><span> </span><span>0</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span></span><span>}</span><span>
</span></span><span>
</span><span><span></span><span>// Server Response</span><span>
</span></span><span><span></span><span>{</span><span> </span><span>type</span><span>:</span><span> </span><span>'mirror_data'</span><span> </span><span>}</span></span></code></pre></div><p>🛜 <strong>Keep Alive:</strong></p><p>The smart device frequently sends a keep-alive packet to the server so the server can potentially use the open connection to send state updates.</p><div><pre><code><span><span>// Smart Device Request</span><span>
</span></span><span><span></span><span>{</span><span>
</span></span><span><span>  </span><span>type</span><span>:</span><span> </span><span>'keep_alive'</span><span>,</span><span>
</span></span><span><span>  </span><span>stats</span><span>:</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>rssi</span><span>:</span><span> </span><span>-</span><span>127n</span><span>,</span><span>
</span></span><span><span>    </span><span>rtt</span><span>:</span><span> </span><span>684</span><span>,</span><span>
</span></span><span><span>    </span><span>pkt_drop</span><span>:</span><span> </span><span>1</span><span>,</span><span>
</span></span><span><span>    </span><span>con_count</span><span>:</span><span> </span><span>1</span><span>,</span><span>
</span></span><span><span>    </span><span>boot_str</span><span>:</span><span> </span><span>''</span><span>,</span><span>
</span></span><span><span>    </span><span>uptime</span><span>:</span><span> </span><span>100080</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span></span><span>}</span><span>
</span></span><span>
</span><span><span></span><span>// Server Response</span><span>
</span></span><span><span></span><span>{</span><span> </span><span>type</span><span>:</span><span> </span><span>'keep_alive'</span><span> </span><span>}</span></span></code></pre></div><h2><a href="#mqtt-bridge" title="MQTT Bridge"><span>MQTT Bridge</span></a></h2><p>We're going to need a way to connect Home Assistant to our custom server, which handles the smart device networking. <a target="_blank" rel="noopener noreferrer nofollow" href="https://mqtt.org/"><span>MQTT</span></a> is ideal for this; it's a protocol designed for IoT messaging and can be easily configured within Home Assistant. For this, I set up the <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/eclipse/mosquitto"><span>Mosquitto</span></a> addon for Home Assistant, an open-source MQTT broker that connects everything together.</p><p>The connection chain will look like this:</p><p><code>Home Assistant</code> &lt;--&gt; <code>MQTT Broker</code> &lt;--&gt; <code>Custom Server</code> &lt;--&gt; <code>Smart Device</code>.</p><p>The custom server logic in pseudocode would look something like this:</p><div><div><pre><code><span><span>function</span><span> </span><span>HandleSmartDeviceRequest</span><span>(</span><span>req</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>  </span><span>switch</span><span> </span><span>(</span><span>req</span><span>.</span><span>type</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>case</span><span> </span><span>'mirror_data_get'</span><span>:</span><span> </span><span>{</span><span>
</span></span><span><span>      </span><span>// Device wants state, send latest MQTT state or default fallback</span><span>
</span></span><span><span>      device</span><span>.</span><span>send</span><span>(</span><span>{</span><span> </span><span>fan_speed</span><span>:</span><span> mqtt</span><span>.</span><span>get</span><span>(</span><span>'fan_speed'</span><span>)</span><span> </span><span>||</span><span> </span><span>0</span><span> </span><span>}</span><span>)</span><span>;</span><span>
</span></span><span><span>      </span><span>return</span><span>;</span><span>
</span></span><span><span>    </span><span>}</span><span>
</span></span><span><span>    </span><span>case</span><span> </span><span>'mirror_data'</span><span>:</span><span> </span><span>{</span><span>
</span></span><span><span>      </span><span>// Device state has changed, publish and retain in MQTT broker</span><span>
</span></span><span><span>      mqtt</span><span>.</span><span>publish</span><span>(</span><span>'fan_speed'</span><span>,</span><span> req</span><span>.</span><span>fan_speed</span><span>,</span><span> </span><span>{</span><span> </span><span>retain</span><span>:</span><span> </span><span>true</span><span> </span><span>}</span><span>)</span><span>;</span><span>
</span></span><span><span>      </span><span>return</span><span>;</span><span>
</span></span><span><span>    </span><span>}</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span></span><span>}</span><span>
</span></span><span>
</span><span><span></span><span>function</span><span> </span><span>HandleMQTTMessage</span><span>(</span><span>topic</span><span>,</span><span> msg</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>  </span><span>switch</span><span> </span><span>(</span><span>topic</span><span>)</span><span> </span><span>{</span><span>
</span></span><span><span>    </span><span>case</span><span> </span><span>'set_fan_speed'</span><span>:</span><span> </span><span>{</span><span>
</span></span><span><span>      </span><span>// MQTT wants to change state, forward to device</span><span>
</span></span><span><span>      device</span><span>.</span><span>send</span><span>(</span><span>{</span><span> </span><span>fan_speed</span><span>:</span><span> msg</span><span>.</span><span>fan_speed </span><span>}</span><span>)</span><span>;</span><span>
</span></span><span><span>      </span><span>return</span><span>;</span><span>
</span></span><span><span>    </span><span>}</span><span>
</span></span><span><span>  </span><span>}</span><span>
</span></span><span><span></span><span>}</span></span></code></pre></div><p>This logic seems quite minimal but is carefully designed. The latest state is retained in the MQTT broker. However, the source of truth for state updates is always the device, meaning the state will never update in the MQTT broker unless the device updates it via the custom server. This covers a couple of edge cases:</p><ul><li><p>If the state update was unsuccessful, we should not display the state as updated.</p></li><li><p>The state update should be reflected via the MQTT broker if the smart device was updated via its physical control panel.</p></li></ul></div><p>The three main cases we are supporting here are:</p><ul><li><p>When the smart device boots and initially connects to the custom server, it requests the latest state; we can attempt to obtain this from the MQTT broker's retained value or fall back to a default state.</p></li><li><p>When Home Assistant wants to update the state, it will send a command to the MQTT broker. We can subscribe to this command topic from the custom server and forward the request to the smart device.</p></li><li><p>When the smart device's state changes for any reason, it sends the <code>mirror_data</code> packet to update the server state; we send this value to the MQTT broker to update the state and tell it to retain the data as the latest value.</p></li></ul><p>I run this custom server alongside Mosquitto and Home Assistant on my small home automation server. Then configured my Pi-hole local DNS to resolve the cloud server's domain to my custom server.</p><h2><a href="#home-assistant-integration" title="Home Assistant Integration"><span>Home Assistant Integration</span></a></h2><p>The final step in this process is configuring Home Assistant to map the MQTT topics to a device type. For my air purifier, the closest integration was an <a target="_blank" rel="noopener noreferrer nofollow" href="https://www.home-assistant.io/integrations/fan.mqtt/"><span>MQTT Fan</span></a>; in my <code>configuration.yaml</code> I added something like this:</p><div><div><pre><code><span><span>mqtt</span><span>:</span><span>
</span></span><span><span>  </span><span>fan</span><span>:</span><span>
</span></span><span><span>    </span><span>-</span><span> </span><span>name</span><span>:</span><span> </span><span>"Air Purifier"</span><span>
</span></span><span><span>      </span><span>unique_id</span><span>:</span><span> </span><span>"air_purifier.main"</span><span>
</span></span><span><span>      </span><span>state_topic</span><span>:</span><span> </span><span>"air_purifier/on/state"</span><span>
</span></span><span><span>      </span><span>command_topic</span><span>:</span><span> </span><span>"air_purifier/on/set"</span><span>
</span></span><span><span>      </span><span>payload_on</span><span>:</span><span> </span><span>"true"</span><span>
</span></span><span><span>      </span><span>payload_off</span><span>:</span><span> </span><span>"false"</span><span>
</span></span><span><span>      </span><span>percentage_state_topic</span><span>:</span><span> </span><span>"air_purifier/speed/state"</span><span>
</span></span><span><span>      </span><span>percentage_command_topic</span><span>:</span><span> </span><span>"air_purifier/speed/set"</span><span>
</span></span><span><span>      </span><span>speed_range_min</span><span>:</span><span> </span><span>1</span><span>
</span></span><span><span>      </span><span>speed_range_max</span><span>:</span><span> </span><span>4</span></span></code></pre></div><p>I added topics to control the fan speed and turn the device on and off.</p></div><p><strong>Everything works!</strong> I've been running this for a couple of weeks now, and it has worked fine without any issues! I've even set up a little automation, so if my separate air monitor's PM2.5 or VOC level gets too high, it boosts the air purifier for a while!</p><div data-rmiz-content="not-found" aria-owns="rmiz-modal-" data-rmiz=""><p><img alt="" loading="lazy" width="580" height="700" decoding="async" data-nimg="1" sizes="(max-width: 744px) 100vw, (max-width: 1300px) 66vw, 400px" srcset="https://cdn.sanity.io/images/kecg41hi/production/6c8ce057d5252c6b90e7dfb3dbb0c010962c1bb7-580x700.png?w=640&amp;q=85&amp;fit=max&amp;auto=format 640w, https://cdn.sanity.io/images/kecg41hi/production/6c8ce057d5252c6b90e7dfb3dbb0c010962c1bb7-580x700.png?w=750&amp;q=85&amp;fit=max&amp;auto=format 750w, https://cdn.sanity.io/images/kecg41hi/production/6c8ce057d5252c6b90e7dfb3dbb0c010962c1bb7-580x700.png?w=828&amp;q=85&amp;fit=max&amp;auto=format 828w, https://cdn.sanity.io/images/kecg41hi/production/6c8ce057d5252c6b90e7dfb3dbb0c010962c1bb7-580x700.png?w=1080&amp;q=85&amp;fit=max&amp;auto=format 1080w, https://cdn.sanity.io/images/kecg41hi/production/6c8ce057d5252c6b90e7dfb3dbb0c010962c1bb7-580x700.png?w=1200&amp;q=85&amp;fit=max&amp;auto=format 1200w, https://cdn.sanity.io/images/kecg41hi/production/6c8ce057d5252c6b90e7dfb3dbb0c010962c1bb7-580x700.png?w=1920&amp;q=85&amp;fit=max&amp;auto=format 1920w, https://cdn.sanity.io/images/kecg41hi/production/6c8ce057d5252c6b90e7dfb3dbb0c010962c1bb7-580x700.png?w=2048&amp;q=85&amp;fit=max&amp;auto=format 2048w, https://cdn.sanity.io/images/kecg41hi/production/6c8ce057d5252c6b90e7dfb3dbb0c010962c1bb7-580x700.png?w=3840&amp;q=85&amp;fit=max&amp;auto=format 3840w" src="https://cdn.sanity.io/images/kecg41hi/production/6c8ce057d5252c6b90e7dfb3dbb0c010962c1bb7-580x700.png?w=3840&amp;q=85&amp;fit=max&amp;auto=format"></p></div><h2><a href="#technical-recap" title="Technical Recap"><span>Technical Recap</span></a></h2><p>For better or worse, the engineers behind the service decided not to implement a standard protocol like DTLS. They created a custom solution which introduced some downsides to the system:</p><ul><li><div><p>We're not certain if each device has its own unique private key, but whether it does or not, both have downsides:</p><ul><li><p>If all devices share the same firmware private key, the attacker needs to reverse engineer just a single device to MITM attack any other devices.</p></li><li><p>However, if every device has its own unique private key, the server must keep a data store mapping device serial numbers to the key of each device. So, In the case of any data loss, the server would entirely lose the ability to respond to any device communications; that is a scary thought for the business. Unless there is an insecure network fallback in place, which is equally alarming and time-consuming to develop</p></li></ul></div></li><li><p>Because the firmware contains a private key that is static, an attacker needs a single firmware dump to obtain the key and perform an MITM attack. Whereas, if an EC private key was instead generated at runtime, write access would be required in order to patch the server public key or application firmware, which could be protected by other means.</p></li></ul><p>Also, the mobile app has a 1-star review on the app store. It makes me wonder if there is a correlation between the unexpectedly custom technical implementation and the abnormally poor end-user app experience. Building a custom system is far more than just the initial development; systems need support, and bugs need fixing. </p><p>Overall, it wasn't a bad implementation from a security perspective; you'd still need physical access to attack the device; there are pros and cons to everything and variables that aren't visible from our perspective.</p><p>The custom implementation increased the obscurity of network communication. However, <a target="_blank" rel="noopener noreferrer" href="https://en.wikipedia.org/wiki/Security_through_obscurity"><span>Security through obscurity</span></a> is simply a short-term win. While it may deter generic attacks on standard technical implementations. In the bigger picture, it's just an annoying yet passable hoop for an attacker to jump through. </p><p>I've had a few conversations recently about why engineers build from the ground up vs. using proven standards. And that's a very interesting topic; I'll save that for another post!</p><h2><a href="#conclusion" title="Conclusion"><span>Conclusion</span></a></h2><p>What a crazy journey that was! </p><p>I'd like to emphasize that the reverse-engineering process was not as smooth as it may seem from this post; I've done my best to format everything to be best read by you. But in reality, I was often in the dark, unsure if the next thing would work or not, and juggling many tasks and theories, iteratively making progress in multiple places to test my assumptions ASAP.</p><p>I tried some things that hit dead-ends and weren't worth dedicated sections in this post:</p><ul><li><p>I tried running the firmware in <a target="_blank" rel="noopener noreferrer nofollow" href="https://github.com/espressif/qemu"><span>Espressif's fork of QEMU</span></a>, patched out the CapSense service, and loaded virtual e-fuses to match the MAC address from the firmware, all to find out it doesn't support WiFi emulation. It was fun to see it booting virtually, though!</p></li><li><p>I also tried flashing a different serial number, device key, and certificates to see if that affected anything before I got around to fully reversing the application logic. I didn't get much from this. Turns out this likely would have just affected the computed shared secret used for the HKDF salt, which we dumped anyway.</p></li></ul><p>I've certainly sharpened a variety of skills from this project. I'm also proud I achieved my goal of adding this device to Home Assistant! The moment I managed to successfully decrypt the first packet was great; everything just clicked into place.</p><p>I'm still curious to explore creating an open-source project to de-cloud and debug smart home products; I've learned much more about the technical aspects of achieving that.</p><p>Thanks for reading! I hope you found some value in this post. I put a massive amount of effort into creating it, probably more than I did actually doing the project itself. It would be amazing to receive feedback on the format!</p><p>I'd also really appreciate it if you could help share the post. </p><p>You can drop a follow on <a target="_blank" rel="noopener noreferrer" href="https://twitter.com/jmswrnr"><span>X</span></a> to stay updated with what I'm doing.</p><p>If you found it helpful and would like to support my content creation, you can <a target="_blank" rel="noopener noreferrer" href="https://buymeacoffee.com/jmswrnr"><span>Buy Me a Coffee</span></a>! Your support helps me continue creating content and sharing my passion for reverse engineering!</p><p>Take it easy 👋</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Palestinian activist arrested by ICE while expecting U.S. citizenship interview (198 pts)]]></title>
            <link>https://www.cbc.ca/lite/story/1.7510325</link>
            <guid>43688069</guid>
            <pubDate>Tue, 15 Apr 2025 01:18:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cbc.ca/lite/story/1.7510325">https://www.cbc.ca/lite/story/1.7510325</a>, See on <a href="https://news.ycombinator.com/item?id=43688069">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__next"><main><div><article id="article"><p>The Associated Press | Posted: April 15, 2025 12:16 AM | Last Updated: 4 hours ago</p><p>Mohsen Mahdawi, a legal permanent resident, had led protests against the war in Gaza</p><div role="figure" data-pw="imageEmbed"><p>Image  |  Immigration Palestinian Student Detained</p><p>Caption: This image taken from a video shows Mohsen Mahdawi being detained at the U.S. Citizenship and Immigration Services office in Colchester, Vt., on Monday. The video was taken by Christopher Helali, a friend who accompanied Mahdawi to a meeting at the office.  (Christopher Helali via AP)</p></div><p>A Palestinian man who led protests against the war in Gaza as a student at Columbia University was arrested Monday at a Vermont immigration office where he expected to be interviewed about finalizing his U.S. citizenship, his attorneys said.</p><p>Mohsen Mahdawi, a legal permanent resident who has held a green card since 2015, was detained at the U.S. Citizenship and Immigration Services office in Colchester, Vt., by Immigration and Customs Enforcement agents, his lawyers said.</p><p>The attorneys said they do not know where he is and have filed a petition in federal court seeking an order barring the government from removing him from the state or country.</p><p>"The Trump administration detained Mohsen Mahdawi in direct retaliation for his advocacy on behalf of Palestinians and because of his identity as a Palestinian. His detention is an attempt to silence those who speak out against the atrocities in Gaza. It is also unconstitutional," attorney Luna Droubi said in an email.</p><p>According to the court filing, Mahdawi was born in a refugee camp in the West Bank and moved to the United States in 2014.</p><p>He recently completed coursework at Columbia in New York and was expected to graduate in May before beginning a master's degree program there in the fall.</p><p>The petition describes him as a committed Buddhist who believes in "non-violence and empathy as a central tenet of his religion."</p><h2>Arrest 'immoral, inhumane, and illegal'</h2><p>As a student, Mahdawi was an outspoken critic of Israel's military campaign in Gaza and organized campus protests until March 2024.</p><p>He co-founded the Palestinian Student Union at Columbia with Mahmoud Khalil, another Palestinian permanent resident of the U.S. and graduate student who recently was detained by ICE.</p><p>Khalil was the first person arrested under President Donald Trump's promised crackdown on students who joined campus protests against the war in Gaza.</p><p>On Friday, an immigration judge in Louisiana ruled that Khalil can be deported as a national security risk.</p><p>Christopher Helali, a friend of Mahdawi who lives near him in Vermont, was present outside the immigration office when Mahdawi was detained and recorded a video of Mahdawi being led away by authorities.</p><p>In the video, which Helali released on social media Monday, Mahdawi is shown giving a peace sign with his hands and being led away to a car.</p><p>Helali described Mahdawi as a peaceful demonstrator who has worked to foster dialogue about the struggle of Palestinians in his homeland.</p><p>Helali said he and Mahdawi were aware that Mahdawi could be detained today and that his friend went forward with the appointment anyway.</p><p>"And rightfully so, he was nervous for what was going on around him. But he was very much resolute in coming to this interview and coming today because he didn't do anything wrong and was a law-abiding citizen, or soon-to-be citizen," Helali said.</p><p>Vermont's congressional delegation issued a statement condemning Mahdawi's arrest, saying that instead of taking one of the final steps in his citizenship process, he was handcuffed by armed officers with their faces covered.</p><p>"This is immoral, inhumane and illegal. Mr. Mahdawi, a legal resident of the United States, must be afforded due process under the law and immediately released from detention," said the statement from Sen. Bernie Sanders, Sen. Peter Welch and Rep. Becca Balint.</p></article></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The problem with "vibe coding" (131 pts)]]></title>
            <link>https://dylanbeattie.net/2025/04/11/the-problem-with-vibe-coding.html</link>
            <guid>43687767</guid>
            <pubDate>Tue, 15 Apr 2025 00:26:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dylanbeattie.net/2025/04/11/the-problem-with-vibe-coding.html">https://dylanbeattie.net/2025/04/11/the-problem-with-vibe-coding.html</a>, See on <a href="https://news.ycombinator.com/item?id=43687767">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page-wrapper">
					<article>
						
						
						<p>The whole “vibe coding” thing is another reminder that quite a lot of people working in tech don’t understand the difference between programs and products.</p>

<p>To me, programs are “works on my machine” code. The kind of things many of us crank out a few times every week. Experiments, prototypes… that script you hacked up to rename all the MP4 files in a folder? You know the one. No error checking. Hard-coded path names. Does it work on Windows? Who cares? I’m on Linux right now and I got work to do.</p>

<p>I have dozens of these kinds of programs I use every day. They’re tools I use to automate bits of my work. They crash all the time (“what? Oh… that person has a backslash in the title of their presentation… interesting.”) - but that doesn’t matter; I fix them, I get the results I need, I move on. The code is just a means to an end. The result is what matters.</p>

<p>If you’re writing software that you’re planning to ship; to distribute to other people, perhaps even sell it to paying customers? Well, now that’s a whole different ball game.</p>

<p>Probably the single most important lesson I’ve learned in my career, the thing that I would argue is the hallmark of “experience”, is understanding just how much work it takes to turn a working <em>program</em> into a viable <em>product</em>. It’s why developer estimates are so notoriously optimistic - and why experienced developers are so notoriously cynical. Let’s say you crank out a bit of code that’ll take responses from a web form and add them in an Excel spreadsheet. That’s not that hard… yay! we just built a Typeform competitor in one afternoon! Except, no, you didn’t. You made one thing work one time on one computer. You haven’t considered encoding, internationalization, concurrency, authentication, telemetry, billing, branding, mobile devices, deployment. You haven’t hit any of the weird limits yet - ever had a system work brilliantly for the first 65,535 requests and then fall over? You don’t have a product. At best, you have a proof-of-concept of a good idea that, if some very smart people work very hard, might become a viable product.</p>

<p>One of the genuinely positive things about tools like Copilot and ChatGPT is that they empower people with minimal development experience to create their own programs. Little programs that do useful things - and that’s <em>awesome</em>. More power to the users.</p>

<p>But that’s not product development, it’s programming. They aren’t the same thing. Not even close.</p>

					</article>
				</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Temu pulls its U.S. Google Shopping ads (346 pts)]]></title>
            <link>https://searchengineland.com/temu-pulls-us-google-shopping-ads-454260</link>
            <guid>43687495</guid>
            <pubDate>Mon, 14 Apr 2025 23:43:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://searchengineland.com/temu-pulls-us-google-shopping-ads-454260">https://searchengineland.com/temu-pulls-us-google-shopping-ads-454260</a>, See on <a href="https://news.ycombinator.com/item?id=43687495">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articlebody">

													
												
						
						
						<div>
<p>Temu completely shut off Google Shopping ads in the U.S. on April 9, with its App Store ranking subsequently plummeting from a typical third or fourth position to 58th in just three days. </p>



<p>The company’s impression share, which measures how often their ads appear compared to eligibility, dropped sharply before disappearing completely from advertiser auction data by April 12.</p>



<p>The timing coincided with the Trump administration’s hardened stance on Chinese imports, raising tariffs to 125% while maintaining a more moderate approach to other trading partners.</p>



<p><strong>First seen.</strong> Mike Ryan, head of ecommerce insights at Smarter Ecommerce, shared this news on <a href="https://www.linkedin.com/posts/mikeryanretail_%F0%9D%97%A7%F0%9D%97%B2%F0%9D%97%BA%F0%9D%98%82-%F0%9D%97%B5%F0%9D%97%AE%F0%9D%98%80-%F0%9D%97%B9%F0%9D%97%B2%F0%9D%97%B3%F0%9D%98%81-%F0%9D%98%81%F0%9D%97%B5%F0%9D%97%B2-%F0%9D%97%AF%F0%9D%98%82%F0%9D%97%B6%F0%9D%97%B9%F0%9D%97%B1%F0%9D%97%B6%F0%9D%97%BB%F0%9D%97%B4-activity-7317519336426901504-Kucf/?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAAAB0N7MBstWf5SblEci2G1F3WzMSeIW1b7s" target="_blank" rel="noopener">LinkedIn</a>:</p>


<div>
<figure><img fetchpriority="high" decoding="async" width="800" height="487" src="https://searchengineland.com/wp-content/seloads/2025/04/1744632561651.jpeg.webp" alt="1744632561651" srcset="https://searchengineland.com/wp-content/seloads/2025/04/1744632561651.jpeg.webp 800w,https://searchengineland.com/wp-content/seloads/2025/04/1744632561651-555x338.jpeg.webp 555w,https://searchengineland.com/wp-content/seloads/2025/04/1744632561651-186x113.jpeg.webp 186w,https://searchengineland.com/wp-content/seloads/2025/04/1744632561651-768x468.jpeg.webp 768w" sizes="(max-width: 800px) 100vw, 800px"></figure></div>


<p><strong>Between the lines</strong>. Temu’s business model relied on heavily subsidized orders from parent company PDD to drive market share growth, despite operating at a loss on individual sales.</p>



<ul>
<li>New tariffs, combined with crackdowns on “de minimis” import loopholes, have severely undermined Temu’s direct-from-manufacturer approach.</li>



<li>The company’s inability to maintain app performance without advertising for even a single day demonstrates the fragility of its market position.</li>
</ul>



<p><strong>Why we care</strong>. Ecommerce advertisers may experience temporary relief in digital advertising costs as Temu’s aggressive spending vanishes from auction platforms. Similar rapid market exits (e.g., Amazon during early pandemic lockdowns) led to drops in cost-per-click metrics. Some reduction in CPM rates is expected, potentially lowering both CPC and cost-per-conversion for remaining advertisers.</p>



<p><strong>Tariffs</strong>. The underlying causes of Temu’s retreat (tariffs and import restrictions) could ultimately prove more damaging to the ecommerce landscape, particularly for small and medium-sized businesses.</p>



<p><strong>Bottom line</strong>. Unlike failed competitor Wish.com, Temu’s parent company remains fundamentally sound. With U.S. trade policy still in flux and facing internal opposition even within the administration, Temu’s retreat may not be permanent.</p>
</div>
						
						<hr>
						
						

						<div>
			<p>New on Search Engine Land</p>
			<section>
				<ul>

					
					
					<article>
						
					</article>

					
					<article>
						
					</article>

					
					<article>
						
					</article>

					
					<article>
						
					</article>

					
					<article>
						
					</article>

					
				</ul>
			</section>
		</div>


											
<!-- START EOS SPACE -->

<!-- END EOS SPACE -->					
						


<div>
	<p>About the author</p>
	<div>
				<div>
						<p><img src="https://searchengineland.com/anu-adegbola-2" alt="Anu Adegbola" width="140" height="140" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20140%20140'%3E%3C/svg%3E"></p>
											</div>
				<div>
						
						

						<p><span>Anu Adegbola has been Paid Media Editor of Search Engine Land</span><span> since 2024. She covers</span><span> paid search, paid social, retail media, video and more.<p>In 2008, Anu's career started with</p></span><span><span>&nbsp;delivering digital marketing campaigns (mostly but not exclusively Paid Search) by building strategies, maximising ROI, automating repetitive processes and bringing efficiency from every part of marketing departments through inspiring leadership both on agency, client and marketing tech side.</span></span></p>
<p><span><span>Outside editing Search Engine Land article she is the founder of PPC networking event - <a href="https://ppc.live/" target="_blank" rel="noopener">PPC Live</a> and host of </span></span><span><span>weekly podcast <a href="https://www.themarketinganu.com/podcast" target="_blank" rel="noopener">PPCChat Roundup</a>.</span></span></p>

<p><span><span>She is also an international speaker with some of the stages she has presented on being SMX (US), SMX (Munich), Friends of Search (Amsterdam), brightonSEO, The Marketing Meetup, HeroConf (PPC Hero), SearchLove, BiddableWorld, SESLondon, PPC Chat Live, AdWorld Experience (Bologna) and more.</span></span></p>					</div>
			</div>
</div>
						
						<br>
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Cost of Being Crawled: LLM Bots and Vercel Image API Pricing (110 pts)]]></title>
            <link>https://metacast.app/blog/engineering/postmortem-llm-bots-image-optimization</link>
            <guid>43687431</guid>
            <pubDate>Mon, 14 Apr 2025 23:33:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://metacast.app/blog/engineering/postmortem-llm-bots-image-optimization">https://metacast.app/blog/engineering/postmortem-llm-bots-image-optimization</a>, See on <a href="https://news.ycombinator.com/item?id=43687431">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><p>A misconfiguration that might have cost us $7,000</p><p><img alt="LLM bots + Next.js image optimization = recipe for bankruptcy (post-mortem)" loading="lazy" width="1200" height="630" decoding="async" data-nimg="1" sizes="100vw" srcset="https://metacast.app/_next/image?url=%2Fimages%2Fblog%2Fengineering%2Fpostmortem-llm-bots-image-optimization%2Fcover-postmortem-llm-bots-image-optimization.png&amp;w=640&amp;q=75 640w, https://metacast.app/_next/image?url=%2Fimages%2Fblog%2Fengineering%2Fpostmortem-llm-bots-image-optimization%2Fcover-postmortem-llm-bots-image-optimization.png&amp;w=750&amp;q=75 750w, https://metacast.app/_next/image?url=%2Fimages%2Fblog%2Fengineering%2Fpostmortem-llm-bots-image-optimization%2Fcover-postmortem-llm-bots-image-optimization.png&amp;w=828&amp;q=75 828w, https://metacast.app/_next/image?url=%2Fimages%2Fblog%2Fengineering%2Fpostmortem-llm-bots-image-optimization%2Fcover-postmortem-llm-bots-image-optimization.png&amp;w=1080&amp;q=75 1080w, https://metacast.app/_next/image?url=%2Fimages%2Fblog%2Fengineering%2Fpostmortem-llm-bots-image-optimization%2Fcover-postmortem-llm-bots-image-optimization.png&amp;w=1200&amp;q=75 1200w, https://metacast.app/_next/image?url=%2Fimages%2Fblog%2Fengineering%2Fpostmortem-llm-bots-image-optimization%2Fcover-postmortem-llm-bots-image-optimization.png&amp;w=1920&amp;q=75 1920w, https://metacast.app/_next/image?url=%2Fimages%2Fblog%2Fengineering%2Fpostmortem-llm-bots-image-optimization%2Fcover-postmortem-llm-bots-image-optimization.png&amp;w=2048&amp;q=75 2048w, https://metacast.app/_next/image?url=%2Fimages%2Fblog%2Fengineering%2Fpostmortem-llm-bots-image-optimization%2Fcover-postmortem-llm-bots-image-optimization.png&amp;w=3840&amp;q=75 3840w" src="https://metacast.app/_next/image?url=%2Fimages%2Fblog%2Fengineering%2Fpostmortem-llm-bots-image-optimization%2Fcover-postmortem-llm-bots-image-optimization.png&amp;w=3840&amp;q=75"></p><div><div><p><img alt="Author's picture" loading="lazy" width="100" height="100" decoding="async" data-nimg="1" srcset="https://metacast.app/_next/image?url=%2Fimages%2Fpeople%2Filya-avatar.jpg&amp;w=128&amp;q=75 1x, https://metacast.app/_next/image?url=%2Fimages%2Fpeople%2Filya-avatar.jpg&amp;w=256&amp;q=75 2x" src="https://metacast.app/_next/image?url=%2Fimages%2Fpeople%2Filya-avatar.jpg&amp;w=256&amp;q=75"></p><p>Ilya Bezdelev</p></div><p>Published on <time datetime="2025-02-10T13:33:07.000Z">February	10, 2025</time></p></div><hr><div><div><p>Table of Contents</p><ol><li><a href="#tldr">TL;DR</a></li><li><a href="#context">Context</a></li><li><a href="#how-we-discovered-the-problem">How we discovered the problem</a><ol><li><a href="#step-1-a-cost-spike">Step 1: A cost spike</a></li><li><a href="#step-2-image-optimization-api-usage-spike">Step 2: Image Optimization API usage spike</a></li><li><a href="#step-3-tens-of-thousands-of-requests-from-llm-bots">Step 3: Tens of thousands of requests from LLM bots</a></li></ol></li><li><a href="#mitigation">Mitigation</a><ol><li><a href="#step-1-stop-the-bleeding">Step 1: Stop the bleeding</a></li><li><a href="#step-2-disable-image-optimization">Step 2: Disable Image Optimization</a></li><li><a href="#step-3-robotstxt">Step 3: robots.txt</a><ol><li><a href="#user-agents-of-llm-bots">User agents of LLM bots</a></li><li><a href="#user-agents-of-search-engine-crawlers">User agents of search engine crawlers</a></li><li><a href="#user-agents-of-seo-bots">User agents of SEO bots</a></li></ol></li></ol></li><li><a href="#how-do-we-prevent-this-in-the-future">How do we prevent this in the future?</a><ol><li><a href="#continue-with-a-sensitive-spend-limit">Continue with a sensitive spend limit</a></li><li><a href="#mindset-for-scale">Mindset for scale</a></li><li><a href="#ready-for-defense">Ready for defense</a></li></ol></li><li><a href="#social-media-response">Social media response</a></li><li><a href="#parting-thoughts">Parting thoughts</a></li><li><a href="#upd-vercel-changed-their-image-optimization-pricing">UPD: Vercel changed their image optimization pricing</a></li></ol></div><h2 id="tldr"><a href="#tldr">TL;DR</a></h2>
<p>On Friday, Feb 7, 2025 we had an incident with our Next.js web app hosted on Vercel that could've cost us $7,000 if we didn't notice it in time.</p>
<p>We had a spike in LLM bot traffic coming from Amazonbot, Claudebot, Meta and an unknown bot. Together they sent 66.5k requests to our site within a single day. Bots scraped thousands of images that used Vercel's Image Optimization API, which cost us $5 per 1k images.</p>
<p>The misconfiguration on our side combined with the aggressive bot traffic created an economically risky situation for our tiny bootstrapped startup.</p>
<h2 id="context"><a href="#context">Context</a></h2>
<p>Metacast is a podcast tech startup. Our main product is a <a href="https://metacast.app/">podcast app</a> for iOS and Android.</p>
<p>For every podcast episode on the platform, our web app has a web page. Our platform has ~1.4M episodes, which means we have 1.4M web pages that are discoverable by crawlers. These pages are generated server-side at request time, then cached.</p>
<p><img src="https://metacast.app/images/blog/engineering/postmortem-llm-bots-image-optimization/lex-podcast-page-metacast.png" alt="Lex Fridman Podcast"></p>
<h2 id="how-we-discovered-the-problem"><a href="#how-we-discovered-the-problem">How we discovered the problem</a></h2>
<h3 id="step-1-a-cost-spike"><a href="#step-1-a-cost-spike">Step 1: A cost spike</a></h3>
<p>First, we received a cost alert from Vercel saying that we've hit 50% of the budget for resources metered by usage.</p>
<p><img src="https://metacast.app/images/blog/engineering/postmortem-llm-bots-image-optimization/vercel-cost-alert.png" alt="Vercel cost alert"></p>
<h3 id="step-2-image-optimization-api-usage-spike"><a href="#step-2-image-optimization-api-usage-spike">Step 2: Image Optimization API usage spike</a></h3>
<p>We looked into it and saw that it's driven by the Image Optimization API, which peaked on Feb 7.</p>
<p><img src="https://metacast.app/images/blog/engineering/postmortem-llm-bots-image-optimization/vercel-image-optimization-usage-summary.jpg" alt="Image Optimization Usage"></p>
<p><img src="https://metacast.app/images/blog/engineering/postmortem-llm-bots-image-optimization/vercel-image-optimization-chart.jpg" alt="Image Optimization Usage Chart"></p>
<p>Every page in the podcast directory has an image of a podcast cover (source image dimensions are 3000x3000px). With Image Optimization, podcast covers were reduced to 1/10th of the size, then cached. Image Optimization made the web app really snappy. It worked like a charm, except it turned out to be very expensive.</p>
<p>Vercel <a href="https://vercel.com/docs/image-optimization/limits-and-pricing">charges</a> $5 for every 1,000 images optimized. With thousands of requests coming our way, we were accumulating cost at the rate of $5 per each 1k image requests. In the worst case scenario, if all 1.4M images were crawled we'd hypothetically be looking at a $7k bill from Vercel.</p>
<h3 id="step-3-tens-of-thousands-of-requests-from-llm-bots"><a href="#step-3-tens-of-thousands-of-requests-from-llm-bots">Step 3: Tens of thousands of requests from LLM bots</a></h3>
<p>We looked at the user agents of requests in the Firewall in Vercel and saw Amazonbot, ClaudeBot, meta_externalagent and an unknown bot disguising itself as a browser.</p>
<p><img src="https://metacast.app/images/blog/engineering/postmortem-llm-bots-image-optimization/vercel-user-agent-stats.png" alt="User Agents"></p>
<p>We can't say definitively which bots were downloading images, because we are on the Pro plan on Vercel and no longer have access to logs from Friday. We only know that it was bot traffic.</p>
<h2 id="mitigation"><a href="#mitigation">Mitigation</a></h2>
<h3 id="step-1-stop-the-bleeding"><a href="#step-1-stop-the-bleeding">Step 1: Stop the bleeding</a></h3>
<p>Both of us used to work at AWS where we internalized the golden rule of incident recovery - <strong>stop the bleeding first, do a long-term fix later</strong>.</p>
<p>We configured firewall rules in Vercel to block bots from Amazon, Anthropic, OpenAI and Meta. To be fair, OpenAI didn't crawl our site, but we blocked it as a preventative measure.</p>
<p><img src="https://metacast.app/images/blog/engineering/postmortem-llm-bots-image-optimization/vercel-firewall-rules.jpg" alt="Firewall rules"></p>
<h3 id="step-2-disable-image-optimization"><a href="#step-2-disable-image-optimization">Step 2: Disable Image Optimization</a></h3>
<p>First, we disabled image optimization by adding an <code>unoptimized</code> property to podcast images in Next.js. Our reasoning was that users accessing the pages will get the latest version of the page with unoptimized images.</p>
<p>We didn't consider that:</p>
<ul>
<li>Bots had already crawled thousands of pages and would crawl the <em>optimized</em> images using the URLs they extracted from the "old" HTML.</li>
<li>Our site enabled image optimization for all external hosts.</li>
</ul>
<p>The latter is the most embarrassing part of the story. We missed an obvious exploit in the web app.</p>
<figure data-rehype-pretty-code-figure=""><pre tabindex="0" data-language="javascript" data-theme="github-dark-dimmed github-light"><code data-language="javascript" data-theme="github-dark-dimmed github-light"><span data-line=""><span>const</span><span> nextConfig</span><span> =</span><span> {</span></span>
<span data-line=""><span>  images: {</span></span>
<span data-line=""><span>    remotePatterns: [</span></span>
<span data-line=""><span>      {</span></span>
<span data-line=""><span>        protocol: </span><span>'https'</span><span>,</span></span>
<span data-line=""><span>        hostname: </span><span>'**'</span><span>,</span></span>
<span data-line=""><span>      },</span></span>
<span data-line=""><span>      {</span></span>
<span data-line=""><span>        protocol: </span><span>'http'</span><span>,</span></span>
<span data-line=""><span>        hostname: </span><span>'**'</span><span>,</span></span>
<span data-line=""><span>      },</span></span>
<span data-line=""><span>    ],</span></span>
<span data-line=""><span>  },</span></span>
<span data-line=""><span>  ...</span></span></code></pre></figure>
<p>To explain why we did this in the first place, we need to add some important context about podcasting.</p>
<p>We do not own the podcast content displayed on our site. Similar to other podcast apps like Apple and Spotify, we ingest podcast information from RSS feeds and display it in our directory. The cover images are hosted on specialized podcast hosting platforms like <a href="https://transistor.fm/">Transistor</a>, <a href="https://www.buzzsprout.com/">Buzzsprout</a>, and others. But podcasts could be hosted anywhere from a WordPress website to an S3 bucket. It is impractical to allowlist all possible hosts.</p>
<p>Optimizing an image meant that Next.js downloaded the image from one of those hosts to Vercel first, optimized it, then served to the users. If we wanted to make our site snappy, we had to either build and maintain an image optimization pipeline ourselves or use the built-in capability. As a scrappy startup for whom a web app was at best secondary, we chose the faster route without thinking much about it.</p>
<p>In retrospect, we should've researched how it works. We're lucky no one started using our site as an image optimization API.</p>
<p>To mitigate the problem entirely, we disabled image optimization for any external URLs. Now, image optimization is only enabled for images hosted on our own domain. Podcast covers load noticeably slower. We'll need to do something about it eventually.</p>
<p>But this is not all.</p>
<h3 id="step-3-robotstxt"><a href="#step-3-robotstxt">Step 3: robots.txt</a></h3>
<p>Of course, we knew about <code>robots.txt</code>, a file that tells crawlers whether they're allowed to crawl the site or not.</p>
<p>Since both of us were new to managing a large-scale content site (our background is in backends, APIs, and web apps behind auth), we didn't even think about LLM bots. It's just not something that was on our radar. So, our <code>robots.txt</code> was a simple allow-all except for a few paths that we disallowed.</p>
<p>Our first reaction was to disable all bot traffic except Google. But when we understood that the root cause of the problem lied in the misconfigured image optimization, we decided to keep our site open to all LLM and search engine bots. Serving the text content doesn't cost us much, but we may benefit from being shown as a source of data in LLMs, which would be similar to being shown on a search engine results page (SERP).</p>
<p>We generate <code>robots.txt</code> programmatically using <a href="https://nextjs.org/docs/app/api-reference/file-conventions/metadata/robots">robots.ts</a> in Next.js. We researched the bots and added their user agents to our code. If we ever need to disable any of the bots, we can do so very quickly now. While we were at it, we disabled some paths for SEO bots like Semrush and MJ12Bot.</p>
<p>Note that <code>robots.txt</code> only works if bots respect it. It's honor-based system and there are still bad bots out there that ignore it and/or attempt to disguise themselves as users.</p>
<h4 id="user-agents-of-llm-bots"><a href="#user-agents-of-llm-bots">User agents of LLM bots</a></h4>
<table>
<thead>
<tr>
<th>User Agent</th>
<th>Link</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Amazonbot</code></td>
<td><a href="https://developer.amazon.com/amazonbot">Amazon</a></td>
</tr>
<tr>
<td><code>CCBot</code></td>
<td><a href="https://commoncrawl.org/faq">Common Crawl</a></td>
</tr>
<tr>
<td><code>ClaudeBot</code></td>
<td><a href="https://privacy.anthropic.com/en/articles/10023637-does-anthropic-crawl-data-from-the-web-and-how-can-site-owners-block-the-crawler">Anthropic</a></td>
</tr>
<tr>
<td><code>GPTBot</code></td>
<td><a href="https://platform.openai.com/docs/bots/">OpenAI</a></td>
</tr>
<tr>
<td><code>Meta-ExternalAgent</code></td>
<td><a href="https://developers.facebook.com/docs/sharing/webmasters/web-crawlers/">Meta</a></td>
</tr>
<tr>
<td><code>PerplexityBot</code></td>
<td><a href="https://docs.perplexity.ai/guides/bots">Perplexity</a></td>
</tr>
</tbody>
</table>
<h4 id="user-agents-of-search-engine-crawlers"><a href="#user-agents-of-search-engine-crawlers">User agents of search engine crawlers</a></h4>
<table>
<thead>
<tr>
<th>User Agent</th>
<th>Link</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Applebot</code></td>
<td><a href="https://support.apple.com/en-us/119829">Apple</a></td>
</tr>
<tr>
<td><code>Baiduspider</code></td>
<td><a href="https://www.baidu.com/search/robots_english.html">Baidu</a></td>
</tr>
<tr>
<td><code>Bingbot</code></td>
<td><a href="https://www.bing.com/webmasters/help/which-crawlers-does-bing-use-8c184ec0">Bing</a></td>
</tr>
<tr>
<td><code>ChatGPT-User</code> &amp; <code>OAI-SearchBot</code></td>
<td><a href="https://platform.openai.com/docs/bots/">OpenAI</a></td>
</tr>
<tr>
<td><code>DuckDuckBot</code></td>
<td><a href="https://duckduckgo.com/duckduckgo-help-pages/results/duckduckbot/">DuckDuckGo</a></td>
</tr>
<tr>
<td><code>Googlebot</code></td>
<td><a href="https://developers.google.com/search/docs/crawling-indexing/googlebot">Google</a></td>
</tr>
<tr>
<td><code>ImageSift</code></td>
<td><a href="https://imagesift.com/about">ImageSift by Hive</a></td>
</tr>
<tr>
<td><code>Perplexity‑User</code></td>
<td><a href="https://docs.perplexity.ai/guides/bots">Perplexity</a></td>
</tr>
<tr>
<td><code>YandexBot</code></td>
<td><a href="https://www.yandex.com/support/webmaster/robot-workings/user-agent.html">Yandex</a></td>
</tr>
</tbody>
</table>
<h4 id="user-agents-of-seo-bots"><a href="#user-agents-of-seo-bots">User agents of SEO bots</a></h4>
<table>
<thead>
<tr>
<th>User Agent</th>
<th>Link</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>AhrefsBot</code></td>
<td><a href="https://ahrefs.com/robot">Ahrefs</a></td>
</tr>
<tr>
<td><code>DataForSeoBot</code></td>
<td><a href="https://dataforseo.com/dataforseo-bot">DataForSeoBot</a></td>
</tr>
<tr>
<td><code>DotBot</code></td>
<td><a href="https://moz.com/help/moz-procedures/crawlers/dotbot">DotBot</a></td>
</tr>
<tr>
<td><code>MJ12bot</code></td>
<td><a href="https://mj12bot.com/">MS12Bot</a></td>
</tr>
<tr>
<td><code>SemrushBot</code></td>
<td><a href="https://www.semrush.com/bot/">Semrush</a></td>
</tr>
</tbody>
</table>
<h2 id="how-do-we-prevent-this-in-the-future"><a href="#how-do-we-prevent-this-in-the-future">How do we prevent this in the future?</a></h2>
<p>We will start with the one thing we've done well.</p>
<h3 id="continue-with-a-sensitive-spend-limit"><a href="#continue-with-a-sensitive-spend-limit">Continue with a sensitive spend limit</a></h3>
<p>We had a very sensitive spend limit alert. We knew we should not be spending much on Vercel, so we set it very low. When it triggered, we knew something was off.</p>
<p>This may be the most important lesson to all startups and big enterprises alike - always set spend limits for your infrastructure, or the bill may ruin you. You can probably negotiate with Vercel, AWS, GCP, etc. and they'll reduce or forgive your bill. But it's best to not put yourself in a situation where you have to ask for a favor.</p>
<h3 id="mindset-for-scale"><a href="#mindset-for-scale">Mindset for scale</a></h3>
<p>We've learned a ton and have (hopefully) attuned ourselves to:</p>
<ul>
<li><strong>The scale we're operating at</strong> – we're serving millions of pages and need to be prepared for user traffic at that scale. The bots gave us a taste for what it would've been like had our app gone viral.</li>
<li><strong>The scale of web crawlers, both good and bad</strong> – we need to be prepared to be "anthropized", "openAIed", "amazoned", or "semrushed." It's the new <a href="https://en.wikipedia.org/wiki/Slashdot_effect">slasdot effect</a> but without the benefit of immediate gratification.</li>
</ul>
<h3 id="ready-for-defense"><a href="#ready-for-defense">Ready for defense</a></h3>
<p>We've now better understood the options we have for firewalling ourselves from bots if we have to do so in the future. We can use Vercel firewall as the first line of defense or add a more advanced WAF from Cloudflare if things get dire.</p>
<p>See this post from Cloudflare: <a href="https://blog.cloudflare.com/declaring-your-aindependence-block-ai-bots-scrapers-and-crawlers-with-a-single-click/">Declare your AIndependence: block AI bots, scrapers and crawlers with a single click</a></p>

<p>When we discovered the rate at which bots were crawling our site, we <a href="https://www.linkedin.com/posts/ilyabezdelev_our-site-is-getting-totally-slammed-by-activity-7293596095778074624-MD_I">posted about it</a> on LinkedIn. We were just sharing what's going on in real time, but boy did it hit the nerve. Almost 400k impressions, 2.4k likes, 270+ comments, 120+ reposts.</p>
<p><img src="https://metacast.app/images/blog/engineering/postmortem-llm-bots-image-optimization/linkedin-post.jpg" alt="LinkedIn post stats"></p>
<p>We've gone through all comments on the post and responded to most of them.</p>
<p>Lots of folks offered solutions like <a href="https://blog.cloudflare.com/declaring-your-aindependence-block-ai-bots-scrapers-and-crawlers-with-a-single-click/">CloudFlare</a>, using middleware, rate limiting, etc. Some offered to feed junk back to LLM bots.</p>
<p>We learned about <a href="https://arstechnica.com/tech-policy/2025/01/ai-haters-build-tarpits-to-trap-and-trick-ai-scrapers-that-ignore-robots-txt/">tarpit</a> tools like <a href="https://iocaine.madhouse-project.org/">iocaine</a> and <a href="https://zadzmo.org/code/nepenthes/">Nepenthes</a>.</p>
<blockquote>
<p><em>You could lure them into a honeypot?<br>
Like nepenthes or locaine.<br>
If you feel like poisoning the ai well</em></p>
</blockquote>
<p>People rightfully pointed out that you can get ruined by infinite scalability of cloud resources.</p>
<blockquote>
<p><em>that's my biggest concern about cloud providers. You make a small mistake (everyone does) and the costs can skyrocket overnight.</em></p>
</blockquote>
<p>We learned that some people aren't aware of the LLM bot crawling activity or the scale of it. They thanked us for raising awareness.</p>
<blockquote>
<p><em>WOW - thanks for alerting us.</em></p>
</blockquote>
<p>Some people had been surprised by bots just like we were.</p>
<blockquote>
<p><em>Same here. At first I was super excited to get so many new subscriptions. We did reCaptcha and Cloudflare. Things have quieted down. Thanks for posting. I thought we were the only ones</em></p>
</blockquote>
<p>Some aren't surprised at all and see it as a problem.</p>
<blockquote>
<p><em>Very recognizable (unfortunately). These (predominantly AI) bots started noticeably hitting our platform back in May/June 2024. Lots of time &amp; efforts wasted to keep our bills in check. We also found out that not all of them respect Robots.txt, so indeed a WAF is needed as well. I can(not) imagine how painful this must/will be for smaller businesses...</em></p>
</blockquote>
<p>Some people blamed us for not being prepared and called us out on calling out AI companies. Others defended us. Virality is a double-edged sword.</p>
<p>A large portion of the comments were claiming that data scraping is unethical, illegal, etc. People were outraged. It wasn't our intention, but our post brought the issue to the zeitgeist of that day.</p>
<h2 id="parting-thoughts"><a href="#parting-thoughts">Parting thoughts</a></h2>
<p><strong>There's a part of me that is glad that this happened.</strong></p>
<p>We got a taste of operating a web app at scale before reaching scale. It was easy to block bots, but had it been caused by user traffic, we'd have to swallow the cost or downgrade the experience. Bots were the canaries in a coalmine.</p>
<p><strong>Any technology has negative externalities.</strong></p>
<p>Some are obvious, some aren't. Of all the things that were happening, I was worried that we'd get penalized by podcast hosters whose endpoints we were hitting at the same rate as bots requested images from our site.</p>
<p><strong>Operating at scale on the internet is a game of defense</strong></p>
<p>We can rant about bots as much as we want, but that <em>is</em> the reality we operate in. So we better acknowledge it and deal with it.</p>
<p>P.S. We'll be discussing this topic on the next episode of the <a href="https://metacast.app/podcasts/7d7e381e-907c-5b22-aefc-1fc8311d2a71">Metacast: Behind the scenes</a> podcast. Follow us wherever you listen to podcasts to hear the story with more nuance.</p>
<h2 id="upd-vercel-changed-their-image-optimization-pricing"><a href="#upd-vercel-changed-their-image-optimization-pricing">UPD: Vercel changed their image optimization pricing</a></h2>
<p>On Feb 18, 2025, just a few days after we published this blog post, Vercel <a href="https://vercel.com/changelog/faster-transformations-and-reduced-pricing-for-image-optimization">changed</a> their image optimization pricing. With the new pricing we'd not have faced a huge bill.</p>
<p><img src="https://metacast.app/images/blog/engineering/postmortem-llm-bots-image-optimization/vercel-new-pricing.webp" alt="New Image Optimization pricing on Vercel"></p>
<p>However, this wouldn't address the problem that we need to optimize images hosted outside of our domain. We ended up implementing our own image optimization.</p></div></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tomb Engine (192 pts)]]></title>
            <link>https://tombengine.com/</link>
            <guid>43686936</guid>
            <pubDate>Mon, 14 Apr 2025 22:22:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tombengine.com/">https://tombengine.com/</a>, See on <a href="https://news.ycombinator.com/item?id=43686936">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-id="6f3696b0" data-element_type="container" data-widget_type="text-editor.default" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}" data-elementor-type="footer" data-elementor-id="1421" data-elementor-post-type="elementor_library">
				<p><span>This is a community project which is not affiliated with Core Design, Eidos Interactive, or Embracer Group AB. Tomb Raider is a registered trademark of Embracer Group AB. TombEngine is not be sold. The code is open-source to encourage contributions and to be used for study purposes. We are not responsible for illegal uses of this source code. This source code is released as-is and continues to be maintained by non-paid contributors in their free time.</span></p>
				</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Intel sells 51% stake in Altera to private equity firm on a $8.75B valuation (296 pts)]]></title>
            <link>https://newsroom.intel.com/corporate/intel-partner-deal-news-april2025</link>
            <guid>43686773</guid>
            <pubDate>Mon, 14 Apr 2025 21:59:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://newsroom.intel.com/corporate/intel-partner-deal-news-april2025">https://newsroom.intel.com/corporate/intel-partner-deal-news-april2025</a>, See on <a href="https://news.ycombinator.com/item?id=43686773">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>Raghib Hussain appointed chief executive officer of Altera.</p><div nonce="ijCpSEMuRnL490hOs/kXNA==">

					
						

					<!--?xml encoding="utf-8" ?--><p>SANTA CLARA, Calif.; SAN JOSE, Calif.; and MENLO PARK, Calif., April 14, 2025 – Intel Corporation today announced that it has entered into a definitive agreement to sell 51% of its Altera business to Silver Lake, a global leader in technology investing.</p><p>The transaction, which values Altera at $8.75 billion, establishes Altera’s operational independence and makes it the largest pure-play FPGA (field programmable gate array) semiconductor solutions company. Altera offers a proven and highly scalable architecture and tool chain and is focused on driving growth and FPGA innovation to meet the demands and opportunities of an AI-driven market.</p><p>Intel will own the remaining 49% of the Altera business, enabling it to participate in Altera’s future success while focusing on its core business.</p><p>Intel also announced that Raghib Hussain will succeed Sandra Rivera as chief executive officer of Altera, effective May 5, 2025. Hussain is a highly accomplished and visionary technology executive with strong business acumen and engineering credentials. He joins Altera from his previous role as president of Products and Technologies at Marvell. Prior to joining Marvell in 2018, Hussain served as chief operating officer of Cavium, a company he co-founded. Prior to Cavium, Hussain held engineering roles at both Cisco and Cadence and helped found VPNet, an enterprise security company.</p><p>“Today’s announcement reflects our commitment to sharpening our focus, lowering our expense structure and strengthening our balance sheet,” said Lip-Bu Tan, chief executive officer of Intel. “Altera continues to make progress repositioning its product portfolio to participate in the fastest growing and most profitable segments of the FPGA market. We are grateful for Sandra’s strong leadership and lasting impact throughout her 25-year Intel career and wish her continued success as she begins a new chapter. Raghib is a superb executive we selected to lead the business forward based on his vast industry experience and proven track record of success. We look forward to partnering with Silver Lake upon closing of the transaction, as their industry expertise will help to accelerate Altera's efforts and unlock additional economic value for Intel.”</p><p>“This investment represents a once-in-a-generation opportunity to invest in a scale leader in advanced semiconductors. Together with Raghib, we will be focused on strengthening Altera’s technology leadership position and investing in emerging AI-driven markets such as edge computing and robotics,” said Kenneth Hao, chairman and managing partner of Silver Lake. “We look forward to working closely with Intel as a strategic partner who will continue to provide U.S.-based foundry services and complementary engagement with customers.”</p><p>“I am excited to lead Altera in its next chapter, and this milestone with Silver Lake furthers Altera’s journey to be the world's No. 1 FPGA solutions provider,” said Hussain. “Backed by Silver Lake’s strong track record and now with clarity of focus as an independent company, Altera is well-positioned to build on its momentum and deliver breakthrough FPGA-based solutions that are shaping the future of compute driven by AI. I am grateful for the impact Sandra has made and the team she has built as we begin Altera’s next phase of growth.”</p><p>Altera has been at the forefront of driving FPGA innovations for more than 40 years. The company provides leading programmable solutions that are easy-to-use and deploy in a range of strategically important segments such as industrial, communications, data center and military, aerospace, and government, as well as emerging markets such as AI/edge and robotics. Its broad portfolio of programmable semiconductor solutions, software and development tools deliver the reliability and flexibility needed to accelerate customer technology innovation.</p><p>The transaction is expected to close in the second half of 2025, subject to customary closing conditions.</p><p>Upon closing, Intel expects to deconsolidate Altera’s financial results from Intel’s consolidated financial statements. In Fiscal Year 2024, Altera generated revenues of $1.54 billion, GAAP gross margin of $361 million and GAAP operating loss of $615 million. Altera’s Fiscal Year 2024 non-GAAP gross margin was $769 million and non-GAAP operating income was $35&nbsp;million. Reconciliations between the GAAP and non-GAAP measures are provided below.</p><p>Morgan Stanley &amp; Co. LLC acted as financial advisor to Intel.</p><p><strong>Forward-Looking Statements</strong></p><p>This release contains forward-looking statements that involve a number of risks and uncertainties, including with respect to the terms and anticipated timing of closing the agreed upon sale of a controlling interest in Altera and the potential benefits of such sale to Intel and Altera. Such statements involve risks and uncertainties that could cause actual results to differ materially from those expressed or implied, including:&nbsp; the risk that the transaction may not be completed in a timely manner or at all, including as a result of a failure to receive regulatory approvals; the occurrence of any event, change or other circumstance that could give rise to the termination of the transaction; the risk that the expected benefits of the transaction, including as a result of the increased independence of Altera, may not be realized; the risk of future loss of the Altera business by Intel as a result of the sale of a controlling interest in Altera; disputes or potential litigation related to the transaction or the ownership, control and operation of the Altera business, including as it relates to Intel; unanticipated costs related to the transaction or the Altera business that may be incurred; risks as to the retention of key Altera personnel and customers; risks related to the diversion of management’s attention during the pendency of the transaction; potential adverse reactions or changes to business relationships resulting from the announcement or completion of the transaction; changes in demand for Altera’s semiconductor products; the high level of competition and rapid technological change in the semiconductor industry; and other risks and uncertainties described in Intel’s 2024 Form 10-K and our other filings with the SEC.</p><p>Given these risks and uncertainties, readers are cautioned not to place undue reliance on such forward-looking statements. Readers are urged to carefully review and consider the various disclosures made in this release and in other documents we file from time to time with the SEC that disclose risks and uncertainties that may affect our business.</p><p>All information in this press release reflects Intel management views as of the date hereof unless an earlier date is specified. Intel does not undertake, and expressly disclaims any duty, to update such statements, whether as a result of new information, new developments, or otherwise, except to the extent that disclosure may be required by law.</p><p><strong>Non-GAAP Financial Measures</strong></p><p>This release contains references to non-GAAP financial measures: Altera non-GAAP gross margin and Altera non-GAAP operating income / (loss) measures. Set out below are reconciliations of these measures to the most directly comparable GAAP financial measures. The non-GAAP financial measures disclosed herein should not be considered a substitute for, or superior to, the financial measures prepared in accordance with GAAP. Please refer to “Explanation of Non-GAAP Measures” in Intel’s earnings release dated Jan. 30, 2025 for a detailed explanation of the adjustments made to the comparable GAAP measures, the ways management uses the non-GAAP measures, and the reasons why management believes the non-GAAP measures provide investors with useful supplemental information.</p><table nonce="ijCpSEMuRnL490hOs/kXNA==">
<tbody>
<tr>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="></td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="></td>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">Twelve Months Ended</td>
</tr>
<tr>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">(in Millions; Unaudited)</td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="></td>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">Dec 28, 2024</td>
</tr>
<tr>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">GAAP gross margin</td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="></td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="><strong>$ 361</strong></td>
</tr>
<tr>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">Acquisition-related adjustments</td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="></td>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">402</td>
</tr>
<tr>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">Share-based compensation</td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="></td>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">6</td>
</tr>
<tr>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">Non-GAAP gross margin</td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="></td>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">$ 769</td>
</tr>
<tr>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">GAAP operating income / (loss)</td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="></td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="><strong>$ (615)</strong></td>
</tr>
<tr>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">Acquisition-related adjustments</td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="></td>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">491</td>
</tr>
<tr>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">Share-based compensation</td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="></td>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">122</td>
</tr>
<tr>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">Restructuring and other charges</td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="></td>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">37</td>
</tr>
<tr>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">Non-GAAP operating income / (loss)</td>
<td nonce="ijCpSEMuRnL490hOs/kXNA=="></td>
<td nonce="ijCpSEMuRnL490hOs/kXNA==">$ 35</td>
</tr>
</tbody>
</table><p><strong>About Intel</strong></p><p>Intel (Nasdaq: INTC) is an industry leader, creating world-changing technology that enables global progress and enriches lives. Inspired by Moore’s Law, we continuously work to advance the design and manufacturing of semiconductors to help address our customers’ greatest challenges. By embedding intelligence in the cloud, network, edge and every kind of computing device, we unleash the potential of data to transform business and society for the better. To learn more about Intel’s innovations, go to <a href="https://newsroom.intel.com/">newsroom.intel.com</a> and <a href="https://intel.com/">intel.com</a>.</p><p><strong>About Altera</strong><br>
Altera is a leading supplier of programmable hardware, software, and development tools that empower designers of electronic systems to innovate, differentiate, and succeed in their markets. With a broad portfolio of industry-leading FPGAs, SoCs, and design solutions, Altera enables customers to achieve faster time-to-market and unmatched performance in applications spanning data centers, communications, industrial, automotive, and more. For more information, visit&nbsp;<a href="http://www.altera.com./">www.altera.com.</a></p><p><strong>About Silver Lake</strong><br>
Silver Lake is a global technology investment firm, with approximately $104 billion in combined assets under management and committed capital and a team of professionals based in North America, Europe and Asia. Silver Lake’s portfolio companies collectively generate nearly $252 billion of revenue annually and employ approximately 433,000 people globally.</p>
				</div></div>]]></description>
        </item>
    </channel>
</rss>