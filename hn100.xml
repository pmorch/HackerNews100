<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 20 Feb 2024 18:00:07 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Microsoft Is Spying on Users of Its AI Tools (196 pts)]]></title>
            <link>https://www.schneier.com/blog/archives/2024/02/microsoft-is-spying-on-users-of-its-ai-tools.html</link>
            <guid>39442429</guid>
            <pubDate>Tue, 20 Feb 2024 15:28:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.schneier.com/blog/archives/2024/02/microsoft-is-spying-on-users-of-its-ai-tools.html">https://www.schneier.com/blog/archives/2024/02/microsoft-is-spying-on-users-of-its-ai-tools.html</a>, See on <a href="https://news.ycombinator.com/item?id=39442429">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-68456">

	<div>

		
		<p>Microsoft announced that it <a href="https://www.washingtonpost.com/technology/2024/02/14/us-adversaries-using-artificial-intelligence-boost-hacking-efforts/">caught</a> Chinese, Russian, and Iranian hackers using its AI tools—presumably coding tools—to improve their hacking abilities.</p>
<p>From their <a href="https://www.microsoft.com/en-us/security/business/security-insider/reports/cyber-signals/cyber-signals-issue-6-navigating-cyberthreats-and-strengthening-defenses/">report</a>:</p>
<blockquote><p>In collaboration with OpenAI, we are sharing threat intelligence showing detected state affiliated adversaries—tracked as Forest Blizzard, Emerald Sleet, Crimson Sandstorm, Charcoal Typhoon, and Salmon Typhoon—using LLMs to augment cyberoperations.</p></blockquote>
<p>The only way Microsoft or OpenAI would know this would be to spy on chatbot sessions. I’m sure the terms of service—if I bothered to read them—gives them that permission. And of course it’s no surprise that Microsoft and OpenAI (and, presumably, everyone else) are spying on our usage of AI, but this confirms it.</p>

		
			<p>
				<span>Tags: <a href="https://www.schneier.com/tag/artificial-intelligence/" rel="tag">artificial intelligence</a>, <a href="https://www.schneier.com/tag/cyberespionage/" rel="tag">cyberespionage</a>, <a href="https://www.schneier.com/tag/espionage/" rel="tag">espionage</a>, <a href="https://www.schneier.com/tag/microsoft/" rel="tag">Microsoft</a></span>			</p>

		
		
		<p>
			<a href="https://www.schneier.com/blog/archives/2024/02/microsoft-is-spying-on-users-of-its-ai-tools.html" rel="bookmark">Posted on February 20, 2024 at 7:02 AM</a>			•
			<a href="https://www.schneier.com/blog/archives/2024/02/microsoft-is-spying-on-users-of-its-ai-tools.html#comments">9 Comments</a>		</p>

		
	</div>

</article><p id="powered">Sidebar photo of Bruce Schneier by Joe MacInnis.</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Web Scraping in Python – The Complete Guide (151 pts)]]></title>
            <link>https://proxiesapi.com/articles/web-scraping-in-python-the-complete-guide</link>
            <guid>39442273</guid>
            <pubDate>Tue, 20 Feb 2024 15:16:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://proxiesapi.com/articles/web-scraping-in-python-the-complete-guide">https://proxiesapi.com/articles/web-scraping-in-python-the-complete-guide</a>, See on <a href="https://news.ycombinator.com/item?id=39442273">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

      <p><span>I</span>n this tutorial you'll build robust web crawlers using libraries like <a href="https://proxiesapi.com/articles/introduction-to-web-scraping-with-beautifulsoup">BeautifulSoup</a>, learn techniques to overcome real-world scraping challenges and best practices for large scale scraping.</p><p><span>You'll gain the skills to scrape complex sites, handle issues like rate limits, blocks, and javascript pages.</span></p><h2><span><strong>Why Python for Web Scraping?</strong></span></h2><p><span>Python is a popular language for web scraping due to its advantages:</span></p><li><span><strong>Simple Syntax</strong></span><span>: Python's intuitive syntax allows quick coding for scraping.</span></li><li><span><strong>Built-in Libraries</strong></span><span>: Python comes with built-in libraries and modules, like urllib and lxml, that aid in scraping.</span></li><li><span><strong>Mature Scraping Libraries</strong></span><span>: Libraries like Beautiful Soup and Scrapy simplify scraping at any scale.</span></li><li><span><strong>General Purpose</strong></span><span>: Python can be used to build complete data pipelines around scraping.</span></li><li><span><strong>Interoperability</strong></span><span>: Python integrates well with other languages and performs well when performance is crucial.</span></li><p><span>In contrast, languages like C++ require more effort for basic scraping tasks. JavaScript platforms like Node.js can be complex for beginners when building scraping scripts.</span></p><p><span>Python's simplicity, power, and interoperability makes it ideal for scraping needs. Its high-quality libraries allow quick start to scraping at scale.</span></p><h2><span><strong>Best Python Web Scraping Libraries</strong></span></h2><p><span>Some of the most popular and robust Python libraries for web scraping are:</span></p><p><span><strong>BeautifulSoup</strong></span></p><li><span>Features: Excellent HTML/XML parser, easy web scraping interface, flexible navigation and search. We will be using this library in our example scraper below.</span></li><li><span>Use Case: Small to medium scale web scraping.</span></li><li><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/">Link to BeautifulSoup docs</a></li><p><span><strong>Scrapy</strong></span></p><li><span>Features: Fast and scalable, middlewares, distributed crawling capability.</span></li><li><span>Use Case: Large scale advanced web scraping projects.</span></li><li><a href="https://scrapy.org/">Link to Scrapy docs</a></li><p><span><strong>Selenium</strong></span></p><li><span>Features: Full browser automation, handles javascript heavy sites.</span></li><li><span>Use Case: Sites with highly dynamic content loaded by JS.</span></li><li><a href="https://www.selenium.dev/documentation/overview/">Link to Selenium docs</a></li><p><span><strong>lxml</strong></span></p><li><span>Features: Very fast XML and HTML parser.</span></li><li><span>Use Case: Lightning fast parsing of XML/HTML data.</span></li><li><a href="https://lxml.de/">Link to lxml docs</a></li><p><span><strong>pyquery</strong></span></p><li><span>Features: jQuery-style syntax for accessing HTML elements.</span></li><li><span>Use Case: Makes scrape code look cleaner and more readable.</span></li><li><a href="https://pythonhosted.org/pyquery/">Link to pyquery docs</a></li><h2><span><strong>Prerequisites</strong></span></h2><p><span>To follow along with the code examples in this article, you will need:</span></p><p><span><strong>Virtual Environment (Recommended)</strong></span></p><p><span>While optional, we highly recommended creating a virtual env for the project:</span></p><div><pre><code>python -m venv my_web_scraping_env
</code></pre></div><p><span><strong>The Libraries</strong></span></p><p><span>We will be using the </span><span><strong>Requests</strong></span><span>, </span><span><strong>BeautifulSoup</strong></span><span> and </span><span><strong>OS</strong></span><span> libraries primarily:</span></p><div><pre><code>pip install requests beautifulsoup4
</code></pre></div><p><span>This will fetch the libraries from PyPI and install them locally.</span></p><p><span>With the prerequisites installed, you are all setup! Let's start scraping.</span></p><h2><span><strong>Lets pick a target website</strong></span></h2><p><span>For demonstration purposes, we will be scraping the Wikipedia page </span><a href="https://commons.wikimedia.org/wiki/List_of_dog_breeds">List of dog breeds</a><span> to extract information about various dog breeds.</span></p><p><span>The rationale behind choosing this page is:</span></p><li><span>Well structured HTML layout that makes scraping easy</span></li><li><span>Nice table layout with one breed per row</span></li><li><span>Contains mulitple data fields per breed including names, breed group, alternate names and images</span></li><li><span>Images can allow us to showcase scraping binary files as well</span></li><p><span>This is the page we are talking about…</span></p><img src="https://proxiesapi.com/articles/images/65d4bf9ea24a9.jpg" alt=""><p><span>Other great pages to practice web scraping include:</span></p><li><span>Wikipedia category pages like </span><a href="https://en.wikipedia.org/wiki/Lists_of_films">Lists of films</a></li><li><span>Ecommerce product listings like </span><a href="https://www.amazon.com/books-used-books-textbooks/b?ie=UTF8&amp;node=283155">Amazon books</a></li><li><span>Real estate listings like </span><a href="https://www.zillow.com/homes/for_rent/">Zillow rentals</a></li><p><span>The concepts covered will be applicable across any site.</span></p><h2><span><strong>Write the scraping code</strong></span></h2><p><span>Let's now closely examine the full code to understand how to systematically scrape data from the dogs breed webpage.</span></p><div><pre><code>
# Full code

import os
import requests
from bs4 import BeautifulSoup

url = '&lt;https://commons.wikimedia.org/wiki/List_of_dog_breeds&gt;'

# Headers to masquerade as a browser
headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"
}

# Download page HTML using requests
response = requests.get(url, headers=headers)

# Check valid response received
if response.status_code == 200:

    # Parse HTML using Beautiful Soup
    soup = BeautifulSoup(response.text, 'html.parser')

    # CSS selector for the main tables
    table = soup.find('table', {'class': 'wikitable sortable'})

    # Initialize data lists to store scraped info
    names = []
    groups = []
    local_names = []
    photographs = []

    # Create directory to store images
    os.makedirs('dog_images', exist_ok=True)

    # Loop through rows omitting header
    for row in table.find_all('tr')[1:]:

        # Extract each column data using CSS selectors
        columns = row.find_all(['td', 'th'])

        name = columns[0].find('a').text.strip()
        group = columns[1].text.strip()

        # Extract local name if exists
        span_tag = columns[2].find('span')
        local_name = span_tag.text.strip() if span_tag else ''

        # Extract photo url if exists
        img_tag = columns[3].find('img')
        photograph = img_tag['src'] if img_tag else ''

        # Download + Save image if url exists
        if photograph:

            response = requests.get(photograph)

            if response.status_code == 200:

                image_filename = os.path.join('dog_images', f'{name}.jpg')

                with open(image_filename, 'wb') as img_file:

                    img_file.write(response.content)

        names.append(name)
        groups.append(group)
        local_names.append(local_name)
        photographs.append(photograph)

print(names)
print(groups)
print(local_names)
print(photographs)
</code></pre></div><p><span>The imports include standard Python libraries that provide HTTP requests functionality (</span><span><ccode>requests</ccode></span><span>), parsing capability (</span><span><ccode>BeautifulSoup</ccode></span><span>), and file system access (</span><span><ccode>os</ccode></span><span>) which we will leverage.</span></p><p><span>The </span><span><ccode>requests</ccode></span><span> library allows us to make HTTP requests to the web page and check if the response is valid before parsing. </span><span><ccode>BeautifulSoup</ccode></span><span> then enables us to parse the full HTML content and isolate the main data table using CSS selectors. Finally, </span><span><ccode>os</ccode></span><span> provides file system access to save images locally.</span></p><p><span>Together they form a very handy toolkit for scraping!</span></p><h2><span><strong>Downloading the page</strong></span></h2><p><span>We first construct the target URL and initialize a requests </span><span><ccode>Session</ccode></span><span> which allows connection reuse and efficiencies when making multiple HTTP requests to the same domain:</span></p><div><pre><code>url = '&lt;https://commons.wikimedia.org/wiki/List_of_dog_breeds&gt;'

headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"
}

response = requests.get(url, headers=headers)
</code></pre></div><p><span>We also setup a custom </span><span><ccode>User-Agent</ccode></span><span> HTTP header to masquerade as a Chrome browser. This helps avoid blocks from servers trying to prevent scraping.</span></p><p><span>After getting the response, we can check the status code to ensure we received a proper HTML document:</span></p><div><pre><code>if response.status_code == 200:
   # Success!
   print(response.text)
</code></pre></div><p><span>In case of errors (e.g. 404 or 500), we do not proceed with scraping and handle the failure.</span></p><h2><span><strong>Parsing the html</strong></span></h2><p><span>Since we received a valid HTML response, we can parse the text content using Beautiful Soup:</span></p><div><pre><code>soup = BeautifulSoup(response.text, 'html.parser')
</code></pre></div><p><span><ccode>BeautifulSoup</ccode></span><span> accepts the raw HTML text and an optional parser like </span><span><ccode>lxml</ccode></span><span> or the built-in </span><span><ccode>html.parser</ccode></span><span>, and provides simple methods and Pythonic idioms for navigating, searching, and modifying the parse tree.</span></p><p><span>Beautiful Soup transforms the messy HTML into a parse tree that mirrors the DOM structure of tags, attributes and text. We can use CSS selectors and traversal methods to quickly isolate the data we need from this tree.</span></p><h2><span><strong>The Magic of Selectors for Data Extraction</strong></span></h2><p><span>One of the most magical parts of web scraping with Python's BeautifulSoup library is using CSS selectors to extract specific content from HTML pages.</span></p><p><span>Selectors allow us to visually target the tags enclosing the data we want scraped. BeautifulSoup makes selecting elements a breeze.</span></p><p><span>For example, consider extracting book titles from this snippet:</span></p><div><pre><code>&lt;div class="book-listing"&gt;
  &lt;img src="/covers/harry-potter.jpg"&gt;
  &lt;span class="title"&gt;Harry Potter and the Goblet of Fire&lt;/span&gt;
  &lt;span class="rating"&gt;9.1&lt;/span&gt;
&lt;/div&gt;

&lt;div class="book-listing"&gt;
  &lt;img src="/covers/lord-of-the-rings.jpg"&gt;
  &lt;span class="title"&gt;The Fellowship of the Ring&lt;/span&gt;
  &lt;span class="rating"&gt;9.3&lt;/span&gt;
&lt;/div&gt;
</code></pre></div><p><span>We can directly target the </span><span><ccode>span</ccode></span><span> with class </span><span><ccode>title</ccode></span><span> through the CSS selector:</span></p><div><pre><code>soup.select("div.book-listing &gt; span.title")
</code></pre></div><p><span>This says - find all </span><span><ccode>span</ccode></span><span> tags having class </span><span><ccode>title</ccode></span><span> which are direct children of any </span><span><ccode>div</ccode></span><span> tag having </span><span><ccode>book-listing</ccode></span><span> as the CSS class.</span></p><p><span>And voila, we have exactly the titles isolated:</span></p><div><pre><code>[&lt;span class="title"&gt;Harry Potter and the Goblet of Fire&lt;/span&gt;,
 &lt;span class="title"&gt;The Fellowship of the Ring&lt;/span&gt;]
</code></pre></div><p><span>We can chain </span><span><ccode>.text</ccode></span><span> to extract just the readable text within the tags:</span></p><div><pre><code>[Harry Potter and the Goblet of Fire, The Fellowship of the Ring]
</code></pre></div><p><span>Selectors provide incredible precision during data extraction by leveraging the innate hierarchy of structured HTML tags surrounding it.</span></p><p><span>Some other examples of selectors:</span></p><div><pre><code># Select id attribute
soup.select("#book-title")

# Attribute equality match
soup.select('a[href="/login"]')

# Partial attribute match
soup.select('span[class^="title"]')

# Select direct descendant
soup.select("ul &gt; li")
</code></pre></div><p><span>As you can see, by mastering different selector types and combining multiple selectors where needed - you gain immense power to zone in on and extract the exact data you need from any HTML document, eliminating nearly all guesswork. Lets get back to the task at hand now…</span></p><h2><span><strong>Finding the table</strong></span></h2><img src="https://proxiesapi.com/articles/images/65d4bf9f4fbdb.jpg" alt=""><p><span>Looking at the Raw HTML, we notice a </span><span><ccode>table</ccode></span><span> tag with CSS class </span><span><ccode>wikitable sortable</ccode></span><span> contains the main breed data.</span></p><p><span>We can simply select this using:</span></p><div><pre><code>table = soup.find('table', {'class': 'wikitable sortable'})
</code></pre></div><p><span>This searches the parse tree for any </span><span><ccode>table</ccode></span><span> tag having a </span><span><ccode>class</ccode></span><span> attribute matching </span><span><ccode>wikitable sortable</ccode></span><span>. Beautiful soup makes Selection using CSS selectors super easy!</span></p><h2><span><strong>Extracting all the fields</strong></span></h2><p><span>With the table isolated, we loop through every </span><span><ccode>tr</ccode></span><span> row after the header row to extract the data from each breed:</span></p><div><pre><code>for row in table.find_all('tr')[1:]:

    columns = row.find_all(['td', 'th'])

    name = columns[0].find('a').text.strip()
    group = columns[1].text.strip()
</code></pre></div><p><span>Here, </span><span><ccode>.find_all()</ccode></span><span> helps search all the row children tags for any </span><span><ccode>td</ccode></span><span> or </span><span><ccode>th</ccode></span><span> elements, which represent table cells. We select these into a list </span><span><ccode>columns</ccode></span><span>.</span></p><p><span>Using positional indexes in this columns list, we can extract the data within each cell cleanly:</span></p><div><pre><code>    name = columns[0].find('a').text.strip()
</code></pre></div><p><span>This grabs the anchor </span><span><ccode>a</ccode></span><span> tag inside the first table cell, gets </span><span><ccode>.text</ccode></span><span> property to extract raw string content and chains </span><span><ccode>.strip()</ccode></span><span> to remove whitespace. Beautiful Soup chains such operations elegantly.</span></p><p><span>Similarly for cells containing just text:</span></p><div><pre><code>    group = columns[1].text.strip()
</code></pre></div><p><span>We fetch </span><span><ccode>.text</ccode></span><span> property directly on table cell element.</span></p><p><span>The power of CSS selectors in quickly isolating specific tags, ids, classes or attributes makes data extraction very precise and straightforward in Beautiful Soup.</span></p><h2><span><strong>Downloading and saving the images</strong></span></h2><p><span>After scraping textual data like names, groups etc in each row, we check the last cell for an image link:</span></p><div><pre><code>    img_tag = columns[3].find('img')
    photograph = img_tag['src'] if img_tag else ''
</code></pre></div><p><span>This tries detecting and fetching src attribute on any image tag if exists.</span></p><p><span>We can then download and save images using this url if present:</span></p><div><pre><code>    if photograph:

        response = requests.get(photograph)

        image_filename = os.path.join('dog_images', f'{name}.jpg')

        with open(file_path, 'wb') as img_file:
           img_file.write(response.content)
</code></pre></div><p><span>We reuse the </span><span><ccode>requests</ccode></span><span> library to make another GET request - this time to download the image binary content and save it locally using built-in file handling capability. Pretty nifty!</span></p><p><span>And that's it! By using </span><span><ccode>requests</ccode></span><span> and BeautifulSoup together with Python's intuitive standard library, we were able to build a complete web scraper to extract complex data!</span></p><h2><span><strong>Alternative libraries and tools for web scraping</strong></span></h2><p><span>While requests and BeautifulSoup form the most popular combination, here are some alternatives worth considering:</span></p><p><span><strong>Scrapy</strong></span></p><p><span>An open source modular scraping framework meant for large scale crawling that handles throttling, cookies, proxy rotation automatically. Recommended for complex needs.</span></p><p><span><strong>Selenium</strong></span></p><p><span>Performs actual browser automation by controlling Chrome, Firefox etc. Enables scraping dynamic content that renders via JavaScript. More complex setup.</span></p><p><span><strong>pyppeteer</strong></span></p><p><span>Headless browser automation like Selenium driven through Python code. Good for javascript rendered websites.</span></p><p><span><strong>pyquery</strong></span></p><p><span>Offers jQuery style element selection. Scrape code looks very clean due to chaining syntax similar to jQuery.</span></p><p><span><strong>lxml</strong></span></p><p><span>A very fast XML/HTML parser. Great when raw parsing performance is critical.</span></p><h2><span><strong>Challenges of Web Scraping in the real world: Some tips &amp; best practices</strong></span></h2><p><span>While basic web scraping is easy, building robust production-grade scalable crawlers brings its own challenges:</span></p><h3><span><strong>Handling Dynamic Content</strong></span></h3><p><span>Many websites rely heavily on JavaScript to render content dynamically. Static scraping then fails. </span><span><strong>Solutions:</strong></span><span> Use browser automation tools like Selenium or scraper specific solutions like Scrapy's splash integration.</span></p><p><span>Here is a simple Hello World example to handle dynamic content using Selenium browser automation:</span></p><div><pre><code>from selenium import webdriver
from selenium.webdriver.common.by import By

# Initialize chrome webdriver
driver = webdriver.Chrome()

# Load page
driver.get("&lt;https://example.com&gt;")

# Wait for title to load from dynamic JS execution
driver.implicitly_wait(10)

# Selenium can extract dynamically loaded elements
print(driver.title)

# Selenium allows clicking buttons triggering JS events
driver.find_element(By.ID, "dynamicBtn").click()

# Inputs can be handled as well
search = driver.find_element(By.NAME, 'search')
search.send_keys('Automate using Selenium')
search.submit()

# Teardown browser after done
driver.quit()
</code></pre></div><p><span>The key capabilities offered by Selenium here are:</span></p><ol><li><span>Launches a real Chrome browser to load JavaScript</span></li><li><span>Finds elements only available after execution of JS</span></li><li><span>Can interact with page by clicking, entering text etc thereby triggering JavaScript events</span></li><li><span>Experience mimics an actual user browsing dynamically generated content</span></li></ol><p><span>Together this allows handling complex sites primarily driven by JavaScript for dynamic content. Selenium provides full programmatic control to automate browsers directly thereby scraping correctly.</span></p><h3><span><strong>Getting Blocked</strong></span></h3><p><span>Websites often block scrapers via blocked IP ranges or blocking characteristic bot activity through heuristics. </span><span><strong>Solutions:</strong></span><span> Slow down requests, properly mimic browsers, rotate user agents and proxies.</span></p><p><span><strong>Rate Limiting</strong></span></p><p><span>Servers fight overload by restricting number of requests served per time. Hitting these limits lead to temporary bans or denied requests. </span><span><strong>Solutions:</strong></span><span> Honor crawl delays, use proxies and ration requests appropriately.</span></p><p><span>Here is sample code to handle rate limiting while scraping:</span></p><p><span>Many websites have protection mechanisms that temporarily block scrapers when they detect too many frequent requests coming from a single IP address.</span></p><p><span>We can counter getting blocked by rate limits by adding throttling, proxies and random delays in our code.</span></p><div><pre><code>import time
import random
import requests
from urllib.request import ProxyHandler, build_opener

# List of free public proxies
PROXIES = ["104.236.141.243:8080", "104.131.178.157:8085"]

# Pause 5-15 seconds between requests randomly
def get_request():
    time.sleep(random.randint(5, 15))
    proxy = random.choice(PROXIES)
    opener = build_opener(ProxyHandler({'https': proxy}))

    resp = opener.open("&lt;https://example.com&gt;")
    return resp

for i in range(50):
   response = get_request()
   print("Request Success")
</code></pre></div><p><span>Here each request first waits for a random interval before executing. This prevents continuous rapid requests.</span></p><p><span>We also route every alternate request through randomly chosen proxy servers via rotated IP addresses.</span></p><p><span>Together, throttling down overall crawl pace and distributing requests over different proxy IPs prevents hitting site-imposed rate limits.</span></p><p><span>Additional improvements like automatically detecting rate limit warnings in responses and reacting accordingly can enhance the scraper's resilience further.</span></p><h3><span><strong>Rotating User Agents</strong></span></h3><p><span>Websites often try to detect and block scraping bots by tracking characteristic user agent strings.</span></p><p><span>To prevent blocks, it is good practice to rotate multiple well-disguised user agents randomly to mimic a real browser flow.</span></p><p><span>Here is sample code to pick a random desktop user agent from a predefined list using Python's random library before making each request:</span></p><div><pre><code>import requests
import random

# List of desktop user agents
user_agents = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 OPR/43.0.2442.991"
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_2) AppleWebKit/604.4.7 (KHTML, like Gecko) Version/11.0.2 Safari/604.4.7"
]

# Pick a random user agent string
user_agent = random.choice(user_agents)

# Set request headers with user agent before making request
headers = {"User-Agent": user_agent}

response = requests.get(url, headers=headers)
</code></pre></div><p><span>By varying the user agent across requests in code runs, websites have a tougher time profiling traffic as coming from an automated bot using a static user agent. This allows the scraper to fly under the radar without getting blocked.</span></p><p><span>Some additional enhancements include:</span></p><li><span>Having separate user agent lists for mobile, tablets, desktop browsers</span></li><li><span>Updating the lists with latest user agents periodically</span></li><li><span>Dynamically generating user agents to match genuine browser attributes</span></li><p><span>With effective user agent rotation and an ever expanding list of strings, scrapers enjoy better longevity undetected before site administrators can profile and actively block them.</span></p><h3><span><strong>Browser Fingerprinting</strong></span></h3><p><span>Beyond simplistic user agent checks, websites have adopted advanced browser fingerprinting techniques to identify bots.</span></p><p><span>This involves browser attribute profiling - collecting information regarding device screen size, installed fonts, browser plugins etc. together called browser fingerprints.</span></p><p><span>These fingerprints tend to remain largely consistent, stable and unique for standard tool-based bots and automation software.</span></p><p><span>Dynamic websites track fingerprints of scrapers accessing them. By detecting known crawler fingerprints they can block them even if the user agents are rotated constantly.</span></p><p><span><strong>Minimizing detection risks</strong></span></p><p><span>Some ways to minimize exposing scraper fingerprints:</span></p><li><span>Use Selenium to automate a standard desktop browser like Chrome or Firefox instead of custom bot agents</span></li><li><span>Dynamically generate randomized attributes like viewport size, screen resolution, font lists within ranges of variety exhibited by human browsers</span></li><li><span>Utilize proxy rotation and residential IP proxies to prevent tracking of IP specific attributes</span></li><li><span>Limit number of parallel requests from a single proxy to site to make traffic volume seem manual</span></li><p><span>Essentially by mimicking the natural randomness and variability across genuine user browsers, scraper fingerprints can avoid easy profiling by sites simply as another standard browser.</span></p><p><span>Here is a code example to dynamically modify browser attributes to avoid fingerprinting:</span></p><div><pre><code>from selenium import webdriver
import random

# List of common screen resolutions
screen_res = [(1366, 768), (1920, 1080), (1024, 768)]

# List of common font families
font_families = ["Arial", "Times New Roman", "Verdana"]

#Pick random resolution
width, height = random.choice(screen_res)

#Create chrome options
opts = webdriver.ChromeOptions()

# Set random screen res
opts.add_argument(f"--window-size={width},{height}")

# Set random user agent
opts.add_argument("--user-agent=Mozilla/5.0...")

# Set random font list
random_fonts = random.choices(font_families, k=2)
opts.add_argument(f'--font-list="{random_fonts[0]};{random_fonts[1]}"')

# Initialize driver with options
driver = webdriver.Chrome(options=opts)

# Access webpage
driver.get(target_url)

# Webpage sees every scraper request originating
# from distinct unpredictable browser profiles

</code></pre></div><p><span>Here we randomly configure our Selenium controlled Chrome instance with different screen sizes, user agents and font sets per request.</span></p><p><span>and here is how you do it using <a href="https://proxiesapi.com/articles/using-proxies-with-python-requests">Python Requests</a>…</span></p><div><pre><code>import requests
import random

# Device profiles
desktop_config = {
    'user-agent': 'Mozilla/5.0...',
    'accept-language': ['en-US,en', 'en-GB,en'],
    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'accept-encoding': 'gzip, deflate, br',
    'upgrade-insecure-requests': '1',
    'sec-fetch-site': 'none',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-user': '?1',
    'sec-fetch-dest': 'document',
    'cache-control': 'max-age=0'
}

mobile_config = {
    'user-agent': 'Mozilla/5.0... Mobile',
    'accept-language': ['en-US,en', 'en-GB,en'],
    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
    'x-requested-with': 'mark.via.gp',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-user': '?1',
    'sec-fetch-dest': 'document',
    'referer': '&lt;https://www.example.com/&gt;',
    'accept-encoding': 'gzip, deflate, br',
    'cache-control': 'max-age=0'
}

device_profiles = [desktop_config, mobile_config]

def build_headers():

    profile = random.choice(device_profiles)

    headers = {
         'User-Agent': random.choice(profile['user-agent']),
         'Accept-Language': random.choice(profile['accept-language']),
         # Other headers
         ...
    }

    return headers
</code></pre></div><p><span>Now instead of hard coding, the scraper randomly selects from plausible configuration profiles including several identifying request headers - providing realistic and human-like mutations necessary to avoid fingerprint tracking.</span></p><h3><span><strong>Parsing Complex HTML</strong></span></h3><p><span>Scrape targets often have complex HTML structures, obfuscated tags and advanced client side code packing logic which break parsers. </span><span><strong>Solutions</strong></span><span>: Careful inspection of rendered source, using robust parsers like lxml and enhancing selectors.</span></p><p><span>Here are some common types of bad HTML scrape targets exhibit and techniques to handle them:</span></p><p><span><strong>Improper Nesting</strong></span></p><p><span>HTML can often have incorrectly nested tags:</span></p><div><pre><code>&lt;b&gt;Latest News &lt;p&gt;Impact of oil prices fall...&lt;/b&gt;&lt;/p&gt;
</code></pre></div><p><span><strong>Solution</strong></span><span>: Use a parser like </span><span><em>lxml</em></span><span> that handles bad nesting and uneven tags more robustly.</span></p><p><span><strong>Broken Markup</strong></span></p><p><span>Tags could be unclosed:</span></p><div><pre><code>&lt;div&gt;
  &lt;span class="title"&gt;Python Web Scraping &lt;span&gt;
  Lorem ipsum...
&lt;/div&gt;
</code></pre></div><p><span><strong>Solution</strong></span><span>: Specify tag close explicitly while parsing:</span></p><div><pre><code>title = soup.find("span", class_="title").text
</code></pre></div><p><span><strong>Non-standard Elements</strong></span></p><p><span>Vendor specific unrecognized custom tags may exist:</span></p><div><pre><code>&lt;album&gt;
  &lt;cisco:song&gt;Believer&lt;/cisco:song&gt;
&lt;/album&gt;
</code></pre></div><p><span><strong>Solution</strong></span><span>: Search for standard tags in namespace:</span></p><div><pre><code>song = soup.find("cisco:song").text
</code></pre></div><p><span><strong>Non-text Content</strong></span></p><p><span>Tables, images embedded between text tags:</span></p><div><pre><code>&lt;p&gt;
  Trending Now
  &lt;table&gt;...&lt;/table&gt;
&lt;/p&gt;
</code></pre></div><p><span><strong>Solution</strong></span><span>: Select child tags specifically:</span></p><div><pre><code>paras = soup.select("p &gt; text()")
</code></pre></div><p><span>This picks only text nodes as children ignoring other elements present under </span><span><ccode></ccode></span></p><p><span> tag.</span></p><p><span>As you can see, liberal use of selectors along with robust parsers provides the tools to handle even badly designed HTML and extract the required data reliably.</span></p><h3><span><strong>Other guidelines worth following:</strong></span></h3><li><span>Respect </span><span><ccode>robots.txt</ccode></span><span> rules</span></li><li><span>Check if API access is available before scraping sites without permission</span></li><li><span>Scrape data responsibly in moderate volumes</span></li><p><span>Adopting these practices ensures reliable, resilient and responsible scraping operations.</span></p><p><span><strong>Conclusion</strong></span><span>
In this comprehensive guide, we took an in-depth look into web scraping using Python. We covered:</span></p><li><span>Why Python and libraries like BeautifulSoup are ideal for scraping most targets</span></li><li><span>Common scraping patterns like making requests, parsing responses, handling dynamic content using Selenium</span></li><li><span>Best practices around mimicry, circumventing blocks, respecting crawl delays and auto-throttling</span></li><li><span>How to build resilient, production-grade scalable scrapers</span></li><p><span>By learning core scraping paradigms, structuring code properly and applying optimization techniques, extracting accurate web data in Python at scale has become an achievable skill!</span></p><p><span>While these examples are great for learning, scraping production-level sites can pose challenges like CAPTCHAs, IP blocks, and bot detection. Rotating proxies and automated CAPTCHA solving can help.</span></p><p><span>Proxies API offers a simple API for rendering pages with built-in proxy rotation, CAPTCHA solving, and evasion of IP blocks. You can fetch rendered pages in any language without configuring browsers or proxies yourself.</span></p><p><span>This allows scraping at scale without headaches of IP blocks. Proxies API has a free tier to get started. Check out the API and</span><a href="https://proxiesapi.com/">&nbsp;sign up for an API key</a><span>&nbsp;to supercharge your web scraping.</span></p><p><span>With the power of Proxies API combined with Python libraries like Beautiful Soup, you can scrape data at scale without getting blocked.</span></p>      

    
    
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bad property debt exceeds reserves at largest US banks (150 pts)]]></title>
            <link>https://www.ft.com/content/4114454c-a924-4929-85f4-5360b2b871c6</link>
            <guid>39441115</guid>
            <pubDate>Tue, 20 Feb 2024 13:43:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ft.com/content/4114454c-a924-4929-85f4-5360b2b871c6">https://www.ft.com/content/4114454c-a924-4929-85f4-5360b2b871c6</a>, See on <a href="https://news.ycombinator.com/item?id=39441115">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="barrier-page">
<div data-component="articleHeaderHeroRadioOffer" data-component-unique-name="CHE-Print"><div><p><img src="https://financial-times-financial-times.cdn.zephr.com/assets/icons/padlock_icon.svg" alt="Padlock icon"></p><div><p>Subscribe to unlock this article</p></div></div><div><p><h2>Limited time offer
  <br>
  <strong>Save up to 40% on Standard Digital</strong>
</h2></p><div><p> Essential digital access to quality FT journalism on any device. <br>
All discounts based on monthly full price over contract term. Cancel subscription renewal anytime. </p></div></div><div><div><p><label for="offer1"><label for="offer1">
  <span>SAVE 40% ON YEAR 1</span>
  <span>
    <s>CHF660</s> CHF395 for 1 year
  </span>
  <span>CHF32.92 monthly equivalent</span>
</label></label></p></div><div><p><label for="offer2"><label for="offer2">
  <span>SAVE 25% ON 6 MONTHS</span>
  <span>
    <s>CHF330</s> CHF245 for 6 months
  </span>
  <span>CHF40.83 monthly equivalent</span>
</label></label></p></div><div><p><label for="offer3"><label for="offer3">
  <span>SAVE 10% MONTHLY</span>
  <span>
    <s>CHF55</s> CHF49 per month
  </span>
  <span>Up to 12 months</span>
</label></label></p></div></div></div>
<div id="recommendedOffers-CHE-Print-8b5821ed-6e43-4acd-9b78-bc193719aca5" data-component="recommendedOffers" data-component-unique-name="CHE-Print"><h2>Explore more offers.</h2><div><div data-o-grid-colspan="12 L4"><div><p><img src="https://financial-times-financial-times.cdn.zephr.com/assets/icons/primary_product_icon_trial.svg" alt=""></p><p data-offer-type="trial"><h3>Standard Digital</h3></p></div><div><p>Then CHF85 per month. Complete digital access to quality FT journalism on any device. Cancel anytime during your trial.</p></div></div><div data-o-grid-colspan="12 L4"><div><p><img src="https://financial-times-financial-times.cdn.zephr.com/assets/icons/primary_product_icon_premium.svg" alt=""></p><p data-offer-type="premium"><h3>Standard Digital</h3></p></div><div><p>Complete digital access to quality FT journalism with expert analysis from industry leaders. Pay a year upfront and save 20%.</p></div></div><div data-o-grid-colspan="12 L4"><div><p><img src="https://financial-times-financial-times.cdn.zephr.com/assets/icons/primary_product_icon_print.svg" alt=""></p><p data-offer-type="print"><h3>Standard Digital</h3></p></div><div><p><span>CHF1,349</span><span> CHF345 </span><span>for your first year</span></p></div><div><p>Insight and expertise in your hands with the iconic FT print edition, delivered Monday to Saturday.</p></div></div></div></div>
<div data-component="subscriptionOptionsV2" data-component-unique-name="CHE-Print"><h2>Explore our full range of subscriptions.</h2></div>
<div data-component="whyFT" data-component-unique-name="default"><div><h2>Why the FT?</h2><p>See why over a million readers pay to read the Financial Times.</p></div><p><a href="https://subs.ft.com/whytheft">Find out why</a></p></div>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Yulia Navalnaya’s X account was suspended (107 pts)]]></title>
            <link>https://news.sky.com/story/alexei-navalnys-wife-yulia-navalnaya-has-x-social-media-account-suspended-13076185</link>
            <guid>39440738</guid>
            <pubDate>Tue, 20 Feb 2024 13:07:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://news.sky.com/story/alexei-navalnys-wife-yulia-navalnaya-has-x-social-media-account-suspended-13076185">https://news.sky.com/story/alexei-navalnys-wife-yulia-navalnaya-has-x-social-media-account-suspended-13076185</a>, See on <a href="https://news.ycombinator.com/item?id=39440738">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-component-name="sdc-article-body" data-highlight-intro="true">
      
      <p>Alexei Navalny's widow Yulia Navalnaya has had her account suspended on social media platform X.</p><p>It is unclear why her account was suspended by the social network, formerly Twitter - which is owned by <strong><a href="https://news.sky.com/topic/elon-musk-6730" target="_blank">Elon Musk</a></strong>.</p>
<p>"Account suspended," a notice said on the site.</p><p><strong>Russia-Ukraine latest:</strong> <strong><a href="https://news.sky.com/story/russia-ukraine-latest-putin-navalny-avdiivka-latest-sky-news-blog-live-12541713" target="_blank">Moscow puts Navalny's brother on wanted list</a></strong></p><p>Mr Navalny, 47, was a high-profile and vocal critic of Russian President <strong><a href="https://news.sky.com/topic/vladimir-putin-5972" target="_blank">Vladimir Putin</a></strong> and had been serving a 19-year prison term when he <strong><a href="https://news.sky.com/story/russian-opposition-politician-and-putin-critic-alexei-navalny-has-died-13072837" target="_blank">died on Friday in an Arctic penal colony</a></strong>.</p>
<p>His Anti-Corruption Foundation tagged Mr Musk in a post on X, asking him to "please explain exactly which rules were violated" by Ms Navalnaya for the suspension.</p><div aria-label="Consent required" data-component-name="sdc-article-tweet" data-aspect-ratio="" data-consent="pending" data-vendor-name="twitter">
        <p><span>X</span>
            <span data-show-on-fallback="false">
                This content is provided by <span>X</span>, which may be using cookies and other technologies.
                To show you this content, we need your permission to use cookies.
                You can use the buttons below to amend your preferences to enable <span>X</span> cookies or to allow those cookies just once.
                You can change your settings at any time via the <a href="#privacy-options">Privacy Options</a>.
            </span>
            <span data-show-on-fallback="true">
                Unfortunately we have been unable to verify if you have consented to <span>X</span> cookies.
                To view this content you can use the button below to allow <span>X</span> cookies for this session only.
            </span></p>
    </div><p>Less than an hour later, X restored Ms Navalnaya's access to the social media platform.</p><p>X's safety account later said in a post: "Our platform's defence mechanism against manipulation and spam mistakenly flagged @yulia_navalnaya as violating our rules.</p><p>"We unsuspended the account as soon as we became aware of the error, and will be updating the defence."</p>        
<p>Earlier today on her X account, Ms Navalnaya urged the Kremlin to "give back Alexei's body and let him be buried with dignity".</p><p>On Monday she vowed to continue her husband's fight against the Kremlin - and accused Mr Putin of killing the country's opposition leader in a powerful nine-minute video.</p><p>In the video, published on YouTube and shared on X by Mr Navalny's official spokesperson Kira Yarmysh, she also alleged officials' refusal to hand over his body to his mother was part of a cover-up.</p><p>"They are cowardly and meanly hiding his body, refusing to give it to his mother and lying miserably while waiting for the trace of" poison to disappear, Ms Navalnaya said.</p><p>She suggested her husband might have been killed with a novichok-style nerve agent.</p><p>In her video statement, Ms Navalnaya said: "By killing Alexei, Putin killed half of me, half of my heart and half of my soul."</p><p>"But I still have the other half, and it tells me that I have no right to give up.</p><p>"I will continue the work of <strong><a href="https://news.sky.com/topic/alexei-navalny-6698" target="_blank">Alexei Navalny</a></strong>," she said.</p><p>The Kremlin has denied the allegations as "unfounded" and "insolent".</p><p>Mr Putin's spokesman Dmitry Peskov said: "These are absolutely unfounded, insolent accusations about the head of the Russian state."</p> <div>
      <p>
        <h4>Trend in X suspensions raises questions for Musk</h4>
      </p>

      

        <p>X says it suspends accounts that violate its guidelines that broadly aim to protect users' safety and privacy, as well as to restrict use of the platform by bots. This includes, but is not limited to, accounts that promote violence, harass people, post spam or share others' personal details.</p>
        <p>When Yulia Navalnaya's account was temporarily suspended, the platform did not offer an explanation as to which of its guidelines was breached, but suggested that it considered her to have violated its code of conduct in some way.</p>
        <p>The reason for the temporary suspension remains unclear, but it contradicts the image Elon Musk has tried to create for X under his leadership.</p>
        <p>The platform, which was acquired by the Tesla founder in 2022, has moved to reinstate the accounts of a number of users who had been permanently banned, including former US president Donald Trump.</p>
        <p>Musk has previously referred to himself as a "free speech absolutist" and said he wanted X to be a space where a wide range of beliefs could be debated in a healthy manner.</p>
        <p>But Ms Navalnaya's temporary suspension is the latest in a series of suspensions of prominent accounts since the start of the year. In early January, Musk said he would investigate claims X had suspended the accounts of at least eight journalists and others who had criticised the Israeli government.</p>
        <p>"Obviously, it is ok to be critical of anything, but it is not ok to call for extreme violence, as that is illegal," he said in a post on the platform. "(Apart from the 'UN Exemption', where officials from countries recognised by the UN can say what they say at the UN)."</p>
        <p>It remains shrouded in mystery how decisions about suspensions are made, and X under Musk's leadership has been anything but predictable. But the trend in suspensions raises questions about which political views are accepted on the platform and which are not.</p>

  </div>
<p>Mr Navalny's mother, Lyudmila Navalnaya, said in a video on Tuesday taken outside the barbed wire of the prison where her son died: "For the fifth day, I have been unable to see him. They wouldn't release his body to me. And they're not even telling me where he is."</p><p>She added: "I'm reaching out to you, Vladimir Putin.</p><p>"The resolution of this matter depends solely on you. Let me finally see my son.</p><p>"I demand that Alexei's body is released immediately, so that I can bury him like a human being," she said in the footage posted on social media by Mr Navalny's team.</p> <div aria-label="Consent required" data-component-name="sdc-article-custom-markup" data-aspect-ratio="16/9" data-consent="pending" data-vendor-name="spreaker">
        <p><span>Spreaker</span>
            <span data-show-on-fallback="false">
                This content is provided by <span>Spreaker</span>, which may be using cookies and other technologies.
                To show you this content, we need your permission to use cookies.
                You can use the buttons below to amend your preferences to enable <span>Spreaker</span> cookies or to allow those cookies just once.
                You can change your settings at any time via the <a href="#privacy-options">Privacy Options</a>.
            </span>
            <span data-show-on-fallback="true">
                Unfortunately we have been unable to verify if you have consented to <span>Spreaker</span> cookies.
                To view this content you can use the button below to allow <span>Spreaker</span> cookies for this session only.
            </span></p>
    </div><p><a href="https://podfollow.com/skynewsdaily"><strong>Click to subscribe to the Sky News Daily wherever you get your podcasts</strong></a></p><p>Russian authorities have said the cause of Mr Navalny's death is still unknown and refused to release his body for the next two weeks as the preliminary inquest continues and a "chemical analysis" is carried out, his team has said.</p><p><strong>Read more:</strong><br><strong><a href="https://news.sky.com/story/alexei-navalny-russia-denies-claims-that-putin-critic-was-poisoned-with-novichok-13076085" target="_blank">Russia denies claims Navalny was poisoned</a></strong><br><strong><a href="https://news.sky.com/story/donald-trump-breaks-silence-on-alexei-navalnys-death-but-makes-no-mention-of-putin-13075720" target="_blank">Trump breaks silence on Navalny's death</a></strong></p><p>Meanwhile, Mr Navalny's brother has been placed on <strong><a href="https://news.sky.com/topic/russia-5803" target="_blank">Russia</a></strong>'s wanted list, according to state media.</p><p>A new criminal case has been opened against Oleg Navalny, making him a wanted man in Russia.</p> <div>
  <figure>
    <p><img loading="lazy" intrinsicsize="768x432" src="https://e3.365dm.com/24/02/768x432/skynews-alexei-navalny-russia_6462336.jpg?20240220140626" srcset="https://e3.365dm.com/24/02/384x216/skynews-alexei-navalny-russia_6462336.jpg?20240220140626 380w, https://e3.365dm.com/24/02/768x432/skynews-alexei-navalny-russia_6462336.jpg?20240220140626 760w, https://e3.365dm.com/24/02/1600x900/skynews-alexei-navalny-russia_6462336.jpg?20240220140626 1024w, https://e3.365dm.com/24/02/2048x1152/skynews-alexei-navalny-russia_6462336.jpg?20240220140626 2048w" sizes="(min-width: 1024px) 1024px, 100vw" alt="Alexei Navalny (L) and his brother Oleg Navalny at a court hearing in Moscow, Russia, in 2014. Pic: Reuters">
    </p>
      <figcaption>
        <span>Image:</span>
        <span>Alexei Navalny (L) and his brother Oleg Navalny at a court hearing in Moscow, Russia, in 2014. Pic: Reuters
        </span>
      </figcaption>
  </figure>
</div>
<p>In 2021, he was handed a one-year suspended sentence for breaking COVID restrictions after he was accused of calling for Russians to attend a rally for his brother.</p><p>He was sentenced in absentia in February 2022 to one year in prison for violating the terms of the suspended sentence.</p>     <a href="https://news.sky.com/download-app" target="blank" data-tracking-label="ui-app-promo-download-link" data-type="" data-component-name="ui-app-promo">
        
    </a>


<p>His whereabouts are unknown. He travelled to Cyprus in 2021 and did not return to Russia, according to court documents cited by news agencies.</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hetzner GPU Server (167 pts)]]></title>
            <link>https://robot.hetzner.com/order/index/culture/en_GB</link>
            <guid>39440503</guid>
            <pubDate>Tue, 20 Feb 2024 12:39:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://robot.hetzner.com/order/index/culture/en_GB">https://robot.hetzner.com/order/index/culture/en_GB</a>, See on <a href="https://news.ycombinator.com/item?id=39440503">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                  <!--Start of content -->
                    <p><span>
    <strong>Language: </strong>
          </span>
  <span>
    <strong>Country: </strong>
    
      <a href="#" onclick="javascript: jQuery('.country_select_background').fadeIn()">
        <img src="https://robot.hetzner.com/images/countries/de.png"> Germany
      </a>
        
    
    </span></p><hr>


<p><img src="https://robot.hetzner.com/images/gex44-robot_en.jpg"></p><p>Thank you for your interest in the products of Hetzner Online.</p>

  <p>
    If you are not a Hetzner client yet and want to take over a server or Storage Box from another Hetzner client, please use the <a href="https://robot.hetzner.com/server/transferCreate">server transfer site</a> or the <a href="https://robot.hetzner.com/storage/transferCreate">Storage Box transfer site</a>.  </p>

<p>
  To view the current order status have a look at our <a onclick="var w=window.open(this.href);w.focus();return false;" href="https://docs.hetzner.com/general/others/order-processing">Order processing status site</a>.</p>


<div id="0"><h2>Shopping cart</h2></div>
<p><strong>We offer the following products:</strong></p>



  
  
  



  <div>
      
          
          
          
              
                          
        <div id="1395"><div><ul><li>AMD Ryzen 9 7950X3D 16-Core "Raphael" (Zen 4)</li><li>128 GB DDR5 ECC RAM</li><li>2 x 1.92 TB NVMe SSD Datacenter Edition (Gen 4, Software RAID 1)</li><li>1 Gbit/s bandwidth</li></ul><p><a href="https://www.hetzner.com/dedicated-rootserver/ax102?country=DE">more information...</a></p></div><hr><p><strong>Price (monthly): from <span>€ 123.76</span></strong><br><strong>Setup (once): € 46.41</strong></p><hr></div>          
          
          
          
          
          
          
          
          
          
          
              
                          
        <div id="1394"><div><ul><li>Intel® Core™ i9-13900 24 Core "Raptor Lake-S"</li><li>64 GB DDR5 ECC RAM</li><li>2 x 1.92 TB NVMe SSD Datacenter Edition (Gen4, Software RAID 1)</li><li>1 Gbit/s bandwidth</li></ul><p><a href="https://www.hetzner.com/dedicated-rootserver/ex101?country=DE">more information...</a></p></div><hr><p><strong>Price (monthly): from <span>€ 99.96</span></strong><br><strong>Setup (once): € 46.41</strong></p><hr></div>          
              
                          
        <div id="1608"><p>Dedicated GPU-Server GEX44</p><div id="content_1608"><div><ul><li>Intel® Core™ i5-13500 14 Core "Raptor Lake-S"</li><li>64 GB DDR4 RAM</li><li>2 x 1.92 TB NVMe SSD Datacenter Edition (Gen 3, Software RAID 1)</li><li>Nvidia RTX 4000 SFF Ada Generation</li><li>1 Gbit/s bandwidth</li></ul></div><hr><p><strong>Price (monthly): <span>€ 218.96</span></strong><br><strong>Setup (once): € 94.01</strong></p><hr></div></div>                
          
          
                
          
          
          
                
                
              </div>
  
  <br>


  
  
        
  
  
  
        
  
  
  
        
  
  
  
        
  
                        <!--End of content -->
                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Rotten Apple (186 pts)]]></title>
            <link>https://adactio.com/journal/20888</link>
            <guid>39440423</guid>
            <pubDate>Tue, 20 Feb 2024 12:27:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://adactio.com/journal/20888">https://adactio.com/journal/20888</a>, See on <a href="https://news.ycombinator.com/item?id=39440423">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
<p>The <a href="https://digital-markets-act.ec.europa.eu/about-dma_en">European Union’s Digital Markets Act</a> is being enforced and <a href="https://developer.apple.com/support/dma-and-apps-in-the-eu/">Apple aren’t happy about it</a>.</p>

<p>Most of the discussion around this topic has centred on the requirement for Apple to provision alternative app stores. I don’t really care about that because I don’t really care about native apps. With one exception: I care about web browsers.</p>

<p>That’s the other part of the DMA that’s being enforced: Apple <em>finally</em> have to allow alternative browsing engines. Hallelujah!</p>

<p>Instead of graciously acknowledging that this is what’s best for users, <a href="https://open-web-advocacy.org/blog/owa-review-apple-dma-compliance-for-web/">Apple are throwing a tantrum</a>.</p>

<p>First of all, they’re going to ringfence any compliance to users in the European Union. Expect some very interesting edge cases to emerge in a world where people don’t spent their entire lives in one country.</p>

<p>Secondly, Apple keep insisting that this will be very, very bad for security. You can read <a href="https://www.apple.com/newsroom/2024/01/apple-announces-changes-to-ios-safari-and-the-app-store-in-the-european-union/">Apple’s announcement on being forced to comply</a> but as you do you so, I’d like you to remember one thing: every nightmare scenario they describe for <a href="https://developer.apple.com/support/dma-and-apps-in-the-eu#ios-app-eu">the security of users in the EU</a> is exactly what currently happens on Macs everywhere in the world.</p>

<blockquote>
  <p>This includes risks from installing software from unknown developers that are not subject to the Apple Developer Program requirements, installing software that compromises system integrity with malware or other malicious code, the distribution of pirated software, exposure to illicit, objectionable, and harmful content due to lower content and moderation standards, and increased risks of scams, fraud, and abuse.</p>
</blockquote>

<p>Users of macOS everywhere are currently exposed to all the risks that will supposedly overwhelm iOS users in the European Union. Weirdly, the sky hasn’t fallen.</p>

<p>It’s the same with web browsers. I just got a new Mac. It came with one browser pre-installed: Safari. It’s a good browser. But I also have the option of installing another browser, like Firefox (which I’ve done). A lot of people just use Safari. That’s good. That’s choice. Everyone wins.</p>

<p>Now Apple need to provide parity on iOS, at least for users in the EU. Again, Apple are decribing this coming scenario as an absolute security nightmare. But again, the conditions they’re describing are what <em>already exist</em> on macOS.</p>

<p>All Apple is being asked to do is offer than the same level of choice on mobile that everyone already enjoys on their computers. Rather than comply reasonably, <a href="https://bugs.webkit.org/show_bug.cgi?id=268643">Apple have found a way to throw their toys out of the pram</a>.</p>

<p>As of the next update to iOS, <a href="https://developer.apple.com/support/dma-and-apps-in-the-eu#8">users in the EU will no longer have homescreen apps</a>. Those web apps will now launch in a browser window. Presumably they’ll also lose the ability to send <a href="https://adactio.com/journal/19911">push notifications</a>: being a homescreen app was a prerequisite for that functionality.</p>

<p>This is a huge regression that only serves to harm and confuse users.</p>

<p>I have <a href="https://thesession.org/">a website about traditional Irish music</a>. Guess where a significant amount of the audience is based? That’s right: Ireland. In the European Union.</p>

<p>There is no native app for The Session, but <a href="https://thesession.org/app">you can install it on your phone nonetheless</a>. Lots of people have done that. After a while they forget that they didn’t install it from an app store: it behaves just like any other app on their homescreen.</p>

<p>That’s all about to change. I’m going to get a lot of emails from confused users wondering why their app is broken, now opening in a regular browser window. And I won’t be able to do anything about it, other than to tell them to take it up with Apple.</p>

<p>Presumably Apple is hoping that users will direct their anger at the EU commission instead. They’re doing their best to claim that they’re being forced to make this change. That’s completely untrue. <a href="https://open-web-advocacy.org/blog/its-official-apple-kills-web-apps-in-the-eu/">A lie</a>:</p>

<blockquote>
  <p>This is emphatically not required by the EU’s Digital Markets Act (DMA). It’s a circumvention of both the spirit and the letter of the Act, and if the EU allows it, then the DMA will have failed in its aim to allow fair and effective browser and web app competition.</p>
</blockquote>

<p>Throughout all their communications on this topic, Apple are sticking to their abuser logic:</p>

<blockquote>
  <p>Look what you made me do!</p>

  <p>This is going to hurt me more than it hurts you.</p>
</blockquote>

<p>Apple’s petulant policy of malicious compliance is extremely maddening. What they’re about to do to users in the EU is just nasty.</p>

<p>This is a very dark time for the web.</p>

<p>I feel bad for the Safari team. They’ve been working really hard recently to make Safari a very competitive browser with great standards support with a quicker release cycle than we’ve seen before. Then it all gets completely torpedoed at the level of the operating system.</p>

<p>I really hope that Apple won’t get away with their plan to burn down web apps on iOS in the EU. But hope isn’t enough. We need to tell the EU commission how much damage this will do.</p>

<p>If you’ve ever built a web app, then your users will suffer. Remember, it’s a <em>world wide</em> web, including the European Union.</p>

<p>Create a PDF with the following information:</p>

<ul>
<li>Your company’s name.</li>
<li>Your name.</li>
<li>That your company operates or services the EU.</li>
<li>How many users your service has in the EU&nbsp;(approximately).</li>
<li>The level of impact this will have on your business.</li>
<li>The problems this will cause your business.</li>
<li>Whether or not the submission is confidential.</li>
</ul>

<p>The submission can be as short or long as you want. Send it to <a href="mailto:contactus@open-web-advocacy.org">contactus@open-web-advocacy.org</a>, ideally before Monday, February 19th.</p>

<p>I know that’s a lot to ask of you on your weekend, but this really matters for the future of the web.</p>

<p>At the very least, I encourage to get involved with the great work being done by the <a href="https://open-web-advocacy.org/">Open Web Advocacy</a> group. <a href="https://discord.gg/x53hkqrRKx">They’re also on Discord</a>.</p>

<p>Please don’t let Apple bully an entire continent of users.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[In Defense of Simple Architectures (364 pts)]]></title>
            <link>https://danluu.com/simple-architectures/</link>
            <guid>39440179</guid>
            <pubDate>Tue, 20 Feb 2024 11:50:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://danluu.com/simple-architectures/">https://danluu.com/simple-architectures/</a>, See on <a href="https://news.ycombinator.com/item?id=39440179">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <p>Wave is a $1.7B company with 70 engineers<sup id="fnref:R"><a rel="footnote" href="#fn:R">1</a></sup> whose product is a CRUD app that adds and subtracts numbers. In keeping with this, our architecture is a standard CRUD app architecture, a Python monolith on top of Postgres. <a href="https://twitter.com/danluu/status/1462607028585525249">Starting with a simple architecture and solving problems in simple ways</a> where possible has allowed us to scale to this size while engineers mostly focus on work that delivers value to users.</p> <p>Stackoverflow scaled up a monolith to good effect (<a href="https://nickcraver.com/blog/2013/11/22/what-it-takes-to-run-stack-overflow/">2013 architecture</a> / <a href="https://nickcraver.com/blog/2016/02/17/stack-overflow-the-architecture-2016-edition/">2016 architecture</a>), eventually getting acquired for $1.8B. If we look at traffic instead of market cap, Stackoverflow is among the top 100 highest traffic sites on the internet (for many other examples of valuable companies that were built on top of monoliths, <a href="https://twitter.com/danluu/status/1498678300163588096">see the replies to this Twitter thread</a>. We don’t have a lot of web traffic because we’re a mobile app, but Alexa still puts our website in the top 75k even though our website is basically just a way for people to find the app and most people don’t even find the app through our website).</p> <p>There are some kinds of applications that have demands that would make a simple monolith on top of a boring database a non-starter but, for most kinds of applications, even at top-100 site levels of traffic, computers are fast enough that high-traffic apps can be served with simple architectures, which can generally be created more cheaply and easily than complex architectures.</p> <p>Despite the unreasonable effectiveness of simple architectures, most press goes to complex architectures. For example, at a recent generalist tech conference, there were six talks on how to build or deal with side effects of complex, microservice-based, architectures and zero on how one might build out a simple monolith. There were more talks on quantum computing (one) than talks on monoliths (zero). Larger conferences are similar; a recent enterprise-oriented conference in SF had a double-digit number of talks on dealing with the complexity of a sophisticated architecture and zero on how to build a simple monolith. Something that was striking to me the last time I attended that conference is how many attendees who worked at enterprises with low-scale applications that could’ve been built with simple architectures had copied the latest and greatest sophisticated techniques that are popular on the conference circuit and HN.</p> <p>Our architecture is so simple I’m not even going to bother with an architectural diagram. Instead, I’ll discuss a few boring things we do that help us keep things boring.</p> <p>We’re currently using boring, synchronous, Python, which means that our server processes block while waiting for I/O, like network requests. We previously tried Eventlet, an async framework that would, in theory, let us get more efficiency out of Python, but ran into so many bugs that we decided the CPU and latency cost of waiting for events wasn’t worth the operational pain we had to take on to deal with Eventlet issues. The are other <a href="https://twitter.com/mcfunley/status/1194713713330122752">well-known async frameworks for Python</a>, but users of those at scale often also report <a href="https://twitter.com/mcfunley/status/1194715290841432064">significant fallout from using those frameworks at scale</a>. Using synchronous Python is expensive, in the sense that we pay for CPU that does nothing but wait during network requests, but since we’re only handling billions of requests a month (for now), the cost of this is low even when using a slow language, like Python, and paying retail public cloud prices. The cost of our engineering team completely dominates the cost of the systems we operate<sup id="fnref:B"><a rel="footnote" href="#fn:B">2</a></sup>.</p> <p>Rather than take on the complexity of making our monolith async we farm out long-running tasks (that we don’t want responses to block on) to a queue.</p> <p>A place where we can’t be as boring as we’d like is with our on-prem datacenters. When we were operating solely in Senegal and Côte d'Ivoire, we operated fully in the cloud, but as we expand into Uganda (and more countries in the future), we’re having to split our backend and deploy on-prem to comply with local data residency laws and regulations. That's not exactly a simple operation, but as anyone who's done the same thing with a complex service-oriented architecture knows, this operation is much simpler than it would've been if we had a complex service-oriented architecture.</p> <p>Another area is with software we’ve had to build (instead of buy). When we started out, we strongly preferred buying software over building it because a team of only a few engineers can’t afford the time cost of building everything. That was the right choice at the time even though <a href="https://danluu.com/nothing-works/">the “buy” option generally gives you tools that don’t work</a>. In cases where vendors can’t be convinced to fix showstopping bugs that are critical blockers for us, <a href="https://danluu.com/in-house/">it does make sense to build more of our own tools and maintain in-house expertise in more areas</a>, in contradiction to the standard advice that a company should only choose to “build” in its core competency. Much of that complexity is complexity that we don’t want to take on, but in some product categories, even after fairly extensive research we haven’t found any vendor that seems likely to provide a product that works for us. To be fair to our vendors, the problem they’d need to solve to deliver a working solution to us is much more complex than the problem we need to solve since our vendors are taking on the complexity of solving a problem for every customer, whereas we only need to solve the problem for one customer, ourselves.</p> <p>A mistake we made in the first few months of operation that has some cost today was not carefully delimiting the boundaries of database transactions. In Wave’s codebase, the SQLAlchemy database session is a request-global variable; it implicitly begins a new database transaction any time a DB object’s attribute is accessed, and any function in Wave’s codebase can call commit on the session, causing it to commit all pending updates. This makes it difficult to control the time at which database updates occur, which increases our rate of subtle data-integrity bugs, as well as making it harder to lean on the database to build things like <a href="https://brandur.org/idempotency-keys">idempotency keys</a> or a <a href="https://brandur.org/job-drain">transactionally-staged job drain</a>. It also increases our risk of accidentally holding open long-running database transactions, which can <a href="https://gocardless.com/blog/zero-downtime-postgres-migrations-the-hard-parts/">make schema migrations operationally difficult</a>.</p> <p>Some choices that we’re unsure about (in that these are things we’re either thinking about changing, or would recommend to other teams starting from scratch to consider a different approach) were using RabbitMQ (for our purposes, Redis would probably work equally well as a task queue and just using Redis would reduce operational burden), using Celery (which is overcomplicated for our use case and has been implicated in several outages e.g. due to backwards compatibility issues during version upgrades), using SQLAlchemy (which makes it hard for developers to understand what database queries their code is going to emit, leading to various situations that are hard to debug and involve unnecessary operational pain, especially related to the above point about database transaction boundaries), and using Python (which was the right initial choice because of our founding CTO’s technical background, but its concurrency support, performance, and extensive dynamism make us question whether it’s the right choice for a large-scale backend codebase). None of these was a major mistake, and for some (e.g. Python) the downsides are minimal enough that it’s cheaper for us to continue to pay the increased maintenance burden than to invest in migrating to something theoretically better, but if we were starting a similar codebase from scratch today we’d think hard about whether they were the right choice.</p> <p>Some areas where we’re happy with our choices even though they may not sound like the simplest feasible solution is with our API, where we use GraphQL, with our transport protocols, where we had a custom protocol for a while, and our host management, where we use Kubernetes. For our transport protocols, we used to use a custom protocol that runs on top of UDP, with an SMS and USSD fallback, <a href="https://www.youtube.com/watch?v=EAxnA9L5rS8">for the performance reasons described in this talk</a>. With the rollout of HTTP/3, we’ve been able to replace our custom protocol with HTTP/3 and we generally only need USSD for events like the recent internet shutdowns in Mali.</p> <p>As for using GraphQL, we believe the pros outweigh the cons for us:</p> <p>Pros:</p> <ul> <li>Self-documentation of exact return type</li> <li>Code generation of exact return type leads to safer clients</li> <li>GraphiQL interactive explorer is a productivity win</li> <li>Our various apps (user app, support app, Wave agent app, etc.) can mostly share one API, reducing complexity</li> <li>Composable query language allows clients to fetch exactly the data they need in a single packet roundtrip without needing to build a large number of special-purpose endpoints</li> <li>Eliminates bikeshedding over what counts as a RESTful API</li> </ul> <p>Cons:</p> <ul> <li>GraphQL libraries weren’t great when we adopted GraphQL (the base Python library was a port of the Javascript one so not Pythonic, Graphene required a lot of boilerplate, and Apollo-Android produced very poorly optimized code)</li> <li>Default GQL encoding is redundant and we care a lot about limiting size because many of our customers have low bandwidth</li> </ul> <p>As for Kubernetes, we use Kubernetes because knew that, if the business was successful (which it has been) and we kept expanding, we’d eventually expand to countries that require us to operate our services in country. The exact regulations vary by country, but we’re already expanding into one major African market that requires we operate our “primary datacenter” in the country and there are others with regulations that, e.g., require us to be able to fail over to a datacenter in the country.</p> <p>An area where there’s unavoidable complexity for us is with telecom integrations. In theory, we would use a SaaS SMS provider for everything, but <a href="https://youtu.be/6tb8ALAvodM?t=196">the major SaaS SMS provider doesn’t operate everywhere in Africa</a> and the cost of using them everywhere would be prohibitive<sup id="fnref:C"><a rel="footnote" href="#fn:C">3</a></sup>. The earlier comment on how the compensation cost of engineers dominates the cost of our systems wouldn’t be true if we used a SaaS SMS provider for all of our SMS needs; the team that provides telecom integrations pays for itself many times over.</p> <p>By keeping our application architecture as simple as possible, we can spend our complexity (and headcount) budget in places where there’s complexity that it benefits our business to take on. Taking the idea of doing things as simply as possible unless there’s a strong reason to add complexity has allowed us to build a fairly large business with not all that many engineers despite running an African finance business, which is generally believed to be a tough business to get into, which we’ll discuss in a future post (one of our earliest and most helpful advisers, who gave us advice that was critical in Wave’s success, initially suggested that Wave was a bad business idea and the founders should pick another one because he foresaw so many potential difficulties).</p> <p><em>Thanks to Ben Kuhn, Sierra Rotimi-Williams, June Seif, Kamal Marhubi, Ruthie Byers, Lincoln Quirk, Calum Ball, John Hergenroeder, Bill Mill, Sophia Wisdom, and Finbarr Timbers for comments/corrections/discussion.</em></p>   </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Stonelifting Etiquette (168 pts)]]></title>
            <link>https://liftingstones.org/articles/stonelifting-etiquette</link>
            <guid>39439986</guid>
            <pubDate>Tue, 20 Feb 2024 11:19:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://liftingstones.org/articles/stonelifting-etiquette">https://liftingstones.org/articles/stonelifting-etiquette</a>, See on <a href="https://news.ycombinator.com/item?id=39439986">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <article>
    <nav>
      <ol>
        <li>
          <p>
            <a href="https://liftingstones.org/">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
              </svg>
              <span>Home</span>
            </a>
          </p>
        </li>
        <li>
          
        </li>
        <li>
          
        </li>
      </ol>
    </nav>
    
    

<p>Stonelifting is unlike most other physical activities. 
And although stonelifting has gotten more popular over recent years, it’s still <em>very</em> niche. 
Therefore, many people don’t know the general stonelifting etiquette or even that there’s etiquette at all.</p>

<figure>
  <img src="https://liftingstones.org/assets/images/tamotsu-stone.jpg" alt="David 'Tamotsu' Dunlap cleans dirt from a stone." loading="lazy">
  <figcaption>Cleaning dirt from a stone. — Image: <a href="https://youtu.be/xBj0L8GkmWM">David "Tamotsu" Dunlap</a>.</figcaption>
</figure>

<p>Most stonelifters have a background in strength sports like strongman or powerlifting. 
So they understand the gym etiquette that is deeply rooted in physical culture — like replacing weights, keeping equipment clean, and not curling in the squat rack.</p>

<p>Mountaineers also have a deeply ingrained code that you may have heard before:</p>

<blockquote>
  <p>Take nothing but pictures, leave nothing but footprints, kill nothing but time.</p>
</blockquote>

<p>Stonelifting’s etiquette is akin to both gym etiquette <em>and</em> mountaineering etiquette.
It’s about responsibility and respect for the stones and the land they sit on.
You must be aware of it and understand it before attempting to lift any historic stones.</p>

<h2 id="do-your-research">Do your research</h2>

<p>Stonelifting is a great activity. But nothing compares to stonelifting when 
you understand the history and culture behind the stone you’re lifting.</p>

<p>Going in with a surface-level understanding is the biggest disservice you’ll do to yourself.
Don’t dive into a stonelifting tour with no knowledge just because you saw someone else lift them.
Figure out <em>why</em> you’re lifting the stone and why the stone is there — the meaning of it all.
Find your connection to the stones.</p>

<p>Research extends beyond the history and culture. Plan your trip. Make sure you’re able to 
lift the stones you want to lift. Some stones require permission, or a booking in 
the case of the <a href="https://liftingstones.org/articles/dinnie_stones">Dinnie Stones</a>. 
And some stones need to be returned in a specific way.</p>

<h2 id="get-permission">Get permission</h2>

<p>If a stone is kept by someone, or if it’s on someone’s land, the first thing you should 
do before attempting to lift the stone is to ask for permission.
It’s best to contact them ahead of time to save you any disappointment if the stone 
isn’t available to lift.</p>

<p>Not only is it just polite, but many people who look after these historic stones
love to meet lifters. Some help out, offer advice, and 
ask you to sign a guestbook as a historic record of your attempt.</p>

<h2 id="no-tacky">No tacky</h2>

<p>Most people’s introduction to stonelifting is via Strongman and <a href="https://liftingstones.org/articles/atlas-stones">Atlas Stones</a>.</p>

<p>Strongmen use tacky (a glue-like product) on their hands and forearms to stick to 
Atlas Stones so that they can worry less about their grip. 
If you’ve ever used tacky, you’ll know it is challenging to remove, not only from 
yourself but also from the Atlas Stone and anything else you touch.</p>

<p>Tacky is <strong>not allowed</strong> when lifting natural stones. Ever. 
A significant part of natural stonelifting is reading the stone and figuring out the best way to grip it. 
Not only does using the tacky affect that part of lifting, but it also contaminates the stone.</p>

<p>Chalk, on the other hand, is acceptable to use.
But you should avoid dyed chalks and chalks containing ingredients other than magnesium carbonate.</p>

<h2 id="dont-drop-the-stone">Don’t drop the stone</h2>

<p>Dropping the stone is the most common faux pas from new stonelifters. They will 
post a video of their first historic stone lift, showing their accomplishment. 
Disappointingly, the video ends with them dropping the stone from shoulder height
directly to the ground.</p>

<p>There have been instances where historic stones have been dropped and <strong>destroyed</strong>, 
as was the case with the Wallace Putting Stone.</p>

<p>Sadly, it means that people’s carelessness has significant consequences. It’s not like
accidentally bending a barbell — you can replace barbells. 
That’s not the case with natural stones.
If you destroy a stone, it’s gone forever, lost to history.</p>

<p><strong><em>You must not drop the stone.</em></strong></p>

<p>When training to lift stones, you should practise the eccentric portion of the lift
to carefully lower the stone down to the ground.</p>

<p>Some stonelifters carry <a href="https://mirafit.co.uk/mirafit-weightlifting-drop-pads-gen-2.html">pads</a>
with them for extra care and safety, not as a crutch, but as an additional 
supplement to the careful lowering of the stone.</p>

<h2 id="return-the-stone">Return the stone</h2>

<p>Much like returning weights to the weight tree in the gym, you must return stones
to their resting position. This allows lifters to find the stones easily 
and stops stones from gradually moving further away from their original location.</p>

<p>Take the <a href="https://liftingstones.org/articles/barevan_stone">Barevan Stone</a>, for example. It sits next to 
a stone coffin. Lifters move the stone away from the coffin when they 
lift it to reduce the risk of damage. 
Once the lifter finshes lifting, they return the stone next to the coffin, ready 
for the stone’s next visitors.</p>

<p>For plinth stones, the stone is <em>generally</em> placed next to the plinth, like 
the <a href="https://liftingstones.org/articles/saddlin_mare">Saddlin’ Mare</a> or the <a href="https://liftingstones.org/articles/puterach">Puterach</a>.
Once the lifter has finished lifting, they remove the stone from the plinth and 
place it next to it on the ground.
There are exceptions to this rule, however. So remember — do your research.</p>

<p>We try to keep up-to-date information about specific details for visiting and returning stones. 
Special considerations are noted in the stone’s article or on their <a href="https://liftingstones.org/map">map</a> pop-up notes.</p>

<h2 id="teach-others-the-etiquette">Teach others the etiquette</h2>

<p>Part of what makes the stonelifting community so incredible is the passion and the care 
people take to preserve and share stonelifting culture. 
We want to keep developing that culture instead of letting it disappear.</p>

<p>The only guaranteed way of preserving these stones is to stop people from lifting them.
And given that’s not something we want, the next best thing you can do to mitigate the
impact on the stones is education! So share your knowledge and teach others how 
to lift responsibly and respectfully.</p>

<h2 id="distilled-into-one-word">Distilled into one word</h2>

<p>If you could reduce stonelifting etiquette into one word, it would be <strong><em>respect</em></strong>.</p>

<ul>
  <li>Respect for the stone</li>
  <li>Respect for the keepers of the stones</li>
  <li>Respect for the land the stone sits on</li>
  <li>Respect for the lifters that came before you</li>
  <li>Respect for the lifters that will come after you</li>
  <li>Respect for the culture</li>
  <li>Respect for the history</li>
</ul>

<p>It is a <em>privilege</em> to be able to lift the same stones that people have lifted
for centuries. Do not take it for granted. 
As a stonelifter, it is your responsibility to preserve that.</p>

<h2 id="contributions">Contributions</h2>

<p>A special thanks to Jamie Gorrian and David Brodlie for reading drafts of this article.</p>

    

  </article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AI your home on street view (159 pts)]]></title>
            <link>https://googlemapsmania.blogspot.com/2024/02/ai-your-home-on-street-view.html</link>
            <guid>39439771</guid>
            <pubDate>Tue, 20 Feb 2024 10:48:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://googlemapsmania.blogspot.com/2024/02/ai-your-home-on-street-view.html">https://googlemapsmania.blogspot.com/2024/02/ai-your-home-on-street-view.html</a>, See on <a href="https://news.ycombinator.com/item?id=39439771">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-5866353824058369517">
<p><a href="https://www.panoramai.xyz/"><img alt="A Google Street View panorama altered by AI" data-original-height="675" data-original-width="1200" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiThAFiv8msH08sC477e2yFsek_Tg5Sh2TVvKusHBprarZMt87Rep_4OZREqAWnUJ9hHBnYqdcI3TDTCLIf_oMsZKIg4WNFJelXcDX29-jvn4KqLegQT8FnXFwjjxk6frgmOiIQsdizrz2lddi1hZLjeSa3I0rqzFd6wNwt9Q1PEzrBiTD7pfWG5A/s523/ezgif.com-animated-gif-maker.gif"></a></p>

<p>Have you ever wanted to radically alter the ambiance of your neighborhood? Perhaps you've always dreamed of turning your sleepy suburban road into a bustling inner-city street. Or maybe you've always wanted to dig up your nearby traffic heavy roads and replace them with green fields and trees. Well now you can - at least virtually.</p><p><a href="https://www.panoramai.xyz/"><span><b>Panoramai</b></span></a> is a new fun tool which allows you to grab Google Maps Street View panoramas from any location in the world and change their appearance based on your own AI prompts. For example the animated GIF above shows my childhood home re-imagined as a Vincent van Gogh painting, as a sc-fi landscape, a post-zombie apocalypse and under 3 feet of water.</p>

<p><a href="https://dutchcyclinglifestyle.com/"><img alt="The Street View of a London Street altered by AI to look more Dutch" data-original-height="523" data-original-width="523" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh7gwyCoQuKus4CyQpGKAlDQdS1cbbZkhnPexcb3g2NunlFGPTevAT-n-Ns2EVpIf64bzFN0j3gzalQmspxj4n-tQF4jiwkdtTx8f8rSvtiO8YW3fGlLXqxODE4ZylVHYRt6Osxr-UIXO3rrFfHbrrxEED5dhhEkebjmUuKU92nnTQEIeoZ8j5n2g/s523/ezgif-3-dc1dc65d54.gif"></a></p>

<p>You can also change the appearance of your home on Street View using the Netherlands Board of Tourism's <a href="https://dutchcyclinglifestyle.com/"><b><span>Dutch Cycling Lifestyle</span></b></a> map.</p><p>It is a matter of great sadness to the Dutch people that people in the rest of the world are not able to live in cycle-friendly environments. Therefore the Netherlands Board of Tourism decided to help the great car-worshiping unwashed picture the beauty of a car free environment. Enter your address into the Dutch Cycling Lifestyle and you can see how your street might look without that noisy road and those dirty cars.</p><p>Like Panoramia Dutch Cycling Lifestyle uses an AI to alter the Google Maps Street View image of your street - only in this case to make it a little more Dutch. The result is an imagined view of your road, looking a little greener and probably a lot more attractive.</p>

<p><a href="https://artsandculture.google.com/experiment/gQEd3RNgW2oxDg"><img alt="A Street View panorama decorated with virtual works of art" data-original-height="241" data-original-width="523" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhHOfMa2I1x4zSDMMvRzzU35ktVUBYjovgLZBvpzVHqwKRyDcp7NXlGgGNwo7RrHZ1qyffAo6nepCzYR267MUJuDIYB7zsxY2Oj172dKSQx7OtDfQ0dgl4ev21DFe3xrKWzPj7vbm16Qbgl4_6_MwIXYLfdGPXWvXRQ4qBy8DCwrL_d2JKDuZaR_g/s523/four.jpg"></a></p>

<p>Wait! There is even more fun to be had with Google Maps Street View. Thanks to <a href="https://artsandculture.google.com/experiment/gQEd3RNgW2oxDg"><b><span>Street Galleries</span></b></a>, you can also create your own virtual outdoors art gallery with Street View. Street Galleries is a Google Arts &amp; Culture project which allows you to decorate cities around the world on Google Maps Street View with works of art from some of the world's leading museums.</p><p>You can choose from one of ten locations in a number of the world's major cities. Once you have chosen a location, you can begin adding paintings to the Street View of that location. Pick a painting from the Google Arts &amp; Culture digital collections and you can hang it anywhere within your Street View panorama. You can move the painting around in the Street View, allowing you to hang the picture on a building, on the road or even just leave it hanging in mid-air.</p><p>Hat-tip: <a href="https://webcurios.co.uk/webcurios-16-02-24/"><b><span>Webcurios</span></b></a></p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Translating OpenStreetMap data to HTML5 Canvas with Rust and WebAssembly (227 pts)]]></title>
            <link>https://mary.codes/blog/programming/translating_openstreetmaps_to_HTML5_canvas_rust_wasm/</link>
            <guid>39439655</guid>
            <pubDate>Tue, 20 Feb 2024 10:28:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mary.codes/blog/programming/translating_openstreetmaps_to_HTML5_canvas_rust_wasm/">https://mary.codes/blog/programming/translating_openstreetmaps_to_HTML5_canvas_rust_wasm/</a>, See on <a href="https://news.ycombinator.com/item?id=39439655">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>Using the Overpass API to read OSM data, parsing the data with Rust, and then drawing the map onto HTML5 canvas.</p><div><p>I'm working on a revamp of an old project of mine called <a href="https://github.com/captainpainway/line-buddy">Line Buddy (github)</a>. It used a now-deprecated API library called <a href="https://github.com/cubehouse/themeparks">themeparks (github)</a> and <a href="https://aframe.io/">A-Frame</a> to visually represent the wait times in the Disney World theme parks in 3D.</p>
<p>The original project used OpenStreetMap screenshots as the base, with columns representing the wait times. (They're all zero now since this version of the API no longer works.)</p>
<p><span>
      <a href="https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/e9bec/old-linebuddy.png" target="_blank" rel="noopener">
    <span></span>
  <picture>
          <source srcset="https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/f51c2/old-linebuddy.webp 148w,
https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/66888/old-linebuddy.webp 295w,
https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/bc8a3/old-linebuddy.webp 590w,
https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/4ce34/old-linebuddy.webp 885w,
https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/f490a/old-linebuddy.webp 1180w,
https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/f98dc/old-linebuddy.webp 1392w" sizes="(max-width: 590px) 100vw, 590px" type="image/webp">
          <source srcset="https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/c5084/old-linebuddy.png 148w,
https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/60cc9/old-linebuddy.png 295w,
https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/6d370/old-linebuddy.png 590w,
https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/540ae/old-linebuddy.png 885w,
https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/2561a/old-linebuddy.png 1180w,
https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/e9bec/old-linebuddy.png 1392w" sizes="(max-width: 590px) 100vw, 590px" type="image/png">
          <img src="https://mary.codes/static/b5dc3177f681dee9e6632689eec7a22d/6d370/old-linebuddy.png" alt="Original version of the project" title="" loading="lazy" decoding="async">
        </picture>
  </a>
    </span></p>
<p>My plan is to use OpenStreetMap data to create a simplified version of the map. Eventually, I'll create the map in 3D. As a proof of concept, however, I'm going to draw to an HTML5 canvas first. I want to make sure that I'm able to get the data that I need, process it, and use it to create my own maps.</p>
<h3 id="table-of-contents"><a href="#table-of-contents" aria-label="table of contents permalink"></a>Table of Contents</h3>
<ul>
<li><a href="#setting-up-the-project">Setting up the project</a></li>
<li><a href="#creating-a-new-project-with-wasm-pack">Creating a new project with wasm-pack</a></li>
<li><a href="#building-and-testing-wasm-code">Building and testing WASM code</a></li>
<li><a href="#getting-map-coordinates">Getting map coordinates</a></li>
<li><a href="#calling-the-overpass-api">Calling the Overpass API</a></li>
<li><a href="#writing-the-rust-code">Writing the Rust code</a></li>
<li><a href="#drawing-on-the-canvas">Drawing on the canvas</a></li>
<li><a href="#processing-ways-and-relations">Processing ways and relations</a></li>
<li><a href="#drawing-all-of-the-other-map-areas">Drawing all of the other map areas</a></li>
<li><a href="#the-finished-map">The finished map</a></li>
</ul>
<h3 id="setting-up-the-project"><a href="#setting-up-the-project" aria-label="setting up the project permalink"></a>Setting up the project</h3>
<p>I'm not going to use any sort of JavaScript library for this first experiment. I set up a basic HTML page inside of a directory, and I'm adding CSS and JavaScript directly to this page. A very simple setup because all I need the JavaScript to do is call the WASM code and draw to a canvas.</p>
<div data-language="html"><pre><code><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span><span>&gt;</span></span>
<span><span><span>&lt;</span>html</span> <span>lang</span><span><span>=</span><span>"</span>en<span>"</span></span><span>&gt;</span></span>
  <span><span><span>&lt;</span>head</span><span>&gt;</span></span>
  <span><span><span>&lt;</span>meta</span> <span>charset</span><span><span>=</span><span>"</span>UTF-8<span>"</span></span><span>&gt;</span></span>
  <span><span><span>&lt;</span>title</span><span>&gt;</span></span>OSM Maps<span><span><span>&lt;/</span>title</span><span>&gt;</span></span>
<span><span><span>&lt;</span>style</span><span>&gt;</span></span><span><span>
  <span>body</span> <span>{</span>
      <span>margin</span><span>:</span> 0<span>;</span>
      <span>padding</span><span>:</span> 0<span>;</span>
      <span>height</span><span>:</span> 100%<span>;</span>
      <span>width</span><span>:</span> 100%<span>;</span>
    <span>}</span>
</span></span><span><span><span>&lt;/</span>style</span><span>&gt;</span></span>
<span><span><span>&lt;/</span>head</span><span>&gt;</span></span>
<span><span><span>&lt;</span>body</span><span>&gt;</span></span>
  <span><span><span>&lt;</span>canvas</span> <span>id</span><span><span>=</span><span>"</span>canvas<span>"</span></span><span>&gt;</span></span><span><span><span>&lt;/</span>canvas</span><span>&gt;</span></span>
  <span><span><span>&lt;</span>script</span> <span>type</span><span><span>=</span><span>"</span>module<span>"</span></span><span>&gt;</span></span><span></span><span><span><span>&lt;/</span>script</span><span>&gt;</span></span>
<span><span><span>&lt;/</span>body</span><span>&gt;</span></span>
<span><span><span>&lt;/</span>html</span><span>&gt;</span></span></code></pre></div>
<p>Most of the heavy lifting for the OSM data processing will be taken care of by Rust. While I haven't performed any benchmarks about whether Rust or JavaScript processing is faster, I decided to use Rust and WebAssembly because there will be a lot of coordinates to process, and Rust generally performs faster at large amounts of data processing.</p>
<h3 id="creating-a-new-project-with-wasm-pack"><a href="#creating-a-new-project-with-wasm-pack" aria-label="creating a new project with wasm pack permalink"></a>Creating a new project with wasm-pack</h3>
<p>I decided to use <a href="https://rustwasm.github.io/wasm-pack/installer/">wasm-pack</a> to create a Rust library that will then be used by my client-side JavaScript. While I already had wasm-pack installed, I re-ran the installer because my installed version of wasm-pack was extremely out of date.</p>
<p>Creating a new wasm-pack project is easy. Instead of my normal workflow of using <code>cargo new process-maps</code> to create my new Rust project, I used <code>wasm-pack new process-maps</code>. This creates a new Rust project that is optimized for creating WASM files.</p>
<p>I created this project inside the same directory as my HTML file. This is because I want to be able to easily call the WASM code from my HTML file.</p>
<h3 id="building-and-testing-wasm-code"><a href="#building-and-testing-wasm-code" aria-label="building and testing wasm code permalink"></a>Building and testing WASM code</h3>
<p>When I open up the <code>lib.rs</code> file generated by the wasm-pack tool, I see that it already contains some minimal code that will display an alert whenever the <code>greet()</code> function is called from JavaScript. There's a line-by-line explanation of this file at <a href="https://rustwasm.github.io/docs/wasm-pack/tutorials/npm-browser-packages/template-deep-dive/src-lib-rs.html">https://rustwasm.github.io/docs/wasm-pack/tutorials/npm-browser-packages/template-deep-dive/src-lib-rs.html</a>.</p>
<div data-language="rust"><pre><code><span>mod</span> <span>utils</span><span>;</span>

<span>use</span> <span>wasm_bindgen<span>::</span>prelude<span>::</span></span><span>*</span><span>;</span>

<span>#[wasm_bindgen]</span>
<span>extern</span> <span>"C"</span> <span>{</span>
    <span>fn</span> <span>alert</span><span>(</span>s<span>:</span> <span>&amp;</span><span>str</span><span>)</span><span>;</span>
<span>}</span>

<span>#[wasm_bindgen]</span>
<span>pub</span> <span>fn</span> <span>greet</span><span>(</span><span>)</span> <span>{</span>
    <span>alert</span><span>(</span><span>"Hello, process-maps!"</span><span>)</span><span>;</span>
<span>}</span></code></pre></div>
<p>I am going to compile this code and import it into my HTML file.</p>
<div data-language="bash"><pre><code>wasm-pack build <span>--target</span> web <span>--dev</span></code></pre></div>
<p>This creates a development build of my Rust code. Running the command without <code>--dev</code> will compile a production release, which is slower but optimized. I'm targeting "web" since I'm not using any sort of bundler or webpack in my project.</p>
<p>Under the canvas tag in my HTML file, I'm going to import the WASM code and call the <code>greet</code> function.</p>
<div data-language="html"><pre><code><span><span><span>&lt;</span>script</span> <span>type</span><span><span>=</span><span>"</span>module<span>"</span></span><span>&gt;</span></span><span><span>
  <span>import</span> init<span>,</span> <span>{</span> greet <span>}</span> <span>from</span> <span>'./process-maps/pkg/process_maps.js'</span><span>;</span>

  <span>async</span> <span>function</span> <span>run</span><span>(</span><span>)</span> <span>{</span>
    <span>await</span> <span>init</span><span>(</span><span>)</span><span>;</span>
    <span>greet</span><span>(</span><span>)</span><span>;</span>
  <span>}</span>

  <span>run</span><span>(</span><span>)</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>&gt;</span></span></code></pre></div>
<p>When I open my HTML file in a browser, I see an alert that says "Hello, process-maps!" This means that my WASM code is working and I can start writing the code to process the OSM data.</p>
<h3 id="getting-map-coordinates"><a href="#getting-map-coordinates" aria-label="getting map coordinates permalink"></a>Getting map coordinates</h3>
<p>Before I can write any Rust code, I need to get the coordinates for a location. In this case, I want to get the coordinates for the different Disney World parks.</p>
<p>Because I want to pick a very specific area of the map, I will navigate to <a href="https://www.openstreetmap.org/">openstreetmap.org</a> and search for the locations I want to map. Then, I'll click the "Export" button. In the Export sidebar, I'll click "Manually select a different area".</p>
<p><span>
      <a href="https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/b0464/osm_magic_kingdom.png" target="_blank" rel="noopener">
    <span></span>
  <picture>
          <source srcset="https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/f51c2/osm_magic_kingdom.webp 148w,
https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/66888/osm_magic_kingdom.webp 295w,
https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/bc8a3/osm_magic_kingdom.webp 590w,
https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/4ce34/osm_magic_kingdom.webp 885w,
https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/f490a/osm_magic_kingdom.webp 1180w,
https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/d8c84/osm_magic_kingdom.webp 1852w" sizes="(max-width: 590px) 100vw, 590px" type="image/webp">
          <source srcset="https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/c5084/osm_magic_kingdom.png 148w,
https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/60cc9/osm_magic_kingdom.png 295w,
https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/6d370/osm_magic_kingdom.png 590w,
https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/540ae/osm_magic_kingdom.png 885w,
https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/2561a/osm_magic_kingdom.png 1180w,
https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/b0464/osm_magic_kingdom.png 1852w" sizes="(max-width: 590px) 100vw, 590px" type="image/png">
          <img src="https://mary.codes/static/803704ed1ee35c3f328da61de41ddfd9/6d370/osm_magic_kingdom.png" alt="OSM Magic Kingdom" title="" loading="lazy" decoding="async">
        </picture>
  </a>
    </span></p>
<p>Once I have the area cropped, I'm going to add the coordinates to my code. Since I'm going to be creating maps of all the Disney parks, I'm using query parameters to differentiate between which park map to draw.</p>
<div data-language="javascript"><pre><code><span>const</span> queryString <span>=</span> window<span>.</span>location<span>.</span>search<span>;</span>
<span>const</span> searchParams <span>=</span> <span>new</span> <span>URLSearchParams</span><span>(</span>queryString<span>)</span><span>;</span>
<span>let</span> park <span>=</span> searchParams<span>.</span><span>get</span><span>(</span><span>'park'</span><span>)</span><span>;</span>
<span>let</span> n<span>,</span> w<span>,</span> s<span>,</span> e<span>;</span>

<span>switch</span> <span>(</span>park<span>)</span> <span>{</span>
  <span>case</span> <span>'epcot'</span><span>:</span>
    n <span>=</span> <span>28.3768</span><span>;</span>
    w <span>=</span> <span>-</span><span>81.5553</span><span>;</span>
    s <span>=</span> <span>28.3661</span><span>;</span>
    e <span>=</span> <span>-</span><span>81.5425</span><span>;</span>
    <span>break</span><span>;</span>
  <span>case</span> <span>'hollywood_studios'</span><span>:</span>
  <span>case</span> <span>'hs'</span><span>:</span>
    n <span>=</span> <span>28.3625</span><span>;</span>
    w <span>=</span> <span>-</span><span>81.5641</span><span>;</span>
    s <span>=</span> <span>28.3523</span><span>;</span>
    e <span>=</span> <span>-</span><span>81.5561</span><span>;</span>
    <span>break</span><span>;</span>
  <span>case</span> <span>'animal_kingdom'</span><span>:</span>
  <span>case</span> <span>'ak'</span><span>:</span>
    n <span>=</span> <span>28.3692</span><span>;</span>
    w <span>=</span> <span>-</span><span>81.5984</span><span>;</span>
    s <span>=</span> <span>28.3524</span><span>;</span>
    e <span>=</span> <span>-</span><span>81.5831</span><span>;</span>
    <span>break</span><span>;</span>
  <span>case</span> <span>'magic_kingdom'</span><span>:</span>
  <span>case</span> <span>'mk'</span><span>:</span>
  <span>default</span><span>:</span>
    n <span>=</span> <span>28.42266</span><span>;</span>
    w <span>=</span> <span>-</span><span>81.58586</span><span>;</span>
    s <span>=</span> <span>28.41604</span><span>;</span>
    e <span>=</span> <span>-</span><span>81.57600</span><span>;</span>
    <span>break</span><span>;</span>
<span>}</span></code></pre></div>
<h3 id="calling-the-overpass-api"><a href="#calling-the-overpass-api" aria-label="calling the overpass api permalink"></a>Calling the Overpass API</h3>
<p>OpenStreetMap's public API is called the <a href="https://wiki.openstreetmap.org/wiki/Overpass_API">Overpass API</a>. It has an interesting query language that I'm not totally sure I understand, but I was able to create some queries that return the data I need.</p>
<p>Below, I have created query strings for all of the map items I need: walkways, gardens, water, and buildings. Below that, I'm fetching the data for walkways.</p>
<div data-language="javascript"><pre><code><span>// The bounding box is described with the south, west, north, and east coordinates, in that order.</span>
<span>let</span> bbox <span>=</span> <span><span>`</span><span><span>${</span>s<span>}</span></span><span>,</span><span><span>${</span>w<span>}</span></span><span>,</span><span><span>${</span>n<span>}</span></span><span>,</span><span><span>${</span>e<span>}</span></span><span>`</span></span><span>;</span>
<span>// Queries for each map type.</span>
<span>let</span> buildings <span>=</span> <span><span>`</span><span>way[building][!name];foreach{(._;&gt;;);out;}</span><span>`</span></span><span>;</span>
<span>let</span> named_buildings <span>=</span> <span><span>`</span><span>way[building][name];foreach{(._;&gt;;);out;}</span><span>`</span></span><span>;</span>
<span>let</span> walkways <span>=</span> <span><span>`</span><span>way[highway];foreach{(._;&gt;;);out;}</span><span>`</span></span><span>;</span>
<span>let</span> trees <span>=</span> <span><span>`</span><span>node[natural=tree];foreach{(._;&gt;;);out;}</span><span>`</span></span><span>;</span>
<span>let</span> gardens <span>=</span> <span><span>`</span><span>(way[leisure=garden];way[landuse=forest];way[landuse=meadow];);foreach{(._;&gt;;);out;}</span><span>`</span></span><span>;</span>
<span>let</span> water <span>=</span> <span><span>`</span><span>relation[natural=water];foreach{(._;&gt;;);out;}</span><span>`</span></span><span>;</span>
<span>// Sets the timeout and bounding box.</span>
<span>let</span> query <span>=</span> <span><span>`</span><span>[timeout:90][bbox:</span><span><span>${</span>bbox<span>}</span></span><span>];</span><span>`</span></span><span>;</span>

<span>let</span> url <span>=</span> <span><span>`</span><span>https://overpass-api.de/api/interpreter?data=</span><span><span>${</span>query<span>}</span></span><span>`</span></span><span>;</span>


<span>function</span> <span>getWalkways</span><span>(</span><span>url</span><span>)</span> <span>{</span>
  <span>fetch</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span><span>${</span>walkways<span>}</span></span><span>;out;</span><span>`</span></span><span>)</span><span>.</span><span>then</span><span>(</span><span>response</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> response<span>.</span><span>text</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>data</span> <span>=&gt;</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span>data<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span></code></pre></div>
<p>The response in the console should look somewhat like this, a long XML document with coordinates.</p>
<p><span>
      <a href="https://mary.codes/static/da5ac250a567827e56bf8b2d722f42ff/97114/overpass-api-response.png" target="_blank" rel="noopener">
    <span></span>
  <picture>
          <source srcset="https://mary.codes/static/da5ac250a567827e56bf8b2d722f42ff/f51c2/overpass-api-response.webp 148w,
https://mary.codes/static/da5ac250a567827e56bf8b2d722f42ff/66888/overpass-api-response.webp 295w,
https://mary.codes/static/da5ac250a567827e56bf8b2d722f42ff/bc8a3/overpass-api-response.webp 590w,
https://mary.codes/static/da5ac250a567827e56bf8b2d722f42ff/ffce4/overpass-api-response.webp 690w" sizes="(max-width: 590px) 100vw, 590px" type="image/webp">
          <source srcset="https://mary.codes/static/da5ac250a567827e56bf8b2d722f42ff/c5084/overpass-api-response.png 148w,
https://mary.codes/static/da5ac250a567827e56bf8b2d722f42ff/60cc9/overpass-api-response.png 295w,
https://mary.codes/static/da5ac250a567827e56bf8b2d722f42ff/6d370/overpass-api-response.png 590w,
https://mary.codes/static/da5ac250a567827e56bf8b2d722f42ff/97114/overpass-api-response.png 690w" sizes="(max-width: 590px) 100vw, 590px" type="image/png">
          <img src="https://mary.codes/static/da5ac250a567827e56bf8b2d722f42ff/6d370/overpass-api-response.png" alt="Overpass API response" title="" loading="lazy" decoding="async">
        </picture>
  </a>
    </span></p>
<p>I'm going to send these coordinates to my Rust code, which will parse the XML file and return coordinates that I'll then be able to map to the canvas.</p>
<h3 id="writing-the-rust-code"><a href="#writing-the-rust-code" aria-label="writing the rust code permalink"></a>Writing the Rust code</h3>
<p>To parse the XML file, I'm using a crate called <a href="https://crates.io/crates/osm-xml/0.6.2">osm-xml</a>. It abstracts away the hard parts of parsing the OSM data. I tried doing it without this crate and trust me, it's very difficult.</p>
<p>I'm adding osm-xml and js-sys to my Cargo.toml. The crate js-sys provides interop data structures for JavaScript.</p>
<div data-language="toml"><pre><code><span>[</span><span>dependencies</span><span>]</span>
<span>wasm-bindgen</span> <span>=</span> <span>"0.2.84"</span>
<span>console_error_panic_hook</span> <span>=</span> <span>{</span> <span>version</span> <span>=</span> <span>"0.1.7"</span><span>,</span> <span>optional</span> <span>=</span> <span>true</span> <span>}</span>
<span>osm-xml</span> <span>=</span> <span>"0.6.2"</span>
<span>js-sys</span> <span>=</span> <span>"0.3.67"</span></code></pre></div>
<p>OSM data can be thought of as three different types. There's nodes, which are discrete coordinates. The query for trees searches for nodes. Ways are polygons that are created from nodes, so processing a way requires processing the information for the way, and then the nodes. Buildings, walkways, and gardens are ways. Finally, there are relations, which are made of multiple ways. Water is a relation because there can be islands within the water. Any time there might need to be holes cut within a larger polygon, it will be a relation.</p>
<p>Since nodes are the easiest to parse, I'm starting with processing the nodes first, then the ways, then relations.</p>
<p>First, I'm going to turn my "greet" function into a log function. This way, I'll be able to log output to the JS console.</p>
<div data-language="rust"><pre><code><span>#[wasm_bindgen]</span>
<span>extern</span> <span>"C"</span> <span>{</span>
    <span>#[wasm_bindgen(js_namespace = console)]</span>
    <span>fn</span> <span>log</span><span>(</span>s<span>:</span> <span>&amp;</span><span>str</span><span>)</span><span>;</span>
<span>}</span></code></pre></div>
<p>Next, I'm passing the string provided by the API (in the fetch call I'm returning <code>response.text()</code>) to my WASM-bound function.</p>
<div data-language="rust"><pre><code><span>#[wasm_bindgen]</span>
<span>pub</span> <span>fn</span> <span>process_nodes</span><span>(</span>text<span>:</span> <span>String</span><span>)</span> <span>-&gt;</span> <span>js_sys<span>::</span></span><span>Array</span> <span>{</span>
    <span>// Parses the string into the OSM data structure.</span>
    <span>let</span> doc <span>=</span> <span>osm<span>::</span></span><span>OSM</span><span>::</span><span>parse</span><span>(</span>text<span>.</span><span>as_bytes</span><span>(</span><span>)</span><span>)</span><span>.</span><span>unwrap</span><span>(</span><span>)</span><span>;</span>
    <span>// Bounds are the min and max latitudes and longitudes of the map.</span>
    <span>let</span> bounds <span>=</span> doc<span>.</span>bounds<span>.</span><span>unwrap</span><span>(</span><span>)</span><span>;</span>
    <span>// New JS array that will be returned.</span>
    <span>let</span> arr <span>=</span> <span>js_sys<span>::</span></span><span>Array</span><span>::</span><span>new</span><span>(</span><span>)</span><span>;</span>
    <span>// Iterate over the nodes found in the document.</span>
    <span>// Each node should be the location of a tree.</span>
    <span>for</span> <span>(</span>_id<span>,</span> node<span>)</span> <span>in</span> doc<span>.</span>nodes<span>.</span><span>iter</span><span>(</span><span>)</span> <span>{</span>
        <span>// The nodes will be processed and pushed to the JS array,</span>
        <span>// but for now, just logging out the data.</span>
        <span>log</span><span>(</span><span>&amp;</span><span>format!</span><span>(</span><span>"{} {}"</span><span>)</span><span>,</span> node<span>.</span>lat<span>,</span> node<span>.</span>lon<span>)</span><span>;</span>
    <span>}</span>
    arr
<span>}</span></code></pre></div>
<p>Now I have to call this function from JavaScript. I'll create a <code>getTrees</code> function that fetches data from the trees endpoint, then call the WASM <code>process_nodes</code> function.</p>
<div data-language="javascript"><pre><code><span>// First, update the import at the top of the script.</span>
<span>import</span> init<span>,</span> <span>{</span>process_nodes<span>}</span> <span>from</span> <span>'./process-maps/pkg/process_maps.js'</span><span>;</span>

<span>// Add getTrees to the bottom of the script.</span>
<span>function</span> <span>getTrees</span><span>(</span><span>url</span><span>)</span> <span>{</span>
  <span>fetch</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span><span>${</span>trees<span>}</span></span><span>;out;</span><span>`</span></span><span>)</span><span>.</span><span>then</span><span>(</span><span>response</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> response<span>.</span><span>text</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>data</span> <span>=&gt;</span> <span>{</span>
    <span>process_nodes</span><span>(</span>data<span>,</span> width<span>,</span> height<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span>
<span>getTrees</span><span>(</span>url<span>)</span><span>;</span></code></pre></div>
<p>After rebuilding the WASM code and refreshing the page, I see lists of coordinates in my developer console.</p>
<p><span>
      <a href="https://mary.codes/static/495151358d9754ac05bb54053c57a728/3c503/node-coords.png" target="_blank" rel="noopener">
    <span></span>
  <picture>
          <source srcset="https://mary.codes/static/495151358d9754ac05bb54053c57a728/f51c2/node-coords.webp 148w,
https://mary.codes/static/495151358d9754ac05bb54053c57a728/66888/node-coords.webp 295w,
https://mary.codes/static/495151358d9754ac05bb54053c57a728/bc8a3/node-coords.webp 590w,
https://mary.codes/static/495151358d9754ac05bb54053c57a728/fac04/node-coords.webp 677w" sizes="(max-width: 590px) 100vw, 590px" type="image/webp">
          <source srcset="https://mary.codes/static/495151358d9754ac05bb54053c57a728/c5084/node-coords.png 148w,
https://mary.codes/static/495151358d9754ac05bb54053c57a728/60cc9/node-coords.png 295w,
https://mary.codes/static/495151358d9754ac05bb54053c57a728/6d370/node-coords.png 590w,
https://mary.codes/static/495151358d9754ac05bb54053c57a728/3c503/node-coords.png 677w" sizes="(max-width: 590px) 100vw, 590px" type="image/png">
          <img src="https://mary.codes/static/495151358d9754ac05bb54053c57a728/6d370/node-coords.png" alt="Node coordinates" title="" loading="lazy" decoding="async">
        </picture>
  </a>
    </span></p>
<p>I can't just use raw coordinates to draw to a canvas, however. I need to convert the geographical coordinates to xy coordinates that will map to the size of my canvas.</p>
<p>First, I need a function that will take a single coordinate value and map it to the range of 0 to the width or height of the canvas.</p>
<div data-language="rust"><pre><code><span>// start1 and stop1 are the min and max map bounds that were unwrapped earlier.</span>
<span>// start2 and stop2 are the min and max values of the canvas.</span>
<span>fn</span> <span>map_points</span><span>(</span>value<span>:</span> <span>f64</span><span>,</span> start1<span>:</span> <span>f64</span><span>,</span> stop1<span>:</span> <span>f64</span><span>,</span> start2<span>:</span> <span>f64</span><span>,</span> stop2<span>:</span> <span>f64</span><span>)</span> <span>-&gt;</span> <span>f64</span> <span>{</span>
    <span>(</span><span>(</span>value <span>-</span> start1<span>)</span> <span>/</span> <span>(</span>stop1 <span>-</span> start1<span>)</span> <span>*</span> <span>(</span>stop2 <span>-</span> start2<span>)</span> <span>+</span> start2<span>)</span><span>.</span><span>floor</span><span>(</span><span>)</span>
<span>}</span></code></pre></div>
<p>Next, I need to create the x and y coordinates and wrap them in an array for export to my JavaScript.</p>
<div data-language="rust"><pre><code><span>fn</span> <span>process_points</span><span>(</span>node<span>:</span> <span>&amp;</span><span>osm<span>::</span></span><span>Node</span><span>,</span> bounds<span>:</span> <span>&amp;</span><span>osm<span>::</span></span><span>Bounds</span><span>,</span> width<span>:</span> <span>f64</span><span>,</span> height<span>:</span> <span>f64</span><span>)</span> <span>-&gt;</span> <span>js_sys<span>::</span></span><span>Array</span> <span>{</span>
    <span>let</span> y <span>=</span> <span>map_points</span><span>(</span>node<span>.</span>lat<span>,</span> bounds<span>.</span>minlat<span>,</span> bounds<span>.</span>maxlat<span>,</span> <span>0.0</span><span>,</span> width<span>)</span><span>;</span>
    <span>let</span> x <span>=</span> <span>map_points</span><span>(</span>node<span>.</span>lon<span>,</span> bounds<span>.</span>minlon<span>,</span> bounds<span>.</span>maxlon<span>,</span> <span>0.0</span><span>,</span> height<span>)</span><span>;</span>
    <span>let</span> point <span>=</span> <span>js_sys<span>::</span></span><span>Array</span><span>::</span><span>new</span><span>(</span><span>)</span><span>;</span>
    <span>// Numbers being sent to JavaScript must be transformed into a JsValue.</span>
    point<span>.</span><span>push</span><span>(</span><span>&amp;</span><span>JsValue</span><span>::</span><span>from_f64</span><span>(</span>x<span>)</span><span>)</span><span>;</span>
    point<span>.</span><span>push</span><span>(</span><span>&amp;</span><span>JsValue</span><span>::</span><span>from_f64</span><span>(</span>y<span>)</span><span>)</span><span>;</span>
    point
<span>}</span></code></pre></div>
<p>Finally, I can add a call to <code>process_points</code> from my <code>process_nodes</code> function.</p>
<div data-language="rust"><pre><code><span>#[wasm_bindgen]</span>
<span>pub</span> <span>fn</span> <span>process_nodes</span><span>(</span>text<span>:</span> <span>String</span><span>,</span> width<span>:</span> <span>f64</span><span>,</span> height<span>:</span> <span>f64</span><span>)</span> <span>-&gt;</span> <span>js_sys<span>::</span></span><span>Array</span> <span>{</span>
    <span>let</span> doc <span>=</span> <span>osm<span>::</span></span><span>OSM</span><span>::</span><span>parse</span><span>(</span>text<span>.</span><span>as_bytes</span><span>(</span><span>)</span><span>)</span><span>.</span><span>unwrap</span><span>(</span><span>)</span><span>;</span>
    <span>let</span> bounds <span>=</span> doc<span>.</span>bounds<span>.</span><span>unwrap</span><span>(</span><span>)</span><span>;</span>
    <span>let</span> arr <span>=</span> <span>js_sys<span>::</span></span><span>Array</span><span>::</span><span>new</span><span>(</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span>_id<span>,</span> node<span>)</span> <span>in</span> doc<span>.</span>nodes<span>.</span><span>iter</span><span>(</span><span>)</span> <span>{</span>
        arr<span>.</span><span>push</span><span>(</span><span>&amp;</span><span>process_points</span><span>(</span>node<span>,</span> <span>&amp;</span>bounds<span>,</span> width<span>,</span> height<span>)</span><span>)</span><span>;</span>
    <span>}</span>
    arr
<span>}</span></code></pre></div>
<p>Now, calling this function from my JavaScript file should return an array of points. Since I'm actually returning an array, I can stop calling log from the Rust script, and I can call console.log from JavaScript.</p>
<div data-language="javascript"><pre><code><span>function</span> <span>getTrees</span><span>(</span><span>url</span><span>)</span> <span>{</span>
  <span>fetch</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span><span>${</span>trees<span>}</span></span><span>;out;</span><span>`</span></span><span>)</span><span>.</span><span>then</span><span>(</span><span>response</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> response<span>.</span><span>text</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>data</span> <span>=&gt;</span> <span>{</span>
    <span>let</span> p <span>=</span> <span>process_nodes</span><span>(</span>data<span>,</span> width<span>,</span> height<span>)</span><span>;</span>
    console<span>.</span><span>log</span><span>(</span>p<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span>
<span>getTrees</span><span>(</span>url<span>)</span><span>;</span></code></pre></div>
<p>This returns a large array of arrays with length 2. Each point corresponds to a point on the canvas.</p>
<p><span>
      <a href="https://mary.codes/static/e79d16342937af5a2bb7c01663886b05/64252/array-of-points.png" target="_blank" rel="noopener">
    <span></span>
  <picture>
          <source srcset="https://mary.codes/static/e79d16342937af5a2bb7c01663886b05/f51c2/array-of-points.webp 148w,
https://mary.codes/static/e79d16342937af5a2bb7c01663886b05/66888/array-of-points.webp 295w,
https://mary.codes/static/e79d16342937af5a2bb7c01663886b05/bc8a3/array-of-points.webp 590w,
https://mary.codes/static/e79d16342937af5a2bb7c01663886b05/9d172/array-of-points.webp 696w" sizes="(max-width: 590px) 100vw, 590px" type="image/webp">
          <source srcset="https://mary.codes/static/e79d16342937af5a2bb7c01663886b05/c5084/array-of-points.png 148w,
https://mary.codes/static/e79d16342937af5a2bb7c01663886b05/60cc9/array-of-points.png 295w,
https://mary.codes/static/e79d16342937af5a2bb7c01663886b05/6d370/array-of-points.png 590w,
https://mary.codes/static/e79d16342937af5a2bb7c01663886b05/64252/array-of-points.png 696w" sizes="(max-width: 590px) 100vw, 590px" type="image/png">
          <img src="https://mary.codes/static/e79d16342937af5a2bb7c01663886b05/6d370/array-of-points.png" alt="Array of points" title="" loading="lazy" decoding="async">
        </picture>
  </a>
    </span></p>
<h3 id="drawing-on-the-canvas"><a href="#drawing-on-the-canvas" aria-label="drawing on the canvas permalink"></a>Drawing on the canvas</h3>
<p>Now that there are point coordinates, they can be drawn to the canvas itself. First, I need to prepare the canvas for drawing.</p>
<div data-language="javascript"><pre><code><span>let</span> canvas <span>=</span> document<span>.</span><span>getElementById</span><span>(</span><span>'canvas'</span><span>)</span><span>;</span>
<span>let</span> ratio <span>=</span> <span>(</span>Math<span>.</span><span>abs</span><span>(</span>w<span>)</span> <span>-</span> Math<span>.</span><span>abs</span><span>(</span>e<span>)</span><span>)</span> <span>/</span> <span>(</span>n <span>-</span> s<span>)</span><span>;</span>
<span>let</span> width <span>=</span> <span>1800</span><span>;</span>
<span>let</span> height <span>=</span> width <span>*</span> ratio<span>;</span>
canvas<span>.</span>width <span>=</span> height<span>;</span>
canvas<span>.</span>height <span>=</span> width<span>;</span>

<span>let</span> ctx <span>=</span> canvas<span>.</span><span>getContext</span><span>(</span><span>'2d'</span><span>)</span><span>;</span>
ctx<span>.</span><span>translate</span><span>(</span><span>0</span><span>,</span> width<span>)</span><span>;</span>
ctx<span>.</span><span>scale</span><span>(</span><span>1</span><span>,</span> <span>-</span><span>1</span><span>)</span><span>;</span>
ctx<span>.</span>fillStyle <span>=</span> <span>'#ffffff'</span><span>;</span>
ctx<span>.</span><span>fillRect</span><span>(</span><span>0</span><span>,</span> <span>0</span><span>,</span> height<span>,</span> width<span>)</span><span>;</span></code></pre></div>
<p>I had to do some rotating and flipping of the canvas to get the map to draw in the correct direction. Perhaps this is a problem with my coordinate mapping, or some other issue, but this seems to fix it. Next, I have to get the processed tree coordinates, and once those are available, draw the trees to the canvas.</p>
<div data-language="javascript"><pre><code><span>const</span> tree_data <span>=</span> <span>getTrees</span><span>(</span>url<span>)</span><span>;</span> <span>// Returns the processed coordinates.</span>

<span>// Waits for all functions to resolve.</span>
<span>// Right now, it's just the getTrees function.</span>
Promise<span>.</span><span>all</span><span>(</span><span>[</span>tree_data<span>]</span><span>)</span><span>.</span><span>then</span><span>(</span><span>values</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> <span>[</span>trees<span>]</span> <span>=</span> values<span>;</span>
  <span>for</span> <span>(</span><span>let</span> tree <span>of</span> trees<span>)</span> <span>{</span>
    ctx<span>.</span><span>beginPath</span><span>(</span><span>)</span><span>;</span>
    ctx<span>.</span><span>arc</span><span>(</span>tree<span>[</span><span>0</span><span>]</span><span>,</span> tree<span>[</span><span>1</span><span>]</span><span>,</span> <span>3</span><span>,</span> <span>0</span><span>,</span> <span>2</span> <span>*</span> Math<span>.</span><span>PI</span><span>)</span><span>;</span>
    ctx<span>.</span>fillStyle <span>=</span> <span>'rgb(40,107,83)'</span><span>;</span>
    ctx<span>.</span><span>fill</span><span>(</span><span>)</span><span>;</span>
    ctx<span>.</span><span>closePath</span><span>(</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>)</span><span>;</span>

<span>// Updated this function to return the fetched and processed data.</span>
<span>function</span> <span>getTrees</span><span>(</span><span>url</span><span>)</span> <span>{</span>
  <span>return</span> <span>fetch</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span><span>${</span>trees<span>}</span></span><span>;out;</span><span>`</span></span><span>)</span><span>.</span><span>then</span><span>(</span><span>response</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> response<span>.</span><span>text</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>data</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> <span>process_nodes</span><span>(</span>data<span>,</span> width<span>,</span> height<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span></code></pre></div>
<p>All the trees should now be drawn to the canvas.</p>
<p><span>
      <a href="https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/065ce/mk_canvas_trees.png" target="_blank" rel="noopener">
    <span></span>
  <picture>
          <source srcset="https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/f51c2/mk_canvas_trees.webp 148w,
https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/66888/mk_canvas_trees.webp 295w,
https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/bc8a3/mk_canvas_trees.webp 590w,
https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/4ce34/mk_canvas_trees.webp 885w,
https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/f490a/mk_canvas_trees.webp 1180w,
https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/f93c5/mk_canvas_trees.webp 2680w" sizes="(max-width: 590px) 100vw, 590px" type="image/webp">
          <source srcset="https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/c5084/mk_canvas_trees.png 148w,
https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/60cc9/mk_canvas_trees.png 295w,
https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/6d370/mk_canvas_trees.png 590w,
https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/540ae/mk_canvas_trees.png 885w,
https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/2561a/mk_canvas_trees.png 1180w,
https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/065ce/mk_canvas_trees.png 2680w" sizes="(max-width: 590px) 100vw, 590px" type="image/png">
          <img src="https://mary.codes/static/914742682bb55a5f120d64540a05b7ae/6d370/mk_canvas_trees.png" alt="Trees only" title="" loading="lazy" decoding="async">
        </picture>
  </a>
    </span></p>
<h3 id="processing-ways-and-relations"><a href="#processing-ways-and-relations" aria-label="processing ways and relations permalink"></a>Processing ways and relations</h3>
<p>To draw any other items to the map, I need to add the ability to process OpenStreetMap ways and relations to my Rust code. This is my initial code to extract ways from the OSM data. It's nearly identical to the <code>process_nodes</code> function, but I'll need to add another processing step.</p>
<div data-language="rust"><pre><code><span>#[wasm_bindgen]</span>
<span>pub</span> <span>fn</span> <span>process_ways</span><span>(</span>text<span>:</span> <span>String</span><span>,</span> width<span>:</span> <span>f64</span><span>,</span> height<span>:</span> <span>f64</span><span>)</span> <span>-&gt;</span> <span>js_sys<span>::</span></span><span>Array</span> <span>{</span>
    <span>let</span> doc <span>=</span> <span>osm<span>::</span></span><span>OSM</span><span>::</span><span>parse</span><span>(</span>text<span>.</span><span>as_bytes</span><span>(</span><span>)</span><span>)</span><span>.</span><span>unwrap</span><span>(</span><span>)</span><span>;</span>
    <span>let</span> bounds <span>=</span> doc<span>.</span>bounds<span>.</span><span>unwrap</span><span>(</span><span>)</span><span>;</span>
    <span>let</span> arr <span>=</span> <span>js_sys<span>::</span></span><span>Array</span><span>::</span><span>new</span><span>(</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span>_id<span>,</span> way<span>)</span> <span>in</span> doc<span>.</span>ways<span>.</span><span>iter</span><span>(</span><span>)</span> <span>{</span>
        <span>log</span><span>(</span><span>&amp;</span><span>format!</span><span>(</span><span>"{:?}"</span><span>,</span> way<span>)</span><span>)</span><span>;</span>
    <span>}</span>
    arr
<span>}</span></code></pre></div>
<p>Then, I import this function into my JavaScript code and call it.</p>
<div data-language="javascript"><pre><code><span>import</span> init<span>,</span> <span>{</span>process_nodes<span>,</span> process_ways<span>}</span> <span>from</span> <span>'./process-maps/pkg/process_maps.js'</span><span>;</span>

<span>const</span> walkway_data <span>=</span> <span>getWalkways</span><span>(</span>url<span>)</span><span>;</span>

<span>function</span> <span>getWalkways</span><span>(</span><span>url</span><span>)</span> <span>{</span>
  <span>return</span> <span>fetch</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span><span>${</span>walkways<span>}</span></span><span>;out;</span><span>`</span></span><span>)</span><span>.</span><span>then</span><span>(</span><span>response</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> response<span>.</span><span>text</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>data</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> <span>process_ways</span><span>(</span>data<span>,</span> width<span>,</span> height<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span></code></pre></div>
<p>Logging this out will return a "Way" object, which contains multiple nodes.</p>
<p><span>
      <a href="https://mary.codes/static/cab41503abf960d703b402af6016c1bd/11d18/ways-data.png" target="_blank" rel="noopener">
    <span></span>
  <picture>
          <source srcset="https://mary.codes/static/cab41503abf960d703b402af6016c1bd/f51c2/ways-data.webp 148w,
https://mary.codes/static/cab41503abf960d703b402af6016c1bd/66888/ways-data.webp 295w,
https://mary.codes/static/cab41503abf960d703b402af6016c1bd/7f45e/ways-data.webp 559w" sizes="(max-width: 559px) 100vw, 559px" type="image/webp">
          <source srcset="https://mary.codes/static/cab41503abf960d703b402af6016c1bd/c5084/ways-data.png 148w,
https://mary.codes/static/cab41503abf960d703b402af6016c1bd/60cc9/ways-data.png 295w,
https://mary.codes/static/cab41503abf960d703b402af6016c1bd/11d18/ways-data.png 559w" sizes="(max-width: 559px) 100vw, 559px" type="image/png">
          <img src="https://mary.codes/static/cab41503abf960d703b402af6016c1bd/11d18/ways-data.png" alt="Walkway data" title="" loading="lazy" decoding="async">
        </picture>
  </a>
    </span></p>
<p>Now, I need to write an additional function that will process each of the nodes in the way and create canvas coordinates.</p>
<div data-language="rust"><pre><code><span>fn</span> <span>process_coords</span><span>(</span>doc<span>:</span> <span>&amp;</span><span>osm<span>::</span></span><span>OSM</span><span>,</span> way<span>:</span> <span>&amp;</span><span>osm<span>::</span></span><span>Way</span><span>,</span> bounds<span>:</span> <span>&amp;</span><span>osm<span>::</span></span><span>Bounds</span><span>,</span> width<span>:</span> <span>f64</span><span>,</span> height<span>:</span> <span>f64</span><span>)</span> <span>-&gt;</span> <span>js_sys<span>::</span></span><span>Array</span> <span>{</span>
    <span>// Create an empty array to return the coordinates.</span>
    <span>let</span> coords <span>=</span> <span>js_sys<span>::</span></span><span>Array</span><span>::</span><span>new</span><span>(</span><span>)</span><span>;</span>
    <span>// Iterate over each of the nodes in the way.</span>
    <span>for</span> node <span>in</span> way<span>.</span>nodes<span>.</span><span>iter</span><span>(</span><span>)</span> <span>{</span>
        <span>// Finds the node by its ID number.</span>
        <span>let</span> n <span>=</span> <span>&amp;</span>doc<span>.</span><span>resolve_reference</span><span>(</span><span>&amp;</span>node<span>)</span><span>;</span>
        <span>// Matches the node by reference and then generates coordinates.</span>
        <span>match</span> n <span>{</span>
            <span>osm<span>::</span></span><span>Reference</span><span>::</span><span>Node</span><span>(</span>node<span>)</span> <span>=&gt;</span> <span>{</span>
                <span>let</span> point <span>=</span> <span>process_points</span><span>(</span>node<span>,</span> <span>&amp;</span>bounds<span>,</span> width<span>,</span> height<span>)</span><span>;</span>
                coords<span>.</span><span>push</span><span>(</span><span>&amp;</span>point<span>)</span><span>;</span>
            <span>}</span><span>,</span>
            _ <span>=&gt;</span> <span>{</span><span>}</span>
        <span>}</span>
    <span>}</span>
    coords
<span>}</span></code></pre></div>
<p>I need to call this function from <code>process_ways</code>.</p>
<div data-language="rust"><pre><code><span>#[wasm_bindgen]</span>
<span>pub</span> <span>fn</span> <span>process_ways</span><span>(</span>text<span>:</span> <span>String</span><span>,</span> width<span>:</span> <span>f64</span><span>,</span> height<span>:</span> <span>f64</span><span>)</span> <span>-&gt;</span> <span>js_sys<span>::</span></span><span>Array</span> <span>{</span>
    <span>let</span> doc <span>=</span> <span>osm<span>::</span></span><span>OSM</span><span>::</span><span>parse</span><span>(</span>text<span>.</span><span>as_bytes</span><span>(</span><span>)</span><span>)</span><span>.</span><span>unwrap</span><span>(</span><span>)</span><span>;</span>
    <span>let</span> bounds <span>=</span> doc<span>.</span>bounds<span>.</span><span>unwrap</span><span>(</span><span>)</span><span>;</span>
    <span>let</span> arr <span>=</span> <span>js_sys<span>::</span></span><span>Array</span><span>::</span><span>new</span><span>(</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span>_id<span>,</span> way<span>)</span> <span>in</span> doc<span>.</span>ways<span>.</span><span>iter</span><span>(</span><span>)</span> <span>{</span>
        arr<span>.</span><span>push</span><span>(</span><span>&amp;</span><span>process_coords</span><span>(</span><span>&amp;</span>doc<span>,</span> way<span>,</span> <span>&amp;</span>bounds<span>,</span> width<span>,</span> height<span>)</span><span>)</span><span>;</span>
    <span>}</span>
    arr
<span>}</span></code></pre></div>
<p>Logging the result out from JavaScript will return an array of all the walkways, broken down into coordinate pairs.</p>
<p><span>
      <a href="https://mary.codes/static/eeb63e642e6436466f0c9e157126d9ad/98c96/array-of-ways.png" target="_blank" rel="noopener">
    <span></span>
  <picture>
          <source srcset="https://mary.codes/static/eeb63e642e6436466f0c9e157126d9ad/f51c2/array-of-ways.webp 148w,
https://mary.codes/static/eeb63e642e6436466f0c9e157126d9ad/66888/array-of-ways.webp 295w,
https://mary.codes/static/eeb63e642e6436466f0c9e157126d9ad/fac4c/array-of-ways.webp 555w" sizes="(max-width: 555px) 100vw, 555px" type="image/webp">
          <source srcset="https://mary.codes/static/eeb63e642e6436466f0c9e157126d9ad/c5084/array-of-ways.png 148w,
https://mary.codes/static/eeb63e642e6436466f0c9e157126d9ad/60cc9/array-of-ways.png 295w,
https://mary.codes/static/eeb63e642e6436466f0c9e157126d9ad/98c96/array-of-ways.png 555w" sizes="(max-width: 555px) 100vw, 555px" type="image/png">
          <img src="https://mary.codes/static/eeb63e642e6436466f0c9e157126d9ad/98c96/array-of-ways.png" alt="Array of ways" title="" loading="lazy" decoding="async">
        </picture>
  </a>
    </span></p>
<p>Processing the relations (waterways, in the case of this map) requires a further breakdown step. Relations need to be mapped to ways, which are then mapped to nodes. When I process the ways, I'm only going to push the coordinates for the "outer" way to my array. The "inner" ways are cutout areas of the larger polygon. For my purposes, I'm going to draw the water first, then the land and everything else, so I really don't need to worry about the inner polygons. This cuts down on extra processing and drawing time.</p>
<div data-language="rust"><pre><code><span>#[wasm_bindgen]</span>
<span>pub</span> <span>fn</span> <span>process_relations</span><span>(</span>text<span>:</span> <span>String</span><span>,</span> width<span>:</span> <span>f64</span><span>,</span> height<span>:</span> <span>f64</span><span>)</span> <span>-&gt;</span> <span>js_sys<span>::</span></span><span>Array</span> <span>{</span>
    <span>let</span> doc <span>=</span> <span>osm<span>::</span></span><span>OSM</span><span>::</span><span>parse</span><span>(</span>text<span>.</span><span>as_bytes</span><span>(</span><span>)</span><span>)</span><span>.</span><span>unwrap</span><span>(</span><span>)</span><span>;</span>
    <span>let</span> bounds <span>=</span> doc<span>.</span>bounds<span>.</span><span>unwrap</span><span>(</span><span>)</span><span>;</span>
    <span>let</span> arr <span>=</span> <span>js_sys<span>::</span></span><span>Array</span><span>::</span><span>new</span><span>(</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span>_id<span>,</span> relation<span>)</span> <span>in</span> doc<span>.</span>relations<span>.</span><span>iter</span><span>(</span><span>)</span> <span>{</span>
        <span>for</span> member <span>in</span> relation<span>.</span>members<span>.</span><span>iter</span><span>(</span><span>)</span> <span>{</span>
            <span>match</span> member <span>{</span>
                <span>// Matching ways within the relation.</span>
                <span>osm<span>::</span></span><span>Member</span><span>::</span><span>Way</span><span>(</span>way<span>,</span> t<span>)</span> <span>=&gt;</span> <span>{</span>
                    <span>let</span> w <span>=</span> <span>&amp;</span>doc<span>.</span><span>resolve_reference</span><span>(</span><span>&amp;</span>way<span>)</span><span>;</span>
                    <span>match</span> w <span>{</span>
                        <span>osm<span>::</span></span><span>Reference</span><span>::</span><span>Way</span><span>(</span>way<span>)</span> <span>=&gt;</span> <span>{</span>
                            <span>// Only processing coordinates for the "outer" way.</span>
                            <span>if</span> t <span>==</span> <span>"outer"</span> <span>{</span>
                                arr<span>.</span><span>push</span><span>(</span><span>&amp;</span><span>process_coords</span><span>(</span><span>&amp;</span>doc<span>,</span> way<span>,</span> <span>&amp;</span>bounds<span>,</span> width<span>,</span> height<span>)</span><span>)</span><span>;</span>
                            <span>}</span>
                        <span>}</span><span>,</span>
                        _ <span>=&gt;</span> <span>{</span><span>}</span>
                    <span>}</span>
                <span>}</span><span>,</span>
                _ <span>=&gt;</span> <span>{</span><span>}</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
    arr
<span>}</span></code></pre></div>
<h3 id="drawing-all-of-the-other-map-areas"><a href="#drawing-all-of-the-other-map-areas" aria-label="drawing all of the other map areas permalink"></a>Drawing all of the other map areas</h3>
<p>Since the rest of the map is constructed with filled polygons, I created a function to draw each polygon for the various map types. Each type of map item will have a different color, and walkways will only have a stroke and no fill.</p>
<p>Below is all the code that fetches the OSM data for each landmark, calls the WASM functions to process the data, then draws the coordinates to the canvas. I've left out the Overpass API code, which can be referenced above at <a href="#calling-the-overpass-api">calling the Overpass API</a>.</p>
<div data-language="javascript"><pre><code><span>const</span> url <span>=</span> <span><span>`</span><span>https://overpass-api.de/api/interpreter?data=</span><span><span>${</span>query<span>}</span></span><span>`</span></span><span>;</span>
<span>const</span> water_data <span>=</span> <span>getWater</span><span>(</span>url<span>)</span><span>;</span>
<span>const</span> garden_data <span>=</span> <span>getGardens</span><span>(</span>url<span>)</span><span>;</span>
<span>const</span> walkway_data <span>=</span> <span>getWalkways</span><span>(</span>url<span>)</span><span>;</span>
<span>const</span> tree_data <span>=</span> <span>getTrees</span><span>(</span>url<span>)</span><span>;</span>
<span>const</span> building_data <span>=</span> <span>getBuildings</span><span>(</span>url<span>)</span><span>;</span>
<span>const</span> nbuilding_data <span>=</span> <span>getNamedBuildings</span><span>(</span>url<span>)</span><span>;</span>

Promise<span>.</span><span>all</span><span>(</span><span>[</span>water_data<span>,</span> garden_data<span>,</span> walkway_data<span>,</span> tree_data<span>,</span> building_data<span>,</span> nbuilding_data<span>]</span><span>)</span><span>.</span><span>then</span><span>(</span><span>values</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> <span>[</span>water<span>,</span> gardens<span>,</span> walkways<span>,</span> trees<span>,</span> buildings<span>,</span> named_buildings<span>]</span> <span>=</span> values<span>;</span>
  <span>drawPolygons</span><span>(</span>water<span>,</span> <span>'rgb(83,156,156)'</span><span>,</span> <span>null</span><span>)</span><span>;</span>
  <span>drawPolygons</span><span>(</span>gardens<span>,</span> <span>'rgb(136,172,140)'</span><span>,</span> <span>null</span><span>)</span><span>;</span>
  <span>drawPolygons</span><span>(</span>walkways<span>,</span> <span>null</span><span>,</span> <span>'rgb(0,0,0)'</span><span>)</span><span>;</span>
  <span>for</span> <span>(</span><span>let</span> tree <span>of</span> trees<span>)</span> <span>{</span>
    ctx<span>.</span><span>beginPath</span><span>(</span><span>)</span><span>;</span>
    ctx<span>.</span><span>arc</span><span>(</span>tree<span>[</span><span>0</span><span>]</span><span>,</span> tree<span>[</span><span>1</span><span>]</span><span>,</span> <span>3</span><span>,</span> <span>0</span><span>,</span> <span>2</span> <span>*</span> Math<span>.</span><span>PI</span><span>)</span><span>;</span>
    ctx<span>.</span>fillStyle <span>=</span> <span>'rgb(40,107,83)'</span><span>;</span>
    ctx<span>.</span><span>fill</span><span>(</span><span>)</span><span>;</span>
    ctx<span>.</span><span>closePath</span><span>(</span><span>)</span><span>;</span>
  <span>}</span>
  <span>drawPolygons</span><span>(</span>buildings<span>,</span> <span>'rgb(98,90,87)'</span><span>,</span> <span>null</span><span>)</span><span>;</span>
  <span>drawPolygons</span><span>(</span>named_buildings<span>,</span> <span>'rgb(220,177,102)'</span><span>,</span> <span>null</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>function</span> <span>drawPolygons</span><span>(</span><span>p<span>,</span> fill<span>,</span> stroke</span><span>)</span> <span>{</span>
  <span>for</span> <span>(</span><span>let</span> polygon <span>of</span> p<span>)</span> <span>{</span>
    ctx<span>.</span><span>beginPath</span><span>(</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>let</span> point <span>of</span> polygon<span>)</span> <span>{</span>
      ctx<span>.</span><span>lineTo</span><span>(</span>point<span>[</span><span>0</span><span>]</span><span>,</span> point<span>[</span><span>1</span><span>]</span><span>)</span><span>;</span>
    <span>}</span>
    <span>if</span> <span>(</span>fill<span>)</span> <span>{</span>
      ctx<span>.</span>fillStyle <span>=</span> fill<span>;</span>
      ctx<span>.</span><span>fill</span><span>(</span><span>)</span><span>;</span>
    <span>}</span>
    <span>if</span> <span>(</span>stroke<span>)</span> <span>{</span>
      ctx<span>.</span>strokeStyle <span>=</span> stroke<span>;</span>
      ctx<span>.</span><span>stroke</span><span>(</span><span>)</span><span>;</span>
    <span>}</span>
    ctx<span>.</span><span>closePath</span><span>(</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

<span>function</span> <span>getWater</span><span>(</span><span>url</span><span>)</span> <span>{</span>
  <span>return</span> <span>fetch</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span><span>${</span>water<span>}</span></span><span>;out;</span><span>`</span></span><span>)</span><span>.</span><span>then</span><span>(</span><span>response</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> response<span>.</span><span>text</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>data</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> <span>process_relations</span><span>(</span>data<span>,</span> width<span>,</span> height<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span>

<span>function</span> <span>getWalkways</span><span>(</span><span>url</span><span>)</span> <span>{</span>
  <span>return</span> <span>fetch</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span><span>${</span>walkways<span>}</span></span><span>;out;</span><span>`</span></span><span>)</span><span>.</span><span>then</span><span>(</span><span>response</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> response<span>.</span><span>text</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>data</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> <span>process_ways</span><span>(</span>data<span>,</span> width<span>,</span> height<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span>

<span>function</span> <span>getBuildings</span><span>(</span><span>url</span><span>)</span> <span>{</span>
  <span>return</span> <span>fetch</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span><span>${</span>buildings<span>}</span></span><span>;out;</span><span>`</span></span><span>)</span><span>.</span><span>then</span><span>(</span><span>response</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> response<span>.</span><span>text</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>data</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> <span>process_ways</span><span>(</span>data<span>,</span> width<span>,</span> height<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span>

<span>function</span> <span>getNamedBuildings</span><span>(</span><span>url</span><span>)</span> <span>{</span>
  <span>return</span> <span>fetch</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span><span>${</span>named_buildings<span>}</span></span><span>;out;</span><span>`</span></span><span>)</span><span>.</span><span>then</span><span>(</span><span>response</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> response<span>.</span><span>text</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>data</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> <span>process_ways</span><span>(</span>data<span>,</span> width<span>,</span> height<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span>

<span>function</span> <span>getGardens</span><span>(</span><span>url</span><span>)</span> <span>{</span>
  <span>return</span> <span>fetch</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span><span>${</span>gardens<span>}</span></span><span>;out;</span><span>`</span></span><span>)</span><span>.</span><span>then</span><span>(</span><span>response</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> response<span>.</span><span>text</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>data</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> <span>process_ways</span><span>(</span>data<span>,</span> width<span>,</span> height<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span>

<span>function</span> <span>getTrees</span><span>(</span><span>url</span><span>)</span> <span>{</span>
  <span>return</span> <span>fetch</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span><span>${</span>trees<span>}</span></span><span>;out;</span><span>`</span></span><span>)</span><span>.</span><span>then</span><span>(</span><span>response</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> response<span>.</span><span>text</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>data</span> <span>=&gt;</span> <span>{</span>
    <span>return</span> <span>process_nodes</span><span>(</span>data<span>,</span> width<span>,</span> height<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span></code></pre></div>
<h3 id="the-finished-map"><a href="#the-finished-map" aria-label="the finished map permalink"></a>The finished map</h3>
<p>I've benchmarked the map's loading time, and it takes about 5.2 seconds on average when the Rust code is compiled in development mode, and about 2.3 seconds in production mode. In an earlier iteration I had each map endpoint individually queried, processed, and drawn before querying the next endpoint, which was much slower. Now, the map is at the mercy of the slowest query (around 2.1 seconds). A way to save more time would be to save the coordinates to a file instead of querying the API, but any changes wouldn't be reflected in the map.</p>
<p>Here's a finished screenshot of the Magic Kingdom's map.</p>
<p><span>
      <a href="https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/065ce/mk_canvas_map.png" target="_blank" rel="noopener">
    <span></span>
  <picture>
          <source srcset="https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/f51c2/mk_canvas_map.webp 148w,
https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/66888/mk_canvas_map.webp 295w,
https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/bc8a3/mk_canvas_map.webp 590w,
https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/4ce34/mk_canvas_map.webp 885w,
https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/f490a/mk_canvas_map.webp 1180w,
https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/f93c5/mk_canvas_map.webp 2680w" sizes="(max-width: 590px) 100vw, 590px" type="image/webp">
          <source srcset="https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/c5084/mk_canvas_map.png 148w,
https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/60cc9/mk_canvas_map.png 295w,
https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/6d370/mk_canvas_map.png 590w,
https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/540ae/mk_canvas_map.png 885w,
https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/2561a/mk_canvas_map.png 1180w,
https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/065ce/mk_canvas_map.png 2680w" sizes="(max-width: 590px) 100vw, 590px" type="image/png">
          <img src="https://mary.codes/static/994a26e9c7ff1d0d0155d52361d5a05f/6d370/mk_canvas_map.png" alt="Canvas map" title="" loading="lazy" decoding="async">
        </picture>
  </a>
    </span></p>
<p>I've added a working demo <a href="https://mary.codes/demo-pages/linebuddy-2/">here</a>. If you want to check out other parks besides the Magic Kingdom, add the query strings "?park=epcot", "?park=hs", or "?park=ak" to the end of the URL.</p>
<p>This is part one of a much larger project, so while it feels a bit janky now, everything will be cleaned up in the future. The main goal here was to prove that it is possible to use Rust and WASM to process these coordinates to make my own maps.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[WebKit switching to Skia for 2d graphics rendering (254 pts)]]></title>
            <link>https://blogs.igalia.com/carlosgc/2024/02/19/webkit-switching-to-skia-for-2d-graphics-rendering/</link>
            <guid>39438908</guid>
            <pubDate>Tue, 20 Feb 2024 07:46:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blogs.igalia.com/carlosgc/2024/02/19/webkit-switching-to-skia-for-2d-graphics-rendering/">https://blogs.igalia.com/carlosgc/2024/02/19/webkit-switching-to-skia-for-2d-graphics-rendering/</a>, See on <a href="https://news.ycombinator.com/item?id=39438908">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
				<p>In recent years we have had an ongoing effort to improve graphics performance of the WebKit GTK and WPE ports. As a result of this we shipped features like threaded rendering, the DMA-BUF renderer, or proper vertical retrace synchronization (VSync). While these improvements have helped keep WebKit competitive, and even perform better than other engines in some scenarios, it has been clear for a while that we were reaching the limits of what can be achieved with a CPU based 2D renderer.</p>
<p>There was an attempt at making Cairo support GPU rendering, which did not work particularly well due to the library being designed around stateful operation based upon the PostScript model—resulting in a convenient and familiar API, great output quality, but hard to retarget and with some particularly slow corner cases. Meanwhile, other web engines have moved more work to the GPU, including 2D rendering, where many operations are considerably faster.</p>
<p>We checked all the available 2D rendering libraries we could find, but none of them met all our requirements, so we decided to try writing our own library. At the beginning it worked really well, with impressive results in performance even compared to other GPU based alternatives. However, it proved challenging to find the right balance between performance and rendering quality, so we decided to try other alternatives before continuing with its development. Our next option had always been Skia. The main reason why we didn’t choose Skia from the beginning was that it didn’t provide a public library with API stability that distros can package and we can use like most of our dependencies. It still wasn’t what we wanted, but now we have more experience in WebKit maintaining third party dependencies inside the source tree like ANGLE and libwebrtc, so it was no longer a blocker either.</p>
<p>In December 2023 we made the decision of giving Skia a try internally and see if it would be worth the effort of maintaining the project as a third party module inside WebKit. In just one month we had implemented enough features to be able to run all MotionMark tests. The results in the desktop were quite impressive, getting double the score of MotionMark global result. We still had to do more tests in embedded devices which are the actual target of WPE, but it was clear that, at least in the desktop, with this very initial implementation that was not even optimized (we kept our current architecture that is optimized for CPU rendering) we got much better results. We decided that Skia was the option, so we continued working on it and doing more tests in embedded devices. In the boards that we tried we also got better results than CPU rendering, but the difference was not so big, which means that with less powerful GPUs and with our current architecture designed for CPU rendering we were not that far from CPU rendering. That’s the reason why we managed to keep WPE competitive in embeeded devices, but Skia will not only bring performance improvements, it will also simplify the code and will allow us to implement new features . So, we had enough data already to make the final decision of going with Skia.</p>
<p>In February 2024 we reached a point in which our Skia internal branch was in an “upstreamable” state, so there was no reason to continue working privately. We met with several teams from Google, Sony, Apple and Red Hat to discuss with them about our intention to switch from Cairo to Skia, upstreaming what we had as soon as possible. We got really positive feedback from all of them, so we sent an email to the WebKit developers mailing list to make it public. And again we only got positive feedback, so we started to prepare the patches to import Skia into WebKit, add the CMake integration and the initial Skia implementation for the WPE port that already landed in main.</p>
<p>We will continue working on the Skia implementation in upstream WebKit, and we also have plans to change our architecture to better support the GPU rendering case in a more efficient way. We don’t have a deadline, it will be ready when we have implemented everything currently supported by Cairo, we don’t plan to switch with regressions. We are focused on the WPE port for now, but at some point we will start working on GTK too and other ports using cairo will eventually start getting Skia support as well.</p>
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[DJI – The ART of obfuscation (174 pts)]]></title>
            <link>https://blog.quarkslab.com/dji-the-art-of-obfuscation.html</link>
            <guid>39438842</guid>
            <pubDate>Tue, 20 Feb 2024 07:31:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.quarkslab.com/dji-the-art-of-obfuscation.html">https://blog.quarkslab.com/dji-the-art-of-obfuscation.html</a>, See on <a href="https://news.ycombinator.com/item?id=39438842">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  

  <p>Study of an Android runtime (ART) hijacking mechanism for bytecode
injection through a step-by-step analysis of the packer used to protect the
DJI Pilot Android application.</p>

  <center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/logo.png" alt="Logo" width="40%">
</center>
<h2>Introduction</h2>
<p>In the world of Android applications, it's not uncommon to come across
applications protected by a packer. The role of a packer is to protect all
or part of the application code from static analysis. There are many reasons
why a developer might want to protect an application:</p>
<ul>
<li>Protect valuable business logic;</li>
<li>Protect application monetization logic (e.g. a license management mechanism);</li>
<li>Evading conventional analysis tools to hide malicious logic;</li>
<li>...</li>
</ul>
<p>Here, we take a look at the <a href="https://www.dji.com/downloads/djiapp/dji-pilot"><em>DJI Pilot</em></a>
application, not to understand why developers want to protect their code - this
has already been the subject of previous work (see in particular this
<em>DJI Pilot</em> <a href="https://www.synacktiv.com/en/publications/dji-pilot-android-application-security-analysis-1.html">analysis</a>)
- but to highlight a runtime mechanism implemented by DJI to protect its
application code. This protection is based on the use of a modified version of
the <em>SecNeo</em> packer.</p>
<p>The article details the various stages in the analysis to understand how the
application code is obfuscated. A Python proof-of-concept named
<a href="https://github.com/quarkslab/dxfx/tree/main"><em>DxFx</em></a> for statically unpacking
the <em>DJI Pilot</em> application is provided as practical support for this article.
<em>DxFx</em> does not claim to be a <em>SecNeo</em> unpacker. Its sole aim is to improve the
reader's understanding of the various mechanisms implemented by the packer
through Python code. It will not be maintained in the future.</p>
<h2>Targeted application</h2>
<p>The analysis is performed on the latest version of the <em>DJI Pilot</em> application:</p>
<ul>
<li>Version: 2.5.1.17</li>
<li>SHA256: <code>642aa123437c259eea5895fe01dc4210c4a3a430842b79612074d88745f54714</code></li>
<li><a href="https://service-adhoc.dji.com/download/app/android/cf4cc976-50c5-4960-b09e-45a82d31ce83">Download link</a></li>
</ul>
<p><em>DxFx</em> provided in support of the article has also been tested on the following
versions of the <em>DJI Pilot</em> application:</p>
<ul>
<li>Version: 2.5.1.15</li>
<li>SHA256: <code>d6f96f049bc92b01c4782e27ed94a55ab232717c7defc4c14c1059e4fa5254c8</code></li>
</ul>
<p>and</p>
<ul>
<li>Version: 2.5.1.10</li>
<li>SHA256: <code>860d9d75dc2b2e9426f811589b624b96000fea07cc981b15005686d3c55251d9</code></li>
</ul>
<h2>Bytecode, where are you?</h2>
<h3>Primary analysis</h3>
<p>Static analysis of the APK initially reveals that the result of bytecode
decompilation is, to say the least, uncluttered...</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/jadx-apk-packed.png" alt="Decompiled tree">
</center>
<p>This is because, like other packers, <em>SecNeo</em> leaves only a bootstrap code in
the bytecode to launch the application's unpacking phase. Here, the packer
bootstrap code loads the native <code>libDexHelper.so</code> library:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/load-native-library.png" alt="Decompiled tree" width="80%">
</center>
<p>The first step in the analysis is therefore to find the bytecode containing the
application's business logic.</p>
<p>The packer logic is present in the native library <code>libDexHelper.so</code>. However,
the code of this library is itself packed. So, we have to unpack... the packer
to analyze its logic.</p>
<p>As the aim of this article is not to understand how the packer itself is
protected, this part is not dealt with in-depth, and we simply dump the
library at runtime from the <em>DJI Pilot</em> application process memory space. There
are a multitude of ways to do this, using tools such as <em>gdb</em> or <em>Frida</em>.</p>
<p>However, you may be in for a few surprises:</p>
<div><pre><span></span><code>Cannot attach to process 25562: Operation not permitted (1), process 25562 is already traced by process 25598
</code></pre></div>

<p>or:</p>
<div><pre><span></span><code>Failed to attach: process not found
</code></pre></div>

<p>The packer contains some countermeasures, as partially described in this
<a href="https://github.com/strazzere/android-unpacker/issues/39">issue</a>,
to prevent the use of dynamic tools. Fortunately, these can be easily bypassed.</p>
<p>Once <code>libDexHelper.so</code> has been dumped from memory, it can be analyzed with a
disassembly tool.</p>
<h3>First look at the packer binary</h3>
<p>An initial brief analysis of the <code>libDexHelper.so</code> library reveals the presence
of the <code>decrypt_jar_128K</code> symbol. A hook of the associated function with
<em>Frida</em> reveals that a buffer is passed as input and contains the contents of a
DEX file as output :</p>
<div><pre><span></span><code><span>'use strict'</span><span>;</span><span></span>

<span>const</span><span> </span><span>dlopen_ext</span><span> </span><span>=</span><span> </span><span>Module</span><span>.</span><span>getExportByName</span><span>(</span><span>null</span><span>,</span><span> </span><span>'__loader_android_dlopen_ext'</span><span>);</span><span></span>

<span>function</span><span> </span><span>main</span><span>()</span><span> </span><span>{</span><span></span>
<span>  </span><span>const</span><span> </span><span>decrypt_jar_128K_addr</span><span> </span><span>=</span><span> </span><span>Module</span><span>.</span><span>getExportByName</span><span>(</span><span></span>
<span>    </span><span>'libDexHelper.so'</span><span>,</span><span> </span><span>'decrypt_jar_128K'</span><span></span>
<span>  </span><span>);</span><span></span>

<span>  </span><span>/**</span>
<span>  * decrypt_jar_128K function hook</span>
<span>  */</span><span></span>
<span>  </span><span>Interceptor</span><span>.</span><span>attach</span><span>(</span><span>decrypt_jar_128K_addr</span><span>,</span><span> </span><span>{</span><span></span>
<span>    </span><span>onEnter</span><span>:</span><span> </span><span>function</span><span>(</span><span>args</span><span>)</span><span> </span><span>{</span><span></span>
<span>      </span><span>this</span><span>.</span><span>dex_buffer_ptr</span><span> </span><span>=</span><span> </span><span>args</span><span>[</span><span>1</span><span>];</span><span></span>
<span>    </span><span>},</span><span></span>
<span>    </span><span>onLeave</span><span>:</span><span> </span><span>function</span><span>()</span><span> </span><span>{</span><span></span>
<span>      </span><span>console</span><span>.</span><span>log</span><span>(</span><span>`\nReading dex buffer @ </span><span>${</span><span>this</span><span>.</span><span>dex_buffer_ptr</span><span>}</span><span>`</span><span>);</span><span></span>
<span>      </span><span>console</span><span>.</span><span>log</span><span>(</span><span>this</span><span>.</span><span>dex_buffer_ptr</span><span>.</span><span>readByteArray</span><span>(</span><span>16</span><span>));</span><span></span>
<span>    </span><span>}</span><span></span>
<span>  </span><span>});</span><span></span>
<span>}</span><span></span>

<span>/**</span>
<span> * Bootstrap</span>
<span> */</span><span></span>
<span>const</span><span> </span><span>boot_intercept</span><span> </span><span>=</span><span> </span><span>Interceptor</span><span>.</span><span>attach</span><span>(</span><span>dlopen_ext</span><span>,</span><span> </span><span>{</span><span></span>
<span>  </span><span>onEnter</span><span>:</span><span> </span><span>function</span><span>(</span><span>args</span><span>)</span><span> </span><span>{</span><span></span>
<span>    </span><span>this</span><span>.</span><span>name</span><span> </span><span>=</span><span> </span><span>args</span><span>[</span><span>0</span><span>].</span><span>readUtf8String</span><span>();</span><span></span>
<span>  </span><span>},</span><span></span>
<span>  </span><span>onLeave</span><span>:</span><span> </span><span>function</span><span>()</span><span> </span><span>{</span><span></span>
<span>    </span><span>if</span><span> </span><span>(</span><span>this</span><span>.</span><span>name</span><span>.</span><span>includes</span><span>(</span><span>'libDexHelper.so'</span><span>))</span><span> </span><span>{</span><span></span>
<span>      </span><span>main</span><span>()</span><span></span>
<span>      </span><span>boot_intercept</span><span>.</span><span>detach</span><span>();</span><span></span>
<span>    </span><span>}</span><span></span>
<span>  </span><span>}</span><span></span>
<span>});</span><span></span>
</code></pre></div>

<p>The result of the script is:</p>
<div><pre><span></span><code>Reading dex buffer @ 0x74d1e63140
           0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  0123456789ABCDEF
00000000  64 65 78 0a 30 33 35 00 4a 8b b5 fd 1b 58 54 1f  dex.035.J....XT.

Reading dex buffer @ 0x74d268c140
           0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  0123456789ABCDEF
00000000  64 65 78 0a 30 33 35 00 6f 02 2a 0b 48 26 a5 e0  dex.035.o.*.H&amp;..

Reading dex buffer @ 0x74d3005140
           0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  0123456789ABCDEF
00000000  64 65 78 0a 30 33 35 00 8a b4 08 1c 90 61 5a 34  dex.035......aZ4

Reading dex buffer @ 0x74d3643140
           0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  0123456789ABCDEF
00000000  64 65 78 0a 30 33 35 00 cb b9 8e 72 35 3a d8 bc  dex.035....r5:..

Reading dex buffer @ 0x74d4055140
           0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  0123456789ABCDEF
00000000  64 65 78 0a 30 33 35 00 c2 8b a3 7b 64 3b c6 54  dex.035....{d;.T

Reading dex buffer @ 0x74d4a5f140
           0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  0123456789ABCDEF
00000000  64 65 78 0a 30 33 35 00 dd 47 c2 4e a1 39 cc 79  dex.035..G.N.9.y

Reading dex buffer @ 0x74d552f140
           0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  0123456789ABCDEF
00000000  64 65 78 0a 30 33 35 00 58 17 ae a9 56 21 f1 1f  dex.035.X...V!..

Reading dex buffer @ 0x74d5a77140
           0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  0123456789ABCDEF
00000000  64 65 78 0a 30 33 35 00 84 62 14 0d ac 5f b7 f8  dex.035..b..._..
</code></pre></div>

<p>So, here we can see that <strong>8</strong> DEX files (with the <code>dex.035</code> magic) are
unpacked. It is possible to modify the previous hook to be able to dump the
various DEX files as they are unpacked. Another solution is to understand where
the packed DEX files are stored in the APK and how we can unpack them
statically.</p>
<h3>Static unpacking of DEX files</h3>
<p>The advantage of the dynamic extraction method lies in its rapid
implementation. However, the latter requires the application to be run and an
environment set up to allow instrumentation of the process. Static extraction,
on the other hand, enables cold unpacking of DEX files directly from the APK.
The drawback of the static approach is that it requires a slightly deeper
understanding of how the packer works.</p>
<h4>DEX files where are you?</h4>
<p>Some versions of the <em>SecNeo</em> packer store the bytecode in the <code>classes0.jar</code>
file located in the APK assets. Unfortunately, this is not the case here as
the file does not exist.</p>
<p>However, if we take a closer look at the <code>classes.dex</code> file located at the root
of the APK and supposed to contain only the packer bootstrap code, we can see
that something is wrong with its size:</p>
<div><pre><span></span><code>du -h classes.dex
63M     classes.dex
</code></pre></div>

<p>63MB is a very large size for the code we observed in the first analysis.
Usually, the <a href="https://developer.android.com/build/multidex">multidex</a> mechanism
will split the bytecode file into several <code>.dex</code> files well before reaching
this size. File entropy analysis also gives us some interesting clues:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/classes-dex-entropy.png" alt="Entropy of classes.dex">
</center>
<p>We can see <strong>8</strong> peaks tending towards an entropy of 8, which may
suggest that these chunks are encrypted. The previous <em>Frida</em> hook revealed
that 8 DEX files were unpacked, which is probably no coincidence. The 8 chunks
shown in the graph correspond to 128KB sections, so we can make the connection
with the <code>decrypt_jar_128K</code> symbol of the function. A differential analysis
with the dynamically obtained files finally confirms that the <code>classes.dex</code>
file contains all 8 DEX files after the <em>SecNeo</em> bootstrap code. The first 128K
chunk of each DEX file is encrypted to probably conceal certain information that
could be used to detect the presence of the hidden files like the
<a href="https://source.android.com/docs/core/runtime/dex-format#header-item">magic number</a>
in the header.</p>
<h4>Encryption analysis</h4>
<p>To understand how the first 128KB of each DEX is decrypted, we need to analyze
how the <code>decrypt_jar_128K</code> function works.</p>
<p>One of the function's basic blocks contains the encryption logic:</p>
<div><pre><span></span><code><span>loc_8DC78</span><span></span>
<span>ADD</span><span>             </span><span>W3</span><span>,</span><span> </span><span>W3</span><span>,</span><span> </span><span>#1</span><span>      </span><span>;</span><span> </span><span>i</span><span>++</span><span></span>
<span>LDRB</span><span>            </span><span>W6</span><span>,</span><span> </span><span>[</span><span>X5</span><span>]</span><span>,</span><span>#1</span><span>     </span><span>;</span><span> </span><span>x</span><span> </span><span>=</span><span> </span><span>buffer</span><span>[</span><span>cursor++</span><span>]</span><span></span>
<span>AND</span><span>             </span><span>W7</span><span>,</span><span> </span><span>W3</span><span>,</span><span> </span><span>#0xFF</span><span>   </span><span>;</span><span> </span><span>i</span><span> </span><span>%=</span><span> </span><span>256</span><span></span>
<span>SUB</span><span>             </span><span>W0</span><span>,</span><span> </span><span>W5</span><span>,</span><span> </span><span>W1</span><span></span>
<span>MOV</span><span>             </span><span>X3</span><span>,</span><span> </span><span>X7</span><span></span>
<span>CMP</span><span>             </span><span>X2</span><span>,</span><span> </span><span>X0</span><span></span>
<span>LDRB</span><span>            </span><span>W0</span><span>,</span><span> </span><span>[</span><span>X8,X7</span><span>]</span><span>     </span><span>;</span><span> </span><span>+--</span><span></span>
<span>ADD</span><span>             </span><span>W4</span><span>,</span><span> </span><span>W4</span><span>,</span><span> </span><span>W0</span><span>      </span><span>;</span><span> </span><span>|</span><span> </span><span>j</span><span> </span><span>=</span><span> </span><span>(</span><span>j</span><span> </span><span>+</span><span> </span><span>S</span><span>[</span><span>i</span><span>]</span><span>)</span><span> </span><span>%</span><span> </span><span>256</span><span></span>
<span>AND</span><span>             </span><span>W9</span><span>,</span><span> </span><span>W4</span><span>,</span><span> </span><span>#0xFF</span><span>   </span><span>;</span><span> </span><span>+--</span><span></span>
<span>MOV</span><span>             </span><span>X4</span><span>,</span><span> </span><span>X9</span><span></span>
<span>LDRB</span><span>            </span><span>W10</span><span>,</span><span> </span><span>[</span><span>X8,X9</span><span>]</span><span>    </span><span>;</span><span> </span><span>+--</span><span></span>
<span>STRB</span><span>            </span><span>W10</span><span>,</span><span> </span><span>[</span><span>X8,X7</span><span>]</span><span>    </span><span>;</span><span> </span><span>|</span><span></span>
<span>STRB</span><span>            </span><span>W0</span><span>,</span><span> </span><span>[</span><span>X8,X9</span><span>]</span><span>     </span><span>;</span><span> </span><span>|</span><span> </span><span>S</span><span>[</span><span>i</span><span>]</span><span>,</span><span> </span><span>S</span><span>[</span><span>j</span><span>]</span><span> </span><span>=</span><span> </span><span>S</span><span>[</span><span>j</span><span>]</span><span>,</span><span> </span><span>S</span><span>[</span><span>i</span><span>]</span><span></span>
<span>LDRB</span><span>            </span><span>W7</span><span>,</span><span> </span><span>[</span><span>X8,X7</span><span>]</span><span>     </span><span>;</span><span> </span><span>+--</span><span></span>
<span>ADD</span><span>             </span><span>W0</span><span>,</span><span> </span><span>W7</span><span>,</span><span> </span><span>W0</span><span>      </span><span>;</span><span> </span><span>+--</span><span></span>
<span>UXTB</span><span>            </span><span>W0</span><span>,</span><span> </span><span>W0</span><span>          </span><span>;</span><span> </span><span>|</span><span></span>
<span>LDRB</span><span>            </span><span>W0</span><span>,</span><span> </span><span>[</span><span>X8,X0</span><span>]</span><span>     </span><span>;</span><span> </span><span>|</span><span> </span><span>x</span><span> </span><span>=</span><span> </span><span>S</span><span>[</span><span>(S[i</span><span>]</span><span> </span><span>+</span><span> </span><span>S</span><span>[</span><span>j</span><span>]</span><span>)</span><span> </span><span>%</span><span> </span><span>256</span><span>]</span><span> </span><span>^</span><span> </span><span>x</span><span></span>
<span>EOR</span><span>             </span><span>W0</span><span>,</span><span> </span><span>W0</span><span>,</span><span> </span><span>W6</span><span>      </span><span>;</span><span> </span><span>+--</span><span></span>
<span>STURB</span><span>           </span><span>W0</span><span>,</span><span> </span><span>[</span><span>X5,#-1</span><span>]</span><span>    </span><span>;</span><span> </span><span>buffer</span><span>[</span><span>cursor-1</span><span>]</span><span> </span><span>=</span><span> </span><span>x</span><span></span>
<span>B</span><span>.</span><span>HI</span><span>            </span><span>loc_8DC78</span><span></span>
</code></pre></div>

<p>This is <a href="https://en.wikipedia.org/wiki/RC4">RC4</a>'s pseudo-random generation
algorithm (<a href="https://en.wikipedia.org/wiki/RC4#Pseudo-random_generation_algorithm_(PRGA)">PRGA</a>):</p>
<div><pre><span></span><code>i := 0
j := 0
while GeneratingOutput:
    i := (i + 1) mod 256
    j := (j + S[i]) mod 256
    swap values of S[i] and S[j]
    t := (S[i] + S[j]) mod 256
    K := S[t]
    output K
endwhile
</code></pre></div>

<p>Analysis of the decrypt_jar_128K CFG gives us information about where different
parts of the RC4 algorithm are located:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/decrypt-jar-128K-overview.png" alt="decrypt_jar_128K CFG" width="70%">
</center>
<h4>Encryption key generation</h4>
<p>The key's cross-references lead to a generation function based on a simple XOR
between a 16-byte hardcoded constant and the 16 first bytes of the string
<code>com.dji.industry.pilot</code>:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/dex-rc4-keygen-cfg.png" alt="Generate RC4 key DEX">
</center>
<p>We are now able to statically unpack DEX files.</p>
<blockquote>
<p>The DEX encryption is currently implemented in the <a href="https://github.com/quarkslab/dxfx/blob/c5d65eade92ce818e07af6edacb83a6f3f8d7669/dxfx/dex.py#L247">DexPool</a> class of <em>DxFx</em></p>
</blockquote>
<p>However, disassembly of the unpacked DEX files reveals a problem. The code for
a large number of methods seems to have been stolen, overwritten, and replaced
mainly by <code>nop</code> instructions:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/stolen-bytecode.png" alt="Stolen bytecode" width="60%">
</center>
<p>We can therefore assume that the packer has a second bytecode protection
mechanism.</p>
<h2>Bytecode where are you? Again...</h2>
<h3>Method debug info</h3>
<p>The various methods whose code is stolen all seem to contain a
<a href="https://source.android.com/docs/core/runtime/dex-format#code-item">debug info offset</a>
(<code>debug_info_off</code>) which also appears in the body of the method:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/debug-info-off.png" alt="Method degug_info_off" width="80%">
</center>
<p>It seems there is something fishy with the <code>debug_info_off</code>, this field could
play a role in the method code unpacking mechanism, perhaps as an identifier.
Moreover, a <code>classes.dgc</code> file located in the APK assets contains a large
number of debug info offsets used in stolen methods... The <code>classes.dgc</code> file
therefore seems a potentially interesting candidate for further analysis.</p>
<h3>The classes.dgc file</h3>
<p>An entropy analysis reveals that the beginning of the file (oddly enough, a
128KB chunk) probably contains encrypted data:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/dgc-entropy.png" alt="Entropy of classes.dgc">
</center>
<p>This is a good lead to follow in the <code>libDexHelper.so</code> binary.</p>
<h4>Encryption analysis</h4>
<p>Likely, a mechanism similar to the 128KB chunk encryption of DEX
files is used for the <code>classes.dgc</code> file. Analysis of <code>libDexHelper.so</code> reveals
a function whose scheme also corresponds to an RC4 encryption algorithm:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/dgc-rc4-decrypt.png" alt="DGC RC4 decryption" width="70%">
</center>
<p>We can confirm that is the <code>classes.dgc</code> decryption function by using a simple
Frida hook:</p>
<div><pre><span></span><code><span>'use strict'</span><span>;</span><span></span>

<span>const</span><span> </span><span>dlopen_ext</span><span> </span><span>=</span><span> </span><span>Module</span><span>.</span><span>getExportByName</span><span>(</span><span>null</span><span>,</span><span> </span><span>"__loader_android_dlopen_ext"</span><span>);</span><span></span>
<span>const</span><span> </span><span>nullptr</span><span> </span><span>=</span><span> </span><span>0</span><span>;</span><span></span>

<span>function</span><span> </span><span>main</span><span>()</span><span> </span><span>{</span><span></span>
<span>  </span><span>const</span><span> </span><span>rc4_fct_addr</span><span> </span><span>=</span><span> </span><span>Module</span><span>.</span><span>getExportByName</span><span>(</span><span></span>
<span>    </span><span>'libDexHelper.so'</span><span>,</span><span></span>
<span>    </span><span>'p416302DA23BEF5D5A81473ACFAC4DA25'</span><span></span>
<span>  </span><span>);</span><span></span>

<span>  </span><span>Interceptor</span><span>.</span><span>attach</span><span>(</span><span>rc4_fct_addr</span><span>,</span><span> </span><span>{</span><span></span>
<span>    </span><span>onEnter</span><span>:</span><span> </span><span>function</span><span>(</span><span>args</span><span>)</span><span> </span><span>{</span><span></span>
<span>      </span><span>console</span><span>.</span><span>log</span><span>(</span><span>args</span><span>[</span><span>0</span><span>].</span><span>readByteArray</span><span>(</span><span>32</span><span>))</span><span></span>
<span>    </span><span>}</span><span></span>
<span>  </span><span>});</span><span></span>
<span>}</span><span></span>

<span>Interceptor</span><span>.</span><span>attach</span><span>(</span><span>dlopen_ext</span><span>,</span><span> </span><span>{</span><span></span>
<span>  </span><span>onEnter</span><span>:</span><span> </span><span>function</span><span>(</span><span>args</span><span>)</span><span> </span><span>{</span><span></span>
<span>    </span><span>this</span><span>.</span><span>name</span><span> </span><span>=</span><span> </span><span>args</span><span>[</span><span>0</span><span>].</span><span>readUtf8String</span><span>();</span><span></span>
<span>  </span><span>},</span><span></span>
<span>  </span><span>onLeave</span><span>:</span><span> </span><span>function</span><span>(</span><span>retval</span><span>)</span><span> </span><span>{</span><span></span>
<span>    </span><span>if</span><span> </span><span>(</span><span>retval</span><span> </span><span>!=</span><span> </span><span>nullptr</span><span> </span><span>&amp;&amp;</span><span> </span><span>this</span><span>.</span><span>name</span><span>.</span><span>includes</span><span>(</span><span>'libDexHelper.so'</span><span>))</span><span></span>
<span>      </span><span>main</span><span>();</span><span></span>
<span>  </span><span>}</span><span></span>
<span>});</span><span></span>
</code></pre></div>

<p>The result is:</p>
<div><pre><span></span><code>           0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F  0123456789ABCDEF
00000000  ef bd de 50 8b bb 81 c7 80 63 35 ca 95 6e 1d 1d  ...P.....c5..n..
00000010  36 d5 ef 02 df 2a 50 2b e8 88 03 c3 9b 45 da 5f  6....*P+.....E._
</code></pre></div>

<p>It matches the first bytes of the <code>classes.dgc</code> file:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/first-bytes-of-classes-dgc.png" alt="First bytes of the classes.dgc file" width="60%">
</center>
<p>As with the <code>decrypt_jar_128K</code> function, the basic block initializing <code>S</code> to
identity permutation reveals the presence of a cross-reference to the key.</p>
<h4>Encryption key generation</h4>
<p>From the cross-references, it is possible to locate the key generation function.
The CFG of the function looks a bit like the one used to generate the DEX
decryption key. However, a slightly more complex mechanism is used to generate
the key:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/dgc-rc4-keygen-cfg.png" alt="DGC RC4 key generation" width="90%">
</center>
<p>First, the <a href="https://en.wikipedia.org/wiki/MD5">MD5</a> hash of a 4096-byte binary
blob in memory is computed. MD5 is identified by looking at a sub-function called
in the previous CFG. This sub-function corresponds to the
<a href="https://en.wikipedia.org/wiki/MD5#Pseudocode">MD5 algorithm</a> for calculating a
block (512 bits). The algorithm is flattened and contains hardcoded <code>K</code>
constants (<code>0xe8c7b756</code>, <code>0xd76aa478</code>, ...).</p>
<p>The binary blob is loaded directly from <code>libDexHelper.so</code> and can be found even
in the packed version of the library. This chunk appears to be preceded by a
kind of header containing the name <code>mthfilekey</code>:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/mthfilekey-header.png" alt="mthfilekey entry in libDexHelper.so" width="60%">
</center>
<p>Once the MD5 has been calculated, a deterministic sequence is generated by
calling another sub-function. Analysis of the function reveals that it is a
<em>Fibonacci</em> sequence:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/generate-sequence-cfg.png" alt="Fibonacci generator function CFG" width="80%">
</center>
<p>Next, the 16 bytes of the MD5 hash are <em>XORed</em> with 16 bytes retrieved directly
from the 4096-byte chunk (<code>mthfilekey</code>) following a deterministic walk based
on the <em>Fibonacci</em> sequence previously generated.</p>
<p>We are now able to statically generate the RC4 key that decrypts the first
128KB of the <code>classes.dgc</code> file.</p>
<blockquote>
<ul>
<li>The <code>classes.dgc</code> decryption is implemented in the <a href="https://github.com/quarkslab/dxfx/blob/c5d65eade92ce818e07af6edacb83a6f3f8d7669/dxfx/dgc.py#L42">CodePool._decrypt_chunk</a> method of <em>DxFx</em>.</li>
<li>The RC4 key generation is done by the <a href="https://github.com/quarkslab/dxfx/blob/c5d65eade92ce818e07af6edacb83a6f3f8d7669/dxfx/bin.py#L57">BinHelper.code_pool_key</a> method of <em>DxFx</em>.</li>
</ul>
</blockquote>
<h4>classes.dgc file format</h4>
<p>Once decrypted, looking at <code>classes.dgc</code> reveals that the beginning of the
file contains a table indexing all the application methods
(<a href="https://source.android.com/docs/core/runtime/dex-format#code-item">code_item</a>)
whose code has been stolen:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/dgc-index-layout.png" alt="classes.dgc index layout" width="70%">
</center>
<p>Each table item points to the code_item of a method:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/dgc-code-item.png" alt="classes.dgc index layout" width="70%">
</center>
<p>However, as it stands, the Dalvik opcodes present in the method bodies seem
inconsistent and therefore probably obfuscated... At this stage, we have all
the elements needed to link the stolen bytecode (even if obfuscated for the
moment, we will address this later) to the application's various damaged
methods. First of all, it's interesting to understand when the packer repairs
the methods so that the application can run normally. This mechanism is
particularly interesting because it uses an ART's functionality.</p>
<h2>ART hijacking</h2>
<h3>ART in a nutshell</h3>
<p>The <a href="https://source.android.com/docs/core/runtime">Android Runtime (ART)</a> is
Dalvik's successor runtime in charge of optimizing and executing code for
Android applications and other Android system components. The <a href="https://proandroiddev.com/android-runtime-how-dalvik-and-art-work-6e57cf1c50e5">Android Runtime — How Dalvik and ART work?</a>
article by <em>Paulina Sadowska</em> is a great introduction to ART.</p>
<h3>Class loading mechanism</h3>
<p>When a method is to be executed, the runtime must first check that the class to
which the method belongs is loaded. If this is not the case, the runtime will
load and link the class. The linking process involves several phases as
described in the <a href="https://docs.oracle.com/javase/specs/jls/se17/html/jls-12.html#jls-12.3">Java Language Specification</a>:</p>
<ol>
<li>Class verification;</li>
<li>Class preparation;</li>
<li>Resolution.</li>
</ol>
<p>The stage we're interested in here is the class verification because it's
precisely this stage that is instrumented by the packer. Among other things,
this step checks the bytecode of the class's various methods for
inconsistencies. It is implemented in the <code>ClassLinker::VerifyClass</code> method of
ART.</p>
<p>One of the interesting features of <code>VerifyClass</code> is that it calls the
<code>UpdateClassAfterVerification</code> method:</p>
<div><pre><span></span><code><span>static</span><span> </span><span>void</span><span> </span><span>UpdateClassAfterVerification</span><span>(</span><span>Handle</span><span>&lt;</span><span>mirror</span><span>::</span><span>Class</span><span>&gt;</span><span> </span><span>klass</span><span>,</span><span></span>
<span>                                         </span><span>PointerSize</span><span> </span><span>pointer_size</span><span>,</span><span></span>
<span>                                         </span><span>verifier</span><span>::</span><span>FailureKind</span><span> </span><span>failure_kind</span><span>)</span><span></span>
<span>    </span><span>REQUIRES_SHARED</span><span>(</span><span>Locks</span><span>::</span><span>mutator_lock_</span><span>)</span><span> </span><span>{</span><span></span>

<span>  </span><span>// [...]</span>

<span>  </span><span>// Now that the class has passed verification, try to set nterp entrypoints</span>
<span>  </span><span>// to methods that currently use the switch interpreter.</span>
<span>  </span><span>if</span><span> </span><span>(</span><span>interpreter</span><span>::</span><span>CanRuntimeUseNterp</span><span>())</span><span> </span><span>{</span><span></span>
<span>    </span><span>for</span><span> </span><span>(</span><span>ArtMethod</span><span>&amp;</span><span> </span><span>m</span><span> </span><span>:</span><span> </span><span>klass</span><span>-&gt;</span><span>GetMethods</span><span>(</span><span>pointer_size</span><span>))</span><span> </span><span>{</span><span></span>
<span>      </span><span>if</span><span> </span><span>(</span><span>class_linker</span><span>-&gt;</span><span>IsQuickToInterpreterBridge</span><span>(</span><span>m</span><span>.</span><span>GetEntryPointFromQuickCompiledCode</span><span>()))</span><span> </span><span>{</span><span></span>
<span>        </span><span>runtime</span><span>-&gt;</span><span>GetInstrumentation</span><span>()</span><span>-&gt;</span><span>InitializeMethodsCode</span><span>(</span><span>&amp;</span><span>m</span><span>,</span><span> </span><span>/*aot_code=*/</span><span>nullptr</span><span>);</span><span></span>
<span>      </span><span>}</span><span></span>
<span>    </span><span>}</span><span></span>
<span>  </span><span>}</span><span></span>
<span>}</span><span></span>
</code></pre></div>

<p><code>UpdateClassAfterVerification</code> updates the entry points of the various methods
of the verified class. So, it has to iterate over all
the methods of the class and call the <code>Instrumentation::InitializeMethodsCode</code>
method:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/linker-cg.png" alt="InitializeMethodsCode callgraph" width="70%">
</center>
<h3>Anatomy of the hook</h3>
<p>The <code>Instrumentation::InitializeMethodsCode</code> method provides a crossing point
on every method in the application that can be executed. It is precisely this
crossing point that is exploited by the packer to repair methods whose code has
been stolen. To do this, <code>libDexHelper.so</code> places a hook on
<code>InitializeMethodsCode</code>:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/linker-callgraph-hook.png" alt="Hook call graph" width="90%">
</center>
<p>The prolog of the <code>Instrumentation::InitalizedMethodsCode</code> method is patched to
redirect the execution flow to a function in <code>libDexHelper.so</code> that we call
<code>PatchMethodCode</code> :</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/patch-method-code-cfg.png" alt="PatchMethodCode CFG">
</center>
<p><a href="https://youtu.be/S3wsCRJVUyg?si=CM9ikhkSJ04S-PLb">A few moments later...</a> we
can deduce the hook's anatomy and the different operations performed by
<code>PatchMethodCode</code> :</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/hook-anatomy-cg.png" alt="Hook anatomy with callgraph">
</center>
<p>Once the <code>PatchMethodCode</code> function is called, it first loads the
obfuscated bytecode of the current method using the <code>debug_info_off</code> as an
identifier with the method index table of the <code>classes.dgc</code> file. The code is
passed to the function we call here <code>DecryptMethodCode</code> to be
de-obfuscated. Then <code>code_item</code> (<a href="https://cs.android.com/android/platform/superproject/main/+/main:art/libdexfile/dex/dex_file_structs.h;l=99?q=dex::CodeItem&amp;sq=">dex::CodeItem</a>)
of the method (<a href="https://cs.android.com/android/platform/superproject/+/master:art/runtime/art_method.h;l=87?q=art::ArtMethod">art::Method</a>)
is patched to point to the buffer containing the de-obfuscated bytecode.</p>
<p>This mechanism ensures that the damaged code in each method is repaired before
the method is executed. At this point, the last thing we need to understand is
how bytecode is obfuscated in <code>classes.dgc</code>. To do this, we need to analyze the
<code>DecryptMethodCode</code> function.</p>
<h2>Bytecode de-obfuscation</h2>
<p>The function is rather small, and an analysis of a few basic blocks gives a
good idea of how it works:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/decrypt-method-code-cfg.png" alt="DecryptMethodCode CFG" width="80%">
</center>
<p>The function iterates over each opcode. The obfuscated opcodes are <em>XORed</em> with
the low byte of the method's <code>info_debug_off</code> offset. The result of this
operation is then used as the index of a substitution table. The obfuscated
opcode is replaced by the one obtained from the substitution table:</p>
<div><pre><span></span><code>opcode = S[obfuscated_opcode ^ info_debug_off &amp; 0xff]
</code></pre></div>

<p>Since the substitution table is theoretically a maximum of 256 bytes, one might
assume that one of the RC4 KSA previously reversed is reused to generate it,
but... no.</p>
<p>The <code>S</code> substitution table is simply stored in the <code>libDexHelper.so</code> library
and can be directly extracted from the packed binary. We have everything we
need to fix all the damaged methods and the unpacked DEX can be decompiled
properly:</p>
<center>
  <img src="https://blog.quarkslab.com/resources/2024-02-06_dji-the-art-of-obfuscation/fixed-method.png" alt="Fixed method">
</center>
<p>We are now able to perform static unpacking of the application.</p>
<blockquote>
<ul>
<li>The method fixing step is implemented in the <a href="https://github.com/quarkslab/dxfx/blob/c5d65eade92ce818e07af6edacb83a6f3f8d7669/dxfx/dex.py#L181">Dex</a> class of <em>DxFx</em>.</li>
<li>The bytecode de-obfuscation is located in the <a href="https://github.com/quarkslab/dxfx/blob/c5d65eade92ce818e07af6edacb83a6f3f8d7669/dxfx/dex.py#L27">MethodCipher</a> class of <em>DxFx</em>.</li>
</ul>
</blockquote>
<h2>Conclusion</h2>
<p>Through the unfolding of the analysis methodology used to create a static
unpacker, we can see the different encryption/obfuscation algorithms used by
the packer at different stages. In addition, we were able to highlight an
interesting protection mechanism involving bytecode injection and
exploiting Android runtime hijacking.</p>

<hr><p>

If you would like to learn more about our security audits and explore how we can help you, <a href="https://content.quarkslab.com/talk-to-our-experts-blog">get in touch with us</a>!

</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Learning resources for curious software engineers (112 pts)]]></title>
            <link>https://github.com/charlax/professional-programming</link>
            <guid>39438155</guid>
            <pubDate>Tue, 20 Feb 2024 04:48:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/charlax/professional-programming">https://github.com/charlax/professional-programming</a>, See on <a href="https://news.ycombinator.com/item?id=39438155">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text">

<h2 tabindex="-1" dir="auto">Table of Contents</h2>
<ul dir="auto">
<li><a href="#professional-programming---about-this-list">Professional Programming - about this list</a>
<ul dir="auto">
<li><a href="#principles">Principles</a></li>
<li><a href="#contributing-to-this-list">Contributing to this list</a></li>
<li><a href="#must-read-books">Must-read books</a></li>
<li><a href="#must-read-articles">Must-read articles</a></li>
<li><a href="#other-general-material-and-list-of-resources">Other general material and list of resources</a>
<ul dir="auto">
<li><a href="#other-lists">Other lists</a></li>
<li><a href="#books">Books</a></li>
<li><a href="#articles">Articles</a></li>
<li><a href="#axioms">Axioms</a></li>
<li><a href="#courses">Courses</a></li>
</ul>
</li>
<li><a href="#topics">Topics</a>
<ul dir="auto">
<li><a href="#algorithm-and-data-structures">Algorithm and data structures</a></li>
<li><a href="#api-design--development">API design &amp; development</a></li>
<li><a href="#attitude-habits-mindset">Attitude, habits, mindset</a>
<ul dir="auto">
<li><a href="#procrastination">Procrastination</a></li>
</ul>
</li>
<li><a href="#authenticationauthorization">Authentication/authorization</a></li>
<li><a href="#automation">Automation</a></li>
<li><a href="#beyond-software-engineering--random">Beyond software engineering &amp; random</a></li>
<li><a href="#biases">Biases</a></li>
<li><a href="#business">Business</a></li>
<li><a href="#cache">Cache</a></li>
<li><a href="#career-growth">Career growth</a>
<ul dir="auto">
<li><a href="#choosing-your-nextfirst-opportunity">Choosing your next/first opportunity</a></li>
<li><a href="#getting-to-staff-eng">Getting to Staff Eng</a></li>
</ul>
</li>
<li><a href="#characters-sets">Characters sets</a></li>
<li><a href="#clouds">Clouds</a></li>
<li><a href="#code-reviews">Code reviews</a></li>
<li><a href="#coding--code-quality">Coding &amp; code quality</a></li>
<li><a href="#communication">Communication</a></li>
<li><a href="#compilers">Compilers</a></li>
<li><a href="#configuration">Configuration</a></li>
<li><a href="#continuous-integration-ci">Continuous Integration (CI)</a></li>
<li><a href="#databases">Databases</a>
<ul dir="auto">
<li><a href="#nosql">NoSQL</a></li>
<li><a href="#postgres">Postgres</a></li>
</ul>
</li>
<li><a href="#data-formats">Data formats</a></li>
<li><a href="#data-sciencedata-engineering">Data science/data engineering</a></li>
<li><a href="#debugging">Debugging</a></li>
<li><a href="#design-visual-ux-ui-typography">Design (visual, UX, UI, typography)</a></li>
<li><a href="#design-oo-modeling-architecture-patterns-anti-patterns-etc">Design (OO modeling, architecture, patterns, anti-patterns, etc.)</a>
<ul dir="auto">
<li><a href="#design-database-schema">Design: database schema</a></li>
<li><a href="#design-patterns">Design: patterns</a></li>
<li><a href="#design-simplicity">Design: simplicity</a></li>
</ul>
</li>
<li><a href="#dev-environment--tools">Dev environment &amp; tools</a></li>
<li><a href="#diversity--inclusion">Diversity &amp; inclusion</a></li>
<li><a href="#docker">Docker</a></li>
<li><a href="#documentation">Documentation</a></li>
<li><a href="#dotfiles">Dotfiles</a></li>
<li><a href="#editors--ide">Editors &amp; IDE</a></li>
<li><a href="#email">Email</a></li>
<li><a href="#engineering-management">Engineering management</a></li>
<li><a href="#exercises">Exercises</a></li>
<li><a href="#experimentation">Experimentation</a></li>
<li><a href="#functional-programming-fp">Functional programming (FP)</a></li>
<li><a href="#games-development">Games development</a></li>
<li><a href="#graphics">Graphics</a></li>
<li><a href="#hardware">Hardware</a></li>
<li><a href="#http">HTTP</a></li>
<li><a href="#humor">Humor</a></li>
<li><a href="#incident-response-oncall-alerting-outages-firefighting-postmortem">Incident response (oncall, alerting, outages, firefighting, postmortem)</a>
<ul dir="auto">
<li><a href="#postmortem">Postmortem</a></li>
</ul>
</li>
<li><a href="#internet">Internet</a></li>
<li><a href="#interviewing">Interviewing</a></li>
<li><a href="#kubernetes">Kubernetes</a></li>
<li><a href="#learning--memorizing">Learning &amp; memorizing</a></li>
<li><a href="#licenses-legal">Licenses (legal)</a></li>
<li><a href="#linux-system-management">Linux (system management)</a></li>
<li><a href="#low-codeno-code">Low-code/no-code</a></li>
<li><a href="#low-level-assembly">Low-level, assembly</a></li>
<li><a href="#machine-learningai">Machine learning/AI</a></li>
<li><a href="#math">Math</a></li>
<li><a href="#marketing">Marketing</a></li>
<li><a href="#network">Network</a></li>
<li><a href="#observability-monitoring-logging-exception-handling">Observability (monitoring, logging, exception handling)</a>
<ul dir="auto">
<li><a href="#logging">Logging</a></li>
<li><a href="#errorexception-handling">Error/exception handling</a></li>
<li><a href="#monitoring">Monitoring</a></li>
</ul>
</li>
<li><a href="#open-source">Open source</a></li>
<li><a href="#operating-system-os">Operating system (OS)</a></li>
<li><a href="#over-engineering">Over-engineering</a></li>
<li><a href="#performance">Performance</a></li>
<li><a href="#personal-knowledge-management-pkm">Personal knowledge management (PKM)</a></li>
<li><a href="#personal-productivity">Personal productivity</a></li>
<li><a href="#perspective">Perspective</a></li>
<li><a href="#privacy">Privacy</a></li>
<li><a href="#problem-solving">Problem solving</a></li>
<li><a href="#product-management-for-software-engineers">Product management for software engineers</a></li>
<li><a href="#project-management">Project management</a></li>
<li><a href="#programming-languages">Programming languages</a>
<ul dir="auto">
<li><a href="#python">Python</a></li>
<li><a href="#javascript">JavaScript</a></li>
<li><a href="#garbage-collection">Garbage collection</a></li>
</ul>
</li>
<li><a href="#programming-paradigm">Programming paradigm</a></li>
<li><a href="#public-speaking-presenting">Public speaking (presenting)</a></li>
<li><a href="#reading">Reading</a></li>
<li><a href="#refactoring">Refactoring</a></li>
<li><a href="#regex">Regex</a></li>
<li><a href="#releasing--deploying">Releasing &amp; deploying</a>
<ul dir="auto">
<li><a href="#versioning">Versioning</a></li>
<li><a href="#checklists">Checklists</a></li>
<li><a href="#feature-flags">Feature flags</a></li>
<li><a href="#testing-in-production">Testing in production</a></li>
</ul>
</li>
<li><a href="#search">Search</a></li>
<li><a href="#security">Security</a></li>
<li><a href="#shell-command-line">Shell (command line)</a></li>
<li><a href="#sql">SQL</a></li>
<li><a href="#system-administration">System administration</a></li>
<li><a href="#system-architecture">System architecture</a>
<ul dir="auto">
<li><a href="#scalability">Scalability</a></li>
<li><a href="#reliability">Reliability</a></li>
<li><a href="#resiliency">Resiliency</a></li>
</ul>
</li>
<li><a href="#site-reliability-engineering-sre">Site Reliability Engineering (SRE)</a></li>
<li><a href="#technical-debt">Technical debt</a></li>
<li><a href="#testing">Testing</a></li>
<li><a href="#tools">Tools</a></li>
<li><a href="#type-system">Type system</a></li>
<li><a href="#version-control-git">Version control (Git)</a></li>
<li><a href="#work-ethics-productivity--worklife-balance">Work ethics, productivity &amp; work/life balance</a></li>
<li><a href="#web-development">Web development</a></li>
<li><a href="#writing-communication-blogging">Writing (communication, blogging)</a></li>
</ul>
</li>
<li><a href="#resources--inspiration-for-presentations">Resources &amp; inspiration for presentations</a></li>
<li><a href="#keeping-up-to-date">Keeping up-to-date</a></li>
<li><a href="#concepts">Concepts</a></li>
<li><a href="#my-other-lists">My other lists</a></li>
</ul>
</li>
</ul>

<h2 tabindex="-1" dir="auto">Professional Programming - about this list</h2>
<blockquote>
<p dir="auto">Give me six hours to chop down a tree and I will spend the first four sharpening the axe. (Abraham Lincoln)</p>
</blockquote>
<p dir="auto">A collection of full-stack resources for programmers.</p>
<p dir="auto">The goal of this page is to make you a more proficient developer. You'll find only resources that I've found truly inspiring, or that have become timeless classics.</p>
<h2 tabindex="-1" dir="auto">Principles</h2>
<ul dir="auto">
<li>This page is not meant to be comprehensive. I am trying to keep it light and not too overwhelming.</li>
<li>The selection of articles is opinionated.</li>
<li>I don't necessarily agree with or endorse every single line that is written in every single one of those resources. The same applies to their authors: I don't endorse everything each of those authors has said and will ever say.</li>
</ul>
<p dir="auto">Items:</p>
<ul dir="auto">
<li>🧰 : list of resources</li>
<li>📖 : book</li>
<li>🎞 : video/movie extract/movie/talk</li>
<li>🏙 : slides/presentation</li>
<li>⭐️ : must-read</li>
<li>📃 : paper</li>
</ul>
<h2 tabindex="-1" dir="auto">Contributing to this list</h2>
<p dir="auto">Feel free to open a PR to contribute!</p>
<p dir="auto">I will not be adding everything: as stated above, I am trying to keep the list concise.</p>
<h2 tabindex="-1" dir="auto">Must-read books</h2>
<p dir="auto">I've found these books incredibly inspiring:</p>
<ul dir="auto">
<li>📖 <a href="https://pragprog.com/titles/tpp20/" rel="nofollow">The Pragmatic Programmer: From Journeyman to Master</a>: hands-on the most inspiring and useful book I've read about programming.</li>
<li>📖 <a href="http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670" rel="nofollow">Code Complete: A Practical Handbook of Software Construction</a>: a nice addition to The Pragmatic Programmer, gives you the necessary framework to talk about code.</li>
<li>📖 <a href="https://smile.amazon.com/Release-Design-Deploy-Production-Ready-Software/dp/1680502395" rel="nofollow">Release It!</a>: this books goes beyond code and gives you best practices for building production-ready software. It will give you about 3 years worth of real-world experience.</li>
<li>📖 <a href="https://smile.amazon.com/Scalability-Rules-Principles-Scaling-Sites/dp/013443160X" rel="nofollow">Scalability Rules: 50 Principles for Scaling Web Sites</a></li>
<li>📖 <a href="http://www.amazon.com/The-Linux-Programming-Interface-Handbook/dp/1593272200" rel="nofollow">The Linux Programming Interface: A Linux and UNIX System Programming Handbook</a>: outside of teaching you almost everything you need to know about Linux, this book will give you insights into how software evolves, and the value of having simple &amp; elegant interfaces.</li>
<li>📖 <a href="https://web.mit.edu/6.001/6.037/sicp.pdf" rel="nofollow">Structure and interpretation of Computer Programs</a> (free): One of the most influential textbooks in Computer Science (written and used at MIT), SICP has been influential in CS education. <a href="https://en.wikipedia.org/wiki/Byte_(magazine)" rel="nofollow">Byte</a> recommended SICP "for professional programmers who are really interested in their profession".</li>
</ul>
<p dir="auto">There are some free books available, including:</p>
<ul dir="auto">
<li>📖 <a href="http://mixmastamyk.bitbucket.io/pro_soft_dev/" rel="nofollow">Professional software development</a>: pretty complete and a good companion to this page. The free chapters are mostly focused on software development processes: design, testing, code writing, etc. - and not so much about tech itself.</li>
<li>🧰 <a href="https://github.com/vhf/free-programming-books">vhf/free-programming-books</a></li>
<li>🧰 <a href="https://github.com/EbookFoundation/free-programming-books/blob/master/books/free-programming-books.md">EbookFoundation/free-programming-books</a></li>
</ul>
<h2 tabindex="-1" dir="auto">Must-read articles</h2>
<ul dir="auto">
<li><a href="http://product.hubspot.com/blog/practical-advice-for-new-software-engineers" rel="nofollow">Practical Advice for New Software Engineers</a></li>
<li><a href="http://www.kitchensoap.com/2012/10/25/on-being-a-senior-engineer/" rel="nofollow">On Being A Senior Engineer</a></li>
<li><a href="http://henrikwarne.com/2015/04/16/lessons-learned-in-software-development/" rel="nofollow">Lessons Learned in Software Development</a>: one of those articles that give you years of hard-earned lessons, all in one short article. Must read.</li>
<li><a href="https://blog.juliobiason.me/thoughts/things-i-learnt-the-hard-way/" rel="nofollow">Things I Learnt The Hard Way</a>
<ul dir="auto">
<li>Spec first, then code</li>
<li>Tests make better APIs</li>
<li>Future thinking is future trashing</li>
<li>Documentation is a love letter to your future self</li>
<li>Sometimes, it's better to let the application crash than do nothing</li>
<li>Understand and stay away of cargo cult</li>
<li>"Right tool for the job" is just to push an agenda</li>
<li>Learn the basics functional programming</li>
<li>ALWAYS use timezones with your dates</li>
<li>ALWAYS use UTF-8</li>
<li>Create libraries</li>
<li>Learn to monitor</li>
<li>Explicit is better than implicit</li>
<li>Companies look for specialists but keep generalists longer</li>
<li>The best secure way to deal with user data is not to capture it</li>
<li>When it's time to stop, it's time to stop</li>
<li>You're responsible for the use of your code</li>
<li>Don't tell "It's done" when it's not</li>
<li>Pay attention on how people react to you</li>
<li>Beware of micro-aggressions</li>
<li>Keep a list of "Things I Don't Know"</li>
</ul>
</li>
<li><a href="https://skatgame.net/mburo//courses/350/signs-that-you-re-a-good-programmer.html" rel="nofollow">Signs that you're a good programmer</a> (not everything is here is great - some of the points are counterproductive)
<ul dir="auto">
<li>The instinct to experiment first</li>
<li>Emotional detachment from code and design</li>
<li>Eager to fix what isn't broken</li>
<li>Fascinated by the incomprehensible</li>
<li>Compelled to teach</li>
<li>Incorruptible patience</li>
<li>A destructive pursuit of perfection</li>
<li>Encyclopedic grasp of the platform</li>
<li>Thinks In Code</li>
<li>When In Rome, Does As Romans Do</li>
<li>Creates their own tools</li>
<li>Indifferent to Hierarchy</li>
<li>Excited by failure</li>
<li>Indifferent to circumstances</li>
<li>Substitutes impulse for commitment</li>
<li>Driven by experiences</li>
</ul>
</li>
<li><a href="https://monicalent.com/blog/2019/06/03/absolute-truths-unlearned-as-junior-developer/" rel="nofollow">7 absolute truths I unlearned as junior developer</a>
<ul dir="auto">
<li>Early in your career, you can learn 10x more in a supportive team in 1 year, than coding on your own</li>
<li>Every company has problems, every company has technical debt.</li>
<li>Being overly opinionated on topics you lack real-world experience with is pretty arrogant.</li>
<li>Many conference talks cover proof of concepts rather than real-world scenarios.</li>
<li>Dealing with legacy is completely normal.</li>
<li>Architecture is more important than nitpicking.</li>
<li>Focus on automation over documentation where appropriate.</li>
<li>Having some technical debt is healthy.</li>
<li>Senior engineers must develop many skills besides programming.</li>
<li>We’re all still junior in some areas.</li>
</ul>
</li>
<li><a href="https://www.csc.gov.sg/articles/how-to-build-good-software" rel="nofollow">How to Build Good Software</a>
<ul dir="auto">
<li>A good high-level summary of fundamental engineering practices.</li>
<li>The root cause of bad software has less to do with specific engineering choices, and more to do with how development projects are managed.</li>
<li>There is no such thing as platonically good engineering: it depends on your needs and the practical problems you encounter.</li>
<li>Software should be treated not as a static product, but as a living manifestation of the development team’s collective understanding.</li>
<li>Software projects rarely fail because they are too small; they fail because they get too big.</li>
<li>Beware of bureaucratic goals masquerading as problem statements. If our end goal is to make citizens’ lives better, we need to explicitly acknowledge the things that are making their lives worse.</li>
<li>Building software is not about avoiding failure; it is about strategically failing as fast as possible to get the information you need to build something good.</li>
</ul>
</li>
<li><a href="https://taylor.town/-10x" rel="nofollow">How to be a -10x Engineer</a>
<ul dir="auto">
<li>Nullify the output of 10 engineers.</li>
<li>Hold 10 engineers hostage in a technical discussion.</li>
<li>Waste 10 weeks of wages on cloud costs.</li>
<li>Waste 400 hours of engineering on bad architecture.</li>
<li>Incur 400 hours of bug triage.</li>
</ul>
</li>
</ul>
<h2 tabindex="-1" dir="auto">Other general material and list of resources</h2>
<h3 tabindex="-1" dir="auto">Other lists</h3>
<ul dir="auto">
<li><a href="https://github.com/liuchong/awesome-roadmaps">liuchong/awesome-roadmaps: A curated list of roadmaps.</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Books</h3>
<ul dir="auto">
<li><a href="https://bigmachine.io/products/the-imposters-handbook" rel="nofollow">The Imposter's Handbook</a> - $30. From the author: "Don't have a CS Degree? Neither do I - That's why I wrote this book."</li>
<li><a href="https://thecomputersciencebook.com/book/" rel="nofollow">The Computer Science Book</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Articles</h3>
<ul dir="auto">
<li><a href="https://github.com/mr-mig/every-programmer-should-know">mr-mig/every-programmer-should-know: a collection of (mostly) technical things every software developer should know</a></li>
<li><a href="https://www.timsommer.be/famous-laws-of-software-development/" rel="nofollow">Famous Laws Of Software Development</a></li>
<li><a href="https://aws.amazon.com/builders-library/?cards-body.sort-by=item.additionalFields.customSort&amp;cards-body.sort-order=asc" rel="nofollow">The Amazon Builders' Library</a>
<ul dir="auto">
<li>There is a list of the best articles in this <a href="https://twitter.com/g_bonfiglio/status/1673650452846505985" rel="nofollow">Twitter Thread</a></li>
</ul>
</li>
<li><a href="https://github.com/kdeldycke/awesome-falsehood">kdeldycke/awesome-falsehood</a>: Falsehoods Programmers Believe in</li>
<li><a href="https://github.com/hellerve/programming-talks">hellerve/programming-talks</a></li>
<li><a href="https://techyaks.com/" rel="nofollow">TechYaks</a>: list of talks</li>
<li><a href="http://www.opowell.com/post/talks-that-changed-the-way-i-think-about-programming/" rel="nofollow">Talks that changed the way I think about programming</a></li>
<li><a href="http://matt.might.net/articles/what-cs-majors-should-know/" rel="nofollow">What every computer science major should know</a></li>
<li><a href="https://github.com/kamranahmedse/developer-roadmap">kamranahmedse/developer-roadmap</a></li>
<li><a href="https://github.com/mtdvio/every-programmer-should-know">mtdvio/every-programmer-should-know</a>: a collection of (mostly) technical things every software developer should know about</li>
<li><a href="https://adamj.eu/tech/2022/06/17/mike-actons-expectations-of-professional-software-engineers/" rel="nofollow">Mike Acton’s Expectations of Professional Software Engineers</a></li>
<li><a href="https://vadimkravcenko.com/shorts/things-they-didnt-teach-you/" rel="nofollow">Things they didn't teach you about Software Engineering</a>
<ul dir="auto">
<li>Domain knowledge is more important than your coding skills</li>
<li>Code is secondary. Business value is first.</li>
<li>You work with uncertainty most of the time</li>
</ul>
</li>
<li><a href="https://paavandesign.com/blog/ostaulta/" rel="nofollow">We overestimate our short-term ability, but underestimate our long-term ability.</a>
<ul dir="auto">
<li>Specialisation is for insects.</li>
</ul>
</li>
<li><a href="https://matthewgrohman.substack.com/p/want-an-unfair-advantage-in-your" rel="nofollow">Want an unfair advantage in your tech career? Consume content meant for other roles</a>
<ul dir="auto">
<li>Cross-functional understanding is critical in modern tech companies</li>
<li>Helps to avoid underestimating the importance and difficulty other roles</li>
<li>Helps you to be strategic in your interaction with people in that role</li>
</ul>
</li>
<li><a href="https://norvig.com/21-days.html" rel="nofollow">Teach Yourself Programming in Ten Years</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Axioms</h3>
<ul dir="auto">
<li><a href="https://urbit.org/blog/precepts/" rel="nofollow">Precepts - Urbit</a>
<ul dir="auto">
<li>Data is better than code.</li>
<li>Correctness is more important than performance.</li>
<li>Deterministic beats heuristic.</li>
<li>One hundred lines of simplicity is better than twenty lines of complexity.</li>
<li>If your abstractions are leaking, it's not due to some law of the universe; you just suck at abstracting. Usually, you didn't specify the abstraction narrowly enough.</li>
<li>If you avoid changing a section of code for fear of awakening the demons therein, you are living in fear. If you stay in the comfortable confines of the small section of the code you wrote or know well, you will never write legendary code. All code was written by humans and can be mastered by humans.</li>
<li>If there's clearly a right way to do something and a wrong way, do it the right way. Coding requires incredible discipline.</li>
<li>The best way to get the right answer is to try it the wrong way.</li>
<li>Practice tells you that things are good or bad; theory tells you why.</li>
<li>Not being qualified to solve a problem is no reason not to solve it.</li>
<li>If you don't understand a system you're using, you don't control it. If nobody understands the system, the system is in control.</li>
</ul>
</li>
<li><a href="https://embeddedartistry.com/blog/2018/04/26/embedded-rules-of-thumb/" rel="nofollow">Embedded Rules of Thumb</a></li>
<li><a href="https://www.perell.com/blog/50-ideas-that-changed-my-life" rel="nofollow">50 Ideas That Changed My Life</a></li>
<li><a href="https://matt-rickard.com/reflections-on-10-000-hours-of-programming/" rel="nofollow">Reflections on 10,000 Hours of Programming</a></li>
<li><a href="https://www.simplethread.com/20-things-ive-learned-in-my-20-years-as-a-software-engineer/" rel="nofollow">20 Things I've Learned in my 20 Years as a Software Engineer</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Courses</h3>
<ul dir="auto">
<li><a href="https://techdevguide.withgoogle.com/" rel="nofollow">Google Tech Dev Guide</a></li>
<li><a href="https://missing.csail.mit.edu/" rel="nofollow">The Missing Semester of Your CS Education</a>, MIT. Includes lectures about the shell, editors, data wrangling, git, debugging and profiling, meta programming, security and cryptography.</li>
<li><a href="https://www.neilwithdata.com/mathematics-self-learner" rel="nofollow">Mathematics for the adventurous self-learner</a>, Neil Sainsbury</li>
<li><a href="https://github.com/jwasham/coding-interview-university">jwasham/coding-interview-university</a>: a complete computer science study plan to become a software engineer.</li>
<li><a href="https://teachyourselfcs.com/" rel="nofollow">Teach Yourself Computer Science</a>: an opinionated set of the best CS resources.</li>
<li><a href="https://github.com/ossu/computer-science">ossu/computer-science</a>: free self-taught education in Computer Science!</li>
</ul>
<h2 tabindex="-1" dir="auto">Topics</h2>
<h3 tabindex="-1" dir="auto">Algorithm and data structures</h3>
<ul dir="auto">
<li>Read the <a href="https://mitpress.mit.edu/books/introduction-algorithms" rel="nofollow">CLRS</a>. You can watch and download the course on <a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/" rel="nofollow">OCW</a> - there are newer courses as well.</li>
<li>Or <a href="https://www.amazon.com/Algorithm-Design-Manual-Steven-Skiena/dp/1849967202?ie=UTF8&amp;qid=1297127794&amp;ref_=sr_1_1&amp;sr=8-1" rel="nofollow">The Algorithm Design Manual</a></li>
<li>Try out some algorithms on <a href="https://projecteuler.net/" rel="nofollow">Project Euler</a></li>
<li><a href="https://sp23.datastructur.es/" rel="nofollow">CS 61B Spring 2023</a></li>
</ul>
<p dir="auto">Other resources:</p>
<ul dir="auto">
<li><a href="http://jeffe.cs.illinois.edu/teaching/algorithms/" rel="nofollow">Algorithms</a>, Jeff Erickson</li>
</ul>
<p dir="auto">Let's be honest: algorithms can be a pretty dry topic. <a href="https://www.quora.com/Is-there-a-book-that-teaches-algorithms-data-structures-and-other-computer-science-basics-in-a-fun-way" rel="nofollow">This quora question</a> lists some funnier learning alternative, including:</p>
<ul dir="auto">
<li><a href="https://www.amazon.com/dp/1617292230/ref=cm_sw_su_dp" rel="nofollow">Grokking Algorithms</a></li>
<li><a href="https://www.amazon.com/Essential-Algorithms-Practical-Approach-Computer/dp/1118612108?ie=UTF8&amp;*Version*=1&amp;*entries*=0" rel="nofollow">Essential Algorithms</a></li>
<li><a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html" rel="nofollow">Data Structure Visualization</a></li>
<li>🎞 <a href="https://www.youtube.com/watch?v=kPRA0W1kECg&amp;ab_channel=TimoBingmann" rel="nofollow">15 Sorting Algorithms in 6 Minutes</a></li>
<li><a href="https://samwho.dev/hashing/" rel="nofollow">Hashing</a></li>
<li><a href="https://bost.ocks.org/mike/algorithms/" rel="nofollow">Visualizing Algorithms</a></li>
</ul>
<p dir="auto">Example implementations:</p>
<ul dir="auto">
<li><a href="https://github.com/trekhleb/javascript-algorithms">trekhleb/javascript-algorithms</a>: algorithms and data structures implemented in JavaScript</li>
<li><a href="https://the-algorithms.com/" rel="nofollow">The Algorithms</a></li>
</ul>
<p dir="auto">Algorithms in distributed systems:</p>
<ul dir="auto">
<li><a href="https://raft.github.io/" rel="nofollow">Raft Consensus Algorithm</a></li>
</ul>
<h3 tabindex="-1" dir="auto">API design &amp; development</h3>
<p dir="auto">General REST content:</p>
<ul dir="auto">
<li><a href="https://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm" rel="nofollow">Architectural Styles and the Design of Network-based Software Architectures</a>, Roy Fielding (the inventor of REST)</li>
<li><a href="https://github.com/yosriady/api-development-tools">A collection of useful resources for building RESTful HTTP+JSON APIs.</a></li>
<li><a href="https://stackoverflow.blog/2020/03/02/best-practices-for-rest-api-design/" rel="nofollow">Best practices for REST API design</a>, Stack Overflow Blog</li>
<li>📖 <a href="https://www.mulesoft.com/sites/default/files/resource-assets/ebook-UndisturbedREST_v1.pdf" rel="nofollow">Undisturbed REST: a guide to designing the perfect API</a>: very complete book about RESTful API design.</li>
</ul>
<p dir="auto">Example guidelines:</p>
<ul dir="auto">
<li><a href="https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md">Microsoft's Rest API guidelines</a></li>
<li><a href="https://opensource.zalando.com/restful-api-guidelines/" rel="nofollow">Zalando RESTful API and Event Scheme Guidelines</a></li>
<li><a href="https://cloud.google.com/apis/design/" rel="nofollow">Google's API Design Guide</a>: a general guide to design networked API.</li>
<li><a href="https://google.aip.dev/1" rel="nofollow">AIP-1: AIP Purpose and Guidelines</a>
<ul dir="auto">
<li>AIP stands for API Improvement Proposal, which is a design document providing high-level, concise documentation for API development.</li>
</ul>
</li>
</ul>
<p dir="auto">More specific topics:</p>
<ul dir="auto">
<li><a href="https://cloud.google.com/blog/products/application-development/api-design-why-you-should-use-links-not-keys-to-represent-relationships-in-apis" rel="nofollow">Why you should use links, not keys, to represent relationships in APIs</a>, Martin Nally, Google
<ul dir="auto">
<li>"Using links instead of foreign keys to express relationships in APIs reduces the amount of information a client needs to know to use an API, and reduces the ways in which clients and servers are coupled to each other."</li>
</ul>
</li>
<li><a href="https://blog.sequin.io/events-not-webhooks/" rel="nofollow">Give me /events, not webhooks</a>
<ul dir="auto">
<li>Events can unlock much-needed webhook features, like allowing your webhook consumers to replay or reset the position of their webhook subscription.</li>
</ul>
</li>
</ul>
<h3 tabindex="-1" dir="auto">Attitude, habits, mindset</h3>
<ul dir="auto">
<li><a href="https://www.prod.facebook.com/notes/kent-beck/mastering-programming/1184427814923414#" rel="nofollow">Mastering Programming</a>, Kent Beck.</li>
<li><a href="https://www.oreilly.com/ideas/the-traits-of-a-proficient-programmer" rel="nofollow">The traits of a proficient programmer</a></li>
<li><a href="http://www.mit.edu/~xela/tao.html" rel="nofollow">The tao of programming</a>: a set of parables about programming.</li>
<li><a href="http://www.theeffectiveengineer.com/blog/take-ownership-of-your-goals" rel="nofollow">Taking Ownership Is The Most Effective Way to Get What You Want</a></li>
<li><a href="https://medium.freecodecamp.org/finding-time-to-become-a-better-developer-eebc154881b2" rel="nofollow">Finding Time to Become a Better Developer</a></li>
<li><a href="https://blog.usejournal.com/ten-minutes-a-day-e2fa1084f924" rel="nofollow">Ten minutes a day</a>: how Alex Allain wrote a book in less than 200 hours, by writing 10 minutes <em>every</em> day.</li>
<li><a href="https://humanwhocodes.com/blog/2012/06/12/the-care-and-feeding-of-software-engineers-or-why-engineers-are-grumpy/" rel="nofollow">The care and feeding of software engineers (or, why engineers are grumpy)</a>
<ul dir="auto">
<li>In the triumvirate of software, product managers, designers, and software engineers, only the engineers are expected to turn off their creative minds and just produce.</li>
<li>Both engineers and product managers tend to think, incorrectly, that product specifications or requirements are equivalent to the furniture manual from Ikea.</li>
<li>This is one of the top things that make engineers grumpy: constantly shifting priorities.</li>
<li>Even though many engineers will complain that product managers change their minds, almost none will account for that in their time estimates.</li>
<li>Computer science programs aren’t about preparing you for the tasks you’ll face in industry.</li>
<li>When there are more engineers than can be used, engineering time ends up going away from developing and towards planning, synchronization, and coordination.</li>
<li>Involve engineers in the creative process</li>
<li>Give engineers opportunities to be creative.</li>
<li>Encourage time off.</li>
<li>Let 'em code</li>
<li>Express appreciation</li>
</ul>
</li>
<li><a href="https://blog.pragmaticengineer.com/the-product-minded-engineer/" rel="nofollow">The Product-Minded Software Engineer</a>, Gergely Orosz
<ul dir="auto">
<li>Great product engineers know that minimum lovable products need the right depth</li>
<li>Product-minded engineers quickly map out edge cases and think of ways to reduce work on them: often bringing solutions that require no engineering work</li>
<li>Engage in user research and customer support</li>
<li>Bring well-backed product suggestions to the table</li>
<li>Offer product/engineering tradeoffs</li>
</ul>
</li>
<li><a href="https://medium.com/@schlaf/40-lessons-from-40-years-de39d2c622d6" rel="nofollow">40 Lessons From 40 Years</a>, Steve Schlafman
<ul dir="auto">
<li>If you want to make progress on the things that matter most, you need to decide who you’re going to disappoint. It’s inevitable.</li>
<li>The best investment you can make is your own education. Never stop learning. The second best investment you can make is building your network through authentic and meaningful interactions. It is what you know and who you know.</li>
<li>You’ll never get what you don’t ask for or actively seek out. Go for it!</li>
<li>It’s not about the light at the end of the tunnel. It’s the tunnel. Show up every day and enjoy the process.</li>
<li>A great teammate always puts the organization and its purpose ahead of their own self interests.</li>
<li>Pick your spots. We have limited time and our brains can only process so much. Focus is key. Choose wisely.</li>
<li>Every person is likely struggling with something. Be kind. Be helpful.</li>
</ul>
</li>
<li><a href="https://josebrowne.com/on-coding-ego-and-attention/" rel="nofollow">On Coding, Ego and Attention</a>
<ul dir="auto">
<li>Beginner’s mind accepts the fact that absolute knowledge is infinite and thus keeping score is a waste of time.</li>
<li>Mastery is simply the accumulation of momentum, not the accumulation of knowledge.</li>
<li>Dealing with ego distraction has taught me to love the problem solving process. It’s taught me to love and respect the learning process. As a result I’m more productive. I’m less anxious. I’m a better teammate. I’m a better friend and a better thinker.</li>
</ul>
</li>
<li><a href="https://www.brainpickings.org/2014/01/29/carol-dweck-mindset/" rel="nofollow">Fixed vs. Growth: The Two Basic Mindsets That Shape Our Lives</a></li>
<li><a href="https://fwouts.com/articles/great-software-engineer" rel="nofollow">What does a great software engineer look like?</a></li>
<li><a href="https://supermemo.guru/wiki/Good_sleep,_good_learning,_good_life" rel="nofollow">Good sleep, good learning, good life</a></li>
<li>🎞 <a href="https://www.youtube.com/watch?v=zkTf0LmDqKI&amp;ab_channel=SiliconValleyHistoricalAssociation" rel="nofollow">Steve Jobs: if you don't ask for help, you won't get very far</a></li>
<li><a href="https://www.ronaldsvilcins.com/2020/12/10/programming-quotes/" rel="nofollow">Programming quotes</a></li>
<li><a href="https://boz.com/articles/be-kind" rel="nofollow">Be Kind</a>
<ul dir="auto">
<li>Being kind is fundamentally about taking responsibility for your impact on the people around you.</li>
<li>It requires you be mindful of their feelings and considerate of the way your presence affects them.</li>
</ul>
</li>
<li><a href="https://www.inc.com/marcel-schwantes/warren-buffett-says-this-is-1-simple-habit-that-separates-successful-people-from-everyone-else.html" rel="nofollow">Warren Buffett Says This 1 Simple Habit Separates Successful People From Everyone Else</a>
<ul dir="auto">
<li>The difference between successful people and really successful people is that really successful people say no to almost everything.</li>
</ul>
</li>
<li><a href="https://jjude.com/luck" rel="nofollow">How to get lucky?</a></li>
<li><a href="https://world.hey.com/dhh/programmers-should-stop-celebrating-incompetence-de1a4725" rel="nofollow">Programmers should stop celebrating incompetence</a>, DHH
<ul dir="auto">
<li>The magic of programming is largely just things you don't know yet.</li>
<li>It's not fine to think you shouldn't be on some paths towards mastery, if you intend to make programming your career.</li>
</ul>
</li>
<li><a href="https://sive.rs/kimo" rel="nofollow">There’s no speed limit</a></li>
<li><a href="https://salman.io/blog/momentum-motivation/" rel="nofollow">Don't Wait for Motivation, Act for Momentum</a>
<ul dir="auto">
<li>Start with a tiny task. Then ride its momentum.</li>
</ul>
</li>
<li><a href="https://puppycoding.com/2023/07/22/healthy-coding-habits/" rel="nofollow">The Most Important Coding Habits</a>
<ul dir="auto">
<li>The Most Important Coding Habits</li>
<li>Daily stretches</li>
<li>Take regular breaks</li>
<li>Don’t code late at night</li>
<li>Improve your coding environment</li>
</ul>
</li>
</ul>
<blockquote>
<p dir="auto">Imposter syndrome is underrated: a lot of talk goes into overcoming imposter syndrome. I say embrace self-skepticism and doubt yourself every day. In a fast-moving industry where lots of your knowledge expires every year, even the most junior people around you constantly cook up skills you don't have; you stay competitive by applying with the determination (and even fear) of the novice. The upside of this treadmill is that every engineer is on it: just because you're an imposter doesn't mean that other people are more deserving than you, because they're imposters too. You should advocate for yourself, take risks, pat yourself on the back when things go well, and, as you start to build a track record of solving problems, trust your skills and adaptability. Just make no mistake: you're only as good as the last problem you solve.</p>
</blockquote>
<p dir="auto">Dan Heller, Building a Career in Software</p>
<blockquote>
<p dir="auto">I had learned already never to empty the well of my writing, but always to stop when there was still something there in the deep part of the well, and let it refill at night from the springs that fed it. -- Ernest Hemingway</p>
</blockquote>
<ul dir="auto">
<li><a href="https://grugbrain.dev/" rel="nofollow">The Grug Brained Developer</a>: habits of self-aware programmer. Like Tao of Programming, different style.</li>
</ul>
<blockquote>
<p dir="auto">Good judgment comes from experience.
Experience comes from bad judgment.</p>
</blockquote>
<h4 tabindex="-1" dir="auto">Procrastination</h4>
<ul dir="auto">
<li><a href="https://www.theguardian.com/media/2013/apr/12/news-is-bad-rolf-dobelli" rel="nofollow">News is bad for you – and giving up reading it will make you happier</a>, The Guardian
<ul dir="auto">
<li>News misleads</li>
<li>News is irrelevant</li>
<li>News has no explanatory power</li>
<li>News is toxic to your body</li>
<li>News increases cognitive errors</li>
<li>News inhibits thinking</li>
<li>News works like a drug</li>
<li>News wastes time</li>
<li>News makes us passive</li>
<li>News kills creativity</li>
</ul>
</li>
</ul>
<h3 tabindex="-1" dir="auto">Authentication/authorization</h3>
<ul dir="auto">
<li><a href="https://www.alexanderlolis.com/authorization-in-a-microservices-world" rel="nofollow">Authorization in a microservices world</a></li>
<li><a href="https://www.osohq.com/post/rules-are-hard-logic-for-authorization" rel="nofollow">Authorization Logic: Rules are hard because they evolve over time</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Automation</h3>
<ul dir="auto">
<li><a href="http://queue.acm.org/detail.cfm?id=2841313" rel="nofollow">Automation Should Be Like Iron Man, Not Ultron</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Beyond software engineering &amp; random</h3>
<ul dir="auto">
<li><a href="https://www.zainrizvi.io/blog/why-software-engineers-like-woodworking/" rel="nofollow">Why Software Engineers like Woodworking</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Biases</h3>
<p dir="auto">Biases don't only apply to hiring. For instance, the fundamental attribution bias also applies when criticizing somebody's code written a long time ago, in a totally different context.</p>
<ul dir="auto">
<li><a href="https://betterhumans.coach.me/cognitive-bias-cheat-sheet-55a472476b18#.6temb6hyg" rel="nofollow">Cognitive bias cheat sheet</a>. #hiring</li>
</ul>
<h3 tabindex="-1" dir="auto">Business</h3>
<ul dir="auto">
<li><a href="https://github.com/juspay/hyperswitch/wiki/Payments-101-for-a-Developer">Payments 101 for a Developer</a></li>
<li><a href="https://www.getlago.com/blog/the-4-biggest-problems-with-homemade-billing-systems" rel="nofollow">The 4 biggest problems with homemade billing systems</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Cache</h3>
<ul dir="auto">
<li><a href="https://aws.amazon.com/builders-library/caching-challenges-and-strategies/" rel="nofollow">Caching challenges and strategies</a>, Amazon Builders Library</li>
</ul>
<h3 tabindex="-1" dir="auto">Career growth</h3>
<ul dir="auto">
<li><a href="http://frontside.io/blog/2016/07/07/the-conjoined-triangles-of-senior-level-development.html" rel="nofollow">The Conjoined Triangles of Senior-Level Development</a> looks into how to define a senior engineer.</li>
<li><a href="https://medium.com/@daniel.heller/ten-principles-for-growth-69015e08c35b" rel="nofollow">Ten Principles for Growth as an Engineer</a>, Dan Heller.</li>
<li><a href="https://www.kalzumeus.com/2011/10/28/dont-call-yourself-a-programmer/" rel="nofollow">Don't Call Yourself a Programmer</a>, Patrick McKenzie.</li>
<li><a href="https://nickmchardy.com/2019/02/on-being-an-engineering-manager.html" rel="nofollow">On being an Engineering Manager</a></li>
<li><a href="https://www.linkedin.com/pulse/career-advice-i-wish-had-25-shane-rodgers/?trk=hp-feed-article-title-like" rel="nofollow">The career advice I wish I had at 25</a>
<ul dir="auto">
<li>A career is a marathon, not a sprint</li>
<li>Most success comes from repetition, not new things</li>
<li>If work was really so great all the rich people would have the jobs</li>
<li>Management is about people, not things</li>
<li>Genuinely listen to others</li>
<li>Recognise that staff are people with finite emotional capacity</li>
<li>Don’t just network with people your own age</li>
<li>Never sacrifice personal ethics for a work reason</li>
<li>Recognise that failure is learning</li>
</ul>
</li>
<li><a href="https://80000hours.org/2019/04/career-advice-i-wish-id-been-given-when-i-was-young/" rel="nofollow">Career advice I wish I’d been given when I was young</a>
<ul dir="auto">
<li>Don’t focus too much on long-term plans.</li>
<li>Find good thinkers and cold-call the ones you most admire.</li>
<li>Assign a high value to productivity over your whole lifespan.</li>
<li>Don’t over-optimise things that aren’t your top priority.</li>
<li>Read a lot, and read things that people around you aren’t reading.</li>
<li>Reflect seriously on what problem to prioritise solving.</li>
<li>Read more history.</li>
</ul>
</li>
<li><a href="https://robwalling.com/2007/06/27/why-good-developers-are-promoted-into-unhappiness/" rel="nofollow">Why Good Developers are Promoted into Unhappiness</a>, Rob Walling. Or why management might not be for you.</li>
<li><a href="https://80000hours.org/key-ideas/" rel="nofollow">A guide to using your career to help solve the world’s most pressing problems</a></li>
<li><a href="https://jvns.ca/blog/senior-engineer/" rel="nofollow">What's a senior engineer's job?</a> You need to be more than just an individual contributor.</li>
<li><a href="https://medium.com/swlh/from-coding-bootcamp-graduate-to-building-distributed-databases-29acbb723d8" rel="nofollow">From Coding Bootcamp Graduate to Building Distributed Databases</a>
<ul dir="auto">
<li>Read Books (and papers), not Blog Posts</li>
<li>Take responsibility for your career trajectory</li>
</ul>
</li>
<li>🏙 <a href="https://speakerdeck.com/swanandp/the-well-rounded-engineer" rel="nofollow">The Well Rounded Engineer</a> includes lots of great book recommendations.
<ul dir="auto">
<li>Paradigm polyglot (learn different languages &amp; paradigms)</li>
<li>Database polyglot</li>
<li>Protocol polyglot (preferably TCP/IP and HTTP)</li>
<li>Proficiency with build tooling, packaging and distribution</li>
<li>Debugging, observability</li>
<li>Deployment, infra and devops</li>
<li>Software architecture and scaling</li>
<li>Ability to write toy compilers, interpreters and parsers</li>
<li>Ability to write toy games</li>
<li>Ability to understand algorithmic analysis</li>
</ul>
</li>
<li><a href="https://lethain.com/career-advice/" rel="nofollow">Some career advice</a>, Will Larson.
<ul dir="auto">
<li>Advice you get is someone’s attempt to synthesize their experiences, not an accurate statement about how the world works.</li>
<li>Build a reservoir of prestige.</li>
<li>Some folks are so good at something that they end up being irreplaceable in their current role, which causes them to get stuck in their role even if they’re a good candidate for more interesting ones.</li>
<li>Great relationships will follow you everywhere you go. Bad ones too.</li>
<li>Early in your career, try to work at as many different kinds of companies and in different product vertical as you can.</li>
</ul>
</li>
<li><a href="http://yosefk.com/blog/evil-tip-avoid-easy-things.html" rel="nofollow">Evil tip: avoid "easy" things</a></li>
<li><a href="https://blog.codinghorror.com/the-ultimate-code-kata/" rel="nofollow">The Ultimate Code Kata</a></li>
<li><a href="https://sergiomartins8.hashnode.dev/why-is-a-senior-engineer-senior" rel="nofollow">Traits of a senior software engineer</a>: impact, perception, visibility, influence, mentoring</li>
<li><a href="https://addyosmani.com/blog/software-engineering-soft-parts/" rel="nofollow">Software Engineering - The Soft Parts</a>
<ul dir="auto">
<li>Think critically and formulate well-reasoned arguments</li>
<li>Master the fundamentals</li>
<li>Focus on the user and all else will follow</li>
<li>Learn how to learn</li>
</ul>
</li>
<li><a href="https://jes.al/2022/07/how-to-own-your-growth-as-a-software-engineer/" rel="nofollow">How To Own Your Growth As A Software Engineer</a></li>
<li><a href="https://codefol.io/posts/the-forty-year-programmer/" rel="nofollow">The Forty-Year Programmer</a>
<ul dir="auto">
<li>The Better You Get, the Less You Look Like Everybody Else</li>
<li>You Learn Deep Principles by Doing the Basics</li>
<li>Look to Other Fields, Learn From Other Fields</li>
<li>Be Careful About Productivity Tips</li>
</ul>
</li>
<li><a href="https://www.zerobanana.com/essays/living-in-the-future/" rel="nofollow">Senior Engineers are Living in the Future</a></li>
<li><a href="https://tomcritchlow.com/2023/04/26/career-maps/" rel="nofollow">What would a map of your career look like?</a></li>
</ul>
<h4 tabindex="-1" dir="auto">Choosing your next/first opportunity</h4>
<ul dir="auto">
<li><a href="https://blog.eladgil.com/p/career-decisions" rel="nofollow">Career Decisions - by Elad Gil - Elad Blog</a></li>
</ul>
<h4 tabindex="-1" dir="auto">Getting to Staff Eng</h4>
<ul dir="auto">
<li><a href="https://medium.com/geekculture/i-became-a-faang-staff-engineer-in-5-years-here-are-the-14-lessons-i-learned-along-the-way-f70ac078875c" rel="nofollow">I became a FAANG Staff Engineer in 5 years. These are the 14 lessons I learned along the way.</a>
<ul dir="auto">
<li>Software engineering isn’t just coding. Actually, coding is a small part of it.</li>
<li>Pipeline your work</li>
<li>Be open to feedback and listen. Like, seriously, listen.</li>
<li>Great feedback is hard to find; treasure it.</li>
<li>Keep an eye on the horizon (but not both).</li>
<li>Figure out what matters and let the rest go.</li>
<li>Comparison really is the thief of joy.</li>
<li>Mentorship is a beautiful thing.</li>
<li>Good days, in general, don’t just “happen”.</li>
<li>Advice and guidance are just that; they aren’t rules.</li>
</ul>
</li>
<li><a href="https://staffeng.com/guides/" rel="nofollow">Guides for reaching Staff-plus engineering roles</a>, Will Larson
<ul dir="auto">
<li><a href="https://staffeng.com/guides/being-visible" rel="nofollow">Being visible</a></li>
<li><a href="https://staffeng.com/guides/learning-materials" rel="nofollow">Additional resources on Staff-plus engineering</a></li>
</ul>
</li>
</ul>
<h3 tabindex="-1" dir="auto">Characters sets</h3>
<ul dir="auto">
<li><a href="http://www.joelonsoftware.com/articles/Unicode.html" rel="nofollow">The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)</a></li>
<li><a href="https://tonsky.me/blog/unicode/" rel="nofollow">The Absolute Minimum Every Software Developer Must Know About Unicode in 2023 (Still No Excuses!)</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Clouds</h3>
<ul dir="auto">
<li><a href="https://github.com/open-guides/og-aws">open-guides/og-aws</a>: a practical guide to AWS</li>
</ul>
<h3 tabindex="-1" dir="auto">Code reviews</h3>
<ul dir="auto">
<li><a href="https://google.github.io/eng-practices/review/reviewer/" rel="nofollow">How to do a code review</a>, Google's engineering practices documentation.</li>
<li><a href="https://medium.com/@copyconstruct/post-commit-reviews-b4cc2163ac7a" rel="nofollow">Post-Commit Reviews</a>: an interesting idea to increase developer velocity (there are some caveats though).</li>
<li><a href="https://mtlynch.io/code-review-love/" rel="nofollow">How to Make Your Code Reviewer Fall in Love with You</a>
<ul dir="auto">
<li>Review your own code first</li>
<li>Write a clear changelist description</li>
<li>Automate the easy stuff</li>
<li>Answer questions with the code itself</li>
<li>Narrowly scope changes</li>
<li>Separate functional and non-functional changes</li>
<li>Respond graciously to critiques</li>
<li>Artfully solicit missing information</li>
<li>Award all ties to your reviewer</li>
<li>Minimize lag between rounds of review</li>
</ul>
</li>
<li><a href="https://mtlynch.io/human-code-reviews-1/" rel="nofollow">How to Do Code Reviews Like a Human</a></li>
<li><a href="https://news.ycombinator.com/item?id=11416746" rel="nofollow">Ask HN: How do you review code?</a>: great discussion on HackerNews, full of interesting ideas.</li>
<li><a href="https://www.dein.fr/posts/2015-02-18-maslows-pyramid-of-code-review" rel="nofollow">Maslow's pyramid of code reviews</a>
<ul dir="auto">
<li>Another one on the same topic: <a href="https://www.morling.dev/blog/the-code-review-pyramid/" rel="nofollow">The Code Review Pyramid</a></li>
</ul>
</li>
<li><a href="https://web.hypothes.is/blog/code-review-in-remote-teams/" rel="nofollow">Code review in remote teams</a>: very complete set of rules.</li>
<li><a href="https://www.raycast.com/blog/no-code-reviews-by-default/" rel="nofollow">No code reviews by default</a>
<ul dir="auto">
<li>Responsibility over convention</li>
</ul>
</li>
</ul>
<h3 tabindex="-1" dir="auto">Coding &amp; code quality</h3>
<ul dir="auto">
<li><a href="http://programmingisterrible.com/post/139222674273/write-code-that-is-easy-to-delete-not-easy-to" rel="nofollow">Write code that is easy to delete, not easy to extend</a></li>
<li><a href="http://blog.codinghorror.com/the-ten-commandments-of-egoless-programming/" rel="nofollow">The Ten Commandments of Egoless Programming</a></li>
<li>📖 <a href="https://www.goodreads.com/book/show/3735293-clean-code" rel="nofollow">Clean Code: A Handbook of Agile Software Craftsmanship</a>, Robert C. Martin. Describes numerous useful best practices. A bit long. There's also a <a href="https://github.com/charlax/professional-programming/blob/master/cheatsheets/Clean-Code-V2.4.pdf">clean code cheatsheet</a>.</li>
<li><a href="https://blog.cleancoder.com/uncle-bob/2011/01/17/software-craftsmanship-is-about.html" rel="nofollow">What Software Craftsmanship is about</a>
<ul dir="auto">
<li>We’re tired of writing crap.</li>
<li>We will not accept the stupid old lie about cleaning things up later.</li>
<li>We will not believe the claim that quick means dirty.</li>
<li>We will not allow anyone to force us to behave unprofessionally.</li>
</ul>
</li>
<li><a href="https://dev.to/michi/tips-on-naming-boolean-variables-cleaner-code-35ig" rel="nofollow">Tips on naming boolean variables</a>
<ul dir="auto">
<li>There is a convention to prefix boolean variables and function names with "is" or "has".</li>
<li>Try to always use is, even for plurals (<code>isEachUserLoggedIn</code> is better than <code>areUsersLoggedIn</code> or <code>isUsersLoggedIn</code>)</li>
<li>Avoid custom prefixes (<code>isPaidFor</code> is better than <code>wasPaidFor</code>)</li>
<li>Avoid negatives (<code>isEnabled</code> is better than <code>isDisabled</code>)</li>
</ul>
</li>
<li><a href="https://github.com/Droogans/unmaintainable-code/blob/master/README.md">How To Write Unmaintainable Code</a></li>
<li><a href="https://github.com/kettanaito/naming-cheatsheet">kettanaito/naming-cheatsheet</a>: : comprehensive language-agnostic guidelines on variables naming. Home of the A/HC/LC pattern.</li>
<li>🧰 <a href="https://qeunit.com/guides/" rel="nofollow">Quality Engineering Guides</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Communication</h3>
<p dir="auto">See also the Writing section</p>
<ul dir="auto">
<li><a href="https://www.karlsutt.com/articles/communicating-effectively-as-a-developer/" rel="nofollow">How to communicate effectively as a developer</a>
<ul dir="auto">
<li>Lots of concrete advice and examples for short, medium and long-form writing</li>
</ul>
</li>
</ul>
<h3 tabindex="-1" dir="auto">Compilers</h3>
<ul dir="auto">
<li><a href="https://c9x.me/compile/bib/" rel="nofollow">The Compiler Writer Resource Page</a></li>
<li><a href="https://github.com/kanaka/mal">kanaka/mal</a>: mal - Make a Lisp</li>
</ul>
<h3 tabindex="-1" dir="auto">Configuration</h3>
<ul dir="auto">
<li><a href="https://arp242.net/weblog/JSON_as_configuration_files-_please_dont.html" rel="nofollow">The downsides of JSON for config files</a>, Martin Tournoij.
<ul dir="auto">
<li>Can't add comments</li>
<li>Excessive quotation and syntax noise</li>
<li>Using DC (declarative configuration) to control logic is often not a good idea.</li>
</ul>
</li>
<li><a href="https://beepb00p.xyz/configs-suck.html" rel="nofollow">Your configs suck? Try a real programming language</a>
<ul dir="auto">
<li>Most modern config formats suck</li>
<li>Use a real programming language</li>
</ul>
</li>
</ul>
<h3 tabindex="-1" dir="auto">Continuous Integration (CI)</h3>
<ul dir="auto">
<li><a href="https://martinfowler.com/articles/continuousIntegration.html" rel="nofollow">Continuous Integration</a>, MartinFowler.com</li>
</ul>
<h3 tabindex="-1" dir="auto">Databases</h3>
<p dir="auto">See also the SQL section.</p>
<ul dir="auto">
<li><a href="http://ksat.me/a-plain-english-introduction-to-cap-theorem" rel="nofollow">A plain English introduction to CAP Theorem</a></li>
<li><a href="https://en.wikipedia.org/wiki/PACELC_theorem" rel="nofollow">PACELC theorem</a>: "in case of network partitioning (P) in a distributed computer system, one has to choose between availability (A) and consistency (C) (as per the CAP theorem), but else (E), even when the system is running normally in the absence of partitions, one has to choose between latency (L) and consistency (C)."</li>
<li><a href="https://blog.rainforestqa.com/2014-06-27-zero-downtime-database-migrations/" rel="nofollow">Zero downtime database migrations</a> (code examples are using Rails but this works great for any programming language)</li>
<li><a href="https://queue.acm.org/detail.cfm?id=3220266" rel="nofollow">Algorithms Behind Modern Storage Systems</a>, ACM Queue</li>
<li><a href="https://cstack.github.io/db_tutorial/" rel="nofollow">Let's Build a Simple Database</a></li>
<li><a href="http://www.redbook.io/" rel="nofollow">Readings in Database Systems, 5th Edition</a></li>
<li><a href="https://dataguide.prisma.io/intro/comparing-database-types" rel="nofollow">Comparing database types: how database types evolved to meet different needs</a></li>
<li><a href="http://coding-geek.com/how-databases-work/" rel="nofollow">How does a relational database work</a></li>
<li><a href="https://use-the-index-luke.com/" rel="nofollow">Use the index, Luke</a></li>
<li><a href="https://planetscale.com/learn/courses/mysql-for-developers/introduction/course-introduction" rel="nofollow">Course introduction — MySQL for Developers</a>, PlanetScale</li>
<li><a href="https://howqueryengineswork.com/00-introduction.html" rel="nofollow">How Query Engines Work</a></li>
</ul>
<h4 tabindex="-1" dir="auto">NoSQL</h4>
<ul dir="auto">
<li><a href="http://horicky.blogspot.nl/2009/11/nosql-patterns.html" rel="nofollow">NOSQL Patterns</a></li>
<li><a href="https://medium.baqend.com/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.9fe79qr90" rel="nofollow">NoSQL Databases: a Survey and Decision Guidance</a></li>
<li>The DynamoDB docs has some great pages:
<ul dir="auto">
<li><a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadConsistency.html" rel="nofollow">Read Consistency</a></li>
<li><a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SQLtoNoSQL.html" rel="nofollow">From SQL to NoSQL</a></li>
<li><a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-general-nosql-design.html" rel="nofollow">NoSQL Design for DynamoDB</a></li>
</ul>
</li>
<li><a href="https://architecturenotes.co/redis/" rel="nofollow">Redis Explained</a></li>
</ul>
<h4 tabindex="-1" dir="auto">Postgres</h4>
<ul dir="auto">
<li><a href="https://www.braintreepayments.com/blog/safe-operations-for-high-volume-postgresql/" rel="nofollow">Safe Operations For High Volume PostgreSQL</a> (this is for PostgreSQL but works great for other DBs as well).</li>
<li><a href="https://www.thenile.dev/blog/transaction-isolation-postgres" rel="nofollow">Transaction Isolation in Postgres, explained</a></li>
<li><a href="https://pgexercises.com/" rel="nofollow">PostgreSQL exercises</a></li>
<li><a href="https://wiki.postgresql.org/wiki/Operations_cheat_sheet" rel="nofollow">Operations cheat sheet</a></li>
<li><a href="https://gist.github.com/cpursley/c8fb81fe8a7e5df038158bdfe0f06dbb">Postgres is Enough</a></li>
<li><a href="https://wiki.postgresql.org/wiki/Don't_Do_This" rel="nofollow">Don't Do This</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Data formats</h3>
<ul dir="auto">
<li><a href="https://github.com/googlei18n/libphonenumber/blob/master/FALSEHOODS.md">Falsehoods Programmers Believe About Phone Numbers</a>, Google's <code>libphonenumber</code>.</li>
<li><a href="http://jeremymikkola.com/posts/2019_03_19_rules_for_autocomplete.html" rel="nofollow">Rules for Autocomplete</a>: rough specifications for autocomplete fields</li>
<li><a href="https://www.mjt.me.uk/posts/falsehoods-programmers-believe-about-addresses/" rel="nofollow">Falsehoods programmers believe about addresses</a></li>
<li><a href="https://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/" rel="nofollow">Falsehoods Programmers Believe About Names</a></li>
<li><a href="https://github.com/kdeldycke/awesome-falsehood">kdeldycke/awesome-falsehood</a>: falsehoods programmers believe in</li>
<li><a href="https://sudhir.io/uuids-ulids" rel="nofollow">Understanding UUIDs, ULIDs and String Representations</a></li>
<li><a href="https://kevin.deldycke.com/2016/12/falsehoods-programmers-believe-about-falsehoods-lists/" rel="nofollow">Falsehoods Programmers Believe About Falsehoods&nbsp;Lists</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Data science/data engineering</h3>
<ul dir="auto">
<li><a href="https://blog.acolyer.org/2017/09/25/a-dirty-dozen-twelve-common-metric-interpretation-pitfalls-in-online-controlled-experiments/" rel="nofollow">A dirty dozen: twelve common metric interpretation pitfalls in online controlled experiments</a></li>
<li><a href="https://github.com/datastacktv/data-engineer-roadmap">datastacktv/data-engineer-roadmap</a>: roadmap to becoming a data engineer</li>
<li><a href="https://awesomedataengineering.com/" rel="nofollow">Awesome Data Engineering Learning Path</a></li>
<li><a href="https://a16z.com/2020/10/15/the-emerging-architectures-for-modern-data-infrastructure/" rel="nofollow">Emerging Architectures for Modern Data Infrastructure</a></li>
<li><a href="https://martinfowler.com/articles/data-monolith-to-mesh.html" rel="nofollow">How to Move Beyond a Monolithic Data Lake to a Distributed Data Mesh</a>
<ul dir="auto">
<li>Data platforms based on the data lake architecture have common failure modes that lead to unfulfilled promises at scale.</li>
<li>We need to consider domains as the first class concern, apply platform thinking to create self-serve data infrastructure, and treat data as a product.</li>
</ul>
</li>
<li><a href="https://madewithml.com/courses/mlops/" rel="nofollow">MLOps</a></li>
<li><a href="https://eng.uber.com/uber-big-data-platform/" rel="nofollow">Uber's Big Data Platform: 100+ Petabytes with Minute Latency</a></li>
<li><a href="https://www.robinlinacre.com/recommend_sql/" rel="nofollow">SQL should be the default choice for data transformation logic</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Debugging</h3>
<ul dir="auto">
<li><a href="http://blog.codinghorror.com/rubber-duck-problem-solving/" rel="nofollow">Rubber Duck Problem Solving</a></li>
<li><a href="http://c2.com/cgi/wiki?RubberDucking" rel="nofollow">Rubber Ducking</a></li>
<li><a href="https://en.wikipedia.org/wiki/5_Whys" rel="nofollow">Five Whys</a></li>
<li><a href="http://www.kitchensoap.com/2014/11/14/the-infinite-hows-or-the-dangers-of-the-five-whys/" rel="nofollow">The Infinite Hows</a>: this provides a strong criticism of the five whys method.</li>
<li><a href="http://techblog.netflix.com/2015/11/linux-performance-analysis-in-60s.html" rel="nofollow">Linux Performance Analysis in 60,000 Milliseconds</a></li>
<li><a href="https://product.hubspot.com/blog/bid/64771/post-mortems-at-hubspot-what-i-learned-from-250-whys" rel="nofollow">Post-Mortems at HubSpot: What I Learned From 250 Whys</a></li>
<li><a href="https://jvns.ca/debugging-zine.pdf" rel="nofollow">Debugging zine</a>, Julian Evans</li>
<li><a href="https://wizardzines.com/comics/understand-can-fix/" rel="nofollow">If you understand a bug, you can fix it</a></li>
<li><a href="https://daniel.feldroy.com/posts/thirty-minute-rule" rel="nofollow">The Thirty Minute Rule</a>: if anyone gets stuck on something for more than 30 minutes, they should ask for help</li>
<li><a href="https://stackoverflow.com/help/minimal-reproducible-example" rel="nofollow">How to create a Minimal, Reproducible Example </a>, Stack Overflow</li>
<li><a href="https://jvns.ca/blog/2022/08/30/a-way-to-categorize-debugging-skills/" rel="nofollow">Some ways to get better at debugging</a>, Julia Evans
<ul dir="auto">
<li>Learn the codebase</li>
<li>Learn the system (e.g., HTTP stack, database transactions)</li>
<li>Learn your tools (e.g., <code>strace</code>, <code>tcpdump</code>)</li>
<li>Learn strategies (e.g., writing code to reproduce, adding logging, taking a break)</li>
<li>Get experience: according to a study, "experts simply formed more correct hypotheses and were more efficient at finding the fault."</li>
</ul>
</li>
<li><a href="https://stackoverflow.com/questions/23865274/what-exactly-is-the-saff-squeeze-method-of-finding-a-bug" rel="nofollow">What exactly is the 'Saff Squeeze' method of finding a bug?</a>
<ul dir="auto">
<li>A systematic technique for deleting both test code and non-test code from a failing test until the test and code are small enough to understand.</li>
</ul>
</li>
<li><a href="https://jvns.ca/blog/2016/03/16/tcpdump-is-amazing/" rel="nofollow">tcpdump is amazing</a>, Julia Evans</li>
</ul>
<h3 tabindex="-1" dir="auto">Design (visual, UX, UI, typography)</h3>
<p dir="auto">I highly recommend reading <a href="http://www.amazon.com/gp/product/0133966151/ref=pd_lpo_sbs_dp_ss_1?pf_rd_p=1944687602&amp;pf_rd_s=lpo-top-stripe-1&amp;pf_rd_t=201&amp;pf_rd_i=0321534042&amp;pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_r=1R7MVQP0BCP7GP9VZGYX" rel="nofollow">The Non-Designer's Design Book</a>. This is a pretty short book that will give you some very actionable design advices.</p>
<ul dir="auto">
<li>If you're working on data, Edward Tufte's <a href="http://www.amazon.com/Visual-Display-Quantitative-Information/dp/0961392142/ref=sr_1_1?ie=UTF8&amp;qid=1458046603&amp;sr=8-1&amp;keywords=tufte" rel="nofollow">The Visual Display of Quantitative Information</a> is considered a classic.</li>
<li>The <a href="http://www.amazon.com/Universal-Principles-Design-Revised-Updated/dp/1592535879/ref=sr_1_1?ie=UTF8&amp;qid=1458046663&amp;sr=8-1&amp;keywords=universal+principles+of+design" rel="nofollow">Universal Principles of Design</a> will give you enough vocabulary and concepts to describe design challenges into words.</li>
<li><a href="https://news.ycombinator.com/item?id=12711060" rel="nofollow">Book recommendations from HackerNews</a></li>
<li>🏙<a href="https://speakerdeck.com/tracymakes/design-for-non-designers-beyond-tellerand-dusseldorf-2018" rel="nofollow">Design for Non-Designers</a></li>
</ul>
<p dir="auto">Articles :</p>
<ul dir="auto">
<li><a href="https://uxdesign.cc/10-usability-heuristics-every-designer-should-know-129b9779ac53" rel="nofollow">10 Usability Heuristics Every Designer Should Know</a>
<ul dir="auto">
<li>Visibility of System Status</li>
<li>The Match Between The System And The Real World</li>
<li>Every system should have a clear emergency exit</li>
<li>Don't forget that people spend 90% of their time interacting with other apps</li>
<li>Recognition Rather Than Recall (recognition = shallow form of retrieval from memory, e.g. a familiar person, recall = deeper retrieval)</li>
<li>”Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.” – Antoine de Saint-Exupery</li>
<li>Help Users Recognize, Diagnose, And Recover From Errors</li>
</ul>
</li>
<li><a href="https://practicaltypography.com/" rel="nofollow">Butterick’s Practical Typography</a></li>
<li><a href="https://blog.datawrapper.de/beautifulcolors/" rel="nofollow">How to pick more beautiful colors for your data visualizations</a></li>
<li><a href="https://typographyforlawyers.com/" rel="nofollow">Typography for Lawyers</a></li>
<li><a href="https://anthonyhobday.com/sideprojects/saferules/" rel="nofollow">Visual design rules you can safely follow every time</a></li>
</ul>
<p dir="auto">Resources:</p>
<ul dir="auto">
<li>🧰 <a href="https://github.com/bradtraversy/design-resources-for-developers">bradtraversy/design-resources-for-developers</a>: design and UI resources from stock photos, web templates, CSS frameworks, UI libraries, tools...</li>
</ul>
<h3 tabindex="-1" dir="auto">Design (OO modeling, architecture, patterns, anti-patterns, etc.)</h3>
<p dir="auto">Here's a list of good books:</p>
<ul dir="auto">
<li>📖 <a href="http://www.amazon.com/dp/0201633612/" rel="nofollow">Design Patterns: Elements of Reusable Object-Oriented Software</a>: dubbed "the gang of four", this is almost a required reading for any developer. A lot of those are a bit overkill for Python (because everything is an object, and dynamic typing), but the main idea (composition is better than inheritance) definitely is a good philosophy.
<ul dir="auto">
<li>And their nefarious nemesis <a href="http://nishitalab.org/user/paulo/files/resign-patterns.txt" rel="nofollow">Resign Patterns</a></li>
</ul>
</li>
<li>📖 <a href="http://www.amazon.com/dp/0321127420/?tag=stackoverfl08-20" rel="nofollow">Patterns of Enterprise Application Architecture</a>: learn about how database are used in real world applications. Mike Bayer's SQLAlchemy has been heavily influenced by this book.</li>
<li>📖 <a href="https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215" rel="nofollow">Domain-Driven Design: Tackling Complexity in the Heart of Software</a>, Eric Evans</li>
<li>📖 <a href="https://www.goodreads.com/book/show/18043011-clean-architecture" rel="nofollow">Clean Architecture</a>, Robert C. Martin. Uncle Bob proposes an architecture that leverages the Single Responsibility Principle to its fullest. A great way to start a new codebase. Also checkout the <a href="https://github.com/charlax/professional-programming/blob/master/cheatsheets/Clean-Architecture-V1.0.pdf">clean architecture cheatsheet</a> and <a href="https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html" rel="nofollow">this article</a>.</li>
<li>📖 <a href="https://www.amazon.com/dp/0990582906/ref=cm_sw_em_r_mt_dp_U_9xygFb9M86CXY" rel="nofollow">Game Programming Patterns</a>: a book about design, sequencing, behavioral patterns and much more by Robert Nystrom explained through the medium of game programming. The book is also free to read online <a href="https://gameprogrammingpatterns.com/contents.html" rel="nofollow">here</a>.</li>
</ul>
<p dir="auto">One of the absolute references on architecture is Martin Fowler: checkout his <a href="https://martinfowler.com/architecture/" rel="nofollow">Software Architecture Guide</a>.</p>
<p dir="auto">Articles:</p>
<ul dir="auto">
<li>O'Reilly's <a href="https://www.oreilly.com/content/how-to-make-mistakes-in-python/" rel="nofollow">How to make mistakes in Python</a></li>
<li><a href="https://hackernoon.com/education-of-a-programmer-aaecf2d35312" rel="nofollow">Education of a Programmer</a>: a developer's thoughts after 35 years in the industry. There's a particularly good section about design &amp; complexity (see "the end to end argument", "layering and componentization").</li>
<li><a href="https://en.wikipedia.org/wiki/Domain-driven_design" rel="nofollow">Domain-driven design</a>, Wikipedia.</li>
<li><a href="https://www.youtube.com/watch?v=mVVNJKv9esE" rel="nofollow">On the Spectrum of Abstraction</a> 🎞, Cheng Lou</li>
<li><a href="https://overreacted.io/the-bug-o-notation/" rel="nofollow">The “Bug-O” Notation</a>, Dan Abramov</li>
<li><a href="https://github.com/charlax/professional-programming/blob/master/antipatterns">Antipatterns</a></li>
<li><a href="http://learnpythonthehardway.org/book/ex44.html" rel="nofollow">Inheritance vs. composition</a>: a concrete example in Python. <a href="http://python-textbok.readthedocs.io/en/latest/Object_Oriented_Programming.html" rel="nofollow">Another slightly longer one here</a>. <a href="http://blog.thedigitalcatonline.com/blog/2014/08/20/python-3-oop-part-3-delegation-composition-and-inheritance/#.V7SZ4tB96Rs" rel="nofollow">One last one, in Python 3</a>.</li>
<li><a href="http://c2.com/cgi/wiki?CompositionInsteadOfInheritance" rel="nofollow">Composition Instead Of Inheritance</a></li>
<li><a href="https://hackernoon.com/complexity-and-strategy-325cd7f59a92" rel="nofollow">Complexity and Strategy</a>: interesting perspective on complexity and flexibility with really good examples (e.g. Google Apps Suite vs. Microsoft Office).</li>
<li><a href="https://aosabook.org/en/index.html" rel="nofollow">The Architecture of Open Source Applications</a></li>
<li><a href="https://cacm.acm.org/magazines/2011/8/114933-the-robustness-principle-reconsidered/fulltext" rel="nofollow">The Robustness Principle Reconsidered</a>
<ul dir="auto">
<li>Jon Postel: "Be conservative in what you do, be liberal in what you accept from others." (RFC 793)</li>
<li>Two general problem areas are impacted by the Robustness Principle: orderly interoperability and security.</li>
</ul>
</li>
<li><a href="http://catb.org/esr/writings/taoup/html/ch01s06.html#id2877610" rel="nofollow">Basics of the Unix Philosophy</a>, Eric S Raymond</li>
<li><a href="https://thereader.mitpress.mit.edu/habits-of-expert-software-designers/" rel="nofollow">Eight Habits of Expert Software Designers: An Illustrated Guide</a></li>
</ul>
<blockquote>
<p dir="auto">You can use an eraser on the drafting table or a sledge hammer on the construction site. (Frank Lloyd Wright)</p>
</blockquote>
<p dir="auto">Resources:</p>
<ul dir="auto">
<li>🧰 <a href="https://principles.design/" rel="nofollow">Design Principles</a></li>
</ul>
<h4 tabindex="-1" dir="auto">Design: database schema</h4>
<ul dir="auto">
<li><a href="https://www.mikealche.com/software-development/a-humble-guide-to-database-schema-design" rel="nofollow">A humble guide to database schema design</a>, Mike Alche
<ul dir="auto">
<li>Use at least third normal form</li>
<li>Create a last line of defense with constraints</li>
<li>Never store full addresses in a single field</li>
<li>Never store firstname and lastname in the same field</li>
<li>Establish conventions for table and field names.</li>
</ul>
</li>
</ul>
<h4 tabindex="-1" dir="auto">Design: patterns</h4>
<ul dir="auto">
<li><a href="https://martinfowler.com/bliki/KeystoneInterface.html" rel="nofollow">KeystoneInterface</a>, Martin Fowler.
<ul dir="auto">
<li>Build all the back-end code, integrate, but don't build the user-interface</li>
</ul>
</li>
<li><a href="https://sourcemaking.com/design-patterns-and-tips" rel="nofollow">101 Design Patterns &amp; Tips for Developers</a></li>
<li><a href="https://www.toptal.com/python/python-design-patterns" rel="nofollow">Python Design Patterns: For Sleek And Fashionable Code</a>: a pretty simple introduction to common design patterns (Facade, Adapter, Decorator). A more complete list of design patterns implementation in Python on <a href="https://github.com/faif/python-patterns">Github</a>.</li>
<li>SourceMaking's <a href="https://sourcemaking.com/design_patterns" rel="nofollow">Design Patterns</a> seems to be a good web resource too.</li>
<li><a href="https://code.joejag.com/2016/anti-if-the-missing-patterns.html" rel="nofollow">Anti-If: The missing patterns</a></li>
</ul>
<h4 tabindex="-1" dir="auto">Design: simplicity</h4>
<ul dir="auto">
<li><a href="https://www.infoq.com/presentations/Simple-Made-Easy" rel="nofollow">Simple Made Easy</a> 🎞, Rich Hickey. This is an incredibly inspiring talk redefining simplicity, ease and complexity, and showing that solutions that look easy may actually harm your design.</li>
</ul>
<h3 tabindex="-1" dir="auto">Dev environment &amp; tools</h3>
<ul dir="auto">
<li>🧰 <a href="https://github.com/jondot/awesome-devenv">Awesome Dev Env</a></li>
</ul>
<p dir="auto">Tools</p>
<ul dir="auto">
<li><a href="https://github.com/nicolargo/glances">Glances: An eye on your system</a></li>
<li><a href="https://github.com/jkbrzt/httpie">HTTPie: a CLI, cURL-like tool for humans</a></li>
<li><a href="https://stedolan.github.io/jq/" rel="nofollow">jq: command-line JSON processor</a></li>
<li><a href="http://tmux.github.io/" rel="nofollow">tmux: terminal multiplexer</a></li>
<li><a href="http://hisham.hm/htop/" rel="nofollow">htop: an interactive process viewer for Linux</a></li>
<li><a href="https://peteris.rocks/blog/htop/" rel="nofollow">htop explained</a></li>
<li><a href="https://copyconstruct.medium.com/socat-29453e9fc8a6" rel="nofollow">socat</a></li>
<li><a href="https://robotmoon.com/ssh-tunnels/" rel="nofollow">Visual guide to SSH tunnels</a></li>
<li><a href="https://github.com/casey/just/">casey/just</a>: a command runner written in Rust (claims to be better than Makefile)</li>
<li><a href="https://gazr.io/" rel="nofollow">Gazr</a>: an opinionated way to define your <code>Makefile</code></li>
</ul>
<p dir="auto">Article about tools:</p>
<ul dir="auto">
<li><a href="https://macwright.com/2021/03/16/return-of-fancy-tools.html" rel="nofollow">The return of fancy tools</a>
<ul dir="auto">
<li>Simple tools make you think a little more</li>
<li>Drucker: "I’m not writing it down to remember it later, I’m writing it down to remember it now."</li>
<li>Frictionless note-taking produces notes, but it doesn't produce memory.</li>
</ul>
</li>
</ul>
<h3 tabindex="-1" dir="auto">Diversity &amp; inclusion</h3>
<p dir="auto">Check out my <a href="https://github.com/charlax/engineering-management">list of management resources</a>.</p>
<h3 tabindex="-1" dir="auto">Docker</h3>
<p dir="auto">See also the Python-specific section in <a href="https://github.com/charlax/python-education#deployment">charlax/python-education</a>.</p>
<ul dir="auto">
<li><a href="https://nickjanetakis.com/blog/best-practices-around-production-ready-web-apps-with-docker-compose" rel="nofollow">Best Practices Around Production Ready Web Apps with Docker Compose</a>
<ul dir="auto">
<li>Avoiding 2 Compose Files for Dev and Prod with an Override File</li>
<li>Reducing Service Duplication with Aliases and Anchors</li>
<li>Defining your <code>HEALTHCHECK</code> in Docker Compose not your Dockerfile</li>
<li>Making the most of environment variables</li>
<li>Using Multi-stage builds to optimize image size</li>
<li>Running your container as a non-root user</li>
</ul>
</li>
<li><a href="https://testdriven.io/blog/docker-best-practices/" rel="nofollow">Docker Best Practices for Python Developers</a>
<ul dir="auto">
<li>Use multi-stage builds</li>
<li>Pay close attention to the order of your Dockerfile commands to leverage layer caching</li>
<li>Smaller Docker images are more modular and secure (watch out for Alpine though)</li>
<li>Minimize the number of layers (<code>RUN</code>, <code>COPY</code>, <code>ADD</code>)</li>
<li>Use unprivileged containers</li>
<li>Prefer <code>COPY</code> over <code>ADD</code></li>
<li>Cache python packages to the docker host</li>
<li>Prefer array over string syntax</li>
<li>Understand the difference between <code>ENTRYPOINT</code> and <code>CMD</code></li>
<li>Include a <code>HEALTHCHECK</code> instruction</li>
<li>Whenever possible, avoid using the <code>latest</code> tag.</li>
<li>Don't store secrets in images</li>
<li>Use a <code>.dockerignore</code> file (include <code>**/.git</code>, etc.)</li>
<li>Lint and Scan Your Dockerfiles and Images (e.g. with <code>hadolint</code>)</li>
<li>Log to stdout or stderr</li>
</ul>
</li>
<li><a href="https://tbhaxor.com/docker-containers-security/" rel="nofollow">Docker Containers Security</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Documentation</h3>
<ul dir="auto">
<li><a href="https://gist.github.com/zsup/9434452">Documentation-Driven Development</a></li>
<li><a href="https://krausefx.com/blog/writing-automated-tests-for-your-documentation" rel="nofollow">Writing automated tests for your documentation</a>: this should be required, IMO. Testing code samples in your documentation ensures they never get outdated.</li>
<li>🏙 <a href="https://speakerdeck.com/kennethreitz/documentation-is-king" rel="nofollow">Documentation is king</a>, Kenneth Reitz</li>
<li><a href="https://keepachangelog.com/en/1.0.0/" rel="nofollow">Keep a Changelog</a></li>
<li><a href="https://adr.github.io/" rel="nofollow">Architectural Decision Records</a>: a way to document architecture decision.</li>
<li><a href="https://documentation.divio.com/" rel="nofollow">The documentation system</a></li>
<li><a href="https://www1.nyc.gov/assets/doh/downloads/pdf/em/gawande_checklist.pdf" rel="nofollow">Checklist for checklists</a></li>
<li><a href="https://stackoverflow.blog/2021/12/23/best-practices-for-writing-code-comments/" rel="nofollow">Best practices for writing code comments</a></li>
<li><a href="https://jmmv.dev/2021/04/always-be-quitting.html" rel="nofollow">Always be quitting</a>
<ul dir="auto">
<li>Document your knowledge</li>
<li>Train your replacement</li>
<li>Delegate</li>
<li>By being disposable, you free yourself to work on high-impact projects.</li>
</ul>
</li>
<li><a href="https://reproof.app/blog/document-first-then-build" rel="nofollow">Write documentation first. Then build.</a></li>
<li><a href="https://diataxis.fr/" rel="nofollow">Diátaxis</a>: a systematic approach to technical documentation authoring
<ul dir="auto">
<li>There are four modes: tutorials, how-to guides, technical reference and explanation</li>
<li>The docs goes into a lot of details about each model.</li>
</ul>
</li>
</ul>
<blockquote>
<p dir="auto">The palest ink is more reliable than the most powerful memory.
-- Chinese proverb</p>
</blockquote>
<h3 tabindex="-1" dir="auto">Dotfiles</h3>
<ul dir="auto">
<li>🧰 <a href="https://github.com/webpro/awesome-dotfiles">Awesome dotfiles</a>: lots of great dotfiles.</li>
<li><a href="https://github.com/charlax/dotfiles">My dotfiles</a></li>
</ul>
<p dir="auto">Articles</p>
<ul dir="auto">
<li><a href="http://code.tutsplus.com/tutorials/setting-up-a-mac-dev-machine-from-zero-to-hero-with-dotfiles--net-35449" rel="nofollow">Setting Up a Mac Dev Machine From Zero to Hero With Dotfiles</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Editors &amp; IDE</h3>
<ul dir="auto">
<li><a href="https://github.com/dreikanter/sublime-bookmarks">Sublime Text essential plugins and resources</a></li>
<li>Bram Moolenaar (Vim author), <a href="http://www.moolenaar.net/habits.html" rel="nofollow">Seven habits of effective text editing</a> (<a href="http://www.moolenaar.net/habits_2007.pdf" rel="nofollow">presentation</a>). This is about Vim but it contains good lessons about why investing time in learning how to be productive with your text editors pays off.</li>
<li><a href="https://code.visualstudio.com/" rel="nofollow">VScode</a> is one of the most popular text editors as of writing.
<ul dir="auto">
<li><a href="https://www.smashingmagazine.com/2018/01/visual-studio-code/" rel="nofollow">Visual Studio Code Can Do That?</a>, Smashing Magazine.</li>
</ul>
</li>
<li><a href="https://realdougwilson.com/writing/coding-with-character" rel="nofollow">Coding with Character</a></li>
</ul>
<p dir="auto">About Vim specifically:</p>
<ul dir="auto">
<li>🧰 <a href="http://vimawesome.com/" rel="nofollow">vim-awesome</a></li>
<li>🎞 <a href="http://vimcasts.org/" rel="nofollow">Vimcasts</a></li>
<li>⭐️ <a href="https://thevaluable.dev/vim-beginner/" rel="nofollow">Is Vim Really Not For You? A Beginner Guide</a>
<ul dir="auto">
<li>The first part of a series of 6 articles with lots of detailed and practical tips for using Vim efficiently.</li>
<li><a href="https://thevaluable.dev/vim-advanced/" rel="nofollow">A Vim Guide for Advanced Users</a>: more advanced shortcuts and commands</li>
</ul>
</li>
<li>📖 <a href="https://www.oreilly.com/library/view/learning-the-vi/9780596529833/" rel="nofollow">Learning the vi and Vim Editors</a></li>
<li>📖 <a href="https://pragprog.com/titles/dnvim2/practical-vim-second-edition/" rel="nofollow">Practical Vim</a>, Drew Neil</li>
<li><a href="https://learnvimscriptthehardway.stevelosh.com/" rel="nofollow">Learn Vimscript the Hard Way</a></li>
<li><a href="https://www.vimgolf.com/" rel="nofollow">VimGolf</a>: nice challenges to learn Vim</li>
<li><a href="https://blog.sanctum.geek.nz/vim-anti-patterns/" rel="nofollow">Vim anti-patterns</a></li>
<li><a href="https://danielmiessler.com/study/vim/" rel="nofollow">Learn Vim For the Last Time: A Tutorial and Primer</a></li>
<li><a href="https://quickref.me/vim" rel="nofollow">Vim Cheat Sheet &amp; Quick Reference</a></li>
<li><a href="https://begriffs.com/posts/2019-07-19-history-use-vim.html" rel="nofollow">History and effective use of Vim</a></li>
<li><a href="https://www.barbarianmeetscoding.com/boost-your-coding-fu-with-vscode-and-vim/moving-blazingly-fast-with-the-core-vim-motions/" rel="nofollow">Moving Blazingly Fast With The Core Vim Motions</a></li>
</ul>
<p dir="auto">Feel free to check my <a href="https://github.com/charlax/dotfiles/tree/master/vim">vim configuration</a> and my <a href="https://github.com/charlax/dotfiles/tree/master/vim">vim cheatsheet</a>.</p>
<p dir="auto">Other editors:</p>
<ul dir="auto">
<li><a href="https://www2.lib.uchicago.edu/keith/emacs/" rel="nofollow">Use GNU Emacs</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Email</h3>
<ul dir="auto">
<li><a href="https://explained-from-first-principles.com/email/#json-meta-application-protocol" rel="nofollow">Email explained from first principles</a></li>
<li>🏙 <a href="https://speakerdeck.com/wildbit/transactional-email-best-practices" rel="nofollow">Transactional Email Best Practices</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Engineering management</h3>
<p dir="auto">Checkout my <a href="https://github.com/charlax/engineering-management">list of management resources</a>.</p>
<h3 tabindex="-1" dir="auto">Exercises</h3>
<p dir="auto">The best way to learn is to learn by doing.</p>
<ul dir="auto">
<li><a href="https://github.com/codecrafters-io/build-your-own-x">build-your-own-x</a>: compilation of well-written, step-by-step guides for re-creating our favorite technologies from scratch
<ul dir="auto">
<li>Richard Feynman: "what I cannot create, I do not understand"</li>
</ul>
</li>
<li><a href="http://play.elevatorsaga.com/" rel="nofollow">The elevator programming game</a></li>
<li><a href="https://austinhenley.com/blog/challengingprojects.html" rel="nofollow">Challenging projects every programmer should try</a>, Austin Z. Henley</li>
<li><a href="http://web.eecs.utk.edu/~azh/blog/challengingprojects.html" rel="nofollow">Challenging projects every programmer should try</a>: text editor, space invaders, compiler (Tiny Basic), mini OS, spreadsheet, video game console emulator.</li>
<li><a href="https://web.eecs.utk.edu/~azh/blog/morechallengingprojects.html" rel="nofollow">More challenging projects every programmer should try</a>: ray tracer, key-value store web API, web browser, stock trading bot.</li>
<li><a href="https://kean.blog/post/lets-build-regex" rel="nofollow">Let’s Build a Regex Engine</a></li>
<li><a href="https://nakabonne.dev/posts/write-tsdb-from-scratch/" rel="nofollow">Write a time-series database engine from scratch</a></li>
<li><a href="https://eugenkiss.github.io/7guis/tasks/" rel="nofollow">7 GUIs to build to learn fundamental UI programming skills</a></li>
<li><a href="https://jvns.ca/blog/2023/04/17/a-list-of-programming-playgrounds/" rel="nofollow">A list of programming playgrounds</a>, Julia Evans</li>
<li><a href="https://ntietz.com/blog/write-more-useless-software/" rel="nofollow">Write more "useless" software</a></li>
</ul>
<p dir="auto">Practice:</p>
<ul dir="auto">
<li><a href="https://www.codingame.com/start" rel="nofollow">CodinGame</a></li>
<li><a href="https://www.codewars.com/" rel="nofollow">Codewars</a></li>
<li><a href="https://exercism.org/" rel="nofollow">Exercism</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Experimentation</h3>
<ul dir="auto">
<li><a href="https://posthog.com/blog/ab-testing-mistakes" rel="nofollow">8 annoying A/B testing mistakes every engineer should know</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Functional programming (FP)</h3>
<ul dir="auto">
<li><a href="https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53#.39ax09e4k" rel="nofollow">Goodbye, Object Oriented Programming</a></li>
<li><a href="https://www.youtube.com/watch?v=LnX3B9oaKzw" rel="nofollow">Functional Programming &amp; Haskell</a> 🎞: some good reasons to learn FP!</li>
<li><a href="https://www.matthewgerstman.com/functional-programming-fundamentals/" rel="nofollow">Functional Programming Fundamentals</a>: short introduction to FP and its advantages.</li>
<li><a href="https://blog.cleancoder.com/uncle-bob/2014/11/24/FPvsOO.html" rel="nofollow">OO vs FP</a>, Robert C. Martin, The Clean Code Blog. A pretty interesting take on the differences between OOP and FP from an expert in OOP.
<ul dir="auto">
<li>OO is not about state. Objects are bags of functions, not bags of data.</li>
<li>Functional Programs, like OO Programs, are composed of functions that operate on data.</li>
<li>FP imposes discipline upon assignment.</li>
<li>OO imposes discipline on function pointers.</li>
<li>The principles of software design still apply, regardless of your programming style. The fact that you’ve decided to use a language that doesn’t have an assignment operator does not mean that you can ignore the Single Responsibility Principle.</li>
</ul>
</li>
<li><a href="https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/" rel="nofollow">Parse, don’t validate</a>
<ul dir="auto">
<li>Use a data structure that makes illegal states unrepresentable</li>
<li>Push the burden of proof upward as far as possible, but no further</li>
<li>Let your datatypes inform your code, don’t let your code control your datatypes</li>
<li>Don’t be afraid to parse data in multiple passes</li>
<li>Avoid denormalized representations of data, especially if it’s mutable</li>
<li>Use abstract datatypes to make validators “look like” parsers</li>
</ul>
</li>
<li>🏙 <a href="https://speakerdeck.com/igstan/functional-programming" rel="nofollow">Functional Programming</a></li>
<li><a href="https://nikgrozev.com/2013/12/10/monads-in-15-minutes/" rel="nofollow">Monads in 15 minutes</a></li>
<li><a href="https://github.com/hemanth/functional-programming-jargon">hemanth/functional-programming-jargon</a>: jargon from the functional programming world in simple terms</li>
<li><a href="https://forum.exercism.org/t/the-definitive-guide-to-learning-functional-programming/3254" rel="nofollow">The definitive guide to learning functional programming</a>, Exercism</li>
</ul>
<h3 tabindex="-1" dir="auto">Games development</h3>
<ul dir="auto">
<li><a href="https://abagames.github.io/joys-of-small-game-development-en/" rel="nofollow">Introduction · Joys of Small Game Development</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Graphics</h3>
<ul dir="auto">
<li><a href="https://faultlore.com/blah/text-hates-you/" rel="nofollow">Text Rendering Hates You</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Hardware</h3>
<ul dir="auto">
<li><a href="https://nandgame.com/" rel="nofollow">NandGame</a>: build a computer from scratch.</li>
<li><a href="http://databasearchitects.blogspot.com/2021/06/what-every-programmer-should-know-about.html" rel="nofollow">What Every Programmer Should Know About SSDs</a></li>
<li><a href="https://blog.robertelder.org/how-to-make-a-cpu/" rel="nofollow">How To Make A CPU - A Simple Picture Based Explanation</a></li>
</ul>
<h3 tabindex="-1" dir="auto">HTTP</h3>
<ul dir="auto">
<li><a href="https://www.codetinkerer.com/2015/12/04/choosing-an-http-status-code.html" rel="nofollow">Choosing an HTTP Status Code — Stop Making It Hard</a></li>
<li><a href="https://httptoolkit.tech/blog/http-wtf/" rel="nofollow">HTTPWTF</a></li>
<li><a href="https://webdevguild.com/blog/10-things-http/" rel="nofollow">10 Surprising Things You Didn't Know About HTTP</a></li>
<li><a href="https://fasterthanli.me/articles/the-http-crash-course-nobody-asked-for" rel="nofollow">The HTTP crash course nobody asked for</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Humor</h3>
<ul dir="auto">
<li><a href="https://www.informatika.bg/jeffdean" rel="nofollow">The Jeff Dean Facts</a>
<ul dir="auto">
<li>Compilers don't warn Jeff Dean. Jeff Dean warns compilers.</li>
<li>Unsatisfied with constant time, Jeff Dean created the world's first <code>O(1/N)</code> algorithm.</li>
<li>Jeff Dean mines bitcoins. In his head.</li>
</ul>
</li>
<li><a href="https://thedailywtf.com/" rel="nofollow">The Daily WTF: Curious Perversions in Information Technology</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Incident response (oncall, alerting, outages, firefighting, postmortem)</h3>
<ul dir="auto">
<li><a href="https://blog.heroku.com/archives/2014/5/9/incident-response-at-heroku" rel="nofollow">Incident Response at Heroku</a>
<ul dir="auto">
<li>Described the Incident Commander role, inspired by natural disaster incident response.</li>
<li>Also in presentation: <a href="https://speakerdeck.com/arupchak/incident-response-patterns-what-we-have-learned-at-pagerduty" rel="nofollow">Incident Response Patterns: What we have learned at PagerDuty - Speaker Deck</a></li>
</ul>
</li>
<li><a href="https://linuxczar.net/sysadmin/philosophy-on-alerting/" rel="nofollow">My Philosophy On Alerting</a>
<ul dir="auto">
<li>Pages should be urgent, important, actionable, and real.</li>
<li>Err on the side of removing noisy alerts – over-monitoring is a harder problem to solve than under-monitoring.</li>
<li>Symptoms are a better way to capture more problems more comprehensively and robustly with less effort.</li>
<li>Include cause-based information in symptom-based pages or on dashboards, but avoid alerting directly on causes.</li>
<li>The further up your serving stack you go, the more distinct problems you catch in a single rule. But don’t go so far you can’t sufficiently distinguish what’s going on.</li>
<li>If you want a quiet oncall rotation, it’s imperative to have a system for dealing with things that need timely response, but are not imminently critical.</li>
<li>This classical article has now become a <a href="https://sre.google/sre-book/monitoring-distributed-systems/" rel="nofollow">chapter</a> in Google's SRE book.</li>
</ul>
</li>
<li>The Google SRE book's <a href="https://landing.google.com/sre/workbook/chapters/on-call/" rel="nofollow">chapter about oncall</a></li>
<li><a href="https://www.transposit.com/blog/2020.01.30-writing-runbook-documentation-when-youre-an-sre/" rel="nofollow">Writing Runbook Documentation When You’re An SRE</a>
<ul dir="auto">
<li>Playbooks “reduce stress, the mean time to repair (MTTR), and the risk of human error.”</li>
<li>Using a template can be beneficial because starting from a blank document is incredibly hard.</li>
<li>The Curse of Knowledge is a cognitive bias that occurs when someone is communicating with others and unknowingly assumes the level of knowledge of the people they are communicating with.</li>
<li>Make your content easy to glance over.</li>
<li>If a script is longer than a single line, treat it like code, and check it into a repository to be source control and potentially tested.</li>
</ul>
</li>
<li><a href="https://newsletter.pragmaticengineer.com/p/incident-review-best-practices?s=r" rel="nofollow">Incident Review and Postmortem Best Practices</a>, Gergely Orosz</li>
<li><a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-61r2.pdf" rel="nofollow">Computer Security Incident Handling Guide</a>, NIST</li>
<li><a href="https://resources.sei.cmu.edu/library/asset-view.cfm?assetID=505044" rel="nofollow">Incident Management Resources</a>, Carnegie Mellon University</li>
<li><a href="https://en.wikipedia.org/wiki/Sterile_flight_deck_rule" rel="nofollow">Sterile flight deck rule</a>, Wikipedia</li>
</ul>
<h4 tabindex="-1" dir="auto">Postmortem</h4>
<ul dir="auto">
<li>A great example of a <a href="https://about.gitlab.com/2017/02/01/gitlab-dot-com-database-incident/" rel="nofollow">postmortem from Gitlab (01/31/2017)</a> for an outage during which an engineer's action caused the irremediable loss of 6 hours of data.</li>
<li><a href="https://codeascraft.com/2012/05/22/blameless-postmortems/" rel="nofollow">Blameless PostMortems and a Just Culture</a></li>
<li><a href="https://github.com/danluu/post-mortems">A list of postmortems on Github</a></li>
<li>Google's SRE book, <a href="https://landing.google.com/sre/workbook/chapters/postmortem-culture/" rel="nofollow">Postmortem chapter</a> is excellent and includes many examples.</li>
</ul>
<blockquote>
<p dir="auto">"Let’s plan for a future where we’re all as stupid as we are today."</p>
<p dir="auto">– Dan Milstein</p>
</blockquote>
<p dir="auto">Example outline for a postmortem:</p>
<ul dir="auto">
<li>Executive Summary
<ul dir="auto">
<li>Impact</li>
<li>Root cause</li>
</ul>
</li>
<li>Impact
<ul dir="auto">
<li>Number of impacted users</li>
<li>Lost revenue</li>
<li>Duration</li>
<li>Team impact</li>
</ul>
</li>
<li>Timeline
<ul dir="auto">
<li>Detection</li>
<li>Resolution</li>
</ul>
</li>
<li>Root cause analysis
<ul dir="auto">
<li>E.g. with 5 whys method</li>
</ul>
</li>
<li>Lessons learned
<ul dir="auto">
<li>Things that went well</li>
<li>Things that went poorly</li>
</ul>
</li>
<li>Action items (include direct links to task tracking tool)
<ul dir="auto">
<li>Tasks to improve prevention (including training)</li>
<li>Tasks to improve detection (including monitoring and alerting)</li>
<li>Tasks to improve mitigation (including emergency response)</li>
</ul>
</li>
</ul>
<h3 tabindex="-1" dir="auto">Internet</h3>
<ul dir="auto">
<li><a href="https://web.stanford.edu/class/msande91si/www-spr04/readings/week1/InternetWhitepaper.htm" rel="nofollow">How Does the Internet Work?</a></li>
<li><a href="https://github.com/vasanthk/how-web-works">How the web works</a></li>
<li><a href="https://beesbuzz.biz/blog/2934-Advice-to-young-web-developers" rel="nofollow">Advice to young web developers</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Interviewing</h3>
<p dir="auto">Note: this is about you as an interviewee, <strong>not</strong> as an interviewer. To check out my list of resources for interviewers, go to my <a href="https://github.com/charlax/engineering-management#hiring-interviews">engineering-management repository</a>.</p>
<ul dir="auto">
<li><a href="https://github.com/checkcheckzz/system-design-interview">System design interview for IT company</a></li>
<li><a href="https://github.com/jdsutton/Technical-Interview-Megarepo">Technical Interview Megarepo</a>: study materials for SE/CS technical interviews</li>
<li><a href="https://medium.com/on-writing-code/how-to-win-the-coding-interview-71ae7102d685" rel="nofollow">How to Win the Coding Interview</a></li>
<li><a href="https://medium.freecodecamp.com/5-key-learnings-from-the-post-bootcamp-job-search-9a07468d2331#.uq7vbbjfx" rel="nofollow">I spent 3 months applying to jobs after a coding bootcamp. Here’s what I learned.</a></li>
<li><a href="http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/" rel="nofollow">Top 10 algorithms in Interview Questions</a></li>
<li><a href="https://rkoutnik.com/articles/Questions-to-ask-your-interviewer.html" rel="nofollow">Questions to ask your interviewer</a></li>
<li><a href="https://github.com/donnemartin/interactive-coding-challenges">Interactive Python coding interview challenges</a></li>
<li><a href="https://yangshun.github.io/tech-interview-handbook/introduction/" rel="nofollow">Tech Interview Handbook</a></li>
<li><a href="https://github.com/viraptor/reverse-interview">Questions to ask the company during your interview</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university">A complete computer science study plan to become a software engineer</a></li>
<li><a href="https://www.zainrizvi.io/blog/the-interviewing-advice-no-one-shares/" rel="nofollow">Interview advice that got me offers from Google, Microsoft, and Stripe</a></li>
<li><a href="https://docs.google.com/spreadsheets/d/1gy9cmPwNhZvola7kqnfY3DElk7PYrz2ARpaCODTp8Go/htmlview?pru=AAABfLx5bfQ*dDBm6wJC2BsJGIrDvJfFQw" rel="nofollow">A framework for grading your performance on programming interview problems</a></li>
<li><a href="https://blog.pragmaticengineer.com/preparing-for-the-systems-design-and-coding-interviews/" rel="nofollow">Preparing for the Systems Design and Coding Interview</a>, Gergely Orosz</li>
<li><a href="https://meekg33k.dev/what-i-learned-from-doing-60-technical-interviews-in-30-days" rel="nofollow">What I Learned from Doing 60+ Technical Interviews in 30 Days</a></li>
<li><a href="https://github.com/Twipped/InterviewThis">Twipped/InterviewThis</a>: questions to ask prospective employers</li>
<li><a href="https://interviewing.io/guides/system-design-interview" rel="nofollow">System Design Interview Guide for Senior Engineers</a>, interviewing.io</li>
</ul>
<p dir="auto">Résumé:</p>
<ul dir="auto">
<li><a href="https://danicfilip.com/2020/red-flags-on-your-resume/?ck_subscriber_id=887770473" rel="nofollow">The Red Flags on Your Resume</a></li>
<li><a href="https://huyenchip.com/2023/01/24/what-we-look-for-in-a-candidate.html" rel="nofollow">What we look for in a resume</a>
<ul dir="auto">
<li>We look for demonstrated expertise, not keywords</li>
<li>We look for people who get things done</li>
<li>We look for unique perspectives</li>
<li>We care about impact, not meaningless metrics</li>
</ul>
</li>
<li><a href="https://interviewing.io/blog/why-you-shouldnt-list-certifications-on-linkedIn" rel="nofollow">Why you shouldn’t list certifications on LinkedIn</a></li>
</ul>
<p dir="auto">See also the exercises section in this document.</p>
<h3 tabindex="-1" dir="auto">Kubernetes</h3>
<ul dir="auto">
<li><a href="https://github.com/OWASP/www-project-kubernetes-top-ten">OWASP/www-project-kubernetes-top-ten</a></li>
<li><a href="https://spacelift.io/blog/kubernetes-tutorial" rel="nofollow">Kubernetes Tutorial for Beginners: Basic Concepts</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Learning &amp; memorizing</h3>
<p dir="auto">Learn how to learn!</p>
<ul dir="auto">
<li><a href="http://nautil.us/issue/40/learning/how-i-rewired-my-brain-to-become-fluent-in-math-rp" rel="nofollow">How I Rewired My Brain to Become Fluent in Math</a>: subtitled <em>the building blocks of understanding are memorization and repetition</em>.</li>
<li><a href="https://changelog.com/posts/one-sure-fire-way-to-improve-your-coding" rel="nofollow">One Sure-Fire Way to Improve Your Coding</a>: reading code!</li>
<li><a href="http://blog.hiphipjorge.com/tips-for-learning-programming/" rel="nofollow">Tips for learning programming</a></li>
<li><a href="https://blogs.scientificamerican.com/guest-blog/you-can-increase-your-intelligence-5-ways-to-maximize-your-cognitive-potential/" rel="nofollow">You can increase your intelligence: 5 ways to maximize your cognitive potential</a>: forgive the clickbait title, it’s actually a good article.</li>
<li><a href="https://jvns.ca/blog/good-questions/" rel="nofollow">How to ask good questions</a>, Julia Evans.</li>
<li><a href="https://sizovs.net/2018/12/17/stop-learning-frameworks/" rel="nofollow">Stop Learning Frameworks</a></li>
<li><a href="https://www.coursera.org/learn/learning-how-to-learn" rel="nofollow">Learning How to Learn</a>: powerful mental tools to help you master tough subjects</li>
<li><a href="https://andymatuschak.org/books/" rel="nofollow">Why books don’t work</a>, Andy Matuschak.
<ul dir="auto">
<li>"As a medium, books are surprisingly bad at conveying knowledge, and readers mostly don’t realize it."</li>
<li>"In learning sciences, we call this model “transmissionism.” It’s the notion that knowledge can be directly transmitted from teacher to student, like transcribing text from one page onto another. If only!"</li>
<li>"By re-testing yourself on material you’ve learned over expanding intervals, you can cheaply and reliably commit huge volumes of information to long-term memory."</li>
</ul>
</li>
<li><a href="https://senrigan.io/blog/everything-i-know-strategies-tips-and-tricks-for-spaced-repetition-anki/" rel="nofollow">Strategies, Tips, and Tricks for Anki</a>: those advices work for any tool actually
<ul dir="auto">
<li>Add images. Our brains are wired visually, so this helps retention.</li>
<li>Don't add things you don't understand.</li>
<li>Don't add cards memorizing entire lists.</li>
<li>Write it out. For wrong answers, I'll write it on paper. The act of writing is meditative. I really enjoy this.</li>
<li>Keep on asking yourself why? why does this work? why does it work this way? Force yourself to understand the root of a topic.</li>
<li>Cornell Method: when reading a topic, write out questions on the margins to quiz yourself.</li>
<li>Pretend you have to teach it</li>
<li>Use mnemonics phrases like PEMDAS for lists and other hard-to-remember topics.</li>
<li>Delete cards that don't make sense or you don't want to remember anymore.</li>
</ul>
</li>
<li><a href="https://www.supermemo.com/en/archives1990-2015/articles/20rules" rel="nofollow">Effective learning: Twenty rules of formulating knowledge</a>
<ul dir="auto">
<li>Build upon the basics</li>
<li>Stick to the minimum information principle: the material you learn must be formulated in as simple way as it is</li>
<li>Cloze deletion is easy and effective: Kaleida's mission was to create a ... It finally produced one, called Script X. But it took three years</li>
<li>Graphic deletion is as good as cloze deletion</li>
<li>Avoid sets</li>
<li>Avoid enumerations</li>
<li>Combat interference - even the simplest items can be completely intractable if they are similar to other items. Use examples, context cues, vivid illustrations, refer to emotions, and to your personal life</li>
<li>Personalize and provide examples - personalization might be the most effective way of building upon other memories. Your personal life is a gold mine of facts and events to refer to. As long as you build a collection for yourself, use personalization richly to build upon well established memories</li>
<li>Provide sources - sources help you manage the learning process, updating your knowledge, judging its reliability, or importance</li>
<li>Prioritize - effective learning is all about prioritizing.</li>
</ul>
</li>
<li><a href="https://www.inc.com/jeff-haden/how-to-remember-anything-you-really-want-to-remember-backed-by-science.html" rel="nofollow">How to Remember Anything You Really Want to Remember, Backed by Science</a>
<ul dir="auto">
<li>Quiz yourself</li>
<li>Summarize and share with someone else.</li>
<li>Connect what you just learned to experiences you previously had.</li>
</ul>
</li>
<li><a href="https://ncase.me/remember/" rel="nofollow">How To Remember Anything Forever-ish</a>: a comic about learning</li>
<li><a href="https://jvns.ca/blog/learn-how-things-work/" rel="nofollow">Get better at programming by learning how things work</a></li>
<li><a href="https://jvns.ca/blog/2018/09/01/learning-skills-you-can-practice/" rel="nofollow">How to teach yourself hard things</a></li>
<li><a href="https://www.smashingmagazine.com/2021/02/building-personal-learning-curriculum/" rel="nofollow">Building Your Own Personal Learning Curriculum</a></li>
<li><a href="http://www.bennorthrop.com/Essays/2021/always-do-extra.php" rel="nofollow">Always do Extra</a>
<ul dir="auto">
<li>Extra is finishing those two screens, but then researching a new library for form validation that might reduce the boilerplate code.</li>
<li>Extra must be balanced against Normal Work.</li>
<li>Extra must be aligned with your Normal Work.</li>
</ul>
</li>
<li><a href="https://perell.com/essay/against-3x-speed/" rel="nofollow">Against 3X Speed</a>
<ul dir="auto">
<li>Lectures are most effective when they’re only a component of the classroom experience</li>
<li>Learning is about spaced repetition, not binge-reading books</li>
</ul>
</li>
<li><a href="https://commoncog.com/blog/the-problems-with-deliberate-practice/" rel="nofollow">The Problems with Deliberate Practice</a></li>
<li><a href="https://commoncog.com/tacit-knowledge-is-a-real-thing/" rel="nofollow">Why Tacit Knowledge is More Important Than Deliberate Practice</a></li>
<li><a href="http://www.pearlleff.com/in-praise-of-memorization" rel="nofollow">In Praise of Memorization</a>
<ul dir="auto">
<li>You can't reason accurately without knowledge</li>
<li>Memorizing organized your knowledge</li>
<li>It stays with you</li>
</ul>
</li>
<li><a href="https://jvns.ca/blog/2022/03/13/celebrate-tiny-learning-milestones/" rel="nofollow">Celebrate tiny learning milestones</a>, Julia Evans.
<ul dir="auto">
<li>Keep a brag document</li>
<li>You can do a lot "by accident"</li>
<li>Fixing a bug can be milestone</li>
</ul>
</li>
<li><a href="https://stackoverflow.blog/2022/11/23/why-writing-by-hand-is-still-the-best-way-to-retain-information/" rel="nofollow">Why writing by hand is still the best way to retain information</a>, StackOverflow</li>
<li>🎞 <a href="https://www.youtube.com/watch?v=FKTxC9pl-WM&amp;t=2s&amp;ab_channel=O%27Reilly" rel="nofollow">Making Badass Developers - Kathy Sierra (Serious Pony) keynote</a></li>
<li><a href="https://cse.buffalo.edu/~rapaport/howtostudy.html" rel="nofollow">How to study</a> (with lots of cartoons from Calvin &amp; Hobbes!)
<ul dir="auto">
<li>Manage your time</li>
<li>Take notes in class &amp; rewrite them at home</li>
<li>Study hard subjects first &amp; study in a quiet place</li>
<li>Read actively &amp; slowly, before &amp; after class</li>
<li>Do your homework</li>
<li>Study for exams</li>
<li>Take Exams</li>
<li>Do research &amp; write essays</li>
<li>Do I really have to do all this?</li>
<li>Are there other websites that give study hints?</li>
</ul>
</li>
</ul>
<p dir="auto">About flashcards:</p>
<ul dir="auto">
<li><a href="http://augmentingcognition.com/ltm.html" rel="nofollow">Augmenting Long-term Memory</a></li>
<li><a href="https://andymatuschak.org/prompts/" rel="nofollow">How to write good prompts: using spaced repetition to create understanding</a> - also includes lots of insightful research papers.</li>
<li><a href="https://www.supermemo.com/en/blog/twenty-rules-of-formulating-knowledge" rel="nofollow">Effective learning: Twenty rules of formulating knowledge</a></li>
<li><a href="https://controlaltbackspace.org/precise/" rel="nofollow">Rules for Designing Precise Anki Cards</a></li>
<li>Fernando Borretti, <a href="https://borretti.me/article/effective-spaced-repetition" rel="nofollow">Effective Spaced Repetition</a></li>
<li><a href="https://abouttolearn.substack.com/p/anki-fy-your-life" rel="nofollow">Anki-fy Your Life</a> gets into why it makes sense to invest in your memory.</li>
</ul>
<p dir="auto">About Zettelkasten and PKM (personal knowledge management): see <a href="#personal-knowledge-management">Personal knowledge management</a></p>
<p dir="auto">Richard Feynman's Learning Strategy:</p>
<ol dir="auto">
<li>Step 1: Continually ask "Why?”</li>
<li>Step 2: When you learn something, learn it to where you can explain it to a child.</li>
<li>Step 3: Instead of arbitrarily memorizing things, look for the explanation that makes it obvious.</li>
</ol>
<blockquote>
<p dir="auto">Most people overestimate what they can do in 1 year and underestimate what they can do in a decade.
– Bill Gates</p>
</blockquote>
<blockquote>
<p dir="auto">Frankly, though, I think most people can learn a lot more than they think they can. They sell themselves short without trying.
One bit of advice: it is important to view knowledge as sort of a semantic tree — make sure you understand the fundamental principles, ie the trunk and big branches, before you get into the details/leaves or there is nothing for them to hang on to.
— Elon Musk</p>
</blockquote>
<blockquote>
<p dir="auto">"Experience is something you don't get until just after you need it."
― Steven Wright</p>
</blockquote>
<blockquote>
<p dir="auto">Tell me and I forget. Teach me and I remember. Involve me and I learn.
– Benjamin Franklin</p>
</blockquote>
<blockquote>
<p dir="auto">Education is the kindling of a flame, not the filling of a vessel.
– Socrates</p>
</blockquote>
<blockquote>
<p dir="auto">That which we persist in doing becomes easier for us to do; not that the nature of the thing itself is changed, but that our power to do is increased.
– Ralph Waldo Emerson</p>
</blockquote>
<blockquote>
<p dir="auto">A wise man can learn more from a foolish question than a fool can learn from a wise answer.
– Bruce Lee</p>
</blockquote>
<blockquote>
<p dir="auto">A lecture has been well described as the process whereby the notes of the teacher become the notes of the student without passing through the mind of either.
— Mortimer Adler</p>
</blockquote>
<blockquote>
<p dir="auto">Fools learn from experience. I prefer to learn from the experience of others.
— Bismark</p>
</blockquote>
<h3 tabindex="-1" dir="auto">Licenses (legal)</h3>
<ul dir="auto">
<li><a href="https://tldrlegal.com/" rel="nofollow">Software Licenses in Plain English</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Linux (system management)</h3>
<ul dir="auto">
<li><a href="https://lym.readthedocs.io/en/latest/index.html" rel="nofollow">Welcome to Linux command line for you and me!</a></li>
<li><a href="https://www.brendangregg.com/linuxperf.html" rel="nofollow">Linux Performance</a>, Brendan Gregg</li>
</ul>
<h3 tabindex="-1" dir="auto">Low-code/no-code</h3>
<ul dir="auto">
<li><a href="https://www.levels.fyi/blog/scaling-to-millions-with-google-sheets.html" rel="nofollow">How Levels.fyi scaled to millions of users with Google Sheets as a backend</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Low-level, assembly</h3>
<ul dir="auto">
<li><a href="https://www.joelonsoftware.com/2001/12/11/back-to-basics/" rel="nofollow">Back to Basics</a>, Joel Spolsky. Explains why learning low level programming is important.
<ul dir="auto">
<li>I think that some of the biggest mistakes people make even at the highest architectural levels come from having a weak or broken understanding of a few simple things at the very lowest levels.</li>
</ul>
</li>
<li><a href="https://fasterthanli.me/series/making-our-own-executable-packer/part-1" rel="nofollow">What's in a Linux executable?</a></li>
<li>📖 <a href="https://www.nand2tetris.org/book" rel="nofollow">The Elements of Computing Systems</a>: building a modern computer from first principles (nand2tetris).</li>
<li><a href="https://softwarebits.substack.com/p/old-pattern-powering-modern-tech?s=r" rel="nofollow">Old pattern powering modern tech</a></li>
<li><a href="https://www.andreinc.net/2023/02/01/demystifying-bitwise-ops" rel="nofollow">Demystifying bitwise operations, a gentle C tutorial</a></li>
<li><a href="https://www.deusinmachina.net/p/understanding-the-power-of-bitwise" rel="nofollow">Understanding the Power of Bitwise Operators. No math needed</a></li>
<li><a href="https://samwho.dev/memory-allocation/" rel="nofollow">Memory Allocation</a> (an interactive article)</li>
<li><a href="https://jvns.ca/blog/2023/02/08/why-does-0-1-plus-0-2-equal-0-30000000000000004/" rel="nofollow">Why does 0.1 + 0.2 = 0.30000000000000004?</a>, Julia Evans (about floating point)</li>
<li><a href="https://cpu.land/the-basics" rel="nofollow">Putting the "You" in CPU</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Machine learning/AI</h3>
<ul dir="auto">
<li><a href="https://e2eml.school/transformers.html" rel="nofollow">Transformers from Scratch</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Math</h3>
<ul dir="auto">
<li>🏙 <a href="https://speakerdeck.com/jakevdp/statistics-for-hackers" rel="nofollow">Statistics for Hackers</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Marketing</h3>
<ul dir="auto">
<li><a href="https://github.com/goabstract/Marketing-for-Engineers">goabstract/Marketing-for-Engineers</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Network</h3>
<ul dir="auto">
<li><a href="https://benbernardblog.com/the-great-confusion-about-uris/" rel="nofollow">The Great Confusion About URIs</a>
<ul dir="auto">
<li>A URI is a string of characters that identifies a resource. Its syntax is <code>&lt;scheme&gt;:&lt;authority&gt;&lt;path&gt;?&lt;query&gt;#&lt;fragment&gt;</code>, where only <code>&lt;scheme&gt;</code> and <code>&lt;path&gt;</code> are mandatory. URL and URN are URIs.</li>
<li>A URL is a string of characters that identifies a resource located on a computer network. Its syntax depends on its scheme. E.g. <code>mailto:billg@microsoft.com</code>.</li>
<li>A URN is a string of characters that uniquely identifies a resource. Its syntax is <code>urn:&lt;namespace identifier&gt;:&lt;namespace specific string&gt;</code>. E.g. <code>urn:isbn:9780062301239</code></li>
</ul>
</li>
<li><a href="https://www.nslookup.io/learning/" rel="nofollow">Everything you need to know about DNS</a></li>
<li><a href="https://samwho.dev/load-balancing/" rel="nofollow">Load Balancing</a>: a visual exploration of load balancing algos</li>
</ul>
<h3 tabindex="-1" dir="auto">Observability (monitoring, logging, exception handling)</h3>
<h4 tabindex="-1" dir="auto">Logging</h4>
<ul dir="auto">
<li><a href="https://sobolevn.me/2020/03/do-not-log" rel="nofollow">Do not log</a> dwells on some logging antipatterns.
<ul dir="auto">
<li>Logging does not make much sense in monitoring and error tracking. Use better tools instead: error and business monitorings with alerts, versioning, event sourcing.</li>
<li>Logging adds significant complexity to your architecture. And it requires more testing. Use architecture patterns that will make logging an explicit part of your contracts</li>
<li>Logging is a whole infrastructure subsystem on its own. And quite a complex one. You will have to maintain it or to outsource this job to existing logging services</li>
</ul>
</li>
<li><a href="https://www.honeycomb.io/blog/lies-my-parents-told-me-about-logs/" rel="nofollow">Lies My Parents Told Me (About Logs)</a>
<ul dir="auto">
<li>Logs are cheap</li>
<li>I can run it better myself</li>
<li>Leveled logging is a great way to separate information</li>
<li>Logs are basically the same as events</li>
<li>A standard logging format is good enough</li>
</ul>
</li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html" rel="nofollow">Logging - OWASP Cheat Sheet Series</a></li>
<li><a href="https://audit-logs.tax/" rel="nofollow">The Audit Log Wall of Shame</a>: list of vendors that don’t prioritize high-quality, widely-available audit logs for security and operations teams.</li>
</ul>
<h4 tabindex="-1" dir="auto">Error/exception handling</h4>
<ul dir="auto">
<li><a href="https://github.com/charlax/professional-programming/blob/master/antipatterns/error-handling-antipatterns.md">Error handling antipatterns</a> in this repo.</li>
<li><a href="https://developers.google.com/tech-writing/error-messages" rel="nofollow">Writing Helpful Error Messages</a>, Google Developers' course on Technical Writing
<ul dir="auto">
<li>Explain the problem</li>
<li>Explain the solution</li>
<li>Write clearly</li>
</ul>
</li>
</ul>
<h4 tabindex="-1" dir="auto">Monitoring</h4>
<ul dir="auto">
<li>Google, <a href="https://landing.google.com/sre/sre-book/chapters/monitoring-distributed-systems/" rel="nofollow">Site Reliability Engineering, Monitoring Distributed Systems</a></li>
<li>PagerDuty, <a href="https://www.pagerduty.com/blog/monitoring-business-metrics/" rel="nofollow">Monitoring Business Metrics and Refining Outage Response</a></li>
<li>🧰 <a href="https://github.com/crazy-canux/awesome-monitoring">crazy-canux/awesome-monitoring</a>: monitoring tools for operations.</li>
<li><a href="https://medium.com/@copyconstruct/monitoring-in-the-time-of-cloud-native-c87c7a5bfa3e" rel="nofollow">Monitoring in the time of Cloud Native</a></li>
<li><a href="https://medium.com/faun/how-to-monitor-the-sre-golden-signals-1391cadc7524" rel="nofollow">How to Monitor the SRE Golden Signals</a>
<ul dir="auto">
<li>From the Google SRE book: Latency, Traffic, Errors, and Saturation</li>
<li>USE Method (from Brendan Gregg): Utilization, Saturation, and Errors</li>
<li>RED Method (from Tom Wilkie): Rate, Errors, and Duration</li>
</ul>
</li>
<li><a href="https://hakibenita.com/sql-anomaly-detection" rel="nofollow">Simple Anomaly Detection Using Plain SQL</a></li>
<li><a href="https://www.timescale.com/blog/how-percentile-approximation-works-and-why-its-more-useful-than-averages/" rel="nofollow">How percentile approximation works (and why it's more useful than averages)</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Open source</h3>
<ul dir="auto">
<li><a href="https://github.com/readme/featured/open-source-non-code-contributions">Non-code contributions are the secret to open source success</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Operating system (OS)</h3>
<ul dir="auto">
<li>📖 <a href="http://www.amazon.com/The-Linux-Programming-Interface-Handbook/dp/1593272200" rel="nofollow">The Linux Programming Interface: A Linux and UNIX System Programming Handbook</a>: already mentioned above.</li>
<li>📖 <a href="https://www.amazon.com/dp/013359162X/" rel="nofollow">Modern Operating Systems</a>, Andrew Tanenbaum, Herbert Bos (not read)</li>
<li>📖 <a href="https://pages.cs.wisc.edu/~remzi/OSTEP/" rel="nofollow">Operating Systems: Three Easy Pieces</a> (free book, not read)</li>
<li>📖 <a href="https://www.amazon.com/Linux-Kernel-Development-Robert-Love/dp/0672329468" rel="nofollow">Linux Kernel Development</a>, Robert Love. A very complete introduction to developing within the Linux Kernel.</li>
<li><a href="https://jameskle.com/writes/operating-systems" rel="nofollow">The 10 Operating System Concepts Software Developers Need to Remember</a></li>
<li>Play with xv6 on <a href="https://pdos.csail.mit.edu/6.828/2016/schedule.html" rel="nofollow">MIT 6.828</a></li>
<li><a href="https://gist.github.com/kconner/cff08fe3e0bb857ea33b47d965b3e19f">macOS Internals</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Over-engineering</h3>
<ul dir="auto">
<li><a href="https://medium.com/@rdsubhas/10-modern-software-engineering-mistakes-bc67fbef4fc8#.da6dvzyne" rel="nofollow">10 modern software over-engineering mistakes</a></li>
<li><a href="https://blog.bolt.io/heres-why-juicero-s-press-is-so-expensive-6add74594e50" rel="nofollow">A good example of over-engineering: the Juicero press</a> (April 2017)</li>
<li><a href="https://blog.bradfieldcs.com/you-are-not-google-84912cf44afb" rel="nofollow">You Are Not Google</a>: the UNPHAT method to avoid cargo cult.
<ul dir="auto">
<li>Don’t even start considering solutions until you Understand the problem. Your goal should be to “solve” the problem mostly within the problem domain, not the solution domain.</li>
<li>eNumerate multiple candidate solutions. Don’t just start prodding at your favorite!</li>
</ul>
</li>
<li><a href="https://kerkour.com/overthinking" rel="nofollow">Overthinking</a>
<ul dir="auto">
<li>1st poison: education.</li>
<li>2nd poison: marketing.</li>
<li>3rd poison: ego</li>
<li>Solution: Stop trying to connect all the dots ahead of time. Embrace uncertainty and start doing.</li>
</ul>
</li>
<li><a href="https://www.joelonsoftware.com/2001/04/21/dont-let-architecture-astronauts-scare-you/" rel="nofollow">Don’t Let Architecture Astronauts Scare You</a>, Joel
<ul dir="auto">
<li>Sometimes smart thinkers just don’t know when to stop, and they create these absurd, all-encompassing, high-level pictures of the universe that are all good and fine, but don’t actually mean anything at all.</li>
<li>Your typical architecture astronaut will take a fact like “Napster is a peer-to-peer service for downloading music” and ignore everything but the architecture, thinking it’s interesting because it’s peer to peer, completely missing the point that it’s interesting because you can type the name of a song and listen to it right away.</li>
</ul>
</li>
</ul>
<blockquote>
<p dir="auto">“A complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over, beginning with a working simple system.”</p>
</blockquote>
<p dir="auto">—&nbsp;John Gall, General systemantics, an essay on how systems work, and especially how they fail..., 1975 (this quote is sometime referred as "Galls' law")</p>
<blockquote>
<p dir="auto">"Software engineering is what happens to programming when you add time and other programmers."</p>
</blockquote>
<p dir="auto">— Rob Pike, <a href="https://talks.golang.org/2012/splash.article" rel="nofollow">Go at Google: Language Design in the Service of Software Engineering</a></p>
<blockquote>
<p dir="auto">You can’t connect the dots looking forward; you can only connect them looking backwards. So you have to trust that the dots will somehow connect in your future. You have to trust in something — your gut, destiny, life, karma, whatever. This approach has never let me down, and it has made all the difference in my life.</p>
</blockquote>
<p dir="auto">— Steve Jobs</p>
<h3 tabindex="-1" dir="auto">Performance</h3>
<ul dir="auto">
<li><a href="https://everythingisdata.wordpress.com/2009/10/17/numbers-everyone-should-know/" rel="nofollow">Numbers Everyone Should Know</a></li>
<li><a href="https://gist.github.com/hellerbarde/2843375">Latency numbers every programmer should know</a></li>
<li><a href="http://users.ece.utexas.edu/~adnan/pike.html" rel="nofollow">Rob Pike's 5 Rules of Programming</a>
<ul dir="auto">
<li>You can't tell where a program is going to spend its time.</li>
<li>Measure</li>
<li>Fancy algorithms are slow when n is small, and n is usually small.</li>
<li>Fancy algorithms are buggier than simple ones</li>
<li>Data dominates.</li>
</ul>
</li>
<li><a href="https://benhoyt.com/writings/count-words/" rel="nofollow">Performance comparison: counting words in Python, Go, C++, C, AWK, Forth, and Rust</a>: a great way to learn about measuring performance.</li>
<li><a href="https://www.evanmiller.org/mathematical-hacker.html" rel="nofollow">The Mathematical Hacker</a></li>
<li><a href="https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html" rel="nofollow">Four Kinds of Optimisation</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Personal knowledge management (PKM)</h3>
<ul dir="auto">
<li><a href="https://zettelkasten.de/posts/overview/" rel="nofollow">Zettelkasten Method</a></li>
<li><a href="https://aseemthakar.com/how-to-build-a-second-brain-as-a-software-developer/" rel="nofollow">How to build a second brain as a software developer</a></li>
<li><a href="https://sashachapin.substack.com/p/notes-against-note-taking-systems" rel="nofollow">Notes Against Note-Taking Systems</a>
<ul dir="auto">
<li>An interesting contrarian take!</li>
<li>I am waiting for any evidence that our most provocative thinkers and writers are those who rely on elaborate, systematic note-taking systems.</li>
<li>I am seeing evidence that people taught knowledge management for its own sake produce unexciting work.</li>
</ul>
</li>
<li><a href="https://github.com/MaggieAppleton/digital-gardeners">MaggieAppleton/digital-gardeners</a></li>
<li><a href="https://www.reproof.app/blog/notes-apps-help-us-forget" rel="nofollow">Notes apps are where ideas go to die. And that’s good.</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Personal productivity</h3>
<p dir="auto">Check out this section on my <a href="https://github.com/charlax/engineering-management/#personal-productivity">list of management resources, "Personal productivity"</a>.</p>
<h3 tabindex="-1" dir="auto">Perspective</h3>
<ul dir="auto">
<li><a href="https://www.theguardian.com/commentisfree/2020/sep/07/terminal-cancer-live-cancer-life-death" rel="nofollow">At 31, I have just weeks to live. Here's what I want to pass on</a>
<ul dir="auto">
<li>First, the importance of gratitude.</li>
<li>Second, a life, if lived well, is long enough.</li>
<li>Third, it’s important to let yourself be vulnerable and connect to others.</li>
<li>Fourth, do something for others.</li>
<li>Fifth, protect the planet.</li>
</ul>
</li>
<li><a href="https://dkb.show/post/life-is-not-short" rel="nofollow">Life Is Not Short</a>
<ul dir="auto">
<li>"The most surprising thing is that you wouldn’t let anyone steal your property, but you consistently let people steal your time, which is infinitely more valuable." — Seneca</li>
</ul>
</li>
</ul>
<h3 tabindex="-1" dir="auto">Privacy</h3>
<ul dir="auto">
<li><a href="https://martinfowler.com/articles/intro-pet.html" rel="nofollow">Privacy Enhancing Technologies: An Introduction for Technologists</a>, Katharine Jarmul, MartinFowler.com</li>
</ul>
<h3 tabindex="-1" dir="auto">Problem solving</h3>
<ul dir="auto">
<li><a href="https://artofproblemsolving.com/articles/hard-problems" rel="nofollow">Dealing with Hard Problems</a></li>
<li><a href="https://www.anup.io/2020/07/20/invert-always-invert/" rel="nofollow">Invert, always, invert</a>
<ul dir="auto">
<li>Define the problem - what is it that you're trying to achieve?</li>
<li>Invert it - what would guarantee the failure to achieve this outcome?</li>
<li>Finally, consider solutions to avoid this failure</li>
</ul>
</li>
<li>🎞 <a href="https://www.youtube.com/watch?v=f84n5oFoZBc&amp;ab_channel=ClojureTV" rel="nofollow">Hammock Driven Development</a>, Rick Hickey
<ul dir="auto">
<li>A classic talk on problem solving.</li>
</ul>
</li>
</ul>
<h3 tabindex="-1" dir="auto">Product management for software engineers</h3>
<p dir="auto">See the <a href="https://github.com/charlax/entrepreneurship-resources#product-management">Product management section on my entrepreneurship-resources list of resources</a>.</p>
<ul dir="auto">
<li>Checkout this newsletter produced by Posthog: <a href="https://newsletter.posthog.com/" rel="nofollow">Product for Engineers</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Project management</h3>
<p dir="auto">See the <a href="https://github.com/charlax/engineering-management#project-management">Project management section on my engineering-management list of resources</a>.</p>
<h3 tabindex="-1" dir="auto">Programming languages</h3>
<p dir="auto">I would recommend learning:</p>
<ul dir="auto">
<li>JavaScript and maybe another interpreted language (Python, Ruby, etc.). Interpreted languages are useful for quick one-off automation scripts, and fastest to write for interviews. JavaScript is ubiquitous.</li>
<li>A compiled language (Java, C, C++...).
<ul dir="auto">
<li><a href="https://learnxinyminutes.com/docs/c/" rel="nofollow">Learn c in Y Minutes</a></li>
</ul>
</li>
<li>A more recent language to see where the industry is going (as of writing, Go, Swift, Rust, Elixir...).</li>
<li>A language that has first-class support for functional programming (Haskell, Scala, Clojure...).</li>
</ul>
<p dir="auto">A bit more reading:</p>
<ul dir="auto">
<li><a href="http://james-iry.blogspot.fr/2009/05/brief-incomplete-and-mostly-wrong.html" rel="nofollow">A brief, incomplete, mostly wrong history of programming languages</a></li>
<li><a href="https://gist.github.com/garybernhardt/122909856b570c5c457a6cd674795a9c">Types</a></li>
<li><a href="https://tomassetti.me/resources-create-programming-languages/" rel="nofollow">Resources To Help You To Create Programming Languages</a></li>
<li><a href="https://www.youtube.com/watch?v=2V1FtfBDsLU" rel="nofollow">Effective Programs - 10 Years of Clojure</a> 🎞, Rich Hickey. The author of Clojure reflects on his programming experience and explains the rationale behind some of Clojure's key design decisions.</li>
<li><a href="https://thorstenball.com/blog/2019/04/09/learn-more-programming-languages/" rel="nofollow">Learn more programming languages, even if you won't use them</a>, Thorsten Ball
<ul dir="auto">
<li>These new perspectives, these ideas and patterns — they linger, they stay with you, even if you end up in another language. And that is powerful enough to keep on learning new languages, because one of the best things that can happen to you when you’re trying to solve a problem is a change of perspective.</li>
</ul>
</li>
<li><a href="https://famicol.in/language_checklist.html" rel="nofollow">Programming Language Checklist</a>: a fun take on "so you want to build your own language?"</li>
<li><a href="http://danluu.com/empirical-pl/" rel="nofollow">Static vs. dynamic languages: a literature review</a></li>
<li><a href="https://www.stxnext.com/blog/polyglot-programming/" rel="nofollow">Polyglot Programming and the Benefits of Mastering Several Languages</a></li>
<li><a href="https://nibblestew.blogspot.com/2020/03/its-not-what-programming-languages-do.html" rel="nofollow">It's not what programming languages do, it's what they shepherd you to</a></li>
<li><a href="https://news.ycombinator.com/item?id=32092943" rel="nofollow">Ask HN: What do you code when learning a new language/framework?</a></li>
<li><a href="https://madhadron.com/programming/seven_ur_languages.html" rel="nofollow">The seven programming ur-languages</a>: ALGOL, Lisp, ML, Self, Forth, APL, Prolog</li>
<li><a href="https://matt.blwt.io/post/lua-the-little-language-that-could/" rel="nofollow">Lua: The Little Language That Could</a></li>
</ul>
<blockquote>
<p dir="auto">There are only two kinds of languages: the ones people complain about and the ones nobody uses.</p>
</blockquote>
<p dir="auto">-- Bjarne Stroustrup (C++ creator)</p>
<p dir="auto">List of resources:</p>
<ul dir="auto">
<li><a href="https://www.cis.upenn.edu/~bcpierce/courses/670Fall04/GreatWorksInPL.shtml" rel="nofollow">Great Works in Programming Languages</a></li>
</ul>
<h4 tabindex="-1" dir="auto">Python</h4>
<p dir="auto">For Python feel free to checkout my <a href="https://github.com/charlax/python-education">professional Python education repository</a>.</p>
<h4 tabindex="-1" dir="auto">JavaScript</h4>
<p dir="auto">JavaScript is such a pervasive language that it's almost required learning.</p>
<ul dir="auto">
<li><a href="https://github.com/mbeaudru/modern-js-cheatsheet">mbeaudru/modern-js-cheatsheet</a>: cheatsheet for the JavaScript knowledge you will frequently encounter in modern projects.</li>
<li><a href="https://github.com/javascript-tutorial">javascript-tutorial</a>: comprehensive JavaScript guide with simple but detailed explanantions. Available in several languages.</li>
</ul>
<h4 tabindex="-1" dir="auto">Garbage collection</h4>
<ul dir="auto">
<li><a href="https://go.dev/doc/gc-guide" rel="nofollow">A Guide to the Go Garbage Collector</a>: a very insightful guide about Go's GC</li>
</ul>
<h3 tabindex="-1" dir="auto">Programming paradigm</h3>
<ul dir="auto">
<li><a href="https://tylermcginnis.com/imperative-vs-declarative-programming/" rel="nofollow">Imperative vs Declarative Programming</a>, Tyler McGinnis.
<ul dir="auto">
<li>I draw the line between declarative and non-declarative at whether you can trace the code as it runs. Regex is 100% declarative, as it’s untraceable while the pattern is being executed.</li>
</ul>
</li>
<li>🎞 <a href="https://www.youtube.com/watch?v=E7Fbf7R3x6I&amp;ab_channel=uidotdev" rel="nofollow">Imperative vs Declarative Programming</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Public speaking (presenting)</h3>
<ul dir="auto">
<li><a href="https://sfhbook.netlify.app/" rel="nofollow">Speaking for hackers</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Reading</h3>
<ul dir="auto">
<li><a href="https://github.com/papers-we-love/papers-we-love">Papers we love</a>: papers from the computer science community to read and discuss. Can be a good source of inspiration of solving your design problems.</li>
<li><a href="https://blog.acolyer.org/" rel="nofollow">The morning paper</a>: one CS research paper explained every morning.</li>
<li><a href="https://maartenvandoorn.nl/reading-guide/" rel="nofollow">The Complete Guide to Effective Reading</a></li>
<li><a href="https://www.bbc.com/worklife/article/20200910-the-benefits-of-note-taking-by-hand" rel="nofollow">The benefits of note-taking by hand</a></li>
<li><a href="https://aliabdaal.com/read-more-effectively/" rel="nofollow">The Art of Reading More Effectively and Efficiently</a></li>
<li><a href="https://stackoverflow.blog/2022/04/07/you-should-be-reading-academic-computer-science-papers/" rel="nofollow">You should be reading academic computer science papers</a>, Stack Overflow Blog</li>
<li><a href="https://fs.blog/remember-books/" rel="nofollow">How to Remember What You Read</a>
<ul dir="auto">
<li>Take notes</li>
<li>Stay focused</li>
<li>Mark up the book</li>
<li>Make mental links</li>
<li>Quit books</li>
</ul>
</li>
<li><a href="https://www.andreasfragner.com/writing/writing-summaries" rel="nofollow">Writing summaries is more important than reading more books</a>
<ul dir="auto">
<li>In 1-2 sentences, what is the book about as a whole?</li>
<li>What are the 3-4 central questions it tries to answer?</li>
<li>Summarize the answers in one paragraph each.</li>
<li>What are the most important things you have learned personally?</li>
<li>There was an interesting contrarian take in the <a href="https://news.ycombinator.com/item?id=36011599" rel="nofollow">Hacker News thread</a>: "Once I relaxed and decided, 'If the stuff in this book is good enough, my brain will keep it FOR me' both my satisfaction AND utility of books increased dramatically."</li>
</ul>
</li>
</ul>
<h3 tabindex="-1" dir="auto">Refactoring</h3>
<ul dir="auto">
<li><a href="https://blog.codinghorror.com/rule-of-three/" rel="nofollow">The Rule of Three</a>, Coding Horror
<ul dir="auto">
<li>Every programmer ever born thinks whatever idea just popped out of their head into their editor is the most generalized, most flexible, most one-size-fits all solution that has ever been conceived.</li>
<li>It is three times as difficult to build reusable components as single use components.</li>
<li>A reusable component should be tried out in three different applications before it will be sufficiently general to accept into a reuse library.</li>
</ul>
</li>
<li><a href="https://remesh.blog/refactor-vs-rewrite-7b260e80277a" rel="nofollow">Refactor vs. Rewrite</a></li>
<li><a href="https://blog.carlmjohnson.net/post/2020/avoid-dependencies/" rel="nofollow">Tripping over the potholes in too many libraries</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Regex</h3>
<ul dir="auto">
<li><a href="http://rexegg.com/regex-best-trick.html" rel="nofollow">The Best Regex Trick</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Releasing &amp; deploying</h3>
<ul dir="auto">
<li><a href="http://engineering.skybettingandgaming.com/2016/02/02/how-we-release-so-frequently/" rel="nofollow">How we release so frequently</a></li>
<li><a href="https://zachholman.com/posts/deploying-software" rel="nofollow">How to deploy software</a>, Zach Holman</li>
<li><a href="http://martinfowler.com/bliki/BlueGreenDeployment.html" rel="nofollow">BlueGreenDeployment</a>, Martin Fowler</li>
<li><a href="https://zachholman.com/talk/move-fast-break-nothing/" rel="nofollow">Move fast and break nothing</a>, Zach Holman</li>
<li>🏙 <a href="https://docs.google.com/presentation/d/15gNk21rjer3xo-b1ZqyQVGebOp_aPvHU3YH7YnOMxtE/edit#slide=id.g437663ce1_53_591" rel="nofollow">Move fast and don't break things</a>, Google</li>
<li><a href="https://blog.pragmaticengineer.com/shipping-to-production/" rel="nofollow">Shipping to Production</a>, The Pragmatic Programmer</li>
</ul>
<h4 tabindex="-1" dir="auto">Versioning</h4>
<ul dir="auto">
<li><a href="https://semver.org/" rel="nofollow">SemVer - Semantic Versioning</a></li>
<li><a href="https://calver.org/" rel="nofollow">CalVer - Calendar Versioning</a></li>
<li><a href="https://hynek.me/articles/semver-will-not-save-you/" rel="nofollow">Semantic Versioning Will Not Save You</a></li>
<li><a href="https://bernat.tech/posts/version-numbers/" rel="nofollow">Version numbers: how to use them?</a></li>
</ul>
<h4 tabindex="-1" dir="auto">Checklists</h4>
<ul dir="auto">
<li><a href="https://gruntwork.io/devops-checklist/" rel="nofollow">Production Readiness Checklist</a>, Gruntwork</li>
<li><a href="https://habr.com/en/post/438186/" rel="nofollow">Checklist: what had to be done before deploying microservices to production</a></li>
<li><a href="https://instadeq.com/blog/posts/things-end-users-care-about-but-programmers-dont/" rel="nofollow">Things end users care about but programmers don't</a>: includes colors, formatting, themes, integrations, UX, compatibility, operations.</li>
</ul>
<h4 tabindex="-1" dir="auto">Feature flags</h4>
<ul dir="auto">
<li><a href="http://code.flickr.net/2009/12/02/flipping-out/" rel="nofollow">Flipping out</a>, Flickr. One of the first articles about feature flags.</li>
<li><a href="https://featureflags.io/" rel="nofollow">Feature Flags, Toggles, Controls</a>, a website documenting feature flags, from Launch Darkly.</li>
<li><a href="https://martinfowler.com/articles/feature-toggles.html" rel="nofollow">Feature Toggles (aka Feature Flags)</a>, Pete Hodgson, martinFowler.com. Comprehensive article on the topic.
<ul dir="auto">
<li>Deliver new functionality to users rapidly but safely</li>
<li>Release Toggles allow incomplete and un-tested codepaths to be shipped to production as latent code which may never be turned on.</li>
<li>Experiment Toggles are used to perform multivariate or A/B testing.</li>
<li>Ops Toggles control operational aspects of our system's behavior.</li>
<li>Permissioning Toggles change the features or product experience that certain users receive.</li>
<li>Static vs dynamic toggles</li>
<li>Long-lived toggles vs transient toggles</li>
<li>Savvy teams view their Feature Toggles as inventory which comes with a carrying cost, and work to keep that inventory as low as possible.</li>
</ul>
</li>
<li><a href="https://launchdarkly.com/blog/release-management-flags-best-practices/" rel="nofollow">Feature Flags Best Practices: Release Management</a>, LaunchDarkly</li>
<li><a href="https://github.blog/2021-04-27-ship-code-faster-safer-feature-flags/" rel="nofollow">How we ship code faster and safer with feature flags</a>, Github.</li>
<li><a href="https://eng.uber.com/flipr/" rel="nofollow">Flipr: Making Changes Quickly and Safely at Scale</a>, Uber</li>
</ul>
<h4 tabindex="-1" dir="auto">Testing in production</h4>
<ul dir="auto">
<li><a href="https://eng.uber.com/multitenancy-microservice-architecture/" rel="nofollow">Why We Leverage Multi-tenancy in Uber's Microservice Architecture</a></li>
<li><a href="https://tersesystems.com/blog/2020/01/22/developing-in-production/" rel="nofollow">Developing in Production</a>
<ul dir="auto">
<li>Complex systems have emergent behavior, producing epiphenomenon that only appears with sufficient scale.</li>
<li>Wood's theorem: As the complexity of a system increases, the accuracy of any single agent’s own model of that system decreases rapidly.</li>
<li>The more tools and code that you add to create elements in a system, the harder it is to replicate an environment encompassing those tools and code.</li>
<li>At the core of testing in production is the idea of splitting deployments (of artifacts) from releases (of features).</li>
</ul>
</li>
<li><a href="https://medium.com/@copyconstruct/testing-in-production-the-hard-parts-3f06cefaf592" rel="nofollow">Testing in Production: the hard parts</a>, Cindy Sridharan
<ul dir="auto">
<li>The whole point of [actual] distributed systems engineering is you assume you’re going to fail at some point in time and you design the system in such a way that the damage, at each point is minimized, that recovery is quick, and that the risk is acceptably balanced with cost.</li>
<li>How can you cut the blast radius for a similar event in half?
<ul dir="auto">
<li>Differentiate between deployment (0 risk) and release</li>
<li>Build a deploy-observe-release pipeline</li>
<li>Make incremental rollouts the norm (canaries, %-based rollouts, etc.)</li>
<li>Test configuration changes just like you test code</li>
<li>Default to roll back, avoid fixing forward (slow!)</li>
<li>Eliminate gray failures - prefer crashing to degrading in certain cases</li>
<li>Prefer loosely coupled services at the expense of latency or correctness</li>
<li>Use poison tasters (isolate handling of client input)</li>
<li>Implement per-request-class backpressure</li>
<li>Have proper visibility from a client/end-user standpoint (client-side metrics)</li>
</ul>
</li>
</ul>
</li>
<li><a href="https://medium.com/@copyconstruct/testing-in-production-the-safe-way-18ca102d0ef1" rel="nofollow">Testing in Production, the safe way</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Search</h3>
<ul dir="auto">
<li><a href="https://scribe.rip/p/what-every-software-engineer-should-know-about-search-27d1df99f80d" rel="nofollow">What every software engineer should know about search</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Security</h3>
<ul dir="auto">
<li>📖 <a href="https://nostarch.com/pentesting" rel="nofollow">Penetration Testing: A Hands-On Introduction to Hacking</a>, Georgia Weidman</li>
<li><a href="https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/#http--https-webserver-enumeration" rel="nofollow">Penetration Testing Tools Cheat Sheet</a></li>
<li><a href="https://github.com/drduh/macOS-Security-and-Privacy-Guide">A practical guide to securing macOS</a></li>
<li><a href="https://en.wikibooks.org/wiki/Web_Application_Security_Guide/Checklist" rel="nofollow">Web Application Security Guide/Checklist</a></li>
<li><a href="https://www.troyhunt.com/reckon-youve-seen-some-stupid-security-things-here-hold-my-beer/" rel="nofollow">Reckon you've seen some stupid security things?</a>: everything <em>not</em> to do.</li>
<li><a href="https://github.com/shieldfy/API-Security-Checklist">Checklist of the most important security countermeasures when designing, testing, and releasing your API</a></li>
<li><a href="https://cheatsheetseries.owasp.org/" rel="nofollow">OWASP Cheat Sheet Series</a>: a series of cheat sheets about various security topics.
<ul dir="auto">
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html" rel="nofollow">Docker Security</a></li>
<li><a href="https://blog.gitguardian.com/how-to-improve-your-docker-containers-security-cheat-sheet/" rel="nofollow">How to improve your Docker containers security</a></li>
</ul>
</li>
<li><a href="https://henrikwarne.com/2020/03/22/secure-by-design/" rel="nofollow">Secure by Design</a>, a book review by Henrik Warne.
<ul dir="auto">
<li>There is a big overlap between secure code and good software design</li>
<li>Every domain value should instead be represented by a domain primitive.</li>
<li>External input needs to be validated before it is used in the system, in the following order: origin, size, lexical content, syntax, semantics.</li>
<li>Entities should be consistent at creation, have limited operation, shouldn't be sharing mutable objects.</li>
<li>Three Rs to do every few hours: rotate secrets automatically, repave servers and applications (redeploy on clean footprint), repair vulnerable.</li>
<li>Don’t use exceptions for the control flow.</li>
</ul>
</li>
<li><a href="https://owasp.org/www-project-top-ten/" rel="nofollow">OWASP Top Ten Web Application Security Risks</a>
<ul dir="auto">
<li><a href="https://owasp.org/Top10/A00_2021-How_to_start_an_AppSec_program_with_the_OWASP_Top_10/" rel="nofollow">How to start an AppSec program with the OWASP Top 10</a></li>
</ul>
</li>
<li><a href="https://github.com/ukncsc/zero-trust-architecture">ukncsc/zero-trust-architecture: Principles to help you design and deploy a zero trust architecture</a></li>
<li>🏙 <a href="https://speakerdeck.com/jacobian/minimum-viable-security-wharton-web-conference-2015" rel="nofollow">Minimum Viable Security</a></li>
<li><a href="https://www.opensamm.org/" rel="nofollow">The Open Software Assurance Maturity Model</a></li>
<li><a href="https://utkusen.com/blog/security-by-obscurity-is-underrated" rel="nofollow">Security by Obscurity is Underrated</a></li>
<li><a href="https://krebsonsecurity.com/2021/07/dont-wanna-pay-ransom-gangs-test-your-backups/" rel="nofollow">Don't Wanna Pay Ransom Gangs? Test Your Backups</a>, Krebs on Security</li>
<li><a href="https://medium.com/peerio/how-to-build-a-billion-dollar-password-3d92568d9277#67c2" rel="nofollow">The Beginner’s Guide to Passwords</a></li>
<li><a href="https://kenkantzer.com/learnings-from-5-years-of-tech-startup-code-audits/" rel="nofollow">Learnings from 5 years of tech startup code audits</a></li>
<li><a href="https://fly.io/blog/api-tokens-a-tedious-survey/" rel="nofollow">API Tokens: A Tedious Survey</a>: don't use JWT.</li>
<li><a href="http://ranum.com/security/computer_security/editorials/dumb/index.html" rel="nofollow">The Six Dumbest Ideas in Computer Security</a></li>
</ul>
<p dir="auto">Training for developers:</p>
<ul dir="auto">
<li><a href="https://www.hacksplaining.com/" rel="nofollow">Hacksplaining</a></li>
<li><a href="https://free.codebashing.com/" rel="nofollow">Codebashing</a></li>
<li><a href="https://owasp.org/www-project-security-knowledge-framework/" rel="nofollow">OWASP Security Knowledge Framework</a></li>
<li><a href="https://sudo.pagerduty.com/for_engineers/" rel="nofollow">PagerDuty Security Training</a></li>
<li><a href="https://google-gruyere.appspot.com/part1" rel="nofollow">Gruyere: Web Application Exploits and Defenses</a></li>
</ul>
<p dir="auto">List of resources:</p>
<ul dir="auto">
<li>🧰 <a href="https://github.com/meirwah/awesome-incident-response">meirwah/awesome-incident-response</a>: tools for incident response</li>
<li>🧰 <a href="https://scrty.io/" rel="nofollow">Starting Up Security</a></li>
<li>🧰 <a href="https://github.com/decalage2/awesome-security-hardening">decalage2/awesome-security-hardening</a>: security hardening guides, tools and other resources</li>
</ul>
<h3 tabindex="-1" dir="auto">Shell (command line)</h3>
<ul dir="auto">
<li><a href="https://www.neversaw.us/2021/04/02/the-case-for-bash/" rel="nofollow">The case for bash</a></li>
<li>🧰 <a href="https://github.com/alebcay/awesome-shell">alebcay/awesome-shell</a></li>
<li>🧰 <a href="https://github.com/dylanaraps/pure-bash-bible">dylanaraps/pure-bash-bible</a>: pure bash alternatives to external processes.</li>
<li><a href="https://wiki.bash-hackers.org/" rel="nofollow">The Bash Hackers Wiki</a> provides a gentler way to learn about bash than its manages.</li>
<li><a href="https://ferd.ca/awk-in-20-minutes.html" rel="nofollow">Awk in 20 Minutes</a></li>
<li>🏙 <a href="https://www.usenix.org/sites/default/files/conference/protected-files/lisa19_maheshwari.pdf" rel="nofollow">Linux Productivity Tools</a></li>
<li><a href="https://github.com/jlevy/the-art-of-command-line">jlevy/the-art-of-command-line</a>: master the command line, in one page <strong>must read</strong></li>
<li><a href="https://betterdev.blog/minimal-safe-bash-script-template/" rel="nofollow">Minimal safe Bash script template</a></li>
<li><a href="https://clig.dev/" rel="nofollow">Command Line Interface Guidelines</a></li>
<li><a href="https://openbootcamps.com/the-linux-commands-handbook/" rel="nofollow">The Linux Commands Handbook</a></li>
<li><a href="https://arslan.io/2019/07/03/how-to-write-idempotent-bash-scripts/" rel="nofollow">How to write idempotent Bash scripts</a></li>
<li><a href="https://gitlab.com/slackermedia/bashcrawl" rel="nofollow">Learn bash by playing an adventure</a></li>
<li><a href="https://effective-shell.com/" rel="nofollow">Effective Shell</a></li>
<li><a href="https://learnbyexample.github.io/cli-computing/preface.html" rel="nofollow">Computing from the Command Line</a></li>
<li><a href="https://jvns.ca/blog/2023/08/08/what-helps-people-get-comfortable-on-the-command-line-/" rel="nofollow">What helps people get comfortable on the command line?</a>, Julia Evans</li>
</ul>
<h3 tabindex="-1" dir="auto">SQL</h3>
<ul dir="auto">
<li><a href="http://www.sqlstyle.guide/" rel="nofollow">SQL styleguide</a></li>
<li><a href="https://www.metabase.com/learn/building-analytics/sql-templates/sql-best-practices" rel="nofollow">Best practices for writing SQL queries</a></li>
<li><a href="https://hakibenita.com/sql-for-data-analysis" rel="nofollow">Practical SQL for Data Analysis</a></li>
<li><a href="https://tanelpoder.com/posts/reasons-why-select-star-is-bad-for-sql-performance/" rel="nofollow">Reasons why SELECT * is bad for SQL performance</a></li>
<li><a href="https://animatesql.com/" rel="nofollow">Animate SQL</a></li>
<li><a href="https://lost-at-sql.therobinlord.com/" rel="nofollow">Lost at SQL</a>, an SQL learning game</li>
<li><a href="https://justinjaffray.com/joins-13-ways/?a=b" rel="nofollow">Joins 13 Ways</a></li>
<li><a href="https://github.com/spandanb/learndb-py">spandanb/learndb-py</a>: learn database internals by implementing it from scratch.</li>
<li><a href="https://gvwilson.github.io/sql-tutorial/" rel="nofollow">SQL for the Weary</a></li>
</ul>
<h3 tabindex="-1" dir="auto">System administration</h3>
<ul dir="auto">
<li>🧰 <a href="https://github.com/kahun/awesome-sysadmin">kahun/awesome-sysadmin</a>: a curated list of amazingly awesome open source sysadmin resources</li>
</ul>
<h3 tabindex="-1" dir="auto">System architecture</h3>
<p dir="auto">Reading lists:</p>
<ul dir="auto">
<li>🧰 <a href="https://github.com/donnemartin/system-design-primer">donnemartin/system-design-primer</a>: learn how to design large scale systems. Prep for the system design interview.</li>
<li>🧰 <a href="http://dancres.github.io/Pages/" rel="nofollow">A Distributed Systems Reading List</a></li>
<li>🧰 <a href="http://muratbuffalo.blogspot.com/2021/02/foundational-distributed-systems-papers.html" rel="nofollow">Foundational distributed systems papers</a></li>
<li>🧰 <a href="https://github.com/mmcgrana/services-engineering">Services Engineering Reading List</a></li>
<li>🧰 <a href="https://gist.github.com/vasanthk/485d1c25737e8e72759f">System Design Cheatsheet</a></li>
<li><a href="https://github.com/karanpratapsingh/system-design">karanpratapsingh/system-design</a>: learn how to design systems at scale and prepare for system design interviews</li>
</ul>
<p dir="auto">Blogs:</p>
<ul dir="auto">
<li><a href="http://highscalability.com/" rel="nofollow">High Scalability</a>: great blog about system architecture, its weekly review article are packed with numerous insights and interesting technology reviews. Checkout the <a href="http://highscalability.com/all-time-favorites/" rel="nofollow">all-times favorites</a>.</li>
</ul>
<p dir="auto">Books:</p>
<ul dir="auto">
<li>📖 <a href="https://www.amazon.com/Building-Microservices-Designing-Fine-Grained-Systems/dp/1491950358" rel="nofollow">Building Microservices</a>, Sam Newman (quite complete discussion of microservices)</li>
<li>📖 <a href="https://dataintensive.net/" rel="nofollow">Designing Data-Intensive Applications</a></li>
</ul>
<p dir="auto">Articles:</p>
<ul dir="auto">
<li><a href="http://loige.co/6-rules-of-thumb-to-build-blazing-fast-web-applications/" rel="nofollow">6 Rules of thumb to build blazing fast web server applications</a></li>
<li><a href="https://eng.uber.com/soa/" rel="nofollow">Service oriented architecture: scaling the Uber engineering codebase as we grow</a></li>
<li><a href="http://12factor.net/" rel="nofollow">The twelve-factor app</a></li>
<li><a href="http://lethain.com/introduction-to-architecting-systems-for-scale/" rel="nofollow">Introduction to architecting systems for scale</a></li>
<li><a href="https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying" rel="nofollow">The Log: What every software engineer should know about real-time data's unifying abstraction</a>: one of those classical articles that everyone should read.</li>
<li><a href="https://www.confluent.io/blog/turning-the-database-inside-out-with-apache-samza/" rel="nofollow">Turning the database outside-out with Apache Samza</a></li>
<li><a href="https://alexpareto.com/scalability/systems/2020/02/03/scaling-100k.html" rel="nofollow">Scaling to 100k Users</a>, Alex Pareto. The basics of getting from 1 to 100k users.</li>
<li><a href="https://blog.nelhage.com/post/systems-that-defy-understanding/" rel="nofollow">Systems that defy detailed understanding</a>
<ul dir="auto">
<li>Focus effort on systems-level failure, instead of the individual component failure.</li>
<li>Invest in sophisticated observability tools, aiming to increase the number of questions we can ask without deploying custom code</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing" rel="nofollow">Fallacies of distributed computing</a>, Wikipedia</li>
<li><a href="https://gigaom.com/2011/10/12/419-the-biggest-thing-amazon-got-right-the-platform/" rel="nofollow">The biggest thing Amazon got right: the platform</a>
<ul dir="auto">
<li>All teams will henceforth expose their data and functionality through service interfaces.</li>
<li>Monitoring and QA are the same thing.</li>
</ul>
</li>
<li><a href="https://medium.com/airbnb-engineering/building-services-at-airbnb-part-3-ac6d4972fc2d" rel="nofollow">Building Services at Airbnb, part 3</a>
<ul dir="auto">
<li>Resilience is a Requirement, Not a Feature</li>
</ul>
</li>
<li><a href="https://medium.com/airbnb-engineering/building-services-at-airbnb-part-4-23c95e428064" rel="nofollow">Building Services at Airbnb, part 4</a>
<ul dir="auto">
<li>Building Schema Based Testing Infrastructure for service development</li>
</ul>
</li>
<li><a href="https://martinfowler.com/articles/patterns-of-distributed-systems/" rel="nofollow">Patterns of Distributed Systems</a>, MartinFowler.com</li>
<li><a href="https://martinfowler.com/bliki/ConwaysLaw.html" rel="nofollow">ConwaysLaw</a>, MartinFowler.com (regarding organization, check out my <a href="https://github.com/charlax/engineering-management/">engineering-management</a> list.</li>
<li><a href="https://c4model.com/" rel="nofollow">The C4 model for visualising software architecture</a></li>
</ul>
<p dir="auto">Microservices/splitting a monolith:</p>
<ul dir="auto">
<li><a href="https://arnoldgalovics.com/microservices-in-production/" rel="nofollow">Don’t start with microservices in production – monoliths are your friend</a></li>
<li><a href="http://highscalability.com/blog/2015/12/1/deep-lessons-from-google-and-ebay-on-building-ecosystems-of.html" rel="nofollow">Deep lessons from Google And EBay on building ecosystems of microservices</a></li>
<li><a href="https://eng.uber.com/microservice-architecture/" rel="nofollow">Introducing domain-oriented microservice architecture</a>, Uber
<ul dir="auto">
<li>Instead of orienting around single microservices, we oriented around collections of related microservices. We call these domains.</li>
<li>In small organizations, the operational benefit likely does not offset the increase in architectural complexity.</li>
</ul>
</li>
<li><a href="https://www.vinaysahni.com/best-practices-for-building-a-microservice-architecture#correlation-ids" rel="nofollow">Best Practices for Building a Microservice Architecture</a></li>
<li>🏙 <a href="https://speakerdeck.com/felipead/avoid-building-a-distributed-monolith" rel="nofollow">Avoid Building a Distributed Monolith</a></li>
<li>🏙 <a href="https://speakerdeck.com/slashdotpeter/breaking-down-the-monolith-devone" rel="nofollow">Breaking down the monolith</a></li>
<li><a href="https://changelog.com/posts/monoliths-are-the-future" rel="nofollow">Monoliths are the future</a>
<ul dir="auto">
<li>"We’re gonna break it up and somehow find the engineering discipline we never had in the first place."</li>
</ul>
</li>
<li><a href="https://semaphoreci.com/blog/monolith-microservices" rel="nofollow">12 Ways to Prepare your Monolith Before Transitioning to Microservices</a></li>
<li><a href="https://renegadeotter.com/2023/09/10/death-by-a-thousand-microservices.html" rel="nofollow">Death by a thousand microservices</a>
<ul dir="auto">
<li><a href="https://www.youtube.com/watch?v=y8OnoxKotPQ&amp;ab_channel=KRAZAM" rel="nofollow">Microservices</a></li>
</ul>
</li>
</ul>
<h4 tabindex="-1" dir="auto">Scalability</h4>
<ul dir="auto">
<li><a href="http://www.aosabook.org/en/distsys.html" rel="nofollow">Scalable web architecture and distributed systems</a></li>
<li>📖 <a href="https://smile.amazon.com/Scalability-Rules-Principles-Scaling-Sites/dp/013443160X" rel="nofollow">Scalability Rules: 50 Principles for Scaling Web Sites</a> (<a href="http://www.slideshare.net/cyrilwang/scalability-rules" rel="nofollow">presentation</a>)</li>
</ul>
<h4 tabindex="-1" dir="auto">Reliability</h4>
<blockquote>
<p dir="auto">Quality is a snapshot at the start of life and reliability is a motion picture of the day-by-day operation.
– <a href="https://www.itl.nist.gov/div898/handbook/apr/section1/apr111.htm" rel="nofollow">NIST</a></p>
</blockquote>
<ul dir="auto">
<li>I already mentioned the book Release it! above. There's also a <a href="http://www.slideshare.net/justindorfman/stability-patterns-presentation" rel="nofollow">presentation</a> from the author.</li>
<li><a href="https://www.linkedin.com/pulse/service-recovery-rolling-back-vs-forward-fixing-mohamed-el-geish/" rel="nofollow">Service Recovery: Rolling Back vs. Forward Fixing</a></li>
<li><a href="https://how.complexsystems.fail/" rel="nofollow">How Complex Systems Fail</a>
<ul dir="auto">
<li>Catastrophe requires multiple failures – single point failures are not enough.</li>
<li>Complex systems contain changing mixtures of failures latent within them.</li>
<li>Post-accident attribution to a ‘root cause’ is fundamentally wrong.</li>
<li>Hindsight biases post-accident assessments of human performance.</li>
<li>Safety is a characteristic of systems and not of their components</li>
<li>Failure free operations require experience with failure.</li>
</ul>
</li>
<li>🧰 <a href="https://asatarin.github.io/testing-distributed-systems/" rel="nofollow">Testing Distributed Systems</a></li>
</ul>
<h4 tabindex="-1" dir="auto">Resiliency</h4>
<ul dir="auto">
<li>🏙 <a href="https://speakerdeck.com/daschl/the-walking-dead-a-survival-guide-to-resilient-applications" rel="nofollow">The Walking Dead - A Survival Guide to Resilient Applications</a></li>
<li>🏙 <a href="https://speakerdeck.com/tuenti/defensive-programming-and-resilient-systems-in-real-world-tm" rel="nofollow">Defensive Programming &amp; Resilient systems in Real World (TM)</a></li>
<li>🏙 <a href="https://speakerdeck.com/randommood/full-stack-fest-architectural-patterns-of-resilient-distributed-systems" rel="nofollow">Full Stack Fest: Architectural Patterns of Resilient Distributed Systems</a></li>
<li>🏙 <a href="https://www.slideshare.net/ufried/the-7-quests-of-resilient-software-design" rel="nofollow">The 7 quests of resilient software design</a></li>
<li>🧰 <a href="https://github.com/lorin/resilience-engineering">Resilience engineering papers</a>: comprehensive list of resources on resilience engineering</li>
<li><a href="https://www.kitchensoap.com/2010/11/07/mttr-mtbf-for-most-types-of-f/" rel="nofollow">MTTR is more important than MTBF (for most types of F)</a> (also as a <a href="https://www.slideshare.net/jallspaw/dev-and-ops-collaboration-and-awareness-at-etsy-and-flickr" rel="nofollow">presentation</a>)</li>
</ul>
<h3 tabindex="-1" dir="auto">Site Reliability Engineering (SRE)</h3>
<p dir="auto"><em>Note: this section is only about SRE as a role. Checkout the System Architecture for more content related to reliability.</em></p>
<p dir="auto">Books:</p>
<ul dir="auto">
<li>📖 <a href="https://landing.google.com/sre/books/" rel="nofollow">Site Reliability Engineering</a>
<ul dir="auto">
<li>Written by members of Google's SRE team, with a comprehensive analysis of the entire software lifecycle - how to build, deploy, monitor, and maintain large scale systems.</li>
</ul>
</li>
</ul>
<p dir="auto">Articles:</p>
<ul dir="auto">
<li><a href="https://medium.com/@tammybutow/graduating-from-bootcamp-and-interested-in-becoming-a-site-reliability-engineer-b69a38ce858b" rel="nofollow">Graduating from Bootcamp and interested in becoming a Site Reliability Engineer?</a>: a great collection of resources to learn about SRE.</li>
<li><a href="https://blog.pragmaticengineer.com/operating-a-high-scale-distributed-system/" rel="nofollow">Operating a Large, Distributed System in a Reliable Way: Practices I Learned</a>, Gergely Orosz.
<ul dir="auto">
<li>A good summary of processes to implement.</li>
</ul>
</li>
<li><a href="https://paulosman.me/2019/12/30/production-oriented-development.html" rel="nofollow">Production Oriented Development</a>
<ul dir="auto">
<li>Code in production is the only code that matters</li>
<li>Engineers are the subject matter experts for the code they write and should be responsible for operating it in production.</li>
<li>Buy Almost Always Beats Build</li>
<li>Make Deploys Easy</li>
<li>Trust the People Closest to the Knives</li>
<li>QA Gates Make Quality Worse</li>
<li>Boring Technology is Great.</li>
<li>Non-Production Environments Have Diminishing Returns</li>
<li>Things Will Always Break</li>
</ul>
</li>
<li><a href="https://blog.acolyer.org/2020/02/26/meaningful-availability/" rel="nofollow">Meaningful availability</a>
<ul dir="auto">
<li>A good availability metric should be meaningful, proportional, and actionable. By "meaningful" we mean that it should capture what users experience. By "proportional" we mean that a change in the metric should be proportional to the change in user-perceived availability. By "actionable" we mean that the metric should give system owners insight into why availability for a period was low. This paper shows that none of the commonly used metrics satisfy these requirements…</li>
</ul>
</li>
<li>📃 <a href="https://www.usenix.org/conference/nsdi20/presentation/hauer" rel="nofollow">Meaningful Availability</a> paper.
<ul dir="auto">
<li>This paper presents and evaluates a novel availability metric: windowed user-uptime</li>
</ul>
</li>
<li>🏙 <a href="https://speakerdeck.com/jvns/high-reliability-infrastructure-migrations" rel="nofollow">High Reliability Infrastructure migrations</a>, Julia Evans.</li>
<li>🏙 <a href="https://speakerdeck.com/charity/the-paradox-of-alerts" rel="nofollow">The Paradox of Alerts</a>: why deleting 90% of your paging alerts can make your systems better, and how to craft an on-call rotation that engineers are happy to join.</li>
<li><a href="https://www.refsmmat.com/files/reflections.pdf" rel="nofollow">Appendix F: Personal Observations on the Reliability of the Shuttle</a>, Richard Feynman</li>
</ul>
<blockquote>
<p dir="auto">Reliability is the one feature every customer users. -- An auth0 SRE.</p>
</blockquote>
<p dir="auto">Resources:</p>
<ul dir="auto">
<li>🧰 <a href="https://github.com/dastergon/awesome-sre">dastergon/awesome-sre</a></li>
<li><a href="https://github.com/upgundecha/howtheysre">upgundecha/howtheysre</a>: a curated collection of publicly available resources on SRE at technology and tech-savvy organizations</li>
</ul>
<h3 tabindex="-1" dir="auto">Technical debt</h3>
<ul dir="auto">
<li><a href="https://martinfowler.com/bliki/TechnicalDebt.html" rel="nofollow">TechnicalDebt</a>, Martin Fowler.</li>
<li><a href="https://docs.google.com/presentation/d/16WU1cxG02jnVGQ5byviw3_Q0ILDPZPYtTvU91_210T0/edit#slide=id.p" rel="nofollow">Fixing Technical Debt with an Engineering Allocation Framework</a>
<ul dir="auto">
<li>You don't need to stop shipping features to fix technical debt</li>
<li>Communicate the business value</li>
</ul>
</li>
<li><a href="https://www.georgefairbanks.com/ieee-software-v32-n4-july-2020-ur-technical-debt" rel="nofollow">Ur-Technical Debt</a>
<ul dir="auto">
<li>Today, any code that a developer dislikes is branded as technical debt.</li>
<li>Ward Cunningham invented the debt metaphor to explain to his manager that building iteratively gave them working code faster, much like borrowing money to start a project, but that it was essential to keep paying down the debt, otherwise the interest payments would grind the project to a halt.</li>
<li>Ur-technical debt is generally not detectable by static analysis.</li>
</ul>
</li>
</ul>
<h3 tabindex="-1" dir="auto">Testing</h3>
<ul dir="auto">
<li>⭐️ <a href="http://martinfowler.com/articles/microservice-testing/" rel="nofollow">Testing strategies in a microservices architecture</a> (Martin Fowler) is an awesome resources explaining how to test a service properly.</li>
</ul>
<p dir="auto">Why test:</p>
<ul dir="auto">
<li><a href="https://dave.cheney.net/2019/05/14/why-bother-writing-tests-at-all" rel="nofollow">Why bother writing tests at all?</a>, Dave Cheney. A good intro to the topic.
<ul dir="auto">
<li>Even if you don’t, someone will test your software</li>
<li>The majority of testing should be performed by development teams</li>
<li>Manual testing should not be the majority of your testing because manual testing is O(n)</li>
<li>Tests are the critical component that ensure you can always ship your master branch</li>
<li>Tests lock in behaviour</li>
<li>Tests give you confidence to change someone else’s code</li>
</ul>
</li>
</ul>
<p dir="auto">How to test:</p>
<ul dir="auto">
<li><a href="http://www.nytimes.com/interactive/2015/07/03/upshot/a-quick-puzzle-to-test-your-problem-solving.html?_r=0" rel="nofollow">A quick puzzle to test your problem solving</a>... and a great way to learn about confirmation bias and why you're mostly writing positive test cases.</li>
<li><a href="https://www.calhoun.io/testing-is-not-for-beginners/" rel="nofollow">Testing is not for beginners</a>: why learning to test is hard. This shouldn't demotivate you though!</li>
<li><a href="https://automationpanda.com/2020/07/07/arrange-act-assert-a-pattern-for-writing-good-tests/" rel="nofollow">Arrange-act-assert: a pattern for writing good tests</a></li>
<li><a href="https://lukeplant.me.uk/blog/posts/test-smarter-not-harder/" rel="nofollow">Test smarter, not&nbsp;harder</a></li>
</ul>
<p dir="auto">Test pyramid:</p>
<ul dir="auto">
<li><a href="http://martinfowler.com/bliki/TestPyramid.html" rel="nofollow">The test pyramid</a>, Martin Fowler</li>
<li><a href="http://www.martinfowler.com/articles/nonDeterminism.html" rel="nofollow">Eradicating non-determinism in tests</a>, Martin Fowler</li>
<li><a href="https://martinfowler.com/articles/practical-test-pyramid.html" rel="nofollow">The practical test pyramid</a>, MartinFowler.com
<ul dir="auto">
<li>Be clear about the different types of tests that you want to write. Agree on the naming in your team and find consensus on the scope of each type of test.</li>
<li>Every single test in your test suite is additional baggage and doesn't come for free.</li>
<li>Test code is as important as production code.</li>
</ul>
</li>
<li><a href="http://blog.codepipes.com/testing/software-testing-antipatterns.html" rel="nofollow">Software testing anti-patterns</a>, Kostis Kapelonis.</li>
<li><a href="https://blog.kentcdodds.com/write-tests-not-too-many-mostly-integration-5e8c7fff591c" rel="nofollow">Write tests. Not too many. Mostly integration.</a> for a contrarian take about unit testing</li>
<li>🎞 <a href="https://www.youtube.com/watch?v=Oj8bfBlwHAg&amp;ab_channel=PercyRicardoAnticonaMasabel" rel="nofollow">Unit test 2, Integration test: 0</a></li>
<li><a href="https://www.tbray.org/ongoing/When/202x/2021/05/15/Testing-in-2021" rel="nofollow">Testing in the Twenties</a></li>
</ul>
<p dir="auto">End-to-end tests:</p>
<ul dir="auto">
<li><a href="https://testing.googleblog.com/2015/04/just-say-no-to-more-end-to-end-tests.html" rel="nofollow">Just say no to more end-to-end tests</a>, Google Testing Blog</li>
<li><a href="https://dzone.com/articles/end-to-end-testing-considered-harmful" rel="nofollow">End-to-end testing considered harmful</a>, DZone</li>
</ul>
<h3 tabindex="-1" dir="auto">Tools</h3>
<ul dir="auto">
<li><a href="https://devdocs.io/" rel="nofollow">DevDocs API Documentation</a>: a repository for multiple API docs (see also <a href="https://kapeli.com/dash" rel="nofollow">Dash for macOS</a>).</li>
<li><a href="https://devchecklists.com/" rel="nofollow">DevChecklist</a>: a collaborative space for sharing checklists that help ensure software quality</li>
<li>🧰 <a href="https://free-for.dev/#/" rel="nofollow">Free for developers</a>: list of free tiers for developments tools and services</li>
<li><a href="https://boringtechnology.club/" rel="nofollow">Choose Boring Technology</a></li>
<li><a href="https://news.ycombinator.com/item?id=31782200" rel="nofollow">Ask HN: Best dev tool pitches of all time?</a></li>
<li><a href="https://uses.tech/" rel="nofollow">A list of /uses pages detailing developer setups, gear, software and configs</a></li>
</ul>
<blockquote>
<p dir="auto">The future life expectancy of some non-perishable things, like a technology or an idea, is proportional to their current age
— Lindy’s Law</p>
</blockquote>
<h3 tabindex="-1" dir="auto">Type system</h3>
<ul dir="auto">
<li><a href="https://counterexamples.org/intro.html" rel="nofollow">Counterexamples in Type Systems</a>: a library of runtime issues that weren't caught by the type system</li>
</ul>
<h3 tabindex="-1" dir="auto">Version control (Git)</h3>
<p dir="auto">Learning Git, courses and books:</p>
<ul dir="auto">
<li>📖 <a href="https://git-scm.com/book/en/v2" rel="nofollow">Git Book</a></li>
<li><a href="https://codewords.recurse.com/issues/two/git-from-the-inside-out" rel="nofollow">Git from the inside out</a></li>
<li><a href="https://www.atlassian.com/git/tutorials" rel="nofollow">Git Tutorials and Training</a>, Atlassian</li>
<li><a href="https://gitimmersion.com/" rel="nofollow">Git Immersion</a></li>
<li><a href="http://marklodato.github.io/visual-git-guide/index-en.html" rel="nofollow">A Visual Git Reference</a> (a bit more advanced)</li>
<li><a href="http://think-like-a-git.net/" rel="nofollow">Think Like (a) Git</a></li>
<li><a href="https://github.blog/2022-08-29-gits-database-internals-i-packed-object-store/" rel="nofollow">Git's database internals I: packed object store</a>: an insightful deep dive from Github</li>
</ul>
<p dir="auto">Cheat sheets:</p>
<ul dir="auto">
<li><a href="https://github.com/arslanbilal/git-cheat-sheet">Git Cheat Sheet</a></li>
<li><a href="https://github.com/git-tips/tips">git-tips</a></li>
<li><a href="https://ohshitgit.com/" rel="nofollow">Oh Shit, Git!?!</a></li>
</ul>
<p dir="auto">More specific topics:</p>
<ul dir="auto">
<li><a href="https://www.conventionalcommits.org/en/v1.0.0/" rel="nofollow">Conventional Commits</a></li>
<li><a href="https://hackernoon.com/git-merge-vs-rebase-whats-the-diff-76413c117333" rel="nofollow">Git Merge vs. Rebase: What’s the Diff?</a></li>
<li>🏙 <a href="https://speakerdeck.com/aemeredith/story-telling-with-git-rebase" rel="nofollow">Story-telling with Git rebase</a></li>
<li>🏙 <a href="https://speakerdeck.com/mrfoto/git-rebase-vs-merge" rel="nofollow">Git Rebase vs. Merge</a></li>
<li>🏙 <a href="https://speakerdeck.com/lemiorhan/10-git-anti-patterns-you-should-be-aware-of" rel="nofollow">10 Git Anti Patterns You Should be Aware of</a></li>
<li><a href="https://learngitbranching.js.org/" rel="nofollow">Learn Git Branching</a>: an interactive game</li>
<li><a href="https://medium.com/@porteneuve/fix-conflicts-only-once-with-git-rerere-7d116b2cec67" rel="nofollow">Fix conflicts only once with git rerere</a></li>
<li><a href="https://monorepo.tools/" rel="nofollow">Monorepo Explained</a></li>
<li><a href="https://cbea.ms/git-commit/" rel="nofollow">How to Write a Git Commit Message</a></li>
<li><a href="https://git-scm.com/docs/git-worktree" rel="nofollow">git-worktree</a>: manage multiple working trees attached to the same repository.</li>
</ul>
<h3 tabindex="-1" dir="auto">Work ethics, productivity &amp; work/life balance</h3>
<p dir="auto">Check out this section on my <a href="https://github.com/charlax/engineering-management/#personal-productivity">list of management resources, "Personal productivity"</a>.</p>
<h3 tabindex="-1" dir="auto">Web development</h3>
<ul dir="auto">
<li><a href="https://github.com/grab/front-end-guide">grab/front-end-guide</a>: a study guide and introduction to the modern front end stack.</li>
<li><a href="http://maintainablecss.com/" rel="nofollow">Maintainable CSS</a></li>
<li><a href="https://frontendmasters.com/books/front-end-handbook/2019/" rel="nofollow">Front-End Developer Handbook 2019</a>, Cody Lindley</li>
<li><a href="http://uigoodies.com/index.html" rel="nofollow">A Directory of design and front-end resources</a></li>
<li><a href="https://khalilstemmler.com/articles/client-side-architecture/introduction/" rel="nofollow">Client-Side Architecture Basics</a></li>
<li>🧰 <a href="https://github.com/codingknite/frontend-development">codingknite/frontend-development</a>: a list of resources for frontend development</li>
<li><a href="https://www.baldurbjarnason.com/2021/100-things-every-web-developer-should-know/" rel="nofollow">136 facts every web dev should know</a></li>
<li><a href="https://www.a11yproject.com/checklist/" rel="nofollow">Checklist - The A11Y Project</a> for accessibility</li>
<li><a href="https://devtoolstips.org/" rel="nofollow">DevTools Tips</a></li>
<li><a href="https://alan.norbauer.com/articles/browser-debugging-tricks" rel="nofollow">67 Weird Debugging Tricks Your Browser Doesn't Want You to Know</a></li>
</ul>
<h3 tabindex="-1" dir="auto">Writing (communication, blogging)</h3>
<p dir="auto">➡️ See also my <a href="https://github.com/charlax/engineering-management#writing">engineering-management list</a></p>
<ul dir="auto">
<li><a href="https://blog.pragmaticengineer.com/on-writing-well/" rel="nofollow">Undervalued Software Engineering Skills: Writing Well</a>
<ul dir="auto">
<li>From the HN discussion: "Writing a couple of pages of design docs or an Amazon-style 6 pager or whatever might take a few days of work, but can save weeks or more of wasted implementation time when you realise your system design was flawed or it doesn't address any real user needs."</li>
</ul>
</li>
<li><a href="https://www.solipsys.co.uk/new/SellYourselfSellYourWork.html?te20hn" rel="nofollow">Sell Yourself Sell Your Work</a>
<ul dir="auto">
<li>If you've done great work, if you've produced superb software or fixed a fault with an aeroplane or investigated a problem, without telling anyone you may as well not have bothered.</li>
</ul>
</li>
<li><a href="https://www.julian.com/guide/write/intro" rel="nofollow">The Writing Well Handbook</a>
<ul dir="auto">
<li>Ideas — Identify what to write about</li>
<li>First Drafts — Generate insights on your topic</li>
<li>Rewriting — Rewrite for clarity, intrigue, and succinctness</li>
<li>Style — Rewrite for style and flow</li>
<li>Practicing — Improve as a writer</li>
</ul>
</li>
<li><a href="http://paulgraham.com/simply.html" rel="nofollow">Write Simply</a>, Paul Graham</li>
<li><a href="https://blog.stephsmith.io/learning-to-write-with-confidence/" rel="nofollow">Writing is Thinking: Learning to Write with Confidence</a></li>
<li><a href="https://alexnixon.github.io/2019/12/10/writing.html" rel="nofollow">It's time to start writing</a> explains why Jeff Bezos banned PowerPoint at Amazon.
<ul dir="auto">
<li>The reason writing a good 4 page memo is harder than "writing" a 20 page powerpoint is because the narrative structure of a good memo forces better thought and better understanding of what's more important than what, and how things are related.</li>
<li>Powerpoint-style presentations somehow give permission to gloss over ideas, flatten out any sense of relative importance, and ignore the interconnectedness of ideas.</li>
</ul>
</li>
<li><a href="http://antirez.com/news/135" rel="nofollow">Programming and Writing</a>, Antirez</li>
<li><a href="https://sive.rs/1s" rel="nofollow">Writing one sentence per line</a></li>
<li><a href="https://news.ycombinator.com/item?id=31859040" rel="nofollow">Ask HN: How to level up your technical writing?</a>. Lots of great resources.</li>
<li><a href="https://jvns.ca/blog/confusing-explanations/" rel="nofollow">Patterns in confusing explanations</a>, Julia Evans</li>
<li><a href="https://css-tricks.com/technical-writing-for-developers/" rel="nofollow">Technical Writing for Developers</a></li>
<li><a href="https://jvns.ca/blog/2023/06/05/some-blogging-myths/" rel="nofollow">Some blogging myths</a>, Julia Evans</li>
<li><a href="https://infusion.media/blog/george-orwells-six-rules-for-writing/" rel="nofollow">George Orwell's Six Rules for Writing</a>
<ul dir="auto">
<li>Never use a metaphor, simile, or other figure of speech which you are used to seeing in print.</li>
<li>Never use a long word where a short one will do.</li>
<li>If it is possible to cut a word out, always cut it out.</li>
<li>Never use the passive where you can use the active.</li>
<li>Never use a foreign phrase, a scientific word, or a jargon word if you can think of an everyday English equivalent.</li>
<li>Break any of these rules sooner than say anything outright barbarous.</li>
</ul>
</li>
</ul>
<p dir="auto">Guides &amp; classes about technical writing:</p>
<ul dir="auto">
<li><a href="https://www.writethedocs.org/guide/" rel="nofollow">Documentation Guide — Write the Docs</a>
<ul dir="auto">
<li>Principles</li>
<li>Style guides</li>
<li>Docs as code</li>
<li>Markup languages</li>
<li>Tools</li>
</ul>
</li>
<li><a href="https://developers.google.com/tech-writing/one" rel="nofollow">Technical Writing One introduction</a>, Google
<ul dir="auto">
<li>Grammar</li>
<li>Active voice</li>
<li>Clear &amp; short sentences</li>
</ul>
</li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/charlax/professional-programming/blob/master/images/amazon_writing_rules.jpeg"><img src="https://github.com/charlax/professional-programming/raw/master/images/amazon_writing_rules.jpeg" alt="Write like an Amazonian"></a></p>
<blockquote>
<p dir="auto">If you’re overthinking, write. If you’re underthinking, read.
– @AlexAndBooks_</p>
</blockquote>
<h2 tabindex="-1" dir="auto">Resources &amp; inspiration for presentations</h2>
<ul dir="auto">
<li><a href="https://twitter.com/devops_borat" rel="nofollow">https://twitter.com/devops_borat</a></li>
<li><a href="https://speakerdeck.com/" rel="nofollow">https://speakerdeck.com/</a></li>
<li>Dilbert</li>
<li>Calvin &amp; Hobbes (<a href="http://michaelyingling.com/random/calvin_and_hobbes/" rel="nofollow">search engine</a>)</li>
<li><a href="https://twitter.com/_workchronicles" rel="nofollow">https://twitter.com/_workchronicles</a></li>
</ul>
<h2 tabindex="-1" dir="auto">Keeping up-to-date</h2>
<p dir="auto">Website and RSS feeds (I use <a href="http://feedly.com/" rel="nofollow">Feedly</a>):</p>
<ul dir="auto">
<li><a href="https://news.ycombinator.com/" rel="nofollow">Hacker News</a> ⭐️</li>
<li><a href="https://venturebeat.com/" rel="nofollow">VentureBeat</a></li>
<li><a href="http://highscalability.com/" rel="nofollow">High Scalability</a>: see <a href="#system-architecture">above</a></li>
</ul>
<p dir="auto">Security:</p>
<ul dir="auto">
<li><a href="https://www.schneier.com/" rel="nofollow">Schneier on Security</a></li>
<li><a href="https://krebsonsecurity.com/" rel="nofollow">Krebs on Security</a></li>
<li><a href="https://thehackernews.com/" rel="nofollow">The Hacker News</a></li>
</ul>
<p dir="auto">Newsletters:</p>
<ul dir="auto">
<li><a href="https://bytes.dev/" rel="nofollow">Bytes</a> (JavaScript)</li>
<li><a href="https://pycoders.com/" rel="nofollow">PyCoders</a> (Python)</li>
</ul>
<p dir="auto">Blogs:</p>
<ul dir="auto">
<li><a href="https://github.com/kilimchoi/engineering-blogs">kilimchoi/engineering-blogs</a></li>
</ul>
<h2 tabindex="-1" dir="auto">Concepts</h2>
<p dir="auto"><a href="https://github.com/charlax/professional-programming/blob/master/glossary.md">Glossary</a></p>
<ul dir="auto">
<li><a href="https://en.wikipedia.org/wiki/Behavior-driven_development" rel="nofollow">BDD</a></li>
<li><a href="https://en.wikipedia.org/wiki/CAP_theorem" rel="nofollow">CAP theorem</a></li>
<li><a href="https://en.wikipedia.org/wiki/Domain-driven_design" rel="nofollow">DDD</a></li>
<li><a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="nofollow">DRY</a></li>
<li><a href="https://en.wikipedia.org/wiki/Entity%E2%80%93attribute%E2%80%93value_model" rel="nofollow">EAV</a></li>
<li><a href="https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)" rel="nofollow">GRASP</a></li>
<li><a href="https://en.wikipedia.org/wiki/KISS_principle" rel="nofollow">KISS</a></li>
<li><a href="http://c2.com/cgi/wiki?MakeItWorkMakeItRightMakeItFast" rel="nofollow">Make it run, make it right, make it fast</a></li>
<li><a href="https://en.wikipedia.org/wiki/Object-oriented_programming" rel="nofollow">OOP</a></li>
<li><a href="https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)" rel="nofollow">SOLID</a></li>
<li><a href="https://en.wikipedia.org/wiki/Test-driven_development" rel="nofollow">TDD</a>
= <a href="https://en.wikipedia.org/wiki/Two_Generals%27_Problem" rel="nofollow">Two Generals' Problem</a></li>
<li><a href="https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it" rel="nofollow">YAGNI</a></li>
</ul>
<h2 tabindex="-1" dir="auto">My other lists</h2>
<ul dir="auto">
<li><a href="https://github.com/charlax/engineering-management/">engineering-management</a></li>
<li><a href="https://github.com/charlax/entrepreneurship-resources">entrepreneurship-resources</a></li>
<li><a href="https://github.com/charlax/professional-programming">professional-programming</a></li>
<li><a href="https://github.com/charlax/python-education">python-education</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why is Prettier rock solid? (183 pts)]]></title>
            <link>https://mrmr.io/til/prettier/</link>
            <guid>39437424</guid>
            <pubDate>Tue, 20 Feb 2024 02:36:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mrmr.io/til/prettier/">https://mrmr.io/til/prettier/</a>, See on <a href="https://news.ycombinator.com/item?id=39437424">Hacker News</a></p>
<div id="readability-page-1" class="page"><div tabindex="-1" id="___gatsby"><main><div><h3>Why is Prettier rock solid?</h3><p>I've always wondered why Prettier is so good. Yes, it learnt from <code>gofmt</code> what
to do (note that <code>gofmt</code> doesn't indent, which is the hard part). Yes, it was
announced in a real life conference, which helped get the initial momentum
behind it.</p>
<p>All that is fine, but what was a bit inexplicable to me is its quality.</p>
<ul>
<li>
<p>You might disagree with the defaults (I like them. The only one I
disagree with is tabWidth, it should not have been 2 but 4),</p>
</li>
<li>
<p>Or you might find that it is too slow,</p>
</li>
</ul>
<p>But in terms of functionality, it is <strong>solid</strong>. So far, it has never broken my
JS / TS code. Such high quality is rare in the wild west of JavaScript
libraries. Indeed, later additions to Prettier itself, like the MDX formatter
for Prettier, have huge bugs that make them unreasonably risky for anything
non-trivial. So how come Prettier's core formatters - HTML / CSS / JS / TS - are
all rock solid?</p>
<p>Today, I got the answer. This is Prettier's original author writing <a target="_blank" rel="noopener" href="https://archive.jlongster.com/How-I-Became-Better-Programmer">about
it<svg stroke="currentColor" fill="none" stroke-width="0" viewBox="0 0 15 15" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M3.64645 11.3536C3.45118 11.1583 3.45118 10.8417 3.64645 10.6465L10.2929 4L6 4C5.72386 4 5.5 3.77614 5.5 3.5C5.5 3.22386 5.72386 3 6 3L11.5 3C11.6326 3 11.7598 3.05268 11.8536 3.14645C11.9473 3.24022 12 3.36739 12 3.5L12 9.00001C12 9.27615 11.7761 9.50001 11.5 9.50001C11.2239 9.50001 11 9.27615 11 9.00001V4.70711L4.35355 11.3536C4.15829 11.5488 3.84171 11.5488 3.64645 11.3536Z" fill="currentColor"></path></svg></a>:</p>
<blockquote>
<p>Prettier is a perfect example of this. I knew what I wanted but I had no idea
how to implement it. After a little research I found <em>this paper</em> and after a
few days I knew exactly what I needed to do. I had something basic working in
a week. If I ignored previous research it would have taken a lot longer.</p>
</blockquote>
<p>You know which paper it links to?</p>
<p><a target="_blank" rel="noopener" href="http://homepages.inf.ed.ac.uk/wadler/papers/prettier/prettier.pdf">A prettier printer, by Philip Wadler<svg stroke="currentColor" fill="none" stroke-width="0" viewBox="0 0 15 15" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M3.64645 11.3536C3.45118 11.1583 3.45118 10.8417 3.64645 10.6465L10.2929 4L6 4C5.72386 4 5.5 3.77614 5.5 3.5C5.5 3.22386 5.72386 3 6 3L11.5 3C11.6326 3 11.7598 3.05268 11.8536 3.14645C11.9473 3.24022 12 3.36739 12 3.5L12 9.00001C12 9.27615 11.7761 9.50001 11.5 9.50001C11.2239 9.50001 11 9.27615 11 9.00001V4.70711L4.35355 11.3536C4.15829 11.5488 3.84171 11.5488 3.64645 11.3536Z" fill="currentColor"></path></svg></a>!</p>
<blockquote>
<p>Joyce Kilmer and most computer scientists agree: there is no poem as lovely as
a tree.</p>
</blockquote>
<p>Haskellers would recognize both the paper, and the author. Of course, this is
not to take away from the authors of Prettier and the years of work that has
subsequently gone into it –&nbsp;I'm just chirping about how Haskell continues to
enrich my life even when I'm not using it.</p></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Capital One to buy Discover Financial in $35.3B all-stock deal (155 pts)]]></title>
            <link>https://www.reuters.com/markets/deals/capital-one-considers-acquisition-discover-financial-bloomberg-says-2024-02-19/</link>
            <guid>39437387</guid>
            <pubDate>Tue, 20 Feb 2024 02:28:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/markets/deals/capital-one-considers-acquisition-discover-financial-bloomberg-says-2024-02-19/">https://www.reuters.com/markets/deals/capital-one-considers-acquisition-discover-financial-bloomberg-says-2024-02-19/</a>, See on <a href="https://news.ycombinator.com/item?id=39437387">Hacker News</a></p>
Couldn't get https://www.reuters.com/markets/deals/capital-one-considers-acquisition-discover-financial-bloomberg-says-2024-02-19/: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Cake – C23 and Beyond (2023) (158 pts)]]></title>
            <link>http://thradams.com/cake/ownership.html</link>
            <guid>39436623</guid>
            <pubDate>Tue, 20 Feb 2024 00:34:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://thradams.com/cake/ownership.html">http://thradams.com/cake/ownership.html</a>, See on <a href="https://news.ycombinator.com/item?id=39436623">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
<h2>Cake - C23 and Beyond</h2>
<ul>
<li>
<a href="#toc_0">Abstract</a>
</li>
<li>
<a href="#toc_1">Owner Objects</a>
<ul>
<li>
<a href="#toc_2">Non-pointer owner objects</a>
</li>
<li>
<a href="#toc_3">View Objects</a>
</li>
<li>
<a href="#toc_4">Returning view pointers.</a>
</li>
<li>
<a href="#toc_5">View pointer as struct members</a>
</li>
<li>
<a href="#toc_6">Deleting Owner Pointers</a>
</li>
</ul>
</li>
<li>
<a href="#toc_7">Static analysis - Checking the rules at compile time</a>
<ul>
<li>
<a href="#toc_8">Function Parameters</a>
</li>
</ul>
</li>
<li>
<a href="#toc_9">Ownership Feature Strategy (Inspired by stdbool.h)</a>
</li>
</ul>
<p>Last Updated 27/12/2023</p>

<p>This is a work in progress, both design and implementation. Cake source itself is being used to validate the concepts.</p>

<h2 id="toc_0">Abstract</h2>

<p>The objective is to statically check code and prevent bugs, including memory bugs. For this task, the compiler needs information that humans typically gather from the context. For example, names like "destroy" or "init" serve as hints, along with documentation and sometimes the implementation itself.</p>

<p>The compiler doesn't read documentation, nor does it operate in the same way as humans. Instead, a formal means of communication with the compiler is necessary. To facilitate this, new qualifiers have been created, and new methods of communication with the compiler have been established.</p>

<p>In the end, we still have the same language, but with a c_type_system++ version of C. This c_type_system++ can be disabled, and the language remains unmodified.</p>

<p>The creation of these rules follows certain principles, one of which is to default to safety.
In cases of uncertainty, the compiler should seek clarification. While C programmers retain the freedom 
to code as they wish, they must either persuade the compiler or disable analysis in specific code sections.
A human factor must be considered to ensure that annotations do not make the work too boring with 
excessive details. In this regard, selecting defaults that cover the most common cases is crucial.</p>

<h2 id="toc_1">Owner Objects</h2>

<p>An <strong>owner object</strong> is an object referencing another object and managing its lifetime. </p>

<p>The most common type of owner objects are pointers, often referred as <strong>owner pointers</strong>. An owner pointer is created with the qualifier owner, as illustrated in Listing 1:</p>

<p><strong>Listing 1 - Owner Pointer to FILE</strong></p>

<pre><code>#include &lt;ownership.h&gt;
#include &lt;stdio.h&gt;

int main()
{
  FILE *owner f = fopen("file.txt", "r"); 
  if (f)
    fclose(f);
}
</code></pre>

<p><strong>Note:</strong> The <code>owner</code> is actually a macro declared in ownership as _Owner. </p>

<p>The ownership mechanism has some rules that will be listed gradually throughout the text.</p>

<p><strong>Rule</strong>: An <strong>owner object</strong> is always the unique owner of the referenced object.</p>

<p><strong>Rule</strong>: When owner objects are copied the ownership is transfered.</p>

<p><strong>Rule:</strong> Before the end of its lifetime, owner objects must move the ownership of the objects they own. </p>

<p>For example, in Listing 2, the ownership of the owner pointer <code>f</code> is transferred to <code>f2</code>:</p>

<p><strong>Listing 2 - Assignment of Owner Objects is a Move</strong></p>

<pre><code>#include &lt;ownership.h&gt;
#include &lt;stdio.h&gt;

int main()
{
    FILE *owner f = fopen("file.txt", "r");
    FILE *owner f2 = f; /*MOVED*/
    if (f2)
       fclose(f2); /*MOVED*/
}
</code></pre>

<p>Invoking a function <code>fclose</code> is analogous to assignment of the argument <code>f2</code>, resulting in the transfer of ownership of <code>f2</code> to the function parameter.  Listing 3, shows the declaration of <code>fclose</code>.</p>

<p><strong>Listing 3 - Declaration of close</strong></p>

<pre><code>void fclose(FILE *owner p);
</code></pre>

<h3 id="toc_2">Non-pointer owner objects</h3>

<p>We can have other types of <strong>owner objects</strong>. For instance, Berkeley sockets use an integer to identify the socket, as shown in listing 4:</p>

<p><strong>Listing 4 - Non-Pointer owners objects</strong></p>

<pre><code> owner int server_socket =
     socket(AF_INET, SOCK_STREAM, 0);
 /*...*/
 close(server_socket);
</code></pre>

<p>The location and usage of qualifier owner is similar of const qualifier. For pointers it goes after <code>*</code>, for this socket sample it can be before int.</p>

<h3 id="toc_3">View Objects</h3>

<p>A <strong>view object</strong> is an object referencing another object without managing its lifetime. </p>

<p><strong>Rule</strong> The lifetime of the referenced object must be bigger than the lifetime of the view object.</p>

<p>The most common view objects are pointers called <strong>view pointers</strong>. </p>

<p>The view qualifier is not necessary for pointers, since it's the default behavior. When an owner object is copied to a view object, the ownership is not transferred, as shown in Listing 5:</p>

<p><strong>Listing 5 - Calling Function with View Parameters</strong></p>

<pre><code>#include &lt;ownership.h&gt;
#include &lt;stdio.h&gt;

void use_file(FILE *f) {}

int main() {
    FILE *owner f = fopen("file.txt", "r");
    if (f) {
        use_file(f); /*NOT MOVED*/
        fclose(f);
    }
}
</code></pre>

<p>When a struct or union have at least one owner object it makes the struct a owner object too.</p>

<p>When a <strong>view</strong> qualifier is used in structs, it makes all members as view objects. Listing 6.</p>

<p><strong>Listing 6 - A view parameter</strong></p>

<pre><code>#include &lt;ownership.h&gt;
#include &lt;stdlib.h&gt;

struct X {   
  char *owner text;   
};  

void f(view struct X x) { /*...*/ }  

int main() {
    struct X x = {};
    f(x); /*NOT MOVED*/    
    free(x.text);
}
</code></pre>

<p>It is interesting to compare against const qualifier. 
While const adds a qualifier "const" "view" removes the qualifier "owner".</p>

<h3 id="toc_4">Returning view pointers.</h3>

<p>We cannot return local variables as view pointers.</p>

<pre><code>int * f()
{
   int a = 1;
   return &amp;a;
}
int main()
{
  int * p = f();   
  //warning: function returns address of 
  //local variable [-Wreturn-local-addr]
}
</code></pre>

<p>But we can return static variables and function arguments.</p>

<pre><code>static int a = 1;

int * f()
{   
   return &amp;a;
}
int * f2(int *p) {
   return p;
}

int main()
{
  int * p = f();
  int b = 1;
  p = f2(&amp;b);
}
</code></pre>

<p>Another sample:</p>

<pre><code>#include &lt;stdio.h&gt;

int * max(int * p1, int * p2) {  
 return *p1 &gt; *p2 ? p1 : p2;
}

int main(){  
   int * p = NULL;
   int a  = 1;
   {
      int b = 2;
      p = max(&amp;a,  &amp;b);
   }
   printf("%d", *p);
}
</code></pre>

<p>Examining the implementation reveals that the returned view pointer's lifetime can be that of either 'a' or 'b'. Our goal is to set contracts at the declaration level. Following the concept of ensuring safety by default, we assume that the returned view pointers have the shortest scope, limited to the function call.<br>
(Cake is not doing this check at this moment) </p>

<h3 id="toc_5">View pointer as struct members</h3>

<p>Consider this sample.</p>

<pre><code>struct X {  
 struct Y * pY;  
};  
struct Y {  
 char * owner name;  
};  
</code></pre>

<p>An object Y pointed by pY must live longer than object X.<br>
This check must be done at instantiation.</p>

<h3 id="toc_6">Deleting Owner Pointers</h3>

<p><strong>Owner pointers</strong> take on the responsibility of owning the pointed object and its associated memory, treating them as distinct entities. A common practice is to implement a delete function to release both resources, as illustrated in Listing 7:</p>

<p><strong>Listing 7 - Implementing the delete function</strong></p>

<pre><code>#include &lt;ownership.h&gt;
#include &lt;stdlib.h&gt;

struct X { 
  char *owner text; 
};

void x_delete(struct X *owner p) {
  if (p) {
    /*releasing the object*/ 
    free(p-&gt;text);
    
    /*releasing the memory*/ 
    free(p); 
  }
}

int main() {
  struct X * owner pX = calloc( 1, sizeof * pX);
  if (pX) {
    /*...*/;
    x_delete( pX); 
  }
}
</code></pre>

<p>When the object is created on the stack, we can implement a destructor, as shown in Listing 8:</p>

<p><strong>Listing 8 - Implementing a destructor</strong></p>

<pre><code>#include &lt;ownership.h&gt;
#include &lt;stdlib.h&gt;

struct X {
    char *owner text;
};  

void x_destroy(struct X x) {
    free(x.text);
}  

int main() {
    struct X x = {};
    /*...*/
    x_destroy(x); /*x is moved*/
}
</code></pre>

<p>However in C, structs are typically passed by pointer rather than by value. To transfer the ownership of an owner object to a pointer, Cake introduces a new qualifier, <strong>obj_owner</strong>. </p>

<p>A pointer qualified with <strong>obj_owner</strong> is the owner of the pointed object but not responsible for managing its memory.</p>

<p>Listing 9 illustrates how to implement a destructor using a obj_owner pointer parameter.</p>

<p><strong>Listing 9 - Implementing a destructor using obj_owner</strong></p>

<pre><code>struct X {
#include &lt;ownership.h&gt;
#include &lt;stdlib.h&gt;

struct X {
    char *owner text;
};

void x_destroy(struct X *obj_owner x) {
    free(x-&gt;text);
    /*x is not the owner of the memory*/
}

int main() {
    struct X x = {};
    /*more code*/
    x_destroy(&amp;x); /*x is moved*/
}
</code></pre>

<p>In order to prevent moving from a non owner object, only <code>address of expressions</code> to <code>obj_owner</code> are allowed. For instance, listing 10 shows we cannot move a view pointer.</p>

<p><strong>Listing 10 - Non address of expression or owner pointer.</strong></p>

<pre><code>#include &lt;ownership.h&gt;
#include &lt;stdlib.h&gt;

struct X {
 struct Y * p;
};

void y_destroy(struct Y * obj_owner p);

void f(struct X * x) {
  //Error: parameter 1 requires a pointer to owner object
  //Error: pointed object is not owner
  y_destroy(x-&gt;p); 
}
</code></pre>

<p>We can copy an owner pointer to an <strong>obj_owner</strong> pointer. In this scenario, only the ownership of the pointed object is transferred, not the memory ownership. Listing 11 illustrates how we can use <code>x_destroy</code> in the implementation of <code>x_delete</code>.</p>

<p><strong>Listing 11 - Using <code>x_destroy</code> to implement <code>x_delete</code></strong></p>

<pre><code>#include &lt;ownership.h&gt;
#include &lt;stdlib.h&gt;

struct X {
  char *owner text; 
};

void x_destroy(struct X *obj_owner x) {
  free(x-&gt;text); 
}

void x_delete(struct X *owner p) { 
  if (p) {
    x_destroy(p); /* *p is moved*/
    free(p);
  }
}

int main() {
   struct X * owner pX = calloc( 1, sizeof * pX);
   if (pX) {
     /*...*/;
     x_delete( pX); 
   }
 } 
</code></pre>

<p>In C, array types in arguments are pointers. This characteristics is preserved.</p>

<p>To use owner qualifier in array we do. (Just like const)</p>

<pre><code>void f(int a[owner])
{
  free(a);
}
</code></pre>

<p>But I think this is quite uncommon.</p>

<h2 id="toc_7">Static analysis - Checking the rules at compile time</h2>

<p>Let's revisit our first example:</p>

<pre><code>#include &lt;ownership.h&gt;
#include &lt;stdio.h&gt;

int main()
{
  FILE *owner f = fopen("file.txt", "r"); 
  if (f)
    fclose(f);
}
</code></pre>

<p>The flow analysis must ensure that when the owner pointer <code>f</code> goes out of scope, it does not own any objects. At the end of the scope, <code>f</code> can be either null or moved, and both states ensure that there are no remaining resources.</p>

<p>To check the ownership rules, the compiler uses six states:</p>

<ul>
<li>uninitialized</li>
<li>moved</li>
<li>null</li>
<li>not-null</li>
<li>zero</li>
<li>not-zero</li>
</ul>

<p>We can print these states using the <strong>static_debug</strong> declaration. We can also assert the variable is at a certain state using the <strong>static_state</strong> declaration. Listing 12 shows this usage:</p>

<p><strong>Listing 12 - Usage of static_state and static_debug</strong></p>

<pre><code>int main() {
 int a;   
 static_state(a, "uninitialized");  
 static_debug(a);
}
</code></pre>

<p>Output:</p>

<pre><code>c:/main.c:4:2: note: static_debug
 4 | static_debug(a);
   | ^~~~~~~~~~~~
 a == "uninitialized"
</code></pre>

<p>As we have just seen, the <strong>uninitialized</strong> state is the state of variables that are declared but not initialized. </p>

<p>The compiler ensures that we don't read uninitialized objects.</p>

<pre><code>void f1(int i);
int main() {
   int i;
   f1(i); //error: uninitialized object 'i'
}
</code></pre>

<p>The other situation were variables becomes <strong>uninitialized</strong> is when moving ownership to function parameters. This prevents bugs like double free or use after free.</p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdlib.h&gt;

struct X {
  char * owner text;
};

void x_delete(struct X * owner p)
{
    if (p) {
      free(p-&gt;text);
      free(p);    
    }
}

void f(struct X * p){}

int main() {   
   struct X * owner p = malloc(sizeof(struct X));
   p-&gt;text = malloc(10);
   x_delete(p);
   f(p); //uninitialized object 'p'
}
</code></pre>

<p>When objects are moved within a local scope, the state is "moved" rather than "uninitialized." The "moved" state is similar to the "uninitialized" state. For instance, it's not possible to move an object that has already been moved.</p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdlib.h&gt;

struct X {
  char * owner text;
};

void x_delete(struct X * owner p)
{
    if (p)
    {
      free(p-&gt;text);
      free(p);    
    }
}

void f(struct X * p){}

int main() {   
   struct X * owner p = malloc(sizeof(struct X));
   p-&gt;text = malloc(10);
  
   struct X * owner p2 = 0;
   p2 = p; //MOVED
  
   f(p); //error: object 'p' was moved
   x_delete(p2);
}

</code></pre>

<p>The "moved" state was introduced instead of solely relying on the "uninitialized" state because static analysis benefits from having more information on local variables. "Moved" objects may, in some cases, serve as view objects. For example, in listing XX, the x object has been moved to x2, but it is safe to use x as "view" object even after the move.</p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdlib.h&gt;

struct X {
  char * owner text;
};

int main() {   
  struct X x = {0};
  //...
  struct X x2 = {0};  
  x2 = x; //MOVED
  free(x2.text);
}
</code></pre>

<p>Note: The current implementation of cake does not handle all necessary states to ensure the safe usage of moved objects.</p>

<p>A common scenario where uninitialized objects are utilized is when a pointer to an uninitialized object is passed to an "init" function. This situation is addressed by the qualifier <strong>out</strong>.</p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

struct X {
  char * owner text;
};

int init(out struct X *p, const char * text)
{
  //SAFE
  p-&gt;text = strdup(text);
}

int main() {   
  struct X x;
  init(&amp;x, "text");  
  free(x.text);
}
  
</code></pre>

<p>The "out" qualifier is necessary at the caller side and at the implementation.</p>

<p>The caller is informed that the argument must be uninitialized, and the implementation is aware that it can safely override the contents of the object <code>p-&gt;text = strdup(text);</code> without causing a memory leak.</p>

<p>There is no explicit "initialized" state. When referring to initialized objects, it means the state is neither "moved" nor "uninitialized."</p>

<p><strong>Rule</strong> By default, the parameters of a function are considered initialized. The exception is created with out qualifier.</p>

<p>For instance, at set implementation we need free text before assignment.</p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

struct X {
  char * owner text;
};

int init(out struct X *p, const char * text)
{
  //SAFE
  p-&gt;text = strdup(text);
}

int set(struct X *p, const char * text)
{
  free(p-&gt;text); //NECESSARY
  p-&gt;text = strdup(text);
}

int main() {   
  struct X x;
  init(&amp;x, "text1");
  set(&amp;x, "text2");   
  free(x.text);
}
</code></pre>

<p><strong>Rule</strong> All objects passed as arguments must be initialized. The exception is when object is out qualified.</p>

<p><strong>Rule</strong>: We cannot pass initialized objects to <strong>out</strong> qualified object.</p>

<p>The <strong>null</strong> state means that owner objects are initialized and not referencing any object. Listing 13 shows a sample using owner pointers:</p>

<p><strong>Listing 13 - Null state</strong></p>

<pre><code>#include &lt;ownership.h&gt; 

int main() {
 void * owner p = nullptr;   
 static_state(p, "null"); 
}
</code></pre>

<p>The <strong>not-null</strong> state indicates that the object is referencing some object.
The state can be a combination of possibilities like <strong>null</strong> and <strong>not-null</strong>. We can check possible combination using "or".
This particular combination <strong>null or not-null</strong> has a alias <strong>maybe-null</strong> as shown in listing 14.</p>

<p><strong>Listing 14 - not-null and maybe-null state</strong></p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdlib.h&gt;

int main()
{
   void * owner p = malloc(1);
   if (p) {
     static_state(p, "not-null");
   }
   static_state(p, "maybe-null");   
   static_state(p, "null or not-null");
   free(p);
}
</code></pre>

<p>The <strong>zero</strong> state is used for non-owner objects to complement and support uninitialized checks.</p>

<p><strong>Rule</strong> Pointer parameters are consider not-null by default. The exception is created using the qualifier <strong>_Opt</strong>.  </p>

<p>To tell the compiler that the pointer can be null, we use the qualifier <strong>_Opt</strong>.</p>

<p>(Currently Cake is only doing null-checks if the -nullchecks option is passed to the compiler, the cake source itself has to move to nullchecks)</p>

<p><strong>Listing 15 - The zero state</strong></p>

<pre><code>int main()
{
   int i = 0;
   static_state(i, "zero");   
}
</code></pre>

<p><strong>Zero</strong> and <strong>null</strong> are different states. This difference is necessary because, for non-pointers like the socket sample, 0 does not necessarily means null. The compiler does not know the semantics for types that are not pointers. However, you can use <strong>static_set</strong> to override states. In Listing 16, we annotate that server_socket is null, which doesn't mean it is zero but indicates that it is not holding any resources and is safe to return without calling close.</p>

<p><strong>Listing 16 - Usage of static_set</strong></p>

<pre><code>  owner int server_socket =
     socket(AF_INET, SOCK_STREAM, 0);
  if (server_socket &lt; 0) {  
     static_set(server_socket, "null");
     return;
  }  
 /*...*/
 close(server_socket);
</code></pre>

<p>The <strong>not-zero</strong> state is used for non-owner objects to indicate the value if not zero.</p>

<p>Similarly of  <strong>maybe-null</strong>, <strong>any</strong> is a alias for <strong>zero or not-zero</strong> state.</p>

<pre><code>int f();

int main() {   
    int i = f();
    static_state(i, "any");
}

</code></pre>

<p>By the way, the result of functions are never <strong>uninitialized</strong> by convention.</p>

<p>By default, pointers have the state <strong>maybe-null</strong> and other types have the state <strong>any</strong>.</p>

<p><strong>Rule</strong>: Function never returns uninitialized objects.</p>

<p>Now let's consider <code>realloc</code> function.</p>

<pre><code>void * owner realloc( void *ptr, size_t new_size ); 
</code></pre>

<p>In the declaration of <code>realloc</code>, we are not moving the ptr. The reason for that is because the <code>ptr</code> may or may not be moved. If the function returns NULL, <code>ptr</code> was not moved. Listing 17 shows how <strong>static_set</strong> can be used.</p>

<p><strong>Listing 17 - Using static_set with realloc</strong></p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdlib.h&gt;
int main()
{
  void * owner p = malloc(1);
  void * owner p2 = realloc(p, 2);
  if (p2 != 0)
  {
     // if p2 != 0 it  means p was moved
     static_set(p, "moved");
     p = p2;
  }    
  free(p);
}
</code></pre>

<p>Without the <code>static_set</code> we have this error   </p>

<pre><code>error: memory pointed by 'p' was not released before assignment.
 11 |     p = p2;
</code></pre>

<p>The state of an object is a combination of all possible states. For instance, let's print and check the state of <code>f</code> at listing 17.</p>

<p><strong>Listing 17 - Flow analysis</strong></p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

int main() {
  FILE *owner f = fopen("file.txt", "r");
  if (f)
    fclose(f);  
  static_state(f, "uninitialized or null");  
}
</code></pre>

<p>When objects are moved to functions, the state is  <code>uninitialized</code>  that is the worst scenario of what can happens inside the function. When objects are moved inside the same source the state is <code>moved</code>.</p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

int main() {
  FILE *owner f = fopen("file.txt", "r");  
  FILE *owner f2 = f; 
  static_state(f, "moved");  
  fclose(f2);
}  
</code></pre>

<p><strong>Rule:</strong> We cannot discard owner objects as showed in listing 18.  </p>

<p><strong>Listing 18 - owner objects cannot be discarded.</strong></p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdio.h&gt;

int main() {
  //error: ignoring the result of owner type
  fopen("file.txt", "r");   
}
</code></pre>

<p><strong>Rule:</strong> Before the assignment of owner objects, the compiler checks if the owner object is not holding any resource, as shown in Listing 19:</p>

<p><strong>Listing 19 - Check before assignment</strong></p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdio.h&gt;

int main() {
  FILE * owner file = fopen("file.txt", "r");
  
  //error: memory pointed by 'file' was not 
  //released before assignment.  
  file = fopen("file.txt", "r");
}
</code></pre>

<h3 id="toc_8">Function Parameters</h3>

<p>For function parameters, the state of the object is initialized by default.</p>

<p><strong>Listing 20 - States of function parameters</strong></p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;string.h&gt;

struct X {
  char *owner text; 
};

void set(struct  X * x, const char * name) {
  free(x-&gt;text);
  x-&gt;text = strdup(name);
}

</code></pre>

<p>When the argument can be uninitialized we use the qualifier _Out.</p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;string.h&gt;

struct X {
  char *owner text; 
};

void init(out struct X * x) {
  x-&gt;text = strdup("a");
}

void set(struct  X * x, const char * name) {
  free(x-&gt;text);
  x-&gt;text = strdup(name);
}

</code></pre>

<p>After calling init the object may or not be initialized.</p>

<p>At  listing 21, we show how <strong>static_set</strong> can be used to set states. </p>

<p><strong>Listing 21 - Using static_set</strong></p>

<pre><code>TODO
</code></pre>

<p>But when possible we can use assert that works both as static information and runtime check in debug.</p>

<p>Consider the following sample where we have a linked list. Each node has owner pointer to next. The next pointer of the tail of the list is always pointing to null, unless we have a bug. But the compiler does not know <code>list-&gt;tail-&gt;next</code> is null. Using assert we give this inform to the compiler and we also have a runtime check for possible logic bugs.</p>

<p><strong>Listing 22 shows the usage of assert.</strong> </p>

<pre><code>
#include &lt;ownership.h&gt; 
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;

struct node {
 char * owner text;
 struct node* owner next;
};

struct list {
  struct node * owner head;
  struct node * tail;
};

void list_append(struct list* list, struct node* owner node)
{
  if (list-&gt;head == NULL) {
      list-&gt;head = node;
   }
   else {
      assert(list-&gt;tail-&gt;next == 0);
      list-&gt;tail-&gt;next = node;
   }
   list-&gt;tail = node;
}
</code></pre>

<p><strong>Rule:</strong> A non-owner object cannot be copied to a owner object. </p>

<p>But, the null pointer constant is converted to a null owner pointer. Se listing 23.</p>

<p><strong>Listing 23 - non owner cannot be copied to owner</strong></p>

<pre><code>FILE * f();
int main() {  
   FILE * owner file = f(); //ERROR   
   FILE * owner file2 = 0;  //OK
}
</code></pre>

<p><strong>Rule:</strong> A view pointer parameter cannot leave the scope with moved/uninitialized objects. Listing 24</p>

<p><strong>Listing 24 - Messing with view parameters</strong></p>

<pre><code>
#include &lt;ownership.h&gt; 
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;

struct X
{
  char * owner name;
};

void x_destroy(struct X * obj_owner p)
{
  free(p-&gt;name); 
}

struct Y
{
   struct X x;
}

void f(struct Y * p) {
   // parameter 'p' is leaving scoped with a uninitialized
   // object 'p.x.name'
   x_destroy(&amp;p-&gt;x);
}
  
int main() {
   struct Y  y = {};
   y.x.name = strdup("a");
   f(&amp;y);
   free(y.x.name);
}
</code></pre>

<p>However, listing 25 is correct, because before the end of scope states of the parameters are restored.</p>

<p><strong>Listing 25 - swap function</strong></p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdlib.h&gt;

struct X
{
  char * owner name;
};

void x_destroy(struct X * obj_owner p)
{
  free(p-&gt;name); 
}

void x_swap(struct X * a, struct X * b) {
  struct X temp = *a;
  *a = *b;
  *b = temp;
}
  
int main() {
   struct X x1 = {};
   struct X x2 = {};
  
   x_swap(&amp;x1, &amp;x2);
  
   x_destroy(&amp;x1);
   x_destroy(&amp;x2);
}
</code></pre>

<p><strong>Rule:</strong> When objects are moved to functions, they become uninitialized. This prevents bugs like double free. Listing 26. </p>

<pre><code> int main() {
  void * owner p = malloc(1);
  free(p);
  free(p); //ERROR p is uninitialized
}
</code></pre>

<p><strong>Rule:</strong> moved objects cannot be moved. Listing 27.</p>

<p><strong>Listing 27 - We cannot move a moved or uninitialized object</strong></p>

<pre><code>int * owner p1 = ...;
int * owner p2 = p1;
int * owner p3 = p1; //ERROR p1 was moved
</code></pre>

<pre><code>int * owner f(int * owner p1) {
 int * owner p2 = p1;
 return p1; //ERROR p1 was moved
}
</code></pre>

<p><strong>Rule:</strong> When coping a owner object to to a view object the compiler must check the lifetime. Listing 28</p>

<p><strong>Listing 28 - Lifetime check</strong></p>

<pre><code>void using_file(FILE * f);

struct X { 
  char *owner text; 
};  
  
struct X * owner make_owner();  

int main() {
  struct X *p = 0;  
  {
    struct X * owner p2 = make_owner();  
    p = p2; //error p lives longer than p2  
    free(p2);
  }

  using_file(fopen("file.txt", "r")); //ERROR
}
</code></pre>

<p><strong>Rule:</strong> Returned objects must be valid.</p>

<p><strong>Listing 34 - Assuming returned objects are valid</strong></p>

<pre><code>void* owner malloc(unsigned long size);
void free(void* owner ptr);

struct X { 
  char *owner text; 
};

struct X * owner f();

int main()
{
   struct X * owner pX = f();
   if (pX) {
     static_state(pX-&gt;text, "maybe-null");
   }
}
</code></pre>

<p><strong>Rule:</strong> Arguments must be valid.</p>

<p><strong>Listing 35 - Function Arguments cannot be in a moved or uninitialized state</strong></p>

<pre><code>#include &lt;ownership.h&gt; 
#include &lt;stdlib.h&gt;
struct X { 
  char *owner text; 
};

void f(struct X * p);

int main() {
   struct X x;
   f(&amp;x); //ERROR
     
   struct X x1 = {0};
   struct X x2 = x1; //MOVED
   f(&amp;x1); //ERROR
}
</code></pre>

<p>For this reason, an qualifier <code>out</code> can be added to allow passing unitalicized objects.</p>

<pre><code>void  free(void* _Owner p);
char* _Owner strdup(const char* s);

struct X {
    char* _Owner s;
};

void init(_Out struct X *  px)
{
    static_state(px, "maybe-null");
    static_state(px-&gt;s, "uninitialized");
    px-&gt;s = strdup("a");
}

void set(struct X* px, const char* text)
{
    static_state(px, "maybe-null");
    static_state(px-&gt;s, "maybe-null");
    free(px-&gt;s);
    px-&gt;s = strdup(text);
}

int main() {
    struct X x;
    init(&amp;x);
    set(&amp;x, "b");
    free(x.s);
}
</code></pre>

<h2 id="toc_9">Ownership Feature Strategy (Inspired by stdbool.h)</h2>

<p>If the compiler supports ownership checks and qualifiers such as _Owner, _View, _Obj_view, etc., it must define  <code>__STDC_OWNERSHIP__</code>. </p>

<p>However, even if the compiler implements ownership, it is not active by default. The objective is to have a smooth transition allowing some files without checks. For instance, a thirty part code inside your project.</p>

<p>For instance, when compiling this file, even if the compiler supports ownership we don't have errors or warnings because the checks are not enabled by default.</p>

<pre><code>#include &lt;stdlib.h&gt;

int main() {
  void * p = malloc(1);
}
</code></pre>

<p>A second define <code>__OWNERSHIP_H__</code>, is used to enable ownership.
This define is set when we include <code>&lt;ownership.h&gt;</code> at beginning. </p>

<pre><code>#include &lt;ownership.h&gt;
#include &lt;stdlib.h&gt;

int main() {
  void * p = malloc(1); //error: missing owner qualifier
}
</code></pre>

<p>The other advantage of having a <code>&lt;ownership.h&gt;</code> is because owner is a macro that can be defined as empty in case the compiler does not support ownership, allowing the same code to be compiled in compilers without ownership support. </p>

<blockquote>
<p>Currently cake is using the same headers of VS and GCC that are not aware of ownership. For this reason, <code>ownership.h</code> itself is declaring malloc etc and the second declaration of malloc inside stdlib.h will not complain with the discrepancy of ownership qualifiers between declarations.</p>
</blockquote>
</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I Broke IKEA (2023) (347 pts)]]></title>
            <link>https://cohost.org/sirocyl/post/2891449-i-broke-ikea</link>
            <guid>39436358</guid>
            <pubDate>Mon, 19 Feb 2024 23:59:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://cohost.org/sirocyl/post/2891449-i-broke-ikea">https://cohost.org/sirocyl/post/2891449-i-broke-ikea</a>, See on <a href="https://news.ycombinator.com/item?id=39436358">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-post-body="true" data-testid="post-body"><p>(or, well, one of their delivery services.)<!-- --></p>
<!-- --><p>🔊 Just a fair warning - there are some perhaps annoying glitch sounds in the attached recording. The volumes are normalized to limit loud spikes, as they were <!-- --><em>a lot worse<!-- --></em> in person. 😅<!-- --></p>
<!-- --><p>so, my phone service has a rather clever anti-spam tactic, which works like this:<!-- --></p>
<!-- --><ul>
<!-- --><li>I receive a phone call from an unknown number, and it goes through screening when I answer it. It rings until the fifth ring, the voicemail greeting plays out, then I've got 30 seconds to judge if it's a spam robocall or if it's genuine<!-- --></li>
<!-- --><li>If it's okay, I press 1, and it interrupts the ring/voicemail sequence and I answer the call like usual.<!-- --></li>
<!-- --><li>If it's spam, I press ### (the # key by itself normally opens my PBX menu, so it doesn't go through) and hang up immediately.<!-- --></li>
<!-- --></ul>
<!-- --><p>Pressing ### and hanging up, will shove the call to voicemail, then launch a "DTMF bomb", which is a rapid sequence of over a hundred tones of DTMF keysmash, even including some of the <!-- --><a href="https://en.wikipedia.org/wiki/Dual-tone_multi-frequency_signaling##,_*,_A,_B,_C,_and_D" target="_blank" rel="nofollow noopener">"ABCD" keys.<!-- --></a> This <!-- --><em>has<!-- --></em> blown up spammers' cheapass PBXes, especially ones with poor security and too much trust given to the DTMF decoder on the call server.<!-- --></p>
<!-- --><p>So, when IKEA called from a random 1-877 number to confirm my furniture shipment worth $1200 (that's the equivalent of <!-- --><img src="https://cohost.org/static/9a6014af31fb1ca65a1f.png" alt=":sixty:" title=":sixty:"> blåhaj!), the only thing it said is "To continue in English, please press 1."... <!-- --><em>and I had no idea who it was,<!-- --></em> immediately thought it was spam, and did the ### gesture. <!-- --><em>Oops.<!-- --></em></p>
<!-- --><p>What follows is a transcript of the call in the recording above.<!-- --></p><hr>
<!-- --><blockquote>"To continue in English, please press 1️⃣."<!-- --><br>
<!-- --><em>[<!-- --><strong>extremely<!-- --></strong> rapid DTMF spam string]<!-- --></em><br>
"Your delivery is scheduled for <!-- --><span>Tuesday. Five. <!-- --><abbr title="[A burst of digital static plays out here for about a quarter of a second.]"><span>[A burst of digital static plays out here for about a quarter of a second.]<!-- --></span></abbr> $DeliveryDate<!-- --></span> between the hours of <!-- --><span>2pm and 6pm.<!-- --></span><br>
<!-- --><div><p>If an adult will not be available within the timeframe provided, or you have any other conflicts, please contact us at </p><!-- --><div>
<!-- --><p><span>8<!-- --></span><br><span>8<!-- --></span></p>
<!-- --><p><span>8<!-- --></span><br><span>8<!-- --></span></p>
<!-- --><p><span>8<!-- --></span><br><span>8<!-- --></span></p>
<!-- --><p><span>8<!-- --></span><br><span>8<!-- --></span></p>
<!-- --><p><span>8<!-- --></span><br><span>8<!-- --></span></p>
<!-- --><p><span>8<!-- --></span><br><span>8<!-- --></span></p>
<!-- --><p><span>8<!-- --></span><br><span>8<!-- --></span></p>
<!-- --><p><span>8<!-- --></span><br><span>8<!-- --></span></p>
<!-- --><p><span>8<!-- --></span><br><span>8<!-- --></span></p>
<!-- --><p><span>8<!-- --></span><br><span>8<!-- --></span></p>
<!-- --></div><p>Message repeat. </p><!-- --><p><span><span><span>⚠️<!-- --></span></span></span>. Your delivery is scheduled for-" </p><!-- --><p><abbr title="[total system breakdown occurs here, followed by dead line noise.]"><span>[total system breakdown occurs here... followed by dead line noise.] ............. [blerp] ............. [blerp] ............. [blerp] ............. [blerp]<!-- --></span></abbr></p></div></blockquote>
<!-- --><p>... I should've just bought <!-- --><img src="https://cohost.org/static/9a6014af31fb1ca65a1f.png" alt=":sixty:" title=":sixty:"> blåhaj, instead.<!-- --></p>
<!-- --><p>(Names, businesses, times, dates and phone numbers may be changed or redacted in order to protect the privacy of those involved.)<!-- --></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tiny, tamper-proof ID tag can authenticate almost anything (144 pts)]]></title>
            <link>https://news.mit.edu/2024/tiny-tamper-proof-id-tag-can-authenticate-almost-anything-0218</link>
            <guid>39436252</guid>
            <pubDate>Mon, 19 Feb 2024 23:46:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://news.mit.edu/2024/tiny-tamper-proof-id-tag-can-authenticate-almost-anything-0218">https://news.mit.edu/2024/tiny-tamper-proof-id-tag-can-authenticate-almost-anything-0218</a>, See on <a href="https://news.ycombinator.com/item?id=39436252">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
          

            <p>A few years ago, MIT researchers invented a <a href="https://news.mit.edu/2020/cryptographic-tag-supply-chain-0220" target="_blank">cryptographic ID tag</a> that is several times smaller and significantly cheaper than the traditional radio frequency tags (RFIDs) that are often affixed to products to verify their authenticity.</p>

<p>This tiny tag, which offers improved security over RFIDs, utilizes terahertz waves, which are smaller and have much higher frequencies than radio waves. But this terahertz tag shared a major security vulnerability with traditional RFIDs: A counterfeiter could peel the tag off a genuine item and reattach it to a fake, and the authentication system would be none the wiser.</p>

<p>The researchers have now surmounted this security vulnerability by leveraging terahertz waves to develop an antitampering ID tag that still offers the benefits of being tiny, cheap, and secure.</p>

<p>They mix microscopic metal particles into the glue that sticks the tag to an object, and then use terahertz waves to detect the unique pattern those particles form on the item’s surface. Akin to a fingerprint, this random glue pattern is used to authenticate the item, explains Eunseok Lee, an electrical engineering and computer science (EECS) graduate student and lead author of a paper on the antitampering tag.</p>

<p>“These metal particles are essentially like mirrors for terahertz waves. If I spread a bunch of mirror pieces onto a surface and then shine light on that, depending on the orientation, size, and location of those mirrors, I would get a different reflected pattern. But if you peel the chip off and reattach it, you destroy that pattern,” adds Ruonan Han, an associate professor in EECS, who leads the Terahertz Integrated Electronics Group in the Research Laboratory of Electronics.</p>

<p>The researchers produced a light-powered antitampering tag that is about 4 square millimeters in size. They also demonstrated a machine-learning model that helps detect tampering by identifying similar glue pattern fingerprints with more than 99 percent accuracy.</p>

<p>Because the terahertz tag is so cheap to produce, it could be implemented throughout a massive supply chain. And its tiny size enables the tag to attach to items too small for traditional RFIDs, such as certain medical devices.</p>

<p>The paper, which will be presented at the IEEE Solid State Circuits Conference, is a collaboration between Han’s group and the Energy-Efficient Circuits and Systems Group of Anantha P. Chandrakasan, MIT’s chief innovation and strategy officer, dean of the MIT School of Engineering, and the Vannevar Bush Professor of EECS. Co-authors include EECS graduate students Xibi Chen, Maitryi Ashok, and Jaeyeon Won.</p>

<p><strong>Preventing tampering</strong></p>

<p>This research project was partly inspired by Han’s favorite car wash. The business stuck an RFID tag onto his windshield to authenticate his car wash membership. For added security, the tag was made from fragile paper so it would be destroyed if a less-than-honest customer tried to peel it off and stick it on a different windshield.</p>

<p>But that is not a terribly reliable way to prevent tampering. For instance, someone could use a solution to dissolve the glue and safely remove the fragile tag.</p>

<p>Rather than authenticating the tag, a better security solution is to authenticate the item itself, Han says. To achieve this, the researchers targeted the glue at the interface between the tag and the item’s surface.</p>

<p>Their antitampering tag contains a series of miniscule slots that enable terahertz waves to pass through the tag and strike microscopic metal particles that have been mixed into the glue.</p>

<p>Terahertz waves are small enough to detect the particles, whereas larger radio waves would not have enough sensitivity to see them. Also, using terahertz waves with a 1-millimeter wavelength allowed the researchers to make a chip that does not need a larger, off-chip antenna.</p>

<p>After passing through the tag and striking the object’s surface, terahertz waves are reflected, or backscattered, to a receiver for authentication. How those waves are backscattered depends on the distribution of metal particles that reflect them.</p>

<p>The researchers put multiple slots onto the chip so waves can strike different points on the object’s surface, capturing more information on the random distribution of particles.</p>

<p>“These responses are impossible to duplicate, as long as the glue interface is destroyed by a counterfeiter,” Han says.</p>

<p>A vendor would take an initial reading of the antitampering tag once it was stuck onto an item, and then store those data in the cloud, using them later for verification.</p>

<p><strong>AI for authentication</strong></p>

<p>But when it came time to test the antitampering tag, Lee ran into a problem: It was very difficult and time-consuming to take precise enough measurements to determine whether two glue patterns are a match.</p>

<p>He reached out to a friend in the MIT Computer Science and Artificial Intelligence Laboratory (CSAIL) and together they tackled the problem using AI. They trained a machine-learning model that could compare glue patterns and calculate their similarity with more than 99 percent accuracy.</p>

<p>“One drawback is that we had a limited data sample for this demonstration, but we could improve the neural network in the future if a large number of these tags were deployed in a supply chain, giving us a lot more data samples,” Lee says.</p>

<p>The authentication system is also limited by the fact that terahertz waves suffer from high levels of loss during transmission, so the sensor can only be about 4 centimeters from the tag to get an accurate reading. This distance wouldn’t be an issue for an application like barcode scanning, but it would be too short for some potential uses, such as in an automated highway toll booth. Also, the angle between the sensor and tag needs to be less than 10 degrees or the terahertz signal will degrade too much.</p>

<p>They plan to address these limitations in future work, and hope to inspire other researchers to be more optimistic about what can be accomplished with terahertz waves, despite the many technical challenges, says Han.</p>

<p>“One thing we really want to show here is that the application of the terahertz spectrum can go well beyond broadband wireless. In this case, you can use terahertz for ID, security, and authentication. There are a lot of possibilities out there,” he adds.</p>

<p>This work is supported, in part, by the U.S. National Science Foundation and the Korea Foundation for Advanced Studies.</p>        

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sony's Playstation Portal hacked, can now emulate PSP games (204 pts)]]></title>
            <link>https://overkill.wtf/sony-playstation-portal-hacked-emulate-psp-games/</link>
            <guid>39435458</guid>
            <pubDate>Mon, 19 Feb 2024 22:12:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://overkill.wtf/sony-playstation-portal-hacked-emulate-psp-games/">https://overkill.wtf/sony-playstation-portal-hacked-emulate-psp-games/</a>, See on <a href="https://news.ycombinator.com/item?id=39435458">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<span><span></span></span>
<div>
<div>
<p><span>Feb 19, 2024</span>
<span>•</span>
<span>2 min read</span>
</p>

<p>
The PS5 'Portal' companion device can now do more than just remote play, thanks to a new hack that sees PSP emulation running on the handheld.
</p>

</div>
<div>
<article>
<div>
<p>
The PS5 'Portal' companion device can now do more than just remote play, thanks to a new hack that sees PSP emulation running on the handheld.
</p>
<p>Well, that didn’t take too long. Sony’s remote-play <strong>PlayStation Portal handheld has been hacked</strong> — meaning it can now be used for emulation, <em>perfect for playing back your PSP collection perhaps</em>? </p><p>The $200, <a href="https://overkill.wtf/sony-playstation-portal-project-q/" rel="noreferrer">Android-powered companion device</a> was first launched in November of last year, and since then folks have been curious as to what the device could do beyond its oddly limited PS5 streaming capabilities. </p><figure><img src="https://overkill.wtf/content/images/2024/02/PSPortal_1.jpg" alt="PlayStation Portal" loading="lazy" width="900" height="675" srcset="https://overkill.wtf/content/images/size/w600/2024/02/PSPortal_1.jpg 600w, https://overkill.wtf/content/images/2024/02/PSPortal_1.jpg 900w" sizes="(min-width: 720px) 720px"><figcaption><span>The PlayStation Portal, being used as Sony intended</span></figcaption></figure><p>Long-time PlayStation hacker Andy Nguyen is one of a handful of enthusiasts who has been working hard on efforts to bring popular PSP emulator <a href="https://www.ppsspp.org/?ref=overkill.wtf" rel="noreferrer">PPSSPP</a> to the device — and now, following a month long effort, the PlayStation Portal can do more than just stream whatever is playing on your PS5.</p><figure><img src="https://overkill.wtf/content/images/2024/02/andy-nguyen-playstation-portal-hack.jpg" alt="" loading="lazy" width="796" height="615" srcset="https://overkill.wtf/content/images/size/w600/2024/02/andy-nguyen-playstation-portal-hack.jpg 600w, https://overkill.wtf/content/images/2024/02/andy-nguyen-playstation-portal-hack.jpg 796w" sizes="(min-width: 720px) 720px"><figcaption><span>The PlayStaton Portal running a PSP game via the PPSSPP emulator</span></figcaption></figure><p>Yep, <a href="https://twitter.com/theflow0/status/1759627938910089575?ref=overkill.wtf" rel="noreferrer">according to Nguyen</a> the Portal can now run the PPSSPP emulator, meaning you can theoretically spin up Lumines or some Vice City Stories on the curious handheld. </p><p>Currently the trio behind this hack state that "<em>there's no release planned in the near future</em>" adding that there is still "<em>much more work to be done</em>". Whether we can easily replicate this or not, it’s good to know it's possible all the same.</p><hr><figure><a href="https://overkill.wtf/playstation-portal-personal-perspective-psp-sony/"><div><p>How the surprisingly delightful PlayStation Portal redefined my gaming limits</p><p>Here’s how Sony’s PlayStation Portal remote play handheld delivers a flawless PS5 experience anywhere.</p><p><img src="https://overkill.wtf/content/images/size/w256h256/2022/08/overkill_icon-1.png" alt=""><span>overkill.wtf</span><span>Chelsea Beardsmore</span></p></div><p><img src="https://overkill.wtf/content/images/2023/12/playstation-portal-night-sky.jpg" alt=""></p></a></figure><figure><a href="https://overkill.wtf/android-gaming-handhelds-portables-consoles/"><div><p>The Best Android Gaming Handhelds</p><p>What options do you have when it comes to portable Android gaming? We take a look and share our recommendations for the best Android handhelds.</p><p><img src="https://overkill.wtf/content/images/size/w256h256/2022/08/overkill_icon-1.png" alt=""><span>overkill.wtf</span><span>Ben Kuchera</span></p></div><p><img src="https://overkill.wtf/content/images/2023/05/best-android-gaming-handhelds.jpg" alt=""></p></a></figure><blockquote>Via: <a href="https://liliputing.com/sonys-200-playstation-portal-handheld-game-streaming-device-hacked-to-run-native-code-like-a-psp-emulator/?ref=overkill.wtf" rel="noreferrer">Liliputing</a><br>Source: <a href="https://twitter.com/theflow0/status/1759627938910089575?ref=overkill.wtf" rel="noreferrer">Andy Nguyen on X</a></blockquote>
</div>
</article>

</div>
</div>


</div><div>
<div>
<p>Great! You’ve successfully signed up.</p>
</div>
<div>
<p>Welcome back! You've successfully signed in.</p>
</div>
<div>
<p>You've successfully subscribed to overkill.wtf.</p>
</div>

<div>
<p>Success! Check your email for magic link to sign-in.</p>
</div>
<div>
<p>Success! Your billing info has been updated.</p>
</div>
<div>
<p>Your billing was not updated.</p>
</div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Endgame: A dashboard exploit for the original Xbox (202 pts)]]></title>
            <link>https://github.com/XboxDev/endgame-exploit</link>
            <guid>39435397</guid>
            <pubDate>Mon, 19 Feb 2024 22:05:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/XboxDev/endgame-exploit">https://github.com/XboxDev/endgame-exploit</a>, See on <a href="https://news.ycombinator.com/item?id=39435397">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><h2 tabindex="-1" dir="auto">ENDGAME - A Dashboard Exploit for the Original Xbox</h2>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/9522648/306058578-84c9890a-0d57-4d32-bcd6-d43ff8738ebf.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDgzOTQ3MDYsIm5iZiI6MTcwODM5NDQwNiwicGF0aCI6Ii85NTIyNjQ4LzMwNjA1ODU3OC04NGM5ODkwYS0wZDU3LTRkMzItYmNkNi1kNDNmZjg3MzhlYmYucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDIyMCUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDAyMjBUMDIwMDA2WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MzQxMjQzNWQzYWMxZTllODM0ZTJhYzFiMmI2ZDUyMWFiMzI3ZTE3YjQ2YzJkMGFhY2FmOWFhNjNhNTI4ZWIwNSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.S31GNAVtZaEbk1LoiR_fewf_SIuOB7bN71yRkl4nV2c"><img src="https://private-user-images.githubusercontent.com/9522648/306058578-84c9890a-0d57-4d32-bcd6-d43ff8738ebf.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDgzOTQ3MDYsIm5iZiI6MTcwODM5NDQwNiwicGF0aCI6Ii85NTIyNjQ4LzMwNjA1ODU3OC04NGM5ODkwYS0wZDU3LTRkMzItYmNkNi1kNDNmZjg3MzhlYmYucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDIyMCUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDAyMjBUMDIwMDA2WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MzQxMjQzNWQzYWMxZTllODM0ZTJhYzFiMmI2ZDUyMWFiMzI3ZTE3YjQ2YzJkMGFhY2FmOWFhNjNhNTI4ZWIwNSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.S31GNAVtZaEbk1LoiR_fewf_SIuOB7bN71yRkl4nV2c"></a>
</p>
<h2 tabindex="-1" dir="auto">Overview</h2>
<p dir="auto">ENDGAME is a universal dashboard exploit for the original <a href="https://en.wikipedia.org/wiki/Xbox_(console)" rel="nofollow">Microsoft Xbox</a>. This exploit has been carefully engineered to be compatible across all retail kernel and dashboard versions released for the original Xbox. It does not require a game, or even a working DVD drive -- <em>only a memory card.</em></p>
<p dir="auto">Special credit belongs to <a href="https://twitter.com/shutterbug20002" rel="nofollow">@shutterbug2000</a> for the initial discovery of this vector within the dash and the first to demonstrate code execution against it. With further research, ENDGAME was developed by <a href="https://twitter.com/gaasedelen" rel="nofollow">@gaasedelen</a> leveraging an adjacent vulnerability that offered greater control and facilitated a more ubiquitous exploitation strategy.</p>
<h2 tabindex="-1" dir="auto">Disclaimer</h2>
<p dir="auto"><strong>This project does NOT use any copyrighted code, or help circumvent security mechanisms of an Xbox console.</strong> Upon success, ENDGAME will launch a <a href="http://toogam.bespin.org/xboxmod/site/signxbe.htm" rel="nofollow">habibi</a>-signed XBE from the root of the memory card. It does not patch kernel code or allow you to launch retail-signed executables.</p>
<p dir="auto">By using this software, you accept the risk of experiencing total loss or destruction of data on the console in question.</p>
<h2 tabindex="-1" dir="auto">Building</h2>
<p dir="auto">The exploit files can be generated from scratch using Python 3 + NASM on Windows.</p>
<p dir="auto">Example usage is provided below:</p>

<p dir="auto">Successful output should look something like the following:</p>
<div data-snippet-clipboard-copy-content="[*] Generating ENDGAME v1.0 exploit files -- by Markus Gaasedelen &amp; shutterbug2000
[*] Assembling shellcode... done
[*] Un-swizzling payload... done
[*] Compressing payload... done
[*] Saving helper files... done
[*] Saving trigger files... done
[+] Success, exploit files available in ENDGAME/ directory"><pre><code>[*] Generating ENDGAME v1.0 exploit files -- by Markus Gaasedelen &amp; shutterbug2000
[*] Assembling shellcode... done
[*] Un-swizzling payload... done
[*] Compressing payload... done
[*] Saving helper files... done
[*] Saving trigger files... done
[+] Success, exploit files available in ENDGAME/ directory
</code></pre></div>
<p dir="auto">A pre-built zip of the exploit and sample payload XBE is available on the <a href="https://github.com/XboxDev/endgame-exploit/releases">releases</a> page of this repository.</p>
<h2 tabindex="-1" dir="auto">Usage</h2>
<p dir="auto">Copy the contents of the generated <code>ENDGAME/</code> directory to a Xbox memory card such that the root directory of the memory card has the following structure, where <code>payload.xbe</code> can be any <a href="http://toogam.bespin.org/xboxmod/site/signxbe.htm" rel="nofollow">habibi</a>-signed XBE of your choosing:</p>
<div dir="auto" data-snippet-clipboard-copy-content="/helper/
/trigger/
/payload.xbe"><pre>/helper/
/trigger/
/payload.xbe</pre></div>
<p dir="auto">To trigger the exploit, plug the memory card into a controller and navigate to it while in the dashboard.</p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/9522648/306058651-d4701947-8174-4186-ae27-affd8a7778b8.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDgzOTQ3MDYsIm5iZiI6MTcwODM5NDQwNiwicGF0aCI6Ii85NTIyNjQ4LzMwNjA1ODY1MS1kNDcwMTk0Ny04MTc0LTQxODYtYWUyNy1hZmZkOGE3Nzc4YjguZ2lmP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDIyMCUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDAyMjBUMDIwMDA2WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZDkwNjg0NTM5OTBiNWExZmM4ZWI5NDZlZTU0MjY5NmJmYmVmZDg5ZmJhZjQyODQ4MGFmNzYxNmVlNDM4ZWJjNCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.23tHUdaObYW7Rx0-7o6vH06K8cg047Mmb16EpGo49ak"><img src="https://private-user-images.githubusercontent.com/9522648/306058651-d4701947-8174-4186-ae27-affd8a7778b8.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDgzOTQ3MDYsIm5iZiI6MTcwODM5NDQwNiwicGF0aCI6Ii85NTIyNjQ4LzMwNjA1ODY1MS1kNDcwMTk0Ny04MTc0LTQxODYtYWUyNy1hZmZkOGE3Nzc4YjguZ2lmP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDIyMCUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDAyMjBUMDIwMDA2WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZDkwNjg0NTM5OTBiNWExZmM4ZWI5NDZlZTU0MjY5NmJmYmVmZDg5ZmJhZjQyODQ4MGFmNzYxNmVlNDM4ZWJjNCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.23tHUdaObYW7Rx0-7o6vH06K8cg047Mmb16EpGo49ak" data-animated-image=""></a>
</p>
<p dir="auto">After a few seconds, the system should begin cycling the front LED to green/orange/red to indicate success. This is followed by it launching the <code>payload.xbe</code> placed on the memory card.</p>
<h2 tabindex="-1" dir="auto">FAQ</h2>
<h4 tabindex="-1" dir="auto">Q: Is this a softmod?</h4>
<ul dir="auto">
<li><em>A: No, by itself, ENDGAME is not a softmod. But it will make softmodding significantly more accessible as the community integrates it into existing softmod solutions.</em></li>
</ul>
<h4 tabindex="-1" dir="auto">Q: What is new about this exploit?</h4>
<ul dir="auto">
<li><em>A: This exploit will enable people to softmod any revision of the original Xbox without needing a specific game. It will also allow people to easily launch a homebrew XBE (such as the <a href="https://insignia.live/connect" rel="nofollow">Insignia setup assistant</a>, or content scanning tools) by simply inserting a memory card into an unmodded Xbox.</em></li>
</ul>
<h4 tabindex="-1" dir="auto">Q: I don't have a memory card, can I use something else?</h4>
<ul dir="auto">
<li><em>A: Yes, any FATX-formatted compatible USB device and controller port dongle should work.</em></li>
</ul>
<h4 tabindex="-1" dir="auto">Q: Why am I getting Error 21 after placing my own XBE on the memory card?</h4>
<ul dir="auto">
<li><em>A: Your XBE must be signed using the <a href="http://toogam.bespin.org/xboxmod/site/signxbe.htm" rel="nofollow">habibi</a> key. Several tools can do this, <code>xbedump</code> being the most popular.</em></li>
</ul>
<h4 tabindex="-1" dir="auto">Q: Why does my habibi-signed XBE result in a black screen with ENDGAME but not on a modded xbox?</h4>
<ul dir="auto">
<li><em>A: The most common explanation is that your XBE may be using the Debug/XDK <strong>kernel thunk</strong> &amp; <strong>entry point</strong> <a href="https://xboxdevwiki.net/Xbe" rel="nofollow">XOR keys</a> rather than the retail ones, resulting in a crash.</em></li>
</ul>
<h4 tabindex="-1" dir="auto">Q: I triggered ENDGAME but my system quickly rebooted to the dash rather than my XBE...</h4>
<ul dir="auto">
<li><em>A: While this should be uncommon, it means the exploit probably crashed. It's recommended to navigate straight to the memory card on a cold boot for successful exploitation.</em></li>
</ul>
<h4 tabindex="-1" dir="auto">Q: My XBE requires multiple files and external assets to run, will it work with ENDGAME?</h4>
<ul dir="auto">
<li><em>A: No. Currently, ENDGAME is only structured to copy &amp; execute a standalone XBE.</em></li>
</ul>
<h4 tabindex="-1" dir="auto">Q: How does this exploit work?</h4>
<ul dir="auto">
<li><em>A: The exploit targets an integer overflow in the dashboard's handling of savegame images. When the dash attempts to parse the specially crafted images on the memory card, ENDGAME obtains arbitrary code execution.</em></li>
</ul>
<h2 tabindex="-1" dir="auto">Authors</h2>
<ul dir="auto">
<li>shutterbug (<a href="https://twitter.com/shutterbug20002" rel="nofollow">@shutterbug2000</a>), discovery and initial exploitation efforts</li>
<li>Markus Gaasedelen (<a href="https://twitter.com/gaasedelen" rel="nofollow">@gaasedelen</a>), root-cause-analysis &amp; ENDGAME development</li>
<li>xbox7887 (<a href="https://twitter.com/xbox7887" rel="nofollow">@xbox7887</a>), minor contributions and assistance with testing</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Jeff Dean: Trends in Machine Learning [video] (328 pts)]]></title>
            <link>https://www.youtube.com/watch?v=oSCRZkSQ1CE</link>
            <guid>39435320</guid>
            <pubDate>Mon, 19 Feb 2024 21:56:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/watch?v=oSCRZkSQ1CE">https://www.youtube.com/watch?v=oSCRZkSQ1CE</a>, See on <a href="https://news.ycombinator.com/item?id=39435320">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Star Trek: Borg – Remastered (120 pts)]]></title>
            <link>https://borgremastered.com/</link>
            <guid>39434566</guid>
            <pubDate>Mon, 19 Feb 2024 20:43:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://borgremastered.com/">https://borgremastered.com/</a>, See on <a href="https://news.ycombinator.com/item?id=39434566">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="everything">
		
		<section id="column-2">
			<p><strong>HOLONOVEL COMMANDS</strong> </p>
			
			
			
			
			
		</section>
		<div id="column-3">
				
				<main>

					<!-- Video player here. -->
					

					<div id="borg-vid-container">
						<div id="tricorder-container">
							
							<video id="tricorder-vid-player">
								<source src="" type="video/mp4">
							</video>
							
							<p><img id="tricorder-frame" src="https://borgremastered.com/assets/img/tricorder_frame.png" alt="tricorder">
						</p></div>
						<div id="buffering-container">
							<h2>BUFFERING</h2>
							<p>ODN RELAYS UNDER HEAVY LOAD</p>
						</div>
						<video id="borg-vid-player">
							<source src="" type="video/mp4">
						</video>
						
					</div>
					
					<!-- End video player. -->

					<!-- Scannables here. -->

					

					<!-- End scannables. -->

					<!-- Help screen here -->

					<div id="helpScreen">

						<p id="trailerContainer"><iframe id="trailer" src="https://www.youtube.com/embed/_jBYkjBF8Zw?si=78c5darWZb2quI_f" title="Star Trek: Borg - Remastered trailer" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></p>
						<p>Welcome to 'Star Trek: Borg - Remastered', cadet. Pay attention to this training - it might ensure your survival.</p>
						<div>
							<div>
								<h2>What is 'Star Trek: Borg'?</h2>
								<p><span>'Star Trek: Borg'</span> was a single-player 1996 FMV game developed and published by Simon &amp; Schuster (published by Virgin Interactive in some regions) for PC and Macintosh.</p>
								<p><span>'Star Trek: Borg - Remastered'</span> is a fan project attempting to recreate the game in-browser, using AI to remaster the original game footage to HD quality using a rare Japanese DVD release of the game.</p>
								<h2>How to play</h2>
								<p>You can control the game from this LCARS interface. On desktop and tablet, you'll see the 'Holonovel commands' on a panel to the left. On mobile, you'll see the control buttons above.</p>
								<ul>
									<li><span>START/RESTART PROGRAM:</span> Launches a new game.</li>
									<li><span>HELP/CONTINUE:</span> Hides current game and shows this help screen (and vice-versa).</li>
									<li><span>FREEZE/RESUME PROGRAM:</span> Pauses and unpauses gameplay.</li>
									<li><span>SCAN:</span> Pauses gameplay and allows you to use Q's tricorder to scan in-game items.</li>
									<li><span>CHAPTERS:</span> Allows you to jump between chapters.</li>
									<li><span>SETTINGS:</span> Brings up the settings screen, allowing you to select options such as video quality.</li><br>
									<li><span>CHOICES:</span> When you see the spinning cube <img src="https://borgremastered.com/assets/img/cubeSpin.gif" id="cubeHelp" alt="cube"> in the corner of the video window, it's time to make a choice. Click or tap objects within the video to make your choice. REMEMBER: sometimes, not acting is also a choice.</li><br>
									<li><span>TRICORDER:</span> When using the tricorder, sometimes there will be related entries to read which will give you more information that may be vital to your mission. You can access these by clicking or tapping the buttons to the left of the currently-displayed entry.</li>
								</ul>
								<p><span>PLEASE NOTE:</span> The game will run with the highest video quality by default. If you're playing on mobile data, this will use roughly a megabyte of your data allowance per second. It will also cause choppy playback on slower connections. If you face either of these issues, it is highly recommended you visit SETTINGS first and lower the video quality.<br>
								<span>UPDATE:</span> This project has gained far more attention than I was expecting! As such, the load on my server is higher than expected. My apologies if you encounter frequent pauses to video playback or lag when switching scenes, even if you've lowered the video quality. This is usually caused by many users playing the game simultaneously. I've patched in a "buffering" message which triggers when this occurs.</p>
							</div>
							<div>
								<p><img src="https://borgremastered.com/assets/img/borgBox.jpg" width="505" alt="Original Borg box art"></p><p>The original box art for 'Star Trek: Borg'</p>
								<h2>FAQ:</h2>
								<ul>
									<li><span>IS THIS OFFICIAL?</span> No, not it any way. This is a fan project. Please see the legal disclaimer below for more details.</li>
									<li><span>HOW CAN I CONTACT YOU?</span> Please feel free to comment on the <a href="https://youtu.be/_jBYkjBF8Zw" target="_blank">trailer video on YouTube</a>.</li>
									<li><span>IS THIS LEGAL?</span> That's a grey area. It isn't possible to play the original Borg game on any modern PC or Mac, and it isn't possible to purchase it anywhere any more. Technically, the game is "abandonware". That said, the legal rights holders of Star Trek would be well within their rights to issue me with a C&amp;D order - and should that happen I will, of course, comply and take this site offline. My advice would be to enjoy this while you can, because it might go away.</li>
									<li><span>I FOUND A BUG - CAN YOU FIX IT?</span> Yes, please let me know by commenting on the <a href="https://youtu.be/_jBYkjBF8Zw" target="_blank">trailer</a>. I did this in my spare time and, although I did my best to bugtest, I probably haven't caught everything.</li>
									<li><span>I'M EXPERIENCING A LOT OF LAG/BUFFERING. CAN YOU UPGRADE YOUR SERVER?</span> I'm sorry about that, but I'm afraid not. This is a purely not-for-profit fan project, so I don't have a budget for such things. I'm a freelance web developer, so I have my own dedicated server and that's what I used. But that leads us nicely onto...</li>
									<li><span>DO YOU HAVE A PATREON, GOFUNDME, INDIEGOGO ETC.?</span> It's very kind of you to ask, but no. I have no intention or desire to profit from this project in any way. It's just a personal passion project that I put together for my own entertainment, experimentation and experience.</li>
								</ul>
							</div>
						</div>
					</div>

					<!-- Help screen end -->

					<!-- Settings screen here. -->

					<div id="settingsScreen">
						<p><span>Settings</span>
						</p>
						<h2>Select your video quality</h2>
						<div>
								<p id="descr-1440"><span>1440p</span> - Highest quality. Recommended for 4K+ desktop devices. Uses ~1MB of data per second. Not recommended for mobile data or use on phones.</p>
								<p id="descr-1080"><span>1080p</span> - Good quality. Recommended for desktops, laptops and high-end tablet devices. Uses ~0.5MB of data per second. Not recommended for mobile.</p>
								<p id="descr-720"><span>720p</span> - Medium quality. Recommended for mid-low-range laptops and tablet devices. Uses ~0.2MB of data per second.</p>
								<p id="descr-480"><span>480p</span> - Low quality. Recommended for devices using mobile data on limited contracts. Uses ~0.05MB of data per second.</p>
								<p id="descr-CD"><span>CD-ROM</span> - Nostalgia quality. Recreates the appearance of the original CD-ROM release. Uses ~0.02MB of data per second.</p>
							</div>
						<h2>Toggle fullscreen</h2>
						
						<h2>Toggle cheat mode</h2>
						<div>
							<div>
								
								<p>Turn on cheat mode to display clickable hotspots on screen. Hotspots appear as semi-transparent red rectangles. Be warned, this is ugly as hell and was originally used during development - but some users may find it helpful when stuck.</p>
							</div>
							<p><span>Bonus hint</span> - if you find yourself constantly running out of time with puzzles like the turbolift panel, Borg panel and hypospray, note that you can still click buttons if you freeze the program...</p>
						</div>
					</div>
					
					<!-- End settings screen. -->

					<!-- Settings screen here. -->

					<div id="chapterScreen">
						<h2>Select a chapter to play</h2>
						
					</div>
					
					<!-- End settings screen. -->

					
				</main>
			</div>
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Monitoring latency: Cloudflare Workers vs Fly vs Koyeb vs Railway vs Render (106 pts)]]></title>
            <link>https://www.openstatus.dev/blog/monitoring-latency-cf-workers-fly-koyeb-raylway-render</link>
            <guid>39434271</guid>
            <pubDate>Mon, 19 Feb 2024 20:17:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.openstatus.dev/blog/monitoring-latency-cf-workers-fly-koyeb-raylway-render">https://www.openstatus.dev/blog/monitoring-latency-cf-workers-fly-koyeb-raylway-render</a>, See on <a href="https://news.ycombinator.com/item?id=39434271">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>You want to know which cloud providers offer the lowest latency?</p>
<p>In this post, I compare the latency of
<a href="#cloudflare-workers">Cloudflare Workers</a>, <a href="#flyio">Fly</a>, <a href="#koyeb">Koyeb</a>,
<a href="#railway">Railway</a> and <a href="#render">Render</a> using
<a href="https://www.openstatus.dev/" target="_blank" rel="noopener noreferrer">OpenStatus</a>.</p>
<p>I deployed the application on the cheapest or free tier offered by each
provider.</p>
<p>For this test, I used a basic <a href="https://hono.dev/" target="_blank" rel="noopener noreferrer">Hono</a> server that returns a
simple text response.</p>
<div data-rehype-pretty-code-fragment=""><pre tabindex="0" data-language="js" data-theme="default"><code data-language="js" data-theme="default"><span data-line=""><span>const</span><span> </span><span>app</span><span> </span><span>=</span><span> </span><span>new</span><span> </span><span>Hono</span><span>();</span></span>
<span data-line=""><span>app.</span><span>use</span><span>(</span><span>"*"</span><span>, </span><span>logger</span><span>());</span></span>
<span data-line=""> </span>
<span data-line=""><span>app.</span><span>use</span><span>(</span><span>"*"</span><span>, </span><span>poweredBy</span><span>());</span></span>
<span data-line=""> </span>
<span data-line=""><span>app.</span><span>get</span><span>(</span><span>"/"</span><span>, (</span><span>c</span><span>) </span><span>=&gt;</span><span> {</span></span>
<span data-line=""><span>  </span><span>return</span><span> c.</span><span>text</span><span>(</span></span>
<span data-line=""><span>    </span><span>"Just return the desired http status code, e.g. /404 🤯 </span><span>\n</span><span>https://www.openstatus.dev"</span><span>,</span></span>
<span data-line=""><span>  );</span></span>
<span data-line=""><span>});</span></span></code></pre></div>
<p>You can find the code <a href="https://github.com/openstatusHQ/status-code" target="_blank" rel="noopener noreferrer">here</a>, it’s
open source 😉.</p>
<p>OpenStatus monitored our endpoint every <strong>10 minutes</strong> from <strong>6 locations</strong>
located in Amsterdam, Ashburn, Hong Kong, Johannesburg, Sao Paulo and Sydney.</p>
<p>It's a good way to test our own product and improve it.</p>
<p>Let's analyze the data from the past two weeks.</p>
<h2 id="cloudflare-workers">Cloudflare workers</h2>
<p>Cloudflare Workers is a serverless platform by Cloudflare. It lets you build new
applications using JavaScript/Typescript. You can deploy up to 100 worker
scripts for free, running on more than 275 network locations.</p>
<h3 id="latency-metrics">Latency metrics</h3>


<h3 id="timing-metrics">Timing metrics</h3>
<div><table><thead><tr><th>Region</th><th>DNS (ms)</th><th>Connection (ms)</th><th>TLS Handshake (ms)</th><th>TTFB (ms)</th><th>Transfert (ms)</th></tr></thead><tbody><tr><td>AMS</td><td>17</td><td>2</td><td>17</td><td>27</td><td>0</td></tr><tr><td>GRU</td><td>38</td><td>2</td><td>13</td><td>28</td><td>0</td></tr><tr><td>HKG</td><td>19</td><td>2</td><td>13</td><td>29</td><td>0</td></tr><tr><td>IAD</td><td>24</td><td>1</td><td>14</td><td>30</td><td>0</td></tr><tr><td>JNB</td><td>123</td><td>168</td><td>182</td><td>185</td><td>0</td></tr><tr><td>SYD</td><td>51</td><td>1</td><td>11</td><td>25</td><td>0</td></tr></tbody></table></div>
<p>I can notice that Johannesburg's latency is about ten times higher than that of
the other monitors.</p>

<p>From the Cloudflare request I can get the location of the workers that handle
the request, with <code>Cf-ray</code> in the headers response.</p>
<div><table><thead><tr><th>Checker region</th><th>Workers region</th><th>number of request</th></tr></thead><tbody><tr><td>HKG</td><td>HKG</td><td>1831</td></tr><tr><td>SYD</td><td>SYD</td><td>1831</td></tr><tr><td>AMS</td><td>AMS</td><td>1831</td></tr><tr><td>IAD</td><td>IAD</td><td>1831</td></tr><tr><td>GRU</td><td>GRU</td><td>1791</td></tr><tr><td>GRU</td><td>GIG</td><td>40</td></tr><tr><td>JNB</td><td>AMS</td><td>741</td></tr><tr><td>JNB</td><td>MUC</td><td>4</td></tr><tr><td>JNB</td><td>HKG</td><td>5</td></tr><tr><td>JNB</td><td>SIN</td><td>6</td></tr><tr><td>JNB</td><td>NRT</td><td>8</td></tr><tr><td>JNB</td><td>EWR</td><td>10</td></tr><tr><td>JNB</td><td>CDG</td><td>82</td></tr><tr><td>JNB</td><td>FRA</td><td>276</td></tr><tr><td>JNB</td><td>LHR</td><td>699</td></tr><tr><td>JNB</td><td>AMS</td><td>741</td></tr></tbody></table></div>
<p>I can see all the request from JNB is never routed to a nearby data-center.</p>
<p>Apart from the strange routing error in Johannesburg, Cloudflare workers are
fast worldwide.</p>
<p>I have not experienced any cold start issues.</p>
<h2 id="flyio">Fly.io</h2>
<p>Fly.io simplifies deploying and running server-side applications globally.
Developers can deploy their applications near users worldwide for low latency
and high performance. It uses a lightweight Firecracker VM to easily deploy
Docker images.</p>
<h3 id="latency-metrics-1">Latency metrics</h3>


<h3 id="timing-metrics-1">Timing metrics</h3>
<div><table><thead><tr><th>Region</th><th>DNS (ms)</th><th>Connection (ms)</th><th>TLS Handshake (ms)</th><th>TTFB (ms)</th><th>Transfert (ms)</th></tr></thead><tbody><tr><td>AMS</td><td>6</td><td>1</td><td>8</td><td>1469</td><td>0</td></tr><tr><td>GRU</td><td>5</td><td>0</td><td>4</td><td>1431</td><td>0</td></tr><tr><td>HKG</td><td>4</td><td>0</td><td>5</td><td>1473</td><td>0</td></tr><tr><td>IAD</td><td>3</td><td>0</td><td>5</td><td>1470</td><td>0</td></tr><tr><td>JNB</td><td>24</td><td>0</td><td>5</td><td>1423</td><td>0</td></tr><tr><td>SYD</td><td>3</td><td>0</td><td>3</td><td>1489</td><td>0</td></tr></tbody></table></div>
<p>The DNS is fast, our checker is attempting to connect to a region in the same
data center, but our machine's cold start is slowing us down, leading to the
high TTFB.</p>
<p>Here’s our config for Fly.io:</p>
<div data-rehype-pretty-code-fragment=""><pre tabindex="0" data-language="toml" data-theme="default"><code data-language="toml" data-theme="default"><span data-line=""><span>app = </span><span>'statuscode'</span></span>
<span data-line=""><span>primary_region = </span><span>'ams'</span></span>
<span data-line=""> </span>
<span data-line=""><span>[</span><span>build</span><span>]</span></span>
<span data-line=""><span>  dockerfile = </span><span>"./Dockerfile"</span></span>
<span data-line=""> </span>
<span data-line=""><span>[</span><span>http_service</span><span>]</span></span>
<span data-line=""><span>  internal_port = </span><span>3000</span></span>
<span data-line=""><span>  force_https = </span><span>true</span></span>
<span data-line=""><span>  auto_stop_machines = </span><span>true</span></span>
<span data-line=""><span>  auto_start_machines = </span><span>true</span></span>
<span data-line=""><span>  min_machines_running = </span><span>0</span></span>
<span data-line=""><span>  processes = [</span><span>'app'</span><span>]</span></span>
<span data-line=""> </span>
<span data-line=""><span>[[</span><span>vm</span><span>]]</span></span>
<span data-line=""><span>  cpu_kind = </span><span>'shared'</span></span>
<span data-line=""><span>  cpus = </span><span>1</span></span>
<span data-line=""><span>  memory_mb = </span><span>256</span></span></code></pre></div>
<p>The primary region of our server is Amsterdam, and the fly instances is getting
paused after a period of inactivity.</p>
<p>The machine starts slowly, as indicated by the logs showing a start time of
<code>1.513643778s.</code></p>
<pre><code>2024-02-14T11:24:16.107 proxy[286560ea703108] ams [info] Starting machine

2024-02-14T11:24:16.322 app[286560ea703108] ams [info] [ 0.035736] PCI: Fatal: No config space access function found

2024-02-14T11:24:16.533 app[286560ea703108] ams [info] INFO Starting init (commit: bfa79be)...

2024-02-14T11:24:16.546 app[286560ea703108] ams [info] INFO Preparing to run: `/usr/local/bin/docker-entrypoint.sh bun start` as root

2024-02-14T11:24:16.558 app[286560ea703108] ams [info] INFO [fly api proxy] listening at /.fly/api

2024-02-14T11:24:16.565 app[286560ea703108] ams [info] 2024/02/14 11:24:16 listening on [fdaa:3:2ef:a7b:10c:3c9a:5b4:2]:22 (DNS: [fdaa::3]:53)

2024-02-14T11:24:16.611 app[286560ea703108] ams [info] $ bun src/index.ts

2024-02-14T11:24:16.618 runner[286560ea703108] ams [info] Machine started in 460ms

2024-02-14T11:24:17.621 proxy[286560ea703108] ams [info] machine started in 1.513643778s

2024-02-14T11:24:17.628 proxy[286560ea703108] ams [info] machine became reachable in 7.03669ms
</code></pre>
<h4 id="openstatus-prod-metrics">OpenStatus Prod metrics</h4>
<p>If you update your fly.toml file to include the following, you can get the zero
cold start and achieve a better latency.</p>
<pre><code>  min_machines_running = 1
</code></pre>
<p>This is our data for our production server deploy on Fly.io.</p>

<blockquote>
<p>We use Fly.io in production, and the machine never sleeps, yielding much
better results.</p>
</blockquote>
<h2 id="koyeb">Koyeb</h2>
<p>Koyeb is a developer-friendly serverless platform that allows for global app
deployment without the need for operations, servers, or infrastructure
management. Koyeb offers a free Starter plan that includes one Web Service, one
Database service. The platform focuses on ease of deployment and scalability for
developers</p>
<h3 id="latency-metrics-2">Latency metrics</h3>


<h3 id="timing-metrics-2">Timing metrics</h3>
<div><table><thead><tr><th>Region</th><th>DNS (ms)</th><th>Connection (ms)</th><th>TLS Handshake (ms)</th><th>TTFB (ms)</th><th>Transfert (ms)</th></tr></thead><tbody><tr><td>AMS</td><td>50</td><td>2</td><td>17</td><td>107</td><td>0</td></tr><tr><td>GRU</td><td>139</td><td>65</td><td>75</td><td>407</td><td>0</td></tr><tr><td>HKG</td><td>48</td><td>2</td><td>13</td><td>321</td><td>0</td></tr><tr><td>IAD</td><td>35</td><td>1</td><td>12</td><td>129</td><td>0</td></tr><tr><td>JNB</td><td>298</td><td>1</td><td>11</td><td>720</td><td>0</td></tr><tr><td>SYD</td><td>97</td><td>1</td><td>10</td><td>711</td><td>0</td></tr></tbody></table></div>

<p>The request headers show that none of our requests are cached. They contain
<code>cf-cache-status: dynamic</code>. Cloudflare handles the Koyeb edge layer.
<a href="https://www.koyeb.com/blog/building-a-multi-region-service-mesh-with-kuma-envoy-anycast-bgp-and-mtls" target="_blank" rel="noopener noreferrer">https://www.koyeb.com/blog/building-a-multi-region-service-mesh-with-kuma-envoy-anycast-bgp-and-mtls</a></p>
<p>Our requests follow this route:</p>
<pre><code>Cf workers -&gt; koyeb Global load balancer -&gt; koyeb backend
</code></pre>
<p>Let’s see where did we hit the cf workers</p>
<div><table><thead><tr><th>Checker region</th><th>Workers region</th><th>number of request</th></tr></thead><tbody><tr><td>AMS</td><td>AMS</td><td>1866</td></tr><tr><td>GRU</td><td>GRU</td><td>504</td></tr><tr><td>GRU</td><td>IAD</td><td>38</td></tr><tr><td>GRU</td><td>MIA</td><td>688</td></tr><tr><td>GRU</td><td>EWR</td><td>337</td></tr><tr><td>GRU</td><td>CIG</td><td>299</td></tr><tr><td>HKG</td><td>HKG</td><td>1866</td></tr><tr><td>IAD</td><td>IAD</td><td>1866</td></tr><tr><td>JNB</td><td>JNB</td><td>1861</td></tr><tr><td>JNB</td><td>AMS</td><td>1</td></tr><tr><td>SYD</td><td>SYD</td><td>1866</td></tr></tbody></table></div>
<p>Koyeb Global Load Balancer region we hit:</p>
<div><table><thead><tr><th>Checker region</th><th>Koyeb Global Load Balancer</th><th>number of request</th></tr></thead><tbody><tr><td>AMS</td><td>FRA1</td><td>1866</td></tr><tr><td>GRU</td><td>WAS1</td><td>1866</td></tr><tr><td>HKG</td><td>SIN1</td><td>1866</td></tr><tr><td>IAD</td><td>WAS1</td><td>1866</td></tr><tr><td>JNB</td><td>PAR1</td><td>4</td></tr><tr><td>JNB</td><td>SIN1</td><td>1864</td></tr><tr><td>JNB</td><td>FRA1</td><td>1</td></tr><tr><td>JNB</td><td>SIN1</td><td>1866</td></tr></tbody></table></div>
<p>I have deployed our app in the Frankfurt data-center.</p>
<h2 id="railway">Railway</h2>
<p>Railway is a cloud platform designed for building, shipping, and monitoring
applications without the need for Platform Engineers. It simplifies the
application development process by offering seamless deployment and monitoring
capabilities.</p>
<h3 id="latency-metrics-3">Latency metrics</h3>


<h3 id="timing-metrics-3">Timing metrics</h3>
<div><table><thead><tr><th>Region</th><th>DNS (ms)</th><th>Connection (ms)</th><th>TLS Handshake (ms)</th><th>TTFB (ms)</th><th>Transfert (ms)</th></tr></thead><tbody><tr><td>AMS</td><td>9</td><td>21</td><td>18</td><td>158</td><td>0</td></tr><tr><td>GRU</td><td>14</td><td>115</td><td>127</td><td>178</td><td>0</td></tr><tr><td>HKG</td><td>8</td><td>45</td><td>54</td><td>225</td><td>0</td></tr><tr><td>IAD</td><td>7</td><td>2</td><td>14</td><td>65</td><td>0</td></tr><tr><td>JNB</td><td>18</td><td>193</td><td>178</td><td>319</td><td>0</td></tr><tr><td>SYD</td><td>21</td><td>108</td><td>105</td><td>280</td><td>0</td></tr></tbody></table></div>

<p>The headers don't provide any information.</p>
<p>Railway is using Google Cloud Platform. It’s the only service that does not
allow us to pick a specific region on the free plan. Our test app will be
located to <code>us-west1</code> Portland, Oregon. We can see that the latency is the
lowest in IAD.</p>
<p>By default our app did not scale down to 0. It was always running. We don't have
any cold start.</p>
<h2 id="render">Render</h2>
<p>Render is a platform that simplifies deploying and scaling web applications and
services. It offers features like automated SSL, automatic scaling, native
support for popular frameworks, and one-click deployments from Git. The platform
focuses on simplicity and developer productivity.</p>
<h3 id="latency-metrics-4">Latency metrics</h3>


<h3 id="timing-metrics-4">Timing metrics</h3>
<div><table><thead><tr><th>Region</th><th>DNS (ms)</th><th>Connection (ms)</th><th>TLS Handshake (ms)</th><th>TTFB (ms)</th><th>Transfert (ms)</th></tr></thead><tbody><tr><td>AMS</td><td>20</td><td>2</td><td>7</td><td>107</td><td>0</td></tr><tr><td>GRU</td><td>61</td><td>2</td><td>6</td><td>407</td><td>0</td></tr><tr><td>HKG</td><td>76</td><td>2</td><td>6</td><td>321</td><td>0</td></tr><tr><td>IAD</td><td>15</td><td>1</td><td>5</td><td>129</td><td>0</td></tr><tr><td>JNB</td><td>36</td><td>161</td><td>167</td><td>720</td><td>0</td></tr><tr><td>SYD</td><td>103</td><td>1</td><td>4</td><td>711</td><td>0</td></tr></tbody></table></div>

<p>The headers don't provide any information.</p>
<p>I have deployed our app in the Frankfurt data-center.</p>
<p>According to the Render docs, the free tier will shut down the service after 15
minutes of inactivity. However, our app is being accessed by a monitor every 10
minutes. We should never scale down to 0.</p>
<pre><code>Render spins down a Free web service that goes 15 minutes without receiving inbound traffic. Render spins the service back up whenever it next receives a request to process.
</code></pre>
<p>I think the failures are due to the cold start of our app. We have a default
timeout of 30s and the render app takes up to 50s to start.We might have hit an
inflection point between cold and warm.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Here are the results of our test:</p>
<div><table><thead><tr><th>Provider</th><th>Uptime</th><th>Fails Ping</th><th>Total Pings</th><th>AVG latency (ms)</th><th>P75 (ms)</th><th>P90 (ms)</th><th>P95 (ms)</th><th>P99 (ms)</th></tr></thead><tbody><tr><td>CF Workers</td><td>100</td><td>0</td><td>10,956</td><td>182</td><td>138</td><td>690</td><td>778</td><td>991</td></tr><tr><td>Fly.io</td><td>100</td><td>0</td><td>10,952</td><td>1,471</td><td>1,514</td><td>1,555</td><td>1,626</td><td>2,547</td></tr><tr><td>Koyeb</td><td>100</td><td>0</td><td>10,955</td><td>536</td><td>738</td><td>881</td><td>1,013</td><td>1,525</td></tr><tr><td>Railway</td><td>99.991</td><td>1</td><td>10,955</td><td>381</td><td>469</td><td>653</td><td>661</td><td>850</td></tr><tr><td>Render</td><td>99.89</td><td>12</td><td>10,946</td><td>451</td><td>447</td><td>591</td><td>707</td><td>902</td></tr></tbody></table></div>
<p>If you value low latency, Cloudflare Workers are the best option for fast global
performance without cold start issues. They deploy your app worldwide
efficiently.</p>
<p>For multi-region deployment, check out Koyeb and Fly.io.</p>
<p>For specific region deployment, Railway and Render are good choices.</p>
<p>Choosing a cloud provider involves considering not just latency but also user
experience and pricing.</p>
<p>We use Fly.io in production and are satisfied with it.</p>
<h4 id="vercel-coming-soon">Vercel (coming soon)</h4>
<p>I haven't included Vercel in this test. But I am currently running a test to
compare the latency of Vercel Edge, Vercel Serverless. Results will be published
soon.</p>
<p>If you want to monitor your API or website, create an account on
<a href="https://www.openstatus.dev/app/sign-up?ref=blog-monitoring" target="_blank" rel="noopener noreferrer">OpenStatus</a>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FTC proposes new protections to combat AI impersonation of individuals (145 pts)]]></title>
            <link>https://www.ftc.gov/news-events/news/press-releases/2024/02/ftc-proposes-new-protections-combat-ai-impersonation-individuals</link>
            <guid>39433674</guid>
            <pubDate>Mon, 19 Feb 2024 19:31:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ftc.gov/news-events/news/press-releases/2024/02/ftc-proposes-new-protections-combat-ai-impersonation-individuals">https://www.ftc.gov/news-events/news/press-releases/2024/02/ftc-proposes-new-protections-combat-ai-impersonation-individuals</a>, See on <a href="https://news.ycombinator.com/item?id=39433674">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>The Federal Trade Commission is seeking public comment on a <a href="https://www.ftc.gov/system/files/ftc_gov/pdf/r207000_impersonation_snprm.pdf">supplemental notice of proposed rulemaking</a> that would prohibit the impersonation of individuals. The proposed rule changes would extend protections of the new <a href="https://www.ftc.gov/system/files/ftc_gov/pdf/r207000_govt_biz_impersonation_rule.pdf">rule on government and business impersonation</a> that is being finalized by the Commission today.</p><p>The agency is taking this action in light of <a href="https://www.ftc.gov/news-events/news/press-releases/2024/02/nationwide-fraud-losses-top-10-billion-2023-ftc-steps-efforts-protect-public">surging complaints</a> around impersonation fraud, as well as public outcry about the harms caused to consumers and to impersonated individuals. Emerging technology – including AI-generated deepfakes – threatens to turbocharge this scourge, and the FTC is committed to using all of its tools to detect, deter, and halt impersonation fraud.</p><p>The Commission is also seeking comment on whether the revised rule should declare it unlawful for a firm, such as an AI platform that creates images, video, or text, to provide goods or services that they know or have reason to know is being used to harm consumers through impersonation.</p><p>“Fraudsters are using AI tools to impersonate individuals with eerie precision and at a much wider scale. With voice cloning and other AI-driven scams on the rise, protecting Americans from impersonator fraud is more critical than ever,” said FTC Chair Lina M. Khan. “Our proposed expansions to the final impersonation rule would do just that, strengthening the FTC’s toolkit to address AI-enabled scams impersonating individuals.”</p><p>The supplemental notice of proposed rulemaking is being issued in response to comments received during the public comment period on the government and business impersonation rule that pointed to the additional threats and harms posed by impersonation of individuals. As scammers find new ways to defraud consumers, including through AI-generated deepfakes, this proposal will help the agency deter fraud and secure redress for harmed consumers.</p><p><strong>Final Rule on Government and Business Impersonation</strong></p><p>In addition to the supplemental notice, the FTC has finalized the Government and Business Impersonation Rule, which gives the agency stronger tools to combat scammers who impersonate businesses or government agencies, enabling the FTC to directly file federal court cases aimed at forcing scammers to return the money they made from government or business impersonation scams. This is particularly important given the Supreme Court’s <a href="https://www.supremecourt.gov/opinions/20pdf/19-508_l6gn.pdf">April 2021 ruling in AMG Capital Management LLC v. FTC</a>, which significantly limited the agency’s ability to require defendants to return money to injured consumers.</p><p>Government and business impersonation scams have cost consumers billions of dollars in recent years, and both categories saw significant increases in reports to the FTC in 2023. The rule authorizes the agency to fight these scams more effectively.</p><p>For example, the rule would enable the FTC to directly seek monetary relief in federal court from scammers that:</p><ul><li><strong>Use government seals or business logos</strong>&nbsp;when communicating with consumers by mail or online.</li><li><strong>Spoof government and business emails and web addresses</strong>, including spoofing “.gov” email addresses or using lookalike email addresses or websites that rely on misspellings of a company’s name.</li><li><strong>Falsely imply government or business affiliation</strong>&nbsp;by using terms that are known to be affiliated with a government agency or business (e.g., stating “I’m calling from the Clerk’s Office” to falsely imply affiliation with a court of law).&nbsp;<strong>&nbsp;</strong></li></ul><p>The publication of the final rule comes after the two rounds of public comment in response to an advance notice of proposed rulemaking issued in December 2021, a notice of proposed rulemaking issued in September 2022, and an informal hearing in May 2023.</p><p>The Commission vote to issue the final rule and the supplemental notice of proposed rulemaking and to publish them in the Federal Register was 3-0. Chair Lina M. Khan issued a <a href="https://www.ftc.gov/legal-library/browse/cases-proceedings/public-statements/statement-chair-khan-joined-commissioners-slaughter-bedoya-regarding-final-trade-regulation-rule" data-entity-type="node" data-entity-uuid="509d98e1-771d-47f3-80b6-77b50e8129b5" data-entity-substitution="canonical">separate statement</a><strong> </strong>that was joined by Commissioners Rebecca Kelly Slaughter and Alvaro M. Bedoya.</p><p>Both items will appear in the Federal Register shortly. The final rule on government and business impersonation will become effective 30 days from the date it is published in the Federal Register. The public comment period for the SNPRM will be open for 60 days following the date it is published in the Federal Register, and instructions for how to comment will be included in the notice.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How Google is killing independent sites like ours (627 pts)]]></title>
            <link>https://housefresh.com/david-vs-digital-goliaths/</link>
            <guid>39433451</guid>
            <pubDate>Mon, 19 Feb 2024 19:09:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://housefresh.com/david-vs-digital-goliaths/">https://housefresh.com/david-vs-digital-goliaths/</a>, See on <a href="https://news.ycombinator.com/item?id=39433451">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>Google regularly launches updates to its algorithm to continuously improve search results quality. Think of these updates as a refresh of the system where rankings change: some websites see an improvement while others see a decline.</p>



<p>At HouseFresh, we keep an eye on Google’s news and documentation because these updates can literally make or break our website. That said, we don’t write for Google’s robots and always make editorial decisions with our readers in mind. </p>



<p>We know that at the end of the day, Google will reward us if our readers find our articles <a href="https://x.com/bettylo52207153/status/1746783622386892996?s=46" target="_blank">useful</a>.</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/Helpful-content-HouseFresh.jpg"><img loading="lazy" decoding="async" width="1024" height="576" src="https://housefresh.com/wp-content/uploads/2024/02/Helpful-content-HouseFresh-1024x576.jpg" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/Helpful-content-HouseFresh-1024x576.jpg 1024w, https://housefresh.com/wp-content/uploads/2024/02/Helpful-content-HouseFresh-300x169.jpg 300w, https://housefresh.com/wp-content/uploads/2024/02/Helpful-content-HouseFresh-768x432.jpg 768w, https://housefresh.com/wp-content/uploads/2024/02/Helpful-content-HouseFresh-1536x864.jpg 1536w, https://housefresh.com/wp-content/uploads/2024/02/Helpful-content-HouseFresh-2048x1152.jpg 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>Or that’s what we thought.</p>



<p>You might have noticed that no matter what you google, there’s always a selection of the same publishers showing up at the top of the results:</p>





<p>What do BuzzFeed, Rolling Stone, Forbes, Popular Science, and Better Homes &amp; Gardens have in common?&nbsp;</p>



<p>They all know which are the best air purifiers for pet hair:</p>


<div>
<figure><img loading="lazy" decoding="async" width="2882" height="4773" src="https://housefresh.com/wp-content/uploads/2024/02/best-air-purifier-results.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/best-air-purifier-results.png 2882w, https://housefresh.com/wp-content/uploads/2024/02/best-air-purifier-results-181x300.png 181w, https://housefresh.com/wp-content/uploads/2024/02/best-air-purifier-results-618x1024.png 618w, https://housefresh.com/wp-content/uploads/2024/02/best-air-purifier-results-768x1272.png 768w, https://housefresh.com/wp-content/uploads/2024/02/best-air-purifier-results-927x1536.png 927w, https://housefresh.com/wp-content/uploads/2024/02/best-air-purifier-results-1237x2048.png 1237w" sizes="(max-width: 2882px) 100vw, 2882px"></figure></div>






<p>Another thing they’ve got in common is that they all also seem to know the best cooling sheets for hot sleepers:<br></p>






<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/best-cooling-sheets.jpg"><img loading="lazy" decoding="async" width="1024" height="576" src="https://housefresh.com/wp-content/uploads/2024/02/best-cooling-sheets-1024x576.jpg" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/best-cooling-sheets-1024x576.jpg 1024w, https://housefresh.com/wp-content/uploads/2024/02/best-cooling-sheets-300x169.jpg 300w, https://housefresh.com/wp-content/uploads/2024/02/best-cooling-sheets-768x432.jpg 768w, https://housefresh.com/wp-content/uploads/2024/02/best-cooling-sheets-1536x864.jpg 1536w, https://housefresh.com/wp-content/uploads/2024/02/best-cooling-sheets-2048x1152.jpg 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>You could play this game yourself. Other searches you could try are: best gifts for mom, best home saunas, best beard products, best gifts for teens, best cocktail kits… the list goes on.</p>



<p>The problem is, for the most part, these publishers recommend products without firsthand testing and simply paraphrase marketing materials and Amazon listing information.</p>



<p>In the last year, we have waited patiently for the many, many, <a href="https://searchengineland.com/library/platforms/google/google-algorithm-updates" target="_blank" rel="noopener">MANY Google algorithm updates</a> to impact these results.&nbsp;</p>



<p>We were hopeful when Google introduced its reviews system with the Products Review Update <a href="https://developers.google.com/search/blog/2021/04/product-reviews-update" target="_blank" rel="noopener">back in 2021</a>. It seemed they were finally doing something about one of the worst aspects of the modern internet: searching for information about products only to have to wade through countless reviews from people who had never even seen the thing.</p>



<p>Two years later, SEO professional Lily Ray <a href="https://twitter.com/lilyraynyc/status/1683589911063015424" target="_blank" rel="noopener">mentioned</a> that (big media) publishers were hit hard by Google’s Product Review updates, prompting a response from Google itself:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/publishers-dont-want-to-test.png"><img loading="lazy" decoding="async" width="821" height="910" src="https://housefresh.com/wp-content/uploads/2024/02/publishers-dont-want-to-test.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/publishers-dont-want-to-test.png 821w, https://housefresh.com/wp-content/uploads/2024/02/publishers-dont-want-to-test-271x300.png 271w, https://housefresh.com/wp-content/uploads/2024/02/publishers-dont-want-to-test-768x851.png 768w" sizes="(max-width: 821px) 100vw, 821px"></a></figure></div>






<p>In our experience, each rollout of the Products Review Update has shaken things up, generally benefitting sites and writers who actually dedicated time, effort, and money to test products <em>before</em> they would recommend them to the world.</p>



<p>That said, most searches for specific product models don’t just magically start with users searching for specific devices off the top of their heads. There is an immediate step before this: the hours of research reading through lists of product recommendations.</p>



<p>If you have been reading HouseFresh for a while, your first encounter with us was likely a list like <a href="https://housefresh.com/car-air-purifiers/">this one</a> or <a href="https://housefresh.com/air-purifiers-for-cooking-odors/">this one</a> recommending the best devices for a specific issue you were trying to solve. That is how most of our readers find us.</p>



<p>Unfortunately, we’re getting less and less traffic from those pages, and it’s endangering the future of our site.&nbsp;</p>



<p>That’s why we’re writing this article.</p>















<h2><span id="lwptoc1"><strong>Big media publishers are inundating the web with subpar product recommendations you can’t trust</strong></span></h2>



<h3><span id="lwptoc2"><strong>Uncovering the cookie-cutter system well-known magazines and newspapers use to trick Google&nbsp;</strong></span></h3>



<p>Savvy <a href="https://developers.google.com/search/docs/fundamentals/do-i-need-seo" target="_blank" rel="noopener">SEOs</a> at big media publishers (<a href="https://futurism.com/sports-illustrated-ai-generated-writers" target="_blank" rel="noopener">or third-party vendors hired by them</a>) realized that they could create pages for ‘best of’ product recommendations without the need to invest any time or effort in actually testing and reviewing the products first.</p>



<p><strong>All they had to do was say what they needed to say to pass </strong><a href="https://www.searchenginejournal.com/how-google-manual-reviews/356464/" target="_blank" rel="noopener"><strong>a manual check</strong></a><strong> if it came to that.&nbsp;</strong></p>



<p>So, they peppered their pages with references to a ‘rigorous testing process,’ their ‘lab team,’ subject matter experts ‘they collaborated with,’ and complicated methodologies that seem impressive at a cursory look.&nbsp;</p>



<p>Sometimes, they even added photos of ‘tests’ with products covered in Post-it notes, someone holding a tape measure, and people with very ‘scientific’ clipboards.&nbsp;</p>



<p>There’s nothing wrong with wanting to show you’re doing the thing you’re supposed to be doing, but what happens when that’s as far as you go?</p>



<p>Let’s look at one example.&nbsp;</p>



<p>These are the current top 10 results on Google.com for a query we have completely given up on — <strong>Best Air Purifier for Pets</strong>:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/best-air-purifiers-for-pets-top10.png"><img loading="lazy" decoding="async" width="1024" height="790" src="https://housefresh.com/wp-content/uploads/2024/02/best-air-purifiers-for-pets-top10-1024x790.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/best-air-purifiers-for-pets-top10-1024x790.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/best-air-purifiers-for-pets-top10-300x231.png 300w, https://housefresh.com/wp-content/uploads/2024/02/best-air-purifiers-for-pets-top10-768x593.png 768w, https://housefresh.com/wp-content/uploads/2024/02/best-air-purifiers-for-pets-top10.png 1418w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>Right now, the magazine Better Homes &amp; Gardens is ranking at the top of the first page of results.</p>



<p>At a glance, the article shows all the right things:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/bhg-best-list-bs-EEAT-signals.png"><img loading="lazy" decoding="async" width="874" height="1024" src="https://housefresh.com/wp-content/uploads/2024/02/bhg-best-list-bs-EEAT-signals-874x1024.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/bhg-best-list-bs-EEAT-signals-874x1024.png 874w, https://housefresh.com/wp-content/uploads/2024/02/bhg-best-list-bs-EEAT-signals-256x300.png 256w, https://housefresh.com/wp-content/uploads/2024/02/bhg-best-list-bs-EEAT-signals-768x900.png 768w, https://housefresh.com/wp-content/uploads/2024/02/bhg-best-list-bs-EEAT-signals.png 1075w" sizes="(max-width: 874px) 100vw, 874px"></a></figure></div>






<p>If you were to keep scrolling, you’d also find photos of an air purifier inside of a tent, two more mentions of the expert Kenneth Mendez, and four mentions of their lab in Des Moines, Iowa.&nbsp;</p>



<p>They say all the right things on the page and are a perfect example of a big media publisher with 40 different pages of ‘best of’ product recommendations in the house cleaning section alone without a single in-depth product review:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/bgh-best-of-pages.png"><img loading="lazy" decoding="async" width="1024" height="567" src="https://housefresh.com/wp-content/uploads/2024/02/bgh-best-of-pages-1024x567.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/bgh-best-of-pages-1024x567.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/bgh-best-of-pages-300x166.png 300w, https://housefresh.com/wp-content/uploads/2024/02/bgh-best-of-pages-768x425.png 768w, https://housefresh.com/wp-content/uploads/2024/02/bgh-best-of-pages-1536x850.png 1536w, https://housefresh.com/wp-content/uploads/2024/02/bgh-best-of-pages.png 1622w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>They mention that they have tested 67 air purifiers in their lab in Des Moines, Iowa, but somehow, they have published zero product reviews and they don’t make their test data available anywhere.&nbsp;</p>



<p>They do have photos, with the majority of them being credited to Henry Wortock. Remember that name.</p>



<blockquote>
<p><em>“But how do you know they didn’t test these devices?”</em></p>
</blockquote>



<p>Better Homes &amp; Gardens never mentioned conducting tests prior to the Google Product Review Update in <a href="https://searchengineland.com/google-releases-july-2022-product-reviews-update-386763" target="_blank" rel="noopener">July 2022</a>. You can see clearly <a href="https://web.archive.org/web/20220706122732/https://www.bhg.com/homekeeping/house-cleaning/cleaning-products-tools/best-air-purifiers-cleaner-home/" target="_blank" rel="noopener">here</a> how, on July 6th, there were no mentions of air purifiers being tested. Fast forward to <a href="https://web.archive.org/web/20220726080113/https://www.bhg.com/homekeeping/house-cleaning/cleaning-products-tools/best-air-purifiers-cleaner-home/" target="_blank" rel="noopener">July 26th</a> (one day before the announcement of the Google update), and they’re now saying they’ve tested 38 air purifiers. Zero to over 30 devices in just a few weeks without any prior mention of any sort of testing. This is also the first time we see some original photos.</p>



<p>That’s not all.&nbsp;</p>



<p>Their air purifier recommendations are generally plagued by high-priced and underperforming units, Amazon bestsellers with dubious origins (that also underperform), and even subpar devices from companies that market their products with phrases like ‘the Tesla of air purifiers.’ Any actual product testing would show these air purifiers to be a bad pick. What you hardly ever see in their recommendations are truly affordable and high-performing options, which should be a priority if you’re <a href="https://housefresh.com/corsi-rosenthal-box-review/">trying to help people</a> clean the air in their homes.</p>



<p>For example, Better Homes &amp; Gardens recommends the Molekule Air Mini+ as their best option for small rooms:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/bhg-recommends-molekule.png"><img loading="lazy" decoding="async" width="936" height="811" src="https://housefresh.com/wp-content/uploads/2024/02/bhg-recommends-molekule.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/bhg-recommends-molekule.png 936w, https://housefresh.com/wp-content/uploads/2024/02/bhg-recommends-molekule-300x260.png 300w, https://housefresh.com/wp-content/uploads/2024/02/bhg-recommends-molekule-768x665.png 768w" sizes="(max-width: 936px) 100vw, 936px"></a></figure></div>






<p>We have no idea how this device made the list considering that Molekule recently <a href="https://sfstandard.com/2023/10/05/air-purifier-company-files-for-bankruptcy-blames-san-franciscos-homeless-crisis/" target="_blank" rel="noopener">filed for bankruptcy</a>, has <a href="https://www.airpurifiersettlement.com/" target="_blank" rel="noopener">active class action lawsuits for false advertising</a>, has been recognized by Wirecutter as the <a href="https://www.nytimes.com/wirecutter/blog/worst-air-purifier-we-ever-tested/" target="_blank" rel="noopener">worst air purifier they tested</a>, and received the honor of being labeled as “not living up to the hype” by <a href="https://www.consumerreports.org/appliances/air-purifiers/molekule-air-purifier-review-a6711172738/" target="_blank" rel="noopener">Consumer Reports</a>.</p>



<p>When <a href="https://housefresh.com/molekule-mini-review/">we reviewed this device</a>, we also found it to be one of the worst air purifiers we have ever tested for multiple reasons:&nbsp;</p>



<ul>
<li>It took 3x as long to clear our test room of smoke compared to units sold for a third of its price</li>



<li>It’s incredibly noisy, generating 88 dB when running at its top fan speed — equivalent to a leaf blower, which people use while wearing hearing protection!</li>



<li>The filter replacement costs A LOT ($99.99), and you need to change it every six months, so you need to spend an additional $199.98 to use this air purifier for a year</li>



<li>It pulls 61 watts at its top speed, which might not seem like a lot but it is considering you could buy units for a third of the price that won’t consume more than 21 watts</li>
</ul>



<p>We could go on forever. But we can also show you actual firsthand data to back up each of our reasons not to recommend this air purifier.&nbsp;</p>



<p>Even some shallow desk research powered by Google would show that this product shouldn’t be recommended, but, hey, it’s $360, so it comes with a juicy commission compared to other better quality yet budget products.</p>



<p>But let’s go back to the search results for <strong>Best Air Purifier for Pets </strong>and give Google the chance to rank a truly reliable list of recommendations that live up to their guidelines.</p>



<p>Ranking below Better Homes &amp; Gardens, we have Real Simple, another magazine most people would immediately trust due to their longstanding brand.</p>



<p>When landing on Real Simple, the first thing you’ll notice is how similar the site looks to Better Homes &amp; Gardens. It uses the same template and has all the right signals to communicate that they test products for real:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/real-simple-best-list-bs-EEAT-signals.png"><img loading="lazy" decoding="async" width="905" height="1024" src="https://housefresh.com/wp-content/uploads/2024/02/real-simple-best-list-bs-EEAT-signals-905x1024.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/real-simple-best-list-bs-EEAT-signals-905x1024.png 905w, https://housefresh.com/wp-content/uploads/2024/02/real-simple-best-list-bs-EEAT-signals-265x300.png 265w, https://housefresh.com/wp-content/uploads/2024/02/real-simple-best-list-bs-EEAT-signals-768x869.png 768w, https://housefresh.com/wp-content/uploads/2024/02/real-simple-best-list-bs-EEAT-signals.png 1114w" sizes="(max-width: 905px) 100vw, 905px"></a></figure></div>






<p>Another interesting thing is that the photos on this page are credited to the same photographer, Henry Wortock (remember him?)</p>



<p>It even looks like the photos were taken in the same space:</p>



<figure>
<figure data-wp-context="{ &quot;core&quot;:
				{ &quot;image&quot;:
					{   &quot;imageLoaded&quot;: false,
						&quot;initialized&quot;: false,
						&quot;lightboxEnabled&quot;: false,
						&quot;hideAnimationEnabled&quot;: false,
						&quot;preloadInitialized&quot;: false,
						&quot;lightboxAnimation&quot;: &quot;zoom&quot;,
						&quot;imageUploadedSrc&quot;: &quot;https://housefresh.com/wp-content/uploads/2024/02/bhg-test-photo.png&quot;,
						&quot;imageCurrentSrc&quot;: &quot;&quot;,
						&quot;targetWidth&quot;: &quot;906&quot;,
						&quot;targetHeight&quot;: &quot;457&quot;,
						&quot;scaleAttr&quot;: &quot;&quot;,
						&quot;dialogLabel&quot;: &quot;Enlarged image&quot;
					}
				}
			}" data-wp-interactive=""><img loading="lazy" decoding="async" width="906" height="457" data-wp-effect--setstylesonresize="effects.core.image.setStylesOnResize" data-wp-effect="effects.core.image.setButtonStyles" data-wp-init="effects.core.image.initOriginImage" data-wp-on--click="actions.core.image.showLightbox" data-wp-on--load="actions.core.image.handleLoad" data-id="21763" src="https://housefresh.com/wp-content/uploads/2024/02/bhg-test-photo.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/bhg-test-photo.png 906w, https://housefresh.com/wp-content/uploads/2024/02/bhg-test-photo-300x151.png 300w, https://housefresh.com/wp-content/uploads/2024/02/bhg-test-photo-768x387.png 768w" sizes="(max-width: 906px) 100vw, 906px">        <div data-wp-body="" data-wp-bind--role="selectors.core.image.roleAttribute" data-wp-bind--aria-label="selectors.core.image.dialogLabel" data-wp-class--initialized="context.core.image.initialized" data-wp-class--active="context.core.image.lightboxEnabled" data-wp-class--hideanimationenabled="context.core.image.hideAnimationEnabled" data-wp-bind--aria-modal="selectors.core.image.ariaModal" data-wp-effect="effects.core.image.initLightbox" data-wp-on--keydown="actions.core.image.handleKeydown" data-wp-on--touchstart="actions.core.image.handleTouchStart" data-wp-on--touchmove="actions.core.image.handleTouchMove" data-wp-on--touchend="actions.core.image.handleTouchEnd" data-wp-on--click="actions.core.image.hideLightbox" tabindex="-1">
                <div>
<figure><img decoding="async" data-wp-bind--src="context.core.image.imageCurrentSrc" data-wp-style--object-fit="selectors.core.image.lightboxObjectFit" data-id="21763" src="" alt=""></figure>
</div>
                <div>
<figure><img decoding="async" data-wp-bind--src="selectors.core.image.enlargedImgSrc" data-wp-style--object-fit="selectors.core.image.lightboxObjectFit" data-id="21763" src="" alt=""></figure>
</div>
                
        </div></figure>



<figure data-wp-context="{ &quot;core&quot;:
				{ &quot;image&quot;:
					{   &quot;imageLoaded&quot;: false,
						&quot;initialized&quot;: false,
						&quot;lightboxEnabled&quot;: false,
						&quot;hideAnimationEnabled&quot;: false,
						&quot;preloadInitialized&quot;: false,
						&quot;lightboxAnimation&quot;: &quot;zoom&quot;,
						&quot;imageUploadedSrc&quot;: &quot;https://housefresh.com/wp-content/uploads/2024/02/real-simple-test-photo.png&quot;,
						&quot;imageCurrentSrc&quot;: &quot;&quot;,
						&quot;targetWidth&quot;: &quot;820&quot;,
						&quot;targetHeight&quot;: &quot;491&quot;,
						&quot;scaleAttr&quot;: &quot;&quot;,
						&quot;dialogLabel&quot;: &quot;Enlarged image&quot;
					}
				}
			}" data-wp-interactive=""><img loading="lazy" decoding="async" width="820" height="491" data-wp-effect--setstylesonresize="effects.core.image.setStylesOnResize" data-wp-effect="effects.core.image.setButtonStyles" data-wp-init="effects.core.image.initOriginImage" data-wp-on--click="actions.core.image.showLightbox" data-wp-on--load="actions.core.image.handleLoad" data-id="21764" src="https://housefresh.com/wp-content/uploads/2024/02/real-simple-test-photo.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/real-simple-test-photo.png 820w, https://housefresh.com/wp-content/uploads/2024/02/real-simple-test-photo-300x180.png 300w, https://housefresh.com/wp-content/uploads/2024/02/real-simple-test-photo-768x460.png 768w" sizes="(max-width: 820px) 100vw, 820px">        <div data-wp-body="" data-wp-bind--role="selectors.core.image.roleAttribute" data-wp-bind--aria-label="selectors.core.image.dialogLabel" data-wp-class--initialized="context.core.image.initialized" data-wp-class--active="context.core.image.lightboxEnabled" data-wp-class--hideanimationenabled="context.core.image.hideAnimationEnabled" data-wp-bind--aria-modal="selectors.core.image.ariaModal" data-wp-effect="effects.core.image.initLightbox" data-wp-on--keydown="actions.core.image.handleKeydown" data-wp-on--touchstart="actions.core.image.handleTouchStart" data-wp-on--touchmove="actions.core.image.handleTouchMove" data-wp-on--touchend="actions.core.image.handleTouchEnd" data-wp-on--click="actions.core.image.hideLightbox" tabindex="-1">
                <div>
<figure><img decoding="async" data-wp-bind--src="context.core.image.imageCurrentSrc" data-wp-style--object-fit="selectors.core.image.lightboxObjectFit" data-id="21764" src="" alt=""></figure>
</div>
                <div>
<figure><img decoding="async" data-wp-bind--src="selectors.core.image.enlargedImgSrc" data-wp-style--object-fit="selectors.core.image.lightboxObjectFit" data-id="21764" src="" alt=""></figure>
</div>
                
        </div></figure>
</figure>







<p>Now, Real Simple doesn’t mention a lab in Des Moines, Iowa, but they do say they acquired 56 air purifiers to test AND they named the same expert: Kenneth Mendez.&nbsp;</p>



<p>Similarly to Better Homes &amp; Gardens, there are no air purifier reviews on the entire site. That’s 56 devices that we just have to trust they actually tested and assessed.</p>



<p>Many of you won’t be surprised by all this because you’ll know that both companies are owned by the same media giant: Dotdash Meredith.</p>



<p>That’s probably why both sites have the same design and feature photos from the same freelance photographer (Henry Wortock). It’s also probably why they couldn’t really be bothered with sourcing another expert to satisfy that specific point in their E-E-A-T checklist (more on that later).</p>



<p>A deeper look inside Google Images shows how Dotdash Meredith is using photos clearly taken at the same time across different publications:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/dotdash-photoshoot.png"><img loading="lazy" decoding="async" width="733" height="1024" src="https://housefresh.com/wp-content/uploads/2024/02/dotdash-photoshoot-733x1024.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/dotdash-photoshoot-733x1024.png 733w, https://housefresh.com/wp-content/uploads/2024/02/dotdash-photoshoot-215x300.png 215w, https://housefresh.com/wp-content/uploads/2024/02/dotdash-photoshoot-768x1073.png 768w, https://housefresh.com/wp-content/uploads/2024/02/dotdash-photoshoot-1099x1536.png 1099w, https://housefresh.com/wp-content/uploads/2024/02/dotdash-photoshoot-1466x2048.png 1466w, https://housefresh.com/wp-content/uploads/2024/02/dotdash-photoshoot.png 1813w" sizes="(max-width: 733px) 100vw, 733px"></a></figure></div>






<p>Perhaps Dotdash Meredith did pay some lab to test all those devices across all those different websites, and it’s not just a collection of photoshoots their <a href="https://jobs.jobvite.com/dotdash/job/oyFhrfwF" target="_blank" rel="noopener">commerce writers</a> can tap into when writing best-of lists.</p>



<p>Whatever the case, it’s clear the team at Dotdash Meredith has worked out what Google needs to see in order to rank best-of lists in top positions without the need to actually publish insightful product reviews or share any evidence of original test data.&nbsp;</p>



<p>But it’s not just Dotdash Meredith that we need to outrank if we want to recommend the actual best air purifiers for pets.</p>



<p>Let’s scroll down to position number six and see who’s ranking right below Amazon and Reddit:&nbsp;</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-best-air-purifiers-for-pets.png"><img loading="lazy" decoding="async" width="1024" height="940" src="https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-best-air-purifiers-for-pets-1024x940.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-best-air-purifiers-for-pets-1024x940.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-best-air-purifiers-for-pets-300x275.png 300w, https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-best-air-purifiers-for-pets-768x705.png 768w, https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-best-air-purifiers-for-pets.png 1174w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>Hello, BuzzFeed.</p>



<p>There’s a lot wrong with this list, starting with the fact that it includes a whopping 22 air purifiers and clearly hasn’t even been curated. Similarly to most big media publisher recommendations, BuzzFeed also lists the Molekule Air Mini+.&nbsp;</p>



<p>Reading through the list, we found the BuzzFeed team doesn’t even pretend to test the air purifiers. There’s no firsthand research other than curating a list of devices and images from Amazon.com:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-images.png"><img loading="lazy" decoding="async" width="1024" height="511" src="https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-images-1024x511.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-images-1024x511.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-images-300x150.png 300w, https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-images-768x383.png 768w, https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-images-1536x767.png 1536w, https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-images-2048x1023.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>And then pulling in some reviews from Amazon.com as the bulk of their reasoning behind why they picked one air purifier over another:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-reviews.png"><img loading="lazy" decoding="async" width="1024" height="449" src="https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-reviews-1024x449.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-reviews-1024x449.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-reviews-300x132.png 300w, https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-reviews-768x337.png 768w, https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-reviews-1536x674.png 1536w, https://housefresh.com/wp-content/uploads/2024/02/BuzzFeed-Amazon-reviews-2048x899.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>Some of you might be shocked to see BuzzFeed recommending air purifiers, considering this is far from what BuzzFeed is all about. Others might rightfully think this list must be some sort of joke, expecting to see AI-generated images of air purifiers hugging and feeding cats and dogs.&nbsp;</p>



<p>The truth is that BuzzFeed has been struggling to maintain the ranking of this particular page, so it will probably drop off the first page of Google results eventually:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-traffic-graph.png"><img loading="lazy" decoding="async" width="1024" height="355" src="https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-traffic-graph-1024x355.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-traffic-graph-1024x355.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-traffic-graph-300x104.png 300w, https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-traffic-graph-768x266.png 768w, https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-traffic-graph-1536x532.png 1536w, https://housefresh.com/wp-content/uploads/2024/02/buzzfeed-traffic-graph.png 1588w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p><br>But until that day comes, searchers will continue to land on that Amazon.com copy-and-paste page when searching for an air purifier to help with pet odor and dander.</p>



<p>But hey, it’s BuzzFeed. They’re publicly listed and are the parent company of Huffington Post and Complex, so they <em>obviously </em>deserve to be there.&nbsp;</p>



<p>Right after BuzzFeed, we’ve got a Reddit thread that someone opened four months ago and has good discussions between Redditors:&nbsp;</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/Reddit-search-results.png"><img loading="lazy" decoding="async" width="1024" height="759" src="https://housefresh.com/wp-content/uploads/2024/02/Reddit-search-results-1024x759.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/Reddit-search-results-1024x759.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/Reddit-search-results-300x222.png 300w, https://housefresh.com/wp-content/uploads/2024/02/Reddit-search-results-768x569.png 768w, https://housefresh.com/wp-content/uploads/2024/02/Reddit-search-results-1536x1139.png 1536w, https://housefresh.com/wp-content/uploads/2024/02/Reddit-search-results.png 1697w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>There are also lots of spammy replies, with this specific one at the top right now for those landing on that page without being logged into Reddit:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/Reddit-spam-reply.png"><img loading="lazy" decoding="async" width="850" height="239" src="https://housefresh.com/wp-content/uploads/2024/02/Reddit-spam-reply.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/Reddit-spam-reply.png 850w, https://housefresh.com/wp-content/uploads/2024/02/Reddit-spam-reply-300x84.png 300w, https://housefresh.com/wp-content/uploads/2024/02/Reddit-spam-reply-768x216.png 768w" sizes="(max-width: 850px) 100vw, 850px"></a></figure></div>






<p>When clicking on that link, users will then land on this incredibly sketchy website:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/Site-it-leads-to.png"><img loading="lazy" decoding="async" width="1024" height="753" src="https://housefresh.com/wp-content/uploads/2024/02/Site-it-leads-to-1024x753.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/Site-it-leads-to-1024x753.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/Site-it-leads-to-300x221.png 300w, https://housefresh.com/wp-content/uploads/2024/02/Site-it-leads-to-768x565.png 768w, https://housefresh.com/wp-content/uploads/2024/02/Site-it-leads-to-1536x1130.png 1536w, https://housefresh.com/wp-content/uploads/2024/02/Site-it-leads-to.png 1888w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>Those of you with high attention-to-detail will notice that this introduction is a word-by-word copy of Real Simple’s article:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/Real-Simple-intro-copy.png"><img loading="lazy" decoding="async" width="1024" height="596" src="https://housefresh.com/wp-content/uploads/2024/02/Real-Simple-intro-copy-1024x596.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/Real-Simple-intro-copy-1024x596.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/Real-Simple-intro-copy-300x175.png 300w, https://housefresh.com/wp-content/uploads/2024/02/Real-Simple-intro-copy-768x447.png 768w, https://housefresh.com/wp-content/uploads/2024/02/Real-Simple-intro-copy-1536x894.png 1536w, https://housefresh.com/wp-content/uploads/2024/02/Real-Simple-intro-copy.png 1890w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>Clicking on the profile of <a href="https://www.reddit.com/user/Lonely-Wishbone619/" data-type="link" data-id="https://www.reddit.com/user/Lonely-Wishbone619/" target="_blank" rel="noopener">the Redditor</a> behind this ‘recommendation’ will lead you to a suspended account page:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/Reddit-suspended-user.png"><img loading="lazy" decoding="async" width="1024" height="433" src="https://housefresh.com/wp-content/uploads/2024/02/Reddit-suspended-user-1024x433.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/Reddit-suspended-user-1024x433.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/Reddit-suspended-user-300x127.png 300w, https://housefresh.com/wp-content/uploads/2024/02/Reddit-suspended-user-768x324.png 768w, https://housefresh.com/wp-content/uploads/2024/02/Reddit-suspended-user.png 1323w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>Somehow the user has been banned from Reddit, but their comment is still at the top of the thread — we wonder how many other comments this user has published across different subreddits.</p>


<div>

<p><span><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 12 16" height="16" width="12"> <path fill="#3984FF" d="M1.91163 10.3887C1.20852 9.73924 0.672218 8.92995 0.348106 8.02933C0.0239945 7.12871 -0.0783867 6.16327 0.0496268 5.2147C0.176204 4.25288 0.534116 3.33609 1.09269 2.54291C1.65126 1.74973 2.39382 1.10383 3.25675 0.660548C4.11967 0.21727 5.07721 -0.0101573 6.04729 -0.00224163C7.01738 0.00567404 7.97108 0.248697 8.82665 0.705997C9.68223 1.1633 10.4142 1.82124 10.9597 2.62342C11.5053 3.42561 11.8482 4.34812 11.959 5.31188C12.0699 6.27564 11.9454 7.25191 11.5963 8.15702C11.2471 9.06213 10.6837 9.86908 9.95429 10.5087C9.48461 10.9125 9.11996 11.4243 8.89163 12H6.66629V7.2107C7.0549 7.07331 7.39157 6.81921 7.63024 6.48317C7.8689 6.14712 7.99792 5.74554 7.99963 5.33337C7.99963 5.15656 7.92939 4.98699 7.80436 4.86196C7.67934 4.73694 7.50977 4.6667 7.33296 4.6667C7.15615 4.6667 6.98658 4.73694 6.86156 4.86196C6.73653 4.98699 6.66629 5.15656 6.66629 5.33337C6.66629 5.51018 6.59606 5.67975 6.47103 5.80477C6.34601 5.9298 6.17644 6.00003 5.99963 6.00003C5.82282 6.00003 5.65325 5.9298 5.52822 5.80477C5.4032 5.67975 5.33296 5.51018 5.33296 5.33337C5.33296 5.15656 5.26272 4.98699 5.1377 4.86196C5.01267 4.73694 4.8431 4.6667 4.66629 4.6667C4.48948 4.6667 4.31991 4.73694 4.19489 4.86196C4.06986 4.98699 3.99963 5.15656 3.99963 5.33337C4.00134 5.74554 4.13035 6.14712 4.36902 6.48317C4.60769 6.81921 4.94435 7.07331 5.33296 7.2107V12H3.04163C2.78676 11.3871 2.40111 10.8371 1.91163 10.3887ZM3.33296 13.3334V13.54C3.33367 14.1923 3.59307 14.8176 4.05426 15.2787C4.51544 15.7399 5.14074 15.9993 5.79296 16H6.20629C6.85851 15.9993 7.48381 15.7399 7.945 15.2787C8.40618 14.8176 8.66559 14.1923 8.66629 13.54V13.3334H3.33296Z"></path> </svg></span><span><strong>Tip</strong></span></p>



<p>After their latest Helpful Content Update, Reddit <a href="https://www.wsj.com/tech/ai/google-search-results-ai-spam-cf8c2605" target="_blank" rel="noopener">and LinkedIn</a> started ranking heavily in Google search results. If you want to find out more about Reddit specifically, you should read <a href="https://detailed.com/forum-serps/" target="_blank" rel="noopener">this article from Glen Allsopp</a>.</p>

</div>














<h2><span id="lwptoc3"><strong>Private equity firms are utilizing public trust in long-standing publications to sell every product under the sun</strong></span></h2>



<h3><span id="lwptoc4"><strong>In a bid to replace falling ad revenue, publishing houses are selling their publications for parts to media groups that are quick to establish affiliate marketing deals</strong></span></h3>



<p>At position #8, we have Popular Science, a magazine from 1872 that was sold to a private equity firm, North Equity LLC, in 2020. A year later, North Equity <a href="https://www.prnewswire.com/news-releases/recurrent-ventures-named-the-new-parent-company-of-popular-science-the-drive-domino-field--stream-and-other-brands-301312885.html" target="_blank" rel="noopener">introduced Recurrent Ventures</a>, a new arm of their business that runs all the media brands they acquired. A few months later, PopSci switched to an <a href="https://www.popsci.com/story/science/popsci-spring-2021-digital-issue/" target="_blank" rel="noopener">all-digital format</a>. Two years later, in 2023, PopSci <a href="https://www.theverge.com/2023/11/27/23978042/popular-science-digital-magazine-discontinued" target="_blank" rel="noopener">stopped being a magazine</a> altogether.</p>



<p>Of course, most people won’t know that because the site still feels like the PopSci we all know and trust:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/popsci-best-air-purifiers-for-pets.png"><img loading="lazy" decoding="async" width="970" height="1024" src="https://housefresh.com/wp-content/uploads/2024/02/popsci-best-air-purifiers-for-pets-970x1024.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/popsci-best-air-purifiers-for-pets-970x1024.png 970w, https://housefresh.com/wp-content/uploads/2024/02/popsci-best-air-purifiers-for-pets-284x300.png 284w, https://housefresh.com/wp-content/uploads/2024/02/popsci-best-air-purifiers-for-pets-768x811.png 768w, https://housefresh.com/wp-content/uploads/2024/02/popsci-best-air-purifiers-for-pets.png 1092w" sizes="(max-width: 970px) 100vw, 970px"></a></figure></div>






<p>It doesn’t help that they have a ‘Why trust us’ section at the end of all their ‘Best of’ lists that says:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/PopSci-Why-Trust-Us-1.png"><img loading="lazy" decoding="async" width="1304" height="680" src="https://housefresh.com/wp-content/uploads/2024/02/PopSci-Why-Trust-Us-1.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/PopSci-Why-Trust-Us-1.png 1304w, https://housefresh.com/wp-content/uploads/2024/02/PopSci-Why-Trust-Us-1-300x156.png 300w, https://housefresh.com/wp-content/uploads/2024/02/PopSci-Why-Trust-Us-1-1024x534.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/PopSci-Why-Trust-Us-1-768x400.png 768w" sizes="(max-width: 1304px) 100vw, 1304px"></a></figure></div>






<p>The vast majority of readers don’t know that the teams behind these product recommendations are far from the team of journalists and editors who built the brand behind the site.</p>



<p>It’s unfortunate because many people will click on that Popular Science article expecting a trustworthy list of products only to find a list of units that haven’t even been tested by PopSci’s team:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/Pop-Sci-methodology.png"><img loading="lazy" decoding="async" width="1319" height="559" src="https://housefresh.com/wp-content/uploads/2024/02/Pop-Sci-methodology.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/Pop-Sci-methodology.png 1319w, https://housefresh.com/wp-content/uploads/2024/02/Pop-Sci-methodology-300x127.png 300w, https://housefresh.com/wp-content/uploads/2024/02/Pop-Sci-methodology-1024x434.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/Pop-Sci-methodology-768x325.png 768w" sizes="(max-width: 1319px) 100vw, 1319px"></a></figure></div>






<p>After reading the article, it quickly becomes clear that every air purifier on the list was selected (and ranked) based on anecdotal experience.</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/popsci-anecdotal-product-recommendations.jpg"><img loading="lazy" decoding="async" width="1172" height="1335" src="https://housefresh.com/wp-content/uploads/2024/02/popsci-anecdotal-product-recommendations.jpg" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/popsci-anecdotal-product-recommendations.jpg 1172w, https://housefresh.com/wp-content/uploads/2024/02/popsci-anecdotal-product-recommendations-263x300.jpg 263w, https://housefresh.com/wp-content/uploads/2024/02/popsci-anecdotal-product-recommendations-899x1024.jpg 899w, https://housefresh.com/wp-content/uploads/2024/02/popsci-anecdotal-product-recommendations-768x875.jpg 768w" sizes="(max-width: 1172px) 100vw, 1172px"></a></figure></div>






<p>Another thing worth mentioning about this PopSci list of air purifiers is that it’s a completely new page on their site that went live on December 29th, 2023.&nbsp;</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/PopSci-wayback-machine.png"><img loading="lazy" decoding="async" width="1024" height="837" src="https://housefresh.com/wp-content/uploads/2024/02/PopSci-wayback-machine-1024x837.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/PopSci-wayback-machine-1024x837.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/PopSci-wayback-machine-300x245.png 300w, https://housefresh.com/wp-content/uploads/2024/02/PopSci-wayback-machine-768x627.png 768w, https://housefresh.com/wp-content/uploads/2024/02/PopSci-wayback-machine-1536x1255.png 1536w, https://housefresh.com/wp-content/uploads/2024/02/PopSci-wayback-machine-2048x1673.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>This makes it all the more strange for them to be recommending not one but two (2!) Molekule air purifiers. Surely, the writer who researched each device ran into <a href="https://www.bizjournals.com/southflorida/news/2023/10/05/publicly-company-files-chapter-11-with-47m-debt.html" target="_blank" rel="noopener">the news of Molekule going bankrupt</a> — or the <a href="https://sfstandard.com/2023/10/05/air-purifier-company-files-for-bankruptcy-blames-san-franciscos-homeless-crisis/" target="_blank" rel="noopener">ridiculous reasons</a> why they supposedly filed Chapter 11.</p>















<h2><span id="lwptoc5">Shouldn’t ‘best of’ lists be treated as product reviews?</span></h2>



<h3><span id="lwptoc6">Hint: yes, they should, but somehow they’re not&nbsp;</span></h3>



<p>In theory, ‘best of’ product recommendation lists should be treated the same as any product review.</p>



<p>Google’s <a href="https://developers.google.com/search/docs/appearance/reviews-system" target="_blank" rel="noopener">documentation</a> clearly states that:</p>


<div>

<h3><span id="lwptoc7"></span></h3>



<figure><img loading="lazy" decoding="async" width="225" height="225" src="https://housefresh.com/wp-content/uploads/2024/02/google-logo.png" alt="" title="google-logo" srcset="https://housefresh.com/wp-content/uploads/2024/02/google-logo.png 225w, https://housefresh.com/wp-content/uploads/2024/02/google-logo-150x150.png 150w" sizes="(max-width: 225px) 100vw, 225px">
<figcaption></figcaption>
</figure>



<p>“Reviews can be about a single thing, or head-to-head comparisons, or ranked-lists of recommendations.”</p>





</div>

<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/google-review-system-documentation.png"><img loading="lazy" decoding="async" width="1024" height="568" src="https://housefresh.com/wp-content/uploads/2024/02/google-review-system-documentation-1024x568.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/google-review-system-documentation-1024x568.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/google-review-system-documentation-300x166.png 300w, https://housefresh.com/wp-content/uploads/2024/02/google-review-system-documentation-768x426.png 768w, https://housefresh.com/wp-content/uploads/2024/02/google-review-system-documentation-1536x852.png 1536w, https://housefresh.com/wp-content/uploads/2024/02/google-review-system-documentation.png 1826w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>So, shouldn’t Google be rewarding ranked lists of recommendations “that provide insightful analysis and original research […] written by experts or enthusiasts who know the topic well”?&nbsp;</p>



<p>Shouldn’t the reviews system ensure that people don’t end up landing on “thin content that simply summarizes a bunch of products, services, or other things”?</p>



<p>Perhaps we’re mistaken here, but we think the documentation says it plainly and clearly.</p>



<p>Sadly, these are just empty words because Google has a clear bias towards big media publishers.</p>



<p>Their <a href="https://developers.google.com/search/updates/core-updates" target="_blank" rel="noopener">Core</a> and <a href="https://developers.google.com/search/docs/appearance/helpful-content-system" target="_blank" rel="noopener">Helpful Content</a> updates are heavily focused on something they call E-E-A-T, which is an acronym that stands for Experience, Expertise, Authoritativeness, and Trustworthiness.&nbsp;</p>



<p>The SEO world has been obsessed with E-E-A-T <a href="https://ahrefs.com/blog/eat-seo/" target="_blank" rel="noopener">for a few years now</a>, to the point where <a href="https://twitter.com/search?q=E-E-A-T%20seo&amp;src=typed_query&amp;f=top" target="_blank" rel="noopener">there is always someone on X</a> (formerly Twitter) discussing how to <em>show</em> experience, expertise, authoritativeness, and trustworthiness. Many of the examples come from <a href="https://riseatseven.com/blog/eeat-on-steroids-how-are-your-money-or-your-life-brands-doing-it/" target="_blank" rel="noopener">dissecting big media publishers</a> like the ones we’ve been discussing in this article.&nbsp;</p>



<p>The reason why SEOs look up to these sites is that Google rewards those sites:</p>


<div>

<blockquote><div lang="en" dir="ltr"><p>Interesting to see US News and Forbes benefit from this core update.</p><p>US News is earning top positions for its "cars" and "college" pages, sometimes even outranking the brand itself for its own branded KWs. <a href="https://t.co/qNkQy1HlT8" target="_blank">pic.twitter.com/qNkQy1HlT8</a></p></div>— Lily Ray 😏 is on vacation 🌴🧘 (@lilyraynyc) <a href="https://twitter.com/lilyraynyc/status/1533840164539310080?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">June 6, 2022</a></blockquote> 

</div>






<p>And people have been pointing this out for months:</p>


<div>

<blockquote><div lang="en" dir="ltr"><p>Genuine question – why are large sites like New York Magazine, CNN, Tom’s Guide, CNET, Forbes, and Business Insider not deemed unhelpful in the extreme when they write unrelated content purely targeting search engines.</p><p>Let me give you my logic.</p><p>Presumably Google ranks these…</p></div>— Sean Kaye (@SeanDoesLife) <a href="https://twitter.com/SeanDoesLife/status/1716935563075559630?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">October 24, 2023</a></blockquote> 

</div>






<p>Every single big media company (a.k.a. <a href="https://detailed.com/google-control/" target="_blank" rel="noopener">Digital Goliaths</a>) is currently pumping up their bottom line with affiliate earnings.&nbsp;</p>



<p>The strategy of Recurrent Ventures for Popular Science seems to be to squeeze as much money as possible from this type of ranked list of recommendations before things start to go south.</p>



<p>You can see here how they have ramped up the pages inside of their ‘Gear’ section, which is where they house the bulk of their ‘best of’ articles — you can also see how their traffic has been declining since the latest Product Review update:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/PopSci-affiliate-marketing.png"><img loading="lazy" decoding="async" width="1024" height="584" src="https://housefresh.com/wp-content/uploads/2024/02/PopSci-affiliate-marketing-1024x584.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/PopSci-affiliate-marketing-1024x584.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/PopSci-affiliate-marketing-300x171.png 300w, https://housefresh.com/wp-content/uploads/2024/02/PopSci-affiliate-marketing-768x438.png 768w, https://housefresh.com/wp-content/uploads/2024/02/PopSci-affiliate-marketing-1536x876.png 1536w, https://housefresh.com/wp-content/uploads/2024/02/PopSci-affiliate-marketing-2048x1168.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>The strategy of Dotdash Meredith for their publications seems to be to optimize resources and maximize profit.</p>



<p>We might one day see the first page of Google results full of copycat recommendations once they roll out their hacks across all their websites, including Verywell, People.com, Health.com, Travel + Leisure, Byrdie, MyDomaine, The Spruce, Lifewire, Southern Living, TreeHugger, Parents.com… and so many other top tier publications.</p>



<p>Oh, wait, that’s already happening:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/dotdash-meredith-affiliate-hacks-1.png"><img loading="lazy" decoding="async" width="2792" height="5598" src="https://housefresh.com/wp-content/uploads/2024/02/dotdash-meredith-affiliate-hacks-1.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/dotdash-meredith-affiliate-hacks-1.png 2792w, https://housefresh.com/wp-content/uploads/2024/02/dotdash-meredith-affiliate-hacks-1-150x300.png 150w, https://housefresh.com/wp-content/uploads/2024/02/dotdash-meredith-affiliate-hacks-1-511x1024.png 511w, https://housefresh.com/wp-content/uploads/2024/02/dotdash-meredith-affiliate-hacks-1-768x1540.png 768w, https://housefresh.com/wp-content/uploads/2024/02/dotdash-meredith-affiliate-hacks-1-766x1536.png 766w, https://housefresh.com/wp-content/uploads/2024/02/dotdash-meredith-affiliate-hacks-1-1021x2048.png 1021w" sizes="(max-width: 2792px) 100vw, 2792px"></a></figure></div>






<p>So, where do we go from here?</p>















<h2><span id="lwptoc8">Google is killing independent sites like ours through inaction</span></h2>



<h3><span id="lwptoc9">While this happens, investment firms and ‘innovative digital media companies’ are selling you bad products&nbsp;</span></h3>



<p>HouseFresh has published over 60 hands-on reviews that were written on the basis of multiple performance tests.&nbsp;</p>



<p><strong>We can tell you that testing and reviewing products takes a lot of time, money, and effort.&nbsp;</strong></p>



<p>But if our small team can publish real reviews, then these big publishers and private equity surely have the resources to do the same.&nbsp;</p>



<p>Unfortunately, right now, these companies are using all their resources to publish more and more pages peppered with the right ‘ingredients’ to dish up a tasty E-E-A-T meal for Google.</p>



<p>We have no doubt that these big publications could build their own labs, where they could run actual tests in order to make product recommendations backed by actual firsthand data.&nbsp;</p>



<p>CNET bought an entire smart home <a href="https://www.cnet.com/home/smart-home/welcome-to-the-cnet-smart-home/" target="_blank" rel="noopener">back in 2015</a> in order to test products. That was before they were acquired by Red Ventures and found themselves selling the house after reporters told <a href="https://www.theverge.com/2023/2/2/23582046/cnet-red-ventures-ai-seo-advertisers-changed-reviews-editorial-independence-affiliate-marketing" target="_blank" rel="noopener">The Verge</a> they were feeling pressured to change their reviews to be more favorable to brands that were being advertised on CNET.&nbsp;</p>



<p>How many other ‘parent companies’ are using commerce or shopping editors to pass off promotional articles as editorial content?</p>



<p>It turns out that what we’re seeing now is a result of the brainchild of Alicia Navarro, the founder and CEO of <a href="https://www.linkedin.com/pulse/how-skimlinks-went-from-link-affiliation-being-worlds-alicia-navarro/" target="_blank" rel="noopener">Skimlinks</a>, a content monetization platform for online publishers. Navarro wrote a series of <a href="https://www.thedrum.com/opinion/2016/05/17/rise-commerce-editor-does-comtent-hold-key-monetisation-publishers" target="_blank" rel="noopener">opinion</a> articles and provided quotes to industry publications, who started introducing the concept of ‘comtent’ in 2016:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/comtent-ecommerce-editors.jpg"><img loading="lazy" decoding="async" width="1024" height="576" src="https://housefresh.com/wp-content/uploads/2024/02/comtent-ecommerce-editors-1024x576.jpg" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/comtent-ecommerce-editors-1024x576.jpg 1024w, https://housefresh.com/wp-content/uploads/2024/02/comtent-ecommerce-editors-300x169.jpg 300w, https://housefresh.com/wp-content/uploads/2024/02/comtent-ecommerce-editors-768x432.jpg 768w, https://housefresh.com/wp-content/uploads/2024/02/comtent-ecommerce-editors-1536x864.jpg 1536w, https://housefresh.com/wp-content/uploads/2024/02/comtent-ecommerce-editors-2048x1152.jpg 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>Someone who voiced their discomfort with the idea of e-commerce editors publishing ‘comtent’ at the time was Brian Lam, founder of The Wirecutter.&nbsp;</p>



<p>Months before being acquired by The New York Times, Lam <a href="https://digiday.com/media/newest-rainmaker-publishers-e-commerce-editors/" target="_blank" rel="noopener">explained</a> that the Wirecutter had grown to become <a href="https://www.bloomberg.com/news/articles/2016-04-01/how-a-small-tech-site-found-a-new-way-for-publishers-to-get-paid?leadSource=uverify%20wall" target="_blank" rel="noopener">one of the most successful independent tech sites</a> by publishing 20 to 30 articles a month that would take 30 to 200 hours to research and produce.&nbsp;</p>



<p>He said he didn’t believe in a role like that of an e-commerce editor who would be pushing products. “I believe in talented editors on a beat who help people find related gear, not someone specifically meant to find things to push to readers,” Lam added.</p>



<p>We are big fans of The Wirecutter, but we wonder whether their content would be as successful in the eyes of Google today if they were still an independent website. Luckily, they don’t need to worry about it because their site now sits inside the nytimes.com domain — a trusted and well-established media brand.</p>



<p>And it’s not just newer independent sites like HouseFresh that are losing traffic to big media publishers and their e-commerce editors.</p>



<p>Long-standing websites such as <a href="https://www.techgearlab.com/" target="_blank" rel="noopener">GearLab</a> have also seen their traffic decline in recent months even though they publish product reviews based on objective, independent testing:</p>


<div>
<figure><a href="https://housefresh.com/wp-content/uploads/2024/02/independent-site-traffic-loss.png"><img loading="lazy" decoding="async" width="1024" height="498" src="https://housefresh.com/wp-content/uploads/2024/02/independent-site-traffic-loss-1024x498.png" alt="" srcset="https://housefresh.com/wp-content/uploads/2024/02/independent-site-traffic-loss-1024x498.png 1024w, https://housefresh.com/wp-content/uploads/2024/02/independent-site-traffic-loss-300x146.png 300w, https://housefresh.com/wp-content/uploads/2024/02/independent-site-traffic-loss-768x374.png 768w, https://housefresh.com/wp-content/uploads/2024/02/independent-site-traffic-loss-1536x748.png 1536w, https://housefresh.com/wp-content/uploads/2024/02/independent-site-traffic-loss.png 1574w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>






<p>We can’t speak for the GearLab team, but this situation just isn’t sustainable.&nbsp;</p>



<p>Many independent sites will go out of business if this trend continues.</p>











<h2><span id="lwptoc10">We hope to still be here to see things change</span></h2>



<h3><span id="lwptoc11">That’s the reason why we’re writing this article</span></h3>



<p>A few months ago, Futurism <a href="https://futurism.com/sports-illustrated-ai-generated-writers" target="_blank" rel="noopener">uncovered</a> how Sports Illustrated was publishing ‘best of’ articles by fake, AI-generated writers. The magazine’s publisher, The Arena Group, washed their hands of it by stating that the “articles in question were product reviews and were licensed content from an external, third-party company, AdVon Commerce.”</p>



<p>We wonder how many of these big media companies and investment firms are hiring intermediaries to develop their ‘affiliate marketing’ arm, whatever the cost.</p>



<p>These Digital Goliaths are utilizing their websites’ authority and the public’s trust in their brands to sell every product under the sun.</p>



<p>They’re buying magazines we love, closing their print operations, turning them into digital-only, laying off the actual journalists who made us trust in their content in the first place, and hiring third-party companies to run the affiliate arm of their sites.</p>



<p>And while they do all this, they’re telling you to buy:&nbsp;</p>



<ul>
<li>Products from brands that are bankrupt and have class action lawsuits for false advertising against them</li>



<li>Outdated, inefficient, and underpowered air purifiers that won’t actually clean the air in your home</li>



<li>Overpriced devices powered by fancy marketing tactics that will perform as well as units half the price</li>
</ul>



<p>We appreciate how much information Google has shared about <a href="https://developers.google.com/search/docs/specialty/ecommerce/write-high-quality-reviews" target="_blank" rel="noopener">what a high-quality review is</a> and about helpful content in general, but these guidelines need to be applied to everyone.</p>



<p>These Digital Goliaths shouldn’t be able to use product recommendations as their personal piggy bank, simply flying through Google updates off the back of ‘the right signals,’ an old domain, or the echo of a reputable brand that is no longer.</p>



<p>As a team that has dedicated the last few years to testing and reviewing air purifiers, it’s disheartening to see our independent site be outranked by big-name publications that haven’t even bothered to check if a company is bankrupt before telling millions of readers to buy their products.</p>



<p>That isn’t helpful content. Especially considering the work of air purifiers can’t be assessed by the naked eye.</p>



<p>Users won’t be able to tell if their air purifier is actually working without subject-matter knowledge and the help of tools to measure air quality. That’s when actual testing and firsthand data become indispensable.</p>



<p>If a magazine they trust tells them the <a href="https://housefresh.com/molekule-mini-review/" data-type="post" data-id="5606">Molekule Air Mini+</a>, the <a href="https://housefresh.com/puroair-hepa-14-240-review/" data-type="post" data-id="21327">PuroAir HEPA 14 240</a>, and the <a href="https://housefresh.com/okaysou-airmax-10l-pro/" data-type="post" data-id="14572">Okaysou AirMax 10L Pro</a> will help with their pet allergies, their asthma flare-ups, the air pollution that gets through the windows, the wildfire smoke blowing in their direction, the mold spores in their damp apartment, or recurring flu outbreaks in their school, then they’ll go and buy one of those useless, overpriced units.</p>



<p>Everybody loses but the investment firm.</p>



<p>We’re talking about only one product here, but we imagine the issues highlighted in this article are rampant across every consumer tech product being recommended by these big media sites.</p>



<p>Google won’t be the gatekeeper forever, but they are the gatekeeper now.&nbsp;</p>



<p>The ball is in their court.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[My productivity app is a never-ending .txt file (445 pts)]]></title>
            <link>https://jeffhuang.com/productivity_text_file/</link>
            <guid>39432876</guid>
            <pubDate>Mon, 19 Feb 2024 18:14:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jeffhuang.com/productivity_text_file/">https://jeffhuang.com/productivity_text_file/</a>, See on <a href="https://news.ycombinator.com/item?id=39432876">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<h2>Over 14 years of todos recorded in text</h2>


<h3>By <a href="https://jeffhuang.com/">Jeff Huang</a>, updated on 2022-03-21</h3>

<p>
The biggest transition for me when I started college was learning to get organized. There was a point when I couldn't just remember everything in my head. And having to constantly keep track of things was distracting me from whatever task I was doing at the moment.
</p><p>
So I tried various forms of todo lists, task trackers, and productivity apps. They were all discouraging because the things to do kept getting longer, and there were too many interrelated things like past meeting notes, calendar appointments, idea lists, and lab notebooks, which were all on different systems.
</p><p>
I gave up and started just tracking in a single text file and have been using it as my main productivity system for 14 years now. It is so essential to my work now, and has surprisingly scaled with a growing set of responsibilities, that I wanted to share this system. It's been my secret weapon.
</p><p>
<b>Prerequisite</b>: A calendar. The one outside tool I use is an online calendar, and I put everything on this calendar, even things that aren't actually for a fixed time like "make a coffee table at the workshop" or "figure out how to recruit new PhD students" — I'll schedule them on a date when I want to think about it. That way all my future plans and schedule are together, and not a bunch of lists I have to keep track of.
</p><p>
<b>Making the Daily List</b>: Every night before I go to bed, I take all the items on my calendar for the next day and append it to the end of the text file as a daily todo list, so I know exactly what I'm doing when I wake up. This list contains scheduled tasks (2pm meeting with Madonna, 4pm office hours), errands (sign a form, return a book), and work items (review a paper, prepare a presentation). It also lets me think about whether I've got the right amount of work for a day.
</p><p>
Anything I don't want to do tomorrow, I'll shuffle back into my calendar on later dates. If the task is too big, I'll break it down into a piece for tomorrow, and the rest for another date. After years of doing this, I've gotten pretty good at estimating what I can finish in a day. Here's an example with names replaced so you can see what it looks like when I move a day's schedule from my calendar.
</p><p>
<code>2021-11-31
11am meet with Head TAs
- where are things at with inviting portfolio reviewers?
11:30am meet with student Enya (interested in research)
review and release A/B Testing assignment grading
12pm HCI group meeting
- vote for lab snacks
send reminders for CHI external reviewers
read Sketchy draft
Zelda pick up eye tracker
- have her sign for it
update biosketch for Co-PI
3:15pm join call with Umbrella Corp and industry partnership staff
3:45pm advising meet with Oprah
4pm Rihanna talk (368 CIT)
5pm 1:1 with Beyonce #phdadvisee
6pm faculty interview dinner with Madonna
</code>
</p><p>
<b>As a Record</b>: That daily todo list is where I also take notes, so it's a <u>to do</u> list that turns into a <u>what done</u> list. The best thing about these daily lists is I keep them all in a single text file separated by dates, so I have a record of everything I have ever done and when I did it.
</p><p>
My current file was created 9 years ago when I started my current job. It serves as a research notebook, and as meeting minutes. I have 51,690 handwritten lines in one file now, documenting everything I have done as a professor, and nearly every person I have met with, along with notes about what we discussed or ideas I had. Here's what my list looks like at the end of the day, representing work accomplished.
</p><p>
<code>2021-11-31
11am meet with Head TAs
- where are things at with inviting portfolio reviewers? A: got 7/29 replies
- need 3 TAs for Thursday lab
- Redesign assignment handout will be done by Monday, ship Thursday
11:30am meet with student Enya (interested in research)
- they're a little inexperienced, suggested applying next year
review and release A/B Testing assignment grading
12pm HCI group meeting
- automatically generate thumbnails from zoom behavior on web pages
- #idea subliminal audio that leads you to dream about websites
- Eminem presenting Nov 24
- vote for lab snacks. A: popcorn and seaweed thing
got unofficial notification ARO YIP funding award #annual #cv
read Sketchy paper draft
- needs 1 more revision
- send to Gandalf to look at?
Zelda pick up eye tracker
- have her sign for it
update biosketch for Co-PI
unexpected drop in from Coolio! #alumni
- now a PM working on TravelAdvisor, thinking about applying to grad school
3:15pm join call with Umbrella Corp and industry partnership staff
- they want to hire 20 data science + SWE interns (year 3), 4 alums there as SWE
3:45pm advising meet with Oprah
- enjoyed CS 33
- interning at Facebook
4pm Rihanna talk (368 CIT)
5pm 1:1 with Beyonce #phdadvisee
- stuck on random graph generating crash
	- monitor memory/swap/disk?
	- ask Mario to help?
- got internship at MSR with Cher
	- start May 15 or 22
- will send me study design outline before next meeting
- interviewing Spartacus as potential RA for next semester
6pm faculty interview dinner with Madonna (Gracie's)
- ask about connection with computer vision
- cool visual+audio unsupervised comparison, thoughtful about missing data, would work with ugrads (?), likes biking, teach compvis + graphics
- vote #HIRE
#note maybe visit Monsters University next spring, Bono does related work
</code>
</p><p>
<b>Shortcuts and Features</b>: I use a consistent writing style so things are easily searchable, with a few shorthands. When I search for "meet with", it shows that I have had over 3,000 scheduled meetings. I have some tags like #idea for new ideas to revisit when I want project ideas, #annual for things to put on my next annual report, #nextui for things to add the next time I run my next UI course.
</p><p>
A text file is incredibly flexible, and at any point, I can quickly glance to see what I've done that day and what's left. I usually keep an empty line between tasks completed and upcoming tasks. When a task is completed, I move the empty line. Any leftover tasks from the current day can go back into the calendar for when I may want to tackle it again, but that is rare because tasks were already sized into what I can do on that day. I can calculate aggregate statistics using the search box, or list all the lines containing a tag, and other operations using my text editor. I use <a href="https://www.ultraedit.com/">Ultraedit</a> because I'm familiar with it, but any text editor would have similar capabilities.
</p><p>
<b>Email</b>: Email is obviously a part of my workflow. Everyone has all sorts of productivity advice about handling it, but I find a simple flagging system is sufficient — flag Red if it's something I need to deal with, flag Orange if I need to deal with it eventually but requires some thinking or someone else to handle it, and flag Yellow for emails I send that I am waiting on a reply for, so I know to follow up later. I'll flag emails as they come in, whenever it's convenient.
</p><p>
At the end of the day, I'll do a quick review of the Orange and Yellows to see if any need to be followed up or should become Red. Some peoples' workflows revolve around obsessively cleaning their Inbox. I don't really care about keeping my inbox empty because then I feel like I have new work to do whenever email comes in.
</p>
<p>So my <b>daily routine</b> looks like</p>
<ol><li>
look at the daily todo list I wrote last night to find out what I'm doing today
</li><li>
do scheduled things on that list during the day
</li><li>
when I have free (unscheduled) time, do the floating tasks on my list and work on Red-flagged emails
</li>
at the end of the day
<li>
do a quick review of Orange/Yellow emails to see if they need any handling
</li><li>
copy the next day's calendar items to the bottom of the text file
</li></ol>

<p>This process has a few <b>nice properties</b>:</p>
<ul><li>
It's easy to immediately see what to do when I wake up
</li><li>
I don't need to remember in my head the things to do later (following up on emails, future tasks)
</li><li>
It's easy to recall what happened in the past and see how much I can actually accomplish in a day
</li><li>
There's no running "todo" list with items that keep pushed back day after day
</li><li>
I use Remote Desktop so everything is accessible from every device
</li></ul>

<p>
My daily workload is completely under my control the night before; whenever I feel overwhelmed with my long-term commitments, I reduce it by aggressively unflagging emails, removing items from my calendar that I am no longer excited about doing, and reducing how much work I assign myself in the future.
</p><p>
It does mean sometimes I miss some questions or don't pursue an interesting research question, but helps me maintain a manageable workload.
</p><p>
So that's it. I would love to hear from you if you try my system, or have some ideas about it!
</p>




</div></div>]]></description>
        </item>
    </channel>
</rss>