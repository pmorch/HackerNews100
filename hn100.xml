(ignoring known css parsing error)
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 18 Oct 2024 17:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Show HN: Go Plan9 Memo, Speeding Up Calculations 450% (119 pts)]]></title>
            <link>https://pehringer.info/go_plan9_memo.html</link>
            <guid>41879854</guid>
            <pubDate>Fri, 18 Oct 2024 14:36:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pehringer.info/go_plan9_memo.html">https://pehringer.info/go_plan9_memo.html</a>, See on <a href="https://news.ycombinator.com/item?id=41879854">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
      <h2><a href="https://pehringer.info/">Jacob_Ray_Pehringer</a></h2>
      

      
<p>I want to take advantage of Go’s concurrency and parallelism for some of my upcoming projects, allowing for some serious number crunching capabilities. But what if I wanted EVEN MORE POWER?!? Enter SIMD, <strong>S</strong>ame <strong>I</strong>nstruction <strong>M</strong>uliple <strong>D</strong>ata [“sim”-“dee”]. Simd instructions allow for parallel number crunching capabilities right down at the hardware level. Many programming languages either have compiler optimizations that use simd or libraries that offer simd support. However, (as far as I can tell) Go’s compiler does not utilizes simd, and I cound not find a general propose simd package that I liked. <strong><em>I just want a package that offers a thin abstraction layer over arithmetic and bitwise simd operations</em></strong>. So like any good programmer I decided to slightly reinvent the wheel and write my very own simd package. How hard could it be?</p>

<p>After doing some preliminary research I discovered that Go uses its own internal assembly language called Plan9. I consider it more of an assembly format than its own language. Plan9 uses target platforms instructions and registers with slight modifications to their names and usage. This means that x86 Plan9 is different then say arm Plan9. Overall, pretty weird stuff. I am not sure why the Go team went down this route. Maybe it simplifies the compiler by having this bespoke assembly format?</p>
<h2 id="plan9-crash-course">Plan9 Crash Course</h2>
<p>I always find learning by example to be the most informative.
So lets Go (haha) over a simple example.</p>
<div><pre><code>example
 ┣━ AddInts_amd64.s
 ┗━ main.go
</code></pre></div>
<p><strong>example/AddInts_amd64.s</strong></p>
<div><pre><code>1  // +build amd64
2
3  TEXT ·AddInts(SB), 4, $0
4      MOVL    left+0(FP), AX
5      MOVL    right+8(FP), BX
6      ADDL    BX, AX
7      MOVL    AX, int+16(FP)
8      RET
</code></pre></div>
<p><strong>LINE 1</strong>: The file contains <code>amd64</code> specific instructions, so we need to include a Go build tag to make sure Go does not try to compile this file for non x86 machines.</p>

<p><strong>LINE 3</strong>: You can think of this line as the functions declaration. <code>TEXT</code> declares that this is a function or text section. <code>·AddInts(SB)</code> specifies our functions name. <code>4</code> represents “NOSPLIT” which we need for some reason. And <code>$0</code> is the size of the function’s stack frame (used for local variables). It’s zero in this case because we can easily fit everything into the registers.</p>

<p><strong>LINE 4 &amp; 5</strong>: Go’s calling convention is to put the function arguments onto the stack. So we <code>MOV</code>e both <code>L</code>ong 32-bit values into the <code>AX</code> and <code>BX</code> registers by dereferencing the frame pointer (<code>FP</code>) with the appropriate offsets. The first argument is stored at offset <code>0</code>. The second argument is stored at offset <code>8</code> (int’s only need 4 bytes but I think Go offsets all arguments by 8 to maintain memory alignment).</p>

<p><strong>LINE 6</strong>: <code>Add</code> the <code>L</code>ong 32-bit value in <code>AX</code> (left) with the <code>L</code>ong 32-bit value in <code>BX</code>. And store the resulting <code>L</code>ong 32-bit value in <code>AX</code>.</p>

<p><strong>LINE 7 &amp; 8</strong>: Go’s calling convention (as far as I can tell) is to put the function return values after its arguments on the stack. So we <code>MOV</code>e the <code>L</code>ong 32-bit values in the <code>AX</code> register onto the stack by dereferencing the frame pointer (<code>FP</code>) with the appropriate offset. Which is 16 in this case.</p>

<p><strong>example/main.go</strong></p>
<div><pre><code>1  package main
2
3  import "fmt"
4
5  func AddInts(left, right) int
6
7  func main() {
8      fmt.Println("1 + 2 = ", AddInts(1, 2))
9  }
</code></pre></div>

<p><strong>LINE 5</strong>: This is the forward functions declaration for our Plan9 function. Since they both share the same name (<code>AddInts</code>) Go will link them together during compilation.</p>

<p><strong>LINE 8</strong>: We can now use our Plan9 function just like any other function.</p>

<h2 id="my-design-plan-9">My Design Plan…. 9</h2>
<p>Now that we are Go assembly experts, let’s get into the details of how I structured the package. <strong><em>My main goal for the package was to offer a thin abstraction layer over arithmetic and bitwise simd operations</em></strong>. Basically, I wanted a set of functions that would allow me to perform simd operations on slices.</p>

<p>Here’s a look at a simplified example of my project structure.</p>
<div><pre><code>example
 ┣━ internal
 ┃   ┗━ addition
 ┃       ┣━ AddInts_amd64.s
 ┃       ┗━ addition_amd64.go
 ┣━ init_amd64.go
 ┗━ example.go
</code></pre></div>
<p>First, we will create a private function pointer with a corresponding public function that wraps around it. By default we will point the private pointer to a software implementation of the function.</p>

<p><strong>example/example.go</strong>:</p>
<div><pre><code> 1  package example
 2
 3  func fallbackAddInts(left, right int) int {
 4     return left + right
 5  }
 6
 7  var addInts func(left, right int) int = fallbackAddInts
 8
 9  func AddInts(left, right int) int {
10      return addInts(left, right)  
11  }
</code></pre></div>
<p>Next, we create an internal package that contains an architecture specific Plan9 implementation of our function.</p>

<p><strong>example/internal/addition/AddInts_amd64.s</strong></p>
<div><pre><code>1  // +build amd64
2
3  TEXT ·AddInts(SB), 4, $0
4      MOVL    left+0(FP), AX
5      MOVL    right+8(FP), BX
6      ADDL    BX, AX
7      MOVL    AX, int+16(FP)
8      RET
</code></pre></div>
<p><strong>example/internal/addition/addition_amd64.go</strong></p>
<div><pre><code>1  // +build amd64
2
3  package addition
4 
5  func AddInts(left, right int) int
</code></pre></div>
<p>Lastly, we will create an init function to configure the private function pointer with our internal packages corresponding Plan9 function.</p>

<p><strong>example/init_amd64.go</strong></p>
<div><pre><code>1  // +build amd64
2
3  package example
4
5  import "example/internal/addition"
6 
7  func init() {
8      addInts = addition.AddInts
9  }
</code></pre></div>
<p><strong>TLDR</strong> The use of a private function pointer combined with architecture specific init functions and packages (using Go build tags) allows our example package to support multiple architectures easily!</p>
<h2 id="some-juicy-simd">Some Juicy Simd</h2>
<p>Now with all that gunk loaded into your mind I will let you decipher some of my x86 simd plan9 functions.</p>

<p><strong><a href="https://github.com/pehringer/simd/blob/main/internal/sse/Supported_amd64.s">simd/internal/sse/Supported_amd64.s</a></strong></p>
<div><pre><code> 1  // +build amd64
 2
 3  // func Supported() bool
 4  TEXT ·Supported(SB), 4, $0
 5    //Check SSE supported.
 6    MOVQ    $1, AX
 7    CPUID
 8    TESTQ   $(1&lt;&lt;25), DX
 9    JZ      sseFalse
10    //sseTrue:
11    MOVB    $1, bool+0(FP)
12    RET
13  sseFalse:
14    MOVB    $0, bool+0(FP)
15    RET
</code></pre></div>

<p><strong><a href="https://github.com/pehringer/simd/blob/main/internal/sse/AddFloat32_amd64.s">simd/internal/sse/AddFloat32_amd64.s</a></strong></p>
<div><pre><code> 1  // +build amd64
 2
 3  // func AddFloat32(left, right, result []float32) int
 4  TEXT ·AddFloat32(SB), 4, $0
 5      //Load slices lengths.
 6      MOVQ    leftLen+8(FP), AX
 7      MOVQ    rightLen+32(FP), BX
 8      MOVQ    resultLen+56(FP), CX
 9      //Get minimum length.
10      CMPQ    AX, CX
11      CMOVQLT AX, CX
12      CMPQ    BX, CX
13      CMOVQLT BX, CX
14      //Load slices data pointers.
15      MOVQ    leftData+0(FP), SI
16      MOVQ    rightData+24(FP), DX
17      MOVQ    resultData+48(FP), DI
18      //Initialize loop index.
19      MOVQ    $0, AX
20  multipleDataLoop:
21      MOVQ    CX, BX
22      SUBQ    AX, BX
23      CMPQ    BX, $4
24      JL      singleDataLoop
25      //Add four float32 values.
26      MOVUPS  (SI)(AX*4), X0
27      MOVUPS  (DX)(AX*4), X1
28      ADDPS   X1, X0
29      MOVUPS  X0, (DI)(AX*4)
30      ADDQ    $4, AX
31      JMP     multipleDataLoop
32  singleDataLoop:
33      CMPQ    AX, CX
34      JGE     returnLength
35      //Add one float32 value.
36      MOVSS   (SI)(AX*4), X0
37      MOVSS   (DX)(AX*4), X1
38      ADDSS   X1, X0
39      MOVSS   X0, (DI)(AX*4)
40      INCQ    AX
41      JMP     singleDataLoop
42  returnLength:
43      MOVQ    CX, int+72(FP)
44      RET
</code></pre></div>
<h2 id="performace-and-the-future">Performace And The Future</h2>
<p>I promise all this gunk is worth it. I made a few charts so you can see the performance difference between a Go software implementation and a Plan9 simd implementation. There is roughly a 200-450% speed up depending on the number of elements. I hope this memo inspires others to use Plan9 and simd in their future projects!</p>

<ul>
  <li><strong>Simd Repo:</strong> <a href="https://github.com/pehringer/simd">github.com/pehringer/simd</a></li>
  <li><strong>Simd Docs:</strong> <a href="https://pkg.go.dev/github.com/pehringer/simd">pkg.go.dev/github.com/pehringer/simd</a></li>
</ul>

<p>Currently, my package only supports 64-bit x86 machines. If there is enough interest, I will throw in some 64-bit ARM support as well!</p>

<p><img src="https://pehringer.info/go_plan9_memo/LargeVectorsFloat32Addition.png" alt="Large Vectors">
<img src="https://pehringer.info/go_plan9_memo/MediumVectorsFloat32Addition.png" alt="Medium Vectors">
<img src="https://pehringer.info/go_plan9_memo/SmallVectorsFloat32Addition.png" alt="Large Vectors"></p>


      
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[You Can Now See the Code That Helped End Apartheid (113 pts)]]></title>
            <link>https://www.wired.com/story/plaintext-you-can-now-see-the-code-that-ended-apartheid/</link>
            <guid>41879072</guid>
            <pubDate>Fri, 18 Oct 2024 13:05:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wired.com/story/plaintext-you-can-now-see-the-code-that-ended-apartheid/">https://www.wired.com/story/plaintext-you-can-now-see-the-code-that-ended-apartheid/</a>, See on <a href="https://news.ycombinator.com/item?id=41879072">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-testid="ArticlePageChunks"><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>John Graham-Cumming doesn’t ping me often, but when he does I pay attention. His day job is the CTO of the security giant Cloudflare, but he is also a lay historian of technology, guided by a righteous compass. He might be best known for successfully leading a campaign to force the UK government to <a href="https://www.wired.com/2014/11/the-man-who-made-the-uk-say-im-sorry-for-what-we-did-to-turing/">apologize to the legendary computer scientist</a> Alan Turing for prosecuting him for homosexuality and essentially harassing him to death. So when he DM’d me to say that he had “a hell of a story”—promising “one-time pads! 8-bit computers! Flight attendants smuggling floppies full of random numbers into South Africa!”—I responded.</p><p>The story he shared centers around Tim Jenkin, a former anti-apartheid activist. Jenkin grew up “as a regular racist white South African,” as he described it when I contacted him. But when Jenkin traveled abroad—beyond the filters of the police-state government—he learned about the brutal oppression in his home country, and in 1974 he offered his help to the African National Congress, the banned organization trying to overthrow the white regime. He returned to South Africa and engaged as an activist, distributing pamphlets. He had always had a penchant for gadgetry and was skilled in creating “<a href="https://www.youtube.com/watch?v=wV9TTU5XCt8">leaflet bombs</a>”—devices placed on the street that, when triggered, shot anti-government flyers into the air to be spread by the wind. Unfortunately, he says, in 1978 “we got nicked.” Jenkin was sentenced to 12 years in prison.</p><p>Jenkin has a hacker mind—even as a kid he was fiddling with gadgets, and as a teen he took apart and reassembled his motorcycle. Those skills proved his salvation. Working in the woodshop, he crafted mockups of the large keys that could unlock the prison doors. After months of surreptitious carpentry and testing, he and two colleagues walked out of the prison and eventually got to London.</p><p>It was the early 1980s, and the ANC’s efforts were flagging. The problem was communications. Activists, especially ANC leaders, were under constant surveillance by South African officials. “The decision was taken to get leadership figures back into the country to be closer to the activists, but to do that they still had to be in touch with the outside,” says Jenkin, who was given a mandate to solve the problem. Rudimentary methods—like invisible ink and sending codes by touch-tone dials—weren’t terribly effective. They wanted a communication system that was computerized and unbreakable. The plan was dubbed Operation Vula.</p><p>Working in his small council flat in the Islington neighborhood in London—nicknamed GCHQ, after the top-secret British intelligence agency—Jenkins set about learning to code. It was the early days of PCs, and the equipment by today’s standards was laughably weak. Breakthroughs in public key cryptography had come out a few years earlier, but there was no easily available implementation. And Jenkin was suspicious of prepackaged cryptosystems, fearing they might harbor back doors that would provide governments access.</p><p>Using a <a data-offer-url="https://www.reddit.com/r/retrobattlestations/comments/tzr11x/1987_toshiba_t1000_laptop_exchanged_for_a_500g_of/" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.reddit.com/r/retrobattlestations/comments/tzr11x/1987_toshiba_t1000_laptop_exchanged_for_a_500g_of/&quot;}" href="https://www.reddit.com/r/retrobattlestations/comments/tzr11x/1987_toshiba_t1000_laptop_exchanged_for_a_500g_of/" rel="nofollow noopener" target="_blank">Toshiba T1000 PC</a> running an early version of MS-DOS, Jenkin wrote a system using the most secure form of crypto, a one-time pad, which scrambles messages character by character using a shared key that’s as long as the message itself. Using the program, an activist could type a message on a computer and encrypt it with a floppy disk containing the one-time pad of random numbers. The activist could then convert the encrypted text into audio signals and play them to a tape recorder, which would store them. Then, using a public phone, the activist could call, say, ANC leaders in London or Lusaka, Zambia, and play the tape. The recipient would use a modem with an acoustic coupler to capture the sounds, translate them back into digital signals, and decrypt the message with Jenkin’s program.</p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>One potential problem was getting the materials—the disks and computers—to Africa. The solution, as Graham-Cumming noted, was accomplished by enlisting a sympathetic Dutch flight attendant who routinely flew to Pretoria. “She didn't know what she was taking in, because everything was packaged up; we didn't talk about it at all,” says Jenkin. “She just volunteered to take the stuff, and she took in the laptops and acoustic modems and those sorts of things.”</p><p>Operation Vula gave the ANC the confidence to sneak some leaders back into the country to supervise anti-government actions, coordinating efforts with the top leaders abroad. The Vula coding system even made it possible for the ANC brain trust to establish contact with the incarcerated Nelson Mandela. He received local visitors who came in carrying books that hid the decrypted dispatches—another product of Jenkin’s MacGyver-esque powers. “We smuggled these specially doctored books—innocuous looking books, maybe about flowers or travel—with a secret hidden compartment in the cover,” says Jenkin. “If you knew how to do it, you could extract the message and put another one back in there.”</p><p>Jenkin’s system allowed countless messages to be sent securely, as the ANC reached closer to its goal of defeating apartheid. He is unaware of any instance where the authorities decoded a single communication. When the ANC was ultimately unbanned in 1991, it credited Operation Vula as a key factor in its victory. In April 1994, Nelson Mandela became the president of South Africa.</p><p>You might be thinking that Jenkin’s story is so amazing that someone should make a movie out of it. Someone already has—focusing on the prison break. It’s called <a data-offer-url="https://www.imdb.com/title/tt5797184/" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.imdb.com/title/tt5797184/&quot;}" href="https://www.imdb.com/title/tt5797184/" rel="nofollow noopener" target="_blank"><em>Escape From Pretoria</em></a> and stars Daniel Radcliffe as Jenkin. There’s also a <a href="https://www.youtube.com/watch?v=zSOTVfNe54A">short documentary</a> about Jenkin and Operation Vula. But until this year one thing had not been documented—Jenkin’s artisanal cryptosystem.</p><p>That’s where Graham-Cumming enters the picture. Years ago, he’d heard about Operation Vula and found the story fascinating. Earlier this year, he came across a mention of it and wondered—what happened to the code? He felt it should be open-sourced and uploaded to GitHub for all to see and play with. So he contacted Jenkin—and heard a sad story.</p><p>When Jenkin returned to South Africa in 1992, he had been worried about taking his tools with him, as some elements of the operation were still ongoing. “I didn't want to just walk in with all this communication equipment and have this coding wind up in their hands, so I compressed everything into single files, zipped it with passwords, and brought in the disks like that.” He had no problem at the border. Eventually, people felt safe meeting face-to-face and no longer needed Jenkin’s system. “Then life caught up with me,” he says. “I got married, had kids and all that. And one day, I thought, 'Let me have a look at this thing again.’ And I couldn't remember the password.” Over the years, Jenkin and others tried to break the encryption, and failed.</p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>Rather than being disappointed, Graham-Cumming was thrilled. “I’ve got to have a go at this,” he told himself, and asked for the files.</p><p>When Graham-Cumming received them on May 20, he was encouraged that they were compressed and encrypted in the old encrypted PKZIP format. It had a known flaw you could exploit if you knew some part of the original unencrypted message. But you’d have to know where in the zipped file that text is represented. He asked if Jenkin had any unencrypted versions of the code files, and indeed there were a few. But they turned out to be different from what was in the zip file, so they weren’t immediately helpful.</p><p>Graham-Cumming took a few days to think out his next attack. He realized the zip file contained another zip file, and that since all he needed was the right original text for a specific part of the scrambled text, his best chance was using the first file name mentioned in the zip within the zip. “You could predict the very first bit of that zip file using that name,” he says. “And I knew the names he was using. I was like, ‘Oh, I'm gonna try out a name,’ and I wrote a little program to try it.” (This is a much simplified explanation—Graham-Cumming provides more details <a data-offer-url="https://blog.jgc.org/2024/09/cracking-old-zip-file-to-help-open.html" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://blog.jgc.org/2024/09/cracking-old-zip-file-to-help-open.html&quot;}" href="https://blog.jgc.org/2024/09/cracking-old-zip-file-to-help-open.html" rel="nofollow noopener" target="_blank">in a blog post</a>.)</p><p>On May 29, Graham-Cumming ran the program and stepped away to eat a breakfast of scrambled eggs. Twenty-three minutes later, the program finished. He’d broken the encryption and unzipped the file. The workings of Jenkin’s cryptosystem were exposed. It had been nine days since he first exchanged emails with Jenkin.</p><p>The next step was to actually run the code, which Graham-Cumming did using an emulator of the ancient version of MS-DOS used in the Toshiba T1000. It worked perfectly. Jenkin had feared that a professional coder like Graham-Cumming might find his work hopelessly amateurish, but his reaction was quite the opposite. “I’m pretty amazed, given the limitations he had in terms of knowledge, in terms of hardware, that they built something that was pretty credible, especially for the time,” says Graham-Cumming. Even more impressive: It did a job in the wild.</p><p>Jenkin, who has spent the past few decades in South Africa as a computer programmer and web designer, has now <a data-offer-url="https://github.com/Vulacode" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://github.com/Vulacode&quot;}" href="https://github.com/Vulacode" rel="nofollow noopener" target="_blank">uploaded the code</a> to GitHub and open-sourced it. He plans to unzip and upload some of the messages exchanged in the ’80s that helped bring down apartheid.</p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>“The code itself is a historical document,” says Graham-Cumming. “It wasn't like, ‘Oh, I'm going to create some theoretical crypto system.’ It was like, ‘I’ve got real activists, real people in danger. I need real communications, and I need to be practical.’” It’s also, as he promised me, a hell of a story.</p><figure></figure><p id="timetravel" tabindex="-1"><h2>Time Travel</h2></p><p>In November 2014, I <a href="https://www.wired.com/2014/11/the-man-who-made-the-uk-say-im-sorry-for-what-we-did-to-turing/">wrote for Backchannel</a> about Graham-Cumming’s campaign to evoke an apology from the UK for its shameful actions against Alan Turing.</p><p><em>On September 10, Graham-Cumming was sick with the flu. He stayed in bed most of the day. Late in the afternoon, he dragged himself to his computer to check his email. Sitting there, in rumpled gym garb, he found the following message from one Kirsty McNeill, a person he did not know. The email signature, as well as the email domain, indicated an association with 10 Downing Street.</em></p><p><em>Graham-Cumming, even in his flu-addled state, knew that this might just be some prank. It wasn’t hard to spoof an address, even from the Prime Minister’s office. He Googled the telephone number in the signature. It was the switchboard to 10 Downing Street. He dialed, asked for Ms. McNeill, and was quickly connected. “We are doing the apology tonight,” she told him. Was it all right if she read him the text? Somewhat stunned, he listened and approved.</em></p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p><em>Ten minutes later, his iPhone rang. “Hello, John, this is [Prime Minister] Gordon Brown,” came a familiar voice. “I think you know why I’m calling you.” Over the next few minutes the two chatted. Prime Minister Brown was not a politician of the oozing Tony Blair/Bill Clinton “feel your pain” school. Graham-Cumming admits to some of the same social awkwardness. So the two of them stumbled through a conversation in which Brown confessed that until the petition he had not realized the government’s role in persecuting and prosecuting one of its greatest war heroes. Within a half an hour, 10 Downing released the apology.</em></p><figure></figure><p id="askme" tabindex="-1"><h2>Ask Me One Thing</h2></p><p>Jean-Daniel asks, “Can we train AI to spot and flag AI-generated content automatically? If so can we incorporate that as a default in search engines, phones, and PCs?”</p><p>Thanks for the question, Jean-Daniel. You clearly understand that the messages, videos, and documents that come before us may or may not be generated by algorithms and not humans. There is a natural preference to know if you are on the receiving end of something that came from a living breathing person or a soulless robot. The state-of-the-art large language models do have specific tells. (For one thing, they don’t express themselves creatively as a really smart human can.) It’s reasonable to think that an excellent AI-powered sniffer might be able to root out the fakes. But as AI gets better, identifying its output gets harder. Also, once your AI detector figures out the giveaways, those building the models would probably then share those secrets with their products, and an arms race would ensue.</p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>Even if you did have a great way to tell what was algorithm and what was human, it would probably be a bad idea to block the AI stuff. All the companies making productivity apps are providing tools for people to use AI for communications, writing, illustrating, and even video production. You might not like AI, but if you block emails and documents that use it you’ll probably miss a lot of meetings and important information.</p><p>Instead of labeling which things are made by AI, I think it’s more practical to adopt techniques that affirm that something came from actual people. For instance, the Authors Guild (disclosure: I’m on the the council) has recently <a data-offer-url="https://authorsguild.org/news/ag-partners-with-created-by-humans-to-empower-authors-in-ai-era/#:~:text=NEW%20YORK,%20October%209,%202024,authors'%20rights%20in%20the%20age" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://authorsguild.org/news/ag-partners-with-created-by-humans-to-empower-authors-in-ai-era/#:~:text=NEW%20YORK,%20October%209,%202024,authors'%20rights%20in%20the%20age&quot;}" href="https://authorsguild.org/news/ag-partners-with-created-by-humans-to-empower-authors-in-ai-era/#:~:text=NEW%20YORK,%20October%209,%202024,authors'%20rights%20in%20the%20age" rel="nofollow noopener" target="_blank">started a program</a> where books can earn a sticker that says “Created by Humans.” Systems like this might help AI-haters like you to limit your consumption to the dwindling percentage of content that’s not output from an LLM.</p><p><em>You can submit questions to</em> <em><a href="mailto:mail@wired.com?subject=ASK%20LEVY">mail@wired.com</a>. Write <strong>ASK LEVY</strong> in the subject line.</em></p><figure></figure><h2>End Times Chronicle</h2><p>When the Northern Lights are <a href="https://www.youtube.com/watch?v=oBhPW9Gr77c">seen in the night skies of New Mexico,</a> can we still call them northern?</p><figure></figure><h2>Last but Not Least</h2><p><a href="https://www.wired.com/story/big-interview-marissa-mayer-yahoo-sunshine-ai/">Marissa Mayer explains</a> how she found sunshine after leaving Yahoo.</p><p><a href="https://www.wired.com/story/jd-vance-adviser-posted-drug-use-reddit-cocaine-gas-station-heroin/">A key JD Vance adviser touted his addiction to “gas station heroin</a>” and called his boss “a Trump boot licker.” Even dumber: He didn’t erase his social media posts when he took the job.</p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>National Security Adviser Jack Sullivan is <a href="https://www.wired.com/story/jake-sullivan-china-tech-profile/">waging a quiet war</a> with China.</p><p>Oh no! It’s the <a href="https://www.wired.com/story/gadget-lab-podcast-662/">last episode of WIRED’S Gadget Lab podcast</a>! But don’t worry, and for heaven’s sake don’t unsubscribe—a new one is coming soon.</p><figure></figure><p><em>Don't miss future subscriber-only editions of this column.</em> <a href="https://subscribe.wired.com/subscribe/splits/wired/WIR_STEVEN_LEVY?source=EDT_WIR_ARTICLE_SUBSCRIBE_LINK_0_STEVEN_LEVY_ZZ"><em><strong>Subscribe to WIRED (50% off for Plaintext readers)</strong></em></a> <em>today.</em></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple Passwords’ Generated Strong Password Format (210 pts)]]></title>
            <link>https://rmondello.com/2024/10/07/apple-passwords-generated-strong-password-format/</link>
            <guid>41878290</guid>
            <pubDate>Fri, 18 Oct 2024 11:12:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rmondello.com/2024/10/07/apple-passwords-generated-strong-password-format/">https://rmondello.com/2024/10/07/apple-passwords-generated-strong-password-format/</a>, See on <a href="https://news.ycombinator.com/item?id=41878290">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="entry-2699">
										<blockquote><p>This post briefly summarizes part of a talk I gave in 2018. All information in this post has been accessible on YouTube since then. There is no new information or news in this post.</p></blockquote>
<p>On Mastodon recently, jsveningsson@mastodon.social <a href="https://mastodon.social/@jsveningsson/113238174790723066">asked me</a>:</p>
<blockquote>
<p>Having an annoying argument on Threads about Apple generated passwords. Every iOS Password (like hupvEw-fodne1-qabjyg) seems to be constructed from gibberish two-syllable “words”. Hup-vew, fod-ne and qab-jyg above. Is this all in my head? Am I going crazy? Is the two-syllable thing by design or random?</p>
</blockquote>
<p>This is not in their head, they are not “going crazy”, and the two-syllable thing is by design. Let me explain!</p>
<p>I gave a talk in 2018 called, “<a href="https://www.youtube.com/watch?v=-0dwX2kf6Oc" target="_blank" rel="noopener">How iOS Encourages Healthy Password Practices</a>”, that told the story of this generated password format. Although the talk is a bit dated now, it also covers other topics related to password management that, given that you’re reading this post, you might be interested in.</p>
<p>I explain the thinking behind the generated strong password format <a href="https://www.youtube.com/watch?v=-0dwX2kf6Oc&amp;t=1110s" target="_blank" rel="noopener">at 18 minutes and 30 seconds into the video</a>:</p>
<p><img decoding="async" src="https://rmondello.com/blog/wp-content/uploads/2024/10/generated-password.png"></p>
<blockquote>
<p>To make these passwords easier to type on suboptimal keyboard layouts like my colleague’s game controller, where the mode switching might be difficult, these new passwords are actually dominated by lowercase characters. And to make it easier to short-term have in your head little chunks of it to bring over to the other device, the passwords are based on syllables. That’s consonant, vowel, consonant patterns. With these considerations put together, in our experience, these passwords are actually a lot easier to type on a foreign, weird keyboard, in the rare instances where that might be needed for some of our users.</p>
<p>And we weren’t going to make any changes to our password format unless we can guarantee that it was as strong or stronger than our old format. So if you want to talk in terms of Shannon entropy once again, these new passwords have 71 bits of entropy, up from the 69 from the previous format. And a little tidbit for folks who are trying to match our math — [note that] we actually have a dictionary of offensive terms on device that we filter these generated passwords against and we’ll skip over passwords that we generate that contain those offensive substrings.</p>
<p>…</p>
<p>So these new passwords are 20 characters long. They contain the standard stuff, an uppercase character. They’re dominated by lowercase. We chose a symbol to use, which is hyphen. We put two of them in there, and a single [digit]. We picked this length and the mix of characters to be compatible with a good mix of existing websites.</p>
<p>And a few more details: These aren’t real syllables as defined by any language. We have a certain number of characters we consider to be consonants, which is 19. Another set we consider to be vowels, which is six. And we pick them at random. There are five positions for where the digit can go, which is on either side of the hyphen or at the end of the password.</p>
</blockquote>
<p>So yes, the passwords that Apple Passwords generates do contain gibberish two-syllable “words”. The syllables help them to be memorable briefly, but still not memorizable. I hope this helps!</p>
				</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Microsoft and OpenAI's close partnership shows signs of fraying (114 pts)]]></title>
            <link>https://www.nytimes.com/2024/10/17/technology/microsoft-openai-partnership-deal.html</link>
            <guid>41878281</guid>
            <pubDate>Fri, 18 Oct 2024 11:11:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2024/10/17/technology/microsoft-openai-partnership-deal.html">https://www.nytimes.com/2024/10/17/technology/microsoft-openai-partnership-deal.html</a>, See on <a href="https://news.ycombinator.com/item?id=41878281">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2024/10/17/technology/microsoft-openai-partnership-deal.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Net 9.0 LINQ Performance Improvements (135 pts)]]></title>
            <link>https://blog.ndepend.com/net-9-0-linq-performance-improvements/</link>
            <guid>41878095</guid>
            <pubDate>Fri, 18 Oct 2024 10:39:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.ndepend.com/net-9-0-linq-performance-improvements/">https://blog.ndepend.com/net-9-0-linq-performance-improvements/</a>, See on <a href="https://news.ycombinator.com/item?id=41878095">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-6272">
	
	<!-- .entry-header -->

	<div>
		<p><span>October 17, 2024</span> <span> </span> <span>5 minutes read </span></p><p><a href="https://blog.ndepend.com/wp-content/uploads/Alternate-Lookup-for-Dictionary-and-HashSet-in-.NET-9-1.png"><img fetchpriority="high" decoding="async" src="https://blog.ndepend.com/wp-content/uploads/Alternate-Lookup-for-Dictionary-and-HashSet-in-.NET-9-1.png" alt=".NET 9.0 LINQ Performance Improvements" width="1230" height="722" srcset="https://blog.ndepend.com/wp-content/uploads/Alternate-Lookup-for-Dictionary-and-HashSet-in-.NET-9-1.png 1230w, https://blog.ndepend.com/wp-content/uploads/Alternate-Lookup-for-Dictionary-and-HashSet-in-.NET-9-1-300x176.png 300w, https://blog.ndepend.com/wp-content/uploads/Alternate-Lookup-for-Dictionary-and-HashSet-in-.NET-9-1-1024x601.png 1024w, https://blog.ndepend.com/wp-content/uploads/Alternate-Lookup-for-Dictionary-and-HashSet-in-.NET-9-1-768x451.png 768w" sizes="(max-width: 1230px) 100vw, 1230px"></a> NET 9.0 brings significant improvements to LINQ performance, with some scenarios showing remarkable gains. Let’s take a closer look at what’s driving these enhancements. The lessons learned will be relevant to your code.</p>
<div id="ez-toc-container">

<nav><ul><li><a href="#Iterating_with_Span_when_Possible" title="Iterating with Span<T> when Possible">Iterating with Span&lt;T&gt; when Possible</a><ul><li><a href="#The_TryGetSpan_Method" title="The TryGetSpan() Method">The TryGetSpan() Method</a></li><li><a href="#TryGetSpan_Callers" title="TryGetSpan() Callers">TryGetSpan() Callers</a></li></ul></li><li><a href="#Specialized_Iterators" title="Specialized Iterators">Specialized Iterators</a><ul><li><a href="#The_Astute" title="The Astute">The Astute</a></li><li><a href="#The_implementation_Iterator_and_its_Derived_Class" title="The implementation: Iterator<T> and its Derived Class">The implementation: Iterator&lt;T&gt; and its Derived Class</a></li><li><a href="#Case_Study_ListWhereSelectIterator" title="Case Study: ListWhereSelectIterator<TSource, TResult>">Case Study: ListWhereSelectIterator&lt;TSource, TResult&gt;</a></li><li><a href="#Case_Study_IListSkipTakeIterator" title="Case Study: IListSkipTakeIterator<TSource>">Case Study: IListSkipTakeIterator&lt;TSource&gt;</a></li></ul></li><li><a href="#Conclusion" title="Conclusion">Conclusion</a></li></ul></nav></div>
<h2><span id="Iterating_with_Span_when_Possible"></span>Iterating with Span&lt;T&gt; when Possible<span></span></h2>
<p>Let’s start by running this benchmark on .NET 8 versus .NET 9.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-67124f6522f22762917268" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					<div><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p></div>
				</td>
						<td><div><p><span>using </span><span>BenchmarkDotNet</span><span>.</span><span>Configs</span><span>;</span></p><p><span>using </span><span>BenchmarkDotNet</span><span>.</span><span>Running</span><span>;</span></p><p><span>using </span><span>BenchmarkDotNet</span><span>.</span><span>Attributes</span><span>;</span></p><p><span>using </span><span>BenchmarkDotNet</span><span>.</span><span>Jobs</span><span>;</span></p><p><span>BenchmarkRunner</span><span>.</span><span>Run</span><span>&lt;</span><span>Benchmarks</span><span>&gt;</span><span>(</span><span>)</span><span>;</span></p><p><span>[</span><span>MemoryDiagnoser</span><span>]</span></p><p><span>[</span><span>HideColumns</span><span>(</span><span>"StdDev"</span><span>,</span><span> </span><span>"Median"</span><span>,</span><span> </span><span>"Job"</span><span>,</span><span> </span><span>"RatioSD"</span><span>,</span><span> </span><span>"Error"</span><span>,</span><span> </span><span>"Gen0"</span><span>,</span><span> </span><span>"Alloc Ratio"</span><span>)</span><span>]</span></p><p><span>[</span><span>SimpleJob</span><span>(</span><span>RuntimeMoniker</span><span>.</span><span>Net80</span><span>,</span><span> </span><span>baseline</span><span>:</span><span> </span><span>true</span><span>)</span><span>]</span></p><p><span>[</span><span>SimpleJob</span><span>(</span><span>RuntimeMoniker</span><span>.</span><span>Net90</span><span>)</span><span>]</span></p><p><span>public</span><span> </span><span>class</span><span> </span><span>Benchmarks</span><span> </span><span>{</span></p><p><span>&nbsp;&nbsp; </span><span>private</span><span> </span><span>IEnumerable</span><span>&lt;</span><span>int</span><span>&gt;</span><span> </span><span>_array</span><span> </span>=<span> </span><span>Enumerable</span><span>.</span><span>Range</span><span>(</span><span>1</span><span>,</span><span> </span><span>10_000</span><span>)</span><span>.</span><span>ToArray</span><span>(</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>int</span><span> </span><span>Count</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_array</span><span>.</span><span>Count</span><span>(</span><span>i</span><span> </span>=<span>&gt;</span><span> </span><span>i</span><span> </span><span>&gt;</span><span> </span><span>0</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>bool</span><span> </span><span>All</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_array</span><span>.</span><span>All</span><span>(</span><span>i</span><span> </span>=<span>&gt;</span><span> </span><span>i</span><span> </span><span>&gt;</span><span> </span><span>500</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>bool</span><span> </span><span>Any</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_array</span><span>.</span><span>Any</span><span>(</span><span>i</span><span> </span>=<span>&gt;</span><span> </span><span>i</span><span> </span>==<span> </span><span>9_999</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>int</span><span> </span><span>First</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_array</span><span>.</span><span>First</span><span>(</span><span>i</span><span> </span>=<span>&gt;</span><span> </span><span>i</span><span> </span><span>&gt;</span><span> </span><span>9_000</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>int</span><span> </span><span>Single</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_array</span><span>.</span><span>Single</span><span>(</span><span>i</span><span> </span>=<span>&gt;</span><span> </span><span>i</span><span> </span>==<span> </span><span>9_999</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>int</span><span> </span><span>Last</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_array</span><span>.</span><span>Last</span><span>(</span><span>i</span><span> </span>=<span>&gt;</span><span> </span><span>i</span><span> </span><span>&gt;</span><span> </span><span>0</span><span>)</span><span>;</span></p><p><span>}</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0017 seconds] -->


<!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-67124f6522f27054400802" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					
				</td>
						<td><div><p><span>&lt;</span><span>Project </span><span>Sdk</span>=<span>"Microsoft.NET.Sdk"</span><span>&gt;</span></p><p><span>&nbsp;&nbsp;</span><span>&lt;</span><span>PropertyGroup</span><span>&gt;</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>OutputType</span><span>&gt;</span><span>Exe</span><span>&lt;</span>/<span>OutputType</span><span>&gt;</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>TargetFrameworks</span><span>&gt;</span><span>net8</span><span>.</span><span>0</span><span>;</span><span>net9</span><span>.</span><span>0</span><span>&lt;</span>/<span>TargetFrameworks</span><span>&gt;</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>ImplicitUsings</span><span>&gt;</span><span>enable</span><span>&lt;</span>/<span>ImplicitUsings</span><span>&gt;</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>Nullable</span><span>&gt;</span><span>enable</span><span>&lt;</span>/<span>Nullable</span><span>&gt;</span></p><p><span>&nbsp;&nbsp;</span><span>&lt;</span>/<span>PropertyGroup</span><span>&gt;</span></p><p><span>&nbsp;&nbsp;</span><span>&lt;</span><span>ItemGroup</span><span>&gt;</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>PackageReference </span><span>Include</span>=<span>"BenchmarkDotNet"</span><span> </span><span>Version</span>=<span>"0.14.0"</span><span> </span>/<span>&gt;</span></p><p><span>&nbsp;&nbsp;</span><span>&lt;</span>/<span>ItemGroup</span><span>&gt;</span></p><p><span>&lt;</span>/<span>Project</span><span>&gt;</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0003 seconds] -->
<p>Here are the results, which clearly speak for themselves.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-67124f6522f29360496698" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					<div><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p></div>
				</td>
						<td><div><p><span>|</span><span> </span><span>Method</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span> </span><span>Runtime</span><span>&nbsp;&nbsp;</span><span>|</span><span> </span><span>Mean</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span> </span><span>Ratio</span><span> </span><span>|</span><span> </span><span>Allocated</span><span> </span><span>|</span></p><p><span>|</span>-----------<span> </span><span>|</span>---------<span> </span><span>|</span>--------------<span>:</span><span>|</span>------<span>:</span><span>|</span>----------<span>:</span><span>|</span></p><p><span>|</span><span> </span><span>LinqCount</span><span>&nbsp;&nbsp;</span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span> </span><span>16</span><span>,</span><span>198.490</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>1.00</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>32</span><span> </span><span>B</span><span> </span><span>|</span></p><p><span>|</span><span> </span><span>LinqCount</span><span>&nbsp;&nbsp;</span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>3</span><span>,</span><span>043.563</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>0.19</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span></p><p><span>|</span><span> </span><span>LinqAll</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>10.588</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>1.00</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>32</span><span> </span><span>B</span><span> </span><span>|</span></p><p><span>|</span><span> </span><span>LinqAll</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>2.562</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>0.24</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span></p><p><span>|</span><span> </span><span>LinqAny</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span> </span><span>17</span><span>,</span><span>096.735</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>1.00</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>32</span><span> </span><span>B</span><span> </span><span>|</span></p><p><span>|</span><span> </span><span>LinqAny</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>2</span><span>,</span><span>483.927</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>0.15</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span></p><p><span>|</span><span> </span><span>LinqFirst</span><span>&nbsp;&nbsp;</span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span> </span><span>15</span><span>,</span><span>289.747</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>1.00</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>32</span><span> </span><span>B</span><span> </span><span>|</span></p><p><span>|</span><span> </span><span>LinqFirst</span><span>&nbsp;&nbsp;</span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>2</span><span>,</span><span>243.341</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>0.15</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span></p><p><span>|</span><span> </span><span>LinqSingle</span><span> </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span> </span><span>21</span><span>,</span><span>684.114</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>1.00</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>32</span><span> </span><span>B</span><span> </span><span>|</span></p><p><span>|</span><span> </span><span>LinqSingle</span><span> </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>4</span><span>,</span><span>884.329</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>0.23</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span></p><p><span>|</span><span> </span><span>LinqLast</span><span>&nbsp;&nbsp; </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>15.967</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>1.00</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span> </span><span>LinqLast</span><span>&nbsp;&nbsp; </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>6.918</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>0.43</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0013 seconds] -->

<h3><span id="The_TryGetSpan_Method"></span>The TryGetSpan() Method<span></span></h3>
<p>In the post <a href="https://blog.ndepend.com/c-array-and-list-fastest-loop" target="_blank" rel="noopener">C# Array and List Fastest Loop</a>, we demonstrated that using a <code>Span&lt;T&gt;</code> for iterating over an array is faster than regular <code>for</code> and <code>foreach</code> loops. In the benchmark above, the performance enhancement is primarily due to the use of the method <code><a href="https://github.com/dotnet/runtime/blob/main/src/libraries/System.Linq/src/System/Linq/Enumerable.cs#L40" target="_blank" rel="noopener">TryGetSpan()</a></code>. If the enumerable being iterated is an array or list, the method <code>TryGetSpan()</code> returns a <code>ReadOnlySpan&lt;T&gt;</code> for faster iteration. Here is the code extracted from <code>TryGetSpan()</code> to test if the <code>source</code> to enumerate is an array or a list, and then to obtain the span from the array or the list.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-67124f6522f2a289099695" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					
				</td>
						<td><div><p><span>&nbsp;&nbsp; </span><span>if</span><span> </span><span>(</span><span>source</span><span>.</span><span>GetType</span><span>(</span><span>)</span><span> </span>==<span> </span><span>typeof</span><span>(</span><span>TSource</span><span>[</span><span>]</span><span>)</span><span>)</span><span> </span><span>{</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>span</span><span> </span>=<span> </span><span>Unsafe</span><span>.</span><span>As</span><span>&lt;</span><span>TSource</span><span>[</span><span>]</span><span>&gt;</span><span>(</span><span>source</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>}</span><span> </span><span>else</span><span> </span><span>if</span><span> </span><span>(</span><span>source</span><span>.</span><span>GetType</span><span>(</span><span>)</span><span> </span>==<span> </span><span>typeof</span><span>(</span><span>List</span><span>&lt;</span><span>TSource</span><span>&gt;</span><span>)</span><span>)</span><span>{</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>span</span><span> </span>=<span> </span><span>CollectionsMarshal</span><span>.</span><span>AsSpan</span><span>(</span><span>Unsafe</span><span>.</span><span>As</span><span>&lt;</span><span>List</span><span>&lt;</span><span>TSource</span><span>&gt;</span><span>&gt;</span><span>(</span><span>source</span><span>)</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>}</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0003 seconds] -->
<p>To me, this code does not look optimized.</p>
<ul>
<li><code>source.GetType()</code> is called twice!</li>
<li>Why not try to cast <code>source</code> to <code>TSource[]</code> or <code>List&lt;TSource&gt;</code> only once and then test the nullity of the obtained reference and use it?</li>
</ul>
<p>This code was written by Stephen Toub and his team, who are THE .NET performance experts. They have a deep understanding of the C# compiler and JIT compiler optimizations, so it’s clear that this approach is the optimal one. The good news is that you can reuse this code in your own performance-critical code. And there is a lesson: In today’s highly optimized .NET stack, micro-optimizations in code are not obvious at all. Therefore, the advice to avoid premature optimization has never been more relevant.</p>
<p>One final note: <code>List&lt;TSource&gt;</code> internally references an array. When the list’s capacity needs to grow or shrink, a new array is created and then referenced. The call to <code>CollectionsMarshal.AsSpan(Unsafe.As&lt;List&lt;TSource&gt;&gt;(source))</code>&nbsp;retrieves a <code>Span&lt;TSource&gt;</code> from this internal array. Do you see the risk? If the list’s capacity changes somehow, the array obtained through this method might become invalid.</p>
<p>Definitely, the class <code>System.Runtime.CompilerServices.Unsafe</code>&nbsp;is well-named.</p>
<h3><span id="TryGetSpan_Callers"></span>TryGetSpan() Callers<span></span></h3>
<p>Now, let’s examine which methods call <code>TryGetSpan()</code>. Using NDepend, we scanned the assembly located at <code>C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.0-rc.1.24431.7\System.Linq.dll</code>. From the <code>TryGetSpan()</code> method, <a href="https://www.ndepend.com/docs/cqlinq-features#Querying-the-Code-Architecture" target="_blank" rel="noopener">we generated a code query</a> to identify both direct and indirect callers. We then exported the 56 matched methods to the <a href="https://www.ndepend.com/docs/visual-studio-dependency-graph" target="_blank" rel="noopener">dependency graph</a>. This analysis reveals that many standard <code>Enumerable</code> methods attempt to iterate over a span when the collection is an array or a list.</p>
<p>However, since holding the internal array of a list obtained via <code>CollectionsMarshal.AsSpan()</code> is not a safe option (as mentioned earlier), certain <code>Enumerable</code> operations that defer iteration (like when using the <code>yield</code> C# keyword) cannot rely on this optimization.</p>
<p><a href="https://blog.ndepend.com/wp-content/uploads/Call-Graph-To-TryGetSpan.png"><img decoding="async" src="https://blog.ndepend.com/wp-content/uploads/Call-Graph-To-TryGetSpan.png" alt="Call Graph To TryGetSpan" width="1143" height="899" srcset="https://blog.ndepend.com/wp-content/uploads/Call-Graph-To-TryGetSpan.png 1143w, https://blog.ndepend.com/wp-content/uploads/Call-Graph-To-TryGetSpan-300x236.png 300w, https://blog.ndepend.com/wp-content/uploads/Call-Graph-To-TryGetSpan-1024x805.png 1024w, https://blog.ndepend.com/wp-content/uploads/Call-Graph-To-TryGetSpan-768x604.png 768w" sizes="(max-width: 1143px) 100vw, 1143px"></a></p>
<h2><span id="Specialized_Iterators"></span>Specialized Iterators<span></span></h2>
<p>Now let’s run the following benchmark found into this PR: <a href="https://github.com/dotnet/runtime/pull/98969" target="_blank" rel="noopener">Consolidate LINQ’s internal IIListProvider/IPartition into base Iterator class</a></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-67124f6522f32199072912" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					<div><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p></div>
				</td>
						<td><div><p><span>using </span><span>Perfolizer</span><span>.</span><span>Horology</span><span>;</span></p><p><span>using </span><span>BenchmarkDotNet</span><span>.</span><span>Configs</span><span>;</span></p><p><span>using </span><span>BenchmarkDotNet</span><span>.</span><span>Running</span><span>;</span></p><p><span>using </span><span>BenchmarkDotNet</span><span>.</span><span>Attributes</span><span>;</span></p><p><span>using </span><span>BenchmarkDotNet</span><span>.</span><span>Jobs</span><span>;</span></p><p><span>BenchmarkRunner</span><span>.</span><span>Run</span><span>&lt;</span><span>Benchmarks</span><span>&gt;</span><span>(</span><span>)</span><span>;</span></p><p><span>[</span><span>MemoryDiagnoser</span><span>]</span></p><p><span>[</span><span>HideColumns</span><span>(</span><span>"StdDev"</span><span>,</span><span> </span><span>"Median"</span><span>,</span><span> </span><span>"Job"</span><span>,</span><span> </span><span>"RatioSD"</span><span>,</span><span> </span><span>"Error"</span><span>,</span><span> </span><span>"Gen0"</span><span>,</span><span> </span><span>"Alloc Ratio"</span><span>)</span><span>]</span></p><p><span>[</span><span>SimpleJob</span><span>(</span><span>RuntimeMoniker</span><span>.</span><span>Net80</span><span>,</span><span> </span><span>baseline</span><span>:</span><span> </span><span>true</span><span>)</span><span>]</span></p><p><span>[</span><span>SimpleJob</span><span>(</span><span>RuntimeMoniker</span><span>.</span><span>Net90</span><span>)</span><span>]</span></p><p><span>public</span><span> </span><span>class</span><span> </span><span>Benchmarks</span><span> </span><span>{</span></p><p><span>&nbsp;&nbsp; </span><span>private</span><span> </span><span>IEnumerable</span><span>&lt;</span><span>int</span><span>&gt;</span><span> </span><span>_arrayDistinct</span><span> </span>=<span> </span><span>Enumerable</span><span>.</span><span>Range</span><span>(</span><span>0</span><span>,</span><span> </span><span>1000</span><span>)</span><span>.</span><span>ToArray</span><span>(</span><span>)</span><span>.</span><span>Distinct</span><span>(</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>private</span><span> </span><span>IEnumerable</span><span>&lt;</span><span>int</span><span>&gt;</span><span> </span><span>_appendSelect</span><span> </span>=<span> </span><span>Enumerable</span><span>.</span><span>Range</span><span>(</span><span>0</span><span>,</span><span> </span><span>1000</span><span>)</span><span>.</span><span>ToArray</span><span>(</span><span>)</span><span>.</span><span>Append</span><span>(</span><span>42</span><span>)</span><span>.</span><span>Select</span><span>(</span><span>i</span><span> </span>=<span>&gt;</span><span> </span><span>i</span><span> </span>*<span> </span><span>2</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>private</span><span> </span><span>IEnumerable</span><span>&lt;</span><span>int</span><span>&gt;</span><span> </span><span>_rangeReverse</span><span> </span>=<span> </span><span>Enumerable</span><span>.</span><span>Range</span><span>(</span><span>0</span><span>,</span><span> </span><span>1000</span><span>)</span><span>.</span><span>Reverse</span><span>(</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>private</span><span> </span><span>IEnumerable</span><span>&lt;</span><span>int</span><span>&gt;</span><span> </span><span>_listDefaultIfEmptySelect</span><span> </span>=<span> </span><span>Enumerable</span><span>.</span><span>Range</span><span>(</span><span>0</span><span>,</span><span> </span><span>1000</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>.</span><span>DefaultIfEmpty</span><span>(</span><span>)</span><span>.</span><span>Select</span><span>(</span><span>i</span><span> </span>=<span>&gt;</span><span> </span><span>i</span><span> </span>*<span> </span><span>2</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>private</span><span> </span><span>IEnumerable</span><span>&lt;</span><span>int</span><span>&gt;</span><span> </span><span>_listSkipTake</span><span> </span>=<span> </span><span>Enumerable</span><span>.</span><span>Range</span><span>(</span><span>0</span><span>,</span><span> </span><span>1000</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>.</span><span>Skip</span><span>(</span><span>500</span><span>)</span><span>.</span><span>Take</span><span>(</span><span>100</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>private</span><span> </span><span>IEnumerable</span><span>&lt;</span><span>int</span><span>&gt;</span><span> </span><span>_rangeUnion</span><span> </span>=<span> </span><span>Enumerable</span><span>.</span><span>Range</span><span>(</span><span>0</span><span>,</span><span> </span><span>1000</span><span>)</span><span>.</span><span>Union</span><span>(</span><span>Enumerable</span><span>.</span><span>Range</span><span>(</span><span>500</span><span>,</span><span> </span><span>1000</span><span>)</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>private</span><span> </span><span>IEnumerable</span><span>&lt;</span><span>int</span><span>&gt;</span><span> </span><span>_selectWhereSelect</span><span> </span>=<span> </span><span>Enumerable</span><span>.</span><span>Range</span><span>(</span><span>0</span><span>,</span><span> </span><span>1000</span><span>)</span><span>.</span><span>Select</span><span>(</span><span>i</span><span> </span>=<span>&gt;</span><span> </span><span>i</span><span> </span>*<span> </span><span>2</span><span>)</span><span>.</span><span>Where</span><span>(</span><span>i</span><span> </span>=<span>&gt;</span><span> </span><span>i</span><span> </span><span>%</span><span> </span><span>2</span><span> </span>==<span> </span><span>0</span><span>)</span><span>.</span><span>Select</span><span>(</span><span>i</span><span> </span>=<span>&gt;</span><span> </span><span>i</span><span> </span>*<span> </span><span>2</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>int</span><span> </span><span>DistinctFirst</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_arrayDistinct</span><span>.</span><span>First</span><span>(</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>int</span><span> </span><span>AppendSelectLast</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_appendSelect</span><span>.</span><span>Last</span><span>(</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>int</span><span> </span><span>RangeReverseCount</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_rangeReverse</span><span>.</span><span>Count</span><span>(</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>int</span><span> </span><span>DefaultIfEmptySelectElementAt</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_listDefaultIfEmptySelect</span><span>.</span><span>ElementAt</span><span>(</span><span>999</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>int</span><span> </span><span>ListSkipTakeElementAt</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_listSkipTake</span><span>.</span><span>ElementAt</span><span>(</span><span>99</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>int</span><span> </span><span>RangeUnionFirst</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_rangeUnion</span><span>.</span><span>First</span><span>(</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>[</span><span>Benchmark</span><span>]</span><span> </span><span>public</span><span> </span><span>int</span><span> </span><span>SelectWhereSelectSum</span><span>(</span><span>)</span><span> </span>=<span>&gt;</span><span> </span><span>_selectWhereSelect</span><span>.</span><span>Sum</span><span>(</span><span>)</span><span>;</span></p><p><span>}</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0013 seconds] -->
<p>The performance improvements are even more remarkable! What caused this?</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-67124f6522f37358715221" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					<div><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p></div>
				</td>
						<td><div><p><span>|</span><span> </span><span>Method</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span> </span><span>Runtime</span><span>&nbsp;&nbsp;</span><span>|</span><span> </span><span>Mean</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span> </span><span>Ratio</span><span> </span><span>|</span><span> </span><span>Allocated</span><span> </span><span>|</span></p><p><span>|</span>------------------------------<span> </span><span>|</span>---------<span> </span><span>|</span>-------------<span>:</span><span>|</span>------<span>:</span><span>|</span>----------<span>:</span><span>|</span></p><p><span>|</span><span> </span><span>DistinctFirst</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>65.318</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>1.00</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>328</span><span> </span><span>B</span><span> </span><span>|</span></p><p><span>|</span><span> </span><span>DistinctFirst</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>11.192</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>0.17</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span></p><p><span>|</span><span> </span><span>AppendSelectLast</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span> </span><span>4</span><span>,</span><span>122.007</span><span> </span><span>ns</span><span> </span><span>|</span><span> </span><span>1.000</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>144</span><span> </span><span>B</span><span> </span><span>|</span></p><p><span>|</span><span> </span><span>AppendSelectLast</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>2.661</span><span> </span><span>ns</span><span> </span><span>|</span><span> </span><span>0.001</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span></p><p><span>|</span><span> </span><span>RangeReverseCount</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>11.024</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>1.00</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span> </span><span>RangeReverseCount</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>6.134</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>0.56</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span></p><p><span>|</span><span> </span><span>DefaultIfEmptySelectElementAt</span><span> </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span> </span><span>4</span><span>,</span><span>090.818</span><span> </span><span>ns</span><span> </span><span>|</span><span> </span><span>1.000</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>144</span><span> </span><span>B</span><span> </span><span>|</span></p><p><span>|</span><span> </span><span>DefaultIfEmptySelectElementAt</span><span> </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>5.724</span><span> </span><span>ns</span><span> </span><span>|</span><span> </span><span>0.001</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span></p><p><span>|</span><span> </span><span>ListSkipTakeElementAt</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>6.268</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>1.00</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span> </span><span>ListSkipTakeElementAt</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>2.916</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>0.47</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span></p><p><span>|</span><span> </span><span>RangeUnionFirst</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>66.309</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>1.00</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>344</span><span> </span><span>B</span><span> </span><span>|</span></p><p><span>|</span><span> </span><span>RangeUnionFirst</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>6.193</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>0.09</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>-<span> </span><span>|</span></p><p><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>|</span></p><p><span>|</span><span> </span><span>SelectWhereSelectSum</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>8.0</span><span> </span><span>|</span><span> </span><span>3</span><span>,</span><span>959.622</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>1.00</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>112</span><span> </span><span>B</span><span> </span><span>|</span></p><p><span>|</span><span> </span><span>SelectWhereSelectSum</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>|</span><span> </span><span>.</span><span>NET</span><span> </span><span>9.0</span><span> </span><span>|</span><span> </span><span>4</span><span>,</span><span>460.008</span><span> </span><span>ns</span><span> </span><span>|</span><span>&nbsp;&nbsp;</span><span>1.13</span><span> </span><span>|</span><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>112</span><span> </span><span>B</span><span> </span><span>|</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0012 seconds] -->

<h3><span id="The_Astute"></span>The Astute<span></span></h3>
<p>In summary, the .NET performance team designed the code to recognize common LINQ call chains. When such a chain is detected, some special iterators are created to handle the workflow more efficiently. Some more optimizations can happen when the chain ends up with methods like <code>Count()</code>, <code>First()</code>, <code>Last()</code>, <code>ElementAt()</code> or <code>Sum()</code>. For instance, <code>OrderBy(criteria).First()</code> can be optimized to execute as <code>Min(criteria)</code>.</p>
<h3><span id="The_implementation_Iterator_and_its_Derived_Class"></span>The implementation: Iterator&lt;T&gt; and its Derived Class<span></span></h3>
<p>Let’s have a look at the abstract base class <a href="https://github.com/dotnet/runtime/blob/main/src/libraries/System.Linq/src/System/Linq/Iterator.SpeedOpt.cs" target="_blank" rel="noopener"><code>Iterator&lt;T&gt;</code></a> and its 40 derivatives. They are all nested in the class <code>Enumerable</code>.</p>
<p><code>Iterator&lt;T&gt;</code> is an abstract class but its methods are virtual. Hence its derivatives only override the required methods.</p>
<p><a href="https://blog.ndepend.com/wp-content/uploads/Iterators-Methods.png"><img decoding="async" src="https://blog.ndepend.com/wp-content/uploads/Iterators-Methods.png" alt="Iterators Methods" width="485" height="582" srcset="https://blog.ndepend.com/wp-content/uploads/Iterators-Methods.png 485w, https://blog.ndepend.com/wp-content/uploads/Iterators-Methods-250x300.png 250w" sizes="(max-width: 485px) 100vw, 485px"></a></p>
<p>Here are the derivatives classes listed and exported to the graph:</p>
<p><a href="https://blog.ndepend.com/wp-content/uploads/Iterators-Derived-2.png"><img loading="lazy" decoding="async" src="https://blog.ndepend.com/wp-content/uploads/Iterators-Derived-2.png" alt="Iterators Derived" width="1486" height="894" srcset="https://blog.ndepend.com/wp-content/uploads/Iterators-Derived-2.png 1486w, https://blog.ndepend.com/wp-content/uploads/Iterators-Derived-2-300x180.png 300w, https://blog.ndepend.com/wp-content/uploads/Iterators-Derived-2-1024x616.png 1024w, https://blog.ndepend.com/wp-content/uploads/Iterators-Derived-2-768x462.png 768w" sizes="(max-width: 1486px) 100vw, 1486px"></a></p>
<h3><span id="Case_Study_ListWhereSelectIterator"></span>Case Study: ListWhereSelectIterator&lt;TSource, TResult&gt;<span></span></h3>
<p>Let’s focus on the iterator <a href="https://github.com/dotnet/runtime/blob/main/src/libraries/System.Linq/src/System/Linq/Where.cs#L303" target="_blank" rel="noopener"><code>ListWhereSelectIterator&lt;TSource, TResult&gt;</code></a>.</p>

<!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-67124f6522f39159396614" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					
				</td>
						<td><div><p><span>public</span><span> </span><span>override </span><span>IEnumerable</span><span>&lt;</span><span>TResult</span><span>&gt;</span><span> </span><span>Select</span><span>&lt;</span><span>TResult</span><span>&gt;</span><span>(</span><span>Func</span><span>&lt;</span><span>TSource</span><span>,</span><span> </span><span>TResult</span><span>&gt;</span><span> </span><span>selector</span><span>)</span><span> </span>=<span>&gt;</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>new</span><span> </span><span>ListWhereSelectIterator</span><span>&lt;</span><span>TSource</span><span>,</span><span> </span><span>TResult</span><span>&gt;</span><span>(</span><span>_source</span><span>,</span><span> </span><span>_predicate</span><span>,</span><span> </span><span>selector</span><span>)</span><span>;</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0002 seconds] -->
<p><code>ListWhereIterator&lt;TSource, TResult&gt;</code> <a href="https://github.com/dotnet/runtime/blob/main/src/libraries/System.Linq/src/System/Linq/Where.cs#L41" target="_blank" rel="noopener">is instantiated within the <code>Enumerable.Where()</code></a> method using the following code:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-67124f6522f3c242467875" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					
				</td>
						<td><div><p><span>if</span><span> </span><span>(</span><span>source </span><span>is</span><span> </span><span>List</span><span>&lt;</span><span>TSource</span><span>&gt;</span><span> </span><span>list</span><span>)</span><span>{</span></p><p><span>&nbsp;&nbsp;</span><span>return</span><span> </span><span>new</span><span> </span><span>ListWhereIterator</span><span>&lt;</span><span>TSource</span><span>&gt;</span><span>(</span><span>list</span><span>,</span><span> </span><span>predicate</span><span>)</span><span>;</span></p><p><span>}</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0001 seconds] -->
<p>The <code>ListWhereSelectIterator&lt;TSource, TResult&gt;</code> doesn’t override methods like <code>TryGetFirst()</code> or <code>TryGetLast()</code>, so how does it improve performance? The key optimization is that it acts as a single iterator for the supercommon <code>Where(...).Select(...)</code> chain on a list, which would typically require two separate iterators. By consolidating both operations into one, it inherently improves efficiency. You can see it in <a href="https://github.com/dotnet/runtime/blob/main/src/libraries/System.Linq/src/System/Linq/Where.cs#L323" target="_blank" rel="noopener">its implementation of </a><code>MoveNext()</code>&nbsp;where both delegates <code>_predicate</code> and <code>_selector</code> are invoked:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-67124f6522f3d877907597" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					
				</td>
						<td><div><p><span>while</span><span> </span><span>(</span><span>_enumerator</span><span>.</span><span>MoveNext</span><span>(</span><span>)</span><span>)</span><span> </span><span>{</span></p><p><span>&nbsp;&nbsp; </span><span>TSource </span><span>item</span><span> </span>=<span> </span><span>_enumerator</span><span>.</span><span>Current</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>if</span><span> </span><span>(</span><span>_predicate</span><span>(</span><span>item</span><span>)</span><span>)</span><span> </span><span>{</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>_current</span><span> </span>=<span> </span><span>_selector</span><span>(</span><span>item</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>return</span><span> </span><span>true</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>}</span></p><p><span>}</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0002 seconds] -->

<h3><span id="Case_Study_IListSkipTakeIterator"></span>Case Study: IListSkipTakeIterator&lt;TSource&gt;<span></span></h3>
<p>Here is the implementation of <code>MoveNext()</code> in the <code>IListSkipTakeIterator&lt;TSource&gt;</code> class:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-67124f6522f40135409288" data-settings=" minimize scroll-mouseover">
				<table>
					<tbody><tr>
				<td data-settings="show">
					
				</td>
						<td><div><p><span>public</span><span> </span><span>override </span><span>bool</span><span> </span><span>MoveNext</span><span>(</span><span>)</span><span> </span><span>{</span></p><p><span>&nbsp;&nbsp; </span><span>// _state - 1 represents the zero-based index into the list.</span></p><p><span>&nbsp;&nbsp; </span><span>// Having a separate field for the index would be more readable. However, we save it</span></p><p><span>&nbsp;&nbsp; </span><span>// into _state with a bias to minimize field size of the iterator.</span></p><p><span>&nbsp;&nbsp; </span><span>int</span><span> </span><span>index</span><span> </span>=<span> </span><span>_state</span><span> </span>-<span> </span><span>1</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>if</span><span> </span><span>(</span><span>(</span><span>uint</span><span>)</span><span>index</span><span> </span><span>&lt;</span>=<span> </span><span>(</span><span>uint</span><span>)</span><span>(</span><span>_maxIndexInclusive</span><span> </span>-<span> </span><span>_minIndexInclusive</span><span>)</span><span> </span><span>&amp;&amp; index &lt; _source.Count - _minIndexInclusive) {</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_current = _source[_minIndexInclusive + index];</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>++<span>_state</span><span>;</span></p><p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>return</span><span> </span><span>true</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>}</span></p><p><span>&nbsp;&nbsp; </span><span>Dispose</span><span>(</span><span>)</span><span>;</span></p><p><span>&nbsp;&nbsp; </span><span>return</span><span> </span><span>false</span><span>;</span></p><p><span>}</span></p></div></td>
					</tr>
				</tbody></table>
			</div>
<!-- [Format Time: 0.0002 seconds] -->


<h2><span id="Conclusion"></span>Conclusion<span></span></h2>
<p>With .NET 9, LINQ becomes faster in several common scenarios. As with every new version of .NET, you simply need to migrate and recompile to take advantage of these improvements. Additionally, LINQ has been optimized in other ways: SIMD is utilized whenever possible, such as when summing a sequence of integers. Moreover, enumerating empty sequences incurs lower costs due to early detection.</p>

<p>One final note: the web is increasingly inundated with AI-generated crap content. Search engines struggles to differentiate between valuable, handcrafted content and inferior material. If you appreciate this article and others like it that are thoughtfully created, please consider sharing it.</p>


	</div><!-- .entry-content -->

	
	<!-- .entry-footer -->

</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Secret 3D Scans in the French Supreme Court (402 pts)]]></title>
            <link>https://cosmowenman.substack.com/p/secret-3d-scans-in-the-french-supreme</link>
            <guid>41877513</guid>
            <pubDate>Fri, 18 Oct 2024 08:50:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://cosmowenman.substack.com/p/secret-3d-scans-in-the-french-supreme">https://cosmowenman.substack.com/p/secret-3d-scans-in-the-french-supreme</a>, See on <a href="https://news.ycombinator.com/item?id=41877513">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>For the last seven years, I have been campaigning to establish and defend the public’s right to access all French national museums’ 3D scans of their collections, starting with the prestigious and influential Rodin Museum in Paris. My efforts have reached the Conseil d’État, France’s supreme court for administrative justice, and a great deal is at stake. The museum and the French Ministry of Culture appear determined to lie, break the law, defy court orders, and set fire to French freedom of information law in order to prevent the public from accessing 3D scans of cultural heritage.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbe7cb9ed-6d15-46b9-8a12-0b046143e5a2_660x418.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbe7cb9ed-6d15-46b9-8a12-0b046143e5a2_660x418.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbe7cb9ed-6d15-46b9-8a12-0b046143e5a2_660x418.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbe7cb9ed-6d15-46b9-8a12-0b046143e5a2_660x418.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbe7cb9ed-6d15-46b9-8a12-0b046143e5a2_660x418.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbe7cb9ed-6d15-46b9-8a12-0b046143e5a2_660x418.png" width="726" height="459.8" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/be7cb9ed-6d15-46b9-8a12-0b046143e5a2_660x418.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;normal&quot;,&quot;height&quot;:418,&quot;width&quot;:660,&quot;resizeWidth&quot;:726,&quot;bytes&quot;:723521,&quot;alt&quot;:&quot;Hands touching the face of a bronze statue&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="Hands touching the face of a bronze statue" title="Hands touching the face of a bronze statue" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbe7cb9ed-6d15-46b9-8a12-0b046143e5a2_660x418.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbe7cb9ed-6d15-46b9-8a12-0b046143e5a2_660x418.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbe7cb9ed-6d15-46b9-8a12-0b046143e5a2_660x418.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbe7cb9ed-6d15-46b9-8a12-0b046143e5a2_660x418.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>Many museums around the world make high-quality 3D scans of important artwork and ancient artifacts in their collections. Several forward-thinking organizations freely share their 3D scans, allowing the public to view, copy, adapt, and experiment with the underlying works in ways that have never before been possible.</p><p><span>Anyone in the world with an internet connection can view, interact with, and download the </span><a href="https://sketchfab.com/3d-models/the-rosetta-stone-1e03509704a3490e99a173e53b93e282" rel="nofollow ugc noopener">British Museum’s</a><span> 3D scan of the Rosetta Stone, for example. The public can freely access hundreds of scans of classical sculpture from the </span><a href="https://open.smk.dk/en/art?q=*&amp;page=2&amp;filters=has_3d_file%3Atrue" rel="nofollow ugc noopener">National Gallery of Denmark</a><span>, and visitors to the </span><a href="https://3d.si.edu/explore" rel="nofollow ugc noopener">Smithsonian’</a><span>s website can view, navigate, and freely download thousands of high-quality scans of artifacts ranging from dinosaur fossils to the Apollo 11 space capsule.</span></p><p>With access to digitizations like these, artists can rework and incorporate our common cultural heritage into new works, such as films, video games, virtual reality, clothing, architecture, sculpture, and more. Researchers and educators can use 3D scans to further our understanding of the arts, and the art-loving public can use them to appreciate, study, and even replicate beloved works in new ways that are not possible within the confines of a museum or with the original works.</p><p><span>For example, I </span><a href="https://www.conceptrealizations.com/" rel="nofollow ugc noopener">design and fabricate</a><span> universal access wayfinding tools, interactive replicas and exhibits for the blind. I know that there is need for unfettered access to 3D scans of important sculptures and artifacts for use in making replicas the public can explore through touch.</span></p><p>If set loose to run free in our digital, visual, and tactile landscape, the creative potential for cultural heritage 3D scans is limitless, and the value of what the general public can do with them vastly exceeds what museums could ever create if they kept their digitizations for themselves.</p><p><span>Unfortunately, some ostensibly public-spirited organizations do keep their 3D scans hidden. I’ve been trying to help them see the light. Beginning in 2017 I spent three years using German freedom of information law to </span><a href="https://reason.com/2019/11/13/a-german-museum-tried-to-hide-this-stunning-3d-scan-of-an-iconic-egyptian-artifact-today-you-can-see-it-for-the-first-time/" rel="nofollow ugc noopener">successfully pressure</a><span> the Egyptian Museum of Berlin to release its 3D scan of its most prized possession and national treasure, the 3,000 year-old </span><em>Bust of Nefertiti.</em><span> Since then I’ve turned my attention to the digital treasures being hoarded by taxpayer funded institutions in France.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b137ce5-bfd4-4f47-bef9-8e62fca364d3_1015x524.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b137ce5-bfd4-4f47-bef9-8e62fca364d3_1015x524.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b137ce5-bfd4-4f47-bef9-8e62fca364d3_1015x524.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b137ce5-bfd4-4f47-bef9-8e62fca364d3_1015x524.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b137ce5-bfd4-4f47-bef9-8e62fca364d3_1015x524.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b137ce5-bfd4-4f47-bef9-8e62fca364d3_1015x524.png" width="1015" height="524" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3b137ce5-bfd4-4f47-bef9-8e62fca364d3_1015x524.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:524,&quot;width&quot;:1015,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:814486,&quot;alt&quot;:&quot;Winged Victory and Venus de Milo being 3D scanned at the Louvre.&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="Winged Victory and Venus de Milo being 3D scanned at the Louvre." title="Winged Victory and Venus de Milo being 3D scanned at the Louvre." srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b137ce5-bfd4-4f47-bef9-8e62fca364d3_1015x524.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b137ce5-bfd4-4f47-bef9-8e62fca364d3_1015x524.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b137ce5-bfd4-4f47-bef9-8e62fca364d3_1015x524.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3b137ce5-bfd4-4f47-bef9-8e62fca364d3_1015x524.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em>Winged Victory</em><span> and </span><em>Venus de Milo</em><span> being scanned at the Louvre. Photos via Art Graphique &amp; Patrimoine and RMN.</span></figcaption></figure></div><p><span>The Louvre, for example, will not allow the public to access its ultra-high quality 3D scan of </span><em><a href="https://focus.louvre.fr/fr/la-victoire-de-samothrace/la-victoire-de-samothrace/le-monument-de-la-victoire-de-samothrace-0" rel="nofollow ugc noopener">Winged Victory, the Nike of Samothrace</a><span>,</span></em><span> despite its aggressive public and corporate fundraising campaign to digitize the iconic Greek sculpture. Nor its scan of </span><em>Venus de Milo.</em></p><p><span>The French Ministry of Culture’s </span><em>Réunion des musées nationaux</em><span> (RMN) receives tens of millions of dollars anually in public subsidies to provide services to French national museums. In 2013 RMN received from the </span><em>Fonds national pour la société numérique</em><span> (FSN) a €1.1M subsidy and an additional loan of €1.1M to digitize objects in French museum collections and create a web platform for the publication and economic exploitation of its 3D scans. Since then RMN has 3D scanned thousands of artworks and ancient artifacts all over France. RMN </span><a href="https://sketchfab.com/francecollections/models" rel="nofollow ugc noopener">advertises</a><span> its scans’ availability to the public, which makes for great PR, but its ads </span><a href="https://cosmowenman.substack.com/p/reunion-des-musees-nationaux-lies" rel="nofollow ugc noopener">are false</a><span>. In fact, RMN has a strict look-but-don’t-touch policy for its 3D scans and absolutely refuses to allow the public to access them directly. My own investigation has revealed that, in private, RMN </span><a href="https://cosmowenman.files.wordpress.com/2024/04/20221122-correspondance-rmn-cada-si604822112216300-occlus-par-la-cada_fr_en_text.pdf" rel="nofollow ugc noopener">admits</a><span> it won’t release its scans because it wants to protect its gift shops’ sales revenue from competition from the public making their own replicas. For practical applications and creative potential, and direct value to the public, it is as though these scans simply do not exist.</span></p><p><span>And then there is the Rodin Museum. Founded in 1917 shortly after the death of famed sculptor Auguste Rodin, </span><em>le musée Rodin</em><span> is a state-run administrative agency and an arm of the Ministry of Culture. It has a legally mandated mission to preserve, study, enhance and disseminate Rodin’s works, all of which have been in the public domain since their copyrights expired decades ago. Even though musée Rodin never passes up an opportunity to remind the public that it is France’s sole “</span><a href="https://www.musee-rodin.fr/en/museum/institution/self-funding-museum" rel="nofollow ugc noopener">self-funded</a><span>” national museum, it sought and obtained direct public funding from the Ministry of Culture’s national digitization program, and in 2010 as part of its public service mission began 3D scanning its collection with the stated purpose of publishing the results.</span></p><p>Fourteen years later, musée Rodin’s scans have not been shared with the public.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff5bc5eee-0321-436d-92ee-399bcd1dc752_723x1080.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff5bc5eee-0321-436d-92ee-399bcd1dc752_723x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff5bc5eee-0321-436d-92ee-399bcd1dc752_723x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff5bc5eee-0321-436d-92ee-399bcd1dc752_723x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff5bc5eee-0321-436d-92ee-399bcd1dc752_723x1080.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff5bc5eee-0321-436d-92ee-399bcd1dc752_723x1080.png" width="723" height="1080" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f5bc5eee-0321-436d-92ee-399bcd1dc752_723x1080.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1080,&quot;width&quot;:723,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1321798,&quot;alt&quot;:&quot;The Gates of Hell being scanned at musée Rodin. Photo by Jean-Pierre Dalbéra.&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="The Gates of Hell being scanned at musée Rodin. Photo by Jean-Pierre Dalbéra." title="The Gates of Hell being scanned at musée Rodin. Photo by Jean-Pierre Dalbéra." srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff5bc5eee-0321-436d-92ee-399bcd1dc752_723x1080.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff5bc5eee-0321-436d-92ee-399bcd1dc752_723x1080.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff5bc5eee-0321-436d-92ee-399bcd1dc752_723x1080.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff5bc5eee-0321-436d-92ee-399bcd1dc752_723x1080.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em>The Gates of Hell</em><span> being 3D scanned at musée Rodin. Photo by Jean-Pierre Dalbéra.</span></figcaption></figure></div><p>When I approach cultural heritage organizations about their 3D scans of public domain works, my ultimate goal is to secure unfettered public access&nbsp;to them. I’m much less interested in half measures, whereby the public might be granted access to scans only for, say, educational purposes, but be improperly prohibited from using them commercially. Those kinds of compromises undermine the public’s right to reuse public domain works and can lead to people hesitating to use them in any way because they are unsure of their rights and fear unknown punishments.</p><p>In 2017, I approached musée Rodin with a strategy to illicit a full airing of every possible argument that a prestigious, well-positioned public institution might bring to bear against a member of the public interested in accessing its 3D scans. I wanted to discover and deal with all their concerns at once. So, from the start I made it perfectly clear to musée Rodin that I had a commercial interest in scans of Rodin’s works, and I made absolutely no apologies for it. From there I asked its administrators straightforward questions about the museum’s policies and let them treat me as they might treat any other inquiring member of the public. It did not go well.</p><p>I expected resistance, but I did not anticipate the extent to which the museum would abuse its authority.</p><p><span>After more than a year of musée Rodin’s administrators ignoring my requests for information about its 3D scans and public access-related policies, I decided to escalate. I asked for help from Paris-based civil rights attorney and strategic litigation expert </span><a href="https://afocavocat.eu/" rel="nofollow ugc noopener">Alexis Fitzjean Ó Cobhthaigh</a><span>, who made a formal demand on my behalf under French freedom of information law, which requires government agencies to communicate their administrative documents to the public. We requested copies of the museum’s policy-related documents, a list of the 3D scan files it held, </span><em>and the scan files themselves.</em></p><p>When musée Rodin refused to provide records of any kind we referred its refusal to the Commission on Access to Administrative Documents (CADA), the independent French government agency that administrations and courts rely on for its legal analysis of questions relating to public access and reuse of government documents. The CADA had never before considered any dispute about 3D scans. It affirmed my request that musée Rodin communicate copies of its scans to me, determining for the first time that public agencies’ 3D scans are in fact administrative documents and by law must be made available to the public.</p><p><span>In light of the government’s own </span><a href="https://cosmowenman.com/wp-content/uploads/2024/04/20190606-cada-avis-n20192300-supports-wenman_fr_en.pdf" rel="nofollow ugc noopener">legal analysis</a><span>, musée Rodin confided to the ministry — </span><a href="https://cosmowenman.com/wp-content/uploads/2024/04/20190426-musee-rodin-warns-requests-guidance-from-ministry-of-culture_fr_en.pdf" rel="nofollow ugc noopener">in writing</a><span> — its plan to disobey the law and its fear that I would bring it to court and make its position known to the public.</span></p><p><span>In 2019 we filed suit against the museum in the Administrative Tribunal of Paris, asking the court to anul the museum’s refusals and order it to make its scans public. Open culture and digital rights advocacy organizations </span><a href="https://communia-association.org/" rel="nofollow ugc noopener">Communia</a><span>, </span><a href="https://www.laquadrature.net/" rel="nofollow ugc noopener">La Quadrature du Net</a><span> and </span><a href="https://www.wikimedia.fr/" rel="nofollow ugc noopener">Wikimédia France</a><span> joined me as co-plaintiffs in support of our case. We were all represented by Fitzjean Ó Cobhthaigh.</span></p><p><span>After more than three years of litigation and musée Rodin’s desperate efforts to evade the law, in April 2023 the Administrative Tribunal of Paris issued a historic, precedent-setting decision, ordering the prestigious museum to make several of its 3D scans of some of the world’s most famous sculptures accessible to the public including </span><em>The Thinker, The Kiss, </em><span>and</span><em> The Gates of Hell. </em><span>The Administrative Tribunal’s April 21, 2023 decision is available </span><a href="https://cosmowenman.files.wordpress.com/2024/03/20230421-cosmo-wenman-vs-musee-rodin-decision-administrative-tribunal-of-paris_fr_en.pdf" rel="nofollow ugc noopener">here</a><span>.</span></p><p>Our victory has broad implications for public access to and reuse of digitizations of important cultural heritage works throughout France and the world.</p><p>Naturally, we wanted to publicize the court’s 2023 decision at that time, but for strategic reasons remained silent because our victory was not complete. Despite the important rulings affirming the public’s right to access 3D scans, the tribunal also ruled against us on several related issues with reasoning that, if left unchallenged, threatens to broadly undermine French freedom of information law as well as permit the government to conceal a specific type of important document from the public — more on that in a moment.</p><p><span>When the tribunal issued its decision, Fitzjean Ó Cobhthaigh and I remained silent because we did not want to give the government advance notice that we intended to contest the flawed portions of the decision. We also wanted to quietly observe as musée Rodin’s deadline passed without it initiating an appeal of its own. In the months following the tribunal’s April 2023 decision, Fitzjean and I spent countless hours quietly researching, gathering expert testimony, and preparing an analysis and presentation of an appeal challenging the lower court’s legal and procedural errors. We engaged Fitzjean’s colleagues at the law firm </span><a href="https://www.scp-mdlb.fr/" rel="nofollow ugc noopener">SCP Marlange - de La Burgade</a><span> — specialists in appeals to the Conseil d’État, France’s supreme court for administrative justice — for assistance and to present our case to the court. On December 1, 2023 we submitted our brief to the Conseil d’État for its preliminary review and its decision on the admissability of our appeal and the need for a hearing.</span></p><p><span>From the beginning of this seven-year effort, through today, musée Rodin has refused to give any comment to the press about its secret access policies or legal defense. In effect, the museum’s administrators have quietly transferred their press communications, policy decisions, and legal responsibilities</span><em> to me</em><span>, my attorney and co-plaintiffs, and the court, while making every effort to evade the law. But behind the scenes, in court, and when communicating with other arms of the government, however, musée Rodin has been relentlessly mendacious, lying to the Ministry of Culture, the government, the court, and the public it is meant to serve.</span></p><p>Now that we have challenged the lower court’s errors and await a response from the Ministry of Culture and its proxy, musée Rodin, I can finally give a full account of our important achievements in the tribunal and expose the museum’s deceptive tactics, all of which should be of interest to policymakers and professionals in the cultural heritage sector and the art market, open access advocates, as well as archivists, educators, and the art-loving public.</p><p>I can also now tell the public about the tribunal’s errors and lack of technical understanding and the danger they pose. What is currently at stake in my appeal to the Conseil d’État should be of particular interest to scientists, researchers, citizen activists, investigative journalists, and government watchdog organizations.</p><p>We had to fight the museum’s constant evasions, delays, deceptions, and lawless special pleading for each and every legal question we won. I recount below the three judges’ findings and their effects, some of musée Rodin’s failed legal and extralegal maneuvers, and how we countered them. I hope this summary will be helpful to others’ efforts to access documents of any kind from similarly uncooperative and hostile administrative agencies.</p><ul><li><p><em><strong>Moral rights: rejected</strong></em></p></li></ul><p><span>We definitively destroyed </span><em>droit moral</em><span> (moral rights) as a legal barrier to public access and reuse of 3D scans of public domain cultural heritage works. This is an incredible achievement in itself; no one in the world has a stronger claim to the legal protections and privileges of </span><em>droit moral</em><span> than musée Rodin, one of the most active, powerful, recognizable, and prestigious public domain artist’s estates in the world. The museum constantly reminded the court that it is the legal, state-appointed beneficiary of Auguste Rodin’s estate and perpetual moral rights, which include the right to attribution and the right to protect the integrity of an author’s works. For dramatic effect, musée Rodin submitted into evidence Rodin’s handwritten 1916 donation of his estate to the French state. Yet the court correctly considered </span><em>droit moral</em><span> to be utterly irrelevant to the public’s right to access and reuse works whose copyrights have expired and which have entered the public domain. This element of the court’s decision undercuts countless organizations’ hesitancy and dithering on public access to public domain works, sometimes vaguely justified as deference to artists’ estates and poorly understood, almost mystical claims of </span><em>droit moral. </em><span>Institutions like the Baltimore Museum of Art, for example, which has been too timid to publish </span><a href="https://web.archive.org/web/20140806033239/http:/blog.artbma.org/2014/07/3d-scanning-auguste-rodins-the-thinker/" rel="nofollow ugc noopener">its own 3D scan</a><span> of </span><em>The Thinker</em><span> due to unfounded fear of somehow violating musée Rodin’s moral rights, should take note.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19d6db5d-d9bc-4d5c-8e28-df33d2ce343a_638x576.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19d6db5d-d9bc-4d5c-8e28-df33d2ce343a_638x576.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19d6db5d-d9bc-4d5c-8e28-df33d2ce343a_638x576.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19d6db5d-d9bc-4d5c-8e28-df33d2ce343a_638x576.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19d6db5d-d9bc-4d5c-8e28-df33d2ce343a_638x576.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19d6db5d-d9bc-4d5c-8e28-df33d2ce343a_638x576.png" width="638" height="576" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/19d6db5d-d9bc-4d5c-8e28-df33d2ce343a_638x576.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:576,&quot;width&quot;:638,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:337670,&quot;alt&quot;:&quot;The Baltimore Museum of Art’s unpublished 3D scan of The Thinker. Image by Direct Dimensions.&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="The Baltimore Museum of Art’s unpublished 3D scan of The Thinker. Image by Direct Dimensions." title="The Baltimore Museum of Art’s unpublished 3D scan of The Thinker. Image by Direct Dimensions." srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19d6db5d-d9bc-4d5c-8e28-df33d2ce343a_638x576.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19d6db5d-d9bc-4d5c-8e28-df33d2ce343a_638x576.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19d6db5d-d9bc-4d5c-8e28-df33d2ce343a_638x576.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F19d6db5d-d9bc-4d5c-8e28-df33d2ce343a_638x576.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><span>The Baltimore Museum of Art’s unpublished 3D scan of </span><em>The Thinker.</em><span> Image by Direct Dimensions.</span></figcaption></figure></div><ul><li><p><em><strong>Fears over competition, counterfeiting, and sales revenue: rejected</strong></em></p></li></ul><p><span>Musée Rodin argued that public access to its 3D scans would have "conséquences désastreuses" for all French national museums by subjecting their gift shop and artwork sales revenue to unfair competition from the public, and that their scans would facilitate criminal counterfeiting. The court ruled that the museum’s revenue, business model, and supposed threats from competition and counterfeiting are irrelevant to the public’s right to access its scans, a dramatic rejection of the museum’s position that makes the public’s right to access and reuse public domain works crystal clear. This element of the court’s ruling simultaneously neutralizes administrative agencies’ perpetual, self-serving pleas of poverty and denies their ability to withhold documents and cultural heritage digitizations based on prospective misuse by the public — including prospective </span><em>criminal</em><span> misuse by the person requesting access. On this point the court echoed the exact objection I made to musée Rodin’s then-director in my very first requests to the museum: </span><em>courts</em><span>, not administrative agencies nor museums, adjudicate crimes and only after a crime has been alleged, not in advance.</span></p><ul><li><p><em><strong>Trade secrecy: defeated with secret evidence</strong></em></p></li></ul><p>The court noted that musée Rodin had obviously created its 3D scans in the context of its public service mission to disseminate Rodin’s works and ruled the museum could not withhold them on the grounds that they would expose trade secrets related to their commercial operations. In an ironic development, the judges specifically reasoned against musée Rodin’s trade secrecy claim by citing its 3D digitization funding applications to the Ministry of Culture, in which the museum stipulated its commitment to publishing its scans. The museum had attempted to hide these funding applications from us and the court, telling the court they did not exist. However, in the course of the trial we obtained those applications by forcing a parallel documents request directly to the Ministry of Culture — which the museum complained to the court was a "crude maneuver" — exposing the museum’s deception and badly wounding the defense on this critical issue. Defeating the museum’s trade secrecy defense significantly narrows the scope of this legal exception to the public’s right to access 3D scans and other administrative documents, which other powerful cultural heritage organizations would likely attempt to abuse in similar cases.</p><ul><li><p><em><strong>Hiding public documents in closed formats: rejected</strong></em></p></li></ul><p>The court rejected musée Rodin’s argument that it could not publish several 3D scan documents because they were in a closed format that required third-party software to open. By advancing this absurd defense, the museum revealed its utter hostility to public transparency, recklessly proposing a broad exception to the public’s right to access administrative documents that would render it completely useless. Imagine the damage to public oversight if the government could legally hide embarrassing documents merely by keeping them in file formats that required proprietary software to open. The court rejected the museum’s argument and specifically ordered it to make those same proprietary 3D files accessible to the public.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F334cddb2-51a1-441b-b8a0-4d211084f20d_1488x720.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F334cddb2-51a1-441b-b8a0-4d211084f20d_1488x720.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F334cddb2-51a1-441b-b8a0-4d211084f20d_1488x720.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F334cddb2-51a1-441b-b8a0-4d211084f20d_1488x720.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F334cddb2-51a1-441b-b8a0-4d211084f20d_1488x720.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_2400,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F334cddb2-51a1-441b-b8a0-4d211084f20d_1488x720.png" width="1200" height="581.0439560439561" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/334cddb2-51a1-441b-b8a0-4d211084f20d_1488x720.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;large&quot;,&quot;height&quot;:705,&quot;width&quot;:1456,&quot;resizeWidth&quot;:1200,&quot;bytes&quot;:497285,&quot;alt&quot;:&quot;Digital renders by Cosmo Wenman of 3D scans of The Kiss and Sleep, which musée Rodin was forced to publish.&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="Digital renders by Cosmo Wenman of 3D scans of The Kiss and Sleep, which musée Rodin was forced to publish." title="Digital renders by Cosmo Wenman of 3D scans of The Kiss and Sleep, which musée Rodin was forced to publish." srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F334cddb2-51a1-441b-b8a0-4d211084f20d_1488x720.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F334cddb2-51a1-441b-b8a0-4d211084f20d_1488x720.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F334cddb2-51a1-441b-b8a0-4d211084f20d_1488x720.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F334cddb2-51a1-441b-b8a0-4d211084f20d_1488x720.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><span>Digital renders by Cosmo Wenman of 3D scans of </span><em>The Kiss</em><span> and </span><em>Sleep</em><span>, which musée Rodin was forced to publish.</span></figcaption></figure></div><ul><li><p><em><strong>Secrecy of original scans and 3D printing formats: defeated</strong></em></p></li></ul><p><span>In the course of the trial, musée Rodin attempted to neutralize an element of our case by quietly publishing a small set of 3D scans </span><a href="https://www.musee-rodin.fr/recherche/fonds-patrimoniaux-et-documentaires-du-musee/fonds-historiques-et-archives-institutionnelles/archives-institutionnelles/fichiers-3d" rel="nofollow ugc noopener">on its website</a><span>, including </span><em>The Kiss</em><span> and </span><em>Sleep.</em><span> It hoped that by publishing them it would remove them from the dispute and avoid the court ruling specifically on the communicability of 3D files in .STL format, commonly used in 3D printing. But in a strategic blunder, the museum could not resist editing these few files prior to publishing them. We alerted the court to these modifications, and it ruled not only that .STL files are communicable administrative documents, but also that the law requires the museum to communicate its original, unaltered scan documents.</span></p><ul><li><p><em><strong>Counterfeiting countermeasures and political manipulation: rejected</strong></em></p></li></ul><p><span>Musée Rodin told the court that </span><em>all</em><span> of its other digital 3D scan files were “unfinished” — and therefore could lawfully be withheld from the public — because they had not been edited to include visible, indelible inscriptions of “Reproduction” on the sculptures’ scanned, digital surfaces. It claimed that the law against counterfeiting required such marks to prevent replicas from being misrepresented as originals and that without them, a digital, 3D scan document itself would constitute a criminal counterfeit. Those claims were nonsensical, of course, not only since it’s obvious that no one could mistake a digital file for a physical artifact, but also because vandalizing a scan by digitally carving the word “Reproduction” on it would be completely at odds with scanning practices in research, conservation, and cultural heritage contexts where fidelity to the original subject is paramount.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2bf83d72-b6b1-4964-9758-5c8e5543d57c_1200x600.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2bf83d72-b6b1-4964-9758-5c8e5543d57c_1200x600.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2bf83d72-b6b1-4964-9758-5c8e5543d57c_1200x600.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2bf83d72-b6b1-4964-9758-5c8e5543d57c_1200x600.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2bf83d72-b6b1-4964-9758-5c8e5543d57c_1200x600.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2bf83d72-b6b1-4964-9758-5c8e5543d57c_1200x600.png" width="1200" height="600" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2bf83d72-b6b1-4964-9758-5c8e5543d57c_1200x600.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:600,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:735346,&quot;alt&quot;:&quot;Digital render by Wenman of the edited 3D scan of The Kiss published by musée Rodin.&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="Digital render by Wenman of the edited 3D scan of The Kiss published by musée Rodin." title="Digital render by Wenman of the edited 3D scan of The Kiss published by musée Rodin." srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2bf83d72-b6b1-4964-9758-5c8e5543d57c_1200x600.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2bf83d72-b6b1-4964-9758-5c8e5543d57c_1200x600.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2bf83d72-b6b1-4964-9758-5c8e5543d57c_1200x600.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2bf83d72-b6b1-4964-9758-5c8e5543d57c_1200x600.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><span>Digital render by Wenman of edited 3D scan of </span><em>The Kiss</em><span> published by musée Rodin.</span></figcaption></figure></div><p>On the supposed legal requirement for “Reproduction” marks on 3D scans, the museum could only cite policy guidance from the Ministry of Culture, in the convenient form of a “Charter of best practices in 3D printing” produced by the ministry’s High Council of Literary and Artistic Property (CSPLA). Years earlier, when I had learned that the museum itself was contributing to the CSPLA’s policy recommendations, I alerted the CSPLA and objected to the museum’s obvious conflict of interest, warning that the museum would attempt to propose policies crafted specifically to retroactively oppose my requests for access. Later, in trial, as predicted, musée Rodin cited the CSPLA’s “charter” and submitted it as evidence in support of the idea that “Reproduction” marks are needed on 3D scans. The museum submitted this evidence without disclosing to the court that it had itself co-authored that self-serving — and, frankly, absurd — guidance.</p><p><em>The court completely rejected musée Rodin’s claims about marks of “Reproduction” on scans</em><span>, echoing my earlier warnings to the CSPLA, specifically noting that the ministry’s policy recommendations were irrelevant because they had been issued years after the scans’ completion and could not be applied retroactively.</span></p><ul><li><p><em><strong>Imperfection of scans and technological incompetence: defeated with evidence from London</strong></em></p></li></ul><p>Musée Rodin also argued that many of its 3D scan documents were incomplete and therefore non-communicable because they are in text format, have gaps in their surface measurements where the sculptures were not scanned in their entirety, and are generally mediocre in quality.</p><p><span>Incredibly, the museum also argued its scan documents were non-communicable because they are supposedly unusable since the museum’s own anonymous technical consultants claimed they did not know how to use them. An astonishing set of pleadings; imagine the thinking involved in arguing that documents may be concealed from the public because they are in a universally accessible </span><em>text</em><span> format, or because the administrative agency that holds them is too incompetent to use them.</span></p><p><span>In response to the museum’s nonsensical technological claims, we submitted expert testimony from </span><a href="https://scholar.google.com/citations?user=soUq_eQAAAAJ" rel="nofollow ugc noopener">Professor Michael Kazhdan</a><span>, full professor of computer graphics in the department of computer science at Johns Hopkins University and co-developer of the </span><em>Poisson Surface Reconstruction</em><span> algorithm, which is used worldwide in 3D scan data analysis. Professor Kazhdan explained to the court that documents in plaintext format are fundamentally well suited for preserving scan data, and that such documents are easily exploitable by experts and amateurs alike. He also explained that gaps in scanned surfaces are a normal, expected, and ubiquitous phenomenon in 3D scanning and are not considered to render a scan document “incomplete” or unusable.</span></p><p><span>We also submitted testimony from artist and 3D scanning expert </span><a href="https://www.galerie-guilin.fr/" rel="nofollow ugc noopener">Ghislain Moret de Rocheprise</a><span>, who explained that plaintext format is the exact format the Ministry of Culture itself recommends for 3D scanned point-cloud documents and that it is commonly used by the general public as well as industry and government precisely because it is open, non-proprietary, and easy to preserve and access.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e5b6863-15e8-4388-9c2a-726fdb0fedc3_1073x1600.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e5b6863-15e8-4388-9c2a-726fdb0fedc3_1073x1600.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e5b6863-15e8-4388-9c2a-726fdb0fedc3_1073x1600.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e5b6863-15e8-4388-9c2a-726fdb0fedc3_1073x1600.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e5b6863-15e8-4388-9c2a-726fdb0fedc3_1073x1600.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e5b6863-15e8-4388-9c2a-726fdb0fedc3_1073x1600.png" width="1073" height="1600" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3e5b6863-15e8-4388-9c2a-726fdb0fedc3_1073x1600.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1600,&quot;width&quot;:1073,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:698675,&quot;alt&quot;:&quot;“M41LL0L_1”, from “P01NT_CL0UD” series of impressionist works made directly from point-clouds by Ghislain Moret de Rocheprise&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="“M41LL0L_1”, from “P01NT_CL0UD” series of impressionist works made directly from point-clouds by Ghislain Moret de Rocheprise" title="“M41LL0L_1”, from “P01NT_CL0UD” series of impressionist works made directly from point-clouds by Ghislain Moret de Rocheprise" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e5b6863-15e8-4388-9c2a-726fdb0fedc3_1073x1600.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e5b6863-15e8-4388-9c2a-726fdb0fedc3_1073x1600.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e5b6863-15e8-4388-9c2a-726fdb0fedc3_1073x1600.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3e5b6863-15e8-4388-9c2a-726fdb0fedc3_1073x1600.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><em>“M41LL0L_1”</em><span>, from “P01NT_CL0UD” series of impressionist works made directly from point-clouds by Ghislain Moret de Rocheprise.</span></figcaption></figure></div><p><span>On the question of the supposed uselessness of so-called incomplete 3D scans, we also submitted as evidence correspondence from 2020 between musée Rodin and the Tate London museum, which I obtained through a separate UK </span><em>Freedom of Information Act</em><span> request to the Tate. In that correspondence, Tate requested permission to 3D scan several sculptures on loan from musée Rodin, so that Tate could create digital renders of the works for use in a promotional video. Musée Rodin granted Tate that permission on the express condition that the sculptures </span><em>not</em><span> be scanned in their entirety. This directly contradicted musée Rodin’s position in court, demonstrating that it fully recognizes the utility of so-called “incomplete” scans. Musée Rodin’s preferential treatment of Tate London also revealed that it well understands there is no legal requirement to append marks of “Reproduction” to 3D scans of Rodin’s works.</span></p><div id="youtube2-EyvYLiIeBfw" data-attrs="{&quot;videoId&quot;:&quot;EyvYLiIeBfw&quot;,&quot;startTime&quot;:null,&quot;endTime&quot;:null}" data-component-name="Youtube2ToDOM"><p><iframe src="https://www.youtube-nocookie.com/embed/EyvYLiIeBfw?rel=0&amp;autoplay=0&amp;showinfo=0&amp;enablejsapi=0" frameborder="0" loading="lazy" gesture="media" allow="autoplay; fullscreen" allowautoplay="true" allowfullscreen="true" width="728" height="409"></iframe></p></div><p>Evaluating our evidence and the museum’s strange claims, the court determined that musée Rodin cannot evade its obligation to communicate 3D scans by claiming they exclude portions of the scanned subjects or are of low quality, nor by admitting its technological incompetence to use them.</p><ul><li><p><em><strong>Trademarks: irrelevant</strong></em></p></li></ul><p>The court viewed musée Rodin’s trademarks in the "Rodin" name to be irrelevant, despite the museum’s repeated pleadings. This decision will help prevent other organizations from blocking public access to artwork by attaching their trademarks to digital records and physical replicas of public domain works.</p><ul><li><p><em><strong>Secrecy of attorney-client privilege: rejected</strong></em></p></li></ul><p>Musée Rodin had originally assured the CADA that it would comply with my request for the museum’s internal correspondence discussing my first requests to the museum. Once in trial, though, the museum reversed its position and attempted to conceal these documents from me with an improper, retroactive claim of attorney-client privilege which the judges rejected. The court ordered musée Rodin to communicate to me its early, internal deliberations on my initial inquiries.</p><ul><li><p><em><strong>Intimidation tactics: rejected</strong></em></p></li></ul><p><span>Before I filed my suit, in correspondence between musée Rodin and the Ministry of Culture — which the museum accidentally revealed during trial — the museum’s then-director asked the Ministry for advice on how the museum should respond to my requests and defend its refusals. The Ministry declined to give the museum any guidance, noting the Ministry’s own need for the clarifications from the court that would result from my likely litigation. Despite this, and even though musée Rodin reluctantly made several concessions to me only in the course of the trial and acknowledged it was doing so as a direct result of my suit, the museum nonetheless petitioned the court to condemn </span><em>me</em><span> to pay for its legal defense, and requested a figure more than ten times what is typical in this kind of procedure. This maneuver was clearly intended to penalize and intimidate me and discourage future requesters from standing up for the public’s rights.</span></p><p>Not only did the court reject that abusive request, the judges condemned musée Rodin to pay me €&nbsp;1,500 towards the expenses I incurred in bringing this action against the museum. Even though this a very small, symbolic sum compared to the time and effort my attorney and I have devoted to this effort, we are happy to have this recognition from the court of the legitimacy and need for our efforts.</p><p>As of this writing, more than a year past the court’s deadline to communicate its scans and related documents to the public, musée Rodin has still not complied; it has not published nor sent me a single document, nor has it paid me the token compensation. The museum has apparently decided to compound its lawlessness by defying the court's orders, likely with the intent to exhaust our very limited resources by forcing us to bring it back to the tribunal to get another order forcing it to actually comply with the ruling.</p><p><span>Nevertheless, altogether the court’s decision amounts to a complete repudiation of all arguments against public access that relied on the museum’s </span><em>droit moral</em><span>, economic model, cultural and patrimony sensitivities, institutional prestige and romantic mystique. We accomplished this despite the museum’s false alarms of an existential threat to all French national museums, and we did this with a foreign plaintiff (me), whom musée Rodin portrayed as a direct commercial competitor, and whom it repeatedly insinuated had </span><em>criminal</em><span> intent, a notion we did not even credit with a denial. Our entire approach and framing of the case, and the resulting decision, clear away the government’s strongest, most sensational — and most ludicrous — objections to public access to digitizations of public domain artwork.</span></p><p>We have established the strongest legal foundation for public access and reuse of digitizations of public domain works ever, in the most challenging possible circumstances, against an extremely well-positioned adversary. This ruling is a significant accomplishment that will help with every other fight for public access to cultural heritage works in France and beyond.</p><p>It’s a victory for open access.</p><p>Along with the important precedents described above, however, the tribunal made several serious legal and procedural errors that Fitzjean Ó Cobhthaigh and I feel obligated to correct. If those errors stand, they would weaken the public’s right to access administrative documents in general, and specifically permit the government to conceal an extraordinarily important class of documents. The tribunal’s errors pose a danger to the public well beyond the question of accessing simple 3D scans from museum collections.</p><ul><li><p><em><strong>An imaginary list of files</strong></em></p></li></ul><p>From the very start, I had requested that musée Rodin communicate to me a list of the 3D scan files in its possession, including scans of works from other organizations’ collections. The CADA’s analysis affirmed my request, noting that the law requires the museum to communicate such a list to the public even if one does not exist and must be generated on demand. In response, the museum not only denied that it held scans from other organizations, but it flatly told the CADA — in writing but without any justification — that it simply would not give me a list of any scan files it held. In court it never offered any defense of this lawless position.</p><p><span>Instead, during trial musée Rodin provided two incomplete, imprecise, and contradictory inventories, not of files, but of the few </span><em>sculptures</em><span> it admits having scanned and partial, vague descriptions of their file formats. At the same time, the museum complained to the court that our request for documents lacked sufficient precision since we could not guess at the exact files it held.</span></p><p>We repeatedly urged the court to recognize that the museum had in fact never supplied a simple list of files and had never identified even a single scan file by its actual file name.</p><p>The court nonetheless ruled that my request for a list of files had been rendered moot because the museum had provided one during the trial, which, again, it quite simply never did.</p><p>To this day, the court itself has no idea what scan files the museum possesses nor what, specifically, it has ordered the museum to publish, and the public can only guess. It is a very strange situation.</p><ul><li><p><em><strong>The Three Shades vanish</strong></em></p></li></ul><p><span>In its first defense brief, musée Rodin confirmed that it held 3D scans of several sculptures, including </span><em>The Kiss</em><span>, </span><em>Sleep, </em><span>and </span><em>The Three Shades.</em><span> It specifically told the court it would publish these three scans in order to neutralize elements of my suit. While it eventually, improperly, published edited versions of </span><em>The Kiss </em><span>and </span><em>Sleep,</em><span> it published nothing for </span><em>The Three Shades.</em></p><p><span>We not only alerted the court to musée Rodin’s failure to publish the </span><em>The Three Shades</em><span> scan, but we were also able to locate and present the court with photographic evidence that the museum had indeed scanned the sculpture.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9c3fa4e2-d4dc-4eb9-a58d-60b5bda7b524_435x281.png" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9c3fa4e2-d4dc-4eb9-a58d-60b5bda7b524_435x281.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9c3fa4e2-d4dc-4eb9-a58d-60b5bda7b524_435x281.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9c3fa4e2-d4dc-4eb9-a58d-60b5bda7b524_435x281.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9c3fa4e2-d4dc-4eb9-a58d-60b5bda7b524_435x281.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9c3fa4e2-d4dc-4eb9-a58d-60b5bda7b524_435x281.png" width="728" height="470.2712643678161" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/9c3fa4e2-d4dc-4eb9-a58d-60b5bda7b524_435x281.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;normal&quot;,&quot;height&quot;:281,&quot;width&quot;:435,&quot;resizeWidth&quot;:728,&quot;bytes&quot;:340210,&quot;alt&quot;:&quot;FNAC’s The Three Shades being scanned at C2RMF. Photo via 7DWorks.&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="FNAC’s The Three Shades being scanned at C2RMF. Photo via 7DWorks." title="FNAC’s The Three Shades being scanned at C2RMF. Photo via 7DWorks." srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9c3fa4e2-d4dc-4eb9-a58d-60b5bda7b524_435x281.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9c3fa4e2-d4dc-4eb9-a58d-60b5bda7b524_435x281.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9c3fa4e2-d4dc-4eb9-a58d-60b5bda7b524_435x281.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9c3fa4e2-d4dc-4eb9-a58d-60b5bda7b524_435x281.png 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption><span>FNAC’s </span><em>The Three Shades</em><span> being scanned at C2RMF. Photo via 7DWorks.</span></figcaption></figure></div><p><span>The museum responded in its second defense brief by reluctantly elaborating that in 2008 it had cooperated with several organizations to 3D scan a plaster cast of </span><em>The Three Shades</em><span> that belongs to the National Foundation for Contemporary Art (FNAC) and has been deposited in the musée des Beaux-Arts de Quimper since 1914, before Auguste Rodin died and before musée Rodin was even established. Musée Rodin explained to the court that it had mistakenly promised to publish a scan of </span><em>The Three Shades</em><span> only to realize later that it did not have a scan of </span><em>its own</em><span> cast of the sculpture. Obviously worried that it had accidentally confirmed that it holds scans from other organizations’ collections after specifically denying this, the museum further explained… nothing.</span></p><p><span>Musée Rodin never suggested there had been any technical problems when it scanned FNAC’s </span><em>Three Shades</em><span>. It never suggested it could not locate the scan. It never claimed the scan did not exist, and it never denied possessing it. </span><em>The Three Shades</em><span> simply disappeared from musée Rodin’s defense arguments, and for some reason the court took it upon itself to imagine an explanation for its vanishing.</span></p><p><span>Incredibly, in its written decision, the tribunal ruled that my request for the scan of </span><em>The Three Shades </em><span>was moot because, in the judges’ own words, “musée Rodin ultimately maintains that its research shows that it did not proceed with the digitalization of </span><em>The Three Shades</em><span> due to technical difficulties. Under these conditions, no files can be communicated.”</span></p><p><span>It’s fitting that </span><em>The Three Shades</em><span> stands atop the </span><em>Gates of Hell</em><span>. The court’s mishandling of a simple list of files and </span><em>The Three Shades</em><span> together would damn the public’s right to access administrative documents to a hopeless fate. If on one hand the court may credit an administrative agency with identifying files it never identified, while on the other hand erroneously conclude that other files never existed — without the agency even making that claim and despite the agency’s own statements and independent proof to the contrary — the government could conceal any documents it pleased simply by being strategically sloppy with its statements to the court, rendering freedom of information law completely dysfunctional.</span></p><p><span>The potential for harm from these errors is difficult to overstate, since it is multiplied by the court’s further confusion over a simple type of document commonly used to record and preserve 3D measurements: </span><em>point-clouds.</em><span> At a </span><em>minimum</em><span>, the documents and data at risk relate to the entirety of the French national territory.</span></p><p><span>As we carefully explained to the tribunal, when a subject is 3D scanned the scanning equipment takes measurements of many millions — sometimes billions — of points on the subject’s surface. A document known as a </span><em>point-cloud</em><span> is saved, which records the X, Y, and Z positions of each measured point relative to the scanner. Sometimes they also record each point’s color data and other properties. Point-cloud documents are the primary, fundamental metrological records that archive the results of 3D scan surveys. They are the essential documents from which all analyses and understanding flow and are typically among the most important deliverables scanning service providers produce for their clients, be they private or public.</span></p><p>Because they are so important, point-clouds are frequently saved in plaintext formats like .ASCII, .OBJ, and .TXT to ensure that they remain open source, easily accessible, and well-preserved for future generations. Anyone can open a plaintext formatted point-cloud document in text editing software and view the numeric values it records. Point-cloud documents are of course directly exploitable with 3D software and simple web-browser visualization tools which can easily and immediately read them and display visualizations, 3D digital environments and reconstructions, and precise analyses of the scanned subject. The Ministry of Culture itself recommends preserving and publishing scan data in open text format point-clouds for these very reasons, and this is also why musée Rodin originally agreed to create and publish text-formatted point-clouds in its digitization funding applications to the ministry so many years ago.</p><p>So what is really at risk here?</p><p>Our case deals with scans of sculptures held by musée Rodin — perhaps a few dozen, perhaps hundreds; the number is unclear — but the lower court did not seem to realize that 3D scanning isn’t limited to sculpture or the cultural heritage sector, of course. Point-cloud documents are used to record and preserve information about almost every type of subject worth scanning, across countless important sectors of intense public interest.</p><div id="youtube2-oxo7paE7MeM" data-attrs="{&quot;videoId&quot;:&quot;oxo7paE7MeM&quot;,&quot;startTime&quot;:null,&quot;endTime&quot;:null}" data-component-name="Youtube2ToDOM"><p><iframe src="https://www.youtube-nocookie.com/embed/oxo7paE7MeM?rel=0&amp;autoplay=0&amp;showinfo=0&amp;enablejsapi=0" frameborder="0" loading="lazy" gesture="media" allow="autoplay; fullscreen" allowautoplay="true" allowfullscreen="true" width="728" height="409"></iframe></p></div><p>France’s National Institute of Geographic and Forestry Information (IGN), for example, is undertaking an ambitious aerial 3D scanning survey of “the entire soil and subsoil of France.” Forests, farmland, coastlines, roads, civil infrastructure and entire cities — the entire built and natural environment — are being 3D scanned and recorded in point-cloud documents.</p><p>According to IGN, trillions of points of 3D data are being gathered “to respond to major societal challenges” and all the data being acquired and produced within the framework of the program is being distributed under open data licenses. IGN’s point-cloud documents are intended to be used in environmental monitoring, risk management, forestry and agriculture, biodiversity monitoring, municipal and infrastructure planning, archaeology, and whatever else the public wishes to do with them, including uses we have not yet invented.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1b490cb0-5496-4123-b7e5-bdb78d143f25_940x530.webp" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1b490cb0-5496-4123-b7e5-bdb78d143f25_940x530.webp 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1b490cb0-5496-4123-b7e5-bdb78d143f25_940x530.webp 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1b490cb0-5496-4123-b7e5-bdb78d143f25_940x530.webp 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1b490cb0-5496-4123-b7e5-bdb78d143f25_940x530.webp 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1b490cb0-5496-4123-b7e5-bdb78d143f25_940x530.webp" width="940" height="530" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1b490cb0-5496-4123-b7e5-bdb78d143f25_940x530.webp&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:530,&quot;width&quot;:940,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:137468,&quot;alt&quot;:&quot;Point-cloud visualization from 3D scans of Notre Dame by Dr. Andrew Tallon, prior to the 2019 fire. Image via National Geographic.&quot;,&quot;title&quot;:null,&quot;type&quot;:&quot;image/webp&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="Point-cloud visualization from 3D scans of Notre Dame by Dr. Andrew Tallon, prior to the 2019 fire. Image via National Geographic." title="Point-cloud visualization from 3D scans of Notre Dame by Dr. Andrew Tallon, prior to the 2019 fire. Image via National Geographic." srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1b490cb0-5496-4123-b7e5-bdb78d143f25_940x530.webp 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1b490cb0-5496-4123-b7e5-bdb78d143f25_940x530.webp 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1b490cb0-5496-4123-b7e5-bdb78d143f25_940x530.webp 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1b490cb0-5496-4123-b7e5-bdb78d143f25_940x530.webp 1456w" sizes="100vw" loading="lazy"></picture></div></a><figcaption>Point-cloud visualization from 3D scans of Notre Dame by Dr. Andrew Tallon, prior to the 2019 fire. Image via National Geographic.</figcaption></figure></div><p>Point-cloud documents are also used in specific cases we cannot anticipate, including assessing disaster sites, crime scenes, and industrial accidents. For example, point-clouds of Notre Dame de Paris resulting from 3D surveys made prior to the 2019 fire are now essential to its current restoration.</p><p>In our case, the administrative tribunal of Paris appears to have disregarded these incontrovertible facts and our experts’ advisories on the role, usefulness, universal accessibility, direct exploitability, and importance of point-cloud documents. It also ignored our request that it undertake an investigation of its own to better inform itself and understand the technology and issues at stake.</p><p>Instead, the court appears to have allowed itself to be confused by the unsubstantiated and contradictory statements of musée Rodin’s anonymous and confessed incompetent technical consultants.</p><p>The court articulated its profound misunderstanding of the technology and nature of point-cloud documents by explaining that they may be withheld from the public because they are not directly useful in themselves, “but only constitute raw material needed for the production of subsequent documents.”</p><p><span>The court not only deferred to the museum’s misleading technical characterizations, it did something far more strange and ominous. On its own initiative the tribunal ruled that since it contains unedited raw data, a document containing a point-cloud — </span><em>an entire class of documents</em><span> — may be withheld from the public because, as the court explained, it “does not reveal any intention on the part of the administration”.</span></p><p>Worse, during trial, musée Rodin itself did not even suggest either of these strange technical and legal arguments, which only appeared for the first time in the judges’ own final written decision. My attorney and I were never afforded an opportunity to point out to the court that its reasoning had no basis in the law, which holds that an administration’s “intentions” are irrelevant to the communicability of its documents. Nor could we gently remind the court that its factual assertions were untrue and wildly at odds with 3D scanning and 3D data handling practices and consensus in the cultural heritage field, in industry, by amateurs, and with the government’s own recommendations for 3D data preservation and dissemination.</p><p><span>The tribunal’s legal and technological errors on the point-cloud issue alone pose a threat to public access to </span><em>millions</em><span> of documents containing </span><em>petabytes</em><span> of data from government-funded 3D surveys of the environment, oceans, the atmosphere, forests, floodplains, farmland, architecture, towns and cities, civil infrastructure, and archaeological sites, as well as the primary, archival, highest-resolution 3D scans of cultural heritage works.</span></p><p>Under the tribunal’s ruling, publicly funded point-cloud documents such as those being produced by IGN and others could legally be withheld entirely from the public. Or, the government could elect, at its own discretion, to grant the public access to such documents only after they had been processed, refined, or edited to accommodate private contractors’ and special interests’ commercial considerations, or perhaps political sensitivities, with no legal recourse for the public to examine the original, unaltered point-cloud documents directly.</p><p>Concerning point-clouds alone, the court’s errors immediately threaten to stall important technological developments, hinder scientific research and openness, and obscure and impede infrastructure and environmental monitoring by scientists, the public, journalists, and the general public.</p><p>I can only imagine and hope that the tribunal was simply unaware of the scope and degree of damage these highly irregular elements of its decision would cause. They are dangerous.</p><p><span>France’s supreme court formally</span><strong> </strong><span>accepted our appeal on April 17, 2024 and transmitted our brief to musée Rodin and the Ministry of Culture.  You can read our brief </span><a href="https://cosmowenman.files.wordpress.com/2024/03/20231201-wenman-brief-1-and-exhibits-conseil-detat_fr_en.zip" rel="nofollow ugc noopener">here</a><span>. The court gave the ministry and museum two months to present their defense, a deadline they have, as of this writing, missed by over three months. It is unlikely they will publicize their defense nor solicit input from the public while drafting it. </span></p><p>Our brief explains point-by-point the Paris tribunal’s grave legal and procedural errors and unambiguously demonstrates the lower court’s obvious and profound technological misunderstanding of point-cloud documents.</p><p><span>So much more is now at stake than public access to 3D scans of a few popular sculptures, or preserving the 19</span><sup>th</sup><span>-century business model of one intransigent museum. </span><em>One</em><span> museum could have lawless and reactionary administrators opposed to public oversight and public access, with no vision or planning for the future or innovation in the arts, and the damage might be reasonably contained to the loss of scans of its own collection. But with its deceptive arguments, reckless tactics, and the approval of the Ministry of Culture, musée Rodin managed to distract and confuse the tribunal with dangerous implications on a much larger scale.</span></p><p>The public and the Conseil d’État need to understand that the tribunal’s reasoning would fundamentally undermine the public’s right to access administrative documents and hinder its ability to monitor the government’s activities in countless sectors. The lower court’s errors would subject the public’s right to access administrative documents to the arbitrary whims of administrations that could simply hide, obfuscate, or misrepresent their holdings and their “intentions” for documents as a means of blocking public inquiry. The tribunal’s decision would also set a precedent allowing regional courts to simply invent their own legal standards on a case-by-case basis, based on total unfamiliarity with both well-established and emerging technologies, without giving litigants or the public a chance to respond.</p><p>All this public damage because musée Rodin wants to operate like a private atelier with a monopoly to exclusively service one long-dead artist’s estate and his wealthy collectors, forever. Rather than embrace the future and permit the public to access their 3D digitizations of the public’s cultural heritage, musée Rodin and the Ministry of Culture have created a smokescreen of legal and technological nonsense and started a fire that threatens our common resources across the entire digital landscape.</p><p>The productive, lawful elements of the Paris tribunal’s decision will be essential to securing access to countless important 3D scans from French national museums. The decision will help others’ efforts to modernize policies and establish public access to digitizations in public institutions throughout Europe. We can all look forward to what the public will create by fully exercising our newly clarified rights, and we will all be enriched by the full use of 3D scans of our shared cultural heritage.</p><p>But first the Conseil d’État must extinguish the fire musée Rodin and the Ministry of Culture have started.</p><p><em><span>Cosmo Wenman is an open access activist and a design and fabrication consultant. He lives in San Diego. He can be reached at </span><a href="http://www.cosmowenman.com/" rel="nofollow ugc noopener">cosmowenman.com</a><span> and </span><a href="https://twitter.com/CosmoWenman" rel="nofollow ugc noopener">twitter.com/CosmoWenman</a></em></p><p><em>Copyright 2024 Cosmo Wenman</em></p><p>If you enjoyed this story, please share it and subscribe. I’ll be writing more about this case as it progresses.</p><p data-attrs="{&quot;url&quot;:&quot;https://cosmowenman.substack.com/p/secret-3d-scans-in-the-french-supreme?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://cosmowenman.substack.com/p/secret-3d-scans-in-the-french-supreme?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel="nofollow ugc noopener"><span>Share</span></a></p><p data-attrs="{&quot;url&quot;:&quot;https://cosmowenman.substack.com/p/secret-3d-scans-in-the-french-supreme/comments&quot;,&quot;text&quot;:&quot;Leave a comment&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://cosmowenman.substack.com/p/secret-3d-scans-in-the-french-supreme/comments" rel="nofollow ugc noopener"><span>Leave a comment</span></a></p><p><strong><span>Cosmo Wenman</span><br></strong><a href="http://www.cosmowenman.com/" rel="nofollow ugc noopener">cosmowenman.com</a><br><a href="mailto:cosmo.wenman@gmail.com" rel="nofollow ugc noopener">cosmo.wenman@gmail.com</a></p><p><strong>Alexis Fitzjean Ó Cobhthaigh</strong><br><span>Attorney at the Paris Bar</span><br><a href="https://afocavocat.eu/" rel="nofollow ugc noopener">afocavocat.eu</a><br><a href="mailto:afoc@afocavocat.eu" rel="nofollow ugc noopener">afoc@afocavocat.eu</a><br><a href="mailto:afoc.avocat@protonmail.com" rel="nofollow ugc noopener">afoc.avocat@protonmail.com</a></p><p><strong>Hugues Herpin</strong><br><span>Head of Service, Musée Rodin</span><br><a href="mailto:herpin@musee-rodin.fr" rel="nofollow ugc noopener">herpin@musee-rodin.fr</a><br><span>+33 (0)1 44 18 61 10</span></p><p><strong>Hélène Pilidjian</strong><br><span>Head of the litigation office,</span><br><span>Ministry of Culture</span><br><a href="mailto:helene.pilidjian@culture.gouv.fr" rel="nofollow ugc noopener">helene.pilidjian@culture.gouv.fr</a><br><span>+33 (0)1 40 15 80 00</span></p><p><strong>Caroline-Sarah Ellenberg</strong><br><span>Deputy Director, in charge of legal affairs, Réunion des musées nationaux</span><br><a href="mailto:caroline-sarah.ellenberg@rmngp.fr" rel="nofollow ugc noopener">caroline-sarah.ellenberg@rmngp.fr</a><br><span>+33 (0)1 40 13 48 00</span></p><p><strong>Pierre Vigneron</strong><br><span>Head of Grand Palais Rmn Photo</span><br><a href="mailto:Pierre.Vigneron@rmngp.fr" rel="nofollow ugc noopener">Pierre.Vigneron@rmngp.fr</a><br><a href="mailto:agence.photo@grandpalaisrmn.fr" rel="nofollow ugc noopener">agence.photo@grandpalaisrmn.fr</a><br><span>+33 (0)1 40 13 48 00</span></p><p><span>CADA conseil 20190026:</span><br><a href="https://cada.data.gouv.fr/20190026/" rel="nofollow ugc noopener">https://cada.data.gouv.fr/20190026/</a></p><p><span>CADA avis 20192300:</span><br><a href="https://cada.data.gouv.fr/20192300/" rel="nofollow ugc noopener">https://cada.data.gouv.fr/20192300/</a></p><p><span>Decision of the Administrative Tribunal of Paris, April 21 2023:</span><br><a href="https://cosmowenman.files.wordpress.com/2024/03/20230421-cosmo-wenman-vs-musee-rodin-decision-administrative-tribunal-of-paris_fr_en.pdf" rel="nofollow ugc noopener">https://cosmowenman.files.wordpress.com/2024/03/20230421-cosmo-wenman-vs-musee-rodin-decision-administrative-tribunal-of-paris_fr_en.pdf</a></p><p><span>Wenman’s appeal to the Conseil d'État, December 1, 2023:</span><br><a href="https://cosmowenman.files.wordpress.com/2024/03/20231201-wenman-brief-1-and-exhibits-conseil-detat_fr_en.zip" rel="nofollow ugc noopener">https://cosmowenman.files.wordpress.com/2024/03/20231201-wenman-brief-1-and-exhibits-conseil-detat_fr_en.zip</a></p><p><span>Report on 3D scans advertised by RMN:</span><br><a href="https://cosmowenman.com/wp-content/uploads/2024/10/20220613-rmngp-sketchfab-3d-scan-ads-en.pdf" rel="nofollow ugc noopener">https://cosmowenman.com/wp-content/uploads/2024/10/20220613-rmngp-sketchfab-3d-scan-ads-en.pdf</a></p><p><span>RMN’s secret legal arguments to CADA:</span><br><a href="https://cosmowenman.files.wordpress.com/2024/04/20221122-correspondance-rmn-cada-si604822112216300-occlus-par-la-cada_fr_en_text.pdf" rel="nofollow ugc noopener">https://cosmowenman.files.wordpress.com/2024/04/20221122-correspondance-rmn-cada-si604822112216300-occlus-par-la-cada_fr_en_text.pdf</a></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Factorio – Visualizing construction material dependencies (175 pts)]]></title>
            <link>https://community.wolfram.com/groups/-/m/t/1793319</link>
            <guid>41876821</guid>
            <pubDate>Fri, 18 Oct 2024 06:25:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://community.wolfram.com/groups/-/m/t/1793319">https://community.wolfram.com/groups/-/m/t/1793319</a>, See on <a href="https://news.ycombinator.com/item?id=41876821">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
		<td>
			<div>

				
				<p><img src="https://community.wolfram.com//c/portal/getImageAttachment?filename=fd1f632099404d13bb4a9c2ce3f1284e92058e00078b28baf5e6858887e5c505_product_card_v2_mobile_slider_639.jpg&amp;userId=73716" alt="enter image description here"></p>
<p>Factorio is a game where you crashed on a planet with your space-craft. You have to built a new rocket and leave this planet again. In order to do so you will need to mine metals and built yourself a factory, make labs to do research, and built machine that make other machines, and finally combine all of this to make rockets, satellites, rocket fuel, trains, flying robots, oil products, steam engines, plastics, electronic chips, iron, copper, uranium centrifuging, solar panels etc etc. An incredibly complicated game where the key idea is that you automate this entire process using machines in your factory.</p>
<p>See <a href="https://www.youtube.com/watch?v=KVvXv1Z6EY8">https://www.youtube.com/watch?v=KVvXv1Z6EY8</a> .</p>
<p>To do research you need to manufacture research-packs which are created from other resources, which might also be created from other resources etc. etc. </p>
<p>Here is some code that interprets the Factorio wiki:</p> 
<pre>baseurl = "https://wiki.factorio.com";
ClearAll[GetImage]
ClearAll[FindDependencies]
GetImage[url_] := GetImage[url] = Import[url]
FindDependencies[url_String] := 
 FindDependencies[url] = Module[{xml, c, end, other, sel = 1},
   xml = Import[url, "XMLObject"];
   c = Cases[xml, 
     XMLElement["table", {}, {contents_}] :&gt; contents, \[Infinity]];
   c = Select[c, 
     MemberQ[#, XMLElement["p", {}, {"Recipe\n"}], \[Infinity]] &amp;];
   c = FirstCase[#, 
       XMLElement[
         "tr", {}, {XMLElement[
           "td", {___, 
            "class" -&gt; "infobox-vrow-value"}, {x__}]}] :&gt; {x}, 
       Missing[], \[Infinity]] &amp; /@ c;
   If[Length[c] &gt; 0,
    c = c[[sel]];
    c = Cases[c, 
      XMLElement[
        "div", {"class" -&gt; "factorio-icon", 
         "style" -&gt; "background-color:#999;"}, {XMLElement[
          "a", {"shape" -&gt; "rect", "href" -&gt; hrefurl_, 
           "title" -&gt; name_}, {XMLElement[
            "img", {"alt" -&gt; _, "src" -&gt; imgurl_, "width" -&gt; "32", 
             "height" -&gt; "32",___}, {}]}], 
         XMLElement[
          "div", {"class" -&gt; "factorio-icon-text"}, {num_}]}] :&gt; 
       FactorioObject[baseurl &lt;&gt; hrefurl, name, 
        GetImage[baseurl &lt;&gt; imgurl], 
        ToExpression@StringTrim[StringReplace[num, "k" -&gt; "000"]]], \[Infinity]];

    c = DeleteCases[c, FactorioObject[_, "Time", _, _]];
    {{end}, other} = TakeDrop[c, -1];
    other -&gt; end,
    {}
    ]
   ]
ClearAll[FindDependencyTree]
FindDependencyTree[url_String, iterations_: 6] := 
 Module[{a, known, unknown, new, vlbls, vertices},
  a = FindDependencies[url];
  known = {a};
  Do[
   unknown = Join @@ known[[All, 1]];
   unknown = DeleteDuplicates[Complement[unknown, known[[All, 2]]]];
   new = DeleteDuplicates[FindDependencies@*First /@ unknown];
   new = DeleteCases[new, {}];
   known = DeleteDuplicates[Join[known, new]];
   ,
   {iterations}
   ];
  vlbls = 
   Cases[known, 
    FactorioObject[_, name_, 
      icon_, _] :&gt; (name -&gt; 
       Image[icon, ImageSize -&gt; 32]), \[Infinity]];
  vertices = 
   DeleteDuplicates[
    Join @@ Table[(# -&gt; k[[2, 2]]) &amp; /@ k[[1, All, 2]], {k, known}]];
  &lt;|"LabelRules" -&gt; vlbls, "Vertices" -&gt; vertices, 
   "Dependencies" -&gt; known|&gt;
  ]
</pre>
<p>Let's ask the dependency tree for the first science pack:</p> 
<pre>out1 = FindDependencyTree["https://wiki.factorio.com/Science_pack_1"];
Graph[out1["Vertices"], VertexShape -&gt; out1["LabelRules"], 
 VertexSize -&gt; {"Scaled", 0.05}]
</pre>
<p><img src="https://community.wolfram.com//c/portal/getImageAttachment?filename=2381Factorio_1.png&amp;userId=73716" alt="enter image description here"></p>
<p>To make Science pack 1, we need gears and copper plates. And to make gears we need iron plates. The iron and copper plates are made from iron and copper ore. </p>
<p>This is still relatively simple, let's look at the other science packs:</p> 
<pre>out2 = FindDependencyTree[
   "https://wiki.factorio.com/Science_pack_2"];
Graph[out2["Vertices"], VertexShape -&gt; out2["LabelRules"], 
 VertexSize -&gt; {"Scaled", 0.05}]
out3 = FindDependencyTree[
   "https://wiki.factorio.com/Science_pack_3"];
Graph[out3["Vertices"], VertexShape -&gt; out3["LabelRules"], 
 VertexSize -&gt; {"Scaled", 0.05}]
out4 = FindDependencyTree[
   "https://wiki.factorio.com/Military_science_pack"];
Graph[out4["Vertices"], VertexShape -&gt; out4["LabelRules"], 
 VertexSize -&gt; {"Scaled", 0.05}]
out5 = FindDependencyTree[
   "https://wiki.factorio.com/Production_science_pack"];
Graph[out5["Vertices"], VertexShape -&gt; out5["LabelRules"], 
 VertexSize -&gt; {"Scaled", 0.05}]
out6 = FindDependencyTree[
   "https://wiki.factorio.com/High_tech_science_pack"];
Graph[out6["Vertices"], VertexShape -&gt; out6["LabelRules"], 
 VertexSize -&gt; {"Scaled", 0.05}]
</pre>
<p>Resulting in:</p>
<p><img src="https://community.wolfram.com//c/portal/getImageAttachment?filename=Factorio_2.png&amp;userId=73716" alt="enter image description here"></p>
<p><img src="https://community.wolfram.com//c/portal/getImageAttachment?filename=Factorio_3.png&amp;userId=73716" alt="enter image description here"> <img src="https://community.wolfram.com//c/portal/getImageAttachment?filename=Factorio_4.png&amp;userId=73716" alt="enter image description here"> <img src="https://community.wolfram.com//c/portal/getImageAttachment?filename=Factorio_5.png&amp;userId=73716" alt="enter image description here"> <img src="https://community.wolfram.com//c/portal/getImageAttachment?filename=Factorio_6.png&amp;userId=73716" alt="enter image description here"></p>
<p>To summarize, let's combine all the graphs:</p> 
<pre>o = {out1, out2, out3, out4, out5, out6};
Graph[Union @@ o[[All, "Vertices"]], 
 VertexShape -&gt; Union @@ o[[All, "LabelRules"]], 
 VertexSize -&gt; {"Scaled", 0.02}, ImageSize -&gt; 1000, 
 AspectRatio -&gt; 1/GoldenRatio]
</pre>
<p><img src="https://community.wolfram.com//c/portal/getImageAttachment?filename=Factorio_All.png&amp;userId=73716" alt="enter image description here"></p>
<p>As you can see the dependencies are very complex to get all the research packs. Of course there are many things you need to create with your machines, think of transport belts, trains, mining, steam generation, and energy production, water and other chemicals etc etc. </p>
<p>One of the most expensive parts is a satellite (to guide your rocket):</p> 
<pre>out = FindDependencyTree["https://wiki.factorio.com/Satellite"];
Graph[out["Vertices"], VertexShape -&gt; out["LabelRules"], 
 VertexSize -&gt; {"Scaled", 0.05}]
</pre>
<p><img src="https://community.wolfram.com//c/portal/getImageAttachment?filename=Factorio_Satellite.png&amp;userId=73716" alt="enter image description here"></p>
<p>I hope you like this little exploration on Graphs and Factorio. We could also use Mathematica's Graph technology to design balanced belt splitter designs: <a href="http://i.imgur.com/tz2Jc3p.png">http://i.imgur.com/tz2Jc3p.png</a> ! I will leave that for some other time. For now, explore the different buildings or parts, for example have a look at the rocket silo:</p> 
<pre>out = FindDependencyTree["https://wiki.factorio.com/Rocket_silo"];
Graph[out["Vertices"], VertexShape -&gt; out["LabelRules"], 
 VertexSize -&gt; {"Scaled", 0.05}]
</pre>
<p>If you haven't played already be careful it is an incredibly addicting game!</p>

				
					
				
				
			</div>
		</td>
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Using static websites for tiny archives (229 pts)]]></title>
            <link>https://alexwlchan.net/2024/static-websites/</link>
            <guid>41876750</guid>
            <pubDate>Fri, 18 Oct 2024 06:12:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://alexwlchan.net/2024/static-websites/">https://alexwlchan.net/2024/static-websites/</a>, See on <a href="https://news.ycombinator.com/item?id=41876750">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main" tabindex="-1"> <article>   <p>In <a href="https://alexwlchan.net/2024/digital-decluttering/">my previous post</a>, I talked about how I’m trying to be more intentional and deliberate with my digital data. I don’t just want to keep everything – I want to keep stuff that I’m actually going to look at again. As part of that process, I’m trying to be better about organising my files. Keeping something is pointless if I can’t find it later.</p> <p>Over the last year or so, I’ve been creating static websites to browse my local archives. I’ve done this for a variety of collections, including:</p> <ul> <li>paperwork I’ve scanned</li> <li>documents I’ve created</li> <li>screenshots I’ve taken</li> <li>web pages I’ve bookmarked</li> <li>video and audio files I’ve saved</li> </ul> <p>I create one website per collection, each with a different design, suited to the files it describes. For example, my collection of screenshots is shown as a grid of images, my bookmarks are a series of text links, and my videos are a list with a mixture of thumbnails and text.</p> <figure> <a href="https://alexwlchan.net/images/2024/static-screenshots.png"><picture> <source srcset="https://alexwlchan.net/images/2024/static-screenshots_1x.avif 400w, https://alexwlchan.net/images/2024/static-screenshots_2x.avif 800w, https://alexwlchan.net/images/2024/static-screenshots_3x.avif 1200w" sizes="(max-width: 400px) 100vw, 400px" type="image/avif"> <source srcset="https://alexwlchan.net/images/2024/static-screenshots_1x.webp 400w, https://alexwlchan.net/images/2024/static-screenshots_2x.webp 800w, https://alexwlchan.net/images/2024/static-screenshots_3x.webp 1200w" sizes="(max-width: 400px) 100vw, 400px" type="image/webp"> <source srcset="https://alexwlchan.net/images/2024/static-screenshots_1x.png 400w, https://alexwlchan.net/images/2024/static-screenshots_2x.png 800w, https://alexwlchan.net/images/2024/static-screenshots_3x.png 1200w" sizes="(max-width: 400px) 100vw, 400px" type="image/png"> <img src="https://alexwlchan.net/images/2024/static-screenshots_1x.png" alt="My screenshots collection. It's a two-column grid of images, with a line of small text below each image (usually tags or a description)." loading="lazy" width="400"> </picture></a> <a href="https://alexwlchan.net/images/2024/static-bookmarks.png"><picture> <source srcset="https://alexwlchan.net/images/2024/static-bookmarks_1x.avif 400w, https://alexwlchan.net/images/2024/static-bookmarks_2x.avif 800w, https://alexwlchan.net/images/2024/static-bookmarks_3x.avif 1200w" sizes="(max-width: 400px) 100vw, 400px" type="image/avif"> <source srcset="https://alexwlchan.net/images/2024/static-bookmarks_1x.webp 400w, https://alexwlchan.net/images/2024/static-bookmarks_2x.webp 800w, https://alexwlchan.net/images/2024/static-bookmarks_3x.webp 1200w" sizes="(max-width: 400px) 100vw, 400px" type="image/webp"> <source srcset="https://alexwlchan.net/images/2024/static-bookmarks_1x.png 400w, https://alexwlchan.net/images/2024/static-bookmarks_2x.png 800w, https://alexwlchan.net/images/2024/static-bookmarks_3x.png 1200w" sizes="(max-width: 400px) 100vw, 400px" type="image/png"> <img src="https://alexwlchan.net/images/2024/static-bookmarks_1x.png" alt="My bookmarks collection. The screenshot shows three blue links, and below each link is some descriptive text – a quote from the link, or some text I've written myself." loading="lazy" width="400"> </picture></a> <a href="https://alexwlchan.net/images/2024/static-videos.png"><picture> <source srcset="https://alexwlchan.net/images/2024/static-videos_1x.avif 400w, https://alexwlchan.net/images/2024/static-videos_2x.avif 800w, https://alexwlchan.net/images/2024/static-videos_3x.avif 1200w" sizes="(max-width: 400px) 100vw, 400px" type="image/avif"> <source srcset="https://alexwlchan.net/images/2024/static-videos_1x.webp 400w, https://alexwlchan.net/images/2024/static-videos_2x.webp 800w, https://alexwlchan.net/images/2024/static-videos_3x.webp 1200w" sizes="(max-width: 400px) 100vw, 400px" type="image/webp"> <source srcset="https://alexwlchan.net/images/2024/static-videos_1x.png 400w, https://alexwlchan.net/images/2024/static-videos_2x.png 800w, https://alexwlchan.net/images/2024/static-videos_3x.png 1200w" sizes="(max-width: 400px) 100vw, 400px" type="image/png"> <img src="https://alexwlchan.net/images/2024/static-videos_1x.png" alt="My video archive. The list of videos has a large thumbnail on the left-hand side, and on the right-hand side is the title of the video, a link to the original, and a description I wrote." loading="lazy" width="400"> </picture></a> </figure> <p>These websites aren’t complicated – they’re just meant to be a slightly nicer way of browsing files than I get in the macOS Finder. I can put more metadata on the page, and build my own ways to search and organise the files.</p> <p>Each collection is a folder on my local disk, and the website is one or more HTML files in the root of that folder. To use the website, I open the HTML files in my web browser.</p> <figure> <a href="https://alexwlchan.net/images/2024/finder_website.png"><picture> <source srcset="https://alexwlchan.net/images/2024/finder_website.dark_1x.avif 450w, https://alexwlchan.net/images/2024/finder_website.dark_2x.avif 900w, https://alexwlchan.net/images/2024/finder_website.dark_3x.avif 1350w" sizes="(max-width: 450px) 100vw, 450px" type="image/avif" media="(prefers-color-scheme: dark)"> <source srcset="https://alexwlchan.net/images/2024/finder_website.dark_1x.webp 450w, https://alexwlchan.net/images/2024/finder_website.dark_2x.webp 900w, https://alexwlchan.net/images/2024/finder_website.dark_3x.webp 1350w" sizes="(max-width: 450px) 100vw, 450px" type="image/webp" media="(prefers-color-scheme: dark)"> <source srcset="https://alexwlchan.net/images/2024/finder_website.dark_1x.png 450w, https://alexwlchan.net/images/2024/finder_website.dark_2x.png 900w, https://alexwlchan.net/images/2024/finder_website.dark_3x.png 1350w" sizes="(max-width: 450px) 100vw, 450px" type="image/png" media="(prefers-color-scheme: dark)"> <source srcset="https://alexwlchan.net/images/2024/finder_website_1x.avif 450w, https://alexwlchan.net/images/2024/finder_website_2x.avif 900w, https://alexwlchan.net/images/2024/finder_website_3x.avif 1350w" sizes="(max-width: 450px) 100vw, 450px" type="image/avif"> <source srcset="https://alexwlchan.net/images/2024/finder_website_1x.webp 450w, https://alexwlchan.net/images/2024/finder_website_2x.webp 900w, https://alexwlchan.net/images/2024/finder_website_3x.webp 1350w" sizes="(max-width: 450px) 100vw, 450px" type="image/webp"> <source srcset="https://alexwlchan.net/images/2024/finder_website_1x.png 450w, https://alexwlchan.net/images/2024/finder_website_2x.png 900w, https://alexwlchan.net/images/2024/finder_website_3x.png 1350w" sizes="(max-width: 450px) 100vw, 450px" type="image/png"> <img src="https://alexwlchan.net/images/2024/finder_website_1x.png" loading="lazy" alt="My 'screenshots' folder in the macOS Finder. There's a series of per-year folders from 2010 to 2024, a JavaScript file 'metadata.js' and an HTML file 'index.html'." width="450"> </picture></a> <figcaption> This is what my screenshots website looks like. The individual images are stored in per-year folders, there's some machine-readable metadata in <code>metadata.js</code>, and I can double-click <code>index.html</code> to open the file in my browser and use the website. The HTML file uses the metadata to render the grid of images. </figcaption> </figure> <p>I’m deliberately going low-scale, low-tech. There’s no web server, no build system, no dependencies, and no JavaScript frameworks. I’m writing everything by hand, which is very manageable for small projects. Each website is a few hundred lines of code at most.</p> <p>Because this system has no moving parts, and it’s just files on a disk, I hope it will last a long time. I’ve already migrated a lot of my files to this approach, and I’m pleased with how it’s going. I get all the simplicity and portability of a file full of folders, with just a bit of extra functionality sprinkled on top.</p> <hr> <h2 id="how-did-i-get-to-static-websites">How did I get to static websites?</h2> <p>Before static websites, I tried other approaches for organising my files, but they never stuck.</p> <p><strong>I’ve made several attempts to use files and folders, the plain filesystem.</strong> Where I always struggled is that folders require you to use hierarchical organisation, and everything has to be stored in exactly one place. That works well for some data – all my code, for example – but I find it more difficult for media. I could never design a hierarchy that I was happy with. I’d stall on organising files because I was unsure of which folder to put them in, and I ended up with a disorganised mess of a desktop.</p> <p>I much prefer the flexibility of keyword tagging. Rather than put a file in a single category, I can apply multiple labels and use any of them to find the file later. The macOS Finder does support tagging, but I’ve always found its implementation to be a bit lacklustre, and I don’t want to use it for anything serious.</p> <p><strong>When I was younger, I tried “everything buckets” like <a href="https://www.devontechnologies.com/apps/devonthink">DEVONThink</a>, <a href="https://evernote.com/">Evernote</a>, and <a href="https://www.barebones.com/products/yojimbo/">Yojimbo</a>.</strong> I&nbsp;know lots of people like this sort of app, but I could never get into them. I always felt like I had to wrap my brain around the app’s way of thinking – changing myself to fit the app’s approach, not the other way round.</p> <p><strong>Once I had some programming experience, I tried writing my own tools to organise my files.</strong> I made at least a dozen attempts at this, the last of which was <a href="https://alexwlchan.net/2019/my-scanning-setup/#how-did-i-create-an-app-to-tag-my-pdfs">docstore</a>. Building my own tool meant I got something that was a closer match to my mental model, but now I was on the hook for maintenance. Every time I upgraded Python or updated macOS, something would break and I’d have to dive into the the code to fix it. These tools never required a lot of ongoing work, but it was enough to be annoying.</p> <p>Every time I gave up on an app, I had another go at using plain files and folders. They’re the default way to organise files on my Mac. They’re lightweight, portable, easy to back up, and I expect to be able to read them for many years to come. But the limited support for custom metadata and keyword tags was always a deal breaker.</p> <p><strong>At some point I realised I could solve these problems by turning folders into mini-websites.</strong> I could create an HTML file in the top-level folder, which could be an index – a list of all the files, displayed with all the custom metadata and tags I wanted.</p> <p>This allowed me to radically simplify the folder structure, and stop chasing the perfect hierarchy. In these mini-websites, I use very basic folders – files are either grouped by year or by first letter of their filename. I only look at the folders when I’m adding new files, and never for browsing. When I’m looking for files, I always use the website. The website can use keyword tags to let me find files in multiple ways, and abstract away the details of the underlying folders.</p> <p>HTML is low maintenance, it’s flexible, and it’s not going anywhere. It’s the foundation of the entire web, and pretty much every modern computer has a web browser that can render HTML pages. These files will be usable for a very long time – probably decades, if not more.</p> <p>(I still have the first website I made, for a school class in 2006. It renders flawlessly in a modern browser. I feel safe betting on HTML.)</p> <h2 id="emphasis-on-tiny">Emphasis on “tiny”</h2> <p>I’m doing a lot of this by hand – organising the files, writing the metadata, building the viewers. This doesn’t scale to a large collection. Even storing a few hundred items this way takes a non-trivial amount of time – but I actually like that.</p> <p>Introducing a bit of friction is helping me to decide what I really care about saving. What’s worth taking the time to organise properly, and what can’t I be bothered with? If I don’t want to take even a minute to save it, am I going to look at it again? But if I do save something, I’ve become more willing to take time to write proper metadata, in a way that will make it easier to find later.</p> <p>I used to have large, amorphous folders where I collected en masse. I had thousands of poorly organised files and I couldn’t find anything, so I never looked at what I’d saved. Now I have tiny websites with a few hundred items which are carefully selected and usefully described.</p> <p>Even though I usually love automation, I’m enjoying some of the constraints imposed by a more manual process.</p> <h2 id="prior-art">Prior art</h2> <p>Using a static website like this isn’t new – my inspiration was <a href="https://alexwlchan.net/images/2024/twitter_account_export.png">Twitter’s account export</a>, which gives you a mini-website you can browse locally. I’ve seen several other social media platforms that give you a website as a human-friendly way to browse your data.</p> <p>I think this could be a powerful idea for digital preservation, as a way to describe <a href="https://en.wikipedia.org/wiki/Born-digital">born-digital</a> archives. All the benefits of simplicity, longevity, and low maintenance are even more valuable in a memory institution where you want to preserve something for decades or centuries. (And HTML is so low-tech, you can create a basic HTML website on any computer with just the built-in notepad or text editor. No IT support required!)</p> <p>It’s been exciting to explore this idea at work, where we’re building larger static websites as part of our <a href="https://www.flickr.org/programs/content-mobility/data-lifeboat/">Data Lifeboat project</a>. This is a way to package up an archival sliver from Flickr. Where my local archives are typically just a list view, the website inside a Data Lifeboat has more pages and functionality. And while I was finishing this article, I saw a <a href="https://social.coop/@edsu/113306537369602233">post from Ed Summers</a> about creating static sites as a way to preserve Historypin.</p> <p>I’d love to this static websites get more use as a preservation tool.</p> <hr> <p>I already have a lot of files, which are sprawled across my disk. I’d love to consolidate them all in this new approach, but that would be a tremendous amount of work. My colleague Jessamyn wrote about this <a href="https://www.librarian.net/stax/5585/be-organized-from-the-very-beginning/">in a follow-up to my digital decluttering article</a>: <em>“no one is ever starting at the beginning, not in 2024”</em>.</p> <p>Rather than moving everything at once, I’m doing a little at a time. As I create new files, I’m saving them into static websites. As I look for older files, I’m pulling them out of their existing storage and moving them into the appropriate static site folder.</p> <p>I’m enjoying this approach, so I’m going to keep using it. What I particularly like is that the maintenance burden has been essentially zero – once I set up the initial site structure, I haven’t had to do anything to keep it working.</p> <p>If you’ve never written a website and it’s something you want to try, have a look at Blake Watson’s new book <a href="https://htmlforpeople.com/">HTML for People</a>. <em>“I feel strongly that anyone should be able to make a website with HTML if they want. This book will teach you how to do just that.”</em>. I love that philosophy. I’m only a third of the way through, but already I can tell this is a great resource.</p> <p>For a long time, I thought of HTML as a tool for publishing on the web, a way to create websites that other people can look at. But all these websites I’m creating are my local, personal archives – just for me. I’m surprised it took me this long to realise HTML isn’t just for sharing on the web.</p> </article> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[What is theoretical computer science? (106 pts)]]></title>
            <link>https://cacm.acm.org/opinion/what-is-theoretical-computer-science/</link>
            <guid>41876723</guid>
            <pubDate>Fri, 18 Oct 2024 06:04:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://cacm.acm.org/opinion/what-is-theoretical-computer-science/">https://cacm.acm.org/opinion/what-is-theoretical-computer-science/</a>, See on <a href="https://news.ycombinator.com/item?id=41876723">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>



<p>Thinking of theoretical computer science as a branch of mathematics is harmful to the discipline.</p>

<figure>
<p><img width="1024" height="576" src="https://cacm.acm.org/wp-content/uploads/2024/08/080224.OP_.Moshe-Vardi-2400x1350-1.jpg" alt="Moshe Y. Vardi" loading="eager" decoding="async" srcset="https://cacm.acm.org/wp-content/uploads/2024/08/080224.OP_.Moshe-Vardi-2400x1350-1.jpg 2400w, https://cacm.acm.org/wp-content/uploads/2024/08/080224.OP_.Moshe-Vardi-2400x1350-1.jpg?resize=300,169 300w, https://cacm.acm.org/wp-content/uploads/2024/08/080224.OP_.Moshe-Vardi-2400x1350-1.jpg?resize=768,432 768w, https://cacm.acm.org/wp-content/uploads/2024/08/080224.OP_.Moshe-Vardi-2400x1350-1.jpg?resize=1024,576 1024w, https://cacm.acm.org/wp-content/uploads/2024/08/080224.OP_.Moshe-Vardi-2400x1350-1.jpg?resize=1536,864 1536w, https://cacm.acm.org/wp-content/uploads/2024/08/080224.OP_.Moshe-Vardi-2400x1350-1.jpg?resize=2048,1152 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></p> </figure>

</div><div>
<article><section id="sec1" lang="en"><p id="p-1">I consider myself a computer science (CS) theoretician, but Wikipedia describes me as a “mathematician and computer scientist.”<a href="#fn1" data-jats-ref-type="fn" data-jats-rid="fn1"><sup>a</sup></a> So, what am I? To answer that question, we must consider theoretical computer science (TCS), which Wikipedia defines as “a subfield of computer science and mathematics that focuses on the abstract mathematical foundations of computation.”<a href="#fn2" data-jats-ref-type="fn" data-jats-rid="fn2"><sup>b</sup></a> I’d like to take issue with this definition.</p><p id="p-2">In his lovely 2019 book, <i><a href="https://www.math.ias.edu/avi/book" data-jats-ext-link-type="uri">Mathematics and Computation</a></i>,<a href="#fn3" data-jats-ref-type="fn" data-jats-rid="fn3"><sup>c</sup></a> 2023 ACM A.M. Turing Award recipient Avi Wigderson defines the theory of computation as “the study of the formal foundations of computer science and technology.” This is a very broad definition, but the scope of the book does not match that definition. It offers a very U.S.-centric view of TCS. As I have written <a href="https://cacm.acm.org/opinion/why-doesnt-acm-have-a-sig-for-theoretical-computer-science/" data-jats-ext-link-type="uri">elsewhere</a>,<a href="#fn4" data-jats-ref-type="fn" data-jats-rid="fn4"><sup>d</sup></a> U.S. TCS has a quite narrower scope than European TCS, which I find unfortunate.</p><p id="p-3">I believe that Avi has the right and broad definition for theoretical computer science; it is “the study of the formal foundations of computer science and technology.” In fact, if one browses 1970s proceedings of the ACM Symposium on the Theory of Computing (STOC) and the IEEE Symposium on Foundations of Computer Science (FOCS), one sees indeed a very broad conception of TCS. Only in the 1980s, with the proliferation of the so-called “satellite conferences,” dedicated to topics such as databases, program verification, and the like, did the scope of STOC and FOCS narrow, which led to a narrowing of how TCS is viewed in the U.S.</p><p id="p-4">Regardless of the breadth of TCS, the question remained as to whether it is a subfield of mathematics. Undoubtedly, TCS is abstract and mathematical, but is it mathematics? For that matter, what is mathematics? Mathematics is notoriously hard to define, so I prefer the sociological definition: <i>Mathematics is what mathematicians do</i>. In 1993, as a young computer science theoretician, I was offered a faculty position in the CS department at Rice University. I doubt I would have received such an offer from the math department at Rice. Avi is one of a handful of computer science theoreticians worldwide with a primary position in a department of mathematics. I must conclude that TCS is not a branch of mathematics, at least sociologically.</p><p id="p-5">But my objection to “TCS is a branch of mathematics” is deeper than the sociological argument. I believe that thinking of TCS as a branch of mathematics is harmful to the discipline. The centrality of computing stems from the fact that it is a technology that has been changing the world for the past 80 years, ever since the British used early computing to change the tide of war in World War II. As computer scientists, we should look for inspiration from physics rather than from mathematics. Theoretical physics is highly mathematical, but it aims to explain and predict the real world. Theories that fail at this “explain/predict” task would ultimately be discarded. Analogously, I’d argue that the role of TCS is to explain/predict real-life computing. I am not saying that every TCS paper should be held to this standard, but the standard should be applied to branches of TCS. We should remember the <a href="https://mathshistory.st-andrews.ac.uk/Extras/Von_Neumann_Part_1/" data-jats-ext-link-type="uri">warning</a> of John von Neuman,<a href="#fn5" data-jats-ref-type="fn" data-jats-rid="fn5"><sup>e</sup></a> one of the greatest mathematicians and computer scientists of the 20<sup>th</sup> century, regarding the danger of mathematics driven solely by internal esthetics: “There is a grave danger that the subject will develop along the line of least resistance.”</p><p id="p-6">Consider, for example, computational-complexity theory—the main focus of Avi’s book—which I find to be the most elegant theory in CS. The theory focuses on classifying computational problems according to their resource usage, usually time and space. One of the crown jewels of that theory is the concept of NP-completeness, which crystalizes the difference between checking solutions and finding solutions. The paradigmatic NP-complete problem is the Boolean Satisfiability Problem (SAT), which asks whether a given Boolean formula, with Boolean gates such as AND and NOT, has some assignment of 0s and 1s to its input variables such that the formula yields the value 1. When Cook proved in 1971 that SAT is NP-complete, the problem was considered computationally hard.</p><p id="p-7">Over the past 30 years, however, we <a href="https://cacm.acm.org/opinion/boolean-satisfiability/" data-jats-ext-link-type="uri">have made</a><a href="#fn6" data-jats-ref-type="fn" data-jats-rid="fn6"><sup>f</sup></a> tremendous progress in SAT solving, which is today an industrial reality. NP-completeness theory, however, does not explain or predict the unreasonable effectiveness of SAT solvers. In spite of recent <a href="https://www.cambridge.org/core/books/beyond-the-worstcase-analysis-of-algorithms/8A8128BBF7FC2857471E9CA52E69AC21" data-jats-ext-link-type="uri">efforts</a><a href="#fn7" data-jats-ref-type="fn" data-jats-rid="fn7"><sup>g</sup></a> to go beyond worst-case complexity, this approach is still the prevalent approach to computational-complexity analysis, but it shed little light on “real-word complexity.”</p><p id="p-8">So, I do not consider myself a mathematician. I am squarely in the computer science camp.</p></section></article>
</div><div>
<div>
<p>
Submit an Article to CACM </p>
<p>
CACM welcomes unsolicited <a href="https://cacm.acm.org/author-guidelines/#CACMsubmission">submissions</a> on topics of relevance and value to the computing community. </p>
</div>
<section>
<div>
<p>
You Just Read </p>
<h4>
What Is Theoretical Computer Science? </h4>
<a href="https://dl.acm.org/doi/10.1145/3698060">
 View in the ACM Digital Library  </a>
</div>
<p>©ACM 0001-0782/24/09</p>
</section>
</div><div data-component="ctaMembership">
<div>
<h3>
Shape the Future of Computing </h3>
<p>
ACM encourages its members to take a direct hand in shaping the future of the association. There are more ways than ever to get involved. </p>
<p><a href="https://www.acm.org/about-acm/get-involved">
Get Involved </a>
</p></div>
<div>
<h3>
Communications of the ACM (CACM) is now a fully Open Access publication. </h3>
<p>
By opening CACM to the world, we hope to increase engagement among the broader computer science community and encourage non-members to discover the rich resources ACM has to offer. </p>
<p><a href="https://cacm.acm.org/news/cacm-is-becoming-open-access">
Learn More </a>
</p></div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Kennedy, Merkley introduce bill to end TSA facial recognition (2023) (120 pts)]]></title>
            <link>https://www.kennedy.senate.gov/public/2023/11/kennedy-merkley-introduce-bill-to-end-involuntary-facial-recognition-screenings-protect-americans-privacy</link>
            <guid>41876071</guid>
            <pubDate>Fri, 18 Oct 2024 03:17:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.kennedy.senate.gov/public/2023/11/kennedy-merkley-introduce-bill-to-end-involuntary-facial-recognition-screenings-protect-americans-privacy">https://www.kennedy.senate.gov/public/2023/11/kennedy-merkley-introduce-bill-to-end-involuntary-facial-recognition-screenings-protect-americans-privacy</a>, See on <a href="https://news.ycombinator.com/item?id=41876071">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
	
	
		
		<p>WASHINGTON – Sen. John Kennedy (R-La.) today joined Sen. Jeff Merkley (D-Ore.) in introducing the Traveler Privacy Protection Act of 2023 to safeguard Americans from facial recognition screenings that the federal government is implementing at airports across the country. The bill would repeal the Transportation Security Administration’s (TSA) authorization to use facial recognition and prevent the agency from further exploiting the technology and storing traveler’s biodata.&nbsp;</p>
<p><b>“Every day, TSA scans thousands of Americans’ faces without their permission and without making it clear that travelers can opt out of the invasive screening. The Traveler Privacy Protection Act would protect every American from Big Brother’s intrusion by ending the facial recognition program,”&nbsp;</b>said Kennedy.</p>
<p><b>“The TSA program is a precursor to a full-blown national surveillance state. Nothing could be more damaging to our national values of privacy and freedom. No government should be trusted with this power,”</b>&nbsp;said Merkley.</p>
<p>Despite the TSA calling its plan to implement facial scans at more than 430 U.S. airports voluntary, passengers are largely unaware of their ability to opt out. Moreover, TSA does not effectively display notices at its check points to inform travelers that they have such an option.</p>
<p>To rectify this, the Traveler Privacy Protection Act of 2023 would:</p>
<ul type="disc">
<li>Require explicit congressional authorization in order for the TSA to use facial recognition technology in the future.&nbsp;</li>
</ul>
<ul type="disc">
<li>Immediately ban the TSA from expanding its pilot facial recognition program.</li>
</ul>
<ul type="disc">
<li>Require TSA to end its pilot facial recognition program and dispose of facial biometrics.</li>
</ul>
<p>Sens. Roger Marshall (R-Kan.), Elizabeth Warren (D-Mass.),&nbsp;Edward J. Markey (D-Mass.) and&nbsp;Bernie Sanders (I-Vt.) also cosponsored the legislation.</p>
<p>Text of the Traveler Privacy Protection Act of 2023 is available&nbsp;<a href="https://www.kennedy.senate.gov/public/_cache/files/e/f/efa63480-f3dc-4784-ba69-8eb939200840/18EA84B59548F1A7D02E38AFD33271C4.bur23a41.pdf" title="https://www.kennedy.senate.gov/public/_cache/files/e/f/efa63480-f3dc-4784-ba69-8eb939200840/18EA84B59548F1A7D02E38AFD33271C4.bur23a41.pdf">here</a>.&nbsp;</p>




		
		
		
			
		
	
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Smart pointers for the kernel (139 pts)]]></title>
            <link>https://lwn.net/Articles/992055/</link>
            <guid>41875792</guid>
            <pubDate>Fri, 18 Oct 2024 02:10:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lwn.net/Articles/992055/">https://lwn.net/Articles/992055/</a>, See on <a href="https://news.ycombinator.com/item?id=41875792">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<p>
Rust has a plethora of smart-pointer types, including reference-counted
pointers, which have special support in the compiler to make them
easier to use. The Rust-for-Linux project would like to reap those same benefits
for its smart pointers, which need to be written by hand to conform to
the
<a href="https://lwn.net/Articles/718628/">
Linux kernel
memory model</a>. Xiangfei Ding
presented at Kangrejos about the work to enable custom
smart pointers to function the same as built-in smart pointers.
</p>

<p>
Ding showed the specific "superpowers" that built-in smart pointers have in his
<a href="https://kangrejos.com/2024/SmartPointer%20and%20PinCoerceUnsized.pdf">
slides</a>:
unsizing and dynamic dispatch. Unsizing allows the programmer
to remove the length of an array behind a pointer from its type,
turning
a <tt>Ptr&lt;[T; N]&gt;</tt> (bounds-checked at compile time) into a
<tt>Ptr&lt;[T]&gt;</tt> (bounds-checked at run time). This needs special support because slices
(values of type <tt>[T]</tt>) do not have a known size at compile time; therefore the compiler
needs to store the size somewhere at run time. The compiler could store the size
in the pointed-to allocation, but that would require reallocating the array's
memory, which would be expensive. Instead, the compiler stores the size
alongside the pointer itself, as a fat pointer. On nightly Rust compilers, users
can enable an experimental feature and then have their
pointer type implement
<a href="https://doc.rust-lang.org/std/ops/trait.CoerceUnsized.html"><tt>CoerceUnsized</tt></a>
to indicate that it supports that.
</p>

<p><a href="https://lwn.net/Articles/992336">
<img src="https://static.lwn.net/images/2024/xiangfei-ding-small.png" alt="[Xiangfei Ding]" title="Xiangfei Ding">
</a></p><p>
The second superpower is called
<a href="https://doc.rust-lang.org/std/ops/trait.DispatchFromDyn.html"><tt>DispatchFromDyn</tt></a>
and allows converting a <tt>Ptr&lt;T&gt;</tt> into a <tt>Ptr&lt;dyn
Trait&gt;</tt> when <tt>T</tt> implements <tt>Trait</tt>. This has to do with
the way that Rust implements dynamic dispatch — a value of type <tt>Ptr&lt;dyn
Trait&gt;</tt> uses a dispatch table to find the implementation of the method
being invoked at run time.
That method expects to receive a <tt>self</tt> pointer. So converting a smart
pointer to use dynamic dispatch only works when the smart pointer can be used as
a <tt>self</tt> pointer.
</p>

<p>
These features are both experimental, because the Rust project is still working
on their design. Ding explained that there is an
<a href="https://rust-lang.github.io/rfcs/3621-derive-smart-pointer.html">
RFC</a> aimed at stabilizing just enough for the Linux kernel to use, without
impeding the development of the features. The RFC would add a new macro
that makes it trivial for
a smart pointer satisfying certain requirements to implement the
necessary traits, no matter what the final forms of the traits end up looking
like. That would let the kernel start using its custom smart pointers on stable
Rust sooner rather than later.
</p>

<p>
There is one catch — implementing these features for a smart-pointer type with a
malicious or broken
<a href="https://doc.rust-lang.org/std/ops/trait.Deref.html">
<tt>Deref</tt></a> (the trait that lets a programmer dereference a value)
implementation could break the guarantees
Rust relies on to determine when objects can be moved in memory.
This is of particular importance to
<a href="https://doc.rust-lang.org/std/pin/struct.Pin.html"><tt>Pin</tt></a>,
which is a wrapper type used to mark an allocation that cannot be moved.
It's not hard to write smart-pointer types that don't cause problems,
but in keeping with Rust's
commitment to ensuring safe code cannot cause memory-safety problems, the RFC
also requires programmers to use unsafe (specifically, implementing an
<tt>unsafe</tt>
<a href="https://users.rust-lang.org/t/understanding-the-marker-traits/75625/3">
marker trait</a>) as a promise that
they've read the relevant documentation and are not going to break <tt>Pin</tt>.
With that addition, the code for a smart-pointer type would look like this:
</p>

<pre>    // Use Ding's macro ...
    #[derive(SmartPointer)]
    // On a struct that is just a wrapper around a pointer
    #[repr(transparent)]
    struct MySmartPointer&lt;T: ?Sized&gt;(Box&lt;T&gt;);

    // Implement Deref, with whatever custom logic is needed
    impl&lt;T: ?Sized&gt; Deref for MySmartPointer&lt;T&gt; {
        type Target = T;
        fn deref(&amp;self) -&gt; &amp;T {
            ...
        }
    }

    // And then promise the compiler that the Deref implementation is okay to
    // use in conjunction with Pin:
    unsafe impl&lt;T: ?Sized&gt; PinCoerceUnsized for MySmartPointer&lt;T&gt; {}
</pre>

<p>
Andreas Hindborg asked for some clarification about why the marker trait is
needed. <tt>Deref</tt>
is supposed to be simple, Ding explained. Usually, someone writing a
smart-pointer type would have a normal pointer stored in their type; when implementing
<tt>Deref</tt>, they can just use the normal pointer. But it's technically
possible to implement something more complicated than that. In this case, you
could have a <tt>Deref</tt> implementation that actually moves data out of the
object pointed to and stores something else there. This would not normally be a problem,
except when the smart pointer is contained in a <tt>Pin</tt>, which is supposed
to prevent the value from being moved. If the <tt>Deref</tt> implementation
moves the value anyway, then that would be undefined behavior. The unsafe marker
trait is a promise to the compiler that the programmer has not done that.
</p>

<blockquote>
<b><tt>$ sudo subscribe today</tt></b>
<p>
Subscribe today and elevate your LWN privileges. You’ll have
access to all of LWN’s high-quality articles as soon as they’re
published, and help support LWN in the process.  <a href="https://lwn.net/Promo/nst-sudo/claim">Act now</a> and you can start with a free trial subscription.
</p></blockquote>


<p>
The new macro is available on nightly Rust, although Ding says that it needs a
bit more testing in order to stabilize, as well as some additional documentation
which he is working on. Miguel Ojeda asked how soon the macro might be
stabilized; Ding answered that it should be quite soon. He will make a
stabilization report shortly, and then it is just a matter of checking off the
requirements.
</p><br clear="all"><table>
           <tbody><tr><th colspan="2">Index entries for this article</th></tr>
           <tr><td><a href="https://lwn.net/Kernel/Index">Kernel</a></td><td><a href="https://lwn.net/Kernel/Index#Development_tools-Rust">Development tools/Rust</a></td></tr>
            <tr><td><a href="https://lwn.net/Archives/ConferenceIndex/">Conference</a></td><td><a href="https://lwn.net/Archives/ConferenceIndex/#Kangrejos-2024">Kangrejos/2024</a></td></tr>
            </tbody></table><br clear="all">
<hr>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SOFA - Start Often Finish rArely (140 pts)]]></title>
            <link>https://tilde.town/~dozens/sofa/</link>
            <guid>41875108</guid>
            <pubDate>Fri, 18 Oct 2024 00:07:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tilde.town/~dozens/sofa/">https://tilde.town/~dozens/sofa/</a>, See on <a href="https://news.ycombinator.com/item?id=41875108">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
      <p>
        SOFA is the name of a hacker/art collective, and also the name of the principle upon which the club was founded.
      </p>
      <p>
        The point of SOFA club is to start as many things <del>as possible</del> as you have the ability, interest, and capacity to, with no regard or goal whatsoever for finishing those projects.
      </p>
      <p>
        The goal is acquiring many experiences. The side effects include entertainment and increased skill.
      </p>
      <p>
        Here are some ways to get starting with SOFA:
      </p>
      <ul>
        <li>
          Start reading lots of books. If you don't like a book you're reading, stop reading it and put it down. Maybe give it away.
        </li>
        <li>
          Start a new code or art project. Get at least as far as writing a detailed README[1]. Maybe you complete the project, or maybe you never get further than that. It's fine.
        </li>
        <li>
          Start learning a new language. Spoken or computer. Just start, you don't have to commit to mastering it. Open up duolingo[2] or exercism[3] and just do a few practice exercises.
        </li>
      </ul>
      <p>
        Here's the secret sauce that makes the whole thing work:
      </p>
      <p>
        You can be finished with your project whenever you decide to be done with it. And "done" can mean anything you want it to be. Whose standards of completion or perfection are you holding yourself to anyway? Forget about those! Something is done when you say it is. When it's no longer interesting. When you've gotten a sufficient amount of entertainment and experience from it. When you've learned enough from it. Whatever, whenever. Done is what you say it is.
      </p>
      <p>
        And here's <em>why</em> it works:
      </p>
      <p>
        Nothing is fixed, nothing is permanent, and nothing lasts. This is true of all things, including your ideas of self and identity. Want to be somebody who knows how to cook, or code in Lisp? Or somebody who knows how to rollerblade, or only eats plants, or worships the moon? Just start doing those things and then, poof! Now you are that person.
      </p>
      <p>
        If you find out your new self doesn't suit you, just stop being that person and be someone else.
      </p>
      <p>
        Be as many different people and do as many different things as you want. Start often. You don't have to commit your entire life to any one thing. Finish rarely.
      </p>
      <p>
        Here's the final bit about how to finish things:
      </p>
      <p>
        It can be hard to end things because of societal pressure to stick to things until the bitter end. Traditional marriage is the ultimate form of this ideal. You're supposed to stick to it until you die, no matter what, come hell or high water, even if it makes you and everybody around you miserable. That is neither sane nor healthy! That is not the SOFA way. Done means what you say it means. And ending something does not lesson its value. Just KonMari[4] that shit: have a moment of gratitude and appreciation for the experience and the things you learned and the ways in which you benefited from it. Thank it with conviction for having served its purpose, and then let it go and dismiss it. There. Done.
      </p>
      <p>
        Now get out there and start doing stuff! And then stop doing stuff, so you can do more stuff! Do as much stuff as possible! Never stop doing stuff! Always stop doing stuff!
      </p>
      <!--
      <blockquote>
        <p>"You have the right to work, but never to the fruit of work."</p>
        <cite>Bhagavad Gita 2:47</cite>
      </blockquote>
      //-->
    </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[C++ proposal: There are 8 bits in a byte (267 pts)]]></title>
            <link>https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3477r0.html</link>
            <guid>41874394</guid>
            <pubDate>Thu, 17 Oct 2024 22:21:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3477r0.html">https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3477r0.html</a>, See on <a href="https://news.ycombinator.com/item?id=41874394">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
   <h2 data-level="1" id="ratio"><span>1. </span><span>Rationale</span><a href="#ratio"></a></h2>
   <p>C has the <code><c- n="">CHAR_BIT</c-></code> macro which contains the implementation-defined number of bits in a byte, without restrictions on the value of this number. C++ imports this macro as-is. Many other macros and character traits have values derived from <code><c- n="">CHAR_BIT</c-></code>. While this was historically relevant in computing’s early days, modern hardware has overwhelmingly converged on the assumption that a byte is 8 bits. This document proposes that C++ formally mandates that a byte is 8 bits.</p>
   <p>Mainstream compilers already support this reality:</p>
   <ul>
    <li data-md="">
     <p>GCC <a href="https://github.com/gcc-mirror/gcc/blob/e7380688fa5917011c3fb85b5e06fb00f776a95d/gcc/genmodes.cc#L837">sets a default value of <code><c- mi="">8</c-></code></a> but <a href="https://github.com/search?q=repo%3Agcc-mirror%2Fgcc%20BITS_PER_UNIT%20path%3A%22gcc%2Fconfig%2F%22&amp;type=code">no upstream target changes the default</a>;</p>
    </li><li data-md="">
     <p><a href="https://github.com/llvm/llvm-project/blob/7ec32094933bbf0201ea0670209c090a00bf8d83/clang/lib/Frontend/InitPreprocessor.cpp#L1103">LLVM sets <code><c- n="">__CHAR_BIT__</c-></code> to <code><c- mi="">8</c-></code></a>; and</p>
    </li><li data-md="">
     <p><a href="https://learn.microsoft.com/en-us/cpp/c-runtime-library/data-type-constants">MSVC defines <code><c- n="">CHAR_BIT</c-></code> to <code><c- mi="">8</c-></code></a>.</p>
   </li></ul>
   <p>We can find vestigial support, for example GCC dropped <a href="https://github.com/gcc-mirror/gcc/commit/a4a4b1d36476aaa60ebd05db0dfd16145dc72338#diff-d074f0fa705c64c47c773f7a884ecf60ee9699c1dbff6295c5ca535558b9a8b8">dsp16xx in 2004</a>, and <a href="https://github.com/gcc-mirror/gcc/commit/c7bdf0a6af41a480ecb6a103636ef9069721c0bd#diff-5386a7d0786c0a34dfad58442a8bfa9225ac1b3db899af287bf610d5be7360e9L94">1750a in 2002</a>. Search <a href="https://www.google.com/search?q=%22define+BITS_PER_UNIT%22+-%22define+BITS_PER_UNIT+8%22">the web for more evidence</a> finds a few GCC out-of-tree ports which do not seem relevant to modern C++.</p>
   <p><a data-link-type="biblio" href="#biblio-posix" title="The Open Group Base Specifications Issue 8">[POSIX]</a> has mandated this reality since POSIX.1-2001 (or IEEE Std 1003.1-2001), saying:</p>
   <blockquote>
    <p>As a consequence of adding <code><c- b="">int8_t</c-></code>, the following are true:</p>
    <ul>
     <li data-md="">
      <p>A byte is exactly 8 bits.</p>
     </li><li data-md="">
      <p><code><c- n="">CHAR_BIT</c-></code> has the value 8, <code><c- n="">SCHAR_MAX</c-></code> has the value 127, <code><c- n="">SCHAR_MIN</c-></code> has the value -128, and <code><c- n="">UCHAR_MAX</c-></code> has the value 255.</p>
    </li></ul>
    <p>Since the POSIX.1 standard explicitly requires 8-bit char with two’s complement arithmetic, it is easier for application writers if the same two’s complement guarantees are extended to all of the other standard integer types. Furthermore, in programming environments with a 32-bit long, some POSIX.1 interfaces, such as <code><c- n="">mrand48</c-><c- p="">()</c-></code>, cannot be implemented if long does not use a two’s complement representation.</p>
   </blockquote>
   <p>To add onto the reality that POSIX chose in 2001, C++20 has only supported two’s complement storage since <a data-link-type="biblio" href="#biblio-p0907r4" title="Signed Integers are Two’s Complement">[P0907r4]</a>, and C23 has followed suit.</p>
   <p>The overwhelming support for 8-bit bytes in hardware and software platforms means that software written for non-8-bit byte is incompatible with software written for 8-bit bytes, and vice versa. C and C++ code targeting non-8-bit byte are incompatible dialects of C and C++.</p>
   <p><a href="https://en.wikipedia.org/wiki/POSIX#POSIX-certified">Wikipedia quotes</a> the following operating systems as being currently POSIX compliant (and therefore supporting 8-bit bytes):</p>
   <ul>
    <li data-md="">
     <p>AIX</p>
    </li><li data-md="">
     <p>HP-UX</p>
    </li><li data-md="">
     <p>INTEGRITY</p>
    </li><li data-md="">
     <p>macOS</p>
    </li><li data-md="">
     <p>OpenServer</p>
    </li><li data-md="">
     <p>UnixWare</p>
    </li><li data-md="">
     <p>VxWorks</p>
    </li><li data-md="">
     <p>vz/OS</p>
   </li></ul>
   <p>And many others as being formerly compliant, or mostly compliant.</p>
   <p>Even StackOverflow, the pre-AI repository of our best knowledge (after Wikipedia), <a href="https://stackoverflow.com/questions/2098149/what-platforms-have-something-other-than-8-bit-char">gushes with enthusiasm about non-8-bit byte architectures</a>, and asks <a href="https://stackoverflow.com/questions/6971886/exotic-architectures-the-standards-committees-care-about">which exotic architecture the committee cares about</a>.</p>
   <p>Why bother? A few reasons:</p>
   <ul>
    <li data-md="">
     <p>The complexity of supporting non-8-bit byte architectures sprinkles small but unnecessary burden in quite a few parts of language and library;</p>
    </li><li data-md="">
     <p>Compilers and toolchains are required to support edge cases that do not reflect modern usage;</p>
    </li><li data-md="">
     <p>New programmers are easily confused and find C++'s exotic tastes obtuse;</p>
    </li><li data-md="">
     <p>Some seasoned programmers joyfully spend time supporting non-existant platforms "for portability" if they are unwise;</p>
    </li><li data-md="">
     <p><a href="https://x.com/SebAaltonen/status/1843630586063413672">Our language looks silly</a>, solving problems that nobody has.</p>
   </li></ul>
   <p>One reason not to bother: there still are processors with non-8-bit bytes. The question facing us is: are they relevant to modern C++? If we keep supporting the current approach where Bytes"R"Us, will developers who use these processors use the new versions of C++?</p>
   <p>A cut-the-baby-in-half alternative is to mandate that <code><c- n="">CHAR_BIT</c-> <c- o="">%</c-> <c- mi="">8</c-> <c- o="">==</c-> <c- mi="">0</c-></code>. Is that even making anything better? Only if the Committee decides to keep supporting Digital Signal Processors (DSPs) and other processors where <code><c- n="">CHAR_BIT</c-></code> is not <code><c- mi="">8</c-></code> but is a multiple of <code><c- mi="">8</c-></code>.</p>
   <p>This paper cannot succeed without mentioning the PDP-10 (though noting that PDP-11 has 8-bit bytes), and the fact that some DSPs have 24-bit or 32-bit words treated as "bytes." These architectures made sense in their era, where word sizes varied and the notion of a byte wasn’t standardized. Today, nearly every general-purpose and embedded system adheres to the 8-bit byte model. The question isn’t whether there are still architectures where bytes aren’t 8-bits (there are!) but whether these care about modern C++... and whether modern C++ cares about them.</p>
   <h2 data-level="2" id="c"><span>2. </span><span>Impact on C</span><a href="#c"></a></h2>
   <p>This proposal explores whether C++ is relevant to architectures where bytes are not 8 bits, and whether these architectures are relevant to C++. The C committee might reach a different conclusion with respect to this language. Ideally, both committees would be aligned. This papers therefore defers to WG14 and the SG22 liaison group to inform WG21.</p>
   <h2 data-level="3" id="word"><span>3. </span><span>Wording</span><a href="#word"></a></h2>
   <h3 data-level="3.1" id="lang-word"><span>3.1. </span><span>Language</span><a href="#lang-word"></a></h3>
   <p>Edit [<strong>intro.memory</strong>] as follows:</p>
   <blockquote>
     The fundamental storage unit in the ++ memory model is the byte. A byte is 
    <ins><code><c- mi="">8</c-></code> bits, which is </ins>
    at least large enough to contain the ordinary literal encoding of any element of the basic character set literal character set and the eight-bit code units of the Unicode UTF-8 UTF-8 encoding form and is composed of a contiguous sequence of bits,
  the number of which is bits in a byte. The least significant bit is called the low-order bit; the most significant bit is called the high-order bit. The memory available to a C++ program consists of one or more sequences of contiguous bytes. Every byte has a unique address. 
    <blockquote> The number of bits in a byte is reported by the macro <code><c- n="">CHAR_BIT</c-></code> in the header <code><c- n="">climits</c-></code>. </blockquote>
   </blockquote>
   <h3 data-level="3.2" id="lib-word"><span>3.2. </span><span>Library</span><a href="#lib-word"></a></h3>
   <p>Edit [<strong>climits.syn</strong>] as follows:</p>
   <blockquote>
<pre><code><c- c1="">// all freestanding</c->
<c- cp="">#define CHAR_BIT </c-><del><c- cp="">see below</c-></del><ins><c- cp="">8</c-></ins>
<c- cp="">#define SCHAR_MIN </c-><del><c- cp="">see below</c-></del><ins><c- cp="">-127</c-></ins>
<c- cp="">#define SCHAR_MAX </c-><del><c- cp="">see below</c-></del><ins><c- cp="">128</c-></ins>
<c- cp="">#define UCHAR_MAX </c-><del><c- cp="">see below</c-></del><ins><c- cp="">255</c-></ins>
<c- cp="">#define CHAR_MIN see below</c->
<c- cp="">#define CHAR_MAX see below</c->
<c- cp="">#define MB_LEN_MAX see below</c->
<c- cp="">#define SHRT_MIN see below</c->
<c- cp="">#define SHRT_MAX see below</c->
<c- cp="">#define USHRT_MAX see below</c->
<c- cp="">#define INT_MIN see below</c->
<c- cp="">#define INT_MAX see below</c->
<c- cp="">#define UINT_MAX see below</c->
<c- cp="">#define LONG_MIN see below</c->
<c- cp="">#define LONG_MAX see below</c->
<c- cp="">#define ULONG_MAX see below</c->
<c- cp="">#define LLONG_MIN see below</c->
<c- cp="">#define LLONG_MAX see below</c->
<c- cp="">#define ULLONG_MAX see below</c->
</code></pre>
    <p>
     The header <code><c- n="">climits</c-></code> defines all macros the same as the C standard library header <code><c- n="">limits</c-><c- p="">.</c-><c- n="">h</c-></code>
     <ins>, except as noted above</ins>
     .
    </p>
    <blockquote> Except for <code><c- n="">CHAR_BIT</c-></code> and <code><c- n="">MB_LEN_MAX</c-></code>, a macro referring to an integer type <code><c- n="">T</c-></code> defines a constant whose type is the promoted type of <code><c- n="">T</c-></code>. </blockquote>
   </blockquote>
   <p>Edit [<strong>cstdint.syn</strong>] as follows:</p>
   <blockquote>
     The header <code><c- n="">cstdint</c-></code> supplies integer types having specified widths, and macros that specify limits of integer types. 
<pre><code><c- b="">int8_t</c->
<c- b="">int16_t</c->
<c- b="">int32_t</c->
<c- b="">int64_t</c->
<c- b="">int_fast8_t</c->
<c- b="">int_fast16_t</c->
<c- b="">int_fast32_t</c->
<c- b="">int_fast64_t</c->
<c- b="">int_least8_t</c->
<c- b="">int_least16_t</c->
<c- b="">int_least32_t</c->
<c- b="">int_least64_t</c->
<c- b="">intmax_t</c->
<c- b="">intptr_t</c->
<c- b="">uint8_t</c->
<c- b="">uint16_t</c->
<c- b="">uint32_t</c->
<c- b="">uint64_t</c->
<c- b="">uint_fast8_t</c->
<c- b="">uint_fast16_t</c->
<c- b="">uint_fast32_t</c->
<c- b="">uint_fast64_t</c->
<c- b="">uint_least8_t</c->
<c- b="">uint_least16_t</c->
<c- b="">uint_least32_t</c->
<c- b="">uint_least64_t</c->
<c- b="">uintmax_t</c->
<c- b="">uintptr_t</c->
</code></pre>
<pre><code><c- c1="">// all freestanding</c->
<c- k="">namespace</c-> <c- nn="">std</c-> <c- p="">{</c->
  <c- k="">using</c-> <c- b="">int8_t</c->         <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c-><del>   <c- c1="">// optional</c-></del>
  <c- k="">using</c-> <c- b="">int16_t</c->        <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c-><del>   <c- c1="">// optional</c-></del>
  <c- k="">using</c-> <c- b="">int32_t</c->        <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c-><del>   <c- c1="">// optional</c-></del>
  <c- k="">using</c-> <c- b="">int64_t</c->        <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c-><del>   <c- c1="">// optional</c-></del>
  <c- k="">using</c-> <c- n="">int</c-><i><c- n="">N</c-></i><c- n="">_t</c->         <c- o="">=</c-> <i><c- n="">see</c-> <c- n="">below</c-></i><c- p="">;</c->          <del>   <c- c1="">// optional</c-></del>

  <c- k="">using</c-> <c- b="">int_fast8_t</c->    <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">int_fast16_t</c->   <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">int_fast32_t</c->   <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">int_fast64_t</c->   <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- n="">int_fast</c-><i><c- n="">N</c-></i><c- n="">_t</c->    <c- o="">=</c-> <i><c- n="">see</c-> <c- n="">below</c-></i><c- p="">;</c->          <del>   <c- c1="">// optional</c-></del>

  <c- k="">using</c-> <c- b="">int_least8_t</c->   <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">int_least16_t</c->  <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">int_least32_t</c->  <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">int_least64_t</c->  <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- n="">int_least</c-><i><c- n="">N</c-></i><c- n="">_t</c->   <c- o="">=</c-> <i><c- n="">see</c-> <c- n="">below</c-></i><c- p="">;</c->          <del>   <c- c1="">// optional</c-></del>

  <c- k="">using</c-> <c- b="">intmax_t</c->       <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">intptr_t</c->       <c- o="">=</c-> <i><c- b="">signed</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c-><del>   <c- c1="">// optional</c-></del>

  <c- k="">using</c-> <c- b="">uint8_t</c->        <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c-><del> <c- c1="">// optional</c-></del>
  <c- k="">using</c-> <c- b="">uint16_t</c->       <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c-><del> <c- c1="">// optional</c-></del>
  <c- k="">using</c-> <c- b="">uint32_t</c->       <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c-><del> <c- c1="">// optional</c-></del>
  <c- k="">using</c-> <c- b="">uint64_t</c->       <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c-><del> <c- c1="">// optional</c-></del>
  <c- k="">using</c-> <c- n="">uint</c-><i><c- n="">N</c-></i><c- n="">_t</c->        <c- o="">=</c-> <i><c- n="">see</c-> <c- n="">below</c-></i><c- p="">;</c->          <del>   <c- c1="">// optional</c-></del>

  <c- k="">using</c-> <c- b="">uint_fast8_t</c->   <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">uint_fast16_t</c->  <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">uint_fast32_t</c->  <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">uint_fast64_t</c->  <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- n="">uint_fast</c-><i><c- n="">N</c-></i><c- n="">_t</c->   <c- o="">=</c-> <i><c- n="">see</c-> <c- n="">below</c-></i><c- p="">;</c->          <del>   <c- c1="">// optional</c-></del>

  <c- k="">using</c-> <c- b="">uint_least8_t</c->  <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">uint_least16_t</c-> <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">uint_least32_t</c-> <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">uint_least64_t</c-> <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- n="">uint_least</c-><i><c- n="">N</c-></i><c- n="">_t</c->  <c- o="">=</c-> <i><c- n="">see</c-> <c- n="">below</c-></i><c- p="">;</c->          <del>   <c- c1="">// optional</c-></del>

  <c- k="">using</c-> <c- b="">uintmax_t</c->      <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c->
  <c- k="">using</c-> <c- b="">uintptr_t</c->      <c- o="">=</c-> <i><c- b="">unsigned</c-> <c- n="">integer</c-> <c- n="">type</c-></i><c- p="">;</c-><del> <c- c1="">// optional</c-></del>
<c- p="">}</c->

<c- cp="">#define INT</c-><i><c- cp="">N</c-></i><c- cp="">_MIN         </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define INT</c-><i><c- cp="">N</c-></i><c- cp="">_MAX         </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define UINT</c-><i><c- cp="">N</c-></i><c- cp="">_MAX        </c-><i><c- cp="">see below</c-></i>

<c- cp="">#define INT_FAST</c-><i><c- cp="">N</c-></i><c- cp="">_MIN    </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define INT_FAST</c-><i><c- cp="">N</c-></i><c- cp="">_MAX    </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define UINT_FAST</c-><i><c- cp="">N</c-></i><c- cp="">_MAX   </c-><i><c- cp="">see below</c-></i>

<c- cp="">#define INT_LEAST</c-><i><c- cp="">N</c-></i><c- cp="">_MIN   </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define INT_LEAST</c-><i><c- cp="">N</c-></i><c- cp="">_MAX   </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define UINT_LEAST</c-><i><c- cp="">N</c-></i><c- cp="">_MAX  </c-><i><c- cp="">see below</c-></i>

<c- cp="">#define INTMAX_MIN       </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define INTMAX_MAX       </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define UINTMAX_MAX      </c-><i><c- cp="">see below</c-></i>

<c- cp="">#define INTPTR_MIN       </c-><i><c- cp="">see below</c-></i><c- cp="">           </c-><del><c- cp="">   </c-><c- c1="">// optional</c-></del>
<c- cp="">#define INTPTR_MAX       </c-><i><c- cp="">see below</c-></i><c- cp="">           </c-><del><c- cp="">   </c-><c- c1="">// optional</c-></del>
<c- cp="">#define UINTPTR_MAX      </c-><i><c- cp="">see below</c-></i><c- cp="">           </c-><del><c- cp="">   </c-><c- c1="">// optional</c-></del>

<c- cp="">#define PTRDIFF_MIN      </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define PTRDIFF_MAX      </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define SIZE_MAX         </c-><i><c- cp="">see below</c-></i>

<c- cp="">#define SIG_ATOMIC_MIN   </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define SIG_ATOMIC_MAX   </c-><i><c- cp="">see below</c-></i>

<c- cp="">#define WCHAR_MIN        </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define WCHAR_MAX        </c-><i><c- cp="">see below</c-></i>

<c- cp="">#define WINT_MIN         </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define WINT_MAX         </c-><i><c- cp="">see below</c-></i>

<c- cp="">#define INT</c-><i><c- cp="">N</c-></i><c- cp="">_C(value)    </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define UINT</c-><i><c- cp="">N</c-></i><c- cp="">_C(value)   </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define INTMAX_C(value)  </c-><i><c- cp="">see below</c-></i>
<c- cp="">#define UINTMAX_C(value) </c-><i><c- cp="">see below</c-></i>
</code></pre>
    <p>
     The header defines all types and macros the same as the C standard library header stdint.h
     <ins>, except that none of the types nor macros are optional because bytes are <code><c- mi="">8</c-></code> bits</ins>
     .
    </p>
    <p>
     All types that use the placeholder <i>N</i> are optional when <i>N</i> is not <code><c- mi="">8</c-></code>, <code><c- mi="">16</c-></code>, <code><c- mi="">32</c-></code>, or <code><c- mi="">64</c-></code>. 
     <del>The exact-width types <code><c- n="">int</c-><i><c- n="">N</c-></i><c- n="">_t</c-></code> and <code><c- n="">uint</c-><i><c- n="">N</c-></i><c- n="">_t</c-></code> for <i>N</i> = <code><c- mi="">8</c-></code>, <code><c- mi="">16</c-></code>, <code><c- mi="">32</c-></code>, and <code><c- mi="">64</c-></code> are also optional; however, if an implementation defines integer types with the corresponding width and no padding bits, it defines the corresponding typedef-names. Each of the macros listed in this subclause is defined if and only if the implementation defines the corresponding typedef-name.</del>
    </p>
    <blockquote> The macros <code><c- n="">INT</c-><i><c- n="">N</c-></i><c- n="">_C</c-></code> and <code><c- n="">UINT</c-><i><c- n="">N</c-></i><c- n="">_C</c-></code> correspond to the typedef-names <code><c- n="">int_least</c-><i><c- n="">N</c-></i><c- n="">_t</c-></code> and <code><c- n="">uint_least</c-><i><c- n="">N</c-></i><c- n="">_t</c-></code>, respectively. </blockquote>
   </blockquote>
   <p>Within [<strong>localization</strong>], remove the 4 <em>mandates</em> clauses specifying:</p>
   <blockquote>
    <del><code><c- n="">CHAR_BIT</c-> <c- o="">==</c-> <c- mi="">8</c-></code> is <code>true</code></del>
   </blockquote>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Fifth Generation Project in Japan (1992) (112 pts)]]></title>
            <link>https://www.sjsu.edu/faculty/watkins/5thgen.htm</link>
            <guid>41874275</guid>
            <pubDate>Thu, 17 Oct 2024 22:03:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sjsu.edu/faculty/watkins/5thgen.htm">https://www.sjsu.edu/faculty/watkins/5thgen.htm</a>, See on <a href="https://news.ycombinator.com/item?id=41874275">Hacker News</a></p>
<div id="readability-page-1" class="page"><center>
<table>
<tbody>
<tr>
<th><span color="#eeee00" size="6">applet-magic.com<br></span><span color="#00eeff" size="5"><i>Thayer Watkins</i><br>Silicon Valley<br>&amp; Tornado 
Alley<br>USA</span>
<center></center></th></tr></tbody></table></center>
<center>
<div>
<center><span color="#ffff00" size="6">The Fifth Generation Project in Japan 
</span></center></div></center>
<p><b>The Japanese <i>Fifth Generation Project</i> in computer technology was an 
attempt to leapfrog Western computer expertise and create an entirely new 
computer technology. Although the generation terminology is a bit murky, there 
was the general perception that there had been a a number of <i>generations</i> 
of computer design and the accompanying operating methods. 
</b></p><p><b>The first generation 
was the mainframe computers created by Sperry Rand and IBM during and after World 
War II. They were hard-wired to carry out the desired sequence of computations. 
John Von Neumann and Herman Goldstine showed how hard wiring could be replaced by an 
internally stored program. Machine language program was feasible but oh so 
tedious. Assembly language programming was a great advance in its day. Mnemonic 
commands could be <i>assembled</i> and <i>compiled</i> into the machine language 
coding required by the computers. But assembly language programming was still 
almost unbearably tedious so when John Bachus and his group created Fortran 
(short for Formula Translation) and John McCarthy created LISP (short for List 
Processing) it was a whole new day in computer technology, a new generation. 
Fortran became the language for routine number crunching and still is to some 
extent despite the development of other more sophisticated computer languages. 
McCarthy's LISP had an entirely different career. It was founded upon a bit of 
esoteric mathematics called the <a href="https://www.sjsu.edu/faculty/watkins/lambda.htm">Lambda Calculus</a>. LISP 
had a value at the fringes of computer technology, in particular for what became 
known as <i>Artificial Intelligence</i> or AI. AI researchers in the U.S. made 
<a href="https://www.sjsu.edu/faculty/watkins/lisp.htm">LISP</a> their standard. While was LISP was mathematically sophisticated it was 
almost terminally <i>klutzy</i> in its terminology. Standard operations 
such as finding the head of a list and the tail of a list were known as CAR and 
CDR, for cumulative additive register and cumulative decrement register. 
Outsiders could easily mistake the klutziness of LISP for primitiveness.
 In 
Europe a new computer language was developed called <a href="https://www.sjsu.edu/faculty/watkins/prolog.htm">PROLOG</a> (short for logic 
programming) that was slicker than LISP and had potential for AI.
 
</b></p><p><b>The Japanese Fifth Generation project was a collaborative effort of the 
Japanese computer industry coordinated by the Japanese Government that intended 
not only to update the hardware technology of computers but alleviate the 
problems of programming by creating AI operating systems that would ferret out 
what the user wanted and then do it. The Project chose to use PROLOG as the 
computer language for the AI programming instead of the LISP-based programming 
of the American AI researchers. 
</b></p><p><b>The <i>New York Times</i>' story on the demise of the Fifth Generation Project ran 
with a picture carrying the following caption: 
</b></p><blockquote><b>"Ten years ago we faced criticism of being too reckless," said 
Kazuhiro Fuchi, Fifth Generation's head. "Now we see criticism from inside and 
outside the country because we have failed to achieve such grand goals." 
</b></blockquote><b>
<p>The story itself was as follows: 
</p><p>Tokyo June 4.--A bold 10-year effort by Japan to seize the lead in computer 
technology is fizzling to a close having failed to meet many of its ambitious 
goals or to produce technology that Japan's computer industry wanted. After 
spending $400 million on its widely heralded Fifth Generation computer project, 
the Japanese Government said this week that it was willing to give away the 
software developed by the project to anyone who wanted it, even foreigners. 
</p><p>Machines That Would Think 
</p></b><p><b>That attitude is a sharp contrast to the project's inception, when it spread 
fear in the United States that the Japanese were going to leapfrog the American 
computer industry. In response, a group of American companies formed the 
Microelectronics and Computer Technology Corporation, a consortium in Austin, 
Texas, to cooperate on research. And the Defense Department, in part to meet the 
Japanese challenge, began a huge long-term program to develop intelligent 
systems, including tanks that could navigate on their own. Now, with a debate in 
the United States about whether the Government should help American companies 
compete, the Fifth Generation venture is a reminder that even Japan's highly 
regarded Ministry of International Trade and Industry can make mistakes in 
predicting what technologies will be important in the future. The problem for 
Japan is that the computer industry shifted so rapidly that the technological 
path the Fifth Generation took-- which seemed a wise choice in 1982-- turned out 
to be at odds with the computer industry's direction by 1992. In a sense, 
Japan's ability to stay the course in pursuit of a long-term payoff-- usually 
considered one of the country's strongest assets-- turned into a liability. A 
similar challenge for Japan may now be arising in high-definition television. 
Japan's HDTV system, which has been in development for two decades, is now 
coming to market just as some engineers believe that major shift to digital 
television technology will make the Japanese analog approach obsolete. Yet 
interest in joining government-industry projects continues in Japan. Another 
computer technology program, called the Real World Computing project, is getting 
underway. Executives here said that such programs could lead to valuable results 
even if no useful products emerge from the pipeline. A benefit of the Fifth 
Generation project, for instance, is that it trained hundreds , perhaps 
thousands, of engineers in advanced computer science. </b>
</p><p>Source: <br>The New York Times, <i>'Fifth Generation' Became Japan's Lost 
Generation</i>, June 5, 1992. 
</p><hr>

<center>
</center>
</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why does everyone run ancient Postgres versions? (201 pts)]]></title>
            <link>https://neon.tech/blog/why-does-everyone-run-ancient-postgres-versions</link>
            <guid>41873957</guid>
            <pubDate>Thu, 17 Oct 2024 21:23:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://neon.tech/blog/why-does-everyone-run-ancient-postgres-versions">https://neon.tech/blog/why-does-everyone-run-ancient-postgres-versions</a>, See on <a href="https://news.ycombinator.com/item?id=41873957">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><span aria-owns="rmiz-modal-" data-rmiz=""><span data-rmiz-content="not-found"><img alt="Post image" fetchpriority="high" width="1024" height="576" decoding="async" data-nimg="1" sizes="(max-width: 767px) 100vw" srcset="https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F10%2Fneon-ancient-postgres.jpg&amp;w=640&amp;q=85&amp;dpl=dpl_7ezU7qvLmaWkHAjUZAgkhjtrRcYQ 640w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F10%2Fneon-ancient-postgres.jpg&amp;w=750&amp;q=85&amp;dpl=dpl_7ezU7qvLmaWkHAjUZAgkhjtrRcYQ 750w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F10%2Fneon-ancient-postgres.jpg&amp;w=828&amp;q=85&amp;dpl=dpl_7ezU7qvLmaWkHAjUZAgkhjtrRcYQ 828w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F10%2Fneon-ancient-postgres.jpg&amp;w=1080&amp;q=85&amp;dpl=dpl_7ezU7qvLmaWkHAjUZAgkhjtrRcYQ 1080w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F10%2Fneon-ancient-postgres.jpg&amp;w=1200&amp;q=85&amp;dpl=dpl_7ezU7qvLmaWkHAjUZAgkhjtrRcYQ 1200w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F10%2Fneon-ancient-postgres.jpg&amp;w=1920&amp;q=85&amp;dpl=dpl_7ezU7qvLmaWkHAjUZAgkhjtrRcYQ 1920w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F10%2Fneon-ancient-postgres.jpg&amp;w=2048&amp;q=85&amp;dpl=dpl_7ezU7qvLmaWkHAjUZAgkhjtrRcYQ 2048w, https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F10%2Fneon-ancient-postgres.jpg&amp;w=3840&amp;q=85&amp;dpl=dpl_7ezU7qvLmaWkHAjUZAgkhjtrRcYQ 3840w" src="https://neon.tech/_next/image?url=https%3A%2F%2Fneondatabase.wpengine.com%2Fwp-content%2Fuploads%2F2024%2F10%2Fneon-ancient-postgres.jpg&amp;w=3840&amp;q=85&amp;dpl=dpl_7ezU7qvLmaWkHAjUZAgkhjtrRcYQ"></span></span></p><p><a href="https://neon.tech/blog/postgres-17">Postgres 17.0 has been out for a bit and it’s awesome</a>, but here’s the reality: most Postgres users won’t upgrade right away. Most probably aren’t even on 16.4 or <em>16.anything </em>😱—they’re probably still using Postgres 15 or an even older version. 😭 With Postgres, it’s not like the latest Call of Duty, where everyone wants the update the moment it’s available.</p>



<p>Why don’t more people upgrade?</p>



<p>There are many reasons for this, but it comes down to two core issues: Postgres works and upgrades suck.</p>



<h2 id="the-foundational-greatness-of-postgres">The foundational greatness of Postgres</h2>



<p>We at Neon are embedded in the Postgres world. <a href="https://neon.tech/blog/top-3-features-in-postgres-17">Our team has worked on Postgres 17</a> and we’re all excited about all the new features and optimizations. But the entire point of Neon is acknowledging that most developers aren’t like us—they aren’t all about the database. For an average developer, the database is just a tool.&nbsp;</p>



<p>And Postgres has been a great tool since many versions before 17. For what most developers need, older versions of Postgres are more than capable. The core functionality of Postgres has been there for many years. This foundational strength is what allows developers to build robust, scalable applications without worrying about the underlying database version.</p>



<p><strong>This doesn’t mean that Postgres hasn’t improved. </strong>We’ll show you a tool later in this post that will allow you to see this much more clearly. </p>



<p>For example, let’s say you’re currently on version 12. Since then, Postgres performance alone has improved significantly: </p>



<ul>
<li><a href="http://v/">Postgres 13</a> improved performance for queries that use aggregates or partitioned tables</li>



<li><a href="https://www.postgresql.org/docs/release/14.0/">Postgres 14</a> brought numerous performance improvements for parallel queries, heavily concurrent workloads, partitioned tables, logical replication, and vacuuming</li>



<li><a href="https://www.postgresql.org/docs/release/15.0/">Postgres 15</a> offered performance enhancements, particularly for in-memory and on-disk sorting</li>



<li><a href="https://www.postgresql.org/docs/release/16.0/">Postgres 16</a> improved the performance of vacuum freezing and logical replication from replicas</li>
</ul>



<p>These under-the-hood improvements are critical for building better applications. <a href="https://rmarcus.info/blog/2024/04/12/pg-over-time.html">Tail latency dropped by half</a> (over a second) between Postgres versions 8 and 16:</p>



<p><img loading="lazy" decoding="async" src="https://lh7-rt.googleusercontent.com/docsz/AD_4nXchs45eq_Qd7frywBYmtMrXuj5Hvdf2bWXyRCAclDPWvqlqsexeRdt0hIYG5T6EcQDg_AjN4xZ-sB8wfGDBiQvSw7y4_6DebxJzTmXfUgLXFvZ9fhMH_pa1eWUK4lE2pVHmHvU1Ro8658nT714M4bntkyN2?key=whimhCY7Z8YO4kaKWqIxOg" width="575" height="401"></p>



<p>This is without counting the security improvements, bug fixes, and of course new features. The new versions have brought support for the SQL <a href="https://www.postgresql.org/docs/15/sql-merge.html">MERGE</a> command, SQL/JSON constructors and identity functions, parallelized vacuuming of indexes…&nbsp;</p>



<p>But now, to look at the other side of the coin: Unless you either a) are really reaching the limits of Postgres performance and are looking for any possible improvements or b) particularly need some newly added functionality, Postgres 12 probably works <em>fine</em> for you already.</p>







<p>So that’s the first reason many Postgres users hesitate to upgrade: Postgres is already great as it is. But we’d be fooling ourselves if we didn’t also acknowledge how painful it can be to update major versions of Postgres, especially for large production databases.</p>



<p>Minor updates are fine, and they’re completely covered for you by many managed Postgres services like Neon—<a href="https://neon.tech/docs/postgresql/postgres-version-policy">you don’t even have to think about them</a>. But updating a major version is a different game. Major versions of Postgres might introduce changes that aren’t backward compatible (something that doesn’t happen with minor versions) meaning that it’s much harder for Postgres companies to simply upgrade you automatically.</p>



<p>This doesn’t mean that it’s impossible to simplify this process. At Neon, we’ve put a lot of thought into <a href="https://neon.tech/docs/postgresql/postgres-upgrade">making it easier for you to upgrade</a>—for example, by supporting logical replication—and <strong>we’re working on a one-click Postgres upgrade feature so you can upgrade with minimal downtime. Not only that, but with Neon you’ll upgrade within a branch to ensure things work, and then upgrade your production with the least amount of interruption as possible. (Keep an eye on 2025 roadmap).</strong></p>







<p>To put things into perspective, let’s look at two public stories of companies that performed Postgres upgrades, jumping multiple major versions while managing databases of considerable size in production: <a href="https://knock.app/blog/zero-downtime-postgres-upgrades">Knock</a> (they upgraded from Postgres 11 to 15) and <a href="https://retool.com/blog/how-we-upgraded-postgresql-database">Retool</a> (from Postgres 9 to 13). These are big leaps that need to be made strategically.</p>



<p>Here’s what these companies had to do:</p>



<ol>
<li><strong>Assessment and planning.</strong> They evaluated their database sizes and workloads (Retool had a 4 TB database; Knock managed multiple databases). Objectives like minimizing downtime and upgrading before end-of-life were set. They chose their target Postgres versions and crafted detailed project timelines and risk assessments.</li>



<li><strong>Set up replication.</strong> New database instances running the target Postgres versions were spun up and logical replication from the old to the new databases was established. Retool used <a href="https://www.citusdata.com/blog/2017/12/08/citus-warp-pain-free-migrations/">Warp</a> for parallel processing to expedite the initial dump and restore, while Knock created custom publications and subscriptions for incremental migration.</li>



<li><strong>Migrate data incrementally.</strong> Tables were categorized based on size and update frequency. Small tables were added to replication and synchronized quickly. For large, append-only tables, they used separate publications with copy_data = false and then backfilled. Custom migration strategies were considered for large, frequently updated tables.</li>



<li><strong>Testing and verification.</strong> Thorough testing was performed on the new database versions. They compared row counts and sample data between old and new databases, ran load tests to verify performance, and conducted multiple dry runs in staging environments.</li>



<li><strong>Application changes.</strong> After testing, they modified their applications to support connections to both old and new databases. Mechanisms were implemented to switch traffic from the old to the new databases, such as using feature flags.</li>



<li><strong>cutover strategy.</strong> The cutover was scheduled during low-traffic periods. Retool used a maintenance window aiming for about one hour, while Knock achieved near-zero downtime with a brief pause in new queries.</li>



<li><strong>Post-migration tasks.</strong> Afterward, they verified data integrity and application functionality, optimized the new databases (e.g., reindexing, vacuuming), monitored performance in the following days, removed old replication setups, and decommissioned the old databases.</li>
</ol>



<p>Yep. That’s a lot of work. There’s no way around that. Upgrading a production Postgres database that’s multiple versions behind requires a significant investment of time and resources. For many organizations, this level of effort can be daunting, so they often postpone upgrades until absolutely necessary.</p>







<p>Despite all this, we still want to encourage you to <em>upgrade, upgrade, upgrade</em>!&nbsp;Don’t worry too much, <strong>we’ll make this process so much easier! </strong>(Remember the 2025 roadmap!)</p>



<p><a href="https://www.postgresql.org/about/news/postgresql-17-released-2936/">If the great new functionality in Postgres 17 isn’t enough to convince you</a>, here are some other reasons:</p>



<ul>
<li><strong>You’ll eventually have to do it anyway. </strong>Postgres versions have a lifecycle, and support for each version eventually ends (5 years after its initial release).&nbsp;</li>



<li><strong>It’s more difficult to jump many versions at once. </strong>The longer you wait to upgrade, the more versions you’ll have to leap over when you finally do. It’s best to jump as many versions as you can when you do upgrade but if you wait for 5 or more versions there will be many compatibility issues and breaking changes ahead.&nbsp;</li>



<li><strong>Your app might fall behind. </strong>Newer versions of Postgres come with performance optimizations and new functionalities that can enhance your applications. By sticking with an older version, you might be missing out on improvements that could make your system faster and more efficient.&nbsp;</li>



<li><strong>Compatibility. </strong>New frameworks, libraries, and tools might come out without compatibility for the older version of Postgres you might be working with. Updated APIs or extensions might not be backward compatible, preventing you from integrating certain tools or requiring complex workarounds.</li>
</ul>







<p>Part of the lack of inspiration around upgrading comes from the hassle of manually comparing release notes between versions and figuring out how many improvements you’re missing. To make this easier, we’ve built a tool: <a href="https://pgversions.com/">https://pgversions.com/</a></p>



<figure><video autoplay="" controls="" loop="" src="https://neondatabase.wpengine.com/wp-content/uploads/2024/10/pgversions.mov"></video></figure>



<p>This tool helps you quickly identify the improvements you’re missing by running an older Postgres version. For example, if you’re running Postgres 16.1, a quick search using pgversions.com tells you that you’re missing:</p>



<ul>
<li>4 security improvements</li>



<li>177 bug fixes</li>



<li>24 performance improvements</li>



<li>10 new features</li>
</ul>



<p>If <a href="https://pgversions.com/">pgversions</a> inspires you to finally upgrade, the <code>How to upgrade</code> section in the report will point you toward the right docs for different providers.</p>







<p>If you’re running an older version of Postgres and thinking there’s plenty more time. We know it’s tempting to procrastinate, but don’t let technical debt haunt you. <a href="https://neon.tech/docs/postgresql/postgres-upgrade">Follow this guide to plan to upgrade your Neon database to Postgres 17</a> and just cross it off your to-do list.&nbsp;</p>



<p>Are you running an older version of Postgres where they don’t offer the latest versions? A migration to Neon could mean upgrading and <a href="https://neon.tech/blog/how-dispatch-speeds-up-development-with-neon-while-keeping-workloads-on-aurora">switching to a better development environment</a>. Feel free to<a href="https://neon.tech/migration-assistance"> reach out to us</a> with any questions.&nbsp;</p>



<p><em>If you’re new to Neon, you can get started with Postgres 17 right away </em><a href="https://console.neon.tech/signup"><em>via our Free plan.</em></a></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Diabetes Breakthrough: New Treatment Eliminates Insulin for 86% of Patients (258 pts)]]></title>
            <link>https://scitechdaily.com/diabetes-breakthrough-new-treatment-eliminates-insulin-for-86-of-patients/</link>
            <guid>41873606</guid>
            <pubDate>Thu, 17 Oct 2024 20:46:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://scitechdaily.com/diabetes-breakthrough-new-treatment-eliminates-insulin-for-86-of-patients/">https://scitechdaily.com/diabetes-breakthrough-new-treatment-eliminates-insulin-for-86-of-patients/</a>, See on <a href="https://news.ycombinator.com/item?id=41873606">Hacker News</a></p>
Couldn't get https://scitechdaily.com/diabetes-breakthrough-new-treatment-eliminates-insulin-for-86-of-patients/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Kagi Update: AI Image Filter for Search Results (266 pts)]]></title>
            <link>https://help.kagi.com/kagi/features/exclude-ai-images.html</link>
            <guid>41873204</guid>
            <pubDate>Thu, 17 Oct 2024 20:02:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://help.kagi.com/kagi/features/exclude-ai-images.html">https://help.kagi.com/kagi/features/exclude-ai-images.html</a>, See on <a href="https://news.ycombinator.com/item?id=41873204">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-v-6b87e69f=""><p>As AI-generated images become increasingly prevalent across the web, many users find their image search results cluttered with artificial content. This can be particularly frustrating when searching for authentic, human-created images or specific real-world references.</p><p>At Kagi, we understand the importance of delivering high-quality, relevant search results. Our AI Image Filter feature is designed to address this challenge, giving users more control over the content they see and prioritizing authentic imagery in search results.</p><h2 id="downranking-ai-generated-images" tabindex="-1">Downranking AI-generated images <a href="#downranking-ai-generated-images" aria-label="Permalink to &quot;Downranking AI-generated images&quot;">​</a></h2><p>By default, <a href="https://kagi.com/images" target="_blank" rel="noreferrer">Kagi Image Search</a> downranks images from websites with a high proportion of AI-generated content. Try the example search <a href="https://kagi.com/images?q=baby+cat" target="_blank" rel="noreferrer">here</a>.</p><p><img src="https://help.kagi.com/assets/kagi_vs_google_image_search.697001c9.png" alt="Kagi vs Google AI-generated images" width="720px" data-zoomable=""></p><h2 id="labeling-ai-generated-images" tabindex="-1">Labeling AI-generated images <a href="#labeling-ai-generated-images" aria-label="Permalink to &quot;Labeling AI-generated images&quot;">​</a></h2><p>In addition to downranking, we have implemented an AI image labeling system. This feature adds a small badge or icon to thumbnails that are likely to be AI-generated content. The label helps users quickly identify potential AI images without completely removing them from search results.</p><p><img src="https://help.kagi.com/assets/image_search_ai_label.f8dce12e.png" alt="Kagi AI Image Label" width="720px" data-zoomable=""></p><h2 id="filtering-ai-generated-images" tabindex="-1">Filtering AI-generated images <a href="#filtering-ai-generated-images" aria-label="Permalink to &quot;Filtering AI-generated images&quot;">​</a></h2><p>You can use the AI images filter to completely exclude websites with AI-generated images from your search results.</p><video src="https://help.kagi.com/assets/exclude_ai_images_filter.5e996806.mp4" width="720" type="video/mp4" autoplay="" muted="" loop="" playsinline="" disablepictureinpicture="" alt="Kagi Image Search - Exclude AI Images Filter"></video><h2 id="you-are-in-control-block-websites-in-image-search-results" tabindex="-1">You are in control: Block websites in image search results <a href="#you-are-in-control-block-websites-in-image-search-results" aria-label="Permalink to &quot;You are in control: Block websites in image search results&quot;">​</a></h2><p>Note that, since there is currently no reliable way to automatically identify AI-generated images with good enough precision, this feature relies on the website's reputation rather than analyzing individual images. As a result, some AI-generated content may still appear in the results.</p><p>If you detect a website with AI or low quality imagery that slipped through our filter, you can lower or completely block it off in your search results, using our <a href="https://help.kagi.com/kagi/features/website-info-personalized-results.html">search personalization feature</a>.</p><p>Click on shield icon in your image search results, the same as you already can do in web search results.</p><p><img src="https://help.kagi.com/assets/block_domain.4dab6216.gif" alt="Kagi Image search personalization"></p><h2 id="our-approach-to-ai-generated-images" tabindex="-1">Our approach to AI-generated images <a href="#our-approach-to-ai-generated-images" aria-label="Permalink to &quot;Our approach to AI-generated images&quot;">​</a></h2><p>The decision to implement this feature and have it turned on by default is based on our <a href="https://help.kagi.com/kagi/why-kagi/ai-philosophy.html">AI integration philosophy</a> and direct <a href="https://kagifeedback.org/d/4972-ability-to-filter-out-obvious-ai-image-websites-from-image-search" target="_blank" rel="noreferrer">user feedback</a>.</p><p>This is farily new territory so do not expect the detection to be 100% reliable. We will be working more to improve this in the future. As always, help us improve Kagi by <a href="https://kagifeedback.org/" target="_blank" rel="noreferrer">sending feedback</a>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Grandmaster-Level Chess Without Search (315 pts)]]></title>
            <link>https://github.com/google-deepmind/searchless_chess</link>
            <guid>41872813</guid>
            <pubDate>Thu, 17 Oct 2024 19:13:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/google-deepmind/searchless_chess">https://github.com/google-deepmind/searchless_chess</a>, See on <a href="https://news.ycombinator.com/item?id=41872813">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Grandmaster-Level Chess Without Search</h2><a id="user-content-grandmaster-level-chess-without-search" aria-label="Permalink: Grandmaster-Level Chess Without Search" href="#grandmaster-level-chess-without-search"></a></p>
<p dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/google-deepmind/searchless_chess/master/overview.svg"><img src="https://raw.githubusercontent.com/google-deepmind/searchless_chess/master/overview.svg" alt="Overview figure"></a>
</p>
<p dir="auto">This repository provides an implementation of our paper <a href="https://arxiv.org/abs/2402.04494" rel="nofollow">Grandmaster-Level Chess Without Search</a>.</p>
<blockquote>
<p dir="auto">The recent breakthrough successes in machine learning are mainly attributed to scale: namely large-scale attention-based architectures and datasets of unprecedented scale.
This paper investigates the impact of training at scale for chess.
Unlike traditional chess engines that rely on complex heuristics, explicit search, or a combination of both, we train a 270M parameter transformer model with supervised learning on a dataset of 10 million chess games.
We annotate each board in the dataset with action-values provided by the powerful Stockfish 16 engine, leading to roughly 15 billion data points.
Our largest model reaches a Lichess blitz Elo of 2895 against humans, and successfully solves a series of challenging chess puzzles, without any domain-specific tweaks or explicit search algorithms.
We also show that our model outperforms AlphaZero's policy and value networks (without MCTS) and GPT-3.5-turbo-instruct.
A systematic investigation of model and dataset size shows that strong chess performance only arises at sufficient scale.
To validate our results, we perform an extensive series of ablations of design choices and hyperparameters.</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contents</h2><a id="user-content-contents" aria-label="Permalink: Contents" href="#contents"></a></p>
<div data-snippet-clipboard-copy-content=".
|
├── BayesElo                        - Elo computation (need to be installed)
|
├── checkpoints                     - Model checkpoints (need to be downloaded)
|   ├── 136M
|   ├── 270M
|   └── 9M
|
├── data                            - Datasets (need to be downloaded)
|   ├── eco_openings.csv
|   ├── test
|   ├── train
|   └── puzzles.csv
|
├── lc0                             - Leela Chess Zero (needs to be installed)
|
├── src
|   ├── engines
|   |   ├── engine.py               - Engine interface
|   |   ├── lc0_engine.py           - Leela Chess Zero engine
|   |   ├── neural_engines.py       - Neural engines
|   |   └── stockfish_engine.py     - Stockfish engine
|   |
|   ├── bagz.py                     - Readers for our .bag data files
|   ├── config.py                   - Experiment configurations
|   ├── constants.py                - Constants, interfaces, and types
|   ├── data_loader.py              - Data loader
|   ├── metrics_evaluator.py        - Metrics (e.g., Kendall's tau) evaluator
|   ├── puzzles.py                  - Puzzle evaluation script
|   ├── searchless_chess.ipynb      - Model analysis notebook
|   ├── tokenizer.py                - Chess board tokenization
|   ├── tournament.py               - Elo tournament script
|   ├── train.py                    - Example training + evaluation script
|   ├── training.py                 - Training loop
|   ├── training_utils.py           - Training utility functions
|   ├── transformer.py              - Decoder-only Transformer
|   └── utils.py                    - Utility functions
|
├── Stockfish                       - Stockfish (needs to be installed)
|
├── README.md
└── requirements.txt                - Dependencies"><pre><code>.
|
├── BayesElo                        - Elo computation (need to be installed)
|
├── checkpoints                     - Model checkpoints (need to be downloaded)
|   ├── 136M
|   ├── 270M
|   └── 9M
|
├── data                            - Datasets (need to be downloaded)
|   ├── eco_openings.csv
|   ├── test
|   ├── train
|   └── puzzles.csv
|
├── lc0                             - Leela Chess Zero (needs to be installed)
|
├── src
|   ├── engines
|   |   ├── engine.py               - Engine interface
|   |   ├── lc0_engine.py           - Leela Chess Zero engine
|   |   ├── neural_engines.py       - Neural engines
|   |   └── stockfish_engine.py     - Stockfish engine
|   |
|   ├── bagz.py                     - Readers for our .bag data files
|   ├── config.py                   - Experiment configurations
|   ├── constants.py                - Constants, interfaces, and types
|   ├── data_loader.py              - Data loader
|   ├── metrics_evaluator.py        - Metrics (e.g., Kendall's tau) evaluator
|   ├── puzzles.py                  - Puzzle evaluation script
|   ├── searchless_chess.ipynb      - Model analysis notebook
|   ├── tokenizer.py                - Chess board tokenization
|   ├── tournament.py               - Elo tournament script
|   ├── train.py                    - Example training + evaluation script
|   ├── training.py                 - Training loop
|   ├── training_utils.py           - Training utility functions
|   ├── transformer.py              - Decoder-only Transformer
|   └── utils.py                    - Utility functions
|
├── Stockfish                       - Stockfish (needs to be installed)
|
├── README.md
└── requirements.txt                - Dependencies
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto">Clone the source code into a local directory:</p>
<div dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/google-deepmind/searchless_chess.git
cd searchless_chess"><pre>git clone https://github.com/google-deepmind/searchless_chess.git
<span>cd</span> searchless_chess</pre></div>
<p dir="auto">This repository requires Python 3.10.
<code>pip install -r requirements.txt</code> will install all required dependencies.
This is best done inside a <a href="https://www.anaconda.com/" rel="nofollow">conda environment</a>.
To that end, install <a href="https://www.anaconda.com/download#downloads" rel="nofollow">Anaconda</a>.
Then, create and activate the conda environment:</p>
<div dir="auto" data-snippet-clipboard-copy-content="conda create --name searchless_chess python=3.10
conda activate searchless_chess"><pre>conda create --name searchless_chess python=3.10
conda activate searchless_chess</pre></div>
<p dir="auto">Install <code>pip</code> and use it to install all the dependencies:</p>
<div dir="auto" data-snippet-clipboard-copy-content="conda install pip
pip install -r requirements.txt"><pre>conda install pip
pip install -r requirements.txt</pre></div>
<p dir="auto">If you have a GPU available (highly recommended for fast training), then you can install JAX with CUDA support.</p>
<div dir="auto" data-snippet-clipboard-copy-content="pip install --upgrade &quot;jax[cuda12_pip]&quot; -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html"><pre>pip install --upgrade <span><span>"</span>jax[cuda12_pip]<span>"</span></span> -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html</pre></div>
<p dir="auto">Note that the jax version must correspond to the existing CUDA installation you wish to use (CUDA 12 in the example above).
Please see the <a href="https://github.com/google/jax#installation">JAX documentation</a> for more details.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Installing Stockfish</h3><a id="user-content-installing-stockfish" aria-label="Permalink: Installing Stockfish" href="#installing-stockfish"></a></p>
<p dir="auto">Download and compile the latest version of Stockfish (for Unix-like systems):</p>
<div dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/official-stockfish/Stockfish.git
cd Stockfish/src
make -j profile-build ARCH=x86-64-avx2
cd ../.."><pre>git clone https://github.com/official-stockfish/Stockfish.git
<span>cd</span> Stockfish/src
make -j profile-build ARCH=x86-64-avx2
<span>cd</span> ../..</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Installing Leela Chess Zero</h3><a id="user-content-installing-leela-chess-zero" aria-label="Permalink: Installing Leela Chess Zero" href="#installing-leela-chess-zero"></a></p>
<p dir="auto">Follow the <a href="https://github.com/LeelaChessZero/lc0?tab=readme-ov-file#downloading-source">Lc0 download instructions</a>, i.e.,</p>
<div dir="auto" data-snippet-clipboard-copy-content="git clone -b release/0.30 --recurse-submodules https://github.com/LeelaChessZero/lc0.git"><pre>git clone -b release/0.30 --recurse-submodules https://github.com/LeelaChessZero/lc0.git</pre></div>
<p dir="auto">Then build the engine as described in the <a href="https://github.com/LeelaChessZero/lc0?tab=readme-ov-file#building-and-running-lc0">Lc0 build instructions</a>.</p>
<p dir="auto">We evaluate Lc0 with the largest-possible network from <a href="https://lczero.org/play/networks/bestnets/" rel="nofollow">Lc0's model catalogue</a>, i.e., the <code>Large</code> network.
To download that network, run the following command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cd lc0/build/release
wget https://storage.lczero.org/files/768x15x24h-t82-swa-7464000.pb.gz
gzip -d 768x15x24h-t82-swa-7464000.pb.gz
cd ../../.."><pre><span>cd</span> lc0/build/release
wget https://storage.lczero.org/files/768x15x24h-t82-swa-7464000.pb.gz
gzip -d 768x15x24h-t82-swa-7464000.pb.gz
<span>cd</span> ../../..</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Installing BayesElo</h3><a id="user-content-installing-bayeselo" aria-label="Permalink: Installing BayesElo" href="#installing-bayeselo"></a></p>
<p dir="auto">To compute the Elos for the different agents, we require <a href="https://www.remi-coulom.fr/Bayesian-Elo/" rel="nofollow">BayesElo</a>, which can be installed as follows:</p>
<div dir="auto" data-snippet-clipboard-copy-content="wget https://www.remi-coulom.fr/Bayesian-Elo/bayeselo.tar.bz2
tar -xvjf bayeselo.tar.bz2
cd BayesElo
make bayeselo
cd .."><pre>wget https://www.remi-coulom.fr/Bayesian-Elo/bayeselo.tar.bz2
tar -xvjf bayeselo.tar.bz2
<span>cd</span> BayesElo
make bayeselo
<span>cd</span> ..</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Downloading the Datasets</h3><a id="user-content-downloading-the-datasets" aria-label="Permalink: Downloading the Datasets" href="#downloading-the-datasets"></a></p>
<p dir="auto">To download our datasets to the correct locations, run the following command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cd data
./download.sh
cd .."><pre><span>cd</span> data
./download.sh
<span>cd</span> ..</pre></div>
<p dir="auto">We also provide the individual dataset download links in the following table
(the action-value dataset is sharded into 2148 files due to its size and only
the link to the first shard is listed below):</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Split</th>
<th>Action-Value</th>
<th>Behavioral Cloning</th>
<th>State-Value</th>
<th>Puzzles</th>
</tr>
</thead>
<tbody>
<tr>
<td>Train</td>
<td><a href="https://storage.googleapis.com/searchless_chess/data/train/action_value-00000-of-02148_data.bag" rel="nofollow">1.2 GB</a> (of 1.1 TB)</td>
<td><a href="https://storage.googleapis.com/searchless_chess/data/train/behavioral_cloning_data.bag" rel="nofollow">34 GB</a></td>
<td><a href="https://storage.googleapis.com/searchless_chess/data/train/state_value_data.bag" rel="nofollow">36 GB</a></td>
<td>-</td>
</tr>
<tr>
<td>Test</td>
<td><a href="https://storage.googleapis.com/searchless_chess/data/test/action_value_data.bag" rel="nofollow">141 MB</a></td>
<td><a href="https://storage.googleapis.com/searchless_chess/data/test/behavioral_cloning_data.bag" rel="nofollow">4.1 MB</a></td>
<td><a href="https://storage.googleapis.com/searchless_chess/data/test/state_value_data.bag" rel="nofollow">4.4 MB</a></td>
<td><a href="https://storage.googleapis.com/searchless_chess/data/puzzles.csv" rel="nofollow">4.5 MB</a></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h3 tabindex="-1" dir="auto">Downloading the Model Checkpoints</h3><a id="user-content-downloading-the-model-checkpoints" aria-label="Permalink: Downloading the Model Checkpoints" href="#downloading-the-model-checkpoints"></a></p>
<p dir="auto">To download the pretrained models to the correct locations, run the following command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cd checkpoints
./download.sh
cd .."><pre><span>cd</span> checkpoints
./download.sh
<span>cd</span> ..</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto">Before running any code, make sure to activate the conda environment and set the <code>PYTHONPATH</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="conda activate searchless_chess
export PYTHONPATH=$(pwd)/.."><pre>conda activate searchless_chess
<span>export</span> PYTHONPATH=<span><span>$(</span>pwd<span>)</span></span>/..</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Training</h3><a id="user-content-training" aria-label="Permalink: Training" href="#training"></a></p>
<p dir="auto">To train a model locally, run the following command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cd src
python train.py
cd .."><pre><span>cd</span> src
python train.py
<span>cd</span> ..</pre></div>
<p dir="auto">The model checkpoints will be saved to <code>/checkpoints/local</code>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Puzzles</h3><a id="user-content-puzzles" aria-label="Permalink: Puzzles" href="#puzzles"></a></p>
<p dir="auto">To evaluate a model's puzzle accuracy, run the following command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cd src
python puzzles.py --num_puzzles 10 --agent=local
cd .."><pre><span>cd</span> src
python puzzles.py --num_puzzles 10 --agent=local
<span>cd</span> ..</pre></div>
<p dir="auto"><code>puzzles.py</code> supports the following agents:</p>
<ul dir="auto">
<li>the locally trained model: <code>local</code></li>
<li>the pretrained models: <code>9M</code>, <code>136M</code>, and <code>270M</code></li>
<li>the Stockfish engines: <code>stockfish</code> and <code>stockfish_all_moves</code></li>
<li>the Lc0 engines: <code>leela_chess_zero_depth_1</code>, <code>leela_chess_zero_policy_net</code>, and <code>leela_chess_zero_400_sims</code></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Tournament Elo</h3><a id="user-content-tournament-elo" aria-label="Permalink: Tournament Elo" href="#tournament-elo"></a></p>
<p dir="auto">To compute the Elo for the different agents, run the tournament to play games between them and then compute the Elo for the PGN file generated by the tournament (more information on BayesElo can be found <a href="https://www.remi-coulom.fr/Bayesian-Elo/" rel="nofollow">here</a>):</p>
<div dir="auto" data-snippet-clipboard-copy-content="cd src
python tournament.py --num_games=200

cd ../BayesElo

./bayeselo
> ...
ResultSet>readpgn ../data/tournament.pgn
> N game(s) loaded, 0 game(s) with unknown result ignored.
ResultSet>elo
ResultSet-EloRating>mm
> 00:00:00,00
ResultSet-EloRating>exactdist
> 00:00:00,00
ResultSet-EloRating>ratings
> ...

cd .."><pre><span>cd</span> src
python tournament.py --num_games=200

<span>cd</span> ../BayesElo

./bayeselo
<span>&gt;</span> ...
ResultSet<span>&gt;</span>readpgn ../data/tournament.pgn
<span>&gt;</span> N game(s) loaded, 0 game(s) with unknown result ignored.
ResultSet<span>&gt;</span>elo
ResultSet-EloRating<span>&gt;</span>mm
<span>&gt;</span> 00:00:00,00
ResultSet-EloRating<span>&gt;</span>exactdist
<span>&gt;</span> 00:00:00,00
ResultSet-EloRating<span>&gt;</span>ratings
<span>&gt;</span> ...

<span>cd</span> ..</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Analysis Notebook</h3><a id="user-content-analysis-notebook" aria-label="Permalink: Analysis Notebook" href="#analysis-notebook"></a></p>
<p dir="auto">To investigate the model's behavior (e.g., to compute the win percentage for all legal moves), start a notebook server and then open <code>src/searchless_chess.ipynb</code> in your browser:</p>

<p dir="auto"><h2 tabindex="-1" dir="auto">Citing this work</h2><a id="user-content-citing-this-work" aria-label="Permalink: Citing this work" href="#citing-this-work"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="@article{ruoss2024grandmaster,
  author       = {Anian Ruoss and
                  Gr{\'{e}}goire Del{\'{e}}tang and
                  Sourabh Medapati and
                  Jordi Grau{-}Moya and
                  Li Kevin Wenliang and
                  Elliot Catt and
                  John Reid and
                  Tim Genewein},
  title        = {Grandmaster-Level Chess Without Search},
  journal      = {arXiv:2402.04494},
  year         = {2024}
}"><pre>@article{ruoss2024grandmaster,
  author       = {Anian Ruoss and
                  Gr{<span>\'</span>{e}}goire Del{<span>\'</span>{e}}tang and
                  Sourabh Medapati and
                  Jordi Grau{-}Moya and
                  Li Kevin Wenliang and
                  Elliot Catt and
                  John Reid and
                  Tim Genewein},
  title        = {Grandmaster-Level Chess Without Search},
  journal      = {arXiv:2402.04494},
  year         = {2024}
}</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">License and disclaimer</h2><a id="user-content-license-and-disclaimer" aria-label="Permalink: License and disclaimer" href="#license-and-disclaimer"></a></p>
<p dir="auto">Copyright 2024 DeepMind Technologies Limited</p>
<p dir="auto">All software is licensed under the Apache License, Version 2.0 (Apache 2.0);
you may not use this file except in compliance with the Apache 2.0 license.
You may obtain a copy of the Apache 2.0 license at:
<a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow">https://www.apache.org/licenses/LICENSE-2.0</a></p>
<p dir="auto">The model weights are licensed under Creative Commons Attribution 4.0 (CC-BY).
You may obtain a copy of the CC-BY license at:
<a href="https://creativecommons.org/licenses/by/4.0/legalcode" rel="nofollow">https://creativecommons.org/licenses/by/4.0/legalcode</a></p>
<p dir="auto">Some portions of the dataset are in the public domain by a
Creative Commons CC0 license from lichess.org.
The remainder of the dataset is licensed under
Creative Commons Attribution 4.0 (CC-BY).
You may obtain a copy of the CC-BY license at:
<a href="https://creativecommons.org/licenses/by/4.0/legalcode" rel="nofollow">https://creativecommons.org/licenses/by/4.0/legalcode</a>.</p>
<p dir="auto">Unless required by applicable law or agreed to in writing, software and
materials distributed under the Apache 2.0 or CC-BY licenses are
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
either express or implied. See the licenses for the specific language governing
permissions and limitations under those licenses.</p>
<p dir="auto">This is not an official Google product.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Is Matt Mullenweg defending WordPress or sabotaging it? (147 pts)]]></title>
            <link>https://torment-nexus.mathewingram.com/is-matt-mullenweg-defending-wordpress-or-sabotaging-it/</link>
            <guid>41872628</guid>
            <pubDate>Thu, 17 Oct 2024 18:53:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://torment-nexus.mathewingram.com/is-matt-mullenweg-defending-wordpress-or-sabotaging-it/">https://torment-nexus.mathewingram.com/is-matt-mullenweg-defending-wordpress-or-sabotaging-it/</a>, See on <a href="https://news.ycombinator.com/item?id=41872628">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

    <article>

        <header>

            

            <div>
                <p><a href="https://torment-nexus.mathewingram.com/author/mathew/">
                                <img src="https://www.gravatar.com/avatar/b1ccbb664fb8565fff99b983fd4bf75e?s=250&amp;r=x&amp;d=mp" alt="Mathew Ingram">
                            </a>
                </p>
                <div>
                    
                    <p><time datetime="2024-10-10">Oct 10, 2024</time>
                            <span><span>—</span> 8 min read</span>
                    </p>
                </div>
            </div>

                <figure>
        <img srcset="https://torment-nexus.mathewingram.com/content/images/size/w320/2024/10/image--3-.png 320w,
                    https://torment-nexus.mathewingram.com/content/images/size/w600/2024/10/image--3-.png 600w,
                    https://torment-nexus.mathewingram.com/content/images/size/w960/2024/10/image--3-.png 960w,
                    https://torment-nexus.mathewingram.com/content/images/size/w1200/2024/10/image--3-.png 1200w,
                    https://torment-nexus.mathewingram.com/content/images/size/w2000/2024/10/image--3-.png 2000w" sizes="(max-width: 1200px) 100vw, 1120px" src="https://torment-nexus.mathewingram.com/content/images/size/w1200/2024/10/image--3-.png" alt="Is Matt Mullenweg defending WordPress or sabotaging it?">
    </figure>

        </header>

        <section>
            <p>I realize that many people may not know or care who or what Matt Mullenweg and WordPress are, or why some people <a href="https://mathewingram.com/2ge?ref=torment-nexus.mathewingram.com" rel="noreferrer">are upset about them</a>, but after giving it a lot of thought (okay, about 10 minutes of thought) I decided to write about it anyway. I'm writing this newsletter in part for an audience — in other words, you the reader, and others like you — so when I'm deciding what to write about, I do try to take into account what you might be interested in reading about. But I'm also writing this newsletter for myself, and in this case what I care about trumps (sorry) what my readers may or may not be interested in. And I think this is about something important that goes beyond just WordPress.</p><p><em><strong>Update</strong>: After publication, Matt sent me a message on Twitter with a link to </em><a href="https://docs.google.com/document/d/1chvLtOjUrXOmeqcfVO_voDKq5GnWvIYpfOl_oxCsdlQ/?ref=torment-nexus.mathewingram.com" rel="noreferrer"><em>a Google doc</em></a><em> that lists some corrections and clarifications related to some of my comments here. My response is at the end of this post.</em></p><p>I care about Matt Mullenweg and WordPress for a number of reasons, some personal and some professional. On the personal side, I've been using WordPress to publish <a href="https://mathewingram.com/2gf?ref=torment-nexus.mathewingram.com" rel="noreferrer">my blog</a> for more than two decades now, and I've helped countless others with their WordPress-powered blogs and websites over the years. It has its quirks, but it is a great system. I've tried Drupal and Squarespace and literally everything else, and I keep coming back to WordPress. On the non-personal side, the Columbia Journalism Review — where I was the chief digital writer for about seven years, <a href="https://mathewingram.com/2gg?ref=torment-nexus.mathewingram.com" rel="noreferrer">until a month or so ago</a> — runs on WordPress, as do hundreds of thousands if not millions of other websites (WordPress likes to boast that it powers more than 40 percent of the sites on the web.)</p><p>Not long after I started using WordPress for my blog, which was in 2004 or so — after experimenting with Typepad and Blogger and other publishing systems — I cofounded a Web 2.0 conference in Toronto <a href="https://mathewingram.com/2gh?ref=torment-nexus.mathewingram.com" rel="noreferrer">called Mesh</a>, and one of the speakers we invited to the very first one was Matt Mullenweg, the creator of WordPress, who was then just 21 years old. I have a very clear memory of Matt sitting at a table with my friend Om Malik (whose Gigaom blog network I would later join) and others, while I tried to get a friend to stop using a local company's terrible blog-publishing software and switch to WordPress.</p><p>I had a huge amount of respect for Mullenweg then, and I still do now. He not only created a great publishing system but then gave it away as open-source software, although he also set up a for-profit company called Automattic that sold a commercial version of the software and blog-hosting services through <a href="https://mathewingram.com/2gi?ref=torment-nexus.mathewingram.com" rel="noreferrer">wordpress.com</a> (the nonprofit arm was housed at <a href="https://mathewingram.com/2gj?ref=torment-nexus.mathewingram.com" rel="noreferrer">wordpress.org</a>.) Despite that respect, or perhaps because of it, I am surprised — and more than a little disturbed — by what has been going on over the past few weeks. I have seen a side of Matt I was unaware of, and it's not pretty.</p><figure><img src="https://torment-nexus.mathewingram.com/content/images/2024/10/image-1.png" alt="" loading="lazy" width="1920" height="1271" srcset="https://torment-nexus.mathewingram.com/content/images/size/w600/2024/10/image-1.png 600w, https://torment-nexus.mathewingram.com/content/images/size/w1000/2024/10/image-1.png 1000w, https://torment-nexus.mathewingram.com/content/images/size/w1600/2024/10/image-1.png 1600w, https://torment-nexus.mathewingram.com/content/images/2024/10/image-1.png 1920w" sizes="(min-width: 720px) 720px"></figure><h2 id="pay-up-or-else">Pay up or else</h2><p>For many, the first rumblings of any discord in the WordPress ecosystem started with a speech Mullenweg <a href="https://mathewingram.com/2gk?ref=torment-nexus.mathewingram.com" rel="noreferrer">gave at WordCamp</a>, the annual get-together of WordPress users, on September 20th. After talking about the vision behind and benefits of open-source software, Mullenweg started talking about those who don't give back to the community and just take advantage of the open source ecosystem and how WordPress users should "vote with your dollars." It seemed — not just to me, but to others who were in attendance — a little out of step with the rest of his uplifting comments.</p><p>The same day, Mullenweg had expanded on those thoughts in a blog post on the wordpress.org website, in which he named WP Engine — a large commercial website-hosting company — <a href="https://mathewingram.com/2gl?ref=torment-nexus.mathewingram.com" rel="noreferrer">as the target of his ire</a> and called them a "cancer to WordPress." WP Engine, he said, had not contributed much to the open-source community, and had also been misusing the WordPress and related trademarks for years by not licensing them. After his remarks, WP Engine sent a <a href="https://mathewingram.com/2gn?ref=torment-nexus.mathewingram.com" rel="noreferrer">cease-and-desist</a> letter to Automattic and Mullenweg, who <a href="https://mathewingram.com/2gm?ref=torment-nexus.mathewingram.com" rel="noreferrer">sent</a> <a href="https://wpengine.com/wp-content/uploads/2024/09/Cease-and-Desist-Letter-to-Automattic-and-Request-to-Preserve-Documents-Sent.pdf?ref=torment-nexus.mathewingram.com" rel="noreferrer">one</a> back — and then WordPress <a href="https://mathewingram.com/2go?ref=torment-nexus.mathewingram.com" rel="noreferrer">shut off</a> WP Engine's ability to access the open-source project's database, meaning anyone using WP Engine would be unable to update plugins. </p><p>So far, this sounds like a classic commercial dispute, with a big company — WP Engine is controlled by Silver Lake, a private equity fund with $100 billion in assets — taking advantage of a small nonprofit, and Mullenweg playing the role of the plucky little founder protecting his baby from being taken advantage of. But the reality is somewhat different. For one thing, WP Engine competes with WordPress.com, which is owned by Automattic — <a href="https://mathewingram.com/2gp?ref=torment-nexus.mathewingram.com" rel="noreferrer">a $7.5-billion company</a> that has given Matt <a href="https://mathewingram.com/2gq?ref=torment-nexus.mathewingram.com" rel="noreferrer">a net worth of</a> about $400 million. Also, the marks that WP Engine was accused of misusing are held by the nonprofit, but Automattic has an exclusive license to use them, which seemed to come as a surprise to many.</p><p><strong>Update</strong>: I think it's important to note that WP Engine has been using WordPress trademarks for over a decade now, and neither Matt nor Automattic nor the nonprofit ever mentioned that they were infringing on them until two weeks ago, at least not publicly. Automattic also invested in WP Engine at one point <a href="https://mathewingram.com/2hw?ref=torment-nexus.mathewingram.com" rel="noreferrer">not that long ago</a>, and Matt <a href="https://mathewingram.com/2hv?ref=torment-nexus.mathewingram.com" rel="noreferrer">spoke at a conference</a> that WP Engine put on last year, and talked about how WP Engine was the kind of corporate partner that others should emulate. So what changed? Is it just that Automattic is not producing enough revenue to <a href="https://mathewingram.com/2hu?ref=torment-nexus.mathewingram.com" rel="noreferrer">pacify its private equity</a> shareholders, who have funded the company through a number of financing rounds?</p><p>It gets worse, from my perspective at least. Wordpress.org, which is the online home of the nonprofit open-source part of the ecosystem, and through which all the licensing and other activities flow, is owned and controlled by Mullenweg — not through Automattic, but by him personally. "Wordpress.org belongs to me," as he <a href="https://mathewingram.com/2gr?ref=torment-nexus.mathewingram.com" rel="noreferrer">put it in an interview</a>. That probably made sense when Matt first created them as a 19-year-old software developer, but now it looks like the CEO of a multibilion-dollar corporation is using his control of a theoretically open-source foundation to extort money from a competitor.</p><p>Is extort too strong a word? Perhaps. But in <a href="https://mathewingram.com/2gs?ref=torment-nexus.mathewingram.com" rel="noreferrer">the lawsuit</a> that WP Engine has filed against Automattic and Mullenweg there are copies of text messages that Matt sent to the CEO of WP Engine just before his speech at WordCamp, offering to alter his talk to something more innocuous if WP Engine paid Automattic 8 percent of its revenues annually, which would <a href="https://mathewingram.com/2gt?ref=torment-nexus.mathewingram.com" rel="noreferrer">amount to about</a> $32 million (Automattic has published a memorandum of understanding that said <a href="https://mathewingram.com/2gu?ref=torment-nexus.mathewingram.com" rel="noreferrer">paying 8 percent</a> of its revenues to hire staff to work on WordPress would also be acceptable, although Mullenweg says that deal is now <a href="https://mathewingram.com/2gv?ref=torment-nexus.mathewingram.com" rel="noreferrer">off the table</a>.)</p><figure><img src="https://torment-nexus.mathewingram.com/content/images/2024/10/image-2.png" alt="" loading="lazy" width="1600" height="1067" srcset="https://torment-nexus.mathewingram.com/content/images/size/w600/2024/10/image-2.png 600w, https://torment-nexus.mathewingram.com/content/images/size/w1000/2024/10/image-2.png 1000w, https://torment-nexus.mathewingram.com/content/images/2024/10/image-2.png 1600w" sizes="(min-width: 720px) 720px"></figure><h2 id="a-godawful-mess">A godawful mess</h2><p>There are other somewhat incriminating-sounding messages in the WP Engine <a href="https://mathewingram.com/2gs?ref=torment-nexus.mathewingram.com" rel="noreferrer">statement of claim</a>: in one, Mullenweg threatens to tell the media that the CEO of WP Engine talked to Matt about quitting WP Engine to join Automattic (something WP Engine lawsuit says is untrue.) Mullenweg has also posted about the situation on <a href="https://mathewingram.com/2gw?ref=torment-nexus.mathewingram.com" rel="noreferrer">a public Hacker News forum</a>, which seems, er.... unwise at best (at one point, a poster who says he is a lawyer actually advises Mullenweg to <a href="https://mathewingram.com/2gx?ref=torment-nexus.mathewingram.com" rel="noreferrer">stop talking</a> so he doesn't further incriminate himself, but he continues.) And a former Automattic staffer who was critical of Mullenweg's actions in a Medium post says that the Automattic CEO threatened <a href="https://mathewingram.com/2gy?ref=torment-nexus.mathewingram.com" rel="noreferrer">her with legal action</a>.</p><p><strong>Update</strong>: There have been more developments since I wrote this that raise questions about Matt's motivation. Among them are the fact that WordPress (i.e. Matt) <a href="https://mathewingram.com/2hx?ref=torment-nexus.mathewingram.com" rel="noreferrer">seized control of</a> a popular plugin developed and maintained on behalf of WP Engine, which even some diehard WordPress supporters found difficult to justify. WordPress said it was a security vulnerability that hadn't been patched, and that the software's terms of use allows it to take over plugins that aren't being maintained, but others pointed out that the <a href="https://github.com/wordpress/wporg-plugin-guidelines/blob/trunk/guideline-18.md?ref=torment-nexus.mathewingram.com" rel="noreferrer">spirit of the terms</a> suggests that WordPress is only supposed to do this in extreme situations.</p><p>Matt also wrote an incredibly mean-spirited post after David Heinemeir Hansson of 37signals <a href="https://mathewingram.com/2hy?ref=torment-nexus.mathewingram.com" rel="noreferrer">criticized his actions</a> related to WP Engine, saying Matt was "doing open source dirty." In Matt's original post, he made fun of how little money Hansson and his partners have made from their software (and also slipped in a piece of misdirection by saying that the WordPress foundation controls the trademarks, which is technically true, but as I described above, Matt controls the commercial use of those marks.) Matt later took down his post — which you can <a href="https://mathewingram.com/2hz?ref=torment-nexus.mathewingram.com" rel="noreferrer">still see via</a> archive.is — and said he got carried away because "vicious, personal, hateful words poisoned my brain."</p><p>It's pretty clear that Matt sees what he is doing as protecting WordPress, and forcing a no-good corporation to cough up some dough after years of taking advantage of the community (he <a href="https://mathewingram.com/2gz?ref=torment-nexus.mathewingram.com" rel="noreferrer">says he has been</a> trying to negotiate with WP Engine for more than a year now, while WP Engine says it <a href="https://mathewingram.com/2h0?ref=torment-nexus.mathewingram.com" rel="noreferrer">gives back</a> to WordPress in a number of ways.) To some observers like me, however — and to <a href="https://mathewingram.com/2h1?ref=torment-nexus.mathewingram.com" rel="noreferrer">some</a> <a href="https://mathewingram.com/2h2?ref=torment-nexus.mathewingram.com" rel="noreferrer">other</a> <a href="https://mathewingram.com/2h3?ref=torment-nexus.mathewingram.com" rel="noreferrer">longtime</a> <a href="https://mathewingram.com/2h4?ref=torment-nexus.mathewingram.com" rel="noreferrer">members</a> of the <a href="https://mathewingram.com/2h5?ref=torment-nexus.mathewingram.com" rel="noreferrer">WordPress</a> <a href="https://mathewingram.com/2h6?ref=torment-nexus.mathewingram.com" rel="noreferrer">ecosystem</a> — it looks like Matt has dragged the WordPress community into a legal mess with a variety of unforeseen and potentially serious <a href="https://mathewingram.com/2h7?ref=torment-nexus.mathewingram.com" rel="noreferrer">consequences</a>. Did he ask any members of the community before he did that? Not as far as I know.</p><p>Also, there is the unfortunate appearance of a significant conflict of interest — Matt is not just the plucky founder of a nonprofit open-source project, he's a wealthy CEO of a for-profit corporation that is <a href="https://mathewingram.com/2h8?ref=torment-nexus.mathewingram.com" rel="noreferrer">attacking a competitor</a>, and using his status as the founder of the nonprofit to extract money from that competitor. It's true that the money he was trying to get would have benefitted the open-source project, but convincing WordPress users to stop using WP Engine would also benefit Automattic and Mullenweg personally. According to some programmers, anyone who wants to contribute to the open-source project now has to <a href="https://mathewingram.com/2h9?ref=torment-nexus.mathewingram.com" rel="noreferrer">check a box saying</a> they aren't affiliated with WP Engine.</p><p>In a word, it's <a href="https://mathewingram.com/2ha?ref=torment-nexus.mathewingram.com" rel="noreferrer">a godawful mess</a>. And every user of WordPress has effectively been dragged into it, whether they wanted to be part of it or not. Instead of looking like a hero who is protecting a community, Matt looks like a multimillionaire corporate executive who has come to see a nonprofit, open-source community as an extension of himself, with his own needs or desires as the only criteria for taking action. It's not good for WordPress <a href="https://mathewingram.com/2hb?ref=torment-nexus.mathewingram.com" rel="noreferrer">or the open-source community</a> and ecosystem as a whole, and it is unlikely to end well.</p><p><em><strong>Addendum</strong>: I don't want to make light of what Matt or his team put in the </em><a href="https://docs.google.com/document/d/1chvLtOjUrXOmeqcfVO_voDKq5GnWvIYpfOl_oxCsdlQ/?ref=torment-nexus.mathewingram.com" rel="noreferrer"><em>Google doc</em></a><em> he sent me (which you are free to read) but my response was: "forgive me if I feel that most, if not all, of these [items of clarification] are semantic differences and that you have completely missed the larger point that I (and others who care about WordPress) are trying to make about your behavior." To take just one example, I said that Matt was caught in a conflict of interest and he (or his legal team) responded that "Matt’s dual roles are aligned to ensure Automattic's success enhances WordPress as a platform." Which is not really a correction at all, but appears to be mostly Matt's way of saying "Yes, I have a conflict, but it's for the best."</em></p><p><em>Got any thoughts or comments? Feel free to either leave them here, or post them on </em><a href="https://tormentnexus.substack.com/?ref=torment-nexus.mathewingram.com"><em>Substack</em></a><em> or on my </em><a href="https://mathewingram.com/work?ref=torment-nexus.mathewingram.com"><em>website</em></a><em>, or you can also reach me on </em><a href="https://x.com/mathewi?ref=torment-nexus.mathewingram.com"><em>Twitter</em></a><em>, </em><a href="https://www.threads.net/@mathewi?ref=torment-nexus.mathewingram.com"><em>Threads</em></a><em>, </em><a href="https://bsky.app/profile/mathewi.bsky.social?ref=torment-nexus.mathewingram.com"><em>BlueSky</em></a><em> or </em><a href="https://torment-nexus.mathewingram.com/welcome-to-the-torment-nexus/"><em>Mastodon</em></a><em>. And thanks for being a reader.</em></p>
        </section>

    </article>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Employees Describe an Environment of Paranoia and Fear Inside Automattic (189 pts)]]></title>
            <link>https://www.404media.co/automattic-buyout-offer-wordpress-matt-mullenweg/</link>
            <guid>41872046</guid>
            <pubDate>Thu, 17 Oct 2024 18:04:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.404media.co/automattic-buyout-offer-wordpress-matt-mullenweg/">https://www.404media.co/automattic-buyout-offer-wordpress-matt-mullenweg/</a>, See on <a href="https://news.ycombinator.com/item?id=41872046">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <article>
          <div>
              
<!--kg-card-begin: html-->

<!--kg-card-end: html-->
<p>After an exodus of employees at Automattic who disagreed with CEO Matt Mullenweg’s recently divisive legal battle with WP Engine, he’s upped the ante with another buyout offer—and a threat that employees speaking to the press should “exit gracefully, or be fired tomorrow with no severance.”&nbsp;</p><p>Earlier this month, Mullenweg posed an “Alignment Offer” to all of his employees: Stand with him through a messy legal drama that’s still unfolding, or leave.&nbsp;</p><p>“It became clear a good chunk of my Automattic colleagues disagreed with me and our actions,” <a href="https://ma.tt/2024/10/alignment/?ref=404media.co"><u>he wrote on his personal blog</u></a> on Oct. 3, referring to <a href="https://www.404media.co/wordpress-checkbox-login-wp-engine/"><u>the ongoing dispute between himself and website hosting platform WP Engine</u></a>, which Mullenweg called a “cancer to WordPress” and accusing WP Engine of “strip-mining the WordPress ecosystem. In the last month, he and WP Engine have volleyed cease and desist letters, and WP Engine is now suing Automattic, accusing Mullenweg of extortion and abuse of power.</p><div><p>💡</p><p><b><strong>Do you know anything else about the situation inside Automattic, as a former or current employee? I would love to hear from you. Using a non-work device, you can message me securely on Signal at sam.404. Otherwise, send me an email at sam@404media.co.</strong></b></p></div><p>In the “Alignment Offer,” Mullenweg offered Automattic employees six months of pay or $30,000, whichever was higher, with the stipulation that they would lose access to their work logins that same evening and would not be eligible for rehire.</p><p>One hundred and fifty-nine people took the offer and left. “However now, I feel much lighter,” Mullenweg wrote in his blog.&nbsp;</p><p>But many stayed at Automattic even though they didn't agree with Mullenweg’s actions, telling 404 Media they remained due to financial strain or the challenging job market. Several employees who remained at the company describe a culture of paranoia and fear for those still there.&nbsp;</p><p>“Overall, the environment is now full of people who unequivocally support Matt's actions, and people who couldn't leave because of financial reasons (and those are mostly silent),” one Automattic employee told me.&nbsp;</p><p>The current and former Automattic employees I spoke to for this article did so under the condition of anonymity, out of concerns about retaliation from Mullenweg.&nbsp;</p><p>“I'm certain that Matt hasn't eliminated all dissenters, because I'm still there, but I expect that within the next six to twelve months, everyone who didn't leave but wasn't ‘aligned’ will have found a new job and left on their own terms,” another current employee told me. “My personal morale has never been lower at this job, and I know that I'm not alone.”</p><p>Mullenweg himself, in internal screenshots viewed by 404 Media, acknowledged that his first “Alignment Offer” did not make everyone who disagreed with him leave the company.&nbsp;</p><p>On Wednesday Mullenweg posted another ultimatum in Automattic’s Slack: a new offer that would include nine months of compensation (up from the previous offer of six months). Mullenweg wrote:&nbsp;</p><blockquote>“New alignment offer: I guess some people were sad they missed the last window. Some have been leaking to the press and ex-employees. That's water under the bridge. Maybe the last offer needed to be higher. People have said they want a new window, so this is my attempt. Here's a new one: You have until 00:00 UTC Oct 17 (-4 hours) to DM me the words, ‘I resign and would like to take the 9-month buy-out offer’ You don't have to say any reason, or anything else. I will reply ‘Thank you.’ Automattic will accept your resignation, you can keep you <em>[sic]</em> office stuff and work laptop; you will lose access to Automattic and Wong (no slack, user accounts, etc). HR will be in touch to wrap up details in the coming days, including your 9 months of compensation, they have a lot on their plates right now. You have my word this deal will be honored. We will try to keep this quiet, so it won't be used against us, but I still wanted to give Automatticians another window.”</blockquote><p>“We have technical means to identify the leaker as well, that I obviously can't disclose,” he continued. “So this is their opportunity to exit gracefully, or be fired tomorrow with no severance and probably a big legal case for violating confidentiality agreement.”&nbsp;</p><p>Mullenweg and Automattic did not respond to requests for comment.&nbsp;</p><p>This is the latest in what has been a tense few months at Automattic.&nbsp;</p><p>“Regarding escalations, to me, the most upsetting thing has been the way he's treating current and former employees and WP community members,” one former employee who recently left the company after several years told me. “He clearly has no clue what people care about or how the community has contributed to the success of WordPress. It very clearly shows how out of touch he is with everyday reality. One, sharing pictures of him being on safari while all this shit is going down, as if people would think that was cool. Only rich tech bros would think that.” (Mullenweg posted photos from a trip on his <a href="https://ma.tt/2024/10/rhino-dehorning/?ref=404media.co"><u>personal blog</u></a> and <a href="https://www.threads.net/@photomatt/post/DA0WWnTsESD?ref=404media.co"><u>social media posts</u></a> last week.)&nbsp;</p><figure><a href="https://www.404media.co/wordpress-checkbox-login-wp-engine/"><div><p>‘The Community Is In Chaos:’ WordPress.org Now Requires You Denounce Affiliation With WP Engine To Log In</p><p>WordPress.org users are forced to confirm they are not “affiliated with WP Engine in any way, financially or otherwise” before registering a new account or logging in.</p><p><img src="https://www.404media.co/content/images/size/w256h256/format/png/2023/08/favicon-3.svg" alt=""><span>404 Media</span><span>Samantha Cole</span></p></div><p><img src="https://www.404media.co/content/images/size/w1200/2024/10/wp--1-.png" alt="" onerror="this.style.display = 'none'"></p></a></figure><p>In July, before the latest WP Engine blowup, an Automattic employee wrote in Slack that they received a direct message from Mullenweg sending them an identification code for Blind, an anonymous workplace discussion platform, which was required to complete registration on the site. Blind requires employees to use their official workplace emails to sign up, as a way to authenticate that users actually work for the companies they are discussing. Mullenweg said on Slack that emails sent from Blind’s platform to employees’ email addresses were being forwarded to him. If employees wanted to log in or sign up for Blind, they’d need to ask Mullenweg for the two-factor identification code. The implication was that Automattic—and Mullenweg—could see who was trying to sign up for Blind, which is often a place where people anonymously vent or share criticism about their workplace.&nbsp;&nbsp;</p><p>“We were unaware that Matt redirected sign-up emails until current Automattic employees contacted our support team,” a spokesperson for Blind told me, adding that they’d “never seen a CEO or executive try to limit their employees from signing up for Blind by redirecting emails.”</p><p>Mullenweg didn’t block emails from the @teamblind.com domain, Blind said. According to Slack messages viewed by 404 Media, instead, he redirected those emails to himself. </p><p>“We are disappointed when we hear employers or executives try to limit access to Blind. Some of the most commonly discussed topics on Blind are protected speech in the U.S.—pay, job terminations, critiques of workplace conditions—which we believe workers should be free to access and discuss. Blind's mission is to bring transparency to the workplace, as we believe it can inspire meaningful change,” the spokesperson for Blind said. “Employers' attempts to block Blind are misguided and often have the opposite intended effect. Generally, we have seen more employees register and use Blind when their company tries to restrict access.”&nbsp;</p><blockquote>“The escalation since then just confirmed I made the right choice." </blockquote><p>One Automattic employee told me that Mullenweg’s interception of Blind emails was the thing that made them start looking for a new job. “For Matt to do that, without prior announcement, was equivalent to spying on his employees. And for him to think it's ok to tell people to message him for their verification code is ridiculous—I've never questioned an employer's judgment as much as I did in that moment (although it has happened many times since),” they said. “Clearly, Blind is designed to allow employee discussion free from employer interference, and he was trying to prevent that in the most obvious way possible.”&nbsp;</p><p>Instead of Blind, employees have been posting on Anonymattic, an anonymous message board set up on WordPress’s own systems that allows all employees to post using one login.&nbsp;</p><p>“A common theme for posts on Anonymattic is ‘Any time I try to get work done, some new drama comes up and I get distracted.’ I know that's true for me,” an employee told me.&nbsp;</p><p>“There is a vocal group of sycophants who are cheering on Matt's actions via Anonymattic,” they said, “drawing favorable comparisons to how Elon Musk and Donald Trump operate. Their morale seems high, but I can't relate.” Screenshots viewed by 404 Media show some staff having changed their Slack usernames to include “[STAYING]” to signal their support of Mullenweg and intention to remain at the company.&nbsp;</p><p>Anonymattic was “conveniently closed down around Covid with the excuse of avoiding toxic discussions,” an employee told me. “I say conveniently because people would post their opinions and complaints to leadership that were sometimes uncomfortable. That’s when the Blind migration happened.” They said they believe Mullenweg’s interference with Blind emails was “an attempt to stop employees from joining Blind in some kind of intimidating fashion (are they collecting who is joining Blind? With what intentions?)” Anonymattic was reopened around that time, they said.</p><p>“At the end, even if anonymous, Automattic can delete posts there and not in Blind,” they said.</p><p>Last week, in response to someone criticizing his decision to add a checkbox to the WordPress.org login that forced users to denounce affiliation with WP Engine, Mullenweg posted in the WordPress contributor community Slack, “Wait until you see what we have in store for Thursday! And Friday. And Saturday. And Sunday. And Monday.” Several people posted vomiting and face-palm emojis in response to that message.</p><p>A recently-departed employee told me that the WP Engine legal drama wasn’t their final straw. “But in hindsight, it should have been,” they said. “The escalation since then just confirmed I made the right choice. At the time, I thought Matt might have a point about the trademarks (something I know little about), but he did say at the time he was going to treat this like a war and continue escalating it, because the truth was on his side. I guess we’re now seeing what that really meant."&nbsp;</p>
                    <div>
    <div>
      <p>About the author</p>
      <p>Sam Cole is writing from the far reaches of the internet, about sexuality, the adult industry, online culture, and AI. She's the author of How Sex Changed the Internet and the Internet Changed Sex.</p>
      
    </div>
      <p><img data-src="/content/images/2023/08/404-sam-10--1-.jpg" alt="Samantha Cole" src="https://www.404media.co/content/images/2023/08/404-sam-10--1-.jpg">  
      </p>
  </div>
          </div>
        </article>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Qualcomm cancels Snapdragon Dev Kit, refunds all orders (137 pts)]]></title>
            <link>https://www.jeffgeerling.com/blog/2024/qualcomm-cancels-snapdragon-dev-kit-refunds-all-orders</link>
            <guid>41871899</guid>
            <pubDate>Thu, 17 Oct 2024 17:50:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.jeffgeerling.com/blog/2024/qualcomm-cancels-snapdragon-dev-kit-refunds-all-orders">https://www.jeffgeerling.com/blog/2024/qualcomm-cancels-snapdragon-dev-kit-refunds-all-orders</a>, See on <a href="https://news.ycombinator.com/item?id=41871899">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><img width="700" height="auto" src="https://www.jeffgeerling.com/sites/default/files/images/snapdragon-developer-kit-for-windows-box.jpeg" alt="Snapdragon Developer Kit for Windows"></p>

<p>This afternoon I received the following email from Arrow, regarding the <a href="https://www.arrow.com/en/products/c8380-12c-mp-32g/thundercomm">Snapdragon Developer Kit for Windows</a>:</p>

<blockquote>
  <p>Dear Valued Customer,</p>
  
  <p>Please see this important message from Qualcomm:</p>
  
  <p>”At Qualcomm, we are dedicated to pioneering leading technology and delivering premium experiences to our valued customers. The launch of 30+ Snapdragon X-series powered PC's is a testament to our ability to deliver leading technology and the PC industry's desire to move to our next-generation technology. However, the Developer Kit product comprehensively has not met our usual standards of excellence and so we are reaching out to let you know that unfortunately we have made the decision to pause this product and the support of it, indefinitely.</p>
  
  <p>Working with the developer community is a priority for Qualcomm. If you want to learn more about Windows on Snapdragon, please engage with us on Discord or head to our developer portal on Qualcomm.com. If you are ready to build your next gen AI PC application, visit the Qualcomm Device Cloud (QDC) today.</p>
  
  <p>Qualcomm has authorized a refund for any charges that have been made by Arrow.“</p>
  
  <p>Based upon the above, we are working to provide a full refund for any charges to your account for your purchase. You should receive this credit/refund within 10 business days. It is not necessary to return any material, if received. Unfortunately, any outstanding orders will be cancelled.</p>
  
  <p>Thank you for your understanding,
  Arrow</p>
</blockquote>

<p>It sounds like they are cancelling all existing orders, but I'm not sure if those who <em>did</em> receive units will also be refunded. I'll update this post if I see a refund for it.</p>

<h2>Qualcomm's Failure to Launch</h2>

<p>I've <a href="https://www.jeffgeerling.com/blog/2024/where-qualcomms-snapdragon-x-elite-dev-kit">covered the long and drawn out struggle Qualcomm had shipping their Snapdragon X Elite Developer Kit</a> already.</p>

<div>
<p><iframe src="https://www.youtube.com/embed/gpFSCACqDqQ" frameborder="0" allowfullscreen=""></iframe></p>
</div>

<p>And after months of waiting—Arrow's web store originally said it would 'ship tomorrow' in July—I received my unit in late September. I <a href="https://www.jeffgeerling.com/blog/2024/qualcomm-snapdragon-dev-kit-windows-teardown-2024">did a teardown</a>, then got to work on a <a href="https://www.jeffgeerling.com/blog/2024/snapdragon-dev-kit-windows-fastest-x-elite-tested">full review of the Dev Kit for Windows</a>.</p>

<p>My conclusion in that review was:</p>

<blockquote>
  <p>The Snapdragon Dev Kit is a missed opportunity.</p>
</blockquote>

<p>Indeed. But hopefully Microsoft and Qualcomm can figure out a way to make a compelling small desktop offering with Snapdragon X—something not so strongly associated with the failed CoPilot+ launch.</p>

<p>If it happens, it sounds like Qualcomm won't be making the device, relying instead on an OEM partner.</p>

<p>I feel sorry for the hardware team at Qualcomm who worked on this project, because it had a lot of promise, just too many roadblocks to make it successful. Windows on Arm could certainly use more developer focus, and a great developer workstation (which is more readily available) would help with that.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Industrious Dice (122 pts)]]></title>
            <link>https://mathenchant.wordpress.com/2024/10/17/industrious-dice/</link>
            <guid>41871729</guid>
            <pubDate>Thu, 17 Oct 2024 17:32:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mathenchant.wordpress.com/2024/10/17/industrious-dice/">https://mathenchant.wordpress.com/2024/10/17/industrious-dice/</a>, See on <a href="https://news.ycombinator.com/item?id=41871729">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			
<p>I’m a professional mathematician. That means somebody pays me to do math. I’m also a recreational mathematician. That means you might have to pay me to get me to stop.</p>



<p>Wearing my recreational mathematician hat – quite literally, as you’ll see – I gave a talk earlier this year on some newfangled dice that do the same sorts of jobs as old-fashioned dice but with fewer pips (“pips” being the technical name for all those little black dots).</p>



<figure><div>
<p><iframe title="Jim Propp - Industrious Dice, or, Pip-Pip Hooray! - G4G15 February 2024" width="625" height="352" src="https://www.youtube.com/embed/dLFr1SqvkQQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe></p>
</div><figcaption>My G4G15 talk: “Industrious Dice, or Pip-Pip Hooray!”</figcaption></figure>



<p>Fewer pips? Why would anyone on earth care about that? Dice manufacturers certainly don’t; drilling the pips and coloring them in isn’t a major expense. But I’m not an applied mathematician. I’m a pure/recreational mathematician, and I’m allowed to care about anything I choose to. When I choose well, I find something new and interesting.</p>



<p><strong>FEWER PIPS</strong></p>



<p>The standard die (called a d6 in the gaming community) has one job: to generate a random number between 1 and 6. The d6 accomplishes this job in a straightforward fashion by having 1, 2, 3, 4, 5, and 6 pips on its six faces, using a total of 1 + 2 + 3 + 4 + 5 + 6 = 21 pips; because of the cube’s symmetries, each of the six faces has an equal chance of being the face that’s facing up when the die stops rolling.</p>



<p>But here’s a top view of a die that gets the same job done with far fewer pips:</p>


<div>
<figure><a href="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-1.jpg"><img data-attachment-id="6758" data-permalink="https://mathenchant.wordpress.com/2024/10/17/industrious-dice/d6-dodecahedron-1/" data-orig-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-1.jpg" data-orig-size="1166,1175" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;1.8&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;iPhone 8&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1703934205&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;3.99&quot;,&quot;iso&quot;:&quot;40&quot;,&quot;shutter_speed&quot;:&quot;0.066666666666667&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="d6-dodecahedron-1" data-image-description="" data-image-caption="" data-medium-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-1.jpg?w=298" data-large-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-1.jpg?w=625" tabindex="0" role="button" width="298" height="300" src="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-1.jpg?w=298" alt=""></a><figcaption>An industrious dodecahedron</figcaption></figure></div>


<p>This die is not a 6-sided solid but a 12-sided solid called a dodecahedron. To use this newfangled die, throw it, wait till it stops rolling, and count not just the pips on the top face but also the pips on the five surrounding faces; that is, count the pips on the six faces that are visible from directly above the die. For instance, in the picture above we see six pips, so the throw would have value 6. The pips are arranged in such a fashion that the value of a throw is equally likely to be 1, 2, 3, 4, 5, or 6.</p>



<p>When you roll such a die repeatedly, each face of the dodecahedron is an upper face one-half of the time. In contrast, when you roll a cubical die repeatedly, each face of the cube is the top face only one-sixth of the time. So the dodecahedral die is (from a pip-use perspective) three times as efficient as the cubical die (one-half is three times bigger than one-sixth), and it correspondingly does its job with only one-third as many pips: 7 rather than 21.</p>



<p>To design such a die, I had to solve a puzzle: Put non-negative integers into the twelve regions in the diagram below so that the twelve sums you get by adding each number to its five neighbors are 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6 in some order. (See Endnote #1 for one solution.) All but one of the regions are pentagons; the last one (the outer region) looks like a square with a pentagonal hole in it. To get you started, I’ve put the number 0 into the outer region.</p>


<div>
<figure><a href="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-puzzle.jpg"><img data-attachment-id="6760" data-permalink="https://mathenchant.wordpress.com/2024/10/17/industrious-dice/d6-dodecahedron-puzzle/" data-orig-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-puzzle.jpg" data-orig-size="811,766" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="d6-dodecahedron-puzzle" data-image-description="" data-image-caption="" data-medium-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-puzzle.jpg?w=300" data-large-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-puzzle.jpg?w=625" tabindex="0" role="button" width="300" height="283" src="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-puzzle.jpg?w=300" alt=""></a><figcaption>A fill-in-the-numbers puzzle</figcaption></figure></div>


<p><strong>FEWER DIMENSIONS</strong></p>



<p>The link between my die-design problem and my fill-in-the-numbers puzzle goes by way of a form of polyhedral cartography pioneered by the 19th century German mathematician Victor Schlegel. He was a contemporary of the more widely-known mathematician and writer Charles Howard Hinton who coined the now-famous word “tesseract” to describe a four-dimensional analogue of the cube. Hinton and Schlegel worked in an era when the geometry of higher-dimensional space had seized the imaginations of mathematicians and non-mathematicians alike. Schlegel’s great contribution was finding a way to subdue&nbsp;<em>n</em>-dimensional hypersolids (or maybe just tame them a wee bit) by projecting them down into (<em>n</em>−1)-dimensional space. Such diagrams can help us navigate higher-dimensional objects. We’ll focus on the case&nbsp;<em>n</em>&nbsp;= 3 and see how Schlegel would have had us map the faces of the 3-dimensional dodecahedron in the 2-dimensional plane.</p>



<p>To picture Schlegel’s trick, imagine that it’s night-time in a modernistic children’s playground that features a dodecahedral climbing structure (something Hinton’s son Sebastian would have probably liked since Sebastian Hinton is now remembered as the inventor of the jungle gym). It’s not a solid dodecahedron but an airy assemblage of struts (thirty, if you care to count them). Imagine that you climb on top of the dodecahedron and shine a flashlight down on the structure beneath you, from a point just above the middle of the structure’s pentagonal top face; the shadows cast on the ground below form the Schlegel diagram.</p>


<div>
<figure><a href="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/schlegel.jpg"><img data-attachment-id="6763" data-permalink="https://mathenchant.wordpress.com/2024/10/17/industrious-dice/schlegel/" data-orig-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/schlegel.jpg" data-orig-size="2394,2283" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="schlegel" data-image-description="" data-image-caption="" data-medium-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/schlegel.jpg?w=300" data-large-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/schlegel.jpg?w=625" tabindex="0" role="button" width="300" height="286" src="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/schlegel.jpg?w=300" alt=""></a><figcaption>A Schlegel diagram for a dodecahedron</figcaption></figure></div>


<p>(Here I’ve used thickness of the line segments to correspond to how close the respective struts are from the viewer’s perspective, or relatedly, how wide the shadows are.)</p>



<p><strong>FINDING A STORY TO TELL</strong></p>



<p>This dodecahedral die is an outgrowth of the Muñiz-Propp die I mentioned in my earlier essay <a href="https://mathenchant.wordpress.com/2022/08/17/let-x-equal-x/" target="_blank" rel="noreferrer noopener">“Let&nbsp;<em>x</em>&nbsp;equal&nbsp;<em>x</em>“</a>. I decided a year ago that I wanted to give a talk on these two dice at an event held this past February called the <a href="https://www.gathering4gardner.org/" target="_blank" rel="noreferrer noopener">Gathering for Gardner</a>; it’s a biennial conclave of mathematicians, magicians, and other folks who admire the work of <a href="https://en.wikipedia.org/wiki/Martin_Gardner" target="_blank" rel="noreferrer noopener">Martin Gardner</a>, and since both mathematicians and magicians like dice, the topic seemed like a natural fit.</p>



<p>But then I thought, wouldn’t it be even better to do something similar involving dice with fifteen sides, since the 2024 meeting was the fifteenth of its kind?</p>



<p>It isn’t the first time I’ve given a talk at a Gathering for Gardner that saluted the ordinal number of that particular Gathering; for instance, I prepared a talk for the fourteenth Gathering based on Stan Wagon’s terrific article <a href="https://www.latroika.com/mathoman/exos/wagon-integer-rectangle.pdf" target="_blank" rel="noreferrer noopener">“Fourteen Proofs of a Result About Tiling a Rectangle”</a>. That particular Gathering had to be rescheduled because of the COVID-19 pandemic, and I ended up not presenting a talk at the rescheduled (and virtual) fourteenth Gathering for Gardner, but I still wrote a Mathematical Enchantments essay based on the talk I’d meant to give: <a href="https://mathenchant.wordpress.com/2020/01/24/what-proof-is-best/" target="_blank" rel="noreferrer noopener">“What Proof Is Best?”</a></p>



<p>Unfortunately, there’s a problem with fifteen-sided dice. If you go to the web in search of a “d15” die, you’ll find they all come with the warning “This die is not isohedral” (or words to that effect). Isohedral polyhedra are polyhedra with the pleasant property that for any two faces&nbsp;<em>F</em>&nbsp;and&nbsp;<em>G</em>&nbsp;of the polyhedron, there’s a symmetry of the polyhedron that carries&nbsp;<em>F</em>&nbsp;to&nbsp;<em>G</em>. Cubes are isohedral, and so are dodecahedra. Isohedral convex polyhedra make excellent dice because they’re just as likely to land on any face as on any other. But there are no&nbsp;<em>n</em>-sided isohedral convex polyhedra when&nbsp;<em>n</em>&nbsp;is an odd number (like the number 15).</p>



<p>On the other hand, there are 30-sided isohedral convex polyhedra, and indeed one of them – the triacontahedron – is the basis of the standard d30 die. Since 30 is twice 15, it’d be easy to use such a die to generate a random number between 1 and 15: have two faces showing each of the numbers from 1 to 15. But of course I don’t want to use numbers on the faces; the whole point is to use pips, and to use them as “efficiently” as possible. Of course we could use 1+1+2+2+…+15+15 = 240 pips and just count the pips on the top face, but who wants a die that has 15 pips on some of its faces? Either the pips would be tiny or the die would be huge. Instead, when we roll such a die, we should count the pips on the top face <em>and</em> the four neighboring faces. This increases the efficiency by a factor of five, so the total number of pips is just 240/5 or 48 — assuming, that is, that such an arrangement exists.</p>


<div>
<figure><a href="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/triacontahedron.jpg"><img data-attachment-id="6768" data-permalink="https://mathenchant.wordpress.com/2024/10/17/industrious-dice/triacontahedron/" data-orig-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/triacontahedron.jpg" data-orig-size="1127,1227" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="triacontahedron" data-image-description="" data-image-caption="" data-medium-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/triacontahedron.jpg?w=276" data-large-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/triacontahedron.jpg?w=625" tabindex="0" role="button" loading="lazy" width="276" height="300" src="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/triacontahedron.jpg?w=276" alt=""></a><figcaption>A triacontahedron</figcaption></figure></div>


<p>As in the case of my dodecahedral die for simulating a d6, the problem of arranging pips on a triacontahedral die to simulate a d15 can be recast as the puzzle of filling numbers in a Schlegel digram so that all the possible sums we want (in this case, all the numbers between 1 and 15) are equally represented. But now there are 30 variables instead of just 12, and I found that my brute-force approach to solving the puzzle, which had succeeded for the dodecahedron, was too slow to yield even a single solution. So I reached out for help.</p>



<p>As it happens, I’m not the only person I know who walks the line between pure math and recreational math – and who, in the process of walking the line, tries to blur it a little. For several decades Rich Schroeppel has run an email forum called math-fun for folks like me who don’t draw a sharp distinction between the two kinds of math; such mathematical luminaries as Bill Thurston and John Conway were active in the group in its early days. Two current members are George Hart and Robin Houston, and they were able to find several solutions to my puzzle.</p>



<p>Among the solutions they found, one stands out as especially satisfying. If you want to see what their die looks like, print out the following image on some stiff paper, cut out the network of 30 rhombuses, fold along the edges joining adjacent rhombuses, and tape the whole thing up to form a triacontahedron.</p>


<div>
<figure><a href="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/houston-die.jpg"><img data-attachment-id="6770" data-permalink="https://mathenchant.wordpress.com/2024/10/17/industrious-dice/houston-die/" data-orig-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/houston-die.jpg" data-orig-size="537,510" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="houston-die" data-image-description="" data-image-caption="" data-medium-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/houston-die.jpg?w=300" data-large-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/houston-die.jpg?w=537" tabindex="0" role="button" loading="lazy" width="537" height="510" src="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/houston-die.jpg?w=537" alt=""></a><figcaption>An industrious triacontahedron</figcaption></figure></div>


<p>Especially pleasing to me are the following three properties that this die satisfies.</p>



<p>(1) <strong>No face has more than 3 pips.</strong> I don’t want too many pips to have to share a face – that’d force the pips to be small or the die to be big.</p>



<p>(2) <strong>If you count the pips visible from overhead&nbsp;and&nbsp;the pips visible from underneath (imagining that the die rests on a glass table), you always get a total of 16 pips. </strong>This property is reminiscent of the way the two opposite faces of a cubical die show numbers that add up to 7.</p>



<p>(3) <strong>There are equal numbers of faces with 1 pips, 2 pips, and 3 pips. </strong>This property lends more visual variety to the die.</p>



<p>But what I really like is that Houston and Hart showed that these three properties, taken together, single out the die shown above. As a mathematician, I’m attracted to systems of constraints that are delicately poised between being too lax and too restrictive. A problem that has only one solution is an especially satisfying kind of problem to come across or to invent.</p>



<p><strong>TELLING THE STORY I FOUND</strong></p>



<p>Once I knew there was a new and nifty way to generate a random number between 1 and 15, I had the seed for my Gathering for Gardner 15 (“<a href="https://www.gathering4gardner.org/g4g15-info/" target="_blank" rel="noreferrer noopener">G4G15</a>“) talk. In planning the talk, I decided to dramatize my quirky design criterion by creating and inhabiting a pompous character who would care about the problem much more than I did, and who would view the efficiency of the die not just as an esthetic issue but a moral one.</p>



<p>You’ll see that this character wears a top hat. Although I borrowed the hat from one of the magicians attending the Gathering, it was intended to be more like a capitalist’s hat than a magician’s hat (think of the hat in the board game Monopoly). More specifically, he’s a ruthless industrialist who’s offended that the pips on a standard die don’t work hard enough.</p>



<p>I don’t think the triacontahedral d15 has much of a future in the gaming world, despite the existence of a small but enthusiastic community of gamers who collect novelty dice. Nor does the dodecahedral d6. This gloomy conclusion is a consequence of the geometry of gaming in the physical world. Think about a game like Monopoly that uses dice: you have two or more players sitting around a board and all players need to be able to see what value each player has rolled. The more efficient (or, as my character would say, “industrious”) a die is, the narrower the range of viewing-angles is for the players who want to confirm what value was rolled, since each player must see all the relevant faces at once. Two people sitting on opposite sides of a board wouldn’t be able to see the top five faces of the dodecahedral d6 at the same time; they’d have to take turns viewing it from above. The same goes for people using a triacontahedral d15. Imagine two players trying to get a view of the die at the same time. Hilarity or romance might ensue, but the possibility of skull trauma cannot be ignored. So: fabricate and use industrious dice at your own risk!</p>



<p>Still, the process of coming up with these dice offered me some of the same satisfactions as doing a piece of “serious” research, so I don’t view it as time wasted. And if my talk on the topic amused a few hundred people, all the better.</p>



<p>Here are a couple of concluding puzzles for you: </p>



<p>First, suppose we <a href="https://en.wikipedia.org/wiki/Chamfer" target="_blank" rel="noreferrer noopener">chamfer</a> the twelve edges of a blank die and put pips on the chamfered edges; then when we roll the die, four edges are always on top (the four edges that bound the top face). Can we arrange pips on the edges so that when we roll the die and count the pips on the top four edges, we get a random number between 1 and 6? Find such an arrangement or prove that none exists. See Endnote #2. </p>



<p>Second, suppose we <a href="https://en.wikipedia.org/wiki/Truncation_(geometry)" target="_blank" rel="noreferrer noopener">truncate</a> the eight corners instead and put pips on the truncated corners; then when we roll the die, four corners are always on top (the four corners of the top face). Can we arrange pips at the corners so that when we roll the die and count the pips on the top four corners, we get a random number between 1 and 6? Find such an arrangement or prove that none exists. See Endnote #3. </p>



<p><em>Thanks to George Hart and Robin Houston without whose help I couldn’t have given the talk and wouldn’t have written this essay. Great thanks to the organizers of the 15th Gathering for Gardner. Thanks also to Tom Roby for suggesting that I wear a top hat and to The Time-Traveling Wizard (aka Roger Manderscheid) for providing one.</em></p>



<p><strong>ENDNOTES</strong></p>



<p>#1. Here’s one solution:</p>


<div>
<figure><a href="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-numbers.jpg"><img data-attachment-id="6775" data-permalink="https://mathenchant.wordpress.com/2024/10/17/industrious-dice/d6-dodecahedron-numbers/" data-orig-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-numbers.jpg" data-orig-size="1911,766" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="d6-dodecahedron-numbers" data-image-description="" data-image-caption="" data-medium-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-numbers.jpg?w=300" data-large-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-numbers.jpg?w=625" tabindex="0" role="button" loading="lazy" width="1024" height="410" src="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/d6-dodecahedron-numbers.jpg?w=1024" alt=""></a></figure></div>


<p>On the left I show a solution to the puzzle; on the right I show the twelve sums that verify that the solution satisfies the requirement of yielding each sum between 1 and 6 exactly twice.</p>



<p>#2. No such die exists. Informally, we can argue that since each pip on such a die “counts” (that is, contributes to the value of the throw) one-third of the time (unlike the pips of a standard die which count only one-sixth of the time), the proposed die must be exactly twice as efficient as a standard die, meaning the number of pips must be not 21 but 21/2. But 21/2 is not an integer. More rigorously, we could assign twelve variables&nbsp;<em>a</em>,<em>b</em>,…,<em>l</em>&nbsp;to represent the number of pips on the twelve chamfered edges. For each of the six possible ways the die could land, the number of pips shown by the surrounding edges is a sum of four of the variables. If we add up all six of these sums, we get 2<em>a</em>+2<em>b</em>+…+2<em>l</em>, where each variable occurs with the coefficient 2 because&nbsp;each edge belongs to exactly two faces. But the six sums are supposed to add up to 1+2+3+4+5+6, or 21; and 2<em>a</em>+2<em>b</em>+…+2<em>l</em>&nbsp;is even whereas 21 is odd, so no such assignment of pips exists.</p>



<p>#3. Many such dice exist. My favorite is one in which no corner-face has more than 2 pips (a reasonable thing to require since the corner-faces are not very big). Here is what the assignment of pips looks like on a Schlegel diagram of the cube:</p>


<div>
<figure><a href="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/chamfer.jpg"><img data-attachment-id="6780" data-permalink="https://mathenchant.wordpress.com/2024/10/17/industrious-dice/chamfer/" data-orig-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/chamfer.jpg" data-orig-size="1122,1122" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="chamfer" data-image-description="" data-image-caption="" data-medium-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/chamfer.jpg?w=300" data-large-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/chamfer.jpg?w=625" tabindex="0" role="button" loading="lazy" width="300" height="300" src="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/chamfer.jpg?w=300" alt=""></a></figure></div>


<p>If one makes the corner-faces as big as possible, the result is a solid called a cuboctahedron with 8 triangular faces and 6 square faces. One could make a cuboctahedral d6 that has 7 pips distributed among the triangular faces, but a player might have to roll such a die repeatedly until it lands on a square face. </p>


<div>
<figure><a href="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/cuboctahedron-front-1.jpg"><img data-attachment-id="6788" data-permalink="https://mathenchant.wordpress.com/2024/10/17/industrious-dice/cuboctahedron-front-2/" data-orig-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/cuboctahedron-front-1.jpg" data-orig-size="919,899" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="cuboctahedron-front" data-image-description="" data-image-caption="" data-medium-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/cuboctahedron-front-1.jpg?w=300" data-large-file="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/cuboctahedron-front-1.jpg?w=625" tabindex="0" role="button" loading="lazy" width="300" height="293" src="https://mathenchant.wordpress.com/wp-content/uploads/2024/10/cuboctahedron-front-1.jpg?w=300" alt=""></a><figcaption>An industrious cuboctahedron</figcaption></figure></div>


<p>Hmm, is a thrown cuboctahedron likelier to end up resting on a triangular face or on a square face? A square face, I think; but how much likelier? If any of you have a sturdy cuboctahedron lying around and do some experiments, let me know what you find!</p>
					</div></div>]]></description>
        </item>
    </channel>
</rss>