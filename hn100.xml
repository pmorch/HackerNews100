<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 28 Oct 2024 03:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[NotebookLlama: An open source version of NotebookLM (145 pts)]]></title>
            <link>https://github.com/meta-llama/llama-recipes/tree/main/recipes/quickstart/NotebookLlama</link>
            <guid>41964980</guid>
            <pubDate>Sun, 27 Oct 2024 19:31:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/meta-llama/llama-recipes/tree/main/recipes/quickstart/NotebookLlama">https://github.com/meta-llama/llama-recipes/tree/main/recipes/quickstart/NotebookLlama</a>, See on <a href="https://news.ycombinator.com/item?id=41964980">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">NotebookLlama: An Open Source version of NotebookLM</h2><a id="user-content-notebookllama-an-open-source-version-of-notebooklm" aria-label="Permalink: NotebookLlama: An Open Source version of NotebookLM" href="#notebookllama-an-open-source-version-of-notebooklm"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/meta-llama/llama-recipes/blob/main/recipes/quickstart/NotebookLlama/resources/Outline.jpg"><img src="https://github.com/meta-llama/llama-recipes/raw/main/recipes/quickstart/NotebookLlama/resources/Outline.jpg" alt="NotebookLlama"></a></p>
<p dir="auto"><a href="https://github.com/meta-llama/llama-recipes/blob/main/recipes/quickstart/NotebookLlama/resources/_podcast.mp3">Listen to audio from the example here</a></p>
<p dir="auto">This is a guided series of tutorials/notebooks that can be taken as a reference or course to build a PDF to Podcast workflow.</p>
<p dir="auto">You will also learn from the experiments of using  Text to Speech Models.</p>
<p dir="auto">It assumes zero knowledge of LLMs, prompting and audio models, everything is covered in their respective notebooks.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Outline:</h3><a id="user-content-outline" aria-label="Permalink: Outline:" href="#outline"></a></p>
<p dir="auto">Here is step by step thought (pun intended) for the task:</p>
<ul dir="auto">
<li>Step 1: Pre-process PDF: Use <code>Llama-3.2-1B-Instruct</code> to pre-process the PDF and save it in a <code>.txt</code> file.</li>
<li>Step 2: Transcript Writer: Use <code>Llama-3.1-70B-Instruct</code> model to write a podcast transcript from the text</li>
<li>Step 3: Dramatic Re-Writer: Use <code>Llama-3.1-8B-Instruct</code> model to make the transcript more dramatic</li>
<li>Step 4: Text-To-Speech Workflow: Use <code>parler-tts/parler-tts-mini-v1</code> and <code>bark/suno</code> to generate a conversational podcast</li>
</ul>
<p dir="auto">Note 1: In Step 1, we prompt the 1B model to not modify the text or summarize it, strictly clean up extra characters or garbage characters that might get picked due to encoding from PDF. Please see the prompt in Notebook 1 for more details.</p>
<p dir="auto">Note 2: For Step 2, you can also use <code>Llama-3.1-8B-Instruct</code> model, we recommend experimenting and trying if you see any differences. The 70B model was used here because it gave slightly more creative podcast transcripts for the tested examples.</p>
<p dir="auto">Note 3: For Step 4, please try to extend the approach with other models. These models were chosen based on a sample prompt and worked best, newer models might sound better. Please see <a href="https://github.com/meta-llama/llama-recipes/blob/main/recipes/quickstart/NotebookLlama/TTS_Notes.md">Notes</a> for some of the sample tests.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Detailed steps on running the notebook:</h3><a id="user-content-detailed-steps-on-running-the-notebook" aria-label="Permalink: Detailed steps on running the notebook:" href="#detailed-steps-on-running-the-notebook"></a></p>
<p dir="auto">Requirements: GPU server or an API provider for using 70B, 8B and 1B Llama models.
For running the 70B model, you will need a GPU with aggregated memory around 140GB to infer in bfloat-16 precision.</p>
<p dir="auto">Note: For our GPU Poor friends, you can also use the 8B and lower models for the entire pipeline. There is no strong recommendation. The pipeline below is what worked best on first few tests. You should try and see what works best for you!</p>
<ul dir="auto">
<li>Before getting started, please make sure to login using the <code>huggingface cli</code> and then launch your jupyter notebook server to make sure you are able to download the Llama models.</li>
</ul>
<p dir="auto">You'll need your Hugging Face access token, which you can get at your Settings page <a href="https://huggingface.co/settings/tokens" rel="nofollow">here</a>. Then run <code>huggingface-cli login</code> and copy and paste your Hugging Face access token to complete the login to make sure the scripts can download Hugging Face models if needed.</p>
<ul dir="auto">
<li>First, please Install the requirements from <a href="https://github.com/meta-llama/llama-recipes/blob/main/recipes/quickstart/NotebookLlama">here</a> by running inside the folder:</li>
</ul>
<div data-snippet-clipboard-copy-content="git clone https://github.com/meta-llama/llama-recipes
cd llama-recipes/recipes/quickstart/NotebookLlama/
pip install -r requirements.txt"><pre><code>git clone https://github.com/meta-llama/llama-recipes
cd llama-recipes/recipes/quickstart/NotebookLlama/
pip install -r requirements.txt
</code></pre></div>
<ul dir="auto">
<li>Notebook 1:</li>
</ul>
<p dir="auto">This notebook is used for processing the PDF and processing it using the new Feather light model into a <code>.txt</code> file.</p>
<p dir="auto">Update the first cell with a PDF link that you would like to use. Please decide on a PDF to use for Notebook 1, it can be any link but please remember to update the first cell of the notebook with the right link.</p>
<p dir="auto">Please try changing the prompts for the <code>Llama-3.2-1B-Instruct</code> model and see if you can improve results.</p>
<ul dir="auto">
<li>Notebook 2:</li>
</ul>
<p dir="auto">This notebook will take in the processed output from Notebook 1 and creatively convert it into a podcast transcript using the <code>Llama-3.1-70B-Instruct</code> model. If you are GPU rich, please feel free to test with the 405B model!</p>
<p dir="auto">Please try experimenting with the System prompts for the model and see if you can improve the results and try the 8B model as well here to see if there is a huge difference!</p>
<ul dir="auto">
<li>Notebook 3:</li>
</ul>
<p dir="auto">This notebook takes the transcript from earlier and prompts <code>Llama-3.1-8B-Instruct</code> to add more dramatization and interruptions in the conversations.</p>
<p dir="auto">There is also a key factor here: we return a tuple of conversation which makes our lives easier later. Yes, studying Data Structures 101 was actually useful for once!</p>
<p dir="auto">For our TTS logic, we use two different models that behave differently with certain prompts. So we prompt the model to add specifics for each speaker accordingly.</p>
<p dir="auto">Please again try changing the system prompt and see if you can improve the results. We encourage testing the feather light 3B and 1B models as well at this stage</p>
<ul dir="auto">
<li>Notebook 4:</li>
</ul>
<p dir="auto">Finally, we take the results from last notebook and convert them into a podcast. We use the <code>parler-tts/parler-tts-mini-v1</code> and <code>bark/suno</code> models for a conversation.</p>
<p dir="auto">The speakers and the prompt for parler model were decided based on experimentation and suggestions from the model authors. Please try experimenting, you can find more details in the resources section.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Note: Right now there is one issue: Parler needs transformers 4.43.3 or earlier and for steps 1 to 3 of the pipeline you need latest, so we just switch versions in the last notebook.</h4><a id="user-content-note-right-now-there-is-one-issue-parler-needs-transformers-4433-or-earlier-and-for-steps-1-to-3-of-the-pipeline-you-need-latest-so-we-just-switch-versions-in-the-last-notebook" aria-label="Permalink: Note: Right now there is one issue: Parler needs transformers 4.43.3 or earlier and for steps 1 to 3 of the pipeline you need latest, so we just switch versions in the last notebook." href="#note-right-now-there-is-one-issue-parler-needs-transformers-4433-or-earlier-and-for-steps-1-to-3-of-the-pipeline-you-need-latest-so-we-just-switch-versions-in-the-last-notebook"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Next-Improvements/Further ideas:</h3><a id="user-content-next-improvementsfurther-ideas" aria-label="Permalink: Next-Improvements/Further ideas:" href="#next-improvementsfurther-ideas"></a></p>
<ul dir="auto">
<li>Speech Model experimentation: The TTS model is the limitation of how natural this will sound. This probably be improved with a better pipeline and with the help of someone more knowledgable-PRs are welcome! :)</li>
<li>LLM vs LLM Debate: Another approach of writing the podcast would be having two agents debate the topic of interest and write the podcast outline. Right now we use a single LLM (70B) to write the podcast outline</li>
<li>Testing 405B for writing the transcripts</li>
<li>Better prompting</li>
<li>Support for ingesting a website, audio file, YouTube links and more. Again, we welcome community PRs!</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Resources for further learning:</h3><a id="user-content-resources-for-further-learning" aria-label="Permalink: Resources for further learning:" href="#resources-for-further-learning"></a></p>
<ul dir="auto">
<li><a href="https://betterprogramming.pub/text-to-audio-generation-with-bark-clearly-explained-4ee300a3713a" rel="nofollow">https://betterprogramming.pub/text-to-audio-generation-with-bark-clearly-explained-4ee300a3713a</a></li>
<li><a href="https://colab.research.google.com/drive/1dWWkZzvu7L9Bunq9zvD-W02RFUXoW-Pd?usp=sharing" rel="nofollow">https://colab.research.google.com/drive/1dWWkZzvu7L9Bunq9zvD-W02RFUXoW-Pd?usp=sharing</a></li>
<li><a href="https://colab.research.google.com/drive/1eJfA2XUa-mXwdMy7DoYKVYHI1iTd9Vkt?usp=sharing#scrollTo=NyYQ--3YksJY" rel="nofollow">https://colab.research.google.com/drive/1eJfA2XUa-mXwdMy7DoYKVYHI1iTd9Vkt?usp=sharing#scrollTo=NyYQ--3YksJY</a></li>
<li><a href="https://replicate.com/suno-ai/bark?prediction=zh8j6yddxxrge0cjp9asgzd534" rel="nofollow">https://replicate.com/suno-ai/bark?prediction=zh8j6yddxxrge0cjp9asgzd534</a></li>
<li><a href="https://suno-ai.notion.site/8b8e8749ed514b0cbf3f699013548683?v=bc67cff786b04b50b3ceb756fd05f68c" rel="nofollow">https://suno-ai.notion.site/8b8e8749ed514b0cbf3f699013548683?v=bc67cff786b04b50b3ceb756fd05f68c</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Up to $41B in World Bank climate finance unaccounted for, Oxfam finds (287 pts)]]></title>
            <link>https://www.oxfam.org/en/press-releases/41-billion-world-bank-climate-finance-unaccounted-oxfam-finds</link>
            <guid>41964639</guid>
            <pubDate>Sun, 27 Oct 2024 18:41:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.oxfam.org/en/press-releases/41-billion-world-bank-climate-finance-unaccounted-oxfam-finds">https://www.oxfam.org/en/press-releases/41-billion-world-bank-climate-finance-unaccounted-oxfam-finds</a>, See on <a href="https://news.ycombinator.com/item?id=41964639">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><br>Up to $41 billion in World Bank climate finance —nearly 40 percent of all climate funds disbursed by the Bank over the past seven years— is unaccounted for due to poor record-keeping practices, reveals a new Oxfam report published today ahead of the World Bank and IMF Annual Meetings in Washington D.C.</p><p>An Oxfam audit of the World Bank’s 2017-2023 climate finance portfolio found that between $24 billion and $41 billion in climate finance went unaccounted for between the time projects were approved and when they closed.</p><p>There is no clear public record showing where this money went or how it was used, which makes any assessment of its impacts impossible. It also remains unclear whether these funds were even spent on climate-related initiatives intended to help low- and middle-income countries protect people from the impacts of the climate crisis and invest in clean energy.</p><p>“The Bank is quick to brag about its climate finance billions —but these numbers are based on what it plans to spend, not on what it actually spends once a project gets rolling,” said Kate Donald, Head of Oxfam International’s Washington D.C. Office. "This is like asking your doctor to assess your diet only by looking at your grocery list, without ever checking what actually ends up in your fridge.”</p><p>The Bank is the largest multilateral provider of climate finance, accounting for 52 percent of the total flow from all multilateral development banks combined.</p><p>The issue of climate finance will take center stage at this year’s COP in Azerbaijan, where countries are set to negotiate a new global climate finance goal, the New Collective Quantified Goal (NCQG). Climate activists are demanding the Global North provide at least $5 trillion a year in public finance to the Global South "as a down payment towards their climate debt" to the countries, people and communities of the Global South who are the least responsible for climate breakdown but are the most affected. Oxfam warns that the lack of traceable spending could undermine trust in global climate finance efforts at this critical juncture.</p><p>“Climate finance is scarce, and yes, we know it’s hard to deliver. But not tracking how or where the money actually gets spent? That’s not just some bureaucratic oversight —it’s a fundamental breach of trust that risks derailing the progress we need to make at COP this year. The Bank needs to act like our future depends on tackling the climate crisis, because it does,” said Donald.</p><p>Oxfam’s investigation revealed that obtaining even basic information on how the World Bank is using climate finance was painstaking and difficult.</p><p>"We had to sift through layers of complex and incomplete reports, and even then, the data was full of gaps and inconsistencies. The fact that this information is so hard to access and understand is alarming —it shouldn’t take a team of professional researchers to figure out how billions of dollars meant for climate action are being spent. This should be transparent and accessible to everyone, most importantly communities who are meant to benefit from climate finance," said Donald.<br>&nbsp;</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ibis: Federated Wikipedia alternative (157 pts)]]></title>
            <link>https://ibis.wiki/article/Announcing_Ibis,_the_federated_Wikipedia_Alternative</link>
            <guid>41964210</guid>
            <pubDate>Sun, 27 Oct 2024 17:39:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ibis.wiki/article/Announcing_Ibis,_the_federated_Wikipedia_Alternative">https://ibis.wiki/article/Announcing_Ibis,_the_federated_Wikipedia_Alternative</a>, See on <a href="https://news.ycombinator.com/item?id=41964210">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Freenet: A decentralized alternative to world wide web (136 pts)]]></title>
            <link>https://freenet.org/</link>
            <guid>41964191</guid>
            <pubDate>Sun, 27 Oct 2024 17:36:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://freenet.org/">https://freenet.org/</a>, See on <a href="https://news.ycombinator.com/item?id=41964191">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2>Declare Your Digital Independence</h2><div><p>The centralization of the internet poses a fundamental threat to individual freedom. In 2024, a few
corporations control most of our online services and infrastructure, wielding immense power with
little accountability. They can censor content, exploit data, and exclude users from essential
services, undermining democracy. We need a solution urgently.</p><p>Introducing Freenet—a decentralized replacement for the World Wide Web. Acting as a global, shared
computing platform, Freenet can be accessed via a standard web browser or embedded into software via
an API.</p><p>Freenet enables new solutions to old problems like spam,
<a href="https://en.wikipedia.org/wiki/Denial-of-service_attack">DDoS</a>, keeping private data private, and
much more.</p><p>Freenet is flexible enough to build entirely decentralized alternatives to existing centralized
services, such as messaging, social media, email, and e-commerce. Every component of every service
built on Freenet is interoperable by default, ensuring seamless integration and interaction across
the platform. Services are also scalable by default and secured through modern cryptographic
techniques, putting control back in the hands of users, not tech oligarchs.</p><h4 id="useful-links">Useful Links</h4><h3 id="news">News</h3><ul><li><strong>October 11, 2024</strong> -
<i></i>
<a href="https://freenet.org/news/weekly-dev-meeting-2024-10-11/">Weekly Dev Meeting - Final Bug Fixes, Simulations, and Live Testing Ahead of Release</a></li><li><strong>August 30, 2024</strong> -
<i></i>
<a href="https://freenet.org/news/weekly-dev-meeting-refactoring-connection-handler-for-better-unit-testing/">Weekly Dev Meeting - Friday, August 30th, 2024</a></li><li><strong>August 22, 2024</strong> -
<i></i>
<a href="https://freenet.org/news/ghost-keys-ian-interview/">Ghost Keys: Building Cypherpunk Reputation Systems with Ian Clarke of Freenet</a></li><li><strong>June 10, 2024</strong> -
<i></i>
<a href="https://freenet.org/news/how-freenet-works-video-talk/">How Freenet Works</a></li><li><strong>October 29, 2023</strong> -
<a href="https://freenet.org/news/882-zero-knowledge-proofs-and-anonymous-reputation-in-freenet/">Zero-Knowledge Proofs and Anonymous Reputation in Freenet</a></li></ul><p><a href="https://freenet.org/news">More news…</a></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Using SQLite as storage for web server static content (169 pts)]]></title>
            <link>https://clace.io/blog/sqlite/</link>
            <guid>41963996</guid>
            <pubDate>Sun, 27 Oct 2024 17:08:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://clace.io/blog/sqlite/">https://clace.io/blog/sqlite/</a>, See on <a href="https://news.ycombinator.com/item?id=41963996">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p>Clace is an
<a href="https://github.com/claceio/clace">open source project</a>
building a secure platform for easily developing and deploying internal
tools across a team. Clace can be used to develop actions which present a
simple auto-generated web UI for backend operations. Clace also implements
an appserver for containerized web apps implemented in any language.<br></p></div><h2>Background<span id="background"></span>
<a href="#background" aria-label="Permalink for this section"></a></h2><p>Clace is built to serve web applications, primarily for internal tools. Clace provides functionality usually handled separately by a web server and an application server. When the development of Clace was started last year, one of the first decisions was how to store the application data (files) and metadata. The app metadata obviously made sense to store in a database, since apps are created dynamically. The app data (static files, app code, config files etc) is usually stored on the file system by most web servers.</p><h2>Using SQLite for serving files<span id="using-sqlite-for-serving-files"></span>
<a href="#using-sqlite-for-serving-files" aria-label="Permalink for this section"></a></h2><p>For Clace, the decision was made to use <a href="https://www.sqlite.org/" target="_blank" rel="noopener">SQLite</a> for app files storage instead of using the file system. The reasoning was mainly to be able to do atomic version changes. When updating an app, since there could be lots of files being updated, using a database would allow all changes to be done atomically in a transaction. This would prevent broken web pages from being served during a version change.</p><p>Clace uploads all files to the SQLite database during app creation and updates. Files are uploaded from GitHub or from local disk. Only for <a href="https://clace.io/docs/applications/lifecycle/#development-apps">development mode</a>, the local file system is used.</p><h2>Benefits of using SQLite<span id="benefits-of-using-sqlite"></span>
<a href="#benefits-of-using-sqlite" aria-label="Permalink for this section"></a></h2><p>The decision to use SQLite for file storage has provided lots of additional benefits (some unanticipated).</p><ul><li><p><strong>Transactional Updates</strong> : This is the main benefit. Updating multiple files can be done in one transaction. Isolation ensures that there are no broken webapps during the update.</p></li><li><p><strong>Deployment Rollbacks</strong>: Another of the transactional benefits is the ability to roll back deployment in case of errors. If multiple apps are being updated, all of them can be rolled back in one go. Rolling back a database transaction is much easier than cleaning up files on the file system.</p></li><li><p><strong>File De-duplication Across Versions</strong>: Clace automatically <a href="https://clace.io/docs/applications/overview/#app-listing">versions</a> all updates. This can lead to lots of duplicate files. The file data is stored in a table with the schema</p></li></ul><p>The uncompressed content SHA256 hash is used as the primary key to store the file data. This means that even if multiple versions of an app have the same file, the file contents are stored only once.</p><ul><li><p><strong>De-duplication Across Apps</strong> : Each production app in Clace has an <a href="https://clace.io/docs/applications/lifecycle/#application-types">staging app</a>. Apps can have multiple <a href="https://clace.io/docs/applications/lifecycle/#preview-apps">previews apps</a>. This can lead to lots of duplication of files. Using the database helps avoid all the duplication. Even across apps, there are files which have the same contents. Files are de-duplicated across apps also.</p></li><li><p><strong>Easy Backups</strong>: Using SQLite means that backups are easy. The state of the whole system, metadata and files can be backed up easily using SQLite backup tools like <a href="https://litestream.io/" target="_blank" rel="noopener">Litestream</a>.</p></li><li><p><strong>Content Hashing</strong>: For content caching on the browser, web servers return a <a href="https://en.wikipedia.org/wiki/HTTP_ETag" target="_blank" rel="noopener">ETag</a> header. Using the database for files makes it easy to save the content SHA once during file upload without having to recompute it later.</p></li><li><p><strong>Compression</strong>: The file contents are saved <a href="https://en.wikipedia.org/wiki/Brotli" target="_blank" rel="noopener">Brotli</a> compressed in the SQLite table. The database approach has the advantage that contents can be saved in multiple formats easily. GZip compressed data and uncompressed data can be added by just adding a column in the <code>files</code> table.</p></li></ul><h2>Performance<span id="performance"></span>
<a href="#performance" aria-label="Permalink for this section"></a></h2><p>For Clace, the SQLite database approach provides great performance. There is no equivalent implementation using the file system to compare against, so a direct benchmark test is not done. Based on <a href="https://www.sqlite.org/fasterthanfs.html" target="_blank" rel="noopener">benchmarking</a> done by the SQLite team, SQLite can have better performance than direct file system use for some workloads.</p><h2>Multi-Node Support<span id="multi-node-support"></span>
<a href="#multi-node-support" aria-label="Permalink for this section"></a></h2><p>Clace currently runs on a single node. When multi-node support is added later, the plan is to use a shared Postgres database instead of using local SQLite for metadata and file data storage. This will come with latency issues. The plan is to use a local SQLite database as a file cache to avoid latency while accessing Postgres.</p><h2>Why this approach is not more common?<span id="why-this-approach-is-not-more-common"></span>
<a href="#why-this-approach-is-not-more-common" aria-label="Permalink for this section"></a></h2><p>One of the reasons most web servers use the file system is convenience. File updates can be done using any file system tool: rsync, tar etc work for copying files over. The other reason is probably historical: file systems are what were used before there were good in-process relational databases available. Using a database means some kind of API interface is required for uploading files, which is not always feasible.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[NewPipe on Linux, Using Android_translation_layer (182 pts)]]></title>
            <link>https://flathub.org/apps/net.newpipe.NewPipe</link>
            <guid>41963932</guid>
            <pubDate>Sun, 27 Oct 2024 16:58:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://flathub.org/apps/net.newpipe.NewPipe">https://flathub.org/apps/net.newpipe.NewPipe</a>, See on <a href="https://news.ycombinator.com/item?id=41963932">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><em>NOTE:</em> This is an unofficial and experimental Flatpak build based on Android Translation Layer. Please report bugs to the ATL bug tracker instead of the NewPipe bug tracker <a href="https://gitlab.com/android_translation_layer/android_translation_layer/-/issues" target="_blank" rel="noopener noreferrer">https://gitlab.com/android_translation_layer/android_translation_layer/-/issues</a>.</p>
      <p>NewPipe is a privacy-preserving YouTube frontend. NewPipe does not use any Google framework libraries, or the YouTube API. It only parses the website in order to gain the information it needs. Therefore this app can be used on devices without Google Services installed. Also, you don't need a YouTube account to use NewPipe, and it's FLOSS.</p>
      <p>NewPipe currently supports these services:</p>
      <ul>
        <li>YouTube and YouTube Music</li>
        <li>PeerTube and all its instances</li>
        <li>Bandcamp</li>
        <li>SoundCloud</li>
        <li><a href="http://media.ccc.de/" target="_blank" rel="noopener noreferrer">media.ccc.de</a></li>
      </ul>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[School is Not Enough: Learning is a consequence of doing (166 pts)]]></title>
            <link>https://map.simonsarris.com/p/school-is-not-enough</link>
            <guid>41963063</guid>
            <pubDate>Sun, 27 Oct 2024 15:02:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://map.simonsarris.com/p/school-is-not-enough">https://map.simonsarris.com/p/school-is-not-enough</a>, See on <a href="https://news.ycombinator.com/item?id=41963063">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><em>This is post may sound familiar: it is based on a 2021 post titled The Most Precious Resource is Agency. A rewrite with recommendations for children and parents was published in Palladium Magazine under this title. I am preserving it here too.</em></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd0e93cc-b60b-42c3-a608-ab161b95b885_1280x1491.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd0e93cc-b60b-42c3-a608-ab161b95b885_1280x1491.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd0e93cc-b60b-42c3-a608-ab161b95b885_1280x1491.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd0e93cc-b60b-42c3-a608-ab161b95b885_1280x1491.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd0e93cc-b60b-42c3-a608-ab161b95b885_1280x1491.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd0e93cc-b60b-42c3-a608-ab161b95b885_1280x1491.jpeg" width="1280" height="1491" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/bd0e93cc-b60b-42c3-a608-ab161b95b885_1280x1491.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1491,&quot;width&quot;:1280,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:324301,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd0e93cc-b60b-42c3-a608-ab161b95b885_1280x1491.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd0e93cc-b60b-42c3-a608-ab161b95b885_1280x1491.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd0e93cc-b60b-42c3-a608-ab161b95b885_1280x1491.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbd0e93cc-b60b-42c3-a608-ab161b95b885_1280x1491.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption><em>Drawing Lesson, Abraham van Strij, 1800</em></figcaption></figure></div><p><span>When I read biographies, early lives leap out the most. Leonardo da Vinci was a studio apprentice to Verrocchio at 14 years old. Walt Disney took on a number of jobs, chiefly delivering papers, by 11. Vladimir Nabokov published his first poetry collection at 16, while still in school. Andrew Carnegie </span><em>finished</em><span> schooling at 12 and was 13 when he began his </span><em>second</em><span> job as a telegraph office boy, where he convinced his superiors to teach him the telegraph machine itself. By 16, he was the family’s mainstay of income.</span></p><p>Readers (and some biographers) tend to fixate on the celebrity itself, the inflection point when people achieved fame. But their early lives often contain something more revealing than their successes. Before you grasp, you have to reach. How did they learn to reach?</p><p><span>In my examples, the individuals were all </span><em>doing</em><span> from a young age as opposed to merely attending school. And while they may not have wanted to work, the work was nonetheless something that they, their families, and society felt was useful</span><em>, </em><span>purposeful, and appreciated. In a sense, they had useful childhoods.</span></p><p>Do children today have useful childhoods?</p><p>~ ~ ~</p><p>An individual’s life can continue with an inertia that will lead them on to the next year or decade. Most young people today know approximately what they are going to be doing for the first twenty-or-more years of their life: school. Post-schooling, the inertia continues. Many a modern story opens with a worker—an office worker usually—who is so inert that he scarcely notices the passage of time until he becomes blindsided by a sudden yank of reality that forces him out of this inertia. Since we do not live in stories, we have to ask: How can we make that pull ourselves?</p><p>Agency is the capacity to act. Gaining agency is gaining the capacity to do something different from the rigid path of events that simply happen to you. Remarkable people typically go off-script early, usually in more than one way. Carnegie becoming a telegraph message boy is one opportunity; asking how to operate the telegraph is another. He was handed the first one, but he had to ask for the second. Da Vinci had plenty of small-time commissions, but he quit them all in favor of offering his services to the Duke of Milan.</p><p>No one is asked to write a book, or start a company, or stage a play, or seek invention and excellence in the unknown. These acts are very contrary to the default script. Yet they are the resources that create the world. Imagine if Carnegie and Da Vinci were instead compelled to stay in school for 10 more years. What would have happened?</p><p>In these old biographies I find it interesting just how early and varied the avenues were that allowed promising adolescents to pivot off-script, and do something different than everyone else. For a 13-year-old today, what is the equivalent of being a telegraph office boy where one can learn technology while contributing? What about for a 16-year-old? What is today’s equivalent of becoming Verrocchio’s studio apprentice at 14?</p><p>Where are the studios, anyway?</p><p>Modern complexity has erased some avenues for agency. After all, no boy can become a telegraph operator today. As complexity grows, sometimes stepping stone are removed. But the primary problem is not technology, it is how we have oriented the world and our expectations. A 13-year-old Steve Jobs once called Bill Hewlett—whose number was simply listed in the phone book–and received a summer job at Hewlett Packard. This would be unsurprising in Carnegie’s time, was certainly surprising for 1968, and is culturally verboten today.</p><p><span>We have a public imagination that cannot conceive of what exactly to do with children, especially smart children. We fail to properly respect them through adolescence, so we have engineered them to be in storage, and so they shuffle through a decade of busywork. Partly, the length of schooling has increased simply because it could—because we no longer </span><em>need </em><span>children to work, yet need them to do something while the adults go do theirs.&nbsp;</span></p><p><span>The sad result of school’s length and primacy is that it ensures there is nothing in particular for children to do. Since the rigid framework demands a certain number of hours-in-school-seat, it precludes other options. The time sink of school is a kind of </span><em>opportunity suffocation</em><span>, it makes it more difficult to imagine what good opportunities might even exist for most children. And the longer we disallow children from having the agency to act on the world, the harder it becomes for them to visualize it in the first place. The result is that we have young adults who have a difficult time adjusting once their life-script changes even a little bit, or once it simply ends past college. The path is rigid, yet brittle.</span></p><p>Modern schooling began as a track to be left as soon as you found something worthwhile to do with your life. But it has since morphed into an attempt at systematizing as many years of a child’s life as possible, extending well into their adulthood. At the same time, school can never gratify the smartest pupils as much as either party would like, because they are charged with the education of everyone. The result is that many precocious children will spend prime years of their life quite literally waiting for other students to finish.</p><p><span>Mass schooling attempts a systematization of skill and knowledge transfer. This is not </span><em>terrible</em><span> for the average person, but results are predictably average—systems at scale must function with and cater to the lowest common denominator, and the process of standardization loses all sensitivity to context. Since everyone must do the same things, it is difficult for any student to do exceptional things. The result is alarming on its own for wasting people’s youth. But even worse, in having so many years of life monopolized, people come to inadvertently believe that skill and knowledge transfer are primarily the domain of school rather than a normal consequence of meaningful work.</span></p><p>The ever-longer march through school creates a bizarre barrier separating the student from reality. As a consequence, childhood consists of the age when one can intuit well how the world works at the same time one is prevented from acting upon it meaningfully. Instead of creating adolescences full of rites of passage where one attempts to master something and accept responsibility, we have made it full of waiting and fake work—for school is work. After a time, all children spot this fakeness, and all honest educators note it: teachers often say that one of the difficult parts of teaching is having to justify why the curriculum will be relevant and useful.</p><p>It is difficult to blame young adults for assuming that work is fake and meaningless if we prescribe fake and meaningless work for the first two decades of their existence. When meaningful work is an adult-only activity, it is little wonder that adolescence is a period of great depression. It would be surprising if it was not. Unlike the past, where many smart children finished sooner, modern education endlessly ushers them towards an often farther and more abstract future—one so far away and abstract that some children become infected with the opposite of agency. They take on a learned helplessness and downplay that the future is a reality at all.</p><p>Higher education often fails to cure these deficiencies, and some people exit academia well into their twenties almost terrified to leave. How could we celebrate a form of learning that creates something so pathetic—the opposite of a readiness for life?</p><p>The institutions of higher and lower education have a purpose, but they are not your friend. They have no sensitivity to context. Their incentives are not the same as your incentives, and they have no interest in any individual going off-script. They ask nothing of you but your time and eventually your money, but these are not trivial things. And they will take as many of your prime years as you are willing to give them. School should be leveraged only so long as nothing else meaningful is available.</p><p><span>This is not the worship of employment, but an observation of fundamentals: it seems that the more you ask of people and the more you have them </span><em>do, </em><span>the more they grow into to the task of doing it on their own. While we shouldn’t allow children to be factory bobbin boys, no one would describe Steve Job’s summer job at 13 as his exploitation.</span></p><p><span>We should be thinking much harder about ensuring children can make meaningful contributions, and we should teach them in ways that are sensitive to the context of the real world. We are not looking for a job but opportunities for </span><em>mastery</em><span>: learning and practice beyond the depth one would find along the common path, which demands no such thing.</span></p><p>It might seem like the path forward is to fundamentally change the nature of schools, de-emphasize college, increase opportunities for apprenticeships, and so on. But waiting for any kind of policy daydream is a mistake. If a system lacks imagination, it is best to supply our own. History ebbs and flows with opportunity, and we find ourselves at a fortunate time.</p><p>When television first arrived, it was hailed by some as “a university in every home.” Such an optimistic prediction didn’t quite come to pass, but the internet quietly enabled something better—forms of education broader and deeper than the university.&nbsp;</p><p>User-generated content does not need the benefit of large audiences or the approval of large broadcasting companies. Students do not need permission to attend. In corners of the internet that are easy to miss, the biggest renaissance of informal skills transfer in history is happening right now. Unlike textbooks or professors, the creators of these educational materials are willing to engage with random students throughout the world, provide feedback, and even arrange meetups—often for free.</p><p>A close look at social media reveals ample opportunity for self-apprenticeship. We live in an era where a motivated 12-year-old can learn the basics of woodcraft, programming, or how to bake bread that would rival world-class bakeries. They can master nearly any mechanical system or any number of technical or artistic vocations, even if no mentor lives nearby. The limit is no longer some teacher or institution but a child’s own patience and interest, as well as the interested support of the parents.</p><p><span>Often the parents of precocious children do not appreciate this interest. They think a child engrossed in </span><em>Minecraft</em><span> is simply playing video games, instead of longing to build. It is the parent’s job to identify this motivation, and then leverage technology and their own resources to encourage something more meaningful. “</span><em>He’s going to do great things one day.”</em><span> In his thirties? Why not today?</span></p><p>We can somewhat excuse schools for only covering topics broadly. But if education matters to a parent, then they should think hard about how they can allow their child a deep venture. Parents owe it to children to furnish them with materials, time, and useful pursuits. Schools will not supply them, and the most common failure mode with parenting is probably giving children options along the same feeble lines, and responsibilities too close to what they already have at school.&nbsp;</p><p>Occasionally parents might gesture towards an activity, like a lemonade stand on the sidewalk, to gratify a child’s interest. This is the archetypal poor choice: A lemonade stand does not teach the value of money but how to wait and occasionally beg. To understand business or food or hospitality, children would be better off trying to make something people really wanted.&nbsp;</p><p>For a simple example, a better home craft than lemonade might be a pastry, taken seriously. Not sugar cookies or muffins, but the kind of thing that is plain for a 13-year-old to understand, harder for him to make, and very difficult to master. If a child committed to a batch a day, documenting progress, perhaps in time he would have something worth selling.</p><p>And perhaps selling these at the side of the street won’t work, but it might work selling them somewhere repeatable and meaningful, like at local soccer practice, or even taking orders on the local Facebook group. Leveraging existing technology and a supportive parent, there’s no reason a young teenager couldn’t make thousands this way while attaining mastery of something.</p><p><span>The art of pastry comes to my mind as an example because Pierre Hermé, one of the most famous pastry chefs and chocolatiers in the world, began as an apprentice at 14. Such an apprenticeship is admirable, but it would be a shame for us to wait around for some mentor to appear. The ultimate mentor is always the parent, and the resources are broader than ever. What can your child make </span><em>today?</em><span> What can he do that’s both rewarding and difficult? What can you do to facilitate such a thing? Or if you’re young enough yourself—what can you repeat until you improve?</span></p><p>The goal of education is to create a path to mastery or responsibility. If a child can sell the fruit of his labor, so much the better. But the essential lesson is that every difficult thing attempted acts as a multiplier on his confidence and the rest of his knowledge. Drudgery is sometimes confused with building character, and I think this is a mistake. It is building skill itself that builds self-possession. After selling thousands of dollars worth of pastries over the summer, a child does not only know that he can make pastries. He knows that he can make anything.</p><p><span>I think it is worth some special reflection as to why programming is now the typical industry for precocious children. In many ways, it has a low bar to entry and is something that parents still allow their children to “work at” do despite the hour-demands of systematized schooling. It is one of the few industries with an immensely permissionless culture. You don’t need an audience or patrons. You don’t have to ask anyone. You don’t have to get a building permit or any professional resources. You can just create. The advantages of this, especially for some children who are not allowed to do much else with their time, are immense. We should ask ourselves, slowly, carefully, and often: </span><em>what else can be like that?</em></p><p>It would be desirable if there were some common formulas for instilling mastery, a series of recipes and options for every child or young adult. But so long as society is committed to treating children unseriously, the obvious apprenticeships will be few. There may be more varied options than ever for any given child, but none of them will come to him on their own. They will lie just off the path, and the child or parent will need to go looking. One reason that schools will always do poorly at finding such opportunities for children is that the very best opportunities will always be a response to local needs—a sensitivity to context is precisely the thing that systems of scale fail at producing. But both parent and child should never confuse this with a lack of options. Our era is resource-rich, especially with educational resources, but onramp poor. The legwork is up to you.</p><p>Many fairy tales and stories are about finding one’s place. The hero begins as a child full of wonder and ends up achieving mastery over the world. Visions of the future need to allow people—not just the cleverest among us, but all people—to imagine accepting a place in the world. If we fail to do this during the years of education, then we are not really educating. If we fail to allow children continuous contact with the world, we risk them coming to see their own lives as mere abstractions.</p><p>The purpose of education is to develop agency within a child. Purposeful work and achieving mastery are tools to getting there. They aren’t the results of learning and imagination, it’s the other way around—learning is simply the consequence of doing. To understand this is to understand the ecology that fosters genius and talent.</p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[50 Years Ago, Sugar Industry Paid Scientists to Point Blame at Fat (2016) (177 pts)]]></title>
            <link>https://www.npr.org/sections/thetwo-way/2016/09/13/493739074/50-years-ago-sugar-industry-quietly-paid-scientists-to-point-blame-at-fat</link>
            <guid>41962750</guid>
            <pubDate>Sun, 27 Oct 2024 14:10:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.npr.org/sections/thetwo-way/2016/09/13/493739074/50-years-ago-sugar-industry-quietly-paid-scientists-to-point-blame-at-fat">https://www.npr.org/sections/thetwo-way/2016/09/13/493739074/50-years-ago-sugar-industry-quietly-paid-scientists-to-point-blame-at-fat</a>, See on <a href="https://news.ycombinator.com/item?id=41962750">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="storytext">
      <div id="res493753287">
            <div data-crop-type="">
        <picture>
            <source srcset="https://media.npr.org/assets/img/2016/09/13/sugar_wide-217ed83b690d79f80512397a725f0b12077a9990.jpg?s=1100&amp;c=85&amp;f=webp" type="image/webp" data-template="https://media.npr.org/assets/img/2016/09/13/sugar_wide-217ed83b690d79f80512397a725f0b12077a9990.jpg?s={width}&amp;c={quality}&amp;f={format}" data-format="webp">
            <source srcset="https://media.npr.org/assets/img/2016/09/13/sugar_wide-217ed83b690d79f80512397a725f0b12077a9990.jpg?s=1100&amp;c=85&amp;f=jpeg" type="image/jpeg" data-template="https://media.npr.org/assets/img/2016/09/13/sugar_wide-217ed83b690d79f80512397a725f0b12077a9990.jpg?s={width}&amp;c={quality}&amp;f={format}" data-format="jpeg">
            <img src="https://media.npr.org/assets/img/2016/09/13/sugar_wide-217ed83b690d79f80512397a725f0b12077a9990.jpg?s=1100&amp;c=85&amp;f=jpeg" alt="" data-template="https://media.npr.org/assets/img/2016/09/13/sugar_wide-217ed83b690d79f80512397a725f0b12077a9990.jpg?s={width}&amp;c={quality}&amp;f={format}" data-format="jpeg">
        </picture>
        
</div>
<div>
    <div>
        <p>
                A newly discovered cache of internal documents reveals that the sugar industry downplayed the risks of sugar in the 1960s.
                <b aria-label="Image credit">
                    
                    Luis Ascui/Getty Images
                    
                </b>
                <b><b>hide caption</b></b>
            </p>


            <p><b><b>toggle caption</b></b>
    </p></div>

    <p><span aria-label="Image credit">
        
        Luis Ascui/Getty Images
        
    </span>
</p></div>
<div>
        <picture>
            <source data-original="https://media.npr.org/assets/img/2016/09/13/sugar_wide-217ed83b690d79f80512397a725f0b12077a9990.jpg?s=2600&amp;c=100&amp;f=webp" type="image/webp">
            <source data-original="https://media.npr.org/assets/img/2016/09/13/sugar_wide-217ed83b690d79f80512397a725f0b12077a9990.jpg?s=2600&amp;c=100&amp;f=jpeg" type="image/jpeg">
            <img data-original="https://media.npr.org/assets/img/2016/09/13/sugar_wide-217ed83b690d79f80512397a725f0b12077a9990.jpg?s=2600&amp;c=100&amp;f=jpeg" alt="" src="https://media.npr.org/assets/img/2016/09/13/sugar_wide-217ed83b690d79f80512397a725f0b12077a9990.jpg?s=2600&amp;c=100&amp;f=jpeg">
        </picture>
    </div>
<div>
        <p>A newly discovered cache of internal documents reveals that the sugar industry downplayed the risks of sugar in the 1960s.</p>
        <p><span aria-label="Image credit">
            
            Luis Ascui/Getty Images
            
        </span>
    </p></div>
   </div>
   <p>In the 1960s, the sugar industry funded research that downplayed the risks of sugar and highlighted the hazards of fat, according to <a href="http://archinte.jamanetwork.com/article.aspx?articleid=2548255">a newly published article</a> in <em>JAMA Internal Medicine. </em></p>   <p>The article draws on internal documents to show that an industry group called the Sugar Research Foundation wanted to "refute" concerns about sugar's possible role in heart disease. The SRF then sponsored research by Harvard scientists that did just that. The result was published in the <em>New England Journal of Medicine</em> in 1967,<em> </em>with no disclosure of the sugar industry funding.</p>   
   
   
<!-- END ID="RES493968508" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>The sugar-funded project in question was a literature review, examining a variety of studies and experiments. It suggested there were major problems with all the studies that implicated sugar, and concluded that cutting fat out of American diets was the best way to address coronary heart disease.</p>   <p>The authors of the new article say that for the past five decades, the sugar industry has been attempting to influence the scientific debate over the relative risks of sugar and fat.</p>   <p>"It was a very smart thing the sugar industry did, because review papers, especially if you get them published in a very prominent journal, tend to shape the overall scientific discussion," co-author Stanton Glantz <a href="http://www.nytimes.com/2016/09/13/well/eat/how-the-sugar-industry-shifted-blame-to-fat.html?action=click&amp;contentCollection=Opinion&amp;module=Trending&amp;version=Full&amp;region=Marginalia&amp;pgtype=article">told The New York Times</a>.</p>   <p><strong>Money on the line</strong></p>   
   
<!-- END ID="RES493747959" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>In the article, published Monday, authors Glantz, Cristin Kearns and Laura Schmidt aren't trying make the case for a link between sugar and coronary heart disease. Their interest is in the process. They say the documents reveal the sugar industry attempting to influence scientific inquiry and debate.</p>   <p>The researchers note that they worked under some limitations — "We could not interview key actors involved in this historical episode because they have died," they write. Other organizations were also advocating concerns about fat, they note.</p>   
   <p>There's no evidence that the SRF directly edited the manuscript published by the Harvard scientists in 1967, but there is "circumstantial" evidence that the interests of the sugar lobby shaped the conclusions of the review, the researchers say.</p>   <p>For one thing, there's motivation and intent. In 1954, the researchers note, the president of the SRF gave a speech describing a great business opportunity.</p>   <p>If Americans could be persuaded to eat a lower-fat diet — for the sake of their health — they would need to replace that fat with something else. America's per capita sugar consumption could go up by a third<em>. </em></p>   
   
<!-- END ID="RES493747943" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>But in the '60s, the SRF became aware of "flowing reports that sugar is a less desirable dietary source of calories than other carbohydrates," as John Hickson, SRF vice president and director of research, put it in one document.</p>   <p>He recommended that the industry fund its own studies — "Then we can publish the data and refute our detractors."</p>   <p>The next year, after several scientific articles were published suggesting a link between sucrose and coronary heart disease, the SRF approved the literature-review project. It wound up paying approximately $50,000 in today's dollars for the research.</p>   <p>One of the researchers was the chairman of Harvard's Public Health Nutrition Department — and an ad hoc member of SRF's board.</p>   <p><strong>"A different standard" for different studies</strong></p>   <p>Glantz, Kearns and Schmidt say many of the articles examined in the review were hand-selected by SRF, and it was implied that the sugar industry would expect them to be critiqued.</p>   
   
<!-- END ID="RES493747963" CLASS="BUCKETWRAP INTERNALLINK INSETTWOCOLUMN INSET2COL " -->
   <p>In a letter, SRF's Hickson said that the organization's "particular interest" was in evaluating studies focused on "carbohydrates in the form of sucrose."</p>   <p>"We are well aware," one of the scientists replied, "and will cover this as well as we can."</p>   <p>The project wound up taking longer than expected, because more and more studies were being released that suggested sugar might be linked to coronary heart disease. But it was finally published in 1967.</p>   <p>Hickson was certainly happy with the result: "Let me assure you this is quite what we had in mind and we look forward to its appearance in print," he told one of the scientists.</p>   
   <p>The review <a href="http://archinte.jamanetwork.com/data/Journals/INTEMED/0/ISC160005supp1_prod.pdf">minimized the significance</a> of research that suggested sugar could play a role in coronary heart disease. In some cases the scientists alleged investigator incompetence or flawed methodology.</p>   <p>"It is always appropriate to question the validity of individual studies," Kearns <a href="http://www.bloomberg.com/news/articles/2016-09-12/how-big-sugar-enlisted-harvard-scientists-to-influence-how-we-eat-in-1965">told Bloomberg</a> via email. But, she says, "the authors applied a different standard" to different studies — looking very critically at research that implicated sugar, and ignoring problems with studies that found dangers in fat.</p>   <p>Epidemiological studies of sugar consumption — which look at patterns of health and disease in the real world — were dismissed for having too many possible factors getting in the way. Experimental studies were dismissed for being too dissimilar to real life.</p>   <p>One study that found a health benefit when people ate less sugar and more vegetables was dismissed because that dietary change was not feasible.</p>   <p>Another study, in which rats were given a diet low in fat and high in sugar, was rejected because "such diets are rarely consumed by man."</p>   <p>The Harvard researchers then turned to studies that examined risks of fat — which included the same kind of epidemiological studies they had dismissed when it came to sugar.</p>   <p>Citing "few study characteristics and no quantitative results," as Kearns, Glantz and Schmidt put it, they concluded that cutting out fat was "no doubt" the best dietary intervention to prevent coronary heart disease.</p>   <p><strong>Sugar lobby: "Transparency standards were not the norm"</strong></p>   <p>In a statement, the Sugar Association — which evolved out of the SRF — said it is challenging to comment on events from so long ago.</p>   <p>"We acknowledge that the Sugar Research Foundation should have exercised greater transparency in all of its research activities, however, when the studies in question were published funding disclosures and transparency standards were not the norm they are today," the association said.</p>   <p>"Generally speaking, it is not only unfortunate but a disservice that industry-funded research is branded as tainted," the statement continues. "What is often missing from the dialogue is that industry-funded research has been informative in addressing key issues."</p>   
   <p>The documents in question are five decades old, but the larger issue is of the moment, as Marion Nestle <a href="http://archinte.jamanetwork.com/article.aspx?articleid=2548251">notes in a commentary</a> in the same issue of <em>JAMA Internal Medicine:</em></p>   <blockquote><p>"Is it really true that food companies deliberately set out to manipulate research in their favor? Yes, it is, and the practice continues. In 2015, the <em>New York Times </em>obtained emails revealing <a href="http://well.blogs.nytimes.com/2015/08/09/coca-cola-funds-scientists-who-shift-blame-for-obesity-away-from-bad-diets/?_r=1">Coca-Cola's cozy relationships with sponsored researchers</a> who were conducting studies aimed at minimizing the effects of sugary drinks on obesity. Even more recently, the Associated Press obtained emails showing how <a href="http://bigstory.ap.org/f9483d554430445fa6566bb0aaa293d1">a candy trade association funded and influenced studies</a> to show that children who eat sweets have healthier body weights than those who do not."</p></blockquote>   <p>As for the article authors who dug into the documents around this funding, they offer two suggestions for the future.</p>   <p>"Policymaking committees should consider giving less weight to food industry-funded studies," they write.</p>   <p>They also call for new research into any ties between added sugars and coronary heart disease.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[You-get: Dumb downloader that scrapes the web (231 pts)]]></title>
            <link>https://github.com/soimort/you-get</link>
            <guid>41962205</guid>
            <pubDate>Sun, 27 Oct 2024 12:45:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/soimort/you-get">https://github.com/soimort/you-get</a>, See on <a href="https://news.ycombinator.com/item?id=41962205">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">You-Get</h2><a id="user-content-you-get" aria-label="Permalink: You-Get" href="#you-get"></a></p>
<p dir="auto"><a href="https://github.com/soimort/you-get/actions"><img src="https://github.com/soimort/you-get/workflows/develop/badge.svg" alt="Build Status"></a>
<a href="https://pypi.python.org/pypi/you-get/" rel="nofollow"><img src="https://camo.githubusercontent.com/47c5d083fa0c3e278d26528c3f3d2726ece81e299add3008485dec6ac9a04c31/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f796f752d6765742e737667" alt="PyPI version" data-canonical-src="https://img.shields.io/pypi/v/you-get.svg"></a>
<a href="https://gitter.im/soimort/you-get?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge" rel="nofollow"><img src="https://camo.githubusercontent.com/ef3705254e766b5edea93f49291c6d9239f29b942cfdb84f3296d0e37898b067/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg"></a></p>
<p dir="auto"><strong>NOTICE (30 May 2022): Support for Python 3.5, 3.6 and 3.7 will eventually be dropped. (<a href="https://github.com/soimort/you-get/wiki/TLS-1.3-post-handshake-authentication-(PHA)">see details here</a>)</strong></p>
<p dir="auto"><strong>NOTICE (8 Mar 2019): Read <a href="https://github.com/soimort/you-get/blob/develop/CONTRIBUTING.md">this</a> if you are looking for the conventional "Issues" tab.</strong></p>
<hr>
<p dir="auto"><a href="https://you-get.org/" rel="nofollow">You-Get</a> is a tiny command-line utility to download media contents (videos, audios, images) from the Web, in case there is no other handy way to do it.</p>
<p dir="auto">Here's how you use <code>you-get</code> to download a video from <a href="https://www.youtube.com/watch?v=jNQXAC9IVRw" rel="nofollow">YouTube</a>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ you-get 'https://www.youtube.com/watch?v=jNQXAC9IVRw'
site:                YouTube
title:               Me at the zoo
stream:
    - itag:          43
      container:     webm
      quality:       medium
      size:          0.5 MiB (564215 bytes)
    # download-with: you-get --itag=43 [URL]

Downloading Me at the zoo.webm ...
 100% (  0.5/  0.5MB) ├██████████████████████████████████┤[1/1]    6 MB/s

Saving Me at the zoo.en.srt ... Done."><pre>$ <span>you-get <span><span>'</span>https://www.youtube.com/watch?v=jNQXAC9IVRw<span>'</span></span></span>
<span>site:                YouTube</span>
<span>title:               Me at the zoo</span>
<span>stream:</span>
<span>    - itag:          43</span>
<span>      container:     webm</span>
<span>      quality:       medium</span>
<span>      size:          0.5 MiB (564215 bytes)</span>
<span>    # download-with: you-get --itag=43 [URL]</span>

<span>Downloading Me at the zoo.webm ...</span>
<span> 100% (  0.5/  0.5MB) ├██████████████████████████████████┤[1/1]    6 MB/s</span>

<span>Saving Me at the zoo.en.srt ... Done.</span></pre></div>
<p dir="auto">And here's why you might want to use it:</p>
<ul dir="auto">
<li>You enjoyed something on the Internet, and just want to download them for your own pleasure.</li>
<li>You watch your favorite videos online from your computer, but you are prohibited from saving them. You feel that you have no control over your own computer. (And it's not how an open Web is supposed to work.)</li>
<li>You want to get rid of any closed-source technology or proprietary JavaScript code, and disallow things like Flash running on your computer.</li>
<li>You are an adherent of hacker culture and free software.</li>
</ul>
<p dir="auto">What <code>you-get</code> can do for you:</p>
<ul dir="auto">
<li>Download videos / audios from popular websites such as YouTube, Youku, Niconico, and a bunch more. (See the <a href="#supported-sites">full list of supported sites</a>)</li>
<li>Stream an online video in your media player. No web browser, no more ads.</li>
<li>Download images (of interest) by scraping a web page.</li>
<li>Download arbitrary non-HTML contents, i.e., binary files.</li>
</ul>
<p dir="auto">Interested? <a href="#installation">Install it</a> now and <a href="#getting-started">get started by examples</a>.</p>
<p dir="auto">Are you a Python programmer? Then check out <a href="https://github.com/soimort/you-get">the source</a> and fork it!</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/1c918b27fb1707f508ae8fbedc10044efed1d7e3e3a712365bfc1d68b4593579/68747470733a2f2f692e696d6775722e636f6d2f4766746846417a2e706e67"><img src="https://camo.githubusercontent.com/1c918b27fb1707f508ae8fbedc10044efed1d7e3e3a712365bfc1d68b4593579/68747470733a2f2f692e696d6775722e636f6d2f4766746846417a2e706e67" alt="" data-canonical-src="https://i.imgur.com/GfthFAz.png"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Prerequisites</h3><a id="user-content-prerequisites" aria-label="Permalink: Prerequisites" href="#prerequisites"></a></p>
<p dir="auto">The following dependencies are recommended:</p>
<ul dir="auto">
<li><strong><a href="https://www.python.org/downloads/" rel="nofollow">Python</a></strong>  3.7.4 or above</li>
<li><strong><a href="https://www.ffmpeg.org/" rel="nofollow">FFmpeg</a></strong> 1.0 or above</li>
<li>(Optional) <a href="https://rtmpdump.mplayerhq.hu/" rel="nofollow">RTMPDump</a></li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 1: Install via pip</h3><a id="user-content-option-1-install-via-pip" aria-label="Permalink: Option 1: Install via pip" href="#option-1-install-via-pip"></a></p>
<p dir="auto">The official release of <code>you-get</code> is distributed on <a href="https://pypi.python.org/pypi/you-get" rel="nofollow">PyPI</a>, and can be installed easily from a PyPI mirror via the <a href="https://en.wikipedia.org/wiki/Pip_(package_manager)" rel="nofollow">pip</a> package manager: (Note that you must use the Python 3 version of <code>pip</code>)</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Option 2: Install via <a href="https://github.com/zsh-users/antigen">Antigen</a> (for Zsh users)</h3><a id="user-content-option-2-install-via-antigen-for-zsh-users" aria-label="Permalink: Option 2: Install via Antigen (for Zsh users)" href="#option-2-install-via-antigen-for-zsh-users"></a></p>
<p dir="auto">Add the following line to your <code>.zshrc</code>:</p>
<div data-snippet-clipboard-copy-content="antigen bundle soimort/you-get"><pre><code>antigen bundle soimort/you-get
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 3: Download from GitHub</h3><a id="user-content-option-3-download-from-github" aria-label="Permalink: Option 3: Download from GitHub" href="#option-3-download-from-github"></a></p>
<p dir="auto">You may either download the <a href="https://github.com/soimort/you-get/archive/master.zip">stable</a> (identical with the latest release on PyPI) or the <a href="https://github.com/soimort/you-get/archive/develop.zip">develop</a> (more hotfixes, unstable features) branch of <code>you-get</code>. Unzip it, and put the directory containing the <code>you-get</code> script into your <code>PATH</code>.</p>
<p dir="auto">Alternatively, run</p>
<div data-snippet-clipboard-copy-content="$ cd path/to/you-get
$ [sudo] python -m pip install ."><pre><code>$ cd path/to/you-get
$ [sudo] python -m pip install .
</code></pre></div>
<p dir="auto">Or</p>
<div data-snippet-clipboard-copy-content="$ cd path/to/you-get
$ python -m pip install . --user"><pre><code>$ cd path/to/you-get
$ python -m pip install . --user
</code></pre></div>
<p dir="auto">to install <code>you-get</code> to a permanent path. (And don't omit the dot <code>.</code> representing the current directory)</p>
<p dir="auto">You can also use the <a href="https://pipenv.pypa.io/en/latest" rel="nofollow">pipenv</a> to install the <code>you-get</code> in the Python virtual environment.</p>
<div data-snippet-clipboard-copy-content="$ pipenv install -e .
$ pipenv run you-get --version
you-get: version 0.4.1555, a tiny downloader that scrapes the web."><pre><code>$ pipenv install -e .
$ pipenv run you-get --version
you-get: version 0.4.1555, a tiny downloader that scrapes the web.
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 4: Git clone</h3><a id="user-content-option-4-git-clone" aria-label="Permalink: Option 4: Git clone" href="#option-4-git-clone"></a></p>
<p dir="auto">This is the recommended way for all developers, even if you don't often code in Python.</p>
<div data-snippet-clipboard-copy-content="$ git clone git://github.com/soimort/you-get.git"><pre><code>$ git clone git://github.com/soimort/you-get.git
</code></pre></div>
<p dir="auto">Then put the cloned directory into your <code>PATH</code>, or run <code>python -m pip install path/to/you-get</code> to install <code>you-get</code> to a permanent path.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 5: Homebrew (Mac only)</h3><a id="user-content-option-5-homebrew-mac-only" aria-label="Permalink: Option 5: Homebrew (Mac only)" href="#option-5-homebrew-mac-only"></a></p>
<p dir="auto">You can install <code>you-get</code> easily via:</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Option 6: pkg (FreeBSD only)</h3><a id="user-content-option-6-pkg-freebsd-only" aria-label="Permalink: Option 6: pkg (FreeBSD only)" href="#option-6-pkg-freebsd-only"></a></p>
<p dir="auto">You can install <code>you-get</code> easily via:</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Option 7: Flox (Mac, Linux, and Windows WSL)</h3><a id="user-content-option-7-flox-mac-linux-and-windows-wsl" aria-label="Permalink: Option 7: Flox (Mac, Linux, and Windows WSL)" href="#option-7-flox-mac-linux-and-windows-wsl"></a></p>
<p dir="auto">You can install <code>you-get</code> easily via:</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Shell completion</h3><a id="user-content-shell-completion" aria-label="Permalink: Shell completion" href="#shell-completion"></a></p>
<p dir="auto">Completion definitions for Bash, Fish and Zsh can be found in <a href="https://github.com/soimort/you-get/tree/develop/contrib/completion"><code>contrib/completion</code></a>. Please consult your shell's manual for how to take advantage of them.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Upgrading</h2><a id="user-content-upgrading" aria-label="Permalink: Upgrading" href="#upgrading"></a></p>
<p dir="auto">Based on which option you chose to install <code>you-get</code>, you may upgrade it via:</p>
<div data-snippet-clipboard-copy-content="$ pip install --upgrade you-get"><pre><code>$ pip install --upgrade you-get
</code></pre></div>
<p dir="auto">or download the latest release via:</p>
<div data-snippet-clipboard-copy-content="$ you-get https://github.com/soimort/you-get/archive/master.zip"><pre><code>$ you-get https://github.com/soimort/you-get/archive/master.zip
</code></pre></div>
<p dir="auto">In order to get the latest <code>develop</code> branch without messing up the PIP, you can try:</p>
<div data-snippet-clipboard-copy-content="$ pip install --upgrade git+https://github.com/soimort/you-get@develop"><pre><code>$ pip install --upgrade git+https://github.com/soimort/you-get@develop
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting Started</h2><a id="user-content-getting-started" aria-label="Permalink: Getting Started" href="#getting-started"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Download a video</h3><a id="user-content-download-a-video" aria-label="Permalink: Download a video" href="#download-a-video"></a></p>
<p dir="auto">When you get a video of interest, you might want to use the <code>--info</code>/<code>-i</code> option to see all available quality and formats:</p>
<div data-snippet-clipboard-copy-content="$ you-get -i 'https://www.youtube.com/watch?v=jNQXAC9IVRw'
site:                YouTube
title:               Me at the zoo
streams:             # Available quality and codecs
    [ DASH ] ____________________________________
    - itag:          242
      container:     webm
      quality:       320x240
      size:          0.6 MiB (618358 bytes)
    # download-with: you-get --itag=242 [URL]

    - itag:          395
      container:     mp4
      quality:       320x240
      size:          0.5 MiB (550743 bytes)
    # download-with: you-get --itag=395 [URL]

    - itag:          133
      container:     mp4
      quality:       320x240
      size:          0.5 MiB (498558 bytes)
    # download-with: you-get --itag=133 [URL]

    - itag:          278
      container:     webm
      quality:       192x144
      size:          0.4 MiB (392857 bytes)
    # download-with: you-get --itag=278 [URL]

    - itag:          160
      container:     mp4
      quality:       192x144
      size:          0.4 MiB (370882 bytes)
    # download-with: you-get --itag=160 [URL]

    - itag:          394
      container:     mp4
      quality:       192x144
      size:          0.4 MiB (367261 bytes)
    # download-with: you-get --itag=394 [URL]

    [ DEFAULT ] _________________________________
    - itag:          43
      container:     webm
      quality:       medium
      size:          0.5 MiB (568748 bytes)
    # download-with: you-get --itag=43 [URL]

    - itag:          18
      container:     mp4
      quality:       small
    # download-with: you-get --itag=18 [URL]

    - itag:          36
      container:     3gp
      quality:       small
    # download-with: you-get --itag=36 [URL]

    - itag:          17
      container:     3gp
      quality:       small
    # download-with: you-get --itag=17 [URL]"><pre><code>$ you-get -i 'https://www.youtube.com/watch?v=jNQXAC9IVRw'
site:                YouTube
title:               Me at the zoo
streams:             # Available quality and codecs
    [ DASH ] ____________________________________
    - itag:          242
      container:     webm
      quality:       320x240
      size:          0.6 MiB (618358 bytes)
    # download-with: you-get --itag=242 [URL]

    - itag:          395
      container:     mp4
      quality:       320x240
      size:          0.5 MiB (550743 bytes)
    # download-with: you-get --itag=395 [URL]

    - itag:          133
      container:     mp4
      quality:       320x240
      size:          0.5 MiB (498558 bytes)
    # download-with: you-get --itag=133 [URL]

    - itag:          278
      container:     webm
      quality:       192x144
      size:          0.4 MiB (392857 bytes)
    # download-with: you-get --itag=278 [URL]

    - itag:          160
      container:     mp4
      quality:       192x144
      size:          0.4 MiB (370882 bytes)
    # download-with: you-get --itag=160 [URL]

    - itag:          394
      container:     mp4
      quality:       192x144
      size:          0.4 MiB (367261 bytes)
    # download-with: you-get --itag=394 [URL]

    [ DEFAULT ] _________________________________
    - itag:          43
      container:     webm
      quality:       medium
      size:          0.5 MiB (568748 bytes)
    # download-with: you-get --itag=43 [URL]

    - itag:          18
      container:     mp4
      quality:       small
    # download-with: you-get --itag=18 [URL]

    - itag:          36
      container:     3gp
      quality:       small
    # download-with: you-get --itag=36 [URL]

    - itag:          17
      container:     3gp
      quality:       small
    # download-with: you-get --itag=17 [URL]
</code></pre></div>
<p dir="auto">By default, the one on the top is the one you will get. If that looks cool to you, download it:</p>
<div data-snippet-clipboard-copy-content="$ you-get 'https://www.youtube.com/watch?v=jNQXAC9IVRw'
site:                YouTube
title:               Me at the zoo
stream:
    - itag:          242
      container:     webm
      quality:       320x240
      size:          0.6 MiB (618358 bytes)
    # download-with: you-get --itag=242 [URL]

Downloading Me at the zoo.webm ...
 100% (  0.6/  0.6MB) ├██████████████████████████████████████████████████████████████████████████████┤[2/2]    2 MB/s
Merging video parts... Merged into Me at the zoo.webm

Saving Me at the zoo.en.srt ... Done."><pre><code>$ you-get 'https://www.youtube.com/watch?v=jNQXAC9IVRw'
site:                YouTube
title:               Me at the zoo
stream:
    - itag:          242
      container:     webm
      quality:       320x240
      size:          0.6 MiB (618358 bytes)
    # download-with: you-get --itag=242 [URL]

Downloading Me at the zoo.webm ...
 100% (  0.6/  0.6MB) ├██████████████████████████████████████████████████████████████████████████████┤[2/2]    2 MB/s
Merging video parts... Merged into Me at the zoo.webm

Saving Me at the zoo.en.srt ... Done.
</code></pre></div>
<p dir="auto">(If a YouTube video has any closed captions, they will be downloaded together with the video file, in SubRip subtitle format.)</p>
<p dir="auto">Or, if you prefer another format (mp4), just use whatever the option <code>you-get</code> shows to you:</p>
<div data-snippet-clipboard-copy-content="$ you-get --itag=18 'https://www.youtube.com/watch?v=jNQXAC9IVRw'"><pre><code>$ you-get --itag=18 'https://www.youtube.com/watch?v=jNQXAC9IVRw'
</code></pre></div>
<p dir="auto"><strong>Note:</strong></p>
<ul dir="auto">
<li>At this point, format selection has not been generally implemented for most of our supported sites; in that case, the default format to download is the one with the highest quality.</li>
<li><code>ffmpeg</code> is a required dependency, for downloading and joining videos streamed in multiple parts (e.g. on some sites like Youku), and for YouTube videos of 1080p or high resolution.</li>
<li>If you don't want <code>you-get</code> to join video parts after downloading them, use the <code>--no-merge</code>/<code>-n</code> option.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Download anything else</h3><a id="user-content-download-anything-else" aria-label="Permalink: Download anything else" href="#download-anything-else"></a></p>
<p dir="auto">If you already have the URL of the exact resource you want, you can download it directly with:</p>
<div data-snippet-clipboard-copy-content="$ you-get https://stallman.org/rms.jpg
Site:       stallman.org
Title:      rms
Type:       JPEG Image (image/jpeg)
Size:       0.06 MiB (66482 Bytes)

Downloading rms.jpg ...
 100% (  0.1/  0.1MB) ├████████████████████████████████████████┤[1/1]  127 kB/s"><pre><code>$ you-get https://stallman.org/rms.jpg
Site:       stallman.org
Title:      rms
Type:       JPEG Image (image/jpeg)
Size:       0.06 MiB (66482 Bytes)

Downloading rms.jpg ...
 100% (  0.1/  0.1MB) ├████████████████████████████████████████┤[1/1]  127 kB/s
</code></pre></div>
<p dir="auto">Otherwise, <code>you-get</code> will scrape the web page and try to figure out if there's anything interesting to you:</p>
<div data-snippet-clipboard-copy-content="$ you-get https://kopasas.tumblr.com/post/69361932517
Site:       Tumblr.com
Title:      [tumblr] tumblr_mxhg13jx4n1sftq6do1_640
Type:       Portable Network Graphics (image/png)
Size:       0.11 MiB (118484 Bytes)

Downloading [tumblr] tumblr_mxhg13jx4n1sftq6do1_640.png ...
 100% (  0.1/  0.1MB) ├████████████████████████████████████████┤[1/1]   22 MB/s"><pre><code>$ you-get https://kopasas.tumblr.com/post/69361932517
Site:       Tumblr.com
Title:      [tumblr] tumblr_mxhg13jx4n1sftq6do1_640
Type:       Portable Network Graphics (image/png)
Size:       0.11 MiB (118484 Bytes)

Downloading [tumblr] tumblr_mxhg13jx4n1sftq6do1_640.png ...
 100% (  0.1/  0.1MB) ├████████████████████████████████████████┤[1/1]   22 MB/s
</code></pre></div>
<p dir="auto"><strong>Note:</strong></p>
<ul dir="auto">
<li>This feature is an experimental one and far from perfect. It works best on scraping large-sized images from popular websites like Tumblr and Blogger, but there is really no universal pattern that can apply to any site on the Internet.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Search on Google Videos and download</h3><a id="user-content-search-on-google-videos-and-download" aria-label="Permalink: Search on Google Videos and download" href="#search-on-google-videos-and-download"></a></p>
<p dir="auto">You can pass literally anything to <code>you-get</code>. If it isn't a valid URL, <code>you-get</code> will do a Google search and download the most relevant video for you. (It might not be exactly the thing you wish to see, but still very likely.)</p>
<div data-snippet-clipboard-copy-content="$ you-get &quot;Richard Stallman eats&quot;"><pre><code>$ you-get "Richard Stallman eats"
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Pause and resume a download</h3><a id="user-content-pause-and-resume-a-download" aria-label="Permalink: Pause and resume a download" href="#pause-and-resume-a-download"></a></p>
<p dir="auto">You may use <kbd>Ctrl</kbd>+<kbd>C</kbd> to interrupt a download.</p>
<p dir="auto">A temporary <code>.download</code> file is kept in the output directory. Next time you run <code>you-get</code> with the same arguments, the download progress will resume from the last session. In case the file is completely downloaded (the temporary <code>.download</code> extension is gone), <code>you-get</code> will just skip the download.</p>
<p dir="auto">To enforce re-downloading, use the <code>--force</code>/<code>-f</code> option. (<strong>Warning:</strong> doing so will overwrite any existing file or temporary file with the same name!)</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Set the path and name of downloaded file</h3><a id="user-content-set-the-path-and-name-of-downloaded-file" aria-label="Permalink: Set the path and name of downloaded file" href="#set-the-path-and-name-of-downloaded-file"></a></p>
<p dir="auto">Use the <code>--output-dir</code>/<code>-o</code> option to set the path, and <code>--output-filename</code>/<code>-O</code> to set the name of the downloaded file:</p>
<div data-snippet-clipboard-copy-content="$ you-get -o ~/Videos -O zoo.webm 'https://www.youtube.com/watch?v=jNQXAC9IVRw'"><pre><code>$ you-get -o ~/Videos -O zoo.webm 'https://www.youtube.com/watch?v=jNQXAC9IVRw'
</code></pre></div>
<p dir="auto"><strong>Tips:</strong></p>
<ul dir="auto">
<li>These options are helpful if you encounter problems with the default video titles, which may contain special characters that do not play well with your current shell / operating system / filesystem.</li>
<li>These options are also helpful if you write a script to batch download files and put them into designated folders with designated names.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Proxy settings</h3><a id="user-content-proxy-settings" aria-label="Permalink: Proxy settings" href="#proxy-settings"></a></p>
<p dir="auto">You may specify an HTTP proxy for <code>you-get</code> to use, via the <code>--http-proxy</code>/<code>-x</code> option:</p>
<div data-snippet-clipboard-copy-content="$ you-get -x 127.0.0.1:8087 'https://www.youtube.com/watch?v=jNQXAC9IVRw'"><pre><code>$ you-get -x 127.0.0.1:8087 'https://www.youtube.com/watch?v=jNQXAC9IVRw'
</code></pre></div>
<p dir="auto">However, the system proxy setting (i.e. the environment variable <code>http_proxy</code>) is applied by default. To disable any proxy, use the <code>--no-proxy</code> option.</p>
<p dir="auto"><strong>Tips:</strong></p>
<ul dir="auto">
<li>If you need to use proxies a lot (in case your network is blocking certain sites), you might want to use <code>you-get</code> with <a href="https://github.com/rofl0r/proxychains-ng">proxychains</a> and set <code>alias you-get="proxychains -q you-get"</code> (in Bash).</li>
<li>For some websites (e.g. Youku), if you need access to some videos that are only available in mainland China, there is an option of using a specific proxy to extract video information from the site: <code>--extractor-proxy</code>/<code>-y</code>.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Watch a video</h3><a id="user-content-watch-a-video" aria-label="Permalink: Watch a video" href="#watch-a-video"></a></p>
<p dir="auto">Use the <code>--player</code>/<code>-p</code> option to feed the video into your media player of choice, e.g. <code>mpv</code> or <code>vlc</code>, instead of downloading it:</p>
<div data-snippet-clipboard-copy-content="$ you-get -p vlc 'https://www.youtube.com/watch?v=jNQXAC9IVRw'"><pre><code>$ you-get -p vlc 'https://www.youtube.com/watch?v=jNQXAC9IVRw'
</code></pre></div>
<p dir="auto">Or, if you prefer to watch the video in a browser, just without ads or comment section:</p>
<div data-snippet-clipboard-copy-content="$ you-get -p chromium 'https://www.youtube.com/watch?v=jNQXAC9IVRw'"><pre><code>$ you-get -p chromium 'https://www.youtube.com/watch?v=jNQXAC9IVRw'
</code></pre></div>
<p dir="auto"><strong>Tips:</strong></p>
<ul dir="auto">
<li>It is possible to use the <code>-p</code> option to start another download manager, e.g., <code>you-get -p uget-gtk 'https://www.youtube.com/watch?v=jNQXAC9IVRw'</code>, though they may not play together very well.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Load cookies</h3><a id="user-content-load-cookies" aria-label="Permalink: Load cookies" href="#load-cookies"></a></p>
<p dir="auto">Not all videos are publicly available to anyone. If you need to log in your account to access something (e.g., a private video), it would be unavoidable to feed the browser cookies to <code>you-get</code> via the <code>--cookies</code>/<code>-c</code> option.</p>
<p dir="auto"><strong>Note:</strong></p>
<ul dir="auto">
<li>As of now, we are supporting two formats of browser cookies: Mozilla <code>cookies.sqlite</code> and Netscape <code>cookies.txt</code>.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Reuse extracted data</h3><a id="user-content-reuse-extracted-data" aria-label="Permalink: Reuse extracted data" href="#reuse-extracted-data"></a></p>
<p dir="auto">Use <code>--url</code>/<code>-u</code> to get a list of downloadable resource URLs extracted from the page. Use <code>--json</code> to get an abstract of extracted data in the JSON format.</p>
<p dir="auto"><strong>Warning:</strong></p>
<ul dir="auto">
<li>For the time being, this feature has <strong>NOT</strong> been stabilized and the JSON schema may have breaking changes in the future.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Supported Sites</h2><a id="user-content-supported-sites" aria-label="Permalink: Supported Sites" href="#supported-sites"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Site</th>
<th>URL</th>
<th>Videos?</th>
<th>Images?</th>
<th>Audios?</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>YouTube</strong></td>
<td><a href="https://www.youtube.com/" rel="nofollow">https://www.youtube.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>X (Twitter)</strong></td>
<td><a href="https://x.com/" rel="nofollow">https://x.com/</a></td>
<td>✓</td>
<td>✓</td>
<td></td>
</tr>
<tr>
<td>VK</td>
<td><a href="https://vk.com/" rel="nofollow">https://vk.com/</a></td>
<td>✓</td>
<td>✓</td>
<td></td>
</tr>
<tr>
<td>Vimeo</td>
<td><a href="https://vimeo.com/" rel="nofollow">https://vimeo.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Veoh</td>
<td><a href="https://www.veoh.com/" rel="nofollow">https://www.veoh.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>Tumblr</strong></td>
<td><a href="https://www.tumblr.com/" rel="nofollow">https://www.tumblr.com/</a></td>
<td>✓</td>
<td>✓</td>
<td>✓</td>
</tr>
<tr>
<td>TED</td>
<td><a href="https://www.ted.com/" rel="nofollow">https://www.ted.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>SoundCloud</td>
<td><a href="https://soundcloud.com/" rel="nofollow">https://soundcloud.com/</a></td>
<td></td>
<td></td>
<td>✓</td>
</tr>
<tr>
<td>SHOWROOM</td>
<td><a href="https://www.showroom-live.com/" rel="nofollow">https://www.showroom-live.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Pinterest</td>
<td><a href="https://www.pinterest.com/" rel="nofollow">https://www.pinterest.com/</a></td>
<td></td>
<td>✓</td>
<td></td>
</tr>
<tr>
<td>MTV81</td>
<td><a href="https://www.mtv81.com/" rel="nofollow">https://www.mtv81.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Mixcloud</td>
<td><a href="https://www.mixcloud.com/" rel="nofollow">https://www.mixcloud.com/</a></td>
<td></td>
<td></td>
<td>✓</td>
</tr>
<tr>
<td>Metacafe</td>
<td><a href="https://www.metacafe.com/" rel="nofollow">https://www.metacafe.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Magisto</td>
<td><a href="https://www.magisto.com/" rel="nofollow">https://www.magisto.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Khan Academy</td>
<td><a href="https://www.khanacademy.org/" rel="nofollow">https://www.khanacademy.org/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Internet Archive</td>
<td><a href="https://archive.org/" rel="nofollow">https://archive.org/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>Instagram</strong></td>
<td><a href="https://instagram.com/" rel="nofollow">https://instagram.com/</a></td>
<td>✓</td>
<td>✓</td>
<td></td>
</tr>
<tr>
<td>InfoQ</td>
<td><a href="https://www.infoq.com/presentations/" rel="nofollow">https://www.infoq.com/presentations/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Imgur</td>
<td><a href="https://imgur.com/" rel="nofollow">https://imgur.com/</a></td>
<td></td>
<td>✓</td>
<td></td>
</tr>
<tr>
<td>Heavy Music Archive</td>
<td><a href="https://www.heavy-music.ru/" rel="nofollow">https://www.heavy-music.ru/</a></td>
<td></td>
<td></td>
<td>✓</td>
</tr>
<tr>
<td>Freesound</td>
<td><a href="https://www.freesound.org/" rel="nofollow">https://www.freesound.org/</a></td>
<td></td>
<td></td>
<td>✓</td>
</tr>
<tr>
<td>Flickr</td>
<td><a href="https://www.flickr.com/" rel="nofollow">https://www.flickr.com/</a></td>
<td>✓</td>
<td>✓</td>
<td></td>
</tr>
<tr>
<td>FC2 Video</td>
<td><a href="https://video.fc2.com/" rel="nofollow">https://video.fc2.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Facebook</td>
<td><a href="https://www.facebook.com/" rel="nofollow">https://www.facebook.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>eHow</td>
<td><a href="https://www.ehow.com/" rel="nofollow">https://www.ehow.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Dailymotion</td>
<td><a href="https://www.dailymotion.com/" rel="nofollow">https://www.dailymotion.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Coub</td>
<td><a href="https://coub.com/" rel="nofollow">https://coub.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>CBS</td>
<td><a href="https://www.cbs.com/" rel="nofollow">https://www.cbs.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Bandcamp</td>
<td><a href="https://bandcamp.com/" rel="nofollow">https://bandcamp.com/</a></td>
<td></td>
<td></td>
<td>✓</td>
</tr>
<tr>
<td>AliveThai</td>
<td><a href="https://alive.in.th/" rel="nofollow">https://alive.in.th/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>interest.me</td>
<td><a href="https://ch.interest.me/tvn" rel="nofollow">https://ch.interest.me/tvn</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>755<br>ナナゴーゴー</strong></td>
<td><a href="https://7gogo.jp/" rel="nofollow">https://7gogo.jp/</a></td>
<td>✓</td>
<td>✓</td>
<td></td>
</tr>
<tr>
<td><strong>niconico<br>ニコニコ動画</strong></td>
<td><a href="https://www.nicovideo.jp/" rel="nofollow">https://www.nicovideo.jp/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>163<br>网易视频<br>网易云音乐</strong></td>
<td><a href="https://v.163.com/" rel="nofollow">https://v.163.com/</a><br><a href="https://music.163.com/" rel="nofollow">https://music.163.com/</a></td>
<td>✓</td>
<td></td>
<td>✓</td>
</tr>
<tr>
<td>56网</td>
<td><a href="https://www.56.com/" rel="nofollow">https://www.56.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>AcFun</strong></td>
<td><a href="https://www.acfun.cn/" rel="nofollow">https://www.acfun.cn/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>Baidu<br>百度贴吧</strong></td>
<td><a href="https://tieba.baidu.com/" rel="nofollow">https://tieba.baidu.com/</a></td>
<td>✓</td>
<td>✓</td>
<td></td>
</tr>
<tr>
<td>爆米花网</td>
<td><a href="https://www.baomihua.com/" rel="nofollow">https://www.baomihua.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>bilibili<br>哔哩哔哩</strong></td>
<td><a href="https://www.bilibili.com/" rel="nofollow">https://www.bilibili.com/</a></td>
<td>✓</td>
<td>✓</td>
<td>✓</td>
</tr>
<tr>
<td>豆瓣</td>
<td><a href="https://www.douban.com/" rel="nofollow">https://www.douban.com/</a></td>
<td>✓</td>
<td></td>
<td>✓</td>
</tr>
<tr>
<td>斗鱼</td>
<td><a href="https://www.douyutv.com/" rel="nofollow">https://www.douyutv.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>凤凰视频</td>
<td><a href="https://v.ifeng.com/" rel="nofollow">https://v.ifeng.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>风行网</td>
<td><a href="https://www.fun.tv/" rel="nofollow">https://www.fun.tv/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>iQIYI<br>爱奇艺</td>
<td><a href="https://www.iqiyi.com/" rel="nofollow">https://www.iqiyi.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>激动网</td>
<td><a href="https://www.joy.cn/" rel="nofollow">https://www.joy.cn/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>酷6网</td>
<td><a href="https://www.ku6.com/" rel="nofollow">https://www.ku6.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>酷狗音乐</td>
<td><a href="https://www.kugou.com/" rel="nofollow">https://www.kugou.com/</a></td>
<td></td>
<td></td>
<td>✓</td>
</tr>
<tr>
<td>酷我音乐</td>
<td><a href="https://www.kuwo.cn/" rel="nofollow">https://www.kuwo.cn/</a></td>
<td></td>
<td></td>
<td>✓</td>
</tr>
<tr>
<td>乐视网</td>
<td><a href="https://www.le.com/" rel="nofollow">https://www.le.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>荔枝FM</td>
<td><a href="https://www.lizhi.fm/" rel="nofollow">https://www.lizhi.fm/</a></td>
<td></td>
<td></td>
<td>✓</td>
</tr>
<tr>
<td>懒人听书</td>
<td><a href="https://www.lrts.me/" rel="nofollow">https://www.lrts.me/</a></td>
<td></td>
<td></td>
<td>✓</td>
</tr>
<tr>
<td>秒拍</td>
<td><a href="https://www.miaopai.com/" rel="nofollow">https://www.miaopai.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>MioMio弹幕网</td>
<td><a href="https://www.miomio.tv/" rel="nofollow">https://www.miomio.tv/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>MissEvan<br>猫耳FM</td>
<td><a href="https://www.missevan.com/" rel="nofollow">https://www.missevan.com/</a></td>
<td></td>
<td></td>
<td>✓</td>
</tr>
<tr>
<td>痞客邦</td>
<td><a href="https://www.pixnet.net/" rel="nofollow">https://www.pixnet.net/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>PPTV聚力</td>
<td><a href="https://www.pptv.com/" rel="nofollow">https://www.pptv.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>齐鲁网</td>
<td><a href="https://v.iqilu.com/" rel="nofollow">https://v.iqilu.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>QQ<br>腾讯视频</td>
<td><a href="https://v.qq.com/" rel="nofollow">https://v.qq.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>企鹅直播</td>
<td><a href="https://live.qq.com/" rel="nofollow">https://live.qq.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Sina<br>新浪视频<br>微博秒拍视频</td>
<td><a href="https://video.sina.com.cn/" rel="nofollow">https://video.sina.com.cn/</a><br><a href="https://video.weibo.com/" rel="nofollow">https://video.weibo.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Sohu<br>搜狐视频</td>
<td><a href="https://tv.sohu.com/" rel="nofollow">https://tv.sohu.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>Tudou<br>土豆</strong></td>
<td><a href="https://www.tudou.com/" rel="nofollow">https://www.tudou.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>阳光卫视</td>
<td><a href="https://www.isuntv.com/" rel="nofollow">https://www.isuntv.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>Youku<br>优酷</strong></td>
<td><a href="https://www.youku.com/" rel="nofollow">https://www.youku.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>战旗TV</td>
<td><a href="https://www.zhanqi.tv/lives" rel="nofollow">https://www.zhanqi.tv/lives</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>央视网</td>
<td><a href="https://www.cntv.cn/" rel="nofollow">https://www.cntv.cn/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Naver<br>네이버</td>
<td><a href="https://tvcast.naver.com/" rel="nofollow">https://tvcast.naver.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>芒果TV</td>
<td><a href="https://www.mgtv.com/" rel="nofollow">https://www.mgtv.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>火猫TV</td>
<td><a href="https://www.huomao.com/" rel="nofollow">https://www.huomao.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>阳光宽频网</td>
<td><a href="https://www.365yg.com/" rel="nofollow">https://www.365yg.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>西瓜视频</td>
<td><a href="https://www.ixigua.com/" rel="nofollow">https://www.ixigua.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>新片场</td>
<td><a href="https://www.xinpianchang.com/" rel="nofollow">https://www.xinpianchang.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>快手</td>
<td><a href="https://www.kuaishou.com/" rel="nofollow">https://www.kuaishou.com/</a></td>
<td>✓</td>
<td>✓</td>
<td></td>
</tr>
<tr>
<td>抖音</td>
<td><a href="https://www.douyin.com/" rel="nofollow">https://www.douyin.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>TikTok</td>
<td><a href="https://www.tiktok.com/" rel="nofollow">https://www.tiktok.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>中国体育(TV)</td>
<td><a href="https://v.zhibo.tv/" rel="nofollow">https://v.zhibo.tv/</a> <br><a href="https://video.zhibo.tv/" rel="nofollow">https://video.zhibo.tv/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>知乎</td>
<td><a href="https://www.zhihu.com/" rel="nofollow">https://www.zhihu.com/</a></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto">For all other sites not on the list, the universal extractor will take care of finding and downloading interesting resources from the page.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Known bugs</h3><a id="user-content-known-bugs" aria-label="Permalink: Known bugs" href="#known-bugs"></a></p>
<p dir="auto">If something is broken and <code>you-get</code> can't get you things you want, don't panic. (Yes, this happens all the time!)</p>
<p dir="auto">Check if it's already a known problem on <a href="https://github.com/soimort/you-get/wiki/Known-Bugs">https://github.com/soimort/you-get/wiki/Known-Bugs</a>. If not, follow the guidelines on <a href="https://github.com/soimort/you-get/blob/develop/CONTRIBUTING.md">how to report an issue</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting Involved</h2><a id="user-content-getting-involved" aria-label="Permalink: Getting Involved" href="#getting-involved"></a></p>
<p dir="auto">You can reach us on the Gitter channel <a href="https://gitter.im/soimort/you-get" rel="nofollow">#soimort/you-get</a> (here's how you <a href="https://irc.gitter.im/" rel="nofollow">set up your IRC client</a> for Gitter). If you have a quick question regarding <code>you-get</code>, ask it there.</p>
<p dir="auto">If you are seeking to report an issue or contribute, please make sure to read <a href="https://github.com/soimort/you-get/blob/develop/CONTRIBUTING.md">the guidelines</a> first.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Legal Issues</h2><a id="user-content-legal-issues" aria-label="Permalink: Legal Issues" href="#legal-issues"></a></p>
<p dir="auto">This software is distributed under the <a href="https://raw.github.com/soimort/you-get/master/LICENSE.txt">MIT license</a>.</p>
<p dir="auto">In particular, please be aware that</p>
<blockquote>
<p dir="auto">THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.</p>
</blockquote>
<p dir="auto">Translated to human words:</p>
<p dir="auto"><em>In case your use of the software forms the basis of copyright infringement, or you use the software for any other illegal purposes, the authors cannot take any responsibility for you.</em></p>
<p dir="auto">We only ship the code here, and how you are going to use it is left to your own discretion.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Authors</h2><a id="user-content-authors" aria-label="Permalink: Authors" href="#authors"></a></p>
<p dir="auto">Made by <a href="https://github.com/soimort">@soimort</a>, who is in turn powered by ☕, 🍺 and 🍜.</p>
<p dir="auto">You can find the <a href="https://github.com/soimort/you-get/graphs/contributors">list of all contributors</a> here.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Chopin Waltz Unearthed After Nearly 200 Years (306 pts)]]></title>
            <link>https://www.nytimes.com/2024/10/27/arts/music/chopin-waltz-discovery.html</link>
            <guid>41961866</guid>
            <pubDate>Sun, 27 Oct 2024 11:57:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2024/10/27/arts/music/chopin-waltz-discovery.html">https://www.nytimes.com/2024/10/27/arts/music/chopin-waltz-discovery.html</a>, See on <a href="https://news.ycombinator.com/item?id=41961866">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2024/10/27/arts/music/chopin-waltz-discovery.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Crossing the USA by Train (180 pts)]]></title>
            <link>https://blinry.org/coast-to-coast/</link>
            <guid>41961034</guid>
            <pubDate>Sun, 27 Oct 2024 09:23:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blinry.org/coast-to-coast/">https://blinry.org/coast-to-coast/</a>, See on <a href="https://news.ycombinator.com/item?id=41961034">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            
            
            

            <p>Today, I get to start a train trip I’ve always wanted to do: Going from New York to San Francisco!!</p>

<p>This map shows that first section of the trip. I’m taking the “Lake Shore Limited”, an overnight train. Will arrive in Chicago in around 20 hours, and amazingly, that’s the only time I’ll have to change trains!</p>

<p><img src="https://blinry.org/coast-to-coast/85a2ee03cffe7938.jpg" alt="The train's route shown on a map. It goes through Albany, Buffalo, and Cleveland, and alongside Lake Erie." title="The train's route shown on a map. It goes through Albany, Buffalo, and Cleveland, and alongside Lake Erie."></p>

<p>We’re first going north, following the Hudson river.</p>

<p>The seats are big and comfy! But the train seems to be booked out.</p>

<p><img src="https://blinry.org/coast-to-coast/e63ccfafa55d2a92.jpg" alt="Looking out of a train, there's a big river." title="Looking out of a train, there's a big river."></p>

<p>A train attendant asked everyone where they’d get off, and put little notes over our seats – probably to wake up people who have to get off in thr middle of the night.</p>

<p><img src="https://blinry.org/coast-to-coast/07333db986f69357.jpg" alt="Two paper notes say &quot;Chi'." title="Two paper notes say &quot;Chi'."></p>

<p>Another picture of the Hudson river! Pretty light!</p>

<p><img src="https://blinry.org/coast-to-coast/0ac1e0d66d22a93b.jpg" alt="Sunrays fall onto the river through a cloud." title="Sunrays fall onto the river through a cloud."></p>

<p>Surprise: We’re stopping in Albany for a full hour! Maybe to connect with a train from Boston?</p>

<p>So now I can show you my train from the outside:</p>

<p><img src="https://blinry.org/coast-to-coast/4c972b5b3511e6e4.jpg" alt="It has red-white-blue stripes, and looks relatively big." title="It has red-white-blue stripes, and looks relatively big."></p>

<p>The connecting train was delayed, so now we also are! 🙃</p>

<p>Making our way out of Albany, now heading westwards!</p>

<p><img src="https://blinry.org/coast-to-coast/805e5d7729b3fc91.jpg" alt="High buildings behind trees." title="High buildings behind trees."></p>

<p>I just realized that the entire trip from coast to coast will be 5000 kilometers long.</p>

<p>That’s a lot of kilometers.</p>

<p>You could also say: Five megameters!</p>

<p>(3150 miles, for you folks with non-SI units :P)</p>

<p>It’ll take three nights overall. I’m sooo hyped! 😆</p>

<p>When I told <a href="https://chaos.social/@piko">@piko</a> about this trip, they reminded me of the time I got that book about hypersonic trains from the library, a hypothetical train system designed for 7200 km/h:</p>

<p><a href="https://chaos.social/@blinry/111495370153260987">https:// chaos.social/@blinry/111495370 153260987</a></p>

<p>Good morning!</p>

<p>Oof, didn’t sleep much… the AC in the train is set ridiculously cold, the ride is very shaky, and there’s nothing to lean your head against…</p>

<p>But we made it through a brief section of Pennsylvania and through Ohio, and are about to cross over to Indiana!</p>

<p><img src="https://blinry.org/coast-to-coast/3eeabc2be18fdf0b.jpg" alt="A golden field in the morning sun." title="A golden field in the morning sun."></p>

<p>Hello Chicago! :)</p>

<p><img src="https://blinry.org/coast-to-coast/f6e15906a07d2ef4.jpg" alt="Me, a red-bearded white human, in front of Chicago's Union Station." title="Me, a red-bearded white human, in front of Chicago's Union Station."></p>

<p>Most important thing to do during the stopover: Get more vegetables for the second stretch of the train trip!</p>

<p>But not these. One is not a vegetable, and I’m not sure if I can prepare the other one?</p>

<p><img src="https://blinry.org/coast-to-coast/14bcf8fb2731b7e3.jpg" alt="Red bananas." title="Red bananas."></p>

<p><img src="https://blinry.org/coast-to-coast/e842ee0b7e02b971.jpg" alt="&quot;Banana flowers&quot;, look like corn cobs in their husks." title="&quot;Banana flowers&quot;, look like corn cobs in their husks."></p>

<p>Visited Chicago’s Climate Action Museum, and one of its central messages is: “Stay home!”</p>

<p>As someone who loves to travel, who takes so much joy from immersing myself in places, cultures, landscapes I’m not used to, this leaves me confused and conflicted… :/</p>

<p><img src="https://blinry.org/coast-to-coast/12150191988ece5b.jpg" alt="Introductory sign, explaining that we're the first generation to feel the impact of climate change, and the last one that can do something about it." title="Introductory sign, explaining that we're the first generation to feel the impact of climate change, and the last one that can do something about it."></p>

<p><img src="https://blinry.org/coast-to-coast/1dbc28d23e006075.jpg" alt="Sign about letting go of barriers to action." title="Sign about letting go of barriers to action."></p>

<p><img src="https://blinry.org/coast-to-coast/bb378f508c52d809.jpg" alt="Introductory sign, explaining that we're the first generation to feel the impact of climate change, and the last one that can do something about it." title="Introductory sign, explaining that we're the first generation to feel the impact of climate change, and the last one that can do something about it."></p>

<p>I’ve gone though a similar process when I started eating a vegan diet.</p>

<p>The last question it came down to was “Is my personal enjoyment of the taste of animal products more important than the suffering of those animals?” – and my personal answer was “no”. Especially when it’s as easy as it is these days to replace those products.</p>

<p>Maybe I could substitute travel experiences, as well? 🤔</p>

<p>Anyhow. Here’s the route for the second part of my trip!</p>

<p>Seat61 calls the California Zephyr “one of the great train rides of the world”.</p>

<p>It’ll take 51 hours, over the course of two nights, and, eventually, bring me to <a href="https://mastodon.social/@bangbangcon">@bangbangcon</a> !</p>

<p><img src="https://blinry.org/coast-to-coast/7db37350f1f04254.png" alt="A stylized poster for the California Zephyr train from Chicago to Oakland." title="A stylized poster for the California Zephyr train from Chicago to Oakland."></p>

<p>Here we go!! Boarding!</p>

<p><img src="https://blinry.org/coast-to-coast/3a15e373bf059f93.jpg" alt="A two-storey metal train. People are walking towards it." title="A two-storey metal train. People are walking towards it."></p>

<p>I’m treating myself to a “roomette” with an actual fold-down bed on this train.</p>

<p>Here’s my little home for the next 2.5 days!</p>

<p><img src="https://blinry.org/coast-to-coast/bf33374cbdeb827a.jpg" alt="I sit in a &quot;roomette&quot; onboard the train and look very happy!" title="I sit in a &quot;roomette&quot; onboard the train and look very happy!"></p>

<p>Leaving Chicago! 👋</p>

<p><img src="https://blinry.org/coast-to-coast/486332aea7d6230c.jpg" alt="House by a lake outside a train window." title="House by a lake outside a train window."></p>

<p>Here’s a tour of all the features of my li’l roomette!</p>

<p>There’s two seats like this, opposite of each other. Using the handlebar below it, you can recline the back a bit, like in an overnight bus.</p>

<p><img src="https://blinry.org/coast-to-coast/01dfc56c07ebab26.jpg" alt="One of the seats. Grey and smooth." title="One of the seats. Grey and smooth."></p>

<p><img src="https://blinry.org/coast-to-coast/6fef781a4957bffa.jpg" alt="The two of them, opposite each other." title="The two of them, opposite each other."></p>

<p>A plastic table between the seats fold out. It seems to have an integrated chess board! :O</p>

<p><img src="https://blinry.org/coast-to-coast/7bf32cecd6a13091.jpg" alt="Said table. Also gray." title="Said table. Also gray."></p>

<p>Control panels next to the head rests allow you to set the air temperature, and the volume of the announcements.</p>

<p>Sadly, the other “music channels” are silent. You can also set the ceiling lights to bright, dim, and off. Very handy.</p>

<p>I also have been granted the power to summon a train attendant!  Haven’t used it yet.</p>

<p><img src="https://blinry.org/coast-to-coast/22f90363a91a9366.jpg" alt="Trmperature control panel." title="Trmperature control panel."></p>

<p><img src="https://blinry.org/coast-to-coast/953fe7b6229f56fb.jpg" alt="Volume control panel." title="Volume control panel."></p>

<p>Speaking of lights, there are at least 5, which can be controlled individually, for a very customizable lighting experience!</p>

<p><img src="https://blinry.org/coast-to-coast/ffc15e733fcc48fd.jpg" alt="Lights in the ceiling." title="Lights in the ceiling."></p>

<p>There’s a trash can, a mirror, coat hangers, and tiny cute corners for tiny cute towels! 😆</p>

<p><img src="https://blinry.org/coast-to-coast/4afafefa5b95fa19.jpg" alt="Said things in multiple unremarkable photos. Oh, in the mirror photo I make a heart with one of my hands!" title="Said things in multiple unremarkable photos. Oh, in the mirror photo I make a heart with one of my hands!"></p>

<p><img src="https://blinry.org/coast-to-coast/eaa6bb3fbe05bedf.jpg" alt=""></p>

<p><img src="https://blinry.org/coast-to-coast/10cd9b966ba2f467.jpg" alt=""></p>

<p><img src="https://blinry.org/coast-to-coast/c0c163bb2489d477.jpg" alt=""></p>

<p>I didn’t notice this at first, but under the ceiling, there’s a ready-made fold-down bed, with straps to make sure you don’t fall out!</p>

<p>And the lower seats also can be collapsed flat, and there’s an extra mattress to put on top; so this room can be used by two people!</p>

<p><img src="https://blinry.org/coast-to-coast/572e2eb5d4581b4a.jpg" alt="Upper bed, folded away." title="Upper bed, folded away."></p>

<p><img src="https://blinry.org/coast-to-coast/bad506e5f411ce4b.jpg" alt="Upper bed, folded out." title="Upper bed, folded out."></p>

<p><img src="https://blinry.org/coast-to-coast/d23a3f983259f1cc.jpg" alt="Lowe bed, collapsed flat." title="Lowe bed, collapsed flat."></p>

<p>~ End of the room tour ~</p>

<p>I feel a bit like in a space ship! The room is compact and functional, but I really like it.</p>

<p>What I don’t have here is a toilet – there are shared toilets and showers in the hallway. I’ll report! And I also have the rest of the train to explore!</p>

<p>We have just crossed the Mississippippi River, which marks the state border between Illinois and Iowa! The train went extra slow, not sure whether for safety reasons or for photo op reasons! :P</p>

<p><img src="https://blinry.org/coast-to-coast/a2dde352a947d4f2.jpg" alt="A wide river." title="A wide river."></p>

<p>Slept really well! Woke up in Denver, Colorado, where we’re making an hour-long refueling stop!</p>

<p><img src="https://blinry.org/coast-to-coast/291f150e2621eace.jpg" alt="A bridge over a river in the morning." title="A bridge over a river in the morning."></p>

<p>Took a shower in one of the little shower cabins!</p>

<p><img src="https://blinry.org/coast-to-coast/44fe0070678a06ed.jpg" alt="A plastic chaning room with towels." title="A plastic chaning room with towels."></p>

<p><img src="https://blinry.org/coast-to-coast/ebfd5794b001d0b6.jpg" alt="A plastic shower." title="A plastic shower."></p>

<p>And decided to go on a little walk. You can already see the Rocky Mountains from here!!</p>

<p>Let’s hope that I don’t miss my train! 😅</p>

<p><img src="https://blinry.org/coast-to-coast/a2c6fc5c6026ae9f.jpg" alt="All photos show the station and street scenes in Denver, and mountains in the distance." title="All photos show the station and street scenes in Denver, and mountains in the distance."></p>

<p><img src="https://blinry.org/coast-to-coast/55e5b7c816adc7a1.jpg" alt=""></p>

<p><img src="https://blinry.org/coast-to-coast/af922746d1cd269f.jpg" alt=""></p>

<p><img src="https://blinry.org/coast-to-coast/ab65fc738488695e.jpg" alt=""></p>

<p>Headed into the mountains now!</p>

<p><img src="https://blinry.org/coast-to-coast/fbeaf581d2713fd4.jpg" alt="Mountains on the horizon." title="Mountains on the horizon."></p>

<p>Impressive to see how quickly the Great Plains gave way to this very different kind of landscape! :O</p>

<p><img src="https://blinry.org/coast-to-coast/b7e264d02fd8cade.jpg" alt="Both pics show forest-covered mountains." title="Both pics show forest-covered mountains."></p>

<p><img src="https://blinry.org/coast-to-coast/479b836be3053cf4.jpg" alt=""></p>

<p>We’ve passed the Moffat Tunnel, and are now snaking our way alongside some very pretty creeks!</p>

<p><img src="https://blinry.org/coast-to-coast/6708c348c2c1d555.jpg" alt="Rivers though mountains." title="Rivers though mountains."></p>

<p><img src="https://blinry.org/coast-to-coast/9acf7c53655ed5c6.jpg" alt=""></p>

<p>We made another li’l stop earlier, so I can show you my train from the outside! :)</p>

<p><img src="https://blinry.org/coast-to-coast/c6651fa9d567717a.jpg" alt="I'm pointing at a big Amtrak train. Mountains in the distance." title="I'm pointing at a big Amtrak train. Mountains in the distance."></p>

<p>And here’s more of the interior! Coach section, panorama lounge, and diner!</p>

<p>The diner car is where passengers with sleeper tickets get three free meals per day! And they do have vegan options! \o/</p>

<p><img src="https://blinry.org/coast-to-coast/25658fd44d6a39e7.jpg" alt="Pics of the sections." title="Pics of the sections."></p>

<p><img src="https://blinry.org/coast-to-coast/d5d203d4f7f7c050.jpg" alt=""></p>

<p><img src="https://blinry.org/coast-to-coast/81185f6896c76e55.jpg" alt=""></p>

<p>It’s interesting to meet different kinds of people on the train:</p>

<p>Yesterday, I had dinner with a polite nurse and her mum yesterday, and we were joined by a French guy, who kept drinking wine and talking about his many great trips and friends… :/ Not the kind of conversation I’m into…</p>

<p>For lunch today, I had better luck: I was seated with a retired genetic researcher, whom I inmediately liked! He has a refreshingly positive perspective on scientific progress.</p>

<p>The landscape has changed yet again, and is now much more cliff-y and sandy.</p>

<p>That’s Mt. Garfield on the last picture!</p>

<p><img src="https://blinry.org/coast-to-coast/5c88f4897ded10d0.jpg" alt="All photos show dry cliffs, sometimes with rivers." title="All photos show dry cliffs, sometimes with rivers."></p>

<p><img src="https://blinry.org/coast-to-coast/a93da5c9c6613fbb.jpg" alt=""></p>

<p><img src="https://blinry.org/coast-to-coast/13b673dc0a498449.jpg" alt=""></p>

<p><img src="https://blinry.org/coast-to-coast/cf74b02159e833ff.jpg" alt=""></p>

<p>We’ve stopped at Grand Junction, on the edge of the Colorado Plateau, a “high desert”. It’s <em>hot</em> all of a sudden, 90 °F/32 °C!</p>

<p><img src="https://blinry.org/coast-to-coast/bc52584bc99da79c.jpg" alt="Our train is stopped in front of a big wooden house at the platform." title="Our train is stopped in front of a big wooden house at the platform."></p>

<p>Tumbleweed!!</p>

<p><img src="https://blinry.org/coast-to-coast/cbcfeb3973bd8654.jpg" alt="Tumbleweed in a dry landscape." title="Tumbleweed in a dry landscape."></p>

<p>And we encountered the California Zephyr going in the other direction! :)</p>

<p><img src="https://blinry.org/coast-to-coast/757fe60e551b9077.jpg" alt="A train like ours in a desert-y landscape." title="A train like ours in a desert-y landscape."></p>

<p>Seing plenty of things for the first time on this trip! Amish people. A forest fire. Eagles that aren’t in captivity. A desert!</p>

<p>Pictures of the Colorado Plateau! It’s vast, much more than I had imagined.</p>

<p><img src="https://blinry.org/coast-to-coast/6a245b95a96fea58.jpg" alt="All pictures show sandy, rocky landscape without much plants." title="All pictures show sandy, rocky landscape without much plants."></p>

<p><img src="https://blinry.org/coast-to-coast/a38a34c529feb45e.jpg" alt=""></p>

<p><img src="https://blinry.org/coast-to-coast/4ae85a9d8f27c53c.jpg" alt=""></p>

<p><img src="https://blinry.org/coast-to-coast/69b1b4327f940ef2.jpg" alt=""></p>

<p>What’s going on at Green River? Wrong answers only!</p>

<p><img src="https://blinry.org/coast-to-coast/04c1ab60356278be.png" alt="Next to a town, in a satellite image, there are multiple big dark circles visible. Some have patterns in them." title="Next to a town, in a satellite image, there are multiple big dark circles visible. Some have patterns in them."></p>

<p>By the way, I lied to you! I’m not going to San Francisco directly. This train ends in Emeryville, close to Oakland.</p>

<p>I’ll then make my way South, to Santa Cruz, where <a href="https://mastodon.social/@bangbangcon">@bangbangcon</a> takes place! (You can still get pay-what-you-want online tickets!)</p>

<p>It’s only after !!Con that I’ll explore San Francisco for a few days. It’s my first time there! Any recommendations for what to see/eat/do there?</p>

<p>Also, does anyone of you live in San Francisco? I’ll be around from Monday to Friday – if someone would enjoy (and have time) to meet up and do a little city exploration together, that could be really fun!</p>

<p>Feel free to drop me a DM! 📬</p>

<p>Whattt! Just when I thought it couldn’t get any better! 🌈</p>

<p><img src="https://blinry.org/coast-to-coast/e3920f38b50e6adc.jpg" alt="A rainbow over rocky cliffs, overseeing dry land. The shadow of the train falls onto the landscape." title="A rainbow over rocky cliffs, overseeing dry land. The shadow of the train falls onto the landscape."></p>

<p>(That was yesterday in Utah.)</p>

<p>At this point, we’ve made it through Nevada, and just entered California! Trees are starting to appear again!</p>

<p><img src="https://blinry.org/coast-to-coast/5b0306079ab51995.jpg" alt="A river through hills with trees." title="A river through hills with trees."></p>

<p>First palm trees as we’re descending Sierra Nevada!</p>

<p><img src="https://blinry.org/coast-to-coast/388a76a9559af9c2.jpg" alt="A palm tree among other trees, in a relatively flat landscape." title="A palm tree among other trees, in a relatively flat landscape."></p>

<p>Almost there!!</p>

<p><img src="https://blinry.org/coast-to-coast/0b01fc4183a36934.jpg" alt="Sun over a big body of water." title="Sun over a big body of water."></p>

<p>And there it is: The skyline of San Francisco!</p>

<p><img src="https://blinry.org/coast-to-coast/5873cd9749067559.jpg" alt="A skyline of skycrapers in the distance." title="A skyline of skycrapers in the distance."></p>

<p>And the Cloudy Gate Bridge! ✨</p>

<p><img src="https://blinry.org/coast-to-coast/373f2955263a7f24.jpg" alt="A long bridge in the clouds." title="A long bridge in the clouds."></p>

<p>This is the final stop of my train.</p>

<p>I made it!! What an adventure!</p>

<p><img src="https://blinry.org/coast-to-coast/066ba162313480da.jpg" alt="I'm smiling, at a sign labelled &quot;Emeryville, San Francisco Connection&quot;." title="I'm smiling, at a sign labelled &quot;Emeryville, San Francisco Connection&quot;."></p>

<p>Feeling a bit sad as I watch my train drive away… :/ It has been my home for the past days!</p>

<p><img src="https://blinry.org/coast-to-coast/1279793be50aa2ac.jpg" alt="An Amtrak train leaving a train station." title="An Amtrak train leaving a train station."></p>

<p>This was such a humbling, thrilling and inspiring trip! Thanks for following along, it was a huge joy to share it with y’all!</p>

<p>Might post some more reflections over the next days, but for now:</p>

<p>~ End of thread ~</p>



            <!--
                     - if @item[:tags]
        hr
        - if @item[:toot]
          h2 Join the discussion!
          p
            | You can add your comment
            a<> href=@item[:toot] target="_blank" in the Fediverse!
            | Alternatively, drop me a mail at <span>m<span title="ihate@spam.com</span>">a</span>il</span>&#64;blinry<i title="</i>mailto:">.</i>org. Also, you can support me
            a<> href="https://www.patreon.com/blinry" target="_blank" on Patreon
            | or subscribe to
            a< href="https://tinyletter.com/blinry" target="_blank" my newsletter
            | !
          iframe class="toot" id="toot" src="https://toot-embedder.blinry.org/#url=#{@item[:toot]}"
          script iFrameResize({ log: true }, '#toot')
        - else
          h2 Comments?
          p
            | Send a message to
            a<> href="https://chaos.social/@blinry" target="_blank" @blinry@chaos.social
            | or drop me a mail at <span>m<span title="ihate@spam.com</span>">a</span>il</span>&#64;blinry<i title="</i>mailto:">.</i>org. Also, you can support me
            a<> href="https://www.patreon.com/blinry" target="_blank" on Patreon
            | or subscribe to
            a< href="https://tinyletter.com/blinry" target="_blank" my newsletter
            | !
        /h2 Similar projects
        /== box(things[0..2])
            -->

            
                <hr>
                
                    <h2>Join the discussion!</h2>
                    <p>
                        You can add your comment
                        <a href="https://chaos.social/@blinry/112990469485308286" target="_blank">in the Fediverse</a>!
                        Alternatively, drop me a mail at <span>m<span title="ihate@spam.com</span>">a</span>il</span>@blinry<i title="</i>mailto:">.</i>org.
                        Also, you can support me
                        <a href="https://www.patreon.com/blinry" target="_blank">on Patreon</a> or
                        subscribe to <a href="https://tinyletter.com/blinry" target="_blank">my newsletter</a>
                    </p>
                    
                    
                
            
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Writes and Write-Nots (171 pts)]]></title>
            <link>https://paulgraham.com/writes.html</link>
            <guid>41960914</guid>
            <pubDate>Sun, 27 Oct 2024 08:59:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://paulgraham.com/writes.html">https://paulgraham.com/writes.html</a>, See on <a href="https://news.ycombinator.com/item?id=41960914">Hacker News</a></p>
<div id="readability-page-1" class="page"><div width="435"><tbody><tr><td><img src="https://s.turbifycdn.com/aah/paulgraham/writes-and-write-nots-1.gif" width="190" height="18" alt="Writes and Write-Nots"><span size="2" face="verdana">October 2024<p>I'm usually reluctant to make predictions about technology, but I
feel fairly confident about this one: in a couple decades there
won't be many people who can write.</p><p>One of the strangest things you learn if you're a writer is how
many people have trouble writing. Doctors know how many people have
a mole they're worried about; people who are good at setting up
computers know how many people aren't; writers know how many people
need help writing.</p><p>The reason so many people have trouble writing is that it's
fundamentally difficult. To write well you have to think clearly,
and thinking clearly is hard.</p><p>And yet writing pervades many jobs, and the more prestigious the
job, the more writing it tends to require.</p><p>These two powerful opposing forces, the pervasive expectation of
writing and the irreducible difficulty of doing it, create enormous
pressure. This is why eminent professors often turn out to have
resorted to plagiarism. The most striking thing to me about these
cases is the pettiness of the thefts. The stuff they steal is usually
the most mundane boilerplate — the sort of thing that anyone who
was even halfway decent at writing could turn out with no effort
at all. Which means they're not even halfway decent at writing.</p><p>Till recently there was no convenient escape valve for the pressure
created by these opposing forces. You could pay someone to write
for you, like JFK, or plagiarize, like MLK, but if you couldn't buy
or steal words, you had to write them yourself. And as a result
nearly everyone who was expected to write had to learn how.</p><p>Not anymore. AI has blown this world open. Almost all pressure to
write has dissipated. You can have AI do it for you, both in school
and at work.</p><p>The result will be a world divided into writes and write-nots.
There will still be some people who can write. Some of us like it.
But the middle ground between those who are good at writing and
those who can't write at all will disappear. Instead of good writers,
ok writers, and people who can't write, there will just be good
writers and people who can't write.</p><p>Is that so bad? Isn't it common for skills to disappear when
technology makes them obsolete? There aren't many blacksmiths left,
and it doesn't seem to be a problem.</p><p>Yes, it's bad. The reason is something I mentioned earlier: writing
is thinking. In fact there's a kind of thinking that can only be
done by writing. You can't make this point better than Leslie Lamport
did:
</p><blockquote>
  If you're thinking without writing, you only think you're thinking.
</blockquote>
So a world divided into writes and write-nots is more dangerous
than it sounds. It will be a world of thinks and think-nots. I know
which half I want to be in, and I bet you do too.<p>This situation is not unprecedented. In preindustrial times most
people's jobs made them strong. Now if you want to be strong, you
work out. So there are still strong people, but only those who
choose to be.</p><p>It will be the same with writing. There will still be smart people,
but only those who choose to be.</p><span color="888888"><b>Thanks</b> to Jessica Livingston, Ben Miller, 
and Robert Morris for reading drafts of this.</span></span></td></tr></tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Open Source on its own is no alternative to Big Tech (162 pts)]]></title>
            <link>https://berthub.eu/articles/posts/open-source-by-itself-is-no-alternative-for-big-tech/</link>
            <guid>41960442</guid>
            <pubDate>Sun, 27 Oct 2024 07:12:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://berthub.eu/articles/posts/open-source-by-itself-is-no-alternative-for-big-tech/">https://berthub.eu/articles/posts/open-source-by-itself-is-no-alternative-for-big-tech/</a>, See on <a href="https://news.ycombinator.com/item?id=41960442">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
  

  
  

  <div>
  <blockquote>
<p>This is the English version <a href="https://berthub.eu/articles/posts/open-source-zelf-geen-alternatief-voor-big-tech/">of this Dutch piece</a>.</p>
</blockquote>
<p>Now that we’re increasingly concerned about the dominance of ‘big tech’, Open Source is often mentioned as an alternative, especially <a href="https://berthub.eu/articles/posts/de-totale-keuze-voor-microsoft/">now that it seems our governments are carrying
out a Total Migration to Microsoft</a>.</p>
<p>In Dutch we say you can’t compare apples and pears, but that’s not entirely true. Both are so-called <em>handfruit</em>, one a bit harder, the other a bit softer.</p>
<p>But comparing Open Source to big tech is like comparing an oven to a restaurant. Big tech provides well-supported <em>services</em>, and nowadays runs everything for you in their own data centers. Meanwhile, Open Source is a collection of
free/libre software that someone still needs to work on to turn it into (for example) a “workplace as a service”.</p>
<p>As a comparison, your oven by itself is also not yet a restaurant.</p>
<center>
<p><img loading="lazy" src="https://berthub.eu/articles/denisse-diego-F56Q0yn-uxo-unsplash.jpg"></p>
<p>Photo by <a href="https://unsplash.com/@den_diego?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Denisse Diego</a> on <a href="https://unsplash.com/photos/red-and-green-apple-fruit-F56Q0yn-uxo?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Unsplash</a></p>
</center>
  
<p>This is not just linguistic nitpicking, it really makes a difference. A while ago, there was an idealistic faction in the European Parliament, and they decided they had had enough of big tech, and conducted an experiment with
<a href="https://nl.wikipedia.org/wiki/Nextcloud">Nextcloud</a> as a replacement. And it wasn’t successful.</p>
<p>The regular IT environment in the European Parliament is managed by whole teams of professionals, it comes with training, and is supported by Microsoft partners and ultimately by Microsoft itself. There are also large amounts of computing power available to make things work well.</p>
<p>Many Open Source experiments meanwhile are operated by an enthusiastic hobbyist with borrowed equipment. Rolled out without training and without professional support, by someone who likely did this for the first time, it’s no wonder things often don’t work out well.</p>
<p>After the under-supported experiment, the faction was disappointed and concluded that Nextcloud was no good. And that was also their lived experience. “Let’s not do that again!”</p>
<p>(By the way, all new software without accompanying support &amp; guidance is doomed to fail. And if that software comes from a dominant player, you’ll just have to deal with that by the way.)</p>
<h2 id="how-hard-could-it-be">How hard could it be?</h2>
<p>We often end up talking about Open Source as an alternative because there’s hardly anything else left outside of big tech. And that combined with “free” makes it a very attractive thing to ponder.</p>
<p>Yet, there’s another company that offers cloud storage, file management, spreadsheets, word processing, email, and everything in between with their own software: Apple. Why don’t large corporations and governments choose this
option then? Because Apple has <a href="https://www.apple.com/in/numbers/">Numbers</a>, <a href="https://support.apple.com/keynote">Keynote</a>, <a href="https://www.apple.com/in/pages/">Pages</a>, <a href="https://www.icloud.com/mail/">Mail</a> and much more. Yet, Apple is
<a href="https://www.apple.com/r/store/government/">not actively targeting the large enterprise/government market</a>.</p>
<p>Making the best software is far from being the most important factor in <em>sales</em> to large corporations and governments. It’s about being able to tick all the boxes around it. And, don’t get me wrong, support, training, migration, <em>hosting</em>, and similar aspects are also extremely important.</p>
<p>But the result is that it takes an unbelievable amount of extra effort to sell your software to large corporations and governments, <strong>even if you’ve already built the software</strong>. <em>So</em> much effort that even Apple doesn’t try, despite there being fortunes to be made in that market.</p>
<blockquote>
<p>Steve Jobs <a href="https://www.zdnet.com/article/what-steve-jobs-hates-about-the-enterprise/">once said</a>: “What I love about the consumer market, that I always hated about the enterprise market, is that we come up with a product, we try to tell everybody about it, and every person votes for themselves. (…) It’s really simple. With the enterprise market, it’s not so simple. <strong>The people that use the products don’t decide for themselves, and the people that make those decisions sometimes are confused</strong>.”. In the <a href="https://www.youtube.com/watch?v=MLvvzktuVY8">video</a> you can hear lots of laughter at the last sentence, since it contains a painful truth.</p>
</blockquote>
<h2 id="and-what-about-open-source">And what about open source?</h2>
<p>We spend billions per year on big tech software and the services surrounding it. At the same time, we somehow expect that free Open Source <em>software</em> can somehow compete with it. And naturally, it doesn’t work that
way, leading to disappointments and making it easy to claim that “Open Source doesn’t work”.</p>
<p>Now, it is true that you can build beautifully supported services <em>with</em> open source. And those services can indeed be much cheaper than if you had to pay for the software license as well.</p>
<p>But if we want to give alternatives to “big tech” a chance, then we’ll have to invest comparable amounts of effort and significant money as well. This isn’t just about support, but also paying the authors of the software so they can  continue to create nice things (do contact them first to ask how).</p>
<h2 id="conclusion">Conclusion</h2>
<p>Ultimately, it’s unavoidable that we’ll want to try something different alongside the totally dominant platforms. But don’t make the mistake of calling <em>just</em> Open Source an alternative – users need not only software, but also
mountains of services, and those still have to be found somewhere, and that’s won’t be cheaper or simpler just because the software is free.</p>
<ul>
<li>the author of this piece <a href="https://berthub.eu/software.html">writes lots of open source</a> and even <a href="https://berthub.eu/articles/posts/nluug-award/">won an award for doing so</a>.</li>
</ul>

<p>Experimenting is useful, but know that Open Source is the underdog, and there are many people waiting for an opportunity to enthusiastically declare that it has failed. This is due to commercial or conservative considerations -
<a href="https://berthub.eu/articles/posts/publicspaces-digitale-autonomie-7-juni-2024/">let’s stick with what we have</a>, then we don’t need to change anything!</p>
<p>So, only start if at least the following conditions are met:</p>
<ul>
<li>Achievable scope - very carefully determine how much you can do with the time, budget and people you have.</li>
<li>Change management - people participating in the trial must be able to come forward early. Set up a test environment months in advance where everyone can try out whether everything works. Listen carefully to all concerns
raised. Verify that the experiment can overcome the designated challenges. Because, yes, there is still an old label printer that really needs to keep working. And there are also visually impaired people in your organization who
need high-contrast support and screen readers.</li>
<li>Training sessions - the start button is now here, sending mail works like this, and this is how you search in your files. Can’t do enough of this.</li>
<li>If (virtual) servers are needed, arrange for an abundance. Because at the first complaint that the new thing is slow, you’ve lost. The fact that software licenses are free doesn’t mean that there should be skimping on the rest.</li>
<li>Ensure your helpdesk is staffed with top talent during extended office hours. People who can really answer questions and also have the ability to get problems resolved</li>
<li>Don’t start if there isn’t a team ready to resolve problems!</li>
</ul>
<p>If you think the above is a bit over the top, this is the standard for every successful IT change. Open-source-based projects are no different.</p>
<p>Finally, also pay close attention to who comes to help with all this. They must really be enthusiastic about it and not secretly prefer to just roll out “normal” office software.</p>

</div>

  



</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Moonshine, the new state of the art for speech to text (158 pts)]]></title>
            <link>https://petewarden.com/2024/10/21/introducing-moonshine-the-new-state-of-the-art-for-speech-to-text/</link>
            <guid>41960085</guid>
            <pubDate>Sun, 27 Oct 2024 05:33:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://petewarden.com/2024/10/21/introducing-moonshine-the-new-state-of-the-art-for-speech-to-text/">https://petewarden.com/2024/10/21/introducing-moonshine-the-new-state-of-the-art-for-speech-to-text/</a>, See on <a href="https://news.ycombinator.com/item?id=41960085">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-7943">

	<!-- .entry-header -->

	<!-- #entry-meta -->

	<div>
						
<p>Can you imagine using a keyboard where it took a key press two seconds to show up on screen? That’s the typical latency for most voice interfaces, so it’s no wonder they’ve failed to catch on for most people. Today we’re open sourcing <a href="https://github.com/usefulsensors/moonshine">Moonshine</a>, a new speech to text model that returns results faster and more efficiently than the current state of the art, OpenAI’s Whisper, while matching or exceeding its accuracy. The <a href="https://arxiv.org/abs/2410.15608">paper </a>has the full details, but the key improvements are an architecture that offers an overall 1.7x speed boost compared to Whisper, and a flexibly-sized input window. This variable length input is very important, since Whisper always works with 30 second chunks of audio, so even if you only have a few seconds of speech you have to zero-pad the input and process much more data than you need. These two improvements mean we’re five times faster than Whisper on ten second audio clips!</p>



<p>To understand what that means in practice, you can check out our <a href="https://petewarden.com/2024/10/11/introducing-torre-a-new-way-to-translate/">Torre translator</a>. The speed of Moonshine means we can offer almost instant translations as people are talking, making for a conversation that’s much more natural than existing solutions.</p>



<figure><div>
<p><iframe title="Instant Translation with Torre" width="550" height="309" src="https://www.youtube.com/embed/p2ZFIAGo0VQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe></p>
</div></figure>



<p>Even better, the low resource demands of Moonshine allow us to run everything locally on the device, without any network connection, safeguarding privacy and letting us run anywhere in the world, instantly.</p>



<p>We founded Useful to <a href="https://petewarden.com/2022/11/11/machines-of-loving-understanding/">help machines understand us better</a>, and we’re proud to share this new step forward in speech to text, since voice interfaces are a vital part of that mission. Moonshine doesn’t just help us with products like Torre, its unique design makes it possible to fit full automatic speech recognition on true embedded hardware. We’ve found the biggest obstacle to running ASR on microcontrollers and DSPs hasn’t been the processing power, since accelerators help with that, but RAM limits. Even the smallest Whisper model requires at least 30MB of RAM, since modern transformers create large dynamic activation layers which can’t be stored in flash or other read-only memory. Because Moonshine’s requirements scale with the size of the input window, we are on target to transcribe full sentences a few seconds long in 8MB of RAM or less.</p>



<p>I can’t wait to see what people are able to build with these new models, especially on resource-constrained platforms like the Raspberry Pi, where running full speech to text has been challenging. Please do <a href="mailto:pete@usefulsensors.com">get in touch</a> if you’ve built something neat, we’d love to hear from you!</p>
					</div><!-- .post-content -->

</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Typeset: An HTML pre-proces­sor for web ty­pog­ra­phy (120 pts)]]></title>
            <link>https://typeset.lllllllllllllllll.com/</link>
            <guid>41960010</guid>
            <pubDate>Sun, 27 Oct 2024 05:12:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://typeset.lllllllllllllllll.com/">https://typeset.lllllllllllllllll.com/</a>, See on <a href="https://news.ycombinator.com/item?id=41960010">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
  <content>
    
    <p>An <span>HTML</span> pre-proces­sor for web ty­pog­ra­phy. Typeset pro­vides ty­po­graphic fea­tures used tra­di­tion­ally in ﬁne print­ing which re­main un­avail­able to browser lay­out en­gines. Typeset’s pro­cess­ing brings the fol­low­ing to your web­pages: </p>


<ul>
    <li>Real hang­ing punc­tu­a­tion</li>
    <li>Optical mar­gin align­ment</li>
    <li>Small caps de­tec­tion</li>
    <li>Soft hy­phen in­ser­tion</li>
    <li>Punctuation sub­sti­tu­tion</li>
</ul>

    <p><a href="https://github.com/davidmerfield/typeset">Get the code on GitHub &nbsp;&nbsp;→</a></p>
    <h2>How?</h2>
                <p>Typeset does not re­quire any client-side JavaScript and uses less than a kilo­byte of <span>CSS</span>. Processed <span>HTML</span> &amp; <span>CSS</span> <a href="https://typeset.lllllllllllllllll.com/ie5.png">works in Internet Explorer 5</a> and <a href="https://typeset.lllllllllllllllll.com/css.png">with­out any <span>CSS</span></a>. Typeset can be used man­u­ally or as a plu­gin for <a href="https://github.com/mobinni/grunt-typeset">grunt</a> and <a href="https://github.com/lucasconstantino/gulp-typeset">gulp</a>.</p>


    <pre><code>npm install typeset</code></pre>
    
    

    <h2>Usage</h2>
    <pre><code><span>var</span> typeset = <span>require</span>(<span>'typeset'</span>);
<span>var</span> html = <span>'&lt;p&gt;"Hello," said the world!&lt;/p&gt;'</span>;

html = typeset(html);</code></pre>
<p>Then tweak <a href="https://typeset.lllllllllllllllll.com/typeset.css">Typeset.css</a> to match the met­rics of your font and in­clude it on your page.</p>


<h2>Options</h2>
<p>Typeset ac­cepts an op­tional sec­ond ar­gu­ment con­tain­ing con­ﬁg­u­ra­tion:</p>
<ul>
  <li><b>ig­nore</b> <em>&lt;string&gt;</em><br> Typeset will not process el­e­ments match­ing this <span>CSS</span> se­lec­tor. Example: <pre><code>typeset(html, { ignore: <span>'.skip'</span> });</code></pre>
</li>
  <li><b>only</b> <em>&lt;string&gt;</em><br> Typeset will only process el­e­ments match­ing this <span>CSS</span> se­lec­tor. Example:  <pre><code>typeset(html, { only: <span>'.typeset'</span> });</code></pre></li>
  <li><b>dis­able</b> <em>&lt;array&gt;</em><br> List of Typeset fea­tures to dis­able. The fol­low­ing fea­tures may be dis­abled:
<ul>
<li><code>quotes</code></li>
<li><code>hyphenate</code></li>
<li><code>ligatures</code></li>
<li><code>smallCaps</code></li>
<li><code>punctuation</code></li>
<li><code>hangingPunctuation</code></li>
<li><code>spaces</code></li>
</ul>
<p>Example: </p><pre><code>typeset(html, { disable: [<span>'hyphenate'</span>] });</code></pre>
</li>
</ul>
<h2 id="cli-usage"><span>CLI</span></h2>
<pre><code>npm install -g typeset</code></pre>

<p>Compiles a ﬁle to std­out:</p>
<pre><code>typeset-js input.html</code></pre>
<p>Pass an out­put ﬁle as a sec­ond ar­gu­ment:</p>
<pre><code>typeset-js input.html output.html</code></pre>
<p>Use the <code>--ignore</code> op­tion to ig­nore spe­ciﬁc <span>CSS</span> se­lec­tors:</p>
<pre><code>typeset-js input.html output.html --ignore <span>".skip"</span></code></pre>
<h2>About</h2>
<p>This pro­ject started as a col­lec­tion of li­braries I gath­ered for <a href="https://blot.im/">Blot</a>. Typeset still runs there in pro­duc­tion. This was made pos­si­ble by the work of <a href="https://github.com/bramstein">Bram Stein</a> and <a href="http://leancrew.com/all-this/2010/11/smart-quotes-in-javascript/">Dr. Drang</a>. This page is set in the <a href="https://en.wikipedia.org/wiki/IBM_Plex">Plex</a> fam­ily by <a href="https://www.mikeabbink.com/">Mike Abbink</a>. Thanks to <a href="https://mbtype.com/bio.html">Matthew Butterick</a> and <a href="https://chriscoyier.net/">Chris Coyier</a> for their help and feed­back.</p>
<h2 id="license">License</h2>
<p>This soft­ware is ded­i­cated to the pub­lic do­main and li­censed un­der <a href="https://github.com/davidmerfield/Typeset/blob/master/LICENSE"><span>CC0</span></a>.</p>


    
    </content>
  </section></div>]]></description>
        </item>
    </channel>
</rss>